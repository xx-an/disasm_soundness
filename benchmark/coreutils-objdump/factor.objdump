


Disassembly of section .init:

0000000000001d88 <_init>:
1d88:	48 83 ec 08          	sub    rsp,0x8
1d8c:	48 8b 05 55 12 21 00 	mov    rax,QWORD PTR [rip+0x211255]        # 212fe8 <__gmon_start__>
1d93:	48 85 c0             	test   rax,rax
1d96:	74 02                	je     1d9a <_init+0x12>
1d98:	ff d0                	call   rax
1d9a:	48 83 c4 08          	add    rsp,0x8
1d9e:	c3                   	ret

Disassembly of section .plt:

0000000000001da0 <.plt>:
1da0:	ff 35 7a 0f 21 00    	push   QWORD PTR [rip+0x210f7a]        # 212d20 <_GLOBAL_OFFSET_TABLE_+0x8>
1da6:	ff 25 7c 0f 21 00    	jmp    QWORD PTR [rip+0x210f7c]        # 212d28 <_GLOBAL_OFFSET_TABLE_+0x10>
1dac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001db0 <__uflow@plt>:
1db0:	ff 25 7a 0f 21 00    	jmp    QWORD PTR [rip+0x210f7a]        # 212d30 <__uflow@GLIBC_2.2.5>
1db6:	68 00 00 00 00       	push   0x0
1dbb:	e9 e0 ff ff ff       	jmp    1da0 <.plt>

0000000000001dc0 <__gmpz_scan1@plt>:
1dc0:	ff 25 72 0f 21 00    	jmp    QWORD PTR [rip+0x210f72]        # 212d38 <__gmpz_scan1>
1dc6:	68 01 00 00 00       	push   0x1
1dcb:	e9 d0 ff ff ff       	jmp    1da0 <.plt>

0000000000001dd0 <free@plt>:
1dd0:	ff 25 6a 0f 21 00    	jmp    QWORD PTR [rip+0x210f6a]        # 212d40 <free@GLIBC_2.2.5>
1dd6:	68 02 00 00 00       	push   0x2
1ddb:	e9 c0 ff ff ff       	jmp    1da0 <.plt>

0000000000001de0 <abort@plt>:
1de0:	ff 25 62 0f 21 00    	jmp    QWORD PTR [rip+0x210f62]        # 212d48 <abort@GLIBC_2.2.5>
1de6:	68 03 00 00 00       	push   0x3
1deb:	e9 b0 ff ff ff       	jmp    1da0 <.plt>

0000000000001df0 <__errno_location@plt>:
1df0:	ff 25 5a 0f 21 00    	jmp    QWORD PTR [rip+0x210f5a]        # 212d50 <__errno_location@GLIBC_2.2.5>
1df6:	68 04 00 00 00       	push   0x4
1dfb:	e9 a0 ff ff ff       	jmp    1da0 <.plt>

0000000000001e00 <strncmp@plt>:
1e00:	ff 25 52 0f 21 00    	jmp    QWORD PTR [rip+0x210f52]        # 212d58 <strncmp@GLIBC_2.2.5>
1e06:	68 05 00 00 00       	push   0x5
1e0b:	e9 90 ff ff ff       	jmp    1da0 <.plt>

0000000000001e10 <_exit@plt>:
1e10:	ff 25 4a 0f 21 00    	jmp    QWORD PTR [rip+0x210f4a]        # 212d60 <_exit@GLIBC_2.2.5>
1e16:	68 06 00 00 00       	push   0x6
1e1b:	e9 80 ff ff ff       	jmp    1da0 <.plt>

0000000000001e20 <__fpending@plt>:
1e20:	ff 25 42 0f 21 00    	jmp    QWORD PTR [rip+0x210f42]        # 212d68 <__fpending@GLIBC_2.2.5>
1e26:	68 07 00 00 00       	push   0x7
1e2b:	e9 70 ff ff ff       	jmp    1da0 <.plt>

0000000000001e30 <iconv@plt>:
1e30:	ff 25 3a 0f 21 00    	jmp    QWORD PTR [rip+0x210f3a]        # 212d70 <iconv@GLIBC_2.2.5>
1e36:	68 08 00 00 00       	push   0x8
1e3b:	e9 60 ff ff ff       	jmp    1da0 <.plt>

0000000000001e40 <__gmpz_sub_ui@plt>:
1e40:	ff 25 32 0f 21 00    	jmp    QWORD PTR [rip+0x210f32]        # 212d78 <__gmpz_sub_ui>
1e46:	68 09 00 00 00       	push   0x9
1e4b:	e9 50 ff ff ff       	jmp    1da0 <.plt>

0000000000001e50 <__gmpz_clears@plt>:
1e50:	ff 25 2a 0f 21 00    	jmp    QWORD PTR [rip+0x210f2a]        # 212d80 <__gmpz_clears>
1e56:	68 0a 00 00 00       	push   0xa
1e5b:	e9 40 ff ff ff       	jmp    1da0 <.plt>

0000000000001e60 <isatty@plt>:
1e60:	ff 25 22 0f 21 00    	jmp    QWORD PTR [rip+0x210f22]        # 212d88 <isatty@GLIBC_2.2.5>
1e66:	68 0b 00 00 00       	push   0xb
1e6b:	e9 30 ff ff ff       	jmp    1da0 <.plt>

0000000000001e70 <__gmpz_set_ui@plt>:
1e70:	ff 25 1a 0f 21 00    	jmp    QWORD PTR [rip+0x210f1a]        # 212d90 <__gmpz_set_ui>
1e76:	68 0c 00 00 00       	push   0xc
1e7b:	e9 20 ff ff ff       	jmp    1da0 <.plt>

0000000000001e80 <iswcntrl@plt>:
1e80:	ff 25 12 0f 21 00    	jmp    QWORD PTR [rip+0x210f12]        # 212d98 <iswcntrl@GLIBC_2.2.5>
1e86:	68 0d 00 00 00       	push   0xd
1e8b:	e9 10 ff ff ff       	jmp    1da0 <.plt>

0000000000001e90 <write@plt>:
1e90:	ff 25 0a 0f 21 00    	jmp    QWORD PTR [rip+0x210f0a]        # 212da0 <write@GLIBC_2.2.5>
1e96:	68 0e 00 00 00       	push   0xe
1e9b:	e9 00 ff ff ff       	jmp    1da0 <.plt>

0000000000001ea0 <__gmpz_sub@plt>:
1ea0:	ff 25 02 0f 21 00    	jmp    QWORD PTR [rip+0x210f02]        # 212da8 <__gmpz_sub>
1ea6:	68 0f 00 00 00       	push   0xf
1eab:	e9 f0 fe ff ff       	jmp    1da0 <.plt>

0000000000001eb0 <textdomain@plt>:
1eb0:	ff 25 fa 0e 21 00    	jmp    QWORD PTR [rip+0x210efa]        # 212db0 <textdomain@GLIBC_2.2.5>
1eb6:	68 10 00 00 00       	push   0x10
1ebb:	e9 e0 fe ff ff       	jmp    1da0 <.plt>

0000000000001ec0 <fclose@plt>:
1ec0:	ff 25 f2 0e 21 00    	jmp    QWORD PTR [rip+0x210ef2]        # 212db8 <fclose@GLIBC_2.2.5>
1ec6:	68 11 00 00 00       	push   0x11
1ecb:	e9 d0 fe ff ff       	jmp    1da0 <.plt>

0000000000001ed0 <bindtextdomain@plt>:
1ed0:	ff 25 ea 0e 21 00    	jmp    QWORD PTR [rip+0x210eea]        # 212dc0 <bindtextdomain@GLIBC_2.2.5>
1ed6:	68 12 00 00 00       	push   0x12
1edb:	e9 c0 fe ff ff       	jmp    1da0 <.plt>

0000000000001ee0 <dcgettext@plt>:
1ee0:	ff 25 e2 0e 21 00    	jmp    QWORD PTR [rip+0x210ee2]        # 212dc8 <dcgettext@GLIBC_2.2.5>
1ee6:	68 13 00 00 00       	push   0x13
1eeb:	e9 b0 fe ff ff       	jmp    1da0 <.plt>

0000000000001ef0 <__ctype_get_mb_cur_max@plt>:
1ef0:	ff 25 da 0e 21 00    	jmp    QWORD PTR [rip+0x210eda]        # 212dd0 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
1ef6:	68 14 00 00 00       	push   0x14
1efb:	e9 a0 fe ff ff       	jmp    1da0 <.plt>

0000000000001f00 <strlen@plt>:
1f00:	ff 25 d2 0e 21 00    	jmp    QWORD PTR [rip+0x210ed2]        # 212dd8 <strlen@GLIBC_2.2.5>
1f06:	68 15 00 00 00       	push   0x15
1f0b:	e9 90 fe ff ff       	jmp    1da0 <.plt>

0000000000001f10 <__gmpz_powm@plt>:
1f10:	ff 25 ca 0e 21 00    	jmp    QWORD PTR [rip+0x210eca]        # 212de0 <__gmpz_powm>
1f16:	68 16 00 00 00       	push   0x16
1f1b:	e9 80 fe ff ff       	jmp    1da0 <.plt>

0000000000001f20 <__stack_chk_fail@plt>:
1f20:	ff 25 c2 0e 21 00    	jmp    QWORD PTR [rip+0x210ec2]        # 212de8 <__stack_chk_fail@GLIBC_2.4>
1f26:	68 17 00 00 00       	push   0x17
1f2b:	e9 70 fe ff ff       	jmp    1da0 <.plt>

0000000000001f30 <getopt_long@plt>:
1f30:	ff 25 ba 0e 21 00    	jmp    QWORD PTR [rip+0x210eba]        # 212df0 <getopt_long@GLIBC_2.2.5>
1f36:	68 18 00 00 00       	push   0x18
1f3b:	e9 60 fe ff ff       	jmp    1da0 <.plt>

0000000000001f40 <__gmpz_divexact@plt>:
1f40:	ff 25 b2 0e 21 00    	jmp    QWORD PTR [rip+0x210eb2]        # 212df8 <__gmpz_divexact>
1f46:	68 19 00 00 00       	push   0x19
1f4b:	e9 50 fe ff ff       	jmp    1da0 <.plt>

0000000000001f50 <mbrtowc@plt>:
1f50:	ff 25 aa 0e 21 00    	jmp    QWORD PTR [rip+0x210eaa]        # 212e00 <mbrtowc@GLIBC_2.2.5>
1f56:	68 1a 00 00 00       	push   0x1a
1f5b:	e9 40 fe ff ff       	jmp    1da0 <.plt>

0000000000001f60 <__gmpz_inits@plt>:
1f60:	ff 25 a2 0e 21 00    	jmp    QWORD PTR [rip+0x210ea2]        # 212e08 <__gmpz_inits>
1f66:	68 1b 00 00 00       	push   0x1b
1f6b:	e9 30 fe ff ff       	jmp    1da0 <.plt>

0000000000001f70 <strchr@plt>:
1f70:	ff 25 9a 0e 21 00    	jmp    QWORD PTR [rip+0x210e9a]        # 212e10 <strchr@GLIBC_2.2.5>
1f76:	68 1c 00 00 00       	push   0x1c
1f7b:	e9 20 fe ff ff       	jmp    1da0 <.plt>

0000000000001f80 <__gmpz_set@plt>:
1f80:	ff 25 92 0e 21 00    	jmp    QWORD PTR [rip+0x210e92]        # 212e18 <__gmpz_set>
1f86:	68 1d 00 00 00       	push   0x1d
1f8b:	e9 10 fe ff ff       	jmp    1da0 <.plt>

0000000000001f90 <__gmpz_mul@plt>:
1f90:	ff 25 8a 0e 21 00    	jmp    QWORD PTR [rip+0x210e8a]        # 212e20 <__gmpz_mul>
1f96:	68 1e 00 00 00       	push   0x1e
1f9b:	e9 00 fe ff ff       	jmp    1da0 <.plt>

0000000000001fa0 <__overflow@plt>:
1fa0:	ff 25 82 0e 21 00    	jmp    QWORD PTR [rip+0x210e82]        # 212e28 <__overflow@GLIBC_2.2.5>
1fa6:	68 1f 00 00 00       	push   0x1f
1fab:	e9 f0 fd ff ff       	jmp    1da0 <.plt>

0000000000001fb0 <strrchr@plt>:
1fb0:	ff 25 7a 0e 21 00    	jmp    QWORD PTR [rip+0x210e7a]        # 212e30 <strrchr@GLIBC_2.2.5>
1fb6:	68 20 00 00 00       	push   0x20
1fbb:	e9 e0 fd ff ff       	jmp    1da0 <.plt>

0000000000001fc0 <__gmpz_tdiv_q_ui@plt>:
1fc0:	ff 25 72 0e 21 00    	jmp    QWORD PTR [rip+0x210e72]        # 212e38 <__gmpz_tdiv_q_ui>
1fc6:	68 21 00 00 00       	push   0x21
1fcb:	e9 d0 fd ff ff       	jmp    1da0 <.plt>

0000000000001fd0 <lseek@plt>:
1fd0:	ff 25 6a 0e 21 00    	jmp    QWORD PTR [rip+0x210e6a]        # 212e40 <lseek@GLIBC_2.2.5>
1fd6:	68 22 00 00 00       	push   0x22
1fdb:	e9 c0 fd ff ff       	jmp    1da0 <.plt>

0000000000001fe0 <__assert_fail@plt>:
1fe0:	ff 25 62 0e 21 00    	jmp    QWORD PTR [rip+0x210e62]        # 212e48 <__assert_fail@GLIBC_2.2.5>
1fe6:	68 23 00 00 00       	push   0x23
1feb:	e9 b0 fd ff ff       	jmp    1da0 <.plt>

0000000000001ff0 <memset@plt>:
1ff0:	ff 25 5a 0e 21 00    	jmp    QWORD PTR [rip+0x210e5a]        # 212e50 <memset@GLIBC_2.2.5>
1ff6:	68 24 00 00 00       	push   0x24
1ffb:	e9 a0 fd ff ff       	jmp    1da0 <.plt>

0000000000002000 <strnlen@plt>:
2000:	ff 25 52 0e 21 00    	jmp    QWORD PTR [rip+0x210e52]        # 212e58 <strnlen@GLIBC_2.2.5>
2006:	68 25 00 00 00       	push   0x25
200b:	e9 90 fd ff ff       	jmp    1da0 <.plt>

0000000000002010 <__gmpz_fdiv_q_2exp@plt>:
2010:	ff 25 4a 0e 21 00    	jmp    QWORD PTR [rip+0x210e4a]        # 212e60 <__gmpz_fdiv_q_2exp>
2016:	68 26 00 00 00       	push   0x26
201b:	e9 80 fd ff ff       	jmp    1da0 <.plt>

0000000000002020 <memchr@plt>:
2020:	ff 25 42 0e 21 00    	jmp    QWORD PTR [rip+0x210e42]        # 212e68 <memchr@GLIBC_2.2.5>
2026:	68 27 00 00 00       	push   0x27
202b:	e9 70 fd ff ff       	jmp    1da0 <.plt>

0000000000002030 <memcmp@plt>:
2030:	ff 25 3a 0e 21 00    	jmp    QWORD PTR [rip+0x210e3a]        # 212e70 <memcmp@GLIBC_2.2.5>
2036:	68 28 00 00 00       	push   0x28
203b:	e9 60 fd ff ff       	jmp    1da0 <.plt>

0000000000002040 <__gmp_printf@plt>:
2040:	ff 25 32 0e 21 00    	jmp    QWORD PTR [rip+0x210e32]        # 212e78 <__gmp_printf>
2046:	68 29 00 00 00       	push   0x29
204b:	e9 50 fd ff ff       	jmp    1da0 <.plt>

0000000000002050 <fputs_unlocked@plt>:
2050:	ff 25 2a 0e 21 00    	jmp    QWORD PTR [rip+0x210e2a]        # 212e80 <fputs_unlocked@GLIBC_2.2.5>
2056:	68 2a 00 00 00       	push   0x2a
205b:	e9 40 fd ff ff       	jmp    1da0 <.plt>

0000000000002060 <calloc@plt>:
2060:	ff 25 22 0e 21 00    	jmp    QWORD PTR [rip+0x210e22]        # 212e88 <calloc@GLIBC_2.2.5>
2066:	68 2b 00 00 00       	push   0x2b
206b:	e9 30 fd ff ff       	jmp    1da0 <.plt>

0000000000002070 <strcmp@plt>:
2070:	ff 25 1a 0e 21 00    	jmp    QWORD PTR [rip+0x210e1a]        # 212e90 <strcmp@GLIBC_2.2.5>
2076:	68 2c 00 00 00       	push   0x2c
207b:	e9 20 fd ff ff       	jmp    1da0 <.plt>

0000000000002080 <__gmpz_init_set_si@plt>:
2080:	ff 25 12 0e 21 00    	jmp    QWORD PTR [rip+0x210e12]        # 212e98 <__gmpz_init_set_si>
2086:	68 2d 00 00 00       	push   0x2d
208b:	e9 10 fd ff ff       	jmp    1da0 <.plt>

0000000000002090 <__gmpz_add_ui@plt>:
2090:	ff 25 0a 0e 21 00    	jmp    QWORD PTR [rip+0x210e0a]        # 212ea0 <__gmpz_add_ui>
2096:	68 2e 00 00 00       	push   0x2e
209b:	e9 00 fd ff ff       	jmp    1da0 <.plt>

00000000000020a0 <memcpy@plt>:
20a0:	ff 25 02 0e 21 00    	jmp    QWORD PTR [rip+0x210e02]        # 212ea8 <memcpy@GLIBC_2.14>
20a6:	68 2f 00 00 00       	push   0x2f
20ab:	e9 f0 fc ff ff       	jmp    1da0 <.plt>

00000000000020b0 <fileno@plt>:
20b0:	ff 25 fa 0d 21 00    	jmp    QWORD PTR [rip+0x210dfa]        # 212eb0 <fileno@GLIBC_2.2.5>
20b6:	68 30 00 00 00       	push   0x30
20bb:	e9 e0 fc ff ff       	jmp    1da0 <.plt>

00000000000020c0 <__gmpz_divisible_ui_p@plt>:
20c0:	ff 25 f2 0d 21 00    	jmp    QWORD PTR [rip+0x210df2]        # 212eb8 <__gmpz_divisible_ui_p>
20c6:	68 31 00 00 00       	push   0x31
20cb:	e9 d0 fc ff ff       	jmp    1da0 <.plt>

00000000000020d0 <wcwidth@plt>:
20d0:	ff 25 ea 0d 21 00    	jmp    QWORD PTR [rip+0x210dea]        # 212ec0 <wcwidth@GLIBC_2.2.5>
20d6:	68 32 00 00 00       	push   0x32
20db:	e9 c0 fc ff ff       	jmp    1da0 <.plt>

00000000000020e0 <iswalnum@plt>:
20e0:	ff 25 e2 0d 21 00    	jmp    QWORD PTR [rip+0x210de2]        # 212ec8 <iswalnum@GLIBC_2.2.5>
20e6:	68 33 00 00 00       	push   0x33
20eb:	e9 b0 fc ff ff       	jmp    1da0 <.plt>

00000000000020f0 <malloc@plt>:
20f0:	ff 25 da 0d 21 00    	jmp    QWORD PTR [rip+0x210dda]        # 212ed0 <malloc@GLIBC_2.2.5>
20f6:	68 34 00 00 00       	push   0x34
20fb:	e9 a0 fc ff ff       	jmp    1da0 <.plt>

0000000000002100 <fflush@plt>:
2100:	ff 25 d2 0d 21 00    	jmp    QWORD PTR [rip+0x210dd2]        # 212ed8 <fflush@GLIBC_2.2.5>
2106:	68 35 00 00 00       	push   0x35
210b:	e9 90 fc ff ff       	jmp    1da0 <.plt>

0000000000002110 <__gmpz_clear@plt>:
2110:	ff 25 ca 0d 21 00    	jmp    QWORD PTR [rip+0x210dca]        # 212ee0 <__gmpz_clear>
2116:	68 36 00 00 00       	push   0x36
211b:	e9 80 fc ff ff       	jmp    1da0 <.plt>

0000000000002120 <nl_langinfo@plt>:
2120:	ff 25 c2 0d 21 00    	jmp    QWORD PTR [rip+0x210dc2]        # 212ee8 <nl_langinfo@GLIBC_2.2.5>
2126:	68 37 00 00 00       	push   0x37
212b:	e9 70 fc ff ff       	jmp    1da0 <.plt>

0000000000002130 <__gmpz_tdiv_q_2exp@plt>:
2130:	ff 25 ba 0d 21 00    	jmp    QWORD PTR [rip+0x210dba]        # 212ef0 <__gmpz_tdiv_q_2exp>
2136:	68 38 00 00 00       	push   0x38
213b:	e9 60 fc ff ff       	jmp    1da0 <.plt>

0000000000002140 <__freading@plt>:
2140:	ff 25 b2 0d 21 00    	jmp    QWORD PTR [rip+0x210db2]        # 212ef8 <__freading@GLIBC_2.2.5>
2146:	68 39 00 00 00       	push   0x39
214b:	e9 50 fc ff ff       	jmp    1da0 <.plt>

0000000000002150 <realloc@plt>:
2150:	ff 25 aa 0d 21 00    	jmp    QWORD PTR [rip+0x210daa]        # 212f00 <realloc@GLIBC_2.2.5>
2156:	68 3a 00 00 00       	push   0x3a
215b:	e9 40 fc ff ff       	jmp    1da0 <.plt>

0000000000002160 <setlocale@plt>:
2160:	ff 25 a2 0d 21 00    	jmp    QWORD PTR [rip+0x210da2]        # 212f08 <setlocale@GLIBC_2.2.5>
2166:	68 3b 00 00 00       	push   0x3b
216b:	e9 30 fc ff ff       	jmp    1da0 <.plt>

0000000000002170 <__printf_chk@plt>:
2170:	ff 25 9a 0d 21 00    	jmp    QWORD PTR [rip+0x210d9a]        # 212f10 <__printf_chk@GLIBC_2.3.4>
2176:	68 3c 00 00 00       	push   0x3c
217b:	e9 20 fc ff ff       	jmp    1da0 <.plt>

0000000000002180 <iconv_close@plt>:
2180:	ff 25 92 0d 21 00    	jmp    QWORD PTR [rip+0x210d92]        # 212f18 <iconv_close@GLIBC_2.2.5>
2186:	68 3d 00 00 00       	push   0x3d
218b:	e9 10 fc ff ff       	jmp    1da0 <.plt>

0000000000002190 <__gmpz_mod@plt>:
2190:	ff 25 8a 0d 21 00    	jmp    QWORD PTR [rip+0x210d8a]        # 212f20 <__gmpz_mod>
2196:	68 3e 00 00 00       	push   0x3e
219b:	e9 00 fc ff ff       	jmp    1da0 <.plt>

00000000000021a0 <iswspace@plt>:
21a0:	ff 25 82 0d 21 00    	jmp    QWORD PTR [rip+0x210d82]        # 212f28 <iswspace@GLIBC_2.2.5>
21a6:	68 3f 00 00 00       	push   0x3f
21ab:	e9 f0 fb ff ff       	jmp    1da0 <.plt>

00000000000021b0 <__gmpz_init_set_ui@plt>:
21b0:	ff 25 7a 0d 21 00    	jmp    QWORD PTR [rip+0x210d7a]        # 212f30 <__gmpz_init_set_ui>
21b6:	68 40 00 00 00       	push   0x40
21bb:	e9 e0 fb ff ff       	jmp    1da0 <.plt>

00000000000021c0 <__gmpz_cmp@plt>:
21c0:	ff 25 72 0d 21 00    	jmp    QWORD PTR [rip+0x210d72]        # 212f38 <__gmpz_cmp>
21c6:	68 41 00 00 00       	push   0x41
21cb:	e9 d0 fb ff ff       	jmp    1da0 <.plt>

00000000000021d0 <memmove@plt>:
21d0:	ff 25 6a 0d 21 00    	jmp    QWORD PTR [rip+0x210d6a]        # 212f40 <memmove@GLIBC_2.2.5>
21d6:	68 42 00 00 00       	push   0x42
21db:	e9 c0 fb ff ff       	jmp    1da0 <.plt>

00000000000021e0 <error@plt>:
21e0:	ff 25 62 0d 21 00    	jmp    QWORD PTR [rip+0x210d62]        # 212f48 <error@GLIBC_2.2.5>
21e6:	68 43 00 00 00       	push   0x43
21eb:	e9 b0 fb ff ff       	jmp    1da0 <.plt>

00000000000021f0 <fseeko@plt>:
21f0:	ff 25 5a 0d 21 00    	jmp    QWORD PTR [rip+0x210d5a]        # 212f50 <fseeko@GLIBC_2.2.5>
21f6:	68 44 00 00 00       	push   0x44
21fb:	e9 a0 fb ff ff       	jmp    1da0 <.plt>

0000000000002200 <__gmpz_gcd@plt>:
2200:	ff 25 52 0d 21 00    	jmp    QWORD PTR [rip+0x210d52]        # 212f58 <__gmpz_gcd>
2206:	68 45 00 00 00       	push   0x45
220b:	e9 90 fb ff ff       	jmp    1da0 <.plt>

0000000000002210 <__gmpz_init_set_str@plt>:
2210:	ff 25 4a 0d 21 00    	jmp    QWORD PTR [rip+0x210d4a]        # 212f60 <__gmpz_init_set_str>
2216:	68 46 00 00 00       	push   0x46
221b:	e9 80 fb ff ff       	jmp    1da0 <.plt>

0000000000002220 <__cxa_atexit@plt>:
2220:	ff 25 42 0d 21 00    	jmp    QWORD PTR [rip+0x210d42]        # 212f68 <__cxa_atexit@GLIBC_2.2.5>
2226:	68 47 00 00 00       	push   0x47
222b:	e9 70 fb ff ff       	jmp    1da0 <.plt>

0000000000002230 <exit@plt>:
2230:	ff 25 3a 0d 21 00    	jmp    QWORD PTR [rip+0x210d3a]        # 212f70 <exit@GLIBC_2.2.5>
2236:	68 48 00 00 00       	push   0x48
223b:	e9 60 fb ff ff       	jmp    1da0 <.plt>

0000000000002240 <fwrite@plt>:
2240:	ff 25 32 0d 21 00    	jmp    QWORD PTR [rip+0x210d32]        # 212f78 <fwrite@GLIBC_2.2.5>
2246:	68 49 00 00 00       	push   0x49
224b:	e9 50 fb ff ff       	jmp    1da0 <.plt>

0000000000002250 <__fprintf_chk@plt>:
2250:	ff 25 2a 0d 21 00    	jmp    QWORD PTR [rip+0x210d2a]        # 212f80 <__fprintf_chk@GLIBC_2.3.4>
2256:	68 4a 00 00 00       	push   0x4a
225b:	e9 40 fb ff ff       	jmp    1da0 <.plt>

0000000000002260 <__gmpz_cmp_ui@plt>:
2260:	ff 25 22 0d 21 00    	jmp    QWORD PTR [rip+0x210d22]        # 212f88 <__gmpz_cmp_ui>
2266:	68 4b 00 00 00       	push   0x4b
226b:	e9 30 fb ff ff       	jmp    1da0 <.plt>

0000000000002270 <__gmpz_init@plt>:
2270:	ff 25 1a 0d 21 00    	jmp    QWORD PTR [rip+0x210d1a]        # 212f90 <__gmpz_init>
2276:	68 4c 00 00 00       	push   0x4c
227b:	e9 20 fb ff ff       	jmp    1da0 <.plt>

0000000000002280 <fflush_unlocked@plt>:
2280:	ff 25 12 0d 21 00    	jmp    QWORD PTR [rip+0x210d12]        # 212f98 <fflush_unlocked@GLIBC_2.2.5>
2286:	68 4d 00 00 00       	push   0x4d
228b:	e9 10 fb ff ff       	jmp    1da0 <.plt>

0000000000002290 <__gmpz_powm_ui@plt>:
2290:	ff 25 0a 0d 21 00    	jmp    QWORD PTR [rip+0x210d0a]        # 212fa0 <__gmpz_powm_ui>
2296:	68 4e 00 00 00       	push   0x4e
229b:	e9 00 fb ff ff       	jmp    1da0 <.plt>

00000000000022a0 <strdup@plt>:
22a0:	ff 25 02 0d 21 00    	jmp    QWORD PTR [rip+0x210d02]        # 212fa8 <strdup@GLIBC_2.2.5>
22a6:	68 4f 00 00 00       	push   0x4f
22ab:	e9 f0 fa ff ff       	jmp    1da0 <.plt>

00000000000022b0 <mbsinit@plt>:
22b0:	ff 25 fa 0c 21 00    	jmp    QWORD PTR [rip+0x210cfa]        # 212fb0 <mbsinit@GLIBC_2.2.5>
22b6:	68 50 00 00 00       	push   0x50
22bb:	e9 e0 fa ff ff       	jmp    1da0 <.plt>

00000000000022c0 <iswprint@plt>:
22c0:	ff 25 f2 0c 21 00    	jmp    QWORD PTR [rip+0x210cf2]        # 212fb8 <iswprint@GLIBC_2.2.5>
22c6:	68 51 00 00 00       	push   0x51
22cb:	e9 d0 fa ff ff       	jmp    1da0 <.plt>

00000000000022d0 <__ctype_b_loc@plt>:
22d0:	ff 25 ea 0c 21 00    	jmp    QWORD PTR [rip+0x210cea]        # 212fc0 <__ctype_b_loc@GLIBC_2.3>
22d6:	68 52 00 00 00       	push   0x52
22db:	e9 c0 fa ff ff       	jmp    1da0 <.plt>

00000000000022e0 <iconv_open@plt>:
22e0:	ff 25 e2 0c 21 00    	jmp    QWORD PTR [rip+0x210ce2]        # 212fc8 <iconv_open@GLIBC_2.2.5>
22e6:	68 53 00 00 00       	push   0x53
22eb:	e9 b0 fa ff ff       	jmp    1da0 <.plt>

00000000000022f0 <__sprintf_chk@plt>:
22f0:	ff 25 da 0c 21 00    	jmp    QWORD PTR [rip+0x210cda]        # 212fd0 <__sprintf_chk@GLIBC_2.3.4>
22f6:	68 54 00 00 00       	push   0x54
22fb:	e9 a0 fa ff ff       	jmp    1da0 <.plt>

Disassembly of section .plt.got:

0000000000002300 <__cxa_finalize@plt>:
2300:	ff 25 f2 0c 21 00    	jmp    QWORD PTR [rip+0x210cf2]        # 212ff8 <__cxa_finalize@GLIBC_2.2.5>
2306:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000002310 <mbuiter_multi_next.part.0>:
2310:	48 8d 0d b9 dd 00 00 	lea    rcx,[rip+0xddb9]        # 100d0 <__PRETTY_FUNCTION__.5159>
2317:	48 8d 35 3a dd 00 00 	lea    rsi,[rip+0xdd3a]        # 10058 <primes_diff+0x2f8>
231e:	48 8d 3d 53 dd 00 00 	lea    rdi,[rip+0xdd53]        # 10078 <primes_diff+0x318>
2325:	48 83 ec 08          	sub    rsp,0x8
2329:	ba b3 00 00 00       	mov    edx,0xb3
232e:	e8 ad fc ff ff       	call   1fe0 <__assert_fail@plt>

0000000000002333 <mbiter_multi_next.part.0>:
2333:	48 8d 0d b6 e2 00 00 	lea    rcx,[rip+0xe2b6]        # 105f0 <__PRETTY_FUNCTION__.5134>
233a:	48 8d 35 87 e2 00 00 	lea    rsi,[rip+0xe287]        # 105c8 <quoting_style_vals+0x28>
2341:	48 8d 3d 30 dd 00 00 	lea    rdi,[rip+0xdd30]        # 10078 <primes_diff+0x318>
2348:	48 83 ec 08          	sub    rsp,0x8
234c:	ba aa 00 00 00       	mov    edx,0xaa
2351:	e8 8a fc ff ff       	call   1fe0 <__assert_fail@plt>

0000000000002356 <mbuiter_multi_next.part.0>:
2356:	48 8d 0d 63 e6 00 00 	lea    rcx,[rip+0xe663]        # 109c0 <__PRETTY_FUNCTION__.5056>
235d:	48 8d 35 f4 dc 00 00 	lea    rsi,[rip+0xdcf4]        # 10058 <primes_diff+0x2f8>
2364:	48 8d 3d 0d dd 00 00 	lea    rdi,[rip+0xdd0d]        # 10078 <primes_diff+0x318>
236b:	48 83 ec 08          	sub    rsp,0x8
236f:	ba b3 00 00 00       	mov    edx,0xb3
2374:	e8 67 fc ff ff       	call   1fe0 <__assert_fail@plt>
2379:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002380 <main>:
2380:	41 56                	push   r14
2382:	41 55                	push   r13
2384:	41 54                	push   r12
2386:	55                   	push   rbp
2387:	89 fd                	mov    ebp,edi
2389:	53                   	push   rbx
238a:	48 89 f3             	mov    rbx,rsi
238d:	48 83 ec 20          	sub    rsp,0x20
2391:	48 8b 3e             	mov    rdi,QWORD PTR [rsi]
2394:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
239b:	00 00
239d:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
23a2:	31 c0                	xor    eax,eax
23a4:	e8 07 3e 00 00       	call   61b0 <set_program_name>
23a9:	48 8d 35 ab e2 00 00 	lea    rsi,[rip+0xe2ab]        # 1065b <__PRETTY_FUNCTION__.5134+0x6b>
23b0:	bf 06 00 00 00       	mov    edi,0x6
23b5:	e8 a6 fd ff ff       	call   2160 <setlocale@plt>
23ba:	48 8d 35 07 ab 00 00 	lea    rsi,[rip+0xab07]        # cec8 <_IO_stdin_used+0x488>
23c1:	48 8d 3d d7 aa 00 00 	lea    rdi,[rip+0xaad7]        # ce9f <_IO_stdin_used+0x45f>
23c8:	e8 03 fb ff ff       	call   1ed0 <bindtextdomain@plt>
23cd:	48 8d 3d cb aa 00 00 	lea    rdi,[rip+0xaacb]        # ce9f <_IO_stdin_used+0x45f>
23d4:	e8 d7 fa ff ff       	call   1eb0 <textdomain@plt>
23d9:	48 83 3d 0f 0d 21 00 	cmp    QWORD PTR [rip+0x210d0f],0x0        # 2130f0 <lbuf>
23e0:	00
23e1:	0f 84 d5 00 00 00    	je     24bc <main+0x13c>
23e7:	48 8d 3d 42 3c 00 00 	lea    rdi,[rip+0x3c42]        # 6030 <close_stdout>
23ee:	4c 8d 25 4b 06 21 00 	lea    r12,[rip+0x21064b]        # 212a40 <long_options>
23f5:	e8 26 a6 00 00       	call   ca20 <atexit>
23fa:	48 8d 3d 2f 0c 00 00 	lea    rdi,[rip+0xc2f]        # 3030 <lbuf_flush>
2401:	e8 1a a6 00 00       	call   ca20 <atexit>
2406:	48 8d 15 4e e2 00 00 	lea    rdx,[rip+0xe24e]        # 1065b <__PRETTY_FUNCTION__.5134+0x6b>
240d:	45 31 c0             	xor    r8d,r8d
2410:	4c 89 e1             	mov    rcx,r12
2413:	48 89 de             	mov    rsi,rbx
2416:	89 ef                	mov    edi,ebp
2418:	e8 13 fb ff ff       	call   1f30 <getopt_long@plt>
241d:	83 f8 ff             	cmp    eax,0xffffffff
2420:	0f 84 b3 00 00 00    	je     24d9 <main+0x159>
2426:	3d 7e ff ff ff       	cmp    eax,0xffffff7e
242b:	0f 84 45 01 00 00    	je     2576 <main+0x1f6>
2431:	3d 80 00 00 00       	cmp    eax,0x80
2436:	74 78                	je     24b0 <main+0x130>
2438:	3d 7d ff ff ff       	cmp    eax,0xffffff7d
243d:	74 11                	je     2450 <main+0xd0>
243f:	bf 01 00 00 00       	mov    edi,0x1
2444:	e8 77 38 00 00       	call   5cc0 <usage>
2449:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2450:	48 8d 35 89 aa 00 00 	lea    rsi,[rip+0xaa89]        # cee0 <_IO_stdin_used+0x4a0>
2457:	48 8d 3d 90 aa 00 00 	lea    rdi,[rip+0xaa90]        # ceee <_IO_stdin_used+0x4ae>
245e:	e8 ed 47 00 00       	call   6c50 <proper_name_utf8>
2463:	48 8d 35 91 aa 00 00 	lea    rsi,[rip+0xaa91]        # cefb <_IO_stdin_used+0x4bb>
246a:	48 8d 3d 9d aa 00 00 	lea    rdi,[rip+0xaa9d]        # cf0e <_IO_stdin_used+0x4ce>
2471:	48 89 c3             	mov    rbx,rax
2474:	e8 d7 47 00 00       	call   6c50 <proper_name_utf8>
2479:	48 8b 3d 28 0c 21 00 	mov    rdi,QWORD PTR [rip+0x210c28]        # 2130a8 <stdout@@GLIBC_2.2.5>
2480:	48 8b 0d 91 0b 21 00 	mov    rcx,QWORD PTR [rip+0x210b91]        # 213018 <Version>
2487:	4c 8d 05 92 aa 00 00 	lea    r8,[rip+0xaa92]        # cf20 <_IO_stdin_used+0x4e0>
248e:	6a 00                	push   0x0
2490:	48 8d 15 04 aa 00 00 	lea    rdx,[rip+0xaa04]        # ce9b <_IO_stdin_used+0x45b>
2497:	53                   	push   rbx
2498:	48 8d 35 7f a9 00 00 	lea    rsi,[rip+0xa97f]        # ce1e <_IO_stdin_used+0x3de>
249f:	49 89 c1             	mov    r9,rax
24a2:	31 c0                	xor    eax,eax
24a4:	e8 d7 76 00 00       	call   9b80 <version_etc>
24a9:	31 ff                	xor    edi,edi
24ab:	e8 80 fd ff ff       	call   2230 <exit@plt>
24b0:	c6 05 49 0c 21 00 01 	mov    BYTE PTR [rip+0x210c49],0x1        # 213100 <dev_debug>
24b7:	e9 4a ff ff ff       	jmp    2406 <main+0x86>
24bc:	bf 00 04 00 00       	mov    edi,0x400
24c1:	e8 1a 78 00 00       	call   9ce0 <xmalloc>
24c6:	48 89 05 23 0c 21 00 	mov    QWORD PTR [rip+0x210c23],rax        # 2130f0 <lbuf>
24cd:	48 89 05 24 0c 21 00 	mov    QWORD PTR [rip+0x210c24],rax        # 2130f8 <lbuf+0x8>
24d4:	e9 0e ff ff ff       	jmp    23e7 <main+0x67>
24d9:	4c 63 25 d8 0b 21 00 	movsxd r12,DWORD PTR [rip+0x210bd8]        # 2130b8 <optind@@GLIBC_2.2.5>
24e0:	41 39 ec             	cmp    r12d,ebp
24e3:	7d 46                	jge    252b <main+0x1ab>
24e5:	41 bd 01 00 00 00    	mov    r13d,0x1
24eb:	45 31 f6             	xor    r14d,r14d
24ee:	4a 8b 3c e3          	mov    rdi,QWORD PTR [rbx+r12*8]
24f2:	e8 39 34 00 00       	call   5930 <print_factors>
24f7:	84 c0                	test   al,al
24f9:	45 0f 44 ee          	cmove  r13d,r14d
24fd:	49 83 c4 01          	add    r12,0x1
2501:	44 39 e5             	cmp    ebp,r12d
2504:	7f e8                	jg     24ee <main+0x16e>
2506:	41 83 f5 01          	xor    r13d,0x1
250a:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
250f:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
2516:	00 00
2518:	41 0f b6 c5          	movzx  eax,r13b
251c:	75 5f                	jne    257d <main+0x1fd>
251e:	48 83 c4 20          	add    rsp,0x20
2522:	5b                   	pop    rbx
2523:	5d                   	pop    rbp
2524:	41 5c                	pop    r12
2526:	41 5d                	pop    r13
2528:	41 5e                	pop    r14
252a:	c3                   	ret
252b:	48 89 e3             	mov    rbx,rsp
252e:	41 bd 01 00 00 00    	mov    r13d,0x1
2534:	48 8d 2d f0 a9 00 00 	lea    rbp,[rip+0xa9f0]        # cf2b <_IO_stdin_used+0x4eb>
253b:	48 89 df             	mov    rdi,rbx
253e:	e8 8d 66 00 00       	call   8bd0 <init_tokenbuffer>
2543:	eb 08                	jmp    254d <main+0x1cd>
2545:	e8 e6 33 00 00       	call   5930 <print_factors>
254a:	41 21 c5             	and    r13d,eax
254d:	48 8b 3d 5c 0b 21 00 	mov    rdi,QWORD PTR [rip+0x210b5c]        # 2130b0 <stdin@@GLIBC_2.2.5>
2554:	48 89 d9             	mov    rcx,rbx
2557:	ba 03 00 00 00       	mov    edx,0x3
255c:	48 89 ee             	mov    rsi,rbp
255f:	e8 7c 66 00 00       	call   8be0 <readtoken>
2564:	48 83 c0 01          	add    rax,0x1
2568:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
256d:	75 d6                	jne    2545 <main+0x1c5>
256f:	e8 5c f8 ff ff       	call   1dd0 <free@plt>
2574:	eb 90                	jmp    2506 <main+0x186>
2576:	31 ff                	xor    edi,edi
2578:	e8 43 37 00 00       	call   5cc0 <usage>
257d:	e8 9e f9 ff ff       	call   1f20 <__stack_chk_fail@plt>
2582:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2589:	00 00 00
258c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002590 <_start>:
2590:	31 ed                	xor    ebp,ebp
2592:	49 89 d1             	mov    r9,rdx
2595:	5e                   	pop    rsi
2596:	48 89 e2             	mov    rdx,rsp
2599:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
259d:	50                   	push   rax
259e:	54                   	push   rsp
259f:	4c 8d 05 6a a4 00 00 	lea    r8,[rip+0xa46a]        # ca10 <__libc_csu_fini>
25a6:	48 8d 0d f3 a3 00 00 	lea    rcx,[rip+0xa3f3]        # c9a0 <__libc_csu_init>
25ad:	48 8d 3d cc fd ff ff 	lea    rdi,[rip+0xfffffffffffffdcc]        # 2380 <main>
25b4:	ff 15 26 0a 21 00    	call   QWORD PTR [rip+0x210a26]        # 212fe0 <__libc_start_main@GLIBC_2.2.5>
25ba:	f4                   	hlt
25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <deregister_tm_clones>:
25c0:	48 8d 3d d9 0a 21 00 	lea    rdi,[rip+0x210ad9]        # 2130a0 <__progname@@GLIBC_2.2.5>
25c7:	55                   	push   rbp
25c8:	48 8d 05 d1 0a 21 00 	lea    rax,[rip+0x210ad1]        # 2130a0 <__progname@@GLIBC_2.2.5>
25cf:	48 39 f8             	cmp    rax,rdi
25d2:	48 89 e5             	mov    rbp,rsp
25d5:	74 19                	je     25f0 <deregister_tm_clones+0x30>
25d7:	48 8b 05 fa 09 21 00 	mov    rax,QWORD PTR [rip+0x2109fa]        # 212fd8 <_ITM_deregisterTMCloneTable>
25de:	48 85 c0             	test   rax,rax
25e1:	74 0d                	je     25f0 <deregister_tm_clones+0x30>
25e3:	5d                   	pop    rbp
25e4:	ff e0                	jmp    rax
25e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
25ed:	00 00 00
25f0:	5d                   	pop    rbp
25f1:	c3                   	ret
25f2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
25f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
25fd:	00 00 00

0000000000002600 <register_tm_clones>:
2600:	48 8d 3d 99 0a 21 00 	lea    rdi,[rip+0x210a99]        # 2130a0 <__progname@@GLIBC_2.2.5>
2607:	48 8d 35 92 0a 21 00 	lea    rsi,[rip+0x210a92]        # 2130a0 <__progname@@GLIBC_2.2.5>
260e:	55                   	push   rbp
260f:	48 29 fe             	sub    rsi,rdi
2612:	48 89 e5             	mov    rbp,rsp
2615:	48 c1 fe 03          	sar    rsi,0x3
2619:	48 89 f0             	mov    rax,rsi
261c:	48 c1 e8 3f          	shr    rax,0x3f
2620:	48 01 c6             	add    rsi,rax
2623:	48 d1 fe             	sar    rsi,1
2626:	74 18                	je     2640 <register_tm_clones+0x40>
2628:	48 8b 05 c1 09 21 00 	mov    rax,QWORD PTR [rip+0x2109c1]        # 212ff0 <_ITM_registerTMCloneTable>
262f:	48 85 c0             	test   rax,rax
2632:	74 0c                	je     2640 <register_tm_clones+0x40>
2634:	5d                   	pop    rbp
2635:	ff e0                	jmp    rax
2637:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
263e:	00 00
2640:	5d                   	pop    rbp
2641:	c3                   	ret
2642:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2646:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
264d:	00 00 00

0000000000002650 <__do_global_dtors_aux>:
2650:	80 3d 91 0a 21 00 00 	cmp    BYTE PTR [rip+0x210a91],0x0        # 2130e8 <completed.7697>
2657:	75 2f                	jne    2688 <__do_global_dtors_aux+0x38>
2659:	48 83 3d 97 09 21 00 	cmp    QWORD PTR [rip+0x210997],0x0        # 212ff8 <__cxa_finalize@GLIBC_2.2.5>
2660:	00
2661:	55                   	push   rbp
2662:	48 89 e5             	mov    rbp,rsp
2665:	74 0c                	je     2673 <__do_global_dtors_aux+0x23>
2667:	48 8b 3d 9a 09 21 00 	mov    rdi,QWORD PTR [rip+0x21099a]        # 213008 <__dso_handle>
266e:	e8 8d fc ff ff       	call   2300 <__cxa_finalize@plt>
2673:	e8 48 ff ff ff       	call   25c0 <deregister_tm_clones>
2678:	c6 05 69 0a 21 00 01 	mov    BYTE PTR [rip+0x210a69],0x1        # 2130e8 <completed.7697>
267f:	5d                   	pop    rbp
2680:	c3                   	ret
2681:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2688:	f3 c3                	repz ret
268a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002690 <frame_dummy>:
2690:	55                   	push   rbp
2691:	48 89 e5             	mov    rbp,rsp
2694:	5d                   	pop    rbp
2695:	e9 66 ff ff ff       	jmp    2600 <register_tm_clones>
269a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000026a0 <gcd_odd>:
26a0:	40 f6 c6 01          	test   sil,0x1
26a4:	74 09                	je     26af <gcd_odd+0xf>
26a6:	48 89 f0             	mov    rax,rsi
26a9:	48 89 fe             	mov    rsi,rdi
26ac:	48 89 c7             	mov    rdi,rax
26af:	48 89 f8             	mov    rax,rdi
26b2:	48 d1 ef             	shr    rdi,1
26b5:	48 85 f6             	test   rsi,rsi
26b8:	75 1a                	jne    26d4 <gcd_odd+0x34>
26ba:	eb 34                	jmp    26f0 <gcd_odd+0x50>
26bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
26c0:	48 99                	cqo
26c2:	48 89 c1             	mov    rcx,rax
26c5:	48 21 d1             	and    rcx,rdx
26c8:	48 31 d0             	xor    rax,rdx
26cb:	48 01 cf             	add    rdi,rcx
26ce:	48 29 d0             	sub    rax,rdx
26d1:	48 89 c6             	mov    rsi,rax
26d4:	48 89 f0             	mov    rax,rsi
26d7:	48 d1 e8             	shr    rax,1
26da:	40 f6 c6 01          	test   sil,0x1
26de:	74 f1                	je     26d1 <gcd_odd+0x31>
26e0:	48 29 f8             	sub    rax,rdi
26e3:	75 db                	jne    26c0 <gcd_odd+0x20>
26e5:	48 89 f0             	mov    rax,rsi
26e8:	48 83 c8 01          	or     rax,0x1
26ec:	c3                   	ret
26ed:	0f 1f 00             	nop    DWORD PTR [rax]
26f0:	f3 c3                	repz ret
26f2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
26f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
26fd:	00 00 00

0000000000002700 <factor_insert_multiplicity>:
2700:	41 56                	push   r14
2702:	41 55                	push   r13
2704:	4c 8d 5f 10          	lea    r11,[rdi+0x10]
2708:	44 0f b6 af fa 00 00 	movzx  r13d,BYTE PTR [rdi+0xfa]
270f:	00
2710:	41 54                	push   r12
2712:	55                   	push   rbp
2713:	53                   	push   rbx
2714:	48 8d 9f e0 00 00 00 	lea    rbx,[rdi+0xe0]
271b:	45 89 ec             	mov    r12d,r13d
271e:	41 83 ed 01          	sub    r13d,0x1
2722:	41 83 fd ff          	cmp    r13d,0xffffffff
2726:	0f 84 cc 00 00 00    	je     27f8 <factor_insert_multiplicity+0xf8>
272c:	49 63 cd             	movsxd rcx,r13d
272f:	48 8d 04 cd 00 00 00 	lea    rax,[rcx*8+0x0]
2736:	00
2737:	48 8b 6c 07 10       	mov    rbp,QWORD PTR [rdi+rax*1+0x10]
273c:	48 39 ee             	cmp    rsi,rbp
273f:	0f 83 9b 00 00 00    	jae    27e0 <factor_insert_multiplicity+0xe0>
2745:	45 89 e9             	mov    r9d,r13d
2748:	48 8d 41 ff          	lea    rax,[rcx-0x1]
274c:	49 89 ce             	mov    r14,rcx
274f:	4d 29 ce             	sub    r14,r9
2752:	45 89 e9             	mov    r9d,r13d
2755:	49 89 c0             	mov    r8,rax
2758:	49 83 ee 01          	sub    r14,0x1
275c:	eb 10                	jmp    276e <factor_insert_multiplicity+0x6e>
275e:	66 90                	xchg   ax,ax
2760:	4d 8d 50 ff          	lea    r10,[r8-0x1]
2764:	4b 39 74 d3 08       	cmp    QWORD PTR [r11+r10*8+0x8],rsi
2769:	76 5d                	jbe    27c8 <factor_insert_multiplicity+0xc8>
276b:	4d 89 d0             	mov    r8,r10
276e:	41 83 e9 01          	sub    r9d,0x1
2772:	4d 39 c6             	cmp    r14,r8
2775:	75 e9                	jne    2760 <factor_insert_multiplicity+0x60>
2777:	49 89 d8             	mov    r8,rbx
277a:	4d 89 de             	mov    r14,r11
277d:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
2783:	eb 0b                	jmp    2790 <factor_insert_multiplicity+0x90>
2785:	0f 1f 00             	nop    DWORD PTR [rax]
2788:	49 8b 2c c3          	mov    rbp,QWORD PTR [r11+rax*8]
278c:	48 83 e8 01          	sub    rax,0x1
2790:	49 89 6c cb 08       	mov    QWORD PTR [r11+rcx*8+0x8],rbp
2795:	44 0f b6 14 0b       	movzx  r10d,BYTE PTR [rbx+rcx*1]
279a:	41 39 c1             	cmp    r9d,eax
279d:	44 88 54 0b 01       	mov    BYTE PTR [rbx+rcx*1+0x1],r10b
27a2:	48 89 c1             	mov    rcx,rax
27a5:	7c e1                	jl     2788 <factor_insert_multiplicity+0x88>
27a7:	41 83 c4 01          	add    r12d,0x1
27ab:	49 89 36             	mov    QWORD PTR [r14],rsi
27ae:	41 88 10             	mov    BYTE PTR [r8],dl
27b1:	44 88 a7 fa 00 00 00 	mov    BYTE PTR [rdi+0xfa],r12b
27b8:	5b                   	pop    rbx
27b9:	5d                   	pop    rbp
27ba:	41 5c                	pop    r12
27bc:	41 5d                	pop    r13
27be:	41 5e                	pop    r14
27c0:	c3                   	ret
27c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
27c8:	74 1b                	je     27e5 <factor_insert_multiplicity+0xe5>
27ca:	49 83 c0 01          	add    r8,0x1
27ce:	4f 8d 34 c3          	lea    r14,[r11+r8*8]
27d2:	49 01 d8             	add    r8,rbx
27d5:	45 39 cd             	cmp    r13d,r9d
27d8:	7f b6                	jg     2790 <factor_insert_multiplicity+0x90>
27da:	eb cb                	jmp    27a7 <factor_insert_multiplicity+0xa7>
27dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
27e0:	75 1e                	jne    2800 <factor_insert_multiplicity+0x100>
27e2:	49 89 c8             	mov    r8,rcx
27e5:	42 00 14 03          	add    BYTE PTR [rbx+r8*1],dl
27e9:	5b                   	pop    rbx
27ea:	5d                   	pop    rbp
27eb:	41 5c                	pop    r12
27ed:	41 5d                	pop    r13
27ef:	41 5e                	pop    r14
27f1:	c3                   	ret
27f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
27f8:	49 89 d8             	mov    r8,rbx
27fb:	4d 89 de             	mov    r14,r11
27fe:	eb a7                	jmp    27a7 <factor_insert_multiplicity+0xa7>
2800:	4d 8d 74 03 08       	lea    r14,[r11+rax*1+0x8]
2805:	4c 8d 44 0b 01       	lea    r8,[rbx+rcx*1+0x1]
280a:	eb 9b                	jmp    27a7 <factor_insert_multiplicity+0xa7>
280c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002810 <powm>:
2810:	40 f6 c6 01          	test   sil,0x1
2814:	49 89 d1             	mov    r9,rdx
2817:	74 57                	je     2870 <powm+0x60>
2819:	49 89 f8             	mov    r8,rdi
281c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2820:	48 89 f8             	mov    rax,rdi
2823:	48 f7 e7             	mul    rdi
2826:	49 89 d2             	mov    r10,rdx
2829:	4c 89 d7             	mov    rdi,r10
282c:	48 0f af c1          	imul   rax,rcx
2830:	49 f7 e1             	mul    r9
2833:	48 29 d7             	sub    rdi,rdx
2836:	49 39 d2             	cmp    r10,rdx
2839:	4a 8d 04 0f          	lea    rax,[rdi+r9*1]
283d:	48 0f 42 f8          	cmovb  rdi,rax
2841:	48 d1 ee             	shr    rsi,1
2844:	40 f6 c6 01          	test   sil,0x1
2848:	74 26                	je     2870 <powm+0x60>
284a:	4c 89 c0             	mov    rax,r8
284d:	48 f7 e7             	mul    rdi
2850:	49 89 d2             	mov    r10,rdx
2853:	4d 89 d0             	mov    r8,r10
2856:	48 0f af c1          	imul   rax,rcx
285a:	49 f7 e1             	mul    r9
285d:	49 29 d0             	sub    r8,rdx
2860:	49 39 d2             	cmp    r10,rdx
2863:	4b 8d 04 08          	lea    rax,[r8+r9*1]
2867:	4c 0f 42 c0          	cmovb  r8,rax
286b:	eb b3                	jmp    2820 <powm+0x10>
286d:	0f 1f 00             	nop    DWORD PTR [rax]
2870:	48 85 f6             	test   rsi,rsi
2873:	75 ab                	jne    2820 <powm+0x10>
2875:	4c 89 c0             	mov    rax,r8
2878:	c3                   	ret
2879:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002880 <millerrabin>:
2880:	41 54                	push   r12
2882:	49 89 fb             	mov    r11,rdi
2885:	55                   	push   rbp
2886:	53                   	push   rbx
2887:	48 89 f3             	mov    rbx,rsi
288a:	48 89 d7             	mov    rdi,rdx
288d:	48 89 ce             	mov    rsi,rcx
2890:	4c 89 da             	mov    rdx,r11
2893:	44 89 c5             	mov    ebp,r8d
2896:	48 89 d9             	mov    rcx,rbx
2899:	4d 89 c8             	mov    r8,r9
289c:	4d 89 cc             	mov    r12,r9
289f:	e8 6c ff ff ff       	call   2810 <powm>
28a4:	4c 89 df             	mov    rdi,r11
28a7:	4c 29 e7             	sub    rdi,r12
28aa:	49 39 c4             	cmp    r12,rax
28ad:	41 0f 94 c0          	sete   r8b
28b1:	48 39 f8             	cmp    rax,rdi
28b4:	0f 94 c2             	sete   dl
28b7:	41 08 d0             	or     r8b,dl
28ba:	75 49                	jne    2905 <millerrabin+0x85>
28bc:	83 fd 01             	cmp    ebp,0x1
28bf:	76 44                	jbe    2905 <millerrabin+0x85>
28c1:	be 01 00 00 00       	mov    esi,0x1
28c6:	eb 14                	jmp    28dc <millerrabin+0x5c>
28c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
28cf:	00
28d0:	49 39 c4             	cmp    r12,rax
28d3:	74 30                	je     2905 <millerrabin+0x85>
28d5:	83 c6 01             	add    esi,0x1
28d8:	39 f5                	cmp    ebp,esi
28da:	74 29                	je     2905 <millerrabin+0x85>
28dc:	48 f7 e0             	mul    rax
28df:	48 89 d1             	mov    rcx,rdx
28e2:	48 0f af c3          	imul   rax,rbx
28e6:	49 f7 e3             	mul    r11
28e9:	48 89 c8             	mov    rax,rcx
28ec:	48 29 d0             	sub    rax,rdx
28ef:	48 39 d1             	cmp    rcx,rdx
28f2:	4e 8d 0c 18          	lea    r9,[rax+r11*1]
28f6:	49 0f 42 c1          	cmovb  rax,r9
28fa:	48 39 c7             	cmp    rdi,rax
28fd:	75 d1                	jne    28d0 <millerrabin+0x50>
28ff:	41 b8 01 00 00 00    	mov    r8d,0x1
2905:	5b                   	pop    rbx
2906:	44 89 c0             	mov    eax,r8d
2909:	5d                   	pop    rbp
290a:	41 5c                	pop    r12
290c:	c3                   	ret
290d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002910 <mp_factor_clear>:
2910:	55                   	push   rbp
2911:	53                   	push   rbx
2912:	48 89 fd             	mov    rbp,rdi
2915:	48 83 ec 08          	sub    rsp,0x8
2919:	48 83 7f 10 00       	cmp    QWORD PTR [rdi+0x10],0x0
291e:	74 21                	je     2941 <mp_factor_clear+0x31>
2920:	31 db                	xor    ebx,ebx
2922:	31 ff                	xor    edi,edi
2924:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2928:	48 c1 e7 04          	shl    rdi,0x4
292c:	48 03 7d 00          	add    rdi,QWORD PTR [rbp+0x0]
2930:	e8 db f7 ff ff       	call   2110 <__gmpz_clear@plt>
2935:	8d 7b 01             	lea    edi,[rbx+0x1]
2938:	48 3b 7d 10          	cmp    rdi,QWORD PTR [rbp+0x10]
293c:	48 89 fb             	mov    rbx,rdi
293f:	72 e7                	jb     2928 <mp_factor_clear+0x18>
2941:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
2945:	e8 86 f4 ff ff       	call   1dd0 <free@plt>
294a:	48 8b 7d 08          	mov    rdi,QWORD PTR [rbp+0x8]
294e:	48 83 c4 08          	add    rsp,0x8
2952:	5b                   	pop    rbx
2953:	5d                   	pop    rbp
2954:	e9 77 f4 ff ff       	jmp    1dd0 <free@plt>
2959:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002960 <mulredc2>:
2960:	41 57                	push   r15
2962:	41 56                	push   r14
2964:	41 55                	push   r13
2966:	41 54                	push   r12
2968:	55                   	push   rbp
2969:	53                   	push   rbx
296a:	48 83 ec 08          	sub    rsp,0x8
296e:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
2973:	4c 8b 54 24 40       	mov    r10,QWORD PTR [rsp+0x40]
2978:	48 f7 db             	neg    rbx
297b:	48 85 f6             	test   rsi,rsi
297e:	0f 88 33 01 00 00    	js     2ab7 <mulredc2+0x157>
2984:	48 85 c9             	test   rcx,rcx
2987:	0f 88 0b 01 00 00    	js     2a98 <mulredc2+0x138>
298d:	4d 85 c9             	test   r9,r9
2990:	0f 88 e3 00 00 00    	js     2a79 <mulredc2+0x119>
2996:	48 89 d5             	mov    rbp,rdx
2999:	49 89 df             	mov    r15,rbx
299c:	48 89 e8             	mov    rax,rbp
299f:	49 f7 e0             	mul    r8
29a2:	49 89 c4             	mov    r12,rax
29a5:	49 89 d5             	mov    r13,rdx
29a8:	48 89 e8             	mov    rax,rbp
29ab:	4d 0f af fc          	imul   r15,r12
29af:	48 f7 e1             	mul    rcx
29b2:	49 89 d3             	mov    r11,rdx
29b5:	48 89 c5             	mov    rbp,rax
29b8:	4c 89 f8             	mov    rax,r15
29bb:	49 f7 e2             	mul    r10
29be:	4c 89 f8             	mov    rax,r15
29c1:	49 89 d6             	mov    r14,rdx
29c4:	49 f7 e1             	mul    r9
29c7:	4d 85 e4             	test   r12,r12
29ca:	41 0f 95 c4          	setne  r12b
29ce:	45 0f b6 e4          	movzx  r12d,r12b
29d2:	4c 01 e5             	add    rbp,r12
29d5:	4c 01 f5             	add    rbp,r14
29d8:	49 83 d3 00          	adc    r11,0x0
29dc:	4c 01 ed             	add    rbp,r13
29df:	49 83 d3 00          	adc    r11,0x0
29e3:	48 01 c5             	add    rbp,rax
29e6:	49 11 d3             	adc    r11,rdx
29e9:	48 89 f0             	mov    rax,rsi
29ec:	49 f7 e0             	mul    r8
29ef:	49 89 d0             	mov    r8,rdx
29f2:	49 89 c4             	mov    r12,rax
29f5:	48 89 f0             	mov    rax,rsi
29f8:	49 01 ec             	add    r12,rbp
29fb:	49 83 d0 00          	adc    r8,0x0
29ff:	49 0f af dc          	imul   rbx,r12
2a03:	31 f6                	xor    esi,esi
2a05:	48 f7 e1             	mul    rcx
2a08:	48 89 d1             	mov    rcx,rdx
2a0b:	48 89 c5             	mov    rbp,rax
2a0e:	4c 01 dd             	add    rbp,r11
2a11:	48 83 d1 00          	adc    rcx,0x0
2a15:	48 89 d8             	mov    rax,rbx
2a18:	49 f7 e2             	mul    r10
2a1b:	48 89 d8             	mov    rax,rbx
2a1e:	49 89 d3             	mov    r11,rdx
2a21:	49 f7 e1             	mul    r9
2a24:	4d 85 e4             	test   r12,r12
2a27:	40 0f 95 c6          	setne  sil
2a2b:	48 01 ee             	add    rsi,rbp
2a2e:	4c 01 de             	add    rsi,r11
2a31:	48 83 d1 00          	adc    rcx,0x0
2a35:	4c 01 c6             	add    rsi,r8
2a38:	48 83 d1 00          	adc    rcx,0x0
2a3c:	48 01 c6             	add    rsi,rax
2a3f:	48 11 d1             	adc    rcx,rdx
2a42:	49 39 c9             	cmp    r9,rcx
2a45:	48 89 ca             	mov    rdx,rcx
2a48:	48 89 f0             	mov    rax,rsi
2a4b:	73 23                	jae    2a70 <mulredc2+0x110>
2a4d:	4c 29 d6             	sub    rsi,r10
2a50:	4c 19 c9             	sbb    rcx,r9
2a53:	48 89 ca             	mov    rdx,rcx
2a56:	48 89 f0             	mov    rax,rsi
2a59:	48 89 17             	mov    QWORD PTR [rdi],rdx
2a5c:	48 83 c4 08          	add    rsp,0x8
2a60:	5b                   	pop    rbx
2a61:	5d                   	pop    rbp
2a62:	41 5c                	pop    r12
2a64:	41 5d                	pop    r13
2a66:	41 5e                	pop    r14
2a68:	41 5f                	pop    r15
2a6a:	c3                   	ret
2a6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2a70:	75 e7                	jne    2a59 <mulredc2+0xf9>
2a72:	49 39 f2             	cmp    r10,rsi
2a75:	76 d6                	jbe    2a4d <mulredc2+0xed>
2a77:	eb e0                	jmp    2a59 <mulredc2+0xf9>
2a79:	48 8d 0d 38 a5 00 00 	lea    rcx,[rip+0xa538]        # cfb8 <__PRETTY_FUNCTION__.8732>
2a80:	48 8d 35 c1 9f 00 00 	lea    rsi,[rip+0x9fc1]        # ca48 <_IO_stdin_used+0x8>
2a87:	48 8d 3d 1a a0 00 00 	lea    rdi,[rip+0xa01a]        # caa8 <_IO_stdin_used+0x68>
2a8e:	ba e9 03 00 00       	mov    edx,0x3e9
2a93:	e8 48 f5 ff ff       	call   1fe0 <__assert_fail@plt>
2a98:	48 8d 0d 19 a5 00 00 	lea    rcx,[rip+0xa519]        # cfb8 <__PRETTY_FUNCTION__.8732>
2a9f:	48 8d 35 a2 9f 00 00 	lea    rsi,[rip+0x9fa2]        # ca48 <_IO_stdin_used+0x8>
2aa6:	48 8d 3d db 9f 00 00 	lea    rdi,[rip+0x9fdb]        # ca88 <_IO_stdin_used+0x48>
2aad:	ba e8 03 00 00       	mov    edx,0x3e8
2ab2:	e8 29 f5 ff ff       	call   1fe0 <__assert_fail@plt>
2ab7:	48 8d 0d fa a4 00 00 	lea    rcx,[rip+0xa4fa]        # cfb8 <__PRETTY_FUNCTION__.8732>
2abe:	48 8d 35 83 9f 00 00 	lea    rsi,[rip+0x9f83]        # ca48 <_IO_stdin_used+0x8>
2ac5:	48 8d 3d 9c 9f 00 00 	lea    rdi,[rip+0x9f9c]        # ca68 <_IO_stdin_used+0x28>
2acc:	ba e7 03 00 00       	mov    edx,0x3e7
2ad1:	e8 0a f5 ff ff       	call   1fe0 <__assert_fail@plt>
2ad6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2add:	00 00 00

0000000000002ae0 <powm2>:
2ae0:	41 57                	push   r15
2ae2:	41 56                	push   r14
2ae4:	4d 89 c7             	mov    r15,r8
2ae7:	41 55                	push   r13
2ae9:	41 54                	push   r12
2aeb:	49 89 fc             	mov    r12,rdi
2aee:	55                   	push   rbp
2aef:	53                   	push   rbx
2af0:	bb 40 00 00 00       	mov    ebx,0x40
2af5:	48 83 ec 38          	sub    rsp,0x38
2af9:	49 8b 01             	mov    rax,QWORD PTR [r9]
2afc:	4c 8b 16             	mov    r10,QWORD PTR [rsi]
2aff:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
2b04:	4c 8b 5e 08          	mov    r11,QWORD PTR [rsi+0x8]
2b08:	4c 8b 29             	mov    r13,QWORD PTR [rcx]
2b0b:	4c 8b 71 08          	mov    r14,QWORD PTR [rcx+0x8]
2b0f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
2b14:	49 8b 41 08          	mov    rax,QWORD PTR [r9+0x8]
2b18:	48 8b 2a             	mov    rbp,QWORD PTR [rdx]
2b1b:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
2b20:	eb 33                	jmp    2b55 <powm2+0x75>
2b22:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2b28:	41 57                	push   r15
2b2a:	41 55                	push   r13
2b2c:	4d 89 d0             	mov    r8,r10
2b2f:	4c 89 d9             	mov    rcx,r11
2b32:	4c 89 d2             	mov    rdx,r10
2b35:	4c 89 de             	mov    rsi,r11
2b38:	4c 89 e7             	mov    rdi,r12
2b3b:	4d 89 f1             	mov    r9,r14
2b3e:	48 d1 ed             	shr    rbp,1
2b41:	e8 1a fe ff ff       	call   2960 <mulredc2>
2b46:	83 eb 01             	sub    ebx,0x1
2b49:	49 89 c2             	mov    r10,rax
2b4c:	4d 8b 1c 24          	mov    r11,QWORD PTR [r12]
2b50:	5f                   	pop    rdi
2b51:	41 58                	pop    r8
2b53:	74 53                	je     2ba8 <powm2+0xc8>
2b55:	40 f6 c5 01          	test   bpl,0x1
2b59:	74 cd                	je     2b28 <powm2+0x48>
2b5b:	41 57                	push   r15
2b5d:	41 55                	push   r13
2b5f:	4d 89 f1             	mov    r9,r14
2b62:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
2b67:	48 8b 74 24 18       	mov    rsi,QWORD PTR [rsp+0x18]
2b6c:	4d 89 d0             	mov    r8,r10
2b6f:	4c 89 d9             	mov    rcx,r11
2b72:	4c 89 e7             	mov    rdi,r12
2b75:	4c 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],r11
2b7a:	4c 89 54 24 30       	mov    QWORD PTR [rsp+0x30],r10
2b7f:	e8 dc fd ff ff       	call   2960 <mulredc2>
2b84:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
2b89:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
2b8d:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2b92:	41 59                	pop    r9
2b94:	41 5a                	pop    r10
2b96:	4c 8b 54 24 20       	mov    r10,QWORD PTR [rsp+0x20]
2b9b:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
2ba0:	eb 86                	jmp    2b28 <powm2+0x48>
2ba2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2ba8:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
2bad:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
2bb1:	48 85 db             	test   rbx,rbx
2bb4:	75 33                	jne    2be9 <powm2+0x109>
2bb6:	e9 7d 00 00 00       	jmp    2c38 <powm2+0x158>
2bbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2bc0:	41 57                	push   r15
2bc2:	41 55                	push   r13
2bc4:	4c 89 d2             	mov    rdx,r10
2bc7:	4d 89 d0             	mov    r8,r10
2bca:	4c 89 d9             	mov    rcx,r11
2bcd:	4c 89 de             	mov    rsi,r11
2bd0:	4d 89 f1             	mov    r9,r14
2bd3:	4c 89 e7             	mov    rdi,r12
2bd6:	e8 85 fd ff ff       	call   2960 <mulredc2>
2bdb:	48 d1 eb             	shr    rbx,1
2bde:	49 89 c2             	mov    r10,rax
2be1:	4d 8b 1c 24          	mov    r11,QWORD PTR [r12]
2be5:	58                   	pop    rax
2be6:	5a                   	pop    rdx
2be7:	74 4f                	je     2c38 <powm2+0x158>
2be9:	f6 c3 01             	test   bl,0x1
2bec:	74 d2                	je     2bc0 <powm2+0xe0>
2bee:	41 57                	push   r15
2bf0:	41 55                	push   r13
2bf2:	4c 89 d9             	mov    rcx,r11
2bf5:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
2bfa:	48 8b 74 24 18       	mov    rsi,QWORD PTR [rsp+0x18]
2bff:	4d 89 d0             	mov    r8,r10
2c02:	4d 89 f1             	mov    r9,r14
2c05:	4c 89 e7             	mov    rdi,r12
2c08:	4c 89 54 24 30       	mov    QWORD PTR [rsp+0x30],r10
2c0d:	4c 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],r11
2c12:	e8 49 fd ff ff       	call   2960 <mulredc2>
2c17:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
2c1c:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
2c20:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2c25:	59                   	pop    rcx
2c26:	5e                   	pop    rsi
2c27:	4c 8b 54 24 20       	mov    r10,QWORD PTR [rsp+0x20]
2c2c:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
2c31:	eb 8d                	jmp    2bc0 <powm2+0xe0>
2c33:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2c38:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2c3d:	49 89 04 24          	mov    QWORD PTR [r12],rax
2c41:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
2c46:	48 83 c4 38          	add    rsp,0x38
2c4a:	5b                   	pop    rbx
2c4b:	5d                   	pop    rbp
2c4c:	41 5c                	pop    r12
2c4e:	41 5d                	pop    r13
2c50:	41 5e                	pop    r14
2c52:	41 5f                	pop    r15
2c54:	c3                   	ret
2c55:	90                   	nop
2c56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2c5d:	00 00 00

0000000000002c60 <millerrabin2>:
2c60:	41 57                	push   r15
2c62:	41 56                	push   r14
2c64:	49 89 fe             	mov    r14,rdi
2c67:	41 55                	push   r13
2c69:	41 54                	push   r12
2c6b:	49 89 f5             	mov    r13,rsi
2c6e:	55                   	push   rbp
2c6f:	53                   	push   rbx
2c70:	48 89 d6             	mov    rsi,rdx
2c73:	4c 89 cb             	mov    rbx,r9
2c76:	48 89 ca             	mov    rdx,rcx
2c79:	4c 89 f1             	mov    rcx,r14
2c7c:	48 83 ec 28          	sub    rsp,0x28
2c80:	48 8d 7c 24 10       	lea    rdi,[rsp+0x10]
2c85:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
2c8a:	4d 89 e8             	mov    r8,r13
2c8d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2c94:	00 00
2c96:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2c9b:	31 c0                	xor    eax,eax
2c9d:	48 89 3c 24          	mov    QWORD PTR [rsp],rdi
2ca1:	e8 3a fe ff ff       	call   2ae0 <powm2>
2ca6:	48 8b 0b             	mov    rcx,QWORD PTR [rbx]
2ca9:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
2cae:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
2cb2:	48 39 c1             	cmp    rcx,rax
2cb5:	0f 84 85 00 00 00    	je     2d40 <millerrabin2+0xe0>
2cbb:	4d 8b 4e 08          	mov    r9,QWORD PTR [r14+0x8]
2cbf:	49 8b 16             	mov    rdx,QWORD PTR [r14]
2cc2:	4d 89 cc             	mov    r12,r9
2cc5:	48 89 d5             	mov    rbp,rdx
2cc8:	48 29 cd             	sub    rbp,rcx
2ccb:	49 19 fc             	sbb    r12,rdi
2cce:	48 39 e8             	cmp    rax,rbp
2cd1:	40 0f 94 c7          	sete   dil
2cd5:	4c 39 e6             	cmp    rsi,r12
2cd8:	0f 94 c1             	sete   cl
2cdb:	40 20 cf             	and    dil,cl
2cde:	40 88 7c 24 0f       	mov    BYTE PTR [rsp+0xf],dil
2ce3:	75 6b                	jne    2d50 <millerrabin2+0xf0>
2ce5:	83 7c 24 08 01       	cmp    DWORD PTR [rsp+0x8],0x1
2cea:	41 bf 01 00 00 00    	mov    r15d,0x1
2cf0:	77 18                	ja     2d0a <millerrabin2+0xaa>
2cf2:	eb 61                	jmp    2d55 <millerrabin2+0xf5>
2cf4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2cf8:	41 83 c7 01          	add    r15d,0x1
2cfc:	44 39 7c 24 08       	cmp    DWORD PTR [rsp+0x8],r15d
2d01:	74 52                	je     2d55 <millerrabin2+0xf5>
2d03:	49 8b 16             	mov    rdx,QWORD PTR [r14]
2d06:	4d 8b 4e 08          	mov    r9,QWORD PTR [r14+0x8]
2d0a:	41 55                	push   r13
2d0c:	52                   	push   rdx
2d0d:	48 89 f1             	mov    rcx,rsi
2d10:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
2d15:	48 89 c2             	mov    rdx,rax
2d18:	49 89 c0             	mov    r8,rax
2d1b:	e8 40 fc ff ff       	call   2960 <mulredc2>
2d20:	48 39 c5             	cmp    rbp,rax
2d23:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
2d28:	5a                   	pop    rdx
2d29:	59                   	pop    rcx
2d2a:	75 05                	jne    2d31 <millerrabin2+0xd1>
2d2c:	49 39 f4             	cmp    r12,rsi
2d2f:	74 1f                	je     2d50 <millerrabin2+0xf0>
2d31:	48 39 03             	cmp    QWORD PTR [rbx],rax
2d34:	75 c2                	jne    2cf8 <millerrabin2+0x98>
2d36:	48 39 73 08          	cmp    QWORD PTR [rbx+0x8],rsi
2d3a:	75 bc                	jne    2cf8 <millerrabin2+0x98>
2d3c:	eb 17                	jmp    2d55 <millerrabin2+0xf5>
2d3e:	66 90                	xchg   ax,ax
2d40:	48 39 f7             	cmp    rdi,rsi
2d43:	0f 85 72 ff ff ff    	jne    2cbb <millerrabin2+0x5b>
2d49:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2d50:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
2d55:	48 8b 5c 24 18       	mov    rbx,QWORD PTR [rsp+0x18]
2d5a:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
2d61:	00 00
2d63:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
2d68:	75 0f                	jne    2d79 <millerrabin2+0x119>
2d6a:	48 83 c4 28          	add    rsp,0x28
2d6e:	5b                   	pop    rbx
2d6f:	5d                   	pop    rbp
2d70:	41 5c                	pop    r12
2d72:	41 5d                	pop    r13
2d74:	41 5e                	pop    r14
2d76:	41 5f                	pop    r15
2d78:	c3                   	ret
2d79:	e8 a2 f1 ff ff       	call   1f20 <__stack_chk_fail@plt>
2d7e:	66 90                	xchg   ax,ax

0000000000002d80 <lbuf_putint>:
2d80:	55                   	push   rbp
2d81:	53                   	push   rbx
2d82:	48 89 f5             	mov    rbp,rsi
2d85:	48 83 ec 28          	sub    rsp,0x28
2d89:	48 89 e3             	mov    rbx,rsp
2d8c:	48 89 de             	mov    rsi,rbx
2d8f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2d96:	00 00
2d98:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2d9d:	31 c0                	xor    eax,eax
2d9f:	e8 bc 33 00 00       	call   6160 <umaxtostr>
2da4:	48 29 c3             	sub    rbx,rax
2da7:	4c 8b 05 4a 03 21 00 	mov    r8,QWORD PTR [rip+0x21034a]        # 2130f8 <lbuf+0x8>
2dae:	48 83 c3 14          	add    rbx,0x14
2db2:	48 39 eb             	cmp    rbx,rbp
2db5:	73 29                	jae    2de0 <lbuf_putint+0x60>
2db7:	4a 8d 4c 05 00       	lea    rcx,[rbp+r8*1+0x0]
2dbc:	4c 89 c2             	mov    rdx,r8
2dbf:	48 29 d9             	sub    rcx,rbx
2dc2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2dc8:	c6 02 30             	mov    BYTE PTR [rdx],0x30
2dcb:	48 83 c2 01          	add    rdx,0x1
2dcf:	48 39 ca             	cmp    rdx,rcx
2dd2:	75 f4                	jne    2dc8 <lbuf_putint+0x48>
2dd4:	48 29 dd             	sub    rbp,rbx
2dd7:	49 01 e8             	add    r8,rbp
2dda:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2de0:	4c 89 c7             	mov    rdi,r8
2de3:	48 89 da             	mov    rdx,rbx
2de6:	48 89 c6             	mov    rsi,rax
2de9:	e8 b2 f2 ff ff       	call   20a0 <memcpy@plt>
2dee:	49 89 c0             	mov    r8,rax
2df1:	49 01 d8             	add    r8,rbx
2df4:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
2df9:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
2e00:	00 00
2e02:	4c 89 05 ef 02 21 00 	mov    QWORD PTR [rip+0x2102ef],r8        # 2130f8 <lbuf+0x8>
2e09:	75 07                	jne    2e12 <lbuf_putint+0x92>
2e0b:	48 83 c4 28          	add    rsp,0x28
2e0f:	5b                   	pop    rbx
2e10:	5d                   	pop    rbp
2e11:	c3                   	ret
2e12:	e8 09 f1 ff ff       	call   1f20 <__stack_chk_fail@plt>
2e17:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
2e1e:	00 00

0000000000002e20 <mp_factor_insert>:
2e20:	41 57                	push   r15
2e22:	41 56                	push   r14
2e24:	41 55                	push   r13
2e26:	41 54                	push   r12
2e28:	49 89 f4             	mov    r12,rsi
2e2b:	55                   	push   rbp
2e2c:	53                   	push   rbx
2e2d:	48 83 ec 38          	sub    rsp,0x38
2e31:	4c 8b 7f 10          	mov    r15,QWORD PTR [rdi+0x10]
2e35:	48 8b 17             	mov    rdx,QWORD PTR [rdi]
2e38:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
2e3c:	48 89 7c 24 10       	mov    QWORD PTR [rsp+0x10],rdi
2e41:	49 8d 6f ff          	lea    rbp,[r15-0x1]
2e45:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
2e4a:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
2e4f:	48 85 ed             	test   rbp,rbp
2e52:	0f 88 80 01 00 00    	js     2fd8 <mp_factor_insert+0x1b8>
2e58:	4c 89 f8             	mov    rax,r15
2e5b:	49 89 ed             	mov    r13,rbp
2e5e:	49 89 ee             	mov    r14,rbp
2e61:	48 c1 e0 04          	shl    rax,0x4
2e65:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
2e6a:	48 8d 5c 02 f0       	lea    rbx,[rdx+rax*1-0x10]
2e6f:	eb 15                	jmp    2e86 <mp_factor_insert+0x66>
2e71:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2e78:	49 83 ee 01          	sub    r14,0x1
2e7c:	48 83 eb 10          	sub    rbx,0x10
2e80:	49 83 fe ff          	cmp    r14,0xffffffffffffffff
2e84:	74 3a                	je     2ec0 <mp_factor_insert+0xa0>
2e86:	4c 89 e6             	mov    rsi,r12
2e89:	48 89 df             	mov    rdi,rbx
2e8c:	4c 89 f5             	mov    rbp,r14
2e8f:	e8 2c f3 ff ff       	call   21c0 <__gmpz_cmp@plt>
2e94:	83 f8 00             	cmp    eax,0x0
2e97:	7f df                	jg     2e78 <mp_factor_insert+0x58>
2e99:	0f 85 e1 00 00 00    	jne    2f80 <mp_factor_insert+0x160>
2e9f:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2ea4:	4a 83 04 f0 01       	add    QWORD PTR [rax+r14*8],0x1
2ea9:	48 83 c4 38          	add    rsp,0x38
2ead:	5b                   	pop    rbx
2eae:	5d                   	pop    rbp
2eaf:	41 5c                	pop    r12
2eb1:	41 5d                	pop    r13
2eb3:	41 5e                	pop    r14
2eb5:	41 5f                	pop    r15
2eb7:	c3                   	ret
2eb8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2ebf:	00
2ec0:	48 8b 5c 24 20       	mov    rbx,QWORD PTR [rsp+0x20]
2ec5:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
2eca:	49 83 c7 01          	add    r15,0x1
2ece:	4c 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],r15
2ed3:	48 8d 73 10          	lea    rsi,[rbx+0x10]
2ed7:	e8 64 6e 00 00       	call   9d40 <xrealloc>
2edc:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
2ee1:	48 89 c5             	mov    rbp,rax
2ee4:	4a 8d 34 fd 00 00 00 	lea    rsi,[r15*8+0x0]
2eeb:	00
2eec:	48 01 eb             	add    rbx,rbp
2eef:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2ef4:	4c 89 f5             	mov    rbp,r14
2ef7:	e8 44 6e 00 00       	call   9d40 <xrealloc>
2efc:	48 89 df             	mov    rdi,rbx
2eff:	49 89 c7             	mov    r15,rax
2f02:	e8 69 f3 ff ff       	call   2270 <__gmpz_init@plt>
2f07:	48 89 df             	mov    rdi,rbx
2f0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2f10:	48 8d 5f f0          	lea    rbx,[rdi-0x10]
2f14:	48 89 de             	mov    rsi,rbx
2f17:	e8 64 f0 ff ff       	call   1f80 <__gmpz_set@plt>
2f1c:	4b 8b 04 ef          	mov    rax,QWORD PTR [r15+r13*8]
2f20:	48 89 df             	mov    rdi,rbx
2f23:	4b 89 44 ef 08       	mov    QWORD PTR [r15+r13*8+0x8],rax
2f28:	49 83 ed 01          	sub    r13,0x1
2f2c:	4d 39 f5             	cmp    r13,r14
2f2f:	7f df                	jg     2f10 <mp_factor_insert+0xf0>
2f31:	48 8b 5c 24 18       	mov    rbx,QWORD PTR [rsp+0x18]
2f36:	48 83 c5 01          	add    rbp,0x1
2f3a:	4c 89 e6             	mov    rsi,r12
2f3d:	48 89 ef             	mov    rdi,rbp
2f40:	48 c1 e7 04          	shl    rdi,0x4
2f44:	48 01 df             	add    rdi,rbx
2f47:	e8 34 f0 ff ff       	call   1f80 <__gmpz_set@plt>
2f4c:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
2f51:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
2f56:	49 c7 04 ef 01 00 00 	mov    QWORD PTR [r15+rbp*8],0x1
2f5d:	00
2f5e:	48 89 18             	mov    QWORD PTR [rax],rbx
2f61:	4c 89 78 08          	mov    QWORD PTR [rax+0x8],r15
2f65:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
2f69:	48 83 c4 38          	add    rsp,0x38
2f6d:	5b                   	pop    rbx
2f6e:	5d                   	pop    rbp
2f6f:	41 5c                	pop    r12
2f71:	41 5d                	pop    r13
2f73:	41 5e                	pop    r14
2f75:	41 5f                	pop    r15
2f77:	c3                   	ret
2f78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2f7f:	00
2f80:	48 8b 5c 24 20       	mov    rbx,QWORD PTR [rsp+0x20]
2f85:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
2f8a:	49 83 c7 01          	add    r15,0x1
2f8e:	4c 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],r15
2f93:	48 8d 73 10          	lea    rsi,[rbx+0x10]
2f97:	e8 a4 6d 00 00       	call   9d40 <xrealloc>
2f9c:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
2fa1:	4a 8d 34 fd 00 00 00 	lea    rsi,[r15*8+0x0]
2fa8:	00
2fa9:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2fae:	e8 8d 6d 00 00       	call   9d40 <xrealloc>
2fb3:	48 03 5c 24 18       	add    rbx,QWORD PTR [rsp+0x18]
2fb8:	49 89 c7             	mov    r15,rax
2fbb:	48 89 df             	mov    rdi,rbx
2fbe:	e8 ad f2 ff ff       	call   2270 <__gmpz_init@plt>
2fc3:	4d 39 f5             	cmp    r13,r14
2fc6:	0f 8f 3b ff ff ff    	jg     2f07 <mp_factor_insert+0xe7>
2fcc:	e9 60 ff ff ff       	jmp    2f31 <mp_factor_insert+0x111>
2fd1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2fd8:	49 83 c7 01          	add    r15,0x1
2fdc:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
2fe1:	4c 89 fb             	mov    rbx,r15
2fe4:	4c 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],r15
2fe9:	48 c1 e3 04          	shl    rbx,0x4
2fed:	48 89 de             	mov    rsi,rbx
2ff0:	e8 4b 6d 00 00       	call   9d40 <xrealloc>
2ff5:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
2ffa:	4a 8d 34 fd 00 00 00 	lea    rsi,[r15*8+0x0]
3001:	00
3002:	49 89 c6             	mov    r14,rax
3005:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
300a:	e8 31 6d 00 00       	call   9d40 <xrealloc>
300f:	49 8d 7c 1e f0       	lea    rdi,[r14+rbx*1-0x10]
3014:	49 89 c7             	mov    r15,rax
3017:	e8 54 f2 ff ff       	call   2270 <__gmpz_init@plt>
301c:	e9 10 ff ff ff       	jmp    2f31 <mp_factor_insert+0x111>
3021:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3026:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
302d:	00 00 00

0000000000003030 <lbuf_flush>:
3030:	53                   	push   rbx
3031:	48 8b 35 b8 00 21 00 	mov    rsi,QWORD PTR [rip+0x2100b8]        # 2130f0 <lbuf>
3038:	bf 01 00 00 00       	mov    edi,0x1
303d:	48 8b 1d b4 00 21 00 	mov    rbx,QWORD PTR [rip+0x2100b4]        # 2130f8 <lbuf+0x8>
3044:	48 29 f3             	sub    rbx,rsi
3047:	48 89 da             	mov    rdx,rbx
304a:	e8 91 30 00 00       	call   60e0 <full_write>
304f:	48 39 d8             	cmp    rax,rbx
3052:	75 10                	jne    3064 <lbuf_flush+0x34>
3054:	48 8b 05 95 00 21 00 	mov    rax,QWORD PTR [rip+0x210095]        # 2130f0 <lbuf>
305b:	5b                   	pop    rbx
305c:	48 89 05 95 00 21 00 	mov    QWORD PTR [rip+0x210095],rax        # 2130f8 <lbuf+0x8>
3063:	c3                   	ret
3064:	48 8d 35 20 9d 00 00 	lea    rsi,[rip+0x9d20]        # cd8b <_IO_stdin_used+0x34b>
306b:	ba 05 00 00 00       	mov    edx,0x5
3070:	31 ff                	xor    edi,edi
3072:	e8 69 ee ff ff       	call   1ee0 <dcgettext@plt>
3077:	48 89 c3             	mov    rbx,rax
307a:	e8 71 ed ff ff       	call   1df0 <__errno_location@plt>
307f:	8b 30                	mov    esi,DWORD PTR [rax]
3081:	48 8d 15 84 cf 00 00 	lea    rdx,[rip+0xcf84]        # 1000c <primes_diff+0x2ac>
3088:	48 89 d9             	mov    rcx,rbx
308b:	bf 01 00 00 00       	mov    edi,0x1
3090:	31 c0                	xor    eax,eax
3092:	e8 49 f1 ff ff       	call   21e0 <error@plt>
3097:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
309e:	00 00

00000000000030a0 <factor_insert_large>:
30a0:	48 85 f6             	test   rsi,rsi
30a3:	48 89 d0             	mov    rax,rdx
30a6:	74 18                	je     30c0 <factor_insert_large+0x20>
30a8:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
30ad:	75 1e                	jne    30cd <factor_insert_large+0x2d>
30af:	48 89 17             	mov    QWORD PTR [rdi],rdx
30b2:	48 89 77 08          	mov    QWORD PTR [rdi+0x8],rsi
30b6:	c3                   	ret
30b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
30be:	00 00
30c0:	ba 01 00 00 00       	mov    edx,0x1
30c5:	48 89 c6             	mov    rsi,rax
30c8:	e9 33 f6 ff ff       	jmp    2700 <factor_insert_multiplicity>
30cd:	48 8d 0d cc 9e 00 00 	lea    rcx,[rip+0x9ecc]        # cfa0 <__PRETTY_FUNCTION__.8594>
30d4:	48 8d 35 6d 99 00 00 	lea    rsi,[rip+0x996d]        # ca48 <_IO_stdin_used+0x8>
30db:	48 8d 3d b5 9c 00 00 	lea    rdi,[rip+0x9cb5]        # cd97 <_IO_stdin_used+0x357>
30e2:	48 83 ec 08          	sub    rsp,0x8
30e6:	ba 35 02 00 00       	mov    edx,0x235
30eb:	e8 f0 ee ff ff       	call   1fe0 <__assert_fail@plt>

00000000000030f0 <gcd2_odd>:
30f0:	41 f6 c0 01          	test   r8b,0x1
30f4:	0f 84 d4 00 00 00    	je     31ce <gcd2_odd+0xde>
30fa:	48 89 d0             	mov    rax,rdx
30fd:	49 89 f1             	mov    r9,rsi
3100:	48 09 f0             	or     rax,rsi
3103:	75 1b                	jne    3120 <gcd2_odd+0x30>
3105:	e9 b6 00 00 00       	jmp    31c0 <gcd2_odd+0xd0>
310a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3110:	4c 89 c8             	mov    rax,r9
3113:	48 d1 ea             	shr    rdx,1
3116:	49 d1 e9             	shr    r9,1
3119:	48 c1 e0 3f          	shl    rax,0x3f
311d:	48 09 c2             	or     rdx,rax
3120:	f6 c2 01             	test   dl,0x1
3123:	74 eb                	je     3110 <gcd2_odd+0x20>
3125:	0f 1f 00             	nop    DWORD PTR [rax]
3128:	4c 89 c8             	mov    rax,r9
312b:	48 09 c8             	or     rax,rcx
312e:	74 46                	je     3176 <gcd2_odd+0x86>
3130:	49 39 c9             	cmp    r9,rcx
3133:	77 5b                	ja     3190 <gcd2_odd+0xa0>
3135:	0f 94 c0             	sete   al
3138:	4c 39 c2             	cmp    rdx,r8
313b:	76 04                	jbe    3141 <gcd2_odd+0x51>
313d:	84 c0                	test   al,al
313f:	75 4f                	jne    3190 <gcd2_odd+0xa0>
3141:	49 39 c9             	cmp    r9,rcx
3144:	72 09                	jb     314f <gcd2_odd+0x5f>
3146:	4c 39 c2             	cmp    rdx,r8
3149:	73 7c                	jae    31c7 <gcd2_odd+0xd7>
314b:	84 c0                	test   al,al
314d:	74 78                	je     31c7 <gcd2_odd+0xd7>
314f:	49 29 d0             	sub    r8,rdx
3152:	4c 19 c9             	sbb    rcx,r9
3155:	0f 1f 00             	nop    DWORD PTR [rax]
3158:	48 89 c8             	mov    rax,rcx
315b:	49 d1 e8             	shr    r8,1
315e:	48 d1 e9             	shr    rcx,1
3161:	48 c1 e0 3f          	shl    rax,0x3f
3165:	49 09 c0             	or     r8,rax
3168:	41 f6 c0 01          	test   r8b,0x1
316c:	74 ea                	je     3158 <gcd2_odd+0x68>
316e:	4c 89 c8             	mov    rax,r9
3171:	48 09 c8             	or     rax,rcx
3174:	75 ba                	jne    3130 <gcd2_odd+0x40>
3176:	48 c7 07 00 00 00 00 	mov    QWORD PTR [rdi],0x0
317d:	48 89 d6             	mov    rsi,rdx
3180:	4c 89 c7             	mov    rdi,r8
3183:	e9 18 f5 ff ff       	jmp    26a0 <gcd_odd>
3188:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
318f:	00
3190:	4c 29 c2             	sub    rdx,r8
3193:	49 19 c9             	sbb    r9,rcx
3196:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
319d:	00 00 00
31a0:	4c 89 c8             	mov    rax,r9
31a3:	48 d1 ea             	shr    rdx,1
31a6:	49 d1 e9             	shr    r9,1
31a9:	48 c1 e0 3f          	shl    rax,0x3f
31ad:	48 09 c2             	or     rdx,rax
31b0:	f6 c2 01             	test   dl,0x1
31b3:	74 eb                	je     31a0 <gcd2_odd+0xb0>
31b5:	e9 6e ff ff ff       	jmp    3128 <gcd2_odd+0x38>
31ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
31c0:	48 89 0f             	mov    QWORD PTR [rdi],rcx
31c3:	4c 89 c0             	mov    rax,r8
31c6:	c3                   	ret
31c7:	4c 89 0f             	mov    QWORD PTR [rdi],r9
31ca:	48 89 d0             	mov    rax,rdx
31cd:	c3                   	ret
31ce:	48 8d 0d 93 9d 00 00 	lea    rcx,[rip+0x9d93]        # cf68 <__PRETTY_FUNCTION__.8563>
31d5:	48 8d 35 6c 98 00 00 	lea    rsi,[rip+0x986c]        # ca48 <_IO_stdin_used+0x8>
31dc:	48 8d 3d cc 9b 00 00 	lea    rdi,[rip+0x9bcc]        # cdaf <_IO_stdin_used+0x36f>
31e3:	48 83 ec 08          	sub    rsp,0x8
31e7:	ba e3 01 00 00       	mov    edx,0x1e3
31ec:	e8 ef ed ff ff       	call   1fe0 <__assert_fail@plt>
31f1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
31f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
31fd:	00 00 00

0000000000003200 <mod2>:
3200:	48 85 c9             	test   rcx,rcx
3203:	0f 84 7f 00 00 00    	je     3288 <mod2+0x88>
3209:	48 85 f6             	test   rsi,rsi
320c:	48 89 d0             	mov    rax,rdx
320f:	74 6f                	je     3280 <mod2+0x80>
3211:	4c 0f bd d1          	bsr    r10,rcx
3215:	48 0f bd d6          	bsr    rdx,rsi
3219:	41 83 f2 3f          	xor    r10d,0x3f
321d:	83 f2 3f             	xor    edx,0x3f
3220:	4d 89 c1             	mov    r9,r8
3223:	41 29 d2             	sub    r10d,edx
3226:	48 89 ca             	mov    rdx,rcx
3229:	44 89 d1             	mov    ecx,r10d
322c:	48 d3 e2             	shl    rdx,cl
322f:	b9 40 00 00 00       	mov    ecx,0x40
3234:	44 29 d1             	sub    ecx,r10d
3237:	49 d3 e9             	shr    r9,cl
323a:	44 89 d1             	mov    ecx,r10d
323d:	49 09 d1             	or     r9,rdx
3240:	49 d3 e0             	shl    r8,cl
3243:	45 85 d2             	test   r10d,r10d
3246:	7e 32                	jle    327a <mod2+0x7a>
3248:	31 d2                	xor    edx,edx
324a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3250:	49 39 f1             	cmp    r9,rsi
3253:	72 07                	jb     325c <mod2+0x5c>
3255:	75 0b                	jne    3262 <mod2+0x62>
3257:	4c 39 c0             	cmp    rax,r8
325a:	72 06                	jb     3262 <mod2+0x62>
325c:	4c 29 c0             	sub    rax,r8
325f:	4c 19 ce             	sbb    rsi,r9
3262:	4c 89 c9             	mov    rcx,r9
3265:	49 d1 e8             	shr    r8,1
3268:	83 c2 01             	add    edx,0x1
326b:	48 c1 e1 3f          	shl    rcx,0x3f
326f:	49 d1 e9             	shr    r9,1
3272:	49 09 c8             	or     r8,rcx
3275:	41 39 d2             	cmp    r10d,edx
3278:	75 d6                	jne    3250 <mod2+0x50>
327a:	48 89 37             	mov    QWORD PTR [rdi],rsi
327d:	c3                   	ret
327e:	66 90                	xchg   ax,ax
3280:	48 c7 07 00 00 00 00 	mov    QWORD PTR [rdi],0x0
3287:	c3                   	ret
3288:	48 8d 0d d1 9c 00 00 	lea    rcx,[rip+0x9cd1]        # cf60 <__PRETTY_FUNCTION__.8537>
328f:	48 8d 35 b2 97 00 00 	lea    rsi,[rip+0x97b2]        # ca48 <_IO_stdin_used+0x8>
3296:	48 8d 3d 19 9b 00 00 	lea    rdi,[rip+0x9b19]        # cdb6 <_IO_stdin_used+0x376>
329d:	48 83 ec 08          	sub    rsp,0x8
32a1:	ba a3 01 00 00       	mov    edx,0x1a3
32a6:	e8 35 ed ff ff       	call   1fe0 <__assert_fail@plt>
32ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000032b0 <print_uintmaxes>:
32b0:	48 85 ff             	test   rdi,rdi
32b3:	49 89 f0             	mov    r8,rsi
32b6:	75 10                	jne    32c8 <print_uintmaxes+0x18>
32b8:	31 f6                	xor    esi,esi
32ba:	4c 89 c7             	mov    rdi,r8
32bd:	e9 be fa ff ff       	jmp    2d80 <lbuf_putint>
32c2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
32c8:	48 89 fa             	mov    rdx,rdi
32cb:	48 b9 53 5a 9b a0 2f 	movabs rcx,0x44b82fa09b5a53
32d2:	b8 44 00
32d5:	48 83 ec 18          	sub    rsp,0x18
32d9:	48 c1 ea 09          	shr    rdx,0x9
32dd:	41 b9 40 00 00 00    	mov    r9d,0x40
32e3:	31 f6                	xor    esi,esi
32e5:	48 89 d0             	mov    rax,rdx
32e8:	48 f7 e1             	mul    rcx
32eb:	b9 00 ca 9a 3b       	mov    ecx,0x3b9aca00
32f0:	48 c1 ea 0b          	shr    rdx,0xb
32f4:	48 69 c2 00 ca 9a 3b 	imul   rax,rdx,0x3b9aca00
32fb:	48 29 c7             	sub    rdi,rax
32fe:	31 c0                	xor    eax,eax
3300:	49 89 ca             	mov    r10,rcx
3303:	48 d1 e8             	shr    rax,1
3306:	48 d1 e9             	shr    rcx,1
3309:	49 c1 e2 3f          	shl    r10,0x3f
330d:	48 01 f6             	add    rsi,rsi
3310:	4c 09 d0             	or     rax,r10
3313:	48 39 f9             	cmp    rcx,rdi
3316:	72 07                	jb     331f <print_uintmaxes+0x6f>
3318:	75 0f                	jne    3329 <print_uintmaxes+0x79>
331a:	4c 39 c0             	cmp    rax,r8
331d:	77 0a                	ja     3329 <print_uintmaxes+0x79>
331f:	48 83 c6 01          	add    rsi,0x1
3323:	49 29 c0             	sub    r8,rax
3326:	48 19 cf             	sbb    rdi,rcx
3329:	41 83 e9 01          	sub    r9d,0x1
332d:	75 d1                	jne    3300 <print_uintmaxes+0x50>
332f:	48 89 d7             	mov    rdi,rdx
3332:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
3337:	e8 74 ff ff ff       	call   32b0 <print_uintmaxes>
333c:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
3341:	be 09 00 00 00       	mov    esi,0x9
3346:	48 83 c4 18          	add    rsp,0x18
334a:	4c 89 c7             	mov    rdi,r8
334d:	e9 2e fa ff ff       	jmp    2d80 <lbuf_putint>
3352:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3356:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
335d:	00 00 00

0000000000003360 <lbuf_putc>:
3360:	55                   	push   rbp
3361:	53                   	push   rbx
3362:	48 83 ec 08          	sub    rsp,0x8
3366:	48 8b 05 8b fd 20 00 	mov    rax,QWORD PTR [rip+0x20fd8b]        # 2130f8 <lbuf+0x8>
336d:	40 80 ff 0a          	cmp    dil,0xa
3371:	48 8d 68 01          	lea    rbp,[rax+0x1]
3375:	40 88 38             	mov    BYTE PTR [rax],dil
3378:	48 89 2d 79 fd 20 00 	mov    QWORD PTR [rip+0x20fd79],rbp        # 2130f8 <lbuf+0x8>
337f:	74 0f                	je     3390 <lbuf_putc+0x30>
3381:	48 83 c4 08          	add    rsp,0x8
3385:	5b                   	pop    rbx
3386:	5d                   	pop    rbp
3387:	c3                   	ret
3388:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
338f:	00
3390:	8b 05 7a fc 20 00    	mov    eax,DWORD PTR [rip+0x20fc7a]        # 213010 <line_buffered.9118>
3396:	48 8b 1d 53 fd 20 00 	mov    rbx,QWORD PTR [rip+0x20fd53]        # 2130f0 <lbuf>
339d:	83 f8 ff             	cmp    eax,0xffffffff
33a0:	74 7e                	je     3420 <lbuf_putc+0xc0>
33a2:	85 c0                	test   eax,eax
33a4:	75 6a                	jne    3410 <lbuf_putc+0xb0>
33a6:	48 89 e8             	mov    rax,rbp
33a9:	48 29 d8             	sub    rax,rbx
33ac:	48 81 c3 00 02 00 00 	add    rbx,0x200
33b3:	48 3d ff 01 00 00    	cmp    rax,0x1ff
33b9:	76 c6                	jbe    3381 <lbuf_putc+0x21>
33bb:	80 7b ff 0a          	cmp    BYTE PTR [rbx-0x1],0xa
33bf:	48 8d 43 ff          	lea    rax,[rbx-0x1]
33c3:	74 10                	je     33d5 <lbuf_putc+0x75>
33c5:	0f 1f 00             	nop    DWORD PTR [rax]
33c8:	48 89 c3             	mov    rbx,rax
33cb:	80 7b ff 0a          	cmp    BYTE PTR [rbx-0x1],0xa
33cf:	48 8d 43 ff          	lea    rax,[rbx-0x1]
33d3:	75 f3                	jne    33c8 <lbuf_putc+0x68>
33d5:	48 89 1d 1c fd 20 00 	mov    QWORD PTR [rip+0x20fd1c],rbx        # 2130f8 <lbuf+0x8>
33dc:	48 29 dd             	sub    rbp,rbx
33df:	e8 4c fc ff ff       	call   3030 <lbuf_flush>
33e4:	48 8b 0d 05 fd 20 00 	mov    rcx,QWORD PTR [rip+0x20fd05]        # 2130f0 <lbuf>
33eb:	48 89 ea             	mov    rdx,rbp
33ee:	48 89 de             	mov    rsi,rbx
33f1:	48 89 cf             	mov    rdi,rcx
33f4:	e8 a7 ec ff ff       	call   20a0 <memcpy@plt>
33f9:	48 01 c5             	add    rbp,rax
33fc:	48 89 2d f5 fc 20 00 	mov    QWORD PTR [rip+0x20fcf5],rbp        # 2130f8 <lbuf+0x8>
3403:	48 83 c4 08          	add    rsp,0x8
3407:	5b                   	pop    rbx
3408:	5d                   	pop    rbp
3409:	c3                   	ret
340a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3410:	48 83 c4 08          	add    rsp,0x8
3414:	5b                   	pop    rbx
3415:	5d                   	pop    rbp
3416:	e9 15 fc ff ff       	jmp    3030 <lbuf_flush>
341b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3420:	31 ff                	xor    edi,edi
3422:	e8 39 ea ff ff       	call   1e60 <isatty@plt>
3427:	89 05 e3 fb 20 00    	mov    DWORD PTR [rip+0x20fbe3],eax        # 213010 <line_buffered.9118>
342d:	e9 70 ff ff ff       	jmp    33a2 <lbuf_putc+0x42>
3432:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3436:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
343d:	00 00 00

0000000000003440 <mp_millerrabin>:
3440:	41 56                	push   r14
3442:	41 55                	push   r13
3444:	49 89 f5             	mov    r13,rsi
3447:	41 54                	push   r12
3449:	55                   	push   rbp
344a:	48 89 d6             	mov    rsi,rdx
344d:	53                   	push   rbx
344e:	48 89 cb             	mov    rbx,rcx
3451:	4c 89 c2             	mov    rdx,r8
3454:	48 89 f9             	mov    rcx,rdi
3457:	49 89 fc             	mov    r12,rdi
345a:	48 89 df             	mov    rdi,rbx
345d:	4d 89 ce             	mov    r14,r9
3460:	e8 ab ea ff ff       	call   1f10 <__gmpz_powm@plt>
3465:	be 01 00 00 00       	mov    esi,0x1
346a:	48 89 df             	mov    rdi,rbx
346d:	e8 ee ed ff ff       	call   2260 <__gmpz_cmp_ui@plt>
3472:	85 c0                	test   eax,eax
3474:	74 5e                	je     34d4 <mp_millerrabin+0x94>
3476:	4c 89 ee             	mov    rsi,r13
3479:	48 89 df             	mov    rdi,rbx
347c:	e8 3f ed ff ff       	call   21c0 <__gmpz_cmp@plt>
3481:	85 c0                	test   eax,eax
3483:	74 4f                	je     34d4 <mp_millerrabin+0x94>
3485:	49 83 fe 01          	cmp    r14,0x1
3489:	bd 01 00 00 00       	mov    ebp,0x1
348e:	77 22                	ja     34b2 <mp_millerrabin+0x72>
3490:	eb 56                	jmp    34e8 <mp_millerrabin+0xa8>
3492:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3498:	be 01 00 00 00       	mov    esi,0x1
349d:	48 89 df             	mov    rdi,rbx
34a0:	e8 bb ed ff ff       	call   2260 <__gmpz_cmp_ui@plt>
34a5:	85 c0                	test   eax,eax
34a7:	74 3f                	je     34e8 <mp_millerrabin+0xa8>
34a9:	48 83 c5 01          	add    rbp,0x1
34ad:	49 39 ee             	cmp    r14,rbp
34b0:	74 36                	je     34e8 <mp_millerrabin+0xa8>
34b2:	4c 89 e1             	mov    rcx,r12
34b5:	ba 02 00 00 00       	mov    edx,0x2
34ba:	48 89 de             	mov    rsi,rbx
34bd:	48 89 df             	mov    rdi,rbx
34c0:	e8 cb ed ff ff       	call   2290 <__gmpz_powm_ui@plt>
34c5:	4c 89 ee             	mov    rsi,r13
34c8:	48 89 df             	mov    rdi,rbx
34cb:	e8 f0 ec ff ff       	call   21c0 <__gmpz_cmp@plt>
34d0:	85 c0                	test   eax,eax
34d2:	75 c4                	jne    3498 <mp_millerrabin+0x58>
34d4:	5b                   	pop    rbx
34d5:	b8 01 00 00 00       	mov    eax,0x1
34da:	5d                   	pop    rbp
34db:	41 5c                	pop    r12
34dd:	41 5d                	pop    r13
34df:	41 5e                	pop    r14
34e1:	c3                   	ret
34e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
34e8:	5b                   	pop    rbx
34e9:	31 c0                	xor    eax,eax
34eb:	5d                   	pop    rbp
34ec:	41 5c                	pop    r12
34ee:	41 5d                	pop    r13
34f0:	41 5e                	pop    r14
34f2:	c3                   	ret
34f3:	0f 1f 00             	nop    DWORD PTR [rax]
34f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
34fd:	00 00 00

0000000000003500 <mp_factor>:
3500:	41 57                	push   r15
3502:	41 56                	push   r14
3504:	41 55                	push   r13
3506:	41 54                	push   r12
3508:	55                   	push   rbp
3509:	53                   	push   rbx
350a:	48 83 ec 48          	sub    rsp,0x48
350e:	48 c7 06 00 00 00 00 	mov    QWORD PTR [rsi],0x0
3515:	48 c7 46 08 00 00 00 	mov    QWORD PTR [rsi+0x8],0x0
351c:	00
351d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
3524:	00 00
3526:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
352b:	31 c0                	xor    eax,eax
352d:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
3530:	48 c7 46 10 00 00 00 	mov    QWORD PTR [rsi+0x10],0x0
3537:	00
3538:	85 c0                	test   eax,eax
353a:	75 24                	jne    3560 <mp_factor+0x60>
353c:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
3541:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
3548:	00 00
354a:	0f 85 c2 01 00 00    	jne    3712 <mp_factor+0x212>
3550:	48 83 c4 48          	add    rsp,0x48
3554:	5b                   	pop    rbx
3555:	5d                   	pop    rbp
3556:	41 5c                	pop    r12
3558:	41 5d                	pop    r13
355a:	41 5e                	pop    r14
355c:	41 5f                	pop    r15
355e:	c3                   	ret
355f:	90                   	nop
3560:	80 3d 99 fb 20 00 00 	cmp    BYTE PTR [rip+0x20fb99],0x0        # 213100 <dev_debug>
3567:	49 89 fc             	mov    r12,rdi
356a:	49 89 f5             	mov    r13,rsi
356d:	0f 85 3d 01 00 00    	jne    36b0 <mp_factor+0x1b0>
3573:	48 8d 7c 24 10       	lea    rdi,[rsp+0x10]
3578:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
357d:	e8 ee ec ff ff       	call   2270 <__gmpz_init@plt>
3582:	31 f6                	xor    esi,esi
3584:	4c 89 e7             	mov    rdi,r12
3587:	e8 34 e8 ff ff       	call   1dc0 <__gmpz_scan1@plt>
358c:	4c 89 e6             	mov    rsi,r12
358f:	48 89 c3             	mov    rbx,rax
3592:	48 89 c2             	mov    rdx,rax
3595:	4c 89 e7             	mov    rdi,r12
3598:	e8 73 ea ff ff       	call   2010 <__gmpz_fdiv_q_2exp@plt>
359d:	48 85 db             	test   rbx,rbx
35a0:	74 34                	je     35d6 <mp_factor+0xd6>
35a2:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
35a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
35ae:	00 00
35b0:	be 02 00 00 00       	mov    esi,0x2
35b5:	48 89 ef             	mov    rdi,rbp
35b8:	e8 f3 eb ff ff       	call   21b0 <__gmpz_init_set_ui@plt>
35bd:	48 89 ee             	mov    rsi,rbp
35c0:	4c 89 ef             	mov    rdi,r13
35c3:	e8 58 f8 ff ff       	call   2e20 <mp_factor_insert>
35c8:	48 89 ef             	mov    rdi,rbp
35cb:	e8 40 eb ff ff       	call   2110 <__gmpz_clear@plt>
35d0:	48 83 eb 01          	sub    rbx,0x1
35d4:	75 da                	jne    35b0 <mp_factor+0xb0>
35d6:	bd 01 00 00 00       	mov    ebp,0x1
35db:	bb 03 00 00 00       	mov    ebx,0x3
35e0:	4c 8d 7c 24 20       	lea    r15,[rsp+0x20]
35e5:	eb 39                	jmp    3620 <mp_factor+0x120>
35e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
35ee:	00 00
35f0:	48 8d 05 69 c7 00 00 	lea    rax,[rip+0xc769]        # fd60 <primes_diff>
35f7:	4c 89 e7             	mov    rdi,r12
35fa:	44 8d 75 01          	lea    r14d,[rbp+0x1]
35fe:	0f b6 04 28          	movzx  eax,BYTE PTR [rax+rbp*1]
3602:	48 01 c3             	add    rbx,rax
3605:	48 89 de             	mov    rsi,rbx
3608:	48 0f af f3          	imul   rsi,rbx
360c:	e8 4f ec ff ff       	call   2260 <__gmpz_cmp_ui@plt>
3611:	85 c0                	test   eax,eax
3613:	78 4e                	js     3663 <mp_factor+0x163>
3615:	44 89 f5             	mov    ebp,r14d
3618:	81 fd 9d 02 00 00    	cmp    ebp,0x29d
361e:	74 43                	je     3663 <mp_factor+0x163>
3620:	48 89 de             	mov    rsi,rbx
3623:	4c 89 e7             	mov    rdi,r12
3626:	e8 95 ea ff ff       	call   20c0 <__gmpz_divisible_ui_p@plt>
362b:	85 c0                	test   eax,eax
362d:	74 c1                	je     35f0 <mp_factor+0xf0>
362f:	48 89 da             	mov    rdx,rbx
3632:	4c 89 e6             	mov    rsi,r12
3635:	4c 89 e7             	mov    rdi,r12
3638:	e8 83 e9 ff ff       	call   1fc0 <__gmpz_tdiv_q_ui@plt>
363d:	48 89 de             	mov    rsi,rbx
3640:	4c 89 ff             	mov    rdi,r15
3643:	e8 68 eb ff ff       	call   21b0 <__gmpz_init_set_ui@plt>
3648:	4c 89 fe             	mov    rsi,r15
364b:	4c 89 ef             	mov    rdi,r13
364e:	e8 cd f7 ff ff       	call   2e20 <mp_factor_insert>
3653:	4c 89 ff             	mov    rdi,r15
3656:	e8 b5 ea ff ff       	call   2110 <__gmpz_clear@plt>
365b:	81 fd 9d 02 00 00    	cmp    ebp,0x29d
3661:	75 bd                	jne    3620 <mp_factor+0x120>
3663:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
3668:	e8 a3 ea ff ff       	call   2110 <__gmpz_clear@plt>
366d:	be 01 00 00 00       	mov    esi,0x1
3672:	4c 89 e7             	mov    rdi,r12
3675:	e8 e6 eb ff ff       	call   2260 <__gmpz_cmp_ui@plt>
367a:	85 c0                	test   eax,eax
367c:	0f 84 ba fe ff ff    	je     353c <mp_factor+0x3c>
3682:	80 3d 77 fa 20 00 00 	cmp    BYTE PTR [rip+0x20fa77],0x0        # 213100 <dev_debug>
3689:	75 65                	jne    36f0 <mp_factor+0x1f0>
368b:	4c 89 e7             	mov    rdi,r12
368e:	e8 8d 00 00 00       	call   3720 <mp_prime_p>
3693:	84 c0                	test   al,al
3695:	75 41                	jne    36d8 <mp_factor+0x1d8>
3697:	4c 89 ea             	mov    rdx,r13
369a:	be 01 00 00 00       	mov    esi,0x1
369f:	4c 89 e7             	mov    rdi,r12
36a2:	e8 c9 02 00 00       	call   3970 <mp_factor_using_pollard_rho>
36a7:	e9 90 fe ff ff       	jmp    353c <mp_factor+0x3c>
36ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
36b0:	48 8b 0d 29 fa 20 00 	mov    rcx,QWORD PTR [rip+0x20fa29]        # 2130e0 <stderr@@GLIBC_2.2.5>
36b7:	48 8d 3d 00 97 00 00 	lea    rdi,[rip+0x9700]        # cdbe <_IO_stdin_used+0x37e>
36be:	ba 11 00 00 00       	mov    edx,0x11
36c3:	be 01 00 00 00       	mov    esi,0x1
36c8:	e8 73 eb ff ff       	call   2240 <fwrite@plt>
36cd:	e9 a1 fe ff ff       	jmp    3573 <mp_factor+0x73>
36d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
36d8:	4c 89 e6             	mov    rsi,r12
36db:	4c 89 ef             	mov    rdi,r13
36de:	e8 3d f7 ff ff       	call   2e20 <mp_factor_insert>
36e3:	e9 54 fe ff ff       	jmp    353c <mp_factor+0x3c>
36e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
36ef:	00
36f0:	48 8b 0d e9 f9 20 00 	mov    rcx,QWORD PTR [rip+0x20f9e9]        # 2130e0 <stderr@@GLIBC_2.2.5>
36f7:	48 8d 3d d2 96 00 00 	lea    rdi,[rip+0x96d2]        # cdd0 <_IO_stdin_used+0x390>
36fe:	ba 13 00 00 00       	mov    edx,0x13
3703:	be 01 00 00 00       	mov    esi,0x1
3708:	e8 33 eb ff ff       	call   2240 <fwrite@plt>
370d:	e9 79 ff ff ff       	jmp    368b <mp_factor+0x18b>
3712:	e8 09 e8 ff ff       	call   1f20 <__stack_chk_fail@plt>
3717:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
371e:	00 00

0000000000003720 <mp_prime_p>:
3720:	41 57                	push   r15
3722:	41 56                	push   r14
3724:	be 01 00 00 00       	mov    esi,0x1
3729:	41 55                	push   r13
372b:	41 54                	push   r12
372d:	49 89 fc             	mov    r12,rdi
3730:	55                   	push   rbp
3731:	53                   	push   rbx
3732:	48 81 ec 98 00 00 00 	sub    rsp,0x98
3739:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
3740:	00 00
3742:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
3749:	00
374a:	31 c0                	xor    eax,eax
374c:	e8 0f eb ff ff       	call   2260 <__gmpz_cmp_ui@plt>
3751:	85 c0                	test   eax,eax
3753:	0f 8e ff 01 00 00    	jle    3958 <mp_prime_p+0x238>
3759:	be 79 ed 7d 01       	mov    esi,0x17ded79
375e:	4c 89 e7             	mov    rdi,r12
3761:	e8 fa ea ff ff       	call   2260 <__gmpz_cmp_ui@plt>
3766:	85 c0                	test   eax,eax
3768:	0f 88 82 01 00 00    	js     38f0 <mp_prime_p+0x1d0>
376e:	4c 8d 6c 24 60       	lea    r13,[rsp+0x60]
3773:	4c 8d 74 24 40       	lea    r14,[rsp+0x40]
3778:	48 8d 6c 24 50       	lea    rbp,[rsp+0x50]
377d:	48 8d 5c 24 70       	lea    rbx,[rsp+0x70]
3782:	45 31 c0             	xor    r8d,r8d
3785:	31 c0                	xor    eax,eax
3787:	4c 89 ea             	mov    rdx,r13
378a:	48 89 ee             	mov    rsi,rbp
378d:	4c 89 f7             	mov    rdi,r14
3790:	48 89 d9             	mov    rcx,rbx
3793:	4c 89 34 24          	mov    QWORD PTR [rsp],r14
3797:	e8 c4 e7 ff ff       	call   1f60 <__gmpz_inits@plt>
379c:	ba 01 00 00 00       	mov    edx,0x1
37a1:	4c 89 e6             	mov    rsi,r12
37a4:	4c 89 ef             	mov    rdi,r13
37a7:	e8 94 e6 ff ff       	call   1e40 <__gmpz_sub_ui@plt>
37ac:	31 f6                	xor    esi,esi
37ae:	4c 89 ef             	mov    rdi,r13
37b1:	e8 0a e6 ff ff       	call   1dc0 <__gmpz_scan1@plt>
37b6:	4c 89 ee             	mov    rsi,r13
37b9:	48 89 c2             	mov    rdx,rax
37bc:	4c 89 f7             	mov    rdi,r14
37bf:	49 89 c7             	mov    r15,rax
37c2:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
37c7:	e8 64 e9 ff ff       	call   2130 <__gmpz_tdiv_q_2exp@plt>
37cc:	be 02 00 00 00       	mov    esi,0x2
37d1:	48 89 ef             	mov    rdi,rbp
37d4:	e8 97 e6 ff ff       	call   1e70 <__gmpz_set_ui@plt>
37d9:	4d 89 f9             	mov    r9,r15
37dc:	4d 89 f0             	mov    r8,r14
37df:	48 89 d9             	mov    rcx,rbx
37e2:	48 89 ea             	mov    rdx,rbp
37e5:	4c 89 ee             	mov    rsi,r13
37e8:	4c 89 e7             	mov    rdi,r12
37eb:	e8 50 fc ff ff       	call   3440 <mp_millerrabin>
37f0:	84 c0                	test   al,al
37f2:	88 44 24 17          	mov    BYTE PTR [rsp+0x17],al
37f6:	0f 84 3e 01 00 00    	je     393a <mp_prime_p+0x21a>
37fc:	4c 89 ee             	mov    rsi,r13
37ff:	48 89 df             	mov    rdi,rbx
3802:	4c 8d 35 57 c5 00 00 	lea    r14,[rip+0xc557]        # fd60 <primes_diff>
3809:	e8 72 e7 ff ff       	call   1f80 <__gmpz_set@plt>
380e:	48 8d 74 24 20       	lea    rsi,[rsp+0x20]
3813:	48 89 df             	mov    rdi,rbx
3816:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
381b:	e8 e0 fc ff ff       	call   3500 <mp_factor>
3820:	48 83 7c 24 30 00    	cmp    QWORD PTR [rsp+0x30],0x0
3826:	0f 84 04 01 00 00    	je     3930 <mp_prime_p+0x210>
382c:	45 31 ff             	xor    r15d,r15d
382f:	4c 89 fa             	mov    rdx,r15
3832:	4c 89 ee             	mov    rsi,r13
3835:	48 89 df             	mov    rdi,rbx
3838:	48 c1 e2 04          	shl    rdx,0x4
383c:	48 03 54 24 20       	add    rdx,QWORD PTR [rsp+0x20]
3841:	49 83 c7 01          	add    r15,0x1
3845:	e8 f6 e6 ff ff       	call   1f40 <__gmpz_divexact@plt>
384a:	4c 89 e1             	mov    rcx,r12
384d:	48 89 da             	mov    rdx,rbx
3850:	48 89 ee             	mov    rsi,rbp
3853:	48 89 df             	mov    rdi,rbx
3856:	e8 b5 e6 ff ff       	call   1f10 <__gmpz_powm@plt>
385b:	be 01 00 00 00       	mov    esi,0x1
3860:	48 89 df             	mov    rdi,rbx
3863:	e8 f8 e9 ff ff       	call   2260 <__gmpz_cmp_ui@plt>
3868:	4c 3b 7c 24 30       	cmp    r15,QWORD PTR [rsp+0x30]
386d:	0f 83 ad 00 00 00    	jae    3920 <mp_prime_p+0x200>
3873:	85 c0                	test   eax,eax
3875:	75 b8                	jne    382f <mp_prime_p+0x10f>
3877:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
387e:	00 00
3880:	41 0f b6 16          	movzx  edx,BYTE PTR [r14]
3884:	48 89 ee             	mov    rsi,rbp
3887:	48 89 ef             	mov    rdi,rbp
388a:	e8 01 e8 ff ff       	call   2090 <__gmpz_add_ui@plt>
388f:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
3894:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
3898:	48 89 d9             	mov    rcx,rbx
389b:	48 89 ea             	mov    rdx,rbp
389e:	4c 89 ee             	mov    rsi,r13
38a1:	4c 89 e7             	mov    rdi,r12
38a4:	e8 97 fb ff ff       	call   3440 <mp_millerrabin>
38a9:	84 c0                	test   al,al
38ab:	0f 84 af 00 00 00    	je     3960 <mp_prime_p+0x240>
38b1:	48 8d 05 44 c7 00 00 	lea    rax,[rip+0xc744]        # fffc <primes_diff+0x29c>
38b8:	49 83 c6 01          	add    r14,0x1
38bc:	49 39 c6             	cmp    r14,rax
38bf:	0f 85 5b ff ff ff    	jne    3820 <mp_prime_p+0x100>
38c5:	48 8d 35 fc 91 00 00 	lea    rsi,[rip+0x91fc]        # cac8 <_IO_stdin_used+0x88>
38cc:	ba 05 00 00 00       	mov    edx,0x5
38d1:	31 ff                	xor    edi,edi
38d3:	e8 08 e6 ff ff       	call   1ee0 <dcgettext@plt>
38d8:	31 f6                	xor    esi,esi
38da:	48 89 c2             	mov    rdx,rax
38dd:	31 ff                	xor    edi,edi
38df:	31 c0                	xor    eax,eax
38e1:	e8 fa e8 ff ff       	call   21e0 <error@plt>
38e6:	e8 f5 e4 ff ff       	call   1de0 <abort@plt>
38eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
38f0:	c6 44 24 17 01       	mov    BYTE PTR [rsp+0x17],0x1
38f5:	48 8b 8c 24 88 00 00 	mov    rcx,QWORD PTR [rsp+0x88]
38fc:	00
38fd:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
3904:	00 00
3906:	0f b6 44 24 17       	movzx  eax,BYTE PTR [rsp+0x17]
390b:	75 5a                	jne    3967 <mp_prime_p+0x247>
390d:	48 81 c4 98 00 00 00 	add    rsp,0x98
3914:	5b                   	pop    rbx
3915:	5d                   	pop    rbp
3916:	41 5c                	pop    r12
3918:	41 5d                	pop    r13
391a:	41 5e                	pop    r14
391c:	41 5f                	pop    r15
391e:	c3                   	ret
391f:	90                   	nop
3920:	85 c0                	test   eax,eax
3922:	0f 84 58 ff ff ff    	je     3880 <mp_prime_p+0x160>
3928:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
392f:	00
3930:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
3935:	e8 d6 ef ff ff       	call   2910 <mp_factor_clear>
393a:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
393e:	45 31 c0             	xor    r8d,r8d
3941:	48 89 d9             	mov    rcx,rbx
3944:	4c 89 ea             	mov    rdx,r13
3947:	48 89 ee             	mov    rsi,rbp
394a:	31 c0                	xor    eax,eax
394c:	e8 ff e4 ff ff       	call   1e50 <__gmpz_clears@plt>
3951:	eb a2                	jmp    38f5 <mp_prime_p+0x1d5>
3953:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3958:	c6 44 24 17 00       	mov    BYTE PTR [rsp+0x17],0x0
395d:	eb 96                	jmp    38f5 <mp_prime_p+0x1d5>
395f:	90                   	nop
3960:	c6 44 24 17 00       	mov    BYTE PTR [rsp+0x17],0x0
3965:	eb c9                	jmp    3930 <mp_prime_p+0x210>
3967:	e8 b4 e5 ff ff       	call   1f20 <__stack_chk_fail@plt>
396c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003970 <mp_factor_using_pollard_rho>:
3970:	41 57                	push   r15
3972:	41 56                	push   r14
3974:	41 55                	push   r13
3976:	41 54                	push   r12
3978:	49 89 fd             	mov    r13,rdi
397b:	55                   	push   rbp
397c:	53                   	push   rbx
397d:	48 81 ec c8 00 00 00 	sub    rsp,0xc8
3984:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
398b:	00 00
398d:	48 89 84 24 b8 00 00 	mov    QWORD PTR [rsp+0xb8],rax
3994:	00
3995:	31 c0                	xor    eax,eax
3997:	80 3d 62 f7 20 00 00 	cmp    BYTE PTR [rip+0x20f762],0x0        # 213100 <dev_debug>
399e:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
39a3:	48 89 54 24 40       	mov    QWORD PTR [rsp+0x40],rdx
39a8:	0f 85 92 03 00 00    	jne    3d40 <mp_factor_using_pollard_rho+0x3d0>
39ae:	4c 8d bc 24 a0 00 00 	lea    r15,[rsp+0xa0]
39b5:	00
39b6:	48 8d ac 24 90 00 00 	lea    rbp,[rsp+0x90]
39bd:	00
39be:	31 d2                	xor    edx,edx
39c0:	31 c0                	xor    eax,eax
39c2:	48 8d 5c 24 50       	lea    rbx,[rsp+0x50]
39c7:	4c 8d b4 24 80 00 00 	lea    r14,[rsp+0x80]
39ce:	00
39cf:	4c 89 fe             	mov    rsi,r15
39d2:	48 89 ef             	mov    rdi,rbp
39d5:	41 bc 01 00 00 00    	mov    r12d,0x1
39db:	e8 80 e5 ff ff       	call   1f60 <__gmpz_inits@plt>
39e0:	48 8d 44 24 70       	lea    rax,[rsp+0x70]
39e5:	be 02 00 00 00       	mov    esi,0x2
39ea:	48 89 c7             	mov    rdi,rax
39ed:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
39f2:	e8 89 e6 ff ff       	call   2080 <__gmpz_init_set_si@plt>
39f7:	be 02 00 00 00       	mov    esi,0x2
39fc:	48 89 df             	mov    rdi,rbx
39ff:	e8 7c e6 ff ff       	call   2080 <__gmpz_init_set_si@plt>
3a04:	48 8d 44 24 60       	lea    rax,[rsp+0x60]
3a09:	be 02 00 00 00       	mov    esi,0x2
3a0e:	48 89 c7             	mov    rdi,rax
3a11:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
3a16:	e8 65 e6 ff ff       	call   2080 <__gmpz_init_set_si@plt>
3a1b:	be 01 00 00 00       	mov    esi,0x1
3a20:	4c 89 f7             	mov    rdi,r14
3a23:	e8 88 e7 ff ff       	call   21b0 <__gmpz_init_set_ui@plt>
3a28:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
3a2d:	48 c7 44 24 20 01 00 	mov    QWORD PTR [rsp+0x20],0x1
3a34:	00 00
3a36:	48 83 c0 01          	add    rax,0x1
3a3a:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3a3f:	be 01 00 00 00       	mov    esi,0x1
3a44:	4c 89 ef             	mov    rdi,r13
3a47:	e8 14 e8 ff ff       	call   2260 <__gmpz_cmp_ui@plt>
3a4c:	85 c0                	test   eax,eax
3a4e:	75 12                	jne    3a62 <mp_factor_using_pollard_rho+0xf2>
3a50:	e9 7f 02 00 00       	jmp    3cd4 <mp_factor_using_pollard_rho+0x364>
3a55:	0f 1f 00             	nop    DWORD PTR [rax]
3a58:	49 83 ec 01          	sub    r12,0x1
3a5c:	0f 84 9e 00 00 00    	je     3b00 <mp_factor_using_pollard_rho+0x190>
3a62:	48 89 da             	mov    rdx,rbx
3a65:	48 89 de             	mov    rsi,rbx
3a68:	48 89 ef             	mov    rdi,rbp
3a6b:	e8 20 e5 ff ff       	call   1f90 <__gmpz_mul@plt>
3a70:	4c 89 ea             	mov    rdx,r13
3a73:	48 89 ee             	mov    rsi,rbp
3a76:	48 89 df             	mov    rdi,rbx
3a79:	e8 12 e7 ff ff       	call   2190 <__gmpz_mod@plt>
3a7e:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
3a83:	48 89 de             	mov    rsi,rbx
3a86:	48 89 df             	mov    rdi,rbx
3a89:	e8 02 e6 ff ff       	call   2090 <__gmpz_add_ui@plt>
3a8e:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
3a93:	48 89 da             	mov    rdx,rbx
3a96:	48 89 ef             	mov    rdi,rbp
3a99:	e8 02 e4 ff ff       	call   1ea0 <__gmpz_sub@plt>
3a9e:	48 89 ea             	mov    rdx,rbp
3aa1:	4c 89 f6             	mov    rsi,r14
3aa4:	4c 89 ff             	mov    rdi,r15
3aa7:	e8 e4 e4 ff ff       	call   1f90 <__gmpz_mul@plt>
3aac:	4c 89 ea             	mov    rdx,r13
3aaf:	4c 89 fe             	mov    rsi,r15
3ab2:	4c 89 f7             	mov    rdi,r14
3ab5:	e8 d6 e6 ff ff       	call   2190 <__gmpz_mod@plt>
3aba:	4c 89 e0             	mov    rax,r12
3abd:	83 e0 1f             	and    eax,0x1f
3ac0:	48 83 f8 01          	cmp    rax,0x1
3ac4:	75 92                	jne    3a58 <mp_factor_using_pollard_rho+0xe8>
3ac6:	4c 89 ea             	mov    rdx,r13
3ac9:	4c 89 f6             	mov    rsi,r14
3acc:	48 89 ef             	mov    rdi,rbp
3acf:	e8 2c e7 ff ff       	call   2200 <__gmpz_gcd@plt>
3ad4:	be 01 00 00 00       	mov    esi,0x1
3ad9:	48 89 ef             	mov    rdi,rbp
3adc:	e8 7f e7 ff ff       	call   2260 <__gmpz_cmp_ui@plt>
3ae1:	85 c0                	test   eax,eax
3ae3:	0f 85 b7 00 00 00    	jne    3ba0 <mp_factor_using_pollard_rho+0x230>
3ae9:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
3aee:	48 89 de             	mov    rsi,rbx
3af1:	e8 8a e4 ff ff       	call   1f80 <__gmpz_set@plt>
3af6:	49 83 ec 01          	sub    r12,0x1
3afa:	0f 85 62 ff ff ff    	jne    3a62 <mp_factor_using_pollard_rho+0xf2>
3b00:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
3b05:	48 89 de             	mov    rsi,rbx
3b08:	e8 73 e4 ff ff       	call   1f80 <__gmpz_set@plt>
3b0d:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
3b12:	48 8d 0c 00          	lea    rcx,[rax+rax*1]
3b16:	48 85 c0             	test   rax,rax
3b19:	48 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],rcx
3b1e:	74 55                	je     3b75 <mp_factor_using_pollard_rho+0x205>
3b20:	4c 89 74 24 30       	mov    QWORD PTR [rsp+0x30],r14
3b25:	4d 89 e6             	mov    r14,r12
3b28:	4c 8b 64 24 10       	mov    r12,QWORD PTR [rsp+0x10]
3b2d:	4c 89 7c 24 38       	mov    QWORD PTR [rsp+0x38],r15
3b32:	49 89 c7             	mov    r15,rax
3b35:	0f 1f 00             	nop    DWORD PTR [rax]
3b38:	48 89 da             	mov    rdx,rbx
3b3b:	48 89 de             	mov    rsi,rbx
3b3e:	48 89 ef             	mov    rdi,rbp
3b41:	e8 4a e4 ff ff       	call   1f90 <__gmpz_mul@plt>
3b46:	4c 89 ea             	mov    rdx,r13
3b49:	48 89 ee             	mov    rsi,rbp
3b4c:	48 89 df             	mov    rdi,rbx
3b4f:	e8 3c e6 ff ff       	call   2190 <__gmpz_mod@plt>
3b54:	49 83 c6 01          	add    r14,0x1
3b58:	4c 89 e2             	mov    rdx,r12
3b5b:	48 89 de             	mov    rsi,rbx
3b5e:	48 89 df             	mov    rdi,rbx
3b61:	e8 2a e5 ff ff       	call   2090 <__gmpz_add_ui@plt>
3b66:	4d 39 fe             	cmp    r14,r15
3b69:	75 cd                	jne    3b38 <mp_factor_using_pollard_rho+0x1c8>
3b6b:	4c 8b 74 24 30       	mov    r14,QWORD PTR [rsp+0x30]
3b70:	4c 8b 7c 24 38       	mov    r15,QWORD PTR [rsp+0x38]
3b75:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
3b7a:	48 89 de             	mov    rsi,rbx
3b7d:	e8 fe e3 ff ff       	call   1f80 <__gmpz_set@plt>
3b82:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
3b87:	4c 8b 64 24 20       	mov    r12,QWORD PTR [rsp+0x20]
3b8c:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
3b91:	e9 cc fe ff ff       	jmp    3a62 <mp_factor_using_pollard_rho+0xf2>
3b96:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3b9d:	00 00 00
3ba0:	4c 89 64 24 28       	mov    QWORD PTR [rsp+0x28],r12
3ba5:	4c 89 74 24 30       	mov    QWORD PTR [rsp+0x30],r14
3baa:	48 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],rbx
3baf:	4c 8b 64 24 18       	mov    r12,QWORD PTR [rsp+0x18]
3bb4:	48 8b 5c 24 10       	mov    rbx,QWORD PTR [rsp+0x10]
3bb9:	4c 8b 74 24 08       	mov    r14,QWORD PTR [rsp+0x8]
3bbe:	66 90                	xchg   ax,ax
3bc0:	4c 89 e2             	mov    rdx,r12
3bc3:	4c 89 e6             	mov    rsi,r12
3bc6:	48 89 ef             	mov    rdi,rbp
3bc9:	e8 c2 e3 ff ff       	call   1f90 <__gmpz_mul@plt>
3bce:	4c 89 ea             	mov    rdx,r13
3bd1:	48 89 ee             	mov    rsi,rbp
3bd4:	4c 89 e7             	mov    rdi,r12
3bd7:	e8 b4 e5 ff ff       	call   2190 <__gmpz_mod@plt>
3bdc:	48 89 da             	mov    rdx,rbx
3bdf:	4c 89 e6             	mov    rsi,r12
3be2:	4c 89 e7             	mov    rdi,r12
3be5:	e8 a6 e4 ff ff       	call   2090 <__gmpz_add_ui@plt>
3bea:	4c 89 e2             	mov    rdx,r12
3bed:	4c 89 f6             	mov    rsi,r14
3bf0:	48 89 ef             	mov    rdi,rbp
3bf3:	e8 a8 e2 ff ff       	call   1ea0 <__gmpz_sub@plt>
3bf8:	4c 89 ea             	mov    rdx,r13
3bfb:	48 89 ee             	mov    rsi,rbp
3bfe:	48 89 ef             	mov    rdi,rbp
3c01:	e8 fa e5 ff ff       	call   2200 <__gmpz_gcd@plt>
3c06:	be 01 00 00 00       	mov    esi,0x1
3c0b:	48 89 ef             	mov    rdi,rbp
3c0e:	e8 4d e6 ff ff       	call   2260 <__gmpz_cmp_ui@plt>
3c13:	85 c0                	test   eax,eax
3c15:	74 a9                	je     3bc0 <mp_factor_using_pollard_rho+0x250>
3c17:	48 89 ea             	mov    rdx,rbp
3c1a:	4c 89 ee             	mov    rsi,r13
3c1d:	4c 89 ef             	mov    rdi,r13
3c20:	48 89 5c 24 10       	mov    QWORD PTR [rsp+0x10],rbx
3c25:	4c 89 64 24 18       	mov    QWORD PTR [rsp+0x18],r12
3c2a:	4c 89 74 24 08       	mov    QWORD PTR [rsp+0x8],r14
3c2f:	4c 8b 64 24 28       	mov    r12,QWORD PTR [rsp+0x28]
3c34:	48 8b 5c 24 38       	mov    rbx,QWORD PTR [rsp+0x38]
3c39:	4c 8b 74 24 30       	mov    r14,QWORD PTR [rsp+0x30]
3c3e:	e8 fd e2 ff ff       	call   1f40 <__gmpz_divexact@plt>
3c43:	48 89 ef             	mov    rdi,rbp
3c46:	e8 d5 fa ff ff       	call   3720 <mp_prime_p>
3c4b:	84 c0                	test   al,al
3c4d:	74 51                	je     3ca0 <mp_factor_using_pollard_rho+0x330>
3c4f:	48 8b 7c 24 40       	mov    rdi,QWORD PTR [rsp+0x40]
3c54:	48 89 ee             	mov    rsi,rbp
3c57:	e8 c4 f1 ff ff       	call   2e20 <mp_factor_insert>
3c5c:	4c 89 ef             	mov    rdi,r13
3c5f:	e8 bc fa ff ff       	call   3720 <mp_prime_p>
3c64:	84 c0                	test   al,al
3c66:	75 5f                	jne    3cc7 <mp_factor_using_pollard_rho+0x357>
3c68:	4c 89 ea             	mov    rdx,r13
3c6b:	48 89 de             	mov    rsi,rbx
3c6e:	48 89 df             	mov    rdi,rbx
3c71:	e8 1a e5 ff ff       	call   2190 <__gmpz_mod@plt>
3c76:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
3c7b:	4c 89 ea             	mov    rdx,r13
3c7e:	48 89 fe             	mov    rsi,rdi
3c81:	e8 0a e5 ff ff       	call   2190 <__gmpz_mod@plt>
3c86:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
3c8b:	4c 89 ea             	mov    rdx,r13
3c8e:	48 89 fe             	mov    rsi,rdi
3c91:	e8 fa e4 ff ff       	call   2190 <__gmpz_mod@plt>
3c96:	e9 a4 fd ff ff       	jmp    3a3f <mp_factor_using_pollard_rho+0xcf>
3c9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3ca0:	80 3d 59 f4 20 00 00 	cmp    BYTE PTR [rip+0x20f459],0x0        # 213100 <dev_debug>
3ca7:	75 75                	jne    3d1e <mp_factor_using_pollard_rho+0x3ae>
3ca9:	48 8b 54 24 40       	mov    rdx,QWORD PTR [rsp+0x40]
3cae:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
3cb3:	48 89 ef             	mov    rdi,rbp
3cb6:	e8 b5 fc ff ff       	call   3970 <mp_factor_using_pollard_rho>
3cbb:	4c 89 ef             	mov    rdi,r13
3cbe:	e8 5d fa ff ff       	call   3720 <mp_prime_p>
3cc3:	84 c0                	test   al,al
3cc5:	74 a1                	je     3c68 <mp_factor_using_pollard_rho+0x2f8>
3cc7:	48 8b 7c 24 40       	mov    rdi,QWORD PTR [rsp+0x40]
3ccc:	4c 89 ee             	mov    rsi,r13
3ccf:	e8 4c f1 ff ff       	call   2e20 <mp_factor_insert>
3cd4:	48 83 ec 08          	sub    rsp,0x8
3cd8:	31 c0                	xor    eax,eax
3cda:	48 89 ea             	mov    rdx,rbp
3cdd:	6a 00                	push   0x0
3cdf:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
3ce4:	49 89 d8             	mov    r8,rbx
3ce7:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
3cec:	4c 89 fe             	mov    rsi,r15
3cef:	4c 89 f7             	mov    rdi,r14
3cf2:	e8 59 e1 ff ff       	call   1e50 <__gmpz_clears@plt>
3cf7:	58                   	pop    rax
3cf8:	5a                   	pop    rdx
3cf9:	48 8b 84 24 b8 00 00 	mov    rax,QWORD PTR [rsp+0xb8]
3d00:	00
3d01:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
3d08:	00 00
3d0a:	75 54                	jne    3d60 <mp_factor_using_pollard_rho+0x3f0>
3d0c:	48 81 c4 c8 00 00 00 	add    rsp,0xc8
3d13:	5b                   	pop    rbx
3d14:	5d                   	pop    rbp
3d15:	41 5c                	pop    r12
3d17:	41 5d                	pop    r13
3d19:	41 5e                	pop    r14
3d1b:	41 5f                	pop    r15
3d1d:	c3                   	ret
3d1e:	48 8b 0d bb f3 20 00 	mov    rcx,QWORD PTR [rip+0x20f3bb]        # 2130e0 <stderr@@GLIBC_2.2.5>
3d25:	48 8d 3d d4 8d 00 00 	lea    rdi,[rip+0x8dd4]        # cb00 <_IO_stdin_used+0xc0>
3d2c:	ba 2b 00 00 00       	mov    edx,0x2b
3d31:	be 01 00 00 00       	mov    esi,0x1
3d36:	e8 05 e5 ff ff       	call   2240 <fwrite@plt>
3d3b:	e9 69 ff ff ff       	jmp    3ca9 <mp_factor_using_pollard_rho+0x339>
3d40:	48 8b 3d 99 f3 20 00 	mov    rdi,QWORD PTR [rip+0x20f399]        # 2130e0 <stderr@@GLIBC_2.2.5>
3d47:	48 8d 15 96 90 00 00 	lea    rdx,[rip+0x9096]        # cde4 <_IO_stdin_used+0x3a4>
3d4e:	48 89 f1             	mov    rcx,rsi
3d51:	be 01 00 00 00       	mov    esi,0x1
3d56:	e8 f5 e4 ff ff       	call   2250 <__fprintf_chk@plt>
3d5b:	e9 4e fc ff ff       	jmp    39ae <mp_factor_using_pollard_rho+0x3e>
3d60:	e8 bb e1 ff ff       	call   1f20 <__stack_chk_fail@plt>
3d65:	90                   	nop
3d66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3d6d:	00 00 00

0000000000003d70 <factor_using_pollard_rho>:
3d70:	41 57                	push   r15
3d72:	41 56                	push   r14
3d74:	41 55                	push   r13
3d76:	41 54                	push   r12
3d78:	55                   	push   rbp
3d79:	53                   	push   rbx
3d7a:	48 83 ec 38          	sub    rsp,0x38
3d7e:	48 83 ff 01          	cmp    rdi,0x1
3d82:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
3d87:	0f 86 c4 03 00 00    	jbe    4151 <factor_using_pollard_rho+0x3e1>
3d8d:	48 8d 46 01          	lea    rax,[rsi+0x1]
3d91:	49 89 fd             	mov    r13,rdi
3d94:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
3d99:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
3d9e:	b9 01 00 00 00       	mov    ecx,0x1
3da3:	4c 89 ee             	mov    rsi,r13
3da6:	bf 40 00 00 00       	mov    edi,0x40
3dab:	45 31 e4             	xor    r12d,r12d
3dae:	48 89 ca             	mov    rdx,rcx
3db1:	48 83 e8 01          	sub    rax,0x1
3db5:	48 89 04 24          	mov    QWORD PTR [rsp],rax
3db9:	31 c0                	xor    eax,eax
3dbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3dc0:	48 89 f1             	mov    rcx,rsi
3dc3:	48 d1 e8             	shr    rax,1
3dc6:	48 d1 ee             	shr    rsi,1
3dc9:	48 c1 e1 3f          	shl    rcx,0x3f
3dcd:	48 09 c8             	or     rax,rcx
3dd0:	48 39 d6             	cmp    rsi,rdx
3dd3:	72 07                	jb     3ddc <factor_using_pollard_rho+0x6c>
3dd5:	75 0b                	jne    3de2 <factor_using_pollard_rho+0x72>
3dd7:	4c 39 e0             	cmp    rax,r12
3dda:	77 06                	ja     3de2 <factor_using_pollard_rho+0x72>
3ddc:	49 29 c4             	sub    r12,rax
3ddf:	48 19 f2             	sbb    rdx,rsi
3de2:	83 ef 01             	sub    edi,0x1
3de5:	75 d9                	jne    3dc0 <factor_using_pollard_rho+0x50>
3de7:	4c 89 e8             	mov    rax,r13
3dea:	31 ed                	xor    ebp,ebp
3dec:	4c 29 e0             	sub    rax,r12
3def:	4c 39 e0             	cmp    rax,r12
3df2:	40 0f 97 c5          	seta   bpl
3df6:	48 f7 dd             	neg    rbp
3df9:	48 89 e8             	mov    rax,rbp
3dfc:	4b 8d 2c 24          	lea    rbp,[r12+r12*1]
3e00:	4c 21 e8             	and    rax,r13
3e03:	4c 29 ed             	sub    rbp,r13
3e06:	48 01 c5             	add    rbp,rax
3e09:	4c 3b 2c 24          	cmp    r13,QWORD PTR [rsp]
3e0d:	0f 86 98 02 00 00    	jbe    40ab <factor_using_pollard_rho+0x33b>
3e13:	48 89 eb             	mov    rbx,rbp
3e16:	49 89 ef             	mov    r15,rbp
3e19:	b9 01 00 00 00       	mov    ecx,0x1
3e1e:	41 be 01 00 00 00    	mov    r14d,0x1
3e24:	4c 89 e8             	mov    rax,r13
3e27:	48 8d 35 b2 91 00 00 	lea    rsi,[rip+0x91b2]        # cfe0 <binvert_table>
3e2e:	4d 89 ea             	mov    r10,r13
3e31:	48 d1 e8             	shr    rax,1
3e34:	49 89 cb             	mov    r11,rcx
3e37:	83 e0 7f             	and    eax,0x7f
3e3a:	0f b6 04 06          	movzx  eax,BYTE PTR [rsi+rax*1]
3e3e:	48 8d 14 00          	lea    rdx,[rax+rax*1]
3e42:	48 0f af c0          	imul   rax,rax
3e46:	49 0f af c5          	imul   rax,r13
3e4a:	48 29 c2             	sub    rdx,rax
3e4d:	48 8d 04 12          	lea    rax,[rdx+rdx*1]
3e51:	48 0f af d2          	imul   rdx,rdx
3e55:	49 0f af d5          	imul   rdx,r13
3e59:	48 29 d0             	sub    rax,rdx
3e5c:	4c 8d 04 00          	lea    r8,[rax+rax*1]
3e60:	48 0f af c0          	imul   rax,rax
3e64:	49 0f af c5          	imul   rax,r13
3e68:	49 29 c0             	sub    r8,rax
3e6b:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
3e6f:	49 29 c2             	sub    r10,rax
3e72:	4c 29 e8             	sub    rax,r13
3e75:	49 89 c1             	mov    r9,rax
3e78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3e7f:	00
3e80:	48 89 e8             	mov    rax,rbp
3e83:	48 f7 e5             	mul    rbp
3e86:	48 89 d1             	mov    rcx,rdx
3e89:	48 89 ce             	mov    rsi,rcx
3e8c:	49 0f af c0          	imul   rax,r8
3e90:	49 f7 e5             	mul    r13
3e93:	48 29 d6             	sub    rsi,rdx
3e96:	48 39 d1             	cmp    rcx,rdx
3e99:	4a 8d 04 2e          	lea    rax,[rsi+r13*1]
3e9d:	48 0f 42 f0          	cmovb  rsi,rax
3ea1:	4c 89 f8             	mov    rax,r15
3ea4:	4c 39 d6             	cmp    rsi,r10
3ea7:	48 19 ed             	sbb    rbp,rbp
3eaa:	4c 01 ce             	add    rsi,r9
3ead:	4c 21 ed             	and    rbp,r13
3eb0:	48 01 f5             	add    rbp,rsi
3eb3:	49 39 ef             	cmp    r15,rbp
3eb6:	48 19 c9             	sbb    rcx,rcx
3eb9:	48 29 e8             	sub    rax,rbp
3ebc:	4c 21 e9             	and    rcx,r13
3ebf:	48 01 c1             	add    rcx,rax
3ec2:	4c 89 e0             	mov    rax,r12
3ec5:	48 f7 e1             	mul    rcx
3ec8:	48 89 d1             	mov    rcx,rdx
3ecb:	49 89 cc             	mov    r12,rcx
3ece:	49 0f af c0          	imul   rax,r8
3ed2:	49 f7 e5             	mul    r13
3ed5:	49 29 d4             	sub    r12,rdx
3ed8:	48 39 d1             	cmp    rcx,rdx
3edb:	4b 8d 04 2c          	lea    rax,[r12+r13*1]
3edf:	4c 0f 42 e0          	cmovb  r12,rax
3ee3:	4c 89 f0             	mov    rax,r14
3ee6:	83 e0 1f             	and    eax,0x1f
3ee9:	48 83 f8 01          	cmp    rax,0x1
3eed:	74 61                	je     3f50 <factor_using_pollard_rho+0x1e0>
3eef:	49 83 ee 01          	sub    r14,0x1
3ef3:	75 8b                	jne    3e80 <factor_using_pollard_rho+0x110>
3ef5:	4d 85 db             	test   r11,r11
3ef8:	4b 8d 34 1b          	lea    rsi,[r11+r11*1]
3efc:	0f 84 ce 01 00 00    	je     40d0 <factor_using_pollard_rho+0x360>
3f02:	48 89 e8             	mov    rax,rbp
3f05:	0f 1f 00             	nop    DWORD PTR [rax]
3f08:	48 f7 e0             	mul    rax
3f0b:	48 89 d1             	mov    rcx,rdx
3f0e:	48 89 cf             	mov    rdi,rcx
3f11:	49 0f af c0          	imul   rax,r8
3f15:	49 f7 e5             	mul    r13
3f18:	48 29 d7             	sub    rdi,rdx
3f1b:	48 39 d1             	cmp    rcx,rdx
3f1e:	4a 8d 04 2f          	lea    rax,[rdi+r13*1]
3f22:	48 0f 42 f8          	cmovb  rdi,rax
3f26:	4c 39 d7             	cmp    rdi,r10
3f29:	48 19 c0             	sbb    rax,rax
3f2c:	4c 01 cf             	add    rdi,r9
3f2f:	49 83 c6 01          	add    r14,0x1
3f33:	4c 21 e8             	and    rax,r13
3f36:	48 01 f8             	add    rax,rdi
3f39:	4d 39 f3             	cmp    r11,r14
3f3c:	75 ca                	jne    3f08 <factor_using_pollard_rho+0x198>
3f3e:	49 89 ef             	mov    r15,rbp
3f41:	48 89 c3             	mov    rbx,rax
3f44:	49 89 f3             	mov    r11,rsi
3f47:	48 89 c5             	mov    rbp,rax
3f4a:	e9 31 ff ff ff       	jmp    3e80 <factor_using_pollard_rho+0x110>
3f4f:	90                   	nop
3f50:	4c 89 ee             	mov    rsi,r13
3f53:	4c 89 e7             	mov    rdi,r12
3f56:	e8 45 e7 ff ff       	call   26a0 <gcd_odd>
3f5b:	48 83 f8 01          	cmp    rax,0x1
3f5f:	75 0f                	jne    3f70 <factor_using_pollard_rho+0x200>
3f61:	48 89 eb             	mov    rbx,rbp
3f64:	eb 89                	jmp    3eef <factor_using_pollard_rho+0x17f>
3f66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3f6d:	00 00 00
3f70:	48 89 d8             	mov    rax,rbx
3f73:	48 f7 e3             	mul    rbx
3f76:	48 89 d1             	mov    rcx,rdx
3f79:	48 89 ce             	mov    rsi,rcx
3f7c:	49 0f af c0          	imul   rax,r8
3f80:	49 f7 e5             	mul    r13
3f83:	48 29 d6             	sub    rsi,rdx
3f86:	48 39 d1             	cmp    rcx,rdx
3f89:	4a 8d 04 2e          	lea    rax,[rsi+r13*1]
3f8d:	48 0f 42 f0          	cmovb  rsi,rax
3f91:	4c 39 d6             	cmp    rsi,r10
3f94:	48 19 c0             	sbb    rax,rax
3f97:	4c 01 ce             	add    rsi,r9
3f9a:	4c 21 e8             	and    rax,r13
3f9d:	48 8d 1c 30          	lea    rbx,[rax+rsi*1]
3fa1:	4c 89 f8             	mov    rax,r15
3fa4:	4c 89 ee             	mov    rsi,r13
3fa7:	49 39 df             	cmp    r15,rbx
3faa:	48 19 ff             	sbb    rdi,rdi
3fad:	48 29 d8             	sub    rax,rbx
3fb0:	4c 21 ef             	and    rdi,r13
3fb3:	48 01 c7             	add    rdi,rax
3fb6:	e8 e5 e6 ff ff       	call   26a0 <gcd_odd>
3fbb:	48 83 f8 01          	cmp    rax,0x1
3fbf:	74 af                	je     3f70 <factor_using_pollard_rho+0x200>
3fc1:	49 39 c5             	cmp    r13,rax
3fc4:	4c 89 d9             	mov    rcx,r11
3fc7:	49 89 c3             	mov    r11,rax
3fca:	0f 84 76 01 00 00    	je     4146 <factor_using_pollard_rho+0x3d6>
3fd0:	4c 89 e8             	mov    rax,r13
3fd3:	31 d2                	xor    edx,edx
3fd5:	49 f7 f3             	div    r11
3fd8:	49 83 fb 01          	cmp    r11,0x1
3fdc:	49 89 c0             	mov    r8,rax
3fdf:	49 89 c5             	mov    r13,rax
3fe2:	76 3b                	jbe    401f <factor_using_pollard_rho+0x2af>
3fe4:	49 81 fb 78 ed 7d 01 	cmp    r11,0x17ded78
3feb:	0f 86 f7 00 00 00    	jbe    40e8 <factor_using_pollard_rho+0x378>
3ff1:	4c 89 df             	mov    rdi,r11
3ff4:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
3ff9:	4c 89 5c 24 10       	mov    QWORD PTR [rsp+0x10],r11
3ffe:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
4003:	e8 78 0f 00 00       	call   4f80 <prime_p.part.4>
4008:	84 c0                	test   al,al
400a:	4c 8b 5c 24 10       	mov    r11,QWORD PTR [rsp+0x10]
400f:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
4014:	4c 8b 44 24 28       	mov    r8,QWORD PTR [rsp+0x28]
4019:	0f 85 c9 00 00 00    	jne    40e8 <factor_using_pollard_rho+0x378>
401f:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
4024:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
4029:	4c 89 df             	mov    rdi,r11
402c:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
4031:	48 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],rcx
4036:	e8 35 fd ff ff       	call   3d70 <factor_using_pollard_rho>
403b:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
4040:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
4045:	49 83 f8 01          	cmp    r8,0x1
4049:	0f 86 c9 00 00 00    	jbe    4118 <factor_using_pollard_rho+0x3a8>
404f:	49 81 f8 78 ed 7d 01 	cmp    r8,0x17ded78
4056:	0f 86 ca 00 00 00    	jbe    4126 <factor_using_pollard_rho+0x3b6>
405c:	4c 89 c7             	mov    rdi,r8
405f:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
4064:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
4069:	e8 12 0f 00 00       	call   4f80 <prime_p.part.4>
406e:	84 c0                	test   al,al
4070:	4c 8b 44 24 10       	mov    r8,QWORD PTR [rsp+0x10]
4075:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
407a:	0f 85 a6 00 00 00    	jne    4126 <factor_using_pollard_rho+0x3b6>
4080:	48 89 e8             	mov    rax,rbp
4083:	31 d2                	xor    edx,edx
4085:	49 f7 f0             	div    r8
4088:	4c 89 f8             	mov    rax,r15
408b:	48 89 d5             	mov    rbp,rdx
408e:	31 d2                	xor    edx,edx
4090:	49 f7 f0             	div    r8
4093:	48 89 d8             	mov    rax,rbx
4096:	49 89 d7             	mov    r15,rdx
4099:	31 d2                	xor    edx,edx
409b:	49 f7 f0             	div    r8
409e:	48 89 d3             	mov    rbx,rdx
40a1:	4c 3b 04 24          	cmp    r8,QWORD PTR [rsp]
40a5:	0f 87 79 fd ff ff    	ja     3e24 <factor_using_pollard_rho+0xb4>
40ab:	48 8d 0d ce 8e 00 00 	lea    rcx,[rip+0x8ece]        # cf80 <__PRETTY_FUNCTION__.8956>
40b2:	48 8d 35 8f 89 00 00 	lea    rsi,[rip+0x898f]        # ca48 <_IO_stdin_used+0x8>
40b9:	48 8d 3d 43 8d 00 00 	lea    rdi,[rip+0x8d43]        # ce03 <_IO_stdin_used+0x3c3>
40c0:	ba c8 05 00 00       	mov    edx,0x5c8
40c5:	e8 16 df ff ff       	call   1fe0 <__assert_fail@plt>
40ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
40d0:	4d 89 de             	mov    r14,r11
40d3:	48 89 eb             	mov    rbx,rbp
40d6:	49 89 f3             	mov    r11,rsi
40d9:	49 89 ef             	mov    r15,rbp
40dc:	e9 9f fd ff ff       	jmp    3e80 <factor_using_pollard_rho+0x110>
40e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
40e8:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
40ed:	ba 01 00 00 00       	mov    edx,0x1
40f2:	4c 89 de             	mov    rsi,r11
40f5:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
40fa:	48 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],rcx
40ff:	e8 fc e5 ff ff       	call   2700 <factor_insert_multiplicity>
4104:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
4109:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
410e:	49 83 f8 01          	cmp    r8,0x1
4112:	0f 87 37 ff ff ff    	ja     404f <factor_using_pollard_rho+0x2df>
4118:	74 56                	je     4170 <factor_using_pollard_rho+0x400>
411a:	31 db                	xor    ebx,ebx
411c:	45 31 ff             	xor    r15d,r15d
411f:	31 ed                	xor    ebp,ebp
4121:	e9 7b ff ff ff       	jmp    40a1 <factor_using_pollard_rho+0x331>
4126:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
412b:	48 83 c4 38          	add    rsp,0x38
412f:	ba 01 00 00 00       	mov    edx,0x1
4134:	5b                   	pop    rbx
4135:	5d                   	pop    rbp
4136:	41 5c                	pop    r12
4138:	41 5d                	pop    r13
413a:	41 5e                	pop    r14
413c:	41 5f                	pop    r15
413e:	4c 89 c6             	mov    rsi,r8
4141:	e9 ba e5 ff ff       	jmp    2700 <factor_insert_multiplicity>
4146:	48 83 44 24 20 01    	add    QWORD PTR [rsp+0x20],0x1
414c:	e9 48 fc ff ff       	jmp    3d99 <factor_using_pollard_rho+0x29>
4151:	48 8d 0d 28 8e 00 00 	lea    rcx,[rip+0x8e28]        # cf80 <__PRETTY_FUNCTION__.8956>
4158:	48 8d 35 e9 88 00 00 	lea    rsi,[rip+0x88e9]        # ca48 <_IO_stdin_used+0x8>
415f:	48 8d 3d 93 8c 00 00 	lea    rdi,[rip+0x8c93]        # cdf9 <_IO_stdin_used+0x3b9>
4166:	ba c2 05 00 00       	mov    edx,0x5c2
416b:	e8 70 de ff ff       	call   1fe0 <__assert_fail@plt>
4170:	48 83 c4 38          	add    rsp,0x38
4174:	5b                   	pop    rbx
4175:	5d                   	pop    rbp
4176:	41 5c                	pop    r12
4178:	41 5d                	pop    r13
417a:	41 5e                	pop    r14
417c:	41 5f                	pop    r15
417e:	c3                   	ret
417f:	90                   	nop

0000000000004180 <factor_using_pollard_rho2>:
4180:	41 57                	push   r15
4182:	41 56                	push   r14
4184:	41 55                	push   r13
4186:	41 54                	push   r12
4188:	49 89 f4             	mov    r12,rsi
418b:	55                   	push   rbp
418c:	53                   	push   rbx
418d:	48 89 fd             	mov    rbp,rdi
4190:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
4197:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
419e:	00 00
41a0:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
41a7:	00
41a8:	31 c0                	xor    eax,eax
41aa:	48 83 ff 02          	cmp    rdi,0x2
41ae:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
41b3:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
41b8:	48 19 c0             	sbb    rax,rax
41bb:	31 c9                	xor    ecx,ecx
41bd:	83 e0 40             	and    eax,0x40
41c0:	48 83 c0 40          	add    rax,0x40
41c4:	48 83 ff 02          	cmp    rdi,0x2
41c8:	0f 92 c1             	setb   cl
41cb:	48 19 db             	sbb    rbx,rbx
41ce:	48 83 c3 01          	add    rbx,0x1
41d2:	48 89 da             	mov    rdx,rbx
41d5:	48 83 e8 01          	sub    rax,0x1
41d9:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
41dd:	74 2c                	je     420b <factor_using_pollard_rho2+0x8b>
41df:	48 89 ce             	mov    rsi,rcx
41e2:	48 01 d2             	add    rdx,rdx
41e5:	48 01 c9             	add    rcx,rcx
41e8:	48 c1 ee 3f          	shr    rsi,0x3f
41ec:	48 09 f2             	or     rdx,rsi
41ef:	48 39 d5             	cmp    rbp,rdx
41f2:	72 07                	jb     41fb <factor_using_pollard_rho2+0x7b>
41f4:	75 df                	jne    41d5 <factor_using_pollard_rho2+0x55>
41f6:	49 39 cc             	cmp    r12,rcx
41f9:	77 da                	ja     41d5 <factor_using_pollard_rho2+0x55>
41fb:	48 83 e8 01          	sub    rax,0x1
41ff:	4c 29 e1             	sub    rcx,r12
4202:	48 19 ea             	sbb    rdx,rbp
4205:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
4209:	75 d4                	jne    41df <factor_using_pollard_rho2+0x5f>
420b:	48 89 d0             	mov    rax,rdx
420e:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
4213:	48 89 ca             	mov    rdx,rcx
4216:	48 01 ca             	add    rdx,rcx
4219:	48 11 c0             	adc    rax,rax
421c:	48 39 e8             	cmp    rax,rbp
421f:	48 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],rcx
4224:	48 89 44 24 70       	mov    QWORD PTR [rsp+0x70],rax
4229:	48 89 d3             	mov    rbx,rdx
422c:	48 89 c6             	mov    rsi,rax
422f:	77 07                	ja     4238 <factor_using_pollard_rho2+0xb8>
4231:	75 16                	jne    4249 <factor_using_pollard_rho2+0xc9>
4233:	4c 39 e2             	cmp    rdx,r12
4236:	72 11                	jb     4249 <factor_using_pollard_rho2+0xc9>
4238:	48 89 c6             	mov    rsi,rax
423b:	48 89 d3             	mov    rbx,rdx
423e:	4c 29 e3             	sub    rbx,r12
4241:	48 19 ee             	sbb    rsi,rbp
4244:	48 89 74 24 70       	mov    QWORD PTR [rsp+0x70],rsi
4249:	49 83 fc 01          	cmp    r12,0x1
424d:	48 89 74 24 78       	mov    QWORD PTR [rsp+0x78],rsi
4252:	48 89 b4 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rsi
4259:	00
425a:	75 09                	jne    4265 <factor_using_pollard_rho2+0xe5>
425c:	48 85 ed             	test   rbp,rbp
425f:	0f 84 f5 03 00 00    	je     465a <factor_using_pollard_rho2+0x4da>
4265:	48 8d 84 24 90 00 00 	lea    rax,[rsp+0x90]
426c:	00
426d:	49 89 df             	mov    r15,rbx
4270:	48 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],rbx
4275:	48 c7 44 24 08 01 00 	mov    QWORD PTR [rsp+0x8],0x1
427c:	00 00
427e:	41 bd 01 00 00 00    	mov    r13d,0x1
4284:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
4289:	48 8d 84 24 88 00 00 	lea    rax,[rsp+0x88]
4290:	00
4291:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
4296:	48 8d 44 24 70       	lea    rax,[rsp+0x70]
429b:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
42a0:	48 8d 44 24 78       	lea    rax,[rsp+0x78]
42a5:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
42aa:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
42b1:	00
42b2:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
42b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
42be:	00 00
42c0:	4c 89 e0             	mov    rax,r12
42c3:	48 8d 3d 16 8d 00 00 	lea    rdi,[rip+0x8d16]        # cfe0 <binvert_table>
42ca:	48 d1 e8             	shr    rax,1
42cd:	83 e0 7f             	and    eax,0x7f
42d0:	0f b6 04 07          	movzx  eax,BYTE PTR [rdi+rax*1]
42d4:	48 8d 14 00          	lea    rdx,[rax+rax*1]
42d8:	48 0f af c0          	imul   rax,rax
42dc:	49 0f af c4          	imul   rax,r12
42e0:	48 29 c2             	sub    rdx,rax
42e3:	48 8d 04 12          	lea    rax,[rdx+rdx*1]
42e7:	48 0f af d2          	imul   rdx,rdx
42eb:	49 0f af d4          	imul   rdx,r12
42ef:	48 29 d0             	sub    rax,rdx
42f2:	4c 8d 34 00          	lea    r14,[rax+rax*1]
42f6:	48 0f af c0          	imul   rax,rax
42fa:	49 0f af c4          	imul   rax,r12
42fe:	49 29 c6             	sub    r14,rax
4301:	4c 89 f8             	mov    rax,r15
4304:	49 89 df             	mov    r15,rbx
4307:	48 89 c3             	mov    rbx,rax
430a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4310:	41 56                	push   r14
4312:	41 54                	push   r12
4314:	48 89 f1             	mov    rcx,rsi
4317:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
431c:	4c 89 fa             	mov    rdx,r15
431f:	4d 89 f8             	mov    r8,r15
4322:	49 89 e9             	mov    r9,rbp
4325:	e8 36 e6 ff ff       	call   2960 <mulredc2>
432a:	48 8b 94 24 a0 00 00 	mov    rdx,QWORD PTR [rsp+0xa0]
4331:	00
4332:	48 03 44 24 38       	add    rax,QWORD PTR [rsp+0x38]
4337:	48 83 d2 00          	adc    rdx,0x0
433b:	48 39 d5             	cmp    rbp,rdx
433e:	48 89 94 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rdx
4345:	00
4346:	49 89 c7             	mov    r15,rax
4349:	59                   	pop    rcx
434a:	48 89 d6             	mov    rsi,rdx
434d:	5f                   	pop    rdi
434e:	72 07                	jb     4357 <factor_using_pollard_rho2+0x1d7>
4350:	75 16                	jne    4368 <factor_using_pollard_rho2+0x1e8>
4352:	49 39 c4             	cmp    r12,rax
4355:	77 11                	ja     4368 <factor_using_pollard_rho2+0x1e8>
4357:	4c 29 e0             	sub    rax,r12
435a:	48 19 ea             	sbb    rdx,rbp
435d:	48 89 54 24 70       	mov    QWORD PTR [rsp+0x70],rdx
4362:	49 89 c7             	mov    r15,rax
4365:	48 89 d6             	mov    rsi,rdx
4368:	48 8b 4c 24 78       	mov    rcx,QWORD PTR [rsp+0x78]
436d:	4c 8b 44 24 30       	mov    r8,QWORD PTR [rsp+0x30]
4372:	4d 29 f8             	sub    r8,r15
4375:	48 19 f1             	sbb    rcx,rsi
4378:	48 85 c9             	test   rcx,rcx
437b:	79 06                	jns    4383 <factor_using_pollard_rho2+0x203>
437d:	4d 01 e0             	add    r8,r12
4380:	48 11 e9             	adc    rcx,rbp
4383:	41 56                	push   r14
4385:	41 54                	push   r12
4387:	49 89 e9             	mov    r9,rbp
438a:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
438f:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
4394:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
4399:	e8 c2 e5 ff ff       	call   2960 <mulredc2>
439e:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
43a3:	48 8b 84 24 a0 00 00 	mov    rax,QWORD PTR [rsp+0xa0]
43aa:	00
43ab:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
43b0:	4c 89 e8             	mov    rax,r13
43b3:	83 e0 1f             	and    eax,0x1f
43b6:	48 83 f8 01          	cmp    rax,0x1
43ba:	41 5a                	pop    r10
43bc:	41 5b                	pop    r11
43be:	0f 84 dc 00 00 00    	je     44a0 <factor_using_pollard_rho2+0x320>
43c4:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
43c9:	49 83 ed 01          	sub    r13,0x1
43cd:	0f 85 3d ff ff ff    	jne    4310 <factor_using_pollard_rho2+0x190>
43d3:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
43d8:	48 89 74 24 78       	mov    QWORD PTR [rsp+0x78],rsi
43dd:	48 8d 1c 00          	lea    rbx,[rax+rax*1]
43e1:	48 85 c0             	test   rax,rax
43e4:	48 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],rbx
43e9:	4c 89 fb             	mov    rbx,r15
43ec:	0f 84 84 00 00 00    	je     4476 <factor_using_pollard_rho2+0x2f6>
43f2:	4c 89 7c 24 40       	mov    QWORD PTR [rsp+0x40],r15
43f7:	4c 89 fa             	mov    rdx,r15
43fa:	4c 89 eb             	mov    rbx,r13
43fd:	4c 8b 7c 24 10       	mov    r15,QWORD PTR [rsp+0x10]
4402:	4c 8b 6c 24 28       	mov    r13,QWORD PTR [rsp+0x28]
4407:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
440e:	00 00
4410:	41 56                	push   r14
4412:	41 54                	push   r12
4414:	49 89 d0             	mov    r8,rdx
4417:	48 89 f1             	mov    rcx,rsi
441a:	49 89 e9             	mov    r9,rbp
441d:	4c 89 ff             	mov    rdi,r15
4420:	e8 3b e5 ff ff       	call   2960 <mulredc2>
4425:	48 8b 8c 24 a0 00 00 	mov    rcx,QWORD PTR [rsp+0xa0]
442c:	00
442d:	4c 01 e8             	add    rax,r13
4430:	48 83 d1 00          	adc    rcx,0x0
4434:	48 39 cd             	cmp    rbp,rcx
4437:	48 89 8c 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rcx
443e:	00
443f:	48 89 c2             	mov    rdx,rax
4442:	41 58                	pop    r8
4444:	48 89 ce             	mov    rsi,rcx
4447:	41 59                	pop    r9
4449:	72 07                	jb     4452 <factor_using_pollard_rho2+0x2d2>
444b:	75 16                	jne    4463 <factor_using_pollard_rho2+0x2e3>
444d:	49 39 c4             	cmp    r12,rax
4450:	77 11                	ja     4463 <factor_using_pollard_rho2+0x2e3>
4452:	48 89 ce             	mov    rsi,rcx
4455:	4c 29 e0             	sub    rax,r12
4458:	48 19 ee             	sbb    rsi,rbp
445b:	48 89 74 24 70       	mov    QWORD PTR [rsp+0x70],rsi
4460:	48 89 c2             	mov    rdx,rax
4463:	48 83 c3 01          	add    rbx,0x1
4467:	48 39 5c 24 08       	cmp    QWORD PTR [rsp+0x8],rbx
446c:	75 a2                	jne    4410 <factor_using_pollard_rho2+0x290>
446e:	4c 8b 7c 24 40       	mov    r15,QWORD PTR [rsp+0x40]
4473:	48 89 d3             	mov    rbx,rdx
4476:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
447b:	4c 8b 6c 24 08       	mov    r13,QWORD PTR [rsp+0x8]
4480:	4c 89 7c 24 30       	mov    QWORD PTR [rsp+0x30],r15
4485:	48 89 b4 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rsi
448c:	00
448d:	49 89 df             	mov    r15,rbx
4490:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
4495:	e9 76 fe ff ff       	jmp    4310 <factor_using_pollard_rho2+0x190>
449a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
44a0:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
44a5:	48 8b 74 24 18       	mov    rsi,QWORD PTR [rsp+0x18]
44aa:	4d 89 e0             	mov    r8,r12
44ad:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
44b2:	48 89 e9             	mov    rcx,rbp
44b5:	e8 36 ec ff ff       	call   30f0 <gcd2_odd>
44ba:	48 83 bc 24 88 00 00 	cmp    QWORD PTR [rsp+0x88],0x0
44c1:	00 00
44c3:	75 1b                	jne    44e0 <factor_using_pollard_rho2+0x360>
44c5:	48 83 f8 01          	cmp    rax,0x1
44c9:	75 15                	jne    44e0 <factor_using_pollard_rho2+0x360>
44cb:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
44d0:	4c 89 fb             	mov    rbx,r15
44d3:	48 89 b4 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rsi
44da:	00
44db:	e9 e9 fe ff ff       	jmp    43c9 <factor_using_pollard_rho2+0x249>
44e0:	4c 89 6c 24 40       	mov    QWORD PTR [rsp+0x40],r13
44e5:	4c 89 7c 24 48       	mov    QWORD PTR [rsp+0x48],r15
44ea:	49 89 dd             	mov    r13,rbx
44ed:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
44f2:	48 8b 5c 24 10       	mov    rbx,QWORD PTR [rsp+0x10]
44f7:	eb 11                	jmp    450a <factor_using_pollard_rho2+0x38a>
44f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4500:	48 83 f8 01          	cmp    rax,0x1
4504:	0f 85 7e 01 00 00    	jne    4688 <factor_using_pollard_rho2+0x508>
450a:	48 8b b4 24 80 00 00 	mov    rsi,QWORD PTR [rsp+0x80]
4511:	00
4512:	41 56                	push   r14
4514:	4c 89 ea             	mov    rdx,r13
4517:	41 54                	push   r12
4519:	4d 89 e8             	mov    r8,r13
451c:	48 89 df             	mov    rdi,rbx
451f:	49 89 e9             	mov    r9,rbp
4522:	48 89 f1             	mov    rcx,rsi
4525:	e8 36 e4 ff ff       	call   2960 <mulredc2>
452a:	48 8b 94 24 a0 00 00 	mov    rdx,QWORD PTR [rsp+0xa0]
4531:	00
4532:	48 03 44 24 38       	add    rax,QWORD PTR [rsp+0x38]
4537:	48 83 d2 00          	adc    rdx,0x0
453b:	48 39 d5             	cmp    rbp,rdx
453e:	48 89 94 24 90 00 00 	mov    QWORD PTR [rsp+0x90],rdx
4545:	00
4546:	49 89 c5             	mov    r13,rax
4549:	5e                   	pop    rsi
454a:	48 89 d1             	mov    rcx,rdx
454d:	5f                   	pop    rdi
454e:	72 07                	jb     4557 <factor_using_pollard_rho2+0x3d7>
4550:	75 19                	jne    456b <factor_using_pollard_rho2+0x3eb>
4552:	49 39 c4             	cmp    r12,rax
4555:	77 14                	ja     456b <factor_using_pollard_rho2+0x3eb>
4557:	4c 29 e0             	sub    rax,r12
455a:	48 19 ea             	sbb    rdx,rbp
455d:	48 89 94 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rdx
4564:	00
4565:	49 89 c5             	mov    r13,rax
4568:	48 89 d1             	mov    rcx,rdx
456b:	48 8b 74 24 78       	mov    rsi,QWORD PTR [rsp+0x78]
4570:	4c 89 fa             	mov    rdx,r15
4573:	4c 29 ea             	sub    rdx,r13
4576:	48 19 ce             	sbb    rsi,rcx
4579:	48 85 f6             	test   rsi,rsi
457c:	79 06                	jns    4584 <factor_using_pollard_rho2+0x404>
457e:	4c 01 e2             	add    rdx,r12
4581:	48 11 ee             	adc    rsi,rbp
4584:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
4589:	4d 89 e0             	mov    r8,r12
458c:	48 89 e9             	mov    rcx,rbp
458f:	e8 5c eb ff ff       	call   30f0 <gcd2_odd>
4594:	48 8b bc 24 88 00 00 	mov    rdi,QWORD PTR [rsp+0x88]
459b:	00
459c:	48 85 ff             	test   rdi,rdi
459f:	0f 84 5b ff ff ff    	je     4500 <factor_using_pollard_rho2+0x380>
45a5:	49 39 c4             	cmp    r12,rax
45a8:	49 89 c0             	mov    r8,rax
45ab:	0f 84 26 02 00 00    	je     47d7 <factor_using_pollard_rho2+0x657>
45b1:	4c 89 c0             	mov    rax,r8
45b4:	48 8d 1d 25 8a 00 00 	lea    rbx,[rip+0x8a25]        # cfe0 <binvert_table>
45bb:	4c 89 c6             	mov    rsi,r8
45be:	48 d1 e8             	shr    rax,1
45c1:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
45c6:	83 e0 7f             	and    eax,0x7f
45c9:	0f b6 04 03          	movzx  eax,BYTE PTR [rbx+rax*1]
45cd:	48 8d 14 00          	lea    rdx,[rax+rax*1]
45d1:	48 0f af c0          	imul   rax,rax
45d5:	49 0f af c0          	imul   rax,r8
45d9:	48 29 c2             	sub    rdx,rax
45dc:	48 8d 04 12          	lea    rax,[rdx+rdx*1]
45e0:	48 0f af d2          	imul   rdx,rdx
45e4:	49 0f af d0          	imul   rdx,r8
45e8:	48 29 d0             	sub    rax,rdx
45eb:	48 8d 14 00          	lea    rdx,[rax+rax*1]
45ef:	48 0f af c0          	imul   rax,rax
45f3:	49 0f af c0          	imul   rax,r8
45f7:	48 29 c2             	sub    rdx,rax
45fa:	4c 0f af e2          	imul   r12,rdx
45fe:	e8 ed 12 00 00       	call   58f0 <prime2_p>
4603:	84 c0                	test   al,al
4605:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
460a:	0f 84 23 02 00 00    	je     4833 <factor_using_pollard_rho2+0x6b3>
4610:	48 8b b4 24 88 00 00 	mov    rsi,QWORD PTR [rsp+0x88]
4617:	00
4618:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
461d:	4c 89 c2             	mov    rdx,r8
4620:	e8 7b ea ff ff       	call   30a0 <factor_insert_large>
4625:	49 83 fc 01          	cmp    r12,0x1
4629:	0f 86 d8 01 00 00    	jbe    4807 <factor_using_pollard_rho2+0x687>
462f:	49 81 fc 78 ed 7d 01 	cmp    r12,0x17ded78
4636:	76 10                	jbe    4648 <factor_using_pollard_rho2+0x4c8>
4638:	4c 89 e7             	mov    rdi,r12
463b:	e8 40 09 00 00       	call   4f80 <prime_p.part.4>
4640:	84 c0                	test   al,al
4642:	0f 84 bf 01 00 00    	je     4807 <factor_using_pollard_rho2+0x687>
4648:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
464d:	ba 01 00 00 00       	mov    edx,0x1
4652:	4c 89 e6             	mov    rsi,r12
4655:	e8 a6 e0 ff ff       	call   2700 <factor_insert_multiplicity>
465a:	48 8b 84 24 98 00 00 	mov    rax,QWORD PTR [rsp+0x98]
4661:	00
4662:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
4669:	00 00
466b:	0f 85 e5 01 00 00    	jne    4856 <factor_using_pollard_rho2+0x6d6>
4671:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
4678:	5b                   	pop    rbx
4679:	5d                   	pop    rbp
467a:	41 5c                	pop    r12
467c:	41 5d                	pop    r13
467e:	41 5e                	pop    r14
4680:	41 5f                	pop    r15
4682:	c3                   	ret
4683:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4688:	49 89 c0             	mov    r8,rax
468b:	48 8d 3d 4e 89 00 00 	lea    rdi,[rip+0x894e]        # cfe0 <binvert_table>
4692:	48 d1 e8             	shr    rax,1
4695:	83 e0 7f             	and    eax,0x7f
4698:	4c 89 7c 24 30       	mov    QWORD PTR [rsp+0x30],r15
469d:	48 89 5c 24 10       	mov    QWORD PTR [rsp+0x10],rbx
46a2:	0f b6 04 07          	movzx  eax,BYTE PTR [rdi+rax*1]
46a6:	4d 89 ef             	mov    r15,r13
46a9:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
46ae:	4c 8b 6c 24 40       	mov    r13,QWORD PTR [rsp+0x40]
46b3:	48 8d 14 00          	lea    rdx,[rax+rax*1]
46b7:	48 0f af c0          	imul   rax,rax
46bb:	49 0f af c0          	imul   rax,r8
46bf:	48 29 c2             	sub    rdx,rax
46c2:	48 8d 04 12          	lea    rax,[rdx+rdx*1]
46c6:	48 0f af d2          	imul   rdx,rdx
46ca:	49 0f af d0          	imul   rdx,r8
46ce:	48 29 d0             	sub    rax,rdx
46d1:	48 8d 0c 00          	lea    rcx,[rax+rax*1]
46d5:	48 0f af c0          	imul   rax,rax
46d9:	49 0f af c0          	imul   rax,r8
46dd:	48 29 c1             	sub    rcx,rax
46e0:	4c 0f af e1          	imul   r12,rcx
46e4:	4c 39 c5             	cmp    rbp,r8
46e7:	0f 82 13 01 00 00    	jb     4800 <factor_using_pollard_rho2+0x680>
46ed:	4c 89 e0             	mov    rax,r12
46f0:	49 f7 e0             	mul    r8
46f3:	48 29 d5             	sub    rbp,rdx
46f6:	48 0f af e9          	imul   rbp,rcx
46fa:	49 83 f8 01          	cmp    r8,0x1
46fe:	76 27                	jbe    4727 <factor_using_pollard_rho2+0x5a7>
4700:	49 81 f8 78 ed 7d 01 	cmp    r8,0x17ded78
4707:	0f 86 b3 00 00 00    	jbe    47c0 <factor_using_pollard_rho2+0x640>
470d:	4c 89 c7             	mov    rdi,r8
4710:	4c 89 44 24 40       	mov    QWORD PTR [rsp+0x40],r8
4715:	e8 66 08 00 00       	call   4f80 <prime_p.part.4>
471a:	84 c0                	test   al,al
471c:	4c 8b 44 24 40       	mov    r8,QWORD PTR [rsp+0x40]
4721:	0f 85 99 00 00 00    	jne    47c0 <factor_using_pollard_rho2+0x640>
4727:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
472c:	48 8b 54 24 50       	mov    rdx,QWORD PTR [rsp+0x50]
4731:	4c 89 c7             	mov    rdi,r8
4734:	48 8d 70 01          	lea    rsi,[rax+0x1]
4738:	e8 33 f6 ff ff       	call   3d70 <factor_using_pollard_rho>
473d:	48 85 ed             	test   rbp,rbp
4740:	0f 84 df fe ff ff    	je     4625 <factor_using_pollard_rho2+0x4a5>
4746:	4c 89 e6             	mov    rsi,r12
4749:	48 89 ef             	mov    rdi,rbp
474c:	e8 9f 11 00 00       	call   58f0 <prime2_p>
4751:	84 c0                	test   al,al
4753:	0f 85 c5 00 00 00    	jne    481e <factor_using_pollard_rho2+0x69e>
4759:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
475e:	48 8b 7c 24 58       	mov    rdi,QWORD PTR [rsp+0x58]
4763:	48 89 da             	mov    rdx,rbx
4766:	4d 89 e0             	mov    r8,r12
4769:	48 89 e9             	mov    rcx,rbp
476c:	e8 8f ea ff ff       	call   3200 <mod2>
4771:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4776:	48 8b 74 24 78       	mov    rsi,QWORD PTR [rsp+0x78]
477b:	4d 89 e0             	mov    r8,r12
477e:	48 8b 7c 24 60       	mov    rdi,QWORD PTR [rsp+0x60]
4783:	48 89 e9             	mov    rcx,rbp
4786:	48 89 c3             	mov    rbx,rax
4789:	e8 72 ea ff ff       	call   3200 <mod2>
478e:	48 8b b4 24 80 00 00 	mov    rsi,QWORD PTR [rsp+0x80]
4795:	00
4796:	48 8b 7c 24 68       	mov    rdi,QWORD PTR [rsp+0x68]
479b:	4c 89 fa             	mov    rdx,r15
479e:	4d 89 e0             	mov    r8,r12
47a1:	48 89 e9             	mov    rcx,rbp
47a4:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
47a9:	e8 52 ea ff ff       	call   3200 <mod2>
47ae:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
47b3:	49 89 c7             	mov    r15,rax
47b6:	e9 05 fb ff ff       	jmp    42c0 <factor_using_pollard_rho2+0x140>
47bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
47c0:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
47c5:	ba 01 00 00 00       	mov    edx,0x1
47ca:	4c 89 c6             	mov    rsi,r8
47cd:	e8 2e df ff ff       	call   2700 <factor_insert_multiplicity>
47d2:	e9 66 ff ff ff       	jmp    473d <factor_using_pollard_rho2+0x5bd>
47d7:	48 39 fd             	cmp    rbp,rdi
47da:	0f 85 d1 fd ff ff    	jne    45b1 <factor_using_pollard_rho2+0x431>
47e0:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
47e5:	48 8b 4c 24 50       	mov    rcx,QWORD PTR [rsp+0x50]
47ea:	4c 89 e6             	mov    rsi,r12
47ed:	48 89 ef             	mov    rdi,rbp
47f0:	48 83 c2 01          	add    rdx,0x1
47f4:	e8 87 f9 ff ff       	call   4180 <factor_using_pollard_rho2>
47f9:	e9 5c fe ff ff       	jmp    465a <factor_using_pollard_rho2+0x4da>
47fe:	66 90                	xchg   ax,ax
4800:	31 ed                	xor    ebp,ebp
4802:	e9 f3 fe ff ff       	jmp    46fa <factor_using_pollard_rho2+0x57a>
4807:	48 8b 54 24 50       	mov    rdx,QWORD PTR [rsp+0x50]
480c:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
4811:	4c 89 e7             	mov    rdi,r12
4814:	e8 57 f5 ff ff       	call   3d70 <factor_using_pollard_rho>
4819:	e9 3c fe ff ff       	jmp    465a <factor_using_pollard_rho2+0x4da>
481e:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
4823:	4c 89 e2             	mov    rdx,r12
4826:	48 89 ee             	mov    rsi,rbp
4829:	e8 72 e8 ff ff       	call   30a0 <factor_insert_large>
482e:	e9 27 fe ff ff       	jmp    465a <factor_using_pollard_rho2+0x4da>
4833:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
4838:	48 8b 4c 24 50       	mov    rcx,QWORD PTR [rsp+0x50]
483d:	4c 89 c6             	mov    rsi,r8
4840:	48 8b bc 24 88 00 00 	mov    rdi,QWORD PTR [rsp+0x88]
4847:	00
4848:	48 8d 50 01          	lea    rdx,[rax+0x1]
484c:	e8 2f f9 ff ff       	call   4180 <factor_using_pollard_rho2>
4851:	e9 cf fd ff ff       	jmp    4625 <factor_using_pollard_rho2+0x4a5>
4856:	e8 c5 d6 ff ff       	call   1f20 <__stack_chk_fail@plt>
485b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004860 <factor>:
4860:	41 57                	push   r15
4862:	41 56                	push   r14
4864:	49 89 f8             	mov    r8,rdi
4867:	41 55                	push   r13
4869:	41 54                	push   r12
486b:	49 89 d5             	mov    r13,rdx
486e:	55                   	push   rbp
486f:	53                   	push   rbx
4870:	48 89 f3             	mov    rbx,rsi
4873:	48 83 ec 38          	sub    rsp,0x38
4877:	48 85 ff             	test   rdi,rdi
487a:	c6 82 fa 00 00 00 00 	mov    BYTE PTR [rdx+0xfa],0x0
4881:	48 c7 42 08 00 00 00 	mov    QWORD PTR [rdx+0x8],0x0
4888:	00
4889:	75 15                	jne    48a0 <factor+0x40>
488b:	48 83 fe 01          	cmp    rsi,0x1
488f:	77 0f                	ja     48a0 <factor+0x40>
4891:	48 83 c4 38          	add    rsp,0x38
4895:	5b                   	pop    rbx
4896:	5d                   	pop    rbp
4897:	41 5c                	pop    r12
4899:	41 5d                	pop    r13
489b:	41 5e                	pop    r14
489d:	41 5f                	pop    r15
489f:	c3                   	ret
48a0:	f6 c3 01             	test   bl,0x1
48a3:	0f 84 c7 05 00 00    	je     4e70 <factor+0x610>
48a9:	4d 85 c0             	test   r8,r8
48ac:	0f 84 e4 05 00 00    	je     4e96 <factor+0x636>
48b2:	48 8d 0d af 87 00 00 	lea    rcx,[rip+0x87af]        # d068 <primes_dtab+0x8>
48b9:	41 be 01 00 00 00    	mov    r14d,0x1
48bf:	49 b9 ab aa aa aa aa 	movabs r9,0xaaaaaaaaaaaaaaab
48c6:	aa aa aa
48c9:	41 bc 02 00 00 00    	mov    r12d,0x2
48cf:	bd 03 00 00 00       	mov    ebp,0x3
48d4:	eb 3c                	jmp    4912 <factor+0xb2>
48d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
48dd:	00 00 00
48e0:	44 89 f0             	mov    eax,r14d
48e3:	4c 01 e5             	add    rbp,r12
48e6:	49 83 c6 01          	add    r14,0x1
48ea:	48 83 c1 10          	add    rcx,0x10
48ee:	4d 85 c0             	test   r8,r8
48f1:	0f 84 a9 00 00 00    	je     49a0 <factor+0x140>
48f7:	3d 9b 02 00 00       	cmp    eax,0x29b
48fc:	0f 87 9e 00 00 00    	ja     49a0 <factor+0x140>
4902:	48 8d 05 57 b4 00 00 	lea    rax,[rip+0xb457]        # fd60 <primes_diff>
4909:	4c 8b 49 f8          	mov    r9,QWORD PTR [rcx-0x8]
490d:	46 0f b6 24 30       	movzx  r12d,BYTE PTR [rax+r14*1]
4912:	4d 89 ca             	mov    r10,r9
4915:	4c 0f af d3          	imul   r10,rbx
4919:	4c 89 d0             	mov    rax,r10
491c:	48 f7 e5             	mul    rbp
491f:	49 39 d0             	cmp    r8,rdx
4922:	72 bc                	jb     48e0 <factor+0x80>
4924:	4d 89 c7             	mov    r15,r8
4927:	4c 8b 19             	mov    r11,QWORD PTR [rcx]
492a:	49 29 d7             	sub    r15,rdx
492d:	4d 0f af f9          	imul   r15,r9
4931:	4d 39 df             	cmp    r15,r11
4934:	77 aa                	ja     48e0 <factor+0x80>
4936:	ba 01 00 00 00       	mov    edx,0x1
493b:	48 89 ee             	mov    rsi,rbp
493e:	4c 89 ef             	mov    rdi,r13
4941:	4c 89 5c 24 20       	mov    QWORD PTR [rsp+0x20],r11
4946:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
494b:	48 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],rcx
4950:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
4955:	e8 a6 dd ff ff       	call   2700 <factor_insert_multiplicity>
495a:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
495f:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
4964:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
4969:	4c 8b 5c 24 20       	mov    r11,QWORD PTR [rsp+0x20]
496e:	4c 89 ce             	mov    rsi,r9
4971:	49 0f af f2          	imul   rsi,r10
4975:	48 89 f0             	mov    rax,rsi
4978:	48 f7 e5             	mul    rbp
497b:	4c 39 fa             	cmp    rdx,r15
497e:	77 13                	ja     4993 <factor+0x133>
4980:	4c 89 f8             	mov    rax,r15
4983:	48 29 d0             	sub    rax,rdx
4986:	49 0f af c1          	imul   rax,r9
498a:	4c 39 d8             	cmp    rax,r11
498d:	0f 86 d9 05 00 00    	jbe    4f6c <factor+0x70c>
4993:	4d 89 f8             	mov    r8,r15
4996:	4c 89 d3             	mov    rbx,r10
4999:	e9 42 ff ff ff       	jmp    48e0 <factor+0x80>
499e:	66 90                	xchg   ax,ax
49a0:	3d 9b 02 00 00       	cmp    eax,0x29b
49a5:	0f 87 25 03 00 00    	ja     4cd0 <factor+0x470>
49ab:	89 c1                	mov    ecx,eax
49ad:	48 8d 35 ac 86 00 00 	lea    rsi,[rip+0x86ac]        # d060 <primes_dtab>
49b4:	48 89 ca             	mov    rdx,rcx
49b7:	48 c1 e2 04          	shl    rdx,0x4
49bb:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
49c0:	48 01 f2             	add    rdx,rsi
49c3:	4c 8b 12             	mov    r10,QWORD PTR [rdx]
49c6:	4c 8b 5a 08          	mov    r11,QWORD PTR [rdx+0x8]
49ca:	48 8d 15 cf b0 00 00 	lea    rdx,[rip+0xb0cf]        # faa0 <primes_diff8>
49d1:	44 0f b6 24 0a       	movzx  r12d,BYTE PTR [rdx+rcx*1]
49d6:	4c 8d 3d 83 b3 00 00 	lea    r15,[rip+0xb383]        # fd60 <primes_diff>
49dd:	e9 c6 00 00 00       	jmp    4aa8 <factor+0x248>
49e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
49e8:	49 8b 56 10          	mov    rdx,QWORD PTR [r14+0x10]
49ec:	48 0f af d3          	imul   rdx,rbx
49f0:	49 3b 56 18          	cmp    rdx,QWORD PTR [r14+0x18]
49f4:	0f 86 26 01 00 00    	jbe    4b20 <factor+0x2c0>
49fa:	49 8b 56 20          	mov    rdx,QWORD PTR [r14+0x20]
49fe:	48 0f af d3          	imul   rdx,rbx
4a02:	49 3b 56 28          	cmp    rdx,QWORD PTR [r14+0x28]
4a06:	0f 86 74 01 00 00    	jbe    4b80 <factor+0x320>
4a0c:	49 8b 56 30          	mov    rdx,QWORD PTR [r14+0x30]
4a10:	48 0f af d3          	imul   rdx,rbx
4a14:	49 39 56 38          	cmp    QWORD PTR [r14+0x38],rdx
4a18:	0f 83 ca 01 00 00    	jae    4be8 <factor+0x388>
4a1e:	49 8b 56 40          	mov    rdx,QWORD PTR [r14+0x40]
4a22:	48 0f af d3          	imul   rdx,rbx
4a26:	49 39 56 48          	cmp    QWORD PTR [r14+0x48],rdx
4a2a:	0f 83 30 02 00 00    	jae    4c60 <factor+0x400>
4a30:	49 8b 56 50          	mov    rdx,QWORD PTR [r14+0x50]
4a34:	48 0f af d3          	imul   rdx,rbx
4a38:	49 3b 56 58          	cmp    rdx,QWORD PTR [r14+0x58]
4a3c:	0f 86 be 03 00 00    	jbe    4e00 <factor+0x5a0>
4a42:	49 8b 56 60          	mov    rdx,QWORD PTR [r14+0x60]
4a46:	48 0f af d3          	imul   rdx,rbx
4a4a:	49 39 56 68          	cmp    QWORD PTR [r14+0x68],rdx
4a4e:	0f 83 3c 03 00 00    	jae    4d90 <factor+0x530>
4a54:	49 8b 56 70          	mov    rdx,QWORD PTR [r14+0x70]
4a58:	48 0f af d3          	imul   rdx,rbx
4a5c:	49 3b 56 78          	cmp    rdx,QWORD PTR [r14+0x78]
4a60:	0f 86 ba 02 00 00    	jbe    4d20 <factor+0x4c0>
4a66:	4c 01 e5             	add    rbp,r12
4a69:	48 89 ea             	mov    rdx,rbp
4a6c:	48 0f af d5          	imul   rdx,rbp
4a70:	48 39 d3             	cmp    rbx,rdx
4a73:	0f 82 57 02 00 00    	jb     4cd0 <factor+0x470>
4a79:	83 c0 08             	add    eax,0x8
4a7c:	3d 9b 02 00 00       	cmp    eax,0x29b
4a81:	0f 87 49 02 00 00    	ja     4cd0 <factor+0x470>
4a87:	89 c1                	mov    ecx,eax
4a89:	48 8d 35 10 b0 00 00 	lea    rsi,[rip+0xb010]        # faa0 <primes_diff8>
4a90:	48 89 ca             	mov    rdx,rcx
4a93:	48 c1 e2 04          	shl    rdx,0x4
4a97:	48 03 54 24 08       	add    rdx,QWORD PTR [rsp+0x8]
4a9c:	44 0f b6 24 0e       	movzx  r12d,BYTE PTR [rsi+rcx*1]
4aa1:	4c 8b 12             	mov    r10,QWORD PTR [rdx]
4aa4:	4c 8b 5a 08          	mov    r11,QWORD PTR [rdx+0x8]
4aa8:	48 89 da             	mov    rdx,rbx
4aab:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
4ab0:	48 c1 e1 04          	shl    rcx,0x4
4ab4:	49 0f af d2          	imul   rdx,r10
4ab8:	4c 8d 34 0e          	lea    r14,[rsi+rcx*1]
4abc:	4c 39 da             	cmp    rdx,r11
4abf:	0f 87 23 ff ff ff    	ja     49e8 <factor+0x188>
4ac5:	48 89 d3             	mov    rbx,rdx
4ac8:	48 89 ee             	mov    rsi,rbp
4acb:	ba 01 00 00 00       	mov    edx,0x1
4ad0:	4c 89 ef             	mov    rdi,r13
4ad3:	4c 89 44 24 28       	mov    QWORD PTR [rsp+0x28],r8
4ad8:	4c 89 5c 24 20       	mov    QWORD PTR [rsp+0x20],r11
4add:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
4ae2:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
4ae6:	e8 15 dc ff ff       	call   2700 <factor_insert_multiplicity>
4aeb:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
4af0:	48 89 da             	mov    rdx,rbx
4af3:	4c 8b 5c 24 20       	mov    r11,QWORD PTR [rsp+0x20]
4af8:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
4afc:	4c 8b 44 24 28       	mov    r8,QWORD PTR [rsp+0x28]
4b01:	49 0f af d2          	imul   rdx,r10
4b05:	4c 39 da             	cmp    rdx,r11
4b08:	76 bb                	jbe    4ac5 <factor+0x265>
4b0a:	49 8b 56 10          	mov    rdx,QWORD PTR [r14+0x10]
4b0e:	48 0f af d3          	imul   rdx,rbx
4b12:	49 3b 56 18          	cmp    rdx,QWORD PTR [r14+0x18]
4b16:	0f 87 de fe ff ff    	ja     49fa <factor+0x19a>
4b1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4b20:	8d 70 01             	lea    esi,[rax+0x1]
4b23:	41 0f b6 34 37       	movzx  esi,BYTE PTR [r15+rsi*1]
4b28:	48 8d 0c 2e          	lea    rcx,[rsi+rbp*1]
4b2c:	48 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],rcx
4b31:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
4b36:	48 89 d3             	mov    rbx,rdx
4b39:	4c 89 ef             	mov    rdi,r13
4b3c:	ba 01 00 00 00       	mov    edx,0x1
4b41:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
4b46:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
4b4a:	e8 b1 db ff ff       	call   2700 <factor_insert_multiplicity>
4b4f:	49 8b 56 10          	mov    rdx,QWORD PTR [r14+0x10]
4b53:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
4b57:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
4b5c:	48 0f af d3          	imul   rdx,rbx
4b60:	49 3b 56 18          	cmp    rdx,QWORD PTR [r14+0x18]
4b64:	76 cb                	jbe    4b31 <factor+0x2d1>
4b66:	49 8b 56 20          	mov    rdx,QWORD PTR [r14+0x20]
4b6a:	48 0f af d3          	imul   rdx,rbx
4b6e:	49 3b 56 28          	cmp    rdx,QWORD PTR [r14+0x28]
4b72:	0f 87 94 fe ff ff    	ja     4a0c <factor+0x1ac>
4b78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4b7f:	00
4b80:	8d 70 01             	lea    esi,[rax+0x1]
4b83:	8d 78 02             	lea    edi,[rax+0x2]
4b86:	41 0f b6 34 37       	movzx  esi,BYTE PTR [r15+rsi*1]
4b8b:	41 0f b6 3c 3f       	movzx  edi,BYTE PTR [r15+rdi*1]
4b90:	48 01 fe             	add    rsi,rdi
4b93:	48 8d 0c 2e          	lea    rcx,[rsi+rbp*1]
4b97:	48 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],rcx
4b9c:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
4ba1:	48 89 d3             	mov    rbx,rdx
4ba4:	4c 89 ef             	mov    rdi,r13
4ba7:	ba 01 00 00 00       	mov    edx,0x1
4bac:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
4bb1:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
4bb5:	e8 46 db ff ff       	call   2700 <factor_insert_multiplicity>
4bba:	49 8b 56 20          	mov    rdx,QWORD PTR [r14+0x20]
4bbe:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
4bc2:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
4bc7:	48 0f af d3          	imul   rdx,rbx
4bcb:	49 3b 56 28          	cmp    rdx,QWORD PTR [r14+0x28]
4bcf:	76 cb                	jbe    4b9c <factor+0x33c>
4bd1:	49 8b 56 30          	mov    rdx,QWORD PTR [r14+0x30]
4bd5:	48 0f af d3          	imul   rdx,rbx
4bd9:	49 39 56 38          	cmp    QWORD PTR [r14+0x38],rdx
4bdd:	0f 82 3b fe ff ff    	jb     4a1e <factor+0x1be>
4be3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4be8:	8d 70 01             	lea    esi,[rax+0x1]
4beb:	8d 78 03             	lea    edi,[rax+0x3]
4bee:	41 0f b6 34 37       	movzx  esi,BYTE PTR [r15+rsi*1]
4bf3:	41 0f b6 3c 3f       	movzx  edi,BYTE PTR [r15+rdi*1]
4bf8:	48 01 fe             	add    rsi,rdi
4bfb:	8d 78 02             	lea    edi,[rax+0x2]
4bfe:	48 01 ee             	add    rsi,rbp
4c01:	41 0f b6 3c 3f       	movzx  edi,BYTE PTR [r15+rdi*1]
4c06:	48 8d 0c 3e          	lea    rcx,[rsi+rdi*1]
4c0a:	48 89 4c 24 20       	mov    QWORD PTR [rsp+0x20],rcx
4c0f:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
4c14:	48 89 d3             	mov    rbx,rdx
4c17:	4c 89 ef             	mov    rdi,r13
4c1a:	ba 01 00 00 00       	mov    edx,0x1
4c1f:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
4c24:	89 44 24 10          	mov    DWORD PTR [rsp+0x10],eax
4c28:	e8 d3 da ff ff       	call   2700 <factor_insert_multiplicity>
4c2d:	49 8b 56 30          	mov    rdx,QWORD PTR [r14+0x30]
4c31:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
4c35:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
4c3a:	48 0f af d3          	imul   rdx,rbx
4c3e:	49 3b 56 38          	cmp    rdx,QWORD PTR [r14+0x38]
4c42:	76 cb                	jbe    4c0f <factor+0x3af>
4c44:	49 8b 56 40          	mov    rdx,QWORD PTR [r14+0x40]
4c48:	48 0f af d3          	imul   rdx,rbx
4c4c:	49 39 56 48          	cmp    QWORD PTR [r14+0x48],rdx
4c50:	0f 82 da fd ff ff    	jb     4a30 <factor+0x1d0>
4c56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4c5d:	00 00 00
4c60:	8d 48 01             	lea    ecx,[rax+0x1]
4c63:	44 8d 50 05          	lea    r10d,[rax+0x5]
4c67:	48 89 d3             	mov    rbx,rdx
4c6a:	89 4c 24 10          	mov    DWORD PTR [rsp+0x10],ecx
4c6e:	8b 54 24 10          	mov    edx,DWORD PTR [rsp+0x10]
4c72:	48 89 ee             	mov    rsi,rbp
4c75:	89 d7                	mov    edi,edx
4c77:	83 c2 01             	add    edx,0x1
4c7a:	41 0f b6 3c 3f       	movzx  edi,BYTE PTR [r15+rdi*1]
4c7f:	48 01 fe             	add    rsi,rdi
4c82:	41 39 d2             	cmp    r10d,edx
4c85:	75 ee                	jne    4c75 <factor+0x415>
4c87:	ba 01 00 00 00       	mov    edx,0x1
4c8c:	4c 89 ef             	mov    rdi,r13
4c8f:	44 89 54 24 28       	mov    DWORD PTR [rsp+0x28],r10d
4c94:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
4c99:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
4c9d:	e8 5e da ff ff       	call   2700 <factor_insert_multiplicity>
4ca2:	49 8b 56 40          	mov    rdx,QWORD PTR [r14+0x40]
4ca6:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
4caa:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
4caf:	44 8b 54 24 28       	mov    r10d,DWORD PTR [rsp+0x28]
4cb4:	48 0f af d3          	imul   rdx,rbx
4cb8:	49 3b 56 48          	cmp    rdx,QWORD PTR [r14+0x48]
4cbc:	0f 87 6e fd ff ff    	ja     4a30 <factor+0x1d0>
4cc2:	48 89 d3             	mov    rbx,rdx
4cc5:	eb a7                	jmp    4c6e <factor+0x40e>
4cc7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4cce:	00 00
4cd0:	4d 85 c0             	test   r8,r8
4cd3:	0f 85 f7 01 00 00    	jne    4ed0 <factor+0x670>
4cd9:	48 83 fb 01          	cmp    rbx,0x1
4cdd:	0f 86 ae fb ff ff    	jbe    4891 <factor+0x31>
4ce3:	31 ff                	xor    edi,edi
4ce5:	48 89 de             	mov    rsi,rbx
4ce8:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
4ced:	e8 fe 0b 00 00       	call   58f0 <prime2_p>
4cf2:	84 c0                	test   al,al
4cf4:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
4cf9:	0f 85 51 02 00 00    	jne    4f50 <factor+0x6f0>
4cff:	48 83 c4 38          	add    rsp,0x38
4d03:	4c 89 ea             	mov    rdx,r13
4d06:	48 89 df             	mov    rdi,rbx
4d09:	5b                   	pop    rbx
4d0a:	5d                   	pop    rbp
4d0b:	41 5c                	pop    r12
4d0d:	41 5d                	pop    r13
4d0f:	41 5e                	pop    r14
4d11:	41 5f                	pop    r15
4d13:	be 01 00 00 00       	mov    esi,0x1
4d18:	e9 53 f0 ff ff       	jmp    3d70 <factor_using_pollard_rho>
4d1d:	0f 1f 00             	nop    DWORD PTR [rax]
4d20:	8d 48 01             	lea    ecx,[rax+0x1]
4d23:	44 8d 50 08          	lea    r10d,[rax+0x8]
4d27:	48 89 d3             	mov    rbx,rdx
4d2a:	89 4c 24 10          	mov    DWORD PTR [rsp+0x10],ecx
4d2e:	8b 54 24 10          	mov    edx,DWORD PTR [rsp+0x10]
4d32:	48 89 ee             	mov    rsi,rbp
4d35:	0f 1f 00             	nop    DWORD PTR [rax]
4d38:	89 d7                	mov    edi,edx
4d3a:	83 c2 01             	add    edx,0x1
4d3d:	41 0f b6 3c 3f       	movzx  edi,BYTE PTR [r15+rdi*1]
4d42:	48 01 fe             	add    rsi,rdi
4d45:	41 39 d2             	cmp    r10d,edx
4d48:	75 ee                	jne    4d38 <factor+0x4d8>
4d4a:	ba 01 00 00 00       	mov    edx,0x1
4d4f:	4c 89 ef             	mov    rdi,r13
4d52:	44 89 54 24 28       	mov    DWORD PTR [rsp+0x28],r10d
4d57:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
4d5c:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
4d60:	e8 9b d9 ff ff       	call   2700 <factor_insert_multiplicity>
4d65:	49 8b 56 70          	mov    rdx,QWORD PTR [r14+0x70]
4d69:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
4d6d:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
4d72:	44 8b 54 24 28       	mov    r10d,DWORD PTR [rsp+0x28]
4d77:	48 0f af d3          	imul   rdx,rbx
4d7b:	49 3b 56 78          	cmp    rdx,QWORD PTR [r14+0x78]
4d7f:	0f 87 e1 fc ff ff    	ja     4a66 <factor+0x206>
4d85:	48 89 d3             	mov    rbx,rdx
4d88:	eb a4                	jmp    4d2e <factor+0x4ce>
4d8a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4d90:	8d 48 01             	lea    ecx,[rax+0x1]
4d93:	44 8d 50 07          	lea    r10d,[rax+0x7]
4d97:	48 89 d3             	mov    rbx,rdx
4d9a:	89 4c 24 10          	mov    DWORD PTR [rsp+0x10],ecx
4d9e:	8b 54 24 10          	mov    edx,DWORD PTR [rsp+0x10]
4da2:	48 89 ee             	mov    rsi,rbp
4da5:	0f 1f 00             	nop    DWORD PTR [rax]
4da8:	89 d7                	mov    edi,edx
4daa:	83 c2 01             	add    edx,0x1
4dad:	41 0f b6 3c 3f       	movzx  edi,BYTE PTR [r15+rdi*1]
4db2:	48 01 fe             	add    rsi,rdi
4db5:	41 39 d2             	cmp    r10d,edx
4db8:	75 ee                	jne    4da8 <factor+0x548>
4dba:	ba 01 00 00 00       	mov    edx,0x1
4dbf:	4c 89 ef             	mov    rdi,r13
4dc2:	44 89 54 24 28       	mov    DWORD PTR [rsp+0x28],r10d
4dc7:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
4dcc:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
4dd0:	e8 2b d9 ff ff       	call   2700 <factor_insert_multiplicity>
4dd5:	49 8b 56 60          	mov    rdx,QWORD PTR [r14+0x60]
4dd9:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
4ddd:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
4de2:	44 8b 54 24 28       	mov    r10d,DWORD PTR [rsp+0x28]
4de7:	48 0f af d3          	imul   rdx,rbx
4deb:	49 3b 56 68          	cmp    rdx,QWORD PTR [r14+0x68]
4def:	0f 87 5f fc ff ff    	ja     4a54 <factor+0x1f4>
4df5:	48 89 d3             	mov    rbx,rdx
4df8:	eb a4                	jmp    4d9e <factor+0x53e>
4dfa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4e00:	8d 48 01             	lea    ecx,[rax+0x1]
4e03:	44 8d 50 06          	lea    r10d,[rax+0x6]
4e07:	48 89 d3             	mov    rbx,rdx
4e0a:	89 4c 24 10          	mov    DWORD PTR [rsp+0x10],ecx
4e0e:	8b 54 24 10          	mov    edx,DWORD PTR [rsp+0x10]
4e12:	48 89 ee             	mov    rsi,rbp
4e15:	89 d7                	mov    edi,edx
4e17:	83 c2 01             	add    edx,0x1
4e1a:	41 0f b6 3c 3f       	movzx  edi,BYTE PTR [r15+rdi*1]
4e1f:	48 01 fe             	add    rsi,rdi
4e22:	41 39 d2             	cmp    r10d,edx
4e25:	75 ee                	jne    4e15 <factor+0x5b5>
4e27:	ba 01 00 00 00       	mov    edx,0x1
4e2c:	4c 89 ef             	mov    rdi,r13
4e2f:	44 89 54 24 28       	mov    DWORD PTR [rsp+0x28],r10d
4e34:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
4e39:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
4e3d:	e8 be d8 ff ff       	call   2700 <factor_insert_multiplicity>
4e42:	49 8b 56 50          	mov    rdx,QWORD PTR [r14+0x50]
4e46:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
4e4a:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
4e4f:	44 8b 54 24 28       	mov    r10d,DWORD PTR [rsp+0x28]
4e54:	48 0f af d3          	imul   rdx,rbx
4e58:	49 3b 56 58          	cmp    rdx,QWORD PTR [r14+0x58]
4e5c:	0f 87 e0 fb ff ff    	ja     4a42 <factor+0x1e2>
4e62:	48 89 d3             	mov    rbx,rdx
4e65:	eb a7                	jmp    4e0e <factor+0x5ae>
4e67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4e6e:	00 00
4e70:	48 85 db             	test   rbx,rbx
4e73:	0f 85 97 00 00 00    	jne    4f10 <factor+0x6b0>
4e79:	49 0f bc c8          	bsf    rcx,r8
4e7d:	8d 51 40             	lea    edx,[rcx+0x40]
4e80:	4c 89 c3             	mov    rbx,r8
4e83:	be 02 00 00 00       	mov    esi,0x2
4e88:	4c 89 ef             	mov    rdi,r13
4e8b:	48 d3 eb             	shr    rbx,cl
4e8e:	e8 6d d8 ff ff       	call   2700 <factor_insert_multiplicity>
4e93:	45 31 c0             	xor    r8d,r8d
4e96:	48 8d 0d c3 81 00 00 	lea    rcx,[rip+0x81c3]        # d060 <primes_dtab>
4e9d:	41 bc 1a 00 00 00    	mov    r12d,0x1a
4ea3:	49 bb 55 55 55 55 55 	movabs r11,0x5555555555555555
4eaa:	55 55 55
4ead:	49 ba ab aa aa aa aa 	movabs r10,0xaaaaaaaaaaaaaaab
4eb4:	aa aa aa
4eb7:	bd 03 00 00 00       	mov    ebp,0x3
4ebc:	31 c0                	xor    eax,eax
4ebe:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
4ec3:	31 c9                	xor    ecx,ecx
4ec5:	e9 0c fb ff ff       	jmp    49d6 <factor+0x176>
4eca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4ed0:	4c 89 c7             	mov    rdi,r8
4ed3:	48 89 de             	mov    rsi,rbx
4ed6:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
4edb:	e8 10 0a 00 00       	call   58f0 <prime2_p>
4ee0:	84 c0                	test   al,al
4ee2:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
4ee7:	75 67                	jne    4f50 <factor+0x6f0>
4ee9:	48 83 c4 38          	add    rsp,0x38
4eed:	4c 89 e9             	mov    rcx,r13
4ef0:	48 89 de             	mov    rsi,rbx
4ef3:	5b                   	pop    rbx
4ef4:	5d                   	pop    rbp
4ef5:	41 5c                	pop    r12
4ef7:	41 5d                	pop    r13
4ef9:	41 5e                	pop    r14
4efb:	41 5f                	pop    r15
4efd:	ba 01 00 00 00       	mov    edx,0x1
4f02:	4c 89 c7             	mov    rdi,r8
4f05:	e9 76 f2 ff ff       	jmp    4180 <factor_using_pollard_rho2>
4f0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4f10:	b9 40 00 00 00       	mov    ecx,0x40
4f15:	4c 89 c0             	mov    rax,r8
4f18:	be 02 00 00 00       	mov    esi,0x2
4f1d:	48 0f bc d3          	bsf    rdx,rbx
4f21:	29 d1                	sub    ecx,edx
4f23:	4c 89 ef             	mov    rdi,r13
4f26:	48 d3 e0             	shl    rax,cl
4f29:	89 d1                	mov    ecx,edx
4f2b:	49 d3 e8             	shr    r8,cl
4f2e:	48 d3 eb             	shr    rbx,cl
4f31:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
4f36:	48 09 c3             	or     rbx,rax
4f39:	e8 c2 d7 ff ff       	call   2700 <factor_insert_multiplicity>
4f3e:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
4f43:	e9 61 f9 ff ff       	jmp    48a9 <factor+0x49>
4f48:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4f4f:	00
4f50:	48 83 c4 38          	add    rsp,0x38
4f54:	48 89 da             	mov    rdx,rbx
4f57:	4c 89 ef             	mov    rdi,r13
4f5a:	5b                   	pop    rbx
4f5b:	5d                   	pop    rbp
4f5c:	41 5c                	pop    r12
4f5e:	41 5d                	pop    r13
4f60:	41 5e                	pop    r14
4f62:	41 5f                	pop    r15
4f64:	4c 89 c6             	mov    rsi,r8
4f67:	e9 34 e1 ff ff       	jmp    30a0 <factor_insert_large>
4f6c:	49 89 c7             	mov    r15,rax
4f6f:	49 89 f2             	mov    r10,rsi
4f72:	e9 bf f9 ff ff       	jmp    4936 <factor+0xd6>
4f77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4f7e:	00 00

0000000000004f80 <prime_p.part.4>:
4f80:	41 57                	push   r15
4f82:	41 56                	push   r14
4f84:	41 55                	push   r13
4f86:	41 54                	push   r12
4f88:	4c 8d 67 ff          	lea    r12,[rdi-0x1]
4f8c:	55                   	push   rbp
4f8d:	53                   	push   rbx
4f8e:	48 89 fb             	mov    rbx,rdi
4f91:	48 81 ec 48 01 00 00 	sub    rsp,0x148
4f98:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
4f9f:	00 00
4fa1:	48 89 84 24 38 01 00 	mov    QWORD PTR [rsp+0x138],rax
4fa8:	00
4fa9:	31 c0                	xor    eax,eax
4fab:	41 f6 c4 01          	test   r12b,0x1
4faf:	4c 89 24 24          	mov    QWORD PTR [rsp],r12
4fb3:	0f 85 b3 02 00 00    	jne    526c <prime_p.part.4+0x2ec>
4fb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4fc0:	49 d1 ec             	shr    r12,1
4fc3:	83 c0 01             	add    eax,0x1
4fc6:	41 f6 c4 01          	test   r12b,0x1
4fca:	74 f4                	je     4fc0 <prime_p.part.4+0x40>
4fcc:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
4fd0:	48 89 d8             	mov    rax,rbx
4fd3:	48 8d 15 06 80 00 00 	lea    rdx,[rip+0x8006]        # cfe0 <binvert_table>
4fda:	48 89 de             	mov    rsi,rbx
4fdd:	48 d1 e8             	shr    rax,1
4fe0:	bf 40 00 00 00       	mov    edi,0x40
4fe5:	45 31 d2             	xor    r10d,r10d
4fe8:	83 e0 7f             	and    eax,0x7f
4feb:	b9 01 00 00 00       	mov    ecx,0x1
4ff0:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
4ff4:	48 8d 14 00          	lea    rdx,[rax+rax*1]
4ff8:	48 0f af c0          	imul   rax,rax
4ffc:	48 0f af c3          	imul   rax,rbx
5000:	48 29 c2             	sub    rdx,rax
5003:	48 8d 04 12          	lea    rax,[rdx+rdx*1]
5007:	48 0f af d2          	imul   rdx,rdx
500b:	48 0f af d3          	imul   rdx,rbx
500f:	48 29 d0             	sub    rax,rdx
5012:	4c 8d 34 00          	lea    r14,[rax+rax*1]
5016:	48 0f af c0          	imul   rax,rax
501a:	48 0f af c3          	imul   rax,rbx
501e:	49 29 c6             	sub    r14,rax
5021:	31 c0                	xor    eax,eax
5023:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5028:	48 89 f2             	mov    rdx,rsi
502b:	48 d1 e8             	shr    rax,1
502e:	48 d1 ee             	shr    rsi,1
5031:	48 c1 e2 3f          	shl    rdx,0x3f
5035:	48 09 d0             	or     rax,rdx
5038:	48 39 ce             	cmp    rsi,rcx
503b:	72 07                	jb     5044 <prime_p.part.4+0xc4>
503d:	75 0b                	jne    504a <prime_p.part.4+0xca>
503f:	4c 39 d0             	cmp    rax,r10
5042:	77 06                	ja     504a <prime_p.part.4+0xca>
5044:	49 29 c2             	sub    r10,rax
5047:	48 19 f1             	sbb    rcx,rsi
504a:	83 ef 01             	sub    edi,0x1
504d:	75 d9                	jne    5028 <prime_p.part.4+0xa8>
504f:	48 89 d8             	mov    rax,rbx
5052:	45 31 db             	xor    r11d,r11d
5055:	44 8b 44 24 14       	mov    r8d,DWORD PTR [rsp+0x14]
505a:	4c 29 d0             	sub    rax,r10
505d:	4d 89 d1             	mov    r9,r10
5060:	4c 89 e1             	mov    rcx,r12
5063:	4c 39 d0             	cmp    rax,r10
5066:	4c 89 f6             	mov    rsi,r14
5069:	48 89 df             	mov    rdi,rbx
506c:	41 0f 97 c3          	seta   r11b
5070:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
5075:	49 f7 db             	neg    r11
5078:	4c 89 d8             	mov    rax,r11
507b:	4f 8d 1c 12          	lea    r11,[r10+r10*1]
507f:	48 21 d8             	and    rax,rbx
5082:	49 29 db             	sub    r11,rbx
5085:	4e 8d 3c 18          	lea    r15,[rax+r11*1]
5089:	4c 89 fa             	mov    rdx,r15
508c:	e8 ef d7 ff ff       	call   2880 <millerrabin>
5091:	84 c0                	test   al,al
5093:	88 44 24 2f          	mov    BYTE PTR [rsp+0x2f],al
5097:	0f 84 83 01 00 00    	je     5220 <prime_p.part.4+0x2a0>
509d:	48 8d 6c 24 30       	lea    rbp,[rsp+0x30]
50a2:	48 8b 34 24          	mov    rsi,QWORD PTR [rsp]
50a6:	31 ff                	xor    edi,edi
50a8:	4c 8d 2d b1 ac 00 00 	lea    r13,[rip+0xacb1]        # fd60 <primes_diff>
50af:	48 89 ea             	mov    rdx,rbp
50b2:	48 89 6c 24 20       	mov    QWORD PTR [rsp+0x20],rbp
50b7:	e8 a4 f7 ff ff       	call   4860 <factor>
50bc:	0f b6 84 24 2a 01 00 	movzx  eax,BYTE PTR [rsp+0x12a]
50c3:	00
50c4:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
50c9:	4c 89 64 24 18       	mov    QWORD PTR [rsp+0x18],r12
50ce:	4d 89 d4             	mov    r12,r10
50d1:	4d 89 fa             	mov    r10,r15
50d4:	89 44 24 28          	mov    DWORD PTR [rsp+0x28],eax
50d8:	83 e8 01             	sub    eax,0x1
50db:	48 8d 44 c5 10       	lea    rax,[rbp+rax*8+0x10]
50e0:	bd 02 00 00 00       	mov    ebp,0x2
50e5:	49 89 c7             	mov    r15,rax
50e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
50ef:	00
50f0:	8b 44 24 28          	mov    eax,DWORD PTR [rsp+0x28]
50f4:	85 c0                	test   eax,eax
50f6:	0f 84 f4 00 00 00    	je     51f0 <prime_p.part.4+0x270>
50fc:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
5101:	48 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],rbp
5106:	4c 8d 58 10          	lea    r11,[rax+0x10]
510a:	4c 89 dd             	mov    rbp,r11
510d:	4d 89 d3             	mov    r11,r10
5110:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
5114:	31 d2                	xor    edx,edx
5116:	4d 89 e0             	mov    r8,r12
5119:	4c 89 f1             	mov    rcx,r14
511c:	4c 89 df             	mov    rdi,r11
511f:	48 f7 75 00          	div    QWORD PTR [rbp+0x0]
5123:	48 89 da             	mov    rdx,rbx
5126:	48 89 c6             	mov    rsi,rax
5129:	e8 e2 d6 ff ff       	call   2810 <powm>
512e:	49 39 ef             	cmp    r15,rbp
5131:	0f 84 a1 00 00 00    	je     51d8 <prime_p.part.4+0x258>
5137:	48 83 c5 08          	add    rbp,0x8
513b:	4c 39 e0             	cmp    rax,r12
513e:	75 d0                	jne    5110 <prime_p.part.4+0x190>
5140:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
5145:	0f 1f 00             	nop    DWORD PTR [rax]
5148:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
514d:	48 01 c5             	add    rbp,rax
5150:	4c 89 e0             	mov    rax,r12
5153:	48 f7 e5             	mul    rbp
5156:	48 85 d2             	test   rdx,rdx
5159:	49 89 c2             	mov    r10,rax
515c:	0f 85 c5 00 00 00    	jne    5227 <prime_p.part.4+0x2a7>
5162:	31 d2                	xor    edx,edx
5164:	48 f7 f3             	div    rbx
5167:	49 89 d2             	mov    r10,rdx
516a:	44 8b 44 24 14       	mov    r8d,DWORD PTR [rsp+0x14]
516f:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
5174:	4d 89 e1             	mov    r9,r12
5177:	4c 89 d2             	mov    rdx,r10
517a:	4c 89 f6             	mov    rsi,r14
517d:	48 89 df             	mov    rdi,rbx
5180:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
5185:	e8 f6 d6 ff ff       	call   2880 <millerrabin>
518a:	84 c0                	test   al,al
518c:	0f 84 8e 00 00 00    	je     5220 <prime_p.part.4+0x2a0>
5192:	48 8d 05 63 ae 00 00 	lea    rax,[rip+0xae63]        # fffc <primes_diff+0x29c>
5199:	49 83 c5 01          	add    r13,0x1
519d:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
51a2:	4c 39 e8             	cmp    rax,r13
51a5:	0f 85 45 ff ff ff    	jne    50f0 <prime_p.part.4+0x170>
51ab:	48 8d 35 16 79 00 00 	lea    rsi,[rip+0x7916]        # cac8 <_IO_stdin_used+0x88>
51b2:	ba 05 00 00 00       	mov    edx,0x5
51b7:	31 ff                	xor    edi,edi
51b9:	e8 22 cd ff ff       	call   1ee0 <dcgettext@plt>
51be:	31 f6                	xor    esi,esi
51c0:	48 89 c2             	mov    rdx,rax
51c3:	31 ff                	xor    edi,edi
51c5:	31 c0                	xor    eax,eax
51c7:	e8 14 d0 ff ff       	call   21e0 <error@plt>
51cc:	e8 0f cc ff ff       	call   1de0 <abort@plt>
51d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
51d8:	4c 39 e0             	cmp    rax,r12
51db:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
51e0:	0f 84 62 ff ff ff    	je     5148 <prime_p.part.4+0x1c8>
51e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
51ed:	00 00 00
51f0:	48 8b 9c 24 38 01 00 	mov    rbx,QWORD PTR [rsp+0x138]
51f7:	00
51f8:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
51ff:	00 00
5201:	0f b6 44 24 2f       	movzx  eax,BYTE PTR [rsp+0x2f]
5206:	75 75                	jne    527d <prime_p.part.4+0x2fd>
5208:	48 81 c4 48 01 00 00 	add    rsp,0x148
520f:	5b                   	pop    rbx
5210:	5d                   	pop    rbp
5211:	41 5c                	pop    r12
5213:	41 5d                	pop    r13
5215:	41 5e                	pop    r14
5217:	41 5f                	pop    r15
5219:	c3                   	ret
521a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5220:	c6 44 24 2f 00       	mov    BYTE PTR [rsp+0x2f],0x0
5225:	eb c9                	jmp    51f0 <prime_p.part.4+0x270>
5227:	48 39 d3             	cmp    rbx,rdx
522a:	76 56                	jbe    5282 <prime_p.part.4+0x302>
522c:	48 89 de             	mov    rsi,rbx
522f:	bf 40 00 00 00       	mov    edi,0x40
5234:	31 c9                	xor    ecx,ecx
5236:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
523d:	00 00 00
5240:	48 89 f0             	mov    rax,rsi
5243:	48 d1 e9             	shr    rcx,1
5246:	48 d1 ee             	shr    rsi,1
5249:	48 c1 e0 3f          	shl    rax,0x3f
524d:	48 09 c1             	or     rcx,rax
5250:	48 39 d6             	cmp    rsi,rdx
5253:	72 07                	jb     525c <prime_p.part.4+0x2dc>
5255:	75 0b                	jne    5262 <prime_p.part.4+0x2e2>
5257:	4c 39 d1             	cmp    rcx,r10
525a:	77 06                	ja     5262 <prime_p.part.4+0x2e2>
525c:	49 29 ca             	sub    r10,rcx
525f:	48 19 f2             	sbb    rdx,rsi
5262:	83 ef 01             	sub    edi,0x1
5265:	75 d9                	jne    5240 <prime_p.part.4+0x2c0>
5267:	e9 fe fe ff ff       	jmp    516a <prime_p.part.4+0x1ea>
526c:	4c 8b 24 24          	mov    r12,QWORD PTR [rsp]
5270:	c7 44 24 14 00 00 00 	mov    DWORD PTR [rsp+0x14],0x0
5277:	00
5278:	e9 53 fd ff ff       	jmp    4fd0 <prime_p.part.4+0x50>
527d:	e8 9e cc ff ff       	call   1f20 <__stack_chk_fail@plt>
5282:	48 8d 0d 3f 7d 00 00 	lea    rcx,[rip+0x7d3f]        # cfc8 <__PRETTY_FUNCTION__.8834>
5289:	48 8d 35 b8 77 00 00 	lea    rsi,[rip+0x77b8]        # ca48 <_IO_stdin_used+0x8>
5290:	48 8d 3d 72 7b 00 00 	lea    rdi,[rip+0x7b72]        # ce09 <_IO_stdin_used+0x3c9>
5297:	ba f4 04 00 00       	mov    edx,0x4f4
529c:	e8 3f cd ff ff       	call   1fe0 <__assert_fail@plt>
52a1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
52a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
52ad:	00 00 00

00000000000052b0 <prime2_p.part.5>:
52b0:	41 57                	push   r15
52b2:	41 56                	push   r14
52b4:	49 89 f7             	mov    r15,rsi
52b7:	41 55                	push   r13
52b9:	41 54                	push   r12
52bb:	55                   	push   rbp
52bc:	53                   	push   rbx
52bd:	48 89 fb             	mov    rbx,rdi
52c0:	48 81 ec 08 02 00 00 	sub    rsp,0x208
52c7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
52ce:	00 00
52d0:	48 89 84 24 f8 01 00 	mov    QWORD PTR [rsp+0x1f8],rax
52d7:	00
52d8:	31 c0                	xor    eax,eax
52da:	31 c0                	xor    eax,eax
52dc:	48 85 f6             	test   rsi,rsi
52df:	0f 94 c0             	sete   al
52e2:	48 29 c7             	sub    rdi,rax
52e5:	48 89 f8             	mov    rax,rdi
52e8:	48 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],rdi
52ed:	48 89 f7             	mov    rdi,rsi
52f0:	48 83 ef 01          	sub    rdi,0x1
52f4:	48 89 7c 24 18       	mov    QWORD PTR [rsp+0x18],rdi
52f9:	0f 85 81 05 00 00    	jne    5880 <prime2_p.part.5+0x5d0>
52ff:	48 0f bc c8          	bsf    rcx,rax
5303:	48 d3 e8             	shr    rax,cl
5306:	48 c7 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],0x0
530d:	00 00 00 00 00
5312:	48 89 84 24 90 00 00 	mov    QWORD PTR [rsp+0x90],rax
5319:	00
531a:	8d 41 40             	lea    eax,[rcx+0x40]
531d:	89 44 24 70          	mov    DWORD PTR [rsp+0x70],eax
5321:	4c 89 f8             	mov    rax,r15
5324:	48 8d 3d b5 7c 00 00 	lea    rdi,[rip+0x7cb5]        # cfe0 <binvert_table>
532b:	48 d1 e8             	shr    rax,1
532e:	83 e0 7f             	and    eax,0x7f
5331:	0f b6 04 07          	movzx  eax,BYTE PTR [rdi+rax*1]
5335:	48 8d 14 00          	lea    rdx,[rax+rax*1]
5339:	48 0f af c0          	imul   rax,rax
533d:	49 0f af c7          	imul   rax,r15
5341:	48 29 c2             	sub    rdx,rax
5344:	48 8d 04 12          	lea    rax,[rdx+rdx*1]
5348:	48 0f af d2          	imul   rdx,rdx
534c:	49 0f af d7          	imul   rdx,r15
5350:	48 29 d0             	sub    rax,rdx
5353:	48 8d 14 00          	lea    rdx,[rax+rax*1]
5357:	48 0f af c0          	imul   rax,rax
535b:	49 0f af c7          	imul   rax,r15
535f:	48 29 c2             	sub    rdx,rax
5362:	48 83 fb 02          	cmp    rbx,0x2
5366:	48 19 f6             	sbb    rsi,rsi
5369:	31 c9                	xor    ecx,ecx
536b:	48 89 54 24 20       	mov    QWORD PTR [rsp+0x20],rdx
5370:	83 e6 40             	and    esi,0x40
5373:	48 83 c6 40          	add    rsi,0x40
5377:	48 83 fb 02          	cmp    rbx,0x2
537b:	0f 92 c1             	setb   cl
537e:	48 19 c0             	sbb    rax,rax
5381:	48 83 c0 01          	add    rax,0x1
5385:	48 83 ee 01          	sub    rsi,0x1
5389:	48 83 fe ff          	cmp    rsi,0xffffffffffffffff
538d:	74 2c                	je     53bb <prime2_p.part.5+0x10b>
538f:	48 89 ca             	mov    rdx,rcx
5392:	48 01 c0             	add    rax,rax
5395:	48 01 c9             	add    rcx,rcx
5398:	48 c1 ea 3f          	shr    rdx,0x3f
539c:	48 09 d0             	or     rax,rdx
539f:	48 39 c3             	cmp    rbx,rax
53a2:	72 07                	jb     53ab <prime2_p.part.5+0xfb>
53a4:	75 df                	jne    5385 <prime2_p.part.5+0xd5>
53a6:	49 39 cf             	cmp    r15,rcx
53a9:	77 da                	ja     5385 <prime2_p.part.5+0xd5>
53ab:	48 83 ee 01          	sub    rsi,0x1
53af:	4c 29 f9             	sub    rcx,r15
53b2:	48 19 d8             	sbb    rax,rbx
53b5:	48 83 fe ff          	cmp    rsi,0xffffffffffffffff
53b9:	75 d4                	jne    538f <prime2_p.part.5+0xdf>
53bb:	48 89 84 24 b8 00 00 	mov    QWORD PTR [rsp+0xb8],rax
53c2:	00
53c3:	48 89 8c 24 b0 00 00 	mov    QWORD PTR [rsp+0xb0],rcx
53ca:	00
53cb:	48 89 cf             	mov    rdi,rcx
53ce:	48 01 f9             	add    rcx,rdi
53d1:	48 11 c0             	adc    rax,rax
53d4:	48 39 c3             	cmp    rbx,rax
53d7:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
53de:	00
53df:	48 89 8c 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],rcx
53e6:	00
53e7:	0f 82 a3 03 00 00    	jb     5790 <prime2_p.part.5+0x4e0>
53ed:	0f 84 8b 03 00 00    	je     577e <prime2_p.part.5+0x4ce>
53f3:	48 8d 84 24 a0 00 00 	lea    rax,[rsp+0xa0]
53fa:	00
53fb:	4c 8d b4 24 c0 00 00 	lea    r14,[rsp+0xc0]
5402:	00
5403:	44 8b 44 24 70       	mov    r8d,DWORD PTR [rsp+0x70]
5408:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
540d:	4c 8d 8c 24 b0 00 00 	lea    r9,[rsp+0xb0]
5414:	00
5415:	48 8d 8c 24 90 00 00 	lea    rcx,[rsp+0x90]
541c:	00
541d:	48 89 c2             	mov    rdx,rax
5420:	4c 89 f7             	mov    rdi,r14
5423:	4c 89 bc 24 c0 00 00 	mov    QWORD PTR [rsp+0xc0],r15
542a:	00
542b:	48 89 9c 24 c8 00 00 	mov    QWORD PTR [rsp+0xc8],rbx
5432:	00
5433:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
5438:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
543d:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
5442:	e8 19 d8 ff ff       	call   2c60 <millerrabin2>
5447:	84 c0                	test   al,al
5449:	88 44 24 77          	mov    BYTE PTR [rsp+0x77],al
544d:	0f 84 fd 02 00 00    	je     5750 <prime2_p.part.5+0x4a0>
5453:	48 8b 6c 24 28       	mov    rbp,QWORD PTR [rsp+0x28]
5458:	4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
545d:	48 8d 84 24 f0 00 00 	lea    rax,[rsp+0xf0]
5464:	00
5465:	4c 8d 25 f4 a8 00 00 	lea    r12,[rip+0xa8f4]        # fd60 <primes_diff>
546c:	48 89 c2             	mov    rdx,rax
546f:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
5474:	48 89 ef             	mov    rdi,rbp
5477:	4c 89 ee             	mov    rsi,r13
547a:	e8 e1 f3 ff ff       	call   4860 <factor>
547f:	48 89 ea             	mov    rdx,rbp
5482:	4c 89 e8             	mov    rax,r13
5485:	48 89 ef             	mov    rdi,rbp
5488:	48 d1 e8             	shr    rax,1
548b:	48 c1 e2 3f          	shl    rdx,0x3f
548f:	48 d1 ef             	shr    rdi,1
5492:	48 09 c2             	or     rdx,rax
5495:	48 8d 84 24 d0 00 00 	lea    rax,[rsp+0xd0]
549c:	00
549d:	48 89 7c 24 48       	mov    QWORD PTR [rsp+0x48],rdi
54a2:	48 89 54 24 40       	mov    QWORD PTR [rsp+0x40],rdx
54a7:	bd 02 00 00 00       	mov    ebp,0x2
54ac:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
54b1:	48 8d 84 24 e0 00 00 	lea    rax,[rsp+0xe0]
54b8:	00
54b9:	48 89 84 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rax
54c0:	00
54c1:	48 8d 84 24 e8 00 00 	lea    rax,[rsp+0xe8]
54c8:	00
54c9:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
54d0:	00
54d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
54d8:	48 83 bc 24 f8 00 00 	cmp    QWORD PTR [rsp+0xf8],0x0
54df:	00 00
54e1:	0f 85 c9 02 00 00    	jne    57b0 <prime2_p.part.5+0x500>
54e7:	80 bc 24 ea 01 00 00 	cmp    BYTE PTR [rsp+0x1ea],0x0
54ee:	00
54ef:	0f 84 5b 02 00 00    	je     5750 <prime2_p.part.5+0x4a0>
54f5:	48 8b 84 24 80 00 00 	mov    rax,QWORD PTR [rsp+0x80]
54fc:	00
54fd:	41 bd 01 00 00 00    	mov    r13d,0x1
5503:	48 89 6c 24 50       	mov    QWORD PTR [rsp+0x50],rbp
5508:	4c 89 64 24 58       	mov    QWORD PTR [rsp+0x58],r12
550d:	48 89 5c 24 60       	mov    QWORD PTR [rsp+0x60],rbx
5512:	4c 89 7c 24 68       	mov    QWORD PTR [rsp+0x68],r15
5517:	4c 8b 64 24 20       	mov    r12,QWORD PTR [rsp+0x20]
551c:	4d 89 ef             	mov    r15,r13
551f:	48 83 c0 08          	add    rax,0x8
5523:	4c 8b 6c 24 78       	mov    r13,QWORD PTR [rsp+0x78]
5528:	48 8b 5c 24 30       	mov    rbx,QWORD PTR [rsp+0x30]
552d:	48 89 c5             	mov    rbp,rax
5530:	e9 bd 00 00 00       	jmp    55f2 <prime2_p.part.5+0x342>
5535:	0f 1f 00             	nop    DWORD PTR [rax]
5538:	48 89 d0             	mov    rax,rdx
553b:	48 8d 3d 9e 7a 00 00 	lea    rdi,[rip+0x7a9e]        # cfe0 <binvert_table>
5542:	48 8b 74 24 18       	mov    rsi,QWORD PTR [rsp+0x18]
5547:	48 d1 e8             	shr    rax,1
554a:	83 e0 7f             	and    eax,0x7f
554d:	0f b6 04 07          	movzx  eax,BYTE PTR [rdi+rax*1]
5551:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
5556:	48 8d 0c 00          	lea    rcx,[rax+rax*1]
555a:	48 0f af c0          	imul   rax,rax
555e:	48 0f af c2          	imul   rax,rdx
5562:	48 29 c1             	sub    rcx,rax
5565:	48 8d 04 09          	lea    rax,[rcx+rcx*1]
5569:	48 0f af c9          	imul   rcx,rcx
556d:	48 0f af ca          	imul   rcx,rdx
5571:	48 29 c8             	sub    rax,rcx
5574:	48 8d 0c 00          	lea    rcx,[rax+rax*1]
5578:	48 0f af c0          	imul   rax,rax
557c:	48 0f af c2          	imul   rax,rdx
5580:	48 29 c1             	sub    rcx,rax
5583:	48 0f af f1          	imul   rsi,rcx
5587:	48 39 d7             	cmp    rdi,rdx
558a:	0f 82 a0 01 00 00    	jb     5730 <prime2_p.part.5+0x480>
5590:	48 89 f0             	mov    rax,rsi
5593:	48 89 b4 24 d0 00 00 	mov    QWORD PTR [rsp+0xd0],rsi
559a:	00
559b:	48 f7 e2             	mul    rdx
559e:	48 89 f8             	mov    rax,rdi
55a1:	48 29 d0             	sub    rax,rdx
55a4:	48 0f af c8          	imul   rcx,rax
55a8:	48 89 8c 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],rcx
55af:	00
55b0:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
55b5:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
55ba:	4d 89 e0             	mov    r8,r12
55bd:	4c 89 f1             	mov    rcx,r14
55c0:	48 89 de             	mov    rsi,rbx
55c3:	48 89 ef             	mov    rdi,rbp
55c6:	e8 15 d5 ff ff       	call   2ae0 <powm2>
55cb:	48 3b 84 24 b0 00 00 	cmp    rax,QWORD PTR [rsp+0xb0]
55d2:	00
55d3:	48 89 84 24 e0 00 00 	mov    QWORD PTR [rsp+0xe0],rax
55da:	00
55db:	74 43                	je     5620 <prime2_p.part.5+0x370>
55dd:	0f b6 84 24 ea 01 00 	movzx  eax,BYTE PTR [rsp+0x1ea]
55e4:	00
55e5:	44 39 f8             	cmp    eax,r15d
55e8:	0f 86 62 01 00 00    	jbe    5750 <prime2_p.part.5+0x4a0>
55ee:	49 83 c7 01          	add    r15,0x1
55f2:	4b 8b 54 fd 08       	mov    rdx,QWORD PTR [r13+r15*8+0x8]
55f7:	48 83 fa 02          	cmp    rdx,0x2
55fb:	0f 85 37 ff ff ff    	jne    5538 <prime2_p.part.5+0x288>
5601:	48 8b 44 24 40       	mov    rax,QWORD PTR [rsp+0x40]
5606:	48 89 84 24 d0 00 00 	mov    QWORD PTR [rsp+0xd0],rax
560d:	00
560e:	48 8b 44 24 48       	mov    rax,QWORD PTR [rsp+0x48]
5613:	48 89 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],rax
561a:	00
561b:	eb 93                	jmp    55b0 <prime2_p.part.5+0x300>
561d:	0f 1f 00             	nop    DWORD PTR [rax]
5620:	48 8b 94 24 e8 00 00 	mov    rdx,QWORD PTR [rsp+0xe8]
5627:	00
5628:	48 8b 84 24 b8 00 00 	mov    rax,QWORD PTR [rsp+0xb8]
562f:	00
5630:	0f b6 b4 24 ea 01 00 	movzx  esi,BYTE PTR [rsp+0x1ea]
5637:	00
5638:	48 39 c2             	cmp    rdx,rax
563b:	0f 95 c1             	setne  cl
563e:	44 39 fe             	cmp    esi,r15d
5641:	0f 86 7d 02 00 00    	jbe    58c4 <prime2_p.part.5+0x614>
5647:	48 39 c2             	cmp    rdx,rax
564a:	75 a2                	jne    55ee <prime2_p.part.5+0x33e>
564c:	48 8b 6c 24 50       	mov    rbp,QWORD PTR [rsp+0x50]
5651:	4c 8b 64 24 58       	mov    r12,QWORD PTR [rsp+0x58]
5656:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
565b:	4c 8b 7c 24 68       	mov    r15,QWORD PTR [rsp+0x68]
5660:	41 0f b6 04 24       	movzx  eax,BYTE PTR [r12]
5665:	31 c9                	xor    ecx,ecx
5667:	48 01 c5             	add    rbp,rax
566a:	48 89 c8             	mov    rax,rcx
566d:	48 39 eb             	cmp    rbx,rbp
5670:	48 0f 47 c5          	cmova  rax,rbp
5674:	48 39 dd             	cmp    rbp,rbx
5677:	48 19 f6             	sbb    rsi,rsi
567a:	48 83 e6 c0          	and    rsi,0xffffffffffffffc0
567e:	48 83 ee 80          	sub    rsi,0xffffffffffffff80
5682:	48 39 eb             	cmp    rbx,rbp
5685:	48 0f 46 cd          	cmovbe rcx,rbp
5689:	48 83 ee 01          	sub    rsi,0x1
568d:	48 83 fe ff          	cmp    rsi,0xffffffffffffffff
5691:	74 2c                	je     56bf <prime2_p.part.5+0x40f>
5693:	48 89 ca             	mov    rdx,rcx
5696:	48 01 c0             	add    rax,rax
5699:	48 01 c9             	add    rcx,rcx
569c:	48 c1 ea 3f          	shr    rdx,0x3f
56a0:	48 09 d0             	or     rax,rdx
56a3:	48 39 c3             	cmp    rbx,rax
56a6:	72 07                	jb     56af <prime2_p.part.5+0x3ff>
56a8:	75 df                	jne    5689 <prime2_p.part.5+0x3d9>
56aa:	49 39 cf             	cmp    r15,rcx
56ad:	77 da                	ja     5689 <prime2_p.part.5+0x3d9>
56af:	48 83 ee 01          	sub    rsi,0x1
56b3:	4c 29 f9             	sub    rcx,r15
56b6:	48 19 d8             	sbb    rax,rbx
56b9:	48 83 fe ff          	cmp    rsi,0xffffffffffffffff
56bd:	75 d4                	jne    5693 <prime2_p.part.5+0x3e3>
56bf:	48 89 8c 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],rcx
56c6:	00
56c7:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
56cc:	4c 89 f7             	mov    rdi,r14
56cf:	44 8b 44 24 70       	mov    r8d,DWORD PTR [rsp+0x70]
56d4:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
56d9:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
56de:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
56e3:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
56ea:	00
56eb:	e8 70 d5 ff ff       	call   2c60 <millerrabin2>
56f0:	84 c0                	test   al,al
56f2:	74 55                	je     5749 <prime2_p.part.5+0x499>
56f4:	48 8d 05 01 a9 00 00 	lea    rax,[rip+0xa901]        # fffc <primes_diff+0x29c>
56fb:	49 83 c4 01          	add    r12,0x1
56ff:	4c 39 e0             	cmp    rax,r12
5702:	0f 85 d0 fd ff ff    	jne    54d8 <prime2_p.part.5+0x228>
5708:	48 8d 35 b9 73 00 00 	lea    rsi,[rip+0x73b9]        # cac8 <_IO_stdin_used+0x88>
570f:	ba 05 00 00 00       	mov    edx,0x5
5714:	31 ff                	xor    edi,edi
5716:	e8 c5 c7 ff ff       	call   1ee0 <dcgettext@plt>
571b:	31 f6                	xor    esi,esi
571d:	48 89 c2             	mov    rdx,rax
5720:	31 ff                	xor    edi,edi
5722:	31 c0                	xor    eax,eax
5724:	e8 b7 ca ff ff       	call   21e0 <error@plt>
5729:	e8 b2 c6 ff ff       	call   1de0 <abort@plt>
572e:	66 90                	xchg   ax,ax
5730:	48 89 b4 24 d0 00 00 	mov    QWORD PTR [rsp+0xd0],rsi
5737:	00
5738:	48 c7 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],0x0
573f:	00 00 00 00 00
5744:	e9 67 fe ff ff       	jmp    55b0 <prime2_p.part.5+0x300>
5749:	c6 44 24 77 00       	mov    BYTE PTR [rsp+0x77],0x0
574e:	66 90                	xchg   ax,ax
5750:	48 8b bc 24 f8 01 00 	mov    rdi,QWORD PTR [rsp+0x1f8]
5757:	00
5758:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
575f:	00 00
5761:	0f b6 44 24 77       	movzx  eax,BYTE PTR [rsp+0x77]
5766:	0f 85 79 01 00 00    	jne    58e5 <prime2_p.part.5+0x635>
576c:	48 81 c4 08 02 00 00 	add    rsp,0x208
5773:	5b                   	pop    rbx
5774:	5d                   	pop    rbp
5775:	41 5c                	pop    r12
5777:	41 5d                	pop    r13
5779:	41 5e                	pop    r14
577b:	41 5f                	pop    r15
577d:	c3                   	ret
577e:	49 39 cf             	cmp    r15,rcx
5781:	0f 87 6c fc ff ff    	ja     53f3 <prime2_p.part.5+0x143>
5787:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
578e:	00 00
5790:	4c 29 f9             	sub    rcx,r15
5793:	48 19 d8             	sbb    rax,rbx
5796:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
579d:	00
579e:	48 89 8c 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],rcx
57a5:	00
57a6:	e9 48 fc ff ff       	jmp    53f3 <prime2_p.part.5+0x143>
57ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
57b0:	48 8b 8c 24 f0 00 00 	mov    rcx,QWORD PTR [rsp+0xf0]
57b7:	00
57b8:	48 8d 3d 21 78 00 00 	lea    rdi,[rip+0x7821]        # cfe0 <binvert_table>
57bf:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
57c4:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
57c9:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
57ce:	48 c7 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],0x0
57d5:	00 00 00 00 00
57da:	48 89 c8             	mov    rax,rcx
57dd:	48 d1 e8             	shr    rax,1
57e0:	83 e0 7f             	and    eax,0x7f
57e3:	0f b6 04 07          	movzx  eax,BYTE PTR [rdi+rax*1]
57e7:	48 8b bc 24 88 00 00 	mov    rdi,QWORD PTR [rsp+0x88]
57ee:	00
57ef:	48 8d 14 00          	lea    rdx,[rax+rax*1]
57f3:	48 0f af c0          	imul   rax,rax
57f7:	48 0f af c1          	imul   rax,rcx
57fb:	48 29 c2             	sub    rdx,rax
57fe:	48 8d 04 12          	lea    rax,[rdx+rdx*1]
5802:	48 0f af d2          	imul   rdx,rdx
5806:	48 0f af d1          	imul   rdx,rcx
580a:	48 29 d0             	sub    rax,rdx
580d:	48 8d 14 00          	lea    rdx,[rax+rax*1]
5811:	48 0f af c0          	imul   rax,rax
5815:	48 0f af c1          	imul   rax,rcx
5819:	4c 89 f1             	mov    rcx,r14
581c:	48 29 c2             	sub    rdx,rax
581f:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
5824:	48 0f af c2          	imul   rax,rdx
5828:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
582d:	48 89 84 24 d0 00 00 	mov    QWORD PTR [rsp+0xd0],rax
5834:	00
5835:	e8 a6 d2 ff ff       	call   2ae0 <powm2>
583a:	48 3b 84 24 b0 00 00 	cmp    rax,QWORD PTR [rsp+0xb0]
5841:	00
5842:	48 89 84 24 e0 00 00 	mov    QWORD PTR [rsp+0xe0],rax
5849:	00
584a:	0f 85 97 fc ff ff    	jne    54e7 <prime2_p.part.5+0x237>
5850:	48 8b 94 24 e8 00 00 	mov    rdx,QWORD PTR [rsp+0xe8]
5857:	00
5858:	48 8b 84 24 b8 00 00 	mov    rax,QWORD PTR [rsp+0xb8]
585f:	00
5860:	48 39 c2             	cmp    rdx,rax
5863:	0f 95 c1             	setne  cl
5866:	80 bc 24 ea 01 00 00 	cmp    BYTE PTR [rsp+0x1ea],0x0
586d:	00
586e:	74 68                	je     58d8 <prime2_p.part.5+0x628>
5870:	48 39 c2             	cmp    rdx,rax
5873:	0f 84 e7 fd ff ff    	je     5660 <prime2_p.part.5+0x3b0>
5879:	e9 77 fc ff ff       	jmp    54f5 <prime2_p.part.5+0x245>
587e:	66 90                	xchg   ax,ax
5880:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
5885:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
588a:	b9 40 00 00 00       	mov    ecx,0x40
588f:	48 0f bc c2          	bsf    rax,rdx
5893:	29 c1                	sub    ecx,eax
5895:	89 c7                	mov    edi,eax
5897:	89 44 24 70          	mov    DWORD PTR [rsp+0x70],eax
589b:	48 89 f0             	mov    rax,rsi
589e:	48 d3 e0             	shl    rax,cl
58a1:	89 f9                	mov    ecx,edi
58a3:	48 d3 ea             	shr    rdx,cl
58a6:	48 09 d0             	or     rax,rdx
58a9:	48 89 84 24 90 00 00 	mov    QWORD PTR [rsp+0x90],rax
58b0:	00
58b1:	48 89 f0             	mov    rax,rsi
58b4:	48 d3 e8             	shr    rax,cl
58b7:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
58be:	00
58bf:	e9 5d fa ff ff       	jmp    5321 <prime2_p.part.5+0x71>
58c4:	48 8b 6c 24 50       	mov    rbp,QWORD PTR [rsp+0x50]
58c9:	4c 8b 64 24 58       	mov    r12,QWORD PTR [rsp+0x58]
58ce:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
58d3:	4c 8b 7c 24 68       	mov    r15,QWORD PTR [rsp+0x68]
58d8:	84 c9                	test   cl,cl
58da:	0f 84 80 fd ff ff    	je     5660 <prime2_p.part.5+0x3b0>
58e0:	e9 6b fe ff ff       	jmp    5750 <prime2_p.part.5+0x4a0>
58e5:	e8 36 c6 ff ff       	call   1f20 <__stack_chk_fail@plt>
58ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000058f0 <prime2_p>:
58f0:	48 85 ff             	test   rdi,rdi
58f3:	75 1b                	jne    5910 <prime2_p+0x20>
58f5:	48 83 fe 01          	cmp    rsi,0x1
58f9:	76 1d                	jbe    5918 <prime2_p+0x28>
58fb:	48 81 fe 78 ed 7d 01 	cmp    rsi,0x17ded78
5902:	b8 01 00 00 00       	mov    eax,0x1
5907:	77 17                	ja     5920 <prime2_p+0x30>
5909:	f3 c3                	repz ret
590b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5910:	e9 9b f9 ff ff       	jmp    52b0 <prime2_p.part.5>
5915:	0f 1f 00             	nop    DWORD PTR [rax]
5918:	31 c0                	xor    eax,eax
591a:	c3                   	ret
591b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5920:	48 89 f7             	mov    rdi,rsi
5923:	e9 58 f6 ff ff       	jmp    4f80 <prime_p.part.4>
5928:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
592f:	00

0000000000005930 <print_factors>:
5930:	41 57                	push   r15
5932:	41 56                	push   r14
5934:	48 89 fa             	mov    rdx,rdi
5937:	41 55                	push   r13
5939:	41 54                	push   r12
593b:	55                   	push   rbp
593c:	53                   	push   rbx
593d:	48 89 fd             	mov    rbp,rdi
5940:	48 81 ec 48 01 00 00 	sub    rsp,0x148
5947:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
594e:	00 00
5950:	48 89 84 24 38 01 00 	mov    QWORD PTR [rsp+0x138],rax
5957:	00
5958:	31 c0                	xor    eax,eax
595a:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
595d:	3c 20                	cmp    al,0x20
595f:	75 12                	jne    5973 <print_factors+0x43>
5961:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5968:	48 83 c2 01          	add    rdx,0x1
596c:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
596f:	3c 20                	cmp    al,0x20
5971:	74 f5                	je     5968 <print_factors+0x38>
5973:	3c 2b                	cmp    al,0x2b
5975:	48 8d 72 01          	lea    rsi,[rdx+0x1]
5979:	75 0a                	jne    5985 <print_factors+0x55>
597b:	48 8d 42 02          	lea    rax,[rdx+0x2]
597f:	48 89 f2             	mov    rdx,rsi
5982:	48 89 c6             	mov    rsi,rax
5985:	48 89 d1             	mov    rcx,rdx
5988:	bf 04 00 00 00       	mov    edi,0x4
598d:	0f 1f 00             	nop    DWORD PTR [rax]
5990:	48 83 c1 01          	add    rcx,0x1
5994:	0f be 41 ff          	movsx  eax,BYTE PTR [rcx-0x1]
5998:	85 c0                	test   eax,eax
599a:	74 64                	je     5a00 <print_factors+0xd0>
599c:	83 e8 30             	sub    eax,0x30
599f:	31 ff                	xor    edi,edi
59a1:	83 f8 09             	cmp    eax,0x9
59a4:	76 ea                	jbe    5990 <print_factors+0x60>
59a6:	48 89 ef             	mov    rdi,rbp
59a9:	e8 02 32 00 00       	call   8bb0 <quote>
59ae:	48 8d 35 a3 71 00 00 	lea    rsi,[rip+0x71a3]        # cb58 <_IO_stdin_used+0x118>
59b5:	48 89 c3             	mov    rbx,rax
59b8:	ba 05 00 00 00       	mov    edx,0x5
59bd:	31 ff                	xor    edi,edi
59bf:	e8 1c c5 ff ff       	call   1ee0 <dcgettext@plt>
59c4:	48 89 d9             	mov    rcx,rbx
59c7:	48 89 c2             	mov    rdx,rax
59ca:	31 f6                	xor    esi,esi
59cc:	31 c0                	xor    eax,eax
59ce:	31 ff                	xor    edi,edi
59d0:	e8 0b c8 ff ff       	call   21e0 <error@plt>
59d5:	31 c0                	xor    eax,eax
59d7:	48 8b bc 24 38 01 00 	mov    rdi,QWORD PTR [rsp+0x138]
59de:	00
59df:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
59e6:	00 00
59e8:	0f 85 bd 02 00 00    	jne    5cab <print_factors+0x37b>
59ee:	48 81 c4 48 01 00 00 	add    rsp,0x148
59f5:	5b                   	pop    rbx
59f6:	5d                   	pop    rbp
59f7:	41 5c                	pop    r12
59f9:	41 5d                	pop    r13
59fb:	41 5e                	pop    r14
59fd:	41 5f                	pop    r15
59ff:	c3                   	ret
5a00:	85 ff                	test   edi,edi
5a02:	0f 85 a8 02 00 00    	jne    5cb0 <print_factors+0x380>
5a08:	0f be 0a             	movsx  ecx,BYTE PTR [rdx]
5a0b:	85 c9                	test   ecx,ecx
5a0d:	0f 84 8e 02 00 00    	je     5ca1 <print_factors+0x371>
5a13:	83 e9 30             	sub    ecx,0x30
5a16:	45 31 e4             	xor    r12d,r12d
5a19:	31 db                	xor    ebx,ebx
5a1b:	48 bf 99 99 99 99 99 	movabs rdi,0x1999999999999999
5a22:	99 99 19
5a25:	eb 21                	jmp    5a48 <print_factors+0x118>
5a27:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5a2e:	00 00
5a30:	48 83 c6 01          	add    rsi,0x1
5a34:	0f be 56 ff          	movsx  edx,BYTE PTR [rsi-0x1]
5a38:	85 d2                	test   edx,edx
5a3a:	0f 84 3a 01 00 00    	je     5b7a <print_factors+0x24a>
5a40:	48 39 fb             	cmp    rbx,rdi
5a43:	8d 4a d0             	lea    ecx,[rdx-0x30]
5a46:	77 39                	ja     5a81 <print_factors+0x151>
5a48:	4b 8d 14 a4          	lea    rdx,[r12+r12*4]
5a4c:	4d 89 e0             	mov    r8,r12
5a4f:	4c 89 e0             	mov    rax,r12
5a52:	4d 01 e4             	add    r12,r12
5a55:	49 c1 e8 3d          	shr    r8,0x3d
5a59:	48 c1 e8 3f          	shr    rax,0x3f
5a5d:	48 01 d2             	add    rdx,rdx
5a60:	4c 39 e2             	cmp    rdx,r12
5a63:	44 11 c0             	adc    eax,r8d
5a66:	48 01 ca             	add    rdx,rcx
5a69:	0f 92 c1             	setb   cl
5a6c:	49 89 d4             	mov    r12,rdx
5a6f:	48 8d 14 9b          	lea    rdx,[rbx+rbx*4]
5a73:	0f b6 c9             	movzx  ecx,cl
5a76:	8d 1c 08             	lea    ebx,[rax+rcx*1]
5a79:	48 01 d2             	add    rdx,rdx
5a7c:	48 01 d3             	add    rbx,rdx
5a7f:	73 af                	jae    5a30 <print_factors+0x100>
5a81:	80 3d 78 d6 20 00 00 	cmp    BYTE PTR [rip+0x20d678],0x0        # 213100 <dev_debug>
5a88:	0f 85 e2 01 00 00    	jne    5c70 <print_factors+0x340>
5a8e:	4c 8d 74 24 30       	lea    r14,[rsp+0x30]
5a93:	ba 0a 00 00 00       	mov    edx,0xa
5a98:	48 89 ee             	mov    rsi,rbp
5a9b:	4c 89 f7             	mov    rdi,r14
5a9e:	e8 6d c7 ff ff       	call   2210 <__gmpz_init_set_str@plt>
5aa3:	48 8d 3d 6a 73 00 00 	lea    rdi,[rip+0x736a]        # ce14 <_IO_stdin_used+0x3d4>
5aaa:	4c 89 f6             	mov    rsi,r14
5aad:	31 c0                	xor    eax,eax
5aaf:	e8 8c c5 ff ff       	call   2040 <__gmp_printf@plt>
5ab4:	48 8d 74 24 10       	lea    rsi,[rsp+0x10]
5ab9:	4c 89 f7             	mov    rdi,r14
5abc:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
5ac1:	e8 3a da ff ff       	call   3500 <mp_factor>
5ac6:	48 83 7c 24 20 00    	cmp    QWORD PTR [rsp+0x20],0x0
5acc:	74 64                	je     5b32 <print_factors+0x202>
5ace:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
5ad3:	4c 8d 25 3f 73 00 00 	lea    r12,[rip+0x733f]        # ce19 <_IO_stdin_used+0x3d9>
5ada:	45 31 ed             	xor    r13d,r13d
5add:	31 c9                	xor    ecx,ecx
5adf:	90                   	nop
5ae0:	48 89 cb             	mov    rbx,rcx
5ae3:	45 31 ff             	xor    r15d,r15d
5ae6:	48 8d 2c cd 00 00 00 	lea    rbp,[rcx*8+0x0]
5aed:	00
5aee:	48 c1 e3 04          	shl    rbx,0x4
5af2:	48 83 3c c8 00       	cmp    QWORD PTR [rax+rcx*8],0x0
5af7:	74 2b                	je     5b24 <print_factors+0x1f4>
5af9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5b00:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
5b05:	31 c0                	xor    eax,eax
5b07:	4c 89 e7             	mov    rdi,r12
5b0a:	48 01 de             	add    rsi,rbx
5b0d:	e8 2e c5 ff ff       	call   2040 <__gmp_printf@plt>
5b12:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
5b17:	41 8d 4f 01          	lea    ecx,[r15+0x1]
5b1b:	49 89 cf             	mov    r15,rcx
5b1e:	48 3b 0c 28          	cmp    rcx,QWORD PTR [rax+rbp*1]
5b22:	72 dc                	jb     5b00 <print_factors+0x1d0>
5b24:	41 8d 4d 01          	lea    ecx,[r13+0x1]
5b28:	48 3b 4c 24 20       	cmp    rcx,QWORD PTR [rsp+0x20]
5b2d:	49 89 cd             	mov    r13,rcx
5b30:	72 ae                	jb     5ae0 <print_factors+0x1b0>
5b32:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
5b37:	e8 d4 cd ff ff       	call   2910 <mp_factor_clear>
5b3c:	4c 89 f7             	mov    rdi,r14
5b3f:	e8 cc c5 ff ff       	call   2110 <__gmpz_clear@plt>
5b44:	48 8b 3d 5d d5 20 00 	mov    rdi,QWORD PTR [rip+0x20d55d]        # 2130a8 <stdout@@GLIBC_2.2.5>
5b4b:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
5b4f:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
5b53:	0f 83 39 01 00 00    	jae    5c92 <print_factors+0x362>
5b59:	48 8d 50 01          	lea    rdx,[rax+0x1]
5b5d:	48 89 57 28          	mov    QWORD PTR [rdi+0x28],rdx
5b61:	c6 00 0a             	mov    BYTE PTR [rax],0xa
5b64:	48 8b 3d 3d d5 20 00 	mov    rdi,QWORD PTR [rip+0x20d53d]        # 2130a8 <stdout@@GLIBC_2.2.5>
5b6b:	e8 10 c7 ff ff       	call   2280 <fflush_unlocked@plt>
5b70:	b8 01 00 00 00       	mov    eax,0x1
5b75:	e9 5d fe ff ff       	jmp    59d7 <print_factors+0xa7>
5b7a:	48 85 db             	test   rbx,rbx
5b7d:	0f 88 fe fe ff ff    	js     5a81 <print_factors+0x151>
5b83:	80 3d 76 d5 20 00 00 	cmp    BYTE PTR [rip+0x20d576],0x0        # 213100 <dev_debug>
5b8a:	74 1d                	je     5ba9 <print_factors+0x279>
5b8c:	48 8b 0d 4d d5 20 00 	mov    rcx,QWORD PTR [rip+0x20d54d]        # 2130e0 <stderr@@GLIBC_2.2.5>
5b93:	48 8d 3d 96 6f 00 00 	lea    rdi,[rip+0x6f96]        # cb30 <_IO_stdin_used+0xf0>
5b9a:	ba 24 00 00 00       	mov    edx,0x24
5b9f:	be 01 00 00 00       	mov    esi,0x1
5ba4:	e8 97 c6 ff ff       	call   2240 <fwrite@plt>
5ba9:	4c 89 e6             	mov    rsi,r12
5bac:	48 89 df             	mov    rdi,rbx
5baf:	4c 8d 6c 24 30       	lea    r13,[rsp+0x30]
5bb4:	e8 f7 d6 ff ff       	call   32b0 <print_uintmaxes>
5bb9:	bf 3a 00 00 00       	mov    edi,0x3a
5bbe:	e8 9d d7 ff ff       	call   3360 <lbuf_putc>
5bc3:	4c 89 ea             	mov    rdx,r13
5bc6:	4c 89 e6             	mov    rsi,r12
5bc9:	48 89 df             	mov    rdi,rbx
5bcc:	e8 8f ec ff ff       	call   4860 <factor>
5bd1:	80 bc 24 2a 01 00 00 	cmp    BYTE PTR [rsp+0x12a],0x0
5bd8:	00
5bd9:	74 5e                	je     5c39 <print_factors+0x309>
5bdb:	49 8d ad e0 00 00 00 	lea    rbp,[r13+0xe0]
5be2:	4d 8d 65 10          	lea    r12,[r13+0x10]
5be6:	45 31 ed             	xor    r13d,r13d
5be9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5bf0:	31 db                	xor    ebx,ebx
5bf2:	80 7d 00 00          	cmp    BYTE PTR [rbp+0x0],0x0
5bf6:	74 28                	je     5c20 <print_factors+0x2f0>
5bf8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5bff:	00
5c00:	bf 20 00 00 00       	mov    edi,0x20
5c05:	83 c3 01             	add    ebx,0x1
5c08:	e8 53 d7 ff ff       	call   3360 <lbuf_putc>
5c0d:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
5c11:	31 f6                	xor    esi,esi
5c13:	e8 68 d1 ff ff       	call   2d80 <lbuf_putint>
5c18:	0f b6 45 00          	movzx  eax,BYTE PTR [rbp+0x0]
5c1c:	39 c3                	cmp    ebx,eax
5c1e:	72 e0                	jb     5c00 <print_factors+0x2d0>
5c20:	0f b6 84 24 2a 01 00 	movzx  eax,BYTE PTR [rsp+0x12a]
5c27:	00
5c28:	41 83 c5 01          	add    r13d,0x1
5c2c:	48 83 c5 01          	add    rbp,0x1
5c30:	49 83 c4 08          	add    r12,0x8
5c34:	41 39 c5             	cmp    r13d,eax
5c37:	72 b7                	jb     5bf0 <print_factors+0x2c0>
5c39:	48 83 7c 24 38 00    	cmp    QWORD PTR [rsp+0x38],0x0
5c3f:	74 19                	je     5c5a <print_factors+0x32a>
5c41:	bf 20 00 00 00       	mov    edi,0x20
5c46:	e8 15 d7 ff ff       	call   3360 <lbuf_putc>
5c4b:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
5c50:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
5c55:	e8 56 d6 ff ff       	call   32b0 <print_uintmaxes>
5c5a:	bf 0a 00 00 00       	mov    edi,0xa
5c5f:	e8 fc d6 ff ff       	call   3360 <lbuf_putc>
5c64:	b8 01 00 00 00       	mov    eax,0x1
5c69:	e9 69 fd ff ff       	jmp    59d7 <print_factors+0xa7>
5c6e:	66 90                	xchg   ax,ax
5c70:	48 8b 0d 69 d4 20 00 	mov    rcx,QWORD PTR [rip+0x20d469]        # 2130e0 <stderr@@GLIBC_2.2.5>
5c77:	48 8d 3d 02 6f 00 00 	lea    rdi,[rip+0x6f02]        # cb80 <_IO_stdin_used+0x140>
5c7e:	ba 27 00 00 00       	mov    edx,0x27
5c83:	be 01 00 00 00       	mov    esi,0x1
5c88:	e8 b3 c5 ff ff       	call   2240 <fwrite@plt>
5c8d:	e9 fc fd ff ff       	jmp    5a8e <print_factors+0x15e>
5c92:	be 0a 00 00 00       	mov    esi,0xa
5c97:	e8 04 c3 ff ff       	call   1fa0 <__overflow@plt>
5c9c:	e9 c3 fe ff ff       	jmp    5b64 <print_factors+0x234>
5ca1:	45 31 e4             	xor    r12d,r12d
5ca4:	31 db                	xor    ebx,ebx
5ca6:	e9 d8 fe ff ff       	jmp    5b83 <print_factors+0x253>
5cab:	e8 70 c2 ff ff       	call   1f20 <__stack_chk_fail@plt>
5cb0:	83 ef 01             	sub    edi,0x1
5cb3:	0f 85 ed fc ff ff    	jne    59a6 <print_factors+0x76>
5cb9:	e9 c3 fd ff ff       	jmp    5a81 <print_factors+0x151>
5cbe:	66 90                	xchg   ax,ax

0000000000005cc0 <usage>:
5cc0:	41 55                	push   r13
5cc2:	41 54                	push   r12
5cc4:	ba 05 00 00 00       	mov    edx,0x5
5cc9:	55                   	push   rbp
5cca:	53                   	push   rbx
5ccb:	89 fd                	mov    ebp,edi
5ccd:	48 81 ec 88 00 00 00 	sub    rsp,0x88
5cd4:	48 8b 1d 3d d4 20 00 	mov    rbx,QWORD PTR [rip+0x20d43d]        # 213118 <program_name>
5cdb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5ce2:	00 00
5ce4:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
5ce9:	31 c0                	xor    eax,eax
5ceb:	85 ff                	test   edi,edi
5ced:	74 2e                	je     5d1d <usage+0x5d>
5cef:	48 8d 35 b2 6e 00 00 	lea    rsi,[rip+0x6eb2]        # cba8 <_IO_stdin_used+0x168>
5cf6:	31 ff                	xor    edi,edi
5cf8:	e8 e3 c1 ff ff       	call   1ee0 <dcgettext@plt>
5cfd:	48 8b 3d dc d3 20 00 	mov    rdi,QWORD PTR [rip+0x20d3dc]        # 2130e0 <stderr@@GLIBC_2.2.5>
5d04:	48 89 c2             	mov    rdx,rax
5d07:	48 89 d9             	mov    rcx,rbx
5d0a:	be 01 00 00 00       	mov    esi,0x1
5d0f:	31 c0                	xor    eax,eax
5d11:	e8 3a c5 ff ff       	call   2250 <__fprintf_chk@plt>
5d16:	89 ef                	mov    edi,ebp
5d18:	e8 13 c5 ff ff       	call   2230 <exit@plt>
5d1d:	48 8d 35 ac 6e 00 00 	lea    rsi,[rip+0x6eac]        # cbd0 <_IO_stdin_used+0x190>
5d24:	31 ff                	xor    edi,edi
5d26:	e8 b5 c1 ff ff       	call   1ee0 <dcgettext@plt>
5d2b:	48 89 d9             	mov    rcx,rbx
5d2e:	48 89 da             	mov    rdx,rbx
5d31:	48 89 c6             	mov    rsi,rax
5d34:	bf 01 00 00 00       	mov    edi,0x1
5d39:	31 c0                	xor    eax,eax
5d3b:	e8 30 c4 ff ff       	call   2170 <__printf_chk@plt>
5d40:	48 8b 1d 61 d3 20 00 	mov    rbx,QWORD PTR [rip+0x20d361]        # 2130a8 <stdout@@GLIBC_2.2.5>
5d47:	48 8d 35 aa 6e 00 00 	lea    rsi,[rip+0x6eaa]        # cbf8 <_IO_stdin_used+0x1b8>
5d4e:	ba 05 00 00 00       	mov    edx,0x5
5d53:	31 ff                	xor    edi,edi
5d55:	e8 86 c1 ff ff       	call   1ee0 <dcgettext@plt>
5d5a:	48 89 de             	mov    rsi,rbx
5d5d:	48 89 c7             	mov    rdi,rax
5d60:	e8 eb c2 ff ff       	call   2050 <fputs_unlocked@plt>
5d65:	48 8b 1d 3c d3 20 00 	mov    rbx,QWORD PTR [rip+0x20d33c]        # 2130a8 <stdout@@GLIBC_2.2.5>
5d6c:	48 8d 35 0d 6f 00 00 	lea    rsi,[rip+0x6f0d]        # cc80 <_IO_stdin_used+0x240>
5d73:	ba 05 00 00 00       	mov    edx,0x5
5d78:	31 ff                	xor    edi,edi
5d7a:	e8 61 c1 ff ff       	call   1ee0 <dcgettext@plt>
5d7f:	48 89 de             	mov    rsi,rbx
5d82:	48 89 c7             	mov    rdi,rax
5d85:	e8 c6 c2 ff ff       	call   2050 <fputs_unlocked@plt>
5d8a:	48 8b 1d 17 d3 20 00 	mov    rbx,QWORD PTR [rip+0x20d317]        # 2130a8 <stdout@@GLIBC_2.2.5>
5d91:	48 8d 35 18 6f 00 00 	lea    rsi,[rip+0x6f18]        # ccb0 <_IO_stdin_used+0x270>
5d98:	ba 05 00 00 00       	mov    edx,0x5
5d9d:	31 ff                	xor    edi,edi
5d9f:	e8 3c c1 ff ff       	call   1ee0 <dcgettext@plt>
5da4:	48 89 de             	mov    rsi,rbx
5da7:	48 89 c7             	mov    rdi,rax
5daa:	48 8d 1d 6d 70 00 00 	lea    rbx,[rip+0x706d]        # ce1e <_IO_stdin_used+0x3de>
5db1:	e8 9a c2 ff ff       	call   2050 <fputs_unlocked@plt>
5db6:	48 8d 05 68 70 00 00 	lea    rax,[rip+0x7068]        # ce25 <_IO_stdin_used+0x3e5>
5dbd:	48 8d 0d a2 70 00 00 	lea    rcx,[rip+0x70a2]        # ce66 <_IO_stdin_used+0x426>
5dc4:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
5dcb:	00 00
5dcd:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
5dd4:	00 00
5dd6:	48 89 e2             	mov    rdx,rsp
5dd9:	48 89 04 24          	mov    QWORD PTR [rsp],rax
5ddd:	48 8d 05 43 70 00 00 	lea    rax,[rip+0x7043]        # ce27 <_IO_stdin_used+0x3e7>
5de4:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
5de9:	48 8d 0d 80 70 00 00 	lea    rcx,[rip+0x7080]        # ce70 <_IO_stdin_used+0x430>
5df0:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
5df5:	48 8d 05 a3 70 00 00 	lea    rax,[rip+0x70a3]        # ce9f <_IO_stdin_used+0x45f>
5dfc:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
5e01:	48 8d 0d 72 70 00 00 	lea    rcx,[rip+0x7072]        # ce7a <_IO_stdin_used+0x43a>
5e08:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
5e0d:	48 8d 05 23 70 00 00 	lea    rax,[rip+0x7023]        # ce37 <_IO_stdin_used+0x3f7>
5e14:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
5e19:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
5e1e:	48 8d 05 28 70 00 00 	lea    rax,[rip+0x7028]        # ce4d <_IO_stdin_used+0x40d>
5e25:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
5e2a:	48 8d 05 26 70 00 00 	lea    rax,[rip+0x7026]        # ce57 <_IO_stdin_used+0x417>
5e31:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
5e36:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
5e3b:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
5e40:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
5e45:	0f 1f 00             	nop    DWORD PTR [rax]
5e48:	48 83 c2 10          	add    rdx,0x10
5e4c:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
5e4f:	48 85 ff             	test   rdi,rdi
5e52:	74 13                	je     5e67 <usage+0x1a7>
5e54:	b9 07 00 00 00       	mov    ecx,0x7
5e59:	48 89 de             	mov    rsi,rbx
5e5c:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
5e5e:	0f 97 c0             	seta   al
5e61:	1c 00                	sbb    al,0x0
5e63:	84 c0                	test   al,al
5e65:	75 e1                	jne    5e48 <usage+0x188>
5e67:	4c 8b 62 08          	mov    r12,QWORD PTR [rdx+0x8]
5e6b:	31 ff                	xor    edi,edi
5e6d:	ba 05 00 00 00       	mov    edx,0x5
5e72:	48 8d 35 0b 70 00 00 	lea    rsi,[rip+0x700b]        # ce84 <_IO_stdin_used+0x444>
5e79:	4d 85 e4             	test   r12,r12
5e7c:	0f 84 c1 00 00 00    	je     5f43 <usage+0x283>
5e82:	e8 59 c0 ff ff       	call   1ee0 <dcgettext@plt>
5e87:	48 8d 0d 5a 6e 00 00 	lea    rcx,[rip+0x6e5a]        # cce8 <_IO_stdin_used+0x2a8>
5e8e:	48 8d 15 06 70 00 00 	lea    rdx,[rip+0x7006]        # ce9b <_IO_stdin_used+0x45b>
5e95:	48 89 c6             	mov    rsi,rax
5e98:	bf 01 00 00 00       	mov    edi,0x1
5e9d:	31 c0                	xor    eax,eax
5e9f:	e8 cc c2 ff ff       	call   2170 <__printf_chk@plt>
5ea4:	31 f6                	xor    esi,esi
5ea6:	bf 05 00 00 00       	mov    edi,0x5
5eab:	e8 b0 c2 ff ff       	call   2160 <setlocale@plt>
5eb0:	48 85 c0             	test   rax,rax
5eb3:	74 1c                	je     5ed1 <usage+0x211>
5eb5:	48 8d 35 ed 6f 00 00 	lea    rsi,[rip+0x6fed]        # cea9 <_IO_stdin_used+0x469>
5ebc:	ba 03 00 00 00       	mov    edx,0x3
5ec1:	48 89 c7             	mov    rdi,rax
5ec4:	e8 37 bf ff ff       	call   1e00 <strncmp@plt>
5ec9:	85 c0                	test   eax,eax
5ecb:	0f 85 07 01 00 00    	jne    5fd8 <usage+0x318>
5ed1:	48 8d 35 d5 6f 00 00 	lea    rsi,[rip+0x6fd5]        # cead <_IO_stdin_used+0x46d>
5ed8:	31 ff                	xor    edi,edi
5eda:	ba 05 00 00 00       	mov    edx,0x5
5edf:	e8 fc bf ff ff       	call   1ee0 <dcgettext@plt>
5ee4:	48 8d 0d 33 6f 00 00 	lea    rcx,[rip+0x6f33]        # ce1e <_IO_stdin_used+0x3de>
5eeb:	48 8d 15 f6 6d 00 00 	lea    rdx,[rip+0x6df6]        # cce8 <_IO_stdin_used+0x2a8>
5ef2:	48 89 c6             	mov    rsi,rax
5ef5:	bf 01 00 00 00       	mov    edi,0x1
5efa:	31 c0                	xor    eax,eax
5efc:	e8 6f c2 ff ff       	call   2170 <__printf_chk@plt>
5f01:	49 39 dc             	cmp    r12,rbx
5f04:	48 8d 0d 36 6f 00 00 	lea    rcx,[rip+0x6f36]        # ce41 <_IO_stdin_used+0x401>
5f0b:	48 8d 1d 49 a7 00 00 	lea    rbx,[rip+0xa749]        # 1065b <__PRETTY_FUNCTION__.5134+0x6b>
5f12:	48 0f 44 d9          	cmove  rbx,rcx
5f16:	48 8d 35 3b 6e 00 00 	lea    rsi,[rip+0x6e3b]        # cd58 <_IO_stdin_used+0x318>
5f1d:	31 ff                	xor    edi,edi
5f1f:	ba 05 00 00 00       	mov    edx,0x5
5f24:	e8 b7 bf ff ff       	call   1ee0 <dcgettext@plt>
5f29:	48 89 d9             	mov    rcx,rbx
5f2c:	48 89 c6             	mov    rsi,rax
5f2f:	4c 89 e2             	mov    rdx,r12
5f32:	bf 01 00 00 00       	mov    edi,0x1
5f37:	31 c0                	xor    eax,eax
5f39:	e8 32 c2 ff ff       	call   2170 <__printf_chk@plt>
5f3e:	e9 d3 fd ff ff       	jmp    5d16 <usage+0x56>
5f43:	e8 98 bf ff ff       	call   1ee0 <dcgettext@plt>
5f48:	48 8d 0d 99 6d 00 00 	lea    rcx,[rip+0x6d99]        # cce8 <_IO_stdin_used+0x2a8>
5f4f:	48 8d 15 45 6f 00 00 	lea    rdx,[rip+0x6f45]        # ce9b <_IO_stdin_used+0x45b>
5f56:	48 89 c6             	mov    rsi,rax
5f59:	bf 01 00 00 00       	mov    edi,0x1
5f5e:	31 c0                	xor    eax,eax
5f60:	e8 0b c2 ff ff       	call   2170 <__printf_chk@plt>
5f65:	31 f6                	xor    esi,esi
5f67:	bf 05 00 00 00       	mov    edi,0x5
5f6c:	e8 ef c1 ff ff       	call   2160 <setlocale@plt>
5f71:	48 85 c0             	test   rax,rax
5f74:	74 18                	je     5f8e <usage+0x2ce>
5f76:	48 8d 35 2c 6f 00 00 	lea    rsi,[rip+0x6f2c]        # cea9 <_IO_stdin_used+0x469>
5f7d:	ba 03 00 00 00       	mov    edx,0x3
5f82:	48 89 c7             	mov    rdi,rax
5f85:	e8 76 be ff ff       	call   1e00 <strncmp@plt>
5f8a:	85 c0                	test   eax,eax
5f8c:	75 43                	jne    5fd1 <usage+0x311>
5f8e:	48 8d 35 18 6f 00 00 	lea    rsi,[rip+0x6f18]        # cead <_IO_stdin_used+0x46d>
5f95:	ba 05 00 00 00       	mov    edx,0x5
5f9a:	31 ff                	xor    edi,edi
5f9c:	4c 8d 25 7b 6e 00 00 	lea    r12,[rip+0x6e7b]        # ce1e <_IO_stdin_used+0x3de>
5fa3:	48 8d 1d 97 6e 00 00 	lea    rbx,[rip+0x6e97]        # ce41 <_IO_stdin_used+0x401>
5faa:	e8 31 bf ff ff       	call   1ee0 <dcgettext@plt>
5faf:	48 8d 0d 68 6e 00 00 	lea    rcx,[rip+0x6e68]        # ce1e <_IO_stdin_used+0x3de>
5fb6:	48 8d 15 2b 6d 00 00 	lea    rdx,[rip+0x6d2b]        # cce8 <_IO_stdin_used+0x2a8>
5fbd:	48 89 c6             	mov    rsi,rax
5fc0:	bf 01 00 00 00       	mov    edi,0x1
5fc5:	31 c0                	xor    eax,eax
5fc7:	e8 a4 c1 ff ff       	call   2170 <__printf_chk@plt>
5fcc:	e9 45 ff ff ff       	jmp    5f16 <usage+0x256>
5fd1:	4c 8d 25 46 6e 00 00 	lea    r12,[rip+0x6e46]        # ce1e <_IO_stdin_used+0x3de>
5fd8:	4c 8b 2d c9 d0 20 00 	mov    r13,QWORD PTR [rip+0x20d0c9]        # 2130a8 <stdout@@GLIBC_2.2.5>
5fdf:	48 8d 35 2a 6d 00 00 	lea    rsi,[rip+0x6d2a]        # cd10 <_IO_stdin_used+0x2d0>
5fe6:	31 ff                	xor    edi,edi
5fe8:	ba 05 00 00 00       	mov    edx,0x5
5fed:	e8 ee be ff ff       	call   1ee0 <dcgettext@plt>
5ff2:	4c 89 ee             	mov    rsi,r13
5ff5:	48 89 c7             	mov    rdi,rax
5ff8:	e8 53 c0 ff ff       	call   2050 <fputs_unlocked@plt>
5ffd:	e9 cf fe ff ff       	jmp    5ed1 <usage+0x211>
6002:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6009:	00 00 00
600c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006010 <close_stdout_set_file_name>:
6010:	48 89 3d f9 d0 20 00 	mov    QWORD PTR [rip+0x20d0f9],rdi        # 213110 <file_name>
6017:	c3                   	ret
6018:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
601f:	00

0000000000006020 <close_stdout_set_ignore_EPIPE>:
6020:	40 88 3d e1 d0 20 00 	mov    BYTE PTR [rip+0x20d0e1],dil        # 213108 <ignore_EPIPE>
6027:	c3                   	ret
6028:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
602f:	00

0000000000006030 <close_stdout>:
6030:	55                   	push   rbp
6031:	53                   	push   rbx
6032:	48 83 ec 08          	sub    rsp,0x8
6036:	48 8b 3d 6b d0 20 00 	mov    rdi,QWORD PTR [rip+0x20d06b]        # 2130a8 <stdout@@GLIBC_2.2.5>
603d:	e8 8e 40 00 00       	call   a0d0 <close_stream>
6042:	85 c0                	test   eax,eax
6044:	74 16                	je     605c <close_stdout+0x2c>
6046:	e8 a5 bd ff ff       	call   1df0 <__errno_location@plt>
604b:	80 3d b6 d0 20 00 00 	cmp    BYTE PTR [rip+0x20d0b6],0x0        # 213108 <ignore_EPIPE>
6052:	48 89 c3             	mov    rbx,rax
6055:	74 1c                	je     6073 <close_stdout+0x43>
6057:	83 38 20             	cmp    DWORD PTR [rax],0x20
605a:	75 17                	jne    6073 <close_stdout+0x43>
605c:	48 8b 3d 7d d0 20 00 	mov    rdi,QWORD PTR [rip+0x20d07d]        # 2130e0 <stderr@@GLIBC_2.2.5>
6063:	e8 68 40 00 00       	call   a0d0 <close_stream>
6068:	85 c0                	test   eax,eax
606a:	75 46                	jne    60b2 <close_stdout+0x82>
606c:	48 83 c4 08          	add    rsp,0x8
6070:	5b                   	pop    rbx
6071:	5d                   	pop    rbp
6072:	c3                   	ret
6073:	48 8d 35 11 6d 00 00 	lea    rsi,[rip+0x6d11]        # cd8b <_IO_stdin_used+0x34b>
607a:	31 ff                	xor    edi,edi
607c:	ba 05 00 00 00       	mov    edx,0x5
6081:	e8 5a be ff ff       	call   1ee0 <dcgettext@plt>
6086:	48 8b 3d 83 d0 20 00 	mov    rdi,QWORD PTR [rip+0x20d083]        # 213110 <file_name>
608d:	48 89 c5             	mov    rbp,rax
6090:	48 85 ff             	test   rdi,rdi
6093:	74 28                	je     60bd <close_stdout+0x8d>
6095:	e8 16 29 00 00       	call   89b0 <quotearg_colon>
609a:	8b 33                	mov    esi,DWORD PTR [rbx]
609c:	48 8d 15 65 9f 00 00 	lea    rdx,[rip+0x9f65]        # 10008 <primes_diff+0x2a8>
60a3:	48 89 c1             	mov    rcx,rax
60a6:	49 89 e8             	mov    r8,rbp
60a9:	31 ff                	xor    edi,edi
60ab:	31 c0                	xor    eax,eax
60ad:	e8 2e c1 ff ff       	call   21e0 <error@plt>
60b2:	8b 3d 68 cf 20 00    	mov    edi,DWORD PTR [rip+0x20cf68]        # 213020 <exit_failure>
60b8:	e8 53 bd ff ff       	call   1e10 <_exit@plt>
60bd:	8b 33                	mov    esi,DWORD PTR [rbx]
60bf:	48 8d 15 46 9f 00 00 	lea    rdx,[rip+0x9f46]        # 1000c <primes_diff+0x2ac>
60c6:	48 89 c1             	mov    rcx,rax
60c9:	31 ff                	xor    edi,edi
60cb:	31 c0                	xor    eax,eax
60cd:	e8 0e c1 ff ff       	call   21e0 <error@plt>
60d2:	eb de                	jmp    60b2 <close_stdout+0x82>
60d4:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
60db:	00 00 00
60de:	66 90                	xchg   ax,ax

00000000000060e0 <full_write>:
60e0:	41 55                	push   r13
60e2:	41 54                	push   r12
60e4:	55                   	push   rbp
60e5:	53                   	push   rbx
60e6:	48 83 ec 08          	sub    rsp,0x8
60ea:	48 85 d2             	test   rdx,rdx
60ed:	74 62                	je     6151 <full_write+0x71>
60ef:	41 89 fd             	mov    r13d,edi
60f2:	48 89 f5             	mov    rbp,rsi
60f5:	48 89 d3             	mov    rbx,rdx
60f8:	45 31 e4             	xor    r12d,r12d
60fb:	eb 13                	jmp    6110 <full_write+0x30>
60fd:	0f 1f 00             	nop    DWORD PTR [rax]
6100:	48 85 c0             	test   rax,rax
6103:	74 33                	je     6138 <full_write+0x58>
6105:	49 01 c4             	add    r12,rax
6108:	48 01 c5             	add    rbp,rax
610b:	48 29 c3             	sub    rbx,rax
610e:	74 14                	je     6124 <full_write+0x44>
6110:	48 89 da             	mov    rdx,rbx
6113:	48 89 ee             	mov    rsi,rbp
6116:	44 89 ef             	mov    edi,r13d
6119:	e8 d2 2e 00 00       	call   8ff0 <safe_write>
611e:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
6122:	75 dc                	jne    6100 <full_write+0x20>
6124:	48 83 c4 08          	add    rsp,0x8
6128:	4c 89 e0             	mov    rax,r12
612b:	5b                   	pop    rbx
612c:	5d                   	pop    rbp
612d:	41 5c                	pop    r12
612f:	41 5d                	pop    r13
6131:	c3                   	ret
6132:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6138:	e8 b3 bc ff ff       	call   1df0 <__errno_location@plt>
613d:	c7 00 1c 00 00 00    	mov    DWORD PTR [rax],0x1c
6143:	48 83 c4 08          	add    rsp,0x8
6147:	4c 89 e0             	mov    rax,r12
614a:	5b                   	pop    rbx
614b:	5d                   	pop    rbp
614c:	41 5c                	pop    r12
614e:	41 5d                	pop    r13
6150:	c3                   	ret
6151:	45 31 e4             	xor    r12d,r12d
6154:	eb ce                	jmp    6124 <full_write+0x44>
6156:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
615d:	00 00 00

0000000000006160 <umaxtostr>:
6160:	48 8d 4e 14          	lea    rcx,[rsi+0x14]
6164:	c6 46 14 00          	mov    BYTE PTR [rsi+0x14],0x0
6168:	48 be cd cc cc cc cc 	movabs rsi,0xcccccccccccccccd
616f:	cc cc cc
6172:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6178:	48 89 f8             	mov    rax,rdi
617b:	48 83 e9 01          	sub    rcx,0x1
617f:	48 f7 e6             	mul    rsi
6182:	48 c1 ea 03          	shr    rdx,0x3
6186:	48 8d 04 92          	lea    rax,[rdx+rdx*4]
618a:	48 01 c0             	add    rax,rax
618d:	48 29 c7             	sub    rdi,rax
6190:	83 c7 30             	add    edi,0x30
6193:	48 85 d2             	test   rdx,rdx
6196:	40 88 39             	mov    BYTE PTR [rcx],dil
6199:	48 89 d7             	mov    rdi,rdx
619c:	75 da                	jne    6178 <umaxtostr+0x18>
619e:	48 89 c8             	mov    rax,rcx
61a1:	c3                   	ret
61a2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
61a9:	00 00 00
61ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000061b0 <set_program_name>:
61b0:	48 85 ff             	test   rdi,rdi
61b3:	53                   	push   rbx
61b4:	74 77                	je     622d <set_program_name+0x7d>
61b6:	be 2f 00 00 00       	mov    esi,0x2f
61bb:	48 89 fb             	mov    rbx,rdi
61be:	e8 ed bd ff ff       	call   1fb0 <strrchr@plt>
61c3:	48 85 c0             	test   rax,rax
61c6:	74 55                	je     621d <set_program_name+0x6d>
61c8:	4c 8d 40 01          	lea    r8,[rax+0x1]
61cc:	4c 89 c2             	mov    rdx,r8
61cf:	48 29 da             	sub    rdx,rbx
61d2:	48 83 fa 06          	cmp    rdx,0x6
61d6:	7e 45                	jle    621d <set_program_name+0x6d>
61d8:	48 8d 70 fa          	lea    rsi,[rax-0x6]
61dc:	48 8d 3d 65 9e 00 00 	lea    rdi,[rip+0x9e65]        # 10048 <primes_diff+0x2e8>
61e3:	b9 07 00 00 00       	mov    ecx,0x7
61e8:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
61ea:	0f 97 c2             	seta   dl
61ed:	80 da 00             	sbb    dl,0x0
61f0:	84 d2                	test   dl,dl
61f2:	75 29                	jne    621d <set_program_name+0x6d>
61f4:	48 8d 3d 55 9e 00 00 	lea    rdi,[rip+0x9e55]        # 10050 <primes_diff+0x2f0>
61fb:	b9 03 00 00 00       	mov    ecx,0x3
6200:	4c 89 c6             	mov    rsi,r8
6203:	4c 89 c3             	mov    rbx,r8
6206:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
6208:	0f 97 c2             	seta   dl
620b:	80 da 00             	sbb    dl,0x0
620e:	84 d2                	test   dl,dl
6210:	75 0b                	jne    621d <set_program_name+0x6d>
6212:	48 8d 58 04          	lea    rbx,[rax+0x4]
6216:	48 89 1d 83 ce 20 00 	mov    QWORD PTR [rip+0x20ce83],rbx        # 2130a0 <__progname@@GLIBC_2.2.5>
621d:	48 89 1d f4 ce 20 00 	mov    QWORD PTR [rip+0x20cef4],rbx        # 213118 <program_name>
6224:	48 89 1d 95 ce 20 00 	mov    QWORD PTR [rip+0x20ce95],rbx        # 2130c0 <__progname_full@@GLIBC_2.2.5>
622b:	5b                   	pop    rbx
622c:	c3                   	ret
622d:	48 8b 0d ac ce 20 00 	mov    rcx,QWORD PTR [rip+0x20ceac]        # 2130e0 <stderr@@GLIBC_2.2.5>
6234:	48 8d 3d d5 9d 00 00 	lea    rdi,[rip+0x9dd5]        # 10010 <primes_diff+0x2b0>
623b:	ba 37 00 00 00       	mov    edx,0x37
6240:	be 01 00 00 00       	mov    esi,0x1
6245:	e8 f6 bf ff ff       	call   2240 <fwrite@plt>
624a:	e8 91 bb ff ff       	call   1de0 <abort@plt>
624f:	90                   	nop

0000000000006250 <mbsstr_trimmed_wordbounded>:
6250:	41 57                	push   r15
6252:	41 56                	push   r14
6254:	49 89 ff             	mov    r15,rdi
6257:	41 55                	push   r13
6259:	41 54                	push   r12
625b:	48 89 f7             	mov    rdi,rsi
625e:	55                   	push   rbp
625f:	53                   	push   rbx
6260:	be 02 00 00 00       	mov    esi,0x2
6265:	4c 8d 2d 34 a7 00 00 	lea    r13,[rip+0xa734]        # 109a0 <is_basic_table>
626c:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
6273:	48 8d 5c 24 20       	lea    rbx,[rsp+0x20]
6278:	4c 8d 64 24 60       	lea    r12,[rsp+0x60]
627d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
6284:	00 00
6286:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
628d:	00
628e:	31 c0                	xor    eax,eax
6290:	4c 8d 73 24          	lea    r14,[rbx+0x24]
6294:	e8 f7 2d 00 00       	call   9090 <trim2>
6299:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
629e:	66 90                	xchg   ax,ax
62a0:	41 80 3f 00          	cmp    BYTE PTR [r15],0x0
62a4:	74 7f                	je     6325 <mbsstr_trimmed_wordbounded+0xd5>
62a6:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
62ab:	4c 89 ff             	mov    rdi,r15
62ae:	e8 1d 4c 00 00       	call   aed0 <mbsstr>
62b3:	48 85 c0             	test   rax,rax
62b6:	48 89 c5             	mov    rbp,rax
62b9:	74 6a                	je     6325 <mbsstr_trimmed_wordbounded+0xd5>
62bb:	e8 30 bc ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
62c0:	48 83 f8 01          	cmp    rax,0x1
62c4:	0f 87 9e 00 00 00    	ja     6368 <mbsstr_trimmed_wordbounded+0x118>
62ca:	49 39 ef             	cmp    r15,rbp
62cd:	0f 83 65 06 00 00    	jae    6938 <mbsstr_trimmed_wordbounded+0x6e8>
62d3:	e8 f8 bf ff ff       	call   22d0 <__ctype_b_loc@plt>
62d8:	0f b6 55 ff          	movzx  edx,BYTE PTR [rbp-0x1]
62dc:	48 8b 00             	mov    rax,QWORD PTR [rax]
62df:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
62e4:	44 0f b7 3c 50       	movzx  r15d,WORD PTR [rax+rdx*2]
62e9:	66 41 c1 ef 03       	shr    r15w,0x3
62ee:	41 83 f7 01          	xor    r15d,0x1
62f2:	44 89 f8             	mov    eax,r15d
62f5:	83 e0 01             	and    eax,0x1
62f8:	88 44 24 10          	mov    BYTE PTR [rsp+0x10],al
62fc:	e8 ff bb ff ff       	call   1f00 <strlen@plt>
6301:	0f b6 54 05 00       	movzx  edx,BYTE PTR [rbp+rax*1+0x0]
6306:	84 d2                	test   dl,dl
6308:	0f 85 46 06 00 00    	jne    6954 <mbsstr_trimmed_wordbounded+0x704>
630e:	80 7c 24 10 00       	cmp    BYTE PTR [rsp+0x10],0x0
6313:	75 15                	jne    632a <mbsstr_trimmed_wordbounded+0xda>
6315:	80 7d 00 00          	cmp    BYTE PTR [rbp+0x0],0x0
6319:	74 0a                	je     6325 <mbsstr_trimmed_wordbounded+0xd5>
631b:	4c 8d 7d 01          	lea    r15,[rbp+0x1]
631f:	41 80 3f 00          	cmp    BYTE PTR [r15],0x0
6323:	75 81                	jne    62a6 <mbsstr_trimmed_wordbounded+0x56>
6325:	c6 44 24 10 00       	mov    BYTE PTR [rsp+0x10],0x0
632a:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
632f:	e8 9c ba ff ff       	call   1dd0 <free@plt>
6334:	48 8b 9c 24 a8 00 00 	mov    rbx,QWORD PTR [rsp+0xa8]
633b:	00
633c:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
6343:	00 00
6345:	0f b6 44 24 10       	movzx  eax,BYTE PTR [rsp+0x10]
634a:	0f 85 46 08 00 00    	jne    6b96 <mbsstr_trimmed_wordbounded+0x946>
6350:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
6357:	5b                   	pop    rbx
6358:	5d                   	pop    rbp
6359:	41 5c                	pop    r12
635b:	41 5d                	pop    r13
635d:	41 5e                	pop    r14
635f:	41 5f                	pop    r15
6361:	c3                   	ret
6362:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6368:	49 39 ef             	cmp    r15,rbp
636b:	4c 89 7c 24 30       	mov    QWORD PTR [rsp+0x30],r15
6370:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
6375:	48 c7 43 04 00 00 00 	mov    QWORD PTR [rbx+0x4],0x0
637c:	00
637d:	c6 44 24 2c 00       	mov    BYTE PTR [rsp+0x2c],0x0
6382:	72 73                	jb     63f7 <mbsstr_trimmed_wordbounded+0x1a7>
6384:	e9 9f 05 00 00       	jmp    6928 <mbsstr_trimmed_wordbounded+0x6d8>
6389:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6390:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
6395:	41 0f b6 17          	movzx  edx,BYTE PTR [r15]
6399:	89 d0                	mov    eax,edx
639b:	c0 e8 05             	shr    al,0x5
639e:	83 e0 07             	and    eax,0x7
63a1:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
63a6:	0f a3 d0             	bt     eax,edx
63a9:	0f 83 e9 00 00 00    	jae    6498 <mbsstr_trimmed_wordbounded+0x248>
63af:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
63b6:	00 00
63b8:	41 0f be 17          	movsx  edx,BYTE PTR [r15]
63bc:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
63c1:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
63c6:	89 54 24 44          	mov    DWORD PTR [rsp+0x44],edx
63ca:	85 d2                	test   edx,edx
63cc:	0f 84 a0 07 00 00    	je     6b72 <mbsstr_trimmed_wordbounded+0x922>
63d2:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
63d7:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
63dc:	0f b6 4c 24 40       	movzx  ecx,BYTE PTR [rsp+0x40]
63e1:	c6 44 24 2c 00       	mov    BYTE PTR [rsp+0x2c],0x0
63e6:	4c 01 f8             	add    rax,r15
63e9:	48 39 e8             	cmp    rax,rbp
63ec:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
63f1:	0f 83 29 01 00 00    	jae    6520 <mbsstr_trimmed_wordbounded+0x2d0>
63f7:	80 7c 24 20 00       	cmp    BYTE PTR [rsp+0x20],0x0
63fc:	74 92                	je     6390 <mbsstr_trimmed_wordbounded+0x140>
63fe:	e8 ed ba ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
6403:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
6408:	48 89 c6             	mov    rsi,rax
640b:	4c 89 ff             	mov    rdi,r15
640e:	e8 3d 2c 00 00       	call   9050 <strnlen1>
6413:	48 8d 4b 04          	lea    rcx,[rbx+0x4]
6417:	48 89 c2             	mov    rdx,rax
641a:	4c 89 fe             	mov    rsi,r15
641d:	4c 89 f7             	mov    rdi,r14
6420:	e8 cb 3b 00 00       	call   9ff0 <rpl_mbrtowc>
6425:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
6429:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
642e:	0f 84 84 00 00 00    	je     64b8 <mbsstr_trimmed_wordbounded+0x268>
6434:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
6438:	0f 84 9a 00 00 00    	je     64d8 <mbsstr_trimmed_wordbounded+0x288>
643e:	48 85 c0             	test   rax,rax
6441:	0f 85 c9 00 00 00    	jne    6510 <mbsstr_trimmed_wordbounded+0x2c0>
6447:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
644c:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
6453:	00 00
6455:	41 80 3f 00          	cmp    BYTE PTR [r15],0x0
6459:	0f 85 3c 07 00 00    	jne    6b9b <mbsstr_trimmed_wordbounded+0x94b>
645f:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
6463:	85 d2                	test   edx,edx
6465:	0f 85 b1 06 00 00    	jne    6b1c <mbsstr_trimmed_wordbounded+0x8cc>
646b:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
646f:	89 54 24 10          	mov    DWORD PTR [rsp+0x10],edx
6473:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
6478:	e8 33 be ff ff       	call   22b0 <mbsinit@plt>
647d:	85 c0                	test   eax,eax
647f:	8b 54 24 10          	mov    edx,DWORD PTR [rsp+0x10]
6483:	74 7b                	je     6500 <mbsstr_trimmed_wordbounded+0x2b0>
6485:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
648a:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
648f:	e9 36 ff ff ff       	jmp    63ca <mbsstr_trimmed_wordbounded+0x17a>
6494:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6498:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
649c:	e8 0f be ff ff       	call   22b0 <mbsinit@plt>
64a1:	85 c0                	test   eax,eax
64a3:	0f 84 ce 06 00 00    	je     6b77 <mbsstr_trimmed_wordbounded+0x927>
64a9:	c6 44 24 20 01       	mov    BYTE PTR [rsp+0x20],0x1
64ae:	e9 4b ff ff ff       	jmp    63fe <mbsstr_trimmed_wordbounded+0x1ae>
64b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
64b8:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
64bf:	00 00
64c1:	c6 44 24 40 00       	mov    BYTE PTR [rsp+0x40],0x0
64c6:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
64ca:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
64cf:	e9 03 ff ff ff       	jmp    63d7 <mbsstr_trimmed_wordbounded+0x187>
64d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
64d8:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
64dd:	4c 89 ff             	mov    rdi,r15
64e0:	e8 1b ba ff ff       	call   1f00 <strlen@plt>
64e5:	c6 44 24 40 00       	mov    BYTE PTR [rsp+0x40],0x0
64ea:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
64ef:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
64f3:	e9 df fe ff ff       	jmp    63d7 <mbsstr_trimmed_wordbounded+0x187>
64f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
64ff:	00
6500:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
6505:	e9 c0 fe ff ff       	jmp    63ca <mbsstr_trimmed_wordbounded+0x17a>
650a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6510:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
6514:	e9 52 ff ff ff       	jmp    646b <mbsstr_trimmed_wordbounded+0x21b>
6519:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6520:	84 c9                	test   cl,cl
6522:	0f 84 00 04 00 00    	je     6928 <mbsstr_trimmed_wordbounded+0x6d8>
6528:	89 d7                	mov    edi,edx
652a:	e8 b1 bb ff ff       	call   20e0 <iswalnum@plt>
652f:	85 c0                	test   eax,eax
6531:	0f 94 44 24 10       	sete   BYTE PTR [rsp+0x10]
6536:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
653b:	48 89 6c 24 30       	mov    QWORD PTR [rsp+0x30],rbp
6540:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
6545:	48 c7 43 04 00 00 00 	mov    QWORD PTR [rbx+0x4],0x0
654c:	00
654d:	c6 44 24 2c 00       	mov    BYTE PTR [rsp+0x2c],0x0
6552:	c6 44 24 60 00       	mov    BYTE PTR [rsp+0x60],0x0
6557:	48 89 44 24 70       	mov    QWORD PTR [rsp+0x70],rax
655c:	49 c7 44 24 04 00 00 	mov    QWORD PTR [r12+0x4],0x0
6563:	00 00
6565:	c6 44 24 6c 00       	mov    BYTE PTR [rsp+0x6c],0x0
656a:	eb 71                	jmp    65dd <mbsstr_trimmed_wordbounded+0x38d>
656c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6570:	80 7c 24 20 00       	cmp    BYTE PTR [rsp+0x20],0x0
6575:	0f 85 7b 02 00 00    	jne    67f6 <mbsstr_trimmed_wordbounded+0x5a6>
657b:	48 8b 4c 24 30       	mov    rcx,QWORD PTR [rsp+0x30]
6580:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
6583:	89 d0                	mov    eax,edx
6585:	c0 e8 05             	shr    al,0x5
6588:	83 e0 07             	and    eax,0x7
658b:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
6590:	0f a3 d0             	bt     eax,edx
6593:	0f 83 47 02 00 00    	jae    67e0 <mbsstr_trimmed_wordbounded+0x590>
6599:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
65a0:	00 00
65a2:	0f be 01             	movsx  eax,BYTE PTR [rcx]
65a5:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
65aa:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
65af:	89 44 24 44          	mov    DWORD PTR [rsp+0x44],eax
65b3:	8b 7c 24 44          	mov    edi,DWORD PTR [rsp+0x44]
65b7:	85 ff                	test   edi,edi
65b9:	0f 84 b3 05 00 00    	je     6b72 <mbsstr_trimmed_wordbounded+0x922>
65bf:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
65c4:	48 01 44 24 30       	add    QWORD PTR [rsp+0x30],rax
65c9:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
65ce:	48 01 44 24 70       	add    QWORD PTR [rsp+0x70],rax
65d3:	c6 44 24 2c 00       	mov    BYTE PTR [rsp+0x2c],0x0
65d8:	c6 44 24 6c 00       	mov    BYTE PTR [rsp+0x6c],0x0
65dd:	80 7c 24 60 00       	cmp    BYTE PTR [rsp+0x60],0x0
65e2:	75 7b                	jne    665f <mbsstr_trimmed_wordbounded+0x40f>
65e4:	48 8b 4c 24 70       	mov    rcx,QWORD PTR [rsp+0x70]
65e9:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
65ec:	89 d0                	mov    eax,edx
65ee:	c0 e8 05             	shr    al,0x5
65f1:	83 e0 07             	and    eax,0x7
65f4:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
65f9:	0f a3 d0             	bt     eax,edx
65fc:	73 4a                	jae    6648 <mbsstr_trimmed_wordbounded+0x3f8>
65fe:	48 c7 44 24 78 01 00 	mov    QWORD PTR [rsp+0x78],0x1
6605:	00 00
6607:	0f be 01             	movsx  eax,BYTE PTR [rcx]
660a:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x1
6611:	01
6612:	c6 44 24 6c 01       	mov    BYTE PTR [rsp+0x6c],0x1
6617:	89 84 24 84 00 00 00 	mov    DWORD PTR [rsp+0x84],eax
661e:	8b 8c 24 84 00 00 00 	mov    ecx,DWORD PTR [rsp+0x84]
6625:	85 c9                	test   ecx,ecx
6627:	0f 84 d3 00 00 00    	je     6700 <mbsstr_trimmed_wordbounded+0x4b0>
662d:	80 7c 24 2c 00       	cmp    BYTE PTR [rsp+0x2c],0x0
6632:	0f 84 38 ff ff ff    	je     6570 <mbsstr_trimmed_wordbounded+0x320>
6638:	80 7c 24 40 00       	cmp    BYTE PTR [rsp+0x40],0x0
663d:	74 80                	je     65bf <mbsstr_trimmed_wordbounded+0x36f>
663f:	e9 6f ff ff ff       	jmp    65b3 <mbsstr_trimmed_wordbounded+0x363>
6644:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6648:	49 8d 7c 24 04       	lea    rdi,[r12+0x4]
664d:	e8 5e bc ff ff       	call   22b0 <mbsinit@plt>
6652:	85 c0                	test   eax,eax
6654:	0f 84 1d 05 00 00    	je     6b77 <mbsstr_trimmed_wordbounded+0x927>
665a:	c6 44 24 60 01       	mov    BYTE PTR [rsp+0x60],0x1
665f:	e8 8c b8 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
6664:	4c 8b 7c 24 70       	mov    r15,QWORD PTR [rsp+0x70]
6669:	48 89 c6             	mov    rsi,rax
666c:	4c 89 ff             	mov    rdi,r15
666f:	e8 dc 29 00 00       	call   9050 <strnlen1>
6674:	49 8d 4c 24 04       	lea    rcx,[r12+0x4]
6679:	49 8d 7c 24 24       	lea    rdi,[r12+0x24]
667e:	48 89 c2             	mov    rdx,rax
6681:	4c 89 fe             	mov    rsi,r15
6684:	e8 67 39 00 00       	call   9ff0 <rpl_mbrtowc>
6689:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
668d:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
6692:	0f 84 f0 01 00 00    	je     6888 <mbsstr_trimmed_wordbounded+0x638>
6698:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
669c:	0f 84 1e 02 00 00    	je     68c0 <mbsstr_trimmed_wordbounded+0x670>
66a2:	48 85 c0             	test   rax,rax
66a5:	75 26                	jne    66cd <mbsstr_trimmed_wordbounded+0x47d>
66a7:	48 8b 44 24 70       	mov    rax,QWORD PTR [rsp+0x70]
66ac:	48 c7 44 24 78 01 00 	mov    QWORD PTR [rsp+0x78],0x1
66b3:	00 00
66b5:	80 38 00             	cmp    BYTE PTR [rax],0x0
66b8:	0f 85 dd 04 00 00    	jne    6b9b <mbsstr_trimmed_wordbounded+0x94b>
66be:	8b b4 24 84 00 00 00 	mov    esi,DWORD PTR [rsp+0x84]
66c5:	85 f6                	test   esi,esi
66c7:	0f 85 4f 04 00 00    	jne    6b1c <mbsstr_trimmed_wordbounded+0x8cc>
66cd:	49 8d 7c 24 04       	lea    rdi,[r12+0x4]
66d2:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x1
66d9:	01
66da:	e8 d1 bb ff ff       	call   22b0 <mbsinit@plt>
66df:	85 c0                	test   eax,eax
66e1:	0f 84 01 02 00 00    	je     68e8 <mbsstr_trimmed_wordbounded+0x698>
66e7:	8b 8c 24 84 00 00 00 	mov    ecx,DWORD PTR [rsp+0x84]
66ee:	c6 44 24 60 00       	mov    BYTE PTR [rsp+0x60],0x0
66f3:	c6 44 24 6c 01       	mov    BYTE PTR [rsp+0x6c],0x1
66f8:	85 c9                	test   ecx,ecx
66fa:	0f 85 2d ff ff ff    	jne    662d <mbsstr_trimmed_wordbounded+0x3dd>
6700:	80 7c 24 2c 00       	cmp    BYTE PTR [rsp+0x2c],0x0
6705:	0f 85 6d 02 00 00    	jne    6978 <mbsstr_trimmed_wordbounded+0x728>
670b:	80 7c 24 20 00       	cmp    BYTE PTR [rsp+0x20],0x0
6710:	0f 85 8c 02 00 00    	jne    69a2 <mbsstr_trimmed_wordbounded+0x752>
6716:	48 8b 4c 24 30       	mov    rcx,QWORD PTR [rsp+0x30]
671b:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
671e:	89 d0                	mov    eax,edx
6720:	c0 e8 05             	shr    al,0x5
6723:	83 e0 07             	and    eax,0x7
6726:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
672b:	0f a3 d0             	bt     eax,edx
672e:	0f 83 58 02 00 00    	jae    698c <mbsstr_trimmed_wordbounded+0x73c>
6734:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
673b:	00 00
673d:	0f be 11             	movsx  edx,BYTE PTR [rcx]
6740:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
6745:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
674a:	89 54 24 44          	mov    DWORD PTR [rsp+0x44],edx
674e:	85 d2                	test   edx,edx
6750:	74 12                	je     6764 <mbsstr_trimmed_wordbounded+0x514>
6752:	80 7c 24 40 00       	cmp    BYTE PTR [rsp+0x40],0x0
6757:	74 0b                	je     6764 <mbsstr_trimmed_wordbounded+0x514>
6759:	89 d7                	mov    edi,edx
675b:	e8 80 b9 ff ff       	call   20e0 <iswalnum@plt>
6760:	85 c0                	test   eax,eax
6762:	75 0b                	jne    676f <mbsstr_trimmed_wordbounded+0x51f>
6764:	80 7c 24 10 00       	cmp    BYTE PTR [rsp+0x10],0x0
6769:	0f 85 bb fb ff ff    	jne    632a <mbsstr_trimmed_wordbounded+0xda>
676f:	48 89 6c 24 30       	mov    QWORD PTR [rsp+0x30],rbp
6774:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
6779:	4c 8d 7b 04          	lea    r15,[rbx+0x4]
677d:	48 c7 43 04 00 00 00 	mov    QWORD PTR [rbx+0x4],0x0
6784:	00
6785:	c6 44 24 2c 00       	mov    BYTE PTR [rsp+0x2c],0x0
678a:	0f b6 55 00          	movzx  edx,BYTE PTR [rbp+0x0]
678e:	89 d0                	mov    eax,edx
6790:	c0 e8 05             	shr    al,0x5
6793:	83 e0 07             	and    eax,0x7
6796:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
679b:	0f a3 d0             	bt     eax,edx
679e:	0f 83 8c 02 00 00    	jae    6a30 <mbsstr_trimmed_wordbounded+0x7e0>
67a4:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
67ab:	00 00
67ad:	0f be 45 00          	movsx  eax,BYTE PTR [rbp+0x0]
67b1:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
67b6:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
67bb:	89 44 24 44          	mov    DWORD PTR [rsp+0x44],eax
67bf:	8b 44 24 44          	mov    eax,DWORD PTR [rsp+0x44]
67c3:	85 c0                	test   eax,eax
67c5:	0f 84 5a fb ff ff    	je     6325 <mbsstr_trimmed_wordbounded+0xd5>
67cb:	4c 8b 7c 24 38       	mov    r15,QWORD PTR [rsp+0x38]
67d0:	49 01 ef             	add    r15,rbp
67d3:	e9 c8 fa ff ff       	jmp    62a0 <mbsstr_trimmed_wordbounded+0x50>
67d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
67df:	00
67e0:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
67e4:	e8 c7 ba ff ff       	call   22b0 <mbsinit@plt>
67e9:	85 c0                	test   eax,eax
67eb:	0f 84 86 03 00 00    	je     6b77 <mbsstr_trimmed_wordbounded+0x927>
67f1:	c6 44 24 20 01       	mov    BYTE PTR [rsp+0x20],0x1
67f6:	e8 f5 b6 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
67fb:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
6800:	48 89 c6             	mov    rsi,rax
6803:	4c 89 ff             	mov    rdi,r15
6806:	e8 45 28 00 00       	call   9050 <strnlen1>
680b:	48 8d 4b 04          	lea    rcx,[rbx+0x4]
680f:	48 89 c2             	mov    rdx,rax
6812:	4c 89 fe             	mov    rsi,r15
6815:	4c 89 f7             	mov    rdi,r14
6818:	e8 d3 37 00 00       	call   9ff0 <rpl_mbrtowc>
681d:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
6821:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
6826:	0f 84 7c 00 00 00    	je     68a8 <mbsstr_trimmed_wordbounded+0x658>
682c:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
6830:	0f 84 c2 00 00 00    	je     68f8 <mbsstr_trimmed_wordbounded+0x6a8>
6836:	48 85 c0             	test   rax,rax
6839:	75 25                	jne    6860 <mbsstr_trimmed_wordbounded+0x610>
683b:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
6840:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
6847:	00 00
6849:	80 38 00             	cmp    BYTE PTR [rax],0x0
684c:	0f 85 49 03 00 00    	jne    6b9b <mbsstr_trimmed_wordbounded+0x94b>
6852:	44 8b 44 24 44       	mov    r8d,DWORD PTR [rsp+0x44]
6857:	45 85 c0             	test   r8d,r8d
685a:	0f 85 bc 02 00 00    	jne    6b1c <mbsstr_trimmed_wordbounded+0x8cc>
6860:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
6864:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
6869:	e8 42 ba ff ff       	call   22b0 <mbsinit@plt>
686e:	85 c0                	test   eax,eax
6870:	0f 84 a2 00 00 00    	je     6918 <mbsstr_trimmed_wordbounded+0x6c8>
6876:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
687b:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
6880:	e9 2e fd ff ff       	jmp    65b3 <mbsstr_trimmed_wordbounded+0x363>
6885:	0f 1f 00             	nop    DWORD PTR [rax]
6888:	48 c7 44 24 78 01 00 	mov    QWORD PTR [rsp+0x78],0x1
688f:	00 00
6891:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x0
6898:	00
6899:	c6 44 24 6c 01       	mov    BYTE PTR [rsp+0x6c],0x1
689e:	e9 8a fd ff ff       	jmp    662d <mbsstr_trimmed_wordbounded+0x3dd>
68a3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
68a8:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
68af:	00 00
68b1:	c6 44 24 40 00       	mov    BYTE PTR [rsp+0x40],0x0
68b6:	e9 04 fd ff ff       	jmp    65bf <mbsstr_trimmed_wordbounded+0x36f>
68bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
68c0:	48 8b 7c 24 70       	mov    rdi,QWORD PTR [rsp+0x70]
68c5:	e8 36 b6 ff ff       	call   1f00 <strlen@plt>
68ca:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x0
68d1:	00
68d2:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
68d7:	c6 44 24 6c 01       	mov    BYTE PTR [rsp+0x6c],0x1
68dc:	e9 4c fd ff ff       	jmp    662d <mbsstr_trimmed_wordbounded+0x3dd>
68e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
68e8:	c6 44 24 6c 01       	mov    BYTE PTR [rsp+0x6c],0x1
68ed:	e9 2c fd ff ff       	jmp    661e <mbsstr_trimmed_wordbounded+0x3ce>
68f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
68f8:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
68fd:	e8 fe b5 ff ff       	call   1f00 <strlen@plt>
6902:	c6 44 24 40 00       	mov    BYTE PTR [rsp+0x40],0x0
6907:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
690c:	e9 ae fc ff ff       	jmp    65bf <mbsstr_trimmed_wordbounded+0x36f>
6911:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6918:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
691d:	e9 91 fc ff ff       	jmp    65b3 <mbsstr_trimmed_wordbounded+0x363>
6922:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6928:	c6 44 24 10 01       	mov    BYTE PTR [rsp+0x10],0x1
692d:	e9 04 fc ff ff       	jmp    6536 <mbsstr_trimmed_wordbounded+0x2e6>
6932:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6938:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
693d:	e8 be b5 ff ff       	call   1f00 <strlen@plt>
6942:	0f b6 54 05 00       	movzx  edx,BYTE PTR [rbp+rax*1+0x0]
6947:	c6 44 24 10 01       	mov    BYTE PTR [rsp+0x10],0x1
694c:	84 d2                	test   dl,dl
694e:	0f 84 d6 f9 ff ff    	je     632a <mbsstr_trimmed_wordbounded+0xda>
6954:	88 54 24 18          	mov    BYTE PTR [rsp+0x18],dl
6958:	e8 73 b9 ff ff       	call   22d0 <__ctype_b_loc@plt>
695d:	0f b6 54 24 18       	movzx  edx,BYTE PTR [rsp+0x18]
6962:	48 8b 00             	mov    rax,QWORD PTR [rax]
6965:	f6 04 50 08          	test   BYTE PTR [rax+rdx*2],0x8
6969:	0f 85 a6 f9 ff ff    	jne    6315 <mbsstr_trimmed_wordbounded+0xc5>
696f:	e9 9a f9 ff ff       	jmp    630e <mbsstr_trimmed_wordbounded+0xbe>
6974:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6978:	80 7c 24 40 00       	cmp    BYTE PTR [rsp+0x40],0x0
697d:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
6981:	0f 84 cb fd ff ff    	je     6752 <mbsstr_trimmed_wordbounded+0x502>
6987:	e9 c2 fd ff ff       	jmp    674e <mbsstr_trimmed_wordbounded+0x4fe>
698c:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
6990:	e8 1b b9 ff ff       	call   22b0 <mbsinit@plt>
6995:	85 c0                	test   eax,eax
6997:	0f 84 da 01 00 00    	je     6b77 <mbsstr_trimmed_wordbounded+0x927>
699d:	c6 44 24 20 01       	mov    BYTE PTR [rsp+0x20],0x1
69a2:	e8 49 b5 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
69a7:	4c 8b 44 24 30       	mov    r8,QWORD PTR [rsp+0x30]
69ac:	48 89 c6             	mov    rsi,rax
69af:	4c 89 c7             	mov    rdi,r8
69b2:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
69b7:	e8 94 26 00 00       	call   9050 <strnlen1>
69bc:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
69c1:	48 8d 4b 04          	lea    rcx,[rbx+0x4]
69c5:	48 89 c2             	mov    rdx,rax
69c8:	4c 89 f7             	mov    rdi,r14
69cb:	4c 89 c6             	mov    rsi,r8
69ce:	e8 1d 36 00 00       	call   9ff0 <rpl_mbrtowc>
69d3:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
69d7:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
69dc:	0f 84 ed 00 00 00    	je     6acf <mbsstr_trimmed_wordbounded+0x87f>
69e2:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
69e6:	0f 84 64 01 00 00    	je     6b50 <mbsstr_trimmed_wordbounded+0x900>
69ec:	48 85 c0             	test   rax,rax
69ef:	0f 84 04 01 00 00    	je     6af9 <mbsstr_trimmed_wordbounded+0x8a9>
69f5:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
69f9:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
69fd:	89 54 24 18          	mov    DWORD PTR [rsp+0x18],edx
6a01:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
6a06:	e8 a5 b8 ff ff       	call   22b0 <mbsinit@plt>
6a0b:	85 c0                	test   eax,eax
6a0d:	8b 54 24 18          	mov    edx,DWORD PTR [rsp+0x18]
6a11:	0f 84 1b 01 00 00    	je     6b32 <mbsstr_trimmed_wordbounded+0x8e2>
6a17:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
6a1c:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
6a21:	e9 28 fd ff ff       	jmp    674e <mbsstr_trimmed_wordbounded+0x4fe>
6a26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6a2d:	00 00 00
6a30:	4c 89 ff             	mov    rdi,r15
6a33:	e8 78 b8 ff ff       	call   22b0 <mbsinit@plt>
6a38:	85 c0                	test   eax,eax
6a3a:	0f 84 37 01 00 00    	je     6b77 <mbsstr_trimmed_wordbounded+0x927>
6a40:	c6 44 24 20 01       	mov    BYTE PTR [rsp+0x20],0x1
6a45:	e8 a6 b4 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
6a4a:	4c 8b 44 24 30       	mov    r8,QWORD PTR [rsp+0x30]
6a4f:	48 89 c6             	mov    rsi,rax
6a52:	4c 89 c7             	mov    rdi,r8
6a55:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
6a5a:	e8 f1 25 00 00       	call   9050 <strnlen1>
6a5f:	4c 8b 44 24 10       	mov    r8,QWORD PTR [rsp+0x10]
6a64:	4c 89 f9             	mov    rcx,r15
6a67:	48 89 c2             	mov    rdx,rax
6a6a:	4c 89 f7             	mov    rdi,r14
6a6d:	4c 89 c6             	mov    rsi,r8
6a70:	e8 7b 35 00 00       	call   9ff0 <rpl_mbrtowc>
6a75:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
6a79:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
6a7e:	74 6b                	je     6aeb <mbsstr_trimmed_wordbounded+0x89b>
6a80:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
6a84:	0f 84 b2 00 00 00    	je     6b3c <mbsstr_trimmed_wordbounded+0x8ec>
6a8a:	48 85 c0             	test   rax,rax
6a8d:	75 1f                	jne    6aae <mbsstr_trimmed_wordbounded+0x85e>
6a8f:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
6a94:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
6a9b:	00 00
6a9d:	80 38 00             	cmp    BYTE PTR [rax],0x0
6aa0:	0f 85 f5 00 00 00    	jne    6b9b <mbsstr_trimmed_wordbounded+0x94b>
6aa6:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
6aaa:	85 d2                	test   edx,edx
6aac:	75 6e                	jne    6b1c <mbsstr_trimmed_wordbounded+0x8cc>
6aae:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
6ab2:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
6ab7:	e8 f4 b7 ff ff       	call   22b0 <mbsinit@plt>
6abc:	85 c0                	test   eax,eax
6abe:	74 68                	je     6b28 <mbsstr_trimmed_wordbounded+0x8d8>
6ac0:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
6ac5:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
6aca:	e9 f0 fc ff ff       	jmp    67bf <mbsstr_trimmed_wordbounded+0x56f>
6acf:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
6ad6:	00 00
6ad8:	c6 44 24 40 00       	mov    BYTE PTR [rsp+0x40],0x0
6add:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
6ae1:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
6ae6:	e9 67 fc ff ff       	jmp    6752 <mbsstr_trimmed_wordbounded+0x502>
6aeb:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
6af2:	00 00
6af4:	e9 d2 fc ff ff       	jmp    67cb <mbsstr_trimmed_wordbounded+0x57b>
6af9:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
6afe:	48 c7 44 24 38 01 00 	mov    QWORD PTR [rsp+0x38],0x1
6b05:	00 00
6b07:	80 38 00             	cmp    BYTE PTR [rax],0x0
6b0a:	0f 85 8b 00 00 00    	jne    6b9b <mbsstr_trimmed_wordbounded+0x94b>
6b10:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
6b14:	85 d2                	test   edx,edx
6b16:	0f 84 dd fe ff ff    	je     69f9 <mbsstr_trimmed_wordbounded+0x7a9>
6b1c:	e8 ef b7 ff ff       	call   2310 <mbuiter_multi_next.part.0>
6b21:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6b28:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
6b2d:	e9 8d fc ff ff       	jmp    67bf <mbsstr_trimmed_wordbounded+0x56f>
6b32:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
6b37:	e9 12 fc ff ff       	jmp    674e <mbsstr_trimmed_wordbounded+0x4fe>
6b3c:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
6b41:	e8 ba b3 ff ff       	call   1f00 <strlen@plt>
6b46:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
6b4b:	e9 7b fc ff ff       	jmp    67cb <mbsstr_trimmed_wordbounded+0x57b>
6b50:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
6b55:	e8 a6 b3 ff ff       	call   1f00 <strlen@plt>
6b5a:	c6 44 24 40 00       	mov    BYTE PTR [rsp+0x40],0x0
6b5f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
6b64:	8b 54 24 44          	mov    edx,DWORD PTR [rsp+0x44]
6b68:	c6 44 24 2c 01       	mov    BYTE PTR [rsp+0x2c],0x1
6b6d:	e9 e0 fb ff ff       	jmp    6752 <mbsstr_trimmed_wordbounded+0x502>
6b72:	e8 69 b2 ff ff       	call   1de0 <abort@plt>
6b77:	48 8d 0d 52 95 00 00 	lea    rcx,[rip+0x9552]        # 100d0 <__PRETTY_FUNCTION__.5159>
6b7e:	48 8d 35 d3 94 00 00 	lea    rsi,[rip+0x94d3]        # 10058 <primes_diff+0x2f8>
6b85:	48 8d 3d fe 94 00 00 	lea    rdi,[rip+0x94fe]        # 1008a <primes_diff+0x32a>
6b8c:	ba 96 00 00 00       	mov    edx,0x96
6b91:	e8 4a b4 ff ff       	call   1fe0 <__assert_fail@plt>
6b96:	e8 85 b3 ff ff       	call   1f20 <__stack_chk_fail@plt>
6b9b:	48 8d 0d 2e 95 00 00 	lea    rcx,[rip+0x952e]        # 100d0 <__PRETTY_FUNCTION__.5159>
6ba2:	48 8d 35 af 94 00 00 	lea    rsi,[rip+0x94af]        # 10058 <primes_diff+0x2f8>
6ba9:	48 8d 3d f1 94 00 00 	lea    rdi,[rip+0x94f1]        # 100a1 <primes_diff+0x341>
6bb0:	ba b2 00 00 00       	mov    edx,0xb2
6bb5:	e8 26 b4 ff ff       	call   1fe0 <__assert_fail@plt>
6bba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006bc0 <proper_name>:
6bc0:	41 54                	push   r12
6bc2:	55                   	push   rbp
6bc3:	48 89 fe             	mov    rsi,rdi
6bc6:	53                   	push   rbx
6bc7:	48 89 fd             	mov    rbp,rdi
6bca:	ba 05 00 00 00       	mov    edx,0x5
6bcf:	31 ff                	xor    edi,edi
6bd1:	e8 0a b3 ff ff       	call   1ee0 <dcgettext@plt>
6bd6:	48 39 c5             	cmp    rbp,rax
6bd9:	48 89 c3             	mov    rbx,rax
6bdc:	74 0f                	je     6bed <proper_name+0x2d>
6bde:	48 89 ee             	mov    rsi,rbp
6be1:	48 89 c7             	mov    rdi,rax
6be4:	e8 67 f6 ff ff       	call   6250 <mbsstr_trimmed_wordbounded>
6be9:	84 c0                	test   al,al
6beb:	74 0b                	je     6bf8 <proper_name+0x38>
6bed:	48 89 d8             	mov    rax,rbx
6bf0:	5b                   	pop    rbx
6bf1:	5d                   	pop    rbp
6bf2:	41 5c                	pop    r12
6bf4:	c3                   	ret
6bf5:	0f 1f 00             	nop    DWORD PTR [rax]
6bf8:	48 89 df             	mov    rdi,rbx
6bfb:	e8 00 b3 ff ff       	call   1f00 <strlen@plt>
6c00:	48 89 ef             	mov    rdi,rbp
6c03:	49 89 c4             	mov    r12,rax
6c06:	e8 f5 b2 ff ff       	call   1f00 <strlen@plt>
6c0b:	49 8d 7c 04 04       	lea    rdi,[r12+rax*1+0x4]
6c10:	e8 cb 30 00 00       	call   9ce0 <xmalloc>
6c15:	48 8d 0d 9c 94 00 00 	lea    rcx,[rip+0x949c]        # 100b8 <primes_diff+0x358>
6c1c:	49 89 c4             	mov    r12,rax
6c1f:	49 89 e9             	mov    r9,rbp
6c22:	49 89 d8             	mov    r8,rbx
6c25:	48 89 c7             	mov    rdi,rax
6c28:	4c 89 e3             	mov    rbx,r12
6c2b:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
6c32:	be 01 00 00 00       	mov    esi,0x1
6c37:	31 c0                	xor    eax,eax
6c39:	e8 b2 b6 ff ff       	call   22f0 <__sprintf_chk@plt>
6c3e:	48 89 d8             	mov    rax,rbx
6c41:	5b                   	pop    rbx
6c42:	5d                   	pop    rbp
6c43:	41 5c                	pop    r12
6c45:	c3                   	ret
6c46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6c4d:	00 00 00

0000000000006c50 <proper_name_utf8>:
6c50:	41 57                	push   r15
6c52:	41 56                	push   r14
6c54:	ba 05 00 00 00       	mov    edx,0x5
6c59:	41 55                	push   r13
6c5b:	41 54                	push   r12
6c5d:	49 89 fd             	mov    r13,rdi
6c60:	55                   	push   rbp
6c61:	53                   	push   rbx
6c62:	48 89 f5             	mov    rbp,rsi
6c65:	48 89 fe             	mov    rsi,rdi
6c68:	31 ff                	xor    edi,edi
6c6a:	48 83 ec 18          	sub    rsp,0x18
6c6e:	e8 6d b2 ff ff       	call   1ee0 <dcgettext@plt>
6c73:	49 89 c6             	mov    r14,rax
6c76:	e8 35 35 00 00       	call   a1b0 <locale_charset>
6c7b:	48 8d 35 3e 94 00 00 	lea    rsi,[rip+0x943e]        # 100c0 <primes_diff+0x360>
6c82:	48 89 c7             	mov    rdi,rax
6c85:	49 89 c4             	mov    r12,rax
6c88:	e8 f3 33 00 00       	call   a080 <c_strcasecmp>
6c8d:	85 c0                	test   eax,eax
6c8f:	0f 85 e3 00 00 00    	jne    6d78 <proper_name_utf8+0x128>
6c95:	48 85 ed             	test   rbp,rbp
6c98:	74 56                	je     6cf0 <proper_name_utf8+0xa0>
6c9a:	48 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],rbp
6c9f:	48 89 eb             	mov    rbx,rbp
6ca2:	45 31 e4             	xor    r12d,r12d
6ca5:	45 31 ff             	xor    r15d,r15d
6ca8:	4c 89 ee             	mov    rsi,r13
6cab:	4c 89 f7             	mov    rdi,r14
6cae:	e8 bd b3 ff ff       	call   2070 <strcmp@plt>
6cb3:	85 c0                	test   eax,eax
6cb5:	75 5a                	jne    6d11 <proper_name_utf8+0xc1>
6cb7:	4d 85 ff             	test   r15,r15
6cba:	74 0d                	je     6cc9 <proper_name_utf8+0x79>
6cbc:	4c 39 fb             	cmp    rbx,r15
6cbf:	74 08                	je     6cc9 <proper_name_utf8+0x79>
6cc1:	4c 89 ff             	mov    rdi,r15
6cc4:	e8 07 b1 ff ff       	call   1dd0 <free@plt>
6cc9:	4d 85 e4             	test   r12,r12
6ccc:	74 0d                	je     6cdb <proper_name_utf8+0x8b>
6cce:	4c 39 e3             	cmp    rbx,r12
6cd1:	74 08                	je     6cdb <proper_name_utf8+0x8b>
6cd3:	4c 89 e7             	mov    rdi,r12
6cd6:	e8 f5 b0 ff ff       	call   1dd0 <free@plt>
6cdb:	48 83 c4 18          	add    rsp,0x18
6cdf:	48 89 d8             	mov    rax,rbx
6ce2:	5b                   	pop    rbx
6ce3:	5d                   	pop    rbp
6ce4:	41 5c                	pop    r12
6ce6:	41 5d                	pop    r13
6ce8:	41 5e                	pop    r14
6cea:	41 5f                	pop    r15
6cec:	c3                   	ret
6ced:	0f 1f 00             	nop    DWORD PTR [rax]
6cf0:	4c 89 ee             	mov    rsi,r13
6cf3:	4c 89 f7             	mov    rdi,r14
6cf6:	48 c7 44 24 08 00 00 	mov    QWORD PTR [rsp+0x8],0x0
6cfd:	00 00
6cff:	45 31 e4             	xor    r12d,r12d
6d02:	45 31 ff             	xor    r15d,r15d
6d05:	4c 89 eb             	mov    rbx,r13
6d08:	e8 63 b3 ff ff       	call   2070 <strcmp@plt>
6d0d:	85 c0                	test   eax,eax
6d0f:	74 a6                	je     6cb7 <proper_name_utf8+0x67>
6d11:	4c 89 ee             	mov    rsi,r13
6d14:	4c 89 f7             	mov    rdi,r14
6d17:	e8 34 f5 ff ff       	call   6250 <mbsstr_trimmed_wordbounded>
6d1c:	84 c0                	test   al,al
6d1e:	75 38                	jne    6d58 <proper_name_utf8+0x108>
6d20:	48 85 ed             	test   rbp,rbp
6d23:	74 0f                	je     6d34 <proper_name_utf8+0xe4>
6d25:	48 89 ee             	mov    rsi,rbp
6d28:	4c 89 f7             	mov    rdi,r14
6d2b:	e8 20 f5 ff ff       	call   6250 <mbsstr_trimmed_wordbounded>
6d30:	84 c0                	test   al,al
6d32:	75 24                	jne    6d58 <proper_name_utf8+0x108>
6d34:	48 83 7c 24 08 00    	cmp    QWORD PTR [rsp+0x8],0x0
6d3a:	0f 84 70 01 00 00    	je     6eb0 <proper_name_utf8+0x260>
6d40:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
6d45:	4c 89 f7             	mov    rdi,r14
6d48:	e8 03 f5 ff ff       	call   6250 <mbsstr_trimmed_wordbounded>
6d4d:	84 c0                	test   al,al
6d4f:	0f 84 5b 01 00 00    	je     6eb0 <proper_name_utf8+0x260>
6d55:	0f 1f 00             	nop    DWORD PTR [rax]
6d58:	4d 85 ff             	test   r15,r15
6d5b:	0f 85 ef 00 00 00    	jne    6e50 <proper_name_utf8+0x200>
6d61:	4d 85 e4             	test   r12,r12
6d64:	4c 89 f3             	mov    rbx,r14
6d67:	0f 85 66 ff ff ff    	jne    6cd3 <proper_name_utf8+0x83>
6d6d:	e9 69 ff ff ff       	jmp    6cdb <proper_name_utf8+0x8b>
6d72:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6d78:	48 8d 35 41 93 00 00 	lea    rsi,[rip+0x9341]        # 100c0 <primes_diff+0x360>
6d7f:	4c 89 e2             	mov    rdx,r12
6d82:	48 89 ef             	mov    rdi,rbp
6d85:	e8 36 32 00 00       	call   9fc0 <xstr_iconv>
6d8a:	4c 89 e7             	mov    rdi,r12
6d8d:	48 89 c3             	mov    rbx,rax
6d90:	e8 6b b1 ff ff       	call   1f00 <strlen@plt>
6d95:	48 8d 78 0b          	lea    rdi,[rax+0xb]
6d99:	49 89 c7             	mov    r15,rax
6d9c:	e8 3f 2f 00 00       	call   9ce0 <xmalloc>
6da1:	4c 89 fa             	mov    rdx,r15
6da4:	4c 89 e6             	mov    rsi,r12
6da7:	48 89 c7             	mov    rdi,rax
6daa:	e8 f1 b2 ff ff       	call   20a0 <memcpy@plt>
6daf:	48 89 c1             	mov    rcx,rax
6db2:	49 01 c7             	add    r15,rax
6db5:	48 b8 2f 2f 54 52 41 	movabs rax,0x4c534e4152542f2f
6dbc:	4e 53 4c
6dbf:	49 89 07             	mov    QWORD PTR [r15],rax
6dc2:	48 8d 35 f7 92 00 00 	lea    rsi,[rip+0x92f7]        # 100c0 <primes_diff+0x360>
6dc9:	b8 49 54 00 00       	mov    eax,0x5449
6dce:	48 89 ca             	mov    rdx,rcx
6dd1:	48 89 ef             	mov    rdi,rbp
6dd4:	66 41 89 47 08       	mov    WORD PTR [r15+0x8],ax
6dd9:	41 c6 47 0a 00       	mov    BYTE PTR [r15+0xa],0x0
6dde:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
6de3:	e8 d8 31 00 00       	call   9fc0 <xstr_iconv>
6de8:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
6ded:	49 89 c4             	mov    r12,rax
6df0:	48 89 cf             	mov    rdi,rcx
6df3:	e8 d8 af ff ff       	call   1dd0 <free@plt>
6df8:	4d 85 e4             	test   r12,r12
6dfb:	74 1a                	je     6e17 <proper_name_utf8+0x1c7>
6dfd:	be 3f 00 00 00       	mov    esi,0x3f
6e02:	4c 89 e7             	mov    rdi,r12
6e05:	e8 66 b1 ff ff       	call   1f70 <strchr@plt>
6e0a:	48 85 c0             	test   rax,rax
6e0d:	74 61                	je     6e70 <proper_name_utf8+0x220>
6e0f:	4c 89 e7             	mov    rdi,r12
6e12:	e8 b9 af ff ff       	call   1dd0 <free@plt>
6e17:	48 85 db             	test   rbx,rbx
6e1a:	74 74                	je     6e90 <proper_name_utf8+0x240>
6e1c:	4c 89 ee             	mov    rsi,r13
6e1f:	4c 89 f7             	mov    rdi,r14
6e22:	e8 49 b2 ff ff       	call   2070 <strcmp@plt>
6e27:	85 c0                	test   eax,eax
6e29:	0f 84 ac fe ff ff    	je     6cdb <proper_name_utf8+0x8b>
6e2f:	4c 89 ee             	mov    rsi,r13
6e32:	4c 89 f7             	mov    rdi,r14
6e35:	e8 16 f4 ff ff       	call   6250 <mbsstr_trimmed_wordbounded>
6e3a:	84 c0                	test   al,al
6e3c:	0f 84 d6 00 00 00    	je     6f18 <proper_name_utf8+0x2c8>
6e42:	49 89 df             	mov    r15,rbx
6e45:	45 31 e4             	xor    r12d,r12d
6e48:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
6e4f:	00
6e50:	4c 89 ff             	mov    rdi,r15
6e53:	4c 89 f3             	mov    rbx,r14
6e56:	e8 75 af ff ff       	call   1dd0 <free@plt>
6e5b:	4d 85 e4             	test   r12,r12
6e5e:	0f 85 6f fe ff ff    	jne    6cd3 <proper_name_utf8+0x83>
6e64:	e9 72 fe ff ff       	jmp    6cdb <proper_name_utf8+0x8b>
6e69:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6e70:	48 85 db             	test   rbx,rbx
6e73:	4c 89 64 24 08       	mov    QWORD PTR [rsp+0x8],r12
6e78:	0f 84 b2 00 00 00    	je     6f30 <proper_name_utf8+0x2e0>
6e7e:	48 89 dd             	mov    rbp,rbx
6e81:	49 89 df             	mov    r15,rbx
6e84:	e9 1f fe ff ff       	jmp    6ca8 <proper_name_utf8+0x58>
6e89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6e90:	4c 89 eb             	mov    rbx,r13
6e93:	48 c7 44 24 08 00 00 	mov    QWORD PTR [rsp+0x8],0x0
6e9a:	00 00
6e9c:	31 ed                	xor    ebp,ebp
6e9e:	45 31 e4             	xor    r12d,r12d
6ea1:	45 31 ff             	xor    r15d,r15d
6ea4:	e9 ff fd ff ff       	jmp    6ca8 <proper_name_utf8+0x58>
6ea9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6eb0:	4c 89 f7             	mov    rdi,r14
6eb3:	e8 48 b0 ff ff       	call   1f00 <strlen@plt>
6eb8:	48 89 df             	mov    rdi,rbx
6ebb:	48 89 c5             	mov    rbp,rax
6ebe:	e8 3d b0 ff ff       	call   1f00 <strlen@plt>
6ec3:	48 8d 7c 05 04       	lea    rdi,[rbp+rax*1+0x4]
6ec8:	e8 13 2e 00 00       	call   9ce0 <xmalloc>
6ecd:	48 8d 0d e4 91 00 00 	lea    rcx,[rip+0x91e4]        # 100b8 <primes_diff+0x358>
6ed4:	48 89 c7             	mov    rdi,rax
6ed7:	48 89 c5             	mov    rbp,rax
6eda:	49 89 d9             	mov    r9,rbx
6edd:	31 c0                	xor    eax,eax
6edf:	4d 89 f0             	mov    r8,r14
6ee2:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
6ee9:	be 01 00 00 00       	mov    esi,0x1
6eee:	e8 fd b3 ff ff       	call   22f0 <__sprintf_chk@plt>
6ef3:	4d 85 ff             	test   r15,r15
6ef6:	74 08                	je     6f00 <proper_name_utf8+0x2b0>
6ef8:	4c 89 ff             	mov    rdi,r15
6efb:	e8 d0 ae ff ff       	call   1dd0 <free@plt>
6f00:	4d 85 e4             	test   r12,r12
6f03:	48 89 eb             	mov    rbx,rbp
6f06:	0f 85 c7 fd ff ff    	jne    6cd3 <proper_name_utf8+0x83>
6f0c:	e9 ca fd ff ff       	jmp    6cdb <proper_name_utf8+0x8b>
6f11:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6f18:	48 89 dd             	mov    rbp,rbx
6f1b:	49 89 df             	mov    r15,rbx
6f1e:	48 c7 44 24 08 00 00 	mov    QWORD PTR [rsp+0x8],0x0
6f25:	00 00
6f27:	45 31 e4             	xor    r12d,r12d
6f2a:	e9 f1 fd ff ff       	jmp    6d20 <proper_name_utf8+0xd0>
6f2f:	90                   	nop
6f30:	31 ed                	xor    ebp,ebp
6f32:	45 31 ff             	xor    r15d,r15d
6f35:	4c 89 e3             	mov    rbx,r12
6f38:	e9 6b fd ff ff       	jmp    6ca8 <proper_name_utf8+0x58>
6f3d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006f40 <gettext_quote.part.1>:
6f40:	55                   	push   rbp
6f41:	53                   	push   rbx
6f42:	48 89 fd             	mov    rbp,rdi
6f45:	89 f3                	mov    ebx,esi
6f47:	48 83 ec 08          	sub    rsp,0x8
6f4b:	e8 60 32 00 00       	call   a1b0 <locale_charset>
6f50:	0f b6 10             	movzx  edx,BYTE PTR [rax]
6f53:	83 e2 df             	and    edx,0xffffffdf
6f56:	80 fa 55             	cmp    dl,0x55
6f59:	74 75                	je     6fd0 <gettext_quote.part.1+0x90>
6f5b:	80 fa 47             	cmp    dl,0x47
6f5e:	74 20                	je     6f80 <gettext_quote.part.1+0x40>
6f60:	48 8d 05 8b 91 00 00 	lea    rax,[rip+0x918b]        # 100f2 <__PRETTY_FUNCTION__.5159+0x22>
6f67:	48 8d 15 48 91 00 00 	lea    rdx,[rip+0x9148]        # 100b6 <primes_diff+0x356>
6f6e:	83 fb 09             	cmp    ebx,0x9
6f71:	48 0f 45 c2          	cmovne rax,rdx
6f75:	48 83 c4 08          	add    rsp,0x8
6f79:	5b                   	pop    rbx
6f7a:	5d                   	pop    rbp
6f7b:	c3                   	ret
6f7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6f80:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
6f84:	83 e2 df             	and    edx,0xffffffdf
6f87:	80 fa 42             	cmp    dl,0x42
6f8a:	75 d4                	jne    6f60 <gettext_quote.part.1+0x20>
6f8c:	80 78 02 31          	cmp    BYTE PTR [rax+0x2],0x31
6f90:	75 ce                	jne    6f60 <gettext_quote.part.1+0x20>
6f92:	80 78 03 38          	cmp    BYTE PTR [rax+0x3],0x38
6f96:	75 c8                	jne    6f60 <gettext_quote.part.1+0x20>
6f98:	80 78 04 30          	cmp    BYTE PTR [rax+0x4],0x30
6f9c:	75 c2                	jne    6f60 <gettext_quote.part.1+0x20>
6f9e:	80 78 05 33          	cmp    BYTE PTR [rax+0x5],0x33
6fa2:	75 bc                	jne    6f60 <gettext_quote.part.1+0x20>
6fa4:	80 78 06 30          	cmp    BYTE PTR [rax+0x6],0x30
6fa8:	75 b6                	jne    6f60 <gettext_quote.part.1+0x20>
6faa:	80 78 07 00          	cmp    BYTE PTR [rax+0x7],0x0
6fae:	75 b0                	jne    6f60 <gettext_quote.part.1+0x20>
6fb0:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
6fb4:	48 8d 05 30 91 00 00 	lea    rax,[rip+0x9130]        # 100eb <__PRETTY_FUNCTION__.5159+0x1b>
6fbb:	48 8d 15 2d 91 00 00 	lea    rdx,[rip+0x912d]        # 100ef <__PRETTY_FUNCTION__.5159+0x1f>
6fc2:	48 0f 45 c2          	cmovne rax,rdx
6fc6:	48 83 c4 08          	add    rsp,0x8
6fca:	5b                   	pop    rbx
6fcb:	5d                   	pop    rbp
6fcc:	c3                   	ret
6fcd:	0f 1f 00             	nop    DWORD PTR [rax]
6fd0:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
6fd4:	83 e2 df             	and    edx,0xffffffdf
6fd7:	80 fa 54             	cmp    dl,0x54
6fda:	75 84                	jne    6f60 <gettext_quote.part.1+0x20>
6fdc:	0f b6 50 02          	movzx  edx,BYTE PTR [rax+0x2]
6fe0:	83 e2 df             	and    edx,0xffffffdf
6fe3:	80 fa 46             	cmp    dl,0x46
6fe6:	0f 85 74 ff ff ff    	jne    6f60 <gettext_quote.part.1+0x20>
6fec:	80 78 03 2d          	cmp    BYTE PTR [rax+0x3],0x2d
6ff0:	0f 85 6a ff ff ff    	jne    6f60 <gettext_quote.part.1+0x20>
6ff6:	80 78 04 38          	cmp    BYTE PTR [rax+0x4],0x38
6ffa:	0f 85 60 ff ff ff    	jne    6f60 <gettext_quote.part.1+0x20>
7000:	80 78 05 00          	cmp    BYTE PTR [rax+0x5],0x0
7004:	0f 85 56 ff ff ff    	jne    6f60 <gettext_quote.part.1+0x20>
700a:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
700e:	48 8d 05 ce 90 00 00 	lea    rax,[rip+0x90ce]        # 100e3 <__PRETTY_FUNCTION__.5159+0x13>
7015:	48 8d 15 cb 90 00 00 	lea    rdx,[rip+0x90cb]        # 100e7 <__PRETTY_FUNCTION__.5159+0x17>
701c:	48 0f 45 c2          	cmovne rax,rdx
7020:	48 83 c4 08          	add    rsp,0x8
7024:	5b                   	pop    rbx
7025:	5d                   	pop    rbp
7026:	c3                   	ret
7027:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
702e:	00 00

0000000000007030 <quotearg_buffer_restyled>:
7030:	41 57                	push   r15
7032:	41 56                	push   r14
7034:	45 89 c7             	mov    r15d,r8d
7037:	41 55                	push   r13
7039:	41 54                	push   r12
703b:	49 89 fe             	mov    r14,rdi
703e:	55                   	push   rbp
703f:	53                   	push   rbx
7040:	44 89 cb             	mov    ebx,r9d
7043:	49 89 f5             	mov    r13,rsi
7046:	48 89 cd             	mov    rbp,rcx
7049:	83 e3 02             	and    ebx,0x2
704c:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
7053:	48 8b 84 24 f0 00 00 	mov    rax,QWORD PTR [rsp+0xf0]
705a:	00
705b:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
7060:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
7065:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
706a:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
706f:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
7076:	00
7077:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
707c:	48 8b 84 24 00 01 00 	mov    rax,QWORD PTR [rsp+0x100]
7083:	00
7084:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
7089:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
7090:	00 00
7092:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
7099:	00
709a:	31 c0                	xor    eax,eax
709c:	e8 4f ae ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
70a1:	41 83 ff 0a          	cmp    r15d,0xa
70a5:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
70aa:	0f 87 af 11 00 00    	ja     825f <quotearg_buffer_restyled+0x122f>
70b0:	48 8d 0d a9 90 00 00 	lea    rcx,[rip+0x90a9]        # 10160 <__PRETTY_FUNCTION__.5159+0x90>
70b7:	44 89 fa             	mov    edx,r15d
70ba:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
70be:	48 01 c8             	add    rax,rcx
70c1:	ff e0                	jmp    rax
70c3:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
70c8:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
70cd:	45 31 e4             	xor    r12d,r12d
70d0:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
70d7:	00 00
70d9:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
70de:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
70e3:	48 8d 05 cc 8f 00 00 	lea    rax,[rip+0x8fcc]        # 100b6 <primes_diff+0x356>
70ea:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
70f1:	00 00
70f3:	45 31 ff             	xor    r15d,r15d
70f6:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
70fd:	00
70fe:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
7103:	45 31 db             	xor    r11d,r11d
7106:	48 89 e8             	mov    rax,rbp
7109:	45 89 e0             	mov    r8d,r12d
710c:	4c 89 dd             	mov    rbp,r11
710f:	49 89 c3             	mov    r11,rax
7112:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7118:	49 39 eb             	cmp    r11,rbp
711b:	41 0f 95 c4          	setne  r12b
711f:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
7123:	75 0d                	jne    7132 <quotearg_buffer_restyled+0x102>
7125:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
712a:	80 3c 28 00          	cmp    BYTE PTR [rax+rbp*1],0x0
712e:	41 0f 95 c4          	setne  r12b
7132:	45 84 e4             	test   r12b,r12b
7135:	0f 84 55 06 00 00    	je     7790 <quotearg_buffer_restyled+0x760>
713b:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7140:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
7145:	4c 8d 0c 2f          	lea    r9,[rdi+rbp*1]
7149:	0f 95 c0             	setne  al
714c:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
7150:	41 89 c2             	mov    r10d,eax
7153:	0f 84 a7 00 00 00    	je     7200 <quotearg_buffer_restyled+0x1d0>
7159:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
715e:	48 85 c0             	test   rax,rax
7161:	0f 84 29 04 00 00    	je     7590 <quotearg_buffer_restyled+0x560>
7167:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
716b:	48 8d 5c 05 00       	lea    rbx,[rbp+rax*1+0x0]
7170:	75 2e                	jne    71a0 <quotearg_buffer_restyled+0x170>
7172:	48 83 f8 01          	cmp    rax,0x1
7176:	76 28                	jbe    71a0 <quotearg_buffer_restyled+0x170>
7178:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
717d:	44 88 54 24 30       	mov    BYTE PTR [rsp+0x30],r10b
7182:	4c 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],r9
7187:	e8 74 ad ff ff       	call   1f00 <strlen@plt>
718c:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
7192:	44 0f b6 54 24 30    	movzx  r10d,BYTE PTR [rsp+0x30]
7198:	49 89 c3             	mov    r11,rax
719b:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
71a0:	4c 39 db             	cmp    rbx,r11
71a3:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
71a8:	0f 87 b2 05 00 00    	ja     7760 <quotearg_buffer_restyled+0x730>
71ae:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
71b3:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
71b8:	4c 89 cf             	mov    rdi,r9
71bb:	4c 89 5c 24 40       	mov    QWORD PTR [rsp+0x40],r11
71c0:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
71c5:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
71ca:	e8 61 ae ff ff       	call   2030 <memcmp@plt>
71cf:	85 c0                	test   eax,eax
71d1:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
71d6:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
71dc:	4c 8b 5c 24 40       	mov    r11,QWORD PTR [rsp+0x40]
71e1:	0f 85 79 05 00 00    	jne    7760 <quotearg_buffer_restyled+0x730>
71e7:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
71ec:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
71f2:	0f 85 7d 0f 00 00    	jne    8175 <quotearg_buffer_restyled+0x1145>
71f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
71ff:	00
7200:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
7204:	80 fb 7e             	cmp    bl,0x7e
7207:	0f 87 1b 03 00 00    	ja     7528 <quotearg_buffer_restyled+0x4f8>
720d:	48 8d 0d 78 8f 00 00 	lea    rcx,[rip+0x8f78]        # 1018c <__PRETTY_FUNCTION__.5159+0xbc>
7214:	0f b6 d3             	movzx  edx,bl
7217:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
721b:	48 01 c8             	add    rax,rcx
721e:	ff e0                	jmp    rax
7220:	45 31 d2             	xor    r10d,r10d
7223:	49 83 fb 01          	cmp    r11,0x1
7227:	0f 95 c0             	setne  al
722a:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
722e:	75 0c                	jne    723c <quotearg_buffer_restyled+0x20c>
7230:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
7235:	80 78 01 00          	cmp    BYTE PTR [rax+0x1],0x0
7239:	0f 95 c0             	setne  al
723c:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7241:	0f 94 c2             	sete   dl
7244:	84 c0                	test   al,al
7246:	0f 84 4c 02 00 00    	je     7498 <quotearg_buffer_restyled+0x468>
724c:	45 31 e4             	xor    r12d,r12d
724f:	31 c0                	xor    eax,eax
7251:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
7258:	80 7c 24 0d 01       	cmp    BYTE PTR [rsp+0xd],0x1
725d:	0f 85 0f 01 00 00    	jne    7372 <quotearg_buffer_restyled+0x342>
7263:	84 d2                	test   dl,dl
7265:	0f 85 07 01 00 00    	jne    7372 <quotearg_buffer_restyled+0x342>
726b:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
7270:	48 85 f6             	test   rsi,rsi
7273:	74 14                	je     7289 <quotearg_buffer_restyled+0x259>
7275:	89 da                	mov    edx,ebx
7277:	c0 ea 05             	shr    dl,0x5
727a:	0f b6 d2             	movzx  edx,dl
727d:	8b 14 96             	mov    edx,DWORD PTR [rsi+rdx*4]
7280:	0f a3 da             	bt     edx,ebx
7283:	0f 82 4a 01 00 00    	jb     73d3 <quotearg_buffer_restyled+0x3a3>
7289:	45 84 d2             	test   r10b,r10b
728c:	0f 85 41 01 00 00    	jne    73d3 <quotearg_buffer_restyled+0x3a3>
7292:	83 f0 01             	xor    eax,0x1
7295:	48 83 c5 01          	add    rbp,0x1
7299:	44 21 c0             	and    eax,r8d
729c:	84 c0                	test   al,al
729e:	74 20                	je     72c0 <quotearg_buffer_restyled+0x290>
72a0:	4d 39 fd             	cmp    r13,r15
72a3:	76 05                	jbe    72aa <quotearg_buffer_restyled+0x27a>
72a5:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
72aa:	49 8d 47 01          	lea    rax,[r15+0x1]
72ae:	49 39 c5             	cmp    r13,rax
72b1:	76 06                	jbe    72b9 <quotearg_buffer_restyled+0x289>
72b3:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
72b9:	49 83 c7 02          	add    r15,0x2
72bd:	45 31 c0             	xor    r8d,r8d
72c0:	4d 39 ef             	cmp    r15,r13
72c3:	73 04                	jae    72c9 <quotearg_buffer_restyled+0x299>
72c5:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
72c9:	0f b6 7c 24 0e       	movzx  edi,BYTE PTR [rsp+0xe]
72ce:	49 83 c7 01          	add    r15,0x1
72d2:	b8 00 00 00 00       	mov    eax,0x0
72d7:	45 84 e4             	test   r12b,r12b
72da:	0f 44 f8             	cmove  edi,eax
72dd:	40 88 7c 24 0e       	mov    BYTE PTR [rsp+0xe],dil
72e2:	e9 31 fe ff ff       	jmp    7118 <quotearg_buffer_restyled+0xe8>
72e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
72ee:	00 00
72f0:	45 31 d2             	xor    r10d,r10d
72f3:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
72f7:	83 f8 02             	cmp    eax,0x2
72fa:	0f 84 b8 05 00 00    	je     78b8 <quotearg_buffer_restyled+0x888>
7300:	83 f8 05             	cmp    eax,0x5
7303:	0f 84 6f 05 00 00    	je     7878 <quotearg_buffer_restyled+0x848>
7309:	83 f8 02             	cmp    eax,0x2
730c:	bb 3f 00 00 00       	mov    ebx,0x3f
7311:	0f 94 c2             	sete   dl
7314:	45 31 e4             	xor    r12d,r12d
7317:	31 c0                	xor    eax,eax
7319:	e9 3a ff ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
731e:	66 90                	xchg   ax,ax
7320:	45 31 d2             	xor    r10d,r10d
7323:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7328:	0f 84 02 05 00 00    	je     7830 <quotearg_buffer_restyled+0x800>
732e:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
7333:	31 d2                	xor    edx,edx
7335:	31 c0                	xor    eax,eax
7337:	bb 27 00 00 00       	mov    ebx,0x27
733c:	e9 17 ff ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
7341:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
7348:	ba 09 00 00 00       	mov    edx,0x9
734d:	bb 74 00 00 00       	mov    ebx,0x74
7352:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7357:	0f 94 c0             	sete   al
735a:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
735e:	0f 85 4a 01 00 00    	jne    74ae <quotearg_buffer_restyled+0x47e>
7364:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
7369:	75 65                	jne    73d0 <quotearg_buffer_restyled+0x3a0>
736b:	89 d3                	mov    ebx,edx
736d:	45 31 e4             	xor    r12d,r12d
7370:	31 c0                	xor    eax,eax
7372:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
7377:	0f 85 ee fe ff ff    	jne    726b <quotearg_buffer_restyled+0x23b>
737d:	e9 07 ff ff ff       	jmp    7289 <quotearg_buffer_restyled+0x259>
7382:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7388:	ba 08 00 00 00       	mov    edx,0x8
738d:	bb 62 00 00 00       	mov    ebx,0x62
7392:	eb d0                	jmp    7364 <quotearg_buffer_restyled+0x334>
7394:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
7398:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
739d:	0f 84 cd 03 00 00    	je     7770 <quotearg_buffer_restyled+0x740>
73a3:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
73a8:	0f 84 12 02 00 00    	je     75c0 <quotearg_buffer_restyled+0x590>
73ae:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
73b3:	0f 84 07 02 00 00    	je     75c0 <quotearg_buffer_restyled+0x590>
73b9:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
73bf:	0f 85 b6 03 00 00    	jne    777b <quotearg_buffer_restyled+0x74b>
73c5:	bb 5c 00 00 00       	mov    ebx,0x5c
73ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
73d0:	45 31 e4             	xor    r12d,r12d
73d3:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
73d8:	0f 94 c2             	sete   dl
73db:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
73e0:	89 d0                	mov    eax,edx
73e2:	0f 85 50 08 00 00    	jne    7c38 <quotearg_buffer_restyled+0xc08>
73e8:	44 89 c0             	mov    eax,r8d
73eb:	83 f0 01             	xor    eax,0x1
73ee:	20 d0                	and    al,dl
73f0:	74 2f                	je     7421 <quotearg_buffer_restyled+0x3f1>
73f2:	4d 39 fd             	cmp    r13,r15
73f5:	76 05                	jbe    73fc <quotearg_buffer_restyled+0x3cc>
73f7:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
73fc:	49 8d 57 01          	lea    rdx,[r15+0x1]
7400:	49 39 d5             	cmp    r13,rdx
7403:	76 06                	jbe    740b <quotearg_buffer_restyled+0x3db>
7405:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
740b:	49 8d 57 02          	lea    rdx,[r15+0x2]
740f:	49 39 d5             	cmp    r13,rdx
7412:	76 06                	jbe    741a <quotearg_buffer_restyled+0x3ea>
7414:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
741a:	49 83 c7 03          	add    r15,0x3
741e:	41 89 c0             	mov    r8d,eax
7421:	4d 39 fd             	cmp    r13,r15
7424:	76 05                	jbe    742b <quotearg_buffer_restyled+0x3fb>
7426:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
742b:	49 83 c7 01          	add    r15,0x1
742f:	48 83 c5 01          	add    rbp,0x1
7433:	e9 88 fe ff ff       	jmp    72c0 <quotearg_buffer_restyled+0x290>
7438:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
743f:	00
7440:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
7445:	0f 85 c8 01 00 00    	jne    7613 <quotearg_buffer_restyled+0x5e3>
744b:	31 d2                	xor    edx,edx
744d:	f6 44 24 78 01       	test   BYTE PTR [rsp+0x78],0x1
7452:	0f 84 13 ff ff ff    	je     736b <quotearg_buffer_restyled+0x33b>
7458:	48 83 c5 01          	add    rbp,0x1
745c:	e9 b7 fc ff ff       	jmp    7118 <quotearg_buffer_restyled+0xe8>
7461:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
7468:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
746d:	0f 94 c2             	sete   dl
7470:	31 c0                	xor    eax,eax
7472:	e9 e1 fd ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
7477:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
747e:	00 00
7480:	ba 07 00 00 00       	mov    edx,0x7
7485:	bb 61 00 00 00       	mov    ebx,0x61
748a:	e9 d5 fe ff ff       	jmp    7364 <quotearg_buffer_restyled+0x334>
748f:	90                   	nop
7490:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7495:	0f 94 c2             	sete   dl
7498:	48 85 ed             	test   rbp,rbp
749b:	0f 85 ab fd ff ff    	jne    724c <quotearg_buffer_restyled+0x21c>
74a1:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
74a6:	20 d0                	and    al,dl
74a8:	0f 84 aa fd ff ff    	je     7258 <quotearg_buffer_restyled+0x228>
74ae:	4c 89 dd             	mov    rbp,r11
74b1:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
74b8:	00
74b9:	e9 fb 06 00 00       	jmp    7bb9 <quotearg_buffer_restyled+0xb89>
74be:	66 90                	xchg   ax,ax
74c0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
74c5:	0f 94 c2             	sete   dl
74c8:	45 31 e4             	xor    r12d,r12d
74cb:	eb d4                	jmp    74a1 <quotearg_buffer_restyled+0x471>
74cd:	0f 1f 00             	nop    DWORD PTR [rax]
74d0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
74d5:	bb 20 00 00 00       	mov    ebx,0x20
74da:	0f 94 c2             	sete   dl
74dd:	eb c2                	jmp    74a1 <quotearg_buffer_restyled+0x471>
74df:	90                   	nop
74e0:	ba 0d 00 00 00       	mov    edx,0xd
74e5:	bb 72 00 00 00       	mov    ebx,0x72
74ea:	e9 63 fe ff ff       	jmp    7352 <quotearg_buffer_restyled+0x322>
74ef:	90                   	nop
74f0:	ba 0c 00 00 00       	mov    edx,0xc
74f5:	bb 66 00 00 00       	mov    ebx,0x66
74fa:	e9 65 fe ff ff       	jmp    7364 <quotearg_buffer_restyled+0x334>
74ff:	90                   	nop
7500:	ba 0b 00 00 00       	mov    edx,0xb
7505:	bb 76 00 00 00       	mov    ebx,0x76
750a:	e9 55 fe ff ff       	jmp    7364 <quotearg_buffer_restyled+0x334>
750f:	90                   	nop
7510:	ba 0a 00 00 00       	mov    edx,0xa
7515:	bb 6e 00 00 00       	mov    ebx,0x6e
751a:	e9 33 fe ff ff       	jmp    7352 <quotearg_buffer_restyled+0x322>
751f:	90                   	nop
7520:	45 31 d2             	xor    r10d,r10d
7523:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
7528:	48 83 7c 24 58 01    	cmp    QWORD PTR [rsp+0x58],0x1
752e:	0f 85 a4 03 00 00    	jne    78d8 <quotearg_buffer_restyled+0x8a8>
7534:	4c 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],r11
7539:	44 88 44 24 30       	mov    BYTE PTR [rsp+0x30],r8b
753e:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
7543:	e8 88 ad ff ff       	call   22d0 <__ctype_b_loc@plt>
7548:	48 8b 08             	mov    rcx,QWORD PTR [rax]
754b:	0f b6 d3             	movzx  edx,bl
754e:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
7554:	44 0f b6 44 24 30    	movzx  r8d,BYTE PTR [rsp+0x30]
755a:	4c 8b 5c 24 38       	mov    r11,QWORD PTR [rsp+0x38]
755f:	bf 01 00 00 00       	mov    edi,0x1
7564:	0f b7 04 51          	movzx  eax,WORD PTR [rcx+rdx*2]
7568:	66 25 00 40          	and    ax,0x4000
756c:	41 0f 95 c4          	setne  r12b
7570:	0f 94 c0             	sete   al
7573:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
7577:	84 c0                	test   al,al
7579:	0f 85 92 09 00 00    	jne    7f11 <quotearg_buffer_restyled+0xee1>
757f:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7584:	0f 94 c2             	sete   dl
7587:	e9 cc fc ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
758c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
7590:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
7594:	80 fb 7e             	cmp    bl,0x7e
7597:	77 87                	ja     7520 <quotearg_buffer_restyled+0x4f0>
7599:	48 8d 0d e8 8d 00 00 	lea    rcx,[rip+0x8de8]        # 10388 <__PRETTY_FUNCTION__.5159+0x2b8>
75a0:	0f b6 d3             	movzx  edx,bl
75a3:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
75a7:	48 01 c8             	add    rax,rcx
75aa:	ff e0                	jmp    rax
75ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
75b0:	45 31 d2             	xor    r10d,r10d
75b3:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
75b8:	0f 85 f0 fd ff ff    	jne    73ae <quotearg_buffer_restyled+0x37e>
75be:	66 90                	xchg   ax,ax
75c0:	ba 5c 00 00 00       	mov    edx,0x5c
75c5:	bb 5c 00 00 00       	mov    ebx,0x5c
75ca:	e9 95 fd ff ff       	jmp    7364 <quotearg_buffer_restyled+0x334>
75cf:	90                   	nop
75d0:	ba 0c 00 00 00       	mov    edx,0xc
75d5:	45 31 d2             	xor    r10d,r10d
75d8:	bb 66 00 00 00       	mov    ebx,0x66
75dd:	e9 82 fd ff ff       	jmp    7364 <quotearg_buffer_restyled+0x334>
75e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
75e8:	ba 0a 00 00 00       	mov    edx,0xa
75ed:	45 31 d2             	xor    r10d,r10d
75f0:	bb 6e 00 00 00       	mov    ebx,0x6e
75f5:	e9 58 fd ff ff       	jmp    7352 <quotearg_buffer_restyled+0x322>
75fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7600:	bb 61 00 00 00       	mov    ebx,0x61
7605:	e9 c6 fd ff ff       	jmp    73d0 <quotearg_buffer_restyled+0x3a0>
760a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7610:	45 31 d2             	xor    r10d,r10d
7613:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7618:	0f 94 c2             	sete   dl
761b:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
7620:	0f 85 94 0b 00 00    	jne    81ba <quotearg_buffer_restyled+0x118a>
7626:	44 89 c0             	mov    eax,r8d
7629:	4c 89 f9             	mov    rcx,r15
762c:	83 f0 01             	xor    eax,0x1
762f:	20 d0                	and    al,dl
7631:	74 2d                	je     7660 <quotearg_buffer_restyled+0x630>
7633:	4d 39 fd             	cmp    r13,r15
7636:	76 05                	jbe    763d <quotearg_buffer_restyled+0x60d>
7638:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
763d:	49 8d 4f 01          	lea    rcx,[r15+0x1]
7641:	49 39 cd             	cmp    r13,rcx
7644:	76 06                	jbe    764c <quotearg_buffer_restyled+0x61c>
7646:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
764c:	49 8d 4f 02          	lea    rcx,[r15+0x2]
7650:	49 39 cd             	cmp    r13,rcx
7653:	0f 87 30 06 00 00    	ja     7c89 <quotearg_buffer_restyled+0xc59>
7659:	49 8d 4f 03          	lea    rcx,[r15+0x3]
765d:	41 89 c0             	mov    r8d,eax
7660:	49 39 cd             	cmp    r13,rcx
7663:	76 05                	jbe    766a <quotearg_buffer_restyled+0x63a>
7665:	41 c6 04 0e 5c       	mov    BYTE PTR [r14+rcx*1],0x5c
766a:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
766f:	4c 8d 79 01          	lea    r15,[rcx+0x1]
7673:	0f 84 00 06 00 00    	je     7c79 <quotearg_buffer_restyled+0xc49>
7679:	48 8d 45 01          	lea    rax,[rbp+0x1]
767d:	4c 39 d8             	cmp    rax,r11
7680:	73 19                	jae    769b <quotearg_buffer_restyled+0x66b>
7682:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
7687:	0f b6 44 28 01       	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
768c:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
7690:	83 e8 30             	sub    eax,0x30
7693:	3c 09                	cmp    al,0x9
7695:	0f 86 2e 08 00 00    	jbe    7ec9 <quotearg_buffer_restyled+0xe99>
769b:	44 89 e0             	mov    eax,r12d
769e:	bb 30 00 00 00       	mov    ebx,0x30
76a3:	45 31 e4             	xor    r12d,r12d
76a6:	e9 ad fb ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
76ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
76b0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
76b5:	45 89 d4             	mov    r12d,r10d
76b8:	0f 94 c2             	sete   dl
76bb:	45 31 d2             	xor    r10d,r10d
76be:	31 c0                	xor    eax,eax
76c0:	e9 93 fb ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
76c5:	0f 1f 00             	nop    DWORD PTR [rax]
76c8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
76cd:	0f 94 c2             	sete   dl
76d0:	45 31 d2             	xor    r10d,r10d
76d3:	e9 c0 fd ff ff       	jmp    7498 <quotearg_buffer_restyled+0x468>
76d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
76df:	00
76e0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
76e5:	0f 94 c2             	sete   dl
76e8:	45 31 d2             	xor    r10d,r10d
76eb:	45 31 e4             	xor    r12d,r12d
76ee:	e9 ae fd ff ff       	jmp    74a1 <quotearg_buffer_restyled+0x471>
76f3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
76f8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
76fd:	45 89 d4             	mov    r12d,r10d
7700:	bb 20 00 00 00       	mov    ebx,0x20
7705:	0f 94 c2             	sete   dl
7708:	45 31 d2             	xor    r10d,r10d
770b:	e9 91 fd ff ff       	jmp    74a1 <quotearg_buffer_restyled+0x471>
7710:	ba 0d 00 00 00       	mov    edx,0xd
7715:	45 31 d2             	xor    r10d,r10d
7718:	bb 72 00 00 00       	mov    ebx,0x72
771d:	e9 30 fc ff ff       	jmp    7352 <quotearg_buffer_restyled+0x322>
7722:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7728:	bb 76 00 00 00       	mov    ebx,0x76
772d:	e9 9e fc ff ff       	jmp    73d0 <quotearg_buffer_restyled+0x3a0>
7732:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7738:	ba 09 00 00 00       	mov    edx,0x9
773d:	45 31 d2             	xor    r10d,r10d
7740:	bb 74 00 00 00       	mov    ebx,0x74
7745:	e9 08 fc ff ff       	jmp    7352 <quotearg_buffer_restyled+0x322>
774a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7750:	bb 62 00 00 00       	mov    ebx,0x62
7755:	e9 76 fc ff ff       	jmp    73d0 <quotearg_buffer_restyled+0x3a0>
775a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7760:	45 31 d2             	xor    r10d,r10d
7763:	e9 98 fa ff ff       	jmp    7200 <quotearg_buffer_restyled+0x1d0>
7768:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
776f:	00
7770:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
7775:	0f 85 65 09 00 00    	jne    80e0 <quotearg_buffer_restyled+0x10b0>
777b:	48 83 c5 01          	add    rbp,0x1
777f:	44 89 c0             	mov    eax,r8d
7782:	45 31 e4             	xor    r12d,r12d
7785:	bb 5c 00 00 00       	mov    ebx,0x5c
778a:	e9 0d fb ff ff       	jmp    729c <quotearg_buffer_restyled+0x26c>
778f:	90                   	nop
7790:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7795:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
779a:	45 89 c4             	mov    r12d,r8d
779d:	4c 89 dd             	mov    rbp,r11
77a0:	0f 94 c2             	sete   dl
77a3:	89 d8                	mov    eax,ebx
77a5:	4d 85 ff             	test   r15,r15
77a8:	0f 94 c1             	sete   cl
77ab:	21 d0                	and    eax,edx
77ad:	20 c8                	and    al,cl
77af:	0f 85 61 0a 00 00    	jne    8216 <quotearg_buffer_restyled+0x11e6>
77b5:	89 d8                	mov    eax,ebx
77b7:	83 f0 01             	xor    eax,0x1
77ba:	20 c2                	and    dl,al
77bc:	0f 84 6a 09 00 00    	je     812c <quotearg_buffer_restyled+0x10fc>
77c2:	80 7c 24 7c 00       	cmp    BYTE PTR [rsp+0x7c],0x0
77c7:	0f 84 5d 09 00 00    	je     812a <quotearg_buffer_restyled+0x10fa>
77cd:	80 7c 24 0e 00       	cmp    BYTE PTR [rsp+0xe],0x0
77d2:	0f 85 f5 09 00 00    	jne    81cd <quotearg_buffer_restyled+0x119d>
77d8:	4d 85 ed             	test   r13,r13
77db:	0f 94 c0             	sete   al
77de:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
77e4:	0f 95 c2             	setne  dl
77e7:	20 d0                	and    al,dl
77e9:	0f 84 1d 0a 00 00    	je     820c <quotearg_buffer_restyled+0x11dc>
77ef:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
77f4:	48 8d 1d bb 88 00 00 	lea    rbx,[rip+0x88bb]        # 100b6 <primes_diff+0x356>
77fb:	41 c6 06 27          	mov    BYTE PTR [r14],0x27
77ff:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
7806:	00
7807:	41 bf 01 00 00 00    	mov    r15d,0x1
780d:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
7814:	00 00
7816:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
781b:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
7820:	88 44 24 7c          	mov    BYTE PTR [rsp+0x7c],al
7824:	e9 da f8 ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
7829:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
7830:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
7835:	0f 85 a5 08 00 00    	jne    80e0 <quotearg_buffer_restyled+0x10b0>
783b:	4d 85 ed             	test   r13,r13
783e:	0f 84 fc 03 00 00    	je     7c40 <quotearg_buffer_restyled+0xc10>
7844:	31 d2                	xor    edx,edx
7846:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
784c:	0f 85 ee 03 00 00    	jne    7c40 <quotearg_buffer_restyled+0xc10>
7852:	4c 89 6c 24 50       	mov    QWORD PTR [rsp+0x50],r13
7857:	49 83 c7 03          	add    r15,0x3
785b:	31 c0                	xor    eax,eax
785d:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
7862:	45 31 c0             	xor    r8d,r8d
7865:	49 89 d5             	mov    r13,rdx
7868:	bb 27 00 00 00       	mov    ebx,0x27
786d:	e9 17 fa ff ff       	jmp    7289 <quotearg_buffer_restyled+0x259>
7872:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7878:	f6 44 24 78 04       	test   BYTE PTR [rsp+0x78],0x4
787d:	74 21                	je     78a0 <quotearg_buffer_restyled+0x870>
787f:	48 8d 4d 02          	lea    rcx,[rbp+0x2]
7883:	4c 39 d9             	cmp    rcx,r11
7886:	73 18                	jae    78a0 <quotearg_buffer_restyled+0x870>
7888:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
788d:	80 7c 28 01 3f       	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
7892:	0f 84 8a 07 00 00    	je     8022 <quotearg_buffer_restyled+0xff2>
7898:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
789f:	00
78a0:	31 d2                	xor    edx,edx
78a2:	45 31 e4             	xor    r12d,r12d
78a5:	31 c0                	xor    eax,eax
78a7:	bb 3f 00 00 00       	mov    ebx,0x3f
78ac:	e9 a7 f9 ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
78b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
78b8:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
78bd:	0f 85 1d 08 00 00    	jne    80e0 <quotearg_buffer_restyled+0x10b0>
78c3:	45 31 e4             	xor    r12d,r12d
78c6:	31 c0                	xor    eax,eax
78c8:	bb 3f 00 00 00       	mov    ebx,0x3f
78cd:	e9 b7 f9 ff ff       	jmp    7289 <quotearg_buffer_restyled+0x259>
78d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
78d8:	48 8d 84 24 a0 00 00 	lea    rax,[rsp+0xa0]
78df:	00
78e0:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
78e4:	48 c7 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],0x0
78eb:	00 00 00 00 00
78f0:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
78f5:	75 2d                	jne    7924 <quotearg_buffer_restyled+0x8f4>
78f7:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
78fc:	44 88 44 24 40       	mov    BYTE PTR [rsp+0x40],r8b
7901:	44 88 54 24 38       	mov    BYTE PTR [rsp+0x38],r10b
7906:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
790b:	e8 f0 a5 ff ff       	call   1f00 <strlen@plt>
7910:	44 0f b6 44 24 40    	movzx  r8d,BYTE PTR [rsp+0x40]
7916:	44 0f b6 54 24 38    	movzx  r10d,BYTE PTR [rsp+0x38]
791c:	49 89 c3             	mov    r11,rax
791f:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
7924:	48 8d 84 24 9c 00 00 	lea    rax,[rsp+0x9c]
792b:	00
792c:	31 c9                	xor    ecx,ecx
792e:	88 5c 24 7e          	mov    BYTE PTR [rsp+0x7e],bl
7932:	44 88 44 24 7d       	mov    BYTE PTR [rsp+0x7d],r8b
7937:	48 89 cb             	mov    rbx,rcx
793a:	4c 89 8c 24 88 00 00 	mov    QWORD PTR [rsp+0x88],r9
7941:	00
7942:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
7947:	44 88 54 24 7f       	mov    BYTE PTR [rsp+0x7f],r10b
794c:	4c 89 bc 24 80 00 00 	mov    QWORD PTR [rsp+0x80],r15
7953:	00
7954:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
7959:	4c 89 6c 24 70       	mov    QWORD PTR [rsp+0x70],r13
795e:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
7963:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
7968:	4c 8d 74 1d 00       	lea    r14,[rbp+rbx*1+0x0]
796d:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
7972:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
7977:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
797c:	4e 8d 2c 30          	lea    r13,[rax+r14*1]
7980:	4c 29 f2             	sub    rdx,r14
7983:	4c 89 ee             	mov    rsi,r13
7986:	e8 65 26 00 00       	call   9ff0 <rpl_mbrtowc>
798b:	48 85 c0             	test   rax,rax
798e:	49 89 c7             	mov    r15,rax
7991:	74 4e                	je     79e1 <quotearg_buffer_restyled+0x9b1>
7993:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
7997:	0f 84 18 06 00 00    	je     7fb5 <quotearg_buffer_restyled+0xf85>
799d:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
79a1:	0f 84 9a 05 00 00    	je     7f41 <quotearg_buffer_restyled+0xf11>
79a7:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
79ac:	0f 94 c0             	sete   al
79af:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
79b3:	0f 85 97 01 00 00    	jne    7b50 <quotearg_buffer_restyled+0xb20>
79b9:	8b bc 24 9c 00 00 00 	mov    edi,DWORD PTR [rsp+0x9c]
79c0:	e8 fb a8 ff ff       	call   22c0 <iswprint@plt>
79c5:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
79ca:	85 c0                	test   eax,eax
79cc:	b8 00 00 00 00       	mov    eax,0x0
79d1:	44 0f 44 e0          	cmove  r12d,eax
79d5:	4c 01 fb             	add    rbx,r15
79d8:	e8 d3 a8 ff ff       	call   22b0 <mbsinit@plt>
79dd:	85 c0                	test   eax,eax
79df:	74 82                	je     7963 <quotearg_buffer_restyled+0x933>
79e1:	44 89 e2             	mov    edx,r12d
79e4:	48 89 df             	mov    rdi,rbx
79e7:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
79ed:	83 f2 01             	xor    edx,0x1
79f0:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
79f5:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
79fb:	22 54 24 0d          	and    dl,BYTE PTR [rsp+0xd]
79ff:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
7a06:	00
7a07:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
7a0c:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
7a11:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
7a16:	48 83 ff 01          	cmp    rdi,0x1
7a1a:	0f 86 fb 05 00 00    	jbe    801b <quotearg_buffer_restyled+0xfeb>
7a20:	48 89 f9             	mov    rcx,rdi
7a23:	31 f6                	xor    esi,esi
7a25:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
7a2b:	48 01 e9             	add    rcx,rbp
7a2e:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
7a33:	e9 b6 00 00 00       	jmp    7aee <quotearg_buffer_restyled+0xabe>
7a38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
7a3f:	00
7a40:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
7a45:	0f 94 c0             	sete   al
7a48:	45 84 c9             	test   r9b,r9b
7a4b:	0f 85 af 04 00 00    	jne    7f00 <quotearg_buffer_restyled+0xed0>
7a51:	44 89 c6             	mov    esi,r8d
7a54:	83 f6 01             	xor    esi,0x1
7a57:	40 20 f0             	and    al,sil
7a5a:	74 2f                	je     7a8b <quotearg_buffer_restyled+0xa5b>
7a5c:	4d 39 fd             	cmp    r13,r15
7a5f:	76 05                	jbe    7a66 <quotearg_buffer_restyled+0xa36>
7a61:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
7a66:	49 8d 77 01          	lea    rsi,[r15+0x1]
7a6a:	49 39 f5             	cmp    r13,rsi
7a6d:	76 06                	jbe    7a75 <quotearg_buffer_restyled+0xa45>
7a6f:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
7a75:	49 8d 77 02          	lea    rsi,[r15+0x2]
7a79:	49 39 f5             	cmp    r13,rsi
7a7c:	76 06                	jbe    7a84 <quotearg_buffer_restyled+0xa54>
7a7e:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
7a84:	49 83 c7 03          	add    r15,0x3
7a88:	41 89 c0             	mov    r8d,eax
7a8b:	4d 39 fd             	cmp    r13,r15
7a8e:	76 05                	jbe    7a95 <quotearg_buffer_restyled+0xa65>
7a90:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
7a95:	49 8d 47 01          	lea    rax,[r15+0x1]
7a99:	49 39 c5             	cmp    r13,rax
7a9c:	76 0d                	jbe    7aab <quotearg_buffer_restyled+0xa7b>
7a9e:	89 d8                	mov    eax,ebx
7aa0:	c0 e8 06             	shr    al,0x6
7aa3:	83 c0 30             	add    eax,0x30
7aa6:	43 88 44 3e 01       	mov    BYTE PTR [r14+r15*1+0x1],al
7aab:	49 8d 47 02          	lea    rax,[r15+0x2]
7aaf:	49 39 c5             	cmp    r13,rax
7ab2:	76 10                	jbe    7ac4 <quotearg_buffer_restyled+0xa94>
7ab4:	89 d8                	mov    eax,ebx
7ab6:	c0 e8 03             	shr    al,0x3
7ab9:	83 e0 07             	and    eax,0x7
7abc:	83 c0 30             	add    eax,0x30
7abf:	43 88 44 3e 02       	mov    BYTE PTR [r14+r15*1+0x2],al
7ac4:	83 e3 07             	and    ebx,0x7
7ac7:	48 83 c5 01          	add    rbp,0x1
7acb:	49 83 c7 03          	add    r15,0x3
7acf:	83 c3 30             	add    ebx,0x30
7ad2:	48 39 cd             	cmp    rbp,rcx
7ad5:	0f 83 e5 f7 ff ff    	jae    72c0 <quotearg_buffer_restyled+0x290>
7adb:	89 d6                	mov    esi,edx
7add:	4d 39 fd             	cmp    r13,r15
7ae0:	76 04                	jbe    7ae6 <quotearg_buffer_restyled+0xab6>
7ae2:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
7ae6:	0f b6 1c 2f          	movzx  ebx,BYTE PTR [rdi+rbp*1]
7aea:	49 83 c7 01          	add    r15,0x1
7aee:	84 d2                	test   dl,dl
7af0:	0f 85 4a ff ff ff    	jne    7a40 <quotearg_buffer_restyled+0xa10>
7af6:	89 f0                	mov    eax,esi
7af8:	83 f0 01             	xor    eax,0x1
7afb:	44 21 c0             	and    eax,r8d
7afe:	45 84 d2             	test   r10b,r10b
7b01:	74 0e                	je     7b11 <quotearg_buffer_restyled+0xae1>
7b03:	4d 39 fd             	cmp    r13,r15
7b06:	76 05                	jbe    7b0d <quotearg_buffer_restyled+0xadd>
7b08:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
7b0d:	49 83 c7 01          	add    r15,0x1
7b11:	48 83 c5 01          	add    rbp,0x1
7b15:	48 39 cd             	cmp    rbp,rcx
7b18:	0f 83 7e f7 ff ff    	jae    729c <quotearg_buffer_restyled+0x26c>
7b1e:	84 c0                	test   al,al
7b20:	0f 84 f8 03 00 00    	je     7f1e <quotearg_buffer_restyled+0xeee>
7b26:	4d 39 fd             	cmp    r13,r15
7b29:	76 05                	jbe    7b30 <quotearg_buffer_restyled+0xb00>
7b2b:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
7b30:	49 8d 47 01          	lea    rax,[r15+0x1]
7b34:	49 39 c5             	cmp    r13,rax
7b37:	76 06                	jbe    7b3f <quotearg_buffer_restyled+0xb0f>
7b39:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
7b3f:	49 83 c7 02          	add    r15,0x2
7b43:	45 31 d2             	xor    r10d,r10d
7b46:	45 31 c0             	xor    r8d,r8d
7b49:	eb 92                	jmp    7add <quotearg_buffer_restyled+0xaad>
7b4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
7b50:	49 83 ff 01          	cmp    r15,0x1
7b54:	0f 84 5f fe ff ff    	je     79b9 <quotearg_buffer_restyled+0x989>
7b5a:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
7b5f:	4a 8d 0c 3f          	lea    rcx,[rdi+r15*1]
7b63:	4a 8d 54 37 01       	lea    rdx,[rdi+r14*1+0x1]
7b68:	4e 8d 04 31          	lea    r8,[rcx+r14*1]
7b6c:	eb 0f                	jmp    7b7d <quotearg_buffer_restyled+0xb4d>
7b6e:	66 90                	xchg   ax,ax
7b70:	48 83 c2 01          	add    rdx,0x1
7b74:	49 39 d0             	cmp    r8,rdx
7b77:	0f 84 3c fe ff ff    	je     79b9 <quotearg_buffer_restyled+0x989>
7b7d:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
7b80:	83 e9 5b             	sub    ecx,0x5b
7b83:	80 f9 21             	cmp    cl,0x21
7b86:	77 e8                	ja     7b70 <quotearg_buffer_restyled+0xb40>
7b88:	be 01 00 00 00       	mov    esi,0x1
7b8d:	48 d3 e6             	shl    rsi,cl
7b90:	48 89 f1             	mov    rcx,rsi
7b93:	48 be 2b 00 00 00 02 	movabs rsi,0x20000002b
7b9a:	00 00 00
7b9d:	48 85 f1             	test   rcx,rsi
7ba0:	74 ce                	je     7b70 <quotearg_buffer_restyled+0xb40>
7ba2:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
7ba7:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
7bac:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
7bb1:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
7bb8:	00
7bb9:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
7bbe:	74 10                	je     7bd0 <quotearg_buffer_restyled+0xba0>
7bc0:	84 c0                	test   al,al
7bc2:	b8 04 00 00 00       	mov    eax,0x4
7bc7:	0f 44 44 24 08       	cmove  eax,DWORD PTR [rsp+0x8]
7bcc:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
7bd0:	48 83 ec 08          	sub    rsp,0x8
7bd4:	48 89 e9             	mov    rcx,rbp
7bd7:	4c 89 ee             	mov    rsi,r13
7bda:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
7bde:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
7be2:	4c 89 f7             	mov    rdi,r14
7be5:	6a 00                	push   0x0
7be7:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
7bee:	00
7bef:	44 8b 44 24 28       	mov    r8d,DWORD PTR [rsp+0x28]
7bf4:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
7bf9:	41 83 e1 fd          	and    r9d,0xfffffffd
7bfd:	e8 2e f4 ff ff       	call   7030 <quotearg_buffer_restyled>
7c02:	48 83 c4 20          	add    rsp,0x20
7c06:	49 89 c7             	mov    r15,rax
7c09:	48 8b 9c 24 a8 00 00 	mov    rbx,QWORD PTR [rsp+0xa8]
7c10:	00
7c11:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
7c18:	00 00
7c1a:	4c 89 f8             	mov    rax,r15
7c1d:	0f 85 00 06 00 00    	jne    8223 <quotearg_buffer_restyled+0x11f3>
7c23:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
7c2a:	5b                   	pop    rbx
7c2b:	5d                   	pop    rbp
7c2c:	41 5c                	pop    r12
7c2e:	41 5d                	pop    r13
7c30:	41 5e                	pop    r14
7c32:	41 5f                	pop    r15
7c34:	c3                   	ret
7c35:	0f 1f 00             	nop    DWORD PTR [rax]
7c38:	4c 89 dd             	mov    rbp,r11
7c3b:	e9 79 ff ff ff       	jmp    7bb9 <quotearg_buffer_restyled+0xb89>
7c40:	4d 39 fd             	cmp    r13,r15
7c43:	76 05                	jbe    7c4a <quotearg_buffer_restyled+0xc1a>
7c45:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
7c4a:	49 8d 47 01          	lea    rax,[r15+0x1]
7c4e:	49 39 c5             	cmp    r13,rax
7c51:	76 06                	jbe    7c59 <quotearg_buffer_restyled+0xc29>
7c53:	43 c6 44 3e 01 5c    	mov    BYTE PTR [r14+r15*1+0x1],0x5c
7c59:	49 8d 47 02          	lea    rax,[r15+0x2]
7c5d:	49 39 c5             	cmp    r13,rax
7c60:	0f 86 ec 05 00 00    	jbe    8252 <quotearg_buffer_restyled+0x1222>
7c66:	4c 89 ea             	mov    rdx,r13
7c69:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
7c6f:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
7c74:	e9 d9 fb ff ff       	jmp    7852 <quotearg_buffer_restyled+0x822>
7c79:	44 89 e0             	mov    eax,r12d
7c7c:	bb 30 00 00 00       	mov    ebx,0x30
7c81:	45 31 e4             	xor    r12d,r12d
7c84:	e9 00 f6 ff ff       	jmp    7289 <quotearg_buffer_restyled+0x259>
7c89:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
7c8f:	e9 c5 f9 ff ff       	jmp    7659 <quotearg_buffer_restyled+0x629>
7c94:	85 db                	test   ebx,ebx
7c96:	0f 85 27 f4 ff ff    	jne    70c3 <quotearg_buffer_restyled+0x93>
7c9c:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
7ca1:	4d 85 ed             	test   r13,r13
7ca4:	0f 85 90 05 00 00    	jne    823a <quotearg_buffer_restyled+0x120a>
7caa:	48 8d 05 05 84 00 00 	lea    rax,[rip+0x8405]        # 100b6 <primes_diff+0x356>
7cb1:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
7cb8:	00 00
7cba:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
7cbf:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
7cc4:	45 31 e4             	xor    r12d,r12d
7cc7:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
7ccc:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
7cd3:	00 00
7cd5:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
7cda:	41 bf 01 00 00 00    	mov    r15d,0x1
7ce0:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
7ce7:	00
7ce8:	e9 16 f4 ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
7ced:	0f 1f 00             	nop    DWORD PTR [rax]
7cf0:	85 db                	test   ebx,ebx
7cf2:	0f 85 f5 03 00 00    	jne    80ed <quotearg_buffer_restyled+0x10bd>
7cf8:	4d 85 ed             	test   r13,r13
7cfb:	0f 84 25 02 00 00    	je     7f26 <quotearg_buffer_restyled+0xef6>
7d01:	41 c6 06 22          	mov    BYTE PTR [r14],0x22
7d05:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
7d0a:	45 31 e4             	xor    r12d,r12d
7d0d:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
7d12:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
7d19:	00 00
7d1b:	48 8d 05 d0 83 00 00 	lea    rax,[rip+0x83d0]        # 100f2 <__PRETTY_FUNCTION__.5159+0x22>
7d22:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
7d27:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
7d2c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
7d33:	00 00
7d35:	41 bf 01 00 00 00    	mov    r15d,0x1
7d3b:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
7d40:	e9 be f3 ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
7d45:	48 8d 05 a6 83 00 00 	lea    rax,[rip+0x83a6]        # 100f2 <__PRETTY_FUNCTION__.5159+0x22>
7d4c:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
7d51:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
7d56:	45 31 e4             	xor    r12d,r12d
7d59:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
7d60:	00 00
7d62:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
7d67:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
7d6c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
7d73:	00 00
7d75:	45 31 ff             	xor    r15d,r15d
7d78:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
7d7d:	c7 44 24 08 05 00 00 	mov    DWORD PTR [rsp+0x8],0x5
7d84:	00
7d85:	e9 79 f3 ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
7d8a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
7d8f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
7d94:	45 31 e4             	xor    r12d,r12d
7d97:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
7d9e:	00 00
7da0:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
7da5:	45 31 ff             	xor    r15d,r15d
7da8:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
7dad:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
7db4:	00 00
7db6:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
7dbd:	00 00
7dbf:	e9 3f f3 ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
7dc4:	83 7c 24 08 0a       	cmp    DWORD PTR [rsp+0x8],0xa
7dc9:	74 56                	je     7e21 <quotearg_buffer_restyled+0xdf1>
7dcb:	48 8d 35 22 83 00 00 	lea    rsi,[rip+0x8322]        # 100f4 <__PRETTY_FUNCTION__.5159+0x24>
7dd2:	31 ff                	xor    edi,edi
7dd4:	ba 05 00 00 00       	mov    edx,0x5
7dd9:	e8 02 a1 ff ff       	call   1ee0 <dcgettext@plt>
7dde:	48 89 c1             	mov    rcx,rax
7de1:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
7de6:	48 8d 05 07 83 00 00 	lea    rax,[rip+0x8307]        # 100f4 <__PRETTY_FUNCTION__.5159+0x24>
7ded:	48 39 c1             	cmp    rcx,rax
7df0:	0f 84 98 03 00 00    	je     818e <quotearg_buffer_restyled+0x115e>
7df6:	48 8d 35 b9 82 00 00 	lea    rsi,[rip+0x82b9]        # 100b6 <primes_diff+0x356>
7dfd:	31 ff                	xor    edi,edi
7dff:	ba 05 00 00 00       	mov    edx,0x5
7e04:	e8 d7 a0 ff ff       	call   1ee0 <dcgettext@plt>
7e09:	48 89 c1             	mov    rcx,rax
7e0c:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
7e11:	48 8d 05 9e 82 00 00 	lea    rax,[rip+0x829e]        # 100b6 <primes_diff+0x356>
7e18:	48 39 c1             	cmp    rcx,rax
7e1b:	0f 84 83 03 00 00    	je     81a4 <quotearg_buffer_restyled+0x1174>
7e21:	45 31 ff             	xor    r15d,r15d
7e24:	85 db                	test   ebx,ebx
7e26:	0f 84 c1 01 00 00    	je     7fed <quotearg_buffer_restyled+0xfbd>
7e2c:	85 db                	test   ebx,ebx
7e2e:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
7e33:	0f 95 44 24 0f       	setne  BYTE PTR [rsp+0xf]
7e38:	45 31 e4             	xor    r12d,r12d
7e3b:	48 89 df             	mov    rdi,rbx
7e3e:	e8 bd a0 ff ff       	call   1f00 <strlen@plt>
7e43:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
7e48:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
7e4d:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
7e52:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
7e57:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
7e5e:	00 00
7e60:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
7e65:	e9 99 f2 ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
7e6a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
7e6f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
7e74:	45 31 e4             	xor    r12d,r12d
7e77:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
7e7e:	00 00
7e80:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
7e85:	45 31 ff             	xor    r15d,r15d
7e88:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
7e8d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
7e94:	00 00
7e96:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
7e9d:	00 00
7e9f:	e9 5f f2 ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
7ea4:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
7ea9:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
7eae:	45 31 e4             	xor    r12d,r12d
7eb1:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
7eb8:	00 00
7eba:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
7ebf:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
7ec4:	e9 1a f2 ff ff       	jmp    70e3 <quotearg_buffer_restyled+0xb3>
7ec9:	4d 39 fd             	cmp    r13,r15
7ecc:	76 05                	jbe    7ed3 <quotearg_buffer_restyled+0xea3>
7ece:	43 c6 04 3e 30       	mov    BYTE PTR [r14+r15*1],0x30
7ed3:	48 8d 41 02          	lea    rax,[rcx+0x2]
7ed7:	49 39 c5             	cmp    r13,rax
7eda:	76 06                	jbe    7ee2 <quotearg_buffer_restyled+0xeb2>
7edc:	41 c6 44 0e 02 30    	mov    BYTE PTR [r14+rcx*1+0x2],0x30
7ee2:	44 89 e0             	mov    eax,r12d
7ee5:	4c 8d 79 03          	lea    r15,[rcx+0x3]
7ee9:	45 31 e4             	xor    r12d,r12d
7eec:	bb 30 00 00 00       	mov    ebx,0x30
7ef1:	e9 62 f3 ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
7ef6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
7efd:	00 00 00
7f00:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
7f05:	4c 89 dd             	mov    rbp,r11
7f08:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
7f0c:	e9 a8 fc ff ff       	jmp    7bb9 <quotearg_buffer_restyled+0xb89>
7f11:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
7f16:	45 31 e4             	xor    r12d,r12d
7f19:	e9 02 fb ff ff       	jmp    7a20 <quotearg_buffer_restyled+0x9f0>
7f1e:	45 31 d2             	xor    r10d,r10d
7f21:	e9 b7 fb ff ff       	jmp    7add <quotearg_buffer_restyled+0xaad>
7f26:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
7f2d:	00 00
7f2f:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
7f34:	45 31 e4             	xor    r12d,r12d
7f37:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
7f3c:	e9 da fd ff ff       	jmp    7d1b <quotearg_buffer_restyled+0xceb>
7f41:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
7f46:	4c 89 f6             	mov    rsi,r14
7f49:	4c 89 e9             	mov    rcx,r13
7f4c:	48 89 d8             	mov    rax,rbx
7f4f:	48 89 df             	mov    rdi,rbx
7f52:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
7f58:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
7f5d:	4c 8b 8c 24 88 00 00 	mov    r9,QWORD PTR [rsp+0x88]
7f64:	00
7f65:	4c 39 de             	cmp    rsi,r11
7f68:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
7f6e:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
7f75:	00
7f76:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
7f7b:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
7f80:	73 26                	jae    7fa8 <quotearg_buffer_restyled+0xf78>
7f82:	80 39 00             	cmp    BYTE PTR [rcx],0x0
7f85:	75 10                	jne    7f97 <quotearg_buffer_restyled+0xf67>
7f87:	eb 1f                	jmp    7fa8 <quotearg_buffer_restyled+0xf78>
7f89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
7f90:	41 80 3c 01 00       	cmp    BYTE PTR [r9+rax*1],0x0
7f95:	74 0e                	je     7fa5 <quotearg_buffer_restyled+0xf75>
7f97:	48 83 c0 01          	add    rax,0x1
7f9b:	48 8d 54 05 00       	lea    rdx,[rbp+rax*1+0x0]
7fa0:	49 39 d3             	cmp    r11,rdx
7fa3:	77 eb                	ja     7f90 <quotearg_buffer_restyled+0xf60>
7fa5:	48 89 c7             	mov    rdi,rax
7fa8:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
7fad:	45 31 e4             	xor    r12d,r12d
7fb0:	e9 61 fa ff ff       	jmp    7a16 <quotearg_buffer_restyled+0x9e6>
7fb5:	48 89 df             	mov    rdi,rbx
7fb8:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
7fbe:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
7fc3:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
7fc9:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
7fd0:	00
7fd1:	45 31 e4             	xor    r12d,r12d
7fd4:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
7fd9:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
7fde:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
7fe3:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
7fe8:	e9 29 fa ff ff       	jmp    7a16 <quotearg_buffer_restyled+0x9e6>
7fed:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
7ff2:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
7ff5:	84 c0                	test   al,al
7ff7:	0f 84 2f fe ff ff    	je     7e2c <quotearg_buffer_restyled+0xdfc>
7ffd:	0f 1f 00             	nop    DWORD PTR [rax]
8000:	4d 39 fd             	cmp    r13,r15
8003:	76 04                	jbe    8009 <quotearg_buffer_restyled+0xfd9>
8005:	43 88 04 3e          	mov    BYTE PTR [r14+r15*1],al
8009:	49 83 c7 01          	add    r15,0x1
800d:	42 0f b6 04 3a       	movzx  eax,BYTE PTR [rdx+r15*1]
8012:	84 c0                	test   al,al
8014:	75 ea                	jne    8000 <quotearg_buffer_restyled+0xfd0>
8016:	e9 11 fe ff ff       	jmp    7e2c <quotearg_buffer_restyled+0xdfc>
801b:	89 d0                	mov    eax,edx
801d:	e9 55 f5 ff ff       	jmp    7577 <quotearg_buffer_restyled+0x547>
8022:	0f b6 1c 08          	movzx  ebx,BYTE PTR [rax+rcx*1]
8026:	80 fb 3e             	cmp    bl,0x3e
8029:	0f 87 71 f8 ff ff    	ja     78a0 <quotearg_buffer_restyled+0x870>
802f:	48 b8 00 00 00 00 82 	movabs rax,0x7000a38200000000
8036:	a3 00 70
8039:	48 0f a3 d8          	bt     rax,rbx
803d:	0f 83 5d f8 ff ff    	jae    78a0 <quotearg_buffer_restyled+0x870>
8043:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
8048:	0f 85 e4 01 00 00    	jne    8232 <quotearg_buffer_restyled+0x1202>
804e:	4d 39 fd             	cmp    r13,r15
8051:	76 05                	jbe    8058 <quotearg_buffer_restyled+0x1028>
8053:	43 c6 04 3e 3f       	mov    BYTE PTR [r14+r15*1],0x3f
8058:	49 8d 47 01          	lea    rax,[r15+0x1]
805c:	49 39 c5             	cmp    r13,rax
805f:	76 06                	jbe    8067 <quotearg_buffer_restyled+0x1037>
8061:	43 c6 44 3e 01 22    	mov    BYTE PTR [r14+r15*1+0x1],0x22
8067:	49 8d 47 02          	lea    rax,[r15+0x2]
806b:	49 39 c5             	cmp    r13,rax
806e:	76 06                	jbe    8076 <quotearg_buffer_restyled+0x1046>
8070:	43 c6 44 3e 02 22    	mov    BYTE PTR [r14+r15*1+0x2],0x22
8076:	49 8d 47 03          	lea    rax,[r15+0x3]
807a:	49 39 c5             	cmp    r13,rax
807d:	76 06                	jbe    8085 <quotearg_buffer_restyled+0x1055>
807f:	43 c6 44 3e 03 3f    	mov    BYTE PTR [r14+r15*1+0x3],0x3f
8085:	49 83 c7 04          	add    r15,0x4
8089:	31 d2                	xor    edx,edx
808b:	45 31 e4             	xor    r12d,r12d
808e:	31 c0                	xor    eax,eax
8090:	48 89 cd             	mov    rbp,rcx
8093:	e9 c0 f1 ff ff       	jmp    7258 <quotearg_buffer_restyled+0x228>
8098:	85 db                	test   ebx,ebx
809a:	0f 84 88 01 00 00    	je     8228 <quotearg_buffer_restyled+0x11f8>
80a0:	48 8d 05 0f 80 00 00 	lea    rax,[rip+0x800f]        # 100b6 <primes_diff+0x356>
80a7:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
80ac:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
80b1:	45 31 e4             	xor    r12d,r12d
80b4:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
80bb:	00 00
80bd:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
80c2:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
80c7:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
80ce:	00 00
80d0:	45 31 ff             	xor    r15d,r15d
80d3:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
80d8:	e9 26 f0 ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
80dd:	0f 1f 00             	nop    DWORD PTR [rax]
80e0:	4c 89 dd             	mov    rbp,r11
80e3:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
80e8:	e9 cc fa ff ff       	jmp    7bb9 <quotearg_buffer_restyled+0xb89>
80ed:	48 8d 05 fe 7f 00 00 	lea    rax,[rip+0x7ffe]        # 100f2 <__PRETTY_FUNCTION__.5159+0x22>
80f4:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
80f9:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
80fe:	45 31 e4             	xor    r12d,r12d
8101:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
8108:	00 00
810a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
810f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
8114:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
811b:	00 00
811d:	45 31 ff             	xor    r15d,r15d
8120:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
8125:	e9 d9 ef ff ff       	jmp    7103 <quotearg_buffer_restyled+0xd3>
812a:	89 d0                	mov    eax,edx
812c:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
8131:	48 85 db             	test   rbx,rbx
8134:	74 2c                	je     8162 <quotearg_buffer_restyled+0x1132>
8136:	84 c0                	test   al,al
8138:	74 28                	je     8162 <quotearg_buffer_restyled+0x1132>
813a:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
813d:	48 89 d8             	mov    rax,rbx
8140:	84 c9                	test   cl,cl
8142:	74 1e                	je     8162 <quotearg_buffer_restyled+0x1132>
8144:	4c 89 fa             	mov    rdx,r15
8147:	4c 29 f8             	sub    rax,r15
814a:	49 39 d5             	cmp    r13,rdx
814d:	76 04                	jbe    8153 <quotearg_buffer_restyled+0x1123>
814f:	41 88 0c 16          	mov    BYTE PTR [r14+rdx*1],cl
8153:	48 83 c2 01          	add    rdx,0x1
8157:	0f b6 0c 10          	movzx  ecx,BYTE PTR [rax+rdx*1]
815b:	84 c9                	test   cl,cl
815d:	75 eb                	jne    814a <quotearg_buffer_restyled+0x111a>
815f:	49 89 d7             	mov    r15,rdx
8162:	4d 39 fd             	cmp    r13,r15
8165:	0f 86 9e fa ff ff    	jbe    7c09 <quotearg_buffer_restyled+0xbd9>
816b:	43 c6 04 3e 00       	mov    BYTE PTR [r14+r15*1],0x0
8170:	e9 94 fa ff ff       	jmp    7c09 <quotearg_buffer_restyled+0xbd9>
8175:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
817a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
817f:	4c 89 dd             	mov    rbp,r11
8182:	0f 94 c0             	sete   al
8185:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
8189:	e9 2b fa ff ff       	jmp    7bb9 <quotearg_buffer_restyled+0xb89>
818e:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
8192:	48 89 cf             	mov    rdi,rcx
8195:	e8 a6 ed ff ff       	call   6f40 <gettext_quote.part.1>
819a:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
819f:	e9 52 fc ff ff       	jmp    7df6 <quotearg_buffer_restyled+0xdc6>
81a4:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
81a8:	48 89 cf             	mov    rdi,rcx
81ab:	e8 90 ed ff ff       	call   6f40 <gettext_quote.part.1>
81b0:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
81b5:	e9 67 fc ff ff       	jmp    7e21 <quotearg_buffer_restyled+0xdf1>
81ba:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
81bf:	4c 89 dd             	mov    rbp,r11
81c2:	89 d0                	mov    eax,edx
81c4:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
81c8:	e9 ec f9 ff ff       	jmp    7bb9 <quotearg_buffer_restyled+0xb89>
81cd:	48 83 ec 08          	sub    rsp,0x8
81d1:	41 b8 05 00 00 00    	mov    r8d,0x5
81d7:	4c 89 d9             	mov    rcx,r11
81da:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
81de:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
81e2:	4c 89 f7             	mov    rdi,r14
81e5:	ff 74 24 38          	push   QWORD PTR [rsp+0x38]
81e9:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
81f0:	00
81f1:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
81f6:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
81fb:	e8 30 ee ff ff       	call   7030 <quotearg_buffer_restyled>
8200:	48 83 c4 20          	add    rsp,0x20
8204:	49 89 c7             	mov    r15,rax
8207:	e9 fd f9 ff ff       	jmp    7c09 <quotearg_buffer_restyled+0xbd9>
820c:	0f b6 44 24 7c       	movzx  eax,BYTE PTR [rsp+0x7c]
8211:	e9 16 ff ff ff       	jmp    812c <quotearg_buffer_restyled+0x10fc>
8216:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
821d:	00
821e:	e9 96 f9 ff ff       	jmp    7bb9 <quotearg_buffer_restyled+0xb89>
8223:	e8 f8 9c ff ff       	call   1f20 <__stack_chk_fail@plt>
8228:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
822d:	e9 6f fa ff ff       	jmp    7ca1 <quotearg_buffer_restyled+0xc71>
8232:	4c 89 dd             	mov    rbp,r11
8235:	e9 96 f9 ff ff       	jmp    7bd0 <quotearg_buffer_restyled+0xba0>
823a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
823f:	31 c0                	xor    eax,eax
8241:	45 31 e4             	xor    r12d,r12d
8244:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
824b:	00 00
824d:	e9 a2 f5 ff ff       	jmp    77f4 <quotearg_buffer_restyled+0x7c4>
8252:	4c 89 ea             	mov    rdx,r13
8255:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
825a:	e9 f3 f5 ff ff       	jmp    7852 <quotearg_buffer_restyled+0x822>
825f:	e8 7c 9b ff ff       	call   1de0 <abort@plt>
8264:	66 90                	xchg   ax,ax
8266:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
826d:	00 00 00

0000000000008270 <quotearg_n_options>:
8270:	41 57                	push   r15
8272:	41 56                	push   r14
8274:	4c 63 ff             	movsxd r15,edi
8277:	41 55                	push   r13
8279:	41 54                	push   r12
827b:	49 89 d6             	mov    r14,rdx
827e:	55                   	push   rbp
827f:	53                   	push   rbx
8280:	48 89 cd             	mov    rbp,rcx
8283:	48 83 ec 28          	sub    rsp,0x28
8287:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
828c:	e8 5f 9b ff ff       	call   1df0 <__errno_location@plt>
8291:	49 89 c5             	mov    r13,rax
8294:	8b 00                	mov    eax,DWORD PTR [rax]
8296:	45 85 ff             	test   r15d,r15d
8299:	48 8b 1d e0 ad 20 00 	mov    rbx,QWORD PTR [rip+0x20ade0]        # 213080 <slotvec>
82a0:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
82a4:	0f 88 67 01 00 00    	js     8411 <quotearg_n_options+0x1a1>
82aa:	44 39 3d c7 ad 20 00 	cmp    DWORD PTR [rip+0x20adc7],r15d        # 213078 <nslots>
82b1:	7f 62                	jg     8315 <quotearg_n_options+0xa5>
82b3:	41 81 ff ff ff ff 7f 	cmp    r15d,0x7fffffff
82ba:	0f 84 56 01 00 00    	je     8416 <quotearg_n_options+0x1a6>
82c0:	45 8d 67 01          	lea    r12d,[r15+0x1]
82c4:	48 8d 05 c5 ad 20 00 	lea    rax,[rip+0x20adc5]        # 213090 <slotvec0>
82cb:	49 63 f4             	movsxd rsi,r12d
82ce:	48 c1 e6 04          	shl    rsi,0x4
82d2:	48 39 c3             	cmp    rbx,rax
82d5:	0f 84 15 01 00 00    	je     83f0 <quotearg_n_options+0x180>
82db:	48 89 df             	mov    rdi,rbx
82de:	e8 5d 1a 00 00       	call   9d40 <xrealloc>
82e3:	48 89 c3             	mov    rbx,rax
82e6:	48 89 05 93 ad 20 00 	mov    QWORD PTR [rip+0x20ad93],rax        # 213080 <slotvec>
82ed:	48 63 3d 84 ad 20 00 	movsxd rdi,DWORD PTR [rip+0x20ad84]        # 213078 <nslots>
82f4:	44 89 e2             	mov    edx,r12d
82f7:	31 f6                	xor    esi,esi
82f9:	29 fa                	sub    edx,edi
82fb:	48 c1 e7 04          	shl    rdi,0x4
82ff:	48 63 d2             	movsxd rdx,edx
8302:	48 01 df             	add    rdi,rbx
8305:	48 c1 e2 04          	shl    rdx,0x4
8309:	e8 e2 9c ff ff       	call   1ff0 <memset@plt>
830e:	44 89 25 63 ad 20 00 	mov    DWORD PTR [rip+0x20ad63],r12d        # 213078 <nslots>
8315:	8b 45 04             	mov    eax,DWORD PTR [rbp+0x4]
8318:	49 c1 e7 04          	shl    r15,0x4
831c:	48 83 ec 08          	sub    rsp,0x8
8320:	4c 01 fb             	add    rbx,r15
8323:	4c 8d 7d 08          	lea    r15,[rbp+0x8]
8327:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
832b:	4c 8b 1b             	mov    r11,QWORD PTR [rbx]
832e:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
8332:	4c 89 f1             	mov    rcx,r14
8335:	83 c8 01             	or     eax,0x1
8338:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
833c:	ff 75 30             	push   QWORD PTR [rbp+0x30]
833f:	41 89 c1             	mov    r9d,eax
8342:	ff 75 28             	push   QWORD PTR [rbp+0x28]
8345:	41 57                	push   r15
8347:	4c 89 de             	mov    rsi,r11
834a:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
834f:	4c 89 e7             	mov    rdi,r12
8352:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
8357:	e8 d4 ec ff ff       	call   7030 <quotearg_buffer_restyled>
835c:	48 83 c4 20          	add    rsp,0x20
8360:	4c 8b 5c 24 10       	mov    r11,QWORD PTR [rsp+0x10]
8365:	49 39 c3             	cmp    r11,rax
8368:	77 67                	ja     83d1 <quotearg_n_options+0x161>
836a:	48 8d 70 01          	lea    rsi,[rax+0x1]
836e:	48 8d 05 ab ad 20 00 	lea    rax,[rip+0x20adab]        # 213120 <slot0>
8375:	49 39 c4             	cmp    r12,rax
8378:	48 89 33             	mov    QWORD PTR [rbx],rsi
837b:	74 12                	je     838f <quotearg_n_options+0x11f>
837d:	4c 89 e7             	mov    rdi,r12
8380:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
8385:	e8 46 9a ff ff       	call   1dd0 <free@plt>
838a:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
838f:	48 89 f7             	mov    rdi,rsi
8392:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
8397:	e8 44 19 00 00       	call   9ce0 <xmalloc>
839c:	48 83 ec 08          	sub    rsp,0x8
83a0:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
83a4:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
83a8:	ff 75 30             	push   QWORD PTR [rbp+0x30]
83ab:	ff 75 28             	push   QWORD PTR [rbp+0x28]
83ae:	4c 89 f1             	mov    rcx,r14
83b1:	41 57                	push   r15
83b3:	44 8b 4c 24 3c       	mov    r9d,DWORD PTR [rsp+0x3c]
83b8:	48 89 c7             	mov    rdi,rax
83bb:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
83c0:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
83c5:	49 89 c4             	mov    r12,rax
83c8:	e8 63 ec ff ff       	call   7030 <quotearg_buffer_restyled>
83cd:	48 83 c4 20          	add    rsp,0x20
83d1:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
83d5:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
83d9:	48 83 c4 28          	add    rsp,0x28
83dd:	4c 89 e0             	mov    rax,r12
83e0:	5b                   	pop    rbx
83e1:	5d                   	pop    rbp
83e2:	41 5c                	pop    r12
83e4:	41 5d                	pop    r13
83e6:	41 5e                	pop    r14
83e8:	41 5f                	pop    r15
83ea:	c3                   	ret
83eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
83f0:	31 ff                	xor    edi,edi
83f2:	e8 49 19 00 00       	call   9d40 <xrealloc>
83f7:	66 0f 6f 05 91 ac 20 	movdqa xmm0,XMMWORD PTR [rip+0x20ac91]        # 213090 <slotvec0>
83fe:	00
83ff:	48 89 c3             	mov    rbx,rax
8402:	48 89 05 77 ac 20 00 	mov    QWORD PTR [rip+0x20ac77],rax        # 213080 <slotvec>
8409:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
840c:	e9 dc fe ff ff       	jmp    82ed <quotearg_n_options+0x7d>
8411:	e8 ca 99 ff ff       	call   1de0 <abort@plt>
8416:	e8 15 1b 00 00       	call   9f30 <xalloc_die>
841b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008420 <clone_quoting_options>:
8420:	41 54                	push   r12
8422:	55                   	push   rbp
8423:	53                   	push   rbx
8424:	48 89 fb             	mov    rbx,rdi
8427:	e8 c4 99 ff ff       	call   1df0 <__errno_location@plt>
842c:	44 8b 20             	mov    r12d,DWORD PTR [rax]
842f:	48 89 c5             	mov    rbp,rax
8432:	48 8d 05 e7 ad 20 00 	lea    rax,[rip+0x20ade7]        # 213220 <default_quoting_options>
8439:	48 85 db             	test   rbx,rbx
843c:	be 38 00 00 00       	mov    esi,0x38
8441:	48 0f 44 d8          	cmove  rbx,rax
8445:	48 89 df             	mov    rdi,rbx
8448:	e8 93 1a 00 00       	call   9ee0 <xmemdup>
844d:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
8451:	5b                   	pop    rbx
8452:	5d                   	pop    rbp
8453:	41 5c                	pop    r12
8455:	c3                   	ret
8456:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
845d:	00 00 00

0000000000008460 <get_quoting_style>:
8460:	48 8d 05 b9 ad 20 00 	lea    rax,[rip+0x20adb9]        # 213220 <default_quoting_options>
8467:	48 85 ff             	test   rdi,rdi
846a:	48 0f 44 f8          	cmove  rdi,rax
846e:	8b 07                	mov    eax,DWORD PTR [rdi]
8470:	c3                   	ret
8471:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
8476:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
847d:	00 00 00

0000000000008480 <set_quoting_style>:
8480:	48 8d 05 99 ad 20 00 	lea    rax,[rip+0x20ad99]        # 213220 <default_quoting_options>
8487:	48 85 ff             	test   rdi,rdi
848a:	48 0f 44 f8          	cmove  rdi,rax
848e:	89 37                	mov    DWORD PTR [rdi],esi
8490:	c3                   	ret
8491:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
8496:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
849d:	00 00 00

00000000000084a0 <set_char_quoting>:
84a0:	48 8d 05 79 ad 20 00 	lea    rax,[rip+0x20ad79]        # 213220 <default_quoting_options>
84a7:	48 85 ff             	test   rdi,rdi
84aa:	89 f1                	mov    ecx,esi
84ac:	48 0f 44 f8          	cmove  rdi,rax
84b0:	89 f0                	mov    eax,esi
84b2:	83 e1 1f             	and    ecx,0x1f
84b5:	c0 e8 05             	shr    al,0x5
84b8:	0f b6 c0             	movzx  eax,al
84bb:	48 8d 7c 87 08       	lea    rdi,[rdi+rax*4+0x8]
84c0:	8b 37                	mov    esi,DWORD PTR [rdi]
84c2:	89 f0                	mov    eax,esi
84c4:	d3 e8                	shr    eax,cl
84c6:	31 c2                	xor    edx,eax
84c8:	83 e0 01             	and    eax,0x1
84cb:	83 e2 01             	and    edx,0x1
84ce:	d3 e2                	shl    edx,cl
84d0:	31 f2                	xor    edx,esi
84d2:	89 17                	mov    DWORD PTR [rdi],edx
84d4:	c3                   	ret
84d5:	90                   	nop
84d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
84dd:	00 00 00

00000000000084e0 <set_quoting_flags>:
84e0:	48 8d 05 39 ad 20 00 	lea    rax,[rip+0x20ad39]        # 213220 <default_quoting_options>
84e7:	48 85 ff             	test   rdi,rdi
84ea:	48 0f 44 f8          	cmove  rdi,rax
84ee:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
84f1:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
84f4:	c3                   	ret
84f5:	90                   	nop
84f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
84fd:	00 00 00

0000000000008500 <set_custom_quoting>:
8500:	48 8d 05 19 ad 20 00 	lea    rax,[rip+0x20ad19]        # 213220 <default_quoting_options>
8507:	48 85 ff             	test   rdi,rdi
850a:	48 0f 44 f8          	cmove  rdi,rax
850e:	48 85 f6             	test   rsi,rsi
8511:	c7 07 0a 00 00 00    	mov    DWORD PTR [rdi],0xa
8517:	74 0e                	je     8527 <set_custom_quoting+0x27>
8519:	48 85 d2             	test   rdx,rdx
851c:	74 09                	je     8527 <set_custom_quoting+0x27>
851e:	48 89 77 28          	mov    QWORD PTR [rdi+0x28],rsi
8522:	48 89 57 30          	mov    QWORD PTR [rdi+0x30],rdx
8526:	c3                   	ret
8527:	48 83 ec 08          	sub    rsp,0x8
852b:	e8 b0 98 ff ff       	call   1de0 <abort@plt>

0000000000008530 <quotearg_buffer>:
8530:	41 57                	push   r15
8532:	41 56                	push   r14
8534:	48 8d 05 e5 ac 20 00 	lea    rax,[rip+0x20ace5]        # 213220 <default_quoting_options>
853b:	41 55                	push   r13
853d:	41 54                	push   r12
853f:	49 89 fd             	mov    r13,rdi
8542:	55                   	push   rbp
8543:	53                   	push   rbx
8544:	4c 89 c3             	mov    rbx,r8
8547:	49 89 f6             	mov    r14,rsi
854a:	49 89 d7             	mov    r15,rdx
854d:	48 83 ec 18          	sub    rsp,0x18
8551:	4d 85 c0             	test   r8,r8
8554:	48 0f 44 d8          	cmove  rbx,rax
8558:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
855d:	e8 8e 98 ff ff       	call   1df0 <__errno_location@plt>
8562:	44 8b 20             	mov    r12d,DWORD PTR [rax]
8565:	48 89 c5             	mov    rbp,rax
8568:	48 8d 43 08          	lea    rax,[rbx+0x8]
856c:	48 83 ec 08          	sub    rsp,0x8
8570:	44 8b 4b 04          	mov    r9d,DWORD PTR [rbx+0x4]
8574:	ff 73 30             	push   QWORD PTR [rbx+0x30]
8577:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
857a:	ff 73 28             	push   QWORD PTR [rbx+0x28]
857d:	4c 89 fa             	mov    rdx,r15
8580:	50                   	push   rax
8581:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
8586:	4c 89 f6             	mov    rsi,r14
8589:	4c 89 ef             	mov    rdi,r13
858c:	e8 9f ea ff ff       	call   7030 <quotearg_buffer_restyled>
8591:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
8595:	48 83 c4 38          	add    rsp,0x38
8599:	5b                   	pop    rbx
859a:	5d                   	pop    rbp
859b:	41 5c                	pop    r12
859d:	41 5d                	pop    r13
859f:	41 5e                	pop    r14
85a1:	41 5f                	pop    r15
85a3:	c3                   	ret
85a4:	66 90                	xchg   ax,ax
85a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
85ad:	00 00 00

00000000000085b0 <quotearg_alloc_mem>:
85b0:	41 57                	push   r15
85b2:	41 56                	push   r14
85b4:	48 8d 05 65 ac 20 00 	lea    rax,[rip+0x20ac65]        # 213220 <default_quoting_options>
85bb:	41 55                	push   r13
85bd:	41 54                	push   r12
85bf:	49 89 d4             	mov    r12,rdx
85c2:	55                   	push   rbp
85c3:	53                   	push   rbx
85c4:	48 89 cb             	mov    rbx,rcx
85c7:	49 89 fe             	mov    r14,rdi
85ca:	49 89 f7             	mov    r15,rsi
85cd:	48 83 ec 38          	sub    rsp,0x38
85d1:	48 85 c9             	test   rcx,rcx
85d4:	48 0f 44 d8          	cmove  rbx,rax
85d8:	31 ed                	xor    ebp,ebp
85da:	e8 11 98 ff ff       	call   1df0 <__errno_location@plt>
85df:	4d 85 e4             	test   r12,r12
85e2:	49 89 c5             	mov    r13,rax
85e5:	8b 00                	mov    eax,DWORD PTR [rax]
85e7:	40 0f 94 c5          	sete   bpl
85eb:	0b 6b 04             	or     ebp,DWORD PTR [rbx+0x4]
85ee:	4c 8d 53 08          	lea    r10,[rbx+0x8]
85f2:	48 83 ec 08          	sub    rsp,0x8
85f6:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
85f9:	4c 89 f9             	mov    rcx,r15
85fc:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
8600:	ff 73 30             	push   QWORD PTR [rbx+0x30]
8603:	4c 89 f2             	mov    rdx,r14
8606:	ff 73 28             	push   QWORD PTR [rbx+0x28]
8609:	41 52                	push   r10
860b:	31 f6                	xor    esi,esi
860d:	41 89 e9             	mov    r9d,ebp
8610:	31 ff                	xor    edi,edi
8612:	4c 89 54 24 40       	mov    QWORD PTR [rsp+0x40],r10
8617:	e8 14 ea ff ff       	call   7030 <quotearg_buffer_restyled>
861c:	48 8d 70 01          	lea    rsi,[rax+0x1]
8620:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
8625:	48 83 c4 20          	add    rsp,0x20
8629:	48 89 f7             	mov    rdi,rsi
862c:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
8631:	e8 aa 16 00 00       	call   9ce0 <xmalloc>
8636:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
863b:	48 83 ec 08          	sub    rsp,0x8
863f:	ff 73 30             	push   QWORD PTR [rbx+0x30]
8642:	ff 73 28             	push   QWORD PTR [rbx+0x28]
8645:	4c 8b 54 24 38       	mov    r10,QWORD PTR [rsp+0x38]
864a:	41 89 e9             	mov    r9d,ebp
864d:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
8650:	4c 89 f9             	mov    rcx,r15
8653:	4c 89 f2             	mov    rdx,r14
8656:	48 89 c7             	mov    rdi,rax
8659:	41 52                	push   r10
865b:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
8660:	e8 cb e9 ff ff       	call   7030 <quotearg_buffer_restyled>
8665:	8b 44 24 2c          	mov    eax,DWORD PTR [rsp+0x2c]
8669:	48 83 c4 20          	add    rsp,0x20
866d:	4d 85 e4             	test   r12,r12
8670:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
8674:	74 09                	je     867f <quotearg_alloc_mem+0xcf>
8676:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
867b:	4d 89 1c 24          	mov    QWORD PTR [r12],r11
867f:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
8684:	48 83 c4 38          	add    rsp,0x38
8688:	5b                   	pop    rbx
8689:	5d                   	pop    rbp
868a:	41 5c                	pop    r12
868c:	41 5d                	pop    r13
868e:	41 5e                	pop    r14
8690:	41 5f                	pop    r15
8692:	c3                   	ret
8693:	0f 1f 00             	nop    DWORD PTR [rax]
8696:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
869d:	00 00 00

00000000000086a0 <quotearg_alloc>:
86a0:	48 89 d1             	mov    rcx,rdx
86a3:	31 d2                	xor    edx,edx
86a5:	e9 06 ff ff ff       	jmp    85b0 <quotearg_alloc_mem>
86aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000086b0 <quotearg_free>:
86b0:	8b 05 c2 a9 20 00    	mov    eax,DWORD PTR [rip+0x20a9c2]        # 213078 <nslots>
86b6:	41 54                	push   r12
86b8:	4c 8b 25 c1 a9 20 00 	mov    r12,QWORD PTR [rip+0x20a9c1]        # 213080 <slotvec>
86bf:	55                   	push   rbp
86c0:	53                   	push   rbx
86c1:	83 f8 01             	cmp    eax,0x1
86c4:	7e 2b                	jle    86f1 <quotearg_free+0x41>
86c6:	83 e8 02             	sub    eax,0x2
86c9:	49 8d 5c 24 18       	lea    rbx,[r12+0x18]
86ce:	48 c1 e0 04          	shl    rax,0x4
86d2:	49 8d 6c 04 28       	lea    rbp,[r12+rax*1+0x28]
86d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
86de:	00 00
86e0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
86e3:	48 83 c3 10          	add    rbx,0x10
86e7:	e8 e4 96 ff ff       	call   1dd0 <free@plt>
86ec:	48 39 eb             	cmp    rbx,rbp
86ef:	75 ef                	jne    86e0 <quotearg_free+0x30>
86f1:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
86f6:	48 8d 1d 23 aa 20 00 	lea    rbx,[rip+0x20aa23]        # 213120 <slot0>
86fd:	48 39 df             	cmp    rdi,rbx
8700:	74 17                	je     8719 <quotearg_free+0x69>
8702:	e8 c9 96 ff ff       	call   1dd0 <free@plt>
8707:	48 c7 05 7e a9 20 00 	mov    QWORD PTR [rip+0x20a97e],0x100        # 213090 <slotvec0>
870e:	00 01 00 00
8712:	48 89 1d 7f a9 20 00 	mov    QWORD PTR [rip+0x20a97f],rbx        # 213098 <slotvec0+0x8>
8719:	48 8d 1d 70 a9 20 00 	lea    rbx,[rip+0x20a970]        # 213090 <slotvec0>
8720:	49 39 dc             	cmp    r12,rbx
8723:	74 0f                	je     8734 <quotearg_free+0x84>
8725:	4c 89 e7             	mov    rdi,r12
8728:	e8 a3 96 ff ff       	call   1dd0 <free@plt>
872d:	48 89 1d 4c a9 20 00 	mov    QWORD PTR [rip+0x20a94c],rbx        # 213080 <slotvec>
8734:	5b                   	pop    rbx
8735:	c7 05 39 a9 20 00 01 	mov    DWORD PTR [rip+0x20a939],0x1        # 213078 <nslots>
873c:	00 00 00
873f:	5d                   	pop    rbp
8740:	41 5c                	pop    r12
8742:	c3                   	ret
8743:	0f 1f 00             	nop    DWORD PTR [rax]
8746:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
874d:	00 00 00

0000000000008750 <quotearg_n>:
8750:	48 8d 0d c9 aa 20 00 	lea    rcx,[rip+0x20aac9]        # 213220 <default_quoting_options>
8757:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
875e:	e9 0d fb ff ff       	jmp    8270 <quotearg_n_options>
8763:	0f 1f 00             	nop    DWORD PTR [rax]
8766:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
876d:	00 00 00

0000000000008770 <quotearg_n_mem>:
8770:	48 8d 0d a9 aa 20 00 	lea    rcx,[rip+0x20aaa9]        # 213220 <default_quoting_options>
8777:	e9 f4 fa ff ff       	jmp    8270 <quotearg_n_options>
877c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008780 <quotearg>:
8780:	48 8d 0d 99 aa 20 00 	lea    rcx,[rip+0x20aa99]        # 213220 <default_quoting_options>
8787:	48 89 fe             	mov    rsi,rdi
878a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
8791:	31 ff                	xor    edi,edi
8793:	e9 d8 fa ff ff       	jmp    8270 <quotearg_n_options>
8798:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
879f:	00

00000000000087a0 <quotearg_mem>:
87a0:	48 8d 0d 79 aa 20 00 	lea    rcx,[rip+0x20aa79]        # 213220 <default_quoting_options>
87a7:	48 89 f2             	mov    rdx,rsi
87aa:	48 89 fe             	mov    rsi,rdi
87ad:	31 ff                	xor    edi,edi
87af:	e9 bc fa ff ff       	jmp    8270 <quotearg_n_options>
87b4:	66 90                	xchg   ax,ax
87b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
87bd:	00 00 00

00000000000087c0 <quotearg_n_style>:
87c0:	48 83 ec 48          	sub    rsp,0x48
87c4:	48 89 d0             	mov    rax,rdx
87c7:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
87ce:	00 00
87d0:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
87d5:	31 d2                	xor    edx,edx
87d7:	83 fe 0a             	cmp    esi,0xa
87da:	74 68                	je     8844 <quotearg_n_style+0x84>
87dc:	89 34 24             	mov    DWORD PTR [rsp],esi
87df:	48 89 e1             	mov    rcx,rsp
87e2:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
87e9:	48 89 c6             	mov    rsi,rax
87ec:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
87f3:	00 00
87f5:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
87fc:	00 00
87fe:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
8805:	00 00
8807:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
880e:	00 00
8810:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
8817:	00 00
8819:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
8820:	00 00
8822:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
8829:	00
882a:	e8 41 fa ff ff       	call   8270 <quotearg_n_options>
882f:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
8834:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
883b:	00 00
883d:	75 0a                	jne    8849 <quotearg_n_style+0x89>
883f:	48 83 c4 48          	add    rsp,0x48
8843:	c3                   	ret
8844:	e8 97 95 ff ff       	call   1de0 <abort@plt>
8849:	e8 d2 96 ff ff       	call   1f20 <__stack_chk_fail@plt>
884e:	66 90                	xchg   ax,ax

0000000000008850 <quotearg_n_style_mem>:
8850:	48 83 ec 48          	sub    rsp,0x48
8854:	48 89 d0             	mov    rax,rdx
8857:	48 89 ca             	mov    rdx,rcx
885a:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
8861:	00 00
8863:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
8868:	31 c9                	xor    ecx,ecx
886a:	83 fe 0a             	cmp    esi,0xa
886d:	74 61                	je     88d0 <quotearg_n_style_mem+0x80>
886f:	89 34 24             	mov    DWORD PTR [rsp],esi
8872:	48 89 e1             	mov    rcx,rsp
8875:	48 89 c6             	mov    rsi,rax
8878:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
887f:	00 00
8881:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
8888:	00 00
888a:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
8891:	00 00
8893:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
889a:	00 00
889c:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
88a3:	00 00
88a5:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
88ac:	00 00
88ae:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
88b5:	00
88b6:	e8 b5 f9 ff ff       	call   8270 <quotearg_n_options>
88bb:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
88c0:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
88c7:	00 00
88c9:	75 0a                	jne    88d5 <quotearg_n_style_mem+0x85>
88cb:	48 83 c4 48          	add    rsp,0x48
88cf:	c3                   	ret
88d0:	e8 0b 95 ff ff       	call   1de0 <abort@plt>
88d5:	e8 46 96 ff ff       	call   1f20 <__stack_chk_fail@plt>
88da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000088e0 <quotearg_style>:
88e0:	48 89 f2             	mov    rdx,rsi
88e3:	89 fe                	mov    esi,edi
88e5:	31 ff                	xor    edi,edi
88e7:	e9 d4 fe ff ff       	jmp    87c0 <quotearg_n_style>
88ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000088f0 <quotearg_style_mem>:
88f0:	48 89 d1             	mov    rcx,rdx
88f3:	48 89 f2             	mov    rdx,rsi
88f6:	89 fe                	mov    esi,edi
88f8:	31 ff                	xor    edi,edi
88fa:	e9 51 ff ff ff       	jmp    8850 <quotearg_n_style_mem>
88ff:	90                   	nop

0000000000008900 <quotearg_char_mem>:
8900:	48 83 ec 48          	sub    rsp,0x48
8904:	89 d1                	mov    ecx,edx
8906:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
890d:	00 00
890f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
8914:	31 c0                	xor    eax,eax
8916:	48 8b 05 33 a9 20 00 	mov    rax,QWORD PTR [rip+0x20a933]        # 213250 <default_quoting_options+0x30>
891d:	49 89 e0             	mov    r8,rsp
8920:	83 e1 1f             	and    ecx,0x1f
8923:	66 0f 6f 05 f5 a8 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a8f5]        # 213220 <default_quoting_options>
892a:	00
892b:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
8930:	89 d0                	mov    eax,edx
8932:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
8936:	c0 e8 05             	shr    al,0x5
8939:	0f b6 c0             	movzx  eax,al
893c:	4d 8d 4c 80 08       	lea    r9,[r8+rax*4+0x8]
8941:	66 0f 6f 05 e7 a8 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a8e7]        # 213230 <default_quoting_options+0x10>
8948:	00
8949:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
894e:	66 0f 6f 05 ea a8 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a8ea]        # 213240 <default_quoting_options+0x20>
8955:	00
8956:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
895b:	41 8b 11             	mov    edx,DWORD PTR [r9]
895e:	89 d0                	mov    eax,edx
8960:	d3 e8                	shr    eax,cl
8962:	f7 d0                	not    eax
8964:	83 e0 01             	and    eax,0x1
8967:	d3 e0                	shl    eax,cl
8969:	4c 89 c1             	mov    rcx,r8
896c:	31 d0                	xor    eax,edx
896e:	48 89 f2             	mov    rdx,rsi
8971:	48 89 fe             	mov    rsi,rdi
8974:	41 89 01             	mov    DWORD PTR [r9],eax
8977:	31 ff                	xor    edi,edi
8979:	e8 f2 f8 ff ff       	call   8270 <quotearg_n_options>
897e:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
8983:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
898a:	00 00
898c:	75 05                	jne    8993 <quotearg_char_mem+0x93>
898e:	48 83 c4 48          	add    rsp,0x48
8992:	c3                   	ret
8993:	e8 88 95 ff ff       	call   1f20 <__stack_chk_fail@plt>
8998:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
899f:	00

00000000000089a0 <quotearg_char>:
89a0:	40 0f be d6          	movsx  edx,sil
89a4:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
89ab:	e9 50 ff ff ff       	jmp    8900 <quotearg_char_mem>

00000000000089b0 <quotearg_colon>:
89b0:	ba 3a 00 00 00       	mov    edx,0x3a
89b5:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
89bc:	e9 3f ff ff ff       	jmp    8900 <quotearg_char_mem>
89c1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
89c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
89cd:	00 00 00

00000000000089d0 <quotearg_colon_mem>:
89d0:	ba 3a 00 00 00       	mov    edx,0x3a
89d5:	e9 26 ff ff ff       	jmp    8900 <quotearg_char_mem>
89da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000089e0 <quotearg_n_style_colon>:
89e0:	48 83 ec 48          	sub    rsp,0x48
89e4:	48 89 d0             	mov    rax,rdx
89e7:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
89ee:	00 00
89f0:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
89f5:	31 d2                	xor    edx,edx
89f7:	83 fe 0a             	cmp    esi,0xa
89fa:	74 68                	je     8a64 <quotearg_n_style_colon+0x84>
89fc:	89 34 24             	mov    DWORD PTR [rsp],esi
89ff:	48 89 e1             	mov    rcx,rsp
8a02:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
8a09:	48 89 c6             	mov    rsi,rax
8a0c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
8a13:	00 00
8a15:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x4000000
8a1c:	00 04
8a1e:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
8a25:	00 00
8a27:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
8a2e:	00 00
8a30:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
8a37:	00 00
8a39:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
8a40:	00 00
8a42:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
8a49:	00
8a4a:	e8 21 f8 ff ff       	call   8270 <quotearg_n_options>
8a4f:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
8a54:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
8a5b:	00 00
8a5d:	75 0a                	jne    8a69 <quotearg_n_style_colon+0x89>
8a5f:	48 83 c4 48          	add    rsp,0x48
8a63:	c3                   	ret
8a64:	e8 77 93 ff ff       	call   1de0 <abort@plt>
8a69:	e8 b2 94 ff ff       	call   1f20 <__stack_chk_fail@plt>
8a6e:	66 90                	xchg   ax,ax

0000000000008a70 <quotearg_n_custom_mem>:
8a70:	48 83 ec 48          	sub    rsp,0x48
8a74:	49 89 c9             	mov    r9,rcx
8a77:	48 8b 0d d2 a7 20 00 	mov    rcx,QWORD PTR [rip+0x20a7d2]        # 213250 <default_quoting_options+0x30>
8a7e:	66 0f 6f 05 9a a7 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a79a]        # 213220 <default_quoting_options>
8a85:	00
8a86:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
8a8d:	00 00
8a8f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
8a94:	31 c0                	xor    eax,eax
8a96:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
8a9a:	48 85 f6             	test   rsi,rsi
8a9d:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
8aa2:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [rsp],0xa
8aa9:	66 0f 6f 05 7f a7 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a77f]        # 213230 <default_quoting_options+0x10>
8ab0:	00
8ab1:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
8ab6:	66 0f 6f 05 82 a7 20 	movdqa xmm0,XMMWORD PTR [rip+0x20a782]        # 213240 <default_quoting_options+0x20>
8abd:	00
8abe:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
8ac3:	74 32                	je     8af7 <quotearg_n_custom_mem+0x87>
8ac5:	48 85 d2             	test   rdx,rdx
8ac8:	74 2d                	je     8af7 <quotearg_n_custom_mem+0x87>
8aca:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
8acf:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
8ad4:	48 89 e1             	mov    rcx,rsp
8ad7:	4c 89 c2             	mov    rdx,r8
8ada:	4c 89 ce             	mov    rsi,r9
8add:	e8 8e f7 ff ff       	call   8270 <quotearg_n_options>
8ae2:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
8ae7:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
8aee:	00 00
8af0:	75 0a                	jne    8afc <quotearg_n_custom_mem+0x8c>
8af2:	48 83 c4 48          	add    rsp,0x48
8af6:	c3                   	ret
8af7:	e8 e4 92 ff ff       	call   1de0 <abort@plt>
8afc:	e8 1f 94 ff ff       	call   1f20 <__stack_chk_fail@plt>
8b01:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
8b06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
8b0d:	00 00 00

0000000000008b10 <quotearg_n_custom>:
8b10:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
8b17:	e9 54 ff ff ff       	jmp    8a70 <quotearg_n_custom_mem>
8b1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008b20 <quotearg_custom>:
8b20:	48 89 d1             	mov    rcx,rdx
8b23:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
8b2a:	48 89 f2             	mov    rdx,rsi
8b2d:	48 89 fe             	mov    rsi,rdi
8b30:	31 ff                	xor    edi,edi
8b32:	e9 39 ff ff ff       	jmp    8a70 <quotearg_n_custom_mem>
8b37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
8b3e:	00 00

0000000000008b40 <quotearg_custom_mem>:
8b40:	49 89 c8             	mov    r8,rcx
8b43:	48 89 d1             	mov    rcx,rdx
8b46:	48 89 f2             	mov    rdx,rsi
8b49:	48 89 fe             	mov    rsi,rdi
8b4c:	31 ff                	xor    edi,edi
8b4e:	e9 1d ff ff ff       	jmp    8a70 <quotearg_n_custom_mem>
8b53:	0f 1f 00             	nop    DWORD PTR [rax]
8b56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
8b5d:	00 00 00

0000000000008b60 <quote_n_mem>:
8b60:	48 8d 0d d9 a4 20 00 	lea    rcx,[rip+0x20a4d9]        # 213040 <quote_quoting_options>
8b67:	e9 04 f7 ff ff       	jmp    8270 <quotearg_n_options>
8b6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008b70 <quote_mem>:
8b70:	48 8d 0d c9 a4 20 00 	lea    rcx,[rip+0x20a4c9]        # 213040 <quote_quoting_options>
8b77:	48 89 f2             	mov    rdx,rsi
8b7a:	48 89 fe             	mov    rsi,rdi
8b7d:	31 ff                	xor    edi,edi
8b7f:	e9 ec f6 ff ff       	jmp    8270 <quotearg_n_options>
8b84:	66 90                	xchg   ax,ax
8b86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
8b8d:	00 00 00

0000000000008b90 <quote_n>:
8b90:	48 8d 0d a9 a4 20 00 	lea    rcx,[rip+0x20a4a9]        # 213040 <quote_quoting_options>
8b97:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
8b9e:	e9 cd f6 ff ff       	jmp    8270 <quotearg_n_options>
8ba3:	0f 1f 00             	nop    DWORD PTR [rax]
8ba6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
8bad:	00 00 00

0000000000008bb0 <quote>:
8bb0:	48 8d 0d 89 a4 20 00 	lea    rcx,[rip+0x20a489]        # 213040 <quote_quoting_options>
8bb7:	48 89 fe             	mov    rsi,rdi
8bba:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
8bc1:	31 ff                	xor    edi,edi
8bc3:	e9 a8 f6 ff ff       	jmp    8270 <quotearg_n_options>
8bc8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
8bcf:	00

0000000000008bd0 <init_tokenbuffer>:
8bd0:	48 c7 07 00 00 00 00 	mov    QWORD PTR [rdi],0x0
8bd7:	48 c7 47 08 00 00 00 	mov    QWORD PTR [rdi+0x8],0x0
8bde:	00
8bdf:	c3                   	ret

0000000000008be0 <readtoken>:
8be0:	41 57                	push   r15
8be2:	41 56                	push   r14
8be4:	41 55                	push   r13
8be6:	41 54                	push   r12
8be8:	49 89 cd             	mov    r13,rcx
8beb:	55                   	push   rbp
8bec:	53                   	push   rbx
8bed:	48 89 fd             	mov    rbp,rdi
8bf0:	66 0f ef c0          	pxor   xmm0,xmm0
8bf4:	48 83 ec 38          	sub    rsp,0x38
8bf8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
8bff:	00 00
8c01:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
8c06:	31 c0                	xor    eax,eax
8c08:	48 85 d2             	test   rdx,rdx
8c0b:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
8c0f:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
8c14:	74 66                	je     8c7c <readtoken+0x9c>
8c16:	48 01 f2             	add    rdx,rsi
8c19:	48 89 e7             	mov    rdi,rsp
8c1c:	41 b8 01 00 00 00    	mov    r8d,0x1
8c22:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
8c28:	4c 89 c3             	mov    rbx,r8
8c2b:	48 83 c6 01          	add    rsi,0x1
8c2f:	0f b6 4e ff          	movzx  ecx,BYTE PTR [rsi-0x1]
8c33:	48 89 c8             	mov    rax,rcx
8c36:	83 e1 3f             	and    ecx,0x3f
8c39:	48 c1 e8 03          	shr    rax,0x3
8c3d:	48 d3 e3             	shl    rbx,cl
8c40:	83 e0 18             	and    eax,0x18
8c43:	48 09 1c 07          	or     QWORD PTR [rdi+rax*1],rbx
8c47:	48 39 f2             	cmp    rdx,rsi
8c4a:	75 dc                	jne    8c28 <readtoken+0x48>
8c4c:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
8c50:	48 3b 45 10          	cmp    rax,QWORD PTR [rbp+0x10]
8c54:	73 30                	jae    8c86 <readtoken+0xa6>
8c56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
8c5d:	00 00 00
8c60:	48 8d 50 01          	lea    rdx,[rax+0x1]
8c64:	48 89 55 08          	mov    QWORD PTR [rbp+0x8],rdx
8c68:	0f b6 18             	movzx  ebx,BYTE PTR [rax]
8c6b:	48 63 c3             	movsxd rax,ebx
8c6e:	48 c1 e8 06          	shr    rax,0x6
8c72:	48 8b 04 c4          	mov    rax,QWORD PTR [rsp+rax*8]
8c76:	48 0f a3 d8          	bt     rax,rbx
8c7a:	73 18                	jae    8c94 <readtoken+0xb4>
8c7c:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
8c80:	48 3b 45 10          	cmp    rax,QWORD PTR [rbp+0x10]
8c84:	72 da                	jb     8c60 <readtoken+0x80>
8c86:	48 89 ef             	mov    rdi,rbp
8c89:	e8 22 91 ff ff       	call   1db0 <__uflow@plt>
8c8e:	85 c0                	test   eax,eax
8c90:	89 c3                	mov    ebx,eax
8c92:	79 d7                	jns    8c6b <readtoken+0x8b>
8c94:	4d 8b 7d 08          	mov    r15,QWORD PTR [r13+0x8]
8c98:	4d 8b 75 00          	mov    r14,QWORD PTR [r13+0x0]
8c9c:	45 31 e4             	xor    r12d,r12d
8c9f:	85 db                	test   ebx,ebx
8ca1:	79 0d                	jns    8cb0 <readtoken+0xd0>
8ca3:	4d 85 e4             	test   r12,r12
8ca6:	74 52                	je     8cfa <readtoken+0x11a>
8ca8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
8caf:	00
8cb0:	4d 39 f4             	cmp    r12,r14
8cb3:	74 53                	je     8d08 <readtoken+0x128>
8cb5:	85 db                	test   ebx,ebx
8cb7:	4b 8d 14 27          	lea    rdx,[r15+r12*1]
8cbb:	0f 88 8f 00 00 00    	js     8d50 <readtoken+0x170>
8cc1:	48 63 c3             	movsxd rax,ebx
8cc4:	48 c1 e8 06          	shr    rax,0x6
8cc8:	48 8b 04 c4          	mov    rax,QWORD PTR [rsp+rax*8]
8ccc:	48 0f a3 d8          	bt     rax,rbx
8cd0:	72 7e                	jb     8d50 <readtoken+0x170>
8cd2:	88 1a                	mov    BYTE PTR [rdx],bl
8cd4:	49 83 c4 01          	add    r12,0x1
8cd8:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
8cdc:	48 3b 45 10          	cmp    rax,QWORD PTR [rbp+0x10]
8ce0:	0f 83 9a 00 00 00    	jae    8d80 <readtoken+0x1a0>
8ce6:	48 8d 50 01          	lea    rdx,[rax+0x1]
8cea:	48 89 55 08          	mov    QWORD PTR [rbp+0x8],rdx
8cee:	0f b6 18             	movzx  ebx,BYTE PTR [rax]
8cf1:	85 db                	test   ebx,ebx
8cf3:	79 bb                	jns    8cb0 <readtoken+0xd0>
8cf5:	4d 85 e4             	test   r12,r12
8cf8:	75 b6                	jne    8cb0 <readtoken+0xd0>
8cfa:	49 c7 c4 ff ff ff ff 	mov    r12,0xffffffffffffffff
8d01:	eb 58                	jmp    8d5b <readtoken+0x17b>
8d03:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
8d08:	4d 85 ff             	test   r15,r15
8d0b:	0f 84 7f 00 00 00    	je     8d90 <readtoken+0x1b0>
8d11:	48 b8 53 55 55 55 55 	movabs rax,0x5555555555555553
8d18:	55 55 55
8d1b:	49 39 c4             	cmp    r12,rax
8d1e:	0f 87 80 00 00 00    	ja     8da4 <readtoken+0x1c4>
8d24:	4c 89 e0             	mov    rax,r12
8d27:	48 d1 e8             	shr    rax,1
8d2a:	4d 8d 74 04 01       	lea    r14,[r12+rax*1+0x1]
8d2f:	4c 89 ff             	mov    rdi,r15
8d32:	4c 89 f6             	mov    rsi,r14
8d35:	e8 06 10 00 00       	call   9d40 <xrealloc>
8d3a:	85 db                	test   ebx,ebx
8d3c:	49 89 c7             	mov    r15,rax
8d3f:	4b 8d 14 27          	lea    rdx,[r15+r12*1]
8d43:	0f 89 78 ff ff ff    	jns    8cc1 <readtoken+0xe1>
8d49:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
8d50:	c6 02 00             	mov    BYTE PTR [rdx],0x0
8d53:	4d 89 7d 08          	mov    QWORD PTR [r13+0x8],r15
8d57:	4d 89 75 00          	mov    QWORD PTR [r13+0x0],r14
8d5b:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
8d60:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
8d67:	00 00
8d69:	4c 89 e0             	mov    rax,r12
8d6c:	75 3b                	jne    8da9 <readtoken+0x1c9>
8d6e:	48 83 c4 38          	add    rsp,0x38
8d72:	5b                   	pop    rbx
8d73:	5d                   	pop    rbp
8d74:	41 5c                	pop    r12
8d76:	41 5d                	pop    r13
8d78:	41 5e                	pop    r14
8d7a:	41 5f                	pop    r15
8d7c:	c3                   	ret
8d7d:	0f 1f 00             	nop    DWORD PTR [rax]
8d80:	48 89 ef             	mov    rdi,rbp
8d83:	e8 28 90 ff ff       	call   1db0 <__uflow@plt>
8d88:	89 c3                	mov    ebx,eax
8d8a:	e9 10 ff ff ff       	jmp    8c9f <readtoken+0xbf>
8d8f:	90                   	nop
8d90:	4d 85 e4             	test   r12,r12
8d93:	b9 80 00 00 00       	mov    ecx,0x80
8d98:	49 0f 45 cc          	cmovne rcx,r12
8d9c:	48 85 c9             	test   rcx,rcx
8d9f:	49 89 ce             	mov    r14,rcx
8da2:	79 8b                	jns    8d2f <readtoken+0x14f>
8da4:	e8 87 11 00 00       	call   9f30 <xalloc_die>
8da9:	e8 72 91 ff ff       	call   1f20 <__stack_chk_fail@plt>
8dae:	66 90                	xchg   ax,ax

0000000000008db0 <readtokens>:
8db0:	41 57                	push   r15
8db2:	41 56                	push   r14
8db4:	41 55                	push   r13
8db6:	41 54                	push   r12
8db8:	55                   	push   rbp
8db9:	53                   	push   rbx
8dba:	48 8d 6e 01          	lea    rbp,[rsi+0x1]
8dbe:	48 83 ec 68          	sub    rsp,0x68
8dc2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
8dc9:	00 00
8dcb:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
8dd0:	31 c0                	xor    eax,eax
8dd2:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
8dd7:	48 85 f6             	test   rsi,rsi
8dda:	b8 40 00 00 00       	mov    eax,0x40
8ddf:	ba 08 00 00 00       	mov    edx,0x8
8de4:	48 0f 44 e8          	cmove  rbp,rax
8de8:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
8ded:	48 89 d0             	mov    rax,rdx
8df0:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
8df5:	4c 89 44 24 38       	mov    QWORD PTR [rsp+0x38],r8
8dfa:	48 f7 e5             	mul    rbp
8dfd:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
8e02:	0f 80 c8 01 00 00    	jo     8fd0 <readtokens+0x220>
8e08:	31 c9                	xor    ecx,ecx
8e0a:	48 85 c0             	test   rax,rax
8e0d:	0f 88 b8 01 00 00    	js     8fcb <readtokens+0x21b>
8e13:	48 85 c9             	test   rcx,rcx
8e16:	0f 85 af 01 00 00    	jne    8fcb <readtokens+0x21b>
8e1c:	48 8d 1c ed 00 00 00 	lea    rbx,[rbp*8+0x0]
8e23:	00
8e24:	48 89 df             	mov    rdi,rbx
8e27:	e8 b4 0e 00 00       	call   9ce0 <xmalloc>
8e2c:	48 89 df             	mov    rdi,rbx
8e2f:	49 89 c4             	mov    r12,rax
8e32:	31 db                	xor    ebx,ebx
8e34:	e8 a7 0e 00 00       	call   9ce0 <xmalloc>
8e39:	49 89 c5             	mov    r13,rax
8e3c:	48 8d 44 24 40       	lea    rax,[rsp+0x40]
8e41:	48 c7 44 24 40 00 00 	mov    QWORD PTR [rsp+0x40],0x0
8e48:	00 00
8e4a:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
8e51:	00 00
8e53:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
8e58:	eb 42                	jmp    8e9c <readtokens+0xec>
8e5a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
8e60:	49 83 fe ff          	cmp    r14,0xffffffffffffffff
8e64:	0f 84 b2 00 00 00    	je     8f1c <readtokens+0x16c>
8e6a:	4d 89 f7             	mov    r15,r14
8e6d:	49 83 c7 01          	add    r15,0x1
8e71:	0f 88 54 01 00 00    	js     8fcb <readtokens+0x21b>
8e77:	4c 89 ff             	mov    rdi,r15
8e7a:	e8 61 0e 00 00       	call   9ce0 <xmalloc>
8e7f:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
8e84:	4d 89 74 dd 00       	mov    QWORD PTR [r13+rbx*8+0x0],r14
8e89:	4c 89 fa             	mov    rdx,r15
8e8c:	48 89 c7             	mov    rdi,rax
8e8f:	e8 0c 92 ff ff       	call   20a0 <memcpy@plt>
8e94:	49 89 04 dc          	mov    QWORD PTR [r12+rbx*8],rax
8e98:	48 83 c3 01          	add    rbx,0x1
8e9c:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
8ea1:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
8ea6:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
8eab:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
8eb0:	e8 2b fd ff ff       	call   8be0 <readtoken>
8eb5:	48 39 eb             	cmp    rbx,rbp
8eb8:	49 89 c6             	mov    r14,rax
8ebb:	72 a3                	jb     8e60 <readtokens+0xb0>
8ebd:	4d 85 e4             	test   r12,r12
8ec0:	0f 84 b2 00 00 00    	je     8f78 <readtokens+0x1c8>
8ec6:	48 b8 a9 aa aa aa aa 	movabs rax,0xaaaaaaaaaaaaaa9
8ecd:	aa aa 0a
8ed0:	48 39 c5             	cmp    rbp,rax
8ed3:	0f 87 f2 00 00 00    	ja     8fcb <readtokens+0x21b>
8ed9:	48 89 e8             	mov    rax,rbp
8edc:	4c 89 e7             	mov    rdi,r12
8edf:	48 d1 e8             	shr    rax,1
8ee2:	48 8d 6c 05 01       	lea    rbp,[rbp+rax*1+0x1]
8ee7:	48 8d 14 ed 00 00 00 	lea    rdx,[rbp*8+0x0]
8eee:	00
8eef:	48 89 d6             	mov    rsi,rdx
8ef2:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
8ef7:	e8 44 0e 00 00       	call   9d40 <xrealloc>
8efc:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
8f01:	49 89 c4             	mov    r12,rax
8f04:	4c 89 ef             	mov    rdi,r13
8f07:	48 89 d6             	mov    rsi,rdx
8f0a:	e8 31 0e 00 00       	call   9d40 <xrealloc>
8f0f:	49 83 fe ff          	cmp    r14,0xffffffffffffffff
8f13:	49 89 c5             	mov    r13,rax
8f16:	0f 85 4e ff ff ff    	jne    8e6a <readtokens+0xba>
8f1c:	49 c7 04 dc 00 00 00 	mov    QWORD PTR [r12+rbx*8],0x0
8f23:	00
8f24:	48 8b 7c 24 48       	mov    rdi,QWORD PTR [rsp+0x48]
8f29:	49 c7 44 dd 00 00 00 	mov    QWORD PTR [r13+rbx*8+0x0],0x0
8f30:	00 00
8f32:	e8 99 8e ff ff       	call   1dd0 <free@plt>
8f37:	48 83 7c 24 30 00    	cmp    QWORD PTR [rsp+0x30],0x0
8f3d:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
8f42:	4c 89 20             	mov    QWORD PTR [rax],r12
8f45:	74 7a                	je     8fc1 <readtokens+0x211>
8f47:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
8f4c:	4c 89 28             	mov    QWORD PTR [rax],r13
8f4f:	48 8b 4c 24 58       	mov    rcx,QWORD PTR [rsp+0x58]
8f54:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
8f5b:	00 00
8f5d:	48 89 d8             	mov    rax,rbx
8f60:	75 78                	jne    8fda <readtokens+0x22a>
8f62:	48 83 c4 68          	add    rsp,0x68
8f66:	5b                   	pop    rbx
8f67:	5d                   	pop    rbp
8f68:	41 5c                	pop    r12
8f6a:	41 5d                	pop    r13
8f6c:	41 5e                	pop    r14
8f6e:	41 5f                	pop    r15
8f70:	c3                   	ret
8f71:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
8f78:	48 85 ed             	test   rbp,rbp
8f7b:	b8 10 00 00 00       	mov    eax,0x10
8f80:	ba 08 00 00 00       	mov    edx,0x8
8f85:	48 0f 44 e8          	cmove  rbp,rax
8f89:	48 89 d0             	mov    rax,rdx
8f8c:	31 f6                	xor    esi,esi
8f8e:	48 f7 e5             	mul    rbp
8f91:	70 4c                	jo     8fdf <readtokens+0x22f>
8f93:	48 85 c0             	test   rax,rax
8f96:	78 33                	js     8fcb <readtokens+0x21b>
8f98:	48 85 f6             	test   rsi,rsi
8f9b:	75 2e                	jne    8fcb <readtokens+0x21b>
8f9d:	48 8d 14 ed 00 00 00 	lea    rdx,[rbp*8+0x0]
8fa4:	00
8fa5:	31 ff                	xor    edi,edi
8fa7:	48 89 d6             	mov    rsi,rdx
8faa:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
8faf:	e8 8c 0d 00 00       	call   9d40 <xrealloc>
8fb4:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
8fb9:	49 89 c4             	mov    r12,rax
8fbc:	e9 43 ff ff ff       	jmp    8f04 <readtokens+0x154>
8fc1:	4c 89 ef             	mov    rdi,r13
8fc4:	e8 07 8e ff ff       	call   1dd0 <free@plt>
8fc9:	eb 84                	jmp    8f4f <readtokens+0x19f>
8fcb:	e8 60 0f 00 00       	call   9f30 <xalloc_die>
8fd0:	b9 01 00 00 00       	mov    ecx,0x1
8fd5:	e9 30 fe ff ff       	jmp    8e0a <readtokens+0x5a>
8fda:	e8 41 8f ff ff       	call   1f20 <__stack_chk_fail@plt>
8fdf:	be 01 00 00 00       	mov    esi,0x1
8fe4:	eb ad                	jmp    8f93 <readtokens+0x1e3>
8fe6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
8fed:	00 00 00

0000000000008ff0 <safe_write>:
8ff0:	41 55                	push   r13
8ff2:	41 54                	push   r12
8ff4:	41 89 fd             	mov    r13d,edi
8ff7:	55                   	push   rbp
8ff8:	53                   	push   rbx
8ff9:	49 89 f4             	mov    r12,rsi
8ffc:	48 89 d3             	mov    rbx,rdx
8fff:	48 83 ec 08          	sub    rsp,0x8
9003:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
9008:	48 89 da             	mov    rdx,rbx
900b:	4c 89 e6             	mov    rsi,r12
900e:	44 89 ef             	mov    edi,r13d
9011:	e8 7a 8e ff ff       	call   1e90 <write@plt>
9016:	48 85 c0             	test   rax,rax
9019:	48 89 c5             	mov    rbp,rax
901c:	79 22                	jns    9040 <safe_write+0x50>
901e:	e8 cd 8d ff ff       	call   1df0 <__errno_location@plt>
9023:	8b 00                	mov    eax,DWORD PTR [rax]
9025:	83 f8 04             	cmp    eax,0x4
9028:	74 de                	je     9008 <safe_write+0x18>
902a:	83 f8 16             	cmp    eax,0x16
902d:	75 11                	jne    9040 <safe_write+0x50>
902f:	48 81 fb 00 00 f0 7f 	cmp    rbx,0x7ff00000
9036:	76 08                	jbe    9040 <safe_write+0x50>
9038:	bb 00 00 f0 7f       	mov    ebx,0x7ff00000
903d:	eb c9                	jmp    9008 <safe_write+0x18>
903f:	90                   	nop
9040:	48 83 c4 08          	add    rsp,0x8
9044:	48 89 e8             	mov    rax,rbp
9047:	5b                   	pop    rbx
9048:	5d                   	pop    rbp
9049:	41 5c                	pop    r12
904b:	41 5d                	pop    r13
904d:	c3                   	ret
904e:	66 90                	xchg   ax,ax

0000000000009050 <strnlen1>:
9050:	55                   	push   rbp
9051:	53                   	push   rbx
9052:	48 89 f2             	mov    rdx,rsi
9055:	48 89 f3             	mov    rbx,rsi
9058:	31 f6                	xor    esi,esi
905a:	48 89 fd             	mov    rbp,rdi
905d:	48 83 ec 08          	sub    rsp,0x8
9061:	e8 ba 8f ff ff       	call   2020 <memchr@plt>
9066:	48 89 c2             	mov    rdx,rax
9069:	48 29 ea             	sub    rdx,rbp
906c:	48 83 c2 01          	add    rdx,0x1
9070:	48 85 c0             	test   rax,rax
9073:	48 89 d8             	mov    rax,rbx
9076:	48 0f 45 c2          	cmovne rax,rdx
907a:	48 83 c4 08          	add    rsp,0x8
907e:	5b                   	pop    rbx
907f:	5d                   	pop    rbp
9080:	c3                   	ret
9081:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9088:	00 00 00
908b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009090 <trim2>:
9090:	41 57                	push   r15
9092:	41 56                	push   r14
9094:	41 55                	push   r13
9096:	41 54                	push   r12
9098:	41 89 f4             	mov    r12d,esi
909b:	55                   	push   rbp
909c:	53                   	push   rbx
909d:	48 83 ec 78          	sub    rsp,0x78
90a1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
90a8:	00 00
90aa:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
90af:	31 c0                	xor    eax,eax
90b1:	e8 ea 91 ff ff       	call   22a0 <strdup@plt>
90b6:	48 85 c0             	test   rax,rax
90b9:	0f 84 b8 05 00 00    	je     9677 <trim2+0x5e7>
90bf:	48 89 c3             	mov    rbx,rax
90c2:	e8 29 8e ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
90c7:	48 83 f8 01          	cmp    rax,0x1
90cb:	0f 86 ff 02 00 00    	jbe    93d0 <trim2+0x340>
90d1:	45 85 e4             	test   r12d,r12d
90d4:	0f 85 4e 01 00 00    	jne    9228 <trim2+0x198>
90da:	48 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],rbx
90df:	48 89 da             	mov    rdx,rbx
90e2:	8b 0a                	mov    ecx,DWORD PTR [rdx]
90e4:	48 83 c2 04          	add    rdx,0x4
90e8:	8d 81 ff fe fe fe    	lea    eax,[rcx-0x1010101]
90ee:	f7 d1                	not    ecx
90f0:	21 c8                	and    eax,ecx
90f2:	25 80 80 80 80       	and    eax,0x80808080
90f7:	74 e9                	je     90e2 <trim2+0x52>
90f9:	89 c1                	mov    ecx,eax
90fb:	c6 44 24 28 00       	mov    BYTE PTR [rsp+0x28],0x0
9100:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
9107:	00 00
9109:	c1 e9 10             	shr    ecx,0x10
910c:	a9 80 80 00 00       	test   eax,0x8080
9111:	c6 44 24 34 00       	mov    BYTE PTR [rsp+0x34],0x0
9116:	0f 44 c1             	cmove  eax,ecx
9119:	48 8d 4a 02          	lea    rcx,[rdx+0x2]
911d:	89 c6                	mov    esi,eax
911f:	48 0f 44 d1          	cmove  rdx,rcx
9123:	40 00 c6             	add    sil,al
9126:	48 89 de             	mov    rsi,rbx
9129:	48 83 da 03          	sbb    rdx,0x3
912d:	45 31 ff             	xor    r15d,r15d
9130:	48 39 da             	cmp    rdx,rbx
9133:	49 89 d6             	mov    r14,rdx
9136:	48 89 54 24 20       	mov    QWORD PTR [rsp+0x20],rdx
913b:	0f 86 5f 02 00 00    	jbe    93a0 <trim2+0x310>
9141:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
9146:	48 8d 45 0c          	lea    rax,[rbp+0xc]
914a:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
914f:	eb 3d                	jmp    918e <trim2+0xfe>
9151:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
9158:	80 7c 24 48 00       	cmp    BYTE PTR [rsp+0x48],0x0
915d:	41 bf 01 00 00 00    	mov    r15d,0x1
9163:	74 12                	je     9177 <trim2+0xe7>
9165:	8b 7c 24 4c          	mov    edi,DWORD PTR [rsp+0x4c]
9169:	45 31 ff             	xor    r15d,r15d
916c:	e8 2f 90 ff ff       	call   21a0 <iswspace@plt>
9171:	85 c0                	test   eax,eax
9173:	41 0f 94 c7          	sete   r15b
9177:	4b 8d 34 2c          	lea    rsi,[r12+r13*1]
917b:	c6 44 24 34 00       	mov    BYTE PTR [rsp+0x34],0x0
9180:	4c 39 f6             	cmp    rsi,r14
9183:	48 89 74 24 38       	mov    QWORD PTR [rsp+0x38],rsi
9188:	0f 83 02 02 00 00    	jae    9390 <trim2+0x300>
918e:	80 7c 24 28 00       	cmp    BYTE PTR [rsp+0x28],0x0
9193:	0f 85 28 03 00 00    	jne    94c1 <trim2+0x431>
9199:	0f b6 0e             	movzx  ecx,BYTE PTR [rsi]
919c:	48 8d 3d fd 77 00 00 	lea    rdi,[rip+0x77fd]        # 109a0 <is_basic_table>
91a3:	89 c8                	mov    eax,ecx
91a5:	c0 e8 05             	shr    al,0x5
91a8:	83 e0 07             	and    eax,0x7
91ab:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
91ae:	0f a3 c8             	bt     eax,ecx
91b1:	0f 83 e9 02 00 00    	jae    94a0 <trim2+0x410>
91b7:	48 c7 44 24 40 01 00 	mov    QWORD PTR [rsp+0x40],0x1
91be:	00 00
91c0:	0f be 06             	movsx  eax,BYTE PTR [rsi]
91c3:	41 bd 01 00 00 00    	mov    r13d,0x1
91c9:	4c 8b 64 24 38       	mov    r12,QWORD PTR [rsp+0x38]
91ce:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
91d3:	c6 44 24 48 01       	mov    BYTE PTR [rsp+0x48],0x1
91d8:	89 44 24 4c          	mov    DWORD PTR [rsp+0x4c],eax
91dc:	45 85 ff             	test   r15d,r15d
91df:	c6 44 24 34 01       	mov    BYTE PTR [rsp+0x34],0x1
91e4:	0f 84 6e ff ff ff    	je     9158 <trim2+0xc8>
91ea:	41 83 ff 01          	cmp    r15d,0x1
91ee:	0f 84 4c 03 00 00    	je     9540 <trim2+0x4b0>
91f4:	41 83 ff 02          	cmp    r15d,0x2
91f8:	0f 85 12 04 00 00    	jne    9610 <trim2+0x580>
91fe:	80 7c 24 48 00       	cmp    BYTE PTR [rsp+0x48],0x0
9203:	0f 84 07 04 00 00    	je     9610 <trim2+0x580>
9209:	8b 7c 24 4c          	mov    edi,DWORD PTR [rsp+0x4c]
920d:	e8 8e 8f ff ff       	call   21a0 <iswspace@plt>
9212:	85 c0                	test   eax,eax
9214:	b8 01 00 00 00       	mov    eax,0x1
9219:	44 0f 44 f8          	cmove  r15d,eax
921d:	e9 55 ff ff ff       	jmp    9177 <trim2+0xe7>
9222:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
9228:	48 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],rbx
922d:	48 89 da             	mov    rdx,rbx
9230:	8b 0a                	mov    ecx,DWORD PTR [rdx]
9232:	48 83 c2 04          	add    rdx,0x4
9236:	8d 81 ff fe fe fe    	lea    eax,[rcx-0x1010101]
923c:	f7 d1                	not    ecx
923e:	21 c8                	and    eax,ecx
9240:	25 80 80 80 80       	and    eax,0x80808080
9245:	74 e9                	je     9230 <trim2+0x1a0>
9247:	89 c1                	mov    ecx,eax
9249:	c6 44 24 28 00       	mov    BYTE PTR [rsp+0x28],0x0
924e:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
9255:	00 00
9257:	c1 e9 10             	shr    ecx,0x10
925a:	a9 80 80 00 00       	test   eax,0x8080
925f:	c6 44 24 34 00       	mov    BYTE PTR [rsp+0x34],0x0
9264:	0f 44 c1             	cmove  eax,ecx
9267:	48 8d 4a 02          	lea    rcx,[rdx+0x2]
926b:	49 89 df             	mov    r15,rbx
926e:	89 c6                	mov    esi,eax
9270:	48 0f 44 d1          	cmove  rdx,rcx
9274:	40 00 c6             	add    sil,al
9277:	48 83 da 03          	sbb    rdx,0x3
927b:	48 39 da             	cmp    rdx,rbx
927e:	48 89 54 24 20       	mov    QWORD PTR [rsp+0x20],rdx
9283:	0f 86 57 03 00 00    	jbe    95e0 <trim2+0x550>
9289:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
928e:	4c 8d 35 0b 77 00 00 	lea    r14,[rip+0x770b]        # 109a0 <is_basic_table>
9295:	4c 8d 6d 0c          	lea    r13,[rbp+0xc]
9299:	eb 6c                	jmp    9307 <trim2+0x277>
929b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
92a0:	41 0f b6 0f          	movzx  ecx,BYTE PTR [r15]
92a4:	89 c8                	mov    eax,ecx
92a6:	c0 e8 05             	shr    al,0x5
92a9:	83 e0 07             	and    eax,0x7
92ac:	41 8b 04 86          	mov    eax,DWORD PTR [r14+rax*4]
92b0:	0f a3 c8             	bt     eax,ecx
92b3:	0f 83 bf 02 00 00    	jae    9578 <trim2+0x4e8>
92b9:	48 c7 44 24 40 01 00 	mov    QWORD PTR [rsp+0x40],0x1
92c0:	00 00
92c2:	41 0f be 07          	movsx  eax,BYTE PTR [r15]
92c6:	4c 8b 7c 24 38       	mov    r15,QWORD PTR [rsp+0x38]
92cb:	c6 44 24 48 01       	mov    BYTE PTR [rsp+0x48],0x1
92d0:	c6 44 24 34 01       	mov    BYTE PTR [rsp+0x34],0x1
92d5:	89 44 24 4c          	mov    DWORD PTR [rsp+0x4c],eax
92d9:	8b 7c 24 4c          	mov    edi,DWORD PTR [rsp+0x4c]
92dd:	e8 be 8e ff ff       	call   21a0 <iswspace@plt>
92e2:	85 c0                	test   eax,eax
92e4:	0f 84 f6 02 00 00    	je     95e0 <trim2+0x550>
92ea:	4c 03 7c 24 40       	add    r15,QWORD PTR [rsp+0x40]
92ef:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
92f4:	c6 44 24 34 00       	mov    BYTE PTR [rsp+0x34],0x0
92f9:	49 39 d7             	cmp    r15,rdx
92fc:	4c 89 7c 24 38       	mov    QWORD PTR [rsp+0x38],r15
9301:	0f 83 d9 02 00 00    	jae    95e0 <trim2+0x550>
9307:	80 7c 24 28 00       	cmp    BYTE PTR [rsp+0x28],0x0
930c:	74 92                	je     92a0 <trim2+0x210>
930e:	48 8d 4d 0c          	lea    rcx,[rbp+0xc]
9312:	48 8d 7d 2c          	lea    rdi,[rbp+0x2c]
9316:	4c 29 fa             	sub    rdx,r15
9319:	4c 89 fe             	mov    rsi,r15
931c:	e8 cf 0c 00 00       	call   9ff0 <rpl_mbrtowc>
9321:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
9325:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
932a:	0f 84 98 02 00 00    	je     95c8 <trim2+0x538>
9330:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
9334:	4c 8b 7c 24 38       	mov    r15,QWORD PTR [rsp+0x38]
9339:	0f 84 01 03 00 00    	je     9640 <trim2+0x5b0>
933f:	48 85 c0             	test   rax,rax
9342:	75 1f                	jne    9363 <trim2+0x2d3>
9344:	48 c7 44 24 40 01 00 	mov    QWORD PTR [rsp+0x40],0x1
934b:	00 00
934d:	41 80 3f 00          	cmp    BYTE PTR [r15],0x0
9351:	0f 85 49 03 00 00    	jne    96a0 <trim2+0x610>
9357:	8b 54 24 4c          	mov    edx,DWORD PTR [rsp+0x4c]
935b:	85 d2                	test   edx,edx
935d:	0f 85 38 03 00 00    	jne    969b <trim2+0x60b>
9363:	48 8d 7d 0c          	lea    rdi,[rbp+0xc]
9367:	c6 44 24 48 01       	mov    BYTE PTR [rsp+0x48],0x1
936c:	e8 3f 8f ff ff       	call   22b0 <mbsinit@plt>
9371:	85 c0                	test   eax,eax
9373:	0f 84 e7 02 00 00    	je     9660 <trim2+0x5d0>
9379:	c6 44 24 28 00       	mov    BYTE PTR [rsp+0x28],0x0
937e:	c6 44 24 34 01       	mov    BYTE PTR [rsp+0x34],0x1
9383:	e9 51 ff ff ff       	jmp    92d9 <trim2+0x249>
9388:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
938f:	00
9390:	41 83 ff 02          	cmp    r15d,0x2
9394:	75 0a                	jne    93a0 <trim2+0x310>
9396:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
939b:	c6 00 00             	mov    BYTE PTR [rax],0x0
939e:	66 90                	xchg   ax,ax
93a0:	48 89 d8             	mov    rax,rbx
93a3:	48 8b 5c 24 68       	mov    rbx,QWORD PTR [rsp+0x68]
93a8:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
93af:	00 00
93b1:	0f 85 bb 02 00 00    	jne    9672 <trim2+0x5e2>
93b7:	48 83 c4 78          	add    rsp,0x78
93bb:	5b                   	pop    rbx
93bc:	5d                   	pop    rbp
93bd:	41 5c                	pop    r12
93bf:	41 5d                	pop    r13
93c1:	41 5e                	pop    r14
93c3:	41 5f                	pop    r15
93c5:	c3                   	ret
93c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
93cd:	00 00 00
93d0:	45 85 e4             	test   r12d,r12d
93d3:	74 51                	je     9426 <trim2+0x396>
93d5:	0f b6 2b             	movzx  ebp,BYTE PTR [rbx]
93d8:	40 84 ed             	test   bpl,bpl
93db:	0f 84 89 02 00 00    	je     966a <trim2+0x5da>
93e1:	e8 ea 8e ff ff       	call   22d0 <__ctype_b_loc@plt>
93e6:	49 89 dd             	mov    r13,rbx
93e9:	48 8b 00             	mov    rax,QWORD PTR [rax]
93ec:	eb 10                	jmp    93fe <trim2+0x36e>
93ee:	66 90                	xchg   ax,ax
93f0:	49 83 c5 01          	add    r13,0x1
93f4:	41 0f b6 6d 00       	movzx  ebp,BYTE PTR [r13+0x0]
93f9:	40 84 ed             	test   bpl,bpl
93fc:	74 07                	je     9405 <trim2+0x375>
93fe:	f6 44 68 01 20       	test   BYTE PTR [rax+rbp*2+0x1],0x20
9403:	75 eb                	jne    93f0 <trim2+0x360>
9405:	4c 89 ef             	mov    rdi,r13
9408:	e8 f3 8a ff ff       	call   1f00 <strlen@plt>
940d:	48 8d 50 01          	lea    rdx,[rax+0x1]
9411:	4c 89 ee             	mov    rsi,r13
9414:	48 89 df             	mov    rdi,rbx
9417:	e8 b4 8d ff ff       	call   21d0 <memmove@plt>
941c:	41 83 fc 01          	cmp    r12d,0x1
9420:	0f 84 7a ff ff ff    	je     93a0 <trim2+0x310>
9426:	48 89 da             	mov    rdx,rbx
9429:	8b 0a                	mov    ecx,DWORD PTR [rdx]
942b:	48 83 c2 04          	add    rdx,0x4
942f:	8d 81 ff fe fe fe    	lea    eax,[rcx-0x1010101]
9435:	f7 d1                	not    ecx
9437:	21 c8                	and    eax,ecx
9439:	25 80 80 80 80       	and    eax,0x80808080
943e:	74 e9                	je     9429 <trim2+0x399>
9440:	89 c1                	mov    ecx,eax
9442:	c1 e9 10             	shr    ecx,0x10
9445:	a9 80 80 00 00       	test   eax,0x8080
944a:	0f 44 c1             	cmove  eax,ecx
944d:	48 8d 4a 02          	lea    rcx,[rdx+0x2]
9451:	89 c6                	mov    esi,eax
9453:	48 0f 44 d1          	cmove  rdx,rcx
9457:	40 00 c6             	add    sil,al
945a:	48 83 da 03          	sbb    rdx,0x3
945e:	48 8d 6a ff          	lea    rbp,[rdx-0x1]
9462:	48 39 eb             	cmp    rbx,rbp
9465:	0f 87 35 ff ff ff    	ja     93a0 <trim2+0x310>
946b:	e8 60 8e ff ff       	call   22d0 <__ctype_b_loc@plt>
9470:	48 8b 10             	mov    rdx,QWORD PTR [rax]
9473:	eb 14                	jmp    9489 <trim2+0x3f9>
9475:	0f 1f 00             	nop    DWORD PTR [rax]
9478:	c6 45 00 00          	mov    BYTE PTR [rbp+0x0],0x0
947c:	48 83 ed 01          	sub    rbp,0x1
9480:	48 39 eb             	cmp    rbx,rbp
9483:	0f 87 17 ff ff ff    	ja     93a0 <trim2+0x310>
9489:	0f b6 45 00          	movzx  eax,BYTE PTR [rbp+0x0]
948d:	f6 44 42 01 20       	test   BYTE PTR [rdx+rax*2+0x1],0x20
9492:	75 e4                	jne    9478 <trim2+0x3e8>
9494:	e9 07 ff ff ff       	jmp    93a0 <trim2+0x310>
9499:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
94a0:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
94a5:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
94aa:	e8 01 8e ff ff       	call   22b0 <mbsinit@plt>
94af:	85 c0                	test   eax,eax
94b1:	0f 84 c5 01 00 00    	je     967c <trim2+0x5ec>
94b7:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
94bc:	c6 44 24 28 01       	mov    BYTE PTR [rsp+0x28],0x1
94c1:	48 8d 4d 0c          	lea    rcx,[rbp+0xc]
94c5:	4c 89 f2             	mov    rdx,r14
94c8:	48 8d 7d 2c          	lea    rdi,[rbp+0x2c]
94cc:	48 29 f2             	sub    rdx,rsi
94cf:	e8 1c 0b 00 00       	call   9ff0 <rpl_mbrtowc>
94d4:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
94d8:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
94dd:	0f 84 bd 00 00 00    	je     95a0 <trim2+0x510>
94e3:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
94e7:	4c 8b 64 24 38       	mov    r12,QWORD PTR [rsp+0x38]
94ec:	0f 84 2e 01 00 00    	je     9620 <trim2+0x590>
94f2:	48 85 c0             	test   rax,rax
94f5:	75 20                	jne    9517 <trim2+0x487>
94f7:	48 c7 44 24 40 01 00 	mov    QWORD PTR [rsp+0x40],0x1
94fe:	00 00
9500:	41 80 3c 24 00       	cmp    BYTE PTR [r12],0x0
9505:	0f 85 95 01 00 00    	jne    96a0 <trim2+0x610>
950b:	8b 44 24 4c          	mov    eax,DWORD PTR [rsp+0x4c]
950f:	85 c0                	test   eax,eax
9511:	0f 85 84 01 00 00    	jne    969b <trim2+0x60b>
9517:	48 8d 7d 0c          	lea    rdi,[rbp+0xc]
951b:	c6 44 24 48 01       	mov    BYTE PTR [rsp+0x48],0x1
9520:	e8 8b 8d ff ff       	call   22b0 <mbsinit@plt>
9525:	85 c0                	test   eax,eax
9527:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
952c:	74 05                	je     9533 <trim2+0x4a3>
952e:	c6 44 24 28 00       	mov    BYTE PTR [rsp+0x28],0x0
9533:	4c 8b 6c 24 40       	mov    r13,QWORD PTR [rsp+0x40]
9538:	e9 9f fc ff ff       	jmp    91dc <trim2+0x14c>
953d:	0f 1f 00             	nop    DWORD PTR [rax]
9540:	80 7c 24 48 00       	cmp    BYTE PTR [rsp+0x48],0x0
9545:	0f 84 2c fc ff ff    	je     9177 <trim2+0xe7>
954b:	8b 7c 24 4c          	mov    edi,DWORD PTR [rsp+0x4c]
954f:	e8 4c 8c ff ff       	call   21a0 <iswspace@plt>
9554:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
9559:	85 c0                	test   eax,eax
955b:	b8 02 00 00 00       	mov    eax,0x2
9560:	44 0f 45 f8          	cmovne r15d,eax
9564:	49 0f 45 f4          	cmovne rsi,r12
9568:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
956d:	e9 05 fc ff ff       	jmp    9177 <trim2+0xe7>
9572:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
9578:	4c 89 ef             	mov    rdi,r13
957b:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
9580:	e8 2b 8d ff ff       	call   22b0 <mbsinit@plt>
9585:	85 c0                	test   eax,eax
9587:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
958c:	0f 84 ea 00 00 00    	je     967c <trim2+0x5ec>
9592:	c6 44 24 28 01       	mov    BYTE PTR [rsp+0x28],0x1
9597:	e9 72 fd ff ff       	jmp    930e <trim2+0x27e>
959c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
95a0:	48 c7 44 24 40 01 00 	mov    QWORD PTR [rsp+0x40],0x1
95a7:	00 00
95a9:	c6 44 24 48 00       	mov    BYTE PTR [rsp+0x48],0x0
95ae:	41 bd 01 00 00 00    	mov    r13d,0x1
95b4:	4c 8b 64 24 38       	mov    r12,QWORD PTR [rsp+0x38]
95b9:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
95be:	e9 19 fc ff ff       	jmp    91dc <trim2+0x14c>
95c3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
95c8:	4c 8b 7c 24 38       	mov    r15,QWORD PTR [rsp+0x38]
95cd:	48 c7 44 24 40 01 00 	mov    QWORD PTR [rsp+0x40],0x1
95d4:	00 00
95d6:	c6 44 24 48 00       	mov    BYTE PTR [rsp+0x48],0x0
95db:	c6 44 24 34 01       	mov    BYTE PTR [rsp+0x34],0x1
95e0:	4c 89 ff             	mov    rdi,r15
95e3:	e8 18 89 ff ff       	call   1f00 <strlen@plt>
95e8:	48 8d 50 01          	lea    rdx,[rax+0x1]
95ec:	4c 89 fe             	mov    rsi,r15
95ef:	48 89 df             	mov    rdi,rbx
95f2:	e8 d9 8b ff ff       	call   21d0 <memmove@plt>
95f7:	41 83 fc 01          	cmp    r12d,0x1
95fb:	0f 84 9f fd ff ff    	je     93a0 <trim2+0x310>
9601:	e9 d4 fa ff ff       	jmp    90da <trim2+0x4a>
9606:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
960d:	00 00 00
9610:	41 bf 01 00 00 00    	mov    r15d,0x1
9616:	e9 5c fb ff ff       	jmp    9177 <trim2+0xe7>
961b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
9620:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
9625:	c6 44 24 48 00       	mov    BYTE PTR [rsp+0x48],0x0
962a:	4d 89 f5             	mov    r13,r14
962d:	4d 29 e5             	sub    r13,r12
9630:	4c 89 6c 24 40       	mov    QWORD PTR [rsp+0x40],r13
9635:	e9 a2 fb ff ff       	jmp    91dc <trim2+0x14c>
963a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
9640:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
9645:	c6 44 24 48 00       	mov    BYTE PTR [rsp+0x48],0x0
964a:	c6 44 24 34 01       	mov    BYTE PTR [rsp+0x34],0x1
964f:	4c 29 f8             	sub    rax,r15
9652:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
9657:	eb 87                	jmp    95e0 <trim2+0x550>
9659:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
9660:	c6 44 24 34 01       	mov    BYTE PTR [rsp+0x34],0x1
9665:	e9 6f fc ff ff       	jmp    92d9 <trim2+0x249>
966a:	49 89 dd             	mov    r13,rbx
966d:	e9 93 fd ff ff       	jmp    9405 <trim2+0x375>
9672:	e8 a9 88 ff ff       	call   1f20 <__stack_chk_fail@plt>
9677:	e8 b4 08 00 00       	call   9f30 <xalloc_die>
967c:	48 8d 0d 6d 6f 00 00 	lea    rcx,[rip+0x6f6d]        # 105f0 <__PRETTY_FUNCTION__.5134>
9683:	48 8d 35 3e 6f 00 00 	lea    rsi,[rip+0x6f3e]        # 105c8 <quoting_style_vals+0x28>
968a:	48 8d 3d f9 69 00 00 	lea    rdi,[rip+0x69f9]        # 1008a <primes_diff+0x32a>
9691:	ba 8e 00 00 00       	mov    edx,0x8e
9696:	e8 45 89 ff ff       	call   1fe0 <__assert_fail@plt>
969b:	e8 93 8c ff ff       	call   2333 <mbiter_multi_next.part.0>
96a0:	48 8d 0d 49 6f 00 00 	lea    rcx,[rip+0x6f49]        # 105f0 <__PRETTY_FUNCTION__.5134>
96a7:	48 8d 35 1a 6f 00 00 	lea    rsi,[rip+0x6f1a]        # 105c8 <quoting_style_vals+0x28>
96ae:	48 8d 3d ec 69 00 00 	lea    rdi,[rip+0x69ec]        # 100a1 <primes_diff+0x341>
96b5:	ba a9 00 00 00       	mov    edx,0xa9
96ba:	e8 21 89 ff ff       	call   1fe0 <__assert_fail@plt>
96bf:	90                   	nop

00000000000096c0 <version_etc_arn>:
96c0:	41 57                	push   r15
96c2:	41 56                	push   r14
96c4:	41 55                	push   r13
96c6:	41 54                	push   r12
96c8:	4d 89 cc             	mov    r12,r9
96cb:	55                   	push   rbp
96cc:	53                   	push   rbx
96cd:	48 89 fd             	mov    rbp,rdi
96d0:	4c 89 c3             	mov    rbx,r8
96d3:	48 83 ec 28          	sub    rsp,0x28
96d7:	48 85 f6             	test   rsi,rsi
96da:	0f 84 18 01 00 00    	je     97f8 <version_etc_arn+0x138>
96e0:	49 89 d0             	mov    r8,rdx
96e3:	48 8d 15 18 6f 00 00 	lea    rdx,[rip+0x6f18]        # 10602 <__PRETTY_FUNCTION__.5134+0x12>
96ea:	49 89 c9             	mov    r9,rcx
96ed:	31 c0                	xor    eax,eax
96ef:	48 89 f1             	mov    rcx,rsi
96f2:	be 01 00 00 00       	mov    esi,0x1
96f7:	e8 54 8b ff ff       	call   2250 <__fprintf_chk@plt>
96fc:	48 8d 35 12 6f 00 00 	lea    rsi,[rip+0x6f12]        # 10615 <__PRETTY_FUNCTION__.5134+0x25>
9703:	31 ff                	xor    edi,edi
9705:	ba 05 00 00 00       	mov    edx,0x5
970a:	e8 d1 87 ff ff       	call   1ee0 <dcgettext@plt>
970f:	48 8d 15 2a 72 00 00 	lea    rdx,[rip+0x722a]        # 10940 <version_etc_copyright>
9716:	48 89 c1             	mov    rcx,rax
9719:	41 b8 e3 07 00 00    	mov    r8d,0x7e3
971f:	be 01 00 00 00       	mov    esi,0x1
9724:	48 89 ef             	mov    rdi,rbp
9727:	31 c0                	xor    eax,eax
9729:	e8 22 8b ff ff       	call   2250 <__fprintf_chk@plt>
972e:	48 8d 35 6b 6f 00 00 	lea    rsi,[rip+0x6f6b]        # 106a0 <__PRETTY_FUNCTION__.5134+0xb0>
9735:	31 ff                	xor    edi,edi
9737:	ba 05 00 00 00       	mov    edx,0x5
973c:	e8 9f 87 ff ff       	call   1ee0 <dcgettext@plt>
9741:	48 89 ee             	mov    rsi,rbp
9744:	48 89 c7             	mov    rdi,rax
9747:	e8 04 89 ff ff       	call   2050 <fputs_unlocked@plt>
974c:	49 83 fc 09          	cmp    r12,0x9
9750:	0f 87 3a 03 00 00    	ja     9a90 <version_etc_arn+0x3d0>
9756:	48 8d 15 a3 71 00 00 	lea    rdx,[rip+0x71a3]        # 10900 <__PRETTY_FUNCTION__.5134+0x310>
975d:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
9761:	48 01 d0             	add    rax,rdx
9764:	ff e0                	jmp    rax
9766:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
976d:	00 00 00
9770:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
9774:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
9778:	48 8d 35 91 70 00 00 	lea    rsi,[rip+0x7091]        # 10810 <__PRETTY_FUNCTION__.5134+0x220>
977f:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
9783:	ba 05 00 00 00       	mov    edx,0x5
9788:	31 ff                	xor    edi,edi
978a:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
978e:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
9792:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
9797:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
979b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
979f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
97a3:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
97a8:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
97ab:	e8 30 87 ff ff       	call   1ee0 <dcgettext@plt>
97b0:	48 83 ec 08          	sub    rsp,0x8
97b4:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
97b9:	48 89 c2             	mov    rdx,rax
97bc:	48 89 d9             	mov    rcx,rbx
97bf:	be 01 00 00 00       	mov    esi,0x1
97c4:	48 89 ef             	mov    rdi,rbp
97c7:	31 c0                	xor    eax,eax
97c9:	41 51                	push   r9
97cb:	41 55                	push   r13
97cd:	41 54                	push   r12
97cf:	41 57                	push   r15
97d1:	41 56                	push   r14
97d3:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
97d8:	4c 8b 44 24 38       	mov    r8,QWORD PTR [rsp+0x38]
97dd:	e8 6e 8a ff ff       	call   2250 <__fprintf_chk@plt>
97e2:	48 83 c4 30          	add    rsp,0x30
97e6:	48 83 c4 28          	add    rsp,0x28
97ea:	5b                   	pop    rbx
97eb:	5d                   	pop    rbp
97ec:	41 5c                	pop    r12
97ee:	41 5d                	pop    r13
97f0:	41 5e                	pop    r14
97f2:	41 5f                	pop    r15
97f4:	c3                   	ret
97f5:	0f 1f 00             	nop    DWORD PTR [rax]
97f8:	49 89 c8             	mov    r8,rcx
97fb:	48 89 d1             	mov    rcx,rdx
97fe:	48 8d 15 09 6e 00 00 	lea    rdx,[rip+0x6e09]        # 1060e <__PRETTY_FUNCTION__.5134+0x1e>
9805:	be 01 00 00 00       	mov    esi,0x1
980a:	31 c0                	xor    eax,eax
980c:	e8 3f 8a ff ff       	call   2250 <__fprintf_chk@plt>
9811:	e9 e6 fe ff ff       	jmp    96fc <version_etc_arn+0x3c>
9816:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
981d:	00 00 00
9820:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
9824:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
9828:	48 8d 35 11 70 00 00 	lea    rsi,[rip+0x7011]        # 10840 <__PRETTY_FUNCTION__.5134+0x250>
982f:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
9833:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
9837:	ba 05 00 00 00       	mov    edx,0x5
983c:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
9840:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
9844:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
9848:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
984c:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
984f:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
9854:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
9859:	48 89 04 24          	mov    QWORD PTR [rsp],rax
985d:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
9862:	31 ff                	xor    edi,edi
9864:	e8 77 86 ff ff       	call   1ee0 <dcgettext@plt>
9869:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
986e:	41 52                	push   r10
9870:	e9 3f ff ff ff       	jmp    97b4 <version_etc_arn+0xf4>
9875:	0f 1f 00             	nop    DWORD PTR [rax]
9878:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
987b:	48 8d 35 97 6d 00 00 	lea    rsi,[rip+0x6d97]        # 10619 <__PRETTY_FUNCTION__.5134+0x29>
9882:	ba 05 00 00 00       	mov    edx,0x5
9887:	31 ff                	xor    edi,edi
9889:	e8 52 86 ff ff       	call   1ee0 <dcgettext@plt>
988e:	48 83 c4 28          	add    rsp,0x28
9892:	48 89 d9             	mov    rcx,rbx
9895:	48 89 ef             	mov    rdi,rbp
9898:	5b                   	pop    rbx
9899:	5d                   	pop    rbp
989a:	41 5c                	pop    r12
989c:	41 5d                	pop    r13
989e:	41 5e                	pop    r14
98a0:	41 5f                	pop    r15
98a2:	48 89 c2             	mov    rdx,rax
98a5:	be 01 00 00 00       	mov    esi,0x1
98aa:	31 c0                	xor    eax,eax
98ac:	e9 9f 89 ff ff       	jmp    2250 <__fprintf_chk@plt>
98b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
98b8:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
98bc:	48 8d 35 66 6d 00 00 	lea    rsi,[rip+0x6d66]        # 10629 <__PRETTY_FUNCTION__.5134+0x39>
98c3:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
98c6:	ba 05 00 00 00       	mov    edx,0x5
98cb:	31 ff                	xor    edi,edi
98cd:	e8 0e 86 ff ff       	call   1ee0 <dcgettext@plt>
98d2:	48 83 c4 28          	add    rsp,0x28
98d6:	4d 89 e0             	mov    r8,r12
98d9:	48 89 d9             	mov    rcx,rbx
98dc:	48 89 ef             	mov    rdi,rbp
98df:	48 89 c2             	mov    rdx,rax
98e2:	be 01 00 00 00       	mov    esi,0x1
98e7:	5b                   	pop    rbx
98e8:	5d                   	pop    rbp
98e9:	41 5c                	pop    r12
98eb:	41 5d                	pop    r13
98ed:	41 5e                	pop    r14
98ef:	41 5f                	pop    r15
98f1:	31 c0                	xor    eax,eax
98f3:	e9 58 89 ff ff       	jmp    2250 <__fprintf_chk@plt>
98f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
98ff:	00
9900:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
9904:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
9908:	48 8d 35 31 6d 00 00 	lea    rsi,[rip+0x6d31]        # 10640 <__PRETTY_FUNCTION__.5134+0x50>
990f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
9912:	ba 05 00 00 00       	mov    edx,0x5
9917:	31 ff                	xor    edi,edi
9919:	e8 c2 85 ff ff       	call   1ee0 <dcgettext@plt>
991e:	48 83 c4 28          	add    rsp,0x28
9922:	4d 89 e9             	mov    r9,r13
9925:	4d 89 e0             	mov    r8,r12
9928:	48 89 d9             	mov    rcx,rbx
992b:	48 89 ef             	mov    rdi,rbp
992e:	48 89 c2             	mov    rdx,rax
9931:	5b                   	pop    rbx
9932:	5d                   	pop    rbp
9933:	41 5c                	pop    r12
9935:	41 5d                	pop    r13
9937:	41 5e                	pop    r14
9939:	41 5f                	pop    r15
993b:	be 01 00 00 00       	mov    esi,0x1
9940:	31 c0                	xor    eax,eax
9942:	e9 09 89 ff ff       	jmp    2250 <__fprintf_chk@plt>
9947:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
994e:	00 00
9950:	48 8d 35 19 6e 00 00 	lea    rsi,[rip+0x6e19]        # 10770 <__PRETTY_FUNCTION__.5134+0x180>
9957:	ba 05 00 00 00       	mov    edx,0x5
995c:	31 ff                	xor    edi,edi
995e:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
9962:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
9966:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
996a:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
996d:	e8 6e 85 ff ff       	call   1ee0 <dcgettext@plt>
9972:	48 83 ec 08          	sub    rsp,0x8
9976:	41 56                	push   r14
9978:	48 89 c2             	mov    rdx,rax
997b:	4d 89 e9             	mov    r9,r13
997e:	4d 89 e0             	mov    r8,r12
9981:	48 89 d9             	mov    rcx,rbx
9984:	48 89 ef             	mov    rdi,rbp
9987:	be 01 00 00 00       	mov    esi,0x1
998c:	31 c0                	xor    eax,eax
998e:	e8 bd 88 ff ff       	call   2250 <__fprintf_chk@plt>
9993:	58                   	pop    rax
9994:	5a                   	pop    rdx
9995:	48 83 c4 28          	add    rsp,0x28
9999:	5b                   	pop    rbx
999a:	5d                   	pop    rbp
999b:	41 5c                	pop    r12
999d:	41 5d                	pop    r13
999f:	41 5e                	pop    r14
99a1:	41 5f                	pop    r15
99a3:	c3                   	ret
99a4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
99a8:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
99ac:	48 8d 35 dd 6d 00 00 	lea    rsi,[rip+0x6ddd]        # 10790 <__PRETTY_FUNCTION__.5134+0x1a0>
99b3:	ba 05 00 00 00       	mov    edx,0x5
99b8:	31 ff                	xor    edi,edi
99ba:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
99be:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
99c2:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
99c6:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
99c9:	e8 12 85 ff ff       	call   1ee0 <dcgettext@plt>
99ce:	41 57                	push   r15
99d0:	eb a4                	jmp    9976 <version_etc_arn+0x2b6>
99d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
99d8:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
99dc:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
99e0:	48 8d 35 d1 6d 00 00 	lea    rsi,[rip+0x6dd1]        # 107b8 <__PRETTY_FUNCTION__.5134+0x1c8>
99e7:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
99eb:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
99ef:	ba 05 00 00 00       	mov    edx,0x5
99f4:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
99f8:	31 ff                	xor    edi,edi
99fa:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
99fd:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
9a01:	e8 da 84 ff ff       	call   1ee0 <dcgettext@plt>
9a06:	48 83 ec 08          	sub    rsp,0x8
9a0a:	4d 89 e9             	mov    r9,r13
9a0d:	41 54                	push   r12
9a0f:	41 57                	push   r15
9a11:	41 56                	push   r14
9a13:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
9a18:	48 89 d9             	mov    rcx,rbx
9a1b:	48 89 c2             	mov    rdx,rax
9a1e:	48 89 ef             	mov    rdi,rbp
9a21:	be 01 00 00 00       	mov    esi,0x1
9a26:	31 c0                	xor    eax,eax
9a28:	e8 23 88 ff ff       	call   2250 <__fprintf_chk@plt>
9a2d:	48 83 c4 20          	add    rsp,0x20
9a31:	48 83 c4 28          	add    rsp,0x28
9a35:	5b                   	pop    rbx
9a36:	5d                   	pop    rbp
9a37:	41 5c                	pop    r12
9a39:	41 5d                	pop    r13
9a3b:	41 5e                	pop    r14
9a3d:	41 5f                	pop    r15
9a3f:	c3                   	ret
9a40:	4c 8b 4b 10          	mov    r9,QWORD PTR [rbx+0x10]
9a44:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
9a48:	48 8d 35 91 6d 00 00 	lea    rsi,[rip+0x6d91]        # 107e0 <__PRETTY_FUNCTION__.5134+0x1f0>
9a4f:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
9a53:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
9a57:	ba 05 00 00 00       	mov    edx,0x5
9a5c:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
9a60:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
9a64:	31 ff                	xor    edi,edi
9a66:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
9a6b:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
9a6e:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
9a72:	e8 69 84 ff ff       	call   1ee0 <dcgettext@plt>
9a77:	41 55                	push   r13
9a79:	41 54                	push   r12
9a7b:	41 57                	push   r15
9a7d:	41 56                	push   r14
9a7f:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
9a84:	eb 8d                	jmp    9a13 <version_etc_arn+0x353>
9a86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9a8d:	00 00 00
9a90:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
9a94:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
9a98:	ba 05 00 00 00       	mov    edx,0x5
9a9d:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
9aa1:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
9aa5:	48 8d 35 cc 6d 00 00 	lea    rsi,[rip+0x6dcc]        # 10878 <__PRETTY_FUNCTION__.5134+0x288>
9aac:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
9ab0:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
9ab4:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
9ab8:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
9abc:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
9ac1:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
9ac6:	48 89 04 24          	mov    QWORD PTR [rsp],rax
9aca:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
9acf:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
9ad2:	e9 8b fd ff ff       	jmp    9862 <version_etc_arn+0x1a2>
9ad7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
9ade:	00 00

0000000000009ae0 <version_etc_ar>:
9ae0:	45 31 c9             	xor    r9d,r9d
9ae3:	49 83 38 00          	cmp    QWORD PTR [r8],0x0
9ae7:	74 12                	je     9afb <version_etc_ar+0x1b>
9ae9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
9af0:	49 83 c1 01          	add    r9,0x1
9af4:	4b 83 3c c8 00       	cmp    QWORD PTR [r8+r9*8],0x0
9af9:	75 f5                	jne    9af0 <version_etc_ar+0x10>
9afb:	e9 c0 fb ff ff       	jmp    96c0 <version_etc_arn>

0000000000009b00 <version_etc_va>:
9b00:	48 83 ec 68          	sub    rsp,0x68
9b04:	4d 89 c2             	mov    r10,r8
9b07:	45 31 c9             	xor    r9d,r9d
9b0a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
9b11:	00 00
9b13:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
9b18:	31 c0                	xor    eax,eax
9b1a:	49 89 e0             	mov    r8,rsp
9b1d:	0f 1f 00             	nop    DWORD PTR [rax]
9b20:	41 8b 02             	mov    eax,DWORD PTR [r10]
9b23:	83 f8 2f             	cmp    eax,0x2f
9b26:	77 42                	ja     9b6a <version_etc_va+0x6a>
9b28:	41 89 c3             	mov    r11d,eax
9b2b:	4d 03 5a 10          	add    r11,QWORD PTR [r10+0x10]
9b2f:	83 c0 08             	add    eax,0x8
9b32:	41 89 02             	mov    DWORD PTR [r10],eax
9b35:	49 8b 03             	mov    rax,QWORD PTR [r11]
9b38:	48 85 c0             	test   rax,rax
9b3b:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
9b3f:	74 0a                	je     9b4b <version_etc_va+0x4b>
9b41:	49 83 c1 01          	add    r9,0x1
9b45:	49 83 f9 0a          	cmp    r9,0xa
9b49:	75 d5                	jne    9b20 <version_etc_va+0x20>
9b4b:	e8 70 fb ff ff       	call   96c0 <version_etc_arn>
9b50:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
9b55:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
9b5c:	00 00
9b5e:	75 05                	jne    9b65 <version_etc_va+0x65>
9b60:	48 83 c4 68          	add    rsp,0x68
9b64:	c3                   	ret
9b65:	e8 b6 83 ff ff       	call   1f20 <__stack_chk_fail@plt>
9b6a:	4d 8b 5a 08          	mov    r11,QWORD PTR [r10+0x8]
9b6e:	49 8d 43 08          	lea    rax,[r11+0x8]
9b72:	49 89 42 08          	mov    QWORD PTR [r10+0x8],rax
9b76:	eb bd                	jmp    9b35 <version_etc_va+0x35>
9b78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
9b7f:	00

0000000000009b80 <version_etc>:
9b80:	55                   	push   rbp
9b81:	53                   	push   rbx
9b82:	41 ba 20 00 00 00    	mov    r10d,0x20
9b88:	45 31 db             	xor    r11d,r11d
9b8b:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
9b92:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
9b99:	00 00
9b9b:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
9ba0:	31 c0                	xor    eax,eax
9ba2:	48 8d 84 24 d0 00 00 	lea    rax,[rsp+0xd0]
9ba9:	00
9baa:	4c 89 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],r8
9bb1:	00
9bb2:	48 8d 9c 24 d0 00 00 	lea    rbx,[rsp+0xd0]
9bb9:	00
9bba:	4c 8d 44 24 20       	lea    r8,[rsp+0x20]
9bbf:	4c 89 8c 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],r9
9bc6:	00
9bc7:	c7 44 24 08 20 00 00 	mov    DWORD PTR [rsp+0x8],0x20
9bce:	00
9bcf:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
9bd4:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
9bdb:	00
9bdc:	45 31 c9             	xor    r9d,r9d
9bdf:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
9be4:	48 89 c5             	mov    rbp,rax
9be7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
9bee:	00 00
9bf0:	41 83 fa 2f          	cmp    r10d,0x2f
9bf4:	77 56                	ja     9c4c <version_etc+0xcc>
9bf6:	44 89 d0             	mov    eax,r10d
9bf9:	41 bb 01 00 00 00    	mov    r11d,0x1
9bff:	41 83 c2 08          	add    r10d,0x8
9c03:	48 01 e8             	add    rax,rbp
9c06:	48 8b 00             	mov    rax,QWORD PTR [rax]
9c09:	48 85 c0             	test   rax,rax
9c0c:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
9c10:	74 0a                	je     9c1c <version_etc+0x9c>
9c12:	49 83 c1 01          	add    r9,0x1
9c16:	49 83 f9 0a          	cmp    r9,0xa
9c1a:	75 d4                	jne    9bf0 <version_etc+0x70>
9c1c:	45 84 db             	test   r11b,r11b
9c1f:	75 24                	jne    9c45 <version_etc+0xc5>
9c21:	e8 9a fa ff ff       	call   96c0 <version_etc_arn>
9c26:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
9c2b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
9c32:	00 00
9c34:	75 0a                	jne    9c40 <version_etc+0xc0>
9c36:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
9c3d:	5b                   	pop    rbx
9c3e:	5d                   	pop    rbp
9c3f:	c3                   	ret
9c40:	e8 db 82 ff ff       	call   1f20 <__stack_chk_fail@plt>
9c45:	44 89 54 24 08       	mov    DWORD PTR [rsp+0x8],r10d
9c4a:	eb d5                	jmp    9c21 <version_etc+0xa1>
9c4c:	48 89 d8             	mov    rax,rbx
9c4f:	48 83 c3 08          	add    rbx,0x8
9c53:	eb b1                	jmp    9c06 <version_etc+0x86>
9c55:	90                   	nop
9c56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9c5d:	00 00 00

0000000000009c60 <emit_bug_reporting_address>:
9c60:	53                   	push   rbx
9c61:	48 8d 35 f4 69 00 00 	lea    rsi,[rip+0x69f4]        # 1065c <__PRETTY_FUNCTION__.5134+0x6c>
9c68:	ba 05 00 00 00       	mov    edx,0x5
9c6d:	31 ff                	xor    edi,edi
9c6f:	e8 6c 82 ff ff       	call   1ee0 <dcgettext@plt>
9c74:	48 8d 15 f6 69 00 00 	lea    rdx,[rip+0x69f6]        # 10671 <__PRETTY_FUNCTION__.5134+0x81>
9c7b:	48 89 c6             	mov    rsi,rax
9c7e:	bf 01 00 00 00       	mov    edi,0x1
9c83:	31 c0                	xor    eax,eax
9c85:	e8 e6 84 ff ff       	call   2170 <__printf_chk@plt>
9c8a:	48 8d 35 f6 69 00 00 	lea    rsi,[rip+0x69f6]        # 10687 <__PRETTY_FUNCTION__.5134+0x97>
9c91:	ba 05 00 00 00       	mov    edx,0x5
9c96:	31 ff                	xor    edi,edi
9c98:	e8 43 82 ff ff       	call   1ee0 <dcgettext@plt>
9c9d:	48 8d 0d 44 30 00 00 	lea    rcx,[rip+0x3044]        # cce8 <_IO_stdin_used+0x2a8>
9ca4:	48 8d 15 f0 31 00 00 	lea    rdx,[rip+0x31f0]        # ce9b <_IO_stdin_used+0x45b>
9cab:	48 89 c6             	mov    rsi,rax
9cae:	bf 01 00 00 00       	mov    edi,0x1
9cb3:	31 c0                	xor    eax,eax
9cb5:	e8 b6 84 ff ff       	call   2170 <__printf_chk@plt>
9cba:	48 8b 1d e7 93 20 00 	mov    rbx,QWORD PTR [rip+0x2093e7]        # 2130a8 <stdout@@GLIBC_2.2.5>
9cc1:	48 8d 35 f0 6b 00 00 	lea    rsi,[rip+0x6bf0]        # 108b8 <__PRETTY_FUNCTION__.5134+0x2c8>
9cc8:	31 ff                	xor    edi,edi
9cca:	ba 05 00 00 00       	mov    edx,0x5
9ccf:	e8 0c 82 ff ff       	call   1ee0 <dcgettext@plt>
9cd4:	48 89 de             	mov    rsi,rbx
9cd7:	48 89 c7             	mov    rdi,rax
9cda:	5b                   	pop    rbx
9cdb:	e9 70 83 ff ff       	jmp    2050 <fputs_unlocked@plt>

0000000000009ce0 <xmalloc>:
9ce0:	53                   	push   rbx
9ce1:	48 89 fb             	mov    rbx,rdi
9ce4:	e8 07 84 ff ff       	call   20f0 <malloc@plt>
9ce9:	48 85 c0             	test   rax,rax
9cec:	75 05                	jne    9cf3 <xmalloc+0x13>
9cee:	48 85 db             	test   rbx,rbx
9cf1:	75 02                	jne    9cf5 <xmalloc+0x15>
9cf3:	5b                   	pop    rbx
9cf4:	c3                   	ret
9cf5:	e8 36 02 00 00       	call   9f30 <xalloc_die>
9cfa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009d00 <xnmalloc>:
9d00:	48 89 f8             	mov    rax,rdi
9d03:	48 f7 e6             	mul    rsi
9d06:	48 89 c7             	mov    rdi,rax
9d09:	0f 90 c0             	seto   al
9d0c:	48 85 ff             	test   rdi,rdi
9d0f:	78 0a                	js     9d1b <xnmalloc+0x1b>
9d11:	0f b6 c0             	movzx  eax,al
9d14:	48 85 c0             	test   rax,rax
9d17:	75 02                	jne    9d1b <xnmalloc+0x1b>
9d19:	eb c5                	jmp    9ce0 <xmalloc>
9d1b:	48 83 ec 08          	sub    rsp,0x8
9d1f:	e8 0c 02 00 00       	call   9f30 <xalloc_die>
9d24:	66 90                	xchg   ax,ax
9d26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9d2d:	00 00 00

0000000000009d30 <xcharalloc>:
9d30:	eb ae                	jmp    9ce0 <xmalloc>
9d32:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
9d36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9d3d:	00 00 00

0000000000009d40 <xrealloc>:
9d40:	48 85 f6             	test   rsi,rsi
9d43:	53                   	push   rbx
9d44:	48 89 f3             	mov    rbx,rsi
9d47:	75 05                	jne    9d4e <xrealloc+0xe>
9d49:	48 85 ff             	test   rdi,rdi
9d4c:	75 1a                	jne    9d68 <xrealloc+0x28>
9d4e:	48 89 de             	mov    rsi,rbx
9d51:	e8 fa 83 ff ff       	call   2150 <realloc@plt>
9d56:	48 85 c0             	test   rax,rax
9d59:	75 05                	jne    9d60 <xrealloc+0x20>
9d5b:	48 85 db             	test   rbx,rbx
9d5e:	75 11                	jne    9d71 <xrealloc+0x31>
9d60:	5b                   	pop    rbx
9d61:	c3                   	ret
9d62:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
9d68:	e8 63 80 ff ff       	call   1dd0 <free@plt>
9d6d:	31 c0                	xor    eax,eax
9d6f:	5b                   	pop    rbx
9d70:	c3                   	ret
9d71:	e8 ba 01 00 00       	call   9f30 <xalloc_die>
9d76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9d7d:	00 00 00

0000000000009d80 <xnrealloc>:
9d80:	48 89 f0             	mov    rax,rsi
9d83:	48 f7 e2             	mul    rdx
9d86:	48 89 c6             	mov    rsi,rax
9d89:	0f 90 c0             	seto   al
9d8c:	48 85 f6             	test   rsi,rsi
9d8f:	78 0a                	js     9d9b <xnrealloc+0x1b>
9d91:	0f b6 c0             	movzx  eax,al
9d94:	48 85 c0             	test   rax,rax
9d97:	75 02                	jne    9d9b <xnrealloc+0x1b>
9d99:	eb a5                	jmp    9d40 <xrealloc>
9d9b:	48 83 ec 08          	sub    rsp,0x8
9d9f:	e8 8c 01 00 00       	call   9f30 <xalloc_die>
9da4:	66 90                	xchg   ax,ax
9da6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9dad:	00 00 00

0000000000009db0 <x2nrealloc>:
9db0:	48 85 ff             	test   rdi,rdi
9db3:	49 89 d1             	mov    r9,rdx
9db6:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
9db9:	74 35                	je     9df0 <x2nrealloc+0x40>
9dbb:	31 d2                	xor    edx,edx
9dbd:	48 b8 54 55 55 55 55 	movabs rax,0x5555555555555554
9dc4:	55 55 55
9dc7:	49 f7 f1             	div    r9
9dca:	48 39 c8             	cmp    rax,rcx
9dcd:	76 3c                	jbe    9e0b <x2nrealloc+0x5b>
9dcf:	48 89 c8             	mov    rax,rcx
9dd2:	48 d1 e8             	shr    rax,1
9dd5:	48 8d 4c 08 01       	lea    rcx,[rax+rcx*1+0x1]
9dda:	48 89 0e             	mov    QWORD PTR [rsi],rcx
9ddd:	49 0f af c9          	imul   rcx,r9
9de1:	48 89 ce             	mov    rsi,rcx
9de4:	e9 57 ff ff ff       	jmp    9d40 <xrealloc>
9de9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
9df0:	48 85 c9             	test   rcx,rcx
9df3:	74 23                	je     9e18 <x2nrealloc+0x68>
9df5:	48 89 c8             	mov    rax,rcx
9df8:	49 f7 e1             	mul    r9
9dfb:	0f 90 c2             	seto   dl
9dfe:	48 85 c0             	test   rax,rax
9e01:	0f b6 d2             	movzx  edx,dl
9e04:	78 05                	js     9e0b <x2nrealloc+0x5b>
9e06:	48 85 d2             	test   rdx,rdx
9e09:	74 cf                	je     9dda <x2nrealloc+0x2a>
9e0b:	48 83 ec 08          	sub    rsp,0x8
9e0f:	e8 1c 01 00 00       	call   9f30 <xalloc_die>
9e14:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
9e18:	31 d2                	xor    edx,edx
9e1a:	b8 80 00 00 00       	mov    eax,0x80
9e1f:	45 31 c0             	xor    r8d,r8d
9e22:	49 f7 f1             	div    r9
9e25:	48 85 c0             	test   rax,rax
9e28:	41 0f 94 c0          	sete   r8b
9e2c:	49 8d 0c 00          	lea    rcx,[r8+rax*1]
9e30:	eb c3                	jmp    9df5 <x2nrealloc+0x45>
9e32:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
9e36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9e3d:	00 00 00

0000000000009e40 <x2realloc>:
9e40:	48 85 ff             	test   rdi,rdi
9e43:	48 8b 06             	mov    rax,QWORD PTR [rsi]
9e46:	74 28                	je     9e70 <x2realloc+0x30>
9e48:	48 ba 53 55 55 55 55 	movabs rdx,0x5555555555555553
9e4f:	55 55 55
9e52:	48 39 d0             	cmp    rax,rdx
9e55:	77 2a                	ja     9e81 <x2realloc+0x41>
9e57:	48 89 c2             	mov    rdx,rax
9e5a:	48 d1 ea             	shr    rdx,1
9e5d:	48 8d 44 02 01       	lea    rax,[rdx+rax*1+0x1]
9e62:	48 89 06             	mov    QWORD PTR [rsi],rax
9e65:	48 89 c6             	mov    rsi,rax
9e68:	e9 d3 fe ff ff       	jmp    9d40 <xrealloc>
9e6d:	0f 1f 00             	nop    DWORD PTR [rax]
9e70:	48 85 c0             	test   rax,rax
9e73:	ba 80 00 00 00       	mov    edx,0x80
9e78:	48 0f 44 c2          	cmove  rax,rdx
9e7c:	48 85 c0             	test   rax,rax
9e7f:	79 e1                	jns    9e62 <x2realloc+0x22>
9e81:	48 83 ec 08          	sub    rsp,0x8
9e85:	e8 a6 00 00 00       	call   9f30 <xalloc_die>
9e8a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009e90 <xzalloc>:
9e90:	53                   	push   rbx
9e91:	48 89 fb             	mov    rbx,rdi
9e94:	e8 47 fe ff ff       	call   9ce0 <xmalloc>
9e99:	48 89 da             	mov    rdx,rbx
9e9c:	31 f6                	xor    esi,esi
9e9e:	48 89 c7             	mov    rdi,rax
9ea1:	5b                   	pop    rbx
9ea2:	e9 49 81 ff ff       	jmp    1ff0 <memset@plt>
9ea7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
9eae:	00 00

0000000000009eb0 <xcalloc>:
9eb0:	48 89 f8             	mov    rax,rdi
9eb3:	48 83 ec 08          	sub    rsp,0x8
9eb7:	48 f7 e6             	mul    rsi
9eba:	0f 90 c2             	seto   dl
9ebd:	48 85 c0             	test   rax,rax
9ec0:	78 17                	js     9ed9 <xcalloc+0x29>
9ec2:	0f b6 d2             	movzx  edx,dl
9ec5:	48 85 d2             	test   rdx,rdx
9ec8:	75 0f                	jne    9ed9 <xcalloc+0x29>
9eca:	e8 91 81 ff ff       	call   2060 <calloc@plt>
9ecf:	48 85 c0             	test   rax,rax
9ed2:	74 05                	je     9ed9 <xcalloc+0x29>
9ed4:	48 83 c4 08          	add    rsp,0x8
9ed8:	c3                   	ret
9ed9:	e8 52 00 00 00       	call   9f30 <xalloc_die>
9ede:	66 90                	xchg   ax,ax

0000000000009ee0 <xmemdup>:
9ee0:	55                   	push   rbp
9ee1:	53                   	push   rbx
9ee2:	48 89 fd             	mov    rbp,rdi
9ee5:	48 89 f7             	mov    rdi,rsi
9ee8:	48 89 f3             	mov    rbx,rsi
9eeb:	48 83 ec 08          	sub    rsp,0x8
9eef:	e8 ec fd ff ff       	call   9ce0 <xmalloc>
9ef4:	48 83 c4 08          	add    rsp,0x8
9ef8:	48 89 da             	mov    rdx,rbx
9efb:	48 89 ee             	mov    rsi,rbp
9efe:	5b                   	pop    rbx
9eff:	5d                   	pop    rbp
9f00:	48 89 c7             	mov    rdi,rax
9f03:	e9 98 81 ff ff       	jmp    20a0 <memcpy@plt>
9f08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
9f0f:	00

0000000000009f10 <xstrdup>:
9f10:	53                   	push   rbx
9f11:	48 89 fb             	mov    rbx,rdi
9f14:	e8 e7 7f ff ff       	call   1f00 <strlen@plt>
9f19:	48 89 df             	mov    rdi,rbx
9f1c:	48 8d 70 01          	lea    rsi,[rax+0x1]
9f20:	5b                   	pop    rbx
9f21:	eb bd                	jmp    9ee0 <xmemdup>
9f23:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9f2a:	00 00 00
9f2d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000009f30 <xalloc_die>:
9f30:	48 8d 35 38 6a 00 00 	lea    rsi,[rip+0x6a38]        # 1096f <version_etc_copyright+0x2f>
9f37:	48 83 ec 08          	sub    rsp,0x8
9f3b:	ba 05 00 00 00       	mov    edx,0x5
9f40:	31 ff                	xor    edi,edi
9f42:	e8 99 7f ff ff       	call   1ee0 <dcgettext@plt>
9f47:	8b 3d d3 90 20 00    	mov    edi,DWORD PTR [rip+0x2090d3]        # 213020 <exit_failure>
9f4d:	48 8d 15 b8 60 00 00 	lea    rdx,[rip+0x60b8]        # 1000c <primes_diff+0x2ac>
9f54:	48 89 c1             	mov    rcx,rax
9f57:	31 f6                	xor    esi,esi
9f59:	31 c0                	xor    eax,eax
9f5b:	e8 80 82 ff ff       	call   21e0 <error@plt>
9f60:	e8 7b 7e ff ff       	call   1de0 <abort@plt>
9f65:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
9f6c:	00 00 00
9f6f:	90                   	nop

0000000000009f70 <xmem_cd_iconv>:
9f70:	53                   	push   rbx
9f71:	e8 6a 20 00 00       	call   bfe0 <mem_cd_iconv>
9f76:	85 c0                	test   eax,eax
9f78:	89 c3                	mov    ebx,eax
9f7a:	78 04                	js     9f80 <xmem_cd_iconv+0x10>
9f7c:	89 d8                	mov    eax,ebx
9f7e:	5b                   	pop    rbx
9f7f:	c3                   	ret
9f80:	e8 6b 7e ff ff       	call   1df0 <__errno_location@plt>
9f85:	83 38 0c             	cmp    DWORD PTR [rax],0xc
9f88:	75 f2                	jne    9f7c <xmem_cd_iconv+0xc>
9f8a:	e8 a1 ff ff ff       	call   9f30 <xalloc_die>
9f8f:	90                   	nop

0000000000009f90 <xstr_cd_iconv>:
9f90:	53                   	push   rbx
9f91:	e8 0a 23 00 00       	call   c2a0 <str_cd_iconv>
9f96:	48 85 c0             	test   rax,rax
9f99:	48 89 c3             	mov    rbx,rax
9f9c:	74 0a                	je     9fa8 <xstr_cd_iconv+0x18>
9f9e:	48 89 d8             	mov    rax,rbx
9fa1:	5b                   	pop    rbx
9fa2:	c3                   	ret
9fa3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
9fa8:	e8 43 7e ff ff       	call   1df0 <__errno_location@plt>
9fad:	83 38 0c             	cmp    DWORD PTR [rax],0xc
9fb0:	75 ec                	jne    9f9e <xstr_cd_iconv+0xe>
9fb2:	e8 79 ff ff ff       	call   9f30 <xalloc_die>
9fb7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
9fbe:	00 00

0000000000009fc0 <xstr_iconv>:
9fc0:	53                   	push   rbx
9fc1:	e8 2a 25 00 00       	call   c4f0 <str_iconv>
9fc6:	48 85 c0             	test   rax,rax
9fc9:	48 89 c3             	mov    rbx,rax
9fcc:	74 0a                	je     9fd8 <xstr_iconv+0x18>
9fce:	48 89 d8             	mov    rax,rbx
9fd1:	5b                   	pop    rbx
9fd2:	c3                   	ret
9fd3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
9fd8:	e8 13 7e ff ff       	call   1df0 <__errno_location@plt>
9fdd:	83 38 0c             	cmp    DWORD PTR [rax],0xc
9fe0:	75 ec                	jne    9fce <xstr_iconv+0xe>
9fe2:	e8 49 ff ff ff       	call   9f30 <xalloc_die>
9fe7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
9fee:	00 00

0000000000009ff0 <rpl_mbrtowc>:
9ff0:	41 55                	push   r13
9ff2:	41 54                	push   r12
9ff4:	49 89 f5             	mov    r13,rsi
9ff7:	55                   	push   rbp
9ff8:	53                   	push   rbx
9ff9:	48 89 fb             	mov    rbx,rdi
9ffc:	49 89 d4             	mov    r12,rdx
9fff:	48 83 ec 18          	sub    rsp,0x18
a003:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
a00a:	00 00
a00c:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
a011:	31 c0                	xor    eax,eax
a013:	48 8d 44 24 04       	lea    rax,[rsp+0x4]
a018:	48 85 ff             	test   rdi,rdi
a01b:	48 0f 44 d8          	cmove  rbx,rax
a01f:	48 89 df             	mov    rdi,rbx
a022:	e8 29 7f ff ff       	call   1f50 <mbrtowc@plt>
a027:	48 83 f8 fd          	cmp    rax,0xfffffffffffffffd
a02b:	48 89 c5             	mov    rbp,rax
a02e:	76 20                	jbe    a050 <rpl_mbrtowc+0x60>
a030:	4d 85 e4             	test   r12,r12
a033:	74 1b                	je     a050 <rpl_mbrtowc+0x60>
a035:	31 ff                	xor    edi,edi
a037:	e8 14 01 00 00       	call   a150 <hard_locale>
a03c:	84 c0                	test   al,al
a03e:	75 10                	jne    a050 <rpl_mbrtowc+0x60>
a040:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
a045:	bd 01 00 00 00       	mov    ebp,0x1
a04a:	89 03                	mov    DWORD PTR [rbx],eax
a04c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
a050:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
a055:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
a05c:	00 00
a05e:	48 89 e8             	mov    rax,rbp
a061:	75 0b                	jne    a06e <rpl_mbrtowc+0x7e>
a063:	48 83 c4 18          	add    rsp,0x18
a067:	5b                   	pop    rbx
a068:	5d                   	pop    rbp
a069:	41 5c                	pop    r12
a06b:	41 5d                	pop    r13
a06d:	c3                   	ret
a06e:	e8 ad 7e ff ff       	call   1f20 <__stack_chk_fail@plt>
a073:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
a07a:	00 00 00
a07d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000a080 <c_strcasecmp>:
a080:	31 c0                	xor    eax,eax
a082:	48 39 f7             	cmp    rdi,rsi
a085:	75 15                	jne    a09c <c_strcasecmp+0x1c>
a087:	eb 43                	jmp    a0cc <c_strcasecmp+0x4c>
a089:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
a090:	48 83 c7 01          	add    rdi,0x1
a094:	48 83 c6 01          	add    rsi,0x1
a098:	38 d0                	cmp    al,dl
a09a:	75 28                	jne    a0c4 <c_strcasecmp+0x44>
a09c:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
a09f:	89 c2                	mov    edx,eax
a0a1:	8d 48 20             	lea    ecx,[rax+0x20]
a0a4:	83 ea 41             	sub    edx,0x41
a0a7:	80 fa 1a             	cmp    dl,0x1a
a0aa:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
a0ad:	0f 42 c1             	cmovb  eax,ecx
a0b0:	89 d1                	mov    ecx,edx
a0b2:	44 8d 4a 20          	lea    r9d,[rdx+0x20]
a0b6:	83 e9 41             	sub    ecx,0x41
a0b9:	80 f9 1a             	cmp    cl,0x1a
a0bc:	41 0f 42 d1          	cmovb  edx,r9d
a0c0:	84 c0                	test   al,al
a0c2:	75 cc                	jne    a090 <c_strcasecmp+0x10>
a0c4:	0f b6 c0             	movzx  eax,al
a0c7:	0f b6 d2             	movzx  edx,dl
a0ca:	29 d0                	sub    eax,edx
a0cc:	f3 c3                	repz ret
a0ce:	66 90                	xchg   ax,ax

000000000000a0d0 <close_stream>:
a0d0:	41 54                	push   r12
a0d2:	55                   	push   rbp
a0d3:	48 89 fd             	mov    rbp,rdi
a0d6:	53                   	push   rbx
a0d7:	e8 44 7d ff ff       	call   1e20 <__fpending@plt>
a0dc:	8b 5d 00             	mov    ebx,DWORD PTR [rbp+0x0]
a0df:	48 89 ef             	mov    rdi,rbp
a0e2:	49 89 c4             	mov    r12,rax
a0e5:	e8 f6 24 00 00       	call   c5e0 <rpl_fclose>
a0ea:	83 e3 20             	and    ebx,0x20
a0ed:	85 db                	test   ebx,ebx
a0ef:	75 17                	jne    a108 <close_stream+0x38>
a0f1:	85 c0                	test   eax,eax
a0f3:	74 0a                	je     a0ff <close_stream+0x2f>
a0f5:	4d 85 e4             	test   r12,r12
a0f8:	b8 ff ff ff ff       	mov    eax,0xffffffff
a0fd:	74 39                	je     a138 <close_stream+0x68>
a0ff:	5b                   	pop    rbx
a100:	5d                   	pop    rbp
a101:	41 5c                	pop    r12
a103:	c3                   	ret
a104:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
a108:	85 c0                	test   eax,eax
a10a:	75 1c                	jne    a128 <close_stream+0x58>
a10c:	e8 df 7c ff ff       	call   1df0 <__errno_location@plt>
a111:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
a117:	b8 ff ff ff ff       	mov    eax,0xffffffff
a11c:	5b                   	pop    rbx
a11d:	5d                   	pop    rbp
a11e:	41 5c                	pop    r12
a120:	c3                   	ret
a121:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
a128:	5b                   	pop    rbx
a129:	b8 ff ff ff ff       	mov    eax,0xffffffff
a12e:	5d                   	pop    rbp
a12f:	41 5c                	pop    r12
a131:	c3                   	ret
a132:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
a138:	e8 b3 7c ff ff       	call   1df0 <__errno_location@plt>
a13d:	83 38 09             	cmp    DWORD PTR [rax],0x9
a140:	5b                   	pop    rbx
a141:	5d                   	pop    rbp
a142:	41 5c                	pop    r12
a144:	0f 95 c0             	setne  al
a147:	0f b6 c0             	movzx  eax,al
a14a:	f7 d8                	neg    eax
a14c:	c3                   	ret
a14d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000a150 <hard_locale>:
a150:	48 83 ec 08          	sub    rsp,0x8
a154:	31 f6                	xor    esi,esi
a156:	e8 05 80 ff ff       	call   2160 <setlocale@plt>
a15b:	48 89 c2             	mov    rdx,rax
a15e:	b8 01 00 00 00       	mov    eax,0x1
a163:	48 85 d2             	test   rdx,rdx
a166:	74 1d                	je     a185 <hard_locale+0x35>
a168:	48 8d 3d 11 68 00 00 	lea    rdi,[rip+0x6811]        # 10980 <version_etc_copyright+0x40>
a16f:	b9 02 00 00 00       	mov    ecx,0x2
a174:	48 89 d6             	mov    rsi,rdx
a177:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
a179:	0f 97 c1             	seta   cl
a17c:	80 d9 00             	sbb    cl,0x0
a17f:	31 c0                	xor    eax,eax
a181:	84 c9                	test   cl,cl
a183:	75 0b                	jne    a190 <hard_locale+0x40>
a185:	48 83 c4 08          	add    rsp,0x8
a189:	c3                   	ret
a18a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
a190:	48 8d 3d eb 67 00 00 	lea    rdi,[rip+0x67eb]        # 10982 <version_etc_copyright+0x42>
a197:	b9 06 00 00 00       	mov    ecx,0x6
a19c:	48 89 d6             	mov    rsi,rdx
a19f:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
a1a1:	0f 97 c0             	seta   al
a1a4:	1c 00                	sbb    al,0x0
a1a6:	84 c0                	test   al,al
a1a8:	0f 95 c0             	setne  al
a1ab:	48 83 c4 08          	add    rsp,0x8
a1af:	c3                   	ret

000000000000a1b0 <locale_charset>:
a1b0:	48 83 ec 08          	sub    rsp,0x8
a1b4:	bf 0e 00 00 00       	mov    edi,0xe
a1b9:	e8 62 7f ff ff       	call   2120 <nl_langinfo@plt>
a1be:	48 85 c0             	test   rax,rax
a1c1:	74 1d                	je     a1e0 <locale_charset+0x30>
a1c3:	80 38 00             	cmp    BYTE PTR [rax],0x0
a1c6:	48 8d 15 bb 67 00 00 	lea    rdx,[rip+0x67bb]        # 10988 <version_etc_copyright+0x48>
a1cd:	48 0f 44 c2          	cmove  rax,rdx
a1d1:	48 83 c4 08          	add    rsp,0x8
a1d5:	c3                   	ret
a1d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
a1dd:	00 00 00
a1e0:	48 8d 05 a1 67 00 00 	lea    rax,[rip+0x67a1]        # 10988 <version_etc_copyright+0x48>
a1e7:	48 83 c4 08          	add    rsp,0x8
a1eb:	c3                   	ret
a1ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000a1f0 <mb_width_aux>:
a1f0:	53                   	push   rbx
a1f1:	89 fb                	mov    ebx,edi
a1f3:	e8 d8 7e ff ff       	call   20d0 <wcwidth@plt>
a1f8:	85 c0                	test   eax,eax
a1fa:	78 04                	js     a200 <mb_width_aux+0x10>
a1fc:	5b                   	pop    rbx
a1fd:	c3                   	ret
a1fe:	66 90                	xchg   ax,ax
a200:	89 df                	mov    edi,ebx
a202:	e8 79 7c ff ff       	call   1e80 <iswcntrl@plt>
a207:	85 c0                	test   eax,eax
a209:	0f 94 c0             	sete   al
a20c:	0f b6 c0             	movzx  eax,al
a20f:	5b                   	pop    rbx
a210:	c3                   	ret
a211:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
a216:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
a21d:	00 00 00

000000000000a220 <mb_copy>:
a220:	55                   	push   rbp
a221:	53                   	push   rbx
a222:	48 89 f3             	mov    rbx,rsi
a225:	48 8d 43 18          	lea    rax,[rbx+0x18]
a229:	48 89 fd             	mov    rbp,rdi
a22c:	48 83 ec 08          	sub    rsp,0x8
a230:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
a233:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
a237:	48 39 c6             	cmp    rsi,rax
a23a:	74 24                	je     a260 <mb_copy+0x40>
a23c:	48 89 37             	mov    QWORD PTR [rdi],rsi
a23f:	0f b6 43 10          	movzx  eax,BYTE PTR [rbx+0x10]
a243:	48 89 55 08          	mov    QWORD PTR [rbp+0x8],rdx
a247:	84 c0                	test   al,al
a249:	88 45 10             	mov    BYTE PTR [rbp+0x10],al
a24c:	74 06                	je     a254 <mb_copy+0x34>
a24e:	8b 43 14             	mov    eax,DWORD PTR [rbx+0x14]
a251:	89 45 14             	mov    DWORD PTR [rbp+0x14],eax
a254:	48 83 c4 08          	add    rsp,0x8
a258:	5b                   	pop    rbx
a259:	5d                   	pop    rbp
a25a:	c3                   	ret
a25b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
a260:	48 8d 4f 18          	lea    rcx,[rdi+0x18]
a264:	48 89 cf             	mov    rdi,rcx
a267:	e8 34 7e ff ff       	call   20a0 <memcpy@plt>
a26c:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
a270:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
a274:	eb c9                	jmp    a23f <mb_copy+0x1f>
a276:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
a27d:	00 00 00

000000000000a280 <is_basic>:
a280:	89 f8                	mov    eax,edi
a282:	48 8d 15 17 67 00 00 	lea    rdx,[rip+0x6717]        # 109a0 <is_basic_table>
a289:	89 f9                	mov    ecx,edi
a28b:	c0 e8 05             	shr    al,0x5
a28e:	83 e1 1f             	and    ecx,0x1f
a291:	83 e0 07             	and    eax,0x7
a294:	8b 04 82             	mov    eax,DWORD PTR [rdx+rax*4]
a297:	d3 e8                	shr    eax,cl
a299:	83 e0 01             	and    eax,0x1
a29c:	c3                   	ret
a29d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000a2a0 <knuth_morris_pratt>:
a2a0:	55                   	push   rbp
a2a1:	48 89 e5             	mov    rbp,rsp
a2a4:	41 54                	push   r12
a2a6:	53                   	push   rbx
a2a7:	49 89 d4             	mov    r12,rdx
a2aa:	ba 08 00 00 00       	mov    edx,0x8
a2af:	48 89 fb             	mov    rbx,rdi
a2b2:	48 83 ec 20          	sub    rsp,0x20
a2b6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
a2bd:	00 00
a2bf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
a2c3:	31 c0                	xor    eax,eax
a2c5:	48 89 d0             	mov    rax,rdx
a2c8:	49 f7 e4             	mul    r12
a2cb:	0f 80 6c 01 00 00    	jo     a43d <knuth_morris_pratt+0x19d>
a2d1:	31 ff                	xor    edi,edi
a2d3:	48 85 c0             	test   rax,rax
a2d6:	0f 88 d4 00 00 00    	js     a3b0 <knuth_morris_pratt+0x110>
a2dc:	48 85 ff             	test   rdi,rdi
a2df:	0f 85 cb 00 00 00    	jne    a3b0 <knuth_morris_pratt+0x110>
a2e5:	4a 8d 3c e5 00 00 00 	lea    rdi,[r12*8+0x0]
a2ec:	00
a2ed:	48 81 ff a0 0f 00 00 	cmp    rdi,0xfa0
a2f4:	0f 87 1e 01 00 00    	ja     a418 <knuth_morris_pratt+0x178>
a2fa:	48 83 c7 3d          	add    rdi,0x3d
a2fe:	48 83 e7 f0          	and    rdi,0xfffffffffffffff0
a302:	48 29 fc             	sub    rsp,rdi
a305:	48 8d 7c 24 0f       	lea    rdi,[rsp+0xf]
a30a:	48 83 e7 f0          	and    rdi,0xfffffffffffffff0
a30e:	48 83 c7 1f          	add    rdi,0x1f
a312:	48 83 e7 e0          	and    rdi,0xffffffffffffffe0
a316:	48 85 ff             	test   rdi,rdi
a319:	0f 84 91 00 00 00    	je     a3b0 <knuth_morris_pratt+0x110>
a31f:	49 83 fc 02          	cmp    r12,0x2
a323:	48 c7 47 08 01 00 00 	mov    QWORD PTR [rdi+0x8],0x1
a32a:	00
a32b:	76 44                	jbe    a371 <knuth_morris_pratt+0xd1>
a32d:	31 d2                	xor    edx,edx
a32f:	41 b8 02 00 00 00    	mov    r8d,0x2
a335:	0f 1f 00             	nop    DWORD PTR [rax]
a338:	42 0f b6 44 06 ff    	movzx  eax,BYTE PTR [rsi+r8*1-0x1]
a33e:	3a 04 16             	cmp    al,BYTE PTR [rsi+rdx*1]
a341:	75 1a                	jne    a35d <knuth_morris_pratt+0xbd>
a343:	e9 b8 00 00 00       	jmp    a400 <knuth_morris_pratt+0x160>
a348:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
a34f:	00
a350:	48 2b 14 d7          	sub    rdx,QWORD PTR [rdi+rdx*8]
a354:	38 04 16             	cmp    BYTE PTR [rsi+rdx*1],al
a357:	0f 84 a3 00 00 00    	je     a400 <knuth_morris_pratt+0x160>
a35d:	48 85 d2             	test   rdx,rdx
a360:	75 ee                	jne    a350 <knuth_morris_pratt+0xb0>
a362:	4e 89 04 c7          	mov    QWORD PTR [rdi+r8*8],r8
a366:	31 d2                	xor    edx,edx
a368:	49 83 c0 01          	add    r8,0x1
a36c:	4d 39 c4             	cmp    r12,r8
a36f:	75 c7                	jne    a338 <knuth_morris_pratt+0x98>
a371:	48 c7 01 00 00 00 00 	mov    QWORD PTR [rcx],0x0
a378:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
a37b:	49 89 d8             	mov    r8,rbx
a37e:	31 c0                	xor    eax,eax
a380:	84 d2                	test   dl,dl
a382:	74 18                	je     a39c <knuth_morris_pratt+0xfc>
a384:	38 14 06             	cmp    BYTE PTR [rsi+rax*1],dl
a387:	74 47                	je     a3d0 <knuth_morris_pratt+0x130>
a389:	48 85 c0             	test   rax,rax
a38c:	74 62                	je     a3f0 <knuth_morris_pratt+0x150>
a38e:	4c 8b 0c c7          	mov    r9,QWORD PTR [rdi+rax*8]
a392:	4c 01 cb             	add    rbx,r9
a395:	4c 29 c8             	sub    rax,r9
a398:	84 d2                	test   dl,dl
a39a:	75 e8                	jne    a384 <knuth_morris_pratt+0xe4>
a39c:	e8 9f 23 00 00       	call   c740 <freea>
a3a1:	b8 01 00 00 00       	mov    eax,0x1
a3a6:	eb 0a                	jmp    a3b2 <knuth_morris_pratt+0x112>
a3a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
a3af:	00
a3b0:	31 c0                	xor    eax,eax
a3b2:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
a3b6:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
a3bd:	00 00
a3bf:	0f 85 82 00 00 00    	jne    a447 <knuth_morris_pratt+0x1a7>
a3c5:	48 8d 65 f0          	lea    rsp,[rbp-0x10]
a3c9:	5b                   	pop    rbx
a3ca:	41 5c                	pop    r12
a3cc:	5d                   	pop    rbp
a3cd:	c3                   	ret
a3ce:	66 90                	xchg   ax,ax
a3d0:	48 83 c0 01          	add    rax,0x1
a3d4:	4d 8d 48 01          	lea    r9,[r8+0x1]
a3d8:	49 39 c4             	cmp    r12,rax
a3db:	74 58                	je     a435 <knuth_morris_pratt+0x195>
a3dd:	41 0f b6 50 01       	movzx  edx,BYTE PTR [r8+0x1]
a3e2:	4d 89 c8             	mov    r8,r9
a3e5:	eb 99                	jmp    a380 <knuth_morris_pratt+0xe0>
a3e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
a3ee:	00 00
a3f0:	41 0f b6 50 01       	movzx  edx,BYTE PTR [r8+0x1]
a3f5:	48 83 c3 01          	add    rbx,0x1
a3f9:	49 83 c0 01          	add    r8,0x1
a3fd:	eb 81                	jmp    a380 <knuth_morris_pratt+0xe0>
a3ff:	90                   	nop
a400:	48 83 c2 01          	add    rdx,0x1
a404:	4c 89 c0             	mov    rax,r8
a407:	48 29 d0             	sub    rax,rdx
a40a:	4a 89 04 c7          	mov    QWORD PTR [rdi+r8*8],rax
a40e:	e9 55 ff ff ff       	jmp    a368 <knuth_morris_pratt+0xc8>
a413:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
a418:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
a41c:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
a420:	e8 db 22 00 00       	call   c700 <mmalloca>
a425:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
a429:	48 89 c7             	mov    rdi,rax
a42c:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
a430:	e9 e1 fe ff ff       	jmp    a316 <knuth_morris_pratt+0x76>
a435:	48 89 19             	mov    QWORD PTR [rcx],rbx
a438:	e9 5f ff ff ff       	jmp    a39c <knuth_morris_pratt+0xfc>
a43d:	bf 01 00 00 00       	mov    edi,0x1
a442:	e9 8c fe ff ff       	jmp    a2d3 <knuth_morris_pratt+0x33>
a447:	e8 d4 7a ff ff       	call   1f20 <__stack_chk_fail@plt>
a44c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000a450 <knuth_morris_pratt_multibyte>:
a450:	55                   	push   rbp
a451:	48 89 e5             	mov    rbp,rsp
a454:	41 57                	push   r15
a456:	41 56                	push   r14
a458:	41 55                	push   r13
a45a:	41 54                	push   r12
a45c:	53                   	push   rbx
a45d:	48 89 f3             	mov    rbx,rsi
a460:	48 81 ec 08 01 00 00 	sub    rsp,0x108
a467:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
a46e:	48 89 f7             	mov    rdi,rsi
a471:	48 89 95 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rdx
a478:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
a47f:	00 00
a481:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
a485:	31 c0                	xor    eax,eax
a487:	e8 e4 22 00 00       	call   c770 <mbslen>
a48c:	ba 38 00 00 00       	mov    edx,0x38
a491:	48 89 c6             	mov    rsi,rax
a494:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
a49b:	48 89 d0             	mov    rax,rdx
a49e:	48 f7 e6             	mul    rsi
a4a1:	0f 80 10 0a 00 00    	jo     aeb7 <knuth_morris_pratt_multibyte+0xa67>
a4a7:	31 c9                	xor    ecx,ecx
a4a9:	48 85 c0             	test   rax,rax
a4ac:	0f 88 1e 04 00 00    	js     a8d0 <knuth_morris_pratt_multibyte+0x480>
a4b2:	48 85 c9             	test   rcx,rcx
a4b5:	0f 85 15 04 00 00    	jne    a8d0 <knuth_morris_pratt_multibyte+0x480>
a4bb:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
a4c2:	48 8d 3c c5 00 00 00 	lea    rdi,[rax*8+0x0]
a4c9:	00
a4ca:	48 29 c7             	sub    rdi,rax
a4cd:	48 c1 e7 03          	shl    rdi,0x3
a4d1:	48 81 ff a0 0f 00 00 	cmp    rdi,0xfa0
a4d8:	0f 87 36 09 00 00    	ja     ae14 <knuth_morris_pratt_multibyte+0x9c4>
a4de:	48 83 c7 3d          	add    rdi,0x3d
a4e2:	48 83 e7 f0          	and    rdi,0xfffffffffffffff0
a4e6:	48 29 fc             	sub    rsp,rdi
a4e9:	4c 8d 64 24 0f       	lea    r12,[rsp+0xf]
a4ee:	49 83 e4 f0          	and    r12,0xfffffffffffffff0
a4f2:	49 83 c4 1f          	add    r12,0x1f
a4f6:	49 83 e4 e0          	and    r12,0xffffffffffffffe0
a4fa:	4d 85 e4             	test   r12,r12
a4fd:	0f 84 cd 03 00 00    	je     a8d0 <knuth_morris_pratt_multibyte+0x480>
a503:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
a50a:	48 89 9d 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rbx
a511:	48 8d 9d 00 ff ff ff 	lea    rbx,[rbp-0x100]
a518:	c6 85 00 ff ff ff 00 	mov    BYTE PTR [rbp-0x100],0x0
a51f:	48 c7 85 04 ff ff ff 	mov    QWORD PTR [rbp-0xfc],0x0
a526:	00 00 00 00
a52a:	4d 89 e7             	mov    r15,r12
a52d:	c6 85 0c ff ff ff 00 	mov    BYTE PTR [rbp-0xf4],0x0
a534:	41 be 01 00 00 00    	mov    r14d,0x1
a53a:	4c 8d 2c 40          	lea    r13,[rax+rax*2]
a53e:	48 8d 43 04          	lea    rax,[rbx+0x4]
a542:	49 c1 e5 04          	shl    r13,0x4
a546:	48 89 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rax
a54d:	4d 01 e5             	add    r13,r12
a550:	e9 ac 00 00 00       	jmp    a601 <knuth_morris_pratt_multibyte+0x1b1>
a555:	0f 1f 00             	nop    DWORD PTR [rax]
a558:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
a55f:	48 8d 35 3a 64 00 00 	lea    rsi,[rip+0x643a]        # 109a0 <is_basic_table>
a566:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
a569:	89 d0                	mov    eax,edx
a56b:	c0 e8 05             	shr    al,0x5
a56e:	83 e0 07             	and    eax,0x7
a571:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
a574:	0f a3 d0             	bt     eax,edx
a577:	0f 83 7b 03 00 00    	jae    a8f8 <knuth_morris_pratt_multibyte+0x4a8>
a57d:	48 c7 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],0x1
a584:	01 00 00 00
a588:	0f be 01             	movsx  eax,BYTE PTR [rcx]
a58b:	44 88 b5 20 ff ff ff 	mov    BYTE PTR [rbp-0xe0],r14b
a592:	44 88 b5 0c ff ff ff 	mov    BYTE PTR [rbp-0xf4],r14b
a599:	89 85 24 ff ff ff    	mov    DWORD PTR [rbp-0xdc],eax
a59f:	44 8b 85 24 ff ff ff 	mov    r8d,DWORD PTR [rbp-0xdc]
a5a6:	45 85 c0             	test   r8d,r8d
a5a9:	0f 84 21 01 00 00    	je     a6d0 <knuth_morris_pratt_multibyte+0x280>
a5af:	b8 01 00 00 00       	mov    eax,0x1
a5b4:	48 8b b5 10 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xf0]
a5bb:	48 8d 4b 28          	lea    rcx,[rbx+0x28]
a5bf:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
a5c6:	48 39 ce             	cmp    rsi,rcx
a5c9:	0f 84 51 03 00 00    	je     a920 <knuth_morris_pratt_multibyte+0x4d0>
a5cf:	49 89 37             	mov    QWORD PTR [r15],rsi
a5d2:	84 c0                	test   al,al
a5d4:	49 89 57 08          	mov    QWORD PTR [r15+0x8],rdx
a5d8:	41 88 47 10          	mov    BYTE PTR [r15+0x10],al
a5dc:	74 0a                	je     a5e8 <knuth_morris_pratt_multibyte+0x198>
a5de:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [rbp-0xdc]
a5e4:	41 89 47 14          	mov    DWORD PTR [r15+0x14],eax
a5e8:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
a5ef:	48 01 85 10 ff ff ff 	add    QWORD PTR [rbp-0xf0],rax
a5f6:	49 83 c7 30          	add    r15,0x30
a5fa:	c6 85 0c ff ff ff 00 	mov    BYTE PTR [rbp-0xf4],0x0
a601:	80 bd 00 ff ff ff 00 	cmp    BYTE PTR [rbp-0x100],0x0
a608:	0f 84 4a ff ff ff    	je     a558 <knuth_morris_pratt_multibyte+0x108>
a60e:	e8 dd 78 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
a613:	4c 8b 8d 10 ff ff ff 	mov    r9,QWORD PTR [rbp-0xf0]
a61a:	48 89 c6             	mov    rsi,rax
a61d:	4c 89 cf             	mov    rdi,r9
a620:	4c 89 8d f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],r9
a627:	e8 24 ea ff ff       	call   9050 <strnlen1>
a62c:	4c 8b 8d f0 fe ff ff 	mov    r9,QWORD PTR [rbp-0x110]
a633:	48 8d 4b 04          	lea    rcx,[rbx+0x4]
a637:	48 8d 7b 24          	lea    rdi,[rbx+0x24]
a63b:	48 89 c2             	mov    rdx,rax
a63e:	4c 89 ce             	mov    rsi,r9
a641:	e8 aa f9 ff ff       	call   9ff0 <rpl_mbrtowc>
a646:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
a64a:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
a651:	0f 84 f1 02 00 00    	je     a948 <knuth_morris_pratt_multibyte+0x4f8>
a657:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
a65b:	0f 84 68 07 00 00    	je     adc9 <knuth_morris_pratt_multibyte+0x979>
a661:	48 85 c0             	test   rax,rax
a664:	75 2b                	jne    a691 <knuth_morris_pratt_multibyte+0x241>
a666:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
a66d:	48 c7 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],0x1
a674:	01 00 00 00
a678:	80 38 00             	cmp    BYTE PTR [rax],0x0
a67b:	0f 85 12 08 00 00    	jne    ae93 <knuth_morris_pratt_multibyte+0xa43>
a681:	44 8b 8d 24 ff ff ff 	mov    r9d,DWORD PTR [rbp-0xdc]
a688:	45 85 c9             	test   r9d,r9d
a68b:	0f 85 21 08 00 00    	jne    aeb2 <knuth_morris_pratt_multibyte+0xa62>
a691:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
a695:	44 88 b5 20 ff ff ff 	mov    BYTE PTR [rbp-0xe0],r14b
a69c:	e8 0f 7c ff ff       	call   22b0 <mbsinit@plt>
a6a1:	85 c0                	test   eax,eax
a6a3:	0f 84 48 07 00 00    	je     adf1 <knuth_morris_pratt_multibyte+0x9a1>
a6a9:	44 8b 85 24 ff ff ff 	mov    r8d,DWORD PTR [rbp-0xdc]
a6b0:	c6 85 00 ff ff ff 00 	mov    BYTE PTR [rbp-0x100],0x0
a6b7:	44 88 b5 0c ff ff ff 	mov    BYTE PTR [rbp-0xf4],r14b
a6be:	45 85 c0             	test   r8d,r8d
a6c1:	0f 85 e8 fe ff ff    	jne    a5af <knuth_morris_pratt_multibyte+0x15f>
a6c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
a6ce:	00 00
a6d0:	48 83 bd f8 fe ff ff 	cmp    QWORD PTR [rbp-0x108],0x2
a6d7:	02
a6d8:	49 c7 45 08 01 00 00 	mov    QWORD PTR [r13+0x8],0x1
a6df:	00
a6e0:	0f 86 90 00 00 00    	jbe    a776 <knuth_morris_pratt_multibyte+0x326>
a6e6:	4d 8d 74 24 30       	lea    r14,[r12+0x30]
a6eb:	31 db                	xor    ebx,ebx
a6ed:	41 bf 02 00 00 00    	mov    r15d,0x2
a6f3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
a6f8:	41 0f b6 4e 10       	movzx  ecx,BYTE PTR [r14+0x10]
a6fd:	eb 1e                	jmp    a71d <knuth_morris_pratt_multibyte+0x2cd>
a6ff:	90                   	nop
a700:	80 78 10 00          	cmp    BYTE PTR [rax+0x10],0x0
a704:	74 26                	je     a72c <knuth_morris_pratt_multibyte+0x2dc>
a706:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
a709:	41 39 46 14          	cmp    DWORD PTR [r14+0x14],eax
a70d:	74 43                	je     a752 <knuth_morris_pratt_multibyte+0x302>
a70f:	48 85 db             	test   rbx,rbx
a712:	0f 84 b0 05 00 00    	je     acc8 <knuth_morris_pratt_multibyte+0x878>
a718:	49 2b 5c dd 00       	sub    rbx,QWORD PTR [r13+rbx*8+0x0]
a71d:	48 8d 04 5b          	lea    rax,[rbx+rbx*2]
a721:	48 c1 e0 04          	shl    rax,0x4
a725:	4c 01 e0             	add    rax,r12
a728:	84 c9                	test   cl,cl
a72a:	75 d4                	jne    a700 <knuth_morris_pratt_multibyte+0x2b0>
a72c:	49 8b 56 08          	mov    rdx,QWORD PTR [r14+0x8]
a730:	48 3b 50 08          	cmp    rdx,QWORD PTR [rax+0x8]
a734:	75 d9                	jne    a70f <knuth_morris_pratt_multibyte+0x2bf>
a736:	48 8b 30             	mov    rsi,QWORD PTR [rax]
a739:	49 8b 3e             	mov    rdi,QWORD PTR [r14]
a73c:	88 8d f0 fe ff ff    	mov    BYTE PTR [rbp-0x110],cl
a742:	e8 e9 78 ff ff       	call   2030 <memcmp@plt>
a747:	85 c0                	test   eax,eax
a749:	0f b6 8d f0 fe ff ff 	movzx  ecx,BYTE PTR [rbp-0x110]
a750:	75 bd                	jne    a70f <knuth_morris_pratt_multibyte+0x2bf>
a752:	48 83 c3 01          	add    rbx,0x1
a756:	4c 89 f8             	mov    rax,r15
a759:	48 29 d8             	sub    rax,rbx
a75c:	4b 89 44 fd 00       	mov    QWORD PTR [r13+r15*8+0x0],rax
a761:	49 83 c7 01          	add    r15,0x1
a765:	49 83 c6 30          	add    r14,0x30
a769:	4c 39 bd f8 fe ff ff 	cmp    QWORD PTR [rbp-0x108],r15
a770:	0f 85 82 ff ff ff    	jne    a6f8 <knuth_morris_pratt_multibyte+0x2a8>
a776:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
a77d:	48 8d 5d 80          	lea    rbx,[rbp-0x80]
a781:	c6 85 40 ff ff ff 00 	mov    BYTE PTR [rbp-0xc0],0x0
a788:	48 c7 85 44 ff ff ff 	mov    QWORD PTR [rbp-0xbc],0x0
a78f:	00 00 00 00
a793:	c6 85 4c ff ff ff 00 	mov    BYTE PTR [rbp-0xb4],0x0
a79a:	45 31 ff             	xor    r15d,r15d
a79d:	c6 45 80 00          	mov    BYTE PTR [rbp-0x80],0x0
a7a1:	48 c7 45 84 00 00 00 	mov    QWORD PTR [rbp-0x7c],0x0
a7a8:	00
a7a9:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
a7b0:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
a7b7:	48 89 9d e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rbx
a7be:	48 83 c3 04          	add    rbx,0x4
a7c2:	c6 45 8c 00          	mov    BYTE PTR [rbp-0x74],0x0
a7c6:	48 89 9d e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rbx
a7cd:	48 8d 9d 40 ff ff ff 	lea    rbx,[rbp-0xc0]
a7d4:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
a7db:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
a7df:	31 c0                	xor    eax,eax
a7e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
a7e8:	84 c0                	test   al,al
a7ea:	0f 84 dc 01 00 00    	je     a9cc <knuth_morris_pratt_multibyte+0x57c>
a7f0:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
a7f4:	0f 85 8c 01 00 00    	jne    a986 <knuth_morris_pratt_multibyte+0x536>
a7fa:	4b 8d 04 7f          	lea    rax,[r15+r15*2]
a7fe:	48 c1 e0 04          	shl    rax,0x4
a802:	4c 01 e0             	add    rax,r12
a805:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
a809:	48 3b 55 98          	cmp    rdx,QWORD PTR [rbp-0x68]
a80d:	0f 84 8d 03 00 00    	je     aba0 <knuth_morris_pratt_multibyte+0x750>
a813:	4d 85 ff             	test   r15,r15
a816:	0f 84 d4 03 00 00    	je     abf0 <knuth_morris_pratt_multibyte+0x7a0>
a81c:	4f 8b 74 fd 00       	mov    r14,QWORD PTR [r13+r15*8+0x0]
a821:	4c 89 f8             	mov    rax,r15
a824:	4c 29 f0             	sub    rax,r14
a827:	4d 85 f6             	test   r14,r14
a82a:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
a831:	0f b6 45 8c          	movzx  eax,BYTE PTR [rbp-0x74]
a835:	74 b1                	je     a7e8 <knuth_morris_pratt_multibyte+0x398>
a837:	80 bd 4c ff ff ff 00 	cmp    BYTE PTR [rbp-0xb4],0x0
a83e:	74 28                	je     a868 <knuth_morris_pratt_multibyte+0x418>
a840:	80 bd 60 ff ff ff 00 	cmp    BYTE PTR [rbp-0xa0],0x0
a847:	75 73                	jne    a8bc <knuth_morris_pratt_multibyte+0x46c>
a849:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
a850:	48 01 85 50 ff ff ff 	add    QWORD PTR [rbp-0xb0],rax
a857:	49 83 ee 01          	sub    r14,0x1
a85b:	c6 85 4c ff ff ff 00 	mov    BYTE PTR [rbp-0xb4],0x0
a862:	0f 84 20 04 00 00    	je     ac88 <knuth_morris_pratt_multibyte+0x838>
a868:	80 bd 40 ff ff ff 00 	cmp    BYTE PTR [rbp-0xc0],0x0
a86f:	0f 85 6b 02 00 00    	jne    aae0 <knuth_morris_pratt_multibyte+0x690>
a875:	48 8b 8d 50 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xb0]
a87c:	48 8d 35 1d 61 00 00 	lea    rsi,[rip+0x611d]        # 109a0 <is_basic_table>
a883:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
a886:	89 d0                	mov    eax,edx
a888:	c0 e8 05             	shr    al,0x5
a88b:	83 e0 07             	and    eax,0x7
a88e:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
a891:	0f a3 d0             	bt     eax,edx
a894:	0f 83 2e 02 00 00    	jae    aac8 <knuth_morris_pratt_multibyte+0x678>
a89a:	48 c7 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],0x1
a8a1:	01 00 00 00
a8a5:	0f be 01             	movsx  eax,BYTE PTR [rcx]
a8a8:	c6 85 60 ff ff ff 01 	mov    BYTE PTR [rbp-0xa0],0x1
a8af:	c6 85 4c ff ff ff 01 	mov    BYTE PTR [rbp-0xb4],0x1
a8b6:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
a8bc:	8b b5 64 ff ff ff    	mov    esi,DWORD PTR [rbp-0x9c]
a8c2:	85 f6                	test   esi,esi
a8c4:	75 83                	jne    a849 <knuth_morris_pratt_multibyte+0x3f9>
a8c6:	e8 15 75 ff ff       	call   1de0 <abort@plt>
a8cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
a8d0:	31 c0                	xor    eax,eax
a8d2:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
a8d6:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
a8dd:	00 00
a8df:	0f 85 a9 05 00 00    	jne    ae8e <knuth_morris_pratt_multibyte+0xa3e>
a8e5:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
a8e9:	5b                   	pop    rbx
a8ea:	41 5c                	pop    r12
a8ec:	41 5d                	pop    r13
a8ee:	41 5e                	pop    r14
a8f0:	41 5f                	pop    r15
a8f2:	5d                   	pop    rbp
a8f3:	c3                   	ret
a8f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
a8f8:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
a8ff:	e8 ac 79 ff ff       	call   22b0 <mbsinit@plt>
a904:	85 c0                	test   eax,eax
a906:	0f 84 63 05 00 00    	je     ae6f <knuth_morris_pratt_multibyte+0xa1f>
a90c:	44 88 b5 00 ff ff ff 	mov    BYTE PTR [rbp-0x100],r14b
a913:	e9 f6 fc ff ff       	jmp    a60e <knuth_morris_pratt_multibyte+0x1be>
a918:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
a91f:	00
a920:	49 8d 4f 18          	lea    rcx,[r15+0x18]
a924:	48 89 cf             	mov    rdi,rcx
a927:	e8 74 77 ff ff       	call   20a0 <memcpy@plt>
a92c:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
a933:	49 89 07             	mov    QWORD PTR [r15],rax
a936:	0f b6 85 20 ff ff ff 	movzx  eax,BYTE PTR [rbp-0xe0]
a93d:	e9 90 fc ff ff       	jmp    a5d2 <knuth_morris_pratt_multibyte+0x182>
a942:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
a948:	48 c7 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],0x1
a94f:	01 00 00 00
a953:	c6 85 20 ff ff ff 00 	mov    BYTE PTR [rbp-0xe0],0x0
a95a:	31 c0                	xor    eax,eax
a95c:	44 88 b5 0c ff ff ff 	mov    BYTE PTR [rbp-0xf4],r14b
a963:	e9 4c fc ff ff       	jmp    a5b4 <knuth_morris_pratt_multibyte+0x164>
a968:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
a96f:	00
a970:	48 c7 45 98 01 00 00 	mov    QWORD PTR [rbp-0x68],0x1
a977:	00
a978:	0f be 01             	movsx  eax,BYTE PTR [rcx]
a97b:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
a97f:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
a983:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
a986:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
a989:	85 d2                	test   edx,edx
a98b:	0f 84 1f 01 00 00    	je     aab0 <knuth_morris_pratt_multibyte+0x660>
a991:	4b 8d 04 7f          	lea    rax,[r15+r15*2]
a995:	48 c1 e0 04          	shl    rax,0x4
a999:	4c 01 e0             	add    rax,r12
a99c:	80 78 10 00          	cmp    BYTE PTR [rax+0x10],0x0
a9a0:	0f 84 5f fe ff ff    	je     a805 <knuth_morris_pratt_multibyte+0x3b5>
a9a6:	39 50 14             	cmp    DWORD PTR [rax+0x14],edx
a9a9:	0f 85 64 fe ff ff    	jne    a813 <knuth_morris_pratt_multibyte+0x3c3>
a9af:	49 83 c7 01          	add    r15,0x1
a9b3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
a9b7:	48 01 45 90          	add    QWORD PTR [rbp-0x70],rax
a9bb:	4c 39 bd f8 fe ff ff 	cmp    QWORD PTR [rbp-0x108],r15
a9c2:	c6 45 8c 00          	mov    BYTE PTR [rbp-0x74],0x0
a9c6:	0f 84 80 04 00 00    	je     ae4c <knuth_morris_pratt_multibyte+0x9fc>
a9cc:	80 7d 80 00          	cmp    BYTE PTR [rbp-0x80],0x0
a9d0:	75 36                	jne    aa08 <knuth_morris_pratt_multibyte+0x5b8>
a9d2:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
a9d6:	48 8d 35 c3 5f 00 00 	lea    rsi,[rip+0x5fc3]        # 109a0 <is_basic_table>
a9dd:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
a9e0:	89 d0                	mov    eax,edx
a9e2:	c0 e8 05             	shr    al,0x5
a9e5:	83 e0 07             	and    eax,0x7
a9e8:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
a9eb:	0f a3 d0             	bt     eax,edx
a9ee:	72 80                	jb     a970 <knuth_morris_pratt_multibyte+0x520>
a9f0:	48 8b bd e0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x120]
a9f7:	e8 b4 78 ff ff       	call   22b0 <mbsinit@plt>
a9fc:	85 c0                	test   eax,eax
a9fe:	0f 84 6b 04 00 00    	je     ae6f <knuth_morris_pratt_multibyte+0xa1f>
aa04:	c6 45 80 01          	mov    BYTE PTR [rbp-0x80],0x1
aa08:	e8 e3 74 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
aa0d:	4c 8b 45 90          	mov    r8,QWORD PTR [rbp-0x70]
aa11:	48 89 c6             	mov    rsi,rax
aa14:	4c 89 c7             	mov    rdi,r8
aa17:	4c 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],r8
aa1e:	e8 2d e6 ff ff       	call   9050 <strnlen1>
aa23:	48 8b b5 e8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x118]
aa2a:	4c 8b 85 f0 fe ff ff 	mov    r8,QWORD PTR [rbp-0x110]
aa31:	48 89 c2             	mov    rdx,rax
aa34:	48 8d 4e 04          	lea    rcx,[rsi+0x4]
aa38:	48 8d 7e 24          	lea    rdi,[rsi+0x24]
aa3c:	4c 89 c6             	mov    rsi,r8
aa3f:	e8 ac f5 ff ff       	call   9ff0 <rpl_mbrtowc>
aa44:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
aa48:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
aa4c:	0f 84 4e 02 00 00    	je     aca0 <knuth_morris_pratt_multibyte+0x850>
aa52:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
aa56:	0f 84 44 03 00 00    	je     ada0 <knuth_morris_pratt_multibyte+0x950>
aa5c:	48 85 c0             	test   rax,rax
aa5f:	75 20                	jne    aa81 <knuth_morris_pratt_multibyte+0x631>
aa61:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
aa65:	48 c7 45 98 01 00 00 	mov    QWORD PTR [rbp-0x68],0x1
aa6c:	00
aa6d:	80 38 00             	cmp    BYTE PTR [rax],0x0
aa70:	0f 85 1d 04 00 00    	jne    ae93 <knuth_morris_pratt_multibyte+0xa43>
aa76:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
aa79:	85 c0                	test   eax,eax
aa7b:	0f 85 31 04 00 00    	jne    aeb2 <knuth_morris_pratt_multibyte+0xa62>
aa81:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
aa88:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
aa8c:	48 8d 78 04          	lea    rdi,[rax+0x4]
aa90:	e8 1b 78 ff ff       	call   22b0 <mbsinit@plt>
aa95:	85 c0                	test   eax,eax
aa97:	0f 84 23 03 00 00    	je     adc0 <knuth_morris_pratt_multibyte+0x970>
aa9d:	8b 55 a4             	mov    edx,DWORD PTR [rbp-0x5c]
aaa0:	c6 45 80 00          	mov    BYTE PTR [rbp-0x80],0x0
aaa4:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
aaa8:	85 d2                	test   edx,edx
aaaa:	0f 85 e1 fe ff ff    	jne    a991 <knuth_morris_pratt_multibyte+0x541>
aab0:	4c 89 e7             	mov    rdi,r12
aab3:	e8 88 1c 00 00       	call   c740 <freea>
aab8:	b8 01 00 00 00       	mov    eax,0x1
aabd:	e9 10 fe ff ff       	jmp    a8d2 <knuth_morris_pratt_multibyte+0x482>
aac2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
aac8:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
aacc:	e8 df 77 ff ff       	call   22b0 <mbsinit@plt>
aad1:	85 c0                	test   eax,eax
aad3:	0f 84 96 03 00 00    	je     ae6f <knuth_morris_pratt_multibyte+0xa1f>
aad9:	c6 85 40 ff ff ff 01 	mov    BYTE PTR [rbp-0xc0],0x1
aae0:	e8 0b 74 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
aae5:	4c 8b bd 50 ff ff ff 	mov    r15,QWORD PTR [rbp-0xb0]
aaec:	48 89 c6             	mov    rsi,rax
aaef:	4c 89 ff             	mov    rdi,r15
aaf2:	e8 59 e5 ff ff       	call   9050 <strnlen1>
aaf7:	48 8d 4b 04          	lea    rcx,[rbx+0x4]
aafb:	48 8d 7b 24          	lea    rdi,[rbx+0x24]
aaff:	48 89 c2             	mov    rdx,rax
ab02:	4c 89 fe             	mov    rsi,r15
ab05:	e8 e6 f4 ff ff       	call   9ff0 <rpl_mbrtowc>
ab0a:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
ab0e:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
ab15:	74 69                	je     ab80 <knuth_morris_pratt_multibyte+0x730>
ab17:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
ab1b:	0f 84 9f 00 00 00    	je     abc0 <knuth_morris_pratt_multibyte+0x770>
ab21:	48 85 c0             	test   rax,rax
ab24:	75 29                	jne    ab4f <knuth_morris_pratt_multibyte+0x6ff>
ab26:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
ab2d:	48 c7 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],0x1
ab34:	01 00 00 00
ab38:	80 38 00             	cmp    BYTE PTR [rax],0x0
ab3b:	0f 85 52 03 00 00    	jne    ae93 <knuth_morris_pratt_multibyte+0xa43>
ab41:	8b bd 64 ff ff ff    	mov    edi,DWORD PTR [rbp-0x9c]
ab47:	85 ff                	test   edi,edi
ab49:	0f 85 63 03 00 00    	jne    aeb2 <knuth_morris_pratt_multibyte+0xa62>
ab4f:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
ab53:	c6 85 60 ff ff ff 01 	mov    BYTE PTR [rbp-0xa0],0x1
ab5a:	e8 51 77 ff ff       	call   22b0 <mbsinit@plt>
ab5f:	85 c0                	test   eax,eax
ab61:	74 7d                	je     abe0 <knuth_morris_pratt_multibyte+0x790>
ab63:	c6 85 40 ff ff ff 00 	mov    BYTE PTR [rbp-0xc0],0x0
ab6a:	c6 85 4c ff ff ff 01 	mov    BYTE PTR [rbp-0xb4],0x1
ab71:	e9 46 fd ff ff       	jmp    a8bc <knuth_morris_pratt_multibyte+0x46c>
ab76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ab7d:	00 00 00
ab80:	48 c7 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],0x1
ab87:	01 00 00 00
ab8b:	c6 85 60 ff ff ff 00 	mov    BYTE PTR [rbp-0xa0],0x0
ab92:	e9 b2 fc ff ff       	jmp    a849 <knuth_morris_pratt_multibyte+0x3f9>
ab97:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
ab9e:	00 00
aba0:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
aba4:	48 8b 38             	mov    rdi,QWORD PTR [rax]
aba7:	e8 84 74 ff ff       	call   2030 <memcmp@plt>
abac:	85 c0                	test   eax,eax
abae:	0f 85 5f fc ff ff    	jne    a813 <knuth_morris_pratt_multibyte+0x3c3>
abb4:	e9 f6 fd ff ff       	jmp    a9af <knuth_morris_pratt_multibyte+0x55f>
abb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
abc0:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
abc7:	e8 34 73 ff ff       	call   1f00 <strlen@plt>
abcc:	c6 85 60 ff ff ff 00 	mov    BYTE PTR [rbp-0xa0],0x0
abd3:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
abda:	e9 6a fc ff ff       	jmp    a849 <knuth_morris_pratt_multibyte+0x3f9>
abdf:	90                   	nop
abe0:	c6 85 4c ff ff ff 01 	mov    BYTE PTR [rbp-0xb4],0x1
abe7:	e9 d0 fc ff ff       	jmp    a8bc <knuth_morris_pratt_multibyte+0x46c>
abec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
abf0:	80 bd 4c ff ff ff 00 	cmp    BYTE PTR [rbp-0xb4],0x0
abf7:	0f 85 bb 00 00 00    	jne    acb8 <knuth_morris_pratt_multibyte+0x868>
abfd:	80 bd 40 ff ff ff 00 	cmp    BYTE PTR [rbp-0xc0],0x0
ac04:	0f 85 e6 00 00 00    	jne    acf0 <knuth_morris_pratt_multibyte+0x8a0>
ac0a:	48 8b 8d 50 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xb0]
ac11:	48 8d 35 88 5d 00 00 	lea    rsi,[rip+0x5d88]        # 109a0 <is_basic_table>
ac18:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
ac1b:	89 d0                	mov    eax,edx
ac1d:	c0 e8 05             	shr    al,0x5
ac20:	83 e0 07             	and    eax,0x7
ac23:	8b 04 86             	mov    eax,DWORD PTR [rsi+rax*4]
ac26:	0f a3 d0             	bt     eax,edx
ac29:	0f 83 a9 00 00 00    	jae    acd8 <knuth_morris_pratt_multibyte+0x888>
ac2f:	48 c7 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],0x1
ac36:	01 00 00 00
ac3a:	0f be 01             	movsx  eax,BYTE PTR [rcx]
ac3d:	c6 85 60 ff ff ff 01 	mov    BYTE PTR [rbp-0xa0],0x1
ac44:	c6 85 4c ff ff ff 01 	mov    BYTE PTR [rbp-0xb4],0x1
ac4b:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
ac51:	8b 95 64 ff ff ff    	mov    edx,DWORD PTR [rbp-0x9c]
ac57:	85 d2                	test   edx,edx
ac59:	0f 84 67 fc ff ff    	je     a8c6 <knuth_morris_pratt_multibyte+0x476>
ac5f:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
ac66:	c6 85 4c ff ff ff 00 	mov    BYTE PTR [rbp-0xb4],0x0
ac6d:	48 01 85 50 ff ff ff 	add    QWORD PTR [rbp-0xb0],rax
ac74:	c6 45 8c 00          	mov    BYTE PTR [rbp-0x74],0x0
ac78:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
ac7c:	48 01 45 90          	add    QWORD PTR [rbp-0x70],rax
ac80:	e9 47 fd ff ff       	jmp    a9cc <knuth_morris_pratt_multibyte+0x57c>
ac85:	0f 1f 00             	nop    DWORD PTR [rax]
ac88:	0f b6 45 8c          	movzx  eax,BYTE PTR [rbp-0x74]
ac8c:	4c 8b bd f0 fe ff ff 	mov    r15,QWORD PTR [rbp-0x110]
ac93:	e9 50 fb ff ff       	jmp    a7e8 <knuth_morris_pratt_multibyte+0x398>
ac98:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
ac9f:	00
aca0:	48 c7 45 98 01 00 00 	mov    QWORD PTR [rbp-0x68],0x1
aca7:	00
aca8:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
acac:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
acb0:	e9 45 fb ff ff       	jmp    a7fa <knuth_morris_pratt_multibyte+0x3aa>
acb5:	0f 1f 00             	nop    DWORD PTR [rax]
acb8:	80 bd 60 ff ff ff 00 	cmp    BYTE PTR [rbp-0xa0],0x0
acbf:	74 9e                	je     ac5f <knuth_morris_pratt_multibyte+0x80f>
acc1:	eb 8e                	jmp    ac51 <knuth_morris_pratt_multibyte+0x801>
acc3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
acc8:	4f 89 7c fd 00       	mov    QWORD PTR [r13+r15*8+0x0],r15
accd:	e9 8f fa ff ff       	jmp    a761 <knuth_morris_pratt_multibyte+0x311>
acd2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
acd8:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
acdc:	e8 cf 75 ff ff       	call   22b0 <mbsinit@plt>
ace1:	85 c0                	test   eax,eax
ace3:	0f 84 86 01 00 00    	je     ae6f <knuth_morris_pratt_multibyte+0xa1f>
ace9:	c6 85 40 ff ff ff 01 	mov    BYTE PTR [rbp-0xc0],0x1
acf0:	e8 fb 71 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
acf5:	4c 8b 85 50 ff ff ff 	mov    r8,QWORD PTR [rbp-0xb0]
acfc:	48 89 c6             	mov    rsi,rax
acff:	4c 89 c7             	mov    rdi,r8
ad02:	4c 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],r8
ad09:	e8 42 e3 ff ff       	call   9050 <strnlen1>
ad0e:	4c 8b 85 f0 fe ff ff 	mov    r8,QWORD PTR [rbp-0x110]
ad15:	48 8d 4b 04          	lea    rcx,[rbx+0x4]
ad19:	48 8d 7b 24          	lea    rdi,[rbx+0x24]
ad1d:	48 89 c2             	mov    rdx,rax
ad20:	4c 89 c6             	mov    rsi,r8
ad23:	e8 c8 f2 ff ff       	call   9ff0 <rpl_mbrtowc>
ad28:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
ad2c:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
ad33:	0f 84 c4 00 00 00    	je     adfd <knuth_morris_pratt_multibyte+0x9ad>
ad39:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
ad3d:	0f 84 ea 00 00 00    	je     ae2d <knuth_morris_pratt_multibyte+0x9dd>
ad43:	48 85 c0             	test   rax,rax
ad46:	75 29                	jne    ad71 <knuth_morris_pratt_multibyte+0x921>
ad48:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
ad4f:	48 c7 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],0x1
ad56:	01 00 00 00
ad5a:	80 38 00             	cmp    BYTE PTR [rax],0x0
ad5d:	0f 85 30 01 00 00    	jne    ae93 <knuth_morris_pratt_multibyte+0xa43>
ad63:	8b 8d 64 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x9c]
ad69:	85 c9                	test   ecx,ecx
ad6b:	0f 85 41 01 00 00    	jne    aeb2 <knuth_morris_pratt_multibyte+0xa62>
ad71:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
ad75:	c6 85 60 ff ff ff 01 	mov    BYTE PTR [rbp-0xa0],0x1
ad7c:	e8 2f 75 ff ff       	call   22b0 <mbsinit@plt>
ad81:	85 c0                	test   eax,eax
ad83:	0f 84 98 00 00 00    	je     ae21 <knuth_morris_pratt_multibyte+0x9d1>
ad89:	c6 85 40 ff ff ff 00 	mov    BYTE PTR [rbp-0xc0],0x0
ad90:	c6 85 4c ff ff ff 01 	mov    BYTE PTR [rbp-0xb4],0x1
ad97:	e9 b5 fe ff ff       	jmp    ac51 <knuth_morris_pratt_multibyte+0x801>
ad9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ada0:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
ada4:	e8 57 71 ff ff       	call   1f00 <strlen@plt>
ada9:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
adad:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
adb1:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
adb5:	e9 40 fa ff ff       	jmp    a7fa <knuth_morris_pratt_multibyte+0x3aa>
adba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
adc0:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
adc4:	e9 bd fb ff ff       	jmp    a986 <knuth_morris_pratt_multibyte+0x536>
adc9:	48 8b bd 10 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xf0]
add0:	e8 2b 71 ff ff       	call   1f00 <strlen@plt>
add5:	c6 85 20 ff ff ff 00 	mov    BYTE PTR [rbp-0xe0],0x0
addc:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
ade3:	31 c0                	xor    eax,eax
ade5:	44 88 b5 0c ff ff ff 	mov    BYTE PTR [rbp-0xf4],r14b
adec:	e9 c3 f7 ff ff       	jmp    a5b4 <knuth_morris_pratt_multibyte+0x164>
adf1:	44 88 b5 0c ff ff ff 	mov    BYTE PTR [rbp-0xf4],r14b
adf8:	e9 a2 f7 ff ff       	jmp    a59f <knuth_morris_pratt_multibyte+0x14f>
adfd:	48 c7 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],0x1
ae04:	01 00 00 00
ae08:	c6 85 60 ff ff ff 00 	mov    BYTE PTR [rbp-0xa0],0x0
ae0f:	e9 4b fe ff ff       	jmp    ac5f <knuth_morris_pratt_multibyte+0x80f>
ae14:	e8 e7 18 00 00       	call   c700 <mmalloca>
ae19:	49 89 c4             	mov    r12,rax
ae1c:	e9 d9 f6 ff ff       	jmp    a4fa <knuth_morris_pratt_multibyte+0xaa>
ae21:	c6 85 4c ff ff ff 01 	mov    BYTE PTR [rbp-0xb4],0x1
ae28:	e9 24 fe ff ff       	jmp    ac51 <knuth_morris_pratt_multibyte+0x801>
ae2d:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
ae34:	e8 c7 70 ff ff       	call   1f00 <strlen@plt>
ae39:	c6 85 60 ff ff ff 00 	mov    BYTE PTR [rbp-0xa0],0x0
ae40:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
ae47:	e9 13 fe ff ff       	jmp    ac5f <knuth_morris_pratt_multibyte+0x80f>
ae4c:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
ae53:	48 8b 9d d8 fe ff ff 	mov    rbx,QWORD PTR [rbp-0x128]
ae5a:	4c 89 e7             	mov    rdi,r12
ae5d:	48 89 03             	mov    QWORD PTR [rbx],rax
ae60:	e8 db 18 00 00       	call   c740 <freea>
ae65:	b8 01 00 00 00       	mov    eax,0x1
ae6a:	e9 63 fa ff ff       	jmp    a8d2 <knuth_morris_pratt_multibyte+0x482>
ae6f:	48 8d 0d 4a 5b 00 00 	lea    rcx,[rip+0x5b4a]        # 109c0 <__PRETTY_FUNCTION__.5056>
ae76:	48 8d 35 db 51 00 00 	lea    rsi,[rip+0x51db]        # 10058 <primes_diff+0x2f8>
ae7d:	48 8d 3d 06 52 00 00 	lea    rdi,[rip+0x5206]        # 1008a <primes_diff+0x32a>
ae84:	ba 96 00 00 00       	mov    edx,0x96
ae89:	e8 52 71 ff ff       	call   1fe0 <__assert_fail@plt>
ae8e:	e8 8d 70 ff ff       	call   1f20 <__stack_chk_fail@plt>
ae93:	48 8d 0d 26 5b 00 00 	lea    rcx,[rip+0x5b26]        # 109c0 <__PRETTY_FUNCTION__.5056>
ae9a:	48 8d 35 b7 51 00 00 	lea    rsi,[rip+0x51b7]        # 10058 <primes_diff+0x2f8>
aea1:	48 8d 3d f9 51 00 00 	lea    rdi,[rip+0x51f9]        # 100a1 <primes_diff+0x341>
aea8:	ba b2 00 00 00       	mov    edx,0xb2
aead:	e8 2e 71 ff ff       	call   1fe0 <__assert_fail@plt>
aeb2:	e8 9f 74 ff ff       	call   2356 <mbuiter_multi_next.part.0>
aeb7:	b9 01 00 00 00       	mov    ecx,0x1
aebc:	e9 e8 f5 ff ff       	jmp    a4a9 <knuth_morris_pratt_multibyte+0x59>
aec1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
aec6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
aecd:	00 00 00

000000000000aed0 <mbsstr>:
aed0:	41 57                	push   r15
aed2:	41 56                	push   r14
aed4:	41 55                	push   r13
aed6:	41 54                	push   r12
aed8:	49 89 fc             	mov    r12,rdi
aedb:	55                   	push   rbp
aedc:	53                   	push   rbx
aedd:	48 89 f3             	mov    rbx,rsi
aee0:	48 81 ec 98 01 00 00 	sub    rsp,0x198
aee7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
aeee:	00 00
aef0:	48 89 84 24 88 01 00 	mov    QWORD PTR [rsp+0x188],rax
aef7:	00
aef8:	31 c0                	xor    eax,eax
aefa:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
aeff:	e8 ec 6f ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
af04:	48 83 f8 01          	cmp    rax,0x1
af08:	0f 87 e2 00 00 00    	ja     aff0 <mbsstr+0x120>
af0e:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
af13:	44 0f b6 38          	movzx  r15d,BYTE PTR [rax]
af17:	4c 89 e0             	mov    rax,r12
af1a:	45 84 ff             	test   r15b,r15b
af1d:	0f 84 33 01 00 00    	je     b056 <mbsstr+0x186>
af23:	41 0f b6 34 24       	movzx  esi,BYTE PTR [r12]
af28:	40 84 f6             	test   sil,sil
af2b:	0f 84 9f 07 00 00    	je     b6d0 <mbsstr+0x800>
af31:	48 8d 5c 24 38       	lea    rbx,[rsp+0x38]
af36:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
af3b:	45 31 ed             	xor    r13d,r13d
af3e:	31 d2                	xor    edx,edx
af40:	45 31 c0             	xor    r8d,r8d
af43:	b8 01 00 00 00       	mov    eax,0x1
af48:	48 89 5c 24 10       	mov    QWORD PTR [rsp+0x10],rbx
af4d:	0f 1f 00             	nop    DWORD PTR [rax]
af50:	49 83 c5 01          	add    r13,0x1
af54:	44 38 fe             	cmp    sil,r15b
af57:	48 8d 5a 01          	lea    rbx,[rdx+0x1]
af5b:	4d 8d 74 24 01       	lea    r14,[r12+0x1]
af60:	0f 84 da 08 00 00    	je     b840 <mbsstr+0x970>
af66:	41 80 7c 24 01 00    	cmp    BYTE PTR [r12+0x1],0x0
af6c:	0f 84 5e 07 00 00    	je     b6d0 <mbsstr+0x800>
af72:	49 83 fd 09          	cmp    r13,0x9
af76:	0f 97 c2             	seta   dl
af79:	20 c2                	and    dl,al
af7b:	0f 84 01 01 00 00    	je     b082 <mbsstr+0x1b2>
af81:	4b 8d 44 ad 00       	lea    rax,[r13+r13*4+0x0]
af86:	48 39 d8             	cmp    rax,rbx
af89:	0f 87 f1 00 00 00    	ja     b080 <mbsstr+0x1b0>
af8f:	48 85 ed             	test   rbp,rbp
af92:	88 14 24             	mov    BYTE PTR [rsp],dl
af95:	74 22                	je     afb9 <mbsstr+0xe9>
af97:	48 89 de             	mov    rsi,rbx
af9a:	48 89 ef             	mov    rdi,rbp
af9d:	4c 29 c6             	sub    rsi,r8
afa0:	e8 5b 70 ff ff       	call   2000 <strnlen@plt>
afa5:	48 01 c5             	add    rbp,rax
afa8:	49 89 d8             	mov    r8,rbx
afab:	0f b6 14 24          	movzx  edx,BYTE PTR [rsp]
afaf:	80 7d 00 00          	cmp    BYTE PTR [rbp+0x0],0x0
afb3:	0f 85 c7 00 00 00    	jne    b080 <mbsstr+0x1b0>
afb9:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
afbe:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
afc2:	48 89 ef             	mov    rdi,rbp
afc5:	e8 36 6f ff ff       	call   1f00 <strlen@plt>
afca:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
afcf:	48 89 c2             	mov    rdx,rax
afd2:	48 89 ee             	mov    rsi,rbp
afd5:	4c 89 f7             	mov    rdi,r14
afd8:	e8 c3 f2 ff ff       	call   a2a0 <knuth_morris_pratt>
afdd:	84 c0                	test   al,al
afdf:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
afe3:	0f 85 e6 0e 00 00    	jne    becf <mbsstr+0xfff>
afe9:	31 ed                	xor    ebp,ebp
afeb:	e9 92 00 00 00       	jmp    b082 <mbsstr+0x1b2>
aff0:	48 89 d8             	mov    rax,rbx
aff3:	4c 8d 2d a6 59 00 00 	lea    r13,[rip+0x59a6]        # 109a0 <is_basic_table>
affa:	48 89 5c 24 50       	mov    QWORD PTR [rsp+0x50],rbx
afff:	0f be 10             	movsx  edx,BYTE PTR [rax]
b002:	48 8d 5c 24 40       	lea    rbx,[rsp+0x40]
b007:	c6 44 24 40 00       	mov    BYTE PTR [rsp+0x40],0x0
b00c:	48 c7 44 24 44 00 00 	mov    QWORD PTR [rsp+0x44],0x0
b013:	00 00
b015:	c6 44 24 4c 00       	mov    BYTE PTR [rsp+0x4c],0x0
b01a:	48 8d 6b 04          	lea    rbp,[rbx+0x4]
b01e:	89 d0                	mov    eax,edx
b020:	c0 e8 05             	shr    al,0x5
b023:	83 e0 07             	and    eax,0x7
b026:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
b02b:	0f a3 d0             	bt     eax,edx
b02e:	0f 83 9c 0c 00 00    	jae    bcd0 <mbsstr+0xe00>
b034:	48 c7 44 24 58 01 00 	mov    QWORD PTR [rsp+0x58],0x1
b03b:	00 00
b03d:	89 54 24 64          	mov    DWORD PTR [rsp+0x64],edx
b041:	c6 44 24 60 01       	mov    BYTE PTR [rsp+0x60],0x1
b046:	c6 44 24 4c 01       	mov    BYTE PTR [rsp+0x4c],0x1
b04b:	8b 44 24 64          	mov    eax,DWORD PTR [rsp+0x64]
b04f:	85 c0                	test   eax,eax
b051:	75 58                	jne    b0ab <mbsstr+0x1db>
b053:	4c 89 e0             	mov    rax,r12
b056:	48 8b 9c 24 88 01 00 	mov    rbx,QWORD PTR [rsp+0x188]
b05d:	00
b05e:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
b065:	00 00
b067:	0f 85 43 0f 00 00    	jne    bfb0 <mbsstr+0x10e0>
b06d:	48 81 c4 98 01 00 00 	add    rsp,0x198
b074:	5b                   	pop    rbx
b075:	5d                   	pop    rbp
b076:	41 5c                	pop    r12
b078:	41 5d                	pop    r13
b07a:	41 5e                	pop    r14
b07c:	41 5f                	pop    r15
b07e:	c3                   	ret
b07f:	90                   	nop
b080:	89 d0                	mov    eax,edx
b082:	41 0f b6 36          	movzx  esi,BYTE PTR [r14]
b086:	4d 89 f4             	mov    r12,r14
b089:	48 89 da             	mov    rdx,rbx
b08c:	e9 bf fe ff ff       	jmp    af50 <mbsstr+0x80>
b091:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
b098:	48 c7 44 24 58 01 00 	mov    QWORD PTR [rsp+0x58],0x1
b09f:	00 00
b0a1:	c6 44 24 60 00       	mov    BYTE PTR [rsp+0x60],0x0
b0a6:	c6 44 24 4c 01       	mov    BYTE PTR [rsp+0x4c],0x1
b0ab:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
b0b0:	c6 84 24 c0 00 00 00 	mov    BYTE PTR [rsp+0xc0],0x0
b0b7:	00
b0b8:	45 31 f6             	xor    r14d,r14d
b0bb:	31 db                	xor    ebx,ebx
b0bd:	80 bc 24 c0 00 00 00 	cmp    BYTE PTR [rsp+0xc0],0x0
b0c4:	00
b0c5:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x0
b0cc:	00
b0cd:	48 c7 84 24 84 00 00 	mov    QWORD PTR [rsp+0x84],0x0
b0d4:	00 00 00 00 00
b0d9:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x0
b0e0:	00
b0e1:	48 8d ac 24 40 01 00 	lea    rbp,[rsp+0x140]
b0e8:	00
b0e9:	48 89 84 24 90 00 00 	mov    QWORD PTR [rsp+0x90],rax
b0f0:	00
b0f1:	48 8d 44 24 38       	lea    rax,[rsp+0x38]
b0f6:	4c 89 a4 24 d0 00 00 	mov    QWORD PTR [rsp+0xd0],r12
b0fd:	00
b0fe:	48 c7 84 24 c4 00 00 	mov    QWORD PTR [rsp+0xc4],0x0
b105:	00 00 00 00 00
b10a:	c6 84 24 cc 00 00 00 	mov    BYTE PTR [rsp+0xcc],0x0
b111:	00
b112:	4c 8d bc 24 00 01 00 	lea    r15,[rsp+0x100]
b119:	00
b11a:	48 c7 44 24 20 00 00 	mov    QWORD PTR [rsp+0x20],0x0
b121:	00 00
b123:	c6 44 24 10 01       	mov    BYTE PTR [rsp+0x10],0x1
b128:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
b12d:	0f 85 10 03 00 00    	jne    b443 <mbsstr+0x573>
b133:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
b138:	48 8b 8c 24 d0 00 00 	mov    rcx,QWORD PTR [rsp+0xd0]
b13f:	00
b140:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
b143:	89 d0                	mov    eax,edx
b145:	c0 e8 05             	shr    al,0x5
b148:	83 e0 07             	and    eax,0x7
b14b:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
b150:	0f a3 d0             	bt     eax,edx
b153:	0f 83 57 07 00 00    	jae    b8b0 <mbsstr+0x9e0>
b159:	48 c7 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],0x1
b160:	00 01 00 00 00
b165:	0f be 01             	movsx  eax,BYTE PTR [rcx]
b168:	c6 84 24 e0 00 00 00 	mov    BYTE PTR [rsp+0xe0],0x1
b16f:	01
b170:	c6 84 24 cc 00 00 00 	mov    BYTE PTR [rsp+0xcc],0x1
b177:	01
b178:	89 84 24 e4 00 00 00 	mov    DWORD PTR [rsp+0xe4],eax
b17f:	8b 84 24 e4 00 00 00 	mov    eax,DWORD PTR [rsp+0xe4]
b186:	85 c0                	test   eax,eax
b188:	0f 84 42 05 00 00    	je     b6d0 <mbsstr+0x800>
b18e:	49 83 fe 09          	cmp    r14,0x9
b192:	0f 97 c0             	seta   al
b195:	22 44 24 10          	and    al,BYTE PTR [rsp+0x10]
b199:	0f 84 08 0e 00 00    	je     bfa7 <mbsstr+0x10d7>
b19f:	4b 8d 14 b6          	lea    rdx,[r14+r14*4]
b1a3:	48 39 d3             	cmp    rbx,rdx
b1a6:	0f 83 34 07 00 00    	jae    b8e0 <mbsstr+0xa10>
b1ac:	48 83 c3 01          	add    rbx,0x1
b1b0:	88 44 24 10          	mov    BYTE PTR [rsp+0x10],al
b1b4:	80 7c 24 60 00       	cmp    BYTE PTR [rsp+0x60],0x0
b1b9:	0f 84 72 05 00 00    	je     b731 <mbsstr+0x861>
b1bf:	8b 44 24 64          	mov    eax,DWORD PTR [rsp+0x64]
b1c3:	39 84 24 e4 00 00 00 	cmp    DWORD PTR [rsp+0xe4],eax
b1ca:	0f 85 49 02 00 00    	jne    b419 <mbsstr+0x549>
b1d0:	66 0f 6f 84 24 c0 00 	movdqa xmm0,XMMWORD PTR [rsp+0xc0]
b1d7:	00 00
b1d9:	48 8d 4d 04          	lea    rcx,[rbp+0x4]
b1dd:	c6 84 24 40 01 00 00 	mov    BYTE PTR [rsp+0x140],0x0
b1e4:	00
b1e5:	48 c7 45 04 00 00 00 	mov    QWORD PTR [rbp+0x4],0x0
b1ec:	00
b1ed:	0f 29 84 24 00 01 00 	movaps XMMWORD PTR [rsp+0x100],xmm0
b1f4:	00
b1f5:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x0
b1fc:	00
b1fd:	c6 84 24 0c 01 00 00 	mov    BYTE PTR [rsp+0x10c],0x0
b204:	00
b205:	66 0f 6f 84 24 d0 00 	movdqa xmm0,XMMWORD PTR [rsp+0xd0]
b20c:	00 00
b20e:	0f 29 84 24 10 01 00 	movaps XMMWORD PTR [rsp+0x110],xmm0
b215:	00
b216:	48 8b 84 24 18 01 00 	mov    rax,QWORD PTR [rsp+0x118]
b21d:	00
b21e:	48 01 84 24 10 01 00 	add    QWORD PTR [rsp+0x110],rax
b225:	00
b226:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
b22b:	66 0f 6f 84 24 e0 00 	movdqa xmm0,XMMWORD PTR [rsp+0xe0]
b232:	00 00
b234:	0f be 10             	movsx  edx,BYTE PTR [rax]
b237:	48 89 84 24 50 01 00 	mov    QWORD PTR [rsp+0x150],rax
b23e:	00
b23f:	0f 29 84 24 20 01 00 	movaps XMMWORD PTR [rsp+0x120],xmm0
b246:	00
b247:	89 d0                	mov    eax,edx
b249:	c0 e8 05             	shr    al,0x5
b24c:	66 0f 6f 84 24 f0 00 	movdqa xmm0,XMMWORD PTR [rsp+0xf0]
b253:	00 00
b255:	83 e0 07             	and    eax,0x7
b258:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
b25d:	0f 29 84 24 30 01 00 	movaps XMMWORD PTR [rsp+0x130],xmm0
b264:	00
b265:	0f a3 d0             	bt     eax,edx
b268:	0f 83 8a 09 00 00    	jae    bbf8 <mbsstr+0xd28>
b26e:	48 c7 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],0x1
b275:	00 01 00 00 00
b27a:	89 94 24 64 01 00 00 	mov    DWORD PTR [rsp+0x164],edx
b281:	c6 84 24 60 01 00 00 	mov    BYTE PTR [rsp+0x160],0x1
b288:	01
b289:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x1
b290:	01
b291:	8b b4 24 64 01 00 00 	mov    esi,DWORD PTR [rsp+0x164]
b298:	85 f6                	test   esi,esi
b29a:	0f 84 34 0d 00 00    	je     bfd4 <mbsstr+0x1104>
b2a0:	48 8b 84 24 58 01 00 	mov    rax,QWORD PTR [rsp+0x158]
b2a7:	00
b2a8:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x0
b2af:	00
b2b0:	48 83 c3 01          	add    rbx,0x1
b2b4:	48 01 84 24 50 01 00 	add    QWORD PTR [rsp+0x150],rax
b2bb:	00
b2bc:	e9 c2 00 00 00       	jmp    b383 <mbsstr+0x4b3>
b2c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
b2c8:	80 bc 24 00 01 00 00 	cmp    BYTE PTR [rsp+0x100],0x0
b2cf:	00
b2d0:	0f 85 3b 03 00 00    	jne    b611 <mbsstr+0x741>
b2d6:	48 8b 8c 24 10 01 00 	mov    rcx,QWORD PTR [rsp+0x110]
b2dd:	00
b2de:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
b2e1:	89 d0                	mov    eax,edx
b2e3:	c0 e8 05             	shr    al,0x5
b2e6:	83 e0 07             	and    eax,0x7
b2e9:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
b2ee:	0f a3 d0             	bt     eax,edx
b2f1:	0f 83 01 03 00 00    	jae    b5f8 <mbsstr+0x728>
b2f7:	48 c7 84 24 18 01 00 	mov    QWORD PTR [rsp+0x118],0x1
b2fe:	00 01 00 00 00
b303:	0f be 01             	movsx  eax,BYTE PTR [rcx]
b306:	c6 84 24 20 01 00 00 	mov    BYTE PTR [rsp+0x120],0x1
b30d:	01
b30e:	c6 84 24 0c 01 00 00 	mov    BYTE PTR [rsp+0x10c],0x1
b315:	01
b316:	89 84 24 24 01 00 00 	mov    DWORD PTR [rsp+0x124],eax
b31d:	8b 84 24 24 01 00 00 	mov    eax,DWORD PTR [rsp+0x124]
b324:	85 c0                	test   eax,eax
b326:	0f 84 a4 03 00 00    	je     b6d0 <mbsstr+0x800>
b32c:	80 bc 24 60 01 00 00 	cmp    BYTE PTR [rsp+0x160],0x0
b333:	00
b334:	0f 84 c9 00 00 00    	je     b403 <mbsstr+0x533>
b33a:	39 84 24 64 01 00 00 	cmp    DWORD PTR [rsp+0x164],eax
b341:	0f 95 c0             	setne  al
b344:	84 c0                	test   al,al
b346:	48 8d 53 01          	lea    rdx,[rbx+0x1]
b34a:	0f 85 c9 00 00 00    	jne    b419 <mbsstr+0x549>
b350:	48 8b 84 24 18 01 00 	mov    rax,QWORD PTR [rsp+0x118]
b357:	00
b358:	48 01 84 24 10 01 00 	add    QWORD PTR [rsp+0x110],rax
b35f:	00
b360:	48 89 d3             	mov    rbx,rdx
b363:	48 8b 84 24 58 01 00 	mov    rax,QWORD PTR [rsp+0x158]
b36a:	00
b36b:	48 01 84 24 50 01 00 	add    QWORD PTR [rsp+0x150],rax
b372:	00
b373:	c6 84 24 0c 01 00 00 	mov    BYTE PTR [rsp+0x10c],0x0
b37a:	00
b37b:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x0
b382:	00
b383:	80 bc 24 40 01 00 00 	cmp    BYTE PTR [rsp+0x140],0x0
b38a:	00
b38b:	0f 85 98 01 00 00    	jne    b529 <mbsstr+0x659>
b391:	48 8b 8c 24 50 01 00 	mov    rcx,QWORD PTR [rsp+0x150]
b398:	00
b399:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
b39c:	89 d0                	mov    eax,edx
b39e:	c0 e8 05             	shr    al,0x5
b3a1:	83 e0 07             	and    eax,0x7
b3a4:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
b3a9:	0f a3 d0             	bt     eax,edx
b3ac:	0f 83 5e 01 00 00    	jae    b510 <mbsstr+0x640>
b3b2:	48 c7 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],0x1
b3b9:	00 01 00 00 00
b3be:	0f be 01             	movsx  eax,BYTE PTR [rcx]
b3c1:	c6 84 24 60 01 00 00 	mov    BYTE PTR [rsp+0x160],0x1
b3c8:	01
b3c9:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x1
b3d0:	01
b3d1:	89 84 24 64 01 00 00 	mov    DWORD PTR [rsp+0x164],eax
b3d8:	8b 94 24 64 01 00 00 	mov    edx,DWORD PTR [rsp+0x164]
b3df:	85 d2                	test   edx,edx
b3e1:	0f 84 01 02 00 00    	je     b5e8 <mbsstr+0x718>
b3e7:	80 bc 24 0c 01 00 00 	cmp    BYTE PTR [rsp+0x10c],0x0
b3ee:	00
b3ef:	0f 84 d3 fe ff ff    	je     b2c8 <mbsstr+0x3f8>
b3f5:	80 bc 24 20 01 00 00 	cmp    BYTE PTR [rsp+0x120],0x0
b3fc:	00
b3fd:	0f 85 1a ff ff ff    	jne    b31d <mbsstr+0x44d>
b403:	48 8b 94 24 18 01 00 	mov    rdx,QWORD PTR [rsp+0x118]
b40a:	00
b40b:	48 3b 94 24 58 01 00 	cmp    rdx,QWORD PTR [rsp+0x158]
b412:	00
b413:	0f 84 c7 02 00 00    	je     b6e0 <mbsstr+0x810>
b419:	48 8b 8c 24 d8 00 00 	mov    rcx,QWORD PTR [rsp+0xd8]
b420:	00
b421:	48 01 8c 24 d0 00 00 	add    QWORD PTR [rsp+0xd0],rcx
b428:	00
b429:	49 83 c6 01          	add    r14,0x1
b42d:	80 bc 24 c0 00 00 00 	cmp    BYTE PTR [rsp+0xc0],0x0
b434:	00
b435:	c6 84 24 cc 00 00 00 	mov    BYTE PTR [rsp+0xcc],0x0
b43c:	00
b43d:	0f 84 f5 fc ff ff    	je     b138 <mbsstr+0x268>
b443:	48 8d 84 24 c0 00 00 	lea    rax,[rsp+0xc0]
b44a:	00
b44b:	48 89 04 24          	mov    QWORD PTR [rsp],rax
b44f:	e8 9c 6a ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
b454:	4c 8b 84 24 d0 00 00 	mov    r8,QWORD PTR [rsp+0xd0]
b45b:	00
b45c:	48 89 c6             	mov    rsi,rax
b45f:	4c 89 c7             	mov    rdi,r8
b462:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
b467:	e8 e4 db ff ff       	call   9050 <strnlen1>
b46c:	48 8b 34 24          	mov    rsi,QWORD PTR [rsp]
b470:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
b475:	48 89 c2             	mov    rdx,rax
b478:	48 8d 4e 04          	lea    rcx,[rsi+0x4]
b47c:	48 8d 7e 24          	lea    rdi,[rsi+0x24]
b480:	4c 89 c6             	mov    rsi,r8
b483:	e8 68 eb ff ff       	call   9ff0 <rpl_mbrtowc>
b488:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
b48c:	48 89 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],rax
b493:	00
b494:	0f 84 66 02 00 00    	je     b700 <mbsstr+0x830>
b49a:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
b49e:	0f 84 24 07 00 00    	je     bbc8 <mbsstr+0xcf8>
b4a4:	48 85 c0             	test   rax,rax
b4a7:	75 2c                	jne    b4d5 <mbsstr+0x605>
b4a9:	48 8b 84 24 d0 00 00 	mov    rax,QWORD PTR [rsp+0xd0]
b4b0:	00
b4b1:	48 c7 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],0x1
b4b8:	00 01 00 00 00
b4bd:	80 38 00             	cmp    BYTE PTR [rax],0x0
b4c0:	0f 85 ef 0a 00 00    	jne    bfb5 <mbsstr+0x10e5>
b4c6:	8b 84 24 e4 00 00 00 	mov    eax,DWORD PTR [rsp+0xe4]
b4cd:	85 c0                	test   eax,eax
b4cf:	0f 85 bd 07 00 00    	jne    bc92 <mbsstr+0xdc2>
b4d5:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
b4d9:	c6 84 24 e0 00 00 00 	mov    BYTE PTR [rsp+0xe0],0x1
b4e0:	01
b4e1:	48 83 c7 04          	add    rdi,0x4
b4e5:	e8 c6 6d ff ff       	call   22b0 <mbsinit@plt>
b4ea:	85 c0                	test   eax,eax
b4ec:	0f 84 0e 06 00 00    	je     bb00 <mbsstr+0xc30>
b4f2:	c6 84 24 c0 00 00 00 	mov    BYTE PTR [rsp+0xc0],0x0
b4f9:	00
b4fa:	c6 84 24 cc 00 00 00 	mov    BYTE PTR [rsp+0xcc],0x1
b501:	01
b502:	e9 78 fc ff ff       	jmp    b17f <mbsstr+0x2af>
b507:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
b50e:	00 00
b510:	48 8d 7d 04          	lea    rdi,[rbp+0x4]
b514:	e8 97 6d ff ff       	call   22b0 <mbsinit@plt>
b519:	85 c0                	test   eax,eax
b51b:	0f 84 67 0a 00 00    	je     bf88 <mbsstr+0x10b8>
b521:	c6 84 24 40 01 00 00 	mov    BYTE PTR [rsp+0x140],0x1
b528:	01
b529:	e8 c2 69 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
b52e:	4c 8b 84 24 50 01 00 	mov    r8,QWORD PTR [rsp+0x150]
b535:	00
b536:	48 89 c6             	mov    rsi,rax
b539:	4c 89 c7             	mov    rdi,r8
b53c:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
b540:	e8 0b db ff ff       	call   9050 <strnlen1>
b545:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
b549:	48 8d 4d 04          	lea    rcx,[rbp+0x4]
b54d:	48 8d 7d 24          	lea    rdi,[rbp+0x24]
b551:	48 89 c2             	mov    rdx,rax
b554:	4c 89 c6             	mov    rsi,r8
b557:	e8 94 ea ff ff       	call   9ff0 <rpl_mbrtowc>
b55c:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
b560:	48 89 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],rax
b567:	00
b568:	0f 84 02 02 00 00    	je     b770 <mbsstr+0x8a0>
b56e:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
b572:	0f 84 48 02 00 00    	je     b7c0 <mbsstr+0x8f0>
b578:	48 85 c0             	test   rax,rax
b57b:	75 2c                	jne    b5a9 <mbsstr+0x6d9>
b57d:	48 8b 84 24 50 01 00 	mov    rax,QWORD PTR [rsp+0x150]
b584:	00
b585:	48 c7 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],0x1
b58c:	00 01 00 00 00
b591:	80 38 00             	cmp    BYTE PTR [rax],0x0
b594:	0f 85 1b 0a 00 00    	jne    bfb5 <mbsstr+0x10e5>
b59a:	8b 8c 24 64 01 00 00 	mov    ecx,DWORD PTR [rsp+0x164]
b5a1:	85 c9                	test   ecx,ecx
b5a3:	0f 85 e9 06 00 00    	jne    bc92 <mbsstr+0xdc2>
b5a9:	48 8d 7d 04          	lea    rdi,[rbp+0x4]
b5ad:	c6 84 24 60 01 00 00 	mov    BYTE PTR [rsp+0x160],0x1
b5b4:	01
b5b5:	e8 f6 6c ff ff       	call   22b0 <mbsinit@plt>
b5ba:	85 c0                	test   eax,eax
b5bc:	0f 84 2e 02 00 00    	je     b7f0 <mbsstr+0x920>
b5c2:	8b 94 24 64 01 00 00 	mov    edx,DWORD PTR [rsp+0x164]
b5c9:	c6 84 24 40 01 00 00 	mov    BYTE PTR [rsp+0x140],0x0
b5d0:	00
b5d1:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x1
b5d8:	01
b5d9:	85 d2                	test   edx,edx
b5db:	0f 85 06 fe ff ff    	jne    b3e7 <mbsstr+0x517>
b5e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
b5e8:	48 8b 84 24 d0 00 00 	mov    rax,QWORD PTR [rsp+0xd0]
b5ef:	00
b5f0:	e9 61 fa ff ff       	jmp    b056 <mbsstr+0x186>
b5f5:	0f 1f 00             	nop    DWORD PTR [rax]
b5f8:	49 8d 7f 04          	lea    rdi,[r15+0x4]
b5fc:	e8 af 6c ff ff       	call   22b0 <mbsinit@plt>
b601:	85 c0                	test   eax,eax
b603:	0f 84 7f 09 00 00    	je     bf88 <mbsstr+0x10b8>
b609:	c6 84 24 00 01 00 00 	mov    BYTE PTR [rsp+0x100],0x1
b610:	01
b611:	e8 da 68 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
b616:	4c 8b 84 24 10 01 00 	mov    r8,QWORD PTR [rsp+0x110]
b61d:	00
b61e:	48 89 c6             	mov    rsi,rax
b621:	4c 89 c7             	mov    rdi,r8
b624:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
b628:	e8 23 da ff ff       	call   9050 <strnlen1>
b62d:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
b631:	49 8d 4f 04          	lea    rcx,[r15+0x4]
b635:	49 8d 7f 24          	lea    rdi,[r15+0x24]
b639:	48 89 c2             	mov    rdx,rax
b63c:	4c 89 c6             	mov    rsi,r8
b63f:	e8 ac e9 ff ff       	call   9ff0 <rpl_mbrtowc>
b644:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
b648:	48 89 84 24 18 01 00 	mov    QWORD PTR [rsp+0x118],rax
b64f:	00
b650:	0f 84 42 01 00 00    	je     b798 <mbsstr+0x8c8>
b656:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
b65a:	0f 84 a0 01 00 00    	je     b800 <mbsstr+0x930>
b660:	48 85 c0             	test   rax,rax
b663:	75 2c                	jne    b691 <mbsstr+0x7c1>
b665:	48 8b 84 24 10 01 00 	mov    rax,QWORD PTR [rsp+0x110]
b66c:	00
b66d:	48 c7 84 24 18 01 00 	mov    QWORD PTR [rsp+0x118],0x1
b674:	00 01 00 00 00
b679:	80 38 00             	cmp    BYTE PTR [rax],0x0
b67c:	0f 85 33 09 00 00    	jne    bfb5 <mbsstr+0x10e5>
b682:	8b 84 24 24 01 00 00 	mov    eax,DWORD PTR [rsp+0x124]
b689:	85 c0                	test   eax,eax
b68b:	0f 85 01 06 00 00    	jne    bc92 <mbsstr+0xdc2>
b691:	49 8d 7f 04          	lea    rdi,[r15+0x4]
b695:	c6 84 24 20 01 00 00 	mov    BYTE PTR [rsp+0x120],0x1
b69c:	01
b69d:	e8 0e 6c ff ff       	call   22b0 <mbsinit@plt>
b6a2:	85 c0                	test   eax,eax
b6a4:	0f 84 86 01 00 00    	je     b830 <mbsstr+0x960>
b6aa:	8b 84 24 24 01 00 00 	mov    eax,DWORD PTR [rsp+0x124]
b6b1:	c6 84 24 00 01 00 00 	mov    BYTE PTR [rsp+0x100],0x0
b6b8:	00
b6b9:	c6 84 24 0c 01 00 00 	mov    BYTE PTR [rsp+0x10c],0x1
b6c0:	01
b6c1:	85 c0                	test   eax,eax
b6c3:	0f 85 63 fc ff ff    	jne    b32c <mbsstr+0x45c>
b6c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
b6d0:	31 c0                	xor    eax,eax
b6d2:	e9 7f f9 ff ff       	jmp    b056 <mbsstr+0x186>
b6d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
b6de:	00 00
b6e0:	48 8b b4 24 50 01 00 	mov    rsi,QWORD PTR [rsp+0x150]
b6e7:	00
b6e8:	48 8b bc 24 10 01 00 	mov    rdi,QWORD PTR [rsp+0x110]
b6ef:	00
b6f0:	e8 3b 69 ff ff       	call   2030 <memcmp@plt>
b6f5:	85 c0                	test   eax,eax
b6f7:	0f 95 c0             	setne  al
b6fa:	e9 45 fc ff ff       	jmp    b344 <mbsstr+0x474>
b6ff:	90                   	nop
b700:	48 c7 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],0x1
b707:	00 01 00 00 00
b70c:	c6 84 24 e0 00 00 00 	mov    BYTE PTR [rsp+0xe0],0x0
b713:	00
b714:	c6 84 24 cc 00 00 00 	mov    BYTE PTR [rsp+0xcc],0x1
b71b:	01
b71c:	49 83 fe 09          	cmp    r14,0x9
b720:	0f 97 c0             	seta   al
b723:	22 44 24 10          	and    al,BYTE PTR [rsp+0x10]
b727:	0f 85 3b 08 00 00    	jne    bf68 <mbsstr+0x1098>
b72d:	48 83 c3 01          	add    rbx,0x1
b731:	48 8b 8c 24 d8 00 00 	mov    rcx,QWORD PTR [rsp+0xd8]
b738:	00
b739:	48 3b 4c 24 58       	cmp    rcx,QWORD PTR [rsp+0x58]
b73e:	0f 85 dd fc ff ff    	jne    b421 <mbsstr+0x551>
b744:	48 8b 74 24 50       	mov    rsi,QWORD PTR [rsp+0x50]
b749:	48 8b bc 24 d0 00 00 	mov    rdi,QWORD PTR [rsp+0xd0]
b750:	00
b751:	48 89 ca             	mov    rdx,rcx
b754:	48 89 0c 24          	mov    QWORD PTR [rsp],rcx
b758:	e8 d3 68 ff ff       	call   2030 <memcmp@plt>
b75d:	85 c0                	test   eax,eax
b75f:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
b763:	0f 85 b8 fc ff ff    	jne    b421 <mbsstr+0x551>
b769:	e9 62 fa ff ff       	jmp    b1d0 <mbsstr+0x300>
b76e:	66 90                	xchg   ax,ax
b770:	48 c7 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],0x1
b777:	00 01 00 00 00
b77c:	c6 84 24 60 01 00 00 	mov    BYTE PTR [rsp+0x160],0x0
b783:	00
b784:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x1
b78b:	01
b78c:	e9 56 fc ff ff       	jmp    b3e7 <mbsstr+0x517>
b791:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
b798:	48 c7 84 24 18 01 00 	mov    QWORD PTR [rsp+0x118],0x1
b79f:	00 01 00 00 00
b7a4:	c6 84 24 20 01 00 00 	mov    BYTE PTR [rsp+0x120],0x0
b7ab:	00
b7ac:	c6 84 24 0c 01 00 00 	mov    BYTE PTR [rsp+0x10c],0x1
b7b3:	01
b7b4:	e9 4a fc ff ff       	jmp    b403 <mbsstr+0x533>
b7b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
b7c0:	48 8b bc 24 50 01 00 	mov    rdi,QWORD PTR [rsp+0x150]
b7c7:	00
b7c8:	e8 33 67 ff ff       	call   1f00 <strlen@plt>
b7cd:	c6 84 24 60 01 00 00 	mov    BYTE PTR [rsp+0x160],0x0
b7d4:	00
b7d5:	48 89 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],rax
b7dc:	00
b7dd:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x1
b7e4:	01
b7e5:	e9 fd fb ff ff       	jmp    b3e7 <mbsstr+0x517>
b7ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
b7f0:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x1
b7f7:	01
b7f8:	e9 db fb ff ff       	jmp    b3d8 <mbsstr+0x508>
b7fd:	0f 1f 00             	nop    DWORD PTR [rax]
b800:	48 8b bc 24 10 01 00 	mov    rdi,QWORD PTR [rsp+0x110]
b807:	00
b808:	e8 f3 66 ff ff       	call   1f00 <strlen@plt>
b80d:	c6 84 24 20 01 00 00 	mov    BYTE PTR [rsp+0x120],0x0
b814:	00
b815:	48 89 84 24 18 01 00 	mov    QWORD PTR [rsp+0x118],rax
b81c:	00
b81d:	c6 84 24 0c 01 00 00 	mov    BYTE PTR [rsp+0x10c],0x1
b824:	01
b825:	e9 d9 fb ff ff       	jmp    b403 <mbsstr+0x533>
b82a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
b830:	c6 84 24 0c 01 00 00 	mov    BYTE PTR [rsp+0x10c],0x1
b837:	01
b838:	e9 e0 fa ff ff       	jmp    b31d <mbsstr+0x44d>
b83d:	0f 1f 00             	nop    DWORD PTR [rax]
b840:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
b845:	0f b6 71 01          	movzx  esi,BYTE PTR [rcx+0x1]
b849:	40 84 f6             	test   sil,sil
b84c:	0f 84 01 f8 ff ff    	je     b053 <mbsstr+0x183>
b852:	41 0f b6 3e          	movzx  edi,BYTE PTR [r14]
b856:	40 84 ff             	test   dil,dil
b859:	0f 84 71 fe ff ff    	je     b6d0 <mbsstr+0x800>
b85f:	40 38 fe             	cmp    sil,dil
b862:	48 8d 5a 02          	lea    rbx,[rdx+0x2]
b866:	0f 85 06 f7 ff ff    	jne    af72 <mbsstr+0xa2>
b86c:	48 f7 da             	neg    rdx
b86f:	4c 8d 0c 11          	lea    r9,[rcx+rdx*1]
b873:	4c 01 e2             	add    rdx,r12
b876:	eb 22                	jmp    b89a <mbsstr+0x9ca>
b878:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
b87f:	00
b880:	0f b6 3c 1a          	movzx  edi,BYTE PTR [rdx+rbx*1]
b884:	40 84 ff             	test   dil,dil
b887:	0f 84 43 fe ff ff    	je     b6d0 <mbsstr+0x800>
b88d:	48 83 c3 01          	add    rbx,0x1
b891:	40 38 fe             	cmp    sil,dil
b894:	0f 85 d8 f6 ff ff    	jne    af72 <mbsstr+0xa2>
b89a:	41 0f b6 34 19       	movzx  esi,BYTE PTR [r9+rbx*1]
b89f:	40 84 f6             	test   sil,sil
b8a2:	75 dc                	jne    b880 <mbsstr+0x9b0>
b8a4:	e9 aa f7 ff ff       	jmp    b053 <mbsstr+0x183>
b8a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
b8b0:	48 8d 84 24 c0 00 00 	lea    rax,[rsp+0xc0]
b8b7:	00
b8b8:	48 8d bc 24 c4 00 00 	lea    rdi,[rsp+0xc4]
b8bf:	00
b8c0:	48 89 04 24          	mov    QWORD PTR [rsp],rax
b8c4:	e8 e7 69 ff ff       	call   22b0 <mbsinit@plt>
b8c9:	85 c0                	test   eax,eax
b8cb:	0f 84 b7 06 00 00    	je     bf88 <mbsstr+0x10b8>
b8d1:	c6 84 24 c0 00 00 00 	mov    BYTE PTR [rsp+0xc0],0x1
b8d8:	01
b8d9:	e9 71 fb ff ff       	jmp    b44f <mbsstr+0x57f>
b8de:	66 90                	xchg   ax,ax
b8e0:	48 89 de             	mov    rsi,rbx
b8e3:	48 2b 74 24 20       	sub    rsi,QWORD PTR [rsp+0x20]
b8e8:	0f b6 84 24 8c 00 00 	movzx  eax,BYTE PTR [rsp+0x8c]
b8ef:	00
b8f0:	48 89 34 24          	mov    QWORD PTR [rsp],rsi
b8f4:	0f 84 4d 06 00 00    	je     bf47 <mbsstr+0x1077>
b8fa:	84 c0                	test   al,al
b8fc:	74 2d                	je     b92b <mbsstr+0xa5b>
b8fe:	80 bc 24 a0 00 00 00 	cmp    BYTE PTR [rsp+0xa0],0x0
b905:	00
b906:	75 74                	jne    b97c <mbsstr+0xaac>
b908:	48 8b 84 24 98 00 00 	mov    rax,QWORD PTR [rsp+0x98]
b90f:	00
b910:	48 01 84 24 90 00 00 	add    QWORD PTR [rsp+0x90],rax
b917:	00
b918:	48 83 2c 24 01       	sub    QWORD PTR [rsp],0x1
b91d:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x0
b924:	00
b925:	0f 84 0d 02 00 00    	je     bb38 <mbsstr+0xc68>
b92b:	80 bc 24 80 00 00 00 	cmp    BYTE PTR [rsp+0x80],0x0
b932:	00
b933:	0f 85 7f 01 00 00    	jne    bab8 <mbsstr+0xbe8>
b939:	48 8b 8c 24 90 00 00 	mov    rcx,QWORD PTR [rsp+0x90]
b940:	00
b941:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
b944:	89 d0                	mov    eax,edx
b946:	c0 e8 05             	shr    al,0x5
b949:	83 e0 07             	and    eax,0x7
b94c:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
b951:	0f a3 d0             	bt     eax,edx
b954:	73 7a                	jae    b9d0 <mbsstr+0xb00>
b956:	48 c7 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],0x1
b95d:	00 01 00 00 00
b962:	0f be 01             	movsx  eax,BYTE PTR [rcx]
b965:	c6 84 24 a0 00 00 00 	mov    BYTE PTR [rsp+0xa0],0x1
b96c:	01
b96d:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x1
b974:	01
b975:	89 84 24 a4 00 00 00 	mov    DWORD PTR [rsp+0xa4],eax
b97c:	44 8b 94 24 a4 00 00 	mov    r10d,DWORD PTR [rsp+0xa4]
b983:	00
b984:	45 85 d2             	test   r10d,r10d
b987:	0f 85 7b ff ff ff    	jne    b908 <mbsstr+0xa38>
b98d:	80 bc 24 8c 00 00 00 	cmp    BYTE PTR [rsp+0x8c],0x0
b994:	00
b995:	0f 84 9d 01 00 00    	je     bb38 <mbsstr+0xc68>
b99b:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
b9a0:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
b9a5:	4c 89 e7             	mov    rdi,r12
b9a8:	e8 a3 ea ff ff       	call   a450 <knuth_morris_pratt_multibyte>
b9ad:	84 c0                	test   al,al
b9af:	88 44 24 10          	mov    BYTE PTR [rsp+0x10],al
b9b3:	0f 85 16 05 00 00    	jne    becf <mbsstr+0xfff>
b9b9:	0f b6 94 24 e0 00 00 	movzx  edx,BYTE PTR [rsp+0xe0]
b9c0:	00
b9c1:	e9 e5 01 00 00       	jmp    bbab <mbsstr+0xcdb>
b9c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
b9cd:	00 00 00
b9d0:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
b9d7:	00
b9d8:	48 8d bc 24 84 00 00 	lea    rdi,[rsp+0x84]
b9df:	00
b9e0:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
b9e5:	e8 c6 68 ff ff       	call   22b0 <mbsinit@plt>
b9ea:	85 c0                	test   eax,eax
b9ec:	0f 84 96 05 00 00    	je     bf88 <mbsstr+0x10b8>
b9f2:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x1
b9f9:	01
b9fa:	e8 f1 64 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
b9ff:	4c 8b 84 24 90 00 00 	mov    r8,QWORD PTR [rsp+0x90]
ba06:	00
ba07:	48 89 c6             	mov    rsi,rax
ba0a:	4c 89 c7             	mov    rdi,r8
ba0d:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
ba12:	e8 39 d6 ff ff       	call   9050 <strnlen1>
ba17:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
ba1c:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
ba21:	48 89 c2             	mov    rdx,rax
ba24:	48 8d 4e 04          	lea    rcx,[rsi+0x4]
ba28:	48 8d 7e 24          	lea    rdi,[rsi+0x24]
ba2c:	4c 89 c6             	mov    rsi,r8
ba2f:	e8 bc e5 ff ff       	call   9ff0 <rpl_mbrtowc>
ba34:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
ba38:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
ba3f:	00
ba40:	0f 84 8a 00 00 00    	je     bad0 <mbsstr+0xc00>
ba46:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
ba4a:	0f 84 c0 00 00 00    	je     bb10 <mbsstr+0xc40>
ba50:	48 85 c0             	test   rax,rax
ba53:	75 2e                	jne    ba83 <mbsstr+0xbb3>
ba55:	48 8b 84 24 90 00 00 	mov    rax,QWORD PTR [rsp+0x90]
ba5c:	00
ba5d:	48 c7 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],0x1
ba64:	00 01 00 00 00
ba69:	80 38 00             	cmp    BYTE PTR [rax],0x0
ba6c:	0f 85 43 05 00 00    	jne    bfb5 <mbsstr+0x10e5>
ba72:	44 8b 9c 24 a4 00 00 	mov    r11d,DWORD PTR [rsp+0xa4]
ba79:	00
ba7a:	45 85 db             	test   r11d,r11d
ba7d:	0f 85 0f 02 00 00    	jne    bc92 <mbsstr+0xdc2>
ba83:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
ba88:	c6 84 24 a0 00 00 00 	mov    BYTE PTR [rsp+0xa0],0x1
ba8f:	01
ba90:	48 83 c7 04          	add    rdi,0x4
ba94:	e8 17 68 ff ff       	call   22b0 <mbsinit@plt>
ba99:	85 c0                	test   eax,eax
ba9b:	74 53                	je     baf0 <mbsstr+0xc20>
ba9d:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x0
baa4:	00
baa5:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x1
baac:	01
baad:	e9 ca fe ff ff       	jmp    b97c <mbsstr+0xaac>
bab2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
bab8:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
babf:	00
bac0:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
bac5:	e9 30 ff ff ff       	jmp    b9fa <mbsstr+0xb2a>
baca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
bad0:	48 c7 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],0x1
bad7:	00 01 00 00 00
badc:	c6 84 24 a0 00 00 00 	mov    BYTE PTR [rsp+0xa0],0x0
bae3:	00
bae4:	e9 1f fe ff ff       	jmp    b908 <mbsstr+0xa38>
bae9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
baf0:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x1
baf7:	01
baf8:	e9 7f fe ff ff       	jmp    b97c <mbsstr+0xaac>
bafd:	0f 1f 00             	nop    DWORD PTR [rax]
bb00:	c6 84 24 cc 00 00 00 	mov    BYTE PTR [rsp+0xcc],0x1
bb07:	01
bb08:	e9 72 f6 ff ff       	jmp    b17f <mbsstr+0x2af>
bb0d:	0f 1f 00             	nop    DWORD PTR [rax]
bb10:	48 8b bc 24 90 00 00 	mov    rdi,QWORD PTR [rsp+0x90]
bb17:	00
bb18:	e8 e3 63 ff ff       	call   1f00 <strlen@plt>
bb1d:	c6 84 24 a0 00 00 00 	mov    BYTE PTR [rsp+0xa0],0x0
bb24:	00
bb25:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
bb2c:	00
bb2d:	e9 d6 fd ff ff       	jmp    b908 <mbsstr+0xa38>
bb32:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
bb38:	80 bc 24 80 00 00 00 	cmp    BYTE PTR [rsp+0x80],0x0
bb3f:	00
bb40:	0f 85 52 02 00 00    	jne    bd98 <mbsstr+0xec8>
bb46:	48 8b 8c 24 90 00 00 	mov    rcx,QWORD PTR [rsp+0x90]
bb4d:	00
bb4e:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
bb51:	89 d0                	mov    eax,edx
bb53:	c0 e8 05             	shr    al,0x5
bb56:	83 e0 07             	and    eax,0x7
bb59:	41 8b 44 85 00       	mov    eax,DWORD PTR [r13+rax*4+0x0]
bb5e:	0f a3 d0             	bt     eax,edx
bb61:	0f 83 f8 02 00 00    	jae    be5f <mbsstr+0xf8f>
bb67:	48 c7 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],0x1
bb6e:	00 01 00 00 00
bb73:	0f be 01             	movsx  eax,BYTE PTR [rcx]
bb76:	c6 84 24 a0 00 00 00 	mov    BYTE PTR [rsp+0xa0],0x1
bb7d:	01
bb7e:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x1
bb85:	01
bb86:	89 84 24 a4 00 00 00 	mov    DWORD PTR [rsp+0xa4],eax
bb8d:	44 8b 84 24 a4 00 00 	mov    r8d,DWORD PTR [rsp+0xa4]
bb94:	00
bb95:	45 85 c0             	test   r8d,r8d
bb98:	0f 84 fd fd ff ff    	je     b99b <mbsstr+0xacb>
bb9e:	0f b6 94 24 e0 00 00 	movzx  edx,BYTE PTR [rsp+0xe0]
bba5:	00
bba6:	c6 44 24 10 01       	mov    BYTE PTR [rsp+0x10],0x1
bbab:	48 8d 43 01          	lea    rax,[rbx+0x1]
bbaf:	84 d2                	test   dl,dl
bbb1:	48 89 5c 24 20       	mov    QWORD PTR [rsp+0x20],rbx
bbb6:	48 89 c3             	mov    rbx,rax
bbb9:	0f 85 f5 f5 ff ff    	jne    b1b4 <mbsstr+0x2e4>
bbbf:	e9 6d fb ff ff       	jmp    b731 <mbsstr+0x861>
bbc4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
bbc8:	48 8b bc 24 d0 00 00 	mov    rdi,QWORD PTR [rsp+0xd0]
bbcf:	00
bbd0:	e8 2b 63 ff ff       	call   1f00 <strlen@plt>
bbd5:	c6 84 24 e0 00 00 00 	mov    BYTE PTR [rsp+0xe0],0x0
bbdc:	00
bbdd:	48 89 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],rax
bbe4:	00
bbe5:	c6 84 24 cc 00 00 00 	mov    BYTE PTR [rsp+0xcc],0x1
bbec:	01
bbed:	e9 2a fb ff ff       	jmp    b71c <mbsstr+0x84c>
bbf2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
bbf8:	48 89 cf             	mov    rdi,rcx
bbfb:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
bc00:	e8 ab 66 ff ff       	call   22b0 <mbsinit@plt>
bc05:	85 c0                	test   eax,eax
bc07:	0f 84 7b 03 00 00    	je     bf88 <mbsstr+0x10b8>
bc0d:	c6 84 24 40 01 00 00 	mov    BYTE PTR [rsp+0x140],0x1
bc14:	01
bc15:	e8 d6 62 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
bc1a:	4c 8b 84 24 50 01 00 	mov    r8,QWORD PTR [rsp+0x150]
bc21:	00
bc22:	48 89 c6             	mov    rsi,rax
bc25:	4c 89 c7             	mov    rdi,r8
bc28:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
bc2c:	e8 1f d4 ff ff       	call   9050 <strnlen1>
bc31:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
bc35:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
bc3a:	48 8d 7d 24          	lea    rdi,[rbp+0x24]
bc3e:	48 89 c2             	mov    rdx,rax
bc41:	4c 89 c6             	mov    rsi,r8
bc44:	e8 a7 e3 ff ff       	call   9ff0 <rpl_mbrtowc>
bc49:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
bc4d:	48 89 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],rax
bc54:	00
bc55:	0f 84 1d 01 00 00    	je     bd78 <mbsstr+0xea8>
bc5b:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
bc5f:	0f 84 74 02 00 00    	je     bed9 <mbsstr+0x1009>
bc65:	48 85 c0             	test   rax,rax
bc68:	75 36                	jne    bca0 <mbsstr+0xdd0>
bc6a:	48 8b 84 24 50 01 00 	mov    rax,QWORD PTR [rsp+0x150]
bc71:	00
bc72:	48 c7 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],0x1
bc79:	00 01 00 00 00
bc7e:	80 38 00             	cmp    BYTE PTR [rax],0x0
bc81:	0f 85 2e 03 00 00    	jne    bfb5 <mbsstr+0x10e5>
bc87:	8b bc 24 64 01 00 00 	mov    edi,DWORD PTR [rsp+0x164]
bc8e:	85 ff                	test   edi,edi
bc90:	74 0e                	je     bca0 <mbsstr+0xdd0>
bc92:	e8 bf 66 ff ff       	call   2356 <mbuiter_multi_next.part.0>
bc97:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
bc9e:	00 00
bca0:	48 8d 7d 04          	lea    rdi,[rbp+0x4]
bca4:	c6 84 24 60 01 00 00 	mov    BYTE PTR [rsp+0x160],0x1
bcab:	01
bcac:	e8 ff 65 ff ff       	call   22b0 <mbsinit@plt>
bcb1:	85 c0                	test   eax,eax
bcb3:	0f 84 d5 01 00 00    	je     be8e <mbsstr+0xfbe>
bcb9:	c6 84 24 40 01 00 00 	mov    BYTE PTR [rsp+0x140],0x0
bcc0:	00
bcc1:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x1
bcc8:	01
bcc9:	e9 c3 f5 ff ff       	jmp    b291 <mbsstr+0x3c1>
bcce:	66 90                	xchg   ax,ax
bcd0:	48 89 ef             	mov    rdi,rbp
bcd3:	e8 d8 65 ff ff       	call   22b0 <mbsinit@plt>
bcd8:	85 c0                	test   eax,eax
bcda:	0f 84 a8 02 00 00    	je     bf88 <mbsstr+0x10b8>
bce0:	c6 44 24 40 01       	mov    BYTE PTR [rsp+0x40],0x1
bce5:	e8 06 62 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
bcea:	4c 8b 74 24 50       	mov    r14,QWORD PTR [rsp+0x50]
bcef:	48 89 c6             	mov    rsi,rax
bcf2:	4c 89 f7             	mov    rdi,r14
bcf5:	e8 56 d3 ff ff       	call   9050 <strnlen1>
bcfa:	48 8d 7b 24          	lea    rdi,[rbx+0x24]
bcfe:	48 89 e9             	mov    rcx,rbp
bd01:	48 89 c2             	mov    rdx,rax
bd04:	4c 89 f6             	mov    rsi,r14
bd07:	e8 e4 e2 ff ff       	call   9ff0 <rpl_mbrtowc>
bd0c:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
bd10:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
bd15:	0f 84 7d f3 ff ff    	je     b098 <mbsstr+0x1c8>
bd1b:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
bd1f:	0f 84 d6 01 00 00    	je     befb <mbsstr+0x102b>
bd25:	48 85 c0             	test   rax,rax
bd28:	75 23                	jne    bd4d <mbsstr+0xe7d>
bd2a:	48 8b 44 24 50       	mov    rax,QWORD PTR [rsp+0x50]
bd2f:	48 c7 44 24 58 01 00 	mov    QWORD PTR [rsp+0x58],0x1
bd36:	00 00
bd38:	80 38 00             	cmp    BYTE PTR [rax],0x0
bd3b:	0f 85 74 02 00 00    	jne    bfb5 <mbsstr+0x10e5>
bd41:	8b 44 24 64          	mov    eax,DWORD PTR [rsp+0x64]
bd45:	85 c0                	test   eax,eax
bd47:	0f 85 45 ff ff ff    	jne    bc92 <mbsstr+0xdc2>
bd4d:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
bd51:	c6 44 24 60 01       	mov    BYTE PTR [rsp+0x60],0x1
bd56:	e8 55 65 ff ff       	call   22b0 <mbsinit@plt>
bd5b:	85 c0                	test   eax,eax
bd5d:	0f 84 38 01 00 00    	je     be9b <mbsstr+0xfcb>
bd63:	c6 44 24 40 00       	mov    BYTE PTR [rsp+0x40],0x0
bd68:	c6 44 24 4c 01       	mov    BYTE PTR [rsp+0x4c],0x1
bd6d:	e9 d9 f2 ff ff       	jmp    b04b <mbsstr+0x17b>
bd72:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
bd78:	48 c7 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],0x1
bd7f:	00 01 00 00 00
bd84:	c6 84 24 60 01 00 00 	mov    BYTE PTR [rsp+0x160],0x0
bd8b:	00
bd8c:	e9 0f f5 ff ff       	jmp    b2a0 <mbsstr+0x3d0>
bd91:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
bd98:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
bd9f:	00
bda0:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
bda5:	e8 46 61 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
bdaa:	4c 8b 84 24 90 00 00 	mov    r8,QWORD PTR [rsp+0x90]
bdb1:	00
bdb2:	48 89 c6             	mov    rsi,rax
bdb5:	4c 89 c7             	mov    rdi,r8
bdb8:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
bdbc:	e8 8f d2 ff ff       	call   9050 <strnlen1>
bdc1:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
bdc6:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
bdca:	48 89 c2             	mov    rdx,rax
bdcd:	48 8d 4e 04          	lea    rcx,[rsi+0x4]
bdd1:	48 8d 7e 24          	lea    rdi,[rsi+0x24]
bdd5:	4c 89 c6             	mov    rsi,r8
bdd8:	e8 13 e2 ff ff       	call   9ff0 <rpl_mbrtowc>
bddd:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
bde1:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
bde8:	00
bde9:	0f 84 2a 01 00 00    	je     bf19 <mbsstr+0x1049>
bdef:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
bdf3:	0f 84 ac 00 00 00    	je     bea5 <mbsstr+0xfd5>
bdf9:	48 85 c0             	test   rax,rax
bdfc:	75 2e                	jne    be2c <mbsstr+0xf5c>
bdfe:	48 8b 84 24 90 00 00 	mov    rax,QWORD PTR [rsp+0x90]
be05:	00
be06:	48 c7 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],0x1
be0d:	00 01 00 00 00
be12:	80 38 00             	cmp    BYTE PTR [rax],0x0
be15:	0f 85 9a 01 00 00    	jne    bfb5 <mbsstr+0x10e5>
be1b:	44 8b 8c 24 a4 00 00 	mov    r9d,DWORD PTR [rsp+0xa4]
be22:	00
be23:	45 85 c9             	test   r9d,r9d
be26:	0f 85 66 fe ff ff    	jne    bc92 <mbsstr+0xdc2>
be2c:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
be31:	c6 84 24 a0 00 00 00 	mov    BYTE PTR [rsp+0xa0],0x1
be38:	01
be39:	48 83 c7 04          	add    rdi,0x4
be3d:	e8 6e 64 ff ff       	call   22b0 <mbsinit@plt>
be42:	85 c0                	test   eax,eax
be44:	0f 84 f0 00 00 00    	je     bf3a <mbsstr+0x106a>
be4a:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x0
be51:	00
be52:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x1
be59:	01
be5a:	e9 2e fd ff ff       	jmp    bb8d <mbsstr+0xcbd>
be5f:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
be66:	00
be67:	48 8d bc 24 84 00 00 	lea    rdi,[rsp+0x84]
be6e:	00
be6f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
be74:	e8 37 64 ff ff       	call   22b0 <mbsinit@plt>
be79:	85 c0                	test   eax,eax
be7b:	0f 84 07 01 00 00    	je     bf88 <mbsstr+0x10b8>
be81:	c6 84 24 80 00 00 00 	mov    BYTE PTR [rsp+0x80],0x1
be88:	01
be89:	e9 17 ff ff ff       	jmp    bda5 <mbsstr+0xed5>
be8e:	c6 84 24 4c 01 00 00 	mov    BYTE PTR [rsp+0x14c],0x1
be95:	01
be96:	e9 f6 f3 ff ff       	jmp    b291 <mbsstr+0x3c1>
be9b:	c6 44 24 4c 01       	mov    BYTE PTR [rsp+0x4c],0x1
bea0:	e9 a6 f1 ff ff       	jmp    b04b <mbsstr+0x17b>
bea5:	48 8b bc 24 90 00 00 	mov    rdi,QWORD PTR [rsp+0x90]
beac:	00
bead:	e8 4e 60 ff ff       	call   1f00 <strlen@plt>
beb2:	c6 84 24 a0 00 00 00 	mov    BYTE PTR [rsp+0xa0],0x0
beb9:	00
beba:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
bec1:	00
bec2:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x1
bec9:	01
beca:	e9 cf fc ff ff       	jmp    bb9e <mbsstr+0xcce>
becf:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
bed4:	e9 7d f1 ff ff       	jmp    b056 <mbsstr+0x186>
bed9:	48 8b bc 24 50 01 00 	mov    rdi,QWORD PTR [rsp+0x150]
bee0:	00
bee1:	e8 1a 60 ff ff       	call   1f00 <strlen@plt>
bee6:	c6 84 24 60 01 00 00 	mov    BYTE PTR [rsp+0x160],0x0
beed:	00
beee:	48 89 84 24 58 01 00 	mov    QWORD PTR [rsp+0x158],rax
bef5:	00
bef6:	e9 a5 f3 ff ff       	jmp    b2a0 <mbsstr+0x3d0>
befb:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
bf00:	e8 fb 5f ff ff       	call   1f00 <strlen@plt>
bf05:	c6 44 24 60 00       	mov    BYTE PTR [rsp+0x60],0x0
bf0a:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
bf0f:	c6 44 24 4c 01       	mov    BYTE PTR [rsp+0x4c],0x1
bf14:	e9 92 f1 ff ff       	jmp    b0ab <mbsstr+0x1db>
bf19:	48 c7 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],0x1
bf20:	00 01 00 00 00
bf25:	c6 84 24 a0 00 00 00 	mov    BYTE PTR [rsp+0xa0],0x0
bf2c:	00
bf2d:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x1
bf34:	01
bf35:	e9 64 fc ff ff       	jmp    bb9e <mbsstr+0xcce>
bf3a:	c6 84 24 8c 00 00 00 	mov    BYTE PTR [rsp+0x8c],0x1
bf41:	01
bf42:	e9 46 fc ff ff       	jmp    bb8d <mbsstr+0xcbd>
bf47:	84 c0                	test   al,al
bf49:	0f 84 e9 fb ff ff    	je     bb38 <mbsstr+0xc68>
bf4f:	80 bc 24 a0 00 00 00 	cmp    BYTE PTR [rsp+0xa0],0x0
bf56:	00
bf57:	0f 84 41 fc ff ff    	je     bb9e <mbsstr+0xcce>
bf5d:	e9 2b fc ff ff       	jmp    bb8d <mbsstr+0xcbd>
bf62:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
bf68:	4b 8d 14 b6          	lea    rdx,[r14+r14*4]
bf6c:	48 39 d3             	cmp    rbx,rdx
bf6f:	0f 83 6b f9 ff ff    	jae    b8e0 <mbsstr+0xa10>
bf75:	48 83 c3 01          	add    rbx,0x1
bf79:	88 44 24 10          	mov    BYTE PTR [rsp+0x10],al
bf7d:	e9 af f7 ff ff       	jmp    b731 <mbsstr+0x861>
bf82:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
bf88:	48 8d 0d 31 4a 00 00 	lea    rcx,[rip+0x4a31]        # 109c0 <__PRETTY_FUNCTION__.5056>
bf8f:	48 8d 35 c2 40 00 00 	lea    rsi,[rip+0x40c2]        # 10058 <primes_diff+0x2f8>
bf96:	48 8d 3d ed 40 00 00 	lea    rdi,[rip+0x40ed]        # 1008a <primes_diff+0x32a>
bf9d:	ba 96 00 00 00       	mov    edx,0x96
bfa2:	e8 39 60 ff ff       	call   1fe0 <__assert_fail@plt>
bfa7:	48 83 c3 01          	add    rbx,0x1
bfab:	e9 04 f2 ff ff       	jmp    b1b4 <mbsstr+0x2e4>
bfb0:	e8 6b 5f ff ff       	call   1f20 <__stack_chk_fail@plt>
bfb5:	48 8d 0d 04 4a 00 00 	lea    rcx,[rip+0x4a04]        # 109c0 <__PRETTY_FUNCTION__.5056>
bfbc:	48 8d 35 95 40 00 00 	lea    rsi,[rip+0x4095]        # 10058 <primes_diff+0x2f8>
bfc3:	48 8d 3d d7 40 00 00 	lea    rdi,[rip+0x40d7]        # 100a1 <primes_diff+0x341>
bfca:	ba b2 00 00 00       	mov    edx,0xb2
bfcf:	e8 0c 60 ff ff       	call   1fe0 <__assert_fail@plt>
bfd4:	e8 07 5e ff ff       	call   1de0 <abort@plt>
bfd9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000bfe0 <mem_cd_iconv>:
bfe0:	41 57                	push   r15
bfe2:	41 56                	push   r14
bfe4:	49 89 ff             	mov    r15,rdi
bfe7:	41 55                	push   r13
bfe9:	41 54                	push   r12
bfeb:	49 89 f5             	mov    r13,rsi
bfee:	55                   	push   rbp
bfef:	53                   	push   rbx
bff0:	48 89 d3             	mov    rbx,rdx
bff3:	31 f6                	xor    esi,esi
bff5:	31 d2                	xor    edx,edx
bff7:	48 81 ec 68 10 00 00 	sub    rsp,0x1068
bffe:	48 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],rdi
c003:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
c008:	48 89 df             	mov    rdi,rbx
c00b:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
c010:	31 c9                	xor    ecx,ecx
c012:	45 31 c0             	xor    r8d,r8d
c015:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
c01c:	00 00
c01e:	48 89 84 24 58 10 00 	mov    QWORD PTR [rsp+0x1058],rax
c025:	00
c026:	31 c0                	xor    eax,eax
c028:	e8 03 5e ff ff       	call   1e30 <iconv@plt>
c02d:	4c 89 7c 24 30       	mov    QWORD PTR [rsp+0x30],r15
c032:	45 31 ff             	xor    r15d,r15d
c035:	4d 85 ed             	test   r13,r13
c038:	4c 89 6c 24 38       	mov    QWORD PTR [rsp+0x38],r13
c03d:	4c 8d 74 24 50       	lea    r14,[rsp+0x50]
c042:	4c 8d 64 24 48       	lea    r12,[rsp+0x48]
c047:	48 8d 6c 24 40       	lea    rbp,[rsp+0x40]
c04c:	74 7d                	je     c0cb <mem_cd_iconv+0xeb>
c04e:	48 8d 44 24 38       	lea    rax,[rsp+0x38]
c053:	48 8d 74 24 30       	lea    rsi,[rsp+0x30]
c058:	4c 89 6c 24 20       	mov    QWORD PTR [rsp+0x20],r13
c05d:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
c062:	49 89 c5             	mov    r13,rax
c065:	eb 20                	jmp    c087 <mem_cd_iconv+0xa7>
c067:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
c06e:	00 00
c070:	48 8b 44 24 40       	mov    rax,QWORD PTR [rsp+0x40]
c075:	4c 29 f0             	sub    rax,r14
c078:	49 01 c7             	add    r15,rax
c07b:	48 83 7c 24 38 00    	cmp    QWORD PTR [rsp+0x38],0x0
c081:	0f 84 99 01 00 00    	je     c220 <mem_cd_iconv+0x240>
c087:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
c08c:	4d 89 e0             	mov    r8,r12
c08f:	48 89 e9             	mov    rcx,rbp
c092:	4c 89 ea             	mov    rdx,r13
c095:	48 89 df             	mov    rdi,rbx
c098:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
c09d:	48 c7 44 24 48 00 10 	mov    QWORD PTR [rsp+0x48],0x1000
c0a4:	00 00
c0a6:	e8 85 5d ff ff       	call   1e30 <iconv@plt>
c0ab:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c0af:	75 bf                	jne    c070 <mem_cd_iconv+0x90>
c0b1:	e8 3a 5d ff ff       	call   1df0 <__errno_location@plt>
c0b6:	8b 00                	mov    eax,DWORD PTR [rax]
c0b8:	83 f8 07             	cmp    eax,0x7
c0bb:	74 b3                	je     c070 <mem_cd_iconv+0x90>
c0bd:	83 f8 16             	cmp    eax,0x16
c0c0:	4c 8b 6c 24 20       	mov    r13,QWORD PTR [rsp+0x20]
c0c5:	0f 85 be 01 00 00    	jne    c289 <mem_cd_iconv+0x2a9>
c0cb:	31 d2                	xor    edx,edx
c0cd:	31 f6                	xor    esi,esi
c0cf:	4d 89 e0             	mov    r8,r12
c0d2:	48 89 e9             	mov    rcx,rbp
c0d5:	48 89 df             	mov    rdi,rbx
c0d8:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
c0dd:	48 c7 44 24 48 00 10 	mov    QWORD PTR [rsp+0x48],0x1000
c0e4:	00 00
c0e6:	e8 45 5d ff ff       	call   1e30 <iconv@plt>
c0eb:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c0ef:	0f 84 94 01 00 00    	je     c289 <mem_cd_iconv+0x2a9>
c0f5:	48 8b 44 24 40       	mov    rax,QWORD PTR [rsp+0x40]
c0fa:	4c 29 f0             	sub    rax,r14
c0fd:	4c 01 f8             	add    rax,r15
c100:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
c105:	0f 84 25 01 00 00    	je     c230 <mem_cd_iconv+0x250>
c10b:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
c110:	48 8b 00             	mov    rax,QWORD PTR [rax]
c113:	48 85 c0             	test   rax,rax
c116:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
c11b:	74 0f                	je     c12c <mem_cd_iconv+0x14c>
c11d:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
c122:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
c127:	48 39 08             	cmp    QWORD PTR [rax],rcx
c12a:	73 18                	jae    c144 <mem_cd_iconv+0x164>
c12c:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
c131:	e8 ba 5f ff ff       	call   20f0 <malloc@plt>
c136:	48 85 c0             	test   rax,rax
c139:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
c13e:	0f 84 3a 01 00 00    	je     c27e <mem_cd_iconv+0x29e>
c144:	45 31 c0             	xor    r8d,r8d
c147:	31 c9                	xor    ecx,ecx
c149:	31 d2                	xor    edx,edx
c14b:	31 f6                	xor    esi,esi
c14d:	48 89 df             	mov    rdi,rbx
c150:	4c 8d 7c 24 38       	lea    r15,[rsp+0x38]
c155:	e8 d6 5c ff ff       	call   1e30 <iconv@plt>
c15a:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
c15f:	4c 89 6c 24 38       	mov    QWORD PTR [rsp+0x38],r13
c164:	4c 8d 74 24 30       	lea    r14,[rsp+0x30]
c169:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
c16e:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
c173:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
c178:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
c17d:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
c182:	eb 27                	jmp    c1ab <mem_cd_iconv+0x1cb>
c184:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
c188:	4d 89 e0             	mov    r8,r12
c18b:	48 89 e9             	mov    rcx,rbp
c18e:	4c 89 fa             	mov    rdx,r15
c191:	4c 89 f6             	mov    rsi,r14
c194:	48 89 df             	mov    rdi,rbx
c197:	e8 94 5c ff ff       	call   1e30 <iconv@plt>
c19c:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c1a0:	0f 84 9a 00 00 00    	je     c240 <mem_cd_iconv+0x260>
c1a6:	4c 8b 6c 24 38       	mov    r13,QWORD PTR [rsp+0x38]
c1ab:	4d 85 ed             	test   r13,r13
c1ae:	75 d8                	jne    c188 <mem_cd_iconv+0x1a8>
c1b0:	31 d2                	xor    edx,edx
c1b2:	31 f6                	xor    esi,esi
c1b4:	4d 89 e0             	mov    r8,r12
c1b7:	48 89 e9             	mov    rcx,rbp
c1ba:	48 89 df             	mov    rdi,rbx
c1bd:	e8 6e 5c ff ff       	call   1e30 <iconv@plt>
c1c2:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c1c6:	0f 84 82 00 00 00    	je     c24e <mem_cd_iconv+0x26e>
c1cc:	48 83 7c 24 48 00    	cmp    QWORD PTR [rsp+0x48],0x0
c1d2:	0f 85 bb 00 00 00    	jne    c293 <mem_cd_iconv+0x2b3>
c1d8:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
c1dd:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
c1e2:	31 db                	xor    ebx,ebx
c1e4:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
c1e9:	48 89 30             	mov    QWORD PTR [rax],rsi
c1ec:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
c1f1:	48 89 38             	mov    QWORD PTR [rax],rdi
c1f4:	48 8b 94 24 58 10 00 	mov    rdx,QWORD PTR [rsp+0x1058]
c1fb:	00
c1fc:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
c203:	00 00
c205:	89 d8                	mov    eax,ebx
c207:	0f 85 8b 00 00 00    	jne    c298 <mem_cd_iconv+0x2b8>
c20d:	48 81 c4 68 10 00 00 	add    rsp,0x1068
c214:	5b                   	pop    rbx
c215:	5d                   	pop    rbp
c216:	41 5c                	pop    r12
c218:	41 5d                	pop    r13
c21a:	41 5e                	pop    r14
c21c:	41 5f                	pop    r15
c21e:	c3                   	ret
c21f:	90                   	nop
c220:	4c 8b 6c 24 20       	mov    r13,QWORD PTR [rsp+0x20]
c225:	e9 a1 fe ff ff       	jmp    c0cb <mem_cd_iconv+0xeb>
c22a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
c230:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
c235:	31 db                	xor    ebx,ebx
c237:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
c23e:	eb b4                	jmp    c1f4 <mem_cd_iconv+0x214>
c240:	e8 ab 5b ff ff       	call   1df0 <__errno_location@plt>
c245:	83 38 16             	cmp    DWORD PTR [rax],0x16
c248:	0f 84 62 ff ff ff    	je     c1b0 <mem_cd_iconv+0x1d0>
c24e:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
c253:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
c258:	bb ff ff ff ff       	mov    ebx,0xffffffff
c25d:	4c 39 38             	cmp    QWORD PTR [rax],r15
c260:	74 92                	je     c1f4 <mem_cd_iconv+0x214>
c262:	e8 89 5b ff ff       	call   1df0 <__errno_location@plt>
c267:	44 8b 20             	mov    r12d,DWORD PTR [rax]
c26a:	48 89 c5             	mov    rbp,rax
c26d:	4c 89 ff             	mov    rdi,r15
c270:	e8 5b 5b ff ff       	call   1dd0 <free@plt>
c275:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
c279:	e9 76 ff ff ff       	jmp    c1f4 <mem_cd_iconv+0x214>
c27e:	e8 6d 5b ff ff       	call   1df0 <__errno_location@plt>
c283:	c7 00 0c 00 00 00    	mov    DWORD PTR [rax],0xc
c289:	bb ff ff ff ff       	mov    ebx,0xffffffff
c28e:	e9 61 ff ff ff       	jmp    c1f4 <mem_cd_iconv+0x214>
c293:	e8 48 5b ff ff       	call   1de0 <abort@plt>
c298:	e8 83 5c ff ff       	call   1f20 <__stack_chk_fail@plt>
c29d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000c2a0 <str_cd_iconv>:
c2a0:	41 57                	push   r15
c2a2:	41 56                	push   r14
c2a4:	41 55                	push   r13
c2a6:	41 54                	push   r12
c2a8:	49 89 f4             	mov    r12,rsi
c2ab:	55                   	push   rbp
c2ac:	53                   	push   rbx
c2ad:	48 83 ec 58          	sub    rsp,0x58
c2b1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
c2b8:	00 00
c2ba:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
c2bf:	31 c0                	xor    eax,eax
c2c1:	48 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],rdi
c2c6:	e8 35 5c ff ff       	call   1f00 <strlen@plt>
c2cb:	49 89 c5             	mov    r13,rax
c2ce:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
c2d3:	49 c1 e5 04          	shl    r13,0x4
c2d7:	48 3d 00 00 00 10    	cmp    rax,0x10000000
c2dd:	4c 0f 43 e8          	cmovae r13,rax
c2e1:	49 8d 6d 01          	lea    rbp,[r13+0x1]
c2e5:	48 89 ef             	mov    rdi,rbp
c2e8:	e8 03 5e ff ff       	call   20f0 <malloc@plt>
c2ed:	48 85 c0             	test   rax,rax
c2f0:	48 89 c3             	mov    rbx,rax
c2f3:	0f 84 d7 01 00 00    	je     c4d0 <str_cd_iconv+0x230>
c2f9:	45 31 c0             	xor    r8d,r8d
c2fc:	31 c9                	xor    ecx,ecx
c2fe:	31 d2                	xor    edx,edx
c300:	31 f6                	xor    esi,esi
c302:	4c 89 e7             	mov    rdi,r12
c305:	e8 26 5b ff ff       	call   1e30 <iconv@plt>
c30a:	48 8d 44 24 40       	lea    rax,[rsp+0x40]
c30f:	48 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],rbx
c314:	4c 89 6c 24 40       	mov    QWORD PTR [rsp+0x40],r13
c319:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
c31e:	48 8d 44 24 38       	lea    rax,[rsp+0x38]
c323:	48 89 04 24          	mov    QWORD PTR [rsp],rax
c327:	48 8d 44 24 30       	lea    rax,[rsp+0x30]
c32c:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
c331:	48 8d 44 24 28       	lea    rax,[rsp+0x28]
c336:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
c33b:	eb 67                	jmp    c3a4 <str_cd_iconv+0x104>
c33d:	0f 1f 00             	nop    DWORD PTR [rax]
c340:	e8 ab 5a ff ff       	call   1df0 <__errno_location@plt>
c345:	49 89 c7             	mov    r15,rax
c348:	8b 00                	mov    eax,DWORD PTR [rax]
c34a:	83 f8 16             	cmp    eax,0x16
c34d:	0f 84 e3 00 00 00    	je     c436 <str_cd_iconv+0x196>
c353:	83 f8 07             	cmp    eax,0x7
c356:	0f 85 32 01 00 00    	jne    c48e <str_cd_iconv+0x1ee>
c35c:	4c 8b 74 24 38       	mov    r14,QWORD PTR [rsp+0x38]
c361:	4c 8d 6c 2d 00       	lea    r13,[rbp+rbp*1+0x0]
c366:	49 29 de             	sub    r14,rbx
c369:	4c 39 ed             	cmp    rbp,r13
c36c:	0f 83 4e 01 00 00    	jae    c4c0 <str_cd_iconv+0x220>
c372:	4c 89 ee             	mov    rsi,r13
c375:	48 89 df             	mov    rdi,rbx
c378:	e8 d3 5d ff ff       	call   2150 <realloc@plt>
c37d:	48 85 c0             	test   rax,rax
c380:	0f 84 3a 01 00 00    	je     c4c0 <str_cd_iconv+0x220>
c386:	4a 8d 34 30          	lea    rsi,[rax+r14*1]
c38a:	48 89 c3             	mov    rbx,rax
c38d:	4c 89 ed             	mov    rbp,r13
c390:	48 89 74 24 38       	mov    QWORD PTR [rsp+0x38],rsi
c395:	49 8d 75 ff          	lea    rsi,[r13-0x1]
c399:	48 89 f2             	mov    rdx,rsi
c39c:	4c 29 f2             	sub    rdx,r14
c39f:	48 89 54 24 40       	mov    QWORD PTR [rsp+0x40],rdx
c3a4:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
c3a9:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
c3ad:	4c 89 e7             	mov    rdi,r12
c3b0:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
c3b5:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
c3ba:	e8 71 5a ff ff       	call   1e30 <iconv@plt>
c3bf:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c3c3:	0f 84 77 ff ff ff    	je     c340 <str_cd_iconv+0xa0>
c3c9:	eb 6b                	jmp    c436 <str_cd_iconv+0x196>
c3cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
c3d0:	e8 1b 5a ff ff       	call   1df0 <__errno_location@plt>
c3d5:	83 38 07             	cmp    DWORD PTR [rax],0x7
c3d8:	48 89 c1             	mov    rcx,rax
c3db:	0f 85 ad 00 00 00    	jne    c48e <str_cd_iconv+0x1ee>
c3e1:	4c 8b 7c 24 38       	mov    r15,QWORD PTR [rsp+0x38]
c3e6:	48 8d 54 2d 00       	lea    rdx,[rbp+rbp*1+0x0]
c3eb:	49 29 df             	sub    r15,rbx
c3ee:	48 39 d5             	cmp    rbp,rdx
c3f1:	0f 83 91 00 00 00    	jae    c488 <str_cd_iconv+0x1e8>
c3f7:	48 89 d6             	mov    rsi,rdx
c3fa:	48 89 df             	mov    rdi,rbx
c3fd:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
c402:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
c407:	e8 44 5d ff ff       	call   2150 <realloc@plt>
c40c:	48 85 c0             	test   rax,rax
c40f:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
c414:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
c419:	74 6d                	je     c488 <str_cd_iconv+0x1e8>
c41b:	4a 8d 0c 38          	lea    rcx,[rax+r15*1]
c41f:	48 89 d5             	mov    rbp,rdx
c422:	48 89 c3             	mov    rbx,rax
c425:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
c42a:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
c42e:	4c 29 f9             	sub    rcx,r15
c431:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
c436:	4c 8b 44 24 08       	mov    r8,QWORD PTR [rsp+0x8]
c43b:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
c43f:	31 d2                	xor    edx,edx
c441:	31 f6                	xor    esi,esi
c443:	4c 89 e7             	mov    rdi,r12
c446:	e8 e5 59 ff ff       	call   1e30 <iconv@plt>
c44b:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c44f:	0f 84 7b ff ff ff    	je     c3d0 <str_cd_iconv+0x130>
c455:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
c45a:	48 8d 50 01          	lea    rdx,[rax+0x1]
c45e:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
c463:	c6 00 00             	mov    BYTE PTR [rax],0x0
c466:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
c46b:	48 29 de             	sub    rsi,rbx
c46e:	48 39 f5             	cmp    rbp,rsi
c471:	76 25                	jbe    c498 <str_cd_iconv+0x1f8>
c473:	48 89 df             	mov    rdi,rbx
c476:	e8 d5 5c ff ff       	call   2150 <realloc@plt>
c47b:	48 85 c0             	test   rax,rax
c47e:	48 0f 45 d8          	cmovne rbx,rax
c482:	eb 14                	jmp    c498 <str_cd_iconv+0x1f8>
c484:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
c488:	c7 01 0c 00 00 00    	mov    DWORD PTR [rcx],0xc
c48e:	48 89 df             	mov    rdi,rbx
c491:	31 db                	xor    ebx,ebx
c493:	e8 38 59 ff ff       	call   1dd0 <free@plt>
c498:	48 8b 7c 24 48       	mov    rdi,QWORD PTR [rsp+0x48]
c49d:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
c4a4:	00 00
c4a6:	48 89 d8             	mov    rax,rbx
c4a9:	75 32                	jne    c4dd <str_cd_iconv+0x23d>
c4ab:	48 83 c4 58          	add    rsp,0x58
c4af:	5b                   	pop    rbx
c4b0:	5d                   	pop    rbp
c4b1:	41 5c                	pop    r12
c4b3:	41 5d                	pop    r13
c4b5:	41 5e                	pop    r14
c4b7:	41 5f                	pop    r15
c4b9:	c3                   	ret
c4ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
c4c0:	41 c7 07 0c 00 00 00 	mov    DWORD PTR [r15],0xc
c4c7:	eb c5                	jmp    c48e <str_cd_iconv+0x1ee>
c4c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
c4d0:	e8 1b 59 ff ff       	call   1df0 <__errno_location@plt>
c4d5:	c7 00 0c 00 00 00    	mov    DWORD PTR [rax],0xc
c4db:	eb bb                	jmp    c498 <str_cd_iconv+0x1f8>
c4dd:	e8 3e 5a ff ff       	call   1f20 <__stack_chk_fail@plt>
c4e2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
c4e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
c4ed:	00 00 00

000000000000c4f0 <str_iconv>:
c4f0:	41 55                	push   r13
c4f2:	41 54                	push   r12
c4f4:	55                   	push   rbp
c4f5:	53                   	push   rbx
c4f6:	48 89 fb             	mov    rbx,rdi
c4f9:	48 83 ec 08          	sub    rsp,0x8
c4fd:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
c500:	74 15                	je     c517 <str_iconv+0x27>
c502:	49 89 f4             	mov    r12,rsi
c505:	48 89 d6             	mov    rsi,rdx
c508:	48 89 d5             	mov    rbp,rdx
c50b:	4c 89 e7             	mov    rdi,r12
c50e:	e8 6d db ff ff       	call   a080 <c_strcasecmp>
c513:	85 c0                	test   eax,eax
c515:	75 21                	jne    c538 <str_iconv+0x48>
c517:	48 89 df             	mov    rdi,rbx
c51a:	e8 81 5d ff ff       	call   22a0 <strdup@plt>
c51f:	48 85 c0             	test   rax,rax
c522:	48 89 c3             	mov    rbx,rax
c525:	74 69                	je     c590 <str_iconv+0xa0>
c527:	48 83 c4 08          	add    rsp,0x8
c52b:	48 89 d8             	mov    rax,rbx
c52e:	5b                   	pop    rbx
c52f:	5d                   	pop    rbp
c530:	41 5c                	pop    r12
c532:	41 5d                	pop    r13
c534:	c3                   	ret
c535:	0f 1f 00             	nop    DWORD PTR [rax]
c538:	48 89 ef             	mov    rdi,rbp
c53b:	4c 89 e6             	mov    rsi,r12
c53e:	e8 9d 5d ff ff       	call   22e0 <iconv_open@plt>
c543:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c547:	48 89 c5             	mov    rbp,rax
c54a:	0f 84 80 00 00 00    	je     c5d0 <str_iconv+0xe0>
c550:	48 89 df             	mov    rdi,rbx
c553:	48 89 c6             	mov    rsi,rax
c556:	e8 45 fd ff ff       	call   c2a0 <str_cd_iconv>
c55b:	48 85 c0             	test   rax,rax
c55e:	48 89 c3             	mov    rbx,rax
c561:	74 4d                	je     c5b0 <str_iconv+0xc0>
c563:	48 89 ef             	mov    rdi,rbp
c566:	e8 15 5c ff ff       	call   2180 <iconv_close@plt>
c56b:	85 c0                	test   eax,eax
c56d:	79 b8                	jns    c527 <str_iconv+0x37>
c56f:	e8 7c 58 ff ff       	call   1df0 <__errno_location@plt>
c574:	44 8b 20             	mov    r12d,DWORD PTR [rax]
c577:	48 89 c5             	mov    rbp,rax
c57a:	48 89 df             	mov    rdi,rbx
c57d:	e8 4e 58 ff ff       	call   1dd0 <free@plt>
c582:	31 db                	xor    ebx,ebx
c584:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
c588:	eb 9d                	jmp    c527 <str_iconv+0x37>
c58a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
c590:	e8 5b 58 ff ff       	call   1df0 <__errno_location@plt>
c595:	c7 00 0c 00 00 00    	mov    DWORD PTR [rax],0xc
c59b:	48 83 c4 08          	add    rsp,0x8
c59f:	48 89 d8             	mov    rax,rbx
c5a2:	5b                   	pop    rbx
c5a3:	5d                   	pop    rbp
c5a4:	41 5c                	pop    r12
c5a6:	41 5d                	pop    r13
c5a8:	c3                   	ret
c5a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
c5b0:	e8 3b 58 ff ff       	call   1df0 <__errno_location@plt>
c5b5:	44 8b 28             	mov    r13d,DWORD PTR [rax]
c5b8:	49 89 c4             	mov    r12,rax
c5bb:	48 89 ef             	mov    rdi,rbp
c5be:	e8 bd 5b ff ff       	call   2180 <iconv_close@plt>
c5c3:	45 89 2c 24          	mov    DWORD PTR [r12],r13d
c5c7:	e9 5b ff ff ff       	jmp    c527 <str_iconv+0x37>
c5cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
c5d0:	31 db                	xor    ebx,ebx
c5d2:	e9 50 ff ff ff       	jmp    c527 <str_iconv+0x37>
c5d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
c5de:	00 00

000000000000c5e0 <rpl_fclose>:
c5e0:	41 54                	push   r12
c5e2:	55                   	push   rbp
c5e3:	53                   	push   rbx
c5e4:	48 89 fb             	mov    rbx,rdi
c5e7:	e8 c4 5a ff ff       	call   20b0 <fileno@plt>
c5ec:	85 c0                	test   eax,eax
c5ee:	48 89 df             	mov    rdi,rbx
c5f1:	78 54                	js     c647 <rpl_fclose+0x67>
c5f3:	e8 48 5b ff ff       	call   2140 <__freading@plt>
c5f8:	85 c0                	test   eax,eax
c5fa:	75 2c                	jne    c628 <rpl_fclose+0x48>
c5fc:	48 89 df             	mov    rdi,rbx
c5ff:	e8 5c 00 00 00       	call   c660 <rpl_fflush>
c604:	85 c0                	test   eax,eax
c606:	74 3c                	je     c644 <rpl_fclose+0x64>
c608:	e8 e3 57 ff ff       	call   1df0 <__errno_location@plt>
c60d:	44 8b 20             	mov    r12d,DWORD PTR [rax]
c610:	48 89 df             	mov    rdi,rbx
c613:	48 89 c5             	mov    rbp,rax
c616:	e8 a5 58 ff ff       	call   1ec0 <fclose@plt>
c61b:	45 85 e4             	test   r12d,r12d
c61e:	75 30                	jne    c650 <rpl_fclose+0x70>
c620:	5b                   	pop    rbx
c621:	5d                   	pop    rbp
c622:	41 5c                	pop    r12
c624:	c3                   	ret
c625:	0f 1f 00             	nop    DWORD PTR [rax]
c628:	48 89 df             	mov    rdi,rbx
c62b:	e8 80 5a ff ff       	call   20b0 <fileno@plt>
c630:	31 f6                	xor    esi,esi
c632:	ba 01 00 00 00       	mov    edx,0x1
c637:	89 c7                	mov    edi,eax
c639:	e8 92 59 ff ff       	call   1fd0 <lseek@plt>
c63e:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c642:	75 b8                	jne    c5fc <rpl_fclose+0x1c>
c644:	48 89 df             	mov    rdi,rbx
c647:	5b                   	pop    rbx
c648:	5d                   	pop    rbp
c649:	41 5c                	pop    r12
c64b:	e9 70 58 ff ff       	jmp    1ec0 <fclose@plt>
c650:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
c654:	b8 ff ff ff ff       	mov    eax,0xffffffff
c659:	eb c5                	jmp    c620 <rpl_fclose+0x40>
c65b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000c660 <rpl_fflush>:
c660:	48 85 ff             	test   rdi,rdi
c663:	53                   	push   rbx
c664:	48 89 fb             	mov    rbx,rdi
c667:	74 11                	je     c67a <rpl_fflush+0x1a>
c669:	e8 d2 5a ff ff       	call   2140 <__freading@plt>
c66e:	85 c0                	test   eax,eax
c670:	74 08                	je     c67a <rpl_fflush+0x1a>
c672:	f7 03 00 01 00 00    	test   DWORD PTR [rbx],0x100
c678:	75 0e                	jne    c688 <rpl_fflush+0x28>
c67a:	48 89 df             	mov    rdi,rbx
c67d:	5b                   	pop    rbx
c67e:	e9 7d 5a ff ff       	jmp    2100 <fflush@plt>
c683:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
c688:	48 89 df             	mov    rdi,rbx
c68b:	ba 01 00 00 00       	mov    edx,0x1
c690:	31 f6                	xor    esi,esi
c692:	e8 09 00 00 00       	call   c6a0 <rpl_fseeko>
c697:	48 89 df             	mov    rdi,rbx
c69a:	5b                   	pop    rbx
c69b:	e9 60 5a ff ff       	jmp    2100 <fflush@plt>

000000000000c6a0 <rpl_fseeko>:
c6a0:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
c6a4:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
c6a8:	74 06                	je     c6b0 <rpl_fseeko+0x10>
c6aa:	e9 41 5b ff ff       	jmp    21f0 <fseeko@plt>
c6af:	90                   	nop
c6b0:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
c6b4:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
c6b8:	75 f0                	jne    c6aa <rpl_fseeko+0xa>
c6ba:	48 83 7f 48 00       	cmp    QWORD PTR [rdi+0x48],0x0
c6bf:	75 e9                	jne    c6aa <rpl_fseeko+0xa>
c6c1:	41 54                	push   r12
c6c3:	55                   	push   rbp
c6c4:	41 89 d4             	mov    r12d,edx
c6c7:	53                   	push   rbx
c6c8:	48 89 f5             	mov    rbp,rsi
c6cb:	48 89 fb             	mov    rbx,rdi
c6ce:	e8 dd 59 ff ff       	call   20b0 <fileno@plt>
c6d3:	44 89 e2             	mov    edx,r12d
c6d6:	48 89 ee             	mov    rsi,rbp
c6d9:	89 c7                	mov    edi,eax
c6db:	e8 f0 58 ff ff       	call   1fd0 <lseek@plt>
c6e0:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c6e4:	74 0c                	je     c6f2 <rpl_fseeko+0x52>
c6e6:	83 23 ef             	and    DWORD PTR [rbx],0xffffffef
c6e9:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
c6f0:	31 c0                	xor    eax,eax
c6f2:	5b                   	pop    rbx
c6f3:	5d                   	pop    rbp
c6f4:	41 5c                	pop    r12
c6f6:	c3                   	ret
c6f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
c6fe:	00 00

000000000000c700 <mmalloca>:
c700:	48 83 c7 20          	add    rdi,0x20
c704:	72 2d                	jb     c733 <mmalloca+0x33>
c706:	48 83 ec 08          	sub    rsp,0x8
c70a:	e8 e1 59 ff ff       	call   20f0 <malloc@plt>
c70f:	31 d2                	xor    edx,edx
c711:	48 85 c0             	test   rax,rax
c714:	74 15                	je     c72b <mmalloca+0x2b>
c716:	48 8d 50 10          	lea    rdx,[rax+0x10]
c71a:	48 83 e2 e0          	and    rdx,0xffffffffffffffe0
c71e:	48 83 c2 10          	add    rdx,0x10
c722:	48 89 d1             	mov    rcx,rdx
c725:	48 29 c1             	sub    rcx,rax
c728:	88 4a ff             	mov    BYTE PTR [rdx-0x1],cl
c72b:	48 89 d0             	mov    rax,rdx
c72e:	48 83 c4 08          	add    rsp,0x8
c732:	c3                   	ret
c733:	31 d2                	xor    edx,edx
c735:	48 89 d0             	mov    rax,rdx
c738:	c3                   	ret
c739:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000c740 <freea>:
c740:	40 f6 c7 0f          	test   dil,0xf
c744:	75 16                	jne    c75c <freea+0x1c>
c746:	40 f6 c7 10          	test   dil,0x10
c74a:	75 04                	jne    c750 <freea+0x10>
c74c:	f3 c3                	repz ret
c74e:	66 90                	xchg   ax,ax
c750:	0f b6 47 ff          	movzx  eax,BYTE PTR [rdi-0x1]
c754:	48 29 c7             	sub    rdi,rax
c757:	e9 74 56 ff ff       	jmp    1dd0 <free@plt>
c75c:	48 83 ec 08          	sub    rsp,0x8
c760:	e8 7b 56 ff ff       	call   1de0 <abort@plt>
c765:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
c76c:	00 00 00
c76f:	90                   	nop

000000000000c770 <mbslen>:
c770:	41 56                	push   r14
c772:	41 55                	push   r13
c774:	41 54                	push   r12
c776:	55                   	push   rbp
c777:	53                   	push   rbx
c778:	48 89 fb             	mov    rbx,rdi
c77b:	48 83 ec 50          	sub    rsp,0x50
c77f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
c786:	00 00
c788:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
c78d:	31 c0                	xor    eax,eax
c78f:	e8 5c 57 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
c794:	48 83 f8 01          	cmp    rax,0x1
c798:	77 36                	ja     c7d0 <mbslen+0x60>
c79a:	48 89 df             	mov    rdi,rbx
c79d:	e8 5e 57 ff ff       	call   1f00 <strlen@plt>
c7a2:	48 89 c3             	mov    rbx,rax
c7a5:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
c7aa:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
c7b1:	00 00
c7b3:	48 89 d8             	mov    rax,rbx
c7b6:	0f 85 9d 01 00 00    	jne    c959 <mbslen+0x1e9>
c7bc:	48 83 c4 50          	add    rsp,0x50
c7c0:	5b                   	pop    rbx
c7c1:	5d                   	pop    rbp
c7c2:	41 5c                	pop    r12
c7c4:	41 5d                	pop    r13
c7c6:	41 5e                	pop    r14
c7c8:	c3                   	ret
c7c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
c7d0:	48 89 e5             	mov    rbp,rsp
c7d3:	48 89 5c 24 10       	mov    QWORD PTR [rsp+0x10],rbx
c7d8:	c6 04 24 00          	mov    BYTE PTR [rsp],0x0
c7dc:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
c7e3:	00 00
c7e5:	c6 44 24 0c 00       	mov    BYTE PTR [rsp+0xc],0x0
c7ea:	31 db                	xor    ebx,ebx
c7ec:	4c 8d 25 ad 41 00 00 	lea    r12,[rip+0x41ad]        # 109a0 <is_basic_table>
c7f3:	4c 8d 6d 04          	lea    r13,[rbp+0x4]
c7f7:	eb 5d                	jmp    c856 <mbslen+0xe6>
c7f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
c800:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
c805:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
c808:	89 d0                	mov    eax,edx
c80a:	c0 e8 05             	shr    al,0x5
c80d:	83 e0 07             	and    eax,0x7
c810:	41 8b 04 84          	mov    eax,DWORD PTR [r12+rax*4]
c814:	0f a3 d0             	bt     eax,edx
c817:	0f 83 c3 00 00 00    	jae    c8e0 <mbslen+0x170>
c81d:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
c824:	00 00
c826:	0f be 01             	movsx  eax,BYTE PTR [rcx]
c829:	c6 44 24 20 01       	mov    BYTE PTR [rsp+0x20],0x1
c82e:	c6 44 24 0c 01       	mov    BYTE PTR [rsp+0xc],0x1
c833:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
c837:	8b 44 24 24          	mov    eax,DWORD PTR [rsp+0x24]
c83b:	85 c0                	test   eax,eax
c83d:	0f 84 62 ff ff ff    	je     c7a5 <mbslen+0x35>
c843:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
c848:	48 01 44 24 10       	add    QWORD PTR [rsp+0x10],rax
c84d:	48 83 c3 01          	add    rbx,0x1
c851:	c6 44 24 0c 00       	mov    BYTE PTR [rsp+0xc],0x0
c856:	80 3c 24 00          	cmp    BYTE PTR [rsp],0x0
c85a:	74 a4                	je     c800 <mbslen+0x90>
c85c:	e8 8f 56 ff ff       	call   1ef0 <__ctype_get_mb_cur_max@plt>
c861:	4c 8b 74 24 10       	mov    r14,QWORD PTR [rsp+0x10]
c866:	48 89 c6             	mov    rsi,rax
c869:	4c 89 f7             	mov    rdi,r14
c86c:	e8 df c7 ff ff       	call   9050 <strnlen1>
c871:	48 8d 4d 04          	lea    rcx,[rbp+0x4]
c875:	48 8d 7d 24          	lea    rdi,[rbp+0x24]
c879:	48 89 c2             	mov    rdx,rax
c87c:	4c 89 f6             	mov    rsi,r14
c87f:	e8 6c d7 ff ff       	call   9ff0 <rpl_mbrtowc>
c884:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
c888:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
c88d:	74 69                	je     c8f8 <mbslen+0x188>
c88f:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
c893:	74 7b                	je     c910 <mbslen+0x1a0>
c895:	48 85 c0             	test   rax,rax
c898:	75 23                	jne    c8bd <mbslen+0x14d>
c89a:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
c89f:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
c8a6:	00 00
c8a8:	80 38 00             	cmp    BYTE PTR [rax],0x0
c8ab:	0f 85 ad 00 00 00    	jne    c95e <mbslen+0x1ee>
c8b1:	8b 54 24 24          	mov    edx,DWORD PTR [rsp+0x24]
c8b5:	85 d2                	test   edx,edx
c8b7:	0f 85 c0 00 00 00    	jne    c97d <mbslen+0x20d>
c8bd:	48 8d 7d 04          	lea    rdi,[rbp+0x4]
c8c1:	c6 44 24 20 01       	mov    BYTE PTR [rsp+0x20],0x1
c8c6:	e8 e5 59 ff ff       	call   22b0 <mbsinit@plt>
c8cb:	85 c0                	test   eax,eax
c8cd:	74 61                	je     c930 <mbslen+0x1c0>
c8cf:	c6 04 24 00          	mov    BYTE PTR [rsp],0x0
c8d3:	c6 44 24 0c 01       	mov    BYTE PTR [rsp+0xc],0x1
c8d8:	e9 5a ff ff ff       	jmp    c837 <mbslen+0xc7>
c8dd:	0f 1f 00             	nop    DWORD PTR [rax]
c8e0:	4c 89 ef             	mov    rdi,r13
c8e3:	e8 c8 59 ff ff       	call   22b0 <mbsinit@plt>
c8e8:	85 c0                	test   eax,eax
c8ea:	74 4e                	je     c93a <mbslen+0x1ca>
c8ec:	c6 04 24 01          	mov    BYTE PTR [rsp],0x1
c8f0:	e9 67 ff ff ff       	jmp    c85c <mbslen+0xec>
c8f5:	0f 1f 00             	nop    DWORD PTR [rax]
c8f8:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
c8ff:	00 00
c901:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
c906:	e9 38 ff ff ff       	jmp    c843 <mbslen+0xd3>
c90b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
c910:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
c915:	e8 e6 55 ff ff       	call   1f00 <strlen@plt>
c91a:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
c91f:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
c924:	e9 1a ff ff ff       	jmp    c843 <mbslen+0xd3>
c929:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
c930:	c6 44 24 0c 01       	mov    BYTE PTR [rsp+0xc],0x1
c935:	e9 fd fe ff ff       	jmp    c837 <mbslen+0xc7>
c93a:	48 8d 0d 9f 40 00 00 	lea    rcx,[rip+0x409f]        # 109e0 <__PRETTY_FUNCTION__.5021>
c941:	48 8d 35 10 37 00 00 	lea    rsi,[rip+0x3710]        # 10058 <primes_diff+0x2f8>
c948:	48 8d 3d 3b 37 00 00 	lea    rdi,[rip+0x373b]        # 1008a <primes_diff+0x32a>
c94f:	ba 96 00 00 00       	mov    edx,0x96
c954:	e8 87 56 ff ff       	call   1fe0 <__assert_fail@plt>
c959:	e8 c2 55 ff ff       	call   1f20 <__stack_chk_fail@plt>
c95e:	48 8d 0d 7b 40 00 00 	lea    rcx,[rip+0x407b]        # 109e0 <__PRETTY_FUNCTION__.5021>
c965:	48 8d 35 ec 36 00 00 	lea    rsi,[rip+0x36ec]        # 10058 <primes_diff+0x2f8>
c96c:	48 8d 3d 2e 37 00 00 	lea    rdi,[rip+0x372e]        # 100a1 <primes_diff+0x341>
c973:	ba b2 00 00 00       	mov    edx,0xb2
c978:	e8 63 56 ff ff       	call   1fe0 <__assert_fail@plt>
c97d:	48 8d 0d 5c 40 00 00 	lea    rcx,[rip+0x405c]        # 109e0 <__PRETTY_FUNCTION__.5021>
c984:	48 8d 35 cd 36 00 00 	lea    rsi,[rip+0x36cd]        # 10058 <primes_diff+0x2f8>
c98b:	48 8d 3d e6 36 00 00 	lea    rdi,[rip+0x36e6]        # 10078 <primes_diff+0x318>
c992:	ba b3 00 00 00       	mov    edx,0xb3
c997:	e8 44 56 ff ff       	call   1fe0 <__assert_fail@plt>
c99c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000c9a0 <__libc_csu_init>:
c9a0:	41 57                	push   r15
c9a2:	41 56                	push   r14
c9a4:	49 89 d7             	mov    r15,rdx
c9a7:	41 55                	push   r13
c9a9:	41 54                	push   r12
c9ab:	4c 8d 25 7e 60 20 00 	lea    r12,[rip+0x20607e]        # 212a30 <__frame_dummy_init_array_entry>
c9b2:	55                   	push   rbp
c9b3:	48 8d 2d 7e 60 20 00 	lea    rbp,[rip+0x20607e]        # 212a38 <__init_array_end>
c9ba:	53                   	push   rbx
c9bb:	41 89 fd             	mov    r13d,edi
c9be:	49 89 f6             	mov    r14,rsi
c9c1:	4c 29 e5             	sub    rbp,r12
c9c4:	48 83 ec 08          	sub    rsp,0x8
c9c8:	48 c1 fd 03          	sar    rbp,0x3
c9cc:	e8 b7 53 ff ff       	call   1d88 <_init>
c9d1:	48 85 ed             	test   rbp,rbp
c9d4:	74 20                	je     c9f6 <__libc_csu_init+0x56>
c9d6:	31 db                	xor    ebx,ebx
c9d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
c9df:	00
c9e0:	4c 89 fa             	mov    rdx,r15
c9e3:	4c 89 f6             	mov    rsi,r14
c9e6:	44 89 ef             	mov    edi,r13d
c9e9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
c9ed:	48 83 c3 01          	add    rbx,0x1
c9f1:	48 39 dd             	cmp    rbp,rbx
c9f4:	75 ea                	jne    c9e0 <__libc_csu_init+0x40>
c9f6:	48 83 c4 08          	add    rsp,0x8
c9fa:	5b                   	pop    rbx
c9fb:	5d                   	pop    rbp
c9fc:	41 5c                	pop    r12
c9fe:	41 5d                	pop    r13
ca00:	41 5e                	pop    r14
ca02:	41 5f                	pop    r15
ca04:	c3                   	ret
ca05:	90                   	nop
ca06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ca0d:	00 00 00

000000000000ca10 <__libc_csu_fini>:
ca10:	f3 c3                	repz ret
ca12:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ca19:	00 00 00
ca1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000ca20 <atexit>:
ca20:	48 8b 15 e1 65 20 00 	mov    rdx,QWORD PTR [rip+0x2065e1]        # 213008 <__dso_handle>
ca27:	31 f6                	xor    esi,esi
ca29:	e9 f2 57 ff ff       	jmp    2220 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000000ca30 <_fini>:
ca30:	48 83 ec 08          	sub    rsp,0x8
ca34:	48 83 c4 08          	add    rsp,0x8
ca38:	c3                   	ret
