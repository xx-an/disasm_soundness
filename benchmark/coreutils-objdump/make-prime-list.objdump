


Disassembly of section .init:

00000000000008b8 <_init>:
8b8:	48 83 ec 08          	sub    rsp,0x8
8bc:	48 8b 05 25 17 20 00 	mov    rax,QWORD PTR [rip+0x201725]        # 201fe8 <__gmon_start__>
8c3:	48 85 c0             	test   rax,rax
8c6:	74 02                	je     8ca <_init+0x12>
8c8:	ff d0                	call   rax
8ca:	48 83 c4 08          	add    rsp,0x8
8ce:	c3                   	ret

Disassembly of section .plt:

00000000000008d0 <.plt>:
8d0:	ff 35 7a 16 20 00    	push   QWORD PTR [rip+0x20167a]        # 201f50 <_GLOBAL_OFFSET_TABLE_+0x8>
8d6:	ff 25 7c 16 20 00    	jmp    QWORD PTR [rip+0x20167c]        # 201f58 <_GLOBAL_OFFSET_TABLE_+0x10>
8dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000008e0 <free@plt>:
8e0:	ff 25 7a 16 20 00    	jmp    QWORD PTR [rip+0x20167a]        # 201f60 <free@GLIBC_2.2.5>
8e6:	68 00 00 00 00       	push   0x0
8eb:	e9 e0 ff ff ff       	jmp    8d0 <.plt>

00000000000008f0 <putchar@plt>:
8f0:	ff 25 72 16 20 00    	jmp    QWORD PTR [rip+0x201672]        # 201f68 <putchar@GLIBC_2.2.5>
8f6:	68 01 00 00 00       	push   0x1
8fb:	e9 d0 ff ff ff       	jmp    8d0 <.plt>

0000000000000900 <abort@plt>:
900:	ff 25 6a 16 20 00    	jmp    QWORD PTR [rip+0x20166a]        # 201f70 <abort@GLIBC_2.2.5>
906:	68 02 00 00 00       	push   0x2
90b:	e9 c0 ff ff ff       	jmp    8d0 <.plt>

0000000000000910 <__errno_location@plt>:
910:	ff 25 62 16 20 00    	jmp    QWORD PTR [rip+0x201662]        # 201f78 <__errno_location@GLIBC_2.2.5>
916:	68 03 00 00 00       	push   0x3
91b:	e9 b0 ff ff ff       	jmp    8d0 <.plt>

0000000000000920 <puts@plt>:
920:	ff 25 5a 16 20 00    	jmp    QWORD PTR [rip+0x20165a]        # 201f80 <puts@GLIBC_2.2.5>
926:	68 04 00 00 00       	push   0x4
92b:	e9 a0 ff ff ff       	jmp    8d0 <.plt>

0000000000000930 <ferror@plt>:
930:	ff 25 52 16 20 00    	jmp    QWORD PTR [rip+0x201652]        # 201f88 <ferror@GLIBC_2.2.5>
936:	68 05 00 00 00       	push   0x5
93b:	e9 90 ff ff ff       	jmp    8d0 <.plt>

0000000000000940 <fclose@plt>:
940:	ff 25 4a 16 20 00    	jmp    QWORD PTR [rip+0x20164a]        # 201f90 <fclose@GLIBC_2.2.5>
946:	68 06 00 00 00       	push   0x6
94b:	e9 80 ff ff ff       	jmp    8d0 <.plt>

0000000000000950 <memset@plt>:
950:	ff 25 42 16 20 00    	jmp    QWORD PTR [rip+0x201642]        # 201f98 <memset@GLIBC_2.2.5>
956:	68 07 00 00 00       	push   0x7
95b:	e9 70 ff ff ff       	jmp    8d0 <.plt>

0000000000000960 <strtol@plt>:
960:	ff 25 3a 16 20 00    	jmp    QWORD PTR [rip+0x20163a]        # 201fa0 <strtol@GLIBC_2.2.5>
966:	68 08 00 00 00       	push   0x8
96b:	e9 60 ff ff ff       	jmp    8d0 <.plt>

0000000000000970 <malloc@plt>:
970:	ff 25 32 16 20 00    	jmp    QWORD PTR [rip+0x201632]        # 201fa8 <malloc@GLIBC_2.2.5>
976:	68 09 00 00 00       	push   0x9
97b:	e9 50 ff ff ff       	jmp    8d0 <.plt>

0000000000000980 <__printf_chk@plt>:
980:	ff 25 2a 16 20 00    	jmp    QWORD PTR [rip+0x20162a]        # 201fb0 <__printf_chk@GLIBC_2.3.4>
986:	68 0a 00 00 00       	push   0xa
98b:	e9 40 ff ff ff       	jmp    8d0 <.plt>

0000000000000990 <exit@plt>:
990:	ff 25 22 16 20 00    	jmp    QWORD PTR [rip+0x201622]        # 201fb8 <exit@GLIBC_2.2.5>
996:	68 0b 00 00 00       	push   0xb
99b:	e9 30 ff ff ff       	jmp    8d0 <.plt>

00000000000009a0 <fwrite@plt>:
9a0:	ff 25 1a 16 20 00    	jmp    QWORD PTR [rip+0x20161a]        # 201fc0 <fwrite@GLIBC_2.2.5>
9a6:	68 0c 00 00 00       	push   0xc
9ab:	e9 20 ff ff ff       	jmp    8d0 <.plt>

00000000000009b0 <__fprintf_chk@plt>:
9b0:	ff 25 12 16 20 00    	jmp    QWORD PTR [rip+0x201612]        # 201fc8 <__fprintf_chk@GLIBC_2.3.4>
9b6:	68 0d 00 00 00       	push   0xd
9bb:	e9 10 ff ff ff       	jmp    8d0 <.plt>

00000000000009c0 <strerror@plt>:
9c0:	ff 25 0a 16 20 00    	jmp    QWORD PTR [rip+0x20160a]        # 201fd0 <strerror@GLIBC_2.2.5>
9c6:	68 0e 00 00 00       	push   0xe
9cb:	e9 00 ff ff ff       	jmp    8d0 <.plt>

Disassembly of section .plt.got:

00000000000009d0 <__cxa_finalize@plt>:
9d0:	ff 25 22 16 20 00    	jmp    QWORD PTR [rip+0x201622]        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
9d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000009e0 <main>:
9e0:	41 57                	push   r15
9e2:	41 56                	push   r14
9e4:	41 55                	push   r13
9e6:	41 54                	push   r12
9e8:	55                   	push   rbp
9e9:	53                   	push   rbx
9ea:	48 83 ec 38          	sub    rsp,0x38
9ee:	83 ff 02             	cmp    edi,0x2
9f1:	74 31                	je     a24 <main+0x44>
9f3:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
9f6:	48 8d 15 ab 08 00 00 	lea    rdx,[rip+0x8ab]        # 12a8 <_IO_stdin_used+0xb8>
9fd:	48 8b 3d 3c 16 20 00 	mov    rdi,QWORD PTR [rip+0x20163c]        # 202040 <stderr@@GLIBC_2.2.5>
a04:	be 01 00 00 00       	mov    esi,0x1
a09:	31 c0                	xor    eax,eax
a0b:	e8 a0 ff ff ff       	call   9b0 <__fprintf_chk@plt>
a10:	b8 01 00 00 00       	mov    eax,0x1
a15:	48 83 c4 38          	add    rsp,0x38
a19:	5b                   	pop    rbx
a1a:	5d                   	pop    rbp
a1b:	41 5c                	pop    r12
a1d:	41 5d                	pop    r13
a1f:	41 5e                	pop    r14
a21:	41 5f                	pop    r15
a23:	c3                   	ret
a24:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
a28:	ba 0a 00 00 00       	mov    edx,0xa
a2d:	31 f6                	xor    esi,esi
a2f:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
a33:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
a38:	e8 23 ff ff ff       	call   960 <strtol@plt>
a3d:	83 f8 02             	cmp    eax,0x2
a40:	89 c2                	mov    edx,eax
a42:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
a46:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
a4b:	0f 8e b7 02 00 00    	jle    d08 <main+0x328>
a51:	a8 01                	test   al,0x1
a53:	75 03                	jne    a58 <main+0x78>
a55:	8d 50 ff             	lea    edx,[rax-0x1]
a58:	8d 5a ff             	lea    ebx,[rdx-0x1]
a5b:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
a5f:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
a64:	d1 fb                	sar    ebx,1
a66:	4c 63 e3             	movsxd r12,ebx
a69:	4c 89 e7             	mov    rdi,r12
a6c:	e8 bf 05 00 00       	call   1030 <xalloc>
a71:	4c 89 e2             	mov    rdx,r12
a74:	be 01 00 00 00       	mov    esi,0x1
a79:	48 89 c7             	mov    rdi,rax
a7c:	49 89 c7             	mov    r15,rax
a7f:	e8 cc fe ff ff       	call   950 <memset@plt>
a84:	49 6b fc 30          	imul   rdi,r12,0x30
a88:	e8 a3 05 00 00       	call   1030 <xalloc>
a8d:	85 db                	test   ebx,ebx
a8f:	48 89 c5             	mov    rbp,rax
a92:	0f 84 24 03 00 00    	je     dbc <main+0x3dc>
a98:	31 db                	xor    ebx,ebx
a9a:	48 89 6c 24 28       	mov    QWORD PTR [rsp+0x28],rbp
a9f:	31 c0                	xor    eax,eax
aa1:	48 89 dd             	mov    rbp,rbx
aa4:	44 8d 4c 2d 03       	lea    r9d,[rbp+rbp*1+0x3]
aa9:	4c 8d 1c 40          	lea    r11,[rax+rax*2]
aad:	45 31 d2             	xor    r10d,r10d
ab0:	8d 78 01             	lea    edi,[rax+0x1]
ab3:	b8 b1 7d 39 f5       	mov    eax,0xf5397db1
ab8:	45 31 f6             	xor    r14d,r14d
abb:	4c 89 c9             	mov    rcx,r9
abe:	49 c1 e3 04          	shl    r11,0x4
ac2:	4c 03 5c 24 28       	add    r11,QWORD PTR [rsp+0x28]
ac7:	4c 0f ac d1 01       	shrd   rcx,r10,0x1
acc:	4d 89 c8             	mov    r8,r9
acf:	89 7c 24 24          	mov    DWORD PTR [rsp+0x24],edi
ad3:	83 e1 07             	and    ecx,0x7
ad6:	c1 e1 02             	shl    ecx,0x2
ad9:	45 89 0b             	mov    DWORD PTR [r11],r9d
adc:	d3 e8                	shr    eax,cl
ade:	41 89 c5             	mov    r13d,eax
ae1:	eb 0b                	jmp    aee <main+0x10e>
ae3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
ae8:	49 89 cd             	mov    r13,rcx
aeb:	49 89 de             	mov    r14,rbx
aee:	4c 89 f6             	mov    rsi,r14
af1:	4c 89 e8             	mov    rax,r13
af4:	4c 89 e9             	mov    rcx,r13
af7:	49 f7 e5             	mul    r13
afa:	4c 89 f3             	mov    rbx,r14
afd:	4c 01 e9             	add    rcx,r13
b00:	49 0f af f5          	imul   rsi,r13
b04:	4c 0f a4 eb 01       	shld   rbx,r13,0x1
b09:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
b0e:	48 89 04 24          	mov    QWORD PTR [rsp],rax
b12:	48 01 f6             	add    rsi,rsi
b15:	48 01 74 24 08       	add    QWORD PTR [rsp+0x8],rsi
b1a:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
b1e:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
b23:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
b27:	49 0f af d2          	imul   rdx,r10
b2b:	49 0f af f1          	imul   rsi,r9
b2f:	48 01 d6             	add    rsi,rdx
b32:	49 f7 e1             	mul    r9
b35:	48 01 f2             	add    rdx,rsi
b38:	48 29 c1             	sub    rcx,rax
b3b:	4c 89 e8             	mov    rax,r13
b3e:	48 19 d3             	sbb    rbx,rdx
b41:	4c 89 f2             	mov    rdx,r14
b44:	48 31 c8             	xor    rax,rcx
b47:	48 31 da             	xor    rdx,rbx
b4a:	48 09 c2             	or     rdx,rax
b4d:	75 99                	jne    ae8 <main+0x108>
b4f:	48 c7 c7 ff ff ff ff 	mov    rdi,0xffffffffffffffff
b56:	4d 89 6b 10          	mov    QWORD PTR [r11+0x10],r13
b5a:	4d 89 73 18          	mov    QWORD PTR [r11+0x18],r14
b5e:	4c 89 ca             	mov    rdx,r9
b61:	4c 89 d1             	mov    rcx,r10
b64:	48 89 fe             	mov    rsi,rdi
b67:	44 89 44 24 20       	mov    DWORD PTR [rsp+0x20],r8d
b6c:	4c 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],r11
b71:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
b75:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
b7a:	e8 f1 04 00 00       	call   1070 <__udivti3>
b7f:	4c 8b 5c 24 18       	mov    r11,QWORD PTR [rsp+0x18]
b84:	44 8b 44 24 20       	mov    r8d,DWORD PTR [rsp+0x20]
b89:	49 89 43 20          	mov    QWORD PTR [r11+0x20],rax
b8d:	44 89 c0             	mov    eax,r8d
b90:	49 89 53 28          	mov    QWORD PTR [r11+0x28],rdx
b94:	41 0f af c0          	imul   eax,r8d
b98:	83 e8 03             	sub    eax,0x3
b9b:	d1 e8                	shr    eax,1
b9d:	89 c2                	mov    edx,eax
b9f:	49 39 d4             	cmp    r12,rdx
ba2:	76 2f                	jbe    bd3 <main+0x1f3>
ba4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ba8:	41 c6 04 17 00       	mov    BYTE PTR [r15+rdx*1],0x0
bad:	42 8d 14 00          	lea    edx,[rax+r8*1]
bb1:	4c 39 e2             	cmp    rdx,r12
bb4:	48 89 d0             	mov    rax,rdx
bb7:	72 ef                	jb     ba8 <main+0x1c8>
bb9:	48 83 c5 01          	add    rbp,0x1
bbd:	49 39 ec             	cmp    r12,rbp
bc0:	76 1a                	jbe    bdc <main+0x1fc>
bc2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
bc8:	41 80 3c 2f 00       	cmp    BYTE PTR [r15+rbp*1],0x0
bcd:	0f 85 e0 01 00 00    	jne    db3 <main+0x3d3>
bd3:	48 83 c5 01          	add    rbp,0x1
bd7:	49 39 ec             	cmp    r12,rbp
bda:	77 ec                	ja     bc8 <main+0x1e8>
bdc:	48 8b 6c 24 28       	mov    rbp,QWORD PTR [rsp+0x28]
be1:	48 8d 3d f8 06 00 00 	lea    rdi,[rip+0x6f8]        # 12e0 <_IO_stdin_used+0xf0>
be8:	e8 33 fd ff ff       	call   920 <puts@plt>
bed:	48 8d 35 40 06 00 00 	lea    rsi,[rip+0x640]        # 1234 <_IO_stdin_used+0x44>
bf4:	bf 01 00 00 00       	mov    edi,0x1
bf9:	31 c0                	xor    eax,eax
bfb:	ba 80 00 00 00       	mov    edx,0x80
c00:	e8 7b fd ff ff       	call   980 <__printf_chk@plt>
c05:	8b 7c 24 24          	mov    edi,DWORD PTR [rsp+0x24]
c09:	85 ff                	test   edi,edi
c0b:	0f 84 c2 01 00 00    	je     dd3 <main+0x3f3>
c11:	8d 47 ff             	lea    eax,[rdi-0x1]
c14:	41 be 08 00 00 00    	mov    r14d,0x8
c1a:	4c 89 3c 24          	mov    QWORD PTR [rsp],r15
c1e:	48 89 eb             	mov    rbx,rbp
c21:	45 89 f7             	mov    r15d,r14d
c24:	ba 02 00 00 00       	mov    edx,0x2
c29:	48 6b c0 30          	imul   rax,rax,0x30
c2d:	4c 8d 6c 05 30       	lea    r13,[rbp+rax*1+0x30]
c32:	4d 89 ee             	mov    r14,r13
c35:	41 89 fd             	mov    r13d,edi
c38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
c3f:	00
c40:	45 39 fd             	cmp    r13d,r15d
c43:	44 8b 23             	mov    r12d,DWORD PTR [rbx]
c46:	0f 86 7d 01 00 00    	jbe    dc9 <main+0x3e9>
c4c:	44 89 f8             	mov    eax,r15d
c4f:	48 8d 04 40          	lea    rax,[rax+rax*2]
c53:	48 c1 e0 04          	shl    rax,0x4
c57:	8b 4c 05 00          	mov    ecx,DWORD PTR [rbp+rax*1+0x0]
c5b:	44 29 e1             	sub    ecx,r12d
c5e:	81 f9 ff 00 00 00    	cmp    ecx,0xff
c64:	0f 87 74 01 00 00    	ja     dde <main+0x3fe>
c6a:	44 89 e0             	mov    eax,r12d
c6d:	48 8d 35 db 05 00 00 	lea    rsi,[rip+0x5db]        # 124f <_IO_stdin_used+0x5f>
c74:	bf 01 00 00 00       	mov    edi,0x1
c79:	29 d0                	sub    eax,edx
c7b:	48 83 c3 30          	add    rbx,0x30
c7f:	41 83 c7 01          	add    r15d,0x1
c83:	89 c2                	mov    edx,eax
c85:	31 c0                	xor    eax,eax
c87:	e8 f4 fc ff ff       	call   980 <__printf_chk@plt>
c8c:	48 8b 7b e0          	mov    rdi,QWORD PTR [rbx-0x20]
c90:	48 8b 73 e8          	mov    rsi,QWORD PTR [rbx-0x18]
c94:	31 d2                	xor    edx,edx
c96:	b9 80 00 00 00       	mov    ecx,0x80
c9b:	e8 60 02 00 00       	call   f00 <print_wide_uint>
ca0:	48 8d 35 b8 05 00 00 	lea    rsi,[rip+0x5b8]        # 125f <_IO_stdin_used+0x6f>
ca7:	44 89 e2             	mov    edx,r12d
caa:	31 c0                	xor    eax,eax
cac:	bf 01 00 00 00       	mov    edi,0x1
cb1:	e8 ca fc ff ff       	call   980 <__printf_chk@plt>
cb6:	49 39 de             	cmp    r14,rbx
cb9:	44 89 e2             	mov    edx,r12d
cbc:	75 82                	jne    c40 <main+0x260>
cbe:	4c 8b 3c 24          	mov    r15,QWORD PTR [rsp]
cc2:	48 8d 3d af 05 00 00 	lea    rdi,[rip+0x5af]        # 1278 <_IO_stdin_used+0x88>
cc9:	41 83 c4 02          	add    r12d,0x2
ccd:	e8 4e fc ff ff       	call   920 <puts@plt>
cd2:	44 8b 4d 00          	mov    r9d,DWORD PTR [rbp+0x0]
cd6:	45 0f af c9          	imul   r9d,r9d
cda:	45 39 e1             	cmp    r9d,r12d
cdd:	77 71                	ja     d50 <main+0x370>
cdf:	44 89 e7             	mov    edi,r12d
ce2:	48 8b 4d 18          	mov    rcx,QWORD PTR [rbp+0x18]
ce6:	48 89 f8             	mov    rax,rdi
ce9:	48 f7 65 10          	mul    QWORD PTR [rbp+0x10]
ced:	48 0f af cf          	imul   rcx,rdi
cf1:	48 01 ca             	add    rdx,rcx
cf4:	48 39 55 28          	cmp    QWORD PTR [rbp+0x28],rdx
cf8:	77 08                	ja     d02 <main+0x322>
cfa:	72 14                	jb     d10 <main+0x330>
cfc:	48 39 45 20          	cmp    QWORD PTR [rbp+0x20],rax
d00:	72 0e                	jb     d10 <main+0x330>
d02:	41 83 c4 02          	add    r12d,0x2
d06:	eb d2                	jmp    cda <main+0x2fa>
d08:	31 c0                	xor    eax,eax
d0a:	e9 06 fd ff ff       	jmp    a15 <main+0x35>
d0f:	90                   	nop
d10:	31 f6                	xor    esi,esi
d12:	8d 46 01             	lea    eax,[rsi+0x1]
d15:	48 8d 0c 40          	lea    rcx,[rax+rax*2]
d19:	48 89 c6             	mov    rsi,rax
d1c:	48 c1 e1 04          	shl    rcx,0x4
d20:	48 01 e9             	add    rcx,rbp
d23:	8b 01                	mov    eax,DWORD PTR [rcx]
d25:	0f af c0             	imul   eax,eax
d28:	44 39 e0             	cmp    eax,r12d
d2b:	77 23                	ja     d50 <main+0x370>
d2d:	4c 8b 41 18          	mov    r8,QWORD PTR [rcx+0x18]
d31:	48 89 f8             	mov    rax,rdi
d34:	48 f7 61 10          	mul    QWORD PTR [rcx+0x10]
d38:	4c 0f af c7          	imul   r8,rdi
d3c:	4c 01 c2             	add    rdx,r8
d3f:	48 3b 51 28          	cmp    rdx,QWORD PTR [rcx+0x28]
d43:	72 bd                	jb     d02 <main+0x322>
d45:	77 cb                	ja     d12 <main+0x332>
d47:	48 3b 41 20          	cmp    rax,QWORD PTR [rcx+0x20]
d4b:	76 b5                	jbe    d02 <main+0x322>
d4d:	eb c3                	jmp    d12 <main+0x332>
d4f:	90                   	nop
d50:	48 8d 35 b1 05 00 00 	lea    rsi,[rip+0x5b1]        # 1308 <_IO_stdin_used+0x118>
d57:	44 89 e2             	mov    edx,r12d
d5a:	bf 01 00 00 00       	mov    edi,0x1
d5f:	31 c0                	xor    eax,eax
d61:	e8 1a fc ff ff       	call   980 <__printf_chk@plt>
d66:	4c 89 ff             	mov    rdi,r15
d69:	e8 72 fb ff ff       	call   8e0 <free@plt>
d6e:	48 89 ef             	mov    rdi,rbp
d71:	e8 6a fb ff ff       	call   8e0 <free@plt>
d76:	48 8b 3d a3 12 20 00 	mov    rdi,QWORD PTR [rip+0x2012a3]        # 202020 <stdout@@GLIBC_2.2.5>
d7d:	e8 ae fb ff ff       	call   930 <ferror@plt>
d82:	48 8b 3d 97 12 20 00 	mov    rdi,QWORD PTR [rip+0x201297]        # 202020 <stdout@@GLIBC_2.2.5>
d89:	89 c3                	mov    ebx,eax
d8b:	e8 b0 fb ff ff       	call   940 <fclose@plt>
d90:	01 c3                	add    ebx,eax
d92:	0f 84 70 ff ff ff    	je     d08 <main+0x328>
d98:	e8 73 fb ff ff       	call   910 <__errno_location@plt>
d9d:	8b 38                	mov    edi,DWORD PTR [rax]
d9f:	e8 1c fc ff ff       	call   9c0 <strerror@plt>
da4:	48 8d 15 e9 04 00 00 	lea    rdx,[rip+0x4e9]        # 1294 <_IO_stdin_used+0xa4>
dab:	48 89 c1             	mov    rcx,rax
dae:	e9 4a fc ff ff       	jmp    9fd <main+0x1d>
db3:	8b 44 24 24          	mov    eax,DWORD PTR [rsp+0x24]
db7:	e9 e8 fc ff ff       	jmp    aa4 <main+0xc4>
dbc:	c7 44 24 24 00 00 00 	mov    DWORD PTR [rsp+0x24],0x0
dc3:	00
dc4:	e9 18 fe ff ff       	jmp    be1 <main+0x201>
dc9:	b9 ff 00 00 00       	mov    ecx,0xff
dce:	e9 97 fe ff ff       	jmp    c6a <main+0x28a>
dd3:	41 bc 02 00 00 00    	mov    r12d,0x2
dd9:	e9 e4 fe ff ff       	jmp    cc2 <main+0x2e2>
dde:	e8 1d fb ff ff       	call   900 <abort@plt>
de3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
dea:	00 00 00
ded:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000000df0 <_start>:
df0:	31 ed                	xor    ebp,ebp
df2:	49 89 d1             	mov    r9,rdx
df5:	5e                   	pop    rsi
df6:	48 89 e2             	mov    rdx,rsp
df9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
dfd:	50                   	push   rax
dfe:	54                   	push   rsp
dff:	4c 8d 05 da 03 00 00 	lea    r8,[rip+0x3da]        # 11e0 <__libc_csu_fini>
e06:	48 8d 0d 63 03 00 00 	lea    rcx,[rip+0x363]        # 1170 <__libc_csu_init>
e0d:	48 8d 3d cc fb ff ff 	lea    rdi,[rip+0xfffffffffffffbcc]        # 9e0 <main>
e14:	ff 15 c6 11 20 00    	call   QWORD PTR [rip+0x2011c6]        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
e1a:	f4                   	hlt
e1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000e20 <deregister_tm_clones>:
e20:	48 8d 3d e9 11 20 00 	lea    rdi,[rip+0x2011e9]        # 202010 <__TMC_END__>
e27:	55                   	push   rbp
e28:	48 8d 05 e1 11 20 00 	lea    rax,[rip+0x2011e1]        # 202010 <__TMC_END__>
e2f:	48 39 f8             	cmp    rax,rdi
e32:	48 89 e5             	mov    rbp,rsp
e35:	74 19                	je     e50 <deregister_tm_clones+0x30>
e37:	48 8b 05 9a 11 20 00 	mov    rax,QWORD PTR [rip+0x20119a]        # 201fd8 <_ITM_deregisterTMCloneTable>
e3e:	48 85 c0             	test   rax,rax
e41:	74 0d                	je     e50 <deregister_tm_clones+0x30>
e43:	5d                   	pop    rbp
e44:	ff e0                	jmp    rax
e46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
e4d:	00 00 00
e50:	5d                   	pop    rbp
e51:	c3                   	ret
e52:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
e56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
e5d:	00 00 00

0000000000000e60 <register_tm_clones>:
e60:	48 8d 3d a9 11 20 00 	lea    rdi,[rip+0x2011a9]        # 202010 <__TMC_END__>
e67:	48 8d 35 a2 11 20 00 	lea    rsi,[rip+0x2011a2]        # 202010 <__TMC_END__>
e6e:	55                   	push   rbp
e6f:	48 29 fe             	sub    rsi,rdi
e72:	48 89 e5             	mov    rbp,rsp
e75:	48 c1 fe 03          	sar    rsi,0x3
e79:	48 89 f0             	mov    rax,rsi
e7c:	48 c1 e8 3f          	shr    rax,0x3f
e80:	48 01 c6             	add    rsi,rax
e83:	48 d1 fe             	sar    rsi,1
e86:	74 18                	je     ea0 <register_tm_clones+0x40>
e88:	48 8b 05 61 11 20 00 	mov    rax,QWORD PTR [rip+0x201161]        # 201ff0 <_ITM_registerTMCloneTable>
e8f:	48 85 c0             	test   rax,rax
e92:	74 0c                	je     ea0 <register_tm_clones+0x40>
e94:	5d                   	pop    rbp
e95:	ff e0                	jmp    rax
e97:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
e9e:	00 00
ea0:	5d                   	pop    rbp
ea1:	c3                   	ret
ea2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
ea6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
ead:	00 00 00

0000000000000eb0 <__do_global_dtors_aux>:
eb0:	80 3d 91 11 20 00 00 	cmp    BYTE PTR [rip+0x201191],0x0        # 202048 <completed.7697>
eb7:	75 2f                	jne    ee8 <__do_global_dtors_aux+0x38>
eb9:	48 83 3d 37 11 20 00 	cmp    QWORD PTR [rip+0x201137],0x0        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
ec0:	00
ec1:	55                   	push   rbp
ec2:	48 89 e5             	mov    rbp,rsp
ec5:	74 0c                	je     ed3 <__do_global_dtors_aux+0x23>
ec7:	48 8b 3d 3a 11 20 00 	mov    rdi,QWORD PTR [rip+0x20113a]        # 202008 <__dso_handle>
ece:	e8 fd fa ff ff       	call   9d0 <__cxa_finalize@plt>
ed3:	e8 48 ff ff ff       	call   e20 <deregister_tm_clones>
ed8:	c6 05 69 11 20 00 01 	mov    BYTE PTR [rip+0x201169],0x1        # 202048 <completed.7697>
edf:	5d                   	pop    rbp
ee0:	c3                   	ret
ee1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
ee8:	f3 c3                	repz ret
eea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000ef0 <frame_dummy>:
ef0:	55                   	push   rbp
ef1:	48 89 e5             	mov    rbp,rsp
ef4:	5d                   	pop    rbp
ef5:	e9 66 ff ff ff       	jmp    e60 <register_tm_clones>
efa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000f00 <print_wide_uint>:
f00:	41 56                	push   r14
f02:	41 55                	push   r13
f04:	41 54                	push   r12
f06:	55                   	push   rbp
f07:	49 89 f4             	mov    r12,rsi
f0a:	53                   	push   rbx
f0b:	89 fb                	mov    ebx,edi
f0d:	89 d5                	mov    ebp,edx
f0f:	81 e3 ff ff ff 0f    	and    ebx,0xfffffff
f15:	89 d8                	mov    eax,ebx
f17:	48 83 ec 10          	sub    rsp,0x10
f1b:	48 31 f8             	xor    rax,rdi
f1e:	48 09 c6             	or     rsi,rax
f21:	75 5d                	jne    f80 <print_wide_uint+0x80>
f23:	85 ed                	test   ebp,ebp
f25:	ba 07 00 00 00       	mov    edx,0x7
f2a:	75 24                	jne    f50 <print_wide_uint+0x50>
f2c:	48 83 c4 10          	add    rsp,0x10
f30:	89 d9                	mov    ecx,ebx
f32:	48 8d 35 d8 02 00 00 	lea    rsi,[rip+0x2d8]        # 1211 <_IO_stdin_used+0x21>
f39:	5b                   	pop    rbx
f3a:	5d                   	pop    rbp
f3b:	41 5c                	pop    r12
f3d:	41 5d                	pop    r13
f3f:	41 5e                	pop    r14
f41:	bf 01 00 00 00       	mov    edi,0x1
f46:	31 c0                	xor    eax,eax
f48:	e9 33 fa ff ff       	jmp    980 <__printf_chk@plt>
f4d:	0f 1f 00             	nop    DWORD PTR [rax]
f50:	48 8d 35 ad 02 00 00 	lea    rsi,[rip+0x2ad]        # 1204 <_IO_stdin_used+0x14>
f57:	bf 01 00 00 00       	mov    edi,0x1
f5c:	31 c0                	xor    eax,eax
f5e:	89 4c 24 08          	mov    DWORD PTR [rsp+0x8],ecx
f62:	e8 19 fa ff ff       	call   980 <__printf_chk@plt>
f67:	8b 4c 24 08          	mov    ecx,DWORD PTR [rsp+0x8]
f6b:	8d 51 ff             	lea    edx,[rcx-0x1]
f6e:	83 e2 03             	and    edx,0x3
f71:	83 c2 01             	add    edx,0x1
f74:	eb b6                	jmp    f2c <print_wide_uint+0x2c>
f76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
f7d:	00 00 00
f80:	49 89 fb             	mov    r11,rdi
f83:	4d 89 e2             	mov    r10,r12
f86:	4d 89 e6             	mov    r14,r12
f89:	4d 89 d9             	mov    r9,r11
f8c:	49 c1 ea 38          	shr    r10,0x38
f90:	4d 89 dd             	mov    r13,r11
f93:	4d 0f ac e1 38       	shrd   r9,r12,0x38
f98:	4c 89 d0             	mov    rax,r10
f9b:	49 c1 ee 1c          	shr    r14,0x1c
f9f:	8d 52 01             	lea    edx,[rdx+0x1]
fa2:	4d 0f ac e5 1c       	shrd   r13,r12,0x1c
fa7:	4c 09 c8             	or     rax,r9
faa:	75 34                	jne    fe0 <print_wide_uint+0xe0>
fac:	4c 89 f6             	mov    rsi,r14
faf:	4c 89 ef             	mov    rdi,r13
fb2:	e8 49 ff ff ff       	call   f00 <print_wide_uint>
fb7:	48 8d 35 3c 02 00 00 	lea    rsi,[rip+0x23c]        # 11fa <_IO_stdin_used+0xa>
fbe:	ba 1c 00 00 00       	mov    edx,0x1c
fc3:	bf 01 00 00 00       	mov    edi,0x1
fc8:	31 c0                	xor    eax,eax
fca:	e8 b1 f9 ff ff       	call   980 <__printf_chk@plt>
fcf:	ba 07 00 00 00       	mov    edx,0x7
fd4:	e9 53 ff ff ff       	jmp    f2c <print_wide_uint+0x2c>
fd9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
fe0:	bf 28 00 00 00       	mov    edi,0x28
fe5:	89 4c 24 0c          	mov    DWORD PTR [rsp+0xc],ecx
fe9:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
fed:	e8 fe f8 ff ff       	call   8f0 <putchar@plt>
ff2:	8b 4c 24 0c          	mov    ecx,DWORD PTR [rsp+0xc]
ff6:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
ffa:	4c 89 f6             	mov    rsi,r14
ffd:	4c 89 ef             	mov    rdi,r13
1000:	e8 fb fe ff ff       	call   f00 <print_wide_uint>
1005:	8d 55 03             	lea    edx,[rbp+0x3]
1008:	48 8d 0d 68 02 00 00 	lea    rcx,[rip+0x268]        # 1277 <_IO_stdin_used+0x87>
100f:	48 8d 35 de 01 00 00 	lea    rsi,[rip+0x1de]        # 11f4 <_IO_stdin_used+0x4>
1016:	bf 01 00 00 00       	mov    edi,0x1
101b:	31 c0                	xor    eax,eax
101d:	e8 5e f9 ff ff       	call   980 <__printf_chk@plt>
1022:	eb 93                	jmp    fb7 <print_wide_uint+0xb7>
1024:	66 90                	xchg   ax,ax
1026:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
102d:	00 00 00

0000000000001030 <xalloc>:
1030:	48 83 ec 08          	sub    rsp,0x8
1034:	e8 37 f9 ff ff       	call   970 <malloc@plt>
1039:	48 85 c0             	test   rax,rax
103c:	74 05                	je     1043 <xalloc+0x13>
103e:	48 83 c4 08          	add    rsp,0x8
1042:	c3                   	ret
1043:	48 8b 0d f6 0f 20 00 	mov    rcx,QWORD PTR [rip+0x200ff6]        # 202040 <stderr@@GLIBC_2.2.5>
104a:	48 8d 3d c8 01 00 00 	lea    rdi,[rip+0x1c8]        # 1219 <_IO_stdin_used+0x29>
1051:	ba 1a 00 00 00       	mov    edx,0x1a
1056:	be 01 00 00 00       	mov    esi,0x1
105b:	e8 40 f9 ff ff       	call   9a0 <fwrite@plt>
1060:	bf 01 00 00 00       	mov    edi,0x1
1065:	e8 26 f9 ff ff       	call   990 <exit@plt>
106a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001070 <__udivti3>:
1070:	48 85 c9             	test   rcx,rcx
1073:	49 89 d3             	mov    r11,rdx
1076:	48 89 ca             	mov    rdx,rcx
1079:	75 35                	jne    10b0 <__udivti3+0x40>
107b:	49 39 f3             	cmp    r11,rsi
107e:	0f 87 b4 00 00 00    	ja     1138 <__udivti3+0xc8>
1084:	4d 85 db             	test   r11,r11
1087:	4c 89 d9             	mov    rcx,r11
108a:	75 0d                	jne    1099 <__udivti3+0x29>
108c:	b8 01 00 00 00       	mov    eax,0x1
1091:	31 d2                	xor    edx,edx
1093:	49 f7 f3             	div    r11
1096:	48 89 c1             	mov    rcx,rax
1099:	48 89 f0             	mov    rax,rsi
109c:	31 d2                	xor    edx,edx
109e:	48 f7 f1             	div    rcx
10a1:	48 89 c6             	mov    rsi,rax
10a4:	48 89 f8             	mov    rax,rdi
10a7:	48 f7 f1             	div    rcx
10aa:	48 89 f2             	mov    rdx,rsi
10ad:	c3                   	ret
10ae:	66 90                	xchg   ax,ax
10b0:	48 39 f1             	cmp    rcx,rsi
10b3:	77 7b                	ja     1130 <__udivti3+0xc0>
10b5:	48 0f bd c1          	bsr    rax,rcx
10b9:	48 83 f0 3f          	xor    rax,0x3f
10bd:	85 c0                	test   eax,eax
10bf:	41 89 c1             	mov    r9d,eax
10c2:	0f 84 80 00 00 00    	je     1148 <__udivti3+0xd8>
10c8:	89 c1                	mov    ecx,eax
10ca:	53                   	push   rbx
10cb:	bb 40 00 00 00       	mov    ebx,0x40
10d0:	48 d3 e2             	shl    rdx,cl
10d3:	48 63 c8             	movsxd rcx,eax
10d6:	4d 89 da             	mov    r10,r11
10d9:	48 29 cb             	sub    rbx,rcx
10dc:	49 89 f0             	mov    r8,rsi
10df:	89 d9                	mov    ecx,ebx
10e1:	49 d3 ea             	shr    r10,cl
10e4:	89 c1                	mov    ecx,eax
10e6:	49 d3 e3             	shl    r11,cl
10e9:	89 d9                	mov    ecx,ebx
10eb:	49 09 d2             	or     r10,rdx
10ee:	49 d3 e8             	shr    r8,cl
10f1:	89 c1                	mov    ecx,eax
10f3:	48 89 f8             	mov    rax,rdi
10f6:	48 d3 e6             	shl    rsi,cl
10f9:	89 d9                	mov    ecx,ebx
10fb:	4c 89 c2             	mov    rdx,r8
10fe:	48 d3 e8             	shr    rax,cl
1101:	48 09 f0             	or     rax,rsi
1104:	49 f7 f2             	div    r10
1107:	49 89 d0             	mov    r8,rdx
110a:	48 89 c6             	mov    rsi,rax
110d:	49 f7 e3             	mul    r11
1110:	49 39 d0             	cmp    r8,rdx
1113:	72 10                	jb     1125 <__udivti3+0xb5>
1115:	44 89 c9             	mov    ecx,r9d
1118:	48 d3 e7             	shl    rdi,cl
111b:	48 39 c7             	cmp    rdi,rax
111e:	73 48                	jae    1168 <__udivti3+0xf8>
1120:	49 39 d0             	cmp    r8,rdx
1123:	75 43                	jne    1168 <__udivti3+0xf8>
1125:	48 8d 46 ff          	lea    rax,[rsi-0x1]
1129:	31 d2                	xor    edx,edx
112b:	5b                   	pop    rbx
112c:	c3                   	ret
112d:	0f 1f 00             	nop    DWORD PTR [rax]
1130:	31 d2                	xor    edx,edx
1132:	31 c0                	xor    eax,eax
1134:	c3                   	ret
1135:	0f 1f 00             	nop    DWORD PTR [rax]
1138:	48 89 f8             	mov    rax,rdi
113b:	48 89 f2             	mov    rdx,rsi
113e:	49 f7 f3             	div    r11
1141:	31 d2                	xor    edx,edx
1143:	c3                   	ret
1144:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
1148:	48 39 f1             	cmp    rcx,rsi
114b:	72 0d                	jb     115a <__udivti3+0xea>
114d:	31 d2                	xor    edx,edx
114f:	31 c0                	xor    eax,eax
1151:	49 39 fb             	cmp    r11,rdi
1154:	0f 87 53 ff ff ff    	ja     10ad <__udivti3+0x3d>
115a:	31 d2                	xor    edx,edx
115c:	b8 01 00 00 00       	mov    eax,0x1
1161:	c3                   	ret
1162:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
1168:	48 89 f0             	mov    rax,rsi
116b:	31 d2                	xor    edx,edx
116d:	5b                   	pop    rbx
116e:	c3                   	ret
116f:	90                   	nop

0000000000001170 <__libc_csu_init>:
1170:	41 57                	push   r15
1172:	41 56                	push   r14
1174:	49 89 d7             	mov    r15,rdx
1177:	41 55                	push   r13
1179:	41 54                	push   r12
117b:	4c 8d 25 c6 0b 20 00 	lea    r12,[rip+0x200bc6]        # 201d48 <__frame_dummy_init_array_entry>
1182:	55                   	push   rbp
1183:	48 8d 2d c6 0b 20 00 	lea    rbp,[rip+0x200bc6]        # 201d50 <__init_array_end>
118a:	53                   	push   rbx
118b:	41 89 fd             	mov    r13d,edi
118e:	49 89 f6             	mov    r14,rsi
1191:	4c 29 e5             	sub    rbp,r12
1194:	48 83 ec 08          	sub    rsp,0x8
1198:	48 c1 fd 03          	sar    rbp,0x3
119c:	e8 17 f7 ff ff       	call   8b8 <_init>
11a1:	48 85 ed             	test   rbp,rbp
11a4:	74 20                	je     11c6 <__libc_csu_init+0x56>
11a6:	31 db                	xor    ebx,ebx
11a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
11af:	00
11b0:	4c 89 fa             	mov    rdx,r15
11b3:	4c 89 f6             	mov    rsi,r14
11b6:	44 89 ef             	mov    edi,r13d
11b9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
11bd:	48 83 c3 01          	add    rbx,0x1
11c1:	48 39 dd             	cmp    rbp,rbx
11c4:	75 ea                	jne    11b0 <__libc_csu_init+0x40>
11c6:	48 83 c4 08          	add    rsp,0x8
11ca:	5b                   	pop    rbx
11cb:	5d                   	pop    rbp
11cc:	41 5c                	pop    r12
11ce:	41 5d                	pop    r13
11d0:	41 5e                	pop    r14
11d2:	41 5f                	pop    r15
11d4:	c3                   	ret
11d5:	90                   	nop
11d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
11dd:	00 00 00

00000000000011e0 <__libc_csu_fini>:
11e0:	f3 c3                	repz ret

Disassembly of section .fini:

00000000000011e4 <_fini>:
11e4:	48 83 ec 08          	sub    rsp,0x8
11e8:	48 83 c4 08          	add    rsp,0x8
11ec:	c3                   	ret
