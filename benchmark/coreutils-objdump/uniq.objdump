


Disassembly of section .init:

0000000000001718 <_init>:
1718:	48 83 ec 08          	sub    rsp,0x8
171c:	48 8b 05 c5 88 20 00 	mov    rax,QWORD PTR [rip+0x2088c5]        # 209fe8 <__gmon_start__>
1723:	48 85 c0             	test   rax,rax
1726:	74 02                	je     172a <_init+0x12>
1728:	ff d0                	call   rax
172a:	48 83 c4 08          	add    rsp,0x8
172e:	c3                   	ret

Disassembly of section .plt:

0000000000001730 <.plt>:
1730:	ff 35 da 86 20 00    	push   QWORD PTR [rip+0x2086da]        # 209e10 <_GLOBAL_OFFSET_TABLE_+0x8>
1736:	ff 25 dc 86 20 00    	jmp    QWORD PTR [rip+0x2086dc]        # 209e18 <_GLOBAL_OFFSET_TABLE_+0x10>
173c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001740 <__ctype_toupper_loc@plt>:
1740:	ff 25 da 86 20 00    	jmp    QWORD PTR [rip+0x2086da]        # 209e20 <__ctype_toupper_loc@GLIBC_2.3>
1746:	68 00 00 00 00       	push   0x0
174b:	e9 e0 ff ff ff       	jmp    1730 <.plt>

0000000000001750 <__uflow@plt>:
1750:	ff 25 d2 86 20 00    	jmp    QWORD PTR [rip+0x2086d2]        # 209e28 <__uflow@GLIBC_2.2.5>
1756:	68 01 00 00 00       	push   0x1
175b:	e9 d0 ff ff ff       	jmp    1730 <.plt>

0000000000001760 <getenv@plt>:
1760:	ff 25 ca 86 20 00    	jmp    QWORD PTR [rip+0x2086ca]        # 209e30 <getenv@GLIBC_2.2.5>
1766:	68 02 00 00 00       	push   0x2
176b:	e9 c0 ff ff ff       	jmp    1730 <.plt>

0000000000001770 <free@plt>:
1770:	ff 25 c2 86 20 00    	jmp    QWORD PTR [rip+0x2086c2]        # 209e38 <free@GLIBC_2.2.5>
1776:	68 03 00 00 00       	push   0x3
177b:	e9 b0 ff ff ff       	jmp    1730 <.plt>

0000000000001780 <abort@plt>:
1780:	ff 25 ba 86 20 00    	jmp    QWORD PTR [rip+0x2086ba]        # 209e40 <abort@GLIBC_2.2.5>
1786:	68 04 00 00 00       	push   0x4
178b:	e9 a0 ff ff ff       	jmp    1730 <.plt>

0000000000001790 <__errno_location@plt>:
1790:	ff 25 b2 86 20 00    	jmp    QWORD PTR [rip+0x2086b2]        # 209e48 <__errno_location@GLIBC_2.2.5>
1796:	68 05 00 00 00       	push   0x5
179b:	e9 90 ff ff ff       	jmp    1730 <.plt>

00000000000017a0 <strncmp@plt>:
17a0:	ff 25 aa 86 20 00    	jmp    QWORD PTR [rip+0x2086aa]        # 209e50 <strncmp@GLIBC_2.2.5>
17a6:	68 06 00 00 00       	push   0x6
17ab:	e9 80 ff ff ff       	jmp    1730 <.plt>

00000000000017b0 <_exit@plt>:
17b0:	ff 25 a2 86 20 00    	jmp    QWORD PTR [rip+0x2086a2]        # 209e58 <_exit@GLIBC_2.2.5>
17b6:	68 07 00 00 00       	push   0x7
17bb:	e9 70 ff ff ff       	jmp    1730 <.plt>

00000000000017c0 <__fpending@plt>:
17c0:	ff 25 9a 86 20 00    	jmp    QWORD PTR [rip+0x20869a]        # 209e60 <__fpending@GLIBC_2.2.5>
17c6:	68 08 00 00 00       	push   0x8
17cb:	e9 60 ff ff ff       	jmp    1730 <.plt>

00000000000017d0 <textdomain@plt>:
17d0:	ff 25 92 86 20 00    	jmp    QWORD PTR [rip+0x208692]        # 209e68 <textdomain@GLIBC_2.2.5>
17d6:	68 09 00 00 00       	push   0x9
17db:	e9 50 ff ff ff       	jmp    1730 <.plt>

00000000000017e0 <fclose@plt>:
17e0:	ff 25 8a 86 20 00    	jmp    QWORD PTR [rip+0x20868a]        # 209e70 <fclose@GLIBC_2.2.5>
17e6:	68 0a 00 00 00       	push   0xa
17eb:	e9 40 ff ff ff       	jmp    1730 <.plt>

00000000000017f0 <bindtextdomain@plt>:
17f0:	ff 25 82 86 20 00    	jmp    QWORD PTR [rip+0x208682]        # 209e78 <bindtextdomain@GLIBC_2.2.5>
17f6:	68 0b 00 00 00       	push   0xb
17fb:	e9 30 ff ff ff       	jmp    1730 <.plt>

0000000000001800 <dcgettext@plt>:
1800:	ff 25 7a 86 20 00    	jmp    QWORD PTR [rip+0x20867a]        # 209e80 <dcgettext@GLIBC_2.2.5>
1806:	68 0c 00 00 00       	push   0xc
180b:	e9 20 ff ff ff       	jmp    1730 <.plt>

0000000000001810 <__ctype_get_mb_cur_max@plt>:
1810:	ff 25 72 86 20 00    	jmp    QWORD PTR [rip+0x208672]        # 209e88 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
1816:	68 0d 00 00 00       	push   0xd
181b:	e9 10 ff ff ff       	jmp    1730 <.plt>

0000000000001820 <strlen@plt>:
1820:	ff 25 6a 86 20 00    	jmp    QWORD PTR [rip+0x20866a]        # 209e90 <strlen@GLIBC_2.2.5>
1826:	68 0e 00 00 00       	push   0xe
182b:	e9 00 ff ff ff       	jmp    1730 <.plt>

0000000000001830 <__stack_chk_fail@plt>:
1830:	ff 25 62 86 20 00    	jmp    QWORD PTR [rip+0x208662]        # 209e98 <__stack_chk_fail@GLIBC_2.4>
1836:	68 0f 00 00 00       	push   0xf
183b:	e9 f0 fe ff ff       	jmp    1730 <.plt>

0000000000001840 <getopt_long@plt>:
1840:	ff 25 5a 86 20 00    	jmp    QWORD PTR [rip+0x20865a]        # 209ea0 <getopt_long@GLIBC_2.2.5>
1846:	68 10 00 00 00       	push   0x10
184b:	e9 e0 fe ff ff       	jmp    1730 <.plt>

0000000000001850 <mbrtowc@plt>:
1850:	ff 25 52 86 20 00    	jmp    QWORD PTR [rip+0x208652]        # 209ea8 <mbrtowc@GLIBC_2.2.5>
1856:	68 11 00 00 00       	push   0x11
185b:	e9 d0 fe ff ff       	jmp    1730 <.plt>

0000000000001860 <dup2@plt>:
1860:	ff 25 4a 86 20 00    	jmp    QWORD PTR [rip+0x20864a]        # 209eb0 <dup2@GLIBC_2.2.5>
1866:	68 12 00 00 00       	push   0x12
186b:	e9 c0 fe ff ff       	jmp    1730 <.plt>

0000000000001870 <strchr@plt>:
1870:	ff 25 42 86 20 00    	jmp    QWORD PTR [rip+0x208642]        # 209eb8 <strchr@GLIBC_2.2.5>
1876:	68 13 00 00 00       	push   0x13
187b:	e9 b0 fe ff ff       	jmp    1730 <.plt>

0000000000001880 <__overflow@plt>:
1880:	ff 25 3a 86 20 00    	jmp    QWORD PTR [rip+0x20863a]        # 209ec0 <__overflow@GLIBC_2.2.5>
1886:	68 14 00 00 00       	push   0x14
188b:	e9 a0 fe ff ff       	jmp    1730 <.plt>

0000000000001890 <strrchr@plt>:
1890:	ff 25 32 86 20 00    	jmp    QWORD PTR [rip+0x208632]        # 209ec8 <strrchr@GLIBC_2.2.5>
1896:	68 15 00 00 00       	push   0x15
189b:	e9 90 fe ff ff       	jmp    1730 <.plt>

00000000000018a0 <lseek@plt>:
18a0:	ff 25 2a 86 20 00    	jmp    QWORD PTR [rip+0x20862a]        # 209ed0 <lseek@GLIBC_2.2.5>
18a6:	68 16 00 00 00       	push   0x16
18ab:	e9 80 fe ff ff       	jmp    1730 <.plt>

00000000000018b0 <__assert_fail@plt>:
18b0:	ff 25 22 86 20 00    	jmp    QWORD PTR [rip+0x208622]        # 209ed8 <__assert_fail@GLIBC_2.2.5>
18b6:	68 17 00 00 00       	push   0x17
18bb:	e9 70 fe ff ff       	jmp    1730 <.plt>

00000000000018c0 <memset@plt>:
18c0:	ff 25 1a 86 20 00    	jmp    QWORD PTR [rip+0x20861a]        # 209ee0 <memset@GLIBC_2.2.5>
18c6:	68 18 00 00 00       	push   0x18
18cb:	e9 60 fe ff ff       	jmp    1730 <.plt>

00000000000018d0 <freopen@plt>:
18d0:	ff 25 12 86 20 00    	jmp    QWORD PTR [rip+0x208612]        # 209ee8 <freopen@GLIBC_2.2.5>
18d6:	68 19 00 00 00       	push   0x19
18db:	e9 50 fe ff ff       	jmp    1730 <.plt>

00000000000018e0 <close@plt>:
18e0:	ff 25 0a 86 20 00    	jmp    QWORD PTR [rip+0x20860a]        # 209ef0 <close@GLIBC_2.2.5>
18e6:	68 1a 00 00 00       	push   0x1a
18eb:	e9 40 fe ff ff       	jmp    1730 <.plt>

00000000000018f0 <posix_fadvise@plt>:
18f0:	ff 25 02 86 20 00    	jmp    QWORD PTR [rip+0x208602]        # 209ef8 <posix_fadvise@GLIBC_2.2.5>
18f6:	68 1b 00 00 00       	push   0x1b
18fb:	e9 30 fe ff ff       	jmp    1730 <.plt>

0000000000001900 <memcmp@plt>:
1900:	ff 25 fa 85 20 00    	jmp    QWORD PTR [rip+0x2085fa]        # 209f00 <memcmp@GLIBC_2.2.5>
1906:	68 1c 00 00 00       	push   0x1c
190b:	e9 20 fe ff ff       	jmp    1730 <.plt>

0000000000001910 <fputs_unlocked@plt>:
1910:	ff 25 f2 85 20 00    	jmp    QWORD PTR [rip+0x2085f2]        # 209f08 <fputs_unlocked@GLIBC_2.2.5>
1916:	68 1d 00 00 00       	push   0x1d
191b:	e9 10 fe ff ff       	jmp    1730 <.plt>

0000000000001920 <calloc@plt>:
1920:	ff 25 ea 85 20 00    	jmp    QWORD PTR [rip+0x2085ea]        # 209f10 <calloc@GLIBC_2.2.5>
1926:	68 1e 00 00 00       	push   0x1e
192b:	e9 00 fe ff ff       	jmp    1730 <.plt>

0000000000001930 <strcmp@plt>:
1930:	ff 25 e2 85 20 00    	jmp    QWORD PTR [rip+0x2085e2]        # 209f18 <strcmp@GLIBC_2.2.5>
1936:	68 1f 00 00 00       	push   0x1f
193b:	e9 f0 fd ff ff       	jmp    1730 <.plt>

0000000000001940 <strtol@plt>:
1940:	ff 25 da 85 20 00    	jmp    QWORD PTR [rip+0x2085da]        # 209f20 <strtol@GLIBC_2.2.5>
1946:	68 20 00 00 00       	push   0x20
194b:	e9 e0 fd ff ff       	jmp    1730 <.plt>

0000000000001950 <memcpy@plt>:
1950:	ff 25 d2 85 20 00    	jmp    QWORD PTR [rip+0x2085d2]        # 209f28 <memcpy@GLIBC_2.14>
1956:	68 21 00 00 00       	push   0x21
195b:	e9 d0 fd ff ff       	jmp    1730 <.plt>

0000000000001960 <fileno@plt>:
1960:	ff 25 ca 85 20 00    	jmp    QWORD PTR [rip+0x2085ca]        # 209f30 <fileno@GLIBC_2.2.5>
1966:	68 22 00 00 00       	push   0x22
196b:	e9 c0 fd ff ff       	jmp    1730 <.plt>

0000000000001970 <malloc@plt>:
1970:	ff 25 c2 85 20 00    	jmp    QWORD PTR [rip+0x2085c2]        # 209f38 <malloc@GLIBC_2.2.5>
1976:	68 23 00 00 00       	push   0x23
197b:	e9 b0 fd ff ff       	jmp    1730 <.plt>

0000000000001980 <fflush@plt>:
1980:	ff 25 ba 85 20 00    	jmp    QWORD PTR [rip+0x2085ba]        # 209f40 <fflush@GLIBC_2.2.5>
1986:	68 24 00 00 00       	push   0x24
198b:	e9 a0 fd ff ff       	jmp    1730 <.plt>

0000000000001990 <nl_langinfo@plt>:
1990:	ff 25 b2 85 20 00    	jmp    QWORD PTR [rip+0x2085b2]        # 209f48 <nl_langinfo@GLIBC_2.2.5>
1996:	68 25 00 00 00       	push   0x25
199b:	e9 90 fd ff ff       	jmp    1730 <.plt>

00000000000019a0 <strcoll@plt>:
19a0:	ff 25 aa 85 20 00    	jmp    QWORD PTR [rip+0x2085aa]        # 209f50 <strcoll@GLIBC_2.2.5>
19a6:	68 26 00 00 00       	push   0x26
19ab:	e9 80 fd ff ff       	jmp    1730 <.plt>

00000000000019b0 <__freading@plt>:
19b0:	ff 25 a2 85 20 00    	jmp    QWORD PTR [rip+0x2085a2]        # 209f58 <__freading@GLIBC_2.2.5>
19b6:	68 27 00 00 00       	push   0x27
19bb:	e9 70 fd ff ff       	jmp    1730 <.plt>

00000000000019c0 <fwrite_unlocked@plt>:
19c0:	ff 25 9a 85 20 00    	jmp    QWORD PTR [rip+0x20859a]        # 209f60 <fwrite_unlocked@GLIBC_2.2.5>
19c6:	68 28 00 00 00       	push   0x28
19cb:	e9 60 fd ff ff       	jmp    1730 <.plt>

00000000000019d0 <realloc@plt>:
19d0:	ff 25 92 85 20 00    	jmp    QWORD PTR [rip+0x208592]        # 209f68 <realloc@GLIBC_2.2.5>
19d6:	68 29 00 00 00       	push   0x29
19db:	e9 50 fd ff ff       	jmp    1730 <.plt>

00000000000019e0 <setlocale@plt>:
19e0:	ff 25 8a 85 20 00    	jmp    QWORD PTR [rip+0x20858a]        # 209f70 <setlocale@GLIBC_2.2.5>
19e6:	68 2a 00 00 00       	push   0x2a
19eb:	e9 40 fd ff ff       	jmp    1730 <.plt>

00000000000019f0 <__printf_chk@plt>:
19f0:	ff 25 82 85 20 00    	jmp    QWORD PTR [rip+0x208582]        # 209f78 <__printf_chk@GLIBC_2.3.4>
19f6:	68 2b 00 00 00       	push   0x2b
19fb:	e9 30 fd ff ff       	jmp    1730 <.plt>

0000000000001a00 <error@plt>:
1a00:	ff 25 7a 85 20 00    	jmp    QWORD PTR [rip+0x20857a]        # 209f80 <error@GLIBC_2.2.5>
1a06:	68 2c 00 00 00       	push   0x2c
1a0b:	e9 20 fd ff ff       	jmp    1730 <.plt>

0000000000001a10 <open@plt>:
1a10:	ff 25 72 85 20 00    	jmp    QWORD PTR [rip+0x208572]        # 209f88 <open@GLIBC_2.2.5>
1a16:	68 2d 00 00 00       	push   0x2d
1a1b:	e9 10 fd ff ff       	jmp    1730 <.plt>

0000000000001a20 <fseeko@plt>:
1a20:	ff 25 6a 85 20 00    	jmp    QWORD PTR [rip+0x20856a]        # 209f90 <fseeko@GLIBC_2.2.5>
1a26:	68 2e 00 00 00       	push   0x2e
1a2b:	e9 00 fd ff ff       	jmp    1730 <.plt>

0000000000001a30 <strtoul@plt>:
1a30:	ff 25 62 85 20 00    	jmp    QWORD PTR [rip+0x208562]        # 209f98 <strtoul@GLIBC_2.2.5>
1a36:	68 2f 00 00 00       	push   0x2f
1a3b:	e9 f0 fc ff ff       	jmp    1730 <.plt>

0000000000001a40 <__cxa_atexit@plt>:
1a40:	ff 25 5a 85 20 00    	jmp    QWORD PTR [rip+0x20855a]        # 209fa0 <__cxa_atexit@GLIBC_2.2.5>
1a46:	68 30 00 00 00       	push   0x30
1a4b:	e9 e0 fc ff ff       	jmp    1730 <.plt>

0000000000001a50 <exit@plt>:
1a50:	ff 25 52 85 20 00    	jmp    QWORD PTR [rip+0x208552]        # 209fa8 <exit@GLIBC_2.2.5>
1a56:	68 31 00 00 00       	push   0x31
1a5b:	e9 d0 fc ff ff       	jmp    1730 <.plt>

0000000000001a60 <fwrite@plt>:
1a60:	ff 25 4a 85 20 00    	jmp    QWORD PTR [rip+0x20854a]        # 209fb0 <fwrite@GLIBC_2.2.5>
1a66:	68 32 00 00 00       	push   0x32
1a6b:	e9 c0 fc ff ff       	jmp    1730 <.plt>

0000000000001a70 <__fprintf_chk@plt>:
1a70:	ff 25 42 85 20 00    	jmp    QWORD PTR [rip+0x208542]        # 209fb8 <__fprintf_chk@GLIBC_2.3.4>
1a76:	68 33 00 00 00       	push   0x33
1a7b:	e9 b0 fc ff ff       	jmp    1730 <.plt>

0000000000001a80 <mbsinit@plt>:
1a80:	ff 25 3a 85 20 00    	jmp    QWORD PTR [rip+0x20853a]        # 209fc0 <mbsinit@GLIBC_2.2.5>
1a86:	68 34 00 00 00       	push   0x34
1a8b:	e9 a0 fc ff ff       	jmp    1730 <.plt>

0000000000001a90 <iswprint@plt>:
1a90:	ff 25 32 85 20 00    	jmp    QWORD PTR [rip+0x208532]        # 209fc8 <iswprint@GLIBC_2.2.5>
1a96:	68 35 00 00 00       	push   0x35
1a9b:	e9 90 fc ff ff       	jmp    1730 <.plt>

0000000000001aa0 <__ctype_b_loc@plt>:
1aa0:	ff 25 2a 85 20 00    	jmp    QWORD PTR [rip+0x20852a]        # 209fd0 <__ctype_b_loc@GLIBC_2.3>
1aa6:	68 36 00 00 00       	push   0x36
1aab:	e9 80 fc ff ff       	jmp    1730 <.plt>

Disassembly of section .plt.got:

0000000000001ab0 <__cxa_finalize@plt>:
1ab0:	ff 25 42 85 20 00    	jmp    QWORD PTR [rip+0x208542]        # 209ff8 <__cxa_finalize@GLIBC_2.2.5>
1ab6:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000001ac0 <main>:
1ac0:	41 57                	push   r15
1ac2:	41 56                	push   r14
1ac4:	41 89 fe             	mov    r14d,edi
1ac7:	41 55                	push   r13
1ac9:	41 54                	push   r12
1acb:	48 8d 3d 27 4d 00 00 	lea    rdi,[rip+0x4d27]        # 67f9 <_IO_stdin_used+0xb9>
1ad2:	55                   	push   rbp
1ad3:	53                   	push   rbx
1ad4:	49 89 f7             	mov    r15,rsi
1ad7:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
1ade:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
1ae5:	00 00
1ae7:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
1aee:	00
1aef:	31 c0                	xor    eax,eax
1af1:	e8 6a fc ff ff       	call   1760 <getenv@plt>
1af6:	49 8b 3f             	mov    rdi,QWORD PTR [r15]
1af9:	48 85 c0             	test   rax,rax
1afc:	48 8d 05 6f 57 00 00 	lea    rax,[rip+0x576f]        # 7272 <delimit_method_map+0xe2>
1b03:	41 0f 95 c4          	setne  r12b
1b07:	45 31 ed             	xor    r13d,r13d
1b0a:	31 db                	xor    ebx,ebx
1b0c:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
1b13:	00
1b14:	48 89 84 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rax
1b1b:	00
1b1c:	31 ed                	xor    ebp,ebp
1b1e:	e8 dd 1b 00 00       	call   3700 <set_program_name>
1b23:	48 8d 35 77 5c 00 00 	lea    rsi,[rip+0x5c77]        # 77a1 <quoting_style_vals+0x81>
1b2a:	bf 06 00 00 00       	mov    edi,0x6
1b2f:	e8 ac fe ff ff       	call   19e0 <setlocale@plt>
1b34:	48 8d 35 ce 4c 00 00 	lea    rsi,[rip+0x4cce]        # 6809 <_IO_stdin_used+0xc9>
1b3b:	48 8d 3d 8e 4c 00 00 	lea    rdi,[rip+0x4c8e]        # 67d0 <_IO_stdin_used+0x90>
1b42:	e8 a9 fc ff ff       	call   17f0 <bindtextdomain@plt>
1b47:	48 8d 3d 82 4c 00 00 	lea    rdi,[rip+0x4c82]        # 67d0 <_IO_stdin_used+0x90>
1b4e:	e8 7d fc ff ff       	call   17d0 <textdomain@plt>
1b53:	bf 03 00 00 00       	mov    edi,0x3
1b58:	e8 23 19 00 00       	call   3480 <hard_locale>
1b5d:	48 8d 3d 2c 16 00 00 	lea    rdi,[rip+0x162c]        # 3190 <close_stdout>
1b64:	88 05 ae 85 20 00    	mov    BYTE PTR [rip+0x2085ae],al        # 20a118 <hard_LC_COLLATE>
1b6a:	e8 b1 4b 00 00       	call   6720 <atexit>
1b6f:	48 8d 4c 24 60       	lea    rcx,[rsp+0x60]
1b74:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
1b7b:	48 c7 05 82 85 20 00 	mov    QWORD PTR [rip+0x208582],0x0        # 20a108 <skip_chars>
1b82:	00 00 00 00
1b86:	48 c7 05 7f 85 20 00 	mov    QWORD PTR [rip+0x20857f],0x0        # 20a110 <skip_fields>
1b8d:	00 00 00 00
1b91:	48 89 05 68 85 20 00 	mov    QWORD PTR [rip+0x208568],rax        # 20a100 <check_chars>
1b98:	c6 05 5b 85 20 00 01 	mov    BYTE PTR [rip+0x20855b],0x1        # 20a0fa <output_first_repeated>
1b9f:	c6 05 55 85 20 00 01 	mov    BYTE PTR [rip+0x208555],0x1        # 20a0fb <output_unique>
1ba6:	c6 05 4c 85 20 00 00 	mov    BYTE PTR [rip+0x20854c],0x0        # 20a0f9 <output_later_repeated>
1bad:	c7 05 45 85 20 00 01 	mov    DWORD PTR [rip+0x208545],0x1        # 20a0fc <countmode>
1bb4:	00 00 00
1bb7:	c7 05 33 85 20 00 00 	mov    DWORD PTR [rip+0x208533],0x0        # 20a0f4 <delimit_groups>
1bbe:	00 00 00
1bc1:	c6 44 24 27 0a       	mov    BYTE PTR [rsp+0x27],0xa
1bc6:	c7 44 24 08 00 00 00 	mov    DWORD PTR [rsp+0x8],0x0
1bcd:	00
1bce:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
1bd3:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
1bd8:	eb 40                	jmp    1c1a <main+0x15a>
1bda:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
1be0:	45 84 e4             	test   r12b,r12b
1be3:	74 3e                	je     1c23 <main+0x163>
1be5:	8b 05 cd 84 20 00    	mov    eax,DWORD PTR [rip+0x2084cd]        # 20a0b8 <optind@@GLIBC_2.2.5>
1beb:	44 39 f0             	cmp    eax,r14d
1bee:	0f 8d 4f 01 00 00    	jge    1d43 <main+0x283>
1bf4:	48 63 d0             	movsxd rdx,eax
1bf7:	83 fb 02             	cmp    ebx,0x2
1bfa:	49 8b 3c d7          	mov    rdi,QWORD PTR [r15+rdx*8]
1bfe:	0f 84 d8 08 00 00    	je     24dc <main+0xa1c>
1c04:	83 c0 01             	add    eax,0x1
1c07:	89 05 ab 84 20 00    	mov    DWORD PTR [rip+0x2084ab],eax        # 20a0b8 <optind@@GLIBC_2.2.5>
1c0d:	89 d8                	mov    eax,ebx
1c0f:	83 c3 01             	add    ebx,0x1
1c12:	48 89 bc c4 80 00 00 	mov    QWORD PTR [rsp+rax*8+0x80],rdi
1c19:	00
1c1a:	83 fd ff             	cmp    ebp,0xffffffff
1c1d:	74 c6                	je     1be5 <main+0x125>
1c1f:	85 db                	test   ebx,ebx
1c21:	75 bd                	jne    1be0 <main+0x120>
1c23:	48 8d 0d 96 7d 20 00 	lea    rcx,[rip+0x207d96]        # 2099c0 <longopts>
1c2a:	48 8d 15 f0 4b 00 00 	lea    rdx,[rip+0x4bf0]        # 6821 <_IO_stdin_used+0xe1>
1c31:	45 31 c0             	xor    r8d,r8d
1c34:	4c 89 fe             	mov    rsi,r15
1c37:	44 89 f7             	mov    edi,r14d
1c3a:	e8 01 fc ff ff       	call   1840 <getopt_long@plt>
1c3f:	83 f8 ff             	cmp    eax,0xffffffff
1c42:	89 c5                	mov    ebp,eax
1c44:	74 9f                	je     1be5 <main+0x125>
1c46:	83 f8 64             	cmp    eax,0x64
1c49:	0f 84 3a 05 00 00    	je     2189 <main+0x6c9>
1c4f:	7e 4f                	jle    1ca0 <main+0x1e0>
1c51:	83 f8 75             	cmp    eax,0x75
1c54:	0f 84 1d 05 00 00    	je     2177 <main+0x6b7>
1c5a:	0f 8f 80 00 00 00    	jg     1ce0 <main+0x220>
1c60:	83 f8 69             	cmp    eax,0x69
1c63:	0f 84 32 05 00 00    	je     219b <main+0x6db>
1c69:	83 f8 73             	cmp    eax,0x73
1c6c:	0f 84 63 03 00 00    	je     1fd5 <main+0x515>
1c72:	83 f8 66             	cmp    eax,0x66
1c75:	75 56                	jne    1ccd <main+0x20d>
1c77:	48 8b 3d 42 84 20 00 	mov    rdi,QWORD PTR [rip+0x208442]        # 20a0c0 <optarg@@GLIBC_2.2.5>
1c7e:	48 8d 35 db 53 00 00 	lea    rsi,[rip+0x53db]        # 7060 <_IO_stdin_used+0x920>
1c85:	e8 a6 0a 00 00       	call   2730 <size_opt>
1c8a:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
1c91:	00
1c92:	48 89 05 77 84 20 00 	mov    QWORD PTR [rip+0x208477],rax        # 20a110 <skip_fields>
1c99:	eb 84                	jmp    1c1f <main+0x15f>
1c9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
1ca0:	83 f8 39             	cmp    eax,0x39
1ca3:	7f 7b                	jg     1d20 <main+0x260>
1ca5:	83 f8 30             	cmp    eax,0x30
1ca8:	0f 8d f9 04 00 00    	jge    21a7 <main+0x6e7>
1cae:	3d 7e ff ff ff       	cmp    eax,0xffffff7e
1cb3:	0f 84 75 08 00 00    	je     252e <main+0xa6e>
1cb9:	83 f8 01             	cmp    eax,0x1
1cbc:	0f 84 e8 02 00 00    	je     1faa <main+0x4ea>
1cc2:	3d 7d ff ff ff       	cmp    eax,0xffffff7d
1cc7:	0f 84 18 05 00 00    	je     21e5 <main+0x725>
1ccd:	bf 01 00 00 00       	mov    edi,0x1
1cd2:	e8 49 0c 00 00       	call   2920 <usage>
1cd7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
1cde:	00 00
1ce0:	83 f8 7a             	cmp    eax,0x7a
1ce3:	0f 84 3a 05 00 00    	je     2223 <main+0x763>
1ce9:	3d 80 00 00 00       	cmp    eax,0x80
1cee:	0f 84 60 03 00 00    	je     2054 <main+0x594>
1cf4:	83 f8 77             	cmp    eax,0x77
1cf7:	75 d4                	jne    1ccd <main+0x20d>
1cf9:	48 8b 3d c0 83 20 00 	mov    rdi,QWORD PTR [rip+0x2083c0]        # 20a0c0 <optarg@@GLIBC_2.2.5>
1d00:	48 8d 35 a1 53 00 00 	lea    rsi,[rip+0x53a1]        # 70a8 <_IO_stdin_used+0x968>
1d07:	e8 24 0a 00 00       	call   2730 <size_opt>
1d0c:	48 89 05 ed 83 20 00 	mov    QWORD PTR [rip+0x2083ed],rax        # 20a100 <check_chars>
1d13:	e9 07 ff ff ff       	jmp    1c1f <main+0x15f>
1d18:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
1d1f:	00
1d20:	83 f8 44             	cmp    eax,0x44
1d23:	0f 84 cb 02 00 00    	je     1ff4 <main+0x534>
1d29:	83 f8 63             	cmp    eax,0x63
1d2c:	75 9f                	jne    1ccd <main+0x20d>
1d2e:	c7 05 c4 83 20 00 00 	mov    DWORD PTR [rip+0x2083c4],0x0        # 20a0fc <countmode>
1d35:	00 00 00
1d38:	41 bd 01 00 00 00    	mov    r13d,0x1
1d3e:	e9 dc fe ff ff       	jmp    1c1f <main+0x15f>
1d43:	83 3d a6 83 20 00 00 	cmp    DWORD PTR [rip+0x2083a6],0x0        # 20a0f0 <grouping>
1d4a:	0f 84 50 03 00 00    	je     20a0 <main+0x5e0>
1d50:	45 84 ed             	test   r13b,r13b
1d53:	0f 85 dc 07 00 00    	jne    2535 <main+0xa75>
1d59:	83 3d 9c 83 20 00 01 	cmp    DWORD PTR [rip+0x20839c],0x1        # 20a0fc <countmode>
1d60:	ba 05 00 00 00       	mov    edx,0x5
1d65:	48 8d 35 94 53 00 00 	lea    rsi,[rip+0x5394]        # 7100 <_IO_stdin_used+0x9c0>
1d6c:	0f 85 cf 07 00 00    	jne    2541 <main+0xa81>
1d72:	0f be 44 24 27       	movsx  eax,BYTE PTR [rsp+0x27]
1d77:	48 8d 35 f4 54 00 00 	lea    rsi,[rip+0x54f4]        # 7272 <delimit_method_map+0xe2>
1d7e:	48 8b 9c 24 88 00 00 	mov    rbx,QWORD PTR [rsp+0x88]
1d85:	00
1d86:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
1d8a:	48 8b 84 24 80 00 00 	mov    rax,QWORD PTR [rsp+0x80]
1d91:	00
1d92:	48 89 c7             	mov    rdi,rax
1d95:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
1d9a:	e8 91 fb ff ff       	call   1930 <strcmp@plt>
1d9f:	85 c0                	test   eax,eax
1da1:	0f 85 86 04 00 00    	jne    222d <main+0x76d>
1da7:	48 8d 35 c4 54 00 00 	lea    rsi,[rip+0x54c4]        # 7272 <delimit_method_map+0xe2>
1dae:	48 89 df             	mov    rdi,rbx
1db1:	e8 7a fb ff ff       	call   1930 <strcmp@plt>
1db6:	85 c0                	test   eax,eax
1db8:	74 1f                	je     1dd9 <main+0x319>
1dba:	48 8b 15 e7 82 20 00 	mov    rdx,QWORD PTR [rip+0x2082e7]        # 20a0a8 <stdout@@GLIBC_2.2.5>
1dc1:	48 8d 35 bd 4a 00 00 	lea    rsi,[rip+0x4abd]        # 6885 <_IO_stdin_used+0x145>
1dc8:	48 89 df             	mov    rdi,rbx
1dcb:	e8 00 15 00 00       	call   32d0 <freopen_safer>
1dd0:	48 85 c0             	test   rax,rax
1dd3:	0f 84 87 07 00 00    	je     2560 <main+0xaa0>
1dd9:	48 8b 3d d0 82 20 00 	mov    rdi,QWORD PTR [rip+0x2082d0]        # 20a0b0 <stdin@@GLIBC_2.2.5>
1de0:	48 8d 6c 24 40       	lea    rbp,[rsp+0x40]
1de5:	be 02 00 00 00       	mov    esi,0x2
1dea:	4c 8d 6c 24 60       	lea    r13,[rsp+0x60]
1def:	e8 5c 14 00 00       	call   3250 <fadvise>
1df4:	48 89 ef             	mov    rdi,rbp
1df7:	e8 e4 16 00 00       	call   34e0 <initbuffer>
1dfc:	4c 89 ef             	mov    rdi,r13
1dff:	e8 dc 16 00 00       	call   34e0 <initbuffer>
1e04:	80 3d f0 82 20 00 00 	cmp    BYTE PTR [rip+0x2082f0],0x0        # 20a0fb <output_unique>
1e0b:	74 18                	je     1e25 <main+0x365>
1e0d:	0f b6 1d e6 82 20 00 	movzx  ebx,BYTE PTR [rip+0x2082e6]        # 20a0fa <output_first_repeated>
1e14:	84 db                	test   bl,bl
1e16:	74 0d                	je     1e25 <main+0x365>
1e18:	83 3d dd 82 20 00 01 	cmp    DWORD PTR [rip+0x2082dd],0x1        # 20a0fc <countmode>
1e1f:	0f 84 7e 04 00 00    	je     22a3 <main+0x7e3>
1e25:	8b 54 24 18          	mov    edx,DWORD PTR [rsp+0x18]
1e29:	48 8b 35 80 82 20 00 	mov    rsi,QWORD PTR [rip+0x208280]        # 20a0b0 <stdin@@GLIBC_2.2.5>
1e30:	4c 89 ef             	mov    rdi,r13
1e33:	e8 b8 16 00 00       	call   34f0 <readlinebuffer_delim>
1e38:	48 85 c0             	test   rax,rax
1e3b:	0f 84 0d 01 00 00    	je     1f4e <main+0x48e>
1e41:	4c 8b 64 24 70       	mov    r12,QWORD PTR [rsp+0x70]
1e46:	48 8b 5c 24 68       	mov    rbx,QWORD PTR [rsp+0x68]
1e4b:	4c 89 e6             	mov    rsi,r12
1e4e:	48 89 df             	mov    rdi,rbx
1e51:	48 83 eb 01          	sub    rbx,0x1
1e55:	e8 e6 09 00 00       	call   2840 <find_field.isra.2>
1e5a:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
1e5f:	4c 29 e0             	sub    rax,r12
1e62:	c6 44 24 28 01       	mov    BYTE PTR [rsp+0x28],0x1
1e67:	48 29 c3             	sub    rbx,rax
1e6a:	45 31 e4             	xor    r12d,r12d
1e6d:	48 89 5c 24 08       	mov    QWORD PTR [rsp+0x8],rbx
1e72:	48 8b 35 37 82 20 00 	mov    rsi,QWORD PTR [rip+0x208237]        # 20a0b0 <stdin@@GLIBC_2.2.5>
1e79:	f6 06 10             	test   BYTE PTR [rsi],0x10
1e7c:	0f 85 bf 00 00 00    	jne    1f41 <main+0x481>
1e82:	8b 54 24 18          	mov    edx,DWORD PTR [rsp+0x18]
1e86:	48 89 ef             	mov    rdi,rbp
1e89:	e8 62 16 00 00       	call   34f0 <readlinebuffer_delim>
1e8e:	48 85 c0             	test   rax,rax
1e91:	0f 84 dd 04 00 00    	je     2374 <main+0x8b4>
1e97:	48 8b 5d 08          	mov    rbx,QWORD PTR [rbp+0x8]
1e9b:	4c 8b 7d 10          	mov    r15,QWORD PTR [rbp+0x10]
1e9f:	48 89 df             	mov    rdi,rbx
1ea2:	4c 89 fe             	mov    rsi,r15
1ea5:	48 83 eb 01          	sub    rbx,0x1
1ea9:	e8 92 09 00 00       	call   2840 <find_field.isra.2>
1eae:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
1eb3:	49 89 c6             	mov    r14,rax
1eb6:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
1ebb:	4c 29 f8             	sub    rax,r15
1ebe:	4c 89 f7             	mov    rdi,r14
1ec1:	48 29 c3             	sub    rbx,rax
1ec4:	48 89 da             	mov    rdx,rbx
1ec7:	e8 d4 07 00 00       	call   26a0 <different>
1ecc:	89 c2                	mov    edx,eax
1ece:	83 f2 01             	xor    edx,0x1
1ed1:	0f b6 ca             	movzx  ecx,dl
1ed4:	0f b6 d2             	movzx  edx,dl
1ed7:	49 01 d4             	add    r12,rdx
1eda:	49 83 fc ff          	cmp    r12,0xffffffffffffffff
1ede:	0f 84 2c 02 00 00    	je     2110 <main+0x650>
1ee4:	8b 15 0a 82 20 00    	mov    edx,DWORD PTR [rip+0x20820a]        # 20a0f4 <delimit_groups>
1eea:	85 d2                	test   edx,edx
1eec:	0f 84 e0 01 00 00    	je     20d2 <main+0x612>
1ef2:	84 c0                	test   al,al
1ef4:	0f 84 3c 02 00 00    	je     2136 <main+0x676>
1efa:	0f b6 44 24 28       	movzx  eax,BYTE PTR [rsp+0x28]
1eff:	4d 85 e4             	test   r12,r12
1f02:	be 00 00 00 00       	mov    esi,0x0
1f07:	0f 45 c6             	cmovne eax,esi
1f0a:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
1f0e:	4c 89 e2             	mov    rdx,r12
1f11:	89 ce                	mov    esi,ecx
1f13:	4c 89 ef             	mov    rdi,r13
1f16:	e8 a5 08 00 00       	call   27c0 <writeline>
1f1b:	48 8b 35 8e 81 20 00 	mov    rsi,QWORD PTR [rip+0x20818e]        # 20a0b0 <stdin@@GLIBC_2.2.5>
1f22:	45 31 e4             	xor    r12d,r12d
1f25:	48 89 e8             	mov    rax,rbp
1f28:	48 89 5c 24 08       	mov    QWORD PTR [rsp+0x8],rbx
1f2d:	4c 89 ed             	mov    rbp,r13
1f30:	4c 89 74 24 10       	mov    QWORD PTR [rsp+0x10],r14
1f35:	49 89 c5             	mov    r13,rax
1f38:	f6 06 10             	test   BYTE PTR [rsi],0x10
1f3b:	0f 84 41 ff ff ff    	je     1e82 <main+0x3c2>
1f41:	4c 89 e2             	mov    rdx,r12
1f44:	31 f6                	xor    esi,esi
1f46:	4c 89 ef             	mov    rdi,r13
1f49:	e8 72 08 00 00       	call   27c0 <writeline>
1f4e:	48 8b 3d 5b 81 20 00 	mov    rdi,QWORD PTR [rip+0x20815b]        # 20a0b0 <stdin@@GLIBC_2.2.5>
1f55:	f6 07 20             	test   BYTE PTR [rdi],0x20
1f58:	0f 85 26 04 00 00    	jne    2384 <main+0x8c4>
1f5e:	e8 fd 42 00 00       	call   6260 <rpl_fclose>
1f63:	85 c0                	test   eax,eax
1f65:	0f 85 19 04 00 00    	jne    2384 <main+0x8c4>
1f6b:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
1f70:	e8 fb f7 ff ff       	call   1770 <free@plt>
1f75:	48 8b 7c 24 70       	mov    rdi,QWORD PTR [rsp+0x70]
1f7a:	e8 f1 f7 ff ff       	call   1770 <free@plt>
1f7f:	31 c0                	xor    eax,eax
1f81:	48 8b 8c 24 98 00 00 	mov    rcx,QWORD PTR [rsp+0x98]
1f88:	00
1f89:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
1f90:	00 00
1f92:	0f 85 c3 05 00 00    	jne    255b <main+0xa9b>
1f98:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
1f9f:	5b                   	pop    rbx
1fa0:	5d                   	pop    rbp
1fa1:	41 5c                	pop    r12
1fa3:	41 5d                	pop    r13
1fa5:	41 5e                	pop    r14
1fa7:	41 5f                	pop    r15
1fa9:	c3                   	ret
1faa:	48 8b 3d 0f 81 20 00 	mov    rdi,QWORD PTR [rip+0x20810f]        # 20a0c0 <optarg@@GLIBC_2.2.5>
1fb1:	80 3f 2b             	cmp    BYTE PTR [rdi],0x2b
1fb4:	0f 84 92 04 00 00    	je     244c <main+0x98c>
1fba:	83 fb 02             	cmp    ebx,0x2
1fbd:	0f 84 19 05 00 00    	je     24dc <main+0xa1c>
1fc3:	89 d8                	mov    eax,ebx
1fc5:	83 c3 01             	add    ebx,0x1
1fc8:	48 89 bc c4 80 00 00 	mov    QWORD PTR [rsp+rax*8+0x80],rdi
1fcf:	00
1fd0:	e9 4a fc ff ff       	jmp    1c1f <main+0x15f>
1fd5:	48 8b 3d e4 80 20 00 	mov    rdi,QWORD PTR [rip+0x2080e4]        # 20a0c0 <optarg@@GLIBC_2.2.5>
1fdc:	48 8d 35 a5 50 00 00 	lea    rsi,[rip+0x50a5]        # 7088 <_IO_stdin_used+0x948>
1fe3:	e8 48 07 00 00       	call   2730 <size_opt>
1fe8:	48 89 05 19 81 20 00 	mov    QWORD PTR [rip+0x208119],rax        # 20a108 <skip_chars>
1fef:	e9 2b fc ff ff       	jmp    1c1f <main+0x15f>
1ff4:	48 8b 35 c5 80 20 00 	mov    rsi,QWORD PTR [rip+0x2080c5]        # 20a0c0 <optarg@@GLIBC_2.2.5>
1ffb:	c6 05 f9 80 20 00 00 	mov    BYTE PTR [rip+0x2080f9],0x0        # 20a0fb <output_unique>
2002:	c6 05 f0 80 20 00 01 	mov    BYTE PTR [rip+0x2080f0],0x1        # 20a0f9 <output_later_repeated>
2009:	48 85 f6             	test   rsi,rsi
200c:	0f 84 6d 02 00 00    	je     227f <main+0x7bf>
2012:	4c 8b 0d ff 7f 20 00 	mov    r9,QWORD PTR [rip+0x207fff]        # 20a018 <argmatch_die>
2019:	48 8d 15 80 7b 20 00 	lea    rdx,[rip+0x207b80]        # 209ba0 <delimit_method_string>
2020:	48 8d 0d 69 51 00 00 	lea    rcx,[rip+0x5169]        # 7190 <delimit_method_map>
2027:	48 8d 3d 1c 48 00 00 	lea    rdi,[rip+0x481c]        # 684a <_IO_stdin_used+0x10a>
202e:	41 b8 04 00 00 00    	mov    r8d,0x4
2034:	41 bd 01 00 00 00    	mov    r13d,0x1
203a:	e8 71 10 00 00       	call   30b0 <__xargmatch_internal>
203f:	48 8d 15 4a 51 00 00 	lea    rdx,[rip+0x514a]        # 7190 <delimit_method_map>
2046:	8b 04 82             	mov    eax,DWORD PTR [rdx+rax*4]
2049:	89 05 a5 80 20 00    	mov    DWORD PTR [rip+0x2080a5],eax        # 20a0f4 <delimit_groups>
204f:	e9 cb fb ff ff       	jmp    1c1f <main+0x15f>
2054:	48 8b 35 65 80 20 00 	mov    rsi,QWORD PTR [rip+0x208065]        # 20a0c0 <optarg@@GLIBC_2.2.5>
205b:	48 85 f6             	test   rsi,rsi
205e:	0f 84 30 02 00 00    	je     2294 <main+0x7d4>
2064:	4c 8b 0d ad 7f 20 00 	mov    r9,QWORD PTR [rip+0x207fad]        # 20a018 <argmatch_die>
206b:	48 8d 15 ee 7a 20 00 	lea    rdx,[rip+0x207aee]        # 209b60 <grouping_method_string>
2072:	48 8d 0d 07 51 00 00 	lea    rcx,[rip+0x5107]        # 7180 <grouping_method_map>
2079:	48 8d 3d d9 47 00 00 	lea    rdi,[rip+0x47d9]        # 6859 <_IO_stdin_used+0x119>
2080:	41 b8 04 00 00 00    	mov    r8d,0x4
2086:	e8 25 10 00 00       	call   30b0 <__xargmatch_internal>
208b:	48 8d 15 ee 50 00 00 	lea    rdx,[rip+0x50ee]        # 7180 <grouping_method_map>
2092:	8b 04 82             	mov    eax,DWORD PTR [rdx+rax*4]
2095:	89 05 55 80 20 00    	mov    DWORD PTR [rip+0x208055],eax        # 20a0f0 <grouping>
209b:	e9 7f fb ff ff       	jmp    1c1f <main+0x15f>
20a0:	83 3d 55 80 20 00 00 	cmp    DWORD PTR [rip+0x208055],0x0        # 20a0fc <countmode>
20a7:	0f 85 c5 fc ff ff    	jne    1d72 <main+0x2b2>
20ad:	80 3d 45 80 20 00 00 	cmp    BYTE PTR [rip+0x208045],0x0        # 20a0f9 <output_later_repeated>
20b4:	ba 05 00 00 00       	mov    edx,0x5
20b9:	48 8d 35 78 50 00 00 	lea    rsi,[rip+0x5078]        # 7138 <_IO_stdin_used+0x9f8>
20c0:	0f 84 ac fc ff ff    	je     1d72 <main+0x2b2>
20c6:	e9 76 04 00 00       	jmp    2541 <main+0xa81>
20cb:	49 c7 c4 fe ff ff ff 	mov    r12,0xfffffffffffffffe
20d2:	84 c0                	test   al,al
20d4:	0f 85 34 fe ff ff    	jne    1f0e <main+0x44e>
20da:	80 3d 18 80 20 00 00 	cmp    BYTE PTR [rip+0x208018],0x0        # 20a0f9 <output_later_repeated>
20e1:	0f 84 8b fd ff ff    	je     1e72 <main+0x3b2>
20e7:	4c 89 ef             	mov    rdi,r13
20ea:	4c 89 e2             	mov    rdx,r12
20ed:	89 ce                	mov    esi,ecx
20ef:	e8 cc 06 00 00       	call   27c0 <writeline>
20f4:	48 89 e8             	mov    rax,rbp
20f7:	48 89 5c 24 08       	mov    QWORD PTR [rsp+0x8],rbx
20fc:	4c 89 ed             	mov    rbp,r13
20ff:	4c 89 74 24 10       	mov    QWORD PTR [rsp+0x10],r14
2104:	49 89 c5             	mov    r13,rax
2107:	e9 66 fd ff ff       	jmp    1e72 <main+0x3b2>
210c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2110:	8b 15 de 7f 20 00    	mov    edx,DWORD PTR [rip+0x207fde]        # 20a0f4 <delimit_groups>
2116:	85 d2                	test   edx,edx
2118:	74 b1                	je     20cb <main+0x60b>
211a:	84 c0                	test   al,al
211c:	49 c7 c4 fe ff ff ff 	mov    r12,0xfffffffffffffffe
2123:	74 b5                	je     20da <main+0x61a>
2125:	c6 44 24 28 00       	mov    BYTE PTR [rsp+0x28],0x0
212a:	49 c7 c4 fe ff ff ff 	mov    r12,0xfffffffffffffffe
2131:	e9 d8 fd ff ff       	jmp    1f0e <main+0x44e>
2136:	49 83 fc 01          	cmp    r12,0x1
213a:	75 9e                	jne    20da <main+0x61a>
213c:	83 fa 01             	cmp    edx,0x1
213f:	74 0c                	je     214d <main+0x68d>
2141:	83 fa 02             	cmp    edx,0x2
2144:	75 94                	jne    20da <main+0x61a>
2146:	80 7c 24 28 00       	cmp    BYTE PTR [rsp+0x28],0x0
214b:	75 8d                	jne    20da <main+0x61a>
214d:	48 8b 3d 54 7f 20 00 	mov    rdi,QWORD PTR [rip+0x207f54]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2154:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
2158:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
215c:	0f 83 64 03 00 00    	jae    24c6 <main+0xa06>
2162:	0f b6 74 24 27       	movzx  esi,BYTE PTR [rsp+0x27]
2167:	48 8d 50 01          	lea    rdx,[rax+0x1]
216b:	48 89 57 28          	mov    QWORD PTR [rdi+0x28],rdx
216f:	40 88 30             	mov    BYTE PTR [rax],sil
2172:	e9 63 ff ff ff       	jmp    20da <main+0x61a>
2177:	c6 05 7c 7f 20 00 00 	mov    BYTE PTR [rip+0x207f7c],0x0        # 20a0fa <output_first_repeated>
217e:	41 bd 01 00 00 00    	mov    r13d,0x1
2184:	e9 96 fa ff ff       	jmp    1c1f <main+0x15f>
2189:	c6 05 6b 7f 20 00 00 	mov    BYTE PTR [rip+0x207f6b],0x0        # 20a0fb <output_unique>
2190:	41 bd 01 00 00 00    	mov    r13d,0x1
2196:	e9 84 fa ff ff       	jmp    1c1f <main+0x15f>
219b:	c6 05 56 7f 20 00 01 	mov    BYTE PTR [rip+0x207f56],0x1        # 20a0f8 <ignore_case>
21a2:	e9 78 fa ff ff       	jmp    1c1f <main+0x15f>
21a7:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
21ac:	0f 84 3a 02 00 00    	je     23ec <main+0x92c>
21b2:	48 8b 05 57 7f 20 00 	mov    rax,QWORD PTR [rip+0x207f57]        # 20a110 <skip_fields>
21b9:	48 b9 99 99 99 99 99 	movabs rcx,0x1999999999999999
21c0:	99 99 19
21c3:	48 39 c8             	cmp    rax,rcx
21c6:	0f 86 90 01 00 00    	jbe    235c <main+0x89c>
21cc:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
21d1:	c7 44 24 08 01 00 00 	mov    DWORD PTR [rsp+0x8],0x1
21d8:	00
21d9:	48 89 05 30 7f 20 00 	mov    QWORD PTR [rip+0x207f30],rax        # 20a110 <skip_fields>
21e0:	e9 35 fa ff ff       	jmp    1c1a <main+0x15a>
21e5:	48 83 ec 08          	sub    rsp,0x8
21e9:	48 8b 3d b8 7e 20 00 	mov    rdi,QWORD PTR [rip+0x207eb8]        # 20a0a8 <stdout@@GLIBC_2.2.5>
21f0:	48 8b 0d 19 7e 20 00 	mov    rcx,QWORD PTR [rip+0x207e19]        # 20a010 <Version>
21f7:	6a 00                	push   0x0
21f9:	4c 8d 0d 61 46 00 00 	lea    r9,[rip+0x4661]        # 6861 <_IO_stdin_used+0x121>
2200:	4c 8d 05 6a 46 00 00 	lea    r8,[rip+0x466a]        # 6871 <_IO_stdin_used+0x131>
2207:	48 8d 15 be 45 00 00 	lea    rdx,[rip+0x45be]        # 67cc <_IO_stdin_used+0x8c>
220e:	48 8d 35 3c 45 00 00 	lea    rsi,[rip+0x453c]        # 6751 <_IO_stdin_used+0x11>
2215:	31 c0                	xor    eax,eax
2217:	e8 d4 36 00 00       	call   58f0 <version_etc>
221c:	31 ff                	xor    edi,edi
221e:	e8 2d f8 ff ff       	call   1a50 <exit@plt>
2223:	c6 44 24 27 00       	mov    BYTE PTR [rsp+0x27],0x0
2228:	e9 f2 f9 ff ff       	jmp    1c1f <main+0x15f>
222d:	48 8b 15 7c 7e 20 00 	mov    rdx,QWORD PTR [rip+0x207e7c]        # 20a0b0 <stdin@@GLIBC_2.2.5>
2234:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
2239:	48 8d 35 c5 4f 00 00 	lea    rsi,[rip+0x4fc5]        # 7205 <delimit_method_map+0x75>
2240:	e8 8b 10 00 00       	call   32d0 <freopen_safer>
2245:	48 85 c0             	test   rax,rax
2248:	0f 85 59 fb ff ff    	jne    1da7 <main+0x2e7>
224e:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
2253:	be 03 00 00 00       	mov    esi,0x3
2258:	31 ff                	xor    edi,edi
225a:	e8 e1 2f 00 00       	call   5240 <quotearg_n_style_colon>
225f:	48 89 c3             	mov    rbx,rax
2262:	e8 29 f5 ff ff       	call   1790 <__errno_location@plt>
2267:	8b 30                	mov    esi,DWORD PTR [rax]
2269:	48 8d 15 88 4f 00 00 	lea    rdx,[rip+0x4f88]        # 71f8 <delimit_method_map+0x68>
2270:	48 89 d9             	mov    rcx,rbx
2273:	bf 01 00 00 00       	mov    edi,0x1
2278:	31 c0                	xor    eax,eax
227a:	e8 81 f7 ff ff       	call   1a00 <error@plt>
227f:	c7 05 6b 7e 20 00 00 	mov    DWORD PTR [rip+0x207e6b],0x0        # 20a0f4 <delimit_groups>
2286:	00 00 00
2289:	41 bd 01 00 00 00    	mov    r13d,0x1
228f:	e9 8b f9 ff ff       	jmp    1c1f <main+0x15f>
2294:	c7 05 52 7e 20 00 03 	mov    DWORD PTR [rip+0x207e52],0x3        # 20a0f0 <grouping>
229b:	00 00 00
229e:	e9 7c f9 ff ff       	jmp    1c1f <main+0x15f>
22a3:	c6 44 24 08 00       	mov    BYTE PTR [rsp+0x8],0x0
22a8:	48 8b 35 01 7e 20 00 	mov    rsi,QWORD PTR [rip+0x207e01]        # 20a0b0 <stdin@@GLIBC_2.2.5>
22af:	f6 06 10             	test   BYTE PTR [rsi],0x10
22b2:	0f 85 4e 01 00 00    	jne    2406 <main+0x946>
22b8:	8b 54 24 18          	mov    edx,DWORD PTR [rsp+0x18]
22bc:	48 89 ef             	mov    rdi,rbp
22bf:	e8 2c 12 00 00       	call   34f0 <readlinebuffer_delim>
22c4:	48 85 c0             	test   rax,rax
22c7:	0f 84 39 01 00 00    	je     2406 <main+0x946>
22cd:	4c 8b 65 08          	mov    r12,QWORD PTR [rbp+0x8]
22d1:	4c 8b 7d 10          	mov    r15,QWORD PTR [rbp+0x10]
22d5:	4c 89 e7             	mov    rdi,r12
22d8:	4c 89 fe             	mov    rsi,r15
22db:	49 83 ec 01          	sub    r12,0x1
22df:	e8 5c 05 00 00       	call   2840 <find_field.isra.2>
22e4:	49 89 c6             	mov    r14,rax
22e7:	4c 29 f8             	sub    rax,r15
22ea:	49 29 c4             	sub    r12,rax
22ed:	49 83 7d 08 00       	cmp    QWORD PTR [r13+0x8],0x0
22f2:	0f 85 c5 00 00 00    	jne    23bd <main+0x8fd>
22f8:	8b 05 f2 7d 20 00    	mov    eax,DWORD PTR [rip+0x207df2]        # 20a0f0 <grouping>
22fe:	85 c0                	test   eax,eax
2300:	74 25                	je     2327 <main+0x867>
2302:	83 f8 01             	cmp    eax,0x1
2305:	0f 84 5e 01 00 00    	je     2469 <main+0x9a9>
230b:	83 f8 04             	cmp    eax,0x4
230e:	0f 84 55 01 00 00    	je     2469 <main+0x9a9>
2314:	80 7c 24 08 00       	cmp    BYTE PTR [rsp+0x8],0x0
2319:	74 0c                	je     2327 <main+0x867>
231b:	83 e8 02             	sub    eax,0x2
231e:	83 f8 01             	cmp    eax,0x1
2321:	0f 86 42 01 00 00    	jbe    2469 <main+0x9a9>
2327:	48 8b 55 08          	mov    rdx,QWORD PTR [rbp+0x8]
232b:	48 8b 7d 10          	mov    rdi,QWORD PTR [rbp+0x10]
232f:	be 01 00 00 00       	mov    esi,0x1
2334:	48 8b 0d 6d 7d 20 00 	mov    rcx,QWORD PTR [rip+0x207d6d]        # 20a0a8 <stdout@@GLIBC_2.2.5>
233b:	e8 80 f6 ff ff       	call   19c0 <fwrite_unlocked@plt>
2340:	48 89 e8             	mov    rax,rbp
2343:	88 5c 24 08          	mov    BYTE PTR [rsp+0x8],bl
2347:	4c 89 ed             	mov    rbp,r13
234a:	4c 89 64 24 38       	mov    QWORD PTR [rsp+0x38],r12
234f:	4c 89 74 24 28       	mov    QWORD PTR [rsp+0x28],r14
2354:	49 89 c5             	mov    r13,rax
2357:	e9 4c ff ff ff       	jmp    22a8 <main+0x7e8>
235c:	48 6b d0 0a          	imul   rdx,rax,0xa
2360:	8d 4d d0             	lea    ecx,[rbp-0x30]
2363:	48 63 c9             	movsxd rcx,ecx
2366:	48 01 ca             	add    rdx,rcx
2369:	48 39 d0             	cmp    rax,rdx
236c:	0f 87 5a fe ff ff    	ja     21cc <main+0x70c>
2372:	eb 7e                	jmp    23f2 <main+0x932>
2374:	48 8b 05 35 7d 20 00 	mov    rax,QWORD PTR [rip+0x207d35]        # 20a0b0 <stdin@@GLIBC_2.2.5>
237b:	f6 00 20             	test   BYTE PTR [rax],0x20
237e:	0f 84 bd fb ff ff    	je     1f41 <main+0x481>
2384:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
2389:	bf 04 00 00 00       	mov    edi,0x4
238e:	e8 ad 2d 00 00       	call   5140 <quotearg_style>
2393:	48 8d 35 ed 44 00 00 	lea    rsi,[rip+0x44ed]        # 6887 <_IO_stdin_used+0x147>
239a:	48 89 c3             	mov    rbx,rax
239d:	ba 05 00 00 00       	mov    edx,0x5
23a2:	31 ff                	xor    edi,edi
23a4:	e8 57 f4 ff ff       	call   1800 <dcgettext@plt>
23a9:	48 89 d9             	mov    rcx,rbx
23ac:	48 89 c2             	mov    rdx,rax
23af:	31 f6                	xor    esi,esi
23b1:	bf 01 00 00 00       	mov    edi,0x1
23b6:	31 c0                	xor    eax,eax
23b8:	e8 43 f6 ff ff       	call   1a00 <error@plt>
23bd:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
23c2:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
23c7:	4c 89 e2             	mov    rdx,r12
23ca:	4c 89 f7             	mov    rdi,r14
23cd:	e8 ce 02 00 00       	call   26a0 <different>
23d2:	84 c0                	test   al,al
23d4:	0f 85 1e ff ff ff    	jne    22f8 <main+0x838>
23da:	83 3d 0f 7d 20 00 00 	cmp    DWORD PTR [rip+0x207d0f],0x0        # 20a0f0 <grouping>
23e1:	0f 84 c1 fe ff ff    	je     22a8 <main+0x7e8>
23e7:	e9 3b ff ff ff       	jmp    2327 <main+0x867>
23ec:	8d 50 d0             	lea    edx,[rax-0x30]
23ef:	48 63 d2             	movsxd rdx,edx
23f2:	48 89 15 17 7d 20 00 	mov    QWORD PTR [rip+0x207d17],rdx        # 20a110 <skip_fields>
23f9:	c7 44 24 08 01 00 00 	mov    DWORD PTR [rsp+0x8],0x1
2400:	00
2401:	e9 14 f8 ff ff       	jmp    1c1a <main+0x15a>
2406:	8b 05 e4 7c 20 00    	mov    eax,DWORD PTR [rip+0x207ce4]        # 20a0f0 <grouping>
240c:	83 e8 02             	sub    eax,0x2
240f:	83 e0 fd             	and    eax,0xfffffffd
2412:	0f 85 36 fb ff ff    	jne    1f4e <main+0x48e>
2418:	80 7c 24 08 00       	cmp    BYTE PTR [rsp+0x8],0x0
241d:	0f 84 2b fb ff ff    	je     1f4e <main+0x48e>
2423:	48 8b 3d 7e 7c 20 00 	mov    rdi,QWORD PTR [rip+0x207c7e]        # 20a0a8 <stdout@@GLIBC_2.2.5>
242a:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
242e:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
2432:	0f 83 e8 00 00 00    	jae    2520 <main+0xa60>
2438:	0f b6 4c 24 27       	movzx  ecx,BYTE PTR [rsp+0x27]
243d:	48 8d 50 01          	lea    rdx,[rax+0x1]
2441:	48 89 57 28          	mov    QWORD PTR [rdi+0x28],rdx
2445:	88 08                	mov    BYTE PTR [rax],cl
2447:	e9 02 fb ff ff       	jmp    1f4e <main+0x48e>
244c:	e8 1f 12 00 00       	call   3670 <posix2_version>
2451:	2d b0 0d 03 00       	sub    eax,0x30db0
2456:	3d b8 02 00 00       	cmp    eax,0x2b8
245b:	77 35                	ja     2492 <main+0x9d2>
245d:	48 8b 3d 5c 7c 20 00 	mov    rdi,QWORD PTR [rip+0x207c5c]        # 20a0c0 <optarg@@GLIBC_2.2.5>
2464:	e9 51 fb ff ff       	jmp    1fba <main+0x4fa>
2469:	48 8b 3d 38 7c 20 00 	mov    rdi,QWORD PTR [rip+0x207c38]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2470:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
2474:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
2478:	0f 83 94 00 00 00    	jae    2512 <main+0xa52>
247e:	0f b6 4c 24 27       	movzx  ecx,BYTE PTR [rsp+0x27]
2483:	48 8d 50 01          	lea    rdx,[rax+0x1]
2487:	48 89 57 28          	mov    QWORD PTR [rdi+0x28],rdx
248b:	88 08                	mov    BYTE PTR [rax],cl
248d:	e9 95 fe ff ff       	jmp    2327 <main+0x867>
2492:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
2497:	48 8b 3d 22 7c 20 00 	mov    rdi,QWORD PTR [rip+0x207c22]        # 20a0c0 <optarg@@GLIBC_2.2.5>
249e:	4c 8d 05 fc 52 00 00 	lea    r8,[rip+0x52fc]        # 77a1 <quoting_style_vals+0x81>
24a5:	31 f6                	xor    esi,esi
24a7:	ba 0a 00 00 00       	mov    edx,0xa
24ac:	e8 8f 39 00 00       	call   5e40 <xstrtoul>
24b1:	85 c0                	test   eax,eax
24b3:	75 a8                	jne    245d <main+0x99d>
24b5:	48 8b 44 24 60       	mov    rax,QWORD PTR [rsp+0x60]
24ba:	48 89 05 47 7c 20 00 	mov    QWORD PTR [rip+0x207c47],rax        # 20a108 <skip_chars>
24c1:	e9 59 f7 ff ff       	jmp    1c1f <main+0x15f>
24c6:	8b 74 24 18          	mov    esi,DWORD PTR [rsp+0x18]
24ca:	89 4c 24 38          	mov    DWORD PTR [rsp+0x38],ecx
24ce:	e8 ad f3 ff ff       	call   1880 <__overflow@plt>
24d3:	8b 4c 24 38          	mov    ecx,DWORD PTR [rsp+0x38]
24d7:	e9 fe fb ff ff       	jmp    20da <main+0x61a>
24dc:	e8 2f 2f 00 00       	call   5410 <quote>
24e1:	48 8d 35 51 43 00 00 	lea    rsi,[rip+0x4351]        # 6839 <_IO_stdin_used+0xf9>
24e8:	48 89 c3             	mov    rbx,rax
24eb:	ba 05 00 00 00       	mov    edx,0x5
24f0:	31 ff                	xor    edi,edi
24f2:	e8 09 f3 ff ff       	call   1800 <dcgettext@plt>
24f7:	31 ff                	xor    edi,edi
24f9:	48 89 c2             	mov    rdx,rax
24fc:	48 89 d9             	mov    rcx,rbx
24ff:	31 f6                	xor    esi,esi
2501:	31 c0                	xor    eax,eax
2503:	e8 f8 f4 ff ff       	call   1a00 <error@plt>
2508:	bf 01 00 00 00       	mov    edi,0x1
250d:	e8 0e 04 00 00       	call   2920 <usage>
2512:	8b 74 24 18          	mov    esi,DWORD PTR [rsp+0x18]
2516:	e8 65 f3 ff ff       	call   1880 <__overflow@plt>
251b:	e9 07 fe ff ff       	jmp    2327 <main+0x867>
2520:	8b 74 24 18          	mov    esi,DWORD PTR [rsp+0x18]
2524:	e8 57 f3 ff ff       	call   1880 <__overflow@plt>
2529:	e9 20 fa ff ff       	jmp    1f4e <main+0x48e>
252e:	31 ff                	xor    edi,edi
2530:	e8 eb 03 00 00       	call   2920 <usage>
2535:	48 8d 35 94 4b 00 00 	lea    rsi,[rip+0x4b94]        # 70d0 <_IO_stdin_used+0x990>
253c:	ba 05 00 00 00       	mov    edx,0x5
2541:	31 ff                	xor    edi,edi
2543:	e8 b8 f2 ff ff       	call   1800 <dcgettext@plt>
2548:	31 f6                	xor    esi,esi
254a:	48 89 c2             	mov    rdx,rax
254d:	31 ff                	xor    edi,edi
254f:	31 c0                	xor    eax,eax
2551:	e8 aa f4 ff ff       	call   1a00 <error@plt>
2556:	e9 72 f7 ff ff       	jmp    1ccd <main+0x20d>
255b:	e8 d0 f2 ff ff       	call   1830 <__stack_chk_fail@plt>
2560:	48 89 da             	mov    rdx,rbx
2563:	be 03 00 00 00       	mov    esi,0x3
2568:	31 ff                	xor    edi,edi
256a:	e8 d1 2c 00 00       	call   5240 <quotearg_n_style_colon>
256f:	48 89 c3             	mov    rbx,rax
2572:	e8 19 f2 ff ff       	call   1790 <__errno_location@plt>
2577:	8b 30                	mov    esi,DWORD PTR [rax]
2579:	48 8d 15 78 4c 00 00 	lea    rdx,[rip+0x4c78]        # 71f8 <delimit_method_map+0x68>
2580:	48 89 d9             	mov    rcx,rbx
2583:	bf 01 00 00 00       	mov    edi,0x1
2588:	31 c0                	xor    eax,eax
258a:	e8 71 f4 ff ff       	call   1a00 <error@plt>
258f:	90                   	nop

0000000000002590 <_start>:
2590:	31 ed                	xor    ebp,ebp
2592:	49 89 d1             	mov    r9,rdx
2595:	5e                   	pop    rsi
2596:	48 89 e2             	mov    rdx,rsp
2599:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
259d:	50                   	push   rax
259e:	54                   	push   rsp
259f:	4c 8d 05 6a 41 00 00 	lea    r8,[rip+0x416a]        # 6710 <__libc_csu_fini>
25a6:	48 8d 0d f3 40 00 00 	lea    rcx,[rip+0x40f3]        # 66a0 <__libc_csu_init>
25ad:	48 8d 3d 0c f5 ff ff 	lea    rdi,[rip+0xfffffffffffff50c]        # 1ac0 <main>
25b4:	ff 15 26 7a 20 00    	call   QWORD PTR [rip+0x207a26]        # 209fe0 <__libc_start_main@GLIBC_2.2.5>
25ba:	f4                   	hlt
25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <deregister_tm_clones>:
25c0:	48 8d 3d d9 7a 20 00 	lea    rdi,[rip+0x207ad9]        # 20a0a0 <__progname@@GLIBC_2.2.5>
25c7:	55                   	push   rbp
25c8:	48 8d 05 d1 7a 20 00 	lea    rax,[rip+0x207ad1]        # 20a0a0 <__progname@@GLIBC_2.2.5>
25cf:	48 39 f8             	cmp    rax,rdi
25d2:	48 89 e5             	mov    rbp,rsp
25d5:	74 19                	je     25f0 <deregister_tm_clones+0x30>
25d7:	48 8b 05 fa 79 20 00 	mov    rax,QWORD PTR [rip+0x2079fa]        # 209fd8 <_ITM_deregisterTMCloneTable>
25de:	48 85 c0             	test   rax,rax
25e1:	74 0d                	je     25f0 <deregister_tm_clones+0x30>
25e3:	5d                   	pop    rbp
25e4:	ff e0                	jmp    rax
25e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
25ed:	00 00 00
25f0:	5d                   	pop    rbp
25f1:	c3                   	ret
25f2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
25f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
25fd:	00 00 00

0000000000002600 <register_tm_clones>:
2600:	48 8d 3d 99 7a 20 00 	lea    rdi,[rip+0x207a99]        # 20a0a0 <__progname@@GLIBC_2.2.5>
2607:	48 8d 35 92 7a 20 00 	lea    rsi,[rip+0x207a92]        # 20a0a0 <__progname@@GLIBC_2.2.5>
260e:	55                   	push   rbp
260f:	48 29 fe             	sub    rsi,rdi
2612:	48 89 e5             	mov    rbp,rsp
2615:	48 c1 fe 03          	sar    rsi,0x3
2619:	48 89 f0             	mov    rax,rsi
261c:	48 c1 e8 3f          	shr    rax,0x3f
2620:	48 01 c6             	add    rsi,rax
2623:	48 d1 fe             	sar    rsi,1
2626:	74 18                	je     2640 <register_tm_clones+0x40>
2628:	48 8b 05 c1 79 20 00 	mov    rax,QWORD PTR [rip+0x2079c1]        # 209ff0 <_ITM_registerTMCloneTable>
262f:	48 85 c0             	test   rax,rax
2632:	74 0c                	je     2640 <register_tm_clones+0x40>
2634:	5d                   	pop    rbp
2635:	ff e0                	jmp    rax
2637:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
263e:	00 00
2640:	5d                   	pop    rbp
2641:	c3                   	ret
2642:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2646:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
264d:	00 00 00

0000000000002650 <__do_global_dtors_aux>:
2650:	80 3d 91 7a 20 00 00 	cmp    BYTE PTR [rip+0x207a91],0x0        # 20a0e8 <completed.7697>
2657:	75 2f                	jne    2688 <__do_global_dtors_aux+0x38>
2659:	48 83 3d 97 79 20 00 	cmp    QWORD PTR [rip+0x207997],0x0        # 209ff8 <__cxa_finalize@GLIBC_2.2.5>
2660:	00
2661:	55                   	push   rbp
2662:	48 89 e5             	mov    rbp,rsp
2665:	74 0c                	je     2673 <__do_global_dtors_aux+0x23>
2667:	48 8b 3d 9a 79 20 00 	mov    rdi,QWORD PTR [rip+0x20799a]        # 20a008 <__dso_handle>
266e:	e8 3d f4 ff ff       	call   1ab0 <__cxa_finalize@plt>
2673:	e8 48 ff ff ff       	call   25c0 <deregister_tm_clones>
2678:	c6 05 69 7a 20 00 01 	mov    BYTE PTR [rip+0x207a69],0x1        # 20a0e8 <completed.7697>
267f:	5d                   	pop    rbp
2680:	c3                   	ret
2681:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2688:	f3 c3                	repz ret
268a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002690 <frame_dummy>:
2690:	55                   	push   rbp
2691:	48 89 e5             	mov    rbp,rsp
2694:	5d                   	pop    rbp
2695:	e9 66 ff ff ff       	jmp    2600 <register_tm_clones>
269a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000026a0 <different>:
26a0:	48 83 ec 08          	sub    rsp,0x8
26a4:	48 8b 05 55 7a 20 00 	mov    rax,QWORD PTR [rip+0x207a55]        # 20a100 <check_chars>
26ab:	48 39 d0             	cmp    rax,rdx
26ae:	48 0f 46 d0          	cmovbe rdx,rax
26b2:	48 39 c8             	cmp    rax,rcx
26b5:	48 0f 46 c8          	cmovbe rcx,rax
26b9:	0f b6 05 38 7a 20 00 	movzx  eax,BYTE PTR [rip+0x207a38]        # 20a0f8 <ignore_case>
26c0:	49 89 d0             	mov    r8,rdx
26c3:	84 c0                	test   al,al
26c5:	74 11                	je     26d8 <different+0x38>
26c7:	48 39 ca             	cmp    rdx,rcx
26ca:	74 34                	je     2700 <different+0x60>
26cc:	48 83 c4 08          	add    rsp,0x8
26d0:	c3                   	ret
26d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
26d8:	80 3d 39 7a 20 00 00 	cmp    BYTE PTR [rip+0x207a39],0x0        # 20a118 <hard_LC_COLLATE>
26df:	75 2f                	jne    2710 <different+0x70>
26e1:	48 39 ca             	cmp    rdx,rcx
26e4:	b8 01 00 00 00       	mov    eax,0x1
26e9:	75 e1                	jne    26cc <different+0x2c>
26eb:	e8 10 f2 ff ff       	call   1900 <memcmp@plt>
26f0:	85 c0                	test   eax,eax
26f2:	0f 95 c0             	setne  al
26f5:	48 83 c4 08          	add    rsp,0x8
26f9:	c3                   	ret
26fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2700:	e8 1b 0f 00 00       	call   3620 <memcasecmp>
2705:	85 c0                	test   eax,eax
2707:	0f 95 c0             	setne  al
270a:	48 83 c4 08          	add    rsp,0x8
270e:	c3                   	ret
270f:	90                   	nop
2710:	48 89 f2             	mov    rdx,rsi
2713:	4c 89 c6             	mov    rsi,r8
2716:	e8 85 36 00 00       	call   5da0 <xmemcoll>
271b:	85 c0                	test   eax,eax
271d:	0f 95 c0             	setne  al
2720:	48 83 c4 08          	add    rsp,0x8
2724:	c3                   	ret
2725:	90                   	nop
2726:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
272d:	00 00 00

0000000000002730 <size_opt>:
2730:	55                   	push   rbp
2731:	53                   	push   rbx
2732:	4c 8d 05 68 50 00 00 	lea    r8,[rip+0x5068]        # 77a1 <quoting_style_vals+0x81>
2739:	48 89 f5             	mov    rbp,rsi
273c:	ba 0a 00 00 00       	mov    edx,0xa
2741:	31 f6                	xor    esi,esi
2743:	48 83 ec 18          	sub    rsp,0x18
2747:	48 89 fb             	mov    rbx,rdi
274a:	48 89 e1             	mov    rcx,rsp
274d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2754:	00 00
2756:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
275b:	31 c0                	xor    eax,eax
275d:	e8 de 36 00 00       	call   5e40 <xstrtoul>
2762:	83 f8 01             	cmp    eax,0x1
2765:	77 1b                	ja     2782 <size_opt+0x52>
2767:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
276c:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
2773:	00 00
2775:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
2779:	75 31                	jne    27ac <size_opt+0x7c>
277b:	48 83 c4 18          	add    rsp,0x18
277f:	5b                   	pop    rbx
2780:	5d                   	pop    rbp
2781:	c3                   	ret
2782:	ba 05 00 00 00       	mov    edx,0x5
2787:	48 89 ee             	mov    rsi,rbp
278a:	31 ff                	xor    edi,edi
278c:	e8 6f f0 ff ff       	call   1800 <dcgettext@plt>
2791:	48 8d 15 ac 3f 00 00 	lea    rdx,[rip+0x3fac]        # 6744 <_IO_stdin_used+0x4>
2798:	49 89 c0             	mov    r8,rax
279b:	48 89 d9             	mov    rcx,rbx
279e:	31 f6                	xor    esi,esi
27a0:	bf 01 00 00 00       	mov    edi,0x1
27a5:	31 c0                	xor    eax,eax
27a7:	e8 54 f2 ff ff       	call   1a00 <error@plt>
27ac:	e8 7f f0 ff ff       	call   1830 <__stack_chk_fail@plt>
27b1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
27b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
27bd:	00 00 00

00000000000027c0 <writeline>:
27c0:	48 85 d2             	test   rdx,rdx
27c3:	75 3b                	jne    2800 <writeline+0x40>
27c5:	0f b6 05 2f 79 20 00 	movzx  eax,BYTE PTR [rip+0x20792f]        # 20a0fb <output_unique>
27cc:	83 f0 01             	xor    eax,0x1
27cf:	84 c0                	test   al,al
27d1:	75 40                	jne    2813 <writeline+0x53>
27d3:	8b 0d 23 79 20 00    	mov    ecx,DWORD PTR [rip+0x207923]        # 20a0fc <countmode>
27d9:	53                   	push   rbx
27da:	48 89 fb             	mov    rbx,rdi
27dd:	85 c9                	test   ecx,ecx
27df:	74 47                	je     2828 <writeline+0x68>
27e1:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
27e5:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
27e9:	be 01 00 00 00       	mov    esi,0x1
27ee:	5b                   	pop    rbx
27ef:	48 8b 0d b2 78 20 00 	mov    rcx,QWORD PTR [rip+0x2078b2]        # 20a0a8 <stdout@@GLIBC_2.2.5>
27f6:	e9 c5 f1 ff ff       	jmp    19c0 <fwrite_unlocked@plt>
27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2800:	40 84 f6             	test   sil,sil
2803:	75 13                	jne    2818 <writeline+0x58>
2805:	0f b6 05 ee 78 20 00 	movzx  eax,BYTE PTR [rip+0x2078ee]        # 20a0fa <output_first_repeated>
280c:	83 f0 01             	xor    eax,0x1
280f:	84 c0                	test   al,al
2811:	74 c0                	je     27d3 <writeline+0x13>
2813:	f3 c3                	repz ret
2815:	0f 1f 00             	nop    DWORD PTR [rax]
2818:	0f b6 05 da 78 20 00 	movzx  eax,BYTE PTR [rip+0x2078da]        # 20a0f9 <output_later_repeated>
281f:	83 f0 01             	xor    eax,0x1
2822:	eb ab                	jmp    27cf <writeline+0xf>
2824:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2828:	48 8d 35 1c 3f 00 00 	lea    rsi,[rip+0x3f1c]        # 674b <_IO_stdin_used+0xb>
282f:	48 83 c2 01          	add    rdx,0x1
2833:	bf 01 00 00 00       	mov    edi,0x1
2838:	e8 b3 f1 ff ff       	call   19f0 <__printf_chk@plt>
283d:	eb a2                	jmp    27e1 <writeline+0x21>
283f:	90                   	nop

0000000000002840 <find_field.isra.2>:
2840:	41 56                	push   r14
2842:	41 55                	push   r13
2844:	49 89 f6             	mov    r14,rsi
2847:	4c 8b 2d c2 78 20 00 	mov    r13,QWORD PTR [rip+0x2078c2]        # 20a110 <skip_fields>
284e:	41 54                	push   r12
2850:	55                   	push   rbp
2851:	48 8d 6f ff          	lea    rbp,[rdi-0x1]
2855:	53                   	push   rbx
2856:	4d 85 ed             	test   r13,r13
2859:	0f 84 b0 00 00 00    	je     290f <find_field.isra.2+0xcf>
285f:	48 85 ed             	test   rbp,rbp
2862:	0f 84 a7 00 00 00    	je     290f <find_field.isra.2+0xcf>
2868:	45 31 e4             	xor    r12d,r12d
286b:	31 db                	xor    ebx,ebx
286d:	0f 1f 00             	nop    DWORD PTR [rax]
2870:	e8 2b f2 ff ff       	call   1aa0 <__ctype_b_loc@plt>
2875:	48 8b 38             	mov    rdi,QWORD PTR [rax]
2878:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
287f:	00
2880:	41 0f b6 0c 1e       	movzx  ecx,BYTE PTR [r14+rbx*1]
2885:	48 89 ca             	mov    rdx,rcx
2888:	0f b7 0c 4f          	movzx  ecx,WORD PTR [rdi+rcx*2]
288c:	80 fa 0a             	cmp    dl,0xa
288f:	74 6f                	je     2900 <find_field.isra.2+0xc0>
2891:	f6 c1 01             	test   cl,0x1
2894:	75 6a                	jne    2900 <find_field.isra.2+0xc0>
2896:	48 39 dd             	cmp    rbp,rbx
2899:	77 1f                	ja     28ba <find_field.isra.2+0x7a>
289b:	eb 3b                	jmp    28d8 <find_field.isra.2+0x98>
289d:	0f 1f 00             	nop    DWORD PTR [rax]
28a0:	83 e1 01             	and    ecx,0x1
28a3:	75 1a                	jne    28bf <find_field.isra.2+0x7f>
28a5:	48 83 c3 01          	add    rbx,0x1
28a9:	48 39 dd             	cmp    rbp,rbx
28ac:	76 2a                	jbe    28d8 <find_field.isra.2+0x98>
28ae:	41 0f b6 04 1e       	movzx  eax,BYTE PTR [r14+rbx*1]
28b3:	0f b7 0c 47          	movzx  ecx,WORD PTR [rdi+rax*2]
28b7:	48 89 c2             	mov    rdx,rax
28ba:	80 fa 0a             	cmp    dl,0xa
28bd:	75 e1                	jne    28a0 <find_field.isra.2+0x60>
28bf:	49 83 c4 01          	add    r12,0x1
28c3:	4d 39 ec             	cmp    r12,r13
28c6:	73 10                	jae    28d8 <find_field.isra.2+0x98>
28c8:	48 39 dd             	cmp    rbp,rbx
28cb:	76 0b                	jbe    28d8 <find_field.isra.2+0x98>
28cd:	48 39 dd             	cmp    rbp,rbx
28d0:	77 9e                	ja     2870 <find_field.isra.2+0x30>
28d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
28d8:	48 29 dd             	sub    rbp,rbx
28db:	48 39 2d 26 78 20 00 	cmp    QWORD PTR [rip+0x207826],rbp        # 20a108 <skip_chars>
28e2:	48 0f 46 2d 1e 78 20 	cmovbe rbp,QWORD PTR [rip+0x20781e]        # 20a108 <skip_chars>
28e9:	00
28ea:	48 01 eb             	add    rbx,rbp
28ed:	49 8d 04 1e          	lea    rax,[r14+rbx*1]
28f1:	5b                   	pop    rbx
28f2:	5d                   	pop    rbp
28f3:	41 5c                	pop    r12
28f5:	41 5d                	pop    r13
28f7:	41 5e                	pop    r14
28f9:	c3                   	ret
28fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2900:	48 83 c3 01          	add    rbx,0x1
2904:	48 39 dd             	cmp    rbp,rbx
2907:	0f 87 73 ff ff ff    	ja     2880 <find_field.isra.2+0x40>
290d:	eb c9                	jmp    28d8 <find_field.isra.2+0x98>
290f:	31 db                	xor    ebx,ebx
2911:	eb c8                	jmp    28db <find_field.isra.2+0x9b>
2913:	0f 1f 00             	nop    DWORD PTR [rax]
2916:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
291d:	00 00 00

0000000000002920 <usage>:
2920:	41 55                	push   r13
2922:	41 54                	push   r12
2924:	ba 05 00 00 00       	mov    edx,0x5
2929:	55                   	push   rbp
292a:	53                   	push   rbx
292b:	89 fd                	mov    ebp,edi
292d:	48 81 ec 88 00 00 00 	sub    rsp,0x88
2934:	48 8b 1d f5 77 20 00 	mov    rbx,QWORD PTR [rip+0x2077f5]        # 20a130 <program_name>
293b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2942:	00 00
2944:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
2949:	31 c0                	xor    eax,eax
294b:	85 ff                	test   edi,edi
294d:	74 2e                	je     297d <usage+0x5d>
294f:	48 8d 35 c2 3f 00 00 	lea    rsi,[rip+0x3fc2]        # 6918 <_IO_stdin_used+0x1d8>
2956:	31 ff                	xor    edi,edi
2958:	e8 a3 ee ff ff       	call   1800 <dcgettext@plt>
295d:	48 8b 3d 7c 77 20 00 	mov    rdi,QWORD PTR [rip+0x20777c]        # 20a0e0 <stderr@@GLIBC_2.2.5>
2964:	48 89 c2             	mov    rdx,rax
2967:	48 89 d9             	mov    rcx,rbx
296a:	be 01 00 00 00       	mov    esi,0x1
296f:	31 c0                	xor    eax,eax
2971:	e8 fa f0 ff ff       	call   1a70 <__fprintf_chk@plt>
2976:	89 ef                	mov    edi,ebp
2978:	e8 d3 f0 ff ff       	call   1a50 <exit@plt>
297d:	48 8d 35 bc 3f 00 00 	lea    rsi,[rip+0x3fbc]        # 6940 <_IO_stdin_used+0x200>
2984:	31 ff                	xor    edi,edi
2986:	e8 75 ee ff ff       	call   1800 <dcgettext@plt>
298b:	48 89 da             	mov    rdx,rbx
298e:	48 89 c6             	mov    rsi,rax
2991:	bf 01 00 00 00       	mov    edi,0x1
2996:	31 c0                	xor    eax,eax
2998:	e8 53 f0 ff ff       	call   19f0 <__printf_chk@plt>
299d:	48 8b 1d 04 77 20 00 	mov    rbx,QWORD PTR [rip+0x207704]        # 20a0a8 <stdout@@GLIBC_2.2.5>
29a4:	48 8d 35 bd 3f 00 00 	lea    rsi,[rip+0x3fbd]        # 6968 <_IO_stdin_used+0x228>
29ab:	ba 05 00 00 00       	mov    edx,0x5
29b0:	31 ff                	xor    edi,edi
29b2:	e8 49 ee ff ff       	call   1800 <dcgettext@plt>
29b7:	48 89 de             	mov    rsi,rbx
29ba:	48 89 c7             	mov    rdi,rax
29bd:	e8 4e ef ff ff       	call   1910 <fputs_unlocked@plt>
29c2:	48 8b 1d df 76 20 00 	mov    rbx,QWORD PTR [rip+0x2076df]        # 20a0a8 <stdout@@GLIBC_2.2.5>
29c9:	48 8d 35 48 40 00 00 	lea    rsi,[rip+0x4048]        # 6a18 <_IO_stdin_used+0x2d8>
29d0:	ba 05 00 00 00       	mov    edx,0x5
29d5:	31 ff                	xor    edi,edi
29d7:	e8 24 ee ff ff       	call   1800 <dcgettext@plt>
29dc:	48 89 de             	mov    rsi,rbx
29df:	48 89 c7             	mov    rdi,rax
29e2:	e8 29 ef ff ff       	call   1910 <fputs_unlocked@plt>
29e7:	48 8b 1d ba 76 20 00 	mov    rbx,QWORD PTR [rip+0x2076ba]        # 20a0a8 <stdout@@GLIBC_2.2.5>
29ee:	48 8d 35 73 40 00 00 	lea    rsi,[rip+0x4073]        # 6a68 <_IO_stdin_used+0x328>
29f5:	ba 05 00 00 00       	mov    edx,0x5
29fa:	31 ff                	xor    edi,edi
29fc:	e8 ff ed ff ff       	call   1800 <dcgettext@plt>
2a01:	48 89 de             	mov    rsi,rbx
2a04:	48 89 c7             	mov    rdi,rax
2a07:	e8 04 ef ff ff       	call   1910 <fputs_unlocked@plt>
2a0c:	48 8b 1d 95 76 20 00 	mov    rbx,QWORD PTR [rip+0x207695]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2a13:	48 8d 35 de 40 00 00 	lea    rsi,[rip+0x40de]        # 6af8 <_IO_stdin_used+0x3b8>
2a1a:	ba 05 00 00 00       	mov    edx,0x5
2a1f:	31 ff                	xor    edi,edi
2a21:	e8 da ed ff ff       	call   1800 <dcgettext@plt>
2a26:	48 89 de             	mov    rsi,rbx
2a29:	48 89 c7             	mov    rdi,rax
2a2c:	e8 df ee ff ff       	call   1910 <fputs_unlocked@plt>
2a31:	48 8b 1d 70 76 20 00 	mov    rbx,QWORD PTR [rip+0x207670]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2a38:	48 8d 35 b1 41 00 00 	lea    rsi,[rip+0x41b1]        # 6bf0 <_IO_stdin_used+0x4b0>
2a3f:	ba 05 00 00 00       	mov    edx,0x5
2a44:	31 ff                	xor    edi,edi
2a46:	e8 b5 ed ff ff       	call   1800 <dcgettext@plt>
2a4b:	48 89 de             	mov    rsi,rbx
2a4e:	48 89 c7             	mov    rdi,rax
2a51:	e8 ba ee ff ff       	call   1910 <fputs_unlocked@plt>
2a56:	48 8b 1d 4b 76 20 00 	mov    rbx,QWORD PTR [rip+0x20764b]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2a5d:	48 8d 35 cc 41 00 00 	lea    rsi,[rip+0x41cc]        # 6c30 <_IO_stdin_used+0x4f0>
2a64:	ba 05 00 00 00       	mov    edx,0x5
2a69:	31 ff                	xor    edi,edi
2a6b:	e8 90 ed ff ff       	call   1800 <dcgettext@plt>
2a70:	48 89 de             	mov    rsi,rbx
2a73:	48 89 c7             	mov    rdi,rax
2a76:	e8 95 ee ff ff       	call   1910 <fputs_unlocked@plt>
2a7b:	48 8b 1d 26 76 20 00 	mov    rbx,QWORD PTR [rip+0x207626]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2a82:	48 8d 35 3f 42 00 00 	lea    rsi,[rip+0x423f]        # 6cc8 <_IO_stdin_used+0x588>
2a89:	ba 05 00 00 00       	mov    edx,0x5
2a8e:	31 ff                	xor    edi,edi
2a90:	e8 6b ed ff ff       	call   1800 <dcgettext@plt>
2a95:	48 89 de             	mov    rsi,rbx
2a98:	48 89 c7             	mov    rdi,rax
2a9b:	e8 70 ee ff ff       	call   1910 <fputs_unlocked@plt>
2aa0:	48 8b 1d 01 76 20 00 	mov    rbx,QWORD PTR [rip+0x207601]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2aa7:	48 8d 35 d2 42 00 00 	lea    rsi,[rip+0x42d2]        # 6d80 <_IO_stdin_used+0x640>
2aae:	ba 05 00 00 00       	mov    edx,0x5
2ab3:	31 ff                	xor    edi,edi
2ab5:	e8 46 ed ff ff       	call   1800 <dcgettext@plt>
2aba:	48 89 de             	mov    rsi,rbx
2abd:	48 89 c7             	mov    rdi,rax
2ac0:	e8 4b ee ff ff       	call   1910 <fputs_unlocked@plt>
2ac5:	48 8b 1d dc 75 20 00 	mov    rbx,QWORD PTR [rip+0x2075dc]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2acc:	48 8d 35 ed 42 00 00 	lea    rsi,[rip+0x42ed]        # 6dc0 <_IO_stdin_used+0x680>
2ad3:	ba 05 00 00 00       	mov    edx,0x5
2ad8:	31 ff                	xor    edi,edi
2ada:	e8 21 ed ff ff       	call   1800 <dcgettext@plt>
2adf:	48 89 de             	mov    rsi,rbx
2ae2:	48 89 c7             	mov    rdi,rax
2ae5:	e8 26 ee ff ff       	call   1910 <fputs_unlocked@plt>
2aea:	48 8b 1d b7 75 20 00 	mov    rbx,QWORD PTR [rip+0x2075b7]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2af1:	48 8d 35 10 43 00 00 	lea    rsi,[rip+0x4310]        # 6e08 <_IO_stdin_used+0x6c8>
2af8:	ba 05 00 00 00       	mov    edx,0x5
2afd:	31 ff                	xor    edi,edi
2aff:	e8 fc ec ff ff       	call   1800 <dcgettext@plt>
2b04:	48 89 de             	mov    rsi,rbx
2b07:	48 89 c7             	mov    rdi,rax
2b0a:	e8 01 ee ff ff       	call   1910 <fputs_unlocked@plt>
2b0f:	48 8b 1d 92 75 20 00 	mov    rbx,QWORD PTR [rip+0x207592]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2b16:	48 8d 35 1b 43 00 00 	lea    rsi,[rip+0x431b]        # 6e38 <_IO_stdin_used+0x6f8>
2b1d:	ba 05 00 00 00       	mov    edx,0x5
2b22:	31 ff                	xor    edi,edi
2b24:	e8 d7 ec ff ff       	call   1800 <dcgettext@plt>
2b29:	48 89 de             	mov    rsi,rbx
2b2c:	48 89 c7             	mov    rdi,rax
2b2f:	e8 dc ed ff ff       	call   1910 <fputs_unlocked@plt>
2b34:	48 8b 1d 6d 75 20 00 	mov    rbx,QWORD PTR [rip+0x20756d]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2b3b:	48 8d 35 2e 43 00 00 	lea    rsi,[rip+0x432e]        # 6e70 <_IO_stdin_used+0x730>
2b42:	ba 05 00 00 00       	mov    edx,0x5
2b47:	31 ff                	xor    edi,edi
2b49:	e8 b2 ec ff ff       	call   1800 <dcgettext@plt>
2b4e:	48 89 de             	mov    rsi,rbx
2b51:	48 89 c7             	mov    rdi,rax
2b54:	e8 b7 ed ff ff       	call   1910 <fputs_unlocked@plt>
2b59:	48 8b 1d 48 75 20 00 	mov    rbx,QWORD PTR [rip+0x207548]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2b60:	48 8d 35 81 43 00 00 	lea    rsi,[rip+0x4381]        # 6ee8 <_IO_stdin_used+0x7a8>
2b67:	ba 05 00 00 00       	mov    edx,0x5
2b6c:	31 ff                	xor    edi,edi
2b6e:	e8 8d ec ff ff       	call   1800 <dcgettext@plt>
2b73:	48 89 de             	mov    rsi,rbx
2b76:	48 89 c7             	mov    rdi,rax
2b79:	48 8d 1d d1 3b 00 00 	lea    rbx,[rip+0x3bd1]        # 6751 <_IO_stdin_used+0x11>
2b80:	e8 8b ed ff ff       	call   1910 <fputs_unlocked@plt>
2b85:	48 8d 05 ca 3b 00 00 	lea    rax,[rip+0x3bca]        # 6756 <_IO_stdin_used+0x16>
2b8c:	48 8d 0d 04 3c 00 00 	lea    rcx,[rip+0x3c04]        # 6797 <_IO_stdin_used+0x57>
2b93:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
2b9a:	00 00
2b9c:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
2ba3:	00 00
2ba5:	48 89 e2             	mov    rdx,rsp
2ba8:	48 89 04 24          	mov    QWORD PTR [rsp],rax
2bac:	48 8d 05 a5 3b 00 00 	lea    rax,[rip+0x3ba5]        # 6758 <_IO_stdin_used+0x18>
2bb3:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
2bb8:	48 8d 0d e2 3b 00 00 	lea    rcx,[rip+0x3be2]        # 67a1 <_IO_stdin_used+0x61>
2bbf:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
2bc4:	48 8d 05 05 3c 00 00 	lea    rax,[rip+0x3c05]        # 67d0 <_IO_stdin_used+0x90>
2bcb:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
2bd0:	48 8d 0d d4 3b 00 00 	lea    rcx,[rip+0x3bd4]        # 67ab <_IO_stdin_used+0x6b>
2bd7:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
2bdc:	48 8d 05 85 3b 00 00 	lea    rax,[rip+0x3b85]        # 6768 <_IO_stdin_used+0x28>
2be3:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
2be8:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2bed:	48 8d 05 8a 3b 00 00 	lea    rax,[rip+0x3b8a]        # 677e <_IO_stdin_used+0x3e>
2bf4:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
2bf9:	48 8d 05 88 3b 00 00 	lea    rax,[rip+0x3b88]        # 6788 <_IO_stdin_used+0x48>
2c00:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
2c05:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
2c0a:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
2c0f:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
2c14:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2c18:	48 83 c2 10          	add    rdx,0x10
2c1c:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
2c1f:	48 85 ff             	test   rdi,rdi
2c22:	74 13                	je     2c37 <usage+0x317>
2c24:	b9 05 00 00 00       	mov    ecx,0x5
2c29:	48 89 de             	mov    rsi,rbx
2c2c:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
2c2e:	0f 97 c0             	seta   al
2c31:	1c 00                	sbb    al,0x0
2c33:	84 c0                	test   al,al
2c35:	75 e1                	jne    2c18 <usage+0x2f8>
2c37:	4c 8b 62 08          	mov    r12,QWORD PTR [rdx+0x8]
2c3b:	31 ff                	xor    edi,edi
2c3d:	ba 05 00 00 00       	mov    edx,0x5
2c42:	48 8d 35 6c 3b 00 00 	lea    rsi,[rip+0x3b6c]        # 67b5 <_IO_stdin_used+0x75>
2c49:	4d 85 e4             	test   r12,r12
2c4c:	0f 84 c1 00 00 00    	je     2d13 <usage+0x3f3>
2c52:	e8 a9 eb ff ff       	call   1800 <dcgettext@plt>
2c57:	48 8d 0d 5a 43 00 00 	lea    rcx,[rip+0x435a]        # 6fb8 <_IO_stdin_used+0x878>
2c5e:	48 8d 15 67 3b 00 00 	lea    rdx,[rip+0x3b67]        # 67cc <_IO_stdin_used+0x8c>
2c65:	48 89 c6             	mov    rsi,rax
2c68:	bf 01 00 00 00       	mov    edi,0x1
2c6d:	31 c0                	xor    eax,eax
2c6f:	e8 7c ed ff ff       	call   19f0 <__printf_chk@plt>
2c74:	31 f6                	xor    esi,esi
2c76:	bf 05 00 00 00       	mov    edi,0x5
2c7b:	e8 60 ed ff ff       	call   19e0 <setlocale@plt>
2c80:	48 85 c0             	test   rax,rax
2c83:	74 1c                	je     2ca1 <usage+0x381>
2c85:	48 8d 35 4e 3b 00 00 	lea    rsi,[rip+0x3b4e]        # 67da <_IO_stdin_used+0x9a>
2c8c:	ba 03 00 00 00       	mov    edx,0x3
2c91:	48 89 c7             	mov    rdi,rax
2c94:	e8 07 eb ff ff       	call   17a0 <strncmp@plt>
2c99:	85 c0                	test   eax,eax
2c9b:	0f 85 07 01 00 00    	jne    2da8 <usage+0x488>
2ca1:	48 8d 35 36 3b 00 00 	lea    rsi,[rip+0x3b36]        # 67de <_IO_stdin_used+0x9e>
2ca8:	31 ff                	xor    edi,edi
2caa:	ba 05 00 00 00       	mov    edx,0x5
2caf:	e8 4c eb ff ff       	call   1800 <dcgettext@plt>
2cb4:	48 8d 0d 96 3a 00 00 	lea    rcx,[rip+0x3a96]        # 6751 <_IO_stdin_used+0x11>
2cbb:	48 8d 15 f6 42 00 00 	lea    rdx,[rip+0x42f6]        # 6fb8 <_IO_stdin_used+0x878>
2cc2:	48 89 c6             	mov    rsi,rax
2cc5:	bf 01 00 00 00       	mov    edi,0x1
2cca:	31 c0                	xor    eax,eax
2ccc:	e8 1f ed ff ff       	call   19f0 <__printf_chk@plt>
2cd1:	49 39 dc             	cmp    r12,rbx
2cd4:	48 8d 0d 97 3a 00 00 	lea    rcx,[rip+0x3a97]        # 6772 <_IO_stdin_used+0x32>
2cdb:	48 8d 1d bf 4a 00 00 	lea    rbx,[rip+0x4abf]        # 77a1 <quoting_style_vals+0x81>
2ce2:	48 0f 44 d9          	cmove  rbx,rcx
2ce6:	48 8d 35 3b 43 00 00 	lea    rsi,[rip+0x433b]        # 7028 <_IO_stdin_used+0x8e8>
2ced:	31 ff                	xor    edi,edi
2cef:	ba 05 00 00 00       	mov    edx,0x5
2cf4:	e8 07 eb ff ff       	call   1800 <dcgettext@plt>
2cf9:	48 89 d9             	mov    rcx,rbx
2cfc:	48 89 c6             	mov    rsi,rax
2cff:	4c 89 e2             	mov    rdx,r12
2d02:	bf 01 00 00 00       	mov    edi,0x1
2d07:	31 c0                	xor    eax,eax
2d09:	e8 e2 ec ff ff       	call   19f0 <__printf_chk@plt>
2d0e:	e9 63 fc ff ff       	jmp    2976 <usage+0x56>
2d13:	e8 e8 ea ff ff       	call   1800 <dcgettext@plt>
2d18:	48 8d 0d 99 42 00 00 	lea    rcx,[rip+0x4299]        # 6fb8 <_IO_stdin_used+0x878>
2d1f:	48 8d 15 a6 3a 00 00 	lea    rdx,[rip+0x3aa6]        # 67cc <_IO_stdin_used+0x8c>
2d26:	48 89 c6             	mov    rsi,rax
2d29:	bf 01 00 00 00       	mov    edi,0x1
2d2e:	31 c0                	xor    eax,eax
2d30:	e8 bb ec ff ff       	call   19f0 <__printf_chk@plt>
2d35:	31 f6                	xor    esi,esi
2d37:	bf 05 00 00 00       	mov    edi,0x5
2d3c:	e8 9f ec ff ff       	call   19e0 <setlocale@plt>
2d41:	48 85 c0             	test   rax,rax
2d44:	74 18                	je     2d5e <usage+0x43e>
2d46:	48 8d 35 8d 3a 00 00 	lea    rsi,[rip+0x3a8d]        # 67da <_IO_stdin_used+0x9a>
2d4d:	ba 03 00 00 00       	mov    edx,0x3
2d52:	48 89 c7             	mov    rdi,rax
2d55:	e8 46 ea ff ff       	call   17a0 <strncmp@plt>
2d5a:	85 c0                	test   eax,eax
2d5c:	75 43                	jne    2da1 <usage+0x481>
2d5e:	48 8d 35 79 3a 00 00 	lea    rsi,[rip+0x3a79]        # 67de <_IO_stdin_used+0x9e>
2d65:	ba 05 00 00 00       	mov    edx,0x5
2d6a:	31 ff                	xor    edi,edi
2d6c:	4c 8d 25 de 39 00 00 	lea    r12,[rip+0x39de]        # 6751 <_IO_stdin_used+0x11>
2d73:	48 8d 1d f8 39 00 00 	lea    rbx,[rip+0x39f8]        # 6772 <_IO_stdin_used+0x32>
2d7a:	e8 81 ea ff ff       	call   1800 <dcgettext@plt>
2d7f:	48 8d 0d cb 39 00 00 	lea    rcx,[rip+0x39cb]        # 6751 <_IO_stdin_used+0x11>
2d86:	48 8d 15 2b 42 00 00 	lea    rdx,[rip+0x422b]        # 6fb8 <_IO_stdin_used+0x878>
2d8d:	48 89 c6             	mov    rsi,rax
2d90:	bf 01 00 00 00       	mov    edi,0x1
2d95:	31 c0                	xor    eax,eax
2d97:	e8 54 ec ff ff       	call   19f0 <__printf_chk@plt>
2d9c:	e9 45 ff ff ff       	jmp    2ce6 <usage+0x3c6>
2da1:	4c 8d 25 a9 39 00 00 	lea    r12,[rip+0x39a9]        # 6751 <_IO_stdin_used+0x11>
2da8:	4c 8b 2d f9 72 20 00 	mov    r13,QWORD PTR [rip+0x2072f9]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2daf:	48 8d 35 2a 42 00 00 	lea    rsi,[rip+0x422a]        # 6fe0 <_IO_stdin_used+0x8a0>
2db6:	31 ff                	xor    edi,edi
2db8:	ba 05 00 00 00       	mov    edx,0x5
2dbd:	e8 3e ea ff ff       	call   1800 <dcgettext@plt>
2dc2:	4c 89 ee             	mov    rsi,r13
2dc5:	48 89 c7             	mov    rdi,rax
2dc8:	e8 43 eb ff ff       	call   1910 <fputs_unlocked@plt>
2dcd:	e9 cf fe ff ff       	jmp    2ca1 <usage+0x381>
2dd2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2dd9:	00 00 00
2ddc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002de0 <__argmatch_die>:
2de0:	bf 01 00 00 00       	mov    edi,0x1
2de5:	e9 36 fb ff ff       	jmp    2920 <usage>
2dea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002df0 <argmatch>:
2df0:	41 57                	push   r15
2df2:	41 56                	push   r14
2df4:	49 89 f7             	mov    r15,rsi
2df7:	41 55                	push   r13
2df9:	41 54                	push   r12
2dfb:	49 89 cd             	mov    r13,rcx
2dfe:	55                   	push   rbp
2dff:	53                   	push   rbx
2e00:	48 89 d5             	mov    rbp,rdx
2e03:	48 83 ec 28          	sub    rsp,0x28
2e07:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
2e0c:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
2e11:	e8 0a ea ff ff       	call   1820 <strlen@plt>
2e16:	4d 8b 37             	mov    r14,QWORD PTR [r15]
2e19:	48 c7 04 24 ff ff ff 	mov    QWORD PTR [rsp],0xffffffffffffffff
2e20:	ff
2e21:	4d 85 f6             	test   r14,r14
2e24:	0f 84 b3 00 00 00    	je     2edd <argmatch+0xed>
2e2a:	49 89 c4             	mov    r12,rax
2e2d:	c6 44 24 17 00       	mov    BYTE PTR [rsp+0x17],0x0
2e32:	31 db                	xor    ebx,ebx
2e34:	eb 51                	jmp    2e87 <argmatch+0x97>
2e36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2e3d:	00 00 00
2e40:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
2e45:	48 85 c0             	test   rax,rax
2e48:	0f 84 a2 00 00 00    	je     2ef0 <argmatch+0x100>
2e4e:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
2e52:	4c 89 ea             	mov    rdx,r13
2e55:	48 89 ee             	mov    rsi,rbp
2e58:	49 0f af fd          	imul   rdi,r13
2e5c:	48 01 c7             	add    rdi,rax
2e5f:	e8 9c ea ff ff       	call   1900 <memcmp@plt>
2e64:	85 c0                	test   eax,eax
2e66:	0f b6 44 24 17       	movzx  eax,BYTE PTR [rsp+0x17]
2e6b:	b9 01 00 00 00       	mov    ecx,0x1
2e70:	0f 45 c1             	cmovne eax,ecx
2e73:	88 44 24 17          	mov    BYTE PTR [rsp+0x17],al
2e77:	48 83 c3 01          	add    rbx,0x1
2e7b:	4c 01 ed             	add    rbp,r13
2e7e:	4d 8b 34 df          	mov    r14,QWORD PTR [r15+rbx*8]
2e82:	4d 85 f6             	test   r14,r14
2e85:	74 41                	je     2ec8 <argmatch+0xd8>
2e87:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
2e8c:	4c 89 e2             	mov    rdx,r12
2e8f:	4c 89 f7             	mov    rdi,r14
2e92:	e8 09 e9 ff ff       	call   17a0 <strncmp@plt>
2e97:	85 c0                	test   eax,eax
2e99:	75 dc                	jne    2e77 <argmatch+0x87>
2e9b:	4c 89 f7             	mov    rdi,r14
2e9e:	e8 7d e9 ff ff       	call   1820 <strlen@plt>
2ea3:	4c 39 e0             	cmp    rax,r12
2ea6:	74 58                	je     2f00 <argmatch+0x110>
2ea8:	48 83 3c 24 ff       	cmp    QWORD PTR [rsp],0xffffffffffffffff
2ead:	75 91                	jne    2e40 <argmatch+0x50>
2eaf:	48 89 1c 24          	mov    QWORD PTR [rsp],rbx
2eb3:	48 83 c3 01          	add    rbx,0x1
2eb7:	4c 01 ed             	add    rbp,r13
2eba:	4d 8b 34 df          	mov    r14,QWORD PTR [r15+rbx*8]
2ebe:	4d 85 f6             	test   r14,r14
2ec1:	75 c4                	jne    2e87 <argmatch+0x97>
2ec3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2ec8:	80 7c 24 17 00       	cmp    BYTE PTR [rsp+0x17],0x0
2ecd:	48 c7 c0 fe ff ff ff 	mov    rax,0xfffffffffffffffe
2ed4:	48 0f 44 04 24       	cmove  rax,QWORD PTR [rsp]
2ed9:	48 89 04 24          	mov    QWORD PTR [rsp],rax
2edd:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
2ee1:	48 83 c4 28          	add    rsp,0x28
2ee5:	5b                   	pop    rbx
2ee6:	5d                   	pop    rbp
2ee7:	41 5c                	pop    r12
2ee9:	41 5d                	pop    r13
2eeb:	41 5e                	pop    r14
2eed:	41 5f                	pop    r15
2eef:	c3                   	ret
2ef0:	c6 44 24 17 01       	mov    BYTE PTR [rsp+0x17],0x1
2ef5:	eb 80                	jmp    2e77 <argmatch+0x87>
2ef7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
2efe:	00 00
2f00:	48 89 1c 24          	mov    QWORD PTR [rsp],rbx
2f04:	eb d7                	jmp    2edd <argmatch+0xed>
2f06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2f0d:	00 00 00

0000000000002f10 <argmatch_invalid>:
2f10:	48 83 fa ff          	cmp    rdx,0xffffffffffffffff
2f14:	41 54                	push   r12
2f16:	ba 05 00 00 00       	mov    edx,0x5
2f1b:	55                   	push   rbp
2f1c:	49 89 f4             	mov    r12,rsi
2f1f:	53                   	push   rbx
2f20:	48 89 fd             	mov    rbp,rdi
2f23:	74 4b                	je     2f70 <argmatch_invalid+0x60>
2f25:	48 8d 35 90 42 00 00 	lea    rsi,[rip+0x4290]        # 71bc <delimit_method_map+0x2c>
2f2c:	31 ff                	xor    edi,edi
2f2e:	e8 cd e8 ff ff       	call   1800 <dcgettext@plt>
2f33:	48 89 c3             	mov    rbx,rax
2f36:	48 89 ee             	mov    rsi,rbp
2f39:	bf 01 00 00 00       	mov    edi,0x1
2f3e:	e8 ad 24 00 00       	call   53f0 <quote_n>
2f43:	4c 89 e2             	mov    rdx,r12
2f46:	48 89 c5             	mov    rbp,rax
2f49:	be 08 00 00 00       	mov    esi,0x8
2f4e:	31 ff                	xor    edi,edi
2f50:	e8 cb 20 00 00       	call   5020 <quotearg_n_style>
2f55:	49 89 e8             	mov    r8,rbp
2f58:	48 89 da             	mov    rdx,rbx
2f5b:	48 89 c1             	mov    rcx,rax
2f5e:	5b                   	pop    rbx
2f5f:	5d                   	pop    rbp
2f60:	41 5c                	pop    r12
2f62:	31 f6                	xor    esi,esi
2f64:	31 ff                	xor    edi,edi
2f66:	31 c0                	xor    eax,eax
2f68:	e9 93 ea ff ff       	jmp    1a00 <error@plt>
2f6d:	0f 1f 00             	nop    DWORD PTR [rax]
2f70:	48 8d 35 2a 42 00 00 	lea    rsi,[rip+0x422a]        # 71a1 <delimit_method_map+0x11>
2f77:	31 ff                	xor    edi,edi
2f79:	e8 82 e8 ff ff       	call   1800 <dcgettext@plt>
2f7e:	48 89 c3             	mov    rbx,rax
2f81:	eb b3                	jmp    2f36 <argmatch_invalid+0x26>
2f83:	0f 1f 00             	nop    DWORD PTR [rax]
2f86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2f8d:	00 00 00

0000000000002f90 <argmatch_valid>:
2f90:	41 57                	push   r15
2f92:	41 56                	push   r14
2f94:	49 89 fe             	mov    r14,rdi
2f97:	41 55                	push   r13
2f99:	41 54                	push   r12
2f9b:	31 ff                	xor    edi,edi
2f9d:	55                   	push   rbp
2f9e:	53                   	push   rbx
2f9f:	48 89 f5             	mov    rbp,rsi
2fa2:	48 8d 35 30 42 00 00 	lea    rsi,[rip+0x4230]        # 71d9 <delimit_method_map+0x49>
2fa9:	49 89 d4             	mov    r12,rdx
2fac:	ba 05 00 00 00       	mov    edx,0x5
2fb1:	48 83 ec 08          	sub    rsp,0x8
2fb5:	48 8b 1d 24 71 20 00 	mov    rbx,QWORD PTR [rip+0x207124]        # 20a0e0 <stderr@@GLIBC_2.2.5>
2fbc:	e8 3f e8 ff ff       	call   1800 <dcgettext@plt>
2fc1:	48 89 c7             	mov    rdi,rax
2fc4:	48 89 de             	mov    rsi,rbx
2fc7:	e8 44 e9 ff ff       	call   1910 <fputs_unlocked@plt>
2fcc:	4d 8b 3e             	mov    r15,QWORD PTR [r14]
2fcf:	4d 85 ff             	test   r15,r15
2fd2:	0f 84 90 00 00 00    	je     3068 <argmatch_valid+0xd8>
2fd8:	45 31 ed             	xor    r13d,r13d
2fdb:	31 db                	xor    ebx,ebx
2fdd:	eb 39                	jmp    3018 <argmatch_valid+0x88>
2fdf:	90                   	nop
2fe0:	4c 89 ff             	mov    rdi,r15
2fe3:	48 83 c3 01          	add    rbx,0x1
2fe7:	49 89 ed             	mov    r13,rbp
2fea:	e8 21 24 00 00       	call   5410 <quote>
2fef:	48 8b 3d ea 70 20 00 	mov    rdi,QWORD PTR [rip+0x2070ea]        # 20a0e0 <stderr@@GLIBC_2.2.5>
2ff6:	48 8d 15 f1 41 00 00 	lea    rdx,[rip+0x41f1]        # 71ee <delimit_method_map+0x5e>
2ffd:	48 89 c1             	mov    rcx,rax
3000:	be 01 00 00 00       	mov    esi,0x1
3005:	31 c0                	xor    eax,eax
3007:	4c 01 e5             	add    rbp,r12
300a:	e8 61 ea ff ff       	call   1a70 <__fprintf_chk@plt>
300f:	4d 8b 3c de          	mov    r15,QWORD PTR [r14+rbx*8]
3013:	4d 85 ff             	test   r15,r15
3016:	74 50                	je     3068 <argmatch_valid+0xd8>
3018:	48 85 db             	test   rbx,rbx
301b:	74 c3                	je     2fe0 <argmatch_valid+0x50>
301d:	4c 89 e2             	mov    rdx,r12
3020:	48 89 ee             	mov    rsi,rbp
3023:	4c 89 ef             	mov    rdi,r13
3026:	e8 d5 e8 ff ff       	call   1900 <memcmp@plt>
302b:	85 c0                	test   eax,eax
302d:	75 b1                	jne    2fe0 <argmatch_valid+0x50>
302f:	4c 89 ff             	mov    rdi,r15
3032:	48 83 c3 01          	add    rbx,0x1
3036:	4c 01 e5             	add    rbp,r12
3039:	e8 d2 23 00 00       	call   5410 <quote>
303e:	48 8b 3d 9b 70 20 00 	mov    rdi,QWORD PTR [rip+0x20709b]        # 20a0e0 <stderr@@GLIBC_2.2.5>
3045:	48 8d 15 aa 41 00 00 	lea    rdx,[rip+0x41aa]        # 71f6 <delimit_method_map+0x66>
304c:	48 89 c1             	mov    rcx,rax
304f:	be 01 00 00 00       	mov    esi,0x1
3054:	31 c0                	xor    eax,eax
3056:	e8 15 ea ff ff       	call   1a70 <__fprintf_chk@plt>
305b:	4d 8b 3c de          	mov    r15,QWORD PTR [r14+rbx*8]
305f:	4d 85 ff             	test   r15,r15
3062:	75 b4                	jne    3018 <argmatch_valid+0x88>
3064:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3068:	48 8b 3d 71 70 20 00 	mov    rdi,QWORD PTR [rip+0x207071]        # 20a0e0 <stderr@@GLIBC_2.2.5>
306f:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
3073:	48 3b 47 30          	cmp    rax,QWORD PTR [rdi+0x30]
3077:	73 1f                	jae    3098 <argmatch_valid+0x108>
3079:	48 8d 50 01          	lea    rdx,[rax+0x1]
307d:	48 89 57 28          	mov    QWORD PTR [rdi+0x28],rdx
3081:	c6 00 0a             	mov    BYTE PTR [rax],0xa
3084:	48 83 c4 08          	add    rsp,0x8
3088:	5b                   	pop    rbx
3089:	5d                   	pop    rbp
308a:	41 5c                	pop    r12
308c:	41 5d                	pop    r13
308e:	41 5e                	pop    r14
3090:	41 5f                	pop    r15
3092:	c3                   	ret
3093:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3098:	48 83 c4 08          	add    rsp,0x8
309c:	be 0a 00 00 00       	mov    esi,0xa
30a1:	5b                   	pop    rbx
30a2:	5d                   	pop    rbp
30a3:	41 5c                	pop    r12
30a5:	41 5d                	pop    r13
30a7:	41 5e                	pop    r14
30a9:	41 5f                	pop    r15
30ab:	e9 d0 e7 ff ff       	jmp    1880 <__overflow@plt>

00000000000030b0 <__xargmatch_internal>:
30b0:	41 57                	push   r15
30b2:	41 56                	push   r14
30b4:	49 89 fe             	mov    r14,rdi
30b7:	41 55                	push   r13
30b9:	41 54                	push   r12
30bb:	49 89 f4             	mov    r12,rsi
30be:	55                   	push   rbp
30bf:	53                   	push   rbx
30c0:	48 89 cd             	mov    rbp,rcx
30c3:	48 89 d3             	mov    rbx,rdx
30c6:	4c 89 c1             	mov    rcx,r8
30c9:	48 89 ea             	mov    rdx,rbp
30cc:	48 83 ec 08          	sub    rsp,0x8
30d0:	48 89 de             	mov    rsi,rbx
30d3:	4c 89 e7             	mov    rdi,r12
30d6:	4d 89 c7             	mov    r15,r8
30d9:	4d 89 cd             	mov    r13,r9
30dc:	e8 0f fd ff ff       	call   2df0 <argmatch>
30e1:	48 85 c0             	test   rax,rax
30e4:	78 0f                	js     30f5 <__xargmatch_internal+0x45>
30e6:	48 83 c4 08          	add    rsp,0x8
30ea:	5b                   	pop    rbx
30eb:	5d                   	pop    rbp
30ec:	41 5c                	pop    r12
30ee:	41 5d                	pop    r13
30f0:	41 5e                	pop    r14
30f2:	41 5f                	pop    r15
30f4:	c3                   	ret
30f5:	48 89 c2             	mov    rdx,rax
30f8:	4c 89 e6             	mov    rsi,r12
30fb:	4c 89 f7             	mov    rdi,r14
30fe:	e8 0d fe ff ff       	call   2f10 <argmatch_invalid>
3103:	4c 89 fa             	mov    rdx,r15
3106:	48 89 ee             	mov    rsi,rbp
3109:	48 89 df             	mov    rdi,rbx
310c:	e8 7f fe ff ff       	call   2f90 <argmatch_valid>
3111:	41 ff d5             	call   r13
3114:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
311b:	eb c9                	jmp    30e6 <__xargmatch_internal+0x36>
311d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000003120 <argmatch_to_argument>:
3120:	41 56                	push   r14
3122:	41 55                	push   r13
3124:	41 54                	push   r12
3126:	55                   	push   rbp
3127:	53                   	push   rbx
3128:	4c 8b 36             	mov    r14,QWORD PTR [rsi]
312b:	4d 85 f6             	test   r14,r14
312e:	74 31                	je     3161 <argmatch_to_argument+0x41>
3130:	49 89 cc             	mov    r12,rcx
3133:	49 89 fd             	mov    r13,rdi
3136:	48 89 d5             	mov    rbp,rdx
3139:	48 8d 5e 08          	lea    rbx,[rsi+0x8]
313d:	eb 10                	jmp    314f <argmatch_to_argument+0x2f>
313f:	90                   	nop
3140:	4c 8b 33             	mov    r14,QWORD PTR [rbx]
3143:	4c 01 e5             	add    rbp,r12
3146:	48 83 c3 08          	add    rbx,0x8
314a:	4d 85 f6             	test   r14,r14
314d:	74 12                	je     3161 <argmatch_to_argument+0x41>
314f:	4c 89 e2             	mov    rdx,r12
3152:	48 89 ee             	mov    rsi,rbp
3155:	4c 89 ef             	mov    rdi,r13
3158:	e8 a3 e7 ff ff       	call   1900 <memcmp@plt>
315d:	85 c0                	test   eax,eax
315f:	75 df                	jne    3140 <argmatch_to_argument+0x20>
3161:	5b                   	pop    rbx
3162:	4c 89 f0             	mov    rax,r14
3165:	5d                   	pop    rbp
3166:	41 5c                	pop    r12
3168:	41 5d                	pop    r13
316a:	41 5e                	pop    r14
316c:	c3                   	ret
316d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000003170 <close_stdout_set_file_name>:
3170:	48 89 3d b1 6f 20 00 	mov    QWORD PTR [rip+0x206fb1],rdi        # 20a128 <file_name>
3177:	c3                   	ret
3178:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
317f:	00

0000000000003180 <close_stdout_set_ignore_EPIPE>:
3180:	40 88 3d 99 6f 20 00 	mov    BYTE PTR [rip+0x206f99],dil        # 20a120 <ignore_EPIPE>
3187:	c3                   	ret
3188:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
318f:	00

0000000000003190 <close_stdout>:
3190:	55                   	push   rbp
3191:	53                   	push   rbx
3192:	48 83 ec 08          	sub    rsp,0x8
3196:	48 8b 3d 0b 6f 20 00 	mov    rdi,QWORD PTR [rip+0x206f0b]        # 20a0a8 <stdout@@GLIBC_2.2.5>
319d:	e8 6e 32 00 00       	call   6410 <close_stream>
31a2:	85 c0                	test   eax,eax
31a4:	74 16                	je     31bc <close_stdout+0x2c>
31a6:	e8 e5 e5 ff ff       	call   1790 <__errno_location@plt>
31ab:	80 3d 6e 6f 20 00 00 	cmp    BYTE PTR [rip+0x206f6e],0x0        # 20a120 <ignore_EPIPE>
31b2:	48 89 c3             	mov    rbx,rax
31b5:	74 1c                	je     31d3 <close_stdout+0x43>
31b7:	83 38 20             	cmp    DWORD PTR [rax],0x20
31ba:	75 17                	jne    31d3 <close_stdout+0x43>
31bc:	48 8b 3d 1d 6f 20 00 	mov    rdi,QWORD PTR [rip+0x206f1d]        # 20a0e0 <stderr@@GLIBC_2.2.5>
31c3:	e8 48 32 00 00       	call   6410 <close_stream>
31c8:	85 c0                	test   eax,eax
31ca:	75 46                	jne    3212 <close_stdout+0x82>
31cc:	48 83 c4 08          	add    rsp,0x8
31d0:	5b                   	pop    rbx
31d1:	5d                   	pop    rbp
31d2:	c3                   	ret
31d3:	48 8d 35 21 40 00 00 	lea    rsi,[rip+0x4021]        # 71fb <delimit_method_map+0x6b>
31da:	31 ff                	xor    edi,edi
31dc:	ba 05 00 00 00       	mov    edx,0x5
31e1:	e8 1a e6 ff ff       	call   1800 <dcgettext@plt>
31e6:	48 8b 3d 3b 6f 20 00 	mov    rdi,QWORD PTR [rip+0x206f3b]        # 20a128 <file_name>
31ed:	48 89 c5             	mov    rbp,rax
31f0:	48 85 ff             	test   rdi,rdi
31f3:	74 28                	je     321d <close_stdout+0x8d>
31f5:	e8 16 20 00 00       	call   5210 <quotearg_colon>
31fa:	8b 33                	mov    esi,DWORD PTR [rbx]
31fc:	48 8d 15 41 35 00 00 	lea    rdx,[rip+0x3541]        # 6744 <_IO_stdin_used+0x4>
3203:	48 89 c1             	mov    rcx,rax
3206:	49 89 e8             	mov    r8,rbp
3209:	31 ff                	xor    edi,edi
320b:	31 c0                	xor    eax,eax
320d:	e8 ee e7 ff ff       	call   1a00 <error@plt>
3212:	8b 3d 08 6e 20 00    	mov    edi,DWORD PTR [rip+0x206e08]        # 20a020 <exit_failure>
3218:	e8 93 e5 ff ff       	call   17b0 <_exit@plt>
321d:	8b 33                	mov    esi,DWORD PTR [rbx]
321f:	48 8d 15 d2 3f 00 00 	lea    rdx,[rip+0x3fd2]        # 71f8 <delimit_method_map+0x68>
3226:	48 89 c1             	mov    rcx,rax
3229:	31 ff                	xor    edi,edi
322b:	31 c0                	xor    eax,eax
322d:	e8 ce e7 ff ff       	call   1a00 <error@plt>
3232:	eb de                	jmp    3212 <close_stdout+0x82>
3234:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
323b:	00 00 00
323e:	66 90                	xchg   ax,ax

0000000000003240 <fdadvise>:
3240:	e9 ab e6 ff ff       	jmp    18f0 <posix_fadvise@plt>
3245:	90                   	nop
3246:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
324d:	00 00 00

0000000000003250 <fadvise>:
3250:	48 85 ff             	test   rdi,rdi
3253:	74 1b                	je     3270 <fadvise+0x20>
3255:	53                   	push   rbx
3256:	89 f3                	mov    ebx,esi
3258:	e8 03 e7 ff ff       	call   1960 <fileno@plt>
325d:	89 d9                	mov    ecx,ebx
325f:	31 d2                	xor    edx,edx
3261:	31 f6                	xor    esi,esi
3263:	5b                   	pop    rbx
3264:	89 c7                	mov    edi,eax
3266:	e9 85 e6 ff ff       	jmp    18f0 <posix_fadvise@plt>
326b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3270:	f3 c3                	repz ret
3272:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3279:	00 00 00
327c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003280 <protect_fd>:
3280:	55                   	push   rbp
3281:	53                   	push   rbx
3282:	89 fd                	mov    ebp,edi
3284:	48 8d 3d 7c 3f 00 00 	lea    rdi,[rip+0x3f7c]        # 7207 <delimit_method_map+0x77>
328b:	31 f6                	xor    esi,esi
328d:	31 c0                	xor    eax,eax
328f:	48 83 ec 08          	sub    rsp,0x8
3293:	bb 01 00 00 00       	mov    ebx,0x1
3298:	e8 73 e7 ff ff       	call   1a10 <open@plt>
329d:	39 c5                	cmp    ebp,eax
329f:	74 18                	je     32b9 <protect_fd+0x39>
32a1:	31 db                	xor    ebx,ebx
32a3:	85 c0                	test   eax,eax
32a5:	78 12                	js     32b9 <protect_fd+0x39>
32a7:	89 c7                	mov    edi,eax
32a9:	e8 32 e6 ff ff       	call   18e0 <close@plt>
32ae:	e8 dd e4 ff ff       	call   1790 <__errno_location@plt>
32b3:	c7 00 09 00 00 00    	mov    DWORD PTR [rax],0x9
32b9:	48 83 c4 08          	add    rsp,0x8
32bd:	89 d8                	mov    eax,ebx
32bf:	5b                   	pop    rbx
32c0:	5d                   	pop    rbp
32c1:	c3                   	ret
32c2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
32c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
32cd:	00 00 00

00000000000032d0 <freopen_safer>:
32d0:	41 57                	push   r15
32d2:	41 56                	push   r14
32d4:	49 89 f7             	mov    r15,rsi
32d7:	41 55                	push   r13
32d9:	41 54                	push   r12
32db:	49 89 d4             	mov    r12,rdx
32de:	55                   	push   rbp
32df:	53                   	push   rbx
32e0:	48 83 ec 18          	sub    rsp,0x18
32e4:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
32e9:	48 89 d7             	mov    rdi,rdx
32ec:	e8 6f e6 ff ff       	call   1960 <fileno@plt>
32f1:	89 c3                	mov    ebx,eax
32f3:	e8 98 e4 ff ff       	call   1790 <__errno_location@plt>
32f8:	83 fb 01             	cmp    ebx,0x1
32fb:	49 89 c6             	mov    r14,rax
32fe:	0f 84 5c 01 00 00    	je     3460 <freopen_safer+0x190>
3304:	83 fb 02             	cmp    ebx,0x2
3307:	0f 84 43 01 00 00    	je     3450 <freopen_safer+0x180>
330d:	85 db                	test   ebx,ebx
330f:	0f 84 b3 00 00 00    	je     33c8 <freopen_safer+0xf8>
3315:	be 02 00 00 00       	mov    esi,0x2
331a:	bf 02 00 00 00       	mov    edi,0x2
331f:	e8 3c e5 ff ff       	call   1860 <dup2@plt>
3324:	83 f8 02             	cmp    eax,0x2
3327:	0f 95 c3             	setne  bl
332a:	be 01 00 00 00       	mov    esi,0x1
332f:	bf 01 00 00 00       	mov    edi,0x1
3334:	e8 27 e5 ff ff       	call   1860 <dup2@plt>
3339:	83 f8 01             	cmp    eax,0x1
333c:	40 0f 95 c5          	setne  bpl
3340:	31 f6                	xor    esi,esi
3342:	31 ff                	xor    edi,edi
3344:	e8 17 e5 ff ff       	call   1860 <dup2@plt>
3349:	85 c0                	test   eax,eax
334b:	0f 84 87 00 00 00    	je     33d8 <freopen_safer+0x108>
3351:	31 ff                	xor    edi,edi
3353:	e8 28 ff ff ff       	call   3280 <protect_fd>
3358:	84 c0                	test   al,al
335a:	41 89 c5             	mov    r13d,eax
335d:	0f 84 0d 01 00 00    	je     3470 <freopen_safer+0x1a0>
3363:	40 84 ed             	test   bpl,bpl
3366:	75 78                	jne    33e0 <freopen_safer+0x110>
3368:	84 db                	test   bl,bl
336a:	74 14                	je     3380 <freopen_safer+0xb0>
336c:	bf 02 00 00 00       	mov    edi,0x2
3371:	e8 0a ff ff ff       	call   3280 <protect_fd>
3376:	84 c0                	test   al,al
3378:	89 c3                	mov    ebx,eax
337a:	0f 84 b0 00 00 00    	je     3430 <freopen_safer+0x160>
3380:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
3385:	4c 89 e2             	mov    rdx,r12
3388:	4c 89 fe             	mov    rsi,r15
338b:	e8 40 e5 ff ff       	call   18d0 <freopen@plt>
3390:	49 89 c4             	mov    r12,rax
3393:	84 db                	test   bl,bl
3395:	45 8b 3e             	mov    r15d,DWORD PTR [r14]
3398:	0f 85 a2 00 00 00    	jne    3440 <freopen_safer+0x170>
339e:	40 84 ed             	test   bpl,bpl
33a1:	75 6d                	jne    3410 <freopen_safer+0x140>
33a3:	45 84 ed             	test   r13b,r13b
33a6:	75 77                	jne    341f <freopen_safer+0x14f>
33a8:	4d 85 e4             	test   r12,r12
33ab:	75 03                	jne    33b0 <freopen_safer+0xe0>
33ad:	45 89 3e             	mov    DWORD PTR [r14],r15d
33b0:	48 83 c4 18          	add    rsp,0x18
33b4:	4c 89 e0             	mov    rax,r12
33b7:	5b                   	pop    rbx
33b8:	5d                   	pop    rbp
33b9:	41 5c                	pop    r12
33bb:	41 5d                	pop    r13
33bd:	41 5e                	pop    r14
33bf:	41 5f                	pop    r15
33c1:	c3                   	ret
33c2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
33c8:	31 db                	xor    ebx,ebx
33ca:	31 ed                	xor    ebp,ebp
33cc:	45 31 ed             	xor    r13d,r13d
33cf:	eb af                	jmp    3380 <freopen_safer+0xb0>
33d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
33d8:	45 31 ed             	xor    r13d,r13d
33db:	40 84 ed             	test   bpl,bpl
33de:	74 88                	je     3368 <freopen_safer+0x98>
33e0:	bf 01 00 00 00       	mov    edi,0x1
33e5:	e8 96 fe ff ff       	call   3280 <protect_fd>
33ea:	84 c0                	test   al,al
33ec:	89 c5                	mov    ebp,eax
33ee:	0f 85 74 ff ff ff    	jne    3368 <freopen_safer+0x98>
33f4:	45 31 e4             	xor    r12d,r12d
33f7:	84 db                	test   bl,bl
33f9:	45 8b 3e             	mov    r15d,DWORD PTR [r14]
33fc:	74 12                	je     3410 <freopen_safer+0x140>
33fe:	bf 02 00 00 00       	mov    edi,0x2
3403:	e8 d8 e4 ff ff       	call   18e0 <close@plt>
3408:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
340f:	00
3410:	bf 01 00 00 00       	mov    edi,0x1
3415:	e8 c6 e4 ff ff       	call   18e0 <close@plt>
341a:	45 84 ed             	test   r13b,r13b
341d:	74 89                	je     33a8 <freopen_safer+0xd8>
341f:	31 ff                	xor    edi,edi
3421:	e8 ba e4 ff ff       	call   18e0 <close@plt>
3426:	eb 80                	jmp    33a8 <freopen_safer+0xd8>
3428:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
342f:	00
3430:	45 8b 3e             	mov    r15d,DWORD PTR [r14]
3433:	45 31 e4             	xor    r12d,r12d
3436:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
343d:	00 00 00
3440:	bf 02 00 00 00       	mov    edi,0x2
3445:	e8 96 e4 ff ff       	call   18e0 <close@plt>
344a:	e9 4f ff ff ff       	jmp    339e <freopen_safer+0xce>
344f:	90                   	nop
3450:	31 db                	xor    ebx,ebx
3452:	e9 d3 fe ff ff       	jmp    332a <freopen_safer+0x5a>
3457:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
345e:	00 00
3460:	31 db                	xor    ebx,ebx
3462:	31 ed                	xor    ebp,ebp
3464:	e9 d7 fe ff ff       	jmp    3340 <freopen_safer+0x70>
3469:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3470:	41 bd 01 00 00 00    	mov    r13d,0x1
3476:	45 31 e4             	xor    r12d,r12d
3479:	e9 15 ff ff ff       	jmp    3393 <freopen_safer+0xc3>
347e:	66 90                	xchg   ax,ax

0000000000003480 <hard_locale>:
3480:	48 83 ec 08          	sub    rsp,0x8
3484:	31 f6                	xor    esi,esi
3486:	e8 55 e5 ff ff       	call   19e0 <setlocale@plt>
348b:	48 89 c2             	mov    rdx,rax
348e:	b8 01 00 00 00       	mov    eax,0x1
3493:	48 85 d2             	test   rdx,rdx
3496:	74 1d                	je     34b5 <hard_locale+0x35>
3498:	48 8d 3d 72 3d 00 00 	lea    rdi,[rip+0x3d72]        # 7211 <delimit_method_map+0x81>
349f:	b9 02 00 00 00       	mov    ecx,0x2
34a4:	48 89 d6             	mov    rsi,rdx
34a7:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
34a9:	0f 97 c1             	seta   cl
34ac:	80 d9 00             	sbb    cl,0x0
34af:	31 c0                	xor    eax,eax
34b1:	84 c9                	test   cl,cl
34b3:	75 0b                	jne    34c0 <hard_locale+0x40>
34b5:	48 83 c4 08          	add    rsp,0x8
34b9:	c3                   	ret
34ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
34c0:	48 8d 3d 4c 3d 00 00 	lea    rdi,[rip+0x3d4c]        # 7213 <delimit_method_map+0x83>
34c7:	b9 06 00 00 00       	mov    ecx,0x6
34cc:	48 89 d6             	mov    rsi,rdx
34cf:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
34d1:	0f 97 c0             	seta   al
34d4:	1c 00                	sbb    al,0x0
34d6:	84 c0                	test   al,al
34d8:	0f 95 c0             	setne  al
34db:	48 83 c4 08          	add    rsp,0x8
34df:	c3                   	ret

00000000000034e0 <initbuffer>:
34e0:	66 0f ef c0          	pxor   xmm0,xmm0
34e4:	48 c7 47 10 00 00 00 	mov    QWORD PTR [rdi+0x10],0x0
34eb:	00
34ec:	0f 11 07             	movups XMMWORD PTR [rdi],xmm0
34ef:	c3                   	ret

00000000000034f0 <readlinebuffer_delim>:
34f0:	41 57                	push   r15
34f2:	41 56                	push   r14
34f4:	41 55                	push   r13
34f6:	41 54                	push   r12
34f8:	55                   	push   rbp
34f9:	53                   	push   rbx
34fa:	48 83 ec 18          	sub    rsp,0x18
34fe:	4c 8b 6f 10          	mov    r13,QWORD PTR [rdi+0x10]
3502:	4c 8b 07             	mov    r8,QWORD PTR [rdi]
3505:	4d 01 e8             	add    r8,r13
3508:	f6 06 10             	test   BYTE PTR [rsi],0x10
350b:	0f 85 cf 00 00 00    	jne    35e0 <readlinebuffer_delim+0xf0>
3511:	49 89 fe             	mov    r14,rdi
3514:	48 89 f5             	mov    rbp,rsi
3517:	4c 89 eb             	mov    rbx,r13
351a:	44 0f be fa          	movsx  r15d,dl
351e:	eb 0b                	jmp    352b <readlinebuffer_delim+0x3b>
3520:	45 39 fc             	cmp    r12d,r15d
3523:	48 8d 5e 01          	lea    rbx,[rsi+0x1]
3527:	88 0e                	mov    BYTE PTR [rsi],cl
3529:	74 5b                	je     3586 <readlinebuffer_delim+0x96>
352b:	48 8b 4d 08          	mov    rcx,QWORD PTR [rbp+0x8]
352f:	48 3b 4d 10          	cmp    rcx,QWORD PTR [rbp+0x10]
3533:	73 6b                	jae    35a0 <readlinebuffer_delim+0xb0>
3535:	48 8d 41 01          	lea    rax,[rcx+0x1]
3539:	48 89 45 08          	mov    QWORD PTR [rbp+0x8],rax
353d:	44 0f b6 21          	movzx  r12d,BYTE PTR [rcx]
3541:	44 89 e1             	mov    ecx,r12d
3544:	4c 39 c3             	cmp    rbx,r8
3547:	48 89 de             	mov    rsi,rbx
354a:	75 d4                	jne    3520 <readlinebuffer_delim+0x30>
354c:	49 8b 1e             	mov    rbx,QWORD PTR [r14]
354f:	4c 89 f6             	mov    rsi,r14
3552:	4c 89 ef             	mov    rdi,r13
3555:	88 54 24 0f          	mov    BYTE PTR [rsp+0xf],dl
3559:	88 0c 24             	mov    BYTE PTR [rsp],cl
355c:	e8 4f 26 00 00       	call   5bb0 <x2realloc>
3561:	4d 8b 06             	mov    r8,QWORD PTR [r14]
3564:	0f b6 0c 24          	movzx  ecx,BYTE PTR [rsp]
3568:	48 8d 34 18          	lea    rsi,[rax+rbx*1]
356c:	49 89 46 10          	mov    QWORD PTR [r14+0x10],rax
3570:	49 89 c5             	mov    r13,rax
3573:	0f b6 54 24 0f       	movzx  edx,BYTE PTR [rsp+0xf]
3578:	48 8d 5e 01          	lea    rbx,[rsi+0x1]
357c:	49 01 c0             	add    r8,rax
357f:	45 39 fc             	cmp    r12d,r15d
3582:	88 0e                	mov    BYTE PTR [rsi],cl
3584:	75 a5                	jne    352b <readlinebuffer_delim+0x3b>
3586:	4c 29 eb             	sub    rbx,r13
3589:	4c 89 f0             	mov    rax,r14
358c:	49 89 5e 08          	mov    QWORD PTR [r14+0x8],rbx
3590:	48 83 c4 18          	add    rsp,0x18
3594:	5b                   	pop    rbx
3595:	5d                   	pop    rbp
3596:	41 5c                	pop    r12
3598:	41 5d                	pop    r13
359a:	41 5e                	pop    r14
359c:	41 5f                	pop    r15
359e:	c3                   	ret
359f:	90                   	nop
35a0:	48 89 ef             	mov    rdi,rbp
35a3:	88 54 24 0f          	mov    BYTE PTR [rsp+0xf],dl
35a7:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
35ab:	e8 a0 e1 ff ff       	call   1750 <__uflow@plt>
35b0:	83 f8 ff             	cmp    eax,0xffffffff
35b3:	41 89 c4             	mov    r12d,eax
35b6:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
35ba:	0f b6 54 24 0f       	movzx  edx,BYTE PTR [rsp+0xf]
35bf:	75 30                	jne    35f1 <readlinebuffer_delim+0x101>
35c1:	49 39 dd             	cmp    r13,rbx
35c4:	74 1a                	je     35e0 <readlinebuffer_delim+0xf0>
35c6:	f6 45 00 20          	test   BYTE PTR [rbp+0x0],0x20
35ca:	75 14                	jne    35e0 <readlinebuffer_delim+0xf0>
35cc:	38 53 ff             	cmp    BYTE PTR [rbx-0x1],dl
35cf:	74 b5                	je     3586 <readlinebuffer_delim+0x96>
35d1:	45 89 fc             	mov    r12d,r15d
35d4:	89 d1                	mov    ecx,edx
35d6:	e9 69 ff ff ff       	jmp    3544 <readlinebuffer_delim+0x54>
35db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
35e0:	48 83 c4 18          	add    rsp,0x18
35e4:	31 c0                	xor    eax,eax
35e6:	5b                   	pop    rbx
35e7:	5d                   	pop    rbp
35e8:	41 5c                	pop    r12
35ea:	41 5d                	pop    r13
35ec:	41 5e                	pop    r14
35ee:	41 5f                	pop    r15
35f0:	c3                   	ret
35f1:	89 c1                	mov    ecx,eax
35f3:	e9 4c ff ff ff       	jmp    3544 <readlinebuffer_delim+0x54>
35f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
35ff:	00

0000000000003600 <readlinebuffer>:
3600:	ba 0a 00 00 00       	mov    edx,0xa
3605:	e9 e6 fe ff ff       	jmp    34f0 <readlinebuffer_delim>
360a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000003610 <freebuffer>:
3610:	48 8b 7f 10          	mov    rdi,QWORD PTR [rdi+0x10]
3614:	e9 57 e1 ff ff       	jmp    1770 <free@plt>
3619:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000003620 <memcasecmp>:
3620:	48 85 d2             	test   rdx,rdx
3623:	74 43                	je     3668 <memcasecmp+0x48>
3625:	41 54                	push   r12
3627:	55                   	push   rbp
3628:	49 89 f4             	mov    r12,rsi
362b:	53                   	push   rbx
362c:	48 89 fd             	mov    rbp,rdi
362f:	48 89 d3             	mov    rbx,rdx
3632:	e8 09 e1 ff ff       	call   1740 <__ctype_toupper_loc@plt>
3637:	31 c9                	xor    ecx,ecx
3639:	4c 8b 00             	mov    r8,QWORD PTR [rax]
363c:	eb 0b                	jmp    3649 <memcasecmp+0x29>
363e:	66 90                	xchg   ax,ax
3640:	48 83 c1 01          	add    rcx,0x1
3644:	48 39 d9             	cmp    rcx,rbx
3647:	74 14                	je     365d <memcasecmp+0x3d>
3649:	0f b6 44 0d 00       	movzx  eax,BYTE PTR [rbp+rcx*1+0x0]
364e:	45 0f b6 0c 0c       	movzx  r9d,BYTE PTR [r12+rcx*1]
3653:	41 8b 04 80          	mov    eax,DWORD PTR [r8+rax*4]
3657:	43 2b 04 88          	sub    eax,DWORD PTR [r8+r9*4]
365b:	74 e3                	je     3640 <memcasecmp+0x20>
365d:	5b                   	pop    rbx
365e:	5d                   	pop    rbp
365f:	41 5c                	pop    r12
3661:	c3                   	ret
3662:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3668:	31 c0                	xor    eax,eax
366a:	c3                   	ret
366b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003670 <posix2_version>:
3670:	53                   	push   rbx
3671:	48 8d 3d a1 3b 00 00 	lea    rdi,[rip+0x3ba1]        # 7219 <delimit_method_map+0x89>
3678:	bb 69 10 03 00       	mov    ebx,0x31069
367d:	48 83 ec 10          	sub    rsp,0x10
3681:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
3688:	00 00
368a:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
368f:	31 c0                	xor    eax,eax
3691:	e8 ca e0 ff ff       	call   1760 <getenv@plt>
3696:	48 85 c0             	test   rax,rax
3699:	74 05                	je     36a0 <posix2_version+0x30>
369b:	80 38 00             	cmp    BYTE PTR [rax],0x0
369e:	75 20                	jne    36c0 <posix2_version+0x50>
36a0:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
36a5:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
36ac:	00 00
36ae:	89 d8                	mov    eax,ebx
36b0:	75 47                	jne    36f9 <posix2_version+0x89>
36b2:	48 83 c4 10          	add    rsp,0x10
36b6:	5b                   	pop    rbx
36b7:	c3                   	ret
36b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
36bf:	00
36c0:	ba 0a 00 00 00       	mov    edx,0xa
36c5:	48 89 e6             	mov    rsi,rsp
36c8:	48 89 c7             	mov    rdi,rax
36cb:	e8 70 e2 ff ff       	call   1940 <strtol@plt>
36d0:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
36d4:	80 3a 00             	cmp    BYTE PTR [rdx],0x0
36d7:	75 c7                	jne    36a0 <posix2_version+0x30>
36d9:	48 3d 00 00 00 80    	cmp    rax,0xffffffff80000000
36df:	7c 11                	jl     36f2 <posix2_version+0x82>
36e1:	48 3d ff ff ff 7f    	cmp    rax,0x7fffffff
36e7:	bb ff ff ff 7f       	mov    ebx,0x7fffffff
36ec:	48 0f 4e d8          	cmovle rbx,rax
36f0:	eb ae                	jmp    36a0 <posix2_version+0x30>
36f2:	bb 00 00 00 80       	mov    ebx,0x80000000
36f7:	eb a7                	jmp    36a0 <posix2_version+0x30>
36f9:	e8 32 e1 ff ff       	call   1830 <__stack_chk_fail@plt>
36fe:	66 90                	xchg   ax,ax

0000000000003700 <set_program_name>:
3700:	48 85 ff             	test   rdi,rdi
3703:	53                   	push   rbx
3704:	74 77                	je     377d <set_program_name+0x7d>
3706:	be 2f 00 00 00       	mov    esi,0x2f
370b:	48 89 fb             	mov    rbx,rdi
370e:	e8 7d e1 ff ff       	call   1890 <strrchr@plt>
3713:	48 85 c0             	test   rax,rax
3716:	74 55                	je     376d <set_program_name+0x6d>
3718:	4c 8d 40 01          	lea    r8,[rax+0x1]
371c:	4c 89 c2             	mov    rdx,r8
371f:	48 29 da             	sub    rdx,rbx
3722:	48 83 fa 06          	cmp    rdx,0x6
3726:	7e 45                	jle    376d <set_program_name+0x6d>
3728:	48 8d 70 fa          	lea    rsi,[rax-0x6]
372c:	48 8d 3d 35 3b 00 00 	lea    rdi,[rip+0x3b35]        # 7268 <delimit_method_map+0xd8>
3733:	b9 07 00 00 00       	mov    ecx,0x7
3738:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
373a:	0f 97 c2             	seta   dl
373d:	80 da 00             	sbb    dl,0x0
3740:	84 d2                	test   dl,dl
3742:	75 29                	jne    376d <set_program_name+0x6d>
3744:	48 8d 3d 25 3b 00 00 	lea    rdi,[rip+0x3b25]        # 7270 <delimit_method_map+0xe0>
374b:	b9 03 00 00 00       	mov    ecx,0x3
3750:	4c 89 c6             	mov    rsi,r8
3753:	4c 89 c3             	mov    rbx,r8
3756:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
3758:	0f 97 c2             	seta   dl
375b:	80 da 00             	sbb    dl,0x0
375e:	84 d2                	test   dl,dl
3760:	75 0b                	jne    376d <set_program_name+0x6d>
3762:	48 8d 58 04          	lea    rbx,[rax+0x4]
3766:	48 89 1d 33 69 20 00 	mov    QWORD PTR [rip+0x206933],rbx        # 20a0a0 <__progname@@GLIBC_2.2.5>
376d:	48 89 1d bc 69 20 00 	mov    QWORD PTR [rip+0x2069bc],rbx        # 20a130 <program_name>
3774:	48 89 1d 4d 69 20 00 	mov    QWORD PTR [rip+0x20694d],rbx        # 20a0c8 <__progname_full@@GLIBC_2.2.5>
377b:	5b                   	pop    rbx
377c:	c3                   	ret
377d:	48 8b 0d 5c 69 20 00 	mov    rcx,QWORD PTR [rip+0x20695c]        # 20a0e0 <stderr@@GLIBC_2.2.5>
3784:	48 8d 3d a5 3a 00 00 	lea    rdi,[rip+0x3aa5]        # 7230 <delimit_method_map+0xa0>
378b:	ba 37 00 00 00       	mov    edx,0x37
3790:	be 01 00 00 00       	mov    esi,0x1
3795:	e8 c6 e2 ff ff       	call   1a60 <fwrite@plt>
379a:	e8 e1 df ff ff       	call   1780 <abort@plt>
379f:	90                   	nop

00000000000037a0 <gettext_quote.part.1>:
37a0:	55                   	push   rbp
37a1:	53                   	push   rbx
37a2:	48 89 fd             	mov    rbp,rdi
37a5:	89 f3                	mov    ebx,esi
37a7:	48 83 ec 08          	sub    rsp,0x8
37ab:	e8 e0 2c 00 00       	call   6490 <locale_charset>
37b0:	0f b6 10             	movzx  edx,BYTE PTR [rax]
37b3:	83 e2 df             	and    edx,0xffffffdf
37b6:	80 fa 55             	cmp    dl,0x55
37b9:	74 75                	je     3830 <gettext_quote.part.1+0x90>
37bb:	80 fa 47             	cmp    dl,0x47
37be:	74 20                	je     37e0 <gettext_quote.part.1+0x40>
37c0:	48 8d 05 bc 3a 00 00 	lea    rax,[rip+0x3abc]        # 7283 <delimit_method_map+0xf3>
37c7:	48 8d 15 b7 3a 00 00 	lea    rdx,[rip+0x3ab7]        # 7285 <delimit_method_map+0xf5>
37ce:	83 fb 09             	cmp    ebx,0x9
37d1:	48 0f 45 c2          	cmovne rax,rdx
37d5:	48 83 c4 08          	add    rsp,0x8
37d9:	5b                   	pop    rbx
37da:	5d                   	pop    rbp
37db:	c3                   	ret
37dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
37e0:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
37e4:	83 e2 df             	and    edx,0xffffffdf
37e7:	80 fa 42             	cmp    dl,0x42
37ea:	75 d4                	jne    37c0 <gettext_quote.part.1+0x20>
37ec:	80 78 02 31          	cmp    BYTE PTR [rax+0x2],0x31
37f0:	75 ce                	jne    37c0 <gettext_quote.part.1+0x20>
37f2:	80 78 03 38          	cmp    BYTE PTR [rax+0x3],0x38
37f6:	75 c8                	jne    37c0 <gettext_quote.part.1+0x20>
37f8:	80 78 04 30          	cmp    BYTE PTR [rax+0x4],0x30
37fc:	75 c2                	jne    37c0 <gettext_quote.part.1+0x20>
37fe:	80 78 05 33          	cmp    BYTE PTR [rax+0x5],0x33
3802:	75 bc                	jne    37c0 <gettext_quote.part.1+0x20>
3804:	80 78 06 30          	cmp    BYTE PTR [rax+0x6],0x30
3808:	75 b6                	jne    37c0 <gettext_quote.part.1+0x20>
380a:	80 78 07 00          	cmp    BYTE PTR [rax+0x7],0x0
380e:	75 b0                	jne    37c0 <gettext_quote.part.1+0x20>
3810:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
3814:	48 8d 05 61 3a 00 00 	lea    rax,[rip+0x3a61]        # 727c <delimit_method_map+0xec>
381b:	48 8d 15 5e 3a 00 00 	lea    rdx,[rip+0x3a5e]        # 7280 <delimit_method_map+0xf0>
3822:	48 0f 45 c2          	cmovne rax,rdx
3826:	48 83 c4 08          	add    rsp,0x8
382a:	5b                   	pop    rbx
382b:	5d                   	pop    rbp
382c:	c3                   	ret
382d:	0f 1f 00             	nop    DWORD PTR [rax]
3830:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
3834:	83 e2 df             	and    edx,0xffffffdf
3837:	80 fa 54             	cmp    dl,0x54
383a:	75 84                	jne    37c0 <gettext_quote.part.1+0x20>
383c:	0f b6 50 02          	movzx  edx,BYTE PTR [rax+0x2]
3840:	83 e2 df             	and    edx,0xffffffdf
3843:	80 fa 46             	cmp    dl,0x46
3846:	0f 85 74 ff ff ff    	jne    37c0 <gettext_quote.part.1+0x20>
384c:	80 78 03 2d          	cmp    BYTE PTR [rax+0x3],0x2d
3850:	0f 85 6a ff ff ff    	jne    37c0 <gettext_quote.part.1+0x20>
3856:	80 78 04 38          	cmp    BYTE PTR [rax+0x4],0x38
385a:	0f 85 60 ff ff ff    	jne    37c0 <gettext_quote.part.1+0x20>
3860:	80 78 05 00          	cmp    BYTE PTR [rax+0x5],0x0
3864:	0f 85 56 ff ff ff    	jne    37c0 <gettext_quote.part.1+0x20>
386a:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
386e:	48 8d 05 ff 39 00 00 	lea    rax,[rip+0x39ff]        # 7274 <delimit_method_map+0xe4>
3875:	48 8d 15 fc 39 00 00 	lea    rdx,[rip+0x39fc]        # 7278 <delimit_method_map+0xe8>
387c:	48 0f 45 c2          	cmovne rax,rdx
3880:	48 83 c4 08          	add    rsp,0x8
3884:	5b                   	pop    rbx
3885:	5d                   	pop    rbp
3886:	c3                   	ret
3887:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
388e:	00 00

0000000000003890 <quotearg_buffer_restyled>:
3890:	41 57                	push   r15
3892:	41 56                	push   r14
3894:	45 89 c7             	mov    r15d,r8d
3897:	41 55                	push   r13
3899:	41 54                	push   r12
389b:	49 89 fe             	mov    r14,rdi
389e:	55                   	push   rbp
389f:	53                   	push   rbx
38a0:	44 89 cb             	mov    ebx,r9d
38a3:	49 89 f5             	mov    r13,rsi
38a6:	48 89 cd             	mov    rbp,rcx
38a9:	83 e3 02             	and    ebx,0x2
38ac:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
38b3:	48 8b 84 24 f0 00 00 	mov    rax,QWORD PTR [rsp+0xf0]
38ba:	00
38bb:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
38c0:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
38c5:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
38ca:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
38cf:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
38d6:	00
38d7:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
38dc:	48 8b 84 24 00 01 00 	mov    rax,QWORD PTR [rsp+0x100]
38e3:	00
38e4:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
38e9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
38f0:	00 00
38f2:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
38f9:	00
38fa:	31 c0                	xor    eax,eax
38fc:	e8 0f df ff ff       	call   1810 <__ctype_get_mb_cur_max@plt>
3901:	41 83 ff 0a          	cmp    r15d,0xa
3905:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
390a:	0f 87 af 11 00 00    	ja     4abf <quotearg_buffer_restyled+0x122f>
3910:	48 8d 0d c9 39 00 00 	lea    rcx,[rip+0x39c9]        # 72e0 <delimit_method_map+0x150>
3917:	44 89 fa             	mov    edx,r15d
391a:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
391e:	48 01 c8             	add    rax,rcx
3921:	ff e0                	jmp    rax
3923:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3928:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
392d:	45 31 e4             	xor    r12d,r12d
3930:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3937:	00 00
3939:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
393e:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
3943:	48 8d 05 3b 39 00 00 	lea    rax,[rip+0x393b]        # 7285 <delimit_method_map+0xf5>
394a:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
3951:	00 00
3953:	45 31 ff             	xor    r15d,r15d
3956:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
395d:	00
395e:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3963:	45 31 db             	xor    r11d,r11d
3966:	48 89 e8             	mov    rax,rbp
3969:	45 89 e0             	mov    r8d,r12d
396c:	4c 89 dd             	mov    rbp,r11
396f:	49 89 c3             	mov    r11,rax
3972:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3978:	49 39 eb             	cmp    r11,rbp
397b:	41 0f 95 c4          	setne  r12b
397f:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
3983:	75 0d                	jne    3992 <quotearg_buffer_restyled+0x102>
3985:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
398a:	80 3c 28 00          	cmp    BYTE PTR [rax+rbp*1],0x0
398e:	41 0f 95 c4          	setne  r12b
3992:	45 84 e4             	test   r12b,r12b
3995:	0f 84 55 06 00 00    	je     3ff0 <quotearg_buffer_restyled+0x760>
399b:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
39a0:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
39a5:	4c 8d 0c 2f          	lea    r9,[rdi+rbp*1]
39a9:	0f 95 c0             	setne  al
39ac:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
39b0:	41 89 c2             	mov    r10d,eax
39b3:	0f 84 a7 00 00 00    	je     3a60 <quotearg_buffer_restyled+0x1d0>
39b9:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
39be:	48 85 c0             	test   rax,rax
39c1:	0f 84 29 04 00 00    	je     3df0 <quotearg_buffer_restyled+0x560>
39c7:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
39cb:	48 8d 5c 05 00       	lea    rbx,[rbp+rax*1+0x0]
39d0:	75 2e                	jne    3a00 <quotearg_buffer_restyled+0x170>
39d2:	48 83 f8 01          	cmp    rax,0x1
39d6:	76 28                	jbe    3a00 <quotearg_buffer_restyled+0x170>
39d8:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
39dd:	44 88 54 24 30       	mov    BYTE PTR [rsp+0x30],r10b
39e2:	4c 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],r9
39e7:	e8 34 de ff ff       	call   1820 <strlen@plt>
39ec:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
39f2:	44 0f b6 54 24 30    	movzx  r10d,BYTE PTR [rsp+0x30]
39f8:	49 89 c3             	mov    r11,rax
39fb:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
3a00:	4c 39 db             	cmp    rbx,r11
3a03:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
3a08:	0f 87 b2 05 00 00    	ja     3fc0 <quotearg_buffer_restyled+0x730>
3a0e:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
3a13:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
3a18:	4c 89 cf             	mov    rdi,r9
3a1b:	4c 89 5c 24 40       	mov    QWORD PTR [rsp+0x40],r11
3a20:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
3a25:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
3a2a:	e8 d1 de ff ff       	call   1900 <memcmp@plt>
3a2f:	85 c0                	test   eax,eax
3a31:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
3a36:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
3a3c:	4c 8b 5c 24 40       	mov    r11,QWORD PTR [rsp+0x40]
3a41:	0f 85 79 05 00 00    	jne    3fc0 <quotearg_buffer_restyled+0x730>
3a47:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3a4c:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
3a52:	0f 85 7d 0f 00 00    	jne    49d5 <quotearg_buffer_restyled+0x1145>
3a58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3a5f:	00
3a60:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
3a64:	80 fb 7e             	cmp    bl,0x7e
3a67:	0f 87 1b 03 00 00    	ja     3d88 <quotearg_buffer_restyled+0x4f8>
3a6d:	48 8d 0d 98 38 00 00 	lea    rcx,[rip+0x3898]        # 730c <delimit_method_map+0x17c>
3a74:	0f b6 d3             	movzx  edx,bl
3a77:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
3a7b:	48 01 c8             	add    rax,rcx
3a7e:	ff e0                	jmp    rax
3a80:	45 31 d2             	xor    r10d,r10d
3a83:	49 83 fb 01          	cmp    r11,0x1
3a87:	0f 95 c0             	setne  al
3a8a:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
3a8e:	75 0c                	jne    3a9c <quotearg_buffer_restyled+0x20c>
3a90:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
3a95:	80 78 01 00          	cmp    BYTE PTR [rax+0x1],0x0
3a99:	0f 95 c0             	setne  al
3a9c:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3aa1:	0f 94 c2             	sete   dl
3aa4:	84 c0                	test   al,al
3aa6:	0f 84 4c 02 00 00    	je     3cf8 <quotearg_buffer_restyled+0x468>
3aac:	45 31 e4             	xor    r12d,r12d
3aaf:	31 c0                	xor    eax,eax
3ab1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3ab8:	80 7c 24 0d 01       	cmp    BYTE PTR [rsp+0xd],0x1
3abd:	0f 85 0f 01 00 00    	jne    3bd2 <quotearg_buffer_restyled+0x342>
3ac3:	84 d2                	test   dl,dl
3ac5:	0f 85 07 01 00 00    	jne    3bd2 <quotearg_buffer_restyled+0x342>
3acb:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
3ad0:	48 85 f6             	test   rsi,rsi
3ad3:	74 14                	je     3ae9 <quotearg_buffer_restyled+0x259>
3ad5:	89 da                	mov    edx,ebx
3ad7:	c0 ea 05             	shr    dl,0x5
3ada:	0f b6 d2             	movzx  edx,dl
3add:	8b 14 96             	mov    edx,DWORD PTR [rsi+rdx*4]
3ae0:	0f a3 da             	bt     edx,ebx
3ae3:	0f 82 4a 01 00 00    	jb     3c33 <quotearg_buffer_restyled+0x3a3>
3ae9:	45 84 d2             	test   r10b,r10b
3aec:	0f 85 41 01 00 00    	jne    3c33 <quotearg_buffer_restyled+0x3a3>
3af2:	83 f0 01             	xor    eax,0x1
3af5:	48 83 c5 01          	add    rbp,0x1
3af9:	44 21 c0             	and    eax,r8d
3afc:	84 c0                	test   al,al
3afe:	74 20                	je     3b20 <quotearg_buffer_restyled+0x290>
3b00:	4d 39 fd             	cmp    r13,r15
3b03:	76 05                	jbe    3b0a <quotearg_buffer_restyled+0x27a>
3b05:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
3b0a:	49 8d 47 01          	lea    rax,[r15+0x1]
3b0e:	49 39 c5             	cmp    r13,rax
3b11:	76 06                	jbe    3b19 <quotearg_buffer_restyled+0x289>
3b13:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
3b19:	49 83 c7 02          	add    r15,0x2
3b1d:	45 31 c0             	xor    r8d,r8d
3b20:	4d 39 ef             	cmp    r15,r13
3b23:	73 04                	jae    3b29 <quotearg_buffer_restyled+0x299>
3b25:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
3b29:	0f b6 7c 24 0e       	movzx  edi,BYTE PTR [rsp+0xe]
3b2e:	49 83 c7 01          	add    r15,0x1
3b32:	b8 00 00 00 00       	mov    eax,0x0
3b37:	45 84 e4             	test   r12b,r12b
3b3a:	0f 44 f8             	cmove  edi,eax
3b3d:	40 88 7c 24 0e       	mov    BYTE PTR [rsp+0xe],dil
3b42:	e9 31 fe ff ff       	jmp    3978 <quotearg_buffer_restyled+0xe8>
3b47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
3b4e:	00 00
3b50:	45 31 d2             	xor    r10d,r10d
3b53:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
3b57:	83 f8 02             	cmp    eax,0x2
3b5a:	0f 84 b8 05 00 00    	je     4118 <quotearg_buffer_restyled+0x888>
3b60:	83 f8 05             	cmp    eax,0x5
3b63:	0f 84 6f 05 00 00    	je     40d8 <quotearg_buffer_restyled+0x848>
3b69:	83 f8 02             	cmp    eax,0x2
3b6c:	bb 3f 00 00 00       	mov    ebx,0x3f
3b71:	0f 94 c2             	sete   dl
3b74:	45 31 e4             	xor    r12d,r12d
3b77:	31 c0                	xor    eax,eax
3b79:	e9 3a ff ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
3b7e:	66 90                	xchg   ax,ax
3b80:	45 31 d2             	xor    r10d,r10d
3b83:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3b88:	0f 84 02 05 00 00    	je     4090 <quotearg_buffer_restyled+0x800>
3b8e:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
3b93:	31 d2                	xor    edx,edx
3b95:	31 c0                	xor    eax,eax
3b97:	bb 27 00 00 00       	mov    ebx,0x27
3b9c:	e9 17 ff ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
3ba1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3ba8:	ba 09 00 00 00       	mov    edx,0x9
3bad:	bb 74 00 00 00       	mov    ebx,0x74
3bb2:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3bb7:	0f 94 c0             	sete   al
3bba:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
3bbe:	0f 85 4a 01 00 00    	jne    3d0e <quotearg_buffer_restyled+0x47e>
3bc4:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3bc9:	75 65                	jne    3c30 <quotearg_buffer_restyled+0x3a0>
3bcb:	89 d3                	mov    ebx,edx
3bcd:	45 31 e4             	xor    r12d,r12d
3bd0:	31 c0                	xor    eax,eax
3bd2:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3bd7:	0f 85 ee fe ff ff    	jne    3acb <quotearg_buffer_restyled+0x23b>
3bdd:	e9 07 ff ff ff       	jmp    3ae9 <quotearg_buffer_restyled+0x259>
3be2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3be8:	ba 08 00 00 00       	mov    edx,0x8
3bed:	bb 62 00 00 00       	mov    ebx,0x62
3bf2:	eb d0                	jmp    3bc4 <quotearg_buffer_restyled+0x334>
3bf4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3bf8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3bfd:	0f 84 cd 03 00 00    	je     3fd0 <quotearg_buffer_restyled+0x740>
3c03:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3c08:	0f 84 12 02 00 00    	je     3e20 <quotearg_buffer_restyled+0x590>
3c0e:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3c13:	0f 84 07 02 00 00    	je     3e20 <quotearg_buffer_restyled+0x590>
3c19:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
3c1f:	0f 85 b6 03 00 00    	jne    3fdb <quotearg_buffer_restyled+0x74b>
3c25:	bb 5c 00 00 00       	mov    ebx,0x5c
3c2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3c30:	45 31 e4             	xor    r12d,r12d
3c33:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3c38:	0f 94 c2             	sete   dl
3c3b:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3c40:	89 d0                	mov    eax,edx
3c42:	0f 85 50 08 00 00    	jne    4498 <quotearg_buffer_restyled+0xc08>
3c48:	44 89 c0             	mov    eax,r8d
3c4b:	83 f0 01             	xor    eax,0x1
3c4e:	20 d0                	and    al,dl
3c50:	74 2f                	je     3c81 <quotearg_buffer_restyled+0x3f1>
3c52:	4d 39 fd             	cmp    r13,r15
3c55:	76 05                	jbe    3c5c <quotearg_buffer_restyled+0x3cc>
3c57:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
3c5c:	49 8d 57 01          	lea    rdx,[r15+0x1]
3c60:	49 39 d5             	cmp    r13,rdx
3c63:	76 06                	jbe    3c6b <quotearg_buffer_restyled+0x3db>
3c65:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
3c6b:	49 8d 57 02          	lea    rdx,[r15+0x2]
3c6f:	49 39 d5             	cmp    r13,rdx
3c72:	76 06                	jbe    3c7a <quotearg_buffer_restyled+0x3ea>
3c74:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
3c7a:	49 83 c7 03          	add    r15,0x3
3c7e:	41 89 c0             	mov    r8d,eax
3c81:	4d 39 fd             	cmp    r13,r15
3c84:	76 05                	jbe    3c8b <quotearg_buffer_restyled+0x3fb>
3c86:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
3c8b:	49 83 c7 01          	add    r15,0x1
3c8f:	48 83 c5 01          	add    rbp,0x1
3c93:	e9 88 fe ff ff       	jmp    3b20 <quotearg_buffer_restyled+0x290>
3c98:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3c9f:	00
3ca0:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3ca5:	0f 85 c8 01 00 00    	jne    3e73 <quotearg_buffer_restyled+0x5e3>
3cab:	31 d2                	xor    edx,edx
3cad:	f6 44 24 78 01       	test   BYTE PTR [rsp+0x78],0x1
3cb2:	0f 84 13 ff ff ff    	je     3bcb <quotearg_buffer_restyled+0x33b>
3cb8:	48 83 c5 01          	add    rbp,0x1
3cbc:	e9 b7 fc ff ff       	jmp    3978 <quotearg_buffer_restyled+0xe8>
3cc1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3cc8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3ccd:	0f 94 c2             	sete   dl
3cd0:	31 c0                	xor    eax,eax
3cd2:	e9 e1 fd ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
3cd7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
3cde:	00 00
3ce0:	ba 07 00 00 00       	mov    edx,0x7
3ce5:	bb 61 00 00 00       	mov    ebx,0x61
3cea:	e9 d5 fe ff ff       	jmp    3bc4 <quotearg_buffer_restyled+0x334>
3cef:	90                   	nop
3cf0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3cf5:	0f 94 c2             	sete   dl
3cf8:	48 85 ed             	test   rbp,rbp
3cfb:	0f 85 ab fd ff ff    	jne    3aac <quotearg_buffer_restyled+0x21c>
3d01:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
3d06:	20 d0                	and    al,dl
3d08:	0f 84 aa fd ff ff    	je     3ab8 <quotearg_buffer_restyled+0x228>
3d0e:	4c 89 dd             	mov    rbp,r11
3d11:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
3d18:	00
3d19:	e9 fb 06 00 00       	jmp    4419 <quotearg_buffer_restyled+0xb89>
3d1e:	66 90                	xchg   ax,ax
3d20:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3d25:	0f 94 c2             	sete   dl
3d28:	45 31 e4             	xor    r12d,r12d
3d2b:	eb d4                	jmp    3d01 <quotearg_buffer_restyled+0x471>
3d2d:	0f 1f 00             	nop    DWORD PTR [rax]
3d30:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3d35:	bb 20 00 00 00       	mov    ebx,0x20
3d3a:	0f 94 c2             	sete   dl
3d3d:	eb c2                	jmp    3d01 <quotearg_buffer_restyled+0x471>
3d3f:	90                   	nop
3d40:	ba 0d 00 00 00       	mov    edx,0xd
3d45:	bb 72 00 00 00       	mov    ebx,0x72
3d4a:	e9 63 fe ff ff       	jmp    3bb2 <quotearg_buffer_restyled+0x322>
3d4f:	90                   	nop
3d50:	ba 0c 00 00 00       	mov    edx,0xc
3d55:	bb 66 00 00 00       	mov    ebx,0x66
3d5a:	e9 65 fe ff ff       	jmp    3bc4 <quotearg_buffer_restyled+0x334>
3d5f:	90                   	nop
3d60:	ba 0b 00 00 00       	mov    edx,0xb
3d65:	bb 76 00 00 00       	mov    ebx,0x76
3d6a:	e9 55 fe ff ff       	jmp    3bc4 <quotearg_buffer_restyled+0x334>
3d6f:	90                   	nop
3d70:	ba 0a 00 00 00       	mov    edx,0xa
3d75:	bb 6e 00 00 00       	mov    ebx,0x6e
3d7a:	e9 33 fe ff ff       	jmp    3bb2 <quotearg_buffer_restyled+0x322>
3d7f:	90                   	nop
3d80:	45 31 d2             	xor    r10d,r10d
3d83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3d88:	48 83 7c 24 58 01    	cmp    QWORD PTR [rsp+0x58],0x1
3d8e:	0f 85 a4 03 00 00    	jne    4138 <quotearg_buffer_restyled+0x8a8>
3d94:	4c 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],r11
3d99:	44 88 44 24 30       	mov    BYTE PTR [rsp+0x30],r8b
3d9e:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
3da3:	e8 f8 dc ff ff       	call   1aa0 <__ctype_b_loc@plt>
3da8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
3dab:	0f b6 d3             	movzx  edx,bl
3dae:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
3db4:	44 0f b6 44 24 30    	movzx  r8d,BYTE PTR [rsp+0x30]
3dba:	4c 8b 5c 24 38       	mov    r11,QWORD PTR [rsp+0x38]
3dbf:	bf 01 00 00 00       	mov    edi,0x1
3dc4:	0f b7 04 51          	movzx  eax,WORD PTR [rcx+rdx*2]
3dc8:	66 25 00 40          	and    ax,0x4000
3dcc:	41 0f 95 c4          	setne  r12b
3dd0:	0f 94 c0             	sete   al
3dd3:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
3dd7:	84 c0                	test   al,al
3dd9:	0f 85 92 09 00 00    	jne    4771 <quotearg_buffer_restyled+0xee1>
3ddf:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3de4:	0f 94 c2             	sete   dl
3de7:	e9 cc fc ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
3dec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3df0:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
3df4:	80 fb 7e             	cmp    bl,0x7e
3df7:	77 87                	ja     3d80 <quotearg_buffer_restyled+0x4f0>
3df9:	48 8d 0d 08 37 00 00 	lea    rcx,[rip+0x3708]        # 7508 <delimit_method_map+0x378>
3e00:	0f b6 d3             	movzx  edx,bl
3e03:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
3e07:	48 01 c8             	add    rax,rcx
3e0a:	ff e0                	jmp    rax
3e0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3e10:	45 31 d2             	xor    r10d,r10d
3e13:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3e18:	0f 85 f0 fd ff ff    	jne    3c0e <quotearg_buffer_restyled+0x37e>
3e1e:	66 90                	xchg   ax,ax
3e20:	ba 5c 00 00 00       	mov    edx,0x5c
3e25:	bb 5c 00 00 00       	mov    ebx,0x5c
3e2a:	e9 95 fd ff ff       	jmp    3bc4 <quotearg_buffer_restyled+0x334>
3e2f:	90                   	nop
3e30:	ba 0c 00 00 00       	mov    edx,0xc
3e35:	45 31 d2             	xor    r10d,r10d
3e38:	bb 66 00 00 00       	mov    ebx,0x66
3e3d:	e9 82 fd ff ff       	jmp    3bc4 <quotearg_buffer_restyled+0x334>
3e42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3e48:	ba 0a 00 00 00       	mov    edx,0xa
3e4d:	45 31 d2             	xor    r10d,r10d
3e50:	bb 6e 00 00 00       	mov    ebx,0x6e
3e55:	e9 58 fd ff ff       	jmp    3bb2 <quotearg_buffer_restyled+0x322>
3e5a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3e60:	bb 61 00 00 00       	mov    ebx,0x61
3e65:	e9 c6 fd ff ff       	jmp    3c30 <quotearg_buffer_restyled+0x3a0>
3e6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3e70:	45 31 d2             	xor    r10d,r10d
3e73:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3e78:	0f 94 c2             	sete   dl
3e7b:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3e80:	0f 85 94 0b 00 00    	jne    4a1a <quotearg_buffer_restyled+0x118a>
3e86:	44 89 c0             	mov    eax,r8d
3e89:	4c 89 f9             	mov    rcx,r15
3e8c:	83 f0 01             	xor    eax,0x1
3e8f:	20 d0                	and    al,dl
3e91:	74 2d                	je     3ec0 <quotearg_buffer_restyled+0x630>
3e93:	4d 39 fd             	cmp    r13,r15
3e96:	76 05                	jbe    3e9d <quotearg_buffer_restyled+0x60d>
3e98:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
3e9d:	49 8d 4f 01          	lea    rcx,[r15+0x1]
3ea1:	49 39 cd             	cmp    r13,rcx
3ea4:	76 06                	jbe    3eac <quotearg_buffer_restyled+0x61c>
3ea6:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
3eac:	49 8d 4f 02          	lea    rcx,[r15+0x2]
3eb0:	49 39 cd             	cmp    r13,rcx
3eb3:	0f 87 30 06 00 00    	ja     44e9 <quotearg_buffer_restyled+0xc59>
3eb9:	49 8d 4f 03          	lea    rcx,[r15+0x3]
3ebd:	41 89 c0             	mov    r8d,eax
3ec0:	49 39 cd             	cmp    r13,rcx
3ec3:	76 05                	jbe    3eca <quotearg_buffer_restyled+0x63a>
3ec5:	41 c6 04 0e 5c       	mov    BYTE PTR [r14+rcx*1],0x5c
3eca:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3ecf:	4c 8d 79 01          	lea    r15,[rcx+0x1]
3ed3:	0f 84 00 06 00 00    	je     44d9 <quotearg_buffer_restyled+0xc49>
3ed9:	48 8d 45 01          	lea    rax,[rbp+0x1]
3edd:	4c 39 d8             	cmp    rax,r11
3ee0:	73 19                	jae    3efb <quotearg_buffer_restyled+0x66b>
3ee2:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
3ee7:	0f b6 44 28 01       	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
3eec:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
3ef0:	83 e8 30             	sub    eax,0x30
3ef3:	3c 09                	cmp    al,0x9
3ef5:	0f 86 2e 08 00 00    	jbe    4729 <quotearg_buffer_restyled+0xe99>
3efb:	44 89 e0             	mov    eax,r12d
3efe:	bb 30 00 00 00       	mov    ebx,0x30
3f03:	45 31 e4             	xor    r12d,r12d
3f06:	e9 ad fb ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
3f0b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3f10:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3f15:	45 89 d4             	mov    r12d,r10d
3f18:	0f 94 c2             	sete   dl
3f1b:	45 31 d2             	xor    r10d,r10d
3f1e:	31 c0                	xor    eax,eax
3f20:	e9 93 fb ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
3f25:	0f 1f 00             	nop    DWORD PTR [rax]
3f28:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3f2d:	0f 94 c2             	sete   dl
3f30:	45 31 d2             	xor    r10d,r10d
3f33:	e9 c0 fd ff ff       	jmp    3cf8 <quotearg_buffer_restyled+0x468>
3f38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3f3f:	00
3f40:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3f45:	0f 94 c2             	sete   dl
3f48:	45 31 d2             	xor    r10d,r10d
3f4b:	45 31 e4             	xor    r12d,r12d
3f4e:	e9 ae fd ff ff       	jmp    3d01 <quotearg_buffer_restyled+0x471>
3f53:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3f58:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3f5d:	45 89 d4             	mov    r12d,r10d
3f60:	bb 20 00 00 00       	mov    ebx,0x20
3f65:	0f 94 c2             	sete   dl
3f68:	45 31 d2             	xor    r10d,r10d
3f6b:	e9 91 fd ff ff       	jmp    3d01 <quotearg_buffer_restyled+0x471>
3f70:	ba 0d 00 00 00       	mov    edx,0xd
3f75:	45 31 d2             	xor    r10d,r10d
3f78:	bb 72 00 00 00       	mov    ebx,0x72
3f7d:	e9 30 fc ff ff       	jmp    3bb2 <quotearg_buffer_restyled+0x322>
3f82:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3f88:	bb 76 00 00 00       	mov    ebx,0x76
3f8d:	e9 9e fc ff ff       	jmp    3c30 <quotearg_buffer_restyled+0x3a0>
3f92:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3f98:	ba 09 00 00 00       	mov    edx,0x9
3f9d:	45 31 d2             	xor    r10d,r10d
3fa0:	bb 74 00 00 00       	mov    ebx,0x74
3fa5:	e9 08 fc ff ff       	jmp    3bb2 <quotearg_buffer_restyled+0x322>
3faa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3fb0:	bb 62 00 00 00       	mov    ebx,0x62
3fb5:	e9 76 fc ff ff       	jmp    3c30 <quotearg_buffer_restyled+0x3a0>
3fba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3fc0:	45 31 d2             	xor    r10d,r10d
3fc3:	e9 98 fa ff ff       	jmp    3a60 <quotearg_buffer_restyled+0x1d0>
3fc8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3fcf:	00
3fd0:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3fd5:	0f 85 65 09 00 00    	jne    4940 <quotearg_buffer_restyled+0x10b0>
3fdb:	48 83 c5 01          	add    rbp,0x1
3fdf:	44 89 c0             	mov    eax,r8d
3fe2:	45 31 e4             	xor    r12d,r12d
3fe5:	bb 5c 00 00 00       	mov    ebx,0x5c
3fea:	e9 0d fb ff ff       	jmp    3afc <quotearg_buffer_restyled+0x26c>
3fef:	90                   	nop
3ff0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3ff5:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
3ffa:	45 89 c4             	mov    r12d,r8d
3ffd:	4c 89 dd             	mov    rbp,r11
4000:	0f 94 c2             	sete   dl
4003:	89 d8                	mov    eax,ebx
4005:	4d 85 ff             	test   r15,r15
4008:	0f 94 c1             	sete   cl
400b:	21 d0                	and    eax,edx
400d:	20 c8                	and    al,cl
400f:	0f 85 61 0a 00 00    	jne    4a76 <quotearg_buffer_restyled+0x11e6>
4015:	89 d8                	mov    eax,ebx
4017:	83 f0 01             	xor    eax,0x1
401a:	20 c2                	and    dl,al
401c:	0f 84 6a 09 00 00    	je     498c <quotearg_buffer_restyled+0x10fc>
4022:	80 7c 24 7c 00       	cmp    BYTE PTR [rsp+0x7c],0x0
4027:	0f 84 5d 09 00 00    	je     498a <quotearg_buffer_restyled+0x10fa>
402d:	80 7c 24 0e 00       	cmp    BYTE PTR [rsp+0xe],0x0
4032:	0f 85 f5 09 00 00    	jne    4a2d <quotearg_buffer_restyled+0x119d>
4038:	4d 85 ed             	test   r13,r13
403b:	0f 94 c0             	sete   al
403e:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
4044:	0f 95 c2             	setne  dl
4047:	20 d0                	and    al,dl
4049:	0f 84 1d 0a 00 00    	je     4a6c <quotearg_buffer_restyled+0x11dc>
404f:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
4054:	48 8d 1d 2a 32 00 00 	lea    rbx,[rip+0x322a]        # 7285 <delimit_method_map+0xf5>
405b:	41 c6 06 27          	mov    BYTE PTR [r14],0x27
405f:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4066:	00
4067:	41 bf 01 00 00 00    	mov    r15d,0x1
406d:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
4074:	00 00
4076:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
407b:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
4080:	88 44 24 7c          	mov    BYTE PTR [rsp+0x7c],al
4084:	e9 da f8 ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
4089:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4090:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4095:	0f 85 a5 08 00 00    	jne    4940 <quotearg_buffer_restyled+0x10b0>
409b:	4d 85 ed             	test   r13,r13
409e:	0f 84 fc 03 00 00    	je     44a0 <quotearg_buffer_restyled+0xc10>
40a4:	31 d2                	xor    edx,edx
40a6:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
40ac:	0f 85 ee 03 00 00    	jne    44a0 <quotearg_buffer_restyled+0xc10>
40b2:	4c 89 6c 24 50       	mov    QWORD PTR [rsp+0x50],r13
40b7:	49 83 c7 03          	add    r15,0x3
40bb:	31 c0                	xor    eax,eax
40bd:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
40c2:	45 31 c0             	xor    r8d,r8d
40c5:	49 89 d5             	mov    r13,rdx
40c8:	bb 27 00 00 00       	mov    ebx,0x27
40cd:	e9 17 fa ff ff       	jmp    3ae9 <quotearg_buffer_restyled+0x259>
40d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
40d8:	f6 44 24 78 04       	test   BYTE PTR [rsp+0x78],0x4
40dd:	74 21                	je     4100 <quotearg_buffer_restyled+0x870>
40df:	48 8d 4d 02          	lea    rcx,[rbp+0x2]
40e3:	4c 39 d9             	cmp    rcx,r11
40e6:	73 18                	jae    4100 <quotearg_buffer_restyled+0x870>
40e8:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
40ed:	80 7c 28 01 3f       	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
40f2:	0f 84 8a 07 00 00    	je     4882 <quotearg_buffer_restyled+0xff2>
40f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
40ff:	00
4100:	31 d2                	xor    edx,edx
4102:	45 31 e4             	xor    r12d,r12d
4105:	31 c0                	xor    eax,eax
4107:	bb 3f 00 00 00       	mov    ebx,0x3f
410c:	e9 a7 f9 ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
4111:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4118:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
411d:	0f 85 1d 08 00 00    	jne    4940 <quotearg_buffer_restyled+0x10b0>
4123:	45 31 e4             	xor    r12d,r12d
4126:	31 c0                	xor    eax,eax
4128:	bb 3f 00 00 00       	mov    ebx,0x3f
412d:	e9 b7 f9 ff ff       	jmp    3ae9 <quotearg_buffer_restyled+0x259>
4132:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4138:	48 8d 84 24 a0 00 00 	lea    rax,[rsp+0xa0]
413f:	00
4140:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
4144:	48 c7 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],0x0
414b:	00 00 00 00 00
4150:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
4155:	75 2d                	jne    4184 <quotearg_buffer_restyled+0x8f4>
4157:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
415c:	44 88 44 24 40       	mov    BYTE PTR [rsp+0x40],r8b
4161:	44 88 54 24 38       	mov    BYTE PTR [rsp+0x38],r10b
4166:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
416b:	e8 b0 d6 ff ff       	call   1820 <strlen@plt>
4170:	44 0f b6 44 24 40    	movzx  r8d,BYTE PTR [rsp+0x40]
4176:	44 0f b6 54 24 38    	movzx  r10d,BYTE PTR [rsp+0x38]
417c:	49 89 c3             	mov    r11,rax
417f:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
4184:	48 8d 84 24 9c 00 00 	lea    rax,[rsp+0x9c]
418b:	00
418c:	31 c9                	xor    ecx,ecx
418e:	88 5c 24 7e          	mov    BYTE PTR [rsp+0x7e],bl
4192:	44 88 44 24 7d       	mov    BYTE PTR [rsp+0x7d],r8b
4197:	48 89 cb             	mov    rbx,rcx
419a:	4c 89 8c 24 88 00 00 	mov    QWORD PTR [rsp+0x88],r9
41a1:	00
41a2:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
41a7:	44 88 54 24 7f       	mov    BYTE PTR [rsp+0x7f],r10b
41ac:	4c 89 bc 24 80 00 00 	mov    QWORD PTR [rsp+0x80],r15
41b3:	00
41b4:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
41b9:	4c 89 6c 24 70       	mov    QWORD PTR [rsp+0x70],r13
41be:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
41c3:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
41c8:	4c 8d 74 1d 00       	lea    r14,[rbp+rbx*1+0x0]
41cd:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
41d2:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
41d7:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
41dc:	4e 8d 2c 30          	lea    r13,[rax+r14*1]
41e0:	4c 29 f2             	sub    rdx,r14
41e3:	4c 89 ee             	mov    rsi,r13
41e6:	e8 95 21 00 00       	call   6380 <rpl_mbrtowc>
41eb:	48 85 c0             	test   rax,rax
41ee:	49 89 c7             	mov    r15,rax
41f1:	74 4e                	je     4241 <quotearg_buffer_restyled+0x9b1>
41f3:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
41f7:	0f 84 18 06 00 00    	je     4815 <quotearg_buffer_restyled+0xf85>
41fd:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
4201:	0f 84 9a 05 00 00    	je     47a1 <quotearg_buffer_restyled+0xf11>
4207:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
420c:	0f 94 c0             	sete   al
420f:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
4213:	0f 85 97 01 00 00    	jne    43b0 <quotearg_buffer_restyled+0xb20>
4219:	8b bc 24 9c 00 00 00 	mov    edi,DWORD PTR [rsp+0x9c]
4220:	e8 6b d8 ff ff       	call   1a90 <iswprint@plt>
4225:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
422a:	85 c0                	test   eax,eax
422c:	b8 00 00 00 00       	mov    eax,0x0
4231:	44 0f 44 e0          	cmove  r12d,eax
4235:	4c 01 fb             	add    rbx,r15
4238:	e8 43 d8 ff ff       	call   1a80 <mbsinit@plt>
423d:	85 c0                	test   eax,eax
423f:	74 82                	je     41c3 <quotearg_buffer_restyled+0x933>
4241:	44 89 e2             	mov    edx,r12d
4244:	48 89 df             	mov    rdi,rbx
4247:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
424d:	83 f2 01             	xor    edx,0x1
4250:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
4255:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
425b:	22 54 24 0d          	and    dl,BYTE PTR [rsp+0xd]
425f:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
4266:	00
4267:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
426c:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
4271:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
4276:	48 83 ff 01          	cmp    rdi,0x1
427a:	0f 86 fb 05 00 00    	jbe    487b <quotearg_buffer_restyled+0xfeb>
4280:	48 89 f9             	mov    rcx,rdi
4283:	31 f6                	xor    esi,esi
4285:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
428b:	48 01 e9             	add    rcx,rbp
428e:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
4293:	e9 b6 00 00 00       	jmp    434e <quotearg_buffer_restyled+0xabe>
4298:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
429f:	00
42a0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
42a5:	0f 94 c0             	sete   al
42a8:	45 84 c9             	test   r9b,r9b
42ab:	0f 85 af 04 00 00    	jne    4760 <quotearg_buffer_restyled+0xed0>
42b1:	44 89 c6             	mov    esi,r8d
42b4:	83 f6 01             	xor    esi,0x1
42b7:	40 20 f0             	and    al,sil
42ba:	74 2f                	je     42eb <quotearg_buffer_restyled+0xa5b>
42bc:	4d 39 fd             	cmp    r13,r15
42bf:	76 05                	jbe    42c6 <quotearg_buffer_restyled+0xa36>
42c1:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
42c6:	49 8d 77 01          	lea    rsi,[r15+0x1]
42ca:	49 39 f5             	cmp    r13,rsi
42cd:	76 06                	jbe    42d5 <quotearg_buffer_restyled+0xa45>
42cf:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
42d5:	49 8d 77 02          	lea    rsi,[r15+0x2]
42d9:	49 39 f5             	cmp    r13,rsi
42dc:	76 06                	jbe    42e4 <quotearg_buffer_restyled+0xa54>
42de:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
42e4:	49 83 c7 03          	add    r15,0x3
42e8:	41 89 c0             	mov    r8d,eax
42eb:	4d 39 fd             	cmp    r13,r15
42ee:	76 05                	jbe    42f5 <quotearg_buffer_restyled+0xa65>
42f0:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
42f5:	49 8d 47 01          	lea    rax,[r15+0x1]
42f9:	49 39 c5             	cmp    r13,rax
42fc:	76 0d                	jbe    430b <quotearg_buffer_restyled+0xa7b>
42fe:	89 d8                	mov    eax,ebx
4300:	c0 e8 06             	shr    al,0x6
4303:	83 c0 30             	add    eax,0x30
4306:	43 88 44 3e 01       	mov    BYTE PTR [r14+r15*1+0x1],al
430b:	49 8d 47 02          	lea    rax,[r15+0x2]
430f:	49 39 c5             	cmp    r13,rax
4312:	76 10                	jbe    4324 <quotearg_buffer_restyled+0xa94>
4314:	89 d8                	mov    eax,ebx
4316:	c0 e8 03             	shr    al,0x3
4319:	83 e0 07             	and    eax,0x7
431c:	83 c0 30             	add    eax,0x30
431f:	43 88 44 3e 02       	mov    BYTE PTR [r14+r15*1+0x2],al
4324:	83 e3 07             	and    ebx,0x7
4327:	48 83 c5 01          	add    rbp,0x1
432b:	49 83 c7 03          	add    r15,0x3
432f:	83 c3 30             	add    ebx,0x30
4332:	48 39 cd             	cmp    rbp,rcx
4335:	0f 83 e5 f7 ff ff    	jae    3b20 <quotearg_buffer_restyled+0x290>
433b:	89 d6                	mov    esi,edx
433d:	4d 39 fd             	cmp    r13,r15
4340:	76 04                	jbe    4346 <quotearg_buffer_restyled+0xab6>
4342:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
4346:	0f b6 1c 2f          	movzx  ebx,BYTE PTR [rdi+rbp*1]
434a:	49 83 c7 01          	add    r15,0x1
434e:	84 d2                	test   dl,dl
4350:	0f 85 4a ff ff ff    	jne    42a0 <quotearg_buffer_restyled+0xa10>
4356:	89 f0                	mov    eax,esi
4358:	83 f0 01             	xor    eax,0x1
435b:	44 21 c0             	and    eax,r8d
435e:	45 84 d2             	test   r10b,r10b
4361:	74 0e                	je     4371 <quotearg_buffer_restyled+0xae1>
4363:	4d 39 fd             	cmp    r13,r15
4366:	76 05                	jbe    436d <quotearg_buffer_restyled+0xadd>
4368:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
436d:	49 83 c7 01          	add    r15,0x1
4371:	48 83 c5 01          	add    rbp,0x1
4375:	48 39 cd             	cmp    rbp,rcx
4378:	0f 83 7e f7 ff ff    	jae    3afc <quotearg_buffer_restyled+0x26c>
437e:	84 c0                	test   al,al
4380:	0f 84 f8 03 00 00    	je     477e <quotearg_buffer_restyled+0xeee>
4386:	4d 39 fd             	cmp    r13,r15
4389:	76 05                	jbe    4390 <quotearg_buffer_restyled+0xb00>
438b:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
4390:	49 8d 47 01          	lea    rax,[r15+0x1]
4394:	49 39 c5             	cmp    r13,rax
4397:	76 06                	jbe    439f <quotearg_buffer_restyled+0xb0f>
4399:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
439f:	49 83 c7 02          	add    r15,0x2
43a3:	45 31 d2             	xor    r10d,r10d
43a6:	45 31 c0             	xor    r8d,r8d
43a9:	eb 92                	jmp    433d <quotearg_buffer_restyled+0xaad>
43ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
43b0:	49 83 ff 01          	cmp    r15,0x1
43b4:	0f 84 5f fe ff ff    	je     4219 <quotearg_buffer_restyled+0x989>
43ba:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
43bf:	4a 8d 0c 3f          	lea    rcx,[rdi+r15*1]
43c3:	4a 8d 54 37 01       	lea    rdx,[rdi+r14*1+0x1]
43c8:	4e 8d 04 31          	lea    r8,[rcx+r14*1]
43cc:	eb 0f                	jmp    43dd <quotearg_buffer_restyled+0xb4d>
43ce:	66 90                	xchg   ax,ax
43d0:	48 83 c2 01          	add    rdx,0x1
43d4:	49 39 d0             	cmp    r8,rdx
43d7:	0f 84 3c fe ff ff    	je     4219 <quotearg_buffer_restyled+0x989>
43dd:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
43e0:	83 e9 5b             	sub    ecx,0x5b
43e3:	80 f9 21             	cmp    cl,0x21
43e6:	77 e8                	ja     43d0 <quotearg_buffer_restyled+0xb40>
43e8:	be 01 00 00 00       	mov    esi,0x1
43ed:	48 d3 e6             	shl    rsi,cl
43f0:	48 89 f1             	mov    rcx,rsi
43f3:	48 be 2b 00 00 00 02 	movabs rsi,0x20000002b
43fa:	00 00 00
43fd:	48 85 f1             	test   rcx,rsi
4400:	74 ce                	je     43d0 <quotearg_buffer_restyled+0xb40>
4402:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
4407:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
440c:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
4411:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4418:	00
4419:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
441e:	74 10                	je     4430 <quotearg_buffer_restyled+0xba0>
4420:	84 c0                	test   al,al
4422:	b8 04 00 00 00       	mov    eax,0x4
4427:	0f 44 44 24 08       	cmove  eax,DWORD PTR [rsp+0x8]
442c:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
4430:	48 83 ec 08          	sub    rsp,0x8
4434:	48 89 e9             	mov    rcx,rbp
4437:	4c 89 ee             	mov    rsi,r13
443a:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
443e:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
4442:	4c 89 f7             	mov    rdi,r14
4445:	6a 00                	push   0x0
4447:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
444e:	00
444f:	44 8b 44 24 28       	mov    r8d,DWORD PTR [rsp+0x28]
4454:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4459:	41 83 e1 fd          	and    r9d,0xfffffffd
445d:	e8 2e f4 ff ff       	call   3890 <quotearg_buffer_restyled>
4462:	48 83 c4 20          	add    rsp,0x20
4466:	49 89 c7             	mov    r15,rax
4469:	48 8b 9c 24 a8 00 00 	mov    rbx,QWORD PTR [rsp+0xa8]
4470:	00
4471:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
4478:	00 00
447a:	4c 89 f8             	mov    rax,r15
447d:	0f 85 00 06 00 00    	jne    4a83 <quotearg_buffer_restyled+0x11f3>
4483:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
448a:	5b                   	pop    rbx
448b:	5d                   	pop    rbp
448c:	41 5c                	pop    r12
448e:	41 5d                	pop    r13
4490:	41 5e                	pop    r14
4492:	41 5f                	pop    r15
4494:	c3                   	ret
4495:	0f 1f 00             	nop    DWORD PTR [rax]
4498:	4c 89 dd             	mov    rbp,r11
449b:	e9 79 ff ff ff       	jmp    4419 <quotearg_buffer_restyled+0xb89>
44a0:	4d 39 fd             	cmp    r13,r15
44a3:	76 05                	jbe    44aa <quotearg_buffer_restyled+0xc1a>
44a5:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
44aa:	49 8d 47 01          	lea    rax,[r15+0x1]
44ae:	49 39 c5             	cmp    r13,rax
44b1:	76 06                	jbe    44b9 <quotearg_buffer_restyled+0xc29>
44b3:	43 c6 44 3e 01 5c    	mov    BYTE PTR [r14+r15*1+0x1],0x5c
44b9:	49 8d 47 02          	lea    rax,[r15+0x2]
44bd:	49 39 c5             	cmp    r13,rax
44c0:	0f 86 ec 05 00 00    	jbe    4ab2 <quotearg_buffer_restyled+0x1222>
44c6:	4c 89 ea             	mov    rdx,r13
44c9:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
44cf:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
44d4:	e9 d9 fb ff ff       	jmp    40b2 <quotearg_buffer_restyled+0x822>
44d9:	44 89 e0             	mov    eax,r12d
44dc:	bb 30 00 00 00       	mov    ebx,0x30
44e1:	45 31 e4             	xor    r12d,r12d
44e4:	e9 00 f6 ff ff       	jmp    3ae9 <quotearg_buffer_restyled+0x259>
44e9:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
44ef:	e9 c5 f9 ff ff       	jmp    3eb9 <quotearg_buffer_restyled+0x629>
44f4:	85 db                	test   ebx,ebx
44f6:	0f 85 27 f4 ff ff    	jne    3923 <quotearg_buffer_restyled+0x93>
44fc:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
4501:	4d 85 ed             	test   r13,r13
4504:	0f 85 90 05 00 00    	jne    4a9a <quotearg_buffer_restyled+0x120a>
450a:	48 8d 05 74 2d 00 00 	lea    rax,[rip+0x2d74]        # 7285 <delimit_method_map+0xf5>
4511:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4518:	00 00
451a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
451f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
4524:	45 31 e4             	xor    r12d,r12d
4527:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
452c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
4533:	00 00
4535:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
453a:	41 bf 01 00 00 00    	mov    r15d,0x1
4540:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4547:	00
4548:	e9 16 f4 ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
454d:	0f 1f 00             	nop    DWORD PTR [rax]
4550:	85 db                	test   ebx,ebx
4552:	0f 85 f5 03 00 00    	jne    494d <quotearg_buffer_restyled+0x10bd>
4558:	4d 85 ed             	test   r13,r13
455b:	0f 84 25 02 00 00    	je     4786 <quotearg_buffer_restyled+0xef6>
4561:	41 c6 06 22          	mov    BYTE PTR [r14],0x22
4565:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
456a:	45 31 e4             	xor    r12d,r12d
456d:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
4572:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4579:	00 00
457b:	48 8d 05 01 2d 00 00 	lea    rax,[rip+0x2d01]        # 7283 <delimit_method_map+0xf3>
4582:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
4587:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
458c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
4593:	00 00
4595:	41 bf 01 00 00 00    	mov    r15d,0x1
459b:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
45a0:	e9 be f3 ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
45a5:	48 8d 05 d7 2c 00 00 	lea    rax,[rip+0x2cd7]        # 7283 <delimit_method_map+0xf3>
45ac:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
45b1:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
45b6:	45 31 e4             	xor    r12d,r12d
45b9:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
45c0:	00 00
45c2:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
45c7:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
45cc:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
45d3:	00 00
45d5:	45 31 ff             	xor    r15d,r15d
45d8:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
45dd:	c7 44 24 08 05 00 00 	mov    DWORD PTR [rsp+0x8],0x5
45e4:	00
45e5:	e9 79 f3 ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
45ea:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
45ef:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
45f4:	45 31 e4             	xor    r12d,r12d
45f7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
45fe:	00 00
4600:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
4605:	45 31 ff             	xor    r15d,r15d
4608:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
460d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
4614:	00 00
4616:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
461d:	00 00
461f:	e9 3f f3 ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
4624:	83 7c 24 08 0a       	cmp    DWORD PTR [rsp+0x8],0xa
4629:	74 56                	je     4681 <quotearg_buffer_restyled+0xdf1>
462b:	48 8d 35 55 2c 00 00 	lea    rsi,[rip+0x2c55]        # 7287 <delimit_method_map+0xf7>
4632:	31 ff                	xor    edi,edi
4634:	ba 05 00 00 00       	mov    edx,0x5
4639:	e8 c2 d1 ff ff       	call   1800 <dcgettext@plt>
463e:	48 89 c1             	mov    rcx,rax
4641:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
4646:	48 8d 05 3a 2c 00 00 	lea    rax,[rip+0x2c3a]        # 7287 <delimit_method_map+0xf7>
464d:	48 39 c1             	cmp    rcx,rax
4650:	0f 84 98 03 00 00    	je     49ee <quotearg_buffer_restyled+0x115e>
4656:	48 8d 35 28 2c 00 00 	lea    rsi,[rip+0x2c28]        # 7285 <delimit_method_map+0xf5>
465d:	31 ff                	xor    edi,edi
465f:	ba 05 00 00 00       	mov    edx,0x5
4664:	e8 97 d1 ff ff       	call   1800 <dcgettext@plt>
4669:	48 89 c1             	mov    rcx,rax
466c:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
4671:	48 8d 05 0d 2c 00 00 	lea    rax,[rip+0x2c0d]        # 7285 <delimit_method_map+0xf5>
4678:	48 39 c1             	cmp    rcx,rax
467b:	0f 84 83 03 00 00    	je     4a04 <quotearg_buffer_restyled+0x1174>
4681:	45 31 ff             	xor    r15d,r15d
4684:	85 db                	test   ebx,ebx
4686:	0f 84 c1 01 00 00    	je     484d <quotearg_buffer_restyled+0xfbd>
468c:	85 db                	test   ebx,ebx
468e:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
4693:	0f 95 44 24 0f       	setne  BYTE PTR [rsp+0xf]
4698:	45 31 e4             	xor    r12d,r12d
469b:	48 89 df             	mov    rdi,rbx
469e:	e8 7d d1 ff ff       	call   1820 <strlen@plt>
46a3:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
46a8:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
46ad:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
46b2:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
46b7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
46be:	00 00
46c0:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
46c5:	e9 99 f2 ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
46ca:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
46cf:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
46d4:	45 31 e4             	xor    r12d,r12d
46d7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
46de:	00 00
46e0:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
46e5:	45 31 ff             	xor    r15d,r15d
46e8:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
46ed:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
46f4:	00 00
46f6:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
46fd:	00 00
46ff:	e9 5f f2 ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
4704:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4709:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
470e:	45 31 e4             	xor    r12d,r12d
4711:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4718:	00 00
471a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
471f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
4724:	e9 1a f2 ff ff       	jmp    3943 <quotearg_buffer_restyled+0xb3>
4729:	4d 39 fd             	cmp    r13,r15
472c:	76 05                	jbe    4733 <quotearg_buffer_restyled+0xea3>
472e:	43 c6 04 3e 30       	mov    BYTE PTR [r14+r15*1],0x30
4733:	48 8d 41 02          	lea    rax,[rcx+0x2]
4737:	49 39 c5             	cmp    r13,rax
473a:	76 06                	jbe    4742 <quotearg_buffer_restyled+0xeb2>
473c:	41 c6 44 0e 02 30    	mov    BYTE PTR [r14+rcx*1+0x2],0x30
4742:	44 89 e0             	mov    eax,r12d
4745:	4c 8d 79 03          	lea    r15,[rcx+0x3]
4749:	45 31 e4             	xor    r12d,r12d
474c:	bb 30 00 00 00       	mov    ebx,0x30
4751:	e9 62 f3 ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
4756:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
475d:	00 00 00
4760:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
4765:	4c 89 dd             	mov    rbp,r11
4768:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
476c:	e9 a8 fc ff ff       	jmp    4419 <quotearg_buffer_restyled+0xb89>
4771:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
4776:	45 31 e4             	xor    r12d,r12d
4779:	e9 02 fb ff ff       	jmp    4280 <quotearg_buffer_restyled+0x9f0>
477e:	45 31 d2             	xor    r10d,r10d
4781:	e9 b7 fb ff ff       	jmp    433d <quotearg_buffer_restyled+0xaad>
4786:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
478d:	00 00
478f:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4794:	45 31 e4             	xor    r12d,r12d
4797:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
479c:	e9 da fd ff ff       	jmp    457b <quotearg_buffer_restyled+0xceb>
47a1:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
47a6:	4c 89 f6             	mov    rsi,r14
47a9:	4c 89 e9             	mov    rcx,r13
47ac:	48 89 d8             	mov    rax,rbx
47af:	48 89 df             	mov    rdi,rbx
47b2:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
47b8:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
47bd:	4c 8b 8c 24 88 00 00 	mov    r9,QWORD PTR [rsp+0x88]
47c4:	00
47c5:	4c 39 de             	cmp    rsi,r11
47c8:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
47ce:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
47d5:	00
47d6:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
47db:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
47e0:	73 26                	jae    4808 <quotearg_buffer_restyled+0xf78>
47e2:	80 39 00             	cmp    BYTE PTR [rcx],0x0
47e5:	75 10                	jne    47f7 <quotearg_buffer_restyled+0xf67>
47e7:	eb 1f                	jmp    4808 <quotearg_buffer_restyled+0xf78>
47e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
47f0:	41 80 3c 01 00       	cmp    BYTE PTR [r9+rax*1],0x0
47f5:	74 0e                	je     4805 <quotearg_buffer_restyled+0xf75>
47f7:	48 83 c0 01          	add    rax,0x1
47fb:	48 8d 54 05 00       	lea    rdx,[rbp+rax*1+0x0]
4800:	49 39 d3             	cmp    r11,rdx
4803:	77 eb                	ja     47f0 <quotearg_buffer_restyled+0xf60>
4805:	48 89 c7             	mov    rdi,rax
4808:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
480d:	45 31 e4             	xor    r12d,r12d
4810:	e9 61 fa ff ff       	jmp    4276 <quotearg_buffer_restyled+0x9e6>
4815:	48 89 df             	mov    rdi,rbx
4818:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
481e:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
4823:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
4829:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
4830:	00
4831:	45 31 e4             	xor    r12d,r12d
4834:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
4839:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
483e:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
4843:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
4848:	e9 29 fa ff ff       	jmp    4276 <quotearg_buffer_restyled+0x9e6>
484d:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
4852:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
4855:	84 c0                	test   al,al
4857:	0f 84 2f fe ff ff    	je     468c <quotearg_buffer_restyled+0xdfc>
485d:	0f 1f 00             	nop    DWORD PTR [rax]
4860:	4d 39 fd             	cmp    r13,r15
4863:	76 04                	jbe    4869 <quotearg_buffer_restyled+0xfd9>
4865:	43 88 04 3e          	mov    BYTE PTR [r14+r15*1],al
4869:	49 83 c7 01          	add    r15,0x1
486d:	42 0f b6 04 3a       	movzx  eax,BYTE PTR [rdx+r15*1]
4872:	84 c0                	test   al,al
4874:	75 ea                	jne    4860 <quotearg_buffer_restyled+0xfd0>
4876:	e9 11 fe ff ff       	jmp    468c <quotearg_buffer_restyled+0xdfc>
487b:	89 d0                	mov    eax,edx
487d:	e9 55 f5 ff ff       	jmp    3dd7 <quotearg_buffer_restyled+0x547>
4882:	0f b6 1c 08          	movzx  ebx,BYTE PTR [rax+rcx*1]
4886:	80 fb 3e             	cmp    bl,0x3e
4889:	0f 87 71 f8 ff ff    	ja     4100 <quotearg_buffer_restyled+0x870>
488f:	48 b8 00 00 00 00 82 	movabs rax,0x7000a38200000000
4896:	a3 00 70
4899:	48 0f a3 d8          	bt     rax,rbx
489d:	0f 83 5d f8 ff ff    	jae    4100 <quotearg_buffer_restyled+0x870>
48a3:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
48a8:	0f 85 e4 01 00 00    	jne    4a92 <quotearg_buffer_restyled+0x1202>
48ae:	4d 39 fd             	cmp    r13,r15
48b1:	76 05                	jbe    48b8 <quotearg_buffer_restyled+0x1028>
48b3:	43 c6 04 3e 3f       	mov    BYTE PTR [r14+r15*1],0x3f
48b8:	49 8d 47 01          	lea    rax,[r15+0x1]
48bc:	49 39 c5             	cmp    r13,rax
48bf:	76 06                	jbe    48c7 <quotearg_buffer_restyled+0x1037>
48c1:	43 c6 44 3e 01 22    	mov    BYTE PTR [r14+r15*1+0x1],0x22
48c7:	49 8d 47 02          	lea    rax,[r15+0x2]
48cb:	49 39 c5             	cmp    r13,rax
48ce:	76 06                	jbe    48d6 <quotearg_buffer_restyled+0x1046>
48d0:	43 c6 44 3e 02 22    	mov    BYTE PTR [r14+r15*1+0x2],0x22
48d6:	49 8d 47 03          	lea    rax,[r15+0x3]
48da:	49 39 c5             	cmp    r13,rax
48dd:	76 06                	jbe    48e5 <quotearg_buffer_restyled+0x1055>
48df:	43 c6 44 3e 03 3f    	mov    BYTE PTR [r14+r15*1+0x3],0x3f
48e5:	49 83 c7 04          	add    r15,0x4
48e9:	31 d2                	xor    edx,edx
48eb:	45 31 e4             	xor    r12d,r12d
48ee:	31 c0                	xor    eax,eax
48f0:	48 89 cd             	mov    rbp,rcx
48f3:	e9 c0 f1 ff ff       	jmp    3ab8 <quotearg_buffer_restyled+0x228>
48f8:	85 db                	test   ebx,ebx
48fa:	0f 84 88 01 00 00    	je     4a88 <quotearg_buffer_restyled+0x11f8>
4900:	48 8d 05 7e 29 00 00 	lea    rax,[rip+0x297e]        # 7285 <delimit_method_map+0xf5>
4907:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
490c:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
4911:	45 31 e4             	xor    r12d,r12d
4914:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
491b:	00 00
491d:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
4922:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
4927:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
492e:	00 00
4930:	45 31 ff             	xor    r15d,r15d
4933:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4938:	e9 26 f0 ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
493d:	0f 1f 00             	nop    DWORD PTR [rax]
4940:	4c 89 dd             	mov    rbp,r11
4943:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
4948:	e9 cc fa ff ff       	jmp    4419 <quotearg_buffer_restyled+0xb89>
494d:	48 8d 05 2f 29 00 00 	lea    rax,[rip+0x292f]        # 7283 <delimit_method_map+0xf3>
4954:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4959:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
495e:	45 31 e4             	xor    r12d,r12d
4961:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4968:	00 00
496a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
496f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
4974:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
497b:	00 00
497d:	45 31 ff             	xor    r15d,r15d
4980:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4985:	e9 d9 ef ff ff       	jmp    3963 <quotearg_buffer_restyled+0xd3>
498a:	89 d0                	mov    eax,edx
498c:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
4991:	48 85 db             	test   rbx,rbx
4994:	74 2c                	je     49c2 <quotearg_buffer_restyled+0x1132>
4996:	84 c0                	test   al,al
4998:	74 28                	je     49c2 <quotearg_buffer_restyled+0x1132>
499a:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
499d:	48 89 d8             	mov    rax,rbx
49a0:	84 c9                	test   cl,cl
49a2:	74 1e                	je     49c2 <quotearg_buffer_restyled+0x1132>
49a4:	4c 89 fa             	mov    rdx,r15
49a7:	4c 29 f8             	sub    rax,r15
49aa:	49 39 d5             	cmp    r13,rdx
49ad:	76 04                	jbe    49b3 <quotearg_buffer_restyled+0x1123>
49af:	41 88 0c 16          	mov    BYTE PTR [r14+rdx*1],cl
49b3:	48 83 c2 01          	add    rdx,0x1
49b7:	0f b6 0c 10          	movzx  ecx,BYTE PTR [rax+rdx*1]
49bb:	84 c9                	test   cl,cl
49bd:	75 eb                	jne    49aa <quotearg_buffer_restyled+0x111a>
49bf:	49 89 d7             	mov    r15,rdx
49c2:	4d 39 fd             	cmp    r13,r15
49c5:	0f 86 9e fa ff ff    	jbe    4469 <quotearg_buffer_restyled+0xbd9>
49cb:	43 c6 04 3e 00       	mov    BYTE PTR [r14+r15*1],0x0
49d0:	e9 94 fa ff ff       	jmp    4469 <quotearg_buffer_restyled+0xbd9>
49d5:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
49da:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
49df:	4c 89 dd             	mov    rbp,r11
49e2:	0f 94 c0             	sete   al
49e5:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
49e9:	e9 2b fa ff ff       	jmp    4419 <quotearg_buffer_restyled+0xb89>
49ee:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
49f2:	48 89 cf             	mov    rdi,rcx
49f5:	e8 a6 ed ff ff       	call   37a0 <gettext_quote.part.1>
49fa:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
49ff:	e9 52 fc ff ff       	jmp    4656 <quotearg_buffer_restyled+0xdc6>
4a04:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
4a08:	48 89 cf             	mov    rdi,rcx
4a0b:	e8 90 ed ff ff       	call   37a0 <gettext_quote.part.1>
4a10:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
4a15:	e9 67 fc ff ff       	jmp    4681 <quotearg_buffer_restyled+0xdf1>
4a1a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
4a1f:	4c 89 dd             	mov    rbp,r11
4a22:	89 d0                	mov    eax,edx
4a24:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
4a28:	e9 ec f9 ff ff       	jmp    4419 <quotearg_buffer_restyled+0xb89>
4a2d:	48 83 ec 08          	sub    rsp,0x8
4a31:	41 b8 05 00 00 00    	mov    r8d,0x5
4a37:	4c 89 d9             	mov    rcx,r11
4a3a:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
4a3e:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
4a42:	4c 89 f7             	mov    rdi,r14
4a45:	ff 74 24 38          	push   QWORD PTR [rsp+0x38]
4a49:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
4a50:	00
4a51:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4a56:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
4a5b:	e8 30 ee ff ff       	call   3890 <quotearg_buffer_restyled>
4a60:	48 83 c4 20          	add    rsp,0x20
4a64:	49 89 c7             	mov    r15,rax
4a67:	e9 fd f9 ff ff       	jmp    4469 <quotearg_buffer_restyled+0xbd9>
4a6c:	0f b6 44 24 7c       	movzx  eax,BYTE PTR [rsp+0x7c]
4a71:	e9 16 ff ff ff       	jmp    498c <quotearg_buffer_restyled+0x10fc>
4a76:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4a7d:	00
4a7e:	e9 96 f9 ff ff       	jmp    4419 <quotearg_buffer_restyled+0xb89>
4a83:	e8 a8 cd ff ff       	call   1830 <__stack_chk_fail@plt>
4a88:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
4a8d:	e9 6f fa ff ff       	jmp    4501 <quotearg_buffer_restyled+0xc71>
4a92:	4c 89 dd             	mov    rbp,r11
4a95:	e9 96 f9 ff ff       	jmp    4430 <quotearg_buffer_restyled+0xba0>
4a9a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4a9f:	31 c0                	xor    eax,eax
4aa1:	45 31 e4             	xor    r12d,r12d
4aa4:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4aab:	00 00
4aad:	e9 a2 f5 ff ff       	jmp    4054 <quotearg_buffer_restyled+0x7c4>
4ab2:	4c 89 ea             	mov    rdx,r13
4ab5:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
4aba:	e9 f3 f5 ff ff       	jmp    40b2 <quotearg_buffer_restyled+0x822>
4abf:	e8 bc cc ff ff       	call   1780 <abort@plt>
4ac4:	66 90                	xchg   ax,ax
4ac6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4acd:	00 00 00

0000000000004ad0 <quotearg_n_options>:
4ad0:	41 57                	push   r15
4ad2:	41 56                	push   r14
4ad4:	4c 63 ff             	movsxd r15,edi
4ad7:	41 55                	push   r13
4ad9:	41 54                	push   r12
4adb:	49 89 d6             	mov    r14,rdx
4ade:	55                   	push   rbp
4adf:	53                   	push   rbx
4ae0:	48 89 cd             	mov    rbp,rcx
4ae3:	48 83 ec 28          	sub    rsp,0x28
4ae7:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
4aec:	e8 9f cc ff ff       	call   1790 <__errno_location@plt>
4af1:	49 89 c5             	mov    r13,rax
4af4:	8b 00                	mov    eax,DWORD PTR [rax]
4af6:	45 85 ff             	test   r15d,r15d
4af9:	48 8b 1d 80 55 20 00 	mov    rbx,QWORD PTR [rip+0x205580]        # 20a080 <slotvec>
4b00:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
4b04:	0f 88 67 01 00 00    	js     4c71 <quotearg_n_options+0x1a1>
4b0a:	44 39 3d 67 55 20 00 	cmp    DWORD PTR [rip+0x205567],r15d        # 20a078 <nslots>
4b11:	7f 62                	jg     4b75 <quotearg_n_options+0xa5>
4b13:	41 81 ff ff ff ff 7f 	cmp    r15d,0x7fffffff
4b1a:	0f 84 56 01 00 00    	je     4c76 <quotearg_n_options+0x1a6>
4b20:	45 8d 67 01          	lea    r12d,[r15+0x1]
4b24:	48 8d 05 65 55 20 00 	lea    rax,[rip+0x205565]        # 20a090 <slotvec0>
4b2b:	49 63 f4             	movsxd rsi,r12d
4b2e:	48 c1 e6 04          	shl    rsi,0x4
4b32:	48 39 c3             	cmp    rbx,rax
4b35:	0f 84 15 01 00 00    	je     4c50 <quotearg_n_options+0x180>
4b3b:	48 89 df             	mov    rdi,rbx
4b3e:	e8 6d 0f 00 00       	call   5ab0 <xrealloc>
4b43:	48 89 c3             	mov    rbx,rax
4b46:	48 89 05 33 55 20 00 	mov    QWORD PTR [rip+0x205533],rax        # 20a080 <slotvec>
4b4d:	48 63 3d 24 55 20 00 	movsxd rdi,DWORD PTR [rip+0x205524]        # 20a078 <nslots>
4b54:	44 89 e2             	mov    edx,r12d
4b57:	31 f6                	xor    esi,esi
4b59:	29 fa                	sub    edx,edi
4b5b:	48 c1 e7 04          	shl    rdi,0x4
4b5f:	48 63 d2             	movsxd rdx,edx
4b62:	48 01 df             	add    rdi,rbx
4b65:	48 c1 e2 04          	shl    rdx,0x4
4b69:	e8 52 cd ff ff       	call   18c0 <memset@plt>
4b6e:	44 89 25 03 55 20 00 	mov    DWORD PTR [rip+0x205503],r12d        # 20a078 <nslots>
4b75:	8b 45 04             	mov    eax,DWORD PTR [rbp+0x4]
4b78:	49 c1 e7 04          	shl    r15,0x4
4b7c:	48 83 ec 08          	sub    rsp,0x8
4b80:	4c 01 fb             	add    rbx,r15
4b83:	4c 8d 7d 08          	lea    r15,[rbp+0x8]
4b87:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
4b8b:	4c 8b 1b             	mov    r11,QWORD PTR [rbx]
4b8e:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
4b92:	4c 89 f1             	mov    rcx,r14
4b95:	83 c8 01             	or     eax,0x1
4b98:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
4b9c:	ff 75 30             	push   QWORD PTR [rbp+0x30]
4b9f:	41 89 c1             	mov    r9d,eax
4ba2:	ff 75 28             	push   QWORD PTR [rbp+0x28]
4ba5:	41 57                	push   r15
4ba7:	4c 89 de             	mov    rsi,r11
4baa:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
4baf:	4c 89 e7             	mov    rdi,r12
4bb2:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
4bb7:	e8 d4 ec ff ff       	call   3890 <quotearg_buffer_restyled>
4bbc:	48 83 c4 20          	add    rsp,0x20
4bc0:	4c 8b 5c 24 10       	mov    r11,QWORD PTR [rsp+0x10]
4bc5:	49 39 c3             	cmp    r11,rax
4bc8:	77 67                	ja     4c31 <quotearg_n_options+0x161>
4bca:	48 8d 70 01          	lea    rsi,[rax+0x1]
4bce:	48 8d 05 6b 55 20 00 	lea    rax,[rip+0x20556b]        # 20a140 <slot0>
4bd5:	49 39 c4             	cmp    r12,rax
4bd8:	48 89 33             	mov    QWORD PTR [rbx],rsi
4bdb:	74 12                	je     4bef <quotearg_n_options+0x11f>
4bdd:	4c 89 e7             	mov    rdi,r12
4be0:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
4be5:	e8 86 cb ff ff       	call   1770 <free@plt>
4bea:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
4bef:	48 89 f7             	mov    rdi,rsi
4bf2:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
4bf7:	e8 54 0e 00 00       	call   5a50 <xmalloc>
4bfc:	48 83 ec 08          	sub    rsp,0x8
4c00:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
4c04:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
4c08:	ff 75 30             	push   QWORD PTR [rbp+0x30]
4c0b:	ff 75 28             	push   QWORD PTR [rbp+0x28]
4c0e:	4c 89 f1             	mov    rcx,r14
4c11:	41 57                	push   r15
4c13:	44 8b 4c 24 3c       	mov    r9d,DWORD PTR [rsp+0x3c]
4c18:	48 89 c7             	mov    rdi,rax
4c1b:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
4c20:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
4c25:	49 89 c4             	mov    r12,rax
4c28:	e8 63 ec ff ff       	call   3890 <quotearg_buffer_restyled>
4c2d:	48 83 c4 20          	add    rsp,0x20
4c31:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
4c35:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
4c39:	48 83 c4 28          	add    rsp,0x28
4c3d:	4c 89 e0             	mov    rax,r12
4c40:	5b                   	pop    rbx
4c41:	5d                   	pop    rbp
4c42:	41 5c                	pop    r12
4c44:	41 5d                	pop    r13
4c46:	41 5e                	pop    r14
4c48:	41 5f                	pop    r15
4c4a:	c3                   	ret
4c4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4c50:	31 ff                	xor    edi,edi
4c52:	e8 59 0e 00 00       	call   5ab0 <xrealloc>
4c57:	66 0f 6f 05 31 54 20 	movdqa xmm0,XMMWORD PTR [rip+0x205431]        # 20a090 <slotvec0>
4c5e:	00
4c5f:	48 89 c3             	mov    rbx,rax
4c62:	48 89 05 17 54 20 00 	mov    QWORD PTR [rip+0x205417],rax        # 20a080 <slotvec>
4c69:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
4c6c:	e9 dc fe ff ff       	jmp    4b4d <quotearg_n_options+0x7d>
4c71:	e8 0a cb ff ff       	call   1780 <abort@plt>
4c76:	e8 25 10 00 00       	call   5ca0 <xalloc_die>
4c7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004c80 <clone_quoting_options>:
4c80:	41 54                	push   r12
4c82:	55                   	push   rbp
4c83:	53                   	push   rbx
4c84:	48 89 fb             	mov    rbx,rdi
4c87:	e8 04 cb ff ff       	call   1790 <__errno_location@plt>
4c8c:	44 8b 20             	mov    r12d,DWORD PTR [rax]
4c8f:	48 89 c5             	mov    rbp,rax
4c92:	48 8d 05 a7 55 20 00 	lea    rax,[rip+0x2055a7]        # 20a240 <default_quoting_options>
4c99:	48 85 db             	test   rbx,rbx
4c9c:	be 38 00 00 00       	mov    esi,0x38
4ca1:	48 0f 44 d8          	cmove  rbx,rax
4ca5:	48 89 df             	mov    rdi,rbx
4ca8:	e8 a3 0f 00 00       	call   5c50 <xmemdup>
4cad:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
4cb1:	5b                   	pop    rbx
4cb2:	5d                   	pop    rbp
4cb3:	41 5c                	pop    r12
4cb5:	c3                   	ret
4cb6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4cbd:	00 00 00

0000000000004cc0 <get_quoting_style>:
4cc0:	48 8d 05 79 55 20 00 	lea    rax,[rip+0x205579]        # 20a240 <default_quoting_options>
4cc7:	48 85 ff             	test   rdi,rdi
4cca:	48 0f 44 f8          	cmove  rdi,rax
4cce:	8b 07                	mov    eax,DWORD PTR [rdi]
4cd0:	c3                   	ret
4cd1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4cd6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4cdd:	00 00 00

0000000000004ce0 <set_quoting_style>:
4ce0:	48 8d 05 59 55 20 00 	lea    rax,[rip+0x205559]        # 20a240 <default_quoting_options>
4ce7:	48 85 ff             	test   rdi,rdi
4cea:	48 0f 44 f8          	cmove  rdi,rax
4cee:	89 37                	mov    DWORD PTR [rdi],esi
4cf0:	c3                   	ret
4cf1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4cf6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4cfd:	00 00 00

0000000000004d00 <set_char_quoting>:
4d00:	48 8d 05 39 55 20 00 	lea    rax,[rip+0x205539]        # 20a240 <default_quoting_options>
4d07:	48 85 ff             	test   rdi,rdi
4d0a:	89 f1                	mov    ecx,esi
4d0c:	48 0f 44 f8          	cmove  rdi,rax
4d10:	89 f0                	mov    eax,esi
4d12:	83 e1 1f             	and    ecx,0x1f
4d15:	c0 e8 05             	shr    al,0x5
4d18:	0f b6 c0             	movzx  eax,al
4d1b:	48 8d 7c 87 08       	lea    rdi,[rdi+rax*4+0x8]
4d20:	8b 37                	mov    esi,DWORD PTR [rdi]
4d22:	89 f0                	mov    eax,esi
4d24:	d3 e8                	shr    eax,cl
4d26:	31 c2                	xor    edx,eax
4d28:	83 e0 01             	and    eax,0x1
4d2b:	83 e2 01             	and    edx,0x1
4d2e:	d3 e2                	shl    edx,cl
4d30:	31 f2                	xor    edx,esi
4d32:	89 17                	mov    DWORD PTR [rdi],edx
4d34:	c3                   	ret
4d35:	90                   	nop
4d36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4d3d:	00 00 00

0000000000004d40 <set_quoting_flags>:
4d40:	48 8d 05 f9 54 20 00 	lea    rax,[rip+0x2054f9]        # 20a240 <default_quoting_options>
4d47:	48 85 ff             	test   rdi,rdi
4d4a:	48 0f 44 f8          	cmove  rdi,rax
4d4e:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
4d51:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
4d54:	c3                   	ret
4d55:	90                   	nop
4d56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4d5d:	00 00 00

0000000000004d60 <set_custom_quoting>:
4d60:	48 8d 05 d9 54 20 00 	lea    rax,[rip+0x2054d9]        # 20a240 <default_quoting_options>
4d67:	48 85 ff             	test   rdi,rdi
4d6a:	48 0f 44 f8          	cmove  rdi,rax
4d6e:	48 85 f6             	test   rsi,rsi
4d71:	c7 07 0a 00 00 00    	mov    DWORD PTR [rdi],0xa
4d77:	74 0e                	je     4d87 <set_custom_quoting+0x27>
4d79:	48 85 d2             	test   rdx,rdx
4d7c:	74 09                	je     4d87 <set_custom_quoting+0x27>
4d7e:	48 89 77 28          	mov    QWORD PTR [rdi+0x28],rsi
4d82:	48 89 57 30          	mov    QWORD PTR [rdi+0x30],rdx
4d86:	c3                   	ret
4d87:	48 83 ec 08          	sub    rsp,0x8
4d8b:	e8 f0 c9 ff ff       	call   1780 <abort@plt>

0000000000004d90 <quotearg_buffer>:
4d90:	41 57                	push   r15
4d92:	41 56                	push   r14
4d94:	48 8d 05 a5 54 20 00 	lea    rax,[rip+0x2054a5]        # 20a240 <default_quoting_options>
4d9b:	41 55                	push   r13
4d9d:	41 54                	push   r12
4d9f:	49 89 fd             	mov    r13,rdi
4da2:	55                   	push   rbp
4da3:	53                   	push   rbx
4da4:	4c 89 c3             	mov    rbx,r8
4da7:	49 89 f6             	mov    r14,rsi
4daa:	49 89 d7             	mov    r15,rdx
4dad:	48 83 ec 18          	sub    rsp,0x18
4db1:	4d 85 c0             	test   r8,r8
4db4:	48 0f 44 d8          	cmove  rbx,rax
4db8:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
4dbd:	e8 ce c9 ff ff       	call   1790 <__errno_location@plt>
4dc2:	44 8b 20             	mov    r12d,DWORD PTR [rax]
4dc5:	48 89 c5             	mov    rbp,rax
4dc8:	48 8d 43 08          	lea    rax,[rbx+0x8]
4dcc:	48 83 ec 08          	sub    rsp,0x8
4dd0:	44 8b 4b 04          	mov    r9d,DWORD PTR [rbx+0x4]
4dd4:	ff 73 30             	push   QWORD PTR [rbx+0x30]
4dd7:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
4dda:	ff 73 28             	push   QWORD PTR [rbx+0x28]
4ddd:	4c 89 fa             	mov    rdx,r15
4de0:	50                   	push   rax
4de1:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
4de6:	4c 89 f6             	mov    rsi,r14
4de9:	4c 89 ef             	mov    rdi,r13
4dec:	e8 9f ea ff ff       	call   3890 <quotearg_buffer_restyled>
4df1:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
4df5:	48 83 c4 38          	add    rsp,0x38
4df9:	5b                   	pop    rbx
4dfa:	5d                   	pop    rbp
4dfb:	41 5c                	pop    r12
4dfd:	41 5d                	pop    r13
4dff:	41 5e                	pop    r14
4e01:	41 5f                	pop    r15
4e03:	c3                   	ret
4e04:	66 90                	xchg   ax,ax
4e06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4e0d:	00 00 00

0000000000004e10 <quotearg_alloc_mem>:
4e10:	41 57                	push   r15
4e12:	41 56                	push   r14
4e14:	48 8d 05 25 54 20 00 	lea    rax,[rip+0x205425]        # 20a240 <default_quoting_options>
4e1b:	41 55                	push   r13
4e1d:	41 54                	push   r12
4e1f:	49 89 d4             	mov    r12,rdx
4e22:	55                   	push   rbp
4e23:	53                   	push   rbx
4e24:	48 89 cb             	mov    rbx,rcx
4e27:	49 89 fe             	mov    r14,rdi
4e2a:	49 89 f7             	mov    r15,rsi
4e2d:	48 83 ec 38          	sub    rsp,0x38
4e31:	48 85 c9             	test   rcx,rcx
4e34:	48 0f 44 d8          	cmove  rbx,rax
4e38:	31 ed                	xor    ebp,ebp
4e3a:	e8 51 c9 ff ff       	call   1790 <__errno_location@plt>
4e3f:	4d 85 e4             	test   r12,r12
4e42:	49 89 c5             	mov    r13,rax
4e45:	8b 00                	mov    eax,DWORD PTR [rax]
4e47:	40 0f 94 c5          	sete   bpl
4e4b:	0b 6b 04             	or     ebp,DWORD PTR [rbx+0x4]
4e4e:	4c 8d 53 08          	lea    r10,[rbx+0x8]
4e52:	48 83 ec 08          	sub    rsp,0x8
4e56:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
4e59:	4c 89 f9             	mov    rcx,r15
4e5c:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
4e60:	ff 73 30             	push   QWORD PTR [rbx+0x30]
4e63:	4c 89 f2             	mov    rdx,r14
4e66:	ff 73 28             	push   QWORD PTR [rbx+0x28]
4e69:	41 52                	push   r10
4e6b:	31 f6                	xor    esi,esi
4e6d:	41 89 e9             	mov    r9d,ebp
4e70:	31 ff                	xor    edi,edi
4e72:	4c 89 54 24 40       	mov    QWORD PTR [rsp+0x40],r10
4e77:	e8 14 ea ff ff       	call   3890 <quotearg_buffer_restyled>
4e7c:	48 8d 70 01          	lea    rsi,[rax+0x1]
4e80:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4e85:	48 83 c4 20          	add    rsp,0x20
4e89:	48 89 f7             	mov    rdi,rsi
4e8c:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
4e91:	e8 ba 0b 00 00       	call   5a50 <xmalloc>
4e96:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
4e9b:	48 83 ec 08          	sub    rsp,0x8
4e9f:	ff 73 30             	push   QWORD PTR [rbx+0x30]
4ea2:	ff 73 28             	push   QWORD PTR [rbx+0x28]
4ea5:	4c 8b 54 24 38       	mov    r10,QWORD PTR [rsp+0x38]
4eaa:	41 89 e9             	mov    r9d,ebp
4ead:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
4eb0:	4c 89 f9             	mov    rcx,r15
4eb3:	4c 89 f2             	mov    rdx,r14
4eb6:	48 89 c7             	mov    rdi,rax
4eb9:	41 52                	push   r10
4ebb:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
4ec0:	e8 cb e9 ff ff       	call   3890 <quotearg_buffer_restyled>
4ec5:	8b 44 24 2c          	mov    eax,DWORD PTR [rsp+0x2c]
4ec9:	48 83 c4 20          	add    rsp,0x20
4ecd:	4d 85 e4             	test   r12,r12
4ed0:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
4ed4:	74 09                	je     4edf <quotearg_alloc_mem+0xcf>
4ed6:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
4edb:	4d 89 1c 24          	mov    QWORD PTR [r12],r11
4edf:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4ee4:	48 83 c4 38          	add    rsp,0x38
4ee8:	5b                   	pop    rbx
4ee9:	5d                   	pop    rbp
4eea:	41 5c                	pop    r12
4eec:	41 5d                	pop    r13
4eee:	41 5e                	pop    r14
4ef0:	41 5f                	pop    r15
4ef2:	c3                   	ret
4ef3:	0f 1f 00             	nop    DWORD PTR [rax]
4ef6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4efd:	00 00 00

0000000000004f00 <quotearg_alloc>:
4f00:	48 89 d1             	mov    rcx,rdx
4f03:	31 d2                	xor    edx,edx
4f05:	e9 06 ff ff ff       	jmp    4e10 <quotearg_alloc_mem>
4f0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004f10 <quotearg_free>:
4f10:	8b 05 62 51 20 00    	mov    eax,DWORD PTR [rip+0x205162]        # 20a078 <nslots>
4f16:	41 54                	push   r12
4f18:	4c 8b 25 61 51 20 00 	mov    r12,QWORD PTR [rip+0x205161]        # 20a080 <slotvec>
4f1f:	55                   	push   rbp
4f20:	53                   	push   rbx
4f21:	83 f8 01             	cmp    eax,0x1
4f24:	7e 2b                	jle    4f51 <quotearg_free+0x41>
4f26:	83 e8 02             	sub    eax,0x2
4f29:	49 8d 5c 24 18       	lea    rbx,[r12+0x18]
4f2e:	48 c1 e0 04          	shl    rax,0x4
4f32:	49 8d 6c 04 28       	lea    rbp,[r12+rax*1+0x28]
4f37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4f3e:	00 00
4f40:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
4f43:	48 83 c3 10          	add    rbx,0x10
4f47:	e8 24 c8 ff ff       	call   1770 <free@plt>
4f4c:	48 39 eb             	cmp    rbx,rbp
4f4f:	75 ef                	jne    4f40 <quotearg_free+0x30>
4f51:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
4f56:	48 8d 1d e3 51 20 00 	lea    rbx,[rip+0x2051e3]        # 20a140 <slot0>
4f5d:	48 39 df             	cmp    rdi,rbx
4f60:	74 17                	je     4f79 <quotearg_free+0x69>
4f62:	e8 09 c8 ff ff       	call   1770 <free@plt>
4f67:	48 c7 05 1e 51 20 00 	mov    QWORD PTR [rip+0x20511e],0x100        # 20a090 <slotvec0>
4f6e:	00 01 00 00
4f72:	48 89 1d 1f 51 20 00 	mov    QWORD PTR [rip+0x20511f],rbx        # 20a098 <slotvec0+0x8>
4f79:	48 8d 1d 10 51 20 00 	lea    rbx,[rip+0x205110]        # 20a090 <slotvec0>
4f80:	49 39 dc             	cmp    r12,rbx
4f83:	74 0f                	je     4f94 <quotearg_free+0x84>
4f85:	4c 89 e7             	mov    rdi,r12
4f88:	e8 e3 c7 ff ff       	call   1770 <free@plt>
4f8d:	48 89 1d ec 50 20 00 	mov    QWORD PTR [rip+0x2050ec],rbx        # 20a080 <slotvec>
4f94:	5b                   	pop    rbx
4f95:	c7 05 d9 50 20 00 01 	mov    DWORD PTR [rip+0x2050d9],0x1        # 20a078 <nslots>
4f9c:	00 00 00
4f9f:	5d                   	pop    rbp
4fa0:	41 5c                	pop    r12
4fa2:	c3                   	ret
4fa3:	0f 1f 00             	nop    DWORD PTR [rax]
4fa6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4fad:	00 00 00

0000000000004fb0 <quotearg_n>:
4fb0:	48 8d 0d 89 52 20 00 	lea    rcx,[rip+0x205289]        # 20a240 <default_quoting_options>
4fb7:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4fbe:	e9 0d fb ff ff       	jmp    4ad0 <quotearg_n_options>
4fc3:	0f 1f 00             	nop    DWORD PTR [rax]
4fc6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4fcd:	00 00 00

0000000000004fd0 <quotearg_n_mem>:
4fd0:	48 8d 0d 69 52 20 00 	lea    rcx,[rip+0x205269]        # 20a240 <default_quoting_options>
4fd7:	e9 f4 fa ff ff       	jmp    4ad0 <quotearg_n_options>
4fdc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004fe0 <quotearg>:
4fe0:	48 8d 0d 59 52 20 00 	lea    rcx,[rip+0x205259]        # 20a240 <default_quoting_options>
4fe7:	48 89 fe             	mov    rsi,rdi
4fea:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4ff1:	31 ff                	xor    edi,edi
4ff3:	e9 d8 fa ff ff       	jmp    4ad0 <quotearg_n_options>
4ff8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4fff:	00

0000000000005000 <quotearg_mem>:
5000:	48 8d 0d 39 52 20 00 	lea    rcx,[rip+0x205239]        # 20a240 <default_quoting_options>
5007:	48 89 f2             	mov    rdx,rsi
500a:	48 89 fe             	mov    rsi,rdi
500d:	31 ff                	xor    edi,edi
500f:	e9 bc fa ff ff       	jmp    4ad0 <quotearg_n_options>
5014:	66 90                	xchg   ax,ax
5016:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
501d:	00 00 00

0000000000005020 <quotearg_n_style>:
5020:	48 83 ec 48          	sub    rsp,0x48
5024:	48 89 d0             	mov    rax,rdx
5027:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
502e:	00 00
5030:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
5035:	31 d2                	xor    edx,edx
5037:	83 fe 0a             	cmp    esi,0xa
503a:	74 68                	je     50a4 <quotearg_n_style+0x84>
503c:	89 34 24             	mov    DWORD PTR [rsp],esi
503f:	48 89 e1             	mov    rcx,rsp
5042:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5049:	48 89 c6             	mov    rsi,rax
504c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5053:	00 00
5055:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
505c:	00 00
505e:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5065:	00 00
5067:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
506e:	00 00
5070:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
5077:	00 00
5079:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
5080:	00 00
5082:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
5089:	00
508a:	e8 41 fa ff ff       	call   4ad0 <quotearg_n_options>
508f:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
5094:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
509b:	00 00
509d:	75 0a                	jne    50a9 <quotearg_n_style+0x89>
509f:	48 83 c4 48          	add    rsp,0x48
50a3:	c3                   	ret
50a4:	e8 d7 c6 ff ff       	call   1780 <abort@plt>
50a9:	e8 82 c7 ff ff       	call   1830 <__stack_chk_fail@plt>
50ae:	66 90                	xchg   ax,ax

00000000000050b0 <quotearg_n_style_mem>:
50b0:	48 83 ec 48          	sub    rsp,0x48
50b4:	48 89 d0             	mov    rax,rdx
50b7:	48 89 ca             	mov    rdx,rcx
50ba:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
50c1:	00 00
50c3:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
50c8:	31 c9                	xor    ecx,ecx
50ca:	83 fe 0a             	cmp    esi,0xa
50cd:	74 61                	je     5130 <quotearg_n_style_mem+0x80>
50cf:	89 34 24             	mov    DWORD PTR [rsp],esi
50d2:	48 89 e1             	mov    rcx,rsp
50d5:	48 89 c6             	mov    rsi,rax
50d8:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
50df:	00 00
50e1:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
50e8:	00 00
50ea:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
50f1:	00 00
50f3:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
50fa:	00 00
50fc:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
5103:	00 00
5105:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
510c:	00 00
510e:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
5115:	00
5116:	e8 b5 f9 ff ff       	call   4ad0 <quotearg_n_options>
511b:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
5120:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
5127:	00 00
5129:	75 0a                	jne    5135 <quotearg_n_style_mem+0x85>
512b:	48 83 c4 48          	add    rsp,0x48
512f:	c3                   	ret
5130:	e8 4b c6 ff ff       	call   1780 <abort@plt>
5135:	e8 f6 c6 ff ff       	call   1830 <__stack_chk_fail@plt>
513a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005140 <quotearg_style>:
5140:	48 89 f2             	mov    rdx,rsi
5143:	89 fe                	mov    esi,edi
5145:	31 ff                	xor    edi,edi
5147:	e9 d4 fe ff ff       	jmp    5020 <quotearg_n_style>
514c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005150 <quotearg_style_mem>:
5150:	48 89 d1             	mov    rcx,rdx
5153:	48 89 f2             	mov    rdx,rsi
5156:	89 fe                	mov    esi,edi
5158:	31 ff                	xor    edi,edi
515a:	e9 51 ff ff ff       	jmp    50b0 <quotearg_n_style_mem>
515f:	90                   	nop

0000000000005160 <quotearg_char_mem>:
5160:	48 83 ec 48          	sub    rsp,0x48
5164:	89 d1                	mov    ecx,edx
5166:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
516d:	00 00
516f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
5174:	31 c0                	xor    eax,eax
5176:	48 8b 05 f3 50 20 00 	mov    rax,QWORD PTR [rip+0x2050f3]        # 20a270 <default_quoting_options+0x30>
517d:	49 89 e0             	mov    r8,rsp
5180:	83 e1 1f             	and    ecx,0x1f
5183:	66 0f 6f 05 b5 50 20 	movdqa xmm0,XMMWORD PTR [rip+0x2050b5]        # 20a240 <default_quoting_options>
518a:	00
518b:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
5190:	89 d0                	mov    eax,edx
5192:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
5196:	c0 e8 05             	shr    al,0x5
5199:	0f b6 c0             	movzx  eax,al
519c:	4d 8d 4c 80 08       	lea    r9,[r8+rax*4+0x8]
51a1:	66 0f 6f 05 a7 50 20 	movdqa xmm0,XMMWORD PTR [rip+0x2050a7]        # 20a250 <default_quoting_options+0x10>
51a8:	00
51a9:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
51ae:	66 0f 6f 05 aa 50 20 	movdqa xmm0,XMMWORD PTR [rip+0x2050aa]        # 20a260 <default_quoting_options+0x20>
51b5:	00
51b6:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
51bb:	41 8b 11             	mov    edx,DWORD PTR [r9]
51be:	89 d0                	mov    eax,edx
51c0:	d3 e8                	shr    eax,cl
51c2:	f7 d0                	not    eax
51c4:	83 e0 01             	and    eax,0x1
51c7:	d3 e0                	shl    eax,cl
51c9:	4c 89 c1             	mov    rcx,r8
51cc:	31 d0                	xor    eax,edx
51ce:	48 89 f2             	mov    rdx,rsi
51d1:	48 89 fe             	mov    rsi,rdi
51d4:	41 89 01             	mov    DWORD PTR [r9],eax
51d7:	31 ff                	xor    edi,edi
51d9:	e8 f2 f8 ff ff       	call   4ad0 <quotearg_n_options>
51de:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
51e3:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
51ea:	00 00
51ec:	75 05                	jne    51f3 <quotearg_char_mem+0x93>
51ee:	48 83 c4 48          	add    rsp,0x48
51f2:	c3                   	ret
51f3:	e8 38 c6 ff ff       	call   1830 <__stack_chk_fail@plt>
51f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
51ff:	00

0000000000005200 <quotearg_char>:
5200:	40 0f be d6          	movsx  edx,sil
5204:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
520b:	e9 50 ff ff ff       	jmp    5160 <quotearg_char_mem>

0000000000005210 <quotearg_colon>:
5210:	ba 3a 00 00 00       	mov    edx,0x3a
5215:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
521c:	e9 3f ff ff ff       	jmp    5160 <quotearg_char_mem>
5221:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5226:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
522d:	00 00 00

0000000000005230 <quotearg_colon_mem>:
5230:	ba 3a 00 00 00       	mov    edx,0x3a
5235:	e9 26 ff ff ff       	jmp    5160 <quotearg_char_mem>
523a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005240 <quotearg_n_style_colon>:
5240:	48 83 ec 48          	sub    rsp,0x48
5244:	48 89 d0             	mov    rax,rdx
5247:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
524e:	00 00
5250:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
5255:	31 d2                	xor    edx,edx
5257:	83 fe 0a             	cmp    esi,0xa
525a:	74 68                	je     52c4 <quotearg_n_style_colon+0x84>
525c:	89 34 24             	mov    DWORD PTR [rsp],esi
525f:	48 89 e1             	mov    rcx,rsp
5262:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5269:	48 89 c6             	mov    rsi,rax
526c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5273:	00 00
5275:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x4000000
527c:	00 04
527e:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5285:	00 00
5287:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
528e:	00 00
5290:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
5297:	00 00
5299:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
52a0:	00 00
52a2:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
52a9:	00
52aa:	e8 21 f8 ff ff       	call   4ad0 <quotearg_n_options>
52af:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
52b4:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
52bb:	00 00
52bd:	75 0a                	jne    52c9 <quotearg_n_style_colon+0x89>
52bf:	48 83 c4 48          	add    rsp,0x48
52c3:	c3                   	ret
52c4:	e8 b7 c4 ff ff       	call   1780 <abort@plt>
52c9:	e8 62 c5 ff ff       	call   1830 <__stack_chk_fail@plt>
52ce:	66 90                	xchg   ax,ax

00000000000052d0 <quotearg_n_custom_mem>:
52d0:	48 83 ec 48          	sub    rsp,0x48
52d4:	49 89 c9             	mov    r9,rcx
52d7:	48 8b 0d 92 4f 20 00 	mov    rcx,QWORD PTR [rip+0x204f92]        # 20a270 <default_quoting_options+0x30>
52de:	66 0f 6f 05 5a 4f 20 	movdqa xmm0,XMMWORD PTR [rip+0x204f5a]        # 20a240 <default_quoting_options>
52e5:	00
52e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
52ed:	00 00
52ef:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
52f4:	31 c0                	xor    eax,eax
52f6:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
52fa:	48 85 f6             	test   rsi,rsi
52fd:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
5302:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [rsp],0xa
5309:	66 0f 6f 05 3f 4f 20 	movdqa xmm0,XMMWORD PTR [rip+0x204f3f]        # 20a250 <default_quoting_options+0x10>
5310:	00
5311:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
5316:	66 0f 6f 05 42 4f 20 	movdqa xmm0,XMMWORD PTR [rip+0x204f42]        # 20a260 <default_quoting_options+0x20>
531d:	00
531e:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
5323:	74 32                	je     5357 <quotearg_n_custom_mem+0x87>
5325:	48 85 d2             	test   rdx,rdx
5328:	74 2d                	je     5357 <quotearg_n_custom_mem+0x87>
532a:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
532f:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
5334:	48 89 e1             	mov    rcx,rsp
5337:	4c 89 c2             	mov    rdx,r8
533a:	4c 89 ce             	mov    rsi,r9
533d:	e8 8e f7 ff ff       	call   4ad0 <quotearg_n_options>
5342:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
5347:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
534e:	00 00
5350:	75 0a                	jne    535c <quotearg_n_custom_mem+0x8c>
5352:	48 83 c4 48          	add    rsp,0x48
5356:	c3                   	ret
5357:	e8 24 c4 ff ff       	call   1780 <abort@plt>
535c:	e8 cf c4 ff ff       	call   1830 <__stack_chk_fail@plt>
5361:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5366:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
536d:	00 00 00

0000000000005370 <quotearg_n_custom>:
5370:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
5377:	e9 54 ff ff ff       	jmp    52d0 <quotearg_n_custom_mem>
537c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005380 <quotearg_custom>:
5380:	48 89 d1             	mov    rcx,rdx
5383:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
538a:	48 89 f2             	mov    rdx,rsi
538d:	48 89 fe             	mov    rsi,rdi
5390:	31 ff                	xor    edi,edi
5392:	e9 39 ff ff ff       	jmp    52d0 <quotearg_n_custom_mem>
5397:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
539e:	00 00

00000000000053a0 <quotearg_custom_mem>:
53a0:	49 89 c8             	mov    r8,rcx
53a3:	48 89 d1             	mov    rcx,rdx
53a6:	48 89 f2             	mov    rdx,rsi
53a9:	48 89 fe             	mov    rsi,rdi
53ac:	31 ff                	xor    edi,edi
53ae:	e9 1d ff ff ff       	jmp    52d0 <quotearg_n_custom_mem>
53b3:	0f 1f 00             	nop    DWORD PTR [rax]
53b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
53bd:	00 00 00

00000000000053c0 <quote_n_mem>:
53c0:	48 8d 0d 79 4c 20 00 	lea    rcx,[rip+0x204c79]        # 20a040 <quote_quoting_options>
53c7:	e9 04 f7 ff ff       	jmp    4ad0 <quotearg_n_options>
53cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000053d0 <quote_mem>:
53d0:	48 8d 0d 69 4c 20 00 	lea    rcx,[rip+0x204c69]        # 20a040 <quote_quoting_options>
53d7:	48 89 f2             	mov    rdx,rsi
53da:	48 89 fe             	mov    rsi,rdi
53dd:	31 ff                	xor    edi,edi
53df:	e9 ec f6 ff ff       	jmp    4ad0 <quotearg_n_options>
53e4:	66 90                	xchg   ax,ax
53e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
53ed:	00 00 00

00000000000053f0 <quote_n>:
53f0:	48 8d 0d 49 4c 20 00 	lea    rcx,[rip+0x204c49]        # 20a040 <quote_quoting_options>
53f7:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
53fe:	e9 cd f6 ff ff       	jmp    4ad0 <quotearg_n_options>
5403:	0f 1f 00             	nop    DWORD PTR [rax]
5406:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
540d:	00 00 00

0000000000005410 <quote>:
5410:	48 8d 0d 29 4c 20 00 	lea    rcx,[rip+0x204c29]        # 20a040 <quote_quoting_options>
5417:	48 89 fe             	mov    rsi,rdi
541a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5421:	31 ff                	xor    edi,edi
5423:	e9 a8 f6 ff ff       	jmp    4ad0 <quotearg_n_options>
5428:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
542f:	00

0000000000005430 <version_etc_arn>:
5430:	41 57                	push   r15
5432:	41 56                	push   r14
5434:	41 55                	push   r13
5436:	41 54                	push   r12
5438:	4d 89 cc             	mov    r12,r9
543b:	55                   	push   rbp
543c:	53                   	push   rbx
543d:	48 89 fd             	mov    rbp,rdi
5440:	4c 89 c3             	mov    rbx,r8
5443:	48 83 ec 28          	sub    rsp,0x28
5447:	48 85 f6             	test   rsi,rsi
544a:	0f 84 18 01 00 00    	je     5568 <version_etc_arn+0x138>
5450:	49 89 d0             	mov    r8,rdx
5453:	48 8d 15 ee 22 00 00 	lea    rdx,[rip+0x22ee]        # 7748 <quoting_style_vals+0x28>
545a:	49 89 c9             	mov    r9,rcx
545d:	31 c0                	xor    eax,eax
545f:	48 89 f1             	mov    rcx,rsi
5462:	be 01 00 00 00       	mov    esi,0x1
5467:	e8 04 c6 ff ff       	call   1a70 <__fprintf_chk@plt>
546c:	48 8d 35 e8 22 00 00 	lea    rsi,[rip+0x22e8]        # 775b <quoting_style_vals+0x3b>
5473:	31 ff                	xor    edi,edi
5475:	ba 05 00 00 00       	mov    edx,0x5
547a:	e8 81 c3 ff ff       	call   1800 <dcgettext@plt>
547f:	48 8d 15 fa 25 00 00 	lea    rdx,[rip+0x25fa]        # 7a80 <version_etc_copyright>
5486:	48 89 c1             	mov    rcx,rax
5489:	41 b8 e3 07 00 00    	mov    r8d,0x7e3
548f:	be 01 00 00 00       	mov    esi,0x1
5494:	48 89 ef             	mov    rdi,rbp
5497:	31 c0                	xor    eax,eax
5499:	e8 d2 c5 ff ff       	call   1a70 <__fprintf_chk@plt>
549e:	48 8d 35 43 23 00 00 	lea    rsi,[rip+0x2343]        # 77e8 <quoting_style_vals+0xc8>
54a5:	31 ff                	xor    edi,edi
54a7:	ba 05 00 00 00       	mov    edx,0x5
54ac:	e8 4f c3 ff ff       	call   1800 <dcgettext@plt>
54b1:	48 89 ee             	mov    rsi,rbp
54b4:	48 89 c7             	mov    rdi,rax
54b7:	e8 54 c4 ff ff       	call   1910 <fputs_unlocked@plt>
54bc:	49 83 fc 09          	cmp    r12,0x9
54c0:	0f 87 3a 03 00 00    	ja     5800 <version_etc_arn+0x3d0>
54c6:	48 8d 15 77 25 00 00 	lea    rdx,[rip+0x2577]        # 7a44 <quoting_style_vals+0x324>
54cd:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
54d1:	48 01 d0             	add    rax,rdx
54d4:	ff e0                	jmp    rax
54d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
54dd:	00 00 00
54e0:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
54e4:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
54e8:	48 8d 35 69 24 00 00 	lea    rsi,[rip+0x2469]        # 7958 <quoting_style_vals+0x238>
54ef:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
54f3:	ba 05 00 00 00       	mov    edx,0x5
54f8:	31 ff                	xor    edi,edi
54fa:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
54fe:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
5502:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
5507:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
550b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
550f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
5513:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
5518:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
551b:	e8 e0 c2 ff ff       	call   1800 <dcgettext@plt>
5520:	48 83 ec 08          	sub    rsp,0x8
5524:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
5529:	48 89 c2             	mov    rdx,rax
552c:	48 89 d9             	mov    rcx,rbx
552f:	be 01 00 00 00       	mov    esi,0x1
5534:	48 89 ef             	mov    rdi,rbp
5537:	31 c0                	xor    eax,eax
5539:	41 51                	push   r9
553b:	41 55                	push   r13
553d:	41 54                	push   r12
553f:	41 57                	push   r15
5541:	41 56                	push   r14
5543:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
5548:	4c 8b 44 24 38       	mov    r8,QWORD PTR [rsp+0x38]
554d:	e8 1e c5 ff ff       	call   1a70 <__fprintf_chk@plt>
5552:	48 83 c4 30          	add    rsp,0x30
5556:	48 83 c4 28          	add    rsp,0x28
555a:	5b                   	pop    rbx
555b:	5d                   	pop    rbp
555c:	41 5c                	pop    r12
555e:	41 5d                	pop    r13
5560:	41 5e                	pop    r14
5562:	41 5f                	pop    r15
5564:	c3                   	ret
5565:	0f 1f 00             	nop    DWORD PTR [rax]
5568:	49 89 c8             	mov    r8,rcx
556b:	48 89 d1             	mov    rcx,rdx
556e:	48 8d 15 df 21 00 00 	lea    rdx,[rip+0x21df]        # 7754 <quoting_style_vals+0x34>
5575:	be 01 00 00 00       	mov    esi,0x1
557a:	31 c0                	xor    eax,eax
557c:	e8 ef c4 ff ff       	call   1a70 <__fprintf_chk@plt>
5581:	e9 e6 fe ff ff       	jmp    546c <version_etc_arn+0x3c>
5586:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
558d:	00 00 00
5590:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
5594:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
5598:	48 8d 35 e9 23 00 00 	lea    rsi,[rip+0x23e9]        # 7988 <quoting_style_vals+0x268>
559f:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
55a3:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
55a7:	ba 05 00 00 00       	mov    edx,0x5
55ac:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
55b0:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
55b4:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
55b8:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
55bc:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
55bf:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
55c4:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
55c9:	48 89 04 24          	mov    QWORD PTR [rsp],rax
55cd:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
55d2:	31 ff                	xor    edi,edi
55d4:	e8 27 c2 ff ff       	call   1800 <dcgettext@plt>
55d9:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
55de:	41 52                	push   r10
55e0:	e9 3f ff ff ff       	jmp    5524 <version_etc_arn+0xf4>
55e5:	0f 1f 00             	nop    DWORD PTR [rax]
55e8:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
55eb:	48 8d 35 6d 21 00 00 	lea    rsi,[rip+0x216d]        # 775f <quoting_style_vals+0x3f>
55f2:	ba 05 00 00 00       	mov    edx,0x5
55f7:	31 ff                	xor    edi,edi
55f9:	e8 02 c2 ff ff       	call   1800 <dcgettext@plt>
55fe:	48 83 c4 28          	add    rsp,0x28
5602:	48 89 d9             	mov    rcx,rbx
5605:	48 89 ef             	mov    rdi,rbp
5608:	5b                   	pop    rbx
5609:	5d                   	pop    rbp
560a:	41 5c                	pop    r12
560c:	41 5d                	pop    r13
560e:	41 5e                	pop    r14
5610:	41 5f                	pop    r15
5612:	48 89 c2             	mov    rdx,rax
5615:	be 01 00 00 00       	mov    esi,0x1
561a:	31 c0                	xor    eax,eax
561c:	e9 4f c4 ff ff       	jmp    1a70 <__fprintf_chk@plt>
5621:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5628:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
562c:	48 8d 35 3c 21 00 00 	lea    rsi,[rip+0x213c]        # 776f <quoting_style_vals+0x4f>
5633:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
5636:	ba 05 00 00 00       	mov    edx,0x5
563b:	31 ff                	xor    edi,edi
563d:	e8 be c1 ff ff       	call   1800 <dcgettext@plt>
5642:	48 83 c4 28          	add    rsp,0x28
5646:	4d 89 e0             	mov    r8,r12
5649:	48 89 d9             	mov    rcx,rbx
564c:	48 89 ef             	mov    rdi,rbp
564f:	48 89 c2             	mov    rdx,rax
5652:	be 01 00 00 00       	mov    esi,0x1
5657:	5b                   	pop    rbx
5658:	5d                   	pop    rbp
5659:	41 5c                	pop    r12
565b:	41 5d                	pop    r13
565d:	41 5e                	pop    r14
565f:	41 5f                	pop    r15
5661:	31 c0                	xor    eax,eax
5663:	e9 08 c4 ff ff       	jmp    1a70 <__fprintf_chk@plt>
5668:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
566f:	00
5670:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
5674:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
5678:	48 8d 35 07 21 00 00 	lea    rsi,[rip+0x2107]        # 7786 <quoting_style_vals+0x66>
567f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
5682:	ba 05 00 00 00       	mov    edx,0x5
5687:	31 ff                	xor    edi,edi
5689:	e8 72 c1 ff ff       	call   1800 <dcgettext@plt>
568e:	48 83 c4 28          	add    rsp,0x28
5692:	4d 89 e9             	mov    r9,r13
5695:	4d 89 e0             	mov    r8,r12
5698:	48 89 d9             	mov    rcx,rbx
569b:	48 89 ef             	mov    rdi,rbp
569e:	48 89 c2             	mov    rdx,rax
56a1:	5b                   	pop    rbx
56a2:	5d                   	pop    rbp
56a3:	41 5c                	pop    r12
56a5:	41 5d                	pop    r13
56a7:	41 5e                	pop    r14
56a9:	41 5f                	pop    r15
56ab:	be 01 00 00 00       	mov    esi,0x1
56b0:	31 c0                	xor    eax,eax
56b2:	e9 b9 c3 ff ff       	jmp    1a70 <__fprintf_chk@plt>
56b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
56be:	00 00
56c0:	48 8d 35 f1 21 00 00 	lea    rsi,[rip+0x21f1]        # 78b8 <quoting_style_vals+0x198>
56c7:	ba 05 00 00 00       	mov    edx,0x5
56cc:	31 ff                	xor    edi,edi
56ce:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
56d2:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
56d6:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
56da:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
56dd:	e8 1e c1 ff ff       	call   1800 <dcgettext@plt>
56e2:	48 83 ec 08          	sub    rsp,0x8
56e6:	41 56                	push   r14
56e8:	48 89 c2             	mov    rdx,rax
56eb:	4d 89 e9             	mov    r9,r13
56ee:	4d 89 e0             	mov    r8,r12
56f1:	48 89 d9             	mov    rcx,rbx
56f4:	48 89 ef             	mov    rdi,rbp
56f7:	be 01 00 00 00       	mov    esi,0x1
56fc:	31 c0                	xor    eax,eax
56fe:	e8 6d c3 ff ff       	call   1a70 <__fprintf_chk@plt>
5703:	58                   	pop    rax
5704:	5a                   	pop    rdx
5705:	48 83 c4 28          	add    rsp,0x28
5709:	5b                   	pop    rbx
570a:	5d                   	pop    rbp
570b:	41 5c                	pop    r12
570d:	41 5d                	pop    r13
570f:	41 5e                	pop    r14
5711:	41 5f                	pop    r15
5713:	c3                   	ret
5714:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5718:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
571c:	48 8d 35 b5 21 00 00 	lea    rsi,[rip+0x21b5]        # 78d8 <quoting_style_vals+0x1b8>
5723:	ba 05 00 00 00       	mov    edx,0x5
5728:	31 ff                	xor    edi,edi
572a:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
572e:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
5732:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
5736:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
5739:	e8 c2 c0 ff ff       	call   1800 <dcgettext@plt>
573e:	41 57                	push   r15
5740:	eb a4                	jmp    56e6 <version_etc_arn+0x2b6>
5742:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5748:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
574c:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
5750:	48 8d 35 a9 21 00 00 	lea    rsi,[rip+0x21a9]        # 7900 <quoting_style_vals+0x1e0>
5757:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
575b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
575f:	ba 05 00 00 00       	mov    edx,0x5
5764:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
5768:	31 ff                	xor    edi,edi
576a:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
576d:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
5771:	e8 8a c0 ff ff       	call   1800 <dcgettext@plt>
5776:	48 83 ec 08          	sub    rsp,0x8
577a:	4d 89 e9             	mov    r9,r13
577d:	41 54                	push   r12
577f:	41 57                	push   r15
5781:	41 56                	push   r14
5783:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
5788:	48 89 d9             	mov    rcx,rbx
578b:	48 89 c2             	mov    rdx,rax
578e:	48 89 ef             	mov    rdi,rbp
5791:	be 01 00 00 00       	mov    esi,0x1
5796:	31 c0                	xor    eax,eax
5798:	e8 d3 c2 ff ff       	call   1a70 <__fprintf_chk@plt>
579d:	48 83 c4 20          	add    rsp,0x20
57a1:	48 83 c4 28          	add    rsp,0x28
57a5:	5b                   	pop    rbx
57a6:	5d                   	pop    rbp
57a7:	41 5c                	pop    r12
57a9:	41 5d                	pop    r13
57ab:	41 5e                	pop    r14
57ad:	41 5f                	pop    r15
57af:	c3                   	ret
57b0:	4c 8b 4b 10          	mov    r9,QWORD PTR [rbx+0x10]
57b4:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
57b8:	48 8d 35 69 21 00 00 	lea    rsi,[rip+0x2169]        # 7928 <quoting_style_vals+0x208>
57bf:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
57c3:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
57c7:	ba 05 00 00 00       	mov    edx,0x5
57cc:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
57d0:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
57d4:	31 ff                	xor    edi,edi
57d6:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
57db:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
57de:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
57e2:	e8 19 c0 ff ff       	call   1800 <dcgettext@plt>
57e7:	41 55                	push   r13
57e9:	41 54                	push   r12
57eb:	41 57                	push   r15
57ed:	41 56                	push   r14
57ef:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
57f4:	eb 8d                	jmp    5783 <version_etc_arn+0x353>
57f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
57fd:	00 00 00
5800:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
5804:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
5808:	ba 05 00 00 00       	mov    edx,0x5
580d:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
5811:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
5815:	48 8d 35 a4 21 00 00 	lea    rsi,[rip+0x21a4]        # 79c0 <quoting_style_vals+0x2a0>
581c:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
5820:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
5824:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
5828:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
582c:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
5831:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
5836:	48 89 04 24          	mov    QWORD PTR [rsp],rax
583a:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
583f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
5842:	e9 8b fd ff ff       	jmp    55d2 <version_etc_arn+0x1a2>
5847:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
584e:	00 00

0000000000005850 <version_etc_ar>:
5850:	45 31 c9             	xor    r9d,r9d
5853:	49 83 38 00          	cmp    QWORD PTR [r8],0x0
5857:	74 12                	je     586b <version_etc_ar+0x1b>
5859:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5860:	49 83 c1 01          	add    r9,0x1
5864:	4b 83 3c c8 00       	cmp    QWORD PTR [r8+r9*8],0x0
5869:	75 f5                	jne    5860 <version_etc_ar+0x10>
586b:	e9 c0 fb ff ff       	jmp    5430 <version_etc_arn>

0000000000005870 <version_etc_va>:
5870:	48 83 ec 68          	sub    rsp,0x68
5874:	4d 89 c2             	mov    r10,r8
5877:	45 31 c9             	xor    r9d,r9d
587a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5881:	00 00
5883:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
5888:	31 c0                	xor    eax,eax
588a:	49 89 e0             	mov    r8,rsp
588d:	0f 1f 00             	nop    DWORD PTR [rax]
5890:	41 8b 02             	mov    eax,DWORD PTR [r10]
5893:	83 f8 2f             	cmp    eax,0x2f
5896:	77 42                	ja     58da <version_etc_va+0x6a>
5898:	41 89 c3             	mov    r11d,eax
589b:	4d 03 5a 10          	add    r11,QWORD PTR [r10+0x10]
589f:	83 c0 08             	add    eax,0x8
58a2:	41 89 02             	mov    DWORD PTR [r10],eax
58a5:	49 8b 03             	mov    rax,QWORD PTR [r11]
58a8:	48 85 c0             	test   rax,rax
58ab:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
58af:	74 0a                	je     58bb <version_etc_va+0x4b>
58b1:	49 83 c1 01          	add    r9,0x1
58b5:	49 83 f9 0a          	cmp    r9,0xa
58b9:	75 d5                	jne    5890 <version_etc_va+0x20>
58bb:	e8 70 fb ff ff       	call   5430 <version_etc_arn>
58c0:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
58c5:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
58cc:	00 00
58ce:	75 05                	jne    58d5 <version_etc_va+0x65>
58d0:	48 83 c4 68          	add    rsp,0x68
58d4:	c3                   	ret
58d5:	e8 56 bf ff ff       	call   1830 <__stack_chk_fail@plt>
58da:	4d 8b 5a 08          	mov    r11,QWORD PTR [r10+0x8]
58de:	49 8d 43 08          	lea    rax,[r11+0x8]
58e2:	49 89 42 08          	mov    QWORD PTR [r10+0x8],rax
58e6:	eb bd                	jmp    58a5 <version_etc_va+0x35>
58e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
58ef:	00

00000000000058f0 <version_etc>:
58f0:	55                   	push   rbp
58f1:	53                   	push   rbx
58f2:	41 ba 20 00 00 00    	mov    r10d,0x20
58f8:	45 31 db             	xor    r11d,r11d
58fb:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
5902:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5909:	00 00
590b:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
5910:	31 c0                	xor    eax,eax
5912:	48 8d 84 24 d0 00 00 	lea    rax,[rsp+0xd0]
5919:	00
591a:	4c 89 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],r8
5921:	00
5922:	48 8d 9c 24 d0 00 00 	lea    rbx,[rsp+0xd0]
5929:	00
592a:	4c 8d 44 24 20       	lea    r8,[rsp+0x20]
592f:	4c 89 8c 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],r9
5936:	00
5937:	c7 44 24 08 20 00 00 	mov    DWORD PTR [rsp+0x8],0x20
593e:	00
593f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
5944:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
594b:	00
594c:	45 31 c9             	xor    r9d,r9d
594f:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
5954:	48 89 c5             	mov    rbp,rax
5957:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
595e:	00 00
5960:	41 83 fa 2f          	cmp    r10d,0x2f
5964:	77 56                	ja     59bc <version_etc+0xcc>
5966:	44 89 d0             	mov    eax,r10d
5969:	41 bb 01 00 00 00    	mov    r11d,0x1
596f:	41 83 c2 08          	add    r10d,0x8
5973:	48 01 e8             	add    rax,rbp
5976:	48 8b 00             	mov    rax,QWORD PTR [rax]
5979:	48 85 c0             	test   rax,rax
597c:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
5980:	74 0a                	je     598c <version_etc+0x9c>
5982:	49 83 c1 01          	add    r9,0x1
5986:	49 83 f9 0a          	cmp    r9,0xa
598a:	75 d4                	jne    5960 <version_etc+0x70>
598c:	45 84 db             	test   r11b,r11b
598f:	75 24                	jne    59b5 <version_etc+0xc5>
5991:	e8 9a fa ff ff       	call   5430 <version_etc_arn>
5996:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
599b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
59a2:	00 00
59a4:	75 0a                	jne    59b0 <version_etc+0xc0>
59a6:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
59ad:	5b                   	pop    rbx
59ae:	5d                   	pop    rbp
59af:	c3                   	ret
59b0:	e8 7b be ff ff       	call   1830 <__stack_chk_fail@plt>
59b5:	44 89 54 24 08       	mov    DWORD PTR [rsp+0x8],r10d
59ba:	eb d5                	jmp    5991 <version_etc+0xa1>
59bc:	48 89 d8             	mov    rax,rbx
59bf:	48 83 c3 08          	add    rbx,0x8
59c3:	eb b1                	jmp    5976 <version_etc+0x86>
59c5:	90                   	nop
59c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
59cd:	00 00 00

00000000000059d0 <emit_bug_reporting_address>:
59d0:	53                   	push   rbx
59d1:	48 8d 35 ca 1d 00 00 	lea    rsi,[rip+0x1dca]        # 77a2 <quoting_style_vals+0x82>
59d8:	ba 05 00 00 00       	mov    edx,0x5
59dd:	31 ff                	xor    edi,edi
59df:	e8 1c be ff ff       	call   1800 <dcgettext@plt>
59e4:	48 8d 15 cc 1d 00 00 	lea    rdx,[rip+0x1dcc]        # 77b7 <quoting_style_vals+0x97>
59eb:	48 89 c6             	mov    rsi,rax
59ee:	bf 01 00 00 00       	mov    edi,0x1
59f3:	31 c0                	xor    eax,eax
59f5:	e8 f6 bf ff ff       	call   19f0 <__printf_chk@plt>
59fa:	48 8d 35 cc 1d 00 00 	lea    rsi,[rip+0x1dcc]        # 77cd <quoting_style_vals+0xad>
5a01:	ba 05 00 00 00       	mov    edx,0x5
5a06:	31 ff                	xor    edi,edi
5a08:	e8 f3 bd ff ff       	call   1800 <dcgettext@plt>
5a0d:	48 8d 0d a4 15 00 00 	lea    rcx,[rip+0x15a4]        # 6fb8 <_IO_stdin_used+0x878>
5a14:	48 8d 15 b1 0d 00 00 	lea    rdx,[rip+0xdb1]        # 67cc <_IO_stdin_used+0x8c>
5a1b:	48 89 c6             	mov    rsi,rax
5a1e:	bf 01 00 00 00       	mov    edi,0x1
5a23:	31 c0                	xor    eax,eax
5a25:	e8 c6 bf ff ff       	call   19f0 <__printf_chk@plt>
5a2a:	48 8b 1d 77 46 20 00 	mov    rbx,QWORD PTR [rip+0x204677]        # 20a0a8 <stdout@@GLIBC_2.2.5>
5a31:	48 8d 35 c8 1f 00 00 	lea    rsi,[rip+0x1fc8]        # 7a00 <quoting_style_vals+0x2e0>
5a38:	31 ff                	xor    edi,edi
5a3a:	ba 05 00 00 00       	mov    edx,0x5
5a3f:	e8 bc bd ff ff       	call   1800 <dcgettext@plt>
5a44:	48 89 de             	mov    rsi,rbx
5a47:	48 89 c7             	mov    rdi,rax
5a4a:	5b                   	pop    rbx
5a4b:	e9 c0 be ff ff       	jmp    1910 <fputs_unlocked@plt>

0000000000005a50 <xmalloc>:
5a50:	53                   	push   rbx
5a51:	48 89 fb             	mov    rbx,rdi
5a54:	e8 17 bf ff ff       	call   1970 <malloc@plt>
5a59:	48 85 c0             	test   rax,rax
5a5c:	75 05                	jne    5a63 <xmalloc+0x13>
5a5e:	48 85 db             	test   rbx,rbx
5a61:	75 02                	jne    5a65 <xmalloc+0x15>
5a63:	5b                   	pop    rbx
5a64:	c3                   	ret
5a65:	e8 36 02 00 00       	call   5ca0 <xalloc_die>
5a6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005a70 <xnmalloc>:
5a70:	48 89 f8             	mov    rax,rdi
5a73:	48 f7 e6             	mul    rsi
5a76:	48 89 c7             	mov    rdi,rax
5a79:	0f 90 c0             	seto   al
5a7c:	48 85 ff             	test   rdi,rdi
5a7f:	78 0a                	js     5a8b <xnmalloc+0x1b>
5a81:	0f b6 c0             	movzx  eax,al
5a84:	48 85 c0             	test   rax,rax
5a87:	75 02                	jne    5a8b <xnmalloc+0x1b>
5a89:	eb c5                	jmp    5a50 <xmalloc>
5a8b:	48 83 ec 08          	sub    rsp,0x8
5a8f:	e8 0c 02 00 00       	call   5ca0 <xalloc_die>
5a94:	66 90                	xchg   ax,ax
5a96:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5a9d:	00 00 00

0000000000005aa0 <xcharalloc>:
5aa0:	eb ae                	jmp    5a50 <xmalloc>
5aa2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5aa6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5aad:	00 00 00

0000000000005ab0 <xrealloc>:
5ab0:	48 85 f6             	test   rsi,rsi
5ab3:	53                   	push   rbx
5ab4:	48 89 f3             	mov    rbx,rsi
5ab7:	75 05                	jne    5abe <xrealloc+0xe>
5ab9:	48 85 ff             	test   rdi,rdi
5abc:	75 1a                	jne    5ad8 <xrealloc+0x28>
5abe:	48 89 de             	mov    rsi,rbx
5ac1:	e8 0a bf ff ff       	call   19d0 <realloc@plt>
5ac6:	48 85 c0             	test   rax,rax
5ac9:	75 05                	jne    5ad0 <xrealloc+0x20>
5acb:	48 85 db             	test   rbx,rbx
5ace:	75 11                	jne    5ae1 <xrealloc+0x31>
5ad0:	5b                   	pop    rbx
5ad1:	c3                   	ret
5ad2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5ad8:	e8 93 bc ff ff       	call   1770 <free@plt>
5add:	31 c0                	xor    eax,eax
5adf:	5b                   	pop    rbx
5ae0:	c3                   	ret
5ae1:	e8 ba 01 00 00       	call   5ca0 <xalloc_die>
5ae6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5aed:	00 00 00

0000000000005af0 <xnrealloc>:
5af0:	48 89 f0             	mov    rax,rsi
5af3:	48 f7 e2             	mul    rdx
5af6:	48 89 c6             	mov    rsi,rax
5af9:	0f 90 c0             	seto   al
5afc:	48 85 f6             	test   rsi,rsi
5aff:	78 0a                	js     5b0b <xnrealloc+0x1b>
5b01:	0f b6 c0             	movzx  eax,al
5b04:	48 85 c0             	test   rax,rax
5b07:	75 02                	jne    5b0b <xnrealloc+0x1b>
5b09:	eb a5                	jmp    5ab0 <xrealloc>
5b0b:	48 83 ec 08          	sub    rsp,0x8
5b0f:	e8 8c 01 00 00       	call   5ca0 <xalloc_die>
5b14:	66 90                	xchg   ax,ax
5b16:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5b1d:	00 00 00

0000000000005b20 <x2nrealloc>:
5b20:	48 85 ff             	test   rdi,rdi
5b23:	49 89 d1             	mov    r9,rdx
5b26:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
5b29:	74 35                	je     5b60 <x2nrealloc+0x40>
5b2b:	31 d2                	xor    edx,edx
5b2d:	48 b8 54 55 55 55 55 	movabs rax,0x5555555555555554
5b34:	55 55 55
5b37:	49 f7 f1             	div    r9
5b3a:	48 39 c8             	cmp    rax,rcx
5b3d:	76 3c                	jbe    5b7b <x2nrealloc+0x5b>
5b3f:	48 89 c8             	mov    rax,rcx
5b42:	48 d1 e8             	shr    rax,1
5b45:	48 8d 4c 08 01       	lea    rcx,[rax+rcx*1+0x1]
5b4a:	48 89 0e             	mov    QWORD PTR [rsi],rcx
5b4d:	49 0f af c9          	imul   rcx,r9
5b51:	48 89 ce             	mov    rsi,rcx
5b54:	e9 57 ff ff ff       	jmp    5ab0 <xrealloc>
5b59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5b60:	48 85 c9             	test   rcx,rcx
5b63:	74 23                	je     5b88 <x2nrealloc+0x68>
5b65:	48 89 c8             	mov    rax,rcx
5b68:	49 f7 e1             	mul    r9
5b6b:	0f 90 c2             	seto   dl
5b6e:	48 85 c0             	test   rax,rax
5b71:	0f b6 d2             	movzx  edx,dl
5b74:	78 05                	js     5b7b <x2nrealloc+0x5b>
5b76:	48 85 d2             	test   rdx,rdx
5b79:	74 cf                	je     5b4a <x2nrealloc+0x2a>
5b7b:	48 83 ec 08          	sub    rsp,0x8
5b7f:	e8 1c 01 00 00       	call   5ca0 <xalloc_die>
5b84:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5b88:	31 d2                	xor    edx,edx
5b8a:	b8 80 00 00 00       	mov    eax,0x80
5b8f:	45 31 c0             	xor    r8d,r8d
5b92:	49 f7 f1             	div    r9
5b95:	48 85 c0             	test   rax,rax
5b98:	41 0f 94 c0          	sete   r8b
5b9c:	49 8d 0c 00          	lea    rcx,[r8+rax*1]
5ba0:	eb c3                	jmp    5b65 <x2nrealloc+0x45>
5ba2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5ba6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5bad:	00 00 00

0000000000005bb0 <x2realloc>:
5bb0:	48 85 ff             	test   rdi,rdi
5bb3:	48 8b 06             	mov    rax,QWORD PTR [rsi]
5bb6:	74 28                	je     5be0 <x2realloc+0x30>
5bb8:	48 ba 53 55 55 55 55 	movabs rdx,0x5555555555555553
5bbf:	55 55 55
5bc2:	48 39 d0             	cmp    rax,rdx
5bc5:	77 2a                	ja     5bf1 <x2realloc+0x41>
5bc7:	48 89 c2             	mov    rdx,rax
5bca:	48 d1 ea             	shr    rdx,1
5bcd:	48 8d 44 02 01       	lea    rax,[rdx+rax*1+0x1]
5bd2:	48 89 06             	mov    QWORD PTR [rsi],rax
5bd5:	48 89 c6             	mov    rsi,rax
5bd8:	e9 d3 fe ff ff       	jmp    5ab0 <xrealloc>
5bdd:	0f 1f 00             	nop    DWORD PTR [rax]
5be0:	48 85 c0             	test   rax,rax
5be3:	ba 80 00 00 00       	mov    edx,0x80
5be8:	48 0f 44 c2          	cmove  rax,rdx
5bec:	48 85 c0             	test   rax,rax
5bef:	79 e1                	jns    5bd2 <x2realloc+0x22>
5bf1:	48 83 ec 08          	sub    rsp,0x8
5bf5:	e8 a6 00 00 00       	call   5ca0 <xalloc_die>
5bfa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005c00 <xzalloc>:
5c00:	53                   	push   rbx
5c01:	48 89 fb             	mov    rbx,rdi
5c04:	e8 47 fe ff ff       	call   5a50 <xmalloc>
5c09:	48 89 da             	mov    rdx,rbx
5c0c:	31 f6                	xor    esi,esi
5c0e:	48 89 c7             	mov    rdi,rax
5c11:	5b                   	pop    rbx
5c12:	e9 a9 bc ff ff       	jmp    18c0 <memset@plt>
5c17:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5c1e:	00 00

0000000000005c20 <xcalloc>:
5c20:	48 89 f8             	mov    rax,rdi
5c23:	48 83 ec 08          	sub    rsp,0x8
5c27:	48 f7 e6             	mul    rsi
5c2a:	0f 90 c2             	seto   dl
5c2d:	48 85 c0             	test   rax,rax
5c30:	78 17                	js     5c49 <xcalloc+0x29>
5c32:	0f b6 d2             	movzx  edx,dl
5c35:	48 85 d2             	test   rdx,rdx
5c38:	75 0f                	jne    5c49 <xcalloc+0x29>
5c3a:	e8 e1 bc ff ff       	call   1920 <calloc@plt>
5c3f:	48 85 c0             	test   rax,rax
5c42:	74 05                	je     5c49 <xcalloc+0x29>
5c44:	48 83 c4 08          	add    rsp,0x8
5c48:	c3                   	ret
5c49:	e8 52 00 00 00       	call   5ca0 <xalloc_die>
5c4e:	66 90                	xchg   ax,ax

0000000000005c50 <xmemdup>:
5c50:	55                   	push   rbp
5c51:	53                   	push   rbx
5c52:	48 89 fd             	mov    rbp,rdi
5c55:	48 89 f7             	mov    rdi,rsi
5c58:	48 89 f3             	mov    rbx,rsi
5c5b:	48 83 ec 08          	sub    rsp,0x8
5c5f:	e8 ec fd ff ff       	call   5a50 <xmalloc>
5c64:	48 83 c4 08          	add    rsp,0x8
5c68:	48 89 da             	mov    rdx,rbx
5c6b:	48 89 ee             	mov    rsi,rbp
5c6e:	5b                   	pop    rbx
5c6f:	5d                   	pop    rbp
5c70:	48 89 c7             	mov    rdi,rax
5c73:	e9 d8 bc ff ff       	jmp    1950 <memcpy@plt>
5c78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5c7f:	00

0000000000005c80 <xstrdup>:
5c80:	53                   	push   rbx
5c81:	48 89 fb             	mov    rbx,rdi
5c84:	e8 97 bb ff ff       	call   1820 <strlen@plt>
5c89:	48 89 df             	mov    rdi,rbx
5c8c:	48 8d 70 01          	lea    rsi,[rax+0x1]
5c90:	5b                   	pop    rbx
5c91:	eb bd                	jmp    5c50 <xmemdup>
5c93:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5c9a:	00 00 00
5c9d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005ca0 <xalloc_die>:
5ca0:	48 8d 35 08 1e 00 00 	lea    rsi,[rip+0x1e08]        # 7aaf <version_etc_copyright+0x2f>
5ca7:	48 83 ec 08          	sub    rsp,0x8
5cab:	ba 05 00 00 00       	mov    edx,0x5
5cb0:	31 ff                	xor    edi,edi
5cb2:	e8 49 bb ff ff       	call   1800 <dcgettext@plt>
5cb7:	8b 3d 63 43 20 00    	mov    edi,DWORD PTR [rip+0x204363]        # 20a020 <exit_failure>
5cbd:	48 8d 15 34 15 00 00 	lea    rdx,[rip+0x1534]        # 71f8 <delimit_method_map+0x68>
5cc4:	48 89 c1             	mov    rcx,rax
5cc7:	31 f6                	xor    esi,esi
5cc9:	31 c0                	xor    eax,eax
5ccb:	e8 30 bd ff ff       	call   1a00 <error@plt>
5cd0:	e8 ab ba ff ff       	call   1780 <abort@plt>
5cd5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5cdc:	00 00 00
5cdf:	90                   	nop

0000000000005ce0 <collate_error>:
5ce0:	41 56                	push   r14
5ce2:	41 55                	push   r13
5ce4:	41 89 fe             	mov    r14d,edi
5ce7:	41 54                	push   r12
5ce9:	55                   	push   rbp
5cea:	49 89 d4             	mov    r12,rdx
5ced:	53                   	push   rbx
5cee:	48 89 f3             	mov    rbx,rsi
5cf1:	48 8d 35 c8 1d 00 00 	lea    rsi,[rip+0x1dc8]        # 7ac0 <version_etc_copyright+0x40>
5cf8:	ba 05 00 00 00       	mov    edx,0x5
5cfd:	31 ff                	xor    edi,edi
5cff:	4d 89 c5             	mov    r13,r8
5d02:	48 89 cd             	mov    rbp,rcx
5d05:	e8 f6 ba ff ff       	call   1800 <dcgettext@plt>
5d0a:	44 89 f6             	mov    esi,r14d
5d0d:	48 89 c2             	mov    rdx,rax
5d10:	31 ff                	xor    edi,edi
5d12:	31 c0                	xor    eax,eax
5d14:	e8 e7 bc ff ff       	call   1a00 <error@plt>
5d19:	48 8d 35 c0 1d 00 00 	lea    rsi,[rip+0x1dc0]        # 7ae0 <version_etc_copyright+0x60>
5d20:	ba 05 00 00 00       	mov    edx,0x5
5d25:	31 ff                	xor    edi,edi
5d27:	e8 d4 ba ff ff       	call   1800 <dcgettext@plt>
5d2c:	31 f6                	xor    esi,esi
5d2e:	48 89 c2             	mov    rdx,rax
5d31:	31 ff                	xor    edi,edi
5d33:	31 c0                	xor    eax,eax
5d35:	e8 c6 bc ff ff       	call   1a00 <error@plt>
5d3a:	4c 89 e9             	mov    rcx,r13
5d3d:	48 89 ea             	mov    rdx,rbp
5d40:	be 08 00 00 00       	mov    esi,0x8
5d45:	bf 01 00 00 00       	mov    edi,0x1
5d4a:	e8 61 f3 ff ff       	call   50b0 <quotearg_n_style_mem>
5d4f:	4c 89 e1             	mov    rcx,r12
5d52:	48 89 da             	mov    rdx,rbx
5d55:	be 08 00 00 00       	mov    esi,0x8
5d5a:	31 ff                	xor    edi,edi
5d5c:	48 89 c5             	mov    rbp,rax
5d5f:	e8 4c f3 ff ff       	call   50b0 <quotearg_n_style_mem>
5d64:	48 8d 35 a5 1d 00 00 	lea    rsi,[rip+0x1da5]        # 7b10 <version_etc_copyright+0x90>
5d6b:	48 89 c3             	mov    rbx,rax
5d6e:	ba 05 00 00 00       	mov    edx,0x5
5d73:	31 ff                	xor    edi,edi
5d75:	e8 86 ba ff ff       	call   1800 <dcgettext@plt>
5d7a:	49 89 e8             	mov    r8,rbp
5d7d:	48 89 d9             	mov    rcx,rbx
5d80:	8b 3d 9a 42 20 00    	mov    edi,DWORD PTR [rip+0x20429a]        # 20a020 <exit_failure>
5d86:	5b                   	pop    rbx
5d87:	5d                   	pop    rbp
5d88:	41 5c                	pop    r12
5d8a:	41 5d                	pop    r13
5d8c:	41 5e                	pop    r14
5d8e:	48 89 c2             	mov    rdx,rax
5d91:	31 f6                	xor    esi,esi
5d93:	31 c0                	xor    eax,eax
5d95:	e9 66 bc ff ff       	jmp    1a00 <error@plt>
5d9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005da0 <xmemcoll>:
5da0:	41 56                	push   r14
5da2:	41 55                	push   r13
5da4:	49 89 cd             	mov    r13,rcx
5da7:	41 54                	push   r12
5da9:	55                   	push   rbp
5daa:	49 89 d4             	mov    r12,rdx
5dad:	53                   	push   rbx
5dae:	48 89 f5             	mov    rbp,rsi
5db1:	48 89 fb             	mov    rbx,rdi
5db4:	e8 d7 07 00 00       	call   6590 <memcoll>
5db9:	41 89 c6             	mov    r14d,eax
5dbc:	e8 cf b9 ff ff       	call   1790 <__errno_location@plt>
5dc1:	8b 38                	mov    edi,DWORD PTR [rax]
5dc3:	85 ff                	test   edi,edi
5dc5:	74 11                	je     5dd8 <xmemcoll+0x38>
5dc7:	4d 89 e8             	mov    r8,r13
5dca:	4c 89 e1             	mov    rcx,r12
5dcd:	48 89 ea             	mov    rdx,rbp
5dd0:	48 89 de             	mov    rsi,rbx
5dd3:	e8 08 ff ff ff       	call   5ce0 <collate_error>
5dd8:	5b                   	pop    rbx
5dd9:	44 89 f0             	mov    eax,r14d
5ddc:	5d                   	pop    rbp
5ddd:	41 5c                	pop    r12
5ddf:	41 5d                	pop    r13
5de1:	41 5e                	pop    r14
5de3:	c3                   	ret
5de4:	66 90                	xchg   ax,ax
5de6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5ded:	00 00 00

0000000000005df0 <xmemcoll0>:
5df0:	41 56                	push   r14
5df2:	41 55                	push   r13
5df4:	49 89 ce             	mov    r14,rcx
5df7:	41 54                	push   r12
5df9:	55                   	push   rbp
5dfa:	49 89 d4             	mov    r12,rdx
5dfd:	53                   	push   rbx
5dfe:	48 89 fd             	mov    rbp,rdi
5e01:	48 89 f3             	mov    rbx,rsi
5e04:	e8 37 08 00 00       	call   6640 <memcoll0>
5e09:	41 89 c5             	mov    r13d,eax
5e0c:	e8 7f b9 ff ff       	call   1790 <__errno_location@plt>
5e11:	8b 38                	mov    edi,DWORD PTR [rax]
5e13:	85 ff                	test   edi,edi
5e15:	74 13                	je     5e2a <xmemcoll0+0x3a>
5e17:	48 8d 53 ff          	lea    rdx,[rbx-0x1]
5e1b:	4d 8d 46 ff          	lea    r8,[r14-0x1]
5e1f:	4c 89 e1             	mov    rcx,r12
5e22:	48 89 ee             	mov    rsi,rbp
5e25:	e8 b6 fe ff ff       	call   5ce0 <collate_error>
5e2a:	5b                   	pop    rbx
5e2b:	44 89 e8             	mov    eax,r13d
5e2e:	5d                   	pop    rbp
5e2f:	41 5c                	pop    r12
5e31:	41 5d                	pop    r13
5e33:	41 5e                	pop    r14
5e35:	c3                   	ret
5e36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5e3d:	00 00 00

0000000000005e40 <xstrtoul>:
5e40:	41 57                	push   r15
5e42:	41 56                	push   r14
5e44:	41 55                	push   r13
5e46:	41 54                	push   r12
5e48:	55                   	push   rbp
5e49:	53                   	push   rbx
5e4a:	48 83 ec 28          	sub    rsp,0x28
5e4e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5e55:	00 00
5e57:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
5e5c:	31 c0                	xor    eax,eax
5e5e:	83 fa 24             	cmp    edx,0x24
5e61:	0f 87 5e 03 00 00    	ja     61c5 <xstrtoul+0x385>
5e67:	48 8d 44 24 10       	lea    rax,[rsp+0x10]
5e6c:	49 89 f7             	mov    r15,rsi
5e6f:	48 85 f6             	test   rsi,rsi
5e72:	48 89 fd             	mov    rbp,rdi
5e75:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
5e79:	49 89 ce             	mov    r14,rcx
5e7c:	4d 89 c5             	mov    r13,r8
5e7f:	4c 0f 44 f8          	cmove  r15,rax
5e83:	e8 08 b9 ff ff       	call   1790 <__errno_location@plt>
5e88:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
5e8e:	49 89 c4             	mov    r12,rax
5e91:	0f b6 5d 00          	movzx  ebx,BYTE PTR [rbp+0x0]
5e95:	e8 06 bc ff ff       	call   1aa0 <__ctype_b_loc@plt>
5e9a:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
5e9e:	48 8b 30             	mov    rsi,QWORD PTR [rax]
5ea1:	48 89 e8             	mov    rax,rbp
5ea4:	eb 11                	jmp    5eb7 <xstrtoul+0x77>
5ea6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5ead:	00 00 00
5eb0:	48 83 c0 01          	add    rax,0x1
5eb4:	0f b6 18             	movzx  ebx,BYTE PTR [rax]
5eb7:	0f b6 cb             	movzx  ecx,bl
5eba:	f6 44 4e 01 20       	test   BYTE PTR [rsi+rcx*2+0x1],0x20
5ebf:	75 ef                	jne    5eb0 <xstrtoul+0x70>
5ec1:	80 fb 2d             	cmp    bl,0x2d
5ec4:	74 52                	je     5f18 <xstrtoul+0xd8>
5ec6:	4c 89 fe             	mov    rsi,r15
5ec9:	48 89 ef             	mov    rdi,rbp
5ecc:	e8 5f bb ff ff       	call   1a30 <strtoul@plt>
5ed1:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
5ed4:	48 89 c3             	mov    rbx,rax
5ed7:	48 39 e9             	cmp    rcx,rbp
5eda:	74 2c                	je     5f08 <xstrtoul+0xc8>
5edc:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
5ee0:	85 c0                	test   eax,eax
5ee2:	74 64                	je     5f48 <xstrtoul+0x108>
5ee4:	83 f8 22             	cmp    eax,0x22
5ee7:	bd 01 00 00 00       	mov    ebp,0x1
5eec:	75 2a                	jne    5f18 <xstrtoul+0xd8>
5eee:	4d 85 ed             	test   r13,r13
5ef1:	74 09                	je     5efc <xstrtoul+0xbc>
5ef3:	44 0f b6 21          	movzx  r12d,BYTE PTR [rcx]
5ef7:	45 84 e4             	test   r12b,r12b
5efa:	75 7b                	jne    5f77 <xstrtoul+0x137>
5efc:	49 89 1e             	mov    QWORD PTR [r14],rbx
5eff:	eb 1c                	jmp    5f1d <xstrtoul+0xdd>
5f01:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5f08:	4d 85 ed             	test   r13,r13
5f0b:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
5f10:	75 3e                	jne    5f50 <xstrtoul+0x110>
5f12:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5f18:	bd 04 00 00 00       	mov    ebp,0x4
5f1d:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
5f22:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
5f29:	00 00
5f2b:	89 e8                	mov    eax,ebp
5f2d:	0f 85 8d 02 00 00    	jne    61c0 <xstrtoul+0x380>
5f33:	48 83 c4 28          	add    rsp,0x28
5f37:	5b                   	pop    rbx
5f38:	5d                   	pop    rbp
5f39:	41 5c                	pop    r12
5f3b:	41 5d                	pop    r13
5f3d:	41 5e                	pop    r14
5f3f:	41 5f                	pop    r15
5f41:	c3                   	ret
5f42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5f48:	31 ed                	xor    ebp,ebp
5f4a:	eb a2                	jmp    5eee <xstrtoul+0xae>
5f4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5f50:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
5f55:	45 84 e4             	test   r12b,r12b
5f58:	74 be                	je     5f18 <xstrtoul+0xd8>
5f5a:	41 0f be f4          	movsx  esi,r12b
5f5e:	4c 89 ef             	mov    rdi,r13
5f61:	31 ed                	xor    ebp,ebp
5f63:	e8 08 b9 ff ff       	call   1870 <strchr@plt>
5f68:	48 85 c0             	test   rax,rax
5f6b:	bb 01 00 00 00       	mov    ebx,0x1
5f70:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
5f75:	74 a1                	je     5f18 <xstrtoul+0xd8>
5f77:	41 0f be f4          	movsx  esi,r12b
5f7b:	4c 89 ef             	mov    rdi,r13
5f7e:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
5f83:	e8 e8 b8 ff ff       	call   1870 <strchr@plt>
5f88:	48 85 c0             	test   rax,rax
5f8b:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
5f90:	0f 84 c6 00 00 00    	je     605c <xstrtoul+0x21c>
5f96:	41 8d 44 24 bb       	lea    eax,[r12-0x45]
5f9b:	3c 2f                	cmp    al,0x2f
5f9d:	77 51                	ja     5ff0 <xstrtoul+0x1b0>
5f9f:	48 ba 45 89 30 00 44 	movabs rdx,0x814400308945
5fa6:	81 00 00
5fa9:	48 0f a3 c2          	bt     rdx,rax
5fad:	73 41                	jae    5ff0 <xstrtoul+0x1b0>
5faf:	be 30 00 00 00       	mov    esi,0x30
5fb4:	4c 89 ef             	mov    rdi,r13
5fb7:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
5fbc:	e8 af b8 ff ff       	call   1870 <strchr@plt>
5fc1:	48 85 c0             	test   rax,rax
5fc4:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
5fc9:	74 25                	je     5ff0 <xstrtoul+0x1b0>
5fcb:	0f b6 41 01          	movzx  eax,BYTE PTR [rcx+0x1]
5fcf:	3c 44                	cmp    al,0x44
5fd1:	74 0c                	je     5fdf <xstrtoul+0x19f>
5fd3:	3c 69                	cmp    al,0x69
5fd5:	0f 84 cd 01 00 00    	je     61a8 <xstrtoul+0x368>
5fdb:	3c 42                	cmp    al,0x42
5fdd:	75 11                	jne    5ff0 <xstrtoul+0x1b0>
5fdf:	bf 02 00 00 00       	mov    edi,0x2
5fe4:	be e8 03 00 00       	mov    esi,0x3e8
5fe9:	eb 0f                	jmp    5ffa <xstrtoul+0x1ba>
5feb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5ff0:	bf 01 00 00 00       	mov    edi,0x1
5ff5:	be 00 04 00 00       	mov    esi,0x400
5ffa:	41 83 ec 42          	sub    r12d,0x42
5ffe:	41 80 fc 35          	cmp    r12b,0x35
6002:	77 58                	ja     605c <xstrtoul+0x21c>
6004:	48 8d 15 75 1b 00 00 	lea    rdx,[rip+0x1b75]        # 7b80 <version_etc_copyright+0x100>
600b:	45 0f b6 e4          	movzx  r12d,r12b
600f:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
6013:	48 01 d0             	add    rax,rdx
6016:	ff e0                	jmp    rax
6018:	48 89 d8             	mov    rax,rbx
601b:	48 f7 e6             	mul    rsi
601e:	0f 80 ed 01 00 00    	jo     6211 <xstrtoul+0x3d1>
6024:	45 31 c0             	xor    r8d,r8d
6027:	48 f7 e6             	mul    rsi
602a:	0f 80 d2 01 00 00    	jo     6202 <xstrtoul+0x3c2>
6030:	48 89 c3             	mov    rbx,rax
6033:	44 09 c5             	or     ebp,r8d
6036:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
603d:	00 00 00
6040:	48 63 ff             	movsxd rdi,edi
6043:	89 e8                	mov    eax,ebp
6045:	48 01 f9             	add    rcx,rdi
6048:	83 c8 02             	or     eax,0x2
604b:	49 89 0f             	mov    QWORD PTR [r15],rcx
604e:	80 39 00             	cmp    BYTE PTR [rcx],0x0
6051:	49 89 1e             	mov    QWORD PTR [r14],rbx
6054:	0f 45 e8             	cmovne ebp,eax
6057:	e9 c1 fe ff ff       	jmp    5f1d <xstrtoul+0xdd>
605c:	49 89 1e             	mov    QWORD PTR [r14],rbx
605f:	83 cd 02             	or     ebp,0x2
6062:	e9 b6 fe ff ff       	jmp    5f1d <xstrtoul+0xdd>
6067:	ba 02 00 00 00       	mov    edx,0x2
606c:	48 89 d0             	mov    rax,rdx
606f:	48 f7 e3             	mul    rbx
6072:	0f 80 96 00 00 00    	jo     610e <xstrtoul+0x2ce>
6078:	48 01 db             	add    rbx,rbx
607b:	eb c3                	jmp    6040 <xstrtoul+0x200>
607d:	ba 00 02 00 00       	mov    edx,0x200
6082:	48 89 d0             	mov    rax,rdx
6085:	48 f7 e3             	mul    rbx
6088:	0f 80 80 00 00 00    	jo     610e <xstrtoul+0x2ce>
608e:	48 c1 e3 09          	shl    rbx,0x9
6092:	eb ac                	jmp    6040 <xstrtoul+0x200>
6094:	41 b8 07 00 00 00    	mov    r8d,0x7
609a:	45 31 c9             	xor    r9d,r9d
609d:	0f 1f 00             	nop    DWORD PTR [rax]
60a0:	48 89 d8             	mov    rax,rbx
60a3:	48 f7 e6             	mul    rsi
60a6:	48 89 c3             	mov    rbx,rax
60a9:	0f 80 8f 01 00 00    	jo     623e <xstrtoul+0x3fe>
60af:	41 83 e8 01          	sub    r8d,0x1
60b3:	75 eb                	jne    60a0 <xstrtoul+0x260>
60b5:	44 09 cd             	or     ebp,r9d
60b8:	eb 86                	jmp    6040 <xstrtoul+0x200>
60ba:	41 b8 08 00 00 00    	mov    r8d,0x8
60c0:	45 31 c9             	xor    r9d,r9d
60c3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
60c8:	48 89 d8             	mov    rax,rbx
60cb:	48 f7 e6             	mul    rsi
60ce:	48 89 c3             	mov    rbx,rax
60d1:	0f 80 49 01 00 00    	jo     6220 <xstrtoul+0x3e0>
60d7:	41 83 e8 01          	sub    r8d,0x1
60db:	75 eb                	jne    60c8 <xstrtoul+0x288>
60dd:	eb d6                	jmp    60b5 <xstrtoul+0x275>
60df:	41 b8 04 00 00 00    	mov    r8d,0x4
60e5:	45 31 c9             	xor    r9d,r9d
60e8:	48 89 d8             	mov    rax,rbx
60eb:	48 f7 e6             	mul    rsi
60ee:	48 89 c3             	mov    rbx,rax
60f1:	0f 80 fc 00 00 00    	jo     61f3 <xstrtoul+0x3b3>
60f7:	41 83 e8 01          	sub    r8d,0x1
60fb:	75 eb                	jne    60e8 <xstrtoul+0x2a8>
60fd:	eb b6                	jmp    60b5 <xstrtoul+0x275>
60ff:	48 89 d8             	mov    rax,rbx
6102:	48 f7 e6             	mul    rsi
6105:	48 89 c3             	mov    rbx,rax
6108:	0f 81 32 ff ff ff    	jno    6040 <xstrtoul+0x200>
610e:	bd 01 00 00 00       	mov    ebp,0x1
6113:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6117:	e9 24 ff ff ff       	jmp    6040 <xstrtoul+0x200>
611c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6120:	41 b8 05 00 00 00    	mov    r8d,0x5
6126:	45 31 c9             	xor    r9d,r9d
6129:	48 89 d8             	mov    rax,rbx
612c:	48 f7 e6             	mul    rsi
612f:	48 89 c3             	mov    rbx,rax
6132:	0f 80 f7 00 00 00    	jo     622f <xstrtoul+0x3ef>
6138:	41 83 e8 01          	sub    r8d,0x1
613c:	75 eb                	jne    6129 <xstrtoul+0x2e9>
613e:	e9 72 ff ff ff       	jmp    60b5 <xstrtoul+0x275>
6143:	41 b8 06 00 00 00    	mov    r8d,0x6
6149:	45 31 c9             	xor    r9d,r9d
614c:	48 89 d8             	mov    rax,rbx
614f:	48 f7 e6             	mul    rsi
6152:	48 89 c3             	mov    rbx,rax
6155:	0f 80 89 00 00 00    	jo     61e4 <xstrtoul+0x3a4>
615b:	41 83 e8 01          	sub    r8d,0x1
615f:	75 eb                	jne    614c <xstrtoul+0x30c>
6161:	e9 4f ff ff ff       	jmp    60b5 <xstrtoul+0x275>
6166:	ba 00 04 00 00       	mov    edx,0x400
616b:	48 89 d0             	mov    rax,rdx
616e:	48 f7 e3             	mul    rbx
6171:	70 9b                	jo     610e <xstrtoul+0x2ce>
6173:	48 c1 e3 0a          	shl    rbx,0xa
6177:	e9 c4 fe ff ff       	jmp    6040 <xstrtoul+0x200>
617c:	48 89 d8             	mov    rax,rbx
617f:	48 f7 e6             	mul    rsi
6182:	0f 80 c5 00 00 00    	jo     624d <xstrtoul+0x40d>
6188:	45 31 c0             	xor    r8d,r8d
618b:	48 f7 e6             	mul    rsi
618e:	0f 81 93 fe ff ff    	jno    6027 <xstrtoul+0x1e7>
6194:	41 b8 01 00 00 00    	mov    r8d,0x1
619a:	48 83 c8 ff          	or     rax,0xffffffffffffffff
619e:	e9 84 fe ff ff       	jmp    6027 <xstrtoul+0x1e7>
61a3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
61a8:	31 ff                	xor    edi,edi
61aa:	80 79 02 42          	cmp    BYTE PTR [rcx+0x2],0x42
61ae:	be 00 04 00 00       	mov    esi,0x400
61b3:	40 0f 94 c7          	sete   dil
61b7:	8d 7c 3f 01          	lea    edi,[rdi+rdi*1+0x1]
61bb:	e9 3a fe ff ff       	jmp    5ffa <xstrtoul+0x1ba>
61c0:	e8 6b b6 ff ff       	call   1830 <__stack_chk_fail@plt>
61c5:	48 8d 0d 8c 1a 00 00 	lea    rcx,[rip+0x1a8c]        # 7c58 <__PRETTY_FUNCTION__.4162>
61cc:	48 8d 35 65 19 00 00 	lea    rsi,[rip+0x1965]        # 7b38 <version_etc_copyright+0xb8>
61d3:	48 8d 3d 7e 19 00 00 	lea    rdi,[rip+0x197e]        # 7b58 <version_etc_copyright+0xd8>
61da:	ba 54 00 00 00       	mov    edx,0x54
61df:	e8 cc b6 ff ff       	call   18b0 <__assert_fail@plt>
61e4:	41 b9 01 00 00 00    	mov    r9d,0x1
61ea:	48 83 cb ff          	or     rbx,0xffffffffffffffff
61ee:	e9 68 ff ff ff       	jmp    615b <xstrtoul+0x31b>
61f3:	41 b9 01 00 00 00    	mov    r9d,0x1
61f9:	48 83 cb ff          	or     rbx,0xffffffffffffffff
61fd:	e9 f5 fe ff ff       	jmp    60f7 <xstrtoul+0x2b7>
6202:	41 b8 01 00 00 00    	mov    r8d,0x1
6208:	48 83 cb ff          	or     rbx,0xffffffffffffffff
620c:	e9 22 fe ff ff       	jmp    6033 <xstrtoul+0x1f3>
6211:	48 83 c8 ff          	or     rax,0xffffffffffffffff
6215:	41 b8 01 00 00 00    	mov    r8d,0x1
621b:	e9 07 fe ff ff       	jmp    6027 <xstrtoul+0x1e7>
6220:	41 b9 01 00 00 00    	mov    r9d,0x1
6226:	48 83 cb ff          	or     rbx,0xffffffffffffffff
622a:	e9 a8 fe ff ff       	jmp    60d7 <xstrtoul+0x297>
622f:	41 b9 01 00 00 00    	mov    r9d,0x1
6235:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6239:	e9 fa fe ff ff       	jmp    6138 <xstrtoul+0x2f8>
623e:	41 b9 01 00 00 00    	mov    r9d,0x1
6244:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6248:	e9 62 fe ff ff       	jmp    60af <xstrtoul+0x26f>
624d:	41 b8 01 00 00 00    	mov    r8d,0x1
6253:	48 83 c8 ff          	or     rax,0xffffffffffffffff
6257:	e9 2f ff ff ff       	jmp    618b <xstrtoul+0x34b>
625c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006260 <rpl_fclose>:
6260:	41 54                	push   r12
6262:	55                   	push   rbp
6263:	53                   	push   rbx
6264:	48 89 fb             	mov    rbx,rdi
6267:	e8 f4 b6 ff ff       	call   1960 <fileno@plt>
626c:	85 c0                	test   eax,eax
626e:	48 89 df             	mov    rdi,rbx
6271:	78 54                	js     62c7 <rpl_fclose+0x67>
6273:	e8 38 b7 ff ff       	call   19b0 <__freading@plt>
6278:	85 c0                	test   eax,eax
627a:	75 2c                	jne    62a8 <rpl_fclose+0x48>
627c:	48 89 df             	mov    rdi,rbx
627f:	e8 5c 00 00 00       	call   62e0 <rpl_fflush>
6284:	85 c0                	test   eax,eax
6286:	74 3c                	je     62c4 <rpl_fclose+0x64>
6288:	e8 03 b5 ff ff       	call   1790 <__errno_location@plt>
628d:	44 8b 20             	mov    r12d,DWORD PTR [rax]
6290:	48 89 df             	mov    rdi,rbx
6293:	48 89 c5             	mov    rbp,rax
6296:	e8 45 b5 ff ff       	call   17e0 <fclose@plt>
629b:	45 85 e4             	test   r12d,r12d
629e:	75 30                	jne    62d0 <rpl_fclose+0x70>
62a0:	5b                   	pop    rbx
62a1:	5d                   	pop    rbp
62a2:	41 5c                	pop    r12
62a4:	c3                   	ret
62a5:	0f 1f 00             	nop    DWORD PTR [rax]
62a8:	48 89 df             	mov    rdi,rbx
62ab:	e8 b0 b6 ff ff       	call   1960 <fileno@plt>
62b0:	31 f6                	xor    esi,esi
62b2:	ba 01 00 00 00       	mov    edx,0x1
62b7:	89 c7                	mov    edi,eax
62b9:	e8 e2 b5 ff ff       	call   18a0 <lseek@plt>
62be:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
62c2:	75 b8                	jne    627c <rpl_fclose+0x1c>
62c4:	48 89 df             	mov    rdi,rbx
62c7:	5b                   	pop    rbx
62c8:	5d                   	pop    rbp
62c9:	41 5c                	pop    r12
62cb:	e9 10 b5 ff ff       	jmp    17e0 <fclose@plt>
62d0:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
62d4:	b8 ff ff ff ff       	mov    eax,0xffffffff
62d9:	eb c5                	jmp    62a0 <rpl_fclose+0x40>
62db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000062e0 <rpl_fflush>:
62e0:	48 85 ff             	test   rdi,rdi
62e3:	53                   	push   rbx
62e4:	48 89 fb             	mov    rbx,rdi
62e7:	74 11                	je     62fa <rpl_fflush+0x1a>
62e9:	e8 c2 b6 ff ff       	call   19b0 <__freading@plt>
62ee:	85 c0                	test   eax,eax
62f0:	74 08                	je     62fa <rpl_fflush+0x1a>
62f2:	f7 03 00 01 00 00    	test   DWORD PTR [rbx],0x100
62f8:	75 0e                	jne    6308 <rpl_fflush+0x28>
62fa:	48 89 df             	mov    rdi,rbx
62fd:	5b                   	pop    rbx
62fe:	e9 7d b6 ff ff       	jmp    1980 <fflush@plt>
6303:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6308:	48 89 df             	mov    rdi,rbx
630b:	ba 01 00 00 00       	mov    edx,0x1
6310:	31 f6                	xor    esi,esi
6312:	e8 09 00 00 00       	call   6320 <rpl_fseeko>
6317:	48 89 df             	mov    rdi,rbx
631a:	5b                   	pop    rbx
631b:	e9 60 b6 ff ff       	jmp    1980 <fflush@plt>

0000000000006320 <rpl_fseeko>:
6320:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
6324:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
6328:	74 06                	je     6330 <rpl_fseeko+0x10>
632a:	e9 f1 b6 ff ff       	jmp    1a20 <fseeko@plt>
632f:	90                   	nop
6330:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
6334:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
6338:	75 f0                	jne    632a <rpl_fseeko+0xa>
633a:	48 83 7f 48 00       	cmp    QWORD PTR [rdi+0x48],0x0
633f:	75 e9                	jne    632a <rpl_fseeko+0xa>
6341:	41 54                	push   r12
6343:	55                   	push   rbp
6344:	41 89 d4             	mov    r12d,edx
6347:	53                   	push   rbx
6348:	48 89 f5             	mov    rbp,rsi
634b:	48 89 fb             	mov    rbx,rdi
634e:	e8 0d b6 ff ff       	call   1960 <fileno@plt>
6353:	44 89 e2             	mov    edx,r12d
6356:	48 89 ee             	mov    rsi,rbp
6359:	89 c7                	mov    edi,eax
635b:	e8 40 b5 ff ff       	call   18a0 <lseek@plt>
6360:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
6364:	74 0c                	je     6372 <rpl_fseeko+0x52>
6366:	83 23 ef             	and    DWORD PTR [rbx],0xffffffef
6369:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
6370:	31 c0                	xor    eax,eax
6372:	5b                   	pop    rbx
6373:	5d                   	pop    rbp
6374:	41 5c                	pop    r12
6376:	c3                   	ret
6377:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
637e:	00 00

0000000000006380 <rpl_mbrtowc>:
6380:	41 55                	push   r13
6382:	41 54                	push   r12
6384:	49 89 f5             	mov    r13,rsi
6387:	55                   	push   rbp
6388:	53                   	push   rbx
6389:	48 89 fb             	mov    rbx,rdi
638c:	49 89 d4             	mov    r12,rdx
638f:	48 83 ec 18          	sub    rsp,0x18
6393:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
639a:	00 00
639c:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
63a1:	31 c0                	xor    eax,eax
63a3:	48 8d 44 24 04       	lea    rax,[rsp+0x4]
63a8:	48 85 ff             	test   rdi,rdi
63ab:	48 0f 44 d8          	cmove  rbx,rax
63af:	48 89 df             	mov    rdi,rbx
63b2:	e8 99 b4 ff ff       	call   1850 <mbrtowc@plt>
63b7:	48 83 f8 fd          	cmp    rax,0xfffffffffffffffd
63bb:	48 89 c5             	mov    rbp,rax
63be:	76 20                	jbe    63e0 <rpl_mbrtowc+0x60>
63c0:	4d 85 e4             	test   r12,r12
63c3:	74 1b                	je     63e0 <rpl_mbrtowc+0x60>
63c5:	31 ff                	xor    edi,edi
63c7:	e8 b4 d0 ff ff       	call   3480 <hard_locale>
63cc:	84 c0                	test   al,al
63ce:	75 10                	jne    63e0 <rpl_mbrtowc+0x60>
63d0:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
63d5:	bd 01 00 00 00       	mov    ebp,0x1
63da:	89 03                	mov    DWORD PTR [rbx],eax
63dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
63e0:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
63e5:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
63ec:	00 00
63ee:	48 89 e8             	mov    rax,rbp
63f1:	75 0b                	jne    63fe <rpl_mbrtowc+0x7e>
63f3:	48 83 c4 18          	add    rsp,0x18
63f7:	5b                   	pop    rbx
63f8:	5d                   	pop    rbp
63f9:	41 5c                	pop    r12
63fb:	41 5d                	pop    r13
63fd:	c3                   	ret
63fe:	e8 2d b4 ff ff       	call   1830 <__stack_chk_fail@plt>
6403:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
640a:	00 00 00
640d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006410 <close_stream>:
6410:	41 54                	push   r12
6412:	55                   	push   rbp
6413:	48 89 fd             	mov    rbp,rdi
6416:	53                   	push   rbx
6417:	e8 a4 b3 ff ff       	call   17c0 <__fpending@plt>
641c:	8b 5d 00             	mov    ebx,DWORD PTR [rbp+0x0]
641f:	48 89 ef             	mov    rdi,rbp
6422:	49 89 c4             	mov    r12,rax
6425:	e8 36 fe ff ff       	call   6260 <rpl_fclose>
642a:	83 e3 20             	and    ebx,0x20
642d:	85 db                	test   ebx,ebx
642f:	75 17                	jne    6448 <close_stream+0x38>
6431:	85 c0                	test   eax,eax
6433:	74 0a                	je     643f <close_stream+0x2f>
6435:	4d 85 e4             	test   r12,r12
6438:	b8 ff ff ff ff       	mov    eax,0xffffffff
643d:	74 39                	je     6478 <close_stream+0x68>
643f:	5b                   	pop    rbx
6440:	5d                   	pop    rbp
6441:	41 5c                	pop    r12
6443:	c3                   	ret
6444:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6448:	85 c0                	test   eax,eax
644a:	75 1c                	jne    6468 <close_stream+0x58>
644c:	e8 3f b3 ff ff       	call   1790 <__errno_location@plt>
6451:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
6457:	b8 ff ff ff ff       	mov    eax,0xffffffff
645c:	5b                   	pop    rbx
645d:	5d                   	pop    rbp
645e:	41 5c                	pop    r12
6460:	c3                   	ret
6461:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6468:	5b                   	pop    rbx
6469:	b8 ff ff ff ff       	mov    eax,0xffffffff
646e:	5d                   	pop    rbp
646f:	41 5c                	pop    r12
6471:	c3                   	ret
6472:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6478:	e8 13 b3 ff ff       	call   1790 <__errno_location@plt>
647d:	83 38 09             	cmp    DWORD PTR [rax],0x9
6480:	5b                   	pop    rbx
6481:	5d                   	pop    rbp
6482:	41 5c                	pop    r12
6484:	0f 95 c0             	setne  al
6487:	0f b6 c0             	movzx  eax,al
648a:	f7 d8                	neg    eax
648c:	c3                   	ret
648d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006490 <locale_charset>:
6490:	48 83 ec 08          	sub    rsp,0x8
6494:	bf 0e 00 00 00       	mov    edi,0xe
6499:	e8 f2 b4 ff ff       	call   1990 <nl_langinfo@plt>
649e:	48 85 c0             	test   rax,rax
64a1:	74 1d                	je     64c0 <locale_charset+0x30>
64a3:	80 38 00             	cmp    BYTE PTR [rax],0x0
64a6:	48 8d 15 b4 17 00 00 	lea    rdx,[rip+0x17b4]        # 7c61 <__PRETTY_FUNCTION__.4162+0x9>
64ad:	48 0f 44 c2          	cmove  rax,rdx
64b1:	48 83 c4 08          	add    rsp,0x8
64b5:	c3                   	ret
64b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
64bd:	00 00 00
64c0:	48 8d 05 9a 17 00 00 	lea    rax,[rip+0x179a]        # 7c61 <__PRETTY_FUNCTION__.4162+0x9>
64c7:	48 83 c4 08          	add    rsp,0x8
64cb:	c3                   	ret
64cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000064d0 <strcoll_loop>:
64d0:	41 57                	push   r15
64d2:	41 56                	push   r14
64d4:	49 89 ce             	mov    r14,rcx
64d7:	41 55                	push   r13
64d9:	41 54                	push   r12
64db:	49 89 f5             	mov    r13,rsi
64de:	55                   	push   rbp
64df:	53                   	push   rbx
64e0:	49 89 fc             	mov    r12,rdi
64e3:	48 89 d5             	mov    rbp,rdx
64e6:	48 83 ec 08          	sub    rsp,0x8
64ea:	e8 a1 b2 ff ff       	call   1790 <__errno_location@plt>
64ef:	49 89 c7             	mov    r15,rax
64f2:	eb 2f                	jmp    6523 <strcoll_loop+0x53>
64f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
64f8:	4c 89 e7             	mov    rdi,r12
64fb:	e8 20 b3 ff ff       	call   1820 <strlen@plt>
6500:	48 89 ef             	mov    rdi,rbp
6503:	48 8d 58 01          	lea    rbx,[rax+0x1]
6507:	e8 14 b3 ff ff       	call   1820 <strlen@plt>
650c:	48 83 c0 01          	add    rax,0x1
6510:	49 01 dc             	add    r12,rbx
6513:	48 01 c5             	add    rbp,rax
6516:	49 29 c6             	sub    r14,rax
6519:	49 29 dd             	sub    r13,rbx
651c:	74 32                	je     6550 <strcoll_loop+0x80>
651e:	4d 85 f6             	test   r14,r14
6521:	74 4d                	je     6570 <strcoll_loop+0xa0>
6523:	41 c7 07 00 00 00 00 	mov    DWORD PTR [r15],0x0
652a:	48 89 ee             	mov    rsi,rbp
652d:	4c 89 e7             	mov    rdi,r12
6530:	e8 6b b4 ff ff       	call   19a0 <strcoll@plt>
6535:	85 c0                	test   eax,eax
6537:	74 bf                	je     64f8 <strcoll_loop+0x28>
6539:	48 83 c4 08          	add    rsp,0x8
653d:	5b                   	pop    rbx
653e:	5d                   	pop    rbp
653f:	41 5c                	pop    r12
6541:	41 5d                	pop    r13
6543:	41 5e                	pop    r14
6545:	41 5f                	pop    r15
6547:	c3                   	ret
6548:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
654f:	00
6550:	31 c0                	xor    eax,eax
6552:	4d 85 f6             	test   r14,r14
6555:	0f 95 c0             	setne  al
6558:	48 83 c4 08          	add    rsp,0x8
655c:	5b                   	pop    rbx
655d:	f7 d8                	neg    eax
655f:	5d                   	pop    rbp
6560:	41 5c                	pop    r12
6562:	41 5d                	pop    r13
6564:	41 5e                	pop    r14
6566:	41 5f                	pop    r15
6568:	c3                   	ret
6569:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6570:	48 83 c4 08          	add    rsp,0x8
6574:	b8 01 00 00 00       	mov    eax,0x1
6579:	5b                   	pop    rbx
657a:	5d                   	pop    rbp
657b:	41 5c                	pop    r12
657d:	41 5d                	pop    r13
657f:	41 5e                	pop    r14
6581:	41 5f                	pop    r15
6583:	c3                   	ret
6584:	66 90                	xchg   ax,ax
6586:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
658d:	00 00 00

0000000000006590 <memcoll>:
6590:	41 57                	push   r15
6592:	41 56                	push   r14
6594:	49 89 d7             	mov    r15,rdx
6597:	41 55                	push   r13
6599:	41 54                	push   r12
659b:	49 89 fe             	mov    r14,rdi
659e:	55                   	push   rbp
659f:	53                   	push   rbx
65a0:	48 89 cd             	mov    rbp,rcx
65a3:	48 89 f3             	mov    rbx,rsi
65a6:	48 83 ec 18          	sub    rsp,0x18
65aa:	48 39 ce             	cmp    rsi,rcx
65ad:	75 13                	jne    65c2 <memcoll+0x32>
65af:	48 89 f2             	mov    rdx,rsi
65b2:	4c 89 fe             	mov    rsi,r15
65b5:	e8 46 b3 ff ff       	call   1900 <memcmp@plt>
65ba:	85 c0                	test   eax,eax
65bc:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
65c0:	74 66                	je     6628 <memcoll+0x98>
65c2:	4d 8d 2c 1e          	lea    r13,[r14+rbx*1]
65c6:	4d 8d 24 2f          	lea    r12,[r15+rbp*1]
65ca:	48 8d 4d 01          	lea    rcx,[rbp+0x1]
65ce:	48 8d 73 01          	lea    rsi,[rbx+0x1]
65d2:	4c 89 fa             	mov    rdx,r15
65d5:	4c 89 f7             	mov    rdi,r14
65d8:	45 0f b6 4d 00       	movzx  r9d,BYTE PTR [r13+0x0]
65dd:	45 0f b6 04 24       	movzx  r8d,BYTE PTR [r12]
65e2:	41 c6 45 00 00       	mov    BYTE PTR [r13+0x0],0x0
65e7:	41 c6 04 24 00       	mov    BYTE PTR [r12],0x0
65ec:	44 88 4c 24 0f       	mov    BYTE PTR [rsp+0xf],r9b
65f1:	44 88 44 24 08       	mov    BYTE PTR [rsp+0x8],r8b
65f6:	e8 d5 fe ff ff       	call   64d0 <strcoll_loop>
65fb:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
6601:	44 0f b6 44 24 08    	movzx  r8d,BYTE PTR [rsp+0x8]
6607:	89 c2                	mov    edx,eax
6609:	45 88 4d 00          	mov    BYTE PTR [r13+0x0],r9b
660d:	45 88 04 24          	mov    BYTE PTR [r12],r8b
6611:	48 83 c4 18          	add    rsp,0x18
6615:	89 d0                	mov    eax,edx
6617:	5b                   	pop    rbx
6618:	5d                   	pop    rbp
6619:	41 5c                	pop    r12
661b:	41 5d                	pop    r13
661d:	41 5e                	pop    r14
661f:	41 5f                	pop    r15
6621:	c3                   	ret
6622:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6628:	e8 63 b1 ff ff       	call   1790 <__errno_location@plt>
662d:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
6631:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
6637:	eb d8                	jmp    6611 <memcoll+0x81>
6639:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006640 <memcoll0>:
6640:	41 54                	push   r12
6642:	55                   	push   rbp
6643:	49 89 d4             	mov    r12,rdx
6646:	53                   	push   rbx
6647:	48 89 fd             	mov    rbp,rdi
664a:	48 89 f3             	mov    rbx,rsi
664d:	48 83 ec 10          	sub    rsp,0x10
6651:	48 39 ce             	cmp    rsi,rcx
6654:	75 19                	jne    666f <memcoll0+0x2f>
6656:	48 89 f2             	mov    rdx,rsi
6659:	4c 89 e6             	mov    rsi,r12
665c:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
6661:	e8 9a b2 ff ff       	call   1900 <memcmp@plt>
6666:	85 c0                	test   eax,eax
6668:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
666d:	74 19                	je     6688 <memcoll0+0x48>
666f:	48 83 c4 10          	add    rsp,0x10
6673:	4c 89 e2             	mov    rdx,r12
6676:	48 89 de             	mov    rsi,rbx
6679:	48 89 ef             	mov    rdi,rbp
667c:	5b                   	pop    rbx
667d:	5d                   	pop    rbp
667e:	41 5c                	pop    r12
6680:	e9 4b fe ff ff       	jmp    64d0 <strcoll_loop>
6685:	0f 1f 00             	nop    DWORD PTR [rax]
6688:	e8 03 b1 ff ff       	call   1790 <__errno_location@plt>
668d:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
6693:	48 83 c4 10          	add    rsp,0x10
6697:	31 c0                	xor    eax,eax
6699:	5b                   	pop    rbx
669a:	5d                   	pop    rbp
669b:	41 5c                	pop    r12
669d:	c3                   	ret
669e:	66 90                	xchg   ax,ax

00000000000066a0 <__libc_csu_init>:
66a0:	41 57                	push   r15
66a2:	41 56                	push   r14
66a4:	49 89 d7             	mov    r15,rdx
66a7:	41 55                	push   r13
66a9:	41 54                	push   r12
66ab:	4c 8d 25 fe 32 20 00 	lea    r12,[rip+0x2032fe]        # 2099b0 <__frame_dummy_init_array_entry>
66b2:	55                   	push   rbp
66b3:	48 8d 2d fe 32 20 00 	lea    rbp,[rip+0x2032fe]        # 2099b8 <__init_array_end>
66ba:	53                   	push   rbx
66bb:	41 89 fd             	mov    r13d,edi
66be:	49 89 f6             	mov    r14,rsi
66c1:	4c 29 e5             	sub    rbp,r12
66c4:	48 83 ec 08          	sub    rsp,0x8
66c8:	48 c1 fd 03          	sar    rbp,0x3
66cc:	e8 47 b0 ff ff       	call   1718 <_init>
66d1:	48 85 ed             	test   rbp,rbp
66d4:	74 20                	je     66f6 <__libc_csu_init+0x56>
66d6:	31 db                	xor    ebx,ebx
66d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
66df:	00
66e0:	4c 89 fa             	mov    rdx,r15
66e3:	4c 89 f6             	mov    rsi,r14
66e6:	44 89 ef             	mov    edi,r13d
66e9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
66ed:	48 83 c3 01          	add    rbx,0x1
66f1:	48 39 dd             	cmp    rbp,rbx
66f4:	75 ea                	jne    66e0 <__libc_csu_init+0x40>
66f6:	48 83 c4 08          	add    rsp,0x8
66fa:	5b                   	pop    rbx
66fb:	5d                   	pop    rbp
66fc:	41 5c                	pop    r12
66fe:	41 5d                	pop    r13
6700:	41 5e                	pop    r14
6702:	41 5f                	pop    r15
6704:	c3                   	ret
6705:	90                   	nop
6706:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
670d:	00 00 00

0000000000006710 <__libc_csu_fini>:
6710:	f3 c3                	repz ret
6712:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6719:	00 00 00
671c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006720 <atexit>:
6720:	48 8b 15 e1 38 20 00 	mov    rdx,QWORD PTR [rip+0x2038e1]        # 20a008 <__dso_handle>
6727:	31 f6                	xor    esi,esi
6729:	e9 12 b3 ff ff       	jmp    1a40 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000006730 <_fini>:
6730:	48 83 ec 08          	sub    rsp,0x8
6734:	48 83 c4 08          	add    rsp,0x8
6738:	c3                   	ret
