


Disassembly of section .init:

00000000000014a8 <_init>:
14a8:	48 83 ec 08          	sub    rsp,0x8
14ac:	48 8b 05 2d 7b 20 00 	mov    rax,QWORD PTR [rip+0x207b2d]        # 208fe0 <__gmon_start__>
14b3:	48 85 c0             	test   rax,rax
14b6:	74 02                	je     14ba <_init+0x12>
14b8:	ff d0                	call   rax
14ba:	48 83 c4 08          	add    rsp,0x8
14be:	c3                   	ret

Disassembly of section .plt:

00000000000014c0 <.plt>:
14c0:	ff 35 6a 79 20 00    	push   QWORD PTR [rip+0x20796a]        # 208e30 <_GLOBAL_OFFSET_TABLE_+0x8>
14c6:	ff 25 6c 79 20 00    	jmp    QWORD PTR [rip+0x20796c]        # 208e38 <_GLOBAL_OFFSET_TABLE_+0x10>
14cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000014d0 <free@plt>:
14d0:	ff 25 6a 79 20 00    	jmp    QWORD PTR [rip+0x20796a]        # 208e40 <free@GLIBC_2.2.5>
14d6:	68 00 00 00 00       	push   0x0
14db:	e9 e0 ff ff ff       	jmp    14c0 <.plt>

00000000000014e0 <abort@plt>:
14e0:	ff 25 62 79 20 00    	jmp    QWORD PTR [rip+0x207962]        # 208e48 <abort@GLIBC_2.2.5>
14e6:	68 01 00 00 00       	push   0x1
14eb:	e9 d0 ff ff ff       	jmp    14c0 <.plt>

00000000000014f0 <__errno_location@plt>:
14f0:	ff 25 5a 79 20 00    	jmp    QWORD PTR [rip+0x20795a]        # 208e50 <__errno_location@GLIBC_2.2.5>
14f6:	68 02 00 00 00       	push   0x2
14fb:	e9 c0 ff ff ff       	jmp    14c0 <.plt>

0000000000001500 <strncmp@plt>:
1500:	ff 25 52 79 20 00    	jmp    QWORD PTR [rip+0x207952]        # 208e58 <strncmp@GLIBC_2.2.5>
1506:	68 03 00 00 00       	push   0x3
150b:	e9 b0 ff ff ff       	jmp    14c0 <.plt>

0000000000001510 <_exit@plt>:
1510:	ff 25 4a 79 20 00    	jmp    QWORD PTR [rip+0x20794a]        # 208e60 <_exit@GLIBC_2.2.5>
1516:	68 04 00 00 00       	push   0x4
151b:	e9 a0 ff ff ff       	jmp    14c0 <.plt>

0000000000001520 <__fpending@plt>:
1520:	ff 25 42 79 20 00    	jmp    QWORD PTR [rip+0x207942]        # 208e68 <__fpending@GLIBC_2.2.5>
1526:	68 05 00 00 00       	push   0x5
152b:	e9 90 ff ff ff       	jmp    14c0 <.plt>

0000000000001530 <fread_unlocked@plt>:
1530:	ff 25 3a 79 20 00    	jmp    QWORD PTR [rip+0x20793a]        # 208e70 <fread_unlocked@GLIBC_2.2.5>
1536:	68 06 00 00 00       	push   0x6
153b:	e9 80 ff ff ff       	jmp    14c0 <.plt>

0000000000001540 <textdomain@plt>:
1540:	ff 25 32 79 20 00    	jmp    QWORD PTR [rip+0x207932]        # 208e78 <textdomain@GLIBC_2.2.5>
1546:	68 07 00 00 00       	push   0x7
154b:	e9 70 ff ff ff       	jmp    14c0 <.plt>

0000000000001550 <fclose@plt>:
1550:	ff 25 2a 79 20 00    	jmp    QWORD PTR [rip+0x20792a]        # 208e80 <fclose@GLIBC_2.2.5>
1556:	68 08 00 00 00       	push   0x8
155b:	e9 60 ff ff ff       	jmp    14c0 <.plt>

0000000000001560 <bindtextdomain@plt>:
1560:	ff 25 22 79 20 00    	jmp    QWORD PTR [rip+0x207922]        # 208e88 <bindtextdomain@GLIBC_2.2.5>
1566:	68 09 00 00 00       	push   0x9
156b:	e9 50 ff ff ff       	jmp    14c0 <.plt>

0000000000001570 <dcgettext@plt>:
1570:	ff 25 1a 79 20 00    	jmp    QWORD PTR [rip+0x20791a]        # 208e90 <dcgettext@GLIBC_2.2.5>
1576:	68 0a 00 00 00       	push   0xa
157b:	e9 40 ff ff ff       	jmp    14c0 <.plt>

0000000000001580 <__ctype_get_mb_cur_max@plt>:
1580:	ff 25 12 79 20 00    	jmp    QWORD PTR [rip+0x207912]        # 208e98 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
1586:	68 0b 00 00 00       	push   0xb
158b:	e9 30 ff ff ff       	jmp    14c0 <.plt>

0000000000001590 <strlen@plt>:
1590:	ff 25 0a 79 20 00    	jmp    QWORD PTR [rip+0x20790a]        # 208ea0 <strlen@GLIBC_2.2.5>
1596:	68 0c 00 00 00       	push   0xc
159b:	e9 20 ff ff ff       	jmp    14c0 <.plt>

00000000000015a0 <__stack_chk_fail@plt>:
15a0:	ff 25 02 79 20 00    	jmp    QWORD PTR [rip+0x207902]        # 208ea8 <__stack_chk_fail@GLIBC_2.4>
15a6:	68 0d 00 00 00       	push   0xd
15ab:	e9 10 ff ff ff       	jmp    14c0 <.plt>

00000000000015b0 <getopt_long@plt>:
15b0:	ff 25 fa 78 20 00    	jmp    QWORD PTR [rip+0x2078fa]        # 208eb0 <getopt_long@GLIBC_2.2.5>
15b6:	68 0e 00 00 00       	push   0xe
15bb:	e9 00 ff ff ff       	jmp    14c0 <.plt>

00000000000015c0 <mbrtowc@plt>:
15c0:	ff 25 f2 78 20 00    	jmp    QWORD PTR [rip+0x2078f2]        # 208eb8 <mbrtowc@GLIBC_2.2.5>
15c6:	68 0f 00 00 00       	push   0xf
15cb:	e9 f0 fe ff ff       	jmp    14c0 <.plt>

00000000000015d0 <strchr@plt>:
15d0:	ff 25 ea 78 20 00    	jmp    QWORD PTR [rip+0x2078ea]        # 208ec0 <strchr@GLIBC_2.2.5>
15d6:	68 10 00 00 00       	push   0x10
15db:	e9 e0 fe ff ff       	jmp    14c0 <.plt>

00000000000015e0 <__overflow@plt>:
15e0:	ff 25 e2 78 20 00    	jmp    QWORD PTR [rip+0x2078e2]        # 208ec8 <__overflow@GLIBC_2.2.5>
15e6:	68 11 00 00 00       	push   0x11
15eb:	e9 d0 fe ff ff       	jmp    14c0 <.plt>

00000000000015f0 <strrchr@plt>:
15f0:	ff 25 da 78 20 00    	jmp    QWORD PTR [rip+0x2078da]        # 208ed0 <strrchr@GLIBC_2.2.5>
15f6:	68 12 00 00 00       	push   0x12
15fb:	e9 c0 fe ff ff       	jmp    14c0 <.plt>

0000000000001600 <lseek@plt>:
1600:	ff 25 d2 78 20 00    	jmp    QWORD PTR [rip+0x2078d2]        # 208ed8 <lseek@GLIBC_2.2.5>
1606:	68 13 00 00 00       	push   0x13
160b:	e9 b0 fe ff ff       	jmp    14c0 <.plt>

0000000000001610 <__assert_fail@plt>:
1610:	ff 25 ca 78 20 00    	jmp    QWORD PTR [rip+0x2078ca]        # 208ee0 <__assert_fail@GLIBC_2.2.5>
1616:	68 14 00 00 00       	push   0x14
161b:	e9 a0 fe ff ff       	jmp    14c0 <.plt>

0000000000001620 <__strtoul_internal@plt>:
1620:	ff 25 c2 78 20 00    	jmp    QWORD PTR [rip+0x2078c2]        # 208ee8 <__strtoul_internal@GLIBC_2.2.5>
1626:	68 15 00 00 00       	push   0x15
162b:	e9 90 fe ff ff       	jmp    14c0 <.plt>

0000000000001630 <memset@plt>:
1630:	ff 25 ba 78 20 00    	jmp    QWORD PTR [rip+0x2078ba]        # 208ef0 <memset@GLIBC_2.2.5>
1636:	68 16 00 00 00       	push   0x16
163b:	e9 80 fe ff ff       	jmp    14c0 <.plt>

0000000000001640 <posix_fadvise@plt>:
1640:	ff 25 b2 78 20 00    	jmp    QWORD PTR [rip+0x2078b2]        # 208ef8 <posix_fadvise@GLIBC_2.2.5>
1646:	68 17 00 00 00       	push   0x17
164b:	e9 70 fe ff ff       	jmp    14c0 <.plt>

0000000000001650 <memchr@plt>:
1650:	ff 25 aa 78 20 00    	jmp    QWORD PTR [rip+0x2078aa]        # 208f00 <memchr@GLIBC_2.2.5>
1656:	68 18 00 00 00       	push   0x18
165b:	e9 60 fe ff ff       	jmp    14c0 <.plt>

0000000000001660 <memcmp@plt>:
1660:	ff 25 a2 78 20 00    	jmp    QWORD PTR [rip+0x2078a2]        # 208f08 <memcmp@GLIBC_2.2.5>
1666:	68 19 00 00 00       	push   0x19
166b:	e9 50 fe ff ff       	jmp    14c0 <.plt>

0000000000001670 <fputs_unlocked@plt>:
1670:	ff 25 9a 78 20 00    	jmp    QWORD PTR [rip+0x20789a]        # 208f10 <fputs_unlocked@GLIBC_2.2.5>
1676:	68 1a 00 00 00       	push   0x1a
167b:	e9 40 fe ff ff       	jmp    14c0 <.plt>

0000000000001680 <calloc@plt>:
1680:	ff 25 92 78 20 00    	jmp    QWORD PTR [rip+0x207892]        # 208f18 <calloc@GLIBC_2.2.5>
1686:	68 1b 00 00 00       	push   0x1b
168b:	e9 30 fe ff ff       	jmp    14c0 <.plt>

0000000000001690 <strcmp@plt>:
1690:	ff 25 8a 78 20 00    	jmp    QWORD PTR [rip+0x20788a]        # 208f20 <strcmp@GLIBC_2.2.5>
1696:	68 1c 00 00 00       	push   0x1c
169b:	e9 20 fe ff ff       	jmp    14c0 <.plt>

00000000000016a0 <memcpy@plt>:
16a0:	ff 25 82 78 20 00    	jmp    QWORD PTR [rip+0x207882]        # 208f28 <memcpy@GLIBC_2.14>
16a6:	68 1d 00 00 00       	push   0x1d
16ab:	e9 10 fe ff ff       	jmp    14c0 <.plt>

00000000000016b0 <fileno@plt>:
16b0:	ff 25 7a 78 20 00    	jmp    QWORD PTR [rip+0x20787a]        # 208f30 <fileno@GLIBC_2.2.5>
16b6:	68 1e 00 00 00       	push   0x1e
16bb:	e9 00 fe ff ff       	jmp    14c0 <.plt>

00000000000016c0 <malloc@plt>:
16c0:	ff 25 72 78 20 00    	jmp    QWORD PTR [rip+0x207872]        # 208f38 <malloc@GLIBC_2.2.5>
16c6:	68 1f 00 00 00       	push   0x1f
16cb:	e9 f0 fd ff ff       	jmp    14c0 <.plt>

00000000000016d0 <fflush@plt>:
16d0:	ff 25 6a 78 20 00    	jmp    QWORD PTR [rip+0x20786a]        # 208f40 <fflush@GLIBC_2.2.5>
16d6:	68 20 00 00 00       	push   0x20
16db:	e9 e0 fd ff ff       	jmp    14c0 <.plt>

00000000000016e0 <nl_langinfo@plt>:
16e0:	ff 25 62 78 20 00    	jmp    QWORD PTR [rip+0x207862]        # 208f48 <nl_langinfo@GLIBC_2.2.5>
16e6:	68 21 00 00 00       	push   0x21
16eb:	e9 d0 fd ff ff       	jmp    14c0 <.plt>

00000000000016f0 <__freading@plt>:
16f0:	ff 25 5a 78 20 00    	jmp    QWORD PTR [rip+0x20785a]        # 208f50 <__freading@GLIBC_2.2.5>
16f6:	68 22 00 00 00       	push   0x22
16fb:	e9 c0 fd ff ff       	jmp    14c0 <.plt>

0000000000001700 <fwrite_unlocked@plt>:
1700:	ff 25 52 78 20 00    	jmp    QWORD PTR [rip+0x207852]        # 208f58 <fwrite_unlocked@GLIBC_2.2.5>
1706:	68 23 00 00 00       	push   0x23
170b:	e9 b0 fd ff ff       	jmp    14c0 <.plt>

0000000000001710 <realloc@plt>:
1710:	ff 25 4a 78 20 00    	jmp    QWORD PTR [rip+0x20784a]        # 208f60 <realloc@GLIBC_2.2.5>
1716:	68 24 00 00 00       	push   0x24
171b:	e9 a0 fd ff ff       	jmp    14c0 <.plt>

0000000000001720 <setlocale@plt>:
1720:	ff 25 42 78 20 00    	jmp    QWORD PTR [rip+0x207842]        # 208f68 <setlocale@GLIBC_2.2.5>
1726:	68 25 00 00 00       	push   0x25
172b:	e9 90 fd ff ff       	jmp    14c0 <.plt>

0000000000001730 <__printf_chk@plt>:
1730:	ff 25 3a 78 20 00    	jmp    QWORD PTR [rip+0x20783a]        # 208f70 <__printf_chk@GLIBC_2.3.4>
1736:	68 26 00 00 00       	push   0x26
173b:	e9 80 fd ff ff       	jmp    14c0 <.plt>

0000000000001740 <memmove@plt>:
1740:	ff 25 32 78 20 00    	jmp    QWORD PTR [rip+0x207832]        # 208f78 <memmove@GLIBC_2.2.5>
1746:	68 27 00 00 00       	push   0x27
174b:	e9 70 fd ff ff       	jmp    14c0 <.plt>

0000000000001750 <error@plt>:
1750:	ff 25 2a 78 20 00    	jmp    QWORD PTR [rip+0x20782a]        # 208f80 <error@GLIBC_2.2.5>
1756:	68 28 00 00 00       	push   0x28
175b:	e9 60 fd ff ff       	jmp    14c0 <.plt>

0000000000001760 <fseeko@plt>:
1760:	ff 25 22 78 20 00    	jmp    QWORD PTR [rip+0x207822]        # 208f88 <fseeko@GLIBC_2.2.5>
1766:	68 29 00 00 00       	push   0x29
176b:	e9 50 fd ff ff       	jmp    14c0 <.plt>

0000000000001770 <fopen@plt>:
1770:	ff 25 1a 78 20 00    	jmp    QWORD PTR [rip+0x20781a]        # 208f90 <fopen@GLIBC_2.2.5>
1776:	68 2a 00 00 00       	push   0x2a
177b:	e9 40 fd ff ff       	jmp    14c0 <.plt>

0000000000001780 <__cxa_atexit@plt>:
1780:	ff 25 12 78 20 00    	jmp    QWORD PTR [rip+0x207812]        # 208f98 <__cxa_atexit@GLIBC_2.2.5>
1786:	68 2b 00 00 00       	push   0x2b
178b:	e9 30 fd ff ff       	jmp    14c0 <.plt>

0000000000001790 <exit@plt>:
1790:	ff 25 0a 78 20 00    	jmp    QWORD PTR [rip+0x20780a]        # 208fa0 <exit@GLIBC_2.2.5>
1796:	68 2c 00 00 00       	push   0x2c
179b:	e9 20 fd ff ff       	jmp    14c0 <.plt>

00000000000017a0 <fwrite@plt>:
17a0:	ff 25 02 78 20 00    	jmp    QWORD PTR [rip+0x207802]        # 208fa8 <fwrite@GLIBC_2.2.5>
17a6:	68 2d 00 00 00       	push   0x2d
17ab:	e9 10 fd ff ff       	jmp    14c0 <.plt>

00000000000017b0 <__fprintf_chk@plt>:
17b0:	ff 25 fa 77 20 00    	jmp    QWORD PTR [rip+0x2077fa]        # 208fb0 <__fprintf_chk@GLIBC_2.3.4>
17b6:	68 2e 00 00 00       	push   0x2e
17bb:	e9 00 fd ff ff       	jmp    14c0 <.plt>

00000000000017c0 <mbsinit@plt>:
17c0:	ff 25 f2 77 20 00    	jmp    QWORD PTR [rip+0x2077f2]        # 208fb8 <mbsinit@GLIBC_2.2.5>
17c6:	68 2f 00 00 00       	push   0x2f
17cb:	e9 f0 fc ff ff       	jmp    14c0 <.plt>

00000000000017d0 <iswprint@plt>:
17d0:	ff 25 ea 77 20 00    	jmp    QWORD PTR [rip+0x2077ea]        # 208fc0 <iswprint@GLIBC_2.2.5>
17d6:	68 30 00 00 00       	push   0x30
17db:	e9 e0 fc ff ff       	jmp    14c0 <.plt>

00000000000017e0 <__ctype_b_loc@plt>:
17e0:	ff 25 e2 77 20 00    	jmp    QWORD PTR [rip+0x2077e2]        # 208fc8 <__ctype_b_loc@GLIBC_2.3>
17e6:	68 31 00 00 00       	push   0x31
17eb:	e9 d0 fc ff ff       	jmp    14c0 <.plt>

Disassembly of section .plt.got:

00000000000017f0 <__cxa_finalize@plt>:
17f0:	ff 25 fa 77 20 00    	jmp    QWORD PTR [rip+0x2077fa]        # 208ff0 <__cxa_finalize@GLIBC_2.2.5>
17f6:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000001800 <main>:
1800:	41 57                	push   r15
1802:	41 56                	push   r14
1804:	41 55                	push   r13
1806:	41 54                	push   r12
1808:	41 89 fd             	mov    r13d,edi
180b:	55                   	push   rbp
180c:	53                   	push   rbx
180d:	49 89 f4             	mov    r12,rsi
1810:	bd 4c 00 00 00       	mov    ebp,0x4c
1815:	31 db                	xor    ebx,ebx
1817:	48 83 ec 78          	sub    rsp,0x78
181b:	48 8b 3e             	mov    rdi,QWORD PTR [rsi]
181e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
1825:	00 00
1827:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
182c:	31 c0                	xor    eax,eax
182e:	e8 cd 15 00 00       	call   2e00 <set_program_name>
1833:	48 8d 35 a7 50 00 00 	lea    rsi,[rip+0x50a7]        # 68e1 <quoting_style_vals+0x81>
183a:	bf 06 00 00 00       	mov    edi,0x6
183f:	e8 dc fe ff ff       	call   1720 <setlocale@plt>
1844:	48 8d 35 21 45 00 00 	lea    rsi,[rip+0x4521]        # 5d6c <_IO_stdin_used+0xcc>
184b:	48 8d 3d f1 44 00 00 	lea    rdi,[rip+0x44f1]        # 5d43 <_IO_stdin_used+0xa3>
1852:	e8 09 fd ff ff       	call   1560 <bindtextdomain@plt>
1857:	48 8d 3d e5 44 00 00 	lea    rdi,[rip+0x44e5]        # 5d43 <_IO_stdin_used+0xa3>
185e:	e8 dd fc ff ff       	call   1540 <textdomain@plt>
1863:	48 8d 3d a6 14 00 00 	lea    rdi,[rip+0x14a6]        # 2d10 <close_stdout>
186a:	e8 11 44 00 00       	call   5c80 <atexit>
186f:	c6 44 24 30 00       	mov    BYTE PTR [rsp+0x30],0x0
1874:	48 8d 0d a5 72 20 00 	lea    rcx,[rip+0x2072a5]        # 208b20 <long_options>
187b:	48 8d 15 24 45 00 00 	lea    rdx,[rip+0x4524]        # 5da6 <_IO_stdin_used+0x106>
1882:	45 31 c0             	xor    r8d,r8d
1885:	4c 89 e6             	mov    rsi,r12
1888:	44 89 ef             	mov    edi,r13d
188b:	e8 20 fd ff ff       	call   15b0 <getopt_long@plt>
1890:	83 f8 ff             	cmp    eax,0xffffffff
1893:	0f 84 b6 00 00 00    	je     194f <main+0x14f>
1899:	83 f8 64             	cmp    eax,0x64
189c:	74 52                	je     18f0 <main+0xf0>
189e:	7e 70                	jle    1910 <main+0x110>
18a0:	83 f8 69             	cmp    eax,0x69
18a3:	74 5b                	je     1900 <main+0x100>
18a5:	83 f8 77             	cmp    eax,0x77
18a8:	0f 85 ff 06 00 00    	jne    1fad <main+0x7ad>
18ae:	48 8d 35 cf 44 00 00 	lea    rsi,[rip+0x44cf]        # 5d84 <_IO_stdin_used+0xe4>
18b5:	ba 05 00 00 00       	mov    edx,0x5
18ba:	31 ff                	xor    edi,edi
18bc:	e8 af fc ff ff       	call   1570 <dcgettext@plt>
18c1:	48 8b 3d d8 77 20 00 	mov    rdi,QWORD PTR [rip+0x2077d8]        # 2090a0 <optarg@@GLIBC_2.2.5>
18c8:	48 8d 0d 12 50 00 00 	lea    rcx,[rip+0x5012]        # 68e1 <quoting_style_vals+0x81>
18cf:	49 89 c0             	mov    r8,rax
18d2:	45 31 c9             	xor    r9d,r9d
18d5:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
18dc:	31 f6                	xor    esi,esi
18de:	e8 fd 3b 00 00       	call   54e0 <xdectoumax>
18e3:	48 89 c5             	mov    rbp,rax
18e6:	eb 8c                	jmp    1874 <main+0x74>
18e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
18ef:	00
18f0:	bb 01 00 00 00       	mov    ebx,0x1
18f5:	e9 7a ff ff ff       	jmp    1874 <main+0x74>
18fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
1900:	c6 44 24 30 01       	mov    BYTE PTR [rsp+0x30],0x1
1905:	e9 6a ff ff ff       	jmp    1874 <main+0x74>
190a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
1910:	3d 7d ff ff ff       	cmp    eax,0xffffff7d
1915:	0f 85 53 06 00 00    	jne    1f6e <main+0x76e>
191b:	48 8b 3d 66 77 20 00 	mov    rdi,QWORD PTR [rip+0x207766]        # 209088 <stdout@@GLIBC_2.2.5>
1922:	48 8b 0d e7 76 20 00 	mov    rcx,QWORD PTR [rip+0x2076e7]        # 209010 <Version>
1929:	4c 8d 05 66 44 00 00 	lea    r8,[rip+0x4466]        # 5d96 <_IO_stdin_used+0xf6>
1930:	48 8d 15 08 44 00 00 	lea    rdx,[rip+0x4408]        # 5d3f <_IO_stdin_used+0x9f>
1937:	48 8d 35 66 43 00 00 	lea    rsi,[rip+0x4366]        # 5ca4 <_IO_stdin_used+0x4>
193e:	45 31 c9             	xor    r9d,r9d
1941:	31 c0                	xor    eax,eax
1943:	e8 a8 36 00 00       	call   4ff0 <version_etc>
1948:	31 ff                	xor    edi,edi
194a:	e8 41 fe ff ff       	call   1790 <exit@plt>
194f:	48 63 05 42 77 20 00 	movsxd rax,DWORD PTR [rip+0x207742]        # 209098 <optind@@GLIBC_2.2.5>
1956:	44 89 ea             	mov    edx,r13d
1959:	29 c2                	sub    edx,eax
195b:	83 ea 01             	sub    edx,0x1
195e:	0f 8f 18 06 00 00    	jg     1f7c <main+0x77c>
1964:	44 39 e8             	cmp    eax,r13d
1967:	7d 66                	jge    19cf <main+0x1cf>
1969:	49 8b 04 c4          	mov    rax,QWORD PTR [r12+rax*8]
196d:	48 8d 35 36 4a 00 00 	lea    rsi,[rip+0x4a36]        # 63aa <b32+0x14a>
1974:	48 89 c7             	mov    rdi,rax
1977:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
197c:	e8 0f fd ff ff       	call   1690 <strcmp@plt>
1981:	85 c0                	test   eax,eax
1983:	74 56                	je     19db <main+0x1db>
1985:	48 8b 7c 24 48       	mov    rdi,QWORD PTR [rsp+0x48]
198a:	48 8d 35 2b 44 00 00 	lea    rsi,[rip+0x442b]        # 5dbc <_IO_stdin_used+0x11c>
1991:	e8 da fd ff ff       	call   1770 <fopen@plt>
1996:	48 85 c0             	test   rax,rax
1999:	49 89 c4             	mov    r12,rax
199c:	75 44                	jne    19e2 <main+0x1e2>
199e:	48 8b 54 24 48       	mov    rdx,QWORD PTR [rsp+0x48]
19a3:	be 03 00 00 00       	mov    esi,0x3
19a8:	31 ff                	xor    edi,edi
19aa:	e8 91 2f 00 00       	call   4940 <quotearg_n_style_colon>
19af:	48 89 c3             	mov    rbx,rax
19b2:	e8 39 fb ff ff       	call   14f0 <__errno_location@plt>
19b7:	8b 30                	mov    esi,DWORD PTR [rax]
19b9:	48 8d 15 a4 49 00 00 	lea    rdx,[rip+0x49a4]        # 6364 <b32+0x104>
19c0:	48 89 d9             	mov    rcx,rbx
19c3:	bf 01 00 00 00       	mov    edi,0x1
19c8:	31 c0                	xor    eax,eax
19ca:	e8 81 fd ff ff       	call   1750 <error@plt>
19cf:	48 8d 05 d4 49 00 00 	lea    rax,[rip+0x49d4]        # 63aa <b32+0x14a>
19d6:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
19db:	4c 8b 25 ae 76 20 00 	mov    r12,QWORD PTR [rip+0x2076ae]        # 209090 <stdin@@GLIBC_2.2.5>
19e2:	be 02 00 00 00       	mov    esi,0x2
19e7:	4c 89 e7             	mov    rdi,r12
19ea:	e8 e1 13 00 00       	call   2dd0 <fadvise>
19ef:	84 db                	test   bl,bl
19f1:	48 8b 05 90 76 20 00 	mov    rax,QWORD PTR [rip+0x207690]        # 209088 <stdout@@GLIBC_2.2.5>
19f8:	0f 84 fa 01 00 00    	je     1bf8 <main+0x3f8>
19fe:	bf 00 20 00 00       	mov    edi,0x2000
1a03:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
1a08:	e8 43 37 00 00       	call   5150 <xmalloc>
1a0d:	bf 00 14 00 00       	mov    edi,0x1400
1a12:	48 89 c5             	mov    rbp,rax
1a15:	e8 36 37 00 00       	call   5150 <xmalloc>
1a1a:	48 89 44 24 40       	mov    QWORD PTR [rsp+0x40],rax
1a1f:	48 8d 44 24 5c       	lea    rax,[rsp+0x5c]
1a24:	48 89 c7             	mov    rdi,rax
1a27:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
1a2c:	e8 3f 0f 00 00       	call   2970 <base32_decode_ctx_init>
1a31:	48 8d 44 24 50       	lea    rax,[rsp+0x50]
1a36:	4c 89 64 24 10       	mov    QWORD PTR [rsp+0x10],r12
1a3b:	48 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],rbp
1a40:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
1a45:	0f 1f 00             	nop    DWORD PTR [rax]
1a48:	31 db                	xor    ebx,ebx
1a4a:	eb 30                	jmp    1a7c <main+0x27c>
1a4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
1a50:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
1a55:	4c 01 e3             	add    rbx,r12
1a58:	8b 00                	mov    eax,DWORD PTR [rax]
1a5a:	a8 20                	test   al,0x20
1a5c:	0f 85 af 04 00 00    	jne    1f11 <main+0x711>
1a62:	89 c2                	mov    edx,eax
1a64:	83 e2 10             	and    edx,0x10
1a67:	48 81 fb ff 1f 00 00 	cmp    rbx,0x1fff
1a6e:	0f 87 a4 00 00 00    	ja     1b18 <main+0x318>
1a74:	85 d2                	test   edx,edx
1a76:	0f 85 9c 00 00 00    	jne    1b18 <main+0x318>
1a7c:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
1a81:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
1a86:	ba 00 20 00 00       	mov    edx,0x2000
1a8b:	48 29 da             	sub    rdx,rbx
1a8e:	be 01 00 00 00       	mov    esi,0x1
1a93:	48 8d 3c 18          	lea    rdi,[rax+rbx*1]
1a97:	e8 94 fa ff ff       	call   1530 <fread_unlocked@plt>
1a9c:	80 7c 24 30 00       	cmp    BYTE PTR [rsp+0x30],0x0
1aa1:	49 89 c4             	mov    r12,rax
1aa4:	48 89 44 24 50       	mov    QWORD PTR [rsp+0x50],rax
1aa9:	74 a5                	je     1a50 <main+0x250>
1aab:	45 31 ed             	xor    r13d,r13d
1aae:	4d 85 e4             	test   r12,r12
1ab1:	74 9d                	je     1a50 <main+0x250>
1ab3:	4d 39 e5             	cmp    r13,r12
1ab6:	73 98                	jae    1a50 <main+0x250>
1ab8:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
1abd:	4e 8d 3c 2b          	lea    r15,[rbx+r13*1]
1ac1:	4e 8d 34 38          	lea    r14,[rax+r15*1]
1ac5:	41 0f be 3e          	movsx  edi,BYTE PTR [r14]
1ac9:	89 fd                	mov    ebp,edi
1acb:	e8 80 0e 00 00       	call   2950 <isbase32>
1ad0:	40 80 fd 3d          	cmp    bpl,0x3d
1ad4:	74 04                	je     1ada <main+0x2da>
1ad6:	84 c0                	test   al,al
1ad8:	74 16                	je     1af0 <main+0x2f0>
1ada:	49 83 c5 01          	add    r13,0x1
1ade:	4d 85 e4             	test   r12,r12
1ae1:	75 d0                	jne    1ab3 <main+0x2b3>
1ae3:	e9 68 ff ff ff       	jmp    1a50 <main+0x250>
1ae8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
1aef:	00
1af0:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
1af5:	49 83 ec 01          	sub    r12,0x1
1af9:	4c 89 f7             	mov    rdi,r14
1afc:	4c 89 e2             	mov    rdx,r12
1aff:	4c 89 64 24 50       	mov    QWORD PTR [rsp+0x50],r12
1b04:	4c 29 ea             	sub    rdx,r13
1b07:	4a 8d 74 38 01       	lea    rsi,[rax+r15*1+0x1]
1b0c:	e8 2f fc ff ff       	call   1740 <memmove@plt>
1b11:	eb 9b                	jmp    1aae <main+0x2ae>
1b13:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
1b18:	45 31 ff             	xor    r15d,r15d
1b1b:	48 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],rbx
1b20:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
1b25:	45 89 fe             	mov    r14d,r15d
1b28:	4c 8b 64 24 40       	mov    r12,QWORD PTR [rsp+0x40]
1b2d:	48 8b 5c 24 10       	mov    rbx,QWORD PTR [rsp+0x10]
1b32:	4c 8b 7c 24 38       	mov    r15,QWORD PTR [rsp+0x38]
1b37:	eb 65                	jmp    1b9e <main+0x39e>
1b39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
1b40:	45 85 f6             	test   r14d,r14d
1b43:	0f 85 ff fe ff ff    	jne    1a48 <main+0x248>
1b49:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
1b4e:	48 c7 44 24 50 00 14 	mov    QWORD PTR [rsp+0x50],0x1400
1b55:	00 00
1b57:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
1b5c:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
1b61:	4c 89 e1             	mov    rcx,r12
1b64:	48 89 ee             	mov    rsi,rbp
1b67:	e8 14 0e 00 00       	call   2980 <base32_decode_ctx>
1b6c:	48 8b 54 24 50       	mov    rdx,QWORD PTR [rsp+0x50]
1b71:	4c 89 f9             	mov    rcx,r15
1b74:	be 01 00 00 00       	mov    esi,0x1
1b79:	4c 89 e7             	mov    rdi,r12
1b7c:	41 89 c5             	mov    r13d,eax
1b7f:	e8 7c fb ff ff       	call   1700 <fwrite_unlocked@plt>
1b84:	48 3b 44 24 50       	cmp    rax,QWORD PTR [rsp+0x50]
1b89:	0f 82 56 03 00 00    	jb     1ee5 <main+0x6e5>
1b8f:	45 84 ed             	test   r13b,r13b
1b92:	0f 84 29 03 00 00    	je     1ec1 <main+0x6c1>
1b98:	8b 03                	mov    eax,DWORD PTR [rbx]
1b9a:	41 83 c6 01          	add    r14d,0x1
1b9e:	a8 10                	test   al,0x10
1ba0:	74 9e                	je     1b40 <main+0x340>
1ba2:	41 83 fe 01          	cmp    r14d,0x1
1ba6:	77 17                	ja     1bbf <main+0x3bf>
1ba8:	75 9f                	jne    1b49 <main+0x349>
1baa:	8b 44 24 5c          	mov    eax,DWORD PTR [rsp+0x5c]
1bae:	85 c0                	test   eax,eax
1bb0:	74 0d                	je     1bbf <main+0x3bf>
1bb2:	48 c7 44 24 50 00 14 	mov    QWORD PTR [rsp+0x50],0x1400
1bb9:	00 00
1bbb:	31 d2                	xor    edx,edx
1bbd:	eb 98                	jmp    1b57 <main+0x357>
1bbf:	49 89 dc             	mov    r12,rbx
1bc2:	4c 89 e7             	mov    rdi,r12
1bc5:	e8 66 3d 00 00       	call   5930 <rpl_fclose>
1bca:	83 c0 01             	add    eax,0x1
1bcd:	0f 84 82 02 00 00    	je     1e55 <main+0x655>
1bd3:	31 c0                	xor    eax,eax
1bd5:	48 8b 4c 24 68       	mov    rcx,QWORD PTR [rsp+0x68]
1bda:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
1be1:	00 00
1be3:	0f 85 54 03 00 00    	jne    1f3d <main+0x73d>
1be9:	48 83 c4 78          	add    rsp,0x78
1bed:	5b                   	pop    rbx
1bee:	5d                   	pop    rbp
1bef:	41 5c                	pop    r12
1bf1:	41 5d                	pop    r13
1bf3:	41 5e                	pop    r14
1bf5:	41 5f                	pop    r15
1bf7:	c3                   	ret
1bf8:	bf 00 78 00 00       	mov    edi,0x7800
1bfd:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
1c02:	31 db                	xor    ebx,ebx
1c04:	e8 47 35 00 00       	call   5150 <xmalloc>
1c09:	bf 00 c0 00 00       	mov    edi,0xc000
1c0e:	49 89 c5             	mov    r13,rax
1c11:	41 be 00 78 00 00    	mov    r14d,0x7800
1c17:	e8 34 35 00 00       	call   5150 <xmalloc>
1c1c:	48 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],rbp
1c21:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
1c26:	31 ed                	xor    ebp,ebp
1c28:	eb 13                	jmp    1c3d <main+0x43d>
1c2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
1c30:	48 81 fd ff 77 00 00 	cmp    rbp,0x77ff
1c37:	0f 87 92 00 00 00    	ja     1ccf <main+0x4cf>
1c3d:	49 8d 7c 2d 00       	lea    rdi,[r13+rbp*1+0x0]
1c42:	4c 89 f2             	mov    rdx,r14
1c45:	4c 89 e1             	mov    rcx,r12
1c48:	48 29 ea             	sub    rdx,rbp
1c4b:	be 01 00 00 00       	mov    esi,0x1
1c50:	e8 db f8 ff ff       	call   1530 <fread_unlocked@plt>
1c55:	48 01 c5             	add    rbp,rax
1c58:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
1c5c:	a8 30                	test   al,0x30
1c5e:	74 d0                	je     1c30 <main+0x430>
1c60:	48 85 ed             	test   rbp,rbp
1c63:	75 6a                	jne    1ccf <main+0x4cf>
1c65:	48 85 db             	test   rbx,rbx
1c68:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
1c6d:	74 2c                	je     1c9b <main+0x49b>
1c6f:	48 85 ed             	test   rbp,rbp
1c72:	74 27                	je     1c9b <main+0x49b>
1c74:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
1c79:	48 8b 41 28          	mov    rax,QWORD PTR [rcx+0x28]
1c7d:	48 3b 41 30          	cmp    rax,QWORD PTR [rcx+0x30]
1c81:	0f 83 30 03 00 00    	jae    1fb7 <main+0x7b7>
1c87:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
1c8c:	48 8d 50 01          	lea    rdx,[rax+0x1]
1c90:	48 89 51 28          	mov    QWORD PTR [rcx+0x28],rdx
1c94:	c6 00 0a             	mov    BYTE PTR [rax],0xa
1c97:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
1c9b:	a8 20                	test   al,0x20
1c9d:	0f 84 1f ff ff ff    	je     1bc2 <main+0x3c2>
1ca3:	48 8d 35 15 41 00 00 	lea    rsi,[rip+0x4115]        # 5dbf <_IO_stdin_used+0x11f>
1caa:	ba 05 00 00 00       	mov    edx,0x5
1caf:	31 ff                	xor    edi,edi
1cb1:	e8 ba f8 ff ff       	call   1570 <dcgettext@plt>
1cb6:	48 89 c3             	mov    rbx,rax
1cb9:	e8 32 f8 ff ff       	call   14f0 <__errno_location@plt>
1cbe:	8b 30                	mov    esi,DWORD PTR [rax]
1cc0:	48 89 da             	mov    rdx,rbx
1cc3:	bf 01 00 00 00       	mov    edi,0x1
1cc8:	31 c0                	xor    eax,eax
1cca:	e8 81 fa ff ff       	call   1750 <error@plt>
1ccf:	48 8d 45 04          	lea    rax,[rbp+0x4]
1cd3:	b9 05 00 00 00       	mov    ecx,0x5
1cd8:	31 d2                	xor    edx,edx
1cda:	48 89 ee             	mov    rsi,rbp
1cdd:	4c 89 ef             	mov    rdi,r13
1ce0:	48 f7 f1             	div    rcx
1ce3:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
1ce8:	4c 8d 3c c5 00 00 00 	lea    r15,[rax*8+0x0]
1cef:	00
1cf0:	4c 89 f9             	mov    rcx,r15
1cf3:	e8 a8 09 00 00       	call   26a0 <base32_encode>
1cf8:	48 83 7c 24 08 00    	cmp    QWORD PTR [rsp+0x8],0x0
1cfe:	0f 84 c5 00 00 00    	je     1dc9 <main+0x5c9>
1d04:	45 31 d2             	xor    r10d,r10d
1d07:	4d 85 ff             	test   r15,r15
1d0a:	0f 84 9b 00 00 00    	je     1dab <main+0x5ab>
1d10:	4c 89 6c 24 28       	mov    QWORD PTR [rsp+0x28],r13
1d15:	48 89 6c 24 30       	mov    QWORD PTR [rsp+0x30],rbp
1d1a:	49 89 dd             	mov    r13,rbx
1d1d:	4c 89 fd             	mov    rbp,r15
1d20:	4c 89 64 24 20       	mov    QWORD PTR [rsp+0x20],r12
1d25:	4c 8b 7c 24 18       	mov    r15,QWORD PTR [rsp+0x18]
1d2a:	4c 89 d3             	mov    rbx,r10
1d2d:	eb 22                	jmp    1d51 <main+0x551>
1d2f:	90                   	nop
1d30:	49 8b 47 28          	mov    rax,QWORD PTR [r15+0x28]
1d34:	49 3b 47 30          	cmp    rax,QWORD PTR [r15+0x30]
1d38:	0f 83 d5 00 00 00    	jae    1e13 <main+0x613>
1d3e:	48 8d 50 01          	lea    rdx,[rax+0x1]
1d42:	49 89 57 28          	mov    QWORD PTR [r15+0x28],rdx
1d46:	c6 00 0a             	mov    BYTE PTR [rax],0xa
1d49:	45 31 ed             	xor    r13d,r13d
1d4c:	48 39 dd             	cmp    rbp,rbx
1d4f:	76 48                	jbe    1d99 <main+0x599>
1d51:	4c 8b 64 24 08       	mov    r12,QWORD PTR [rsp+0x8]
1d56:	48 89 e8             	mov    rax,rbp
1d59:	48 29 d8             	sub    rax,rbx
1d5c:	4d 29 ec             	sub    r12,r13
1d5f:	49 39 c4             	cmp    r12,rax
1d62:	4c 0f 47 e0          	cmova  r12,rax
1d66:	4d 85 e4             	test   r12,r12
1d69:	74 c5                	je     1d30 <main+0x530>
1d6b:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
1d70:	48 8b 0d 11 73 20 00 	mov    rcx,QWORD PTR [rip+0x207311]        # 209088 <stdout@@GLIBC_2.2.5>
1d77:	4c 89 e2             	mov    rdx,r12
1d7a:	be 01 00 00 00       	mov    esi,0x1
1d7f:	48 8d 3c 18          	lea    rdi,[rax+rbx*1]
1d83:	e8 78 f9 ff ff       	call   1700 <fwrite_unlocked@plt>
1d88:	49 39 c4             	cmp    r12,rax
1d8b:	0f 87 b1 01 00 00    	ja     1f42 <main+0x742>
1d91:	4d 01 e5             	add    r13,r12
1d94:	4c 01 e3             	add    rbx,r12
1d97:	eb b3                	jmp    1d4c <main+0x54c>
1d99:	4c 89 eb             	mov    rbx,r13
1d9c:	4c 8b 64 24 20       	mov    r12,QWORD PTR [rsp+0x20]
1da1:	4c 8b 6c 24 28       	mov    r13,QWORD PTR [rsp+0x28]
1da6:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
1dab:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
1daf:	a8 30                	test   al,0x30
1db1:	0f 85 ae fe ff ff    	jne    1c65 <main+0x465>
1db7:	48 81 fd 00 78 00 00 	cmp    rbp,0x7800
1dbe:	0f 84 62 fe ff ff    	je     1c26 <main+0x426>
1dc4:	e9 9c fe ff ff       	jmp    1c65 <main+0x465>
1dc9:	48 8b 0d b8 72 20 00 	mov    rcx,QWORD PTR [rip+0x2072b8]        # 209088 <stdout@@GLIBC_2.2.5>
1dd0:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
1dd5:	4c 89 fa             	mov    rdx,r15
1dd8:	be 01 00 00 00       	mov    esi,0x1
1ddd:	e8 1e f9 ff ff       	call   1700 <fwrite_unlocked@plt>
1de2:	49 39 c7             	cmp    r15,rax
1de5:	76 c4                	jbe    1dab <main+0x5ab>
1de7:	48 8d 35 dc 3f 00 00 	lea    rsi,[rip+0x3fdc]        # 5dca <_IO_stdin_used+0x12a>
1dee:	ba 05 00 00 00       	mov    edx,0x5
1df3:	31 ff                	xor    edi,edi
1df5:	e8 76 f7 ff ff       	call   1570 <dcgettext@plt>
1dfa:	48 89 c3             	mov    rbx,rax
1dfd:	e8 ee f6 ff ff       	call   14f0 <__errno_location@plt>
1e02:	8b 30                	mov    esi,DWORD PTR [rax]
1e04:	48 89 da             	mov    rdx,rbx
1e07:	bf 01 00 00 00       	mov    edi,0x1
1e0c:	31 c0                	xor    eax,eax
1e0e:	e8 3d f9 ff ff       	call   1750 <error@plt>
1e13:	be 0a 00 00 00       	mov    esi,0xa
1e18:	4c 89 ff             	mov    rdi,r15
1e1b:	e8 c0 f7 ff ff       	call   15e0 <__overflow@plt>
1e20:	83 c0 01             	add    eax,0x1
1e23:	0f 85 20 ff ff ff    	jne    1d49 <main+0x549>
1e29:	48 8d 35 9a 3f 00 00 	lea    rsi,[rip+0x3f9a]        # 5dca <_IO_stdin_used+0x12a>
1e30:	ba 05 00 00 00       	mov    edx,0x5
1e35:	31 ff                	xor    edi,edi
1e37:	e8 34 f7 ff ff       	call   1570 <dcgettext@plt>
1e3c:	48 89 c3             	mov    rbx,rax
1e3f:	e8 ac f6 ff ff       	call   14f0 <__errno_location@plt>
1e44:	8b 30                	mov    esi,DWORD PTR [rax]
1e46:	48 89 da             	mov    rdx,rbx
1e49:	bf 01 00 00 00       	mov    edi,0x1
1e4e:	31 c0                	xor    eax,eax
1e50:	e8 fb f8 ff ff       	call   1750 <error@plt>
1e55:	48 8b 7c 24 48       	mov    rdi,QWORD PTR [rsp+0x48]
1e5a:	48 8d 35 49 45 00 00 	lea    rsi,[rip+0x4549]        # 63aa <b32+0x14a>
1e61:	e8 2a f8 ff ff       	call   1690 <strcmp@plt>
1e66:	89 c5                	mov    ebp,eax
1e68:	e8 83 f6 ff ff       	call   14f0 <__errno_location@plt>
1e6d:	85 ed                	test   ebp,ebp
1e6f:	48 89 c3             	mov    rbx,rax
1e72:	75 24                	jne    1e98 <main+0x698>
1e74:	48 8d 35 69 3f 00 00 	lea    rsi,[rip+0x3f69]        # 5de4 <_IO_stdin_used+0x144>
1e7b:	ba 05 00 00 00       	mov    edx,0x5
1e80:	31 ff                	xor    edi,edi
1e82:	e8 e9 f6 ff ff       	call   1570 <dcgettext@plt>
1e87:	8b 33                	mov    esi,DWORD PTR [rbx]
1e89:	48 89 c2             	mov    rdx,rax
1e8c:	bf 01 00 00 00       	mov    edi,0x1
1e91:	31 c0                	xor    eax,eax
1e93:	e8 b8 f8 ff ff       	call   1750 <error@plt>
1e98:	48 8b 54 24 48       	mov    rdx,QWORD PTR [rsp+0x48]
1e9d:	be 03 00 00 00       	mov    esi,0x3
1ea2:	31 ff                	xor    edi,edi
1ea4:	e8 97 2a 00 00       	call   4940 <quotearg_n_style_colon>
1ea9:	8b 33                	mov    esi,DWORD PTR [rbx]
1eab:	48 8d 15 b2 44 00 00 	lea    rdx,[rip+0x44b2]        # 6364 <b32+0x104>
1eb2:	48 89 c1             	mov    rcx,rax
1eb5:	bf 01 00 00 00       	mov    edi,0x1
1eba:	31 c0                	xor    eax,eax
1ebc:	e8 8f f8 ff ff       	call   1750 <error@plt>
1ec1:	48 8d 35 0e 3f 00 00 	lea    rsi,[rip+0x3f0e]        # 5dd6 <_IO_stdin_used+0x136>
1ec8:	ba 05 00 00 00       	mov    edx,0x5
1ecd:	31 ff                	xor    edi,edi
1ecf:	e8 9c f6 ff ff       	call   1570 <dcgettext@plt>
1ed4:	31 f6                	xor    esi,esi
1ed6:	48 89 c2             	mov    rdx,rax
1ed9:	bf 01 00 00 00       	mov    edi,0x1
1ede:	31 c0                	xor    eax,eax
1ee0:	e8 6b f8 ff ff       	call   1750 <error@plt>
1ee5:	48 8d 35 de 3e 00 00 	lea    rsi,[rip+0x3ede]        # 5dca <_IO_stdin_used+0x12a>
1eec:	ba 05 00 00 00       	mov    edx,0x5
1ef1:	31 ff                	xor    edi,edi
1ef3:	e8 78 f6 ff ff       	call   1570 <dcgettext@plt>
1ef8:	48 89 c3             	mov    rbx,rax
1efb:	e8 f0 f5 ff ff       	call   14f0 <__errno_location@plt>
1f00:	8b 30                	mov    esi,DWORD PTR [rax]
1f02:	48 89 da             	mov    rdx,rbx
1f05:	bf 01 00 00 00       	mov    edi,0x1
1f0a:	31 c0                	xor    eax,eax
1f0c:	e8 3f f8 ff ff       	call   1750 <error@plt>
1f11:	48 8d 35 a7 3e 00 00 	lea    rsi,[rip+0x3ea7]        # 5dbf <_IO_stdin_used+0x11f>
1f18:	ba 05 00 00 00       	mov    edx,0x5
1f1d:	31 ff                	xor    edi,edi
1f1f:	e8 4c f6 ff ff       	call   1570 <dcgettext@plt>
1f24:	48 89 c3             	mov    rbx,rax
1f27:	e8 c4 f5 ff ff       	call   14f0 <__errno_location@plt>
1f2c:	8b 30                	mov    esi,DWORD PTR [rax]
1f2e:	48 89 da             	mov    rdx,rbx
1f31:	bf 01 00 00 00       	mov    edi,0x1
1f36:	31 c0                	xor    eax,eax
1f38:	e8 13 f8 ff ff       	call   1750 <error@plt>
1f3d:	e8 5e f6 ff ff       	call   15a0 <__stack_chk_fail@plt>
1f42:	48 8d 35 81 3e 00 00 	lea    rsi,[rip+0x3e81]        # 5dca <_IO_stdin_used+0x12a>
1f49:	ba 05 00 00 00       	mov    edx,0x5
1f4e:	31 ff                	xor    edi,edi
1f50:	e8 1b f6 ff ff       	call   1570 <dcgettext@plt>
1f55:	48 89 c3             	mov    rbx,rax
1f58:	e8 93 f5 ff ff       	call   14f0 <__errno_location@plt>
1f5d:	8b 30                	mov    esi,DWORD PTR [rax]
1f5f:	48 89 da             	mov    rdx,rbx
1f62:	bf 01 00 00 00       	mov    edi,0x1
1f67:	31 c0                	xor    eax,eax
1f69:	e8 e2 f7 ff ff       	call   1750 <error@plt>
1f6e:	3d 7e ff ff ff       	cmp    eax,0xffffff7e
1f73:	75 38                	jne    1fad <main+0x7ad>
1f75:	31 ff                	xor    edi,edi
1f77:	e8 94 01 00 00       	call   2110 <usage>
1f7c:	49 8b 7c c4 08       	mov    rdi,QWORD PTR [r12+rax*8+0x8]
1f81:	e8 8a 2b 00 00       	call   4b10 <quote>
1f86:	48 8d 35 1e 3e 00 00 	lea    rsi,[rip+0x3e1e]        # 5dab <_IO_stdin_used+0x10b>
1f8d:	48 89 c3             	mov    rbx,rax
1f90:	ba 05 00 00 00       	mov    edx,0x5
1f95:	31 ff                	xor    edi,edi
1f97:	e8 d4 f5 ff ff       	call   1570 <dcgettext@plt>
1f9c:	48 89 d9             	mov    rcx,rbx
1f9f:	48 89 c2             	mov    rdx,rax
1fa2:	31 f6                	xor    esi,esi
1fa4:	31 ff                	xor    edi,edi
1fa6:	31 c0                	xor    eax,eax
1fa8:	e8 a3 f7 ff ff       	call   1750 <error@plt>
1fad:	bf 01 00 00 00       	mov    edi,0x1
1fb2:	e8 59 01 00 00       	call   2110 <usage>
1fb7:	be 0a 00 00 00       	mov    esi,0xa
1fbc:	48 89 cf             	mov    rdi,rcx
1fbf:	e8 1c f6 ff ff       	call   15e0 <__overflow@plt>
1fc4:	83 c0 01             	add    eax,0x1
1fc7:	0f 85 ca fc ff ff    	jne    1c97 <main+0x497>
1fcd:	48 8d 35 f6 3d 00 00 	lea    rsi,[rip+0x3df6]        # 5dca <_IO_stdin_used+0x12a>
1fd4:	ba 05 00 00 00       	mov    edx,0x5
1fd9:	31 ff                	xor    edi,edi
1fdb:	e8 90 f5 ff ff       	call   1570 <dcgettext@plt>
1fe0:	48 89 c3             	mov    rbx,rax
1fe3:	e8 08 f5 ff ff       	call   14f0 <__errno_location@plt>
1fe8:	8b 30                	mov    esi,DWORD PTR [rax]
1fea:	48 89 da             	mov    rdx,rbx
1fed:	bf 01 00 00 00       	mov    edi,0x1
1ff2:	31 c0                	xor    eax,eax
1ff4:	e8 57 f7 ff ff       	call   1750 <error@plt>
1ff9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002000 <_start>:
2000:	31 ed                	xor    ebp,ebp
2002:	49 89 d1             	mov    r9,rdx
2005:	5e                   	pop    rsi
2006:	48 89 e2             	mov    rdx,rsp
2009:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
200d:	50                   	push   rax
200e:	54                   	push   rsp
200f:	4c 8d 05 5a 3c 00 00 	lea    r8,[rip+0x3c5a]        # 5c70 <__libc_csu_fini>
2016:	48 8d 0d e3 3b 00 00 	lea    rcx,[rip+0x3be3]        # 5c00 <__libc_csu_init>
201d:	48 8d 3d dc f7 ff ff 	lea    rdi,[rip+0xfffffffffffff7dc]        # 1800 <main>
2024:	ff 15 ae 6f 20 00    	call   QWORD PTR [rip+0x206fae]        # 208fd8 <__libc_start_main@GLIBC_2.2.5>
202a:	f4                   	hlt
202b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002030 <deregister_tm_clones>:
2030:	48 8d 3d 49 70 20 00 	lea    rdi,[rip+0x207049]        # 209080 <__progname@@GLIBC_2.2.5>
2037:	55                   	push   rbp
2038:	48 8d 05 41 70 20 00 	lea    rax,[rip+0x207041]        # 209080 <__progname@@GLIBC_2.2.5>
203f:	48 39 f8             	cmp    rax,rdi
2042:	48 89 e5             	mov    rbp,rsp
2045:	74 19                	je     2060 <deregister_tm_clones+0x30>
2047:	48 8b 05 82 6f 20 00 	mov    rax,QWORD PTR [rip+0x206f82]        # 208fd0 <_ITM_deregisterTMCloneTable>
204e:	48 85 c0             	test   rax,rax
2051:	74 0d                	je     2060 <deregister_tm_clones+0x30>
2053:	5d                   	pop    rbp
2054:	ff e0                	jmp    rax
2056:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
205d:	00 00 00
2060:	5d                   	pop    rbp
2061:	c3                   	ret
2062:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2066:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
206d:	00 00 00

0000000000002070 <register_tm_clones>:
2070:	48 8d 3d 09 70 20 00 	lea    rdi,[rip+0x207009]        # 209080 <__progname@@GLIBC_2.2.5>
2077:	48 8d 35 02 70 20 00 	lea    rsi,[rip+0x207002]        # 209080 <__progname@@GLIBC_2.2.5>
207e:	55                   	push   rbp
207f:	48 29 fe             	sub    rsi,rdi
2082:	48 89 e5             	mov    rbp,rsp
2085:	48 c1 fe 03          	sar    rsi,0x3
2089:	48 89 f0             	mov    rax,rsi
208c:	48 c1 e8 3f          	shr    rax,0x3f
2090:	48 01 c6             	add    rsi,rax
2093:	48 d1 fe             	sar    rsi,1
2096:	74 18                	je     20b0 <register_tm_clones+0x40>
2098:	48 8b 05 49 6f 20 00 	mov    rax,QWORD PTR [rip+0x206f49]        # 208fe8 <_ITM_registerTMCloneTable>
209f:	48 85 c0             	test   rax,rax
20a2:	74 0c                	je     20b0 <register_tm_clones+0x40>
20a4:	5d                   	pop    rbp
20a5:	ff e0                	jmp    rax
20a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
20ae:	00 00
20b0:	5d                   	pop    rbp
20b1:	c3                   	ret
20b2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
20b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
20bd:	00 00 00

00000000000020c0 <__do_global_dtors_aux>:
20c0:	80 3d 01 70 20 00 00 	cmp    BYTE PTR [rip+0x207001],0x0        # 2090c8 <completed.7697>
20c7:	75 2f                	jne    20f8 <__do_global_dtors_aux+0x38>
20c9:	48 83 3d 1f 6f 20 00 	cmp    QWORD PTR [rip+0x206f1f],0x0        # 208ff0 <__cxa_finalize@GLIBC_2.2.5>
20d0:	00
20d1:	55                   	push   rbp
20d2:	48 89 e5             	mov    rbp,rsp
20d5:	74 0c                	je     20e3 <__do_global_dtors_aux+0x23>
20d7:	48 8b 3d 2a 6f 20 00 	mov    rdi,QWORD PTR [rip+0x206f2a]        # 209008 <__dso_handle>
20de:	e8 0d f7 ff ff       	call   17f0 <__cxa_finalize@plt>
20e3:	e8 48 ff ff ff       	call   2030 <deregister_tm_clones>
20e8:	c6 05 d9 6f 20 00 01 	mov    BYTE PTR [rip+0x206fd9],0x1        # 2090c8 <completed.7697>
20ef:	5d                   	pop    rbp
20f0:	c3                   	ret
20f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
20f8:	f3 c3                	repz ret
20fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002100 <frame_dummy>:
2100:	55                   	push   rbp
2101:	48 89 e5             	mov    rbp,rsp
2104:	5d                   	pop    rbp
2105:	e9 66 ff ff ff       	jmp    2070 <register_tm_clones>
210a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002110 <usage>:
2110:	41 55                	push   r13
2112:	41 54                	push   r12
2114:	ba 05 00 00 00       	mov    edx,0x5
2119:	55                   	push   rbp
211a:	53                   	push   rbx
211b:	89 fd                	mov    ebp,edi
211d:	48 81 ec 88 00 00 00 	sub    rsp,0x88
2124:	48 8b 1d b5 6f 20 00 	mov    rbx,QWORD PTR [rip+0x206fb5]        # 2090e0 <program_name>
212b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2132:	00 00
2134:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
2139:	31 c0                	xor    eax,eax
213b:	85 ff                	test   edi,edi
213d:	74 2e                	je     216d <usage+0x5d>
213f:	48 8d 35 e2 3c 00 00 	lea    rsi,[rip+0x3ce2]        # 5e28 <_IO_stdin_used+0x188>
2146:	31 ff                	xor    edi,edi
2148:	e8 23 f4 ff ff       	call   1570 <dcgettext@plt>
214d:	48 8b 3d 6c 6f 20 00 	mov    rdi,QWORD PTR [rip+0x206f6c]        # 2090c0 <stderr@@GLIBC_2.2.5>
2154:	48 89 c2             	mov    rdx,rax
2157:	48 89 d9             	mov    rcx,rbx
215a:	be 01 00 00 00       	mov    esi,0x1
215f:	31 c0                	xor    eax,eax
2161:	e8 4a f6 ff ff       	call   17b0 <__fprintf_chk@plt>
2166:	89 ef                	mov    edi,ebp
2168:	e8 23 f6 ff ff       	call   1790 <exit@plt>
216d:	48 8d 35 37 3b 00 00 	lea    rsi,[rip+0x3b37]        # 5cab <_IO_stdin_used+0xb>
2174:	31 ff                	xor    edi,edi
2176:	e8 f5 f3 ff ff       	call   1570 <dcgettext@plt>
217b:	48 89 da             	mov    rdx,rbx
217e:	48 89 c6             	mov    rsi,rax
2181:	bf 01 00 00 00       	mov    edi,0x1
2186:	31 c0                	xor    eax,eax
2188:	e8 a3 f5 ff ff       	call   1730 <__printf_chk@plt>
218d:	48 8d 35 bc 3c 00 00 	lea    rsi,[rip+0x3cbc]        # 5e50 <_IO_stdin_used+0x1b0>
2194:	ba 05 00 00 00       	mov    edx,0x5
2199:	31 ff                	xor    edi,edi
219b:	e8 d0 f3 ff ff       	call   1570 <dcgettext@plt>
21a0:	ba 20 00 00 00       	mov    edx,0x20
21a5:	48 89 c6             	mov    rsi,rax
21a8:	bf 01 00 00 00       	mov    edi,0x1
21ad:	31 c0                	xor    eax,eax
21af:	e8 7c f5 ff ff       	call   1730 <__printf_chk@plt>
21b4:	48 8b 1d cd 6e 20 00 	mov    rbx,QWORD PTR [rip+0x206ecd]        # 209088 <stdout@@GLIBC_2.2.5>
21bb:	48 8d 35 d6 3c 00 00 	lea    rsi,[rip+0x3cd6]        # 5e98 <_IO_stdin_used+0x1f8>
21c2:	ba 05 00 00 00       	mov    edx,0x5
21c7:	31 ff                	xor    edi,edi
21c9:	e8 a2 f3 ff ff       	call   1570 <dcgettext@plt>
21ce:	48 89 de             	mov    rsi,rbx
21d1:	48 89 c7             	mov    rdi,rax
21d4:	e8 97 f4 ff ff       	call   1670 <fputs_unlocked@plt>
21d9:	48 8b 1d a8 6e 20 00 	mov    rbx,QWORD PTR [rip+0x206ea8]        # 209088 <stdout@@GLIBC_2.2.5>
21e0:	48 8d 35 e9 3c 00 00 	lea    rsi,[rip+0x3ce9]        # 5ed0 <_IO_stdin_used+0x230>
21e7:	ba 05 00 00 00       	mov    edx,0x5
21ec:	31 ff                	xor    edi,edi
21ee:	e8 7d f3 ff ff       	call   1570 <dcgettext@plt>
21f3:	48 89 de             	mov    rsi,rbx
21f6:	48 89 c7             	mov    rdi,rax
21f9:	e8 72 f4 ff ff       	call   1670 <fputs_unlocked@plt>
21fe:	48 8b 1d 83 6e 20 00 	mov    rbx,QWORD PTR [rip+0x206e83]        # 209088 <stdout@@GLIBC_2.2.5>
2205:	48 8d 35 14 3d 00 00 	lea    rsi,[rip+0x3d14]        # 5f20 <_IO_stdin_used+0x280>
220c:	ba 05 00 00 00       	mov    edx,0x5
2211:	31 ff                	xor    edi,edi
2213:	e8 58 f3 ff ff       	call   1570 <dcgettext@plt>
2218:	48 89 de             	mov    rsi,rbx
221b:	48 89 c7             	mov    rdi,rax
221e:	e8 4d f4 ff ff       	call   1670 <fputs_unlocked@plt>
2223:	48 8b 1d 5e 6e 20 00 	mov    rbx,QWORD PTR [rip+0x206e5e]        # 209088 <stdout@@GLIBC_2.2.5>
222a:	48 8d 35 e7 3d 00 00 	lea    rsi,[rip+0x3de7]        # 6018 <_IO_stdin_used+0x378>
2231:	ba 05 00 00 00       	mov    edx,0x5
2236:	31 ff                	xor    edi,edi
2238:	e8 33 f3 ff ff       	call   1570 <dcgettext@plt>
223d:	48 89 de             	mov    rsi,rbx
2240:	48 89 c7             	mov    rdi,rax
2243:	e8 28 f4 ff ff       	call   1670 <fputs_unlocked@plt>
2248:	48 8b 1d 39 6e 20 00 	mov    rbx,QWORD PTR [rip+0x206e39]        # 209088 <stdout@@GLIBC_2.2.5>
224f:	48 8d 35 f2 3d 00 00 	lea    rsi,[rip+0x3df2]        # 6048 <_IO_stdin_used+0x3a8>
2256:	ba 05 00 00 00       	mov    edx,0x5
225b:	31 ff                	xor    edi,edi
225d:	e8 0e f3 ff ff       	call   1570 <dcgettext@plt>
2262:	48 89 de             	mov    rsi,rbx
2265:	48 89 c7             	mov    rdi,rax
2268:	48 8d 1d 35 3a 00 00 	lea    rbx,[rip+0x3a35]        # 5ca4 <_IO_stdin_used+0x4>
226f:	e8 fc f3 ff ff       	call   1670 <fputs_unlocked@plt>
2274:	48 8d 35 05 3e 00 00 	lea    rsi,[rip+0x3e05]        # 6080 <_IO_stdin_used+0x3e0>
227b:	ba 05 00 00 00       	mov    edx,0x5
2280:	31 ff                	xor    edi,edi
2282:	e8 e9 f2 ff ff       	call   1570 <dcgettext@plt>
2287:	48 8d 0d 16 3a 00 00 	lea    rcx,[rip+0x3a16]        # 5ca4 <_IO_stdin_used+0x4>
228e:	48 89 c6             	mov    rsi,rax
2291:	bf 01 00 00 00       	mov    edi,0x1
2296:	31 c0                	xor    eax,eax
2298:	48 89 ca             	mov    rdx,rcx
229b:	e8 90 f4 ff ff       	call   1730 <__printf_chk@plt>
22a0:	48 8d 05 22 3a 00 00 	lea    rax,[rip+0x3a22]        # 5cc9 <_IO_stdin_used+0x29>
22a7:	48 8d 0d 5c 3a 00 00 	lea    rcx,[rip+0x3a5c]        # 5d0a <_IO_stdin_used+0x6a>
22ae:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
22b5:	00 00
22b7:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
22be:	00 00
22c0:	48 89 e2             	mov    rdx,rsp
22c3:	48 89 04 24          	mov    QWORD PTR [rsp],rax
22c7:	48 8d 05 fd 39 00 00 	lea    rax,[rip+0x39fd]        # 5ccb <_IO_stdin_used+0x2b>
22ce:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
22d3:	48 8d 0d 3a 3a 00 00 	lea    rcx,[rip+0x3a3a]        # 5d14 <_IO_stdin_used+0x74>
22da:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
22df:	48 8d 05 5d 3a 00 00 	lea    rax,[rip+0x3a5d]        # 5d43 <_IO_stdin_used+0xa3>
22e6:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
22eb:	48 8d 0d 2c 3a 00 00 	lea    rcx,[rip+0x3a2c]        # 5d1e <_IO_stdin_used+0x7e>
22f2:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
22f7:	48 8d 05 dd 39 00 00 	lea    rax,[rip+0x39dd]        # 5cdb <_IO_stdin_used+0x3b>
22fe:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
2303:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2308:	48 8d 05 e2 39 00 00 	lea    rax,[rip+0x39e2]        # 5cf1 <_IO_stdin_used+0x51>
230f:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
2314:	48 8d 05 e0 39 00 00 	lea    rax,[rip+0x39e0]        # 5cfb <_IO_stdin_used+0x5b>
231b:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
2320:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
2325:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
232a:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
232f:	90                   	nop
2330:	48 83 c2 10          	add    rdx,0x10
2334:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
2337:	48 85 ff             	test   rdi,rdi
233a:	74 13                	je     234f <usage+0x23f>
233c:	b9 07 00 00 00       	mov    ecx,0x7
2341:	48 89 de             	mov    rsi,rbx
2344:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
2346:	0f 97 c0             	seta   al
2349:	1c 00                	sbb    al,0x0
234b:	84 c0                	test   al,al
234d:	75 e1                	jne    2330 <usage+0x220>
234f:	4c 8b 62 08          	mov    r12,QWORD PTR [rdx+0x8]
2353:	31 ff                	xor    edi,edi
2355:	ba 05 00 00 00       	mov    edx,0x5
235a:	48 8d 35 c7 39 00 00 	lea    rsi,[rip+0x39c7]        # 5d28 <_IO_stdin_used+0x88>
2361:	4d 85 e4             	test   r12,r12
2364:	0f 84 c1 00 00 00    	je     242b <usage+0x31b>
236a:	e8 01 f2 ff ff       	call   1570 <dcgettext@plt>
236f:	48 8d 0d 1a 3e 00 00 	lea    rcx,[rip+0x3e1a]        # 6190 <_IO_stdin_used+0x4f0>
2376:	48 8d 15 c2 39 00 00 	lea    rdx,[rip+0x39c2]        # 5d3f <_IO_stdin_used+0x9f>
237d:	48 89 c6             	mov    rsi,rax
2380:	bf 01 00 00 00       	mov    edi,0x1
2385:	31 c0                	xor    eax,eax
2387:	e8 a4 f3 ff ff       	call   1730 <__printf_chk@plt>
238c:	31 f6                	xor    esi,esi
238e:	bf 05 00 00 00       	mov    edi,0x5
2393:	e8 88 f3 ff ff       	call   1720 <setlocale@plt>
2398:	48 85 c0             	test   rax,rax
239b:	74 1c                	je     23b9 <usage+0x2a9>
239d:	48 8d 35 a9 39 00 00 	lea    rsi,[rip+0x39a9]        # 5d4d <_IO_stdin_used+0xad>
23a4:	ba 03 00 00 00       	mov    edx,0x3
23a9:	48 89 c7             	mov    rdi,rax
23ac:	e8 4f f1 ff ff       	call   1500 <strncmp@plt>
23b1:	85 c0                	test   eax,eax
23b3:	0f 85 07 01 00 00    	jne    24c0 <usage+0x3b0>
23b9:	48 8d 35 91 39 00 00 	lea    rsi,[rip+0x3991]        # 5d51 <_IO_stdin_used+0xb1>
23c0:	31 ff                	xor    edi,edi
23c2:	ba 05 00 00 00       	mov    edx,0x5
23c7:	e8 a4 f1 ff ff       	call   1570 <dcgettext@plt>
23cc:	48 8d 0d d1 38 00 00 	lea    rcx,[rip+0x38d1]        # 5ca4 <_IO_stdin_used+0x4>
23d3:	48 8d 15 b6 3d 00 00 	lea    rdx,[rip+0x3db6]        # 6190 <_IO_stdin_used+0x4f0>
23da:	48 89 c6             	mov    rsi,rax
23dd:	bf 01 00 00 00       	mov    edi,0x1
23e2:	31 c0                	xor    eax,eax
23e4:	e8 47 f3 ff ff       	call   1730 <__printf_chk@plt>
23e9:	49 39 dc             	cmp    r12,rbx
23ec:	48 8d 0d f2 38 00 00 	lea    rcx,[rip+0x38f2]        # 5ce5 <_IO_stdin_used+0x45>
23f3:	48 8d 1d e7 44 00 00 	lea    rbx,[rip+0x44e7]        # 68e1 <quoting_style_vals+0x81>
23fa:	48 0f 44 d9          	cmove  rbx,rcx
23fe:	48 8d 35 fb 3d 00 00 	lea    rsi,[rip+0x3dfb]        # 6200 <_IO_stdin_used+0x560>
2405:	31 ff                	xor    edi,edi
2407:	ba 05 00 00 00       	mov    edx,0x5
240c:	e8 5f f1 ff ff       	call   1570 <dcgettext@plt>
2411:	48 89 d9             	mov    rcx,rbx
2414:	48 89 c6             	mov    rsi,rax
2417:	4c 89 e2             	mov    rdx,r12
241a:	bf 01 00 00 00       	mov    edi,0x1
241f:	31 c0                	xor    eax,eax
2421:	e8 0a f3 ff ff       	call   1730 <__printf_chk@plt>
2426:	e9 3b fd ff ff       	jmp    2166 <usage+0x56>
242b:	e8 40 f1 ff ff       	call   1570 <dcgettext@plt>
2430:	48 8d 0d 59 3d 00 00 	lea    rcx,[rip+0x3d59]        # 6190 <_IO_stdin_used+0x4f0>
2437:	48 8d 15 01 39 00 00 	lea    rdx,[rip+0x3901]        # 5d3f <_IO_stdin_used+0x9f>
243e:	48 89 c6             	mov    rsi,rax
2441:	bf 01 00 00 00       	mov    edi,0x1
2446:	31 c0                	xor    eax,eax
2448:	e8 e3 f2 ff ff       	call   1730 <__printf_chk@plt>
244d:	31 f6                	xor    esi,esi
244f:	bf 05 00 00 00       	mov    edi,0x5
2454:	e8 c7 f2 ff ff       	call   1720 <setlocale@plt>
2459:	48 85 c0             	test   rax,rax
245c:	74 18                	je     2476 <usage+0x366>
245e:	48 8d 35 e8 38 00 00 	lea    rsi,[rip+0x38e8]        # 5d4d <_IO_stdin_used+0xad>
2465:	ba 03 00 00 00       	mov    edx,0x3
246a:	48 89 c7             	mov    rdi,rax
246d:	e8 8e f0 ff ff       	call   1500 <strncmp@plt>
2472:	85 c0                	test   eax,eax
2474:	75 43                	jne    24b9 <usage+0x3a9>
2476:	48 8d 35 d4 38 00 00 	lea    rsi,[rip+0x38d4]        # 5d51 <_IO_stdin_used+0xb1>
247d:	ba 05 00 00 00       	mov    edx,0x5
2482:	31 ff                	xor    edi,edi
2484:	4c 8d 25 19 38 00 00 	lea    r12,[rip+0x3819]        # 5ca4 <_IO_stdin_used+0x4>
248b:	48 8d 1d 53 38 00 00 	lea    rbx,[rip+0x3853]        # 5ce5 <_IO_stdin_used+0x45>
2492:	e8 d9 f0 ff ff       	call   1570 <dcgettext@plt>
2497:	48 8d 0d 06 38 00 00 	lea    rcx,[rip+0x3806]        # 5ca4 <_IO_stdin_used+0x4>
249e:	48 8d 15 eb 3c 00 00 	lea    rdx,[rip+0x3ceb]        # 6190 <_IO_stdin_used+0x4f0>
24a5:	48 89 c6             	mov    rsi,rax
24a8:	bf 01 00 00 00       	mov    edi,0x1
24ad:	31 c0                	xor    eax,eax
24af:	e8 7c f2 ff ff       	call   1730 <__printf_chk@plt>
24b4:	e9 45 ff ff ff       	jmp    23fe <usage+0x2ee>
24b9:	4c 8d 25 e4 37 00 00 	lea    r12,[rip+0x37e4]        # 5ca4 <_IO_stdin_used+0x4>
24c0:	4c 8b 2d c1 6b 20 00 	mov    r13,QWORD PTR [rip+0x206bc1]        # 209088 <stdout@@GLIBC_2.2.5>
24c7:	48 8d 35 ea 3c 00 00 	lea    rsi,[rip+0x3cea]        # 61b8 <_IO_stdin_used+0x518>
24ce:	31 ff                	xor    edi,edi
24d0:	ba 05 00 00 00       	mov    edx,0x5
24d5:	e8 96 f0 ff ff       	call   1570 <dcgettext@plt>
24da:	4c 89 ee             	mov    rsi,r13
24dd:	48 89 c7             	mov    rdi,rax
24e0:	e8 8b f1 ff ff       	call   1670 <fputs_unlocked@plt>
24e5:	e9 cf fe ff ff       	jmp    23b9 <usage+0x2a9>
24ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000024f0 <decode_8>:
24f0:	31 c0                	xor    eax,eax
24f2:	48 83 fe 07          	cmp    rsi,0x7
24f6:	0f 86 6c 01 00 00    	jbe    2668 <decode_8+0x178>
24fc:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
2500:	48 8d 35 59 3d 00 00 	lea    rsi,[rip+0x3d59]        # 6260 <b32>
2507:	46 0f b6 04 06       	movzx  r8d,BYTE PTR [rsi+r8*1]
250c:	45 84 c0             	test   r8b,r8b
250f:	0f 88 53 01 00 00    	js     2668 <decode_8+0x178>
2515:	44 0f b6 4f 01       	movzx  r9d,BYTE PTR [rdi+0x1]
251a:	46 0f b6 0c 0e       	movzx  r9d,BYTE PTR [rsi+r9*1]
251f:	45 84 c9             	test   r9b,r9b
2522:	0f 88 40 01 00 00    	js     2668 <decode_8+0x178>
2528:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
252c:	48 8b 02             	mov    rax,QWORD PTR [rdx]
252f:	74 1a                	je     254b <decode_8+0x5b>
2531:	45 89 ca             	mov    r10d,r9d
2534:	41 c1 e0 03          	shl    r8d,0x3
2538:	48 83 c0 01          	add    rax,0x1
253c:	41 c0 fa 02          	sar    r10b,0x2
2540:	45 09 d0             	or     r8d,r10d
2543:	44 88 40 ff          	mov    BYTE PTR [rax-0x1],r8b
2547:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
254b:	44 0f b6 47 02       	movzx  r8d,BYTE PTR [rdi+0x2]
2550:	41 80 f8 3d          	cmp    r8b,0x3d
2554:	0f 84 16 01 00 00    	je     2670 <decode_8+0x180>
255a:	46 0f b6 04 06       	movzx  r8d,BYTE PTR [rsi+r8*1]
255f:	45 84 c0             	test   r8b,r8b
2562:	0f 88 0e 01 00 00    	js     2676 <decode_8+0x186>
2568:	44 0f b6 57 03       	movzx  r10d,BYTE PTR [rdi+0x3]
256d:	46 0f b6 14 16       	movzx  r10d,BYTE PTR [rsi+r10*1]
2572:	45 84 d2             	test   r10b,r10b
2575:	0f 88 fb 00 00 00    	js     2676 <decode_8+0x186>
257b:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
257f:	74 20                	je     25a1 <decode_8+0xb1>
2581:	45 01 c0             	add    r8d,r8d
2584:	41 c1 e1 06          	shl    r9d,0x6
2588:	48 83 c0 01          	add    rax,0x1
258c:	45 09 c1             	or     r9d,r8d
258f:	45 89 d0             	mov    r8d,r10d
2592:	41 c0 f8 04          	sar    r8b,0x4
2596:	45 09 c1             	or     r9d,r8d
2599:	44 88 48 ff          	mov    BYTE PTR [rax-0x1],r9b
259d:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
25a1:	44 0f b6 47 04       	movzx  r8d,BYTE PTR [rdi+0x4]
25a6:	41 80 f8 3d          	cmp    r8b,0x3d
25aa:	0f 84 d6 00 00 00    	je     2686 <decode_8+0x196>
25b0:	46 0f b6 04 06       	movzx  r8d,BYTE PTR [rsi+r8*1]
25b5:	45 84 c0             	test   r8b,r8b
25b8:	0f 88 b8 00 00 00    	js     2676 <decode_8+0x186>
25be:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
25c2:	74 19                	je     25dd <decode_8+0xed>
25c4:	45 89 c1             	mov    r9d,r8d
25c7:	41 c1 e2 04          	shl    r10d,0x4
25cb:	48 83 c0 01          	add    rax,0x1
25cf:	41 d0 f9             	sar    r9b,1
25d2:	45 09 ca             	or     r10d,r9d
25d5:	44 88 50 ff          	mov    BYTE PTR [rax-0x1],r10b
25d9:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
25dd:	44 0f b6 4f 05       	movzx  r9d,BYTE PTR [rdi+0x5]
25e2:	41 80 f9 3d          	cmp    r9b,0x3d
25e6:	0f 84 a0 00 00 00    	je     268c <decode_8+0x19c>
25ec:	46 0f b6 0c 0e       	movzx  r9d,BYTE PTR [rsi+r9*1]
25f1:	45 84 c9             	test   r9b,r9b
25f4:	0f 88 7c 00 00 00    	js     2676 <decode_8+0x186>
25fa:	44 0f b6 57 06       	movzx  r10d,BYTE PTR [rdi+0x6]
25ff:	46 0f b6 14 16       	movzx  r10d,BYTE PTR [rsi+r10*1]
2604:	45 84 d2             	test   r10b,r10b
2607:	78 6d                	js     2676 <decode_8+0x186>
2609:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
260d:	74 21                	je     2630 <decode_8+0x140>
260f:	41 c1 e1 02          	shl    r9d,0x2
2613:	41 c1 e0 07          	shl    r8d,0x7
2617:	48 83 c0 01          	add    rax,0x1
261b:	45 09 c8             	or     r8d,r9d
261e:	45 89 d1             	mov    r9d,r10d
2621:	41 c0 f9 03          	sar    r9b,0x3
2625:	45 09 c8             	or     r8d,r9d
2628:	44 88 40 ff          	mov    BYTE PTR [rax-0x1],r8b
262c:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
2630:	0f b6 7f 07          	movzx  edi,BYTE PTR [rdi+0x7]
2634:	40 80 ff 3d          	cmp    dil,0x3d
2638:	74 26                	je     2660 <decode_8+0x170>
263a:	0f b6 34 3e          	movzx  esi,BYTE PTR [rsi+rdi*1]
263e:	40 84 f6             	test   sil,sil
2641:	78 33                	js     2676 <decode_8+0x186>
2643:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
2647:	74 17                	je     2660 <decode_8+0x170>
2649:	41 c1 e2 05          	shl    r10d,0x5
264d:	48 83 c0 01          	add    rax,0x1
2651:	41 09 f2             	or     r10d,esi
2654:	44 88 50 ff          	mov    BYTE PTR [rax-0x1],r10b
2658:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
265c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2660:	48 89 02             	mov    QWORD PTR [rdx],rax
2663:	b8 01 00 00 00       	mov    eax,0x1
2668:	f3 c3                	repz ret
266a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2670:	80 7f 03 3d          	cmp    BYTE PTR [rdi+0x3],0x3d
2674:	74 0a                	je     2680 <decode_8+0x190>
2676:	48 89 02             	mov    QWORD PTR [rdx],rax
2679:	31 c0                	xor    eax,eax
267b:	c3                   	ret
267c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2680:	80 7f 04 3d          	cmp    BYTE PTR [rdi+0x4],0x3d
2684:	75 f0                	jne    2676 <decode_8+0x186>
2686:	80 7f 05 3d          	cmp    BYTE PTR [rdi+0x5],0x3d
268a:	75 ea                	jne    2676 <decode_8+0x186>
268c:	80 7f 06 3d          	cmp    BYTE PTR [rdi+0x6],0x3d
2690:	75 e4                	jne    2676 <decode_8+0x186>
2692:	80 7f 07 3d          	cmp    BYTE PTR [rdi+0x7],0x3d
2696:	75 de                	jne    2676 <decode_8+0x186>
2698:	eb c6                	jmp    2660 <decode_8+0x170>
269a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000026a0 <base32_encode>:
26a0:	4c 8d 05 99 3b 00 00 	lea    r8,[rip+0x3b99]        # 6240 <b32str.3066>
26a7:	e9 1f 01 00 00       	jmp    27cb <base32_encode+0x12b>
26ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
26b0:	44 0f b6 4f 01       	movzx  r9d,BYTE PTR [rdi+0x1]
26b5:	45 89 ca             	mov    r10d,r9d
26b8:	41 c0 ea 06          	shr    r10b,0x6
26bc:	44 01 d0             	add    eax,r10d
26bf:	83 e0 1f             	and    eax,0x1f
26c2:	48 83 f9 02          	cmp    rcx,0x2
26c6:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
26cb:	88 42 01             	mov    BYTE PTR [rdx+0x1],al
26ce:	0f 84 a1 01 00 00    	je     2875 <base32_encode+0x1d5>
26d4:	44 89 c8             	mov    eax,r9d
26d7:	d0 e8                	shr    al,1
26d9:	83 e0 1f             	and    eax,0x1f
26dc:	48 83 f9 03          	cmp    rcx,0x3
26e0:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
26e5:	88 42 02             	mov    BYTE PTR [rdx+0x2],al
26e8:	0f 84 87 01 00 00    	je     2875 <base32_encode+0x1d5>
26ee:	41 c1 e1 04          	shl    r9d,0x4
26f2:	48 83 fe 02          	cmp    rsi,0x2
26f6:	0f 84 64 01 00 00    	je     2860 <base32_encode+0x1c0>
26fc:	0f b6 47 02          	movzx  eax,BYTE PTR [rdi+0x2]
2700:	41 89 c2             	mov    r10d,eax
2703:	41 c0 ea 04          	shr    r10b,0x4
2707:	45 01 d1             	add    r9d,r10d
270a:	41 83 e1 1f          	and    r9d,0x1f
270e:	48 83 f9 04          	cmp    rcx,0x4
2712:	47 0f b6 0c 08       	movzx  r9d,BYTE PTR [r8+r9*1]
2717:	44 88 4a 03          	mov    BYTE PTR [rdx+0x3],r9b
271b:	0f 84 54 01 00 00    	je     2875 <base32_encode+0x1d5>
2721:	48 83 fe 03          	cmp    rsi,0x3
2725:	44 8d 0c 00          	lea    r9d,[rax+rax*1]
2729:	0f 84 51 01 00 00    	je     2880 <base32_encode+0x1e0>
272f:	0f b6 47 03          	movzx  eax,BYTE PTR [rdi+0x3]
2733:	41 89 c2             	mov    r10d,eax
2736:	41 c0 ea 07          	shr    r10b,0x7
273a:	45 01 d1             	add    r9d,r10d
273d:	41 83 e1 1f          	and    r9d,0x1f
2741:	48 83 f9 05          	cmp    rcx,0x5
2745:	47 0f b6 0c 08       	movzx  r9d,BYTE PTR [r8+r9*1]
274a:	44 88 4a 04          	mov    BYTE PTR [rdx+0x4],r9b
274e:	0f 84 21 01 00 00    	je     2875 <base32_encode+0x1d5>
2754:	41 89 c1             	mov    r9d,eax
2757:	41 c0 e9 02          	shr    r9b,0x2
275b:	41 83 e1 1f          	and    r9d,0x1f
275f:	48 83 f9 06          	cmp    rcx,0x6
2763:	47 0f b6 0c 08       	movzx  r9d,BYTE PTR [r8+r9*1]
2768:	44 88 4a 05          	mov    BYTE PTR [rdx+0x5],r9b
276c:	0f 84 03 01 00 00    	je     2875 <base32_encode+0x1d5>
2772:	c1 e0 03             	shl    eax,0x3
2775:	48 83 fe 04          	cmp    rsi,0x4
2779:	0f 84 19 01 00 00    	je     2898 <base32_encode+0x1f8>
277f:	44 0f b6 4f 04       	movzx  r9d,BYTE PTR [rdi+0x4]
2784:	45 89 ca             	mov    r10d,r9d
2787:	41 c0 ea 05          	shr    r10b,0x5
278b:	44 01 d0             	add    eax,r10d
278e:	83 e0 1f             	and    eax,0x1f
2791:	48 83 f9 07          	cmp    rcx,0x7
2795:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
279a:	88 42 06             	mov    BYTE PTR [rdx+0x6],al
279d:	0f 84 d2 00 00 00    	je     2875 <base32_encode+0x1d5>
27a3:	41 83 e1 1f          	and    r9d,0x1f
27a7:	48 83 f9 08          	cmp    rcx,0x8
27ab:	43 0f b6 04 08       	movzx  eax,BYTE PTR [r8+r9*1]
27b0:	88 42 07             	mov    BYTE PTR [rdx+0x7],al
27b3:	0f 84 bc 00 00 00    	je     2875 <base32_encode+0x1d5>
27b9:	48 83 ee 05          	sub    rsi,0x5
27bd:	74 04                	je     27c3 <base32_encode+0x123>
27bf:	48 83 c7 05          	add    rdi,0x5
27c3:	48 83 c2 08          	add    rdx,0x8
27c7:	48 83 e9 08          	sub    rcx,0x8
27cb:	48 85 f6             	test   rsi,rsi
27ce:	0f 84 dc 00 00 00    	je     28b0 <base32_encode+0x210>
27d4:	48 85 c9             	test   rcx,rcx
27d7:	0f 84 d3 00 00 00    	je     28b0 <base32_encode+0x210>
27dd:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
27e0:	41 89 c1             	mov    r9d,eax
27e3:	41 c0 e9 03          	shr    r9b,0x3
27e7:	41 83 e1 1f          	and    r9d,0x1f
27eb:	48 83 f9 01          	cmp    rcx,0x1
27ef:	47 0f b6 0c 08       	movzx  r9d,BYTE PTR [r8+r9*1]
27f4:	44 88 0a             	mov    BYTE PTR [rdx],r9b
27f7:	74 7c                	je     2875 <base32_encode+0x1d5>
27f9:	c1 e0 02             	shl    eax,0x2
27fc:	48 83 fe 01          	cmp    rsi,0x1
2800:	0f 85 aa fe ff ff    	jne    26b0 <base32_encode+0x10>
2806:	83 e0 1c             	and    eax,0x1c
2809:	48 83 f9 02          	cmp    rcx,0x2
280d:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
2812:	88 42 01             	mov    BYTE PTR [rdx+0x1],al
2815:	74 5e                	je     2875 <base32_encode+0x1d5>
2817:	48 83 f9 03          	cmp    rcx,0x3
281b:	c6 42 02 3d          	mov    BYTE PTR [rdx+0x2],0x3d
281f:	74 54                	je     2875 <base32_encode+0x1d5>
2821:	48 83 f9 04          	cmp    rcx,0x4
2825:	c6 42 03 3d          	mov    BYTE PTR [rdx+0x3],0x3d
2829:	74 4a                	je     2875 <base32_encode+0x1d5>
282b:	48 83 f9 05          	cmp    rcx,0x5
282f:	c6 42 04 3d          	mov    BYTE PTR [rdx+0x4],0x3d
2833:	74 40                	je     2875 <base32_encode+0x1d5>
2835:	48 83 f9 06          	cmp    rcx,0x6
2839:	c6 42 05 3d          	mov    BYTE PTR [rdx+0x5],0x3d
283d:	74 36                	je     2875 <base32_encode+0x1d5>
283f:	48 83 f9 07          	cmp    rcx,0x7
2843:	c6 42 06 3d          	mov    BYTE PTR [rdx+0x6],0x3d
2847:	74 2c                	je     2875 <base32_encode+0x1d5>
2849:	48 83 f9 08          	cmp    rcx,0x8
284d:	c6 42 07 3d          	mov    BYTE PTR [rdx+0x7],0x3d
2851:	74 22                	je     2875 <base32_encode+0x1d5>
2853:	31 f6                	xor    esi,esi
2855:	e9 69 ff ff ff       	jmp    27c3 <base32_encode+0x123>
285a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2860:	41 83 e1 1f          	and    r9d,0x1f
2864:	48 83 f9 04          	cmp    rcx,0x4
2868:	4d 63 c9             	movsxd r9,r9d
286b:	43 0f b6 04 08       	movzx  eax,BYTE PTR [r8+r9*1]
2870:	88 42 03             	mov    BYTE PTR [rdx+0x3],al
2873:	75 b6                	jne    282b <base32_encode+0x18b>
2875:	c3                   	ret
2876:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
287d:	00 00 00
2880:	41 83 e1 1e          	and    r9d,0x1e
2884:	48 83 f9 05          	cmp    rcx,0x5
2888:	43 0f b6 04 08       	movzx  eax,BYTE PTR [r8+r9*1]
288d:	88 42 04             	mov    BYTE PTR [rdx+0x4],al
2890:	75 a3                	jne    2835 <base32_encode+0x195>
2892:	f3 c3                	repz ret
2894:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2898:	83 e0 18             	and    eax,0x18
289b:	48 83 f9 07          	cmp    rcx,0x7
289f:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
28a4:	88 42 06             	mov    BYTE PTR [rdx+0x6],al
28a7:	74 cc                	je     2875 <base32_encode+0x1d5>
28a9:	eb 9e                	jmp    2849 <base32_encode+0x1a9>
28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
28b0:	48 85 c9             	test   rcx,rcx
28b3:	74 c0                	je     2875 <base32_encode+0x1d5>
28b5:	c6 02 00             	mov    BYTE PTR [rdx],0x0
28b8:	c3                   	ret
28b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000028c0 <base32_encode_alloc>:
28c0:	41 56                	push   r14
28c2:	41 55                	push   r13
28c4:	49 89 d5             	mov    r13,rdx
28c7:	48 8d 56 04          	lea    rdx,[rsi+0x4]
28cb:	41 54                	push   r12
28cd:	55                   	push   rbp
28ce:	53                   	push   rbx
28cf:	48 bb cd cc cc cc cc 	movabs rbx,0xcccccccccccccccd
28d6:	cc cc cc
28d9:	48 89 d0             	mov    rax,rdx
28dc:	48 f7 e3             	mul    rbx
28df:	48 c1 ea 02          	shr    rdx,0x2
28e3:	48 8d 1c d5 00 00 00 	lea    rbx,[rdx*8+0x0]
28ea:	00
28eb:	48 8d 6b 01          	lea    rbp,[rbx+0x1]
28ef:	48 39 ee             	cmp    rsi,rbp
28f2:	76 1c                	jbe    2910 <base32_encode_alloc+0x50>
28f4:	49 c7 45 00 00 00 00 	mov    QWORD PTR [r13+0x0],0x0
28fb:	00
28fc:	31 ed                	xor    ebp,ebp
28fe:	5b                   	pop    rbx
28ff:	48 89 e8             	mov    rax,rbp
2902:	5d                   	pop    rbp
2903:	41 5c                	pop    r12
2905:	41 5d                	pop    r13
2907:	41 5e                	pop    r14
2909:	c3                   	ret
290a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2910:	49 89 fe             	mov    r14,rdi
2913:	48 89 ef             	mov    rdi,rbp
2916:	49 89 f4             	mov    r12,rsi
2919:	e8 a2 ed ff ff       	call   16c0 <malloc@plt>
291e:	48 85 c0             	test   rax,rax
2921:	49 89 45 00          	mov    QWORD PTR [r13+0x0],rax
2925:	74 d7                	je     28fe <base32_encode_alloc+0x3e>
2927:	48 89 e9             	mov    rcx,rbp
292a:	48 89 c2             	mov    rdx,rax
292d:	48 89 dd             	mov    rbp,rbx
2930:	4c 89 e6             	mov    rsi,r12
2933:	4c 89 f7             	mov    rdi,r14
2936:	e8 65 fd ff ff       	call   26a0 <base32_encode>
293b:	5b                   	pop    rbx
293c:	48 89 e8             	mov    rax,rbp
293f:	5d                   	pop    rbp
2940:	41 5c                	pop    r12
2942:	41 5d                	pop    r13
2944:	41 5e                	pop    r14
2946:	c3                   	ret
2947:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
294e:	00 00

0000000000002950 <isbase32>:
2950:	48 8d 05 09 39 00 00 	lea    rax,[rip+0x3909]        # 6260 <b32>
2957:	40 0f b6 ff          	movzx  edi,dil
295b:	0f b6 04 38          	movzx  eax,BYTE PTR [rax+rdi*1]
295f:	f7 d0                	not    eax
2961:	c0 e8 07             	shr    al,0x7
2964:	c3                   	ret
2965:	90                   	nop
2966:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
296d:	00 00 00

0000000000002970 <base32_decode_ctx_init>:
2970:	c7 07 00 00 00 00    	mov    DWORD PTR [rdi],0x0
2976:	c3                   	ret
2977:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
297e:	00 00

0000000000002980 <base32_decode_ctx>:
2980:	41 57                	push   r15
2982:	41 56                	push   r14
2984:	49 89 d3             	mov    r11,rdx
2987:	41 55                	push   r13
2989:	41 54                	push   r12
298b:	49 89 fe             	mov    r14,rdi
298e:	55                   	push   rbp
298f:	53                   	push   rbx
2990:	49 89 f4             	mov    r12,rsi
2993:	48 83 ec 38          	sub    rsp,0x38
2997:	4d 8b 38             	mov    r15,QWORD PTR [r8]
299a:	64 48 8b 1c 25 28 00 	mov    rbx,QWORD PTR fs:0x28
29a1:	00 00
29a3:	48 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],rbx
29a8:	31 db                	xor    ebx,ebx
29aa:	48 85 ff             	test   rdi,rdi
29ad:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
29b2:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
29b7:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
29bc:	0f 95 44 24 07       	setne  BYTE PTR [rsp+0x7]
29c1:	0f 84 29 02 00 00    	je     2bf0 <base32_decode_ctx+0x270>
29c7:	48 85 d2             	test   rdx,rdx
29ca:	8b 17                	mov    edx,DWORD PTR [rdi]
29cc:	0f 95 44 24 06       	setne  BYTE PTR [rsp+0x6]
29d1:	0f b6 44 24 06       	movzx  eax,BYTE PTR [rsp+0x6]
29d6:	85 d2                	test   edx,edx
29d8:	41 0f 94 c5          	sete   r13b
29dc:	41 21 c5             	and    r13d,eax
29df:	49 8d 46 04          	lea    rax,[r14+0x4]
29e3:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
29e8:	48 8d 5c 24 18       	lea    rbx,[rsp+0x18]
29ed:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
29f2:	45 84 ed             	test   r13b,r13b
29f5:	4c 89 fa             	mov    rdx,r15
29f8:	0f 85 cf 00 00 00    	jne    2acd <base32_decode_ctx+0x14d>
29fe:	4d 85 db             	test   r11,r11
2a01:	0f 94 c0             	sete   al
2a04:	22 44 24 06          	and    al,BYTE PTR [rsp+0x6]
2a08:	0f 85 82 00 00 00    	jne    2a90 <base32_decode_ctx+0x110>
2a0e:	4d 85 db             	test   r11,r11
2a11:	0f 84 d9 00 00 00    	je     2af0 <base32_decode_ctx+0x170>
2a17:	41 80 3c 24 0a       	cmp    BYTE PTR [r12],0xa
2a1c:	0f 84 9e 01 00 00    	je     2bc0 <base32_decode_ctx+0x240>
2a22:	4c 29 fa             	sub    rdx,r15
2a25:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
2a2a:	4d 85 f6             	test   r14,r14
2a2d:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
2a32:	4f 8d 3c 1c          	lea    r15,[r12+r11*1]
2a36:	0f 85 cd 00 00 00    	jne    2b09 <base32_decode_ctx+0x189>
2a3c:	4c 89 e7             	mov    rdi,r12
2a3f:	49 83 fb 07          	cmp    r11,0x7
2a43:	77 12                	ja     2a57 <base32_decode_ctx+0xd7>
2a45:	80 7c 24 07 00       	cmp    BYTE PTR [rsp+0x7],0x0
2a4a:	74 0b                	je     2a57 <base32_decode_ctx+0xd7>
2a4c:	80 7c 24 06 00       	cmp    BYTE PTR [rsp+0x6],0x0
2a51:	0f 85 00 01 00 00    	jne    2b57 <base32_decode_ctx+0x1d7>
2a57:	48 89 e9             	mov    rcx,rbp
2a5a:	48 89 da             	mov    rdx,rbx
2a5d:	4c 89 de             	mov    rsi,r11
2a60:	e8 8b fa ff ff       	call   24f0 <decode_8>
2a65:	84 c0                	test   al,al
2a67:	0f 84 b2 01 00 00    	je     2c1f <base32_decode_ctx+0x29f>
2a6d:	4d 89 fb             	mov    r11,r15
2a70:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
2a75:	4d 29 e3             	sub    r11,r12
2a78:	45 84 ed             	test   r13b,r13b
2a7b:	4c 89 fa             	mov    rdx,r15
2a7e:	75 4d                	jne    2acd <base32_decode_ctx+0x14d>
2a80:	4d 85 db             	test   r11,r11
2a83:	0f 94 c0             	sete   al
2a86:	22 44 24 06          	and    al,BYTE PTR [rsp+0x6]
2a8a:	74 82                	je     2a0e <base32_decode_ctx+0x8e>
2a8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2a90:	48 8b 5c 24 10       	mov    rbx,QWORD PTR [rsp+0x10]
2a95:	48 29 13             	sub    QWORD PTR [rbx],rdx
2a98:	48 8b 5c 24 28       	mov    rbx,QWORD PTR [rsp+0x28]
2a9d:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
2aa4:	00 00
2aa6:	0f 85 7d 01 00 00    	jne    2c29 <base32_decode_ctx+0x2a9>
2aac:	48 83 c4 38          	add    rsp,0x38
2ab0:	5b                   	pop    rbx
2ab1:	5d                   	pop    rbp
2ab2:	41 5c                	pop    r12
2ab4:	41 5d                	pop    r13
2ab6:	41 5e                	pop    r14
2ab8:	41 5f                	pop    r15
2aba:	c3                   	ret
2abb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2ac0:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
2ac5:	49 83 c4 08          	add    r12,0x8
2ac9:	49 83 eb 08          	sub    r11,0x8
2acd:	48 89 e9             	mov    rcx,rbp
2ad0:	48 89 da             	mov    rdx,rbx
2ad3:	4c 89 de             	mov    rsi,r11
2ad6:	4c 89 e7             	mov    rdi,r12
2ad9:	e8 12 fa ff ff       	call   24f0 <decode_8>
2ade:	84 c0                	test   al,al
2ae0:	75 de                	jne    2ac0 <base32_decode_ctx+0x140>
2ae2:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
2ae7:	e9 12 ff ff ff       	jmp    29fe <base32_decode_ctx+0x7e>
2aec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2af0:	4c 29 fa             	sub    rdx,r15
2af3:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
2af8:	4d 85 f6             	test   r14,r14
2afb:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
2b00:	0f 84 fa 00 00 00    	je     2c00 <base32_decode_ctx+0x280>
2b06:	4d 89 e7             	mov    r15,r12
2b09:	41 8b 06             	mov    eax,DWORD PTR [r14]
2b0c:	83 f8 08             	cmp    eax,0x8
2b0f:	74 5f                	je     2b70 <base32_decode_ctx+0x1f0>
2b11:	85 c0                	test   eax,eax
2b13:	74 62                	je     2b77 <base32_decode_ctx+0x1f7>
2b15:	4d 39 fc             	cmp    r12,r15
2b18:	73 2c                	jae    2b46 <base32_decode_ctx+0x1c6>
2b1a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2b20:	49 83 c4 01          	add    r12,0x1
2b24:	41 0f b6 54 24 ff    	movzx  edx,BYTE PTR [r12-0x1]
2b2a:	80 fa 0a             	cmp    dl,0xa
2b2d:	74 12                	je     2b41 <base32_decode_ctx+0x1c1>
2b2f:	8d 48 01             	lea    ecx,[rax+0x1]
2b32:	83 f9 08             	cmp    ecx,0x8
2b35:	41 89 0e             	mov    DWORD PTR [r14],ecx
2b38:	41 88 54 06 04       	mov    BYTE PTR [r14+rax*1+0x4],dl
2b3d:	74 61                	je     2ba0 <base32_decode_ctx+0x220>
2b3f:	89 c8                	mov    eax,ecx
2b41:	4d 39 fc             	cmp    r12,r15
2b44:	75 da                	jne    2b20 <base32_decode_ctx+0x1a0>
2b46:	41 89 c3             	mov    r11d,eax
2b49:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
2b4e:	4d 85 db             	test   r11,r11
2b51:	0f 85 e8 fe ff ff    	jne    2a3f <base32_decode_ctx+0xbf>
2b57:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
2b5c:	b8 01 00 00 00       	mov    eax,0x1
2b61:	e9 2a ff ff ff       	jmp    2a90 <base32_decode_ctx+0x110>
2b66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2b6d:	00 00 00
2b70:	41 c7 06 00 00 00 00 	mov    DWORD PTR [r14],0x0
2b77:	49 83 fb 07          	cmp    r11,0x7
2b7b:	7e 17                	jle    2b94 <base32_decode_ctx+0x214>
2b7d:	ba 08 00 00 00       	mov    edx,0x8
2b82:	be 0a 00 00 00       	mov    esi,0xa
2b87:	4c 89 e7             	mov    rdi,r12
2b8a:	e8 c1 ea ff ff       	call   1650 <memchr@plt>
2b8f:	48 85 c0             	test   rax,rax
2b92:	74 79                	je     2c0d <base32_decode_ctx+0x28d>
2b94:	41 8b 06             	mov    eax,DWORD PTR [r14]
2b97:	e9 79 ff ff ff       	jmp    2b15 <base32_decode_ctx+0x195>
2b9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2ba0:	b8 08 00 00 00       	mov    eax,0x8
2ba5:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
2baa:	41 89 c3             	mov    r11d,eax
2bad:	4d 85 db             	test   r11,r11
2bb0:	0f 85 89 fe ff ff    	jne    2a3f <base32_decode_ctx+0xbf>
2bb6:	eb 9f                	jmp    2b57 <base32_decode_ctx+0x1d7>
2bb8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2bbf:	00
2bc0:	4d 85 f6             	test   r14,r14
2bc3:	74 13                	je     2bd8 <base32_decode_ctx+0x258>
2bc5:	49 83 c4 01          	add    r12,0x1
2bc9:	49 83 eb 01          	sub    r11,0x1
2bcd:	49 89 d7             	mov    r15,rdx
2bd0:	e9 1d fe ff ff       	jmp    29f2 <base32_decode_ctx+0x72>
2bd5:	0f 1f 00             	nop    DWORD PTR [rax]
2bd8:	4c 29 fa             	sub    rdx,r15
2bdb:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
2be0:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
2be5:	4f 8d 3c 1c          	lea    r15,[r12+r11*1]
2be9:	e9 4e fe ff ff       	jmp    2a3c <base32_decode_ctx+0xbc>
2bee:	66 90                	xchg   ax,ax
2bf0:	41 bd 01 00 00 00    	mov    r13d,0x1
2bf6:	c6 44 24 06 01       	mov    BYTE PTR [rsp+0x6],0x1
2bfb:	e9 df fd ff ff       	jmp    29df <base32_decode_ctx+0x5f>
2c00:	4c 89 fa             	mov    rdx,r15
2c03:	b8 01 00 00 00       	mov    eax,0x1
2c08:	e9 83 fe ff ff       	jmp    2a90 <base32_decode_ctx+0x110>
2c0d:	4c 89 e7             	mov    rdi,r12
2c10:	41 bb 08 00 00 00    	mov    r11d,0x8
2c16:	49 83 c4 08          	add    r12,0x8
2c1a:	e9 38 fe ff ff       	jmp    2a57 <base32_decode_ctx+0xd7>
2c1f:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
2c24:	e9 67 fe ff ff       	jmp    2a90 <base32_decode_ctx+0x110>
2c29:	e8 72 e9 ff ff       	call   15a0 <__stack_chk_fail@plt>
2c2e:	66 90                	xchg   ax,ax

0000000000002c30 <base32_decode_alloc_ctx>:
2c30:	41 56                	push   r14
2c32:	41 55                	push   r13
2c34:	49 89 d6             	mov    r14,rdx
2c37:	41 54                	push   r12
2c39:	55                   	push   rbp
2c3a:	49 89 fc             	mov    r12,rdi
2c3d:	53                   	push   rbx
2c3e:	49 89 f5             	mov    r13,rsi
2c41:	48 89 cb             	mov    rbx,rcx
2c44:	4c 89 c5             	mov    rbp,r8
2c47:	48 83 ec 20          	sub    rsp,0x20
2c4b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2c52:	00 00
2c54:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2c59:	31 c0                	xor    eax,eax
2c5b:	48 89 d0             	mov    rax,rdx
2c5e:	48 c1 e8 03          	shr    rax,0x3
2c62:	48 8d 7c 80 05       	lea    rdi,[rax+rax*4+0x5]
2c67:	48 89 7c 24 10       	mov    QWORD PTR [rsp+0x10],rdi
2c6c:	e8 4f ea ff ff       	call   16c0 <malloc@plt>
2c71:	48 85 c0             	test   rax,rax
2c74:	48 89 03             	mov    QWORD PTR [rbx],rax
2c77:	74 2f                	je     2ca8 <base32_decode_alloc_ctx+0x78>
2c79:	4c 8d 44 24 10       	lea    r8,[rsp+0x10]
2c7e:	48 89 c1             	mov    rcx,rax
2c81:	4c 89 f2             	mov    rdx,r14
2c84:	4c 89 ee             	mov    rsi,r13
2c87:	4c 89 e7             	mov    rdi,r12
2c8a:	e8 f1 fc ff ff       	call   2980 <base32_decode_ctx>
2c8f:	84 c0                	test   al,al
2c91:	74 3d                	je     2cd0 <base32_decode_alloc_ctx+0xa0>
2c93:	48 85 ed             	test   rbp,rbp
2c96:	74 10                	je     2ca8 <base32_decode_alloc_ctx+0x78>
2c98:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
2c9d:	48 89 55 00          	mov    QWORD PTR [rbp+0x0],rdx
2ca1:	eb 0a                	jmp    2cad <base32_decode_alloc_ctx+0x7d>
2ca3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2ca8:	b8 01 00 00 00       	mov    eax,0x1
2cad:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
2cb2:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
2cb9:	00 00
2cbb:	75 2d                	jne    2cea <base32_decode_alloc_ctx+0xba>
2cbd:	48 83 c4 20          	add    rsp,0x20
2cc1:	5b                   	pop    rbx
2cc2:	5d                   	pop    rbp
2cc3:	41 5c                	pop    r12
2cc5:	41 5d                	pop    r13
2cc7:	41 5e                	pop    r14
2cc9:	c3                   	ret
2cca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2cd0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
2cd3:	88 44 24 0f          	mov    BYTE PTR [rsp+0xf],al
2cd7:	e8 f4 e7 ff ff       	call   14d0 <free@plt>
2cdc:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
2ce3:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
2ce8:	eb c3                	jmp    2cad <base32_decode_alloc_ctx+0x7d>
2cea:	e8 b1 e8 ff ff       	call   15a0 <__stack_chk_fail@plt>
2cef:	90                   	nop

0000000000002cf0 <close_stdout_set_file_name>:
2cf0:	48 89 3d e1 63 20 00 	mov    QWORD PTR [rip+0x2063e1],rdi        # 2090d8 <file_name>
2cf7:	c3                   	ret
2cf8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2cff:	00

0000000000002d00 <close_stdout_set_ignore_EPIPE>:
2d00:	40 88 3d c9 63 20 00 	mov    BYTE PTR [rip+0x2063c9],dil        # 2090d0 <ignore_EPIPE>
2d07:	c3                   	ret
2d08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2d0f:	00

0000000000002d10 <close_stdout>:
2d10:	55                   	push   rbp
2d11:	53                   	push   rbx
2d12:	48 83 ec 08          	sub    rsp,0x8
2d16:	48 8b 3d 6b 63 20 00 	mov    rdi,QWORD PTR [rip+0x20636b]        # 209088 <stdout@@GLIBC_2.2.5>
2d1d:	e8 be 2d 00 00       	call   5ae0 <close_stream>
2d22:	85 c0                	test   eax,eax
2d24:	74 16                	je     2d3c <close_stdout+0x2c>
2d26:	e8 c5 e7 ff ff       	call   14f0 <__errno_location@plt>
2d2b:	80 3d 9e 63 20 00 00 	cmp    BYTE PTR [rip+0x20639e],0x0        # 2090d0 <ignore_EPIPE>
2d32:	48 89 c3             	mov    rbx,rax
2d35:	74 1c                	je     2d53 <close_stdout+0x43>
2d37:	83 38 20             	cmp    DWORD PTR [rax],0x20
2d3a:	75 17                	jne    2d53 <close_stdout+0x43>
2d3c:	48 8b 3d 7d 63 20 00 	mov    rdi,QWORD PTR [rip+0x20637d]        # 2090c0 <stderr@@GLIBC_2.2.5>
2d43:	e8 98 2d 00 00       	call   5ae0 <close_stream>
2d48:	85 c0                	test   eax,eax
2d4a:	75 46                	jne    2d92 <close_stdout+0x82>
2d4c:	48 83 c4 08          	add    rsp,0x8
2d50:	5b                   	pop    rbx
2d51:	5d                   	pop    rbp
2d52:	c3                   	ret
2d53:	48 8d 35 70 30 00 00 	lea    rsi,[rip+0x3070]        # 5dca <_IO_stdin_used+0x12a>
2d5a:	31 ff                	xor    edi,edi
2d5c:	ba 05 00 00 00       	mov    edx,0x5
2d61:	e8 0a e8 ff ff       	call   1570 <dcgettext@plt>
2d66:	48 8b 3d 6b 63 20 00 	mov    rdi,QWORD PTR [rip+0x20636b]        # 2090d8 <file_name>
2d6d:	48 89 c5             	mov    rbp,rax
2d70:	48 85 ff             	test   rdi,rdi
2d73:	74 28                	je     2d9d <close_stdout+0x8d>
2d75:	e8 96 1b 00 00       	call   4910 <quotearg_colon>
2d7a:	8b 33                	mov    esi,DWORD PTR [rbx]
2d7c:	48 8d 15 dd 35 00 00 	lea    rdx,[rip+0x35dd]        # 6360 <b32+0x100>
2d83:	48 89 c1             	mov    rcx,rax
2d86:	49 89 e8             	mov    r8,rbp
2d89:	31 ff                	xor    edi,edi
2d8b:	31 c0                	xor    eax,eax
2d8d:	e8 be e9 ff ff       	call   1750 <error@plt>
2d92:	8b 3d 80 62 20 00    	mov    edi,DWORD PTR [rip+0x206280]        # 209018 <exit_failure>
2d98:	e8 73 e7 ff ff       	call   1510 <_exit@plt>
2d9d:	8b 33                	mov    esi,DWORD PTR [rbx]
2d9f:	48 8d 15 be 35 00 00 	lea    rdx,[rip+0x35be]        # 6364 <b32+0x104>
2da6:	48 89 c1             	mov    rcx,rax
2da9:	31 ff                	xor    edi,edi
2dab:	31 c0                	xor    eax,eax
2dad:	e8 9e e9 ff ff       	call   1750 <error@plt>
2db2:	eb de                	jmp    2d92 <close_stdout+0x82>
2db4:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2dbb:	00 00 00
2dbe:	66 90                	xchg   ax,ax

0000000000002dc0 <fdadvise>:
2dc0:	e9 7b e8 ff ff       	jmp    1640 <posix_fadvise@plt>
2dc5:	90                   	nop
2dc6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2dcd:	00 00 00

0000000000002dd0 <fadvise>:
2dd0:	48 85 ff             	test   rdi,rdi
2dd3:	74 1b                	je     2df0 <fadvise+0x20>
2dd5:	53                   	push   rbx
2dd6:	89 f3                	mov    ebx,esi
2dd8:	e8 d3 e8 ff ff       	call   16b0 <fileno@plt>
2ddd:	89 d9                	mov    ecx,ebx
2ddf:	31 d2                	xor    edx,edx
2de1:	31 f6                	xor    esi,esi
2de3:	5b                   	pop    rbx
2de4:	89 c7                	mov    edi,eax
2de6:	e9 55 e8 ff ff       	jmp    1640 <posix_fadvise@plt>
2deb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2df0:	f3 c3                	repz ret
2df2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2df9:	00 00 00
2dfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002e00 <set_program_name>:
2e00:	48 85 ff             	test   rdi,rdi
2e03:	53                   	push   rbx
2e04:	74 77                	je     2e7d <set_program_name+0x7d>
2e06:	be 2f 00 00 00       	mov    esi,0x2f
2e0b:	48 89 fb             	mov    rbx,rdi
2e0e:	e8 dd e7 ff ff       	call   15f0 <strrchr@plt>
2e13:	48 85 c0             	test   rax,rax
2e16:	74 55                	je     2e6d <set_program_name+0x6d>
2e18:	4c 8d 40 01          	lea    r8,[rax+0x1]
2e1c:	4c 89 c2             	mov    rdx,r8
2e1f:	48 29 da             	sub    rdx,rbx
2e22:	48 83 fa 06          	cmp    rdx,0x6
2e26:	7e 45                	jle    2e6d <set_program_name+0x6d>
2e28:	48 8d 70 fa          	lea    rsi,[rax-0x6]
2e2c:	48 8d 3d 6d 35 00 00 	lea    rdi,[rip+0x356d]        # 63a0 <b32+0x140>
2e33:	b9 07 00 00 00       	mov    ecx,0x7
2e38:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
2e3a:	0f 97 c2             	seta   dl
2e3d:	80 da 00             	sbb    dl,0x0
2e40:	84 d2                	test   dl,dl
2e42:	75 29                	jne    2e6d <set_program_name+0x6d>
2e44:	48 8d 3d 5d 35 00 00 	lea    rdi,[rip+0x355d]        # 63a8 <b32+0x148>
2e4b:	b9 03 00 00 00       	mov    ecx,0x3
2e50:	4c 89 c6             	mov    rsi,r8
2e53:	4c 89 c3             	mov    rbx,r8
2e56:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
2e58:	0f 97 c2             	seta   dl
2e5b:	80 da 00             	sbb    dl,0x0
2e5e:	84 d2                	test   dl,dl
2e60:	75 0b                	jne    2e6d <set_program_name+0x6d>
2e62:	48 8d 58 04          	lea    rbx,[rax+0x4]
2e66:	48 89 1d 13 62 20 00 	mov    QWORD PTR [rip+0x206213],rbx        # 209080 <__progname@@GLIBC_2.2.5>
2e6d:	48 89 1d 6c 62 20 00 	mov    QWORD PTR [rip+0x20626c],rbx        # 2090e0 <program_name>
2e74:	48 89 1d 2d 62 20 00 	mov    QWORD PTR [rip+0x20622d],rbx        # 2090a8 <__progname_full@@GLIBC_2.2.5>
2e7b:	5b                   	pop    rbx
2e7c:	c3                   	ret
2e7d:	48 8b 0d 3c 62 20 00 	mov    rcx,QWORD PTR [rip+0x20623c]        # 2090c0 <stderr@@GLIBC_2.2.5>
2e84:	48 8d 3d dd 34 00 00 	lea    rdi,[rip+0x34dd]        # 6368 <b32+0x108>
2e8b:	ba 37 00 00 00       	mov    edx,0x37
2e90:	be 01 00 00 00       	mov    esi,0x1
2e95:	e8 06 e9 ff ff       	call   17a0 <fwrite@plt>
2e9a:	e8 41 e6 ff ff       	call   14e0 <abort@plt>
2e9f:	90                   	nop

0000000000002ea0 <gettext_quote.part.1>:
2ea0:	55                   	push   rbp
2ea1:	53                   	push   rbx
2ea2:	48 89 fd             	mov    rbp,rdi
2ea5:	89 f3                	mov    ebx,esi
2ea7:	48 83 ec 08          	sub    rsp,0x8
2eab:	e8 10 2d 00 00       	call   5bc0 <locale_charset>
2eb0:	0f b6 10             	movzx  edx,BYTE PTR [rax]
2eb3:	83 e2 df             	and    edx,0xffffffdf
2eb6:	80 fa 55             	cmp    dl,0x55
2eb9:	74 75                	je     2f30 <gettext_quote.part.1+0x90>
2ebb:	80 fa 47             	cmp    dl,0x47
2ebe:	74 20                	je     2ee0 <gettext_quote.part.1+0x40>
2ec0:	48 8d 05 f4 34 00 00 	lea    rax,[rip+0x34f4]        # 63bb <b32+0x15b>
2ec7:	48 8d 15 ef 34 00 00 	lea    rdx,[rip+0x34ef]        # 63bd <b32+0x15d>
2ece:	83 fb 09             	cmp    ebx,0x9
2ed1:	48 0f 45 c2          	cmovne rax,rdx
2ed5:	48 83 c4 08          	add    rsp,0x8
2ed9:	5b                   	pop    rbx
2eda:	5d                   	pop    rbp
2edb:	c3                   	ret
2edc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2ee0:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
2ee4:	83 e2 df             	and    edx,0xffffffdf
2ee7:	80 fa 42             	cmp    dl,0x42
2eea:	75 d4                	jne    2ec0 <gettext_quote.part.1+0x20>
2eec:	80 78 02 31          	cmp    BYTE PTR [rax+0x2],0x31
2ef0:	75 ce                	jne    2ec0 <gettext_quote.part.1+0x20>
2ef2:	80 78 03 38          	cmp    BYTE PTR [rax+0x3],0x38
2ef6:	75 c8                	jne    2ec0 <gettext_quote.part.1+0x20>
2ef8:	80 78 04 30          	cmp    BYTE PTR [rax+0x4],0x30
2efc:	75 c2                	jne    2ec0 <gettext_quote.part.1+0x20>
2efe:	80 78 05 33          	cmp    BYTE PTR [rax+0x5],0x33
2f02:	75 bc                	jne    2ec0 <gettext_quote.part.1+0x20>
2f04:	80 78 06 30          	cmp    BYTE PTR [rax+0x6],0x30
2f08:	75 b6                	jne    2ec0 <gettext_quote.part.1+0x20>
2f0a:	80 78 07 00          	cmp    BYTE PTR [rax+0x7],0x0
2f0e:	75 b0                	jne    2ec0 <gettext_quote.part.1+0x20>
2f10:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
2f14:	48 8d 05 99 34 00 00 	lea    rax,[rip+0x3499]        # 63b4 <b32+0x154>
2f1b:	48 8d 15 96 34 00 00 	lea    rdx,[rip+0x3496]        # 63b8 <b32+0x158>
2f22:	48 0f 45 c2          	cmovne rax,rdx
2f26:	48 83 c4 08          	add    rsp,0x8
2f2a:	5b                   	pop    rbx
2f2b:	5d                   	pop    rbp
2f2c:	c3                   	ret
2f2d:	0f 1f 00             	nop    DWORD PTR [rax]
2f30:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
2f34:	83 e2 df             	and    edx,0xffffffdf
2f37:	80 fa 54             	cmp    dl,0x54
2f3a:	75 84                	jne    2ec0 <gettext_quote.part.1+0x20>
2f3c:	0f b6 50 02          	movzx  edx,BYTE PTR [rax+0x2]
2f40:	83 e2 df             	and    edx,0xffffffdf
2f43:	80 fa 46             	cmp    dl,0x46
2f46:	0f 85 74 ff ff ff    	jne    2ec0 <gettext_quote.part.1+0x20>
2f4c:	80 78 03 2d          	cmp    BYTE PTR [rax+0x3],0x2d
2f50:	0f 85 6a ff ff ff    	jne    2ec0 <gettext_quote.part.1+0x20>
2f56:	80 78 04 38          	cmp    BYTE PTR [rax+0x4],0x38
2f5a:	0f 85 60 ff ff ff    	jne    2ec0 <gettext_quote.part.1+0x20>
2f60:	80 78 05 00          	cmp    BYTE PTR [rax+0x5],0x0
2f64:	0f 85 56 ff ff ff    	jne    2ec0 <gettext_quote.part.1+0x20>
2f6a:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
2f6e:	48 8d 05 37 34 00 00 	lea    rax,[rip+0x3437]        # 63ac <b32+0x14c>
2f75:	48 8d 15 34 34 00 00 	lea    rdx,[rip+0x3434]        # 63b0 <b32+0x150>
2f7c:	48 0f 45 c2          	cmovne rax,rdx
2f80:	48 83 c4 08          	add    rsp,0x8
2f84:	5b                   	pop    rbx
2f85:	5d                   	pop    rbp
2f86:	c3                   	ret
2f87:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
2f8e:	00 00

0000000000002f90 <quotearg_buffer_restyled>:
2f90:	41 57                	push   r15
2f92:	41 56                	push   r14
2f94:	45 89 c7             	mov    r15d,r8d
2f97:	41 55                	push   r13
2f99:	41 54                	push   r12
2f9b:	49 89 fe             	mov    r14,rdi
2f9e:	55                   	push   rbp
2f9f:	53                   	push   rbx
2fa0:	44 89 cb             	mov    ebx,r9d
2fa3:	49 89 f5             	mov    r13,rsi
2fa6:	48 89 cd             	mov    rbp,rcx
2fa9:	83 e3 02             	and    ebx,0x2
2fac:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
2fb3:	48 8b 84 24 f0 00 00 	mov    rax,QWORD PTR [rsp+0xf0]
2fba:	00
2fbb:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
2fc0:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
2fc5:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
2fca:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
2fcf:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
2fd6:	00
2fd7:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
2fdc:	48 8b 84 24 00 01 00 	mov    rax,QWORD PTR [rsp+0x100]
2fe3:	00
2fe4:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
2fe9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2ff0:	00 00
2ff2:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
2ff9:	00
2ffa:	31 c0                	xor    eax,eax
2ffc:	e8 7f e5 ff ff       	call   1580 <__ctype_get_mb_cur_max@plt>
3001:	41 83 ff 0a          	cmp    r15d,0xa
3005:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
300a:	0f 87 af 11 00 00    	ja     41bf <quotearg_buffer_restyled+0x122f>
3010:	48 8d 0d 09 34 00 00 	lea    rcx,[rip+0x3409]        # 6420 <b32+0x1c0>
3017:	44 89 fa             	mov    edx,r15d
301a:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
301e:	48 01 c8             	add    rax,rcx
3021:	ff e0                	jmp    rax
3023:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3028:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
302d:	45 31 e4             	xor    r12d,r12d
3030:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3037:	00 00
3039:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
303e:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
3043:	48 8d 05 73 33 00 00 	lea    rax,[rip+0x3373]        # 63bd <b32+0x15d>
304a:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
3051:	00 00
3053:	45 31 ff             	xor    r15d,r15d
3056:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
305d:	00
305e:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3063:	45 31 db             	xor    r11d,r11d
3066:	48 89 e8             	mov    rax,rbp
3069:	45 89 e0             	mov    r8d,r12d
306c:	4c 89 dd             	mov    rbp,r11
306f:	49 89 c3             	mov    r11,rax
3072:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3078:	49 39 eb             	cmp    r11,rbp
307b:	41 0f 95 c4          	setne  r12b
307f:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
3083:	75 0d                	jne    3092 <quotearg_buffer_restyled+0x102>
3085:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
308a:	80 3c 28 00          	cmp    BYTE PTR [rax+rbp*1],0x0
308e:	41 0f 95 c4          	setne  r12b
3092:	45 84 e4             	test   r12b,r12b
3095:	0f 84 55 06 00 00    	je     36f0 <quotearg_buffer_restyled+0x760>
309b:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
30a0:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
30a5:	4c 8d 0c 2f          	lea    r9,[rdi+rbp*1]
30a9:	0f 95 c0             	setne  al
30ac:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
30b0:	41 89 c2             	mov    r10d,eax
30b3:	0f 84 a7 00 00 00    	je     3160 <quotearg_buffer_restyled+0x1d0>
30b9:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
30be:	48 85 c0             	test   rax,rax
30c1:	0f 84 29 04 00 00    	je     34f0 <quotearg_buffer_restyled+0x560>
30c7:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
30cb:	48 8d 5c 05 00       	lea    rbx,[rbp+rax*1+0x0]
30d0:	75 2e                	jne    3100 <quotearg_buffer_restyled+0x170>
30d2:	48 83 f8 01          	cmp    rax,0x1
30d6:	76 28                	jbe    3100 <quotearg_buffer_restyled+0x170>
30d8:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
30dd:	44 88 54 24 30       	mov    BYTE PTR [rsp+0x30],r10b
30e2:	4c 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],r9
30e7:	e8 a4 e4 ff ff       	call   1590 <strlen@plt>
30ec:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
30f2:	44 0f b6 54 24 30    	movzx  r10d,BYTE PTR [rsp+0x30]
30f8:	49 89 c3             	mov    r11,rax
30fb:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
3100:	4c 39 db             	cmp    rbx,r11
3103:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
3108:	0f 87 b2 05 00 00    	ja     36c0 <quotearg_buffer_restyled+0x730>
310e:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
3113:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
3118:	4c 89 cf             	mov    rdi,r9
311b:	4c 89 5c 24 40       	mov    QWORD PTR [rsp+0x40],r11
3120:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
3125:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
312a:	e8 31 e5 ff ff       	call   1660 <memcmp@plt>
312f:	85 c0                	test   eax,eax
3131:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
3136:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
313c:	4c 8b 5c 24 40       	mov    r11,QWORD PTR [rsp+0x40]
3141:	0f 85 79 05 00 00    	jne    36c0 <quotearg_buffer_restyled+0x730>
3147:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
314c:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
3152:	0f 85 7d 0f 00 00    	jne    40d5 <quotearg_buffer_restyled+0x1145>
3158:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
315f:	00
3160:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
3164:	80 fb 7e             	cmp    bl,0x7e
3167:	0f 87 1b 03 00 00    	ja     3488 <quotearg_buffer_restyled+0x4f8>
316d:	48 8d 0d d8 32 00 00 	lea    rcx,[rip+0x32d8]        # 644c <b32+0x1ec>
3174:	0f b6 d3             	movzx  edx,bl
3177:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
317b:	48 01 c8             	add    rax,rcx
317e:	ff e0                	jmp    rax
3180:	45 31 d2             	xor    r10d,r10d
3183:	49 83 fb 01          	cmp    r11,0x1
3187:	0f 95 c0             	setne  al
318a:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
318e:	75 0c                	jne    319c <quotearg_buffer_restyled+0x20c>
3190:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
3195:	80 78 01 00          	cmp    BYTE PTR [rax+0x1],0x0
3199:	0f 95 c0             	setne  al
319c:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
31a1:	0f 94 c2             	sete   dl
31a4:	84 c0                	test   al,al
31a6:	0f 84 4c 02 00 00    	je     33f8 <quotearg_buffer_restyled+0x468>
31ac:	45 31 e4             	xor    r12d,r12d
31af:	31 c0                	xor    eax,eax
31b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
31b8:	80 7c 24 0d 01       	cmp    BYTE PTR [rsp+0xd],0x1
31bd:	0f 85 0f 01 00 00    	jne    32d2 <quotearg_buffer_restyled+0x342>
31c3:	84 d2                	test   dl,dl
31c5:	0f 85 07 01 00 00    	jne    32d2 <quotearg_buffer_restyled+0x342>
31cb:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
31d0:	48 85 f6             	test   rsi,rsi
31d3:	74 14                	je     31e9 <quotearg_buffer_restyled+0x259>
31d5:	89 da                	mov    edx,ebx
31d7:	c0 ea 05             	shr    dl,0x5
31da:	0f b6 d2             	movzx  edx,dl
31dd:	8b 14 96             	mov    edx,DWORD PTR [rsi+rdx*4]
31e0:	0f a3 da             	bt     edx,ebx
31e3:	0f 82 4a 01 00 00    	jb     3333 <quotearg_buffer_restyled+0x3a3>
31e9:	45 84 d2             	test   r10b,r10b
31ec:	0f 85 41 01 00 00    	jne    3333 <quotearg_buffer_restyled+0x3a3>
31f2:	83 f0 01             	xor    eax,0x1
31f5:	48 83 c5 01          	add    rbp,0x1
31f9:	44 21 c0             	and    eax,r8d
31fc:	84 c0                	test   al,al
31fe:	74 20                	je     3220 <quotearg_buffer_restyled+0x290>
3200:	4d 39 fd             	cmp    r13,r15
3203:	76 05                	jbe    320a <quotearg_buffer_restyled+0x27a>
3205:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
320a:	49 8d 47 01          	lea    rax,[r15+0x1]
320e:	49 39 c5             	cmp    r13,rax
3211:	76 06                	jbe    3219 <quotearg_buffer_restyled+0x289>
3213:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
3219:	49 83 c7 02          	add    r15,0x2
321d:	45 31 c0             	xor    r8d,r8d
3220:	4d 39 ef             	cmp    r15,r13
3223:	73 04                	jae    3229 <quotearg_buffer_restyled+0x299>
3225:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
3229:	0f b6 7c 24 0e       	movzx  edi,BYTE PTR [rsp+0xe]
322e:	49 83 c7 01          	add    r15,0x1
3232:	b8 00 00 00 00       	mov    eax,0x0
3237:	45 84 e4             	test   r12b,r12b
323a:	0f 44 f8             	cmove  edi,eax
323d:	40 88 7c 24 0e       	mov    BYTE PTR [rsp+0xe],dil
3242:	e9 31 fe ff ff       	jmp    3078 <quotearg_buffer_restyled+0xe8>
3247:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
324e:	00 00
3250:	45 31 d2             	xor    r10d,r10d
3253:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
3257:	83 f8 02             	cmp    eax,0x2
325a:	0f 84 b8 05 00 00    	je     3818 <quotearg_buffer_restyled+0x888>
3260:	83 f8 05             	cmp    eax,0x5
3263:	0f 84 6f 05 00 00    	je     37d8 <quotearg_buffer_restyled+0x848>
3269:	83 f8 02             	cmp    eax,0x2
326c:	bb 3f 00 00 00       	mov    ebx,0x3f
3271:	0f 94 c2             	sete   dl
3274:	45 31 e4             	xor    r12d,r12d
3277:	31 c0                	xor    eax,eax
3279:	e9 3a ff ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
327e:	66 90                	xchg   ax,ax
3280:	45 31 d2             	xor    r10d,r10d
3283:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3288:	0f 84 02 05 00 00    	je     3790 <quotearg_buffer_restyled+0x800>
328e:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
3293:	31 d2                	xor    edx,edx
3295:	31 c0                	xor    eax,eax
3297:	bb 27 00 00 00       	mov    ebx,0x27
329c:	e9 17 ff ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
32a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
32a8:	ba 09 00 00 00       	mov    edx,0x9
32ad:	bb 74 00 00 00       	mov    ebx,0x74
32b2:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
32b7:	0f 94 c0             	sete   al
32ba:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
32be:	0f 85 4a 01 00 00    	jne    340e <quotearg_buffer_restyled+0x47e>
32c4:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
32c9:	75 65                	jne    3330 <quotearg_buffer_restyled+0x3a0>
32cb:	89 d3                	mov    ebx,edx
32cd:	45 31 e4             	xor    r12d,r12d
32d0:	31 c0                	xor    eax,eax
32d2:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
32d7:	0f 85 ee fe ff ff    	jne    31cb <quotearg_buffer_restyled+0x23b>
32dd:	e9 07 ff ff ff       	jmp    31e9 <quotearg_buffer_restyled+0x259>
32e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
32e8:	ba 08 00 00 00       	mov    edx,0x8
32ed:	bb 62 00 00 00       	mov    ebx,0x62
32f2:	eb d0                	jmp    32c4 <quotearg_buffer_restyled+0x334>
32f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
32f8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
32fd:	0f 84 cd 03 00 00    	je     36d0 <quotearg_buffer_restyled+0x740>
3303:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3308:	0f 84 12 02 00 00    	je     3520 <quotearg_buffer_restyled+0x590>
330e:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3313:	0f 84 07 02 00 00    	je     3520 <quotearg_buffer_restyled+0x590>
3319:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
331f:	0f 85 b6 03 00 00    	jne    36db <quotearg_buffer_restyled+0x74b>
3325:	bb 5c 00 00 00       	mov    ebx,0x5c
332a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3330:	45 31 e4             	xor    r12d,r12d
3333:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3338:	0f 94 c2             	sete   dl
333b:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3340:	89 d0                	mov    eax,edx
3342:	0f 85 50 08 00 00    	jne    3b98 <quotearg_buffer_restyled+0xc08>
3348:	44 89 c0             	mov    eax,r8d
334b:	83 f0 01             	xor    eax,0x1
334e:	20 d0                	and    al,dl
3350:	74 2f                	je     3381 <quotearg_buffer_restyled+0x3f1>
3352:	4d 39 fd             	cmp    r13,r15
3355:	76 05                	jbe    335c <quotearg_buffer_restyled+0x3cc>
3357:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
335c:	49 8d 57 01          	lea    rdx,[r15+0x1]
3360:	49 39 d5             	cmp    r13,rdx
3363:	76 06                	jbe    336b <quotearg_buffer_restyled+0x3db>
3365:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
336b:	49 8d 57 02          	lea    rdx,[r15+0x2]
336f:	49 39 d5             	cmp    r13,rdx
3372:	76 06                	jbe    337a <quotearg_buffer_restyled+0x3ea>
3374:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
337a:	49 83 c7 03          	add    r15,0x3
337e:	41 89 c0             	mov    r8d,eax
3381:	4d 39 fd             	cmp    r13,r15
3384:	76 05                	jbe    338b <quotearg_buffer_restyled+0x3fb>
3386:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
338b:	49 83 c7 01          	add    r15,0x1
338f:	48 83 c5 01          	add    rbp,0x1
3393:	e9 88 fe ff ff       	jmp    3220 <quotearg_buffer_restyled+0x290>
3398:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
339f:	00
33a0:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
33a5:	0f 85 c8 01 00 00    	jne    3573 <quotearg_buffer_restyled+0x5e3>
33ab:	31 d2                	xor    edx,edx
33ad:	f6 44 24 78 01       	test   BYTE PTR [rsp+0x78],0x1
33b2:	0f 84 13 ff ff ff    	je     32cb <quotearg_buffer_restyled+0x33b>
33b8:	48 83 c5 01          	add    rbp,0x1
33bc:	e9 b7 fc ff ff       	jmp    3078 <quotearg_buffer_restyled+0xe8>
33c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
33c8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
33cd:	0f 94 c2             	sete   dl
33d0:	31 c0                	xor    eax,eax
33d2:	e9 e1 fd ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
33d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
33de:	00 00
33e0:	ba 07 00 00 00       	mov    edx,0x7
33e5:	bb 61 00 00 00       	mov    ebx,0x61
33ea:	e9 d5 fe ff ff       	jmp    32c4 <quotearg_buffer_restyled+0x334>
33ef:	90                   	nop
33f0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
33f5:	0f 94 c2             	sete   dl
33f8:	48 85 ed             	test   rbp,rbp
33fb:	0f 85 ab fd ff ff    	jne    31ac <quotearg_buffer_restyled+0x21c>
3401:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
3406:	20 d0                	and    al,dl
3408:	0f 84 aa fd ff ff    	je     31b8 <quotearg_buffer_restyled+0x228>
340e:	4c 89 dd             	mov    rbp,r11
3411:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
3418:	00
3419:	e9 fb 06 00 00       	jmp    3b19 <quotearg_buffer_restyled+0xb89>
341e:	66 90                	xchg   ax,ax
3420:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3425:	0f 94 c2             	sete   dl
3428:	45 31 e4             	xor    r12d,r12d
342b:	eb d4                	jmp    3401 <quotearg_buffer_restyled+0x471>
342d:	0f 1f 00             	nop    DWORD PTR [rax]
3430:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3435:	bb 20 00 00 00       	mov    ebx,0x20
343a:	0f 94 c2             	sete   dl
343d:	eb c2                	jmp    3401 <quotearg_buffer_restyled+0x471>
343f:	90                   	nop
3440:	ba 0d 00 00 00       	mov    edx,0xd
3445:	bb 72 00 00 00       	mov    ebx,0x72
344a:	e9 63 fe ff ff       	jmp    32b2 <quotearg_buffer_restyled+0x322>
344f:	90                   	nop
3450:	ba 0c 00 00 00       	mov    edx,0xc
3455:	bb 66 00 00 00       	mov    ebx,0x66
345a:	e9 65 fe ff ff       	jmp    32c4 <quotearg_buffer_restyled+0x334>
345f:	90                   	nop
3460:	ba 0b 00 00 00       	mov    edx,0xb
3465:	bb 76 00 00 00       	mov    ebx,0x76
346a:	e9 55 fe ff ff       	jmp    32c4 <quotearg_buffer_restyled+0x334>
346f:	90                   	nop
3470:	ba 0a 00 00 00       	mov    edx,0xa
3475:	bb 6e 00 00 00       	mov    ebx,0x6e
347a:	e9 33 fe ff ff       	jmp    32b2 <quotearg_buffer_restyled+0x322>
347f:	90                   	nop
3480:	45 31 d2             	xor    r10d,r10d
3483:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3488:	48 83 7c 24 58 01    	cmp    QWORD PTR [rsp+0x58],0x1
348e:	0f 85 a4 03 00 00    	jne    3838 <quotearg_buffer_restyled+0x8a8>
3494:	4c 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],r11
3499:	44 88 44 24 30       	mov    BYTE PTR [rsp+0x30],r8b
349e:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
34a3:	e8 38 e3 ff ff       	call   17e0 <__ctype_b_loc@plt>
34a8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
34ab:	0f b6 d3             	movzx  edx,bl
34ae:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
34b4:	44 0f b6 44 24 30    	movzx  r8d,BYTE PTR [rsp+0x30]
34ba:	4c 8b 5c 24 38       	mov    r11,QWORD PTR [rsp+0x38]
34bf:	bf 01 00 00 00       	mov    edi,0x1
34c4:	0f b7 04 51          	movzx  eax,WORD PTR [rcx+rdx*2]
34c8:	66 25 00 40          	and    ax,0x4000
34cc:	41 0f 95 c4          	setne  r12b
34d0:	0f 94 c0             	sete   al
34d3:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
34d7:	84 c0                	test   al,al
34d9:	0f 85 92 09 00 00    	jne    3e71 <quotearg_buffer_restyled+0xee1>
34df:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
34e4:	0f 94 c2             	sete   dl
34e7:	e9 cc fc ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
34ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
34f0:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
34f4:	80 fb 7e             	cmp    bl,0x7e
34f7:	77 87                	ja     3480 <quotearg_buffer_restyled+0x4f0>
34f9:	48 8d 0d 48 31 00 00 	lea    rcx,[rip+0x3148]        # 6648 <b32+0x3e8>
3500:	0f b6 d3             	movzx  edx,bl
3503:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
3507:	48 01 c8             	add    rax,rcx
350a:	ff e0                	jmp    rax
350c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3510:	45 31 d2             	xor    r10d,r10d
3513:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3518:	0f 85 f0 fd ff ff    	jne    330e <quotearg_buffer_restyled+0x37e>
351e:	66 90                	xchg   ax,ax
3520:	ba 5c 00 00 00       	mov    edx,0x5c
3525:	bb 5c 00 00 00       	mov    ebx,0x5c
352a:	e9 95 fd ff ff       	jmp    32c4 <quotearg_buffer_restyled+0x334>
352f:	90                   	nop
3530:	ba 0c 00 00 00       	mov    edx,0xc
3535:	45 31 d2             	xor    r10d,r10d
3538:	bb 66 00 00 00       	mov    ebx,0x66
353d:	e9 82 fd ff ff       	jmp    32c4 <quotearg_buffer_restyled+0x334>
3542:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3548:	ba 0a 00 00 00       	mov    edx,0xa
354d:	45 31 d2             	xor    r10d,r10d
3550:	bb 6e 00 00 00       	mov    ebx,0x6e
3555:	e9 58 fd ff ff       	jmp    32b2 <quotearg_buffer_restyled+0x322>
355a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3560:	bb 61 00 00 00       	mov    ebx,0x61
3565:	e9 c6 fd ff ff       	jmp    3330 <quotearg_buffer_restyled+0x3a0>
356a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3570:	45 31 d2             	xor    r10d,r10d
3573:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3578:	0f 94 c2             	sete   dl
357b:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3580:	0f 85 94 0b 00 00    	jne    411a <quotearg_buffer_restyled+0x118a>
3586:	44 89 c0             	mov    eax,r8d
3589:	4c 89 f9             	mov    rcx,r15
358c:	83 f0 01             	xor    eax,0x1
358f:	20 d0                	and    al,dl
3591:	74 2d                	je     35c0 <quotearg_buffer_restyled+0x630>
3593:	4d 39 fd             	cmp    r13,r15
3596:	76 05                	jbe    359d <quotearg_buffer_restyled+0x60d>
3598:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
359d:	49 8d 4f 01          	lea    rcx,[r15+0x1]
35a1:	49 39 cd             	cmp    r13,rcx
35a4:	76 06                	jbe    35ac <quotearg_buffer_restyled+0x61c>
35a6:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
35ac:	49 8d 4f 02          	lea    rcx,[r15+0x2]
35b0:	49 39 cd             	cmp    r13,rcx
35b3:	0f 87 30 06 00 00    	ja     3be9 <quotearg_buffer_restyled+0xc59>
35b9:	49 8d 4f 03          	lea    rcx,[r15+0x3]
35bd:	41 89 c0             	mov    r8d,eax
35c0:	49 39 cd             	cmp    r13,rcx
35c3:	76 05                	jbe    35ca <quotearg_buffer_restyled+0x63a>
35c5:	41 c6 04 0e 5c       	mov    BYTE PTR [r14+rcx*1],0x5c
35ca:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
35cf:	4c 8d 79 01          	lea    r15,[rcx+0x1]
35d3:	0f 84 00 06 00 00    	je     3bd9 <quotearg_buffer_restyled+0xc49>
35d9:	48 8d 45 01          	lea    rax,[rbp+0x1]
35dd:	4c 39 d8             	cmp    rax,r11
35e0:	73 19                	jae    35fb <quotearg_buffer_restyled+0x66b>
35e2:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
35e7:	0f b6 44 28 01       	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
35ec:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
35f0:	83 e8 30             	sub    eax,0x30
35f3:	3c 09                	cmp    al,0x9
35f5:	0f 86 2e 08 00 00    	jbe    3e29 <quotearg_buffer_restyled+0xe99>
35fb:	44 89 e0             	mov    eax,r12d
35fe:	bb 30 00 00 00       	mov    ebx,0x30
3603:	45 31 e4             	xor    r12d,r12d
3606:	e9 ad fb ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
360b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3610:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3615:	45 89 d4             	mov    r12d,r10d
3618:	0f 94 c2             	sete   dl
361b:	45 31 d2             	xor    r10d,r10d
361e:	31 c0                	xor    eax,eax
3620:	e9 93 fb ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
3625:	0f 1f 00             	nop    DWORD PTR [rax]
3628:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
362d:	0f 94 c2             	sete   dl
3630:	45 31 d2             	xor    r10d,r10d
3633:	e9 c0 fd ff ff       	jmp    33f8 <quotearg_buffer_restyled+0x468>
3638:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
363f:	00
3640:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3645:	0f 94 c2             	sete   dl
3648:	45 31 d2             	xor    r10d,r10d
364b:	45 31 e4             	xor    r12d,r12d
364e:	e9 ae fd ff ff       	jmp    3401 <quotearg_buffer_restyled+0x471>
3653:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3658:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
365d:	45 89 d4             	mov    r12d,r10d
3660:	bb 20 00 00 00       	mov    ebx,0x20
3665:	0f 94 c2             	sete   dl
3668:	45 31 d2             	xor    r10d,r10d
366b:	e9 91 fd ff ff       	jmp    3401 <quotearg_buffer_restyled+0x471>
3670:	ba 0d 00 00 00       	mov    edx,0xd
3675:	45 31 d2             	xor    r10d,r10d
3678:	bb 72 00 00 00       	mov    ebx,0x72
367d:	e9 30 fc ff ff       	jmp    32b2 <quotearg_buffer_restyled+0x322>
3682:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3688:	bb 76 00 00 00       	mov    ebx,0x76
368d:	e9 9e fc ff ff       	jmp    3330 <quotearg_buffer_restyled+0x3a0>
3692:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3698:	ba 09 00 00 00       	mov    edx,0x9
369d:	45 31 d2             	xor    r10d,r10d
36a0:	bb 74 00 00 00       	mov    ebx,0x74
36a5:	e9 08 fc ff ff       	jmp    32b2 <quotearg_buffer_restyled+0x322>
36aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
36b0:	bb 62 00 00 00       	mov    ebx,0x62
36b5:	e9 76 fc ff ff       	jmp    3330 <quotearg_buffer_restyled+0x3a0>
36ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
36c0:	45 31 d2             	xor    r10d,r10d
36c3:	e9 98 fa ff ff       	jmp    3160 <quotearg_buffer_restyled+0x1d0>
36c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
36cf:	00
36d0:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
36d5:	0f 85 65 09 00 00    	jne    4040 <quotearg_buffer_restyled+0x10b0>
36db:	48 83 c5 01          	add    rbp,0x1
36df:	44 89 c0             	mov    eax,r8d
36e2:	45 31 e4             	xor    r12d,r12d
36e5:	bb 5c 00 00 00       	mov    ebx,0x5c
36ea:	e9 0d fb ff ff       	jmp    31fc <quotearg_buffer_restyled+0x26c>
36ef:	90                   	nop
36f0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
36f5:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
36fa:	45 89 c4             	mov    r12d,r8d
36fd:	4c 89 dd             	mov    rbp,r11
3700:	0f 94 c2             	sete   dl
3703:	89 d8                	mov    eax,ebx
3705:	4d 85 ff             	test   r15,r15
3708:	0f 94 c1             	sete   cl
370b:	21 d0                	and    eax,edx
370d:	20 c8                	and    al,cl
370f:	0f 85 61 0a 00 00    	jne    4176 <quotearg_buffer_restyled+0x11e6>
3715:	89 d8                	mov    eax,ebx
3717:	83 f0 01             	xor    eax,0x1
371a:	20 c2                	and    dl,al
371c:	0f 84 6a 09 00 00    	je     408c <quotearg_buffer_restyled+0x10fc>
3722:	80 7c 24 7c 00       	cmp    BYTE PTR [rsp+0x7c],0x0
3727:	0f 84 5d 09 00 00    	je     408a <quotearg_buffer_restyled+0x10fa>
372d:	80 7c 24 0e 00       	cmp    BYTE PTR [rsp+0xe],0x0
3732:	0f 85 f5 09 00 00    	jne    412d <quotearg_buffer_restyled+0x119d>
3738:	4d 85 ed             	test   r13,r13
373b:	0f 94 c0             	sete   al
373e:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
3744:	0f 95 c2             	setne  dl
3747:	20 d0                	and    al,dl
3749:	0f 84 1d 0a 00 00    	je     416c <quotearg_buffer_restyled+0x11dc>
374f:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
3754:	48 8d 1d 62 2c 00 00 	lea    rbx,[rip+0x2c62]        # 63bd <b32+0x15d>
375b:	41 c6 06 27          	mov    BYTE PTR [r14],0x27
375f:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
3766:	00
3767:	41 bf 01 00 00 00    	mov    r15d,0x1
376d:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
3774:	00 00
3776:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
377b:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
3780:	88 44 24 7c          	mov    BYTE PTR [rsp+0x7c],al
3784:	e9 da f8 ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
3789:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3790:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3795:	0f 85 a5 08 00 00    	jne    4040 <quotearg_buffer_restyled+0x10b0>
379b:	4d 85 ed             	test   r13,r13
379e:	0f 84 fc 03 00 00    	je     3ba0 <quotearg_buffer_restyled+0xc10>
37a4:	31 d2                	xor    edx,edx
37a6:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
37ac:	0f 85 ee 03 00 00    	jne    3ba0 <quotearg_buffer_restyled+0xc10>
37b2:	4c 89 6c 24 50       	mov    QWORD PTR [rsp+0x50],r13
37b7:	49 83 c7 03          	add    r15,0x3
37bb:	31 c0                	xor    eax,eax
37bd:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
37c2:	45 31 c0             	xor    r8d,r8d
37c5:	49 89 d5             	mov    r13,rdx
37c8:	bb 27 00 00 00       	mov    ebx,0x27
37cd:	e9 17 fa ff ff       	jmp    31e9 <quotearg_buffer_restyled+0x259>
37d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
37d8:	f6 44 24 78 04       	test   BYTE PTR [rsp+0x78],0x4
37dd:	74 21                	je     3800 <quotearg_buffer_restyled+0x870>
37df:	48 8d 4d 02          	lea    rcx,[rbp+0x2]
37e3:	4c 39 d9             	cmp    rcx,r11
37e6:	73 18                	jae    3800 <quotearg_buffer_restyled+0x870>
37e8:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
37ed:	80 7c 28 01 3f       	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
37f2:	0f 84 8a 07 00 00    	je     3f82 <quotearg_buffer_restyled+0xff2>
37f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
37ff:	00
3800:	31 d2                	xor    edx,edx
3802:	45 31 e4             	xor    r12d,r12d
3805:	31 c0                	xor    eax,eax
3807:	bb 3f 00 00 00       	mov    ebx,0x3f
380c:	e9 a7 f9 ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
3811:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3818:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
381d:	0f 85 1d 08 00 00    	jne    4040 <quotearg_buffer_restyled+0x10b0>
3823:	45 31 e4             	xor    r12d,r12d
3826:	31 c0                	xor    eax,eax
3828:	bb 3f 00 00 00       	mov    ebx,0x3f
382d:	e9 b7 f9 ff ff       	jmp    31e9 <quotearg_buffer_restyled+0x259>
3832:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3838:	48 8d 84 24 a0 00 00 	lea    rax,[rsp+0xa0]
383f:	00
3840:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
3844:	48 c7 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],0x0
384b:	00 00 00 00 00
3850:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
3855:	75 2d                	jne    3884 <quotearg_buffer_restyled+0x8f4>
3857:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
385c:	44 88 44 24 40       	mov    BYTE PTR [rsp+0x40],r8b
3861:	44 88 54 24 38       	mov    BYTE PTR [rsp+0x38],r10b
3866:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
386b:	e8 20 dd ff ff       	call   1590 <strlen@plt>
3870:	44 0f b6 44 24 40    	movzx  r8d,BYTE PTR [rsp+0x40]
3876:	44 0f b6 54 24 38    	movzx  r10d,BYTE PTR [rsp+0x38]
387c:	49 89 c3             	mov    r11,rax
387f:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
3884:	48 8d 84 24 9c 00 00 	lea    rax,[rsp+0x9c]
388b:	00
388c:	31 c9                	xor    ecx,ecx
388e:	88 5c 24 7e          	mov    BYTE PTR [rsp+0x7e],bl
3892:	44 88 44 24 7d       	mov    BYTE PTR [rsp+0x7d],r8b
3897:	48 89 cb             	mov    rbx,rcx
389a:	4c 89 8c 24 88 00 00 	mov    QWORD PTR [rsp+0x88],r9
38a1:	00
38a2:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
38a7:	44 88 54 24 7f       	mov    BYTE PTR [rsp+0x7f],r10b
38ac:	4c 89 bc 24 80 00 00 	mov    QWORD PTR [rsp+0x80],r15
38b3:	00
38b4:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
38b9:	4c 89 6c 24 70       	mov    QWORD PTR [rsp+0x70],r13
38be:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
38c3:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
38c8:	4c 8d 74 1d 00       	lea    r14,[rbp+rbx*1+0x0]
38cd:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
38d2:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
38d7:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
38dc:	4e 8d 2c 30          	lea    r13,[rax+r14*1]
38e0:	4c 29 f2             	sub    rdx,r14
38e3:	4c 89 ee             	mov    rsi,r13
38e6:	e8 65 21 00 00       	call   5a50 <rpl_mbrtowc>
38eb:	48 85 c0             	test   rax,rax
38ee:	49 89 c7             	mov    r15,rax
38f1:	74 4e                	je     3941 <quotearg_buffer_restyled+0x9b1>
38f3:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
38f7:	0f 84 18 06 00 00    	je     3f15 <quotearg_buffer_restyled+0xf85>
38fd:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
3901:	0f 84 9a 05 00 00    	je     3ea1 <quotearg_buffer_restyled+0xf11>
3907:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
390c:	0f 94 c0             	sete   al
390f:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
3913:	0f 85 97 01 00 00    	jne    3ab0 <quotearg_buffer_restyled+0xb20>
3919:	8b bc 24 9c 00 00 00 	mov    edi,DWORD PTR [rsp+0x9c]
3920:	e8 ab de ff ff       	call   17d0 <iswprint@plt>
3925:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
392a:	85 c0                	test   eax,eax
392c:	b8 00 00 00 00       	mov    eax,0x0
3931:	44 0f 44 e0          	cmove  r12d,eax
3935:	4c 01 fb             	add    rbx,r15
3938:	e8 83 de ff ff       	call   17c0 <mbsinit@plt>
393d:	85 c0                	test   eax,eax
393f:	74 82                	je     38c3 <quotearg_buffer_restyled+0x933>
3941:	44 89 e2             	mov    edx,r12d
3944:	48 89 df             	mov    rdi,rbx
3947:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
394d:	83 f2 01             	xor    edx,0x1
3950:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
3955:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
395b:	22 54 24 0d          	and    dl,BYTE PTR [rsp+0xd]
395f:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
3966:	00
3967:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
396c:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
3971:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
3976:	48 83 ff 01          	cmp    rdi,0x1
397a:	0f 86 fb 05 00 00    	jbe    3f7b <quotearg_buffer_restyled+0xfeb>
3980:	48 89 f9             	mov    rcx,rdi
3983:	31 f6                	xor    esi,esi
3985:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
398b:	48 01 e9             	add    rcx,rbp
398e:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
3993:	e9 b6 00 00 00       	jmp    3a4e <quotearg_buffer_restyled+0xabe>
3998:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
399f:	00
39a0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
39a5:	0f 94 c0             	sete   al
39a8:	45 84 c9             	test   r9b,r9b
39ab:	0f 85 af 04 00 00    	jne    3e60 <quotearg_buffer_restyled+0xed0>
39b1:	44 89 c6             	mov    esi,r8d
39b4:	83 f6 01             	xor    esi,0x1
39b7:	40 20 f0             	and    al,sil
39ba:	74 2f                	je     39eb <quotearg_buffer_restyled+0xa5b>
39bc:	4d 39 fd             	cmp    r13,r15
39bf:	76 05                	jbe    39c6 <quotearg_buffer_restyled+0xa36>
39c1:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
39c6:	49 8d 77 01          	lea    rsi,[r15+0x1]
39ca:	49 39 f5             	cmp    r13,rsi
39cd:	76 06                	jbe    39d5 <quotearg_buffer_restyled+0xa45>
39cf:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
39d5:	49 8d 77 02          	lea    rsi,[r15+0x2]
39d9:	49 39 f5             	cmp    r13,rsi
39dc:	76 06                	jbe    39e4 <quotearg_buffer_restyled+0xa54>
39de:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
39e4:	49 83 c7 03          	add    r15,0x3
39e8:	41 89 c0             	mov    r8d,eax
39eb:	4d 39 fd             	cmp    r13,r15
39ee:	76 05                	jbe    39f5 <quotearg_buffer_restyled+0xa65>
39f0:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
39f5:	49 8d 47 01          	lea    rax,[r15+0x1]
39f9:	49 39 c5             	cmp    r13,rax
39fc:	76 0d                	jbe    3a0b <quotearg_buffer_restyled+0xa7b>
39fe:	89 d8                	mov    eax,ebx
3a00:	c0 e8 06             	shr    al,0x6
3a03:	83 c0 30             	add    eax,0x30
3a06:	43 88 44 3e 01       	mov    BYTE PTR [r14+r15*1+0x1],al
3a0b:	49 8d 47 02          	lea    rax,[r15+0x2]
3a0f:	49 39 c5             	cmp    r13,rax
3a12:	76 10                	jbe    3a24 <quotearg_buffer_restyled+0xa94>
3a14:	89 d8                	mov    eax,ebx
3a16:	c0 e8 03             	shr    al,0x3
3a19:	83 e0 07             	and    eax,0x7
3a1c:	83 c0 30             	add    eax,0x30
3a1f:	43 88 44 3e 02       	mov    BYTE PTR [r14+r15*1+0x2],al
3a24:	83 e3 07             	and    ebx,0x7
3a27:	48 83 c5 01          	add    rbp,0x1
3a2b:	49 83 c7 03          	add    r15,0x3
3a2f:	83 c3 30             	add    ebx,0x30
3a32:	48 39 cd             	cmp    rbp,rcx
3a35:	0f 83 e5 f7 ff ff    	jae    3220 <quotearg_buffer_restyled+0x290>
3a3b:	89 d6                	mov    esi,edx
3a3d:	4d 39 fd             	cmp    r13,r15
3a40:	76 04                	jbe    3a46 <quotearg_buffer_restyled+0xab6>
3a42:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
3a46:	0f b6 1c 2f          	movzx  ebx,BYTE PTR [rdi+rbp*1]
3a4a:	49 83 c7 01          	add    r15,0x1
3a4e:	84 d2                	test   dl,dl
3a50:	0f 85 4a ff ff ff    	jne    39a0 <quotearg_buffer_restyled+0xa10>
3a56:	89 f0                	mov    eax,esi
3a58:	83 f0 01             	xor    eax,0x1
3a5b:	44 21 c0             	and    eax,r8d
3a5e:	45 84 d2             	test   r10b,r10b
3a61:	74 0e                	je     3a71 <quotearg_buffer_restyled+0xae1>
3a63:	4d 39 fd             	cmp    r13,r15
3a66:	76 05                	jbe    3a6d <quotearg_buffer_restyled+0xadd>
3a68:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
3a6d:	49 83 c7 01          	add    r15,0x1
3a71:	48 83 c5 01          	add    rbp,0x1
3a75:	48 39 cd             	cmp    rbp,rcx
3a78:	0f 83 7e f7 ff ff    	jae    31fc <quotearg_buffer_restyled+0x26c>
3a7e:	84 c0                	test   al,al
3a80:	0f 84 f8 03 00 00    	je     3e7e <quotearg_buffer_restyled+0xeee>
3a86:	4d 39 fd             	cmp    r13,r15
3a89:	76 05                	jbe    3a90 <quotearg_buffer_restyled+0xb00>
3a8b:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
3a90:	49 8d 47 01          	lea    rax,[r15+0x1]
3a94:	49 39 c5             	cmp    r13,rax
3a97:	76 06                	jbe    3a9f <quotearg_buffer_restyled+0xb0f>
3a99:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
3a9f:	49 83 c7 02          	add    r15,0x2
3aa3:	45 31 d2             	xor    r10d,r10d
3aa6:	45 31 c0             	xor    r8d,r8d
3aa9:	eb 92                	jmp    3a3d <quotearg_buffer_restyled+0xaad>
3aab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3ab0:	49 83 ff 01          	cmp    r15,0x1
3ab4:	0f 84 5f fe ff ff    	je     3919 <quotearg_buffer_restyled+0x989>
3aba:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
3abf:	4a 8d 0c 3f          	lea    rcx,[rdi+r15*1]
3ac3:	4a 8d 54 37 01       	lea    rdx,[rdi+r14*1+0x1]
3ac8:	4e 8d 04 31          	lea    r8,[rcx+r14*1]
3acc:	eb 0f                	jmp    3add <quotearg_buffer_restyled+0xb4d>
3ace:	66 90                	xchg   ax,ax
3ad0:	48 83 c2 01          	add    rdx,0x1
3ad4:	49 39 d0             	cmp    r8,rdx
3ad7:	0f 84 3c fe ff ff    	je     3919 <quotearg_buffer_restyled+0x989>
3add:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
3ae0:	83 e9 5b             	sub    ecx,0x5b
3ae3:	80 f9 21             	cmp    cl,0x21
3ae6:	77 e8                	ja     3ad0 <quotearg_buffer_restyled+0xb40>
3ae8:	be 01 00 00 00       	mov    esi,0x1
3aed:	48 d3 e6             	shl    rsi,cl
3af0:	48 89 f1             	mov    rcx,rsi
3af3:	48 be 2b 00 00 00 02 	movabs rsi,0x20000002b
3afa:	00 00 00
3afd:	48 85 f1             	test   rcx,rsi
3b00:	74 ce                	je     3ad0 <quotearg_buffer_restyled+0xb40>
3b02:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
3b07:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
3b0c:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
3b11:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
3b18:	00
3b19:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3b1e:	74 10                	je     3b30 <quotearg_buffer_restyled+0xba0>
3b20:	84 c0                	test   al,al
3b22:	b8 04 00 00 00       	mov    eax,0x4
3b27:	0f 44 44 24 08       	cmove  eax,DWORD PTR [rsp+0x8]
3b2c:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
3b30:	48 83 ec 08          	sub    rsp,0x8
3b34:	48 89 e9             	mov    rcx,rbp
3b37:	4c 89 ee             	mov    rsi,r13
3b3a:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
3b3e:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
3b42:	4c 89 f7             	mov    rdi,r14
3b45:	6a 00                	push   0x0
3b47:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
3b4e:	00
3b4f:	44 8b 44 24 28       	mov    r8d,DWORD PTR [rsp+0x28]
3b54:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
3b59:	41 83 e1 fd          	and    r9d,0xfffffffd
3b5d:	e8 2e f4 ff ff       	call   2f90 <quotearg_buffer_restyled>
3b62:	48 83 c4 20          	add    rsp,0x20
3b66:	49 89 c7             	mov    r15,rax
3b69:	48 8b 9c 24 a8 00 00 	mov    rbx,QWORD PTR [rsp+0xa8]
3b70:	00
3b71:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
3b78:	00 00
3b7a:	4c 89 f8             	mov    rax,r15
3b7d:	0f 85 00 06 00 00    	jne    4183 <quotearg_buffer_restyled+0x11f3>
3b83:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
3b8a:	5b                   	pop    rbx
3b8b:	5d                   	pop    rbp
3b8c:	41 5c                	pop    r12
3b8e:	41 5d                	pop    r13
3b90:	41 5e                	pop    r14
3b92:	41 5f                	pop    r15
3b94:	c3                   	ret
3b95:	0f 1f 00             	nop    DWORD PTR [rax]
3b98:	4c 89 dd             	mov    rbp,r11
3b9b:	e9 79 ff ff ff       	jmp    3b19 <quotearg_buffer_restyled+0xb89>
3ba0:	4d 39 fd             	cmp    r13,r15
3ba3:	76 05                	jbe    3baa <quotearg_buffer_restyled+0xc1a>
3ba5:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
3baa:	49 8d 47 01          	lea    rax,[r15+0x1]
3bae:	49 39 c5             	cmp    r13,rax
3bb1:	76 06                	jbe    3bb9 <quotearg_buffer_restyled+0xc29>
3bb3:	43 c6 44 3e 01 5c    	mov    BYTE PTR [r14+r15*1+0x1],0x5c
3bb9:	49 8d 47 02          	lea    rax,[r15+0x2]
3bbd:	49 39 c5             	cmp    r13,rax
3bc0:	0f 86 ec 05 00 00    	jbe    41b2 <quotearg_buffer_restyled+0x1222>
3bc6:	4c 89 ea             	mov    rdx,r13
3bc9:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
3bcf:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
3bd4:	e9 d9 fb ff ff       	jmp    37b2 <quotearg_buffer_restyled+0x822>
3bd9:	44 89 e0             	mov    eax,r12d
3bdc:	bb 30 00 00 00       	mov    ebx,0x30
3be1:	45 31 e4             	xor    r12d,r12d
3be4:	e9 00 f6 ff ff       	jmp    31e9 <quotearg_buffer_restyled+0x259>
3be9:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
3bef:	e9 c5 f9 ff ff       	jmp    35b9 <quotearg_buffer_restyled+0x629>
3bf4:	85 db                	test   ebx,ebx
3bf6:	0f 85 27 f4 ff ff    	jne    3023 <quotearg_buffer_restyled+0x93>
3bfc:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
3c01:	4d 85 ed             	test   r13,r13
3c04:	0f 85 90 05 00 00    	jne    419a <quotearg_buffer_restyled+0x120a>
3c0a:	48 8d 05 ac 27 00 00 	lea    rax,[rip+0x27ac]        # 63bd <b32+0x15d>
3c11:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3c18:	00 00
3c1a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3c1f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
3c24:	45 31 e4             	xor    r12d,r12d
3c27:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
3c2c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
3c33:	00 00
3c35:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3c3a:	41 bf 01 00 00 00    	mov    r15d,0x1
3c40:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
3c47:	00
3c48:	e9 16 f4 ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
3c4d:	0f 1f 00             	nop    DWORD PTR [rax]
3c50:	85 db                	test   ebx,ebx
3c52:	0f 85 f5 03 00 00    	jne    404d <quotearg_buffer_restyled+0x10bd>
3c58:	4d 85 ed             	test   r13,r13
3c5b:	0f 84 25 02 00 00    	je     3e86 <quotearg_buffer_restyled+0xef6>
3c61:	41 c6 06 22          	mov    BYTE PTR [r14],0x22
3c65:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3c6a:	45 31 e4             	xor    r12d,r12d
3c6d:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
3c72:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3c79:	00 00
3c7b:	48 8d 05 39 27 00 00 	lea    rax,[rip+0x2739]        # 63bb <b32+0x15b>
3c82:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
3c87:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
3c8c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
3c93:	00 00
3c95:	41 bf 01 00 00 00    	mov    r15d,0x1
3c9b:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3ca0:	e9 be f3 ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
3ca5:	48 8d 05 0f 27 00 00 	lea    rax,[rip+0x270f]        # 63bb <b32+0x15b>
3cac:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3cb1:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
3cb6:	45 31 e4             	xor    r12d,r12d
3cb9:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3cc0:	00 00
3cc2:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
3cc7:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
3ccc:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
3cd3:	00 00
3cd5:	45 31 ff             	xor    r15d,r15d
3cd8:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3cdd:	c7 44 24 08 05 00 00 	mov    DWORD PTR [rsp+0x8],0x5
3ce4:	00
3ce5:	e9 79 f3 ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
3cea:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3cef:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
3cf4:	45 31 e4             	xor    r12d,r12d
3cf7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3cfe:	00 00
3d00:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
3d05:	45 31 ff             	xor    r15d,r15d
3d08:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
3d0d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
3d14:	00 00
3d16:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
3d1d:	00 00
3d1f:	e9 3f f3 ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
3d24:	83 7c 24 08 0a       	cmp    DWORD PTR [rsp+0x8],0xa
3d29:	74 56                	je     3d81 <quotearg_buffer_restyled+0xdf1>
3d2b:	48 8d 35 8d 26 00 00 	lea    rsi,[rip+0x268d]        # 63bf <b32+0x15f>
3d32:	31 ff                	xor    edi,edi
3d34:	ba 05 00 00 00       	mov    edx,0x5
3d39:	e8 32 d8 ff ff       	call   1570 <dcgettext@plt>
3d3e:	48 89 c1             	mov    rcx,rax
3d41:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
3d46:	48 8d 05 72 26 00 00 	lea    rax,[rip+0x2672]        # 63bf <b32+0x15f>
3d4d:	48 39 c1             	cmp    rcx,rax
3d50:	0f 84 98 03 00 00    	je     40ee <quotearg_buffer_restyled+0x115e>
3d56:	48 8d 35 60 26 00 00 	lea    rsi,[rip+0x2660]        # 63bd <b32+0x15d>
3d5d:	31 ff                	xor    edi,edi
3d5f:	ba 05 00 00 00       	mov    edx,0x5
3d64:	e8 07 d8 ff ff       	call   1570 <dcgettext@plt>
3d69:	48 89 c1             	mov    rcx,rax
3d6c:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
3d71:	48 8d 05 45 26 00 00 	lea    rax,[rip+0x2645]        # 63bd <b32+0x15d>
3d78:	48 39 c1             	cmp    rcx,rax
3d7b:	0f 84 83 03 00 00    	je     4104 <quotearg_buffer_restyled+0x1174>
3d81:	45 31 ff             	xor    r15d,r15d
3d84:	85 db                	test   ebx,ebx
3d86:	0f 84 c1 01 00 00    	je     3f4d <quotearg_buffer_restyled+0xfbd>
3d8c:	85 db                	test   ebx,ebx
3d8e:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
3d93:	0f 95 44 24 0f       	setne  BYTE PTR [rsp+0xf]
3d98:	45 31 e4             	xor    r12d,r12d
3d9b:	48 89 df             	mov    rdi,rbx
3d9e:	e8 ed d7 ff ff       	call   1590 <strlen@plt>
3da3:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
3da8:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
3dad:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3db2:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
3db7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3dbe:	00 00
3dc0:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
3dc5:	e9 99 f2 ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
3dca:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3dcf:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
3dd4:	45 31 e4             	xor    r12d,r12d
3dd7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3dde:	00 00
3de0:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
3de5:	45 31 ff             	xor    r15d,r15d
3de8:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
3ded:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
3df4:	00 00
3df6:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
3dfd:	00 00
3dff:	e9 5f f2 ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
3e04:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3e09:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
3e0e:	45 31 e4             	xor    r12d,r12d
3e11:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3e18:	00 00
3e1a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
3e1f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
3e24:	e9 1a f2 ff ff       	jmp    3043 <quotearg_buffer_restyled+0xb3>
3e29:	4d 39 fd             	cmp    r13,r15
3e2c:	76 05                	jbe    3e33 <quotearg_buffer_restyled+0xea3>
3e2e:	43 c6 04 3e 30       	mov    BYTE PTR [r14+r15*1],0x30
3e33:	48 8d 41 02          	lea    rax,[rcx+0x2]
3e37:	49 39 c5             	cmp    r13,rax
3e3a:	76 06                	jbe    3e42 <quotearg_buffer_restyled+0xeb2>
3e3c:	41 c6 44 0e 02 30    	mov    BYTE PTR [r14+rcx*1+0x2],0x30
3e42:	44 89 e0             	mov    eax,r12d
3e45:	4c 8d 79 03          	lea    r15,[rcx+0x3]
3e49:	45 31 e4             	xor    r12d,r12d
3e4c:	bb 30 00 00 00       	mov    ebx,0x30
3e51:	e9 62 f3 ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
3e56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3e5d:	00 00 00
3e60:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
3e65:	4c 89 dd             	mov    rbp,r11
3e68:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
3e6c:	e9 a8 fc ff ff       	jmp    3b19 <quotearg_buffer_restyled+0xb89>
3e71:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
3e76:	45 31 e4             	xor    r12d,r12d
3e79:	e9 02 fb ff ff       	jmp    3980 <quotearg_buffer_restyled+0x9f0>
3e7e:	45 31 d2             	xor    r10d,r10d
3e81:	e9 b7 fb ff ff       	jmp    3a3d <quotearg_buffer_restyled+0xaad>
3e86:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3e8d:	00 00
3e8f:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3e94:	45 31 e4             	xor    r12d,r12d
3e97:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
3e9c:	e9 da fd ff ff       	jmp    3c7b <quotearg_buffer_restyled+0xceb>
3ea1:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
3ea6:	4c 89 f6             	mov    rsi,r14
3ea9:	4c 89 e9             	mov    rcx,r13
3eac:	48 89 d8             	mov    rax,rbx
3eaf:	48 89 df             	mov    rdi,rbx
3eb2:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
3eb8:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
3ebd:	4c 8b 8c 24 88 00 00 	mov    r9,QWORD PTR [rsp+0x88]
3ec4:	00
3ec5:	4c 39 de             	cmp    rsi,r11
3ec8:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
3ece:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
3ed5:	00
3ed6:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
3edb:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
3ee0:	73 26                	jae    3f08 <quotearg_buffer_restyled+0xf78>
3ee2:	80 39 00             	cmp    BYTE PTR [rcx],0x0
3ee5:	75 10                	jne    3ef7 <quotearg_buffer_restyled+0xf67>
3ee7:	eb 1f                	jmp    3f08 <quotearg_buffer_restyled+0xf78>
3ee9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3ef0:	41 80 3c 01 00       	cmp    BYTE PTR [r9+rax*1],0x0
3ef5:	74 0e                	je     3f05 <quotearg_buffer_restyled+0xf75>
3ef7:	48 83 c0 01          	add    rax,0x1
3efb:	48 8d 54 05 00       	lea    rdx,[rbp+rax*1+0x0]
3f00:	49 39 d3             	cmp    r11,rdx
3f03:	77 eb                	ja     3ef0 <quotearg_buffer_restyled+0xf60>
3f05:	48 89 c7             	mov    rdi,rax
3f08:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
3f0d:	45 31 e4             	xor    r12d,r12d
3f10:	e9 61 fa ff ff       	jmp    3976 <quotearg_buffer_restyled+0x9e6>
3f15:	48 89 df             	mov    rdi,rbx
3f18:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
3f1e:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
3f23:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
3f29:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
3f30:	00
3f31:	45 31 e4             	xor    r12d,r12d
3f34:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
3f39:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
3f3e:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
3f43:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
3f48:	e9 29 fa ff ff       	jmp    3976 <quotearg_buffer_restyled+0x9e6>
3f4d:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
3f52:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
3f55:	84 c0                	test   al,al
3f57:	0f 84 2f fe ff ff    	je     3d8c <quotearg_buffer_restyled+0xdfc>
3f5d:	0f 1f 00             	nop    DWORD PTR [rax]
3f60:	4d 39 fd             	cmp    r13,r15
3f63:	76 04                	jbe    3f69 <quotearg_buffer_restyled+0xfd9>
3f65:	43 88 04 3e          	mov    BYTE PTR [r14+r15*1],al
3f69:	49 83 c7 01          	add    r15,0x1
3f6d:	42 0f b6 04 3a       	movzx  eax,BYTE PTR [rdx+r15*1]
3f72:	84 c0                	test   al,al
3f74:	75 ea                	jne    3f60 <quotearg_buffer_restyled+0xfd0>
3f76:	e9 11 fe ff ff       	jmp    3d8c <quotearg_buffer_restyled+0xdfc>
3f7b:	89 d0                	mov    eax,edx
3f7d:	e9 55 f5 ff ff       	jmp    34d7 <quotearg_buffer_restyled+0x547>
3f82:	0f b6 1c 08          	movzx  ebx,BYTE PTR [rax+rcx*1]
3f86:	80 fb 3e             	cmp    bl,0x3e
3f89:	0f 87 71 f8 ff ff    	ja     3800 <quotearg_buffer_restyled+0x870>
3f8f:	48 b8 00 00 00 00 82 	movabs rax,0x7000a38200000000
3f96:	a3 00 70
3f99:	48 0f a3 d8          	bt     rax,rbx
3f9d:	0f 83 5d f8 ff ff    	jae    3800 <quotearg_buffer_restyled+0x870>
3fa3:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3fa8:	0f 85 e4 01 00 00    	jne    4192 <quotearg_buffer_restyled+0x1202>
3fae:	4d 39 fd             	cmp    r13,r15
3fb1:	76 05                	jbe    3fb8 <quotearg_buffer_restyled+0x1028>
3fb3:	43 c6 04 3e 3f       	mov    BYTE PTR [r14+r15*1],0x3f
3fb8:	49 8d 47 01          	lea    rax,[r15+0x1]
3fbc:	49 39 c5             	cmp    r13,rax
3fbf:	76 06                	jbe    3fc7 <quotearg_buffer_restyled+0x1037>
3fc1:	43 c6 44 3e 01 22    	mov    BYTE PTR [r14+r15*1+0x1],0x22
3fc7:	49 8d 47 02          	lea    rax,[r15+0x2]
3fcb:	49 39 c5             	cmp    r13,rax
3fce:	76 06                	jbe    3fd6 <quotearg_buffer_restyled+0x1046>
3fd0:	43 c6 44 3e 02 22    	mov    BYTE PTR [r14+r15*1+0x2],0x22
3fd6:	49 8d 47 03          	lea    rax,[r15+0x3]
3fda:	49 39 c5             	cmp    r13,rax
3fdd:	76 06                	jbe    3fe5 <quotearg_buffer_restyled+0x1055>
3fdf:	43 c6 44 3e 03 3f    	mov    BYTE PTR [r14+r15*1+0x3],0x3f
3fe5:	49 83 c7 04          	add    r15,0x4
3fe9:	31 d2                	xor    edx,edx
3feb:	45 31 e4             	xor    r12d,r12d
3fee:	31 c0                	xor    eax,eax
3ff0:	48 89 cd             	mov    rbp,rcx
3ff3:	e9 c0 f1 ff ff       	jmp    31b8 <quotearg_buffer_restyled+0x228>
3ff8:	85 db                	test   ebx,ebx
3ffa:	0f 84 88 01 00 00    	je     4188 <quotearg_buffer_restyled+0x11f8>
4000:	48 8d 05 b6 23 00 00 	lea    rax,[rip+0x23b6]        # 63bd <b32+0x15d>
4007:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
400c:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
4011:	45 31 e4             	xor    r12d,r12d
4014:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
401b:	00 00
401d:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
4022:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
4027:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
402e:	00 00
4030:	45 31 ff             	xor    r15d,r15d
4033:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4038:	e9 26 f0 ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
403d:	0f 1f 00             	nop    DWORD PTR [rax]
4040:	4c 89 dd             	mov    rbp,r11
4043:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
4048:	e9 cc fa ff ff       	jmp    3b19 <quotearg_buffer_restyled+0xb89>
404d:	48 8d 05 67 23 00 00 	lea    rax,[rip+0x2367]        # 63bb <b32+0x15b>
4054:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4059:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
405e:	45 31 e4             	xor    r12d,r12d
4061:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4068:	00 00
406a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
406f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
4074:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
407b:	00 00
407d:	45 31 ff             	xor    r15d,r15d
4080:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4085:	e9 d9 ef ff ff       	jmp    3063 <quotearg_buffer_restyled+0xd3>
408a:	89 d0                	mov    eax,edx
408c:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
4091:	48 85 db             	test   rbx,rbx
4094:	74 2c                	je     40c2 <quotearg_buffer_restyled+0x1132>
4096:	84 c0                	test   al,al
4098:	74 28                	je     40c2 <quotearg_buffer_restyled+0x1132>
409a:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
409d:	48 89 d8             	mov    rax,rbx
40a0:	84 c9                	test   cl,cl
40a2:	74 1e                	je     40c2 <quotearg_buffer_restyled+0x1132>
40a4:	4c 89 fa             	mov    rdx,r15
40a7:	4c 29 f8             	sub    rax,r15
40aa:	49 39 d5             	cmp    r13,rdx
40ad:	76 04                	jbe    40b3 <quotearg_buffer_restyled+0x1123>
40af:	41 88 0c 16          	mov    BYTE PTR [r14+rdx*1],cl
40b3:	48 83 c2 01          	add    rdx,0x1
40b7:	0f b6 0c 10          	movzx  ecx,BYTE PTR [rax+rdx*1]
40bb:	84 c9                	test   cl,cl
40bd:	75 eb                	jne    40aa <quotearg_buffer_restyled+0x111a>
40bf:	49 89 d7             	mov    r15,rdx
40c2:	4d 39 fd             	cmp    r13,r15
40c5:	0f 86 9e fa ff ff    	jbe    3b69 <quotearg_buffer_restyled+0xbd9>
40cb:	43 c6 04 3e 00       	mov    BYTE PTR [r14+r15*1],0x0
40d0:	e9 94 fa ff ff       	jmp    3b69 <quotearg_buffer_restyled+0xbd9>
40d5:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
40da:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
40df:	4c 89 dd             	mov    rbp,r11
40e2:	0f 94 c0             	sete   al
40e5:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
40e9:	e9 2b fa ff ff       	jmp    3b19 <quotearg_buffer_restyled+0xb89>
40ee:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
40f2:	48 89 cf             	mov    rdi,rcx
40f5:	e8 a6 ed ff ff       	call   2ea0 <gettext_quote.part.1>
40fa:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
40ff:	e9 52 fc ff ff       	jmp    3d56 <quotearg_buffer_restyled+0xdc6>
4104:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
4108:	48 89 cf             	mov    rdi,rcx
410b:	e8 90 ed ff ff       	call   2ea0 <gettext_quote.part.1>
4110:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
4115:	e9 67 fc ff ff       	jmp    3d81 <quotearg_buffer_restyled+0xdf1>
411a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
411f:	4c 89 dd             	mov    rbp,r11
4122:	89 d0                	mov    eax,edx
4124:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
4128:	e9 ec f9 ff ff       	jmp    3b19 <quotearg_buffer_restyled+0xb89>
412d:	48 83 ec 08          	sub    rsp,0x8
4131:	41 b8 05 00 00 00    	mov    r8d,0x5
4137:	4c 89 d9             	mov    rcx,r11
413a:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
413e:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
4142:	4c 89 f7             	mov    rdi,r14
4145:	ff 74 24 38          	push   QWORD PTR [rsp+0x38]
4149:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
4150:	00
4151:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4156:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
415b:	e8 30 ee ff ff       	call   2f90 <quotearg_buffer_restyled>
4160:	48 83 c4 20          	add    rsp,0x20
4164:	49 89 c7             	mov    r15,rax
4167:	e9 fd f9 ff ff       	jmp    3b69 <quotearg_buffer_restyled+0xbd9>
416c:	0f b6 44 24 7c       	movzx  eax,BYTE PTR [rsp+0x7c]
4171:	e9 16 ff ff ff       	jmp    408c <quotearg_buffer_restyled+0x10fc>
4176:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
417d:	00
417e:	e9 96 f9 ff ff       	jmp    3b19 <quotearg_buffer_restyled+0xb89>
4183:	e8 18 d4 ff ff       	call   15a0 <__stack_chk_fail@plt>
4188:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
418d:	e9 6f fa ff ff       	jmp    3c01 <quotearg_buffer_restyled+0xc71>
4192:	4c 89 dd             	mov    rbp,r11
4195:	e9 96 f9 ff ff       	jmp    3b30 <quotearg_buffer_restyled+0xba0>
419a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
419f:	31 c0                	xor    eax,eax
41a1:	45 31 e4             	xor    r12d,r12d
41a4:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
41ab:	00 00
41ad:	e9 a2 f5 ff ff       	jmp    3754 <quotearg_buffer_restyled+0x7c4>
41b2:	4c 89 ea             	mov    rdx,r13
41b5:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
41ba:	e9 f3 f5 ff ff       	jmp    37b2 <quotearg_buffer_restyled+0x822>
41bf:	e8 1c d3 ff ff       	call   14e0 <abort@plt>
41c4:	66 90                	xchg   ax,ax
41c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
41cd:	00 00 00

00000000000041d0 <quotearg_n_options>:
41d0:	41 57                	push   r15
41d2:	41 56                	push   r14
41d4:	4c 63 ff             	movsxd r15,edi
41d7:	41 55                	push   r13
41d9:	41 54                	push   r12
41db:	49 89 d6             	mov    r14,rdx
41de:	55                   	push   rbp
41df:	53                   	push   rbx
41e0:	48 89 cd             	mov    rbp,rcx
41e3:	48 83 ec 28          	sub    rsp,0x28
41e7:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
41ec:	e8 ff d2 ff ff       	call   14f0 <__errno_location@plt>
41f1:	49 89 c5             	mov    r13,rax
41f4:	8b 00                	mov    eax,DWORD PTR [rax]
41f6:	45 85 ff             	test   r15d,r15d
41f9:	48 8b 1d 60 4e 20 00 	mov    rbx,QWORD PTR [rip+0x204e60]        # 209060 <slotvec>
4200:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
4204:	0f 88 67 01 00 00    	js     4371 <quotearg_n_options+0x1a1>
420a:	44 39 3d 47 4e 20 00 	cmp    DWORD PTR [rip+0x204e47],r15d        # 209058 <nslots>
4211:	7f 62                	jg     4275 <quotearg_n_options+0xa5>
4213:	41 81 ff ff ff ff 7f 	cmp    r15d,0x7fffffff
421a:	0f 84 56 01 00 00    	je     4376 <quotearg_n_options+0x1a6>
4220:	45 8d 67 01          	lea    r12d,[r15+0x1]
4224:	48 8d 05 45 4e 20 00 	lea    rax,[rip+0x204e45]        # 209070 <slotvec0>
422b:	49 63 f4             	movsxd rsi,r12d
422e:	48 c1 e6 04          	shl    rsi,0x4
4232:	48 39 c3             	cmp    rbx,rax
4235:	0f 84 15 01 00 00    	je     4350 <quotearg_n_options+0x180>
423b:	48 89 df             	mov    rdi,rbx
423e:	e8 6d 0f 00 00       	call   51b0 <xrealloc>
4243:	48 89 c3             	mov    rbx,rax
4246:	48 89 05 13 4e 20 00 	mov    QWORD PTR [rip+0x204e13],rax        # 209060 <slotvec>
424d:	48 63 3d 04 4e 20 00 	movsxd rdi,DWORD PTR [rip+0x204e04]        # 209058 <nslots>
4254:	44 89 e2             	mov    edx,r12d
4257:	31 f6                	xor    esi,esi
4259:	29 fa                	sub    edx,edi
425b:	48 c1 e7 04          	shl    rdi,0x4
425f:	48 63 d2             	movsxd rdx,edx
4262:	48 01 df             	add    rdi,rbx
4265:	48 c1 e2 04          	shl    rdx,0x4
4269:	e8 c2 d3 ff ff       	call   1630 <memset@plt>
426e:	44 89 25 e3 4d 20 00 	mov    DWORD PTR [rip+0x204de3],r12d        # 209058 <nslots>
4275:	8b 45 04             	mov    eax,DWORD PTR [rbp+0x4]
4278:	49 c1 e7 04          	shl    r15,0x4
427c:	48 83 ec 08          	sub    rsp,0x8
4280:	4c 01 fb             	add    rbx,r15
4283:	4c 8d 7d 08          	lea    r15,[rbp+0x8]
4287:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
428b:	4c 8b 1b             	mov    r11,QWORD PTR [rbx]
428e:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
4292:	4c 89 f1             	mov    rcx,r14
4295:	83 c8 01             	or     eax,0x1
4298:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
429c:	ff 75 30             	push   QWORD PTR [rbp+0x30]
429f:	41 89 c1             	mov    r9d,eax
42a2:	ff 75 28             	push   QWORD PTR [rbp+0x28]
42a5:	41 57                	push   r15
42a7:	4c 89 de             	mov    rsi,r11
42aa:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
42af:	4c 89 e7             	mov    rdi,r12
42b2:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
42b7:	e8 d4 ec ff ff       	call   2f90 <quotearg_buffer_restyled>
42bc:	48 83 c4 20          	add    rsp,0x20
42c0:	4c 8b 5c 24 10       	mov    r11,QWORD PTR [rsp+0x10]
42c5:	49 39 c3             	cmp    r11,rax
42c8:	77 67                	ja     4331 <quotearg_n_options+0x161>
42ca:	48 8d 70 01          	lea    rsi,[rax+0x1]
42ce:	48 8d 05 2b 4e 20 00 	lea    rax,[rip+0x204e2b]        # 209100 <slot0>
42d5:	49 39 c4             	cmp    r12,rax
42d8:	48 89 33             	mov    QWORD PTR [rbx],rsi
42db:	74 12                	je     42ef <quotearg_n_options+0x11f>
42dd:	4c 89 e7             	mov    rdi,r12
42e0:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
42e5:	e8 e6 d1 ff ff       	call   14d0 <free@plt>
42ea:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
42ef:	48 89 f7             	mov    rdi,rsi
42f2:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
42f7:	e8 54 0e 00 00       	call   5150 <xmalloc>
42fc:	48 83 ec 08          	sub    rsp,0x8
4300:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
4304:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
4308:	ff 75 30             	push   QWORD PTR [rbp+0x30]
430b:	ff 75 28             	push   QWORD PTR [rbp+0x28]
430e:	4c 89 f1             	mov    rcx,r14
4311:	41 57                	push   r15
4313:	44 8b 4c 24 3c       	mov    r9d,DWORD PTR [rsp+0x3c]
4318:	48 89 c7             	mov    rdi,rax
431b:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
4320:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
4325:	49 89 c4             	mov    r12,rax
4328:	e8 63 ec ff ff       	call   2f90 <quotearg_buffer_restyled>
432d:	48 83 c4 20          	add    rsp,0x20
4331:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
4335:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
4339:	48 83 c4 28          	add    rsp,0x28
433d:	4c 89 e0             	mov    rax,r12
4340:	5b                   	pop    rbx
4341:	5d                   	pop    rbp
4342:	41 5c                	pop    r12
4344:	41 5d                	pop    r13
4346:	41 5e                	pop    r14
4348:	41 5f                	pop    r15
434a:	c3                   	ret
434b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4350:	31 ff                	xor    edi,edi
4352:	e8 59 0e 00 00       	call   51b0 <xrealloc>
4357:	66 0f 6f 05 11 4d 20 	movdqa xmm0,XMMWORD PTR [rip+0x204d11]        # 209070 <slotvec0>
435e:	00
435f:	48 89 c3             	mov    rbx,rax
4362:	48 89 05 f7 4c 20 00 	mov    QWORD PTR [rip+0x204cf7],rax        # 209060 <slotvec>
4369:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
436c:	e9 dc fe ff ff       	jmp    424d <quotearg_n_options+0x7d>
4371:	e8 6a d1 ff ff       	call   14e0 <abort@plt>
4376:	e8 25 10 00 00       	call   53a0 <xalloc_die>
437b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004380 <clone_quoting_options>:
4380:	41 54                	push   r12
4382:	55                   	push   rbp
4383:	53                   	push   rbx
4384:	48 89 fb             	mov    rbx,rdi
4387:	e8 64 d1 ff ff       	call   14f0 <__errno_location@plt>
438c:	44 8b 20             	mov    r12d,DWORD PTR [rax]
438f:	48 89 c5             	mov    rbp,rax
4392:	48 8d 05 67 4e 20 00 	lea    rax,[rip+0x204e67]        # 209200 <default_quoting_options>
4399:	48 85 db             	test   rbx,rbx
439c:	be 38 00 00 00       	mov    esi,0x38
43a1:	48 0f 44 d8          	cmove  rbx,rax
43a5:	48 89 df             	mov    rdi,rbx
43a8:	e8 a3 0f 00 00       	call   5350 <xmemdup>
43ad:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
43b1:	5b                   	pop    rbx
43b2:	5d                   	pop    rbp
43b3:	41 5c                	pop    r12
43b5:	c3                   	ret
43b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
43bd:	00 00 00

00000000000043c0 <get_quoting_style>:
43c0:	48 8d 05 39 4e 20 00 	lea    rax,[rip+0x204e39]        # 209200 <default_quoting_options>
43c7:	48 85 ff             	test   rdi,rdi
43ca:	48 0f 44 f8          	cmove  rdi,rax
43ce:	8b 07                	mov    eax,DWORD PTR [rdi]
43d0:	c3                   	ret
43d1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
43d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
43dd:	00 00 00

00000000000043e0 <set_quoting_style>:
43e0:	48 8d 05 19 4e 20 00 	lea    rax,[rip+0x204e19]        # 209200 <default_quoting_options>
43e7:	48 85 ff             	test   rdi,rdi
43ea:	48 0f 44 f8          	cmove  rdi,rax
43ee:	89 37                	mov    DWORD PTR [rdi],esi
43f0:	c3                   	ret
43f1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
43f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
43fd:	00 00 00

0000000000004400 <set_char_quoting>:
4400:	48 8d 05 f9 4d 20 00 	lea    rax,[rip+0x204df9]        # 209200 <default_quoting_options>
4407:	48 85 ff             	test   rdi,rdi
440a:	89 f1                	mov    ecx,esi
440c:	48 0f 44 f8          	cmove  rdi,rax
4410:	89 f0                	mov    eax,esi
4412:	83 e1 1f             	and    ecx,0x1f
4415:	c0 e8 05             	shr    al,0x5
4418:	0f b6 c0             	movzx  eax,al
441b:	48 8d 7c 87 08       	lea    rdi,[rdi+rax*4+0x8]
4420:	8b 37                	mov    esi,DWORD PTR [rdi]
4422:	89 f0                	mov    eax,esi
4424:	d3 e8                	shr    eax,cl
4426:	31 c2                	xor    edx,eax
4428:	83 e0 01             	and    eax,0x1
442b:	83 e2 01             	and    edx,0x1
442e:	d3 e2                	shl    edx,cl
4430:	31 f2                	xor    edx,esi
4432:	89 17                	mov    DWORD PTR [rdi],edx
4434:	c3                   	ret
4435:	90                   	nop
4436:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
443d:	00 00 00

0000000000004440 <set_quoting_flags>:
4440:	48 8d 05 b9 4d 20 00 	lea    rax,[rip+0x204db9]        # 209200 <default_quoting_options>
4447:	48 85 ff             	test   rdi,rdi
444a:	48 0f 44 f8          	cmove  rdi,rax
444e:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
4451:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
4454:	c3                   	ret
4455:	90                   	nop
4456:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
445d:	00 00 00

0000000000004460 <set_custom_quoting>:
4460:	48 8d 05 99 4d 20 00 	lea    rax,[rip+0x204d99]        # 209200 <default_quoting_options>
4467:	48 85 ff             	test   rdi,rdi
446a:	48 0f 44 f8          	cmove  rdi,rax
446e:	48 85 f6             	test   rsi,rsi
4471:	c7 07 0a 00 00 00    	mov    DWORD PTR [rdi],0xa
4477:	74 0e                	je     4487 <set_custom_quoting+0x27>
4479:	48 85 d2             	test   rdx,rdx
447c:	74 09                	je     4487 <set_custom_quoting+0x27>
447e:	48 89 77 28          	mov    QWORD PTR [rdi+0x28],rsi
4482:	48 89 57 30          	mov    QWORD PTR [rdi+0x30],rdx
4486:	c3                   	ret
4487:	48 83 ec 08          	sub    rsp,0x8
448b:	e8 50 d0 ff ff       	call   14e0 <abort@plt>

0000000000004490 <quotearg_buffer>:
4490:	41 57                	push   r15
4492:	41 56                	push   r14
4494:	48 8d 05 65 4d 20 00 	lea    rax,[rip+0x204d65]        # 209200 <default_quoting_options>
449b:	41 55                	push   r13
449d:	41 54                	push   r12
449f:	49 89 fd             	mov    r13,rdi
44a2:	55                   	push   rbp
44a3:	53                   	push   rbx
44a4:	4c 89 c3             	mov    rbx,r8
44a7:	49 89 f6             	mov    r14,rsi
44aa:	49 89 d7             	mov    r15,rdx
44ad:	48 83 ec 18          	sub    rsp,0x18
44b1:	4d 85 c0             	test   r8,r8
44b4:	48 0f 44 d8          	cmove  rbx,rax
44b8:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
44bd:	e8 2e d0 ff ff       	call   14f0 <__errno_location@plt>
44c2:	44 8b 20             	mov    r12d,DWORD PTR [rax]
44c5:	48 89 c5             	mov    rbp,rax
44c8:	48 8d 43 08          	lea    rax,[rbx+0x8]
44cc:	48 83 ec 08          	sub    rsp,0x8
44d0:	44 8b 4b 04          	mov    r9d,DWORD PTR [rbx+0x4]
44d4:	ff 73 30             	push   QWORD PTR [rbx+0x30]
44d7:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
44da:	ff 73 28             	push   QWORD PTR [rbx+0x28]
44dd:	4c 89 fa             	mov    rdx,r15
44e0:	50                   	push   rax
44e1:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
44e6:	4c 89 f6             	mov    rsi,r14
44e9:	4c 89 ef             	mov    rdi,r13
44ec:	e8 9f ea ff ff       	call   2f90 <quotearg_buffer_restyled>
44f1:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
44f5:	48 83 c4 38          	add    rsp,0x38
44f9:	5b                   	pop    rbx
44fa:	5d                   	pop    rbp
44fb:	41 5c                	pop    r12
44fd:	41 5d                	pop    r13
44ff:	41 5e                	pop    r14
4501:	41 5f                	pop    r15
4503:	c3                   	ret
4504:	66 90                	xchg   ax,ax
4506:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
450d:	00 00 00

0000000000004510 <quotearg_alloc_mem>:
4510:	41 57                	push   r15
4512:	41 56                	push   r14
4514:	48 8d 05 e5 4c 20 00 	lea    rax,[rip+0x204ce5]        # 209200 <default_quoting_options>
451b:	41 55                	push   r13
451d:	41 54                	push   r12
451f:	49 89 d4             	mov    r12,rdx
4522:	55                   	push   rbp
4523:	53                   	push   rbx
4524:	48 89 cb             	mov    rbx,rcx
4527:	49 89 fe             	mov    r14,rdi
452a:	49 89 f7             	mov    r15,rsi
452d:	48 83 ec 38          	sub    rsp,0x38
4531:	48 85 c9             	test   rcx,rcx
4534:	48 0f 44 d8          	cmove  rbx,rax
4538:	31 ed                	xor    ebp,ebp
453a:	e8 b1 cf ff ff       	call   14f0 <__errno_location@plt>
453f:	4d 85 e4             	test   r12,r12
4542:	49 89 c5             	mov    r13,rax
4545:	8b 00                	mov    eax,DWORD PTR [rax]
4547:	40 0f 94 c5          	sete   bpl
454b:	0b 6b 04             	or     ebp,DWORD PTR [rbx+0x4]
454e:	4c 8d 53 08          	lea    r10,[rbx+0x8]
4552:	48 83 ec 08          	sub    rsp,0x8
4556:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
4559:	4c 89 f9             	mov    rcx,r15
455c:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
4560:	ff 73 30             	push   QWORD PTR [rbx+0x30]
4563:	4c 89 f2             	mov    rdx,r14
4566:	ff 73 28             	push   QWORD PTR [rbx+0x28]
4569:	41 52                	push   r10
456b:	31 f6                	xor    esi,esi
456d:	41 89 e9             	mov    r9d,ebp
4570:	31 ff                	xor    edi,edi
4572:	4c 89 54 24 40       	mov    QWORD PTR [rsp+0x40],r10
4577:	e8 14 ea ff ff       	call   2f90 <quotearg_buffer_restyled>
457c:	48 8d 70 01          	lea    rsi,[rax+0x1]
4580:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4585:	48 83 c4 20          	add    rsp,0x20
4589:	48 89 f7             	mov    rdi,rsi
458c:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
4591:	e8 ba 0b 00 00       	call   5150 <xmalloc>
4596:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
459b:	48 83 ec 08          	sub    rsp,0x8
459f:	ff 73 30             	push   QWORD PTR [rbx+0x30]
45a2:	ff 73 28             	push   QWORD PTR [rbx+0x28]
45a5:	4c 8b 54 24 38       	mov    r10,QWORD PTR [rsp+0x38]
45aa:	41 89 e9             	mov    r9d,ebp
45ad:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
45b0:	4c 89 f9             	mov    rcx,r15
45b3:	4c 89 f2             	mov    rdx,r14
45b6:	48 89 c7             	mov    rdi,rax
45b9:	41 52                	push   r10
45bb:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
45c0:	e8 cb e9 ff ff       	call   2f90 <quotearg_buffer_restyled>
45c5:	8b 44 24 2c          	mov    eax,DWORD PTR [rsp+0x2c]
45c9:	48 83 c4 20          	add    rsp,0x20
45cd:	4d 85 e4             	test   r12,r12
45d0:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
45d4:	74 09                	je     45df <quotearg_alloc_mem+0xcf>
45d6:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
45db:	4d 89 1c 24          	mov    QWORD PTR [r12],r11
45df:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
45e4:	48 83 c4 38          	add    rsp,0x38
45e8:	5b                   	pop    rbx
45e9:	5d                   	pop    rbp
45ea:	41 5c                	pop    r12
45ec:	41 5d                	pop    r13
45ee:	41 5e                	pop    r14
45f0:	41 5f                	pop    r15
45f2:	c3                   	ret
45f3:	0f 1f 00             	nop    DWORD PTR [rax]
45f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
45fd:	00 00 00

0000000000004600 <quotearg_alloc>:
4600:	48 89 d1             	mov    rcx,rdx
4603:	31 d2                	xor    edx,edx
4605:	e9 06 ff ff ff       	jmp    4510 <quotearg_alloc_mem>
460a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004610 <quotearg_free>:
4610:	8b 05 42 4a 20 00    	mov    eax,DWORD PTR [rip+0x204a42]        # 209058 <nslots>
4616:	41 54                	push   r12
4618:	4c 8b 25 41 4a 20 00 	mov    r12,QWORD PTR [rip+0x204a41]        # 209060 <slotvec>
461f:	55                   	push   rbp
4620:	53                   	push   rbx
4621:	83 f8 01             	cmp    eax,0x1
4624:	7e 2b                	jle    4651 <quotearg_free+0x41>
4626:	83 e8 02             	sub    eax,0x2
4629:	49 8d 5c 24 18       	lea    rbx,[r12+0x18]
462e:	48 c1 e0 04          	shl    rax,0x4
4632:	49 8d 6c 04 28       	lea    rbp,[r12+rax*1+0x28]
4637:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
463e:	00 00
4640:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
4643:	48 83 c3 10          	add    rbx,0x10
4647:	e8 84 ce ff ff       	call   14d0 <free@plt>
464c:	48 39 eb             	cmp    rbx,rbp
464f:	75 ef                	jne    4640 <quotearg_free+0x30>
4651:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
4656:	48 8d 1d a3 4a 20 00 	lea    rbx,[rip+0x204aa3]        # 209100 <slot0>
465d:	48 39 df             	cmp    rdi,rbx
4660:	74 17                	je     4679 <quotearg_free+0x69>
4662:	e8 69 ce ff ff       	call   14d0 <free@plt>
4667:	48 c7 05 fe 49 20 00 	mov    QWORD PTR [rip+0x2049fe],0x100        # 209070 <slotvec0>
466e:	00 01 00 00
4672:	48 89 1d ff 49 20 00 	mov    QWORD PTR [rip+0x2049ff],rbx        # 209078 <slotvec0+0x8>
4679:	48 8d 1d f0 49 20 00 	lea    rbx,[rip+0x2049f0]        # 209070 <slotvec0>
4680:	49 39 dc             	cmp    r12,rbx
4683:	74 0f                	je     4694 <quotearg_free+0x84>
4685:	4c 89 e7             	mov    rdi,r12
4688:	e8 43 ce ff ff       	call   14d0 <free@plt>
468d:	48 89 1d cc 49 20 00 	mov    QWORD PTR [rip+0x2049cc],rbx        # 209060 <slotvec>
4694:	5b                   	pop    rbx
4695:	c7 05 b9 49 20 00 01 	mov    DWORD PTR [rip+0x2049b9],0x1        # 209058 <nslots>
469c:	00 00 00
469f:	5d                   	pop    rbp
46a0:	41 5c                	pop    r12
46a2:	c3                   	ret
46a3:	0f 1f 00             	nop    DWORD PTR [rax]
46a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
46ad:	00 00 00

00000000000046b0 <quotearg_n>:
46b0:	48 8d 0d 49 4b 20 00 	lea    rcx,[rip+0x204b49]        # 209200 <default_quoting_options>
46b7:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
46be:	e9 0d fb ff ff       	jmp    41d0 <quotearg_n_options>
46c3:	0f 1f 00             	nop    DWORD PTR [rax]
46c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
46cd:	00 00 00

00000000000046d0 <quotearg_n_mem>:
46d0:	48 8d 0d 29 4b 20 00 	lea    rcx,[rip+0x204b29]        # 209200 <default_quoting_options>
46d7:	e9 f4 fa ff ff       	jmp    41d0 <quotearg_n_options>
46dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000046e0 <quotearg>:
46e0:	48 8d 0d 19 4b 20 00 	lea    rcx,[rip+0x204b19]        # 209200 <default_quoting_options>
46e7:	48 89 fe             	mov    rsi,rdi
46ea:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
46f1:	31 ff                	xor    edi,edi
46f3:	e9 d8 fa ff ff       	jmp    41d0 <quotearg_n_options>
46f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
46ff:	00

0000000000004700 <quotearg_mem>:
4700:	48 8d 0d f9 4a 20 00 	lea    rcx,[rip+0x204af9]        # 209200 <default_quoting_options>
4707:	48 89 f2             	mov    rdx,rsi
470a:	48 89 fe             	mov    rsi,rdi
470d:	31 ff                	xor    edi,edi
470f:	e9 bc fa ff ff       	jmp    41d0 <quotearg_n_options>
4714:	66 90                	xchg   ax,ax
4716:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
471d:	00 00 00

0000000000004720 <quotearg_n_style>:
4720:	48 83 ec 48          	sub    rsp,0x48
4724:	48 89 d0             	mov    rax,rdx
4727:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
472e:	00 00
4730:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
4735:	31 d2                	xor    edx,edx
4737:	83 fe 0a             	cmp    esi,0xa
473a:	74 68                	je     47a4 <quotearg_n_style+0x84>
473c:	89 34 24             	mov    DWORD PTR [rsp],esi
473f:	48 89 e1             	mov    rcx,rsp
4742:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4749:	48 89 c6             	mov    rsi,rax
474c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
4753:	00 00
4755:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
475c:	00 00
475e:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
4765:	00 00
4767:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
476e:	00 00
4770:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
4777:	00 00
4779:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
4780:	00 00
4782:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
4789:	00
478a:	e8 41 fa ff ff       	call   41d0 <quotearg_n_options>
478f:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
4794:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
479b:	00 00
479d:	75 0a                	jne    47a9 <quotearg_n_style+0x89>
479f:	48 83 c4 48          	add    rsp,0x48
47a3:	c3                   	ret
47a4:	e8 37 cd ff ff       	call   14e0 <abort@plt>
47a9:	e8 f2 cd ff ff       	call   15a0 <__stack_chk_fail@plt>
47ae:	66 90                	xchg   ax,ax

00000000000047b0 <quotearg_n_style_mem>:
47b0:	48 83 ec 48          	sub    rsp,0x48
47b4:	48 89 d0             	mov    rax,rdx
47b7:	48 89 ca             	mov    rdx,rcx
47ba:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
47c1:	00 00
47c3:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
47c8:	31 c9                	xor    ecx,ecx
47ca:	83 fe 0a             	cmp    esi,0xa
47cd:	74 61                	je     4830 <quotearg_n_style_mem+0x80>
47cf:	89 34 24             	mov    DWORD PTR [rsp],esi
47d2:	48 89 e1             	mov    rcx,rsp
47d5:	48 89 c6             	mov    rsi,rax
47d8:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
47df:	00 00
47e1:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
47e8:	00 00
47ea:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
47f1:	00 00
47f3:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
47fa:	00 00
47fc:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
4803:	00 00
4805:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
480c:	00 00
480e:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
4815:	00
4816:	e8 b5 f9 ff ff       	call   41d0 <quotearg_n_options>
481b:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
4820:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
4827:	00 00
4829:	75 0a                	jne    4835 <quotearg_n_style_mem+0x85>
482b:	48 83 c4 48          	add    rsp,0x48
482f:	c3                   	ret
4830:	e8 ab cc ff ff       	call   14e0 <abort@plt>
4835:	e8 66 cd ff ff       	call   15a0 <__stack_chk_fail@plt>
483a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004840 <quotearg_style>:
4840:	48 89 f2             	mov    rdx,rsi
4843:	89 fe                	mov    esi,edi
4845:	31 ff                	xor    edi,edi
4847:	e9 d4 fe ff ff       	jmp    4720 <quotearg_n_style>
484c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004850 <quotearg_style_mem>:
4850:	48 89 d1             	mov    rcx,rdx
4853:	48 89 f2             	mov    rdx,rsi
4856:	89 fe                	mov    esi,edi
4858:	31 ff                	xor    edi,edi
485a:	e9 51 ff ff ff       	jmp    47b0 <quotearg_n_style_mem>
485f:	90                   	nop

0000000000004860 <quotearg_char_mem>:
4860:	48 83 ec 48          	sub    rsp,0x48
4864:	89 d1                	mov    ecx,edx
4866:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
486d:	00 00
486f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
4874:	31 c0                	xor    eax,eax
4876:	48 8b 05 b3 49 20 00 	mov    rax,QWORD PTR [rip+0x2049b3]        # 209230 <default_quoting_options+0x30>
487d:	49 89 e0             	mov    r8,rsp
4880:	83 e1 1f             	and    ecx,0x1f
4883:	66 0f 6f 05 75 49 20 	movdqa xmm0,XMMWORD PTR [rip+0x204975]        # 209200 <default_quoting_options>
488a:	00
488b:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
4890:	89 d0                	mov    eax,edx
4892:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
4896:	c0 e8 05             	shr    al,0x5
4899:	0f b6 c0             	movzx  eax,al
489c:	4d 8d 4c 80 08       	lea    r9,[r8+rax*4+0x8]
48a1:	66 0f 6f 05 67 49 20 	movdqa xmm0,XMMWORD PTR [rip+0x204967]        # 209210 <default_quoting_options+0x10>
48a8:	00
48a9:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
48ae:	66 0f 6f 05 6a 49 20 	movdqa xmm0,XMMWORD PTR [rip+0x20496a]        # 209220 <default_quoting_options+0x20>
48b5:	00
48b6:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
48bb:	41 8b 11             	mov    edx,DWORD PTR [r9]
48be:	89 d0                	mov    eax,edx
48c0:	d3 e8                	shr    eax,cl
48c2:	f7 d0                	not    eax
48c4:	83 e0 01             	and    eax,0x1
48c7:	d3 e0                	shl    eax,cl
48c9:	4c 89 c1             	mov    rcx,r8
48cc:	31 d0                	xor    eax,edx
48ce:	48 89 f2             	mov    rdx,rsi
48d1:	48 89 fe             	mov    rsi,rdi
48d4:	41 89 01             	mov    DWORD PTR [r9],eax
48d7:	31 ff                	xor    edi,edi
48d9:	e8 f2 f8 ff ff       	call   41d0 <quotearg_n_options>
48de:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
48e3:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
48ea:	00 00
48ec:	75 05                	jne    48f3 <quotearg_char_mem+0x93>
48ee:	48 83 c4 48          	add    rsp,0x48
48f2:	c3                   	ret
48f3:	e8 a8 cc ff ff       	call   15a0 <__stack_chk_fail@plt>
48f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
48ff:	00

0000000000004900 <quotearg_char>:
4900:	40 0f be d6          	movsx  edx,sil
4904:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
490b:	e9 50 ff ff ff       	jmp    4860 <quotearg_char_mem>

0000000000004910 <quotearg_colon>:
4910:	ba 3a 00 00 00       	mov    edx,0x3a
4915:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
491c:	e9 3f ff ff ff       	jmp    4860 <quotearg_char_mem>
4921:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4926:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
492d:	00 00 00

0000000000004930 <quotearg_colon_mem>:
4930:	ba 3a 00 00 00       	mov    edx,0x3a
4935:	e9 26 ff ff ff       	jmp    4860 <quotearg_char_mem>
493a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004940 <quotearg_n_style_colon>:
4940:	48 83 ec 48          	sub    rsp,0x48
4944:	48 89 d0             	mov    rax,rdx
4947:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
494e:	00 00
4950:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
4955:	31 d2                	xor    edx,edx
4957:	83 fe 0a             	cmp    esi,0xa
495a:	74 68                	je     49c4 <quotearg_n_style_colon+0x84>
495c:	89 34 24             	mov    DWORD PTR [rsp],esi
495f:	48 89 e1             	mov    rcx,rsp
4962:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4969:	48 89 c6             	mov    rsi,rax
496c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
4973:	00 00
4975:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x4000000
497c:	00 04
497e:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
4985:	00 00
4987:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
498e:	00 00
4990:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
4997:	00 00
4999:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
49a0:	00 00
49a2:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
49a9:	00
49aa:	e8 21 f8 ff ff       	call   41d0 <quotearg_n_options>
49af:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
49b4:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
49bb:	00 00
49bd:	75 0a                	jne    49c9 <quotearg_n_style_colon+0x89>
49bf:	48 83 c4 48          	add    rsp,0x48
49c3:	c3                   	ret
49c4:	e8 17 cb ff ff       	call   14e0 <abort@plt>
49c9:	e8 d2 cb ff ff       	call   15a0 <__stack_chk_fail@plt>
49ce:	66 90                	xchg   ax,ax

00000000000049d0 <quotearg_n_custom_mem>:
49d0:	48 83 ec 48          	sub    rsp,0x48
49d4:	49 89 c9             	mov    r9,rcx
49d7:	48 8b 0d 52 48 20 00 	mov    rcx,QWORD PTR [rip+0x204852]        # 209230 <default_quoting_options+0x30>
49de:	66 0f 6f 05 1a 48 20 	movdqa xmm0,XMMWORD PTR [rip+0x20481a]        # 209200 <default_quoting_options>
49e5:	00
49e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
49ed:	00 00
49ef:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
49f4:	31 c0                	xor    eax,eax
49f6:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
49fa:	48 85 f6             	test   rsi,rsi
49fd:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
4a02:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [rsp],0xa
4a09:	66 0f 6f 05 ff 47 20 	movdqa xmm0,XMMWORD PTR [rip+0x2047ff]        # 209210 <default_quoting_options+0x10>
4a10:	00
4a11:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
4a16:	66 0f 6f 05 02 48 20 	movdqa xmm0,XMMWORD PTR [rip+0x204802]        # 209220 <default_quoting_options+0x20>
4a1d:	00
4a1e:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
4a23:	74 32                	je     4a57 <quotearg_n_custom_mem+0x87>
4a25:	48 85 d2             	test   rdx,rdx
4a28:	74 2d                	je     4a57 <quotearg_n_custom_mem+0x87>
4a2a:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
4a2f:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
4a34:	48 89 e1             	mov    rcx,rsp
4a37:	4c 89 c2             	mov    rdx,r8
4a3a:	4c 89 ce             	mov    rsi,r9
4a3d:	e8 8e f7 ff ff       	call   41d0 <quotearg_n_options>
4a42:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
4a47:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
4a4e:	00 00
4a50:	75 0a                	jne    4a5c <quotearg_n_custom_mem+0x8c>
4a52:	48 83 c4 48          	add    rsp,0x48
4a56:	c3                   	ret
4a57:	e8 84 ca ff ff       	call   14e0 <abort@plt>
4a5c:	e8 3f cb ff ff       	call   15a0 <__stack_chk_fail@plt>
4a61:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4a66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4a6d:	00 00 00

0000000000004a70 <quotearg_n_custom>:
4a70:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
4a77:	e9 54 ff ff ff       	jmp    49d0 <quotearg_n_custom_mem>
4a7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004a80 <quotearg_custom>:
4a80:	48 89 d1             	mov    rcx,rdx
4a83:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
4a8a:	48 89 f2             	mov    rdx,rsi
4a8d:	48 89 fe             	mov    rsi,rdi
4a90:	31 ff                	xor    edi,edi
4a92:	e9 39 ff ff ff       	jmp    49d0 <quotearg_n_custom_mem>
4a97:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4a9e:	00 00

0000000000004aa0 <quotearg_custom_mem>:
4aa0:	49 89 c8             	mov    r8,rcx
4aa3:	48 89 d1             	mov    rcx,rdx
4aa6:	48 89 f2             	mov    rdx,rsi
4aa9:	48 89 fe             	mov    rsi,rdi
4aac:	31 ff                	xor    edi,edi
4aae:	e9 1d ff ff ff       	jmp    49d0 <quotearg_n_custom_mem>
4ab3:	0f 1f 00             	nop    DWORD PTR [rax]
4ab6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4abd:	00 00 00

0000000000004ac0 <quote_n_mem>:
4ac0:	48 8d 0d 59 45 20 00 	lea    rcx,[rip+0x204559]        # 209020 <quote_quoting_options>
4ac7:	e9 04 f7 ff ff       	jmp    41d0 <quotearg_n_options>
4acc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004ad0 <quote_mem>:
4ad0:	48 8d 0d 49 45 20 00 	lea    rcx,[rip+0x204549]        # 209020 <quote_quoting_options>
4ad7:	48 89 f2             	mov    rdx,rsi
4ada:	48 89 fe             	mov    rsi,rdi
4add:	31 ff                	xor    edi,edi
4adf:	e9 ec f6 ff ff       	jmp    41d0 <quotearg_n_options>
4ae4:	66 90                	xchg   ax,ax
4ae6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4aed:	00 00 00

0000000000004af0 <quote_n>:
4af0:	48 8d 0d 29 45 20 00 	lea    rcx,[rip+0x204529]        # 209020 <quote_quoting_options>
4af7:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4afe:	e9 cd f6 ff ff       	jmp    41d0 <quotearg_n_options>
4b03:	0f 1f 00             	nop    DWORD PTR [rax]
4b06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4b0d:	00 00 00

0000000000004b10 <quote>:
4b10:	48 8d 0d 09 45 20 00 	lea    rcx,[rip+0x204509]        # 209020 <quote_quoting_options>
4b17:	48 89 fe             	mov    rsi,rdi
4b1a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4b21:	31 ff                	xor    edi,edi
4b23:	e9 a8 f6 ff ff       	jmp    41d0 <quotearg_n_options>
4b28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4b2f:	00

0000000000004b30 <version_etc_arn>:
4b30:	41 57                	push   r15
4b32:	41 56                	push   r14
4b34:	41 55                	push   r13
4b36:	41 54                	push   r12
4b38:	4d 89 cc             	mov    r12,r9
4b3b:	55                   	push   rbp
4b3c:	53                   	push   rbx
4b3d:	48 89 fd             	mov    rbp,rdi
4b40:	4c 89 c3             	mov    rbx,r8
4b43:	48 83 ec 28          	sub    rsp,0x28
4b47:	48 85 f6             	test   rsi,rsi
4b4a:	0f 84 18 01 00 00    	je     4c68 <version_etc_arn+0x138>
4b50:	49 89 d0             	mov    r8,rdx
4b53:	48 8d 15 2e 1d 00 00 	lea    rdx,[rip+0x1d2e]        # 6888 <quoting_style_vals+0x28>
4b5a:	49 89 c9             	mov    r9,rcx
4b5d:	31 c0                	xor    eax,eax
4b5f:	48 89 f1             	mov    rcx,rsi
4b62:	be 01 00 00 00       	mov    esi,0x1
4b67:	e8 44 cc ff ff       	call   17b0 <__fprintf_chk@plt>
4b6c:	48 8d 35 28 1d 00 00 	lea    rsi,[rip+0x1d28]        # 689b <quoting_style_vals+0x3b>
4b73:	31 ff                	xor    edi,edi
4b75:	ba 05 00 00 00       	mov    edx,0x5
4b7a:	e8 f1 c9 ff ff       	call   1570 <dcgettext@plt>
4b7f:	48 8d 15 3a 20 00 00 	lea    rdx,[rip+0x203a]        # 6bc0 <version_etc_copyright>
4b86:	48 89 c1             	mov    rcx,rax
4b89:	41 b8 e3 07 00 00    	mov    r8d,0x7e3
4b8f:	be 01 00 00 00       	mov    esi,0x1
4b94:	48 89 ef             	mov    rdi,rbp
4b97:	31 c0                	xor    eax,eax
4b99:	e8 12 cc ff ff       	call   17b0 <__fprintf_chk@plt>
4b9e:	48 8d 35 83 1d 00 00 	lea    rsi,[rip+0x1d83]        # 6928 <quoting_style_vals+0xc8>
4ba5:	31 ff                	xor    edi,edi
4ba7:	ba 05 00 00 00       	mov    edx,0x5
4bac:	e8 bf c9 ff ff       	call   1570 <dcgettext@plt>
4bb1:	48 89 ee             	mov    rsi,rbp
4bb4:	48 89 c7             	mov    rdi,rax
4bb7:	e8 b4 ca ff ff       	call   1670 <fputs_unlocked@plt>
4bbc:	49 83 fc 09          	cmp    r12,0x9
4bc0:	0f 87 3a 03 00 00    	ja     4f00 <version_etc_arn+0x3d0>
4bc6:	48 8d 15 b7 1f 00 00 	lea    rdx,[rip+0x1fb7]        # 6b84 <quoting_style_vals+0x324>
4bcd:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
4bd1:	48 01 d0             	add    rax,rdx
4bd4:	ff e0                	jmp    rax
4bd6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4bdd:	00 00 00
4be0:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
4be4:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
4be8:	48 8d 35 a9 1e 00 00 	lea    rsi,[rip+0x1ea9]        # 6a98 <quoting_style_vals+0x238>
4bef:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
4bf3:	ba 05 00 00 00       	mov    edx,0x5
4bf8:	31 ff                	xor    edi,edi
4bfa:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
4bfe:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
4c02:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
4c07:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
4c0b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
4c0f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
4c13:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
4c18:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4c1b:	e8 50 c9 ff ff       	call   1570 <dcgettext@plt>
4c20:	48 83 ec 08          	sub    rsp,0x8
4c24:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
4c29:	48 89 c2             	mov    rdx,rax
4c2c:	48 89 d9             	mov    rcx,rbx
4c2f:	be 01 00 00 00       	mov    esi,0x1
4c34:	48 89 ef             	mov    rdi,rbp
4c37:	31 c0                	xor    eax,eax
4c39:	41 51                	push   r9
4c3b:	41 55                	push   r13
4c3d:	41 54                	push   r12
4c3f:	41 57                	push   r15
4c41:	41 56                	push   r14
4c43:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
4c48:	4c 8b 44 24 38       	mov    r8,QWORD PTR [rsp+0x38]
4c4d:	e8 5e cb ff ff       	call   17b0 <__fprintf_chk@plt>
4c52:	48 83 c4 30          	add    rsp,0x30
4c56:	48 83 c4 28          	add    rsp,0x28
4c5a:	5b                   	pop    rbx
4c5b:	5d                   	pop    rbp
4c5c:	41 5c                	pop    r12
4c5e:	41 5d                	pop    r13
4c60:	41 5e                	pop    r14
4c62:	41 5f                	pop    r15
4c64:	c3                   	ret
4c65:	0f 1f 00             	nop    DWORD PTR [rax]
4c68:	49 89 c8             	mov    r8,rcx
4c6b:	48 89 d1             	mov    rcx,rdx
4c6e:	48 8d 15 1f 1c 00 00 	lea    rdx,[rip+0x1c1f]        # 6894 <quoting_style_vals+0x34>
4c75:	be 01 00 00 00       	mov    esi,0x1
4c7a:	31 c0                	xor    eax,eax
4c7c:	e8 2f cb ff ff       	call   17b0 <__fprintf_chk@plt>
4c81:	e9 e6 fe ff ff       	jmp    4b6c <version_etc_arn+0x3c>
4c86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4c8d:	00 00 00
4c90:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
4c94:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
4c98:	48 8d 35 29 1e 00 00 	lea    rsi,[rip+0x1e29]        # 6ac8 <quoting_style_vals+0x268>
4c9f:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
4ca3:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
4ca7:	ba 05 00 00 00       	mov    edx,0x5
4cac:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
4cb0:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
4cb4:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
4cb8:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
4cbc:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4cbf:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
4cc4:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
4cc9:	48 89 04 24          	mov    QWORD PTR [rsp],rax
4ccd:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
4cd2:	31 ff                	xor    edi,edi
4cd4:	e8 97 c8 ff ff       	call   1570 <dcgettext@plt>
4cd9:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
4cde:	41 52                	push   r10
4ce0:	e9 3f ff ff ff       	jmp    4c24 <version_etc_arn+0xf4>
4ce5:	0f 1f 00             	nop    DWORD PTR [rax]
4ce8:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4ceb:	48 8d 35 ad 1b 00 00 	lea    rsi,[rip+0x1bad]        # 689f <quoting_style_vals+0x3f>
4cf2:	ba 05 00 00 00       	mov    edx,0x5
4cf7:	31 ff                	xor    edi,edi
4cf9:	e8 72 c8 ff ff       	call   1570 <dcgettext@plt>
4cfe:	48 83 c4 28          	add    rsp,0x28
4d02:	48 89 d9             	mov    rcx,rbx
4d05:	48 89 ef             	mov    rdi,rbp
4d08:	5b                   	pop    rbx
4d09:	5d                   	pop    rbp
4d0a:	41 5c                	pop    r12
4d0c:	41 5d                	pop    r13
4d0e:	41 5e                	pop    r14
4d10:	41 5f                	pop    r15
4d12:	48 89 c2             	mov    rdx,rax
4d15:	be 01 00 00 00       	mov    esi,0x1
4d1a:	31 c0                	xor    eax,eax
4d1c:	e9 8f ca ff ff       	jmp    17b0 <__fprintf_chk@plt>
4d21:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4d28:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
4d2c:	48 8d 35 7c 1b 00 00 	lea    rsi,[rip+0x1b7c]        # 68af <quoting_style_vals+0x4f>
4d33:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4d36:	ba 05 00 00 00       	mov    edx,0x5
4d3b:	31 ff                	xor    edi,edi
4d3d:	e8 2e c8 ff ff       	call   1570 <dcgettext@plt>
4d42:	48 83 c4 28          	add    rsp,0x28
4d46:	4d 89 e0             	mov    r8,r12
4d49:	48 89 d9             	mov    rcx,rbx
4d4c:	48 89 ef             	mov    rdi,rbp
4d4f:	48 89 c2             	mov    rdx,rax
4d52:	be 01 00 00 00       	mov    esi,0x1
4d57:	5b                   	pop    rbx
4d58:	5d                   	pop    rbp
4d59:	41 5c                	pop    r12
4d5b:	41 5d                	pop    r13
4d5d:	41 5e                	pop    r14
4d5f:	41 5f                	pop    r15
4d61:	31 c0                	xor    eax,eax
4d63:	e9 48 ca ff ff       	jmp    17b0 <__fprintf_chk@plt>
4d68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4d6f:	00
4d70:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
4d74:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
4d78:	48 8d 35 47 1b 00 00 	lea    rsi,[rip+0x1b47]        # 68c6 <quoting_style_vals+0x66>
4d7f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4d82:	ba 05 00 00 00       	mov    edx,0x5
4d87:	31 ff                	xor    edi,edi
4d89:	e8 e2 c7 ff ff       	call   1570 <dcgettext@plt>
4d8e:	48 83 c4 28          	add    rsp,0x28
4d92:	4d 89 e9             	mov    r9,r13
4d95:	4d 89 e0             	mov    r8,r12
4d98:	48 89 d9             	mov    rcx,rbx
4d9b:	48 89 ef             	mov    rdi,rbp
4d9e:	48 89 c2             	mov    rdx,rax
4da1:	5b                   	pop    rbx
4da2:	5d                   	pop    rbp
4da3:	41 5c                	pop    r12
4da5:	41 5d                	pop    r13
4da7:	41 5e                	pop    r14
4da9:	41 5f                	pop    r15
4dab:	be 01 00 00 00       	mov    esi,0x1
4db0:	31 c0                	xor    eax,eax
4db2:	e9 f9 c9 ff ff       	jmp    17b0 <__fprintf_chk@plt>
4db7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4dbe:	00 00
4dc0:	48 8d 35 31 1c 00 00 	lea    rsi,[rip+0x1c31]        # 69f8 <quoting_style_vals+0x198>
4dc7:	ba 05 00 00 00       	mov    edx,0x5
4dcc:	31 ff                	xor    edi,edi
4dce:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
4dd2:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
4dd6:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
4dda:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4ddd:	e8 8e c7 ff ff       	call   1570 <dcgettext@plt>
4de2:	48 83 ec 08          	sub    rsp,0x8
4de6:	41 56                	push   r14
4de8:	48 89 c2             	mov    rdx,rax
4deb:	4d 89 e9             	mov    r9,r13
4dee:	4d 89 e0             	mov    r8,r12
4df1:	48 89 d9             	mov    rcx,rbx
4df4:	48 89 ef             	mov    rdi,rbp
4df7:	be 01 00 00 00       	mov    esi,0x1
4dfc:	31 c0                	xor    eax,eax
4dfe:	e8 ad c9 ff ff       	call   17b0 <__fprintf_chk@plt>
4e03:	58                   	pop    rax
4e04:	5a                   	pop    rdx
4e05:	48 83 c4 28          	add    rsp,0x28
4e09:	5b                   	pop    rbx
4e0a:	5d                   	pop    rbp
4e0b:	41 5c                	pop    r12
4e0d:	41 5d                	pop    r13
4e0f:	41 5e                	pop    r14
4e11:	41 5f                	pop    r15
4e13:	c3                   	ret
4e14:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4e18:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
4e1c:	48 8d 35 f5 1b 00 00 	lea    rsi,[rip+0x1bf5]        # 6a18 <quoting_style_vals+0x1b8>
4e23:	ba 05 00 00 00       	mov    edx,0x5
4e28:	31 ff                	xor    edi,edi
4e2a:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
4e2e:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
4e32:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
4e36:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4e39:	e8 32 c7 ff ff       	call   1570 <dcgettext@plt>
4e3e:	41 57                	push   r15
4e40:	eb a4                	jmp    4de6 <version_etc_arn+0x2b6>
4e42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4e48:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
4e4c:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
4e50:	48 8d 35 e9 1b 00 00 	lea    rsi,[rip+0x1be9]        # 6a40 <quoting_style_vals+0x1e0>
4e57:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
4e5b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
4e5f:	ba 05 00 00 00       	mov    edx,0x5
4e64:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
4e68:	31 ff                	xor    edi,edi
4e6a:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4e6d:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
4e71:	e8 fa c6 ff ff       	call   1570 <dcgettext@plt>
4e76:	48 83 ec 08          	sub    rsp,0x8
4e7a:	4d 89 e9             	mov    r9,r13
4e7d:	41 54                	push   r12
4e7f:	41 57                	push   r15
4e81:	41 56                	push   r14
4e83:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
4e88:	48 89 d9             	mov    rcx,rbx
4e8b:	48 89 c2             	mov    rdx,rax
4e8e:	48 89 ef             	mov    rdi,rbp
4e91:	be 01 00 00 00       	mov    esi,0x1
4e96:	31 c0                	xor    eax,eax
4e98:	e8 13 c9 ff ff       	call   17b0 <__fprintf_chk@plt>
4e9d:	48 83 c4 20          	add    rsp,0x20
4ea1:	48 83 c4 28          	add    rsp,0x28
4ea5:	5b                   	pop    rbx
4ea6:	5d                   	pop    rbp
4ea7:	41 5c                	pop    r12
4ea9:	41 5d                	pop    r13
4eab:	41 5e                	pop    r14
4ead:	41 5f                	pop    r15
4eaf:	c3                   	ret
4eb0:	4c 8b 4b 10          	mov    r9,QWORD PTR [rbx+0x10]
4eb4:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
4eb8:	48 8d 35 a9 1b 00 00 	lea    rsi,[rip+0x1ba9]        # 6a68 <quoting_style_vals+0x208>
4ebf:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
4ec3:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
4ec7:	ba 05 00 00 00       	mov    edx,0x5
4ecc:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
4ed0:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
4ed4:	31 ff                	xor    edi,edi
4ed6:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
4edb:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4ede:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
4ee2:	e8 89 c6 ff ff       	call   1570 <dcgettext@plt>
4ee7:	41 55                	push   r13
4ee9:	41 54                	push   r12
4eeb:	41 57                	push   r15
4eed:	41 56                	push   r14
4eef:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
4ef4:	eb 8d                	jmp    4e83 <version_etc_arn+0x353>
4ef6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4efd:	00 00 00
4f00:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
4f04:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
4f08:	ba 05 00 00 00       	mov    edx,0x5
4f0d:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
4f11:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
4f15:	48 8d 35 e4 1b 00 00 	lea    rsi,[rip+0x1be4]        # 6b00 <quoting_style_vals+0x2a0>
4f1c:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
4f20:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
4f24:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
4f28:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
4f2c:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
4f31:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
4f36:	48 89 04 24          	mov    QWORD PTR [rsp],rax
4f3a:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
4f3f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
4f42:	e9 8b fd ff ff       	jmp    4cd2 <version_etc_arn+0x1a2>
4f47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4f4e:	00 00

0000000000004f50 <version_etc_ar>:
4f50:	45 31 c9             	xor    r9d,r9d
4f53:	49 83 38 00          	cmp    QWORD PTR [r8],0x0
4f57:	74 12                	je     4f6b <version_etc_ar+0x1b>
4f59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4f60:	49 83 c1 01          	add    r9,0x1
4f64:	4b 83 3c c8 00       	cmp    QWORD PTR [r8+r9*8],0x0
4f69:	75 f5                	jne    4f60 <version_etc_ar+0x10>
4f6b:	e9 c0 fb ff ff       	jmp    4b30 <version_etc_arn>

0000000000004f70 <version_etc_va>:
4f70:	48 83 ec 68          	sub    rsp,0x68
4f74:	4d 89 c2             	mov    r10,r8
4f77:	45 31 c9             	xor    r9d,r9d
4f7a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
4f81:	00 00
4f83:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
4f88:	31 c0                	xor    eax,eax
4f8a:	49 89 e0             	mov    r8,rsp
4f8d:	0f 1f 00             	nop    DWORD PTR [rax]
4f90:	41 8b 02             	mov    eax,DWORD PTR [r10]
4f93:	83 f8 2f             	cmp    eax,0x2f
4f96:	77 42                	ja     4fda <version_etc_va+0x6a>
4f98:	41 89 c3             	mov    r11d,eax
4f9b:	4d 03 5a 10          	add    r11,QWORD PTR [r10+0x10]
4f9f:	83 c0 08             	add    eax,0x8
4fa2:	41 89 02             	mov    DWORD PTR [r10],eax
4fa5:	49 8b 03             	mov    rax,QWORD PTR [r11]
4fa8:	48 85 c0             	test   rax,rax
4fab:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
4faf:	74 0a                	je     4fbb <version_etc_va+0x4b>
4fb1:	49 83 c1 01          	add    r9,0x1
4fb5:	49 83 f9 0a          	cmp    r9,0xa
4fb9:	75 d5                	jne    4f90 <version_etc_va+0x20>
4fbb:	e8 70 fb ff ff       	call   4b30 <version_etc_arn>
4fc0:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
4fc5:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
4fcc:	00 00
4fce:	75 05                	jne    4fd5 <version_etc_va+0x65>
4fd0:	48 83 c4 68          	add    rsp,0x68
4fd4:	c3                   	ret
4fd5:	e8 c6 c5 ff ff       	call   15a0 <__stack_chk_fail@plt>
4fda:	4d 8b 5a 08          	mov    r11,QWORD PTR [r10+0x8]
4fde:	49 8d 43 08          	lea    rax,[r11+0x8]
4fe2:	49 89 42 08          	mov    QWORD PTR [r10+0x8],rax
4fe6:	eb bd                	jmp    4fa5 <version_etc_va+0x35>
4fe8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4fef:	00

0000000000004ff0 <version_etc>:
4ff0:	55                   	push   rbp
4ff1:	53                   	push   rbx
4ff2:	41 ba 20 00 00 00    	mov    r10d,0x20
4ff8:	45 31 db             	xor    r11d,r11d
4ffb:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
5002:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5009:	00 00
500b:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
5010:	31 c0                	xor    eax,eax
5012:	48 8d 84 24 d0 00 00 	lea    rax,[rsp+0xd0]
5019:	00
501a:	4c 89 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],r8
5021:	00
5022:	48 8d 9c 24 d0 00 00 	lea    rbx,[rsp+0xd0]
5029:	00
502a:	4c 8d 44 24 20       	lea    r8,[rsp+0x20]
502f:	4c 89 8c 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],r9
5036:	00
5037:	c7 44 24 08 20 00 00 	mov    DWORD PTR [rsp+0x8],0x20
503e:	00
503f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
5044:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
504b:	00
504c:	45 31 c9             	xor    r9d,r9d
504f:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
5054:	48 89 c5             	mov    rbp,rax
5057:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
505e:	00 00
5060:	41 83 fa 2f          	cmp    r10d,0x2f
5064:	77 56                	ja     50bc <version_etc+0xcc>
5066:	44 89 d0             	mov    eax,r10d
5069:	41 bb 01 00 00 00    	mov    r11d,0x1
506f:	41 83 c2 08          	add    r10d,0x8
5073:	48 01 e8             	add    rax,rbp
5076:	48 8b 00             	mov    rax,QWORD PTR [rax]
5079:	48 85 c0             	test   rax,rax
507c:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
5080:	74 0a                	je     508c <version_etc+0x9c>
5082:	49 83 c1 01          	add    r9,0x1
5086:	49 83 f9 0a          	cmp    r9,0xa
508a:	75 d4                	jne    5060 <version_etc+0x70>
508c:	45 84 db             	test   r11b,r11b
508f:	75 24                	jne    50b5 <version_etc+0xc5>
5091:	e8 9a fa ff ff       	call   4b30 <version_etc_arn>
5096:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
509b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
50a2:	00 00
50a4:	75 0a                	jne    50b0 <version_etc+0xc0>
50a6:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
50ad:	5b                   	pop    rbx
50ae:	5d                   	pop    rbp
50af:	c3                   	ret
50b0:	e8 eb c4 ff ff       	call   15a0 <__stack_chk_fail@plt>
50b5:	44 89 54 24 08       	mov    DWORD PTR [rsp+0x8],r10d
50ba:	eb d5                	jmp    5091 <version_etc+0xa1>
50bc:	48 89 d8             	mov    rax,rbx
50bf:	48 83 c3 08          	add    rbx,0x8
50c3:	eb b1                	jmp    5076 <version_etc+0x86>
50c5:	90                   	nop
50c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
50cd:	00 00 00

00000000000050d0 <emit_bug_reporting_address>:
50d0:	53                   	push   rbx
50d1:	48 8d 35 0a 18 00 00 	lea    rsi,[rip+0x180a]        # 68e2 <quoting_style_vals+0x82>
50d8:	ba 05 00 00 00       	mov    edx,0x5
50dd:	31 ff                	xor    edi,edi
50df:	e8 8c c4 ff ff       	call   1570 <dcgettext@plt>
50e4:	48 8d 15 0c 18 00 00 	lea    rdx,[rip+0x180c]        # 68f7 <quoting_style_vals+0x97>
50eb:	48 89 c6             	mov    rsi,rax
50ee:	bf 01 00 00 00       	mov    edi,0x1
50f3:	31 c0                	xor    eax,eax
50f5:	e8 36 c6 ff ff       	call   1730 <__printf_chk@plt>
50fa:	48 8d 35 0c 18 00 00 	lea    rsi,[rip+0x180c]        # 690d <quoting_style_vals+0xad>
5101:	ba 05 00 00 00       	mov    edx,0x5
5106:	31 ff                	xor    edi,edi
5108:	e8 63 c4 ff ff       	call   1570 <dcgettext@plt>
510d:	48 8d 0d 7c 10 00 00 	lea    rcx,[rip+0x107c]        # 6190 <_IO_stdin_used+0x4f0>
5114:	48 8d 15 24 0c 00 00 	lea    rdx,[rip+0xc24]        # 5d3f <_IO_stdin_used+0x9f>
511b:	48 89 c6             	mov    rsi,rax
511e:	bf 01 00 00 00       	mov    edi,0x1
5123:	31 c0                	xor    eax,eax
5125:	e8 06 c6 ff ff       	call   1730 <__printf_chk@plt>
512a:	48 8b 1d 57 3f 20 00 	mov    rbx,QWORD PTR [rip+0x203f57]        # 209088 <stdout@@GLIBC_2.2.5>
5131:	48 8d 35 08 1a 00 00 	lea    rsi,[rip+0x1a08]        # 6b40 <quoting_style_vals+0x2e0>
5138:	31 ff                	xor    edi,edi
513a:	ba 05 00 00 00       	mov    edx,0x5
513f:	e8 2c c4 ff ff       	call   1570 <dcgettext@plt>
5144:	48 89 de             	mov    rsi,rbx
5147:	48 89 c7             	mov    rdi,rax
514a:	5b                   	pop    rbx
514b:	e9 20 c5 ff ff       	jmp    1670 <fputs_unlocked@plt>

0000000000005150 <xmalloc>:
5150:	53                   	push   rbx
5151:	48 89 fb             	mov    rbx,rdi
5154:	e8 67 c5 ff ff       	call   16c0 <malloc@plt>
5159:	48 85 c0             	test   rax,rax
515c:	75 05                	jne    5163 <xmalloc+0x13>
515e:	48 85 db             	test   rbx,rbx
5161:	75 02                	jne    5165 <xmalloc+0x15>
5163:	5b                   	pop    rbx
5164:	c3                   	ret
5165:	e8 36 02 00 00       	call   53a0 <xalloc_die>
516a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005170 <xnmalloc>:
5170:	48 89 f8             	mov    rax,rdi
5173:	48 f7 e6             	mul    rsi
5176:	48 89 c7             	mov    rdi,rax
5179:	0f 90 c0             	seto   al
517c:	48 85 ff             	test   rdi,rdi
517f:	78 0a                	js     518b <xnmalloc+0x1b>
5181:	0f b6 c0             	movzx  eax,al
5184:	48 85 c0             	test   rax,rax
5187:	75 02                	jne    518b <xnmalloc+0x1b>
5189:	eb c5                	jmp    5150 <xmalloc>
518b:	48 83 ec 08          	sub    rsp,0x8
518f:	e8 0c 02 00 00       	call   53a0 <xalloc_die>
5194:	66 90                	xchg   ax,ax
5196:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
519d:	00 00 00

00000000000051a0 <xcharalloc>:
51a0:	eb ae                	jmp    5150 <xmalloc>
51a2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
51a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
51ad:	00 00 00

00000000000051b0 <xrealloc>:
51b0:	48 85 f6             	test   rsi,rsi
51b3:	53                   	push   rbx
51b4:	48 89 f3             	mov    rbx,rsi
51b7:	75 05                	jne    51be <xrealloc+0xe>
51b9:	48 85 ff             	test   rdi,rdi
51bc:	75 1a                	jne    51d8 <xrealloc+0x28>
51be:	48 89 de             	mov    rsi,rbx
51c1:	e8 4a c5 ff ff       	call   1710 <realloc@plt>
51c6:	48 85 c0             	test   rax,rax
51c9:	75 05                	jne    51d0 <xrealloc+0x20>
51cb:	48 85 db             	test   rbx,rbx
51ce:	75 11                	jne    51e1 <xrealloc+0x31>
51d0:	5b                   	pop    rbx
51d1:	c3                   	ret
51d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
51d8:	e8 f3 c2 ff ff       	call   14d0 <free@plt>
51dd:	31 c0                	xor    eax,eax
51df:	5b                   	pop    rbx
51e0:	c3                   	ret
51e1:	e8 ba 01 00 00       	call   53a0 <xalloc_die>
51e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
51ed:	00 00 00

00000000000051f0 <xnrealloc>:
51f0:	48 89 f0             	mov    rax,rsi
51f3:	48 f7 e2             	mul    rdx
51f6:	48 89 c6             	mov    rsi,rax
51f9:	0f 90 c0             	seto   al
51fc:	48 85 f6             	test   rsi,rsi
51ff:	78 0a                	js     520b <xnrealloc+0x1b>
5201:	0f b6 c0             	movzx  eax,al
5204:	48 85 c0             	test   rax,rax
5207:	75 02                	jne    520b <xnrealloc+0x1b>
5209:	eb a5                	jmp    51b0 <xrealloc>
520b:	48 83 ec 08          	sub    rsp,0x8
520f:	e8 8c 01 00 00       	call   53a0 <xalloc_die>
5214:	66 90                	xchg   ax,ax
5216:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
521d:	00 00 00

0000000000005220 <x2nrealloc>:
5220:	48 85 ff             	test   rdi,rdi
5223:	49 89 d1             	mov    r9,rdx
5226:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
5229:	74 35                	je     5260 <x2nrealloc+0x40>
522b:	31 d2                	xor    edx,edx
522d:	48 b8 54 55 55 55 55 	movabs rax,0x5555555555555554
5234:	55 55 55
5237:	49 f7 f1             	div    r9
523a:	48 39 c8             	cmp    rax,rcx
523d:	76 3c                	jbe    527b <x2nrealloc+0x5b>
523f:	48 89 c8             	mov    rax,rcx
5242:	48 d1 e8             	shr    rax,1
5245:	48 8d 4c 08 01       	lea    rcx,[rax+rcx*1+0x1]
524a:	48 89 0e             	mov    QWORD PTR [rsi],rcx
524d:	49 0f af c9          	imul   rcx,r9
5251:	48 89 ce             	mov    rsi,rcx
5254:	e9 57 ff ff ff       	jmp    51b0 <xrealloc>
5259:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5260:	48 85 c9             	test   rcx,rcx
5263:	74 23                	je     5288 <x2nrealloc+0x68>
5265:	48 89 c8             	mov    rax,rcx
5268:	49 f7 e1             	mul    r9
526b:	0f 90 c2             	seto   dl
526e:	48 85 c0             	test   rax,rax
5271:	0f b6 d2             	movzx  edx,dl
5274:	78 05                	js     527b <x2nrealloc+0x5b>
5276:	48 85 d2             	test   rdx,rdx
5279:	74 cf                	je     524a <x2nrealloc+0x2a>
527b:	48 83 ec 08          	sub    rsp,0x8
527f:	e8 1c 01 00 00       	call   53a0 <xalloc_die>
5284:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5288:	31 d2                	xor    edx,edx
528a:	b8 80 00 00 00       	mov    eax,0x80
528f:	45 31 c0             	xor    r8d,r8d
5292:	49 f7 f1             	div    r9
5295:	48 85 c0             	test   rax,rax
5298:	41 0f 94 c0          	sete   r8b
529c:	49 8d 0c 00          	lea    rcx,[r8+rax*1]
52a0:	eb c3                	jmp    5265 <x2nrealloc+0x45>
52a2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
52a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
52ad:	00 00 00

00000000000052b0 <x2realloc>:
52b0:	48 85 ff             	test   rdi,rdi
52b3:	48 8b 06             	mov    rax,QWORD PTR [rsi]
52b6:	74 28                	je     52e0 <x2realloc+0x30>
52b8:	48 ba 53 55 55 55 55 	movabs rdx,0x5555555555555553
52bf:	55 55 55
52c2:	48 39 d0             	cmp    rax,rdx
52c5:	77 2a                	ja     52f1 <x2realloc+0x41>
52c7:	48 89 c2             	mov    rdx,rax
52ca:	48 d1 ea             	shr    rdx,1
52cd:	48 8d 44 02 01       	lea    rax,[rdx+rax*1+0x1]
52d2:	48 89 06             	mov    QWORD PTR [rsi],rax
52d5:	48 89 c6             	mov    rsi,rax
52d8:	e9 d3 fe ff ff       	jmp    51b0 <xrealloc>
52dd:	0f 1f 00             	nop    DWORD PTR [rax]
52e0:	48 85 c0             	test   rax,rax
52e3:	ba 80 00 00 00       	mov    edx,0x80
52e8:	48 0f 44 c2          	cmove  rax,rdx
52ec:	48 85 c0             	test   rax,rax
52ef:	79 e1                	jns    52d2 <x2realloc+0x22>
52f1:	48 83 ec 08          	sub    rsp,0x8
52f5:	e8 a6 00 00 00       	call   53a0 <xalloc_die>
52fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005300 <xzalloc>:
5300:	53                   	push   rbx
5301:	48 89 fb             	mov    rbx,rdi
5304:	e8 47 fe ff ff       	call   5150 <xmalloc>
5309:	48 89 da             	mov    rdx,rbx
530c:	31 f6                	xor    esi,esi
530e:	48 89 c7             	mov    rdi,rax
5311:	5b                   	pop    rbx
5312:	e9 19 c3 ff ff       	jmp    1630 <memset@plt>
5317:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
531e:	00 00

0000000000005320 <xcalloc>:
5320:	48 89 f8             	mov    rax,rdi
5323:	48 83 ec 08          	sub    rsp,0x8
5327:	48 f7 e6             	mul    rsi
532a:	0f 90 c2             	seto   dl
532d:	48 85 c0             	test   rax,rax
5330:	78 17                	js     5349 <xcalloc+0x29>
5332:	0f b6 d2             	movzx  edx,dl
5335:	48 85 d2             	test   rdx,rdx
5338:	75 0f                	jne    5349 <xcalloc+0x29>
533a:	e8 41 c3 ff ff       	call   1680 <calloc@plt>
533f:	48 85 c0             	test   rax,rax
5342:	74 05                	je     5349 <xcalloc+0x29>
5344:	48 83 c4 08          	add    rsp,0x8
5348:	c3                   	ret
5349:	e8 52 00 00 00       	call   53a0 <xalloc_die>
534e:	66 90                	xchg   ax,ax

0000000000005350 <xmemdup>:
5350:	55                   	push   rbp
5351:	53                   	push   rbx
5352:	48 89 fd             	mov    rbp,rdi
5355:	48 89 f7             	mov    rdi,rsi
5358:	48 89 f3             	mov    rbx,rsi
535b:	48 83 ec 08          	sub    rsp,0x8
535f:	e8 ec fd ff ff       	call   5150 <xmalloc>
5364:	48 83 c4 08          	add    rsp,0x8
5368:	48 89 da             	mov    rdx,rbx
536b:	48 89 ee             	mov    rsi,rbp
536e:	5b                   	pop    rbx
536f:	5d                   	pop    rbp
5370:	48 89 c7             	mov    rdi,rax
5373:	e9 28 c3 ff ff       	jmp    16a0 <memcpy@plt>
5378:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
537f:	00

0000000000005380 <xstrdup>:
5380:	53                   	push   rbx
5381:	48 89 fb             	mov    rbx,rdi
5384:	e8 07 c2 ff ff       	call   1590 <strlen@plt>
5389:	48 89 df             	mov    rdi,rbx
538c:	48 8d 70 01          	lea    rsi,[rax+0x1]
5390:	5b                   	pop    rbx
5391:	eb bd                	jmp    5350 <xmemdup>
5393:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
539a:	00 00 00
539d:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000053a0 <xalloc_die>:
53a0:	48 8d 35 48 18 00 00 	lea    rsi,[rip+0x1848]        # 6bef <version_etc_copyright+0x2f>
53a7:	48 83 ec 08          	sub    rsp,0x8
53ab:	ba 05 00 00 00       	mov    edx,0x5
53b0:	31 ff                	xor    edi,edi
53b2:	e8 b9 c1 ff ff       	call   1570 <dcgettext@plt>
53b7:	8b 3d 5b 3c 20 00    	mov    edi,DWORD PTR [rip+0x203c5b]        # 209018 <exit_failure>
53bd:	48 8d 15 a0 0f 00 00 	lea    rdx,[rip+0xfa0]        # 6364 <b32+0x104>
53c4:	48 89 c1             	mov    rcx,rax
53c7:	31 f6                	xor    esi,esi
53c9:	31 c0                	xor    eax,eax
53cb:	e8 80 c3 ff ff       	call   1750 <error@plt>
53d0:	e8 0b c1 ff ff       	call   14e0 <abort@plt>
53d5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
53dc:	00 00 00
53df:	90                   	nop

00000000000053e0 <xnumtoumax>:
53e0:	41 57                	push   r15
53e2:	41 56                	push   r14
53e4:	49 89 cf             	mov    r15,rcx
53e7:	41 55                	push   r13
53e9:	41 54                	push   r12
53eb:	49 89 d6             	mov    r14,rdx
53ee:	55                   	push   rbp
53ef:	53                   	push   rbx
53f0:	89 f2                	mov    edx,esi
53f2:	31 f6                	xor    esi,esi
53f4:	49 89 fc             	mov    r12,rdi
53f7:	4d 89 cd             	mov    r13,r9
53fa:	48 83 ec 18          	sub    rsp,0x18
53fe:	48 89 e1             	mov    rcx,rsp
5401:	8b 5c 24 50          	mov    ebx,DWORD PTR [rsp+0x50]
5405:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
540c:	00 00
540e:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
5413:	31 c0                	xor    eax,eax
5415:	e8 f6 00 00 00       	call   5510 <xstrtoumax>
541a:	85 c0                	test   eax,eax
541c:	0f 85 8e 00 00 00    	jne    54b0 <xnumtoumax+0xd0>
5422:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
5426:	4c 39 f5             	cmp    rbp,r14
5429:	72 05                	jb     5430 <xnumtoumax+0x50>
542b:	4c 39 fd             	cmp    rbp,r15
542e:	76 54                	jbe    5484 <xnumtoumax+0xa4>
5430:	e8 bb c0 ff ff       	call   14f0 <__errno_location@plt>
5435:	48 81 fd 00 00 00 40 	cmp    rbp,0x40000000
543c:	49 89 c6             	mov    r14,rax
543f:	19 c0                	sbb    eax,eax
5441:	83 e0 d7             	and    eax,0xffffffd7
5444:	83 c0 4b             	add    eax,0x4b
5447:	41 89 06             	mov    DWORD PTR [r14],eax
544a:	4c 89 e7             	mov    rdi,r12
544d:	e8 be f6 ff ff       	call   4b10 <quote>
5452:	41 8b 36             	mov    esi,DWORD PTR [r14]
5455:	49 89 c0             	mov    r8,rax
5458:	b8 00 00 00 00       	mov    eax,0x0
545d:	48 8d 15 fc 0e 00 00 	lea    rdx,[rip+0xefc]        # 6360 <b32+0x100>
5464:	4c 89 e9             	mov    rcx,r13
5467:	83 fe 16             	cmp    esi,0x16
546a:	0f 44 f0             	cmove  esi,eax
546d:	85 db                	test   ebx,ebx
546f:	b8 01 00 00 00       	mov    eax,0x1
5474:	0f 44 d8             	cmove  ebx,eax
5477:	31 c0                	xor    eax,eax
5479:	89 df                	mov    edi,ebx
547b:	e8 d0 c2 ff ff       	call   1750 <error@plt>
5480:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
5484:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
5489:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
5490:	00 00
5492:	48 89 e8             	mov    rax,rbp
5495:	75 44                	jne    54db <xnumtoumax+0xfb>
5497:	48 83 c4 18          	add    rsp,0x18
549b:	5b                   	pop    rbx
549c:	5d                   	pop    rbp
549d:	41 5c                	pop    r12
549f:	41 5d                	pop    r13
54a1:	41 5e                	pop    r14
54a3:	41 5f                	pop    r15
54a5:	c3                   	ret
54a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
54ad:	00 00 00
54b0:	89 c5                	mov    ebp,eax
54b2:	e8 39 c0 ff ff       	call   14f0 <__errno_location@plt>
54b7:	83 fd 01             	cmp    ebp,0x1
54ba:	49 89 c6             	mov    r14,rax
54bd:	74 11                	je     54d0 <xnumtoumax+0xf0>
54bf:	83 fd 03             	cmp    ebp,0x3
54c2:	75 86                	jne    544a <xnumtoumax+0x6a>
54c4:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
54ca:	e9 7b ff ff ff       	jmp    544a <xnumtoumax+0x6a>
54cf:	90                   	nop
54d0:	c7 00 4b 00 00 00    	mov    DWORD PTR [rax],0x4b
54d6:	e9 6f ff ff ff       	jmp    544a <xnumtoumax+0x6a>
54db:	e8 c0 c0 ff ff       	call   15a0 <__stack_chk_fail@plt>

00000000000054e0 <xdectoumax>:
54e0:	48 83 ec 10          	sub    rsp,0x10
54e4:	41 51                	push   r9
54e6:	4d 89 c1             	mov    r9,r8
54e9:	49 89 c8             	mov    r8,rcx
54ec:	48 89 d1             	mov    rcx,rdx
54ef:	48 89 f2             	mov    rdx,rsi
54f2:	be 0a 00 00 00       	mov    esi,0xa
54f7:	e8 e4 fe ff ff       	call   53e0 <xnumtoumax>
54fc:	48 83 c4 18          	add    rsp,0x18
5500:	c3                   	ret
5501:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5508:	00 00 00
550b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005510 <xstrtoumax>:
5510:	41 57                	push   r15
5512:	41 56                	push   r14
5514:	41 55                	push   r13
5516:	41 54                	push   r12
5518:	55                   	push   rbp
5519:	53                   	push   rbx
551a:	48 83 ec 28          	sub    rsp,0x28
551e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5525:	00 00
5527:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
552c:	31 c0                	xor    eax,eax
552e:	83 fa 24             	cmp    edx,0x24
5531:	0f 87 5e 03 00 00    	ja     5895 <xstrtoumax+0x385>
5537:	48 8d 44 24 10       	lea    rax,[rsp+0x10]
553c:	49 89 f7             	mov    r15,rsi
553f:	48 85 f6             	test   rsi,rsi
5542:	48 89 fd             	mov    rbp,rdi
5545:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
5549:	49 89 ce             	mov    r14,rcx
554c:	4d 89 c5             	mov    r13,r8
554f:	4c 0f 44 f8          	cmove  r15,rax
5553:	e8 98 bf ff ff       	call   14f0 <__errno_location@plt>
5558:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
555e:	49 89 c4             	mov    r12,rax
5561:	0f b6 5d 00          	movzx  ebx,BYTE PTR [rbp+0x0]
5565:	e8 76 c2 ff ff       	call   17e0 <__ctype_b_loc@plt>
556a:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
556e:	48 8b 30             	mov    rsi,QWORD PTR [rax]
5571:	48 89 e8             	mov    rax,rbp
5574:	eb 11                	jmp    5587 <xstrtoumax+0x77>
5576:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
557d:	00 00 00
5580:	48 83 c0 01          	add    rax,0x1
5584:	0f b6 18             	movzx  ebx,BYTE PTR [rax]
5587:	0f b6 cb             	movzx  ecx,bl
558a:	f6 44 4e 01 20       	test   BYTE PTR [rsi+rcx*2+0x1],0x20
558f:	75 ef                	jne    5580 <xstrtoumax+0x70>
5591:	80 fb 2d             	cmp    bl,0x2d
5594:	74 52                	je     55e8 <xstrtoumax+0xd8>
5596:	31 c9                	xor    ecx,ecx
5598:	4c 89 fe             	mov    rsi,r15
559b:	48 89 ef             	mov    rdi,rbp
559e:	e8 7d c0 ff ff       	call   1620 <__strtoul_internal@plt>
55a3:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
55a6:	48 89 c3             	mov    rbx,rax
55a9:	48 39 e9             	cmp    rcx,rbp
55ac:	74 2a                	je     55d8 <xstrtoumax+0xc8>
55ae:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
55b2:	85 c0                	test   eax,eax
55b4:	74 62                	je     5618 <xstrtoumax+0x108>
55b6:	83 f8 22             	cmp    eax,0x22
55b9:	bd 01 00 00 00       	mov    ebp,0x1
55be:	75 28                	jne    55e8 <xstrtoumax+0xd8>
55c0:	4d 85 ed             	test   r13,r13
55c3:	74 09                	je     55ce <xstrtoumax+0xbe>
55c5:	44 0f b6 21          	movzx  r12d,BYTE PTR [rcx]
55c9:	45 84 e4             	test   r12b,r12b
55cc:	75 79                	jne    5647 <xstrtoumax+0x137>
55ce:	49 89 1e             	mov    QWORD PTR [r14],rbx
55d1:	eb 1a                	jmp    55ed <xstrtoumax+0xdd>
55d3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
55d8:	4d 85 ed             	test   r13,r13
55db:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
55e0:	75 3e                	jne    5620 <xstrtoumax+0x110>
55e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
55e8:	bd 04 00 00 00       	mov    ebp,0x4
55ed:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
55f2:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
55f9:	00 00
55fb:	89 e8                	mov    eax,ebp
55fd:	0f 85 8d 02 00 00    	jne    5890 <xstrtoumax+0x380>
5603:	48 83 c4 28          	add    rsp,0x28
5607:	5b                   	pop    rbx
5608:	5d                   	pop    rbp
5609:	41 5c                	pop    r12
560b:	41 5d                	pop    r13
560d:	41 5e                	pop    r14
560f:	41 5f                	pop    r15
5611:	c3                   	ret
5612:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5618:	31 ed                	xor    ebp,ebp
561a:	eb a4                	jmp    55c0 <xstrtoumax+0xb0>
561c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5620:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
5625:	45 84 e4             	test   r12b,r12b
5628:	74 be                	je     55e8 <xstrtoumax+0xd8>
562a:	41 0f be f4          	movsx  esi,r12b
562e:	4c 89 ef             	mov    rdi,r13
5631:	31 ed                	xor    ebp,ebp
5633:	e8 98 bf ff ff       	call   15d0 <strchr@plt>
5638:	48 85 c0             	test   rax,rax
563b:	bb 01 00 00 00       	mov    ebx,0x1
5640:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
5645:	74 a1                	je     55e8 <xstrtoumax+0xd8>
5647:	41 0f be f4          	movsx  esi,r12b
564b:	4c 89 ef             	mov    rdi,r13
564e:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
5653:	e8 78 bf ff ff       	call   15d0 <strchr@plt>
5658:	48 85 c0             	test   rax,rax
565b:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
5660:	0f 84 c6 00 00 00    	je     572c <xstrtoumax+0x21c>
5666:	41 8d 44 24 bb       	lea    eax,[r12-0x45]
566b:	3c 2f                	cmp    al,0x2f
566d:	77 51                	ja     56c0 <xstrtoumax+0x1b0>
566f:	48 ba 45 89 30 00 44 	movabs rdx,0x814400308945
5676:	81 00 00
5679:	48 0f a3 c2          	bt     rdx,rax
567d:	73 41                	jae    56c0 <xstrtoumax+0x1b0>
567f:	be 30 00 00 00       	mov    esi,0x30
5684:	4c 89 ef             	mov    rdi,r13
5687:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
568c:	e8 3f bf ff ff       	call   15d0 <strchr@plt>
5691:	48 85 c0             	test   rax,rax
5694:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
5699:	74 25                	je     56c0 <xstrtoumax+0x1b0>
569b:	0f b6 41 01          	movzx  eax,BYTE PTR [rcx+0x1]
569f:	3c 44                	cmp    al,0x44
56a1:	74 0c                	je     56af <xstrtoumax+0x19f>
56a3:	3c 69                	cmp    al,0x69
56a5:	0f 84 cd 01 00 00    	je     5878 <xstrtoumax+0x368>
56ab:	3c 42                	cmp    al,0x42
56ad:	75 11                	jne    56c0 <xstrtoumax+0x1b0>
56af:	bf 02 00 00 00       	mov    edi,0x2
56b4:	be e8 03 00 00       	mov    esi,0x3e8
56b9:	eb 0f                	jmp    56ca <xstrtoumax+0x1ba>
56bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
56c0:	bf 01 00 00 00       	mov    edi,0x1
56c5:	be 00 04 00 00       	mov    esi,0x400
56ca:	41 83 ec 42          	sub    r12d,0x42
56ce:	41 80 fc 35          	cmp    r12b,0x35
56d2:	77 58                	ja     572c <xstrtoumax+0x21c>
56d4:	48 8d 15 6d 15 00 00 	lea    rdx,[rip+0x156d]        # 6c48 <version_etc_copyright+0x88>
56db:	45 0f b6 e4          	movzx  r12d,r12b
56df:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
56e3:	48 01 d0             	add    rax,rdx
56e6:	ff e0                	jmp    rax
56e8:	48 89 d8             	mov    rax,rbx
56eb:	48 f7 e6             	mul    rsi
56ee:	0f 80 ed 01 00 00    	jo     58e1 <xstrtoumax+0x3d1>
56f4:	45 31 c0             	xor    r8d,r8d
56f7:	48 f7 e6             	mul    rsi
56fa:	0f 80 d2 01 00 00    	jo     58d2 <xstrtoumax+0x3c2>
5700:	48 89 c3             	mov    rbx,rax
5703:	44 09 c5             	or     ebp,r8d
5706:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
570d:	00 00 00
5710:	48 63 ff             	movsxd rdi,edi
5713:	89 e8                	mov    eax,ebp
5715:	48 01 f9             	add    rcx,rdi
5718:	83 c8 02             	or     eax,0x2
571b:	49 89 0f             	mov    QWORD PTR [r15],rcx
571e:	80 39 00             	cmp    BYTE PTR [rcx],0x0
5721:	49 89 1e             	mov    QWORD PTR [r14],rbx
5724:	0f 45 e8             	cmovne ebp,eax
5727:	e9 c1 fe ff ff       	jmp    55ed <xstrtoumax+0xdd>
572c:	49 89 1e             	mov    QWORD PTR [r14],rbx
572f:	83 cd 02             	or     ebp,0x2
5732:	e9 b6 fe ff ff       	jmp    55ed <xstrtoumax+0xdd>
5737:	ba 02 00 00 00       	mov    edx,0x2
573c:	48 89 d0             	mov    rax,rdx
573f:	48 f7 e3             	mul    rbx
5742:	0f 80 96 00 00 00    	jo     57de <xstrtoumax+0x2ce>
5748:	48 01 db             	add    rbx,rbx
574b:	eb c3                	jmp    5710 <xstrtoumax+0x200>
574d:	ba 00 02 00 00       	mov    edx,0x200
5752:	48 89 d0             	mov    rax,rdx
5755:	48 f7 e3             	mul    rbx
5758:	0f 80 80 00 00 00    	jo     57de <xstrtoumax+0x2ce>
575e:	48 c1 e3 09          	shl    rbx,0x9
5762:	eb ac                	jmp    5710 <xstrtoumax+0x200>
5764:	41 b8 07 00 00 00    	mov    r8d,0x7
576a:	45 31 c9             	xor    r9d,r9d
576d:	0f 1f 00             	nop    DWORD PTR [rax]
5770:	48 89 d8             	mov    rax,rbx
5773:	48 f7 e6             	mul    rsi
5776:	48 89 c3             	mov    rbx,rax
5779:	0f 80 8f 01 00 00    	jo     590e <xstrtoumax+0x3fe>
577f:	41 83 e8 01          	sub    r8d,0x1
5783:	75 eb                	jne    5770 <xstrtoumax+0x260>
5785:	44 09 cd             	or     ebp,r9d
5788:	eb 86                	jmp    5710 <xstrtoumax+0x200>
578a:	41 b8 08 00 00 00    	mov    r8d,0x8
5790:	45 31 c9             	xor    r9d,r9d
5793:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5798:	48 89 d8             	mov    rax,rbx
579b:	48 f7 e6             	mul    rsi
579e:	48 89 c3             	mov    rbx,rax
57a1:	0f 80 49 01 00 00    	jo     58f0 <xstrtoumax+0x3e0>
57a7:	41 83 e8 01          	sub    r8d,0x1
57ab:	75 eb                	jne    5798 <xstrtoumax+0x288>
57ad:	eb d6                	jmp    5785 <xstrtoumax+0x275>
57af:	41 b8 04 00 00 00    	mov    r8d,0x4
57b5:	45 31 c9             	xor    r9d,r9d
57b8:	48 89 d8             	mov    rax,rbx
57bb:	48 f7 e6             	mul    rsi
57be:	48 89 c3             	mov    rbx,rax
57c1:	0f 80 fc 00 00 00    	jo     58c3 <xstrtoumax+0x3b3>
57c7:	41 83 e8 01          	sub    r8d,0x1
57cb:	75 eb                	jne    57b8 <xstrtoumax+0x2a8>
57cd:	eb b6                	jmp    5785 <xstrtoumax+0x275>
57cf:	48 89 d8             	mov    rax,rbx
57d2:	48 f7 e6             	mul    rsi
57d5:	48 89 c3             	mov    rbx,rax
57d8:	0f 81 32 ff ff ff    	jno    5710 <xstrtoumax+0x200>
57de:	bd 01 00 00 00       	mov    ebp,0x1
57e3:	48 83 cb ff          	or     rbx,0xffffffffffffffff
57e7:	e9 24 ff ff ff       	jmp    5710 <xstrtoumax+0x200>
57ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
57f0:	41 b8 05 00 00 00    	mov    r8d,0x5
57f6:	45 31 c9             	xor    r9d,r9d
57f9:	48 89 d8             	mov    rax,rbx
57fc:	48 f7 e6             	mul    rsi
57ff:	48 89 c3             	mov    rbx,rax
5802:	0f 80 f7 00 00 00    	jo     58ff <xstrtoumax+0x3ef>
5808:	41 83 e8 01          	sub    r8d,0x1
580c:	75 eb                	jne    57f9 <xstrtoumax+0x2e9>
580e:	e9 72 ff ff ff       	jmp    5785 <xstrtoumax+0x275>
5813:	41 b8 06 00 00 00    	mov    r8d,0x6
5819:	45 31 c9             	xor    r9d,r9d
581c:	48 89 d8             	mov    rax,rbx
581f:	48 f7 e6             	mul    rsi
5822:	48 89 c3             	mov    rbx,rax
5825:	0f 80 89 00 00 00    	jo     58b4 <xstrtoumax+0x3a4>
582b:	41 83 e8 01          	sub    r8d,0x1
582f:	75 eb                	jne    581c <xstrtoumax+0x30c>
5831:	e9 4f ff ff ff       	jmp    5785 <xstrtoumax+0x275>
5836:	ba 00 04 00 00       	mov    edx,0x400
583b:	48 89 d0             	mov    rax,rdx
583e:	48 f7 e3             	mul    rbx
5841:	70 9b                	jo     57de <xstrtoumax+0x2ce>
5843:	48 c1 e3 0a          	shl    rbx,0xa
5847:	e9 c4 fe ff ff       	jmp    5710 <xstrtoumax+0x200>
584c:	48 89 d8             	mov    rax,rbx
584f:	48 f7 e6             	mul    rsi
5852:	0f 80 c5 00 00 00    	jo     591d <xstrtoumax+0x40d>
5858:	45 31 c0             	xor    r8d,r8d
585b:	48 f7 e6             	mul    rsi
585e:	0f 81 93 fe ff ff    	jno    56f7 <xstrtoumax+0x1e7>
5864:	41 b8 01 00 00 00    	mov    r8d,0x1
586a:	48 83 c8 ff          	or     rax,0xffffffffffffffff
586e:	e9 84 fe ff ff       	jmp    56f7 <xstrtoumax+0x1e7>
5873:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5878:	31 ff                	xor    edi,edi
587a:	80 79 02 42          	cmp    BYTE PTR [rcx+0x2],0x42
587e:	be 00 04 00 00       	mov    esi,0x400
5883:	40 0f 94 c7          	sete   dil
5887:	8d 7c 3f 01          	lea    edi,[rdi+rdi*1+0x1]
588b:	e9 3a fe ff ff       	jmp    56ca <xstrtoumax+0x1ba>
5890:	e8 0b bd ff ff       	call   15a0 <__stack_chk_fail@plt>
5895:	48 8d 0d 84 14 00 00 	lea    rcx,[rip+0x1484]        # 6d20 <__PRETTY_FUNCTION__.4162>
589c:	48 8d 35 5d 13 00 00 	lea    rsi,[rip+0x135d]        # 6c00 <version_etc_copyright+0x40>
58a3:	48 8d 3d 76 13 00 00 	lea    rdi,[rip+0x1376]        # 6c20 <version_etc_copyright+0x60>
58aa:	ba 54 00 00 00       	mov    edx,0x54
58af:	e8 5c bd ff ff       	call   1610 <__assert_fail@plt>
58b4:	41 b9 01 00 00 00    	mov    r9d,0x1
58ba:	48 83 cb ff          	or     rbx,0xffffffffffffffff
58be:	e9 68 ff ff ff       	jmp    582b <xstrtoumax+0x31b>
58c3:	41 b9 01 00 00 00    	mov    r9d,0x1
58c9:	48 83 cb ff          	or     rbx,0xffffffffffffffff
58cd:	e9 f5 fe ff ff       	jmp    57c7 <xstrtoumax+0x2b7>
58d2:	41 b8 01 00 00 00    	mov    r8d,0x1
58d8:	48 83 cb ff          	or     rbx,0xffffffffffffffff
58dc:	e9 22 fe ff ff       	jmp    5703 <xstrtoumax+0x1f3>
58e1:	48 83 c8 ff          	or     rax,0xffffffffffffffff
58e5:	41 b8 01 00 00 00    	mov    r8d,0x1
58eb:	e9 07 fe ff ff       	jmp    56f7 <xstrtoumax+0x1e7>
58f0:	41 b9 01 00 00 00    	mov    r9d,0x1
58f6:	48 83 cb ff          	or     rbx,0xffffffffffffffff
58fa:	e9 a8 fe ff ff       	jmp    57a7 <xstrtoumax+0x297>
58ff:	41 b9 01 00 00 00    	mov    r9d,0x1
5905:	48 83 cb ff          	or     rbx,0xffffffffffffffff
5909:	e9 fa fe ff ff       	jmp    5808 <xstrtoumax+0x2f8>
590e:	41 b9 01 00 00 00    	mov    r9d,0x1
5914:	48 83 cb ff          	or     rbx,0xffffffffffffffff
5918:	e9 62 fe ff ff       	jmp    577f <xstrtoumax+0x26f>
591d:	41 b8 01 00 00 00    	mov    r8d,0x1
5923:	48 83 c8 ff          	or     rax,0xffffffffffffffff
5927:	e9 2f ff ff ff       	jmp    585b <xstrtoumax+0x34b>
592c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005930 <rpl_fclose>:
5930:	41 54                	push   r12
5932:	55                   	push   rbp
5933:	53                   	push   rbx
5934:	48 89 fb             	mov    rbx,rdi
5937:	e8 74 bd ff ff       	call   16b0 <fileno@plt>
593c:	85 c0                	test   eax,eax
593e:	48 89 df             	mov    rdi,rbx
5941:	78 54                	js     5997 <rpl_fclose+0x67>
5943:	e8 a8 bd ff ff       	call   16f0 <__freading@plt>
5948:	85 c0                	test   eax,eax
594a:	75 2c                	jne    5978 <rpl_fclose+0x48>
594c:	48 89 df             	mov    rdi,rbx
594f:	e8 5c 00 00 00       	call   59b0 <rpl_fflush>
5954:	85 c0                	test   eax,eax
5956:	74 3c                	je     5994 <rpl_fclose+0x64>
5958:	e8 93 bb ff ff       	call   14f0 <__errno_location@plt>
595d:	44 8b 20             	mov    r12d,DWORD PTR [rax]
5960:	48 89 df             	mov    rdi,rbx
5963:	48 89 c5             	mov    rbp,rax
5966:	e8 e5 bb ff ff       	call   1550 <fclose@plt>
596b:	45 85 e4             	test   r12d,r12d
596e:	75 30                	jne    59a0 <rpl_fclose+0x70>
5970:	5b                   	pop    rbx
5971:	5d                   	pop    rbp
5972:	41 5c                	pop    r12
5974:	c3                   	ret
5975:	0f 1f 00             	nop    DWORD PTR [rax]
5978:	48 89 df             	mov    rdi,rbx
597b:	e8 30 bd ff ff       	call   16b0 <fileno@plt>
5980:	31 f6                	xor    esi,esi
5982:	ba 01 00 00 00       	mov    edx,0x1
5987:	89 c7                	mov    edi,eax
5989:	e8 72 bc ff ff       	call   1600 <lseek@plt>
598e:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
5992:	75 b8                	jne    594c <rpl_fclose+0x1c>
5994:	48 89 df             	mov    rdi,rbx
5997:	5b                   	pop    rbx
5998:	5d                   	pop    rbp
5999:	41 5c                	pop    r12
599b:	e9 b0 bb ff ff       	jmp    1550 <fclose@plt>
59a0:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
59a4:	b8 ff ff ff ff       	mov    eax,0xffffffff
59a9:	eb c5                	jmp    5970 <rpl_fclose+0x40>
59ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000059b0 <rpl_fflush>:
59b0:	48 85 ff             	test   rdi,rdi
59b3:	53                   	push   rbx
59b4:	48 89 fb             	mov    rbx,rdi
59b7:	74 11                	je     59ca <rpl_fflush+0x1a>
59b9:	e8 32 bd ff ff       	call   16f0 <__freading@plt>
59be:	85 c0                	test   eax,eax
59c0:	74 08                	je     59ca <rpl_fflush+0x1a>
59c2:	f7 03 00 01 00 00    	test   DWORD PTR [rbx],0x100
59c8:	75 0e                	jne    59d8 <rpl_fflush+0x28>
59ca:	48 89 df             	mov    rdi,rbx
59cd:	5b                   	pop    rbx
59ce:	e9 fd bc ff ff       	jmp    16d0 <fflush@plt>
59d3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
59d8:	48 89 df             	mov    rdi,rbx
59db:	ba 01 00 00 00       	mov    edx,0x1
59e0:	31 f6                	xor    esi,esi
59e2:	e8 09 00 00 00       	call   59f0 <rpl_fseeko>
59e7:	48 89 df             	mov    rdi,rbx
59ea:	5b                   	pop    rbx
59eb:	e9 e0 bc ff ff       	jmp    16d0 <fflush@plt>

00000000000059f0 <rpl_fseeko>:
59f0:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
59f4:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
59f8:	74 06                	je     5a00 <rpl_fseeko+0x10>
59fa:	e9 61 bd ff ff       	jmp    1760 <fseeko@plt>
59ff:	90                   	nop
5a00:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
5a04:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
5a08:	75 f0                	jne    59fa <rpl_fseeko+0xa>
5a0a:	48 83 7f 48 00       	cmp    QWORD PTR [rdi+0x48],0x0
5a0f:	75 e9                	jne    59fa <rpl_fseeko+0xa>
5a11:	41 54                	push   r12
5a13:	55                   	push   rbp
5a14:	41 89 d4             	mov    r12d,edx
5a17:	53                   	push   rbx
5a18:	48 89 f5             	mov    rbp,rsi
5a1b:	48 89 fb             	mov    rbx,rdi
5a1e:	e8 8d bc ff ff       	call   16b0 <fileno@plt>
5a23:	44 89 e2             	mov    edx,r12d
5a26:	48 89 ee             	mov    rsi,rbp
5a29:	89 c7                	mov    edi,eax
5a2b:	e8 d0 bb ff ff       	call   1600 <lseek@plt>
5a30:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
5a34:	74 0c                	je     5a42 <rpl_fseeko+0x52>
5a36:	83 23 ef             	and    DWORD PTR [rbx],0xffffffef
5a39:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
5a40:	31 c0                	xor    eax,eax
5a42:	5b                   	pop    rbx
5a43:	5d                   	pop    rbp
5a44:	41 5c                	pop    r12
5a46:	c3                   	ret
5a47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5a4e:	00 00

0000000000005a50 <rpl_mbrtowc>:
5a50:	41 55                	push   r13
5a52:	41 54                	push   r12
5a54:	49 89 f5             	mov    r13,rsi
5a57:	55                   	push   rbp
5a58:	53                   	push   rbx
5a59:	48 89 fb             	mov    rbx,rdi
5a5c:	49 89 d4             	mov    r12,rdx
5a5f:	48 83 ec 18          	sub    rsp,0x18
5a63:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5a6a:	00 00
5a6c:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
5a71:	31 c0                	xor    eax,eax
5a73:	48 8d 44 24 04       	lea    rax,[rsp+0x4]
5a78:	48 85 ff             	test   rdi,rdi
5a7b:	48 0f 44 d8          	cmove  rbx,rax
5a7f:	48 89 df             	mov    rdi,rbx
5a82:	e8 39 bb ff ff       	call   15c0 <mbrtowc@plt>
5a87:	48 83 f8 fd          	cmp    rax,0xfffffffffffffffd
5a8b:	48 89 c5             	mov    rbp,rax
5a8e:	76 20                	jbe    5ab0 <rpl_mbrtowc+0x60>
5a90:	4d 85 e4             	test   r12,r12
5a93:	74 1b                	je     5ab0 <rpl_mbrtowc+0x60>
5a95:	31 ff                	xor    edi,edi
5a97:	e8 c4 00 00 00       	call   5b60 <hard_locale>
5a9c:	84 c0                	test   al,al
5a9e:	75 10                	jne    5ab0 <rpl_mbrtowc+0x60>
5aa0:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
5aa5:	bd 01 00 00 00       	mov    ebp,0x1
5aaa:	89 03                	mov    DWORD PTR [rbx],eax
5aac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5ab0:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
5ab5:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
5abc:	00 00
5abe:	48 89 e8             	mov    rax,rbp
5ac1:	75 0b                	jne    5ace <rpl_mbrtowc+0x7e>
5ac3:	48 83 c4 18          	add    rsp,0x18
5ac7:	5b                   	pop    rbx
5ac8:	5d                   	pop    rbp
5ac9:	41 5c                	pop    r12
5acb:	41 5d                	pop    r13
5acd:	c3                   	ret
5ace:	e8 cd ba ff ff       	call   15a0 <__stack_chk_fail@plt>
5ad3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5ada:	00 00 00
5add:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005ae0 <close_stream>:
5ae0:	41 54                	push   r12
5ae2:	55                   	push   rbp
5ae3:	48 89 fd             	mov    rbp,rdi
5ae6:	53                   	push   rbx
5ae7:	e8 34 ba ff ff       	call   1520 <__fpending@plt>
5aec:	8b 5d 00             	mov    ebx,DWORD PTR [rbp+0x0]
5aef:	48 89 ef             	mov    rdi,rbp
5af2:	49 89 c4             	mov    r12,rax
5af5:	e8 36 fe ff ff       	call   5930 <rpl_fclose>
5afa:	83 e3 20             	and    ebx,0x20
5afd:	85 db                	test   ebx,ebx
5aff:	75 17                	jne    5b18 <close_stream+0x38>
5b01:	85 c0                	test   eax,eax
5b03:	74 0a                	je     5b0f <close_stream+0x2f>
5b05:	4d 85 e4             	test   r12,r12
5b08:	b8 ff ff ff ff       	mov    eax,0xffffffff
5b0d:	74 39                	je     5b48 <close_stream+0x68>
5b0f:	5b                   	pop    rbx
5b10:	5d                   	pop    rbp
5b11:	41 5c                	pop    r12
5b13:	c3                   	ret
5b14:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5b18:	85 c0                	test   eax,eax
5b1a:	75 1c                	jne    5b38 <close_stream+0x58>
5b1c:	e8 cf b9 ff ff       	call   14f0 <__errno_location@plt>
5b21:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
5b27:	b8 ff ff ff ff       	mov    eax,0xffffffff
5b2c:	5b                   	pop    rbx
5b2d:	5d                   	pop    rbp
5b2e:	41 5c                	pop    r12
5b30:	c3                   	ret
5b31:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5b38:	5b                   	pop    rbx
5b39:	b8 ff ff ff ff       	mov    eax,0xffffffff
5b3e:	5d                   	pop    rbp
5b3f:	41 5c                	pop    r12
5b41:	c3                   	ret
5b42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5b48:	e8 a3 b9 ff ff       	call   14f0 <__errno_location@plt>
5b4d:	83 38 09             	cmp    DWORD PTR [rax],0x9
5b50:	5b                   	pop    rbx
5b51:	5d                   	pop    rbp
5b52:	41 5c                	pop    r12
5b54:	0f 95 c0             	setne  al
5b57:	0f b6 c0             	movzx  eax,al
5b5a:	f7 d8                	neg    eax
5b5c:	c3                   	ret
5b5d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005b60 <hard_locale>:
5b60:	48 83 ec 08          	sub    rsp,0x8
5b64:	31 f6                	xor    esi,esi
5b66:	e8 b5 bb ff ff       	call   1720 <setlocale@plt>
5b6b:	48 89 c2             	mov    rdx,rax
5b6e:	b8 01 00 00 00       	mov    eax,0x1
5b73:	48 85 d2             	test   rdx,rdx
5b76:	74 1d                	je     5b95 <hard_locale+0x35>
5b78:	48 8d 3d ac 11 00 00 	lea    rdi,[rip+0x11ac]        # 6d2b <__PRETTY_FUNCTION__.4162+0xb>
5b7f:	b9 02 00 00 00       	mov    ecx,0x2
5b84:	48 89 d6             	mov    rsi,rdx
5b87:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
5b89:	0f 97 c1             	seta   cl
5b8c:	80 d9 00             	sbb    cl,0x0
5b8f:	31 c0                	xor    eax,eax
5b91:	84 c9                	test   cl,cl
5b93:	75 0b                	jne    5ba0 <hard_locale+0x40>
5b95:	48 83 c4 08          	add    rsp,0x8
5b99:	c3                   	ret
5b9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5ba0:	48 8d 3d 86 11 00 00 	lea    rdi,[rip+0x1186]        # 6d2d <__PRETTY_FUNCTION__.4162+0xd>
5ba7:	b9 06 00 00 00       	mov    ecx,0x6
5bac:	48 89 d6             	mov    rsi,rdx
5baf:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
5bb1:	0f 97 c0             	seta   al
5bb4:	1c 00                	sbb    al,0x0
5bb6:	84 c0                	test   al,al
5bb8:	0f 95 c0             	setne  al
5bbb:	48 83 c4 08          	add    rsp,0x8
5bbf:	c3                   	ret

0000000000005bc0 <locale_charset>:
5bc0:	48 83 ec 08          	sub    rsp,0x8
5bc4:	bf 0e 00 00 00       	mov    edi,0xe
5bc9:	e8 12 bb ff ff       	call   16e0 <nl_langinfo@plt>
5bce:	48 85 c0             	test   rax,rax
5bd1:	74 1d                	je     5bf0 <locale_charset+0x30>
5bd3:	80 38 00             	cmp    BYTE PTR [rax],0x0
5bd6:	48 8d 15 56 11 00 00 	lea    rdx,[rip+0x1156]        # 6d33 <__PRETTY_FUNCTION__.4162+0x13>
5bdd:	48 0f 44 c2          	cmove  rax,rdx
5be1:	48 83 c4 08          	add    rsp,0x8
5be5:	c3                   	ret
5be6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5bed:	00 00 00
5bf0:	48 8d 05 3c 11 00 00 	lea    rax,[rip+0x113c]        # 6d33 <__PRETTY_FUNCTION__.4162+0x13>
5bf7:	48 83 c4 08          	add    rsp,0x8
5bfb:	c3                   	ret
5bfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005c00 <__libc_csu_init>:
5c00:	41 57                	push   r15
5c02:	41 56                	push   r14
5c04:	49 89 d7             	mov    r15,rdx
5c07:	41 55                	push   r13
5c09:	41 54                	push   r12
5c0b:	4c 8d 25 fe 2e 20 00 	lea    r12,[rip+0x202efe]        # 208b10 <__frame_dummy_init_array_entry>
5c12:	55                   	push   rbp
5c13:	48 8d 2d fe 2e 20 00 	lea    rbp,[rip+0x202efe]        # 208b18 <__init_array_end>
5c1a:	53                   	push   rbx
5c1b:	41 89 fd             	mov    r13d,edi
5c1e:	49 89 f6             	mov    r14,rsi
5c21:	4c 29 e5             	sub    rbp,r12
5c24:	48 83 ec 08          	sub    rsp,0x8
5c28:	48 c1 fd 03          	sar    rbp,0x3
5c2c:	e8 77 b8 ff ff       	call   14a8 <_init>
5c31:	48 85 ed             	test   rbp,rbp
5c34:	74 20                	je     5c56 <__libc_csu_init+0x56>
5c36:	31 db                	xor    ebx,ebx
5c38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5c3f:	00
5c40:	4c 89 fa             	mov    rdx,r15
5c43:	4c 89 f6             	mov    rsi,r14
5c46:	44 89 ef             	mov    edi,r13d
5c49:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
5c4d:	48 83 c3 01          	add    rbx,0x1
5c51:	48 39 dd             	cmp    rbp,rbx
5c54:	75 ea                	jne    5c40 <__libc_csu_init+0x40>
5c56:	48 83 c4 08          	add    rsp,0x8
5c5a:	5b                   	pop    rbx
5c5b:	5d                   	pop    rbp
5c5c:	41 5c                	pop    r12
5c5e:	41 5d                	pop    r13
5c60:	41 5e                	pop    r14
5c62:	41 5f                	pop    r15
5c64:	c3                   	ret
5c65:	90                   	nop
5c66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5c6d:	00 00 00

0000000000005c70 <__libc_csu_fini>:
5c70:	f3 c3                	repz ret
5c72:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5c79:	00 00 00
5c7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005c80 <atexit>:
5c80:	48 8b 15 81 33 20 00 	mov    rdx,QWORD PTR [rip+0x203381]        # 209008 <__dso_handle>
5c87:	31 f6                	xor    esi,esi
5c89:	e9 f2 ba ff ff       	jmp    1780 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000005c90 <_fini>:
5c90:	48 83 ec 08          	sub    rsp,0x8
5c94:	48 83 c4 08          	add    rsp,0x8
5c98:	c3                   	ret
