00001990(4): SUB RSP,0x8
00001994(7): MOV RAX,qword ptr [0x0021afc0]
0000199b(3): TEST RAX,RAX
0000199e(2): JZ 0x000019a2
000019a0(2): CALL RAX
000019a2(4): ADD RSP,0x8
000019a6(1): RET
000019b0(6): PUSH qword ptr [0x0021ad80]
000019b6(6): JMP qword ptr [0x0021ad88]
000019c0(6): JMP qword ptr [0x0021ad90]
000019c6(5): PUSH 0x0
000019cb(5): JMP 0x000019b0
000019d0(6): JMP qword ptr [0x0021ad98]
000019d6(5): PUSH 0x1
000019db(5): JMP 0x000019b0
000019e0(6): JMP qword ptr [0x0021ada0]
000019e6(5): PUSH 0x2
000019eb(5): JMP 0x000019b0
000019f0(6): JMP qword ptr [0x0021ada8]
000019f6(5): PUSH 0x3
000019fb(5): JMP 0x000019b0
00001a00(6): JMP qword ptr [0x0021adb0]
00001a06(5): PUSH 0x4
00001a0b(5): JMP 0x000019b0
00001a10(6): JMP qword ptr [0x0021adb8]
00001a16(5): PUSH 0x5
00001a1b(5): JMP 0x000019b0
00001a20(6): JMP qword ptr [0x0021adc0]
00001a26(5): PUSH 0x6
00001a2b(5): JMP 0x000019b0
00001a30(6): JMP qword ptr [0x0021adc8]
00001a36(5): PUSH 0x7
00001a3b(5): JMP 0x000019b0
00001a40(6): JMP qword ptr [0x0021add0]
00001a46(5): PUSH 0x8
00001a4b(5): JMP 0x000019b0
00001a50(6): JMP qword ptr [0x0021add8]
00001a56(5): PUSH 0x9
00001a5b(5): JMP 0x000019b0
00001a60(6): JMP qword ptr [0x0021ade0]
00001a66(5): PUSH 0xa
00001a6b(5): JMP 0x000019b0
00001a70(6): JMP qword ptr [0x0021ade8]
00001a76(5): PUSH 0xb
00001a7b(5): JMP 0x000019b0
00001a80(6): JMP qword ptr [0x0021adf0]
00001a86(5): PUSH 0xc
00001a8b(5): JMP 0x000019b0
00001a90(6): JMP qword ptr [0x0021adf8]
00001a96(5): PUSH 0xd
00001a9b(5): JMP 0x000019b0
00001aa0(6): JMP qword ptr [0x0021ae00]
00001aa6(5): PUSH 0xe
00001aab(5): JMP 0x000019b0
00001ab0(6): JMP qword ptr [0x0021ae08]
00001ab6(5): PUSH 0xf
00001abb(5): JMP 0x000019b0
00001ac0(6): JMP qword ptr [0x0021ae10]
00001ac6(5): PUSH 0x10
00001acb(5): JMP 0x000019b0
00001ad0(6): JMP qword ptr [0x0021ae18]
00001ad6(5): PUSH 0x11
00001adb(5): JMP 0x000019b0
00001ae0(6): JMP qword ptr [0x0021ae20]
00001ae6(5): PUSH 0x12
00001aeb(5): JMP 0x000019b0
00001af0(6): JMP qword ptr [0x0021ae28]
00001af6(5): PUSH 0x13
00001afb(5): JMP 0x000019b0
00001b00(6): JMP qword ptr [0x0021ae30]
00001b06(5): PUSH 0x14
00001b0b(5): JMP 0x000019b0
00001b10(6): JMP qword ptr [0x0021ae38]
00001b16(5): PUSH 0x15
00001b1b(5): JMP 0x000019b0
00001b20(6): JMP qword ptr [0x0021ae40]
00001b26(5): PUSH 0x16
00001b2b(5): JMP 0x000019b0
00001b30(6): JMP qword ptr [0x0021ae48]
00001b36(5): PUSH 0x17
00001b3b(5): JMP 0x000019b0
00001b40(6): JMP qword ptr [0x0021ae50]
00001b46(5): PUSH 0x18
00001b4b(5): JMP 0x000019b0
00001b50(6): JMP qword ptr [0x0021ae58]
00001b56(5): PUSH 0x19
00001b5b(5): JMP 0x000019b0
00001b60(6): JMP qword ptr [0x0021ae60]
00001b66(5): PUSH 0x1a
00001b6b(5): JMP 0x000019b0
00001b70(6): JMP qword ptr [0x0021ae68]
00001b76(5): PUSH 0x1b
00001b7b(5): JMP 0x000019b0
00001b80(6): JMP qword ptr [0x0021ae70]
00001b86(5): PUSH 0x1c
00001b8b(5): JMP 0x000019b0
00001b90(6): JMP qword ptr [0x0021ae78]
00001b96(5): PUSH 0x1d
00001b9b(5): JMP 0x000019b0
00001ba0(6): JMP qword ptr [0x0021ae80]
00001ba6(5): PUSH 0x1e
00001bab(5): JMP 0x000019b0
00001bb0(6): JMP qword ptr [0x0021ae88]
00001bb6(5): PUSH 0x1f
00001bbb(5): JMP 0x000019b0
00001bc0(6): JMP qword ptr [0x0021ae90]
00001bc6(5): PUSH 0x20
00001bcb(5): JMP 0x000019b0
00001bd0(6): JMP qword ptr [0x0021ae98]
00001bd6(5): PUSH 0x21
00001bdb(5): JMP 0x000019b0
00001be0(6): JMP qword ptr [0x0021aea0]
00001be6(5): PUSH 0x22
00001beb(5): JMP 0x000019b0
00001bf0(6): JMP qword ptr [0x0021aea8]
00001bf6(5): PUSH 0x23
00001bfb(5): JMP 0x000019b0
00001c00(6): JMP qword ptr [0x0021aeb0]
00001c06(5): PUSH 0x24
00001c0b(5): JMP 0x000019b0
00001c10(6): JMP qword ptr [0x0021aeb8]
00001c16(5): PUSH 0x25
00001c1b(5): JMP 0x000019b0
00001c20(6): JMP qword ptr [0x0021aec0]
00001c26(5): PUSH 0x26
00001c2b(5): JMP 0x000019b0
00001c30(6): JMP qword ptr [0x0021aec8]
00001c36(5): PUSH 0x27
00001c3b(5): JMP 0x000019b0
00001c40(6): JMP qword ptr [0x0021aed0]
00001c46(5): PUSH 0x28
00001c4b(5): JMP 0x000019b0
00001c50(6): JMP qword ptr [0x0021aed8]
00001c56(5): PUSH 0x29
00001c5b(5): JMP 0x000019b0
00001c60(6): JMP qword ptr [0x0021aee0]
00001c66(5): PUSH 0x2a
00001c6b(5): JMP 0x000019b0
00001c70(6): JMP qword ptr [0x0021aee8]
00001c76(5): PUSH 0x2b
00001c7b(5): JMP 0x000019b0
00001c80(6): JMP qword ptr [0x0021aef0]
00001c86(5): PUSH 0x2c
00001c8b(5): JMP 0x000019b0
00001c90(6): JMP qword ptr [0x0021aef8]
00001c96(5): PUSH 0x2d
00001c9b(5): JMP 0x000019b0
00001ca0(6): JMP qword ptr [0x0021af00]
00001ca6(5): PUSH 0x2e
00001cab(5): JMP 0x000019b0
00001cb0(6): JMP qword ptr [0x0021af08]
00001cb6(5): PUSH 0x2f
00001cbb(5): JMP 0x000019b0
00001cc0(6): JMP qword ptr [0x0021af10]
00001cc6(5): PUSH 0x30
00001ccb(5): JMP 0x000019b0
00001cd0(6): JMP qword ptr [0x0021af18]
00001cd6(5): PUSH 0x31
00001cdb(5): JMP 0x000019b0
00001ce0(6): JMP qword ptr [0x0021af20]
00001ce6(5): PUSH 0x32
00001ceb(5): JMP 0x000019b0
00001cf0(6): JMP qword ptr [0x0021af28]
00001cf6(5): PUSH 0x33
00001cfb(5): JMP 0x000019b0
00001d00(6): JMP qword ptr [0x0021af30]
00001d06(5): PUSH 0x34
00001d0b(5): JMP 0x000019b0
00001d10(6): JMP qword ptr [0x0021af38]
00001d16(5): PUSH 0x35
00001d1b(5): JMP 0x000019b0
00001d20(6): JMP qword ptr [0x0021af40]
00001d26(5): PUSH 0x36
00001d2b(5): JMP 0x000019b0
00001d30(6): JMP qword ptr [0x0021af48]
00001d36(5): PUSH 0x37
00001d3b(5): JMP 0x000019b0
00001d40(6): JMP qword ptr [0x0021af50]
00001d46(5): PUSH 0x38
00001d4b(5): JMP 0x000019b0
00001d50(6): JMP qword ptr [0x0021af58]
00001d56(5): PUSH 0x39
00001d5b(5): JMP 0x000019b0
00001d60(6): JMP qword ptr [0x0021af60]
00001d66(5): PUSH 0x3a
00001d6b(5): JMP 0x000019b0
00001d70(6): JMP qword ptr [0x0021af68]
00001d76(5): PUSH 0x3b
00001d7b(5): JMP 0x000019b0
00001d80(6): JMP qword ptr [0x0021af70]
00001d86(5): PUSH 0x3c
00001d8b(5): JMP 0x000019b0
00001d90(6): JMP qword ptr [0x0021af78]
00001d96(5): PUSH 0x3d
00001d9b(5): JMP 0x000019b0
00001da0(6): JMP qword ptr [0x0021af80]
00001da6(5): PUSH 0x3e
00001dab(5): JMP 0x000019b0
00001db0(6): JMP qword ptr [0x0021af88]
00001db6(5): PUSH 0x3f
00001dbb(5): JMP 0x000019b0
00001dc0(6): JMP qword ptr [0x0021af90]
00001dc6(5): PUSH 0x40
00001dcb(5): JMP 0x000019b0
00001dd0(6): JMP qword ptr [0x0021afe0]
00001de0(7): LEA RCX,[0x16160]
00001de7(7): LEA RSI,[0x15610]
00001dee(7): LEA RDI,[0x15f7d]
00001df5(4): SUB RSP,0x8
00001df9(5): MOV EDX,0xb3
00001dfe(5): CALL 0x00001b50
00001e03(10): NOP word ptr CS:[RAX + RAX*0x1]
00001e0d(3): NOP dword ptr [RAX]
00001e10(1): PUSH RBP
00001e11(1): PUSH RBX
00001e12(2): MOV EBP,EDI
00001e14(3): MOV RBX,RSI
00001e17(4): SUB RSP,0x8
00001e1b(3): MOV RDI,qword ptr [RSI]
00001e1e(5): CALL 0x00004780
00001e23(7): LEA RSI,[0x16761]
00001e2a(5): MOV EDI,0x6
00001e2f(5): CALL 0x00001ca0
00001e34(7): LEA RSI,[0x160e0]
00001e3b(7): LEA RDI,[0x1600e]
00001e42(5): CALL 0x00001a80
00001e47(7): LEA RDI,[0x1600e]
00001e4e(5): CALL 0x00001a50
00001e53(7): LEA RDI,[0x3ec0]
00001e5a(10): MOV dword ptr [0x0021b010],0x3
00001e64(5): CALL 0x000155b0
00001e69(7): LEA RAX,[0x160fd]
00001e70(2): PUSH 0x0
00001e72(7): LEA R9,[0x2330]
00001e79(7): LEA R8,[0x160f8]
00001e80(7): LEA RCX,[0x1600a]
00001e87(7): LEA RDX,[0x15f8f]
00001e8e(1): PUSH RAX
00001e8f(7): LEA RAX,[0x16109]
00001e96(3): MOV RSI,RBX
00001e99(2): MOV EDI,EBP
00001e9b(1): PUSH RAX
00001e9c(7): LEA RAX,[0x16118]
00001ea3(1): PUSH RAX
00001ea4(2): XOR EAX,EAX
00001ea6(5): CALL 0x00003f70
00001eab(4): ADD RSP,0x20
00001eaf(3): CMP EBP,0x1
00001eb2(6): JBE 0x00001fa0
00001eb8(4): MOV RDI,qword ptr [RBX + 0x8]
00001ebc(7): LEA RSI,[0x16124]
00001ec3(5): CALL 0x00001bd0
00001ec8(2): TEST EAX,EAX
00001eca(2): JNZ 0x00001ed9
00001ecc(3): CMP EBP,0x2
00001ecf(6): JZ 0x00001fa0
00001ed5(4): ADD RBX,0x8
00001ed9(4): ADD RBX,0x8
00001edd(5): MOV EDI,0x1
00001ee2(7): MOV qword ptr [0x0021b0d0],RBX
00001ee9(5): CALL 0x00003de0
00001eee(3): MOV RBX,RAX
00001ef1(7): MOV RAX,qword ptr [0x0021b0d0]
00001ef8(3): MOV RDX,qword ptr [RAX]
00001efb(3): TEST RDX,RDX
00001efe(2): JNZ 0x00001f6a
00001f00(2): MOV EAX,dword ptr [RBX]
00001f02(2): TEST EAX,EAX
00001f04(2): JZ 0x00001f26
00001f06(3): SUB EAX,0x1
00001f09(2): JNZ 0x00001f65
00001f0b(4): MOV RDI,qword ptr [RBX + 0x8]
00001f0f(5): CALL 0x00001a30
00001f14(3): MOV RDI,RBX
00001f17(5): CALL 0x000021e0
00001f1c(4): ADD RSP,0x8
00001f20(3): MOVZX EAX,AL
00001f23(1): POP RBX
00001f24(1): POP RBP
00001f25(1): RET
00001f26(7): MOV RDI,qword ptr [0x0021b088]
00001f2d(4): LEA RDX,[RBX + 0x8]
00001f31(5): MOV ESI,0xa
00001f36(5): CALL 0x00001b40
00001f3b(7): MOV RDI,qword ptr [0x0021b088]
00001f42(4): MOV RAX,qword ptr [RDI + 0x28]
00001f46(4): CMP RAX,qword ptr [RDI + 0x30]
00001f4a(2): JNC 0x00001f59
00001f4c(4): LEA RDX,[RAX + 0x1]
00001f50(4): MOV qword ptr [RDI + 0x28],RDX
00001f54(3): MOV byte ptr [RAX],0xa
00001f57(2): JMP 0x00001f14
00001f59(5): MOV ESI,0xa
00001f5e(5): CALL 0x00001b10
00001f63(2): JMP 0x00001f14
00001f65(5): CALL 0x000019e0
00001f6a(5): MOV ESI,0x8
00001f6f(2): XOR EDI,EDI
00001f71(5): CALL 0x000060a0
00001f76(7): LEA RSI,[0x15f58]
00001f7d(3): MOV RBX,RAX
00001f80(5): MOV EDX,0x5
00001f85(2): XOR EDI,EDI
00001f87(5): CALL 0x00001a90
00001f8c(3): MOV RCX,RBX
00001f8f(3): MOV RDX,RAX
00001f92(2): XOR ESI,ESI
00001f94(5): MOV EDI,0x2
00001f99(2): XOR EAX,EAX
00001f9b(5): CALL 0x00001d00
00001fa0(7): LEA RSI,[0x16127]
00001fa7(5): MOV EDX,0x5
00001fac(2): XOR EDI,EDI
00001fae(5): CALL 0x00001a90
00001fb3(2): XOR EDI,EDI
00001fb5(3): MOV RDX,RAX
00001fb8(2): XOR ESI,ESI
00001fba(2): XOR EAX,EAX
00001fbc(5): CALL 0x00001d00
00001fcb(5): NOP dword ptr [RAX + RAX*0x1]
00001fd0(2): XOR EBP,EBP
00001fd2(3): MOV R9,RDX
00001fd5(1): POP RSI
00001fd6(3): MOV RDX,RSP
00001fd9(4): AND RSP,-0x10
00001fdd(1): PUSH RAX
00001fde(1): PUSH RSP
00001fdf(7): LEA R8,[0x155a0]
00001fe6(7): LEA RCX,[0x15530]
00001fed(7): LEA RDI,[0x1e10]
00001ff4(6): CALL qword ptr [0x0021afb8]
00001ffa(1): HLT
00002000(7): LEA RDI,[0x21b080]
00002007(1): PUSH RBP
00002008(7): LEA RAX,[0x21b080]
0000200f(3): CMP RAX,RDI
00002012(3): MOV RBP,RSP
00002015(2): JZ 0x00002030
00002017(7): MOV RAX,qword ptr [0x0021afa0]
0000201e(3): TEST RAX,RAX
00002021(2): JZ 0x00002030
00002023(1): POP RBP
00002024(2): JMP RAX
00002030(1): POP RBP
00002031(1): RET
00002040(7): LEA RDI,[0x21b080]
00002047(7): LEA RSI,[0x21b080]
0000204e(1): PUSH RBP
0000204f(3): SUB RSI,RDI
00002052(3): MOV RBP,RSP
00002055(4): SAR RSI,0x3
00002059(3): MOV RAX,RSI
0000205c(4): SHR RAX,0x3f
00002060(3): ADD RSI,RAX
00002063(3): SAR RSI,1
00002066(2): JZ 0x00002080
00002068(7): MOV RAX,qword ptr [0x0021afd8]
0000206f(3): TEST RAX,RAX
00002072(2): JZ 0x00002080
00002074(1): POP RBP
00002075(2): JMP RAX
00002080(1): POP RBP
00002081(1): RET
00002090(7): CMP byte ptr [0x0021b0c8],0x0
00002097(2): JNZ 0x000020c8
00002099(8): CMP qword ptr [0x0021afe0],0x0
000020a1(1): PUSH RBP
000020a2(3): MOV RBP,RSP
000020a5(2): JZ 0x000020b3
000020a7(7): MOV RDI,qword ptr [0x0021b008]
000020ae(5): CALL 0x00001dd0
000020b3(5): CALL 0x00002000
000020b8(7): MOV byte ptr [0x0021b0c8],0x1
000020bf(1): POP RBP
000020c0(1): RET
000020c8(2): RET
000020d0(1): PUSH RBP
000020d1(3): MOV RBP,RSP
000020d4(1): POP RBP
000020d5(5): JMP 0x00002040
000020e0(1): PUSH RBX
000020e1(7): MOV RBX,qword ptr [0x0021b0d0]
000020e8(3): MOV RSI,RDI
000020eb(2): XOR EAX,EAX
000020ed(3): MOV RDI,qword ptr [RBX]
000020f0(3): TEST RDI,RDI
000020f3(2): JZ 0x0000210d
000020f5(5): CALL 0x00001bd0
000020fa(2): TEST EAX,EAX
000020fc(3): SETZ AL
000020ff(3): MOVZX EDX,AL
00002102(4): LEA RDX,[RBX + RDX*0x8]
00002106(7): MOV qword ptr [0x0021b0d0],RDX
0000210d(1): POP RBX
0000210e(1): RET
00002110(7): MOV RAX,qword ptr [0x0021b0d0]
00002117(4): CMP qword ptr [RAX],0x0
0000211b(2): JZ 0x0000211f
0000211d(2): RET
0000211f(1): PUSH RBX
00002120(4): MOV RDX,qword ptr [RAX + -0x8]
00002124(5): MOV ESI,0x8
00002129(2): XOR EDI,EDI
0000212b(5): CALL 0x000060a0
00002130(7): LEA RSI,[0x155e8]
00002137(3): MOV RBX,RAX
0000213a(5): MOV EDX,0x5
0000213f(2): XOR EDI,EDI
00002141(5): CALL 0x00001a90
00002146(3): MOV RCX,RBX
00002149(3): MOV RDX,RAX
0000214c(2): XOR ESI,ESI
0000214e(5): MOV EDI,0x2
00002153(2): XOR EAX,EAX
00002155(5): CALL 0x00001d00
0000215a(6): NOP word ptr [RAX + RAX*0x1]
00002160(1): PUSH RBP
00002161(1): PUSH RBX
00002162(3): MOV RBP,RDI
00002165(5): MOV EDI,0x18
0000216a(4): SUB RSP,0x8
0000216e(5): CALL 0x00006dc0
00002173(3): MOV RDI,RBP
00002176(3): MOV RBX,RAX
00002179(6): MOV dword ptr [RAX],0x1
0000217f(5): CALL 0x00006ff0
00002184(4): MOV qword ptr [RBX + 0x8],RAX
00002188(4): ADD RSP,0x8
0000218c(3): MOV RAX,RBX
0000218f(1): POP RBX
00002190(1): POP RBP
00002191(1): RET
000021a0(1): PUSH RBX
000021a1(3): CMP dword ptr [RDI],0x1
000021a4(3): MOV RBX,RDI
000021a7(2): JZ 0x000021c0
000021a9(4): LEA RDI,[RDI + 0x8]
000021ad(5): CALL 0x00001c50
000021b2(3): MOV RDI,RBX
000021b5(1): POP RBX
000021b6(5): JMP 0x000019d0
000021c0(4): MOV RDI,qword ptr [RDI + 0x8]
000021c4(5): CALL 0x000019d0
000021c9(3): MOV RDI,RBX
000021cc(1): POP RBX
000021cd(5): JMP 0x000019d0
000021e0(2): MOV EAX,dword ptr [RDI]
000021e2(2): TEST EAX,EAX
000021e4(2): JZ 0x00002228
000021e6(3): CMP EAX,0x1
000021e9(2): JNZ 0x0000223e
000021eb(4): MOV RDX,qword ptr [RDI + 0x8]
000021ef(5): MOV EAX,0x1
000021f4(3): MOVZX ECX,byte ptr [RDX]
000021f7(2): TEST CL,CL
000021f9(2): JZ 0x00002222
000021fb(2): XOR EAX,EAX
000021fd(3): CMP CL,0x2d
00002200(3): SETZ AL
00002203(3): ADD RAX,RDX
00002206(3): MOVZX EDX,byte ptr [RAX]
00002209(2): JMP 0x0000221b
00002210(4): ADD RAX,0x1
00002214(3): MOVZX EDX,byte ptr [RAX]
00002217(2): TEST DL,DL
00002219(2): JZ 0x00002238
0000221b(3): CMP DL,0x30
0000221e(2): JZ 0x00002210
00002220(2): XOR EAX,EAX
00002222(2): RET
00002228(3): MOV EAX,dword ptr [RDI + 0xc]
0000222b(2): TEST EAX,EAX
0000222d(3): SETZ AL
00002230(1): RET
00002238(5): MOV EAX,0x1
0000223d(1): RET
0000223e(4): SUB RSP,0x8
00002242(5): CALL 0x000019e0
00002247(9): NOP word ptr [RAX + RAX*0x1]
00002250(2): MOV EAX,dword ptr [RDI]
00002252(2): TEST EAX,EAX
00002254(2): JZ 0x000022a0
00002256(1): PUSH RBP
00002257(1): PUSH RBX
00002258(3): MOV RBX,RDI
0000225b(4): SUB RSP,0x8
0000225f(3): CMP EAX,0x1
00002262(2): JNZ 0x000022db
00002264(4): MOV RBP,qword ptr [RDI + 0x8]
00002268(2): XOR EDX,EDX
0000226a(4): CMP byte ptr [RBP],0x2d
0000226e(3): SETZ DL
00002271(3): ADD RDX,RBP
00002274(3): MOVSX EAX,byte ptr [RDX]
00002277(2): JMP 0x0000228b
00002280(4): ADD RDX,0x1
00002284(3): MOVSX EAX,byte ptr [RDX]
00002287(2): TEST AL,AL
00002289(2): JZ 0x000022b0
0000228b(3): SUB EAX,0x30
0000228e(3): CMP EAX,0x9
00002291(2): JBE 0x00002280
00002293(4): ADD RSP,0x8
00002297(2): XOR EAX,EAX
00002299(1): POP RBX
0000229a(1): POP RBP
0000229b(1): RET
000022a0(5): MOV EAX,0x1
000022a5(1): RET
000022b0(4): LEA RDI,[RBX + 0x8]
000022b4(3): MOV RSI,RBP
000022b7(5): MOV EDX,0xa
000022bc(5): CALL 0x00001d40
000022c1(3): MOV RDI,RBP
000022c4(5): CALL 0x000019d0
000022c9(6): MOV dword ptr [RBX],0x0
000022cf(4): ADD RSP,0x8
000022d3(5): MOV EAX,0x1
000022d8(1): POP RBX
000022d9(1): POP RBP
000022da(1): RET
000022db(5): CALL 0x000019e0
000022e0(2): PUSH R12
000022e2(1): PUSH RBP
000022e3(1): PUSH RBX
000022e4(2): MOV EAX,dword ptr [RDI]
000022e6(2): TEST EAX,EAX
000022e8(2): JZ 0x000022f8
000022ea(3): CMP EAX,0x1
000022ed(2): JNZ 0x00002328
000022ef(1): POP RBX
000022f0(1): POP RBP
000022f1(2): POP R12
000022f3(1): RET
000022f8(4): LEA RBP,[RDI + 0x8]
000022fc(3): MOV RBX,RDI
000022ff(5): MOV ESI,0xa
00002304(2): XOR EDI,EDI
00002306(3): MOV RDX,RBP
00002309(5): CALL 0x00001ac0
0000230e(3): MOV RDI,RBP
00002311(3): MOV R12,RAX
00002314(5): CALL 0x00001c50
00002319(4): MOV qword ptr [RBX + 0x8],R12
0000231d(6): MOV dword ptr [RBX],0x1
00002323(1): POP RBX
00002324(1): POP RBP
00002325(2): POP R12
00002327(1): RET
00002328(5): CALL 0x000019e0
0000232d(3): NOP dword ptr [RAX]
00002330(2): PUSH R13
00002332(2): PUSH R12
00002334(5): MOV EDX,0x5
00002339(1): PUSH RBP
0000233a(1): PUSH RBX
0000233b(2): MOV EBP,EDI
0000233d(7): SUB RSP,0x88
00002344(7): MOV RBX,qword ptr [0x0021b0e8]
0000234b(9): MOV RAX,qword ptr FS:[0x28]
00002354(5): MOV qword ptr [RSP + 0x78],RAX
00002359(2): XOR EAX,EAX
0000235b(2): TEST EDI,EDI
0000235d(2): JZ 0x0000238d
0000235f(7): LEA RSI,[0x15630]
00002366(2): XOR EDI,EDI
00002368(5): CALL 0x00001a90
0000236d(7): MOV RDI,qword ptr [0x0021b0c0]
00002374(3): MOV RDX,RAX
00002377(3): MOV RCX,RBX
0000237a(5): MOV ESI,0x1
0000237f(2): XOR EAX,EAX
00002381(5): CALL 0x00001d80
00002386(2): MOV EDI,EBP
00002388(5): CALL 0x00001d60
0000238d(7): LEA RSI,[0x15658]
00002394(2): XOR EDI,EDI
00002396(5): CALL 0x00001a90
0000239b(5): MOV EDI,0x1
000023a0(3): MOV RSI,RAX
000023a3(3): MOV RCX,RBX
000023a6(2): XOR EAX,EAX
000023a8(3): MOV RDX,RBX
000023ab(5): CALL 0x00001cb0
000023b0(7): MOV RDI,qword ptr [0x0021b088]
000023b7(4): MOV RAX,qword ptr [RDI + 0x28]
000023bb(4): CMP RAX,qword ptr [RDI + 0x30]
000023bf(6): JNC 0x00002708
000023c5(4): LEA RDX,[RAX + 0x1]
000023c9(4): MOV qword ptr [RDI + 0x28],RDX
000023cd(3): MOV byte ptr [RAX],0xa
000023d0(7): MOV RBX,qword ptr [0x0021b088]
000023d7(7): LEA RSI,[0x15680]
000023de(5): MOV EDX,0x5
000023e3(2): XOR EDI,EDI
000023e5(5): CALL 0x00001a90
000023ea(3): MOV RSI,RBX
000023ed(3): MOV RDI,RAX
000023f0(5): CALL 0x00001bb0
000023f5(7): MOV RBX,qword ptr [0x0021b088]
000023fc(7): LEA RSI,[0x156b0]
00002403(5): MOV EDX,0x5
00002408(2): XOR EDI,EDI
0000240a(5): CALL 0x00001a90
0000240f(3): MOV RSI,RBX
00002412(3): MOV RDI,RAX
00002415(5): CALL 0x00001bb0
0000241a(7): MOV RBX,qword ptr [0x0021b088]
00002421(7): LEA RSI,[0x156e8]
00002428(5): MOV EDX,0x5
0000242d(2): XOR EDI,EDI
0000242f(5): CALL 0x00001a90
00002434(3): MOV RSI,RBX
00002437(3): MOV RDI,RAX
0000243a(5): CALL 0x00001bb0
0000243f(7): MOV RBX,qword ptr [0x0021b088]
00002446(7): LEA RSI,[0x15800]
0000244d(5): MOV EDX,0x5
00002452(2): XOR EDI,EDI
00002454(5): CALL 0x00001a90
00002459(3): MOV RSI,RBX
0000245c(3): MOV RDI,RAX
0000245f(5): CALL 0x00001bb0
00002464(7): MOV RBX,qword ptr [0x0021b088]
0000246b(7): LEA RSI,[0x15928]
00002472(5): MOV EDX,0x5
00002477(2): XOR EDI,EDI
00002479(5): CALL 0x00001a90
0000247e(3): MOV RSI,RBX
00002481(3): MOV RDI,RAX
00002484(5): CALL 0x00001bb0
00002489(7): MOV RBX,qword ptr [0x0021b088]
00002490(7): LEA RSI,[0x159a0]
00002497(5): MOV EDX,0x5
0000249c(2): XOR EDI,EDI
0000249e(5): CALL 0x00001a90
000024a3(3): MOV RSI,RBX
000024a6(3): MOV RDI,RAX
000024a9(5): CALL 0x00001bb0
000024ae(7): MOV RBX,qword ptr [0x0021b088]
000024b5(7): LEA RSI,[0x15a60]
000024bc(5): MOV EDX,0x5
000024c1(2): XOR EDI,EDI
000024c3(5): CALL 0x00001a90
000024c8(3): MOV RSI,RBX
000024cb(3): MOV RDI,RAX
000024ce(5): CALL 0x00001bb0
000024d3(7): MOV RBX,qword ptr [0x0021b088]
000024da(7): LEA RSI,[0x15b98]
000024e1(5): MOV EDX,0x5
000024e6(2): XOR EDI,EDI
000024e8(5): CALL 0x00001a90
000024ed(3): MOV RSI,RBX
000024f0(3): MOV RDI,RAX
000024f3(5): CALL 0x00001bb0
000024f8(7): MOV RBX,qword ptr [0x0021b088]
000024ff(7): LEA RSI,[0x15c68]
00002506(5): MOV EDX,0x5
0000250b(2): XOR EDI,EDI
0000250d(5): CALL 0x00001a90
00002512(3): MOV RSI,RBX
00002515(3): MOV RDI,RAX
00002518(5): CALL 0x00001bb0
0000251d(7): MOV RBX,qword ptr [0x0021b088]
00002524(7): LEA RSI,[0x15d90]
0000252b(5): MOV EDX,0x5
00002530(2): XOR EDI,EDI
00002532(5): CALL 0x00001a90
00002537(3): MOV RSI,RBX
0000253a(3): MOV RDI,RAX
0000253d(7): LEA RBX,[0x15f8f]
00002544(5): CALL 0x00001bb0
00002549(7): LEA RAX,[0x15f94]
00002550(7): LEA RCX,[0x15fd5]
00002557(9): MOV qword ptr [RSP + 0x60],0x0
00002560(9): MOV qword ptr [RSP + 0x68],0x0
00002569(3): MOV RDX,RSP
0000256c(4): MOV qword ptr [RSP],RAX
00002570(7): LEA RAX,[0x15f96]
00002577(5): MOV qword ptr [RSP + 0x30],RCX
0000257c(7): LEA RCX,[0x15fdf]
00002583(5): MOV qword ptr [RSP + 0x8],RAX
00002588(7): LEA RAX,[0x1600e]
0000258f(5): MOV qword ptr [RSP + 0x40],RCX
00002594(7): LEA RCX,[0x15fe9]
0000259b(5): MOV qword ptr [RSP + 0x10],RAX
000025a0(7): LEA RAX,[0x15fa6]
000025a7(5): MOV qword ptr [RSP + 0x50],RCX
000025ac(5): MOV qword ptr [RSP + 0x18],RAX
000025b1(7): LEA RAX,[0x15fbc]
000025b8(5): MOV qword ptr [RSP + 0x20],RAX
000025bd(7): LEA RAX,[0x15fc6]
000025c4(5): MOV qword ptr [RSP + 0x28],RAX
000025c9(5): MOV qword ptr [RSP + 0x38],RAX
000025ce(5): MOV qword ptr [RSP + 0x48],RAX
000025d3(5): MOV qword ptr [RSP + 0x58],RAX
000025d8(8): NOP dword ptr [RAX + RAX*0x1]
000025e0(4): ADD RDX,0x10
000025e4(3): MOV RDI,qword ptr [RDX]
000025e7(3): TEST RDI,RDI
000025ea(2): JZ 0x000025ff
000025ec(5): MOV ECX,0x5
000025f1(3): MOV RSI,RBX
000025f4(2): CMPSB.REPE RDI,RSI
000025f6(3): SETA AL
000025f9(2): SBB AL,0x0
000025fb(2): TEST AL,AL
000025fd(2): JNZ 0x000025e0
000025ff(4): MOV R12,qword ptr [RDX + 0x8]
00002603(2): XOR EDI,EDI
00002605(5): MOV EDX,0x5
0000260a(7): LEA RSI,[0x15ff3]
00002611(3): TEST R12,R12
00002614(6): JZ 0x00002717
0000261a(5): CALL 0x00001a90
0000261f(7): LEA RCX,[0x15e30]
00002626(7): LEA RDX,[0x1600a]
0000262d(3): MOV RSI,RAX
00002630(5): MOV EDI,0x1
00002635(2): XOR EAX,EAX
00002637(5): CALL 0x00001cb0
0000263c(2): XOR ESI,ESI
0000263e(5): MOV EDI,0x5
00002643(5): CALL 0x00001ca0
00002648(3): TEST RAX,RAX
0000264b(2): JZ 0x00002665
0000264d(7): LEA RSI,[0x16018]
00002654(5): MOV EDX,0x3
00002659(3): MOV RDI,RAX
0000265c(5): CALL 0x00001a00
00002661(2): TEST EAX,EAX
00002663(2): JNZ 0x000026de
00002665(7): LEA RSI,[0x1601c]
0000266c(2): XOR EDI,EDI
0000266e(5): MOV EDX,0x5
00002673(5): CALL 0x00001a90
00002678(7): LEA RCX,[0x15f8f]
0000267f(7): LEA RDX,[0x15e30]
00002686(3): MOV RSI,RAX
00002689(5): MOV EDI,0x1
0000268e(2): XOR EAX,EAX
00002690(5): CALL 0x00001cb0
00002695(3): CMP R12,RBX
00002698(7): LEA RCX,[0x15fb0]
0000269f(7): LEA RBX,[0x16761]
000026a6(4): CMOVZ RBX,RCX
000026aa(7): LEA RSI,[0x15ea0]
000026b1(2): XOR EDI,EDI
000026b3(5): MOV EDX,0x5
000026b8(5): CALL 0x00001a90
000026bd(3): MOV RCX,RBX
000026c0(3): MOV RSI,RAX
000026c3(3): MOV RDX,R12
000026c6(5): MOV EDI,0x1
000026cb(2): XOR EAX,EAX
000026cd(5): CALL 0x00001cb0
000026d2(5): JMP 0x00002386
000026d7(7): LEA R12,[0x15f8f]
000026de(7): MOV R13,qword ptr [0x0021b088]
000026e5(7): LEA RSI,[0x15e58]
000026ec(2): XOR EDI,EDI
000026ee(5): MOV EDX,0x5
000026f3(5): CALL 0x00001a90
000026f8(3): MOV RSI,R13
000026fb(3): MOV RDI,RAX
000026fe(5): CALL 0x00001bb0
00002703(5): JMP 0x00002665
00002708(5): MOV ESI,0xa
0000270d(5): CALL 0x00001b10
00002712(5): JMP 0x000023d0
00002717(5): CALL 0x00001a90
0000271c(7): LEA RCX,[0x15e30]
00002723(7): LEA RDX,[0x1600a]
0000272a(3): MOV RSI,RAX
0000272d(5): MOV EDI,0x1
00002732(2): XOR EAX,EAX
00002734(5): CALL 0x00001cb0
00002739(2): XOR ESI,ESI
0000273b(5): MOV EDI,0x5
00002740(5): CALL 0x00001ca0
00002745(3): TEST RAX,RAX
00002748(2): JZ 0x00002766
0000274a(7): LEA RSI,[0x16018]
00002751(5): MOV EDX,0x3
00002756(3): MOV RDI,RAX
00002759(5): CALL 0x00001a00
0000275e(2): TEST EAX,EAX
00002760(6): JNZ 0x000026d7
00002766(7): LEA RSI,[0x1601c]
0000276d(5): MOV EDX,0x5
00002772(2): XOR EDI,EDI
00002774(7): LEA R12,[0x15f8f]
0000277b(7): LEA RBX,[0x15fb0]
00002782(5): CALL 0x00001a90
00002787(7): LEA RCX,[0x15f8f]
0000278e(7): LEA RDX,[0x15e30]
00002795(3): MOV RSI,RAX
00002798(5): MOV EDI,0x1
0000279d(2): XOR EAX,EAX
0000279f(5): CALL 0x00001cb0
000027a4(5): JMP 0x000026aa
000027b0(2): PUSH R15
000027b2(2): PUSH R14
000027b4(2): PUSH R13
000027b6(2): PUSH R12
000027b8(1): PUSH RBP
000027b9(1): PUSH RBX
000027ba(3): MOV RBP,RSI
000027bd(3): MOV RBX,RDI
000027c0(7): SUB RSP,0x1c8
000027c7(9): MOV RAX,qword ptr FS:[0x28]
000027d0(8): MOV qword ptr [0x1b8 + RSP],RAX
000027d8(2): XOR EAX,EAX
000027da(5): CALL 0x000022e0
000027df(3): MOV RDI,RBP
000027e2(5): CALL 0x000022e0
000027e7(4): MOV R12,qword ptr [RBP + 0x8]
000027eb(8): LEA RAX,[0xb0 + RSP]
000027f3(5): LEA RBP,[RSP + 0x30]
000027f8(9): MOV qword ptr [RSP + 0x10],0x0
00002801(9): MOV qword ptr [RSP + 0x18],0x0
0000280a(9): MOV qword ptr [RSP + 0x20],0x0
00002813(9): MOV qword ptr [RSP + 0x30],0x0
0000281c(3): MOV RDI,R12
0000281f(9): MOV qword ptr [RSP + 0x38],0x0
00002828(5): MOV qword ptr [RSP + 0x50],RAX
0000282d(9): MOV qword ptr [RSP + 0x58],0x0
00002836(11): MOV qword ptr [0x0021b238],0x2c6
00002841(5): CALL 0x00001ab0
00002846(3): MOV RDX,RBP
00002849(3): MOV RSI,RAX
0000284c(3): MOV RDI,R12
0000284f(5): CALL 0x000148a0
00002854(3): TEST RAX,RAX
00002857(6): JNZ 0x00002bba
0000285d(4): MOV R12,qword ptr [RBX + 0x8]
00002861(5): AND byte ptr [RSP + 0x68],0x7f
00002866(3): MOV RDI,R12
00002869(5): CALL 0x00001ab0
0000286e(5): LEA R8,[RSP + 0x10]
00002873(2): XOR ECX,ECX
00002875(3): MOV RDX,RAX
00002878(3): MOV RSI,R12
0000287b(3): MOV RDI,RBP
0000287e(5): CALL 0x00015220
00002883(3): TEST RAX,RAX
00002886(3): MOV R15,RAX
00002889(6): JS 0x00002958
0000288f(5): MOV R14,qword ptr [RSP + 0x60]
00002894(3): TEST R14,R14
00002897(6): JZ 0x00002920
0000289d(5): MOV RAX,qword ptr [RSP + 0x20]
000028a2(4): MOV RDX,qword ptr [RBX + 0x8]
000028a6(4): MOV RAX,qword ptr [RAX + 0x8]
000028aa(4): MOV byte ptr [RDX + RAX*0x1],0x0
000028ae(5): MOV RAX,qword ptr [RSP + 0x18]
000028b3(4): MOV RDI,qword ptr [RAX + 0x8]
000028b7(4): ADD RDI,qword ptr [RBX + 0x8]
000028bb(5): CALL 0x00002160
000028c0(3): MOV RBX,RAX
000028c3(6): CMP qword ptr [RSP + 0x10],0x0
000028c9(2): JZ 0x000028df
000028cb(5): MOV RDI,qword ptr [RSP + 0x18]
000028d0(5): CALL 0x000019d0
000028d5(5): MOV RDI,qword ptr [RSP + 0x20]
000028da(5): CALL 0x000019d0
000028df(3): MOV RDI,RBP
000028e2(9): MOV qword ptr [RSP + 0x50],0x0
000028eb(5): CALL 0x00015130
000028f0(8): MOV RCX,qword ptr [0x1b8 + RSP]
000028f8(9): XOR RCX,qword ptr FS:[0x28]
00002901(3): MOV RAX,RBX
00002904(6): JNZ 0x00002bd2
0000290a(7): ADD RSP,0x1c8
00002911(1): POP RBX
00002912(1): POP RBP
00002913(2): POP R12
00002915(2): POP R13
00002917(2): POP R14
00002919(2): POP R15
0000291b(1): RET
00002920(5): CALL 0x00001aa0
00002925(4): CMP RAX,0x1
00002929(3): MOV R12,R15
0000292c(2): JNZ 0x000029a8
0000292e(5): MOV EDI,0x18
00002933(5): CALL 0x00006dc0
00002938(4): LEA RDI,[RAX + 0x8]
0000293c(6): MOV dword ptr [RAX],0x0
00002942(3): MOV RSI,R12
00002945(3): MOV RBX,RAX
00002948(5): CALL 0x00001cc0
0000294d(5): JMP 0x000028c3
00002958(4): CMP RAX,-0x1
0000295c(6): JNZ 0x00002bf6
00002962(6): CMP qword ptr [RSP + 0x60],0x0
00002968(2): JZ 0x00002980
0000296a(7): LEA RDI,[0x16761]
00002971(5): CALL 0x00002160
00002976(3): MOV RBX,RAX
00002979(5): JMP 0x000028c3
00002980(5): MOV EDI,0x18
00002985(5): CALL 0x00006dc0
0000298a(4): LEA RDI,[RAX + 0x8]
0000298e(6): MOV dword ptr [RAX],0x0
00002994(2): XOR ESI,ESI
00002996(3): MOV RBX,RAX
00002999(5): CALL 0x00001cc0
0000299e(5): JMP 0x000028c3
000029a8(5): LEA R13,[RSP + 0x70]
000029ad(4): MOV R12,qword ptr [RBX + 0x8]
000029b1(5): MOV byte ptr [RSP + 0x70],0x0
000029b6(9): MOV qword ptr [RSP + 0x74],0x0
000029bf(5): MOV byte ptr [RSP + 0x7c],0x0
000029c4(4): LEA RAX,[R13 + 0x4]
000029c8(8): MOV qword ptr [0x80 + RSP],R12
000029d0(5): MOV qword ptr [RSP + 0x8],RAX
000029d5(5): JMP 0x00002a68
000029e0(8): MOV RBX,qword ptr [0x80 + RSP]
000029e8(7): LEA RCX,[0x161a0]
000029ef(3): MOVZX EDX,byte ptr [RBX]
000029f2(2): MOV EAX,EDX
000029f4(3): SHR AL,0x5
000029f7(3): AND EAX,0x7
000029fa(3): MOV EAX,dword ptr [RCX + RAX*0x4]
000029fd(3): BT EAX,EDX
00002a00(6): JNC 0x00002b18
00002a06(12): MOV qword ptr [0x88 + RSP],0x1
00002a12(3): MOVSX EAX,byte ptr [RBX]
00002a15(8): MOV byte ptr [0x90 + RSP],0x1
00002a1d(5): MOV byte ptr [RSP + 0x7c],0x1
00002a22(7): MOV dword ptr [0x94 + RSP],EAX
00002a29(7): MOV EAX,dword ptr [0x94 + RSP]
00002a30(2): TEST EAX,EAX
00002a32(6): JZ 0x00002b70
00002a38(8): MOV RBX,qword ptr [0x80 + RSP]
00002a40(3): MOV RAX,RBX
00002a43(3): SUB RAX,R12
00002a46(3): CMP RAX,R15
00002a49(6): JNC 0x00002b70
00002a4f(8): ADD RBX,qword ptr [0x88 + RSP]
00002a57(4): ADD R14,0x1
00002a5b(5): MOV byte ptr [RSP + 0x7c],0x0
00002a60(8): MOV qword ptr [0x80 + RSP],RBX
00002a68(5): CMP byte ptr [RSP + 0x70],0x0
00002a6d(6): JZ 0x000029e0
00002a73(5): CALL 0x00001aa0
00002a78(8): MOV RBX,qword ptr [0x80 + RSP]
00002a80(3): MOV RSI,RAX
00002a83(3): MOV RDI,RBX
00002a86(5): CALL 0x000064b0
00002a8b(4): LEA RCX,[R13 + 0x4]
00002a8f(4): LEA RDI,[R13 + 0x24]
00002a93(3): MOV RDX,RAX
00002a96(3): MOV RSI,RBX
00002a99(5): CALL 0x00007050
00002a9e(4): CMP RAX,-0x1
00002aa2(8): MOV qword ptr [0x88 + RSP],RAX
00002aaa(6): JZ 0x00002b38
00002ab0(4): CMP RAX,-0x2
00002ab4(6): JZ 0x00002b80
00002aba(3): TEST RAX,RAX
00002abd(2): JNZ 0x00002aeb
00002abf(8): MOV RBX,qword ptr [0x80 + RSP]
00002ac7(12): MOV qword ptr [0x88 + RSP],0x1
00002ad3(3): CMP byte ptr [RBX],0x0
00002ad6(6): JNZ 0x00002c2b
00002adc(7): MOV EDX,dword ptr [0x94 + RSP]
00002ae3(2): TEST EDX,EDX
00002ae5(6): JNZ 0x00002c26
00002aeb(4): LEA RDI,[R13 + 0x4]
00002aef(8): MOV byte ptr [0x90 + RSP],0x1
00002af7(5): CALL 0x00001d90
00002afc(2): TEST EAX,EAX
00002afe(6): JZ 0x00002bb0
00002b04(5): MOV byte ptr [RSP + 0x70],0x0
00002b09(5): MOV byte ptr [RSP + 0x7c],0x1
00002b0e(5): JMP 0x00002a29
00002b18(5): MOV RDI,qword ptr [RSP + 0x8]
00002b1d(5): CALL 0x00001d90
00002b22(2): TEST EAX,EAX
00002b24(6): JZ 0x00002bd7
00002b2a(5): MOV byte ptr [RSP + 0x70],0x1
00002b2f(5): JMP 0x00002a73
00002b38(8): MOV RBX,qword ptr [0x80 + RSP]
00002b40(12): MOV qword ptr [0x88 + RSP],0x1
00002b4c(8): MOV byte ptr [0x90 + RSP],0x0
00002b54(5): MOV byte ptr [RSP + 0x7c],0x1
00002b59(3): MOV RAX,RBX
00002b5c(3): SUB RAX,R12
00002b5f(3): CMP RAX,R15
00002b62(6): JC 0x00002a4f
00002b68(8): NOP dword ptr [RAX + RAX*0x1]
00002b70(3): MOV R12,R14
00002b73(5): JMP 0x0000292e
00002b80(8): MOV RBX,qword ptr [0x80 + RSP]
00002b88(3): MOV RDI,RBX
00002b8b(5): CALL 0x00001ab0
00002b90(8): MOV byte ptr [0x90 + RSP],0x0
00002b98(8): MOV qword ptr [0x88 + RSP],RAX
00002ba0(5): MOV byte ptr [RSP + 0x7c],0x1
00002ba5(5): JMP 0x00002a40
00002bb0(5): MOV byte ptr [RSP + 0x7c],0x1
00002bb5(5): JMP 0x00002a29
00002bba(7): LEA RDX,[0x16183]
00002bc1(3): MOV RCX,RAX
00002bc4(2): XOR ESI,ESI
00002bc6(5): MOV EDI,0x2
00002bcb(2): XOR EAX,EAX
00002bcd(5): CALL 0x00001d00
00002bd2(5): CALL 0x00001ad0
00002bd7(7): LEA RCX,[0x16160]
00002bde(7): LEA RSI,[0x15610]
00002be5(7): LEA RDI,[0x16037]
00002bec(5): MOV EDX,0x96
00002bf1(5): CALL 0x00001b50
00002bf6(7): LEA RSI,[0x15ed8]
00002bfd(2): XOR EDI,EDI
00002bff(5): MOV EDX,0x5
00002c04(5): CALL 0x00001a90
00002c09(4): CMP R15,-0x2
00002c0d(3): MOV RBX,RAX
00002c10(5): MOV ESI,0x4b
00002c15(2): JZ 0x00002c4a
00002c17(3): MOV RDX,RBX
00002c1a(5): MOV EDI,0x3
00002c1f(2): XOR EAX,EAX
00002c21(5): CALL 0x00001d00
00002c26(5): CALL 0x00001de0
00002c2b(7): LEA RCX,[0x16160]
00002c32(7): LEA RSI,[0x15610]
00002c39(7): LEA RDI,[0x1604e]
00002c40(5): MOV EDX,0xb2
00002c45(5): CALL 0x00001b50
00002c4a(5): CALL 0x000019f0
00002c4f(2): MOV ESI,dword ptr [RAX]
00002c51(2): JMP 0x00002c17
00002c60(2): PUSH R15
00002c62(2): PUSH R14
00002c64(2): PUSH R13
00002c66(2): PUSH R12
00002c68(1): PUSH RBP
00002c69(1): PUSH RBX
00002c6a(2): MOV EBX,EDI
00002c6c(7): LEA RDI,[0x16065]
00002c73(7): SUB RSP,0x108
00002c7a(9): MOV RAX,qword ptr FS:[0x28]
00002c83(8): MOV qword ptr [0xf8 + RSP],RAX
00002c8b(2): XOR EAX,EAX
00002c8d(5): CALL 0x000020e0
00002c92(2): TEST AL,AL
00002c94(6): JNZ 0x00002d80
00002c9a(7): LEA RDI,[0x16067]
00002ca1(4): MOVZX R15D,BL
00002ca5(5): CALL 0x000020e0
00002caa(2): TEST AL,AL
00002cac(6): JNZ 0x00002dd0
00002cb2(7): LEA RDI,[0x1606e]
00002cb9(5): CALL 0x000020e0
00002cbe(2): TEST AL,AL
00002cc0(6): JNZ 0x00002f20
00002cc6(7): LEA RDI,[0x16074]
00002ccd(5): CALL 0x000020e0
00002cd2(2): TEST AL,AL
00002cd4(3): MOV R14D,EAX
00002cd7(6): JNZ 0x00002fa0
00002cdd(7): LEA RDI,[0x1607a]
00002ce4(5): CALL 0x000020e0
00002ce9(2): TEST AL,AL
00002ceb(6): JNZ 0x00002e20
00002cf1(5): CALL 0x00002110
00002cf6(7): LEA RDI,[0x16081]
00002cfd(5): CALL 0x000020e0
00002d02(2): TEST AL,AL
00002d04(6): JZ 0x00002f60
00002d0a(3): MOV EDI,R15D
00002d0d(5): CALL 0x00003de0
00002d12(3): MOV R13,RAX
00002d15(7): MOV RAX,qword ptr [0x0021b0d0]
00002d1c(4): CMP qword ptr [RAX],0x0
00002d20(6): JZ 0x000037c8
00002d26(7): LEA RDI,[0x1671d]
00002d2d(5): CALL 0x000020e0
00002d32(2): TEST AL,AL
00002d34(2): JNZ 0x00002da2
00002d36(7): MOV RAX,qword ptr [0x0021b0d0]
00002d3d(5): MOV ESI,0x8
00002d42(2): XOR EDI,EDI
00002d44(3): MOV RDX,qword ptr [RAX]
00002d47(5): CALL 0x000060a0
00002d4c(7): LEA RSI,[0x15f28]
00002d53(3): MOV RBX,RAX
00002d56(5): MOV EDX,0x5
00002d5b(2): XOR EDI,EDI
00002d5d(5): CALL 0x00001a90
00002d62(3): MOV RCX,RBX
00002d65(3): MOV RDX,RAX
00002d68(2): XOR ESI,ESI
00002d6a(5): MOV EDI,0x2
00002d6f(2): XOR EAX,EAX
00002d71(5): CALL 0x00001d00
00002d76(10): NOP word ptr CS:[RAX + RAX*0x1]
00002d80(5): CALL 0x00002110
00002d85(7): MOV RAX,qword ptr [0x0021b0d0]
00002d8c(3): MOV RDI,qword ptr [RAX]
00002d8f(4): LEA RDX,[RAX + 0x8]
00002d93(7): MOV qword ptr [0x0021b0d0],RDX
00002d9a(5): CALL 0x00002160
00002d9f(3): MOV R13,RAX
00002da2(8): MOV RCX,qword ptr [0xf8 + RSP]
00002daa(9): XOR RCX,qword ptr FS:[0x28]
00002db3(3): MOV RAX,R13
00002db6(6): JNZ 0x00003780
00002dbc(7): ADD RSP,0x108
00002dc3(1): POP RBX
00002dc4(1): POP RBP
00002dc5(2): POP R12
00002dc7(2): POP R13
00002dc9(2): POP R14
00002dcb(2): POP R15
00002dcd(1): RET
00002dd0(3): MOV EDI,R15D
00002dd3(5): CALL 0x00002c60
00002dd8(3): MOV RBX,RAX
00002ddb(3): MOV RDI,RAX
00002dde(5): CALL 0x000022e0
00002de3(4): MOV RDI,qword ptr [RBX + 0x8]
00002de7(5): CALL 0x00004550
00002dec(5): MOV EDI,0x18
00002df1(3): MOV RBP,RAX
00002df4(5): CALL 0x00006dc0
00002df9(4): LEA RDI,[RAX + 0x8]
00002dfd(6): MOV dword ptr [RAX],0x0
00002e03(3): MOV RSI,RBP
00002e06(3): MOV R13,RAX
00002e09(5): CALL 0x00001cc0
00002e0e(3): MOV RDI,RBX
00002e11(5): CALL 0x000021a0
00002e16(2): JMP 0x00002da2
00002e20(3): MOV EDI,R15D
00002e23(5): CALL 0x00002c60
00002e28(3): MOV EDI,R15D
00002e2b(3): MOV RBP,RAX
00002e2e(5): CALL 0x00002c60
00002e33(3): MOV EDI,R15D
00002e36(3): MOV RBX,RAX
00002e39(5): CALL 0x00002c60
00002e3e(3): MOV RDI,RBP
00002e41(3): MOV R12,RAX
00002e44(5): CALL 0x000022e0
00002e49(3): MOV RDI,RBX
00002e4c(5): CALL 0x00002250
00002e51(2): TEST AL,AL
00002e53(6): JZ 0x00003010
00002e59(3): MOV RDI,R12
00002e5c(5): CALL 0x00002250
00002e61(2): TEST AL,AL
00002e63(6): JZ 0x00003010
00002e69(3): MOV EDX,dword ptr [RBX + 0xc]
00002e6c(7): MOV R13,-0x1
00002e73(2): TEST EDX,EDX
00002e75(2): JS 0x00002e87
00002e77(3): CMP EDX,0x1
00002e7a(7): MOV R13,-0x2
00002e81(6): JLE 0x000036da
00002e87(5): MOV EAX,dword ptr [R12 + 0xc]
00002e8c(7): MOV R15,-0x1
00002e93(2): TEST EAX,EAX
00002e95(2): JS 0x00002ea7
00002e97(3): CMP EAX,0x1
00002e9a(7): MOV R15,-0x2
00002ea1(6): JLE 0x000036b6
00002ea7(4): MOV RAX,qword ptr [RBP + 0x8]
00002eab(3): MOV RDI,RAX
00002eae(5): MOV qword ptr [RSP + 0x8],RAX
00002eb3(5): CALL 0x00001ab0
00002eb8(4): MOV qword ptr [RSP],RAX
00002ebc(5): CALL 0x00001aa0
00002ec1(4): CMP RAX,0x1
00002ec5(4): MOV RDX,qword ptr [RSP]
00002ec9(2): JBE 0x00002ed8
00002ecb(5): MOV RDI,qword ptr [RSP + 0x8]
00002ed0(5): CALL 0x00004550
00002ed5(3): MOV RDX,RAX
00002ed8(3): CMP R13,RDX
00002edb(2): JA 0x00002ef0
00002edd(3): TEST R14B,R14B
00002ee0(2): JNZ 0x00002ef0
00002ee2(4): LEA RAX,[R15 + -0x1]
00002ee6(4): CMP RAX,-0x3
00002eea(6): JBE 0x0000343a
00002ef0(7): LEA RDI,[0x16761]
00002ef7(5): CALL 0x00006ff0
00002efc(4): MOV qword ptr [RSP],RAX
00002f00(4): MOV R14,qword ptr [RSP]
00002f04(3): MOV RDI,R14
00002f07(5): CALL 0x00002160
00002f0c(3): MOV RDI,R14
00002f0f(3): MOV R13,RAX
00002f12(5): CALL 0x000019d0
00002f17(5): JMP 0x0000301f
00002f20(3): MOV EDI,R15D
00002f23(5): CALL 0x00002c60
00002f28(3): MOV EDI,R15D
00002f2b(3): MOV R13,RAX
00002f2e(5): CALL 0x00002c60
00002f33(2): TEST BL,BL
00002f35(3): MOV RBP,RAX
00002f38(2): JZ 0x00002f53
00002f3a(3): MOV RDI,R13
00002f3d(3): MOV RSI,RAX
00002f40(5): CALL 0x000027b0
00002f45(3): MOV RBX,RAX
00002f48(3): MOV RDI,R13
00002f4b(3): MOV R13,RBX
00002f4e(5): CALL 0x000021a0
00002f53(3): MOV RDI,RBP
00002f56(5): CALL 0x000021a0
00002f5b(5): JMP 0x00002da2
00002f60(7): LEA RDI,[0x1671d]
00002f67(5): CALL 0x000020e0
00002f6c(2): TEST AL,AL
00002f6e(6): JZ 0x00002d85
00002f74(7): LEA RSI,[0x16083]
00002f7b(5): MOV EDX,0x5
00002f80(2): XOR EDI,EDI
00002f82(5): CALL 0x00001a90
00002f87(2): XOR ESI,ESI
00002f89(3): MOV RDX,RAX
00002f8c(5): MOV EDI,0x2
00002f91(2): XOR EAX,EAX
00002f93(5): CALL 0x00001d00
00002f98(8): NOP dword ptr [RAX + RAX*0x1]
00002fa0(3): MOV EDI,R15D
00002fa3(5): CALL 0x00002c60
00002fa8(3): MOV EDI,R15D
00002fab(3): MOV R12,RAX
00002fae(5): CALL 0x00002c60
00002fb3(3): MOV RDI,R12
00002fb6(3): MOV RBX,RAX
00002fb9(5): CALL 0x000022e0
00002fbe(3): MOV RDI,RBX
00002fc1(5): CALL 0x000022e0
00002fc6(4): MOV R13,qword ptr [RBX + 0x8]
00002fca(5): CMP byte ptr [R13],0x0
00002fcf(2): JNZ 0x00003040
00002fd1(2): XOR EBP,EBP
00002fd3(5): MOV EDI,0x18
00002fd8(5): CALL 0x00006dc0
00002fdd(4): LEA RDI,[RAX + 0x8]
00002fe1(6): MOV dword ptr [RAX],0x0
00002fe7(3): MOV RSI,RBP
00002fea(3): MOV R13,RAX
00002fed(5): CALL 0x00001cc0
00002ff2(3): MOV RDI,R12
00002ff5(5): CALL 0x000021a0
00002ffa(3): MOV RDI,RBX
00002ffd(5): CALL 0x000021a0
00003002(5): JMP 0x00002da2
00003010(7): LEA RDI,[0x16761]
00003017(5): CALL 0x00002160
0000301c(3): MOV R13,RAX
0000301f(3): MOV RDI,RBP
00003022(5): CALL 0x000021a0
00003027(3): MOV RDI,RBX
0000302a(5): CALL 0x000021a0
0000302f(3): MOV RDI,R12
00003032(5): CALL 0x000021a0
00003037(5): JMP 0x00002da2
00003040(5): MOV R14,qword ptr [R12 + 0x8]
00003045(5): CALL 0x00001aa0
0000304a(4): CMP RAX,0x1
0000304e(2): JA 0x00003070
00003050(3): MOV RSI,R13
00003053(3): MOV RDI,R14
00003056(5): CALL 0x00001b70
0000305b(5): CMP byte ptr [R14 + RAX*0x1],0x0
00003060(6): JZ 0x00002fd1
00003066(4): LEA RBP,[RAX + 0x1]
0000306a(5): JMP 0x00002fd3
00003070(5): MOV qword ptr [RSP + 0x40],R14
00003075(5): LEA R14,[RSP + 0x70]
0000307a(5): MOV byte ptr [RSP + 0x30],0x0
0000307f(2): XOR EBP,EBP
00003081(5): CMP byte ptr [RSP + 0x30],0x0
00003086(9): MOV qword ptr [RSP + 0x34],0x0
0000308f(4): LEA RAX,[R14 + 0x24]
00003093(5): MOV byte ptr [RSP + 0x3c],0x0
00003098(4): MOV qword ptr [RSP],RAX
0000309c(5): LEA RAX,[RSP + 0x30]
000030a1(5): MOV qword ptr [RSP + 0x10],RAX
000030a6(6): JNZ 0x0000312c
000030ac(5): MOV RDI,qword ptr [RSP + 0x40]
000030b1(7): LEA RSI,[0x161a0]
000030b8(3): MOVZX EDX,byte ptr [RDI]
000030bb(2): MOV EAX,EDX
000030bd(3): SHR AL,0x5
000030c0(3): AND EAX,0x7
000030c3(3): MOV EAX,dword ptr [RSI + RAX*0x4]
000030c6(3): BT EAX,EDX
000030c9(6): JNC 0x000033ea
000030cf(9): MOV qword ptr [RSP + 0x48],0x1
000030d8(3): MOVSX EAX,byte ptr [RDI]
000030db(5): MOV byte ptr [RSP + 0x50],0x1
000030e0(5): MOV byte ptr [RSP + 0x3c],0x1
000030e5(2): TEST EAX,EAX
000030e7(4): MOV dword ptr [RSP + 0x54],EAX
000030eb(6): JZ 0x00002fd1
000030f1(4): ADD RBP,0x1
000030f5(3): MOVSX ESI,byte ptr [RDI]
000030f8(5): MOV qword ptr [RSP + 0x8],RDI
000030fd(3): MOV RDI,R13
00003100(5): CALL 0x000042a0
00003105(3): TEST RAX,RAX
00003108(6): JNZ 0x00002fd3
0000310e(5): MOV RDX,qword ptr [RSP + 0x8]
00003113(5): MOV EDI,0x1
00003118(3): ADD RDI,RDX
0000311b(5): CMP byte ptr [RSP + 0x30],0x0
00003120(5): MOV byte ptr [RSP + 0x3c],0x0
00003125(5): MOV qword ptr [RSP + 0x40],RDI
0000312a(2): JZ 0x000030ac
0000312c(5): CALL 0x00001aa0
00003131(5): MOV R8,qword ptr [RSP + 0x40]
00003136(3): MOV RSI,RAX
00003139(3): MOV RDI,R8
0000313c(5): MOV qword ptr [RSP + 0x8],R8
00003141(5): CALL 0x000064b0
00003146(5): MOV RSI,qword ptr [RSP + 0x10]
0000314b(5): MOV R8,qword ptr [RSP + 0x8]
00003150(3): MOV RDX,RAX
00003153(4): LEA RCX,[RSI + 0x4]
00003157(4): LEA RDI,[RSI + 0x24]
0000315b(3): MOV RSI,R8
0000315e(5): CALL 0x00007050
00003163(4): CMP RAX,-0x1
00003167(5): MOV qword ptr [RSP + 0x48],RAX
0000316c(6): JZ 0x0000340a
00003172(4): CMP RAX,-0x2
00003176(6): JZ 0x00003698
0000317c(3): TEST RAX,RAX
0000317f(2): JNZ 0x000031a4
00003181(5): MOV RDI,qword ptr [RSP + 0x40]
00003186(9): MOV qword ptr [RSP + 0x48],0x1
0000318f(3): CMP byte ptr [RDI],0x0
00003192(6): JNZ 0x000037a9
00003198(4): MOV ESI,dword ptr [RSP + 0x54]
0000319c(2): TEST ESI,ESI
0000319e(6): JNZ 0x000037a4
000031a4(5): MOV RAX,qword ptr [RSP + 0x10]
000031a9(5): MOV byte ptr [RSP + 0x50],0x1
000031ae(4): LEA RDI,[RAX + 0x4]
000031b2(5): CALL 0x00001d90
000031b7(2): TEST EAX,EAX
000031b9(6): JZ 0x000036ff
000031bf(5): MOV byte ptr [RSP + 0x30],0x0
000031c4(5): MOV byte ptr [RSP + 0x3c],0x1
000031c9(4): MOV ECX,dword ptr [RSP + 0x54]
000031cd(2): TEST ECX,ECX
000031cf(6): JZ 0x00002fd1
000031d5(4): ADD RBP,0x1
000031d9(6): CMP qword ptr [RSP + 0x48],0x1
000031df(2): JNZ 0x000031f0
000031e1(5): MOV RDI,qword ptr [RSP + 0x40]
000031e6(5): JMP 0x000030f5
000031f0(8): MOV qword ptr [0x80 + RSP],R13
000031f8(5): MOV byte ptr [RSP + 0x70],0x0
000031fd(8): MOV qword ptr [R14 + 0x4],0x0
00003205(5): MOV byte ptr [RSP + 0x7c],0x0
0000320a(5): JMP 0x00003292
00003210(8): MOV RCX,qword ptr [0x80 + RSP]
00003218(7): LEA RSI,[0x161a0]
0000321f(3): MOVZX EDX,byte ptr [RCX]
00003222(2): MOV EAX,EDX
00003224(3): SHR AL,0x5
00003227(3): AND EAX,0x7
0000322a(3): MOV EAX,dword ptr [RSI + RAX*0x4]
0000322d(3): BT EAX,EDX
00003230(6): JNC 0x00003390
00003236(12): MOV qword ptr [0x88 + RSP],0x1
00003242(3): MOVSX EAX,byte ptr [RCX]
00003245(8): MOV byte ptr [0x90 + RSP],0x1
0000324d(5): MOV byte ptr [RSP + 0x7c],0x1
00003252(7): MOV dword ptr [0x94 + RSP],EAX
00003259(7): MOV EAX,dword ptr [0x94 + RSP]
00003260(2): TEST EAX,EAX
00003262(6): JZ 0x0000342b
00003268(5): CMP byte ptr [RSP + 0x50],0x0
0000326d(6): JZ 0x00003359
00003273(4): CMP dword ptr [RSP + 0x54],EAX
00003277(6): JZ 0x00002fd3
0000327d(8): MOV R15,qword ptr [0x88 + RSP]
00003285(8): ADD qword ptr [0x80 + RSP],R15
0000328d(5): MOV byte ptr [RSP + 0x7c],0x0
00003292(5): CMP byte ptr [RSP + 0x70],0x0
00003297(6): JZ 0x00003210
0000329d(5): CALL 0x00001aa0
000032a2(8): MOV R15,qword ptr [0x80 + RSP]
000032aa(3): MOV RSI,RAX
000032ad(3): MOV RDI,R15
000032b0(5): CALL 0x000064b0
000032b5(4): MOV RDI,qword ptr [RSP]
000032b9(4): LEA RCX,[R14 + 0x4]
000032bd(3): MOV RDX,RAX
000032c0(3): MOV RSI,R15
000032c3(5): CALL 0x00007050
000032c8(4): CMP RAX,-0x1
000032cc(8): MOV qword ptr [0x88 + RSP],RAX
000032d4(2): JZ 0x00003340
000032d6(4): CMP RAX,-0x2
000032da(6): JZ 0x000033b0
000032e0(3): TEST RAX,RAX
000032e3(2): JNZ 0x00003311
000032e5(8): MOV RAX,qword ptr [0x80 + RSP]
000032ed(12): MOV qword ptr [0x88 + RSP],0x1
000032f9(3): CMP byte ptr [RAX],0x0
000032fc(6): JNZ 0x000037a9
00003302(7): MOV EDI,dword ptr [0x94 + RSP]
00003309(2): TEST EDI,EDI
0000330b(6): JNZ 0x000037a4
00003311(4): LEA RDI,[R14 + 0x4]
00003315(8): MOV byte ptr [0x90 + RSP],0x1
0000331d(5): CALL 0x00001d90
00003322(2): TEST EAX,EAX
00003324(6): JZ 0x000033e0
0000332a(5): MOV byte ptr [RSP + 0x70],0x0
0000332f(5): MOV byte ptr [RSP + 0x7c],0x1
00003334(5): JMP 0x00003259
00003340(12): MOV qword ptr [0x88 + RSP],0x1
0000334c(8): MOV byte ptr [0x90 + RSP],0x0
00003354(5): MOV byte ptr [RSP + 0x7c],0x1
00003359(8): MOV R15,qword ptr [0x88 + RSP]
00003361(5): CMP R15,qword ptr [RSP + 0x48]
00003366(6): JNZ 0x00003285
0000336c(5): MOV RSI,qword ptr [RSP + 0x40]
00003371(8): MOV RDI,qword ptr [0x80 + RSP]
00003379(3): MOV RDX,R15
0000337c(5): CALL 0x00001b90
00003381(2): TEST EAX,EAX
00003383(6): JZ 0x00002fd3
00003389(5): JMP 0x00003285
00003390(4): LEA RDI,[R14 + 0x4]
00003394(5): CALL 0x00001d90
00003399(2): TEST EAX,EAX
0000339b(6): JZ 0x00003785
000033a1(5): MOV byte ptr [RSP + 0x70],0x1
000033a6(5): JMP 0x0000329d
000033b0(8): MOV RDI,qword ptr [0x80 + RSP]
000033b8(5): CALL 0x00001ab0
000033bd(8): MOV byte ptr [0x90 + RSP],0x0
000033c5(8): MOV qword ptr [0x88 + RSP],RAX
000033cd(5): MOV byte ptr [RSP + 0x7c],0x1
000033d2(5): JMP 0x00003359
000033e0(5): MOV byte ptr [RSP + 0x7c],0x1
000033e5(5): JMP 0x00003259
000033ea(5): MOV RAX,qword ptr [RSP + 0x10]
000033ef(4): LEA RDI,[RAX + 0x4]
000033f3(5): CALL 0x00001d90
000033f8(2): TEST EAX,EAX
000033fa(6): JZ 0x00003785
00003400(5): MOV byte ptr [RSP + 0x30],0x1
00003405(5): JMP 0x0000312c
0000340a(9): MOV qword ptr [RSP + 0x48],0x1
00003413(5): MOV byte ptr [RSP + 0x50],0x0
00003418(4): ADD RBP,0x1
0000341c(5): MOV byte ptr [RSP + 0x3c],0x1
00003421(5): MOV RDI,qword ptr [RSP + 0x40]
00003426(5): JMP 0x000030f5
0000342b(5): MOV RDX,qword ptr [RSP + 0x40]
00003430(5): MOV RDI,qword ptr [RSP + 0x48]
00003435(5): JMP 0x00003118
0000343a(3): SUB RDX,R13
0000343d(4): LEA RAX,[RDX + 0x1]
00003441(3): CMP RAX,R15
00003444(4): CMOVBE R15,RAX
00003448(5): CALL 0x00001aa0
0000344d(4): CMP RAX,0x1
00003451(6): JZ 0x00003664
00003457(4): MOV RDI,qword ptr [RSP]
0000345b(6): MOV R14D,0x1
00003461(4): ADD RDI,0x1
00003465(5): CALL 0x00006dc0
0000346a(5): MOV RSI,qword ptr [RSP + 0x8]
0000346f(4): MOV qword ptr [RSP],RAX
00003473(5): MOV qword ptr [RSP + 0x8],RAX
00003478(8): LEA RAX,[0xb0 + RSP]
00003480(8): MOV byte ptr [0xb0 + RSP],0x0
00003488(12): MOV qword ptr [0xb4 + RSP],0x0
00003494(8): MOV byte ptr [0xbc + RSP],0x0
0000349c(5): MOV qword ptr [RSP + 0x20],RAX
000034a1(8): LEA RAX,[0xb4 + RSP]
000034a9(8): MOV qword ptr [0xc0 + RSP],RSI
000034b1(5): MOV qword ptr [RSP + 0x28],RAX
000034b6(5): JMP 0x0000357d
000034c0(8): MOV RCX,qword ptr [0xc0 + RSP]
000034c8(7): LEA RSI,[0x161a0]
000034cf(3): MOVZX EDX,byte ptr [RCX]
000034d2(2): MOV EAX,EDX
000034d4(3): SHR AL,0x5
000034d7(3): AND EAX,0x7
000034da(3): MOV EAX,dword ptr [RSI + RAX*0x4]
000034dd(3): BT EAX,EDX
000034e0(6): JNC 0x00003645
000034e6(12): MOV qword ptr [0xc8 + RSP],0x1
000034f2(3): MOVSX EAX,byte ptr [RCX]
000034f5(8): MOV byte ptr [0xd0 + RSP],0x1
000034fd(8): MOV byte ptr [0xbc + RSP],0x1
00003505(7): MOV dword ptr [0xd4 + RSP],EAX
0000350c(7): MOV EAX,dword ptr [0xd4 + RSP]
00003513(2): TEST EAX,EAX
00003515(6): JZ 0x0000368b
0000351b(3): TEST R15,R15
0000351e(6): JZ 0x0000368b
00003524(3): CMP R13,R14
00003527(8): MOV R8,qword ptr [0xc8 + RSP]
0000352f(8): MOV RCX,qword ptr [0xc0 + RSP]
00003537(2): JA 0x00003566
00003539(5): MOV RDI,qword ptr [RSP + 0x8]
0000353e(3): MOV RDX,R8
00003541(3): MOV RSI,RCX
00003544(5): MOV qword ptr [RSP + 0x18],R8
00003549(5): MOV qword ptr [RSP + 0x10],RCX
0000354e(4): SUB R15,0x1
00003552(5): CALL 0x00001ce0
00003557(5): MOV R8,qword ptr [RSP + 0x18]
0000355c(5): MOV RCX,qword ptr [RSP + 0x10]
00003561(5): MOV qword ptr [RSP + 0x8],RAX
00003566(3): ADD RCX,R8
00003569(8): MOV byte ptr [0xbc + RSP],0x0
00003571(4): ADD R14,0x1
00003575(8): MOV qword ptr [0xc0 + RSP],RCX
0000357d(8): CMP byte ptr [0xb0 + RSP],0x0
00003585(6): JZ 0x000034c0
0000358b(5): CALL 0x00001aa0
00003590(8): MOV R8,qword ptr [0xc0 + RSP]
00003598(3): MOV RSI,RAX
0000359b(3): MOV RDI,R8
0000359e(5): MOV qword ptr [RSP + 0x10],R8
000035a3(5): CALL 0x000064b0
000035a8(5): MOV RSI,qword ptr [RSP + 0x20]
000035ad(5): MOV R8,qword ptr [RSP + 0x10]
000035b2(3): MOV RDX,RAX
000035b5(4): LEA RCX,[RSI + 0x4]
000035b9(4): LEA RDI,[RSI + 0x24]
000035bd(3): MOV RSI,R8
000035c0(5): CALL 0x00007050
000035c5(4): CMP RAX,-0x1
000035c9(8): MOV qword ptr [0xc8 + RSP],RAX
000035d1(6): JZ 0x00003709
000035d7(4): CMP RAX,-0x2
000035db(6): JZ 0x0000372a
000035e1(3): TEST RAX,RAX
000035e4(2): JNZ 0x00003612
000035e6(8): MOV RAX,qword ptr [0xc0 + RSP]
000035ee(12): MOV qword ptr [0xc8 + RSP],0x1
000035fa(3): CMP byte ptr [RAX],0x0
000035fd(6): JNZ 0x000037a9
00003603(7): MOV EDX,dword ptr [0xd4 + RSP]
0000360a(2): TEST EDX,EDX
0000360c(6): JNZ 0x000037a4
00003612(5): MOV RAX,qword ptr [RSP + 0x20]
00003617(8): MOV byte ptr [0xd0 + RSP],0x1
0000361f(4): LEA RDI,[RAX + 0x4]
00003623(5): CALL 0x00001d90
00003628(2): TEST EAX,EAX
0000362a(6): JZ 0x00003754
00003630(8): MOV byte ptr [0xb0 + RSP],0x0
00003638(8): MOV byte ptr [0xbc + RSP],0x1
00003640(5): JMP 0x0000350c
00003645(5): MOV RDI,qword ptr [RSP + 0x28]
0000364a(5): CALL 0x00001d90
0000364f(2): TEST EAX,EAX
00003651(6): JZ 0x00003785
00003657(8): MOV byte ptr [0xb0 + RSP],0x1
0000365f(5): JMP 0x0000358b
00003664(4): LEA RDI,[R15 + 0x1]
00003668(5): CALL 0x00006dc0
0000366d(5): MOV RSI,qword ptr [RSP + 0x8]
00003672(3): MOV RDX,R15
00003675(3): MOV RDI,RAX
00003678(4): MOV qword ptr [RSP],RAX
0000367c(5): LEA RSI,[RSI + R13*0x1 + -0x1]
00003681(5): CALL 0x00001ce0
00003686(5): MOV qword ptr [RSP + 0x8],RAX
0000368b(5): MOV RAX,qword ptr [RSP + 0x8]
00003690(3): MOV byte ptr [RAX],0x0
00003693(5): JMP 0x00002f00
00003698(5): MOV RDI,qword ptr [RSP + 0x40]
0000369d(5): CALL 0x00001ab0
000036a2(5): MOV byte ptr [RSP + 0x50],0x0
000036a7(5): MOV qword ptr [RSP + 0x48],RAX
000036ac(5): MOV byte ptr [RSP + 0x3c],0x1
000036b1(5): JMP 0x000031d5
000036b6(5): MOV RDX,qword ptr [R12 + 0x10]
000036bb(2): TEST EAX,EAX
000036bd(3): MOV R15,qword ptr [RDX]
000036c0(6): JZ 0x00003761
000036c6(4): CMP R15,-0x1
000036ca(7): MOV RAX,-0x2
000036d1(4): CMOVZ R15,RAX
000036d5(5): JMP 0x00002ea7
000036da(4): MOV RCX,qword ptr [RBX + 0x10]
000036de(2): TEST EDX,EDX
000036e0(3): MOV R13,qword ptr [RCX]
000036e3(6): JZ 0x00003769
000036e9(4): CMP R13,-0x1
000036ed(6): JZ 0x00003774
000036f3(3): TEST R13,R13
000036f6(4): SETZ R14B
000036fa(5): JMP 0x00002e87
000036ff(5): MOV byte ptr [RSP + 0x3c],0x1
00003704(5): JMP 0x000031c9
00003709(12): MOV qword ptr [0xc8 + RSP],0x1
00003715(8): MOV byte ptr [0xd0 + RSP],0x0
0000371d(8): MOV byte ptr [0xbc + RSP],0x1
00003725(5): JMP 0x0000351b
0000372a(8): MOV RDI,qword ptr [0xc0 + RSP]
00003732(5): CALL 0x00001ab0
00003737(8): MOV byte ptr [0xd0 + RSP],0x0
0000373f(8): MOV qword ptr [0xc8 + RSP],RAX
00003747(8): MOV byte ptr [0xbc + RSP],0x1
0000374f(5): JMP 0x0000351b
00003754(8): MOV byte ptr [0xbc + RSP],0x1
0000375c(5): JMP 0x0000350c
00003761(3): XOR R15D,R15D
00003764(5): JMP 0x00002ea7
00003769(3): MOV R14D,EAX
0000376c(3): XOR R13D,R13D
0000376f(5): JMP 0x00002e87
00003774(7): MOV R13,-0x2
0000377b(5): JMP 0x00002e87
00003780(5): CALL 0x00001ad0
00003785(7): LEA RCX,[0x16160]
0000378c(7): LEA RSI,[0x15610]
00003793(7): LEA RDI,[0x16037]
0000379a(5): MOV EDX,0x96
0000379f(5): CALL 0x00001b50
000037a4(5): CALL 0x00001de0
000037a9(7): LEA RCX,[0x16160]
000037b0(7): LEA RSI,[0x15610]
000037b7(7): LEA RDI,[0x1604e]
000037be(5): MOV EDX,0xb2
000037c3(5): CALL 0x00001b50
000037c8(4): MOV RDX,qword ptr [RAX + -0x8]
000037cc(5): MOV ESI,0x8
000037d1(2): XOR EDI,EDI
000037d3(5): CALL 0x000060a0
000037d8(7): LEA RSI,[0x15f00]
000037df(3): MOV RBX,RAX
000037e2(5): MOV EDX,0x5
000037e7(2): XOR EDI,EDI
000037e9(5): CALL 0x00001a90
000037ee(3): MOV RCX,RBX
000037f1(3): MOV RDX,RAX
000037f4(2): XOR ESI,ESI
000037f6(5): MOV EDI,0x2
000037fb(2): XOR EAX,EAX
000037fd(5): CALL 0x00001d00
00003802(4): NOP dword ptr [RAX]
00003806(10): NOP word ptr CS:[RAX + RAX*0x1]
00003810(2): PUSH R15
00003812(2): PUSH R14
00003814(3): MOV R14D,EDI
00003817(2): PUSH R13
00003819(2): PUSH R12
0000381b(7): LEA R12,[0x160a0]
00003822(1): PUSH RBP
00003823(1): PUSH RBX
00003824(4): MOVZX EBP,DIL
00003828(2): MOV EDI,EBP
0000382a(4): SUB RSP,0x8
0000382e(5): CALL 0x00002c60
00003833(3): MOV R13,RAX
00003836(2): JMP 0x00003848
00003840(3): MOV RDI,RBX
00003843(5): CALL 0x000021a0
00003848(3): MOV RDI,R12
0000384b(5): CALL 0x000020e0
00003850(2): TEST AL,AL
00003852(2): JZ 0x00003880
00003854(2): MOV EDI,EBP
00003856(5): CALL 0x00002c60
0000385b(3): TEST R14B,R14B
0000385e(3): MOV RBX,RAX
00003861(2): JZ 0x00003840
00003863(3): MOV RDI,R13
00003866(3): MOV RSI,RAX
00003869(5): CALL 0x000027b0
0000386e(3): MOV RDI,R13
00003871(3): MOV R15,RAX
00003874(3): MOV R13,R15
00003877(5): CALL 0x000021a0
0000387c(2): JMP 0x00003840
00003880(4): ADD RSP,0x8
00003884(3): MOV RAX,R13
00003887(1): POP RBX
00003888(1): POP RBP
00003889(2): POP R12
0000388b(2): POP R13
0000388d(2): POP R14
0000388f(2): POP R15
00003891(1): RET
000038a0(2): PUSH R14
000038a2(2): PUSH R13
000038a4(3): MOV R14D,EDI
000038a7(2): PUSH R12
000038a9(4): MOVZX R12D,DIL
000038ad(1): PUSH RBP
000038ae(1): PUSH RBX
000038af(3): MOV EDI,R12D
000038b2(5): CALL 0x00003810
000038b7(3): MOV R13,RAX
000038ba(2): JMP 0x00003939
000038c0(7): LEA RDI,[0x16236]
000038c7(5): MOV EBP,0x1
000038cc(5): CALL 0x000020e0
000038d1(2): TEST AL,AL
000038d3(6): JZ 0x00003968
000038d9(3): MOV EDI,R12D
000038dc(5): CALL 0x00003810
000038e1(3): TEST R14B,R14B
000038e4(3): MOV RBX,RAX
000038e7(2): JZ 0x00003931
000038e9(3): MOV RDI,R13
000038ec(5): CALL 0x00002250
000038f1(2): TEST AL,AL
000038f3(6): JZ 0x0000399d
000038f9(3): MOV RDI,RBX
000038fc(5): CALL 0x00002250
00003901(2): TEST AL,AL
00003903(6): JZ 0x0000399d
00003909(2): TEST EBP,EBP
0000390b(2): JZ 0x00003958
0000390d(3): MOV EAX,dword ptr [RBX + 0xc]
00003910(2): TEST EAX,EAX
00003912(6): JZ 0x000039c1
00003918(3): CMP EBP,0x1
0000391b(2): JZ 0x00003988
0000391d(7): MOV RAX,qword ptr [0x0021afc8]
00003924(4): LEA RDI,[R13 + 0x8]
00003928(4): LEA RDX,[RBX + 0x8]
0000392c(3): MOV RSI,RDI
0000392f(2): CALL RAX
00003931(3): MOV RDI,RBX
00003934(5): CALL 0x000021a0
00003939(7): LEA RDI,[0x160a2]
00003940(5): CALL 0x000020e0
00003945(2): TEST AL,AL
00003947(6): JZ 0x000038c0
0000394d(2): XOR EBP,EBP
0000394f(2): JMP 0x000038d9
00003958(7): MOV RAX,qword ptr [0x0021afb0]
0000395f(2): JMP 0x00003924
00003968(7): LEA RDI,[0x160a4]
0000396f(5): CALL 0x000020e0
00003974(2): TEST AL,AL
00003976(2): JZ 0x00003991
00003978(5): MOV EBP,0x2
0000397d(5): JMP 0x000038d9
00003988(7): MOV RAX,qword ptr [0x0021af98]
0000398f(2): JMP 0x00003924
00003991(1): POP RBX
00003992(3): MOV RAX,R13
00003995(1): POP RBP
00003996(2): POP R12
00003998(2): POP R13
0000399a(2): POP R14
0000399c(1): RET
0000399d(7): LEA RSI,[0x160a6]
000039a4(5): MOV EDX,0x5
000039a9(2): XOR EDI,EDI
000039ab(5): CALL 0x00001a90
000039b0(2): XOR ESI,ESI
000039b2(3): MOV RDX,RAX
000039b5(5): MOV EDI,0x2
000039ba(2): XOR EAX,EAX
000039bc(5): CALL 0x00001d00
000039c1(7): LEA RSI,[0x160bb]
000039c8(5): MOV EDX,0x5
000039cd(2): XOR EDI,EDI
000039cf(5): CALL 0x00001a90
000039d4(2): XOR ESI,ESI
000039d6(3): MOV RDX,RAX
000039d9(5): MOV EDI,0x2
000039de(2): XOR EAX,EAX
000039e0(5): CALL 0x00001d00
000039e5(1): NOP
000039e6(10): NOP word ptr CS:[RAX + RAX*0x1]
000039f0(2): PUSH R14
000039f2(2): PUSH R13
000039f4(3): MOV R14D,EDI
000039f7(2): PUSH R12
000039f9(4): MOVZX R12D,DIL
000039fd(1): PUSH RBP
000039fe(1): PUSH RBX
000039ff(3): MOV EDI,R12D
00003a02(5): CALL 0x000038a0
00003a07(3): MOV R13,RAX
00003a0a(2): JMP 0x00003a6d
00003a10(7): LEA RDI,[0x16125]
00003a17(5): CALL 0x000020e0
00003a1c(2): TEST AL,AL
00003a1e(2): JZ 0x00003a98
00003a20(5): MOV EBP,0x1
00003a25(3): MOV EDI,R12D
00003a28(5): CALL 0x000038a0
00003a2d(3): TEST R14B,R14B
00003a30(3): MOV RBX,RAX
00003a33(2): JZ 0x00003a65
00003a35(3): MOV RDI,R13
00003a38(5): CALL 0x00002250
00003a3d(2): TEST AL,AL
00003a3f(2): JZ 0x00003aa4
00003a41(3): MOV RDI,RBX
00003a44(5): CALL 0x00002250
00003a49(2): TEST AL,AL
00003a4b(2): JZ 0x00003aa4
00003a4d(2): TEST EBP,EBP
00003a4f(2): JZ 0x00003a88
00003a51(7): MOV RAX,qword ptr [0x0021afa8]
00003a58(4): LEA RDI,[R13 + 0x8]
00003a5c(4): LEA RDX,[RBX + 0x8]
00003a60(3): MOV RSI,RDI
00003a63(2): CALL RAX
00003a65(3): MOV RDI,RBX
00003a68(5): CALL 0x000021a0
00003a6d(7): LEA RDI,[0x16065]
00003a74(5): CALL 0x000020e0
00003a79(2): TEST AL,AL
00003a7b(2): JZ 0x00003a10
00003a7d(2): XOR EBP,EBP
00003a7f(2): JMP 0x00003a25
00003a88(7): MOV RAX,qword ptr [0x0021afd0]
00003a8f(2): JMP 0x00003a58
00003a98(1): POP RBX
00003a99(3): MOV RAX,R13
00003a9c(1): POP RBP
00003a9d(2): POP R12
00003a9f(2): POP R13
00003aa1(2): POP R14
00003aa3(1): RET
00003aa4(7): LEA RSI,[0x160a6]
00003aab(5): MOV EDX,0x5
00003ab0(2): XOR EDI,EDI
00003ab2(5): CALL 0x00001a90
00003ab7(2): XOR ESI,ESI
00003ab9(3): MOV RDX,RAX
00003abc(5): MOV EDI,0x2
00003ac1(2): XOR EAX,EAX
00003ac3(5): CALL 0x00001d00
00003ac8(8): NOP dword ptr [RAX + RAX*0x1]
00003ad0(2): PUSH R15
00003ad2(2): PUSH R14
00003ad4(3): MOV R14D,EDI
00003ad7(2): PUSH R13
00003ad9(2): PUSH R12
00003adb(4): MOVZX R13D,DIL
00003adf(1): PUSH RBP
00003ae0(1): PUSH RBX
00003ae1(3): MOV EDI,R13D
00003ae4(4): SUB RSP,0x8
00003ae8(5): CALL 0x000039f0
00003aed(3): MOV RBX,RAX
00003af0(2): JMP 0x00003b54
00003af8(7): LEA RDI,[0x160ce]
00003aff(6): MOV R12D,0x1
00003b05(5): CALL 0x000020e0
00003b0a(2): TEST AL,AL
00003b0c(6): JZ 0x00003c50
00003b12(3): MOV EDI,R13D
00003b15(3): XOR R15D,R15D
00003b18(5): CALL 0x000039f0
00003b1d(3): TEST R14B,R14B
00003b20(3): MOV RBP,RAX
00003b23(2): JNZ 0x00003b70
00003b25(3): MOV RDI,RBX
00003b28(5): CALL 0x000021a0
00003b2d(3): MOV RDI,RBP
00003b30(5): CALL 0x000021a0
00003b35(5): MOV EDI,0x18
00003b3a(5): CALL 0x00006dc0
00003b3f(4): LEA RDI,[RAX + 0x8]
00003b43(6): MOV dword ptr [RAX],0x0
00003b49(3): MOV RSI,R15
00003b4c(3): MOV RBX,RAX
00003b4f(5): CALL 0x00001cc0
00003b54(7): LEA RDI,[0x160cc]
00003b5b(5): CALL 0x000020e0
00003b60(2): TEST AL,AL
00003b62(2): JZ 0x00003af8
00003b64(3): XOR R12D,R12D
00003b67(2): JMP 0x00003b12
00003b70(3): MOV RDI,RBX
00003b73(5): CALL 0x000022e0
00003b78(3): MOV RDI,RBP
00003b7b(5): CALL 0x000022e0
00003b80(4): MOV RDI,qword ptr [RBX + 0x8]
00003b84(2): XOR EDX,EDX
00003b86(3): CMP byte ptr [RDI],0x2d
00003b89(3): SETZ DL
00003b8c(3): ADD RDX,RDI
00003b8f(3): MOVSX EAX,byte ptr [RDX]
00003b92(2): JMP 0x00003ba7
00003b98(4): ADD RDX,0x1
00003b9c(3): MOVSX EAX,byte ptr [RDX]
00003b9f(2): TEST AL,AL
00003ba1(6): JZ 0x00003c70
00003ba7(3): SUB EAX,0x30
00003baa(3): CMP EAX,0x9
00003bad(2): JBE 0x00003b98
00003baf(5): CALL 0x000019f0
00003bb4(6): MOV dword ptr [RAX],0x0
00003bba(4): MOV RSI,qword ptr [RBP + 0x8]
00003bbe(4): MOV RDI,qword ptr [RBX + 0x8]
00003bc2(5): CALL 0x00001c70
00003bc7(4): CMP R12D,0x5
00003bcb(2): JA 0x00003c30
00003bcd(7): LEA RCX,[0x16140]
00003bd4(4): MOVSXD RDX,dword ptr [RCX + R12*0x4]
00003bd8(3): ADD RDX,RCX
00003bdb(2): JMP RDX
00003be0(3): MOVSXD RSI,EAX
00003be3(3): NOT RSI
00003be6(4): SHR RSI,0x3f
00003bea(3): MOV R15,RSI
00003bed(5): JMP 0x00003b25
00003bf8(3): XOR R15D,R15D
00003bfb(2): TEST EAX,EAX
00003bfd(4): SETNZ R15B
00003c01(5): JMP 0x00003b25
00003c10(3): XOR R15D,R15D
00003c13(2): TEST EAX,EAX
00003c15(4): SETZ R15B
00003c19(5): JMP 0x00003b25
00003c20(3): XOR R15D,R15D
00003c23(2): TEST EAX,EAX
00003c25(4): SETLE R15B
00003c29(5): JMP 0x00003b25
00003c30(3): MOVSXD RSI,EAX
00003c33(4): SHR RSI,0x3f
00003c37(3): MOV R15,RSI
00003c3a(5): JMP 0x00003b25
00003c40(3): XOR R15D,R15D
00003c43(2): TEST EAX,EAX
00003c45(4): SETG R15B
00003c49(5): JMP 0x00003b25
00003c50(7): LEA RDI,[0x160d5]
00003c57(5): CALL 0x000020e0
00003c5c(2): TEST AL,AL
00003c5e(2): JZ 0x00003cb0
00003c60(6): MOV R12D,0x2
00003c66(5): JMP 0x00003b12
00003c70(4): MOV RSI,qword ptr [RBP + 0x8]
00003c74(2): XOR EDX,EDX
00003c76(3): CMP byte ptr [RSI],0x2d
00003c79(3): SETZ DL
00003c7c(3): ADD RDX,RSI
00003c7f(3): MOVSX EAX,byte ptr [RDX]
00003c82(2): JMP 0x00003c93
00003c88(4): ADD RDX,0x1
00003c8c(3): MOVSX EAX,byte ptr [RDX]
00003c8f(2): TEST AL,AL
00003c91(2): JZ 0x00003ca0
00003c93(3): SUB EAX,0x30
00003c96(3): CMP EAX,0x9
00003c99(2): JBE 0x00003c88
00003c9b(5): JMP 0x00003baf
00003ca0(5): CALL 0x000064f0
00003ca5(5): JMP 0x00003bc7
00003cb0(7): LEA RDI,[0x160d1]
00003cb7(5): CALL 0x000020e0
00003cbc(2): TEST AL,AL
00003cbe(2): JNZ 0x00003c60
00003cc0(7): LEA RDI,[0x160d4]
00003cc7(6): MOV R12D,0x3
00003ccd(5): CALL 0x000020e0
00003cd2(2): TEST AL,AL
00003cd4(6): JNZ 0x00003b12
00003cda(7): LEA RDI,[0x160d7]
00003ce1(6): MOV R12D,0x4
00003ce7(5): CALL 0x000020e0
00003cec(2): TEST AL,AL
00003cee(6): JNZ 0x00003b12
00003cf4(7): LEA RDI,[0x160da]
00003cfb(5): CALL 0x000020e0
00003d00(2): TEST AL,AL
00003d02(2): JZ 0x00003d0f
00003d04(6): MOV R12D,0x5
00003d0a(5): JMP 0x00003b12
00003d0f(4): ADD RSP,0x8
00003d13(3): MOV RAX,RBX
00003d16(1): POP RBX
00003d17(1): POP RBP
00003d18(2): POP R12
00003d1a(2): POP R13
00003d1c(2): POP R14
00003d1e(2): POP R15
00003d20(1): RET
00003d30(2): PUSH R12
00003d32(1): PUSH RBP
00003d33(3): MOV R12D,EDI
00003d36(1): PUSH RBX
00003d37(4): MOVZX EDI,DIL
00003d3b(5): CALL 0x00003ad0
00003d40(3): MOV RBX,RAX
00003d43(7): LEA RDI,[0x160dc]
00003d4a(5): CALL 0x000020e0
00003d4f(2): TEST AL,AL
00003d51(2): JZ 0x00003dc6
00003d53(2): XOR EDI,EDI
00003d55(3): TEST R12B,R12B
00003d58(2): JZ 0x00003d68
00003d5a(3): MOV RDI,RBX
00003d5d(5): CALL 0x000021e0
00003d62(3): XOR EAX,0x1
00003d65(3): MOVZX EDI,AL
00003d68(5): CALL 0x00003ad0
00003d6d(3): MOV RDI,RBX
00003d70(3): MOV RBP,RAX
00003d73(5): CALL 0x000021e0
00003d78(2): TEST AL,AL
00003d7a(2): JNZ 0x00003d88
00003d7c(3): MOV RDI,RBP
00003d7f(5): CALL 0x000021e0
00003d84(2): TEST AL,AL
00003d86(2): JZ 0x00003dd0
00003d88(3): MOV RDI,RBX
00003d8b(5): CALL 0x000021a0
00003d90(3): MOV RDI,RBP
00003d93(5): CALL 0x000021a0
00003d98(5): MOV EDI,0x18
00003d9d(5): CALL 0x00006dc0
00003da2(4): LEA RDI,[RAX + 0x8]
00003da6(2): XOR ESI,ESI
00003da8(6): MOV dword ptr [RAX],0x0
00003dae(3): MOV RBX,RAX
00003db1(5): CALL 0x00001cc0
00003db6(7): LEA RDI,[0x160dc]
00003dbd(5): CALL 0x000020e0
00003dc2(2): TEST AL,AL
00003dc4(2): JNZ 0x00003d53
00003dc6(3): MOV RAX,RBX
00003dc9(1): POP RBX
00003dca(1): POP RBP
00003dcb(2): POP R12
00003dcd(1): RET
00003dd0(3): MOV RDI,RBP
00003dd3(5): CALL 0x000021a0
00003dd8(5): JMP 0x00003d43
00003de0(2): PUSH R12
00003de2(1): PUSH RBP
00003de3(3): MOV R12D,EDI
00003de6(1): PUSH RBX
00003de7(4): MOVZX EDI,DIL
00003deb(5): CALL 0x00003d30
00003df0(3): MOV RBX,RAX
00003df3(5): NOP dword ptr [RAX + RAX*0x1]
00003df8(7): LEA RDI,[0x160de]
00003dff(5): CALL 0x000020e0
00003e04(2): TEST AL,AL
00003e06(2): JZ 0x00003e7b
00003e08(2): XOR EDI,EDI
00003e0a(3): TEST R12B,R12B
00003e0d(2): JZ 0x00003e1a
00003e0f(3): MOV RDI,RBX
00003e12(5): CALL 0x000021e0
00003e17(3): MOVZX EDI,AL
00003e1a(5): CALL 0x00003d30
00003e1f(3): MOV RDI,RBX
00003e22(3): MOV RBP,RAX
00003e25(5): CALL 0x000021e0
00003e2a(2): TEST AL,AL
00003e2c(2): JZ 0x00003e88
00003e2e(3): MOV RDI,RBX
00003e31(3): MOV RBX,RBP
00003e34(5): CALL 0x000021a0
00003e39(3): MOV RDI,RBP
00003e3c(5): CALL 0x000021e0
00003e41(2): TEST AL,AL
00003e43(2): JZ 0x00003df8
00003e45(3): MOV RDI,RBP
00003e48(5): CALL 0x000021a0
00003e4d(5): MOV EDI,0x18
00003e52(5): CALL 0x00006dc0
00003e57(4): LEA RDI,[RAX + 0x8]
00003e5b(2): XOR ESI,ESI
00003e5d(6): MOV dword ptr [RAX],0x0
00003e63(3): MOV RBX,RAX
00003e66(5): CALL 0x00001cc0
00003e6b(7): LEA RDI,[0x160de]
00003e72(5): CALL 0x000020e0
00003e77(2): TEST AL,AL
00003e79(2): JNZ 0x00003e08
00003e7b(3): MOV RAX,RBX
00003e7e(1): POP RBX
00003e7f(1): POP RBP
00003e80(2): POP R12
00003e82(1): RET
00003e88(3): MOV RDI,RBP
00003e8b(5): CALL 0x000021a0
00003e90(5): JMP 0x00003df8
00003ea0(7): MOV qword ptr [0x0021b0e0],RDI
00003ea7(1): RET
00003eb0(7): MOV byte ptr [0x0021b0d8],DIL
00003eb7(1): RET
00003ec0(1): PUSH RBP
00003ec1(1): PUSH RBX
00003ec2(4): SUB RSP,0x8
00003ec6(7): MOV RDI,qword ptr [0x0021b088]
00003ecd(5): CALL 0x000152f0
00003ed2(2): TEST EAX,EAX
00003ed4(2): JZ 0x00003eec
00003ed6(5): CALL 0x000019f0
00003edb(7): CMP byte ptr [0x0021b0d8],0x0
00003ee2(3): MOV RBX,RAX
00003ee5(2): JZ 0x00003f03
00003ee7(3): CMP dword ptr [RAX],0x20
00003eea(2): JNZ 0x00003f03
00003eec(7): MOV RDI,qword ptr [0x0021b0c0]
00003ef3(5): CALL 0x000152f0
00003ef8(2): TEST EAX,EAX
00003efa(2): JNZ 0x00003f42
00003efc(4): ADD RSP,0x8
00003f00(1): POP RBX
00003f01(1): POP RBP
00003f02(1): RET
00003f03(7): LEA RSI,[0x16173]
00003f0a(2): XOR EDI,EDI
00003f0c(5): MOV EDX,0x5
00003f11(5): CALL 0x00001a90
00003f16(7): MOV RDI,qword ptr [0x0021b0e0]
00003f1d(3): MOV RBP,RAX
00003f20(3): TEST RDI,RDI
00003f23(2): JZ 0x00003f4d
00003f25(5): CALL 0x00006290
00003f2a(2): MOV ESI,dword ptr [RBX]
00003f2c(7): LEA RDX,[0x1617f]
00003f33(3): MOV RCX,RAX
00003f36(3): MOV R8,RBP
00003f39(2): XOR EDI,EDI
00003f3b(2): XOR EAX,EAX
00003f3d(5): CALL 0x00001d00
00003f42(6): MOV EDI,dword ptr [0x0021b010]
00003f48(5): CALL 0x00001a10
00003f4d(2): MOV ESI,dword ptr [RBX]
00003f4f(7): LEA RDX,[0x16183]
00003f56(3): MOV RCX,RAX
00003f59(2): XOR EDI,EDI
00003f5b(2): XOR EAX,EAX
00003f5d(5): CALL 0x00001d00
00003f70(2): PUSH R13
00003f72(2): PUSH R12
00003f74(3): MOV R13,R8
00003f77(1): PUSH RBP
00003f78(1): PUSH RBX
00003f79(3): MOV RBP,RDX
00003f7c(3): MOV R12,RCX
00003f7f(7): SUB RSP,0xe8
00003f86(2): TEST AL,AL
00003f88(2): JZ 0x00003fc4
00003f8a(5): MOVAPS xmmword ptr [RSP + 0x60],XMM0
00003f8f(5): MOVAPS xmmword ptr [RSP + 0x70],XMM1
00003f94(8): MOVAPS xmmword ptr [0x80 + RSP],XMM2
00003f9c(8): MOVAPS xmmword ptr [0x90 + RSP],XMM3
00003fa4(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM4
00003fac(8): MOVAPS xmmword ptr [0xb0 + RSP],XMM5
00003fb4(8): MOVAPS xmmword ptr [0xc0 + RSP],XMM6
00003fbc(8): MOVAPS xmmword ptr [0xd0 + RSP],XMM7
00003fc4(9): MOV RAX,qword ptr FS:[0x28]
00003fcd(5): MOV qword ptr [RSP + 0x28],RAX
00003fd2(2): XOR EAX,EAX
00003fd4(3): CMP EDI,0x2
00003fd7(6): MOV EBX,dword ptr [0x0021b0a0]
00003fdd(10): MOV dword ptr [0x0021b0a0],0x0
00003fe7(2): JZ 0x00004020
00003fe9(5): MOV RAX,qword ptr [RSP + 0x28]
00003fee(9): XOR RAX,qword ptr FS:[0x28]
00003ff7(6): MOV dword ptr [0x0021b0a0],EBX
00003ffd(10): MOV dword ptr [0x0021b090],0x0
00004007(6): JNZ 0x000040aa
0000400d(7): ADD RSP,0xe8
00004014(1): POP RBX
00004015(1): POP RBP
00004016(2): POP R12
00004018(2): POP R13
0000401a(1): RET
00004020(7): LEA RCX,[0x21aac0]
00004027(7): LEA RDX,[0x16065]
0000402e(3): XOR R8D,R8D
00004031(5): MOV qword ptr [RSP + 0x8],R9
00004036(5): CALL 0x00001ae0
0000403b(3): CMP EAX,-0x1
0000403e(2): JZ 0x00003fe9
00004040(3): CMP EAX,0x68
00004043(5): MOV R9,qword ptr [RSP + 0x8]
00004048(2): JZ 0x000040a0
0000404a(3): CMP EAX,0x76
0000404d(2): JNZ 0x00003fe9
0000404f(8): LEA RAX,[0x110 + RSP]
00004057(7): MOV RDI,qword ptr [0x0021b088]
0000405e(5): LEA R8,[RSP + 0x10]
00004063(3): MOV RCX,R13
00004066(3): MOV RDX,R12
00004069(3): MOV RSI,RBP
0000406c(5): MOV qword ptr [RSP + 0x18],RAX
00004071(5): LEA RAX,[RSP + 0x30]
00004076(8): MOV dword ptr [RSP + 0x10],0x30
0000407e(8): MOV dword ptr [RSP + 0x14],0x30
00004086(5): MOV qword ptr [RSP + 0x20],RAX
0000408b(5): CALL 0x00006be0
00004090(2): XOR EDI,EDI
00004092(5): CALL 0x00001d60
000040a0(2): XOR EDI,EDI
000040a2(3): CALL R9
000040a5(5): JMP 0x00003fe9
000040aa(5): CALL 0x00001ad0
000040af(1): NOP
000040b0(2): PUSH R14
000040b2(2): PUSH R13
000040b4(3): MOV R14,R8
000040b7(2): PUSH R12
000040b9(1): PUSH RBP
000040ba(3): MOV R12,RDX
000040bd(1): PUSH RBX
000040be(3): MOV R13,RCX
000040c1(7): SUB RSP,0xd0
000040c8(2): TEST AL,AL
000040ca(8): MOV RBP,qword ptr [0x100 + RSP]
000040d2(2): JZ 0x0000410b
000040d4(5): MOVAPS xmmword ptr [RSP + 0x50],XMM0
000040d9(5): MOVAPS xmmword ptr [RSP + 0x60],XMM1
000040de(5): MOVAPS xmmword ptr [RSP + 0x70],XMM2
000040e3(8): MOVAPS xmmword ptr [0x80 + RSP],XMM3
000040eb(8): MOVAPS xmmword ptr [0x90 + RSP],XMM4
000040f3(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM5
000040fb(8): MOVAPS xmmword ptr [0xb0 + RSP],XMM6
00004103(8): MOVAPS xmmword ptr [0xc0 + RSP],XMM7
0000410b(9): MOV RAX,qword ptr FS:[0x28]
00004114(5): MOV qword ptr [RSP + 0x18],RAX
00004119(2): XOR EAX,EAX
0000411b(7): LEA RDX,[0x16761]
00004122(7): LEA RAX,[0x16065]
00004129(3): TEST R9B,R9B
0000412c(7): LEA RCX,[0x21aac0]
00004133(4): CMOVZ RDX,RAX
00004137(3): XOR R8D,R8D
0000413a(6): MOV EBX,dword ptr [0x0021b0a0]
00004140(10): MOV dword ptr [0x0021b0a0],0x1
0000414a(5): CALL 0x00001ae0
0000414f(3): CMP EAX,-0x1
00004152(2): JZ 0x000041b8
00004154(3): CMP EAX,0x68
00004157(6): JZ 0x000041e0
0000415d(3): CMP EAX,0x76
00004160(2): JNZ 0x000041b0
00004162(8): LEA RAX,[0x108 + RSP]
0000416a(7): MOV RDI,qword ptr [0x0021b088]
00004171(3): MOV R8,RSP
00004174(3): MOV RCX,R14
00004177(3): MOV RDX,R13
0000417a(3): MOV RSI,R12
0000417d(5): MOV qword ptr [RSP + 0x8],RAX
00004182(5): LEA RAX,[RSP + 0x20]
00004187(7): MOV dword ptr [RSP],0x30
0000418e(8): MOV dword ptr [RSP + 0x4],0x30
00004196(5): MOV qword ptr [RSP + 0x10],RAX
0000419b(5): CALL 0x00006be0
000041a0(2): XOR EDI,EDI
000041a2(5): CALL 0x00001d60
000041b0(6): MOV EDI,dword ptr [0x0021b010]
000041b6(2): CALL RBP
000041b8(5): MOV RAX,qword ptr [RSP + 0x18]
000041bd(9): XOR RAX,qword ptr FS:[0x28]
000041c6(6): MOV dword ptr [0x0021b0a0],EBX
000041cc(2): JNZ 0x000041e6
000041ce(7): ADD RSP,0xd0
000041d5(1): POP RBX
000041d6(1): POP RBP
000041d7(2): POP R12
000041d9(2): POP R13
000041db(2): POP R14
000041dd(1): RET
000041e0(2): XOR EDI,EDI
000041e2(2): CALL RBP
000041e4(2): JMP 0x000041b8
000041e6(5): CALL 0x00001ad0
000041eb(5): NOP dword ptr [RAX + RAX*0x1]
000041f0(1): PUSH RBX
000041f1(2): MOV EBX,EDI
000041f3(5): CALL 0x00001c00
000041f8(2): TEST EAX,EAX
000041fa(2): JS 0x00004200
000041fc(1): POP RBX
000041fd(1): RET
00004200(2): MOV EDI,EBX
00004202(5): CALL 0x00001a40
00004207(2): TEST EAX,EAX
00004209(3): SETZ AL
0000420c(3): MOVZX EAX,AL
0000420f(1): POP RBX
00004210(1): RET
00004220(1): PUSH RBP
00004221(1): PUSH RBX
00004222(3): MOV RBX,RSI
00004225(4): LEA RAX,[RBX + 0x18]
00004229(3): MOV RBP,RDI
0000422c(4): SUB RSP,0x8
00004230(3): MOV RSI,qword ptr [RSI]
00004233(4): MOV RDX,qword ptr [RBX + 0x8]
00004237(3): CMP RSI,RAX
0000423a(2): JZ 0x00004260
0000423c(3): MOV qword ptr [RDI],RSI
0000423f(4): MOVZX EAX,byte ptr [RBX + 0x10]
00004243(4): MOV qword ptr [RBP + 0x8],RDX
00004247(2): TEST AL,AL
00004249(3): MOV byte ptr [RBP + 0x10],AL
0000424c(2): JZ 0x00004254
0000424e(3): MOV EAX,dword ptr [RBX + 0x14]
00004251(3): MOV dword ptr [RBP + 0x14],EAX
00004254(4): ADD RSP,0x8
00004258(1): POP RBX
00004259(1): POP RBP
0000425a(1): RET
00004260(4): LEA RCX,[RDI + 0x18]
00004264(3): MOV RDI,RCX
00004267(5): CALL 0x00001be0
0000426c(4): MOV RDX,qword ptr [RBX + 0x8]
00004270(4): MOV qword ptr [RBP],RAX
00004274(2): JMP 0x0000423f
00004280(2): MOV EAX,EDI
00004282(7): LEA RDX,[0x161a0]
00004289(2): MOV ECX,EDI
0000428b(3): SHR AL,0x5
0000428e(3): AND ECX,0x1f
00004291(3): AND EAX,0x7
00004294(3): MOV EAX,dword ptr [RDX + RAX*0x4]
00004297(2): SHR EAX,CL
00004299(3): AND EAX,0x1
0000429c(1): RET
000042a0(2): PUSH R14
000042a2(2): PUSH R13
000042a4(2): PUSH R12
000042a6(1): PUSH RBP
000042a7(3): MOV R12,RDI
000042aa(1): PUSH RBX
000042ab(2): MOV EBX,ESI
000042ad(4): SUB RSP,0x50
000042b1(9): MOV RAX,qword ptr FS:[0x28]
000042ba(5): MOV qword ptr [RSP + 0x48],RAX
000042bf(2): XOR EAX,EAX
000042c1(5): CALL 0x00001aa0
000042c6(4): CMP RAX,0x1
000042ca(2): JBE 0x000042d3
000042cc(3): CMP BL,0x2f
000042cf(2): MOV EBP,EBX
000042d1(2): JA 0x00004300
000042d3(5): MOV RAX,qword ptr [RSP + 0x48]
000042d8(9): XOR RAX,qword ptr FS:[0x28]
000042e1(6): JNZ 0x000044e3
000042e7(4): ADD RSP,0x50
000042eb(2): MOV ESI,EBX
000042ed(3): MOV RDI,R12
000042f0(1): POP RBX
000042f1(1): POP RBP
000042f2(2): POP R12
000042f4(2): POP R13
000042f6(2): POP R14
000042f8(5): JMP 0x00001b00
00004300(3): MOV RBX,RSP
00004303(5): MOV qword ptr [RSP + 0x10],R12
00004308(4): MOV byte ptr [RSP],0x0
0000430c(9): MOV qword ptr [RSP + 0x4],0x0
00004315(5): MOV byte ptr [RSP + 0xc],0x0
0000431a(7): LEA R12,[0x161a0]
00004321(4): LEA R13,[RBX + 0x4]
00004325(2): JMP 0x0000438e
00004330(5): MOV RAX,qword ptr [RSP + 0x10]
00004335(3): MOVZX ECX,byte ptr [RAX]
00004338(2): MOV EDX,ECX
0000433a(3): SHR DL,0x5
0000433d(3): AND EDX,0x7
00004340(4): MOV EDX,dword ptr [R12 + RDX*0x4]
00004344(3): BT EDX,ECX
00004347(6): JNC 0x00004448
0000434d(9): MOV qword ptr [RSP + 0x18],0x1
00004356(3): MOVSX EDX,byte ptr [RAX]
00004359(5): MOV byte ptr [RSP + 0x20],0x1
0000435e(5): MOV byte ptr [RSP + 0xc],0x1
00004363(2): TEST EDX,EDX
00004365(4): MOV dword ptr [RSP + 0x24],EDX
00004369(6): JZ 0x000044c0
0000436f(5): MOV EDX,0x1
00004374(3): MOV R14,RAX
00004377(3): CMP BPL,byte ptr [R14]
0000437a(6): JZ 0x000044c3
00004380(4): LEA RAX,[R14 + RDX*0x1]
00004384(5): MOV byte ptr [RSP + 0xc],0x0
00004389(5): MOV qword ptr [RSP + 0x10],RAX
0000438e(4): CMP byte ptr [RSP],0x0
00004392(2): JZ 0x00004330
00004394(5): CALL 0x00001aa0
00004399(5): MOV R14,qword ptr [RSP + 0x10]
0000439e(3): MOV RSI,RAX
000043a1(3): MOV RDI,R14
000043a4(5): CALL 0x000064b0
000043a9(4): LEA RCX,[RBX + 0x4]
000043ad(4): LEA RDI,[RBX + 0x24]
000043b1(3): MOV RDX,RAX
000043b4(3): MOV RSI,R14
000043b7(5): CALL 0x00007050
000043bc(4): CMP RAX,-0x1
000043c0(5): MOV qword ptr [RSP + 0x18],RAX
000043c5(6): JZ 0x00004468
000043cb(4): CMP RAX,-0x2
000043cf(6): JZ 0x00004490
000043d5(3): TEST RAX,RAX
000043d8(2): JNZ 0x000043fe
000043da(5): MOV R14,qword ptr [RSP + 0x10]
000043df(9): MOV qword ptr [RSP + 0x18],0x1
000043e8(4): CMP byte ptr [R14],0x0
000043ec(6): JNZ 0x00004507
000043f2(4): MOV EDX,dword ptr [RSP + 0x24]
000043f6(2): TEST EDX,EDX
000043f8(6): JNZ 0x00004526
000043fe(4): LEA RDI,[RBX + 0x4]
00004402(5): MOV byte ptr [RSP + 0x20],0x1
00004407(5): CALL 0x00001d90
0000440c(2): TEST EAX,EAX
0000440e(6): JZ 0x000044b0
00004414(4): MOV byte ptr [RSP],0x0
00004418(5): MOV byte ptr [RSP + 0xc],0x1
0000441d(4): MOV EAX,dword ptr [RSP + 0x24]
00004421(2): TEST EAX,EAX
00004423(6): JZ 0x000044c0
00004429(5): MOV R14,qword ptr [RSP + 0x10]
0000442e(5): MOV RDX,qword ptr [RSP + 0x18]
00004433(4): CMP RDX,0x1
00004437(6): JNZ 0x00004380
0000443d(5): JMP 0x00004377
00004448(3): MOV RDI,R13
0000444b(5): CALL 0x00001d90
00004450(2): TEST EAX,EAX
00004452(6): JZ 0x000044e8
00004458(4): MOV byte ptr [RSP],0x1
0000445c(5): JMP 0x00004394
00004468(9): MOV qword ptr [RSP + 0x18],0x1
00004471(5): MOV byte ptr [RSP + 0x20],0x0
00004476(5): MOV EDX,0x1
0000447b(5): MOV byte ptr [RSP + 0xc],0x1
00004480(5): MOV R14,qword ptr [RSP + 0x10]
00004485(5): JMP 0x00004377
00004490(5): MOV R14,qword ptr [RSP + 0x10]
00004495(3): MOV RDI,R14
00004498(5): CALL 0x00001ab0
0000449d(5): MOV byte ptr [RSP + 0x20],0x0
000044a2(5): MOV qword ptr [RSP + 0x18],RAX
000044a7(5): MOV byte ptr [RSP + 0xc],0x1
000044ac(2): JMP 0x0000442e
000044b0(5): MOV byte ptr [RSP + 0xc],0x1
000044b5(5): JMP 0x0000441d
000044c0(3): XOR R14D,R14D
000044c3(5): MOV RSI,qword ptr [RSP + 0x48]
000044c8(9): XOR RSI,qword ptr FS:[0x28]
000044d1(3): MOV RAX,R14
000044d4(2): JNZ 0x000044e3
000044d6(4): ADD RSP,0x50
000044da(1): POP RBX
000044db(1): POP RBP
000044dc(2): POP R12
000044de(2): POP R13
000044e0(2): POP R14
000044e2(1): RET
000044e3(5): CALL 0x00001ad0
000044e8(7): LEA RCX,[0x161c0]
000044ef(7): LEA RSI,[0x15610]
000044f6(7): LEA RDI,[0x16037]
000044fd(5): MOV EDX,0x96
00004502(5): CALL 0x00001b50
00004507(7): LEA RCX,[0x161c0]
0000450e(7): LEA RSI,[0x15610]
00004515(7): LEA RDI,[0x1604e]
0000451c(5): MOV EDX,0xb2
00004521(5): CALL 0x00001b50
00004526(7): LEA RCX,[0x161c0]
0000452d(7): LEA RSI,[0x15610]
00004534(7): LEA RDI,[0x15f7d]
0000453b(5): MOV EDX,0xb3
00004540(5): CALL 0x00001b50
00004545(10): NOP word ptr CS:[RAX + RAX*0x1]
0000454f(1): NOP
00004550(2): PUSH R14
00004552(2): PUSH R13
00004554(2): PUSH R12
00004556(1): PUSH RBP
00004557(1): PUSH RBX
00004558(3): MOV RBX,RDI
0000455b(4): SUB RSP,0x50
0000455f(9): MOV RAX,qword ptr FS:[0x28]
00004568(5): MOV qword ptr [RSP + 0x48],RAX
0000456d(2): XOR EAX,EAX
0000456f(5): CALL 0x00001aa0
00004574(4): CMP RAX,0x1
00004578(2): JA 0x000045b0
0000457a(3): MOV RDI,RBX
0000457d(5): CALL 0x00001ab0
00004582(3): MOV RBX,RAX
00004585(5): MOV RSI,qword ptr [RSP + 0x48]
0000458a(9): XOR RSI,qword ptr FS:[0x28]
00004593(3): MOV RAX,RBX
00004596(6): JNZ 0x00004739
0000459c(4): ADD RSP,0x50
000045a0(1): POP RBX
000045a1(1): POP RBP
000045a2(2): POP R12
000045a4(2): POP R13
000045a6(2): POP R14
000045a8(1): RET
000045b0(3): MOV RBP,RSP
000045b3(5): MOV qword ptr [RSP + 0x10],RBX
000045b8(4): MOV byte ptr [RSP],0x0
000045bc(9): MOV qword ptr [RSP + 0x4],0x0
000045c5(5): MOV byte ptr [RSP + 0xc],0x0
000045ca(2): XOR EBX,EBX
000045cc(7): LEA R12,[0x161a0]
000045d3(4): LEA R13,[RBP + 0x4]
000045d7(2): JMP 0x00004636
000045e0(5): MOV RCX,qword ptr [RSP + 0x10]
000045e5(3): MOVZX EDX,byte ptr [RCX]
000045e8(2): MOV EAX,EDX
000045ea(3): SHR AL,0x5
000045ed(3): AND EAX,0x7
000045f0(4): MOV EAX,dword ptr [R12 + RAX*0x4]
000045f4(3): BT EAX,EDX
000045f7(6): JNC 0x000046c0
000045fd(9): MOV qword ptr [RSP + 0x18],0x1
00004606(3): MOVSX EAX,byte ptr [RCX]
00004609(5): MOV byte ptr [RSP + 0x20],0x1
0000460e(5): MOV byte ptr [RSP + 0xc],0x1
00004613(4): MOV dword ptr [RSP + 0x24],EAX
00004617(4): MOV EAX,dword ptr [RSP + 0x24]
0000461b(2): TEST EAX,EAX
0000461d(6): JZ 0x00004585
00004623(5): MOV RAX,qword ptr [RSP + 0x18]
00004628(5): ADD qword ptr [RSP + 0x10],RAX
0000462d(4): ADD RBX,0x1
00004631(5): MOV byte ptr [RSP + 0xc],0x0
00004636(4): CMP byte ptr [RSP],0x0
0000463a(2): JZ 0x000045e0
0000463c(5): CALL 0x00001aa0
00004641(5): MOV R14,qword ptr [RSP + 0x10]
00004646(3): MOV RSI,RAX
00004649(3): MOV RDI,R14
0000464c(5): CALL 0x000064b0
00004651(4): LEA RCX,[RBP + 0x4]
00004655(4): LEA RDI,[RBP + 0x24]
00004659(3): MOV RDX,RAX
0000465c(3): MOV RSI,R14
0000465f(5): CALL 0x00007050
00004664(4): CMP RAX,-0x1
00004668(5): MOV qword ptr [RSP + 0x18],RAX
0000466d(2): JZ 0x000046d8
0000466f(4): CMP RAX,-0x2
00004673(2): JZ 0x000046f0
00004675(3): TEST RAX,RAX
00004678(2): JNZ 0x0000469d
0000467a(5): MOV RAX,qword ptr [RSP + 0x10]
0000467f(9): MOV qword ptr [RSP + 0x18],0x1
00004688(3): CMP byte ptr [RAX],0x0
0000468b(6): JNZ 0x0000473e
00004691(4): MOV EDX,dword ptr [RSP + 0x24]
00004695(2): TEST EDX,EDX
00004697(6): JNZ 0x0000475d
0000469d(4): LEA RDI,[RBP + 0x4]
000046a1(5): MOV byte ptr [RSP + 0x20],0x1
000046a6(5): CALL 0x00001d90
000046ab(2): TEST EAX,EAX
000046ad(2): JZ 0x00004710
000046af(4): MOV byte ptr [RSP],0x0
000046b3(5): MOV byte ptr [RSP + 0xc],0x1
000046b8(5): JMP 0x00004617
000046c0(3): MOV RDI,R13
000046c3(5): CALL 0x00001d90
000046c8(2): TEST EAX,EAX
000046ca(2): JZ 0x0000471a
000046cc(4): MOV byte ptr [RSP],0x1
000046d0(5): JMP 0x0000463c
000046d8(9): MOV qword ptr [RSP + 0x18],0x1
000046e1(5): MOV byte ptr [RSP + 0x20],0x0
000046e6(5): JMP 0x00004623
000046f0(5): MOV RDI,qword ptr [RSP + 0x10]
000046f5(5): CALL 0x00001ab0
000046fa(5): MOV byte ptr [RSP + 0x20],0x0
000046ff(5): MOV qword ptr [RSP + 0x18],RAX
00004704(5): JMP 0x00004623
00004710(5): MOV byte ptr [RSP + 0xc],0x1
00004715(5): JMP 0x00004617
0000471a(7): LEA RCX,[0x161e0]
00004721(7): LEA RSI,[0x15610]
00004728(7): LEA RDI,[0x16037]
0000472f(5): MOV EDX,0x96
00004734(5): CALL 0x00001b50
00004739(5): CALL 0x00001ad0
0000473e(7): LEA RCX,[0x161e0]
00004745(7): LEA RSI,[0x15610]
0000474c(7): LEA RDI,[0x1604e]
00004753(5): MOV EDX,0xb2
00004758(5): CALL 0x00001b50
0000475d(7): LEA RCX,[0x161e0]
00004764(7): LEA RSI,[0x15610]
0000476b(7): LEA RDI,[0x15f7d]
00004772(5): MOV EDX,0xb3
00004777(5): CALL 0x00001b50
0000477c(4): NOP dword ptr [RAX]
00004780(3): TEST RDI,RDI
00004783(1): PUSH RBX
00004784(2): JZ 0x000047fd
00004786(5): MOV ESI,0x2f
0000478b(3): MOV RBX,RDI
0000478e(5): CALL 0x00001b20
00004793(3): TEST RAX,RAX
00004796(2): JZ 0x000047ed
00004798(4): LEA R8,[RAX + 0x1]
0000479c(3): MOV RDX,R8
0000479f(3): SUB RDX,RBX
000047a2(4): CMP RDX,0x6
000047a6(2): JLE 0x000047ed
000047a8(4): LEA RSI,[RAX + -0x6]
000047ac(7): LEA RDI,[0x16230]
000047b3(5): MOV ECX,0x7
000047b8(2): CMPSB.REPE RDI,RSI
000047ba(3): SETA DL
000047bd(3): SBB DL,0x0
000047c0(2): TEST DL,DL
000047c2(2): JNZ 0x000047ed
000047c4(7): LEA RDI,[0x16238]
000047cb(5): MOV ECX,0x3
000047d0(3): MOV RSI,R8
000047d3(3): MOV RBX,R8
000047d6(2): CMPSB.REPE RDI,RSI
000047d8(3): SETA DL
000047db(3): SBB DL,0x0
000047de(2): TEST DL,DL
000047e0(2): JNZ 0x000047ed
000047e2(4): LEA RBX,[RAX + 0x4]
000047e6(7): MOV qword ptr [0x0021b080],RBX
000047ed(7): MOV qword ptr [0x0021b0e8],RBX
000047f4(7): MOV qword ptr [0x0021b098],RBX
000047fb(1): POP RBX
000047fc(1): RET
000047fd(7): MOV RCX,qword ptr [0x0021b0c0]
00004804(7): LEA RDI,[0x161f8]
0000480b(5): MOV EDX,0x37
00004810(5): MOV ESI,0x1
00004815(5): CALL 0x00001d70
0000481a(5): CALL 0x000019e0
0000481f(1): NOP
00004820(1): PUSH RBP
00004821(1): PUSH RBX
00004822(3): MOV RBP,RDI
00004825(2): MOV EBX,ESI
00004827(4): SUB RSP,0x8
0000482b(5): CALL 0x000153d0
00004830(3): MOVZX EDX,byte ptr [RAX]
00004833(3): AND EDX,0xffffffdf
00004836(3): CMP DL,0x55
00004839(2): JZ 0x000048b0
0000483b(3): CMP DL,0x47
0000483e(2): JZ 0x00004860
00004840(7): LEA RAX,[0x1624b]
00004847(7): LEA RDX,[0x1609e]
0000484e(3): CMP EBX,0x9
00004851(4): CMOVNZ RAX,RDX
00004855(4): ADD RSP,0x8
00004859(1): POP RBX
0000485a(1): POP RBP
0000485b(1): RET
00004860(4): MOVZX EDX,byte ptr [RAX + 0x1]
00004864(3): AND EDX,0xffffffdf
00004867(3): CMP DL,0x42
0000486a(2): JNZ 0x00004840
0000486c(4): CMP byte ptr [RAX + 0x2],0x31
00004870(2): JNZ 0x00004840
00004872(4): CMP byte ptr [RAX + 0x3],0x38
00004876(2): JNZ 0x00004840
00004878(4): CMP byte ptr [RAX + 0x4],0x30
0000487c(2): JNZ 0x00004840
0000487e(4): CMP byte ptr [RAX + 0x5],0x33
00004882(2): JNZ 0x00004840
00004884(4): CMP byte ptr [RAX + 0x6],0x30
00004888(2): JNZ 0x00004840
0000488a(4): CMP byte ptr [RAX + 0x7],0x0
0000488e(2): JNZ 0x00004840
00004890(4): CMP byte ptr [RBP],0x60
00004894(7): LEA RAX,[0x16244]
0000489b(7): LEA RDX,[0x16248]
000048a2(4): CMOVNZ RAX,RDX
000048a6(4): ADD RSP,0x8
000048aa(1): POP RBX
000048ab(1): POP RBP
000048ac(1): RET
000048b0(4): MOVZX EDX,byte ptr [RAX + 0x1]
000048b4(3): AND EDX,0xffffffdf
000048b7(3): CMP DL,0x54
000048ba(2): JNZ 0x00004840
000048bc(4): MOVZX EDX,byte ptr [RAX + 0x2]
000048c0(3): AND EDX,0xffffffdf
000048c3(3): CMP DL,0x46
000048c6(6): JNZ 0x00004840
000048cc(4): CMP byte ptr [RAX + 0x3],0x2d
000048d0(6): JNZ 0x00004840
000048d6(4): CMP byte ptr [RAX + 0x4],0x38
000048da(6): JNZ 0x00004840
000048e0(4): CMP byte ptr [RAX + 0x5],0x0
000048e4(6): JNZ 0x00004840
000048ea(4): CMP byte ptr [RBP],0x60
000048ee(7): LEA RAX,[0x1623c]
000048f5(7): LEA RDX,[0x16240]
000048fc(4): CMOVNZ RAX,RDX
00004900(4): ADD RSP,0x8
00004904(1): POP RBX
00004905(1): POP RBP
00004906(1): RET
00004910(2): PUSH R15
00004912(2): PUSH R14
00004914(3): MOV R15D,R8D
00004917(2): PUSH R13
00004919(2): PUSH R12
0000491b(3): MOV R14,RDI
0000491e(1): PUSH RBP
0000491f(1): PUSH RBX
00004920(3): MOV EBX,R9D
00004923(3): MOV R13,RSI
00004926(3): MOV RBP,RCX
00004929(3): AND EBX,0x2
0000492c(7): SUB RSP,0xb8
00004933(8): MOV RAX,qword ptr [0xf0 + RSP]
0000493b(5): MOV qword ptr [RSP + 0x10],RDX
00004940(5): MOV dword ptr [RSP + 0x8],R8D
00004945(5): MOV dword ptr [RSP + 0x78],R9D
0000494a(5): MOV qword ptr [RSP + 0x20],RAX
0000494f(8): MOV RAX,qword ptr [0xf8 + RSP]
00004957(5): MOV qword ptr [RSP + 0x68],RAX
0000495c(8): MOV RAX,qword ptr [0x100 + RSP]
00004964(5): MOV qword ptr [RSP + 0x60],RAX
00004969(9): MOV RAX,qword ptr FS:[0x28]
00004972(8): MOV qword ptr [0xa8 + RSP],RAX
0000497a(2): XOR EAX,EAX
0000497c(5): CALL 0x00001aa0
00004981(4): CMP R15D,0xa
00004985(5): MOV qword ptr [RSP + 0x58],RAX
0000498a(6): JA 0x00005b3f
00004990(7): LEA RCX,[0x162a0]
00004997(3): MOV EDX,R15D
0000499a(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
0000499e(3): ADD RAX,RCX
000049a1(2): JMP RAX
000049a3(5): MOV byte ptr [RSP + 0xe],0x1
000049a8(5): MOV byte ptr [RSP + 0x7c],0x0
000049ad(3): XOR R12D,R12D
000049b0(9): MOV qword ptr [RSP + 0x50],0x0
000049b9(5): MOV byte ptr [RSP + 0xf],0x1
000049be(5): MOV byte ptr [RSP + 0xd],0x0
000049c3(7): LEA RAX,[0x1609e]
000049ca(9): MOV qword ptr [RSP + 0x18],0x1
000049d3(3): XOR R15D,R15D
000049d6(8): MOV dword ptr [RSP + 0x8],0x2
000049de(5): MOV qword ptr [RSP + 0x48],RAX
000049e3(3): XOR R11D,R11D
000049e6(3): MOV RAX,RBP
000049e9(3): MOV R8D,R12D
000049ec(3): MOV RBP,R11
000049ef(3): MOV R11,RAX
000049f2(6): NOP word ptr [RAX + RAX*0x1]
000049f8(3): CMP R11,RBP
000049fb(4): SETNZ R12B
000049ff(4): CMP R11,-0x1
00004a03(2): JNZ 0x00004a12
00004a05(5): MOV RAX,qword ptr [RSP + 0x10]
00004a0a(4): CMP byte ptr [RAX + RBP*0x1],0x0
00004a0e(4): SETNZ R12B
00004a12(3): TEST R12B,R12B
00004a15(6): JZ 0x00005070
00004a1b(5): CMP dword ptr [RSP + 0x8],0x2
00004a20(5): MOV RDI,qword ptr [RSP + 0x10]
00004a25(4): LEA R9,[RDI + RBP*0x1]
00004a29(3): SETNZ AL
00004a2c(4): AND AL,byte ptr [RSP + 0xd]
00004a30(3): MOV R10D,EAX
00004a33(6): JZ 0x00004ae0
00004a39(5): MOV RAX,qword ptr [RSP + 0x18]
00004a3e(3): TEST RAX,RAX
00004a41(6): JZ 0x00004e70
00004a47(4): CMP R11,-0x1
00004a4b(5): LEA RBX,[RBP + RAX*0x1]
00004a50(2): JNZ 0x00004a80
00004a52(4): CMP RAX,0x1
00004a56(2): JBE 0x00004a80
00004a58(5): MOV byte ptr [RSP + 0x38],R8B
00004a5d(5): MOV byte ptr [RSP + 0x30],R10B
00004a62(5): MOV qword ptr [RSP + 0x28],R9
00004a67(5): CALL 0x00001ab0
00004a6c(6): MOVZX R8D,byte ptr [RSP + 0x38]
00004a72(6): MOVZX R10D,byte ptr [RSP + 0x30]
00004a78(3): MOV R11,RAX
00004a7b(5): MOV R9,qword ptr [RSP + 0x28]
00004a80(3): CMP RBX,R11
00004a83(5): MOV byte ptr [RSP + 0x28],R10B
00004a88(6): JA 0x00005040
00004a8e(5): MOV RDX,qword ptr [RSP + 0x18]
00004a93(5): MOV RSI,qword ptr [RSP + 0x48]
00004a98(3): MOV RDI,R9
00004a9b(5): MOV qword ptr [RSP + 0x40],R11
00004aa0(5): MOV byte ptr [RSP + 0x38],R8B
00004aa5(5): MOV qword ptr [RSP + 0x30],R9
00004aaa(5): CALL 0x00001b90
00004aaf(2): TEST EAX,EAX
00004ab1(5): MOV R9,qword ptr [RSP + 0x30]
00004ab6(6): MOVZX R8D,byte ptr [RSP + 0x38]
00004abc(5): MOV R11,qword ptr [RSP + 0x40]
00004ac1(6): JNZ 0x00005040
00004ac7(5): CMP byte ptr [RSP + 0xf],0x0
00004acc(6): MOVZX R10D,byte ptr [RSP + 0x28]
00004ad2(6): JNZ 0x00005a55
00004ad8(8): NOP dword ptr [RAX + RAX*0x1]
00004ae0(4): MOVZX EBX,byte ptr [R9]
00004ae4(3): CMP BL,0x7e
00004ae7(6): JA 0x00004e08
00004aed(7): LEA RCX,[0x162cc]
00004af4(3): MOVZX EDX,BL
00004af7(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00004afb(3): ADD RAX,RCX
00004afe(2): JMP RAX
00004b00(3): XOR R10D,R10D
00004b03(4): CMP R11,0x1
00004b07(3): SETNZ AL
00004b0a(4): CMP R11,-0x1
00004b0e(2): JNZ 0x00004b1c
00004b10(5): MOV RAX,qword ptr [RSP + 0x10]
00004b15(4): CMP byte ptr [RAX + 0x1],0x0
00004b19(3): SETNZ AL
00004b1c(5): CMP dword ptr [RSP + 0x8],0x2
00004b21(3): SETZ DL
00004b24(2): TEST AL,AL
00004b26(6): JZ 0x00004d78
00004b2c(3): XOR R12D,R12D
00004b2f(2): XOR EAX,EAX
00004b31(7): NOP dword ptr [RAX]
00004b38(5): CMP byte ptr [RSP + 0xd],0x1
00004b3d(6): JNZ 0x00004c52
00004b43(2): TEST DL,DL
00004b45(6): JNZ 0x00004c52
00004b4b(5): MOV RSI,qword ptr [RSP + 0x20]
00004b50(3): TEST RSI,RSI
00004b53(2): JZ 0x00004b69
00004b55(2): MOV EDX,EBX
00004b57(3): SHR DL,0x5
00004b5a(3): MOVZX EDX,DL
00004b5d(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00004b60(3): BT EDX,EBX
00004b63(6): JC 0x00004cb3
00004b69(3): TEST R10B,R10B
00004b6c(6): JNZ 0x00004cb3
00004b72(3): XOR EAX,0x1
00004b75(4): ADD RBP,0x1
00004b79(3): AND EAX,R8D
00004b7c(2): TEST AL,AL
00004b7e(2): JZ 0x00004ba0
00004b80(3): CMP R13,R15
00004b83(2): JBE 0x00004b8a
00004b85(5): MOV byte ptr [R14 + R15*0x1],0x27
00004b8a(4): LEA RAX,[R15 + 0x1]
00004b8e(3): CMP R13,RAX
00004b91(2): JBE 0x00004b99
00004b93(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
00004b99(4): ADD R15,0x2
00004b9d(3): XOR R8D,R8D
00004ba0(3): CMP R15,R13
00004ba3(2): JNC 0x00004ba9
00004ba5(4): MOV byte ptr [R14 + R15*0x1],BL
00004ba9(5): MOVZX EDI,byte ptr [RSP + 0xe]
00004bae(4): ADD R15,0x1
00004bb2(5): MOV EAX,0x0
00004bb7(3): TEST R12B,R12B
00004bba(3): CMOVZ EDI,EAX
00004bbd(5): MOV byte ptr [RSP + 0xe],DIL
00004bc2(5): JMP 0x000049f8
00004bd0(3): XOR R10D,R10D
00004bd3(4): MOV EAX,dword ptr [RSP + 0x8]
00004bd7(3): CMP EAX,0x2
00004bda(6): JZ 0x00005198
00004be0(3): CMP EAX,0x5
00004be3(6): JZ 0x00005158
00004be9(3): CMP EAX,0x2
00004bec(5): MOV EBX,0x3f
00004bf1(3): SETZ DL
00004bf4(3): XOR R12D,R12D
00004bf7(2): XOR EAX,EAX
00004bf9(5): JMP 0x00004b38
00004c00(3): XOR R10D,R10D
00004c03(5): CMP dword ptr [RSP + 0x8],0x2
00004c08(6): JZ 0x00005110
00004c0e(5): MOV byte ptr [RSP + 0x7c],R12B
00004c13(2): XOR EDX,EDX
00004c15(2): XOR EAX,EAX
00004c17(5): MOV EBX,0x27
00004c1c(5): JMP 0x00004b38
00004c28(5): MOV EDX,0x9
00004c2d(5): MOV EBX,0x74
00004c32(5): CMP dword ptr [RSP + 0x8],0x2
00004c37(3): SETZ AL
00004c3a(4): AND AL,byte ptr [RSP + 0xf]
00004c3e(6): JNZ 0x00004d8e
00004c44(5): CMP byte ptr [RSP + 0xd],0x0
00004c49(2): JNZ 0x00004cb0
00004c4b(2): MOV EBX,EDX
00004c4d(3): XOR R12D,R12D
00004c50(2): XOR EAX,EAX
00004c52(5): CMP byte ptr [RSP + 0xf],0x0
00004c57(6): JNZ 0x00004b4b
00004c5d(5): JMP 0x00004b69
00004c68(5): MOV EDX,0x8
00004c6d(5): MOV EBX,0x62
00004c72(2): JMP 0x00004c44
00004c78(5): CMP dword ptr [RSP + 0x8],0x2
00004c7d(6): JZ 0x00005050
00004c83(5): CMP byte ptr [RSP + 0xd],0x0
00004c88(6): JZ 0x00004ea0
00004c8e(5): CMP byte ptr [RSP + 0xf],0x0
00004c93(6): JZ 0x00004ea0
00004c99(6): CMP qword ptr [RSP + 0x18],0x0
00004c9f(6): JNZ 0x0000505b
00004ca5(5): MOV EBX,0x5c
00004caa(6): NOP word ptr [RAX + RAX*0x1]
00004cb0(3): XOR R12D,R12D
00004cb3(5): CMP dword ptr [RSP + 0x8],0x2
00004cb8(3): SETZ DL
00004cbb(5): CMP byte ptr [RSP + 0xf],0x0
00004cc0(2): MOV EAX,EDX
00004cc2(6): JNZ 0x00005518
00004cc8(3): MOV EAX,R8D
00004ccb(3): XOR EAX,0x1
00004cce(2): AND AL,DL
00004cd0(2): JZ 0x00004d01
00004cd2(3): CMP R13,R15
00004cd5(2): JBE 0x00004cdc
00004cd7(5): MOV byte ptr [R14 + R15*0x1],0x27
00004cdc(4): LEA RDX,[R15 + 0x1]
00004ce0(3): CMP R13,RDX
00004ce3(2): JBE 0x00004ceb
00004ce5(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00004ceb(4): LEA RDX,[R15 + 0x2]
00004cef(3): CMP R13,RDX
00004cf2(2): JBE 0x00004cfa
00004cf4(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00004cfa(4): ADD R15,0x3
00004cfe(3): MOV R8D,EAX
00004d01(3): CMP R13,R15
00004d04(2): JBE 0x00004d0b
00004d06(5): MOV byte ptr [R14 + R15*0x1],0x5c
00004d0b(4): ADD R15,0x1
00004d0f(4): ADD RBP,0x1
00004d13(5): JMP 0x00004ba0
00004d20(5): CMP byte ptr [RSP + 0xd],0x0
00004d25(6): JNZ 0x00004ef3
00004d2b(2): XOR EDX,EDX
00004d2d(5): TEST byte ptr [RSP + 0x78],0x1
00004d32(6): JZ 0x00004c4b
00004d38(4): ADD RBP,0x1
00004d3c(5): JMP 0x000049f8
00004d48(5): CMP dword ptr [RSP + 0x8],0x2
00004d4d(3): SETZ DL
00004d50(2): XOR EAX,EAX
00004d52(5): JMP 0x00004b38
00004d60(5): MOV EDX,0x7
00004d65(5): MOV EBX,0x61
00004d6a(5): JMP 0x00004c44
00004d70(5): CMP dword ptr [RSP + 0x8],0x2
00004d75(3): SETZ DL
00004d78(3): TEST RBP,RBP
00004d7b(6): JNZ 0x00004b2c
00004d81(5): MOVZX EAX,byte ptr [RSP + 0xf]
00004d86(2): AND AL,DL
00004d88(6): JZ 0x00004b38
00004d8e(3): MOV RBP,R11
00004d91(8): MOV dword ptr [RSP + 0x8],0x2
00004d99(5): JMP 0x00005499
00004da0(5): CMP dword ptr [RSP + 0x8],0x2
00004da5(3): SETZ DL
00004da8(3): XOR R12D,R12D
00004dab(2): JMP 0x00004d81
00004db0(5): CMP dword ptr [RSP + 0x8],0x2
00004db5(5): MOV EBX,0x20
00004dba(3): SETZ DL
00004dbd(2): JMP 0x00004d81
00004dc0(5): MOV EDX,0xd
00004dc5(5): MOV EBX,0x72
00004dca(5): JMP 0x00004c32
00004dd0(5): MOV EDX,0xc
00004dd5(5): MOV EBX,0x66
00004dda(5): JMP 0x00004c44
00004de0(5): MOV EDX,0xb
00004de5(5): MOV EBX,0x76
00004dea(5): JMP 0x00004c44
00004df0(5): MOV EDX,0xa
00004df5(5): MOV EBX,0x6e
00004dfa(5): JMP 0x00004c32
00004e00(3): XOR R10D,R10D
00004e03(5): NOP dword ptr [RAX + RAX*0x1]
00004e08(6): CMP qword ptr [RSP + 0x58],0x1
00004e0e(6): JNZ 0x000051b8
00004e14(5): MOV qword ptr [RSP + 0x38],R11
00004e19(5): MOV byte ptr [RSP + 0x30],R8B
00004e1e(5): MOV byte ptr [RSP + 0x28],R10B
00004e23(5): CALL 0x00001dc0
00004e28(3): MOV RCX,qword ptr [RAX]
00004e2b(3): MOVZX EDX,BL
00004e2e(6): MOVZX R10D,byte ptr [RSP + 0x28]
00004e34(6): MOVZX R8D,byte ptr [RSP + 0x30]
00004e3a(5): MOV R11,qword ptr [RSP + 0x38]
00004e3f(5): MOV EDI,0x1
00004e44(4): MOVZX EAX,word ptr [RCX + RDX*0x2]
00004e48(4): AND AX,0x4000
00004e4c(4): SETNZ R12B
00004e50(3): SETZ AL
00004e53(4): AND AL,byte ptr [RSP + 0xd]
00004e57(2): TEST AL,AL
00004e59(6): JNZ 0x000057f1
00004e5f(5): CMP dword ptr [RSP + 0x8],0x2
00004e64(3): SETZ DL
00004e67(5): JMP 0x00004b38
00004e70(4): MOVZX EBX,byte ptr [R9]
00004e74(3): CMP BL,0x7e
00004e77(2): JA 0x00004e00
00004e79(7): LEA RCX,[0x164c8]
00004e80(3): MOVZX EDX,BL
00004e83(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00004e87(3): ADD RAX,RCX
00004e8a(2): JMP RAX
00004e90(3): XOR R10D,R10D
00004e93(5): CMP byte ptr [RSP + 0xd],0x0
00004e98(6): JNZ 0x00004c8e
00004e9e(2): NOP
00004ea0(5): MOV EDX,0x5c
00004ea5(5): MOV EBX,0x5c
00004eaa(5): JMP 0x00004c44
00004eb0(5): MOV EDX,0xc
00004eb5(3): XOR R10D,R10D
00004eb8(5): MOV EBX,0x66
00004ebd(5): JMP 0x00004c44
00004ec8(5): MOV EDX,0xa
00004ecd(3): XOR R10D,R10D
00004ed0(5): MOV EBX,0x6e
00004ed5(5): JMP 0x00004c32
00004ee0(5): MOV EBX,0x61
00004ee5(5): JMP 0x00004cb0
00004ef0(3): XOR R10D,R10D
00004ef3(5): CMP dword ptr [RSP + 0x8],0x2
00004ef8(3): SETZ DL
00004efb(5): CMP byte ptr [RSP + 0xf],0x0
00004f00(6): JNZ 0x00005a9a
00004f06(3): MOV EAX,R8D
00004f09(3): MOV RCX,R15
00004f0c(3): XOR EAX,0x1
00004f0f(2): AND AL,DL
00004f11(2): JZ 0x00004f40
00004f13(3): CMP R13,R15
00004f16(2): JBE 0x00004f1d
00004f18(5): MOV byte ptr [R14 + R15*0x1],0x27
00004f1d(4): LEA RCX,[R15 + 0x1]
00004f21(3): CMP R13,RCX
00004f24(2): JBE 0x00004f2c
00004f26(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00004f2c(4): LEA RCX,[R15 + 0x2]
00004f30(3): CMP R13,RCX
00004f33(6): JA 0x00005569
00004f39(4): LEA RCX,[R15 + 0x3]
00004f3d(3): MOV R8D,EAX
00004f40(3): CMP R13,RCX
00004f43(2): JBE 0x00004f4a
00004f45(5): MOV byte ptr [R14 + RCX*0x1],0x5c
00004f4a(5): CMP dword ptr [RSP + 0x8],0x2
00004f4f(4): LEA R15,[RCX + 0x1]
00004f53(6): JZ 0x00005559
00004f59(4): LEA RAX,[RBP + 0x1]
00004f5d(3): CMP RAX,R11
00004f60(2): JNC 0x00004f7b
00004f62(5): MOV RAX,qword ptr [RSP + 0x10]
00004f67(5): MOVZX EAX,byte ptr [RAX + RBP*0x1 + 0x1]
00004f6c(4): MOV byte ptr [RSP + 0x28],AL
00004f70(3): SUB EAX,0x30
00004f73(2): CMP AL,0x9
00004f75(6): JBE 0x000057a9
00004f7b(3): MOV EAX,R12D
00004f7e(5): MOV EBX,0x30
00004f83(3): XOR R12D,R12D
00004f86(5): JMP 0x00004b38
00004f90(5): CMP dword ptr [RSP + 0x8],0x2
00004f95(3): MOV R12D,R10D
00004f98(3): SETZ DL
00004f9b(3): XOR R10D,R10D
00004f9e(2): XOR EAX,EAX
00004fa0(5): JMP 0x00004b38
00004fa8(5): CMP dword ptr [RSP + 0x8],0x2
00004fad(3): SETZ DL
00004fb0(3): XOR R10D,R10D
00004fb3(5): JMP 0x00004d78
00004fc0(5): CMP dword ptr [RSP + 0x8],0x2
00004fc5(3): SETZ DL
00004fc8(3): XOR R10D,R10D
00004fcb(3): XOR R12D,R12D
00004fce(5): JMP 0x00004d81
00004fd8(5): CMP dword ptr [RSP + 0x8],0x2
00004fdd(3): MOV R12D,R10D
00004fe0(5): MOV EBX,0x20
00004fe5(3): SETZ DL
00004fe8(3): XOR R10D,R10D
00004feb(5): JMP 0x00004d81
00004ff0(5): MOV EDX,0xd
00004ff5(3): XOR R10D,R10D
00004ff8(5): MOV EBX,0x72
00004ffd(5): JMP 0x00004c32
00005008(5): MOV EBX,0x76
0000500d(5): JMP 0x00004cb0
00005018(5): MOV EDX,0x9
0000501d(3): XOR R10D,R10D
00005020(5): MOV EBX,0x74
00005025(5): JMP 0x00004c32
00005030(5): MOV EBX,0x62
00005035(5): JMP 0x00004cb0
00005040(3): XOR R10D,R10D
00005043(5): JMP 0x00004ae0
00005050(5): CMP byte ptr [RSP + 0xf],0x0
00005055(6): JNZ 0x000059c0
0000505b(4): ADD RBP,0x1
0000505f(3): MOV EAX,R8D
00005062(3): XOR R12D,R12D
00005065(5): MOV EBX,0x5c
0000506a(5): JMP 0x00004b7c
00005070(5): CMP dword ptr [RSP + 0x8],0x2
00005075(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000507a(3): MOV R12D,R8D
0000507d(3): MOV RBP,R11
00005080(3): SETZ DL
00005083(2): MOV EAX,EBX
00005085(3): TEST R15,R15
00005088(3): SETZ CL
0000508b(2): AND EAX,EDX
0000508d(2): AND AL,CL
0000508f(6): JNZ 0x00005af6
00005095(2): MOV EAX,EBX
00005097(3): XOR EAX,0x1
0000509a(2): AND DL,AL
0000509c(6): JZ 0x00005a0c
000050a2(5): CMP byte ptr [RSP + 0x7c],0x0
000050a7(6): JZ 0x00005a0a
000050ad(5): CMP byte ptr [RSP + 0xe],0x0
000050b2(6): JNZ 0x00005aad
000050b8(3): TEST R13,R13
000050bb(3): SETZ AL
000050be(6): CMP qword ptr [RSP + 0x50],0x0
000050c4(3): SETNZ DL
000050c7(2): AND AL,DL
000050c9(6): JZ 0x00005aec
000050cf(5): MOV R13,qword ptr [RSP + 0x50]
000050d4(7): LEA RBX,[0x1609e]
000050db(4): MOV byte ptr [R14],0x27
000050df(8): MOV dword ptr [RSP + 0x8],0x2
000050e7(6): MOV R15D,0x1
000050ed(9): MOV qword ptr [RSP + 0x18],0x1
000050f6(5): MOV byte ptr [RSP + 0xf],0x0
000050fb(5): MOV qword ptr [RSP + 0x48],RBX
00005100(4): MOV byte ptr [RSP + 0x7c],AL
00005104(5): JMP 0x000049e3
00005110(5): CMP byte ptr [RSP + 0xf],0x0
00005115(6): JNZ 0x000059c0
0000511b(3): TEST R13,R13
0000511e(6): JZ 0x00005520
00005124(2): XOR EDX,EDX
00005126(6): CMP qword ptr [RSP + 0x50],0x0
0000512c(6): JNZ 0x00005520
00005132(5): MOV qword ptr [RSP + 0x50],R13
00005137(4): ADD R15,0x3
0000513b(2): XOR EAX,EAX
0000513d(5): MOV byte ptr [RSP + 0x7c],R12B
00005142(3): XOR R8D,R8D
00005145(3): MOV R13,RDX
00005148(5): MOV EBX,0x27
0000514d(5): JMP 0x00004b69
00005158(5): TEST byte ptr [RSP + 0x78],0x4
0000515d(2): JZ 0x00005180
0000515f(4): LEA RCX,[RBP + 0x2]
00005163(3): CMP RCX,R11
00005166(2): JNC 0x00005180
00005168(5): MOV RAX,qword ptr [RSP + 0x10]
0000516d(5): CMP byte ptr [RAX + RBP*0x1 + 0x1],0x3f
00005172(6): JZ 0x00005902
00005178(8): NOP dword ptr [RAX + RAX*0x1]
00005180(2): XOR EDX,EDX
00005182(3): XOR R12D,R12D
00005185(2): XOR EAX,EAX
00005187(5): MOV EBX,0x3f
0000518c(5): JMP 0x00004b38
00005198(5): CMP byte ptr [RSP + 0xf],0x0
0000519d(6): JNZ 0x000059c0
000051a3(3): XOR R12D,R12D
000051a6(2): XOR EAX,EAX
000051a8(5): MOV EBX,0x3f
000051ad(5): JMP 0x00004b69
000051b8(8): LEA RAX,[0xa0 + RSP]
000051c0(4): CMP R11,-0x1
000051c4(12): MOV qword ptr [0xa0 + RSP],0x0
000051d0(5): MOV qword ptr [RSP + 0x28],RAX
000051d5(2): JNZ 0x00005204
000051d7(5): MOV RDI,qword ptr [RSP + 0x10]
000051dc(5): MOV byte ptr [RSP + 0x40],R8B
000051e1(5): MOV byte ptr [RSP + 0x38],R10B
000051e6(5): MOV qword ptr [RSP + 0x30],R9
000051eb(5): CALL 0x00001ab0
000051f0(6): MOVZX R8D,byte ptr [RSP + 0x40]
000051f6(6): MOVZX R10D,byte ptr [RSP + 0x38]
000051fc(3): MOV R11,RAX
000051ff(5): MOV R9,qword ptr [RSP + 0x30]
00005204(8): LEA RAX,[0x9c + RSP]
0000520c(2): XOR ECX,ECX
0000520e(4): MOV byte ptr [RSP + 0x7e],BL
00005212(5): MOV byte ptr [RSP + 0x7d],R8B
00005217(3): MOV RBX,RCX
0000521a(8): MOV qword ptr [0x88 + RSP],R9
00005222(5): MOV qword ptr [RSP + 0x38],RAX
00005227(5): MOV byte ptr [RSP + 0x7f],R10B
0000522c(8): MOV qword ptr [0x80 + RSP],R15
00005234(5): MOV qword ptr [RSP + 0x40],R14
00005239(5): MOV qword ptr [RSP + 0x70],R13
0000523e(5): MOV qword ptr [RSP + 0x30],R11
00005243(5): MOV RAX,qword ptr [RSP + 0x10]
00005248(5): LEA R14,[RBP + RBX*0x1]
0000524d(5): MOV RDX,qword ptr [RSP + 0x30]
00005252(5): MOV RCX,qword ptr [RSP + 0x28]
00005257(5): MOV RDI,qword ptr [RSP + 0x38]
0000525c(4): LEA R13,[RAX + R14*0x1]
00005260(3): SUB RDX,R14
00005263(3): MOV RSI,R13
00005266(5): CALL 0x00007050
0000526b(3): TEST RAX,RAX
0000526e(3): MOV R15,RAX
00005271(2): JZ 0x000052c1
00005273(4): CMP RAX,-0x1
00005277(6): JZ 0x00005895
0000527d(4): CMP RAX,-0x2
00005281(6): JZ 0x00005821
00005287(5): CMP dword ptr [RSP + 0x8],0x2
0000528c(3): SETZ AL
0000528f(4): AND AL,byte ptr [RSP + 0xf]
00005293(6): JNZ 0x00005430
00005299(7): MOV EDI,dword ptr [0x9c + RSP]
000052a0(5): CALL 0x00001da0
000052a5(5): MOV RDI,qword ptr [RSP + 0x28]
000052aa(2): TEST EAX,EAX
000052ac(5): MOV EAX,0x0
000052b1(4): CMOVZ R12D,EAX
000052b5(3): ADD RBX,R15
000052b8(5): CALL 0x00001d90
000052bd(2): TEST EAX,EAX
000052bf(2): JZ 0x00005243
000052c1(3): MOV EDX,R12D
000052c4(3): MOV RDI,RBX
000052c7(6): MOVZX R8D,byte ptr [RSP + 0x7d]
000052cd(3): XOR EDX,0x1
000052d0(5): MOVZX EBX,byte ptr [RSP + 0x7e]
000052d5(6): MOVZX R10D,byte ptr [RSP + 0x7f]
000052db(4): AND DL,byte ptr [RSP + 0xd]
000052df(8): MOV R15,qword ptr [0x80 + RSP]
000052e7(5): MOV R14,qword ptr [RSP + 0x40]
000052ec(5): MOV R13,qword ptr [RSP + 0x70]
000052f1(5): MOV R11,qword ptr [RSP + 0x30]
000052f6(4): CMP RDI,0x1
000052fa(6): JBE 0x000058fb
00005300(3): MOV RCX,RDI
00005303(2): XOR ESI,ESI
00005305(6): MOVZX R9D,byte ptr [RSP + 0xf]
0000530b(3): ADD RCX,RBP
0000530e(5): MOV RDI,qword ptr [RSP + 0x10]
00005313(5): JMP 0x000053ce
00005320(5): CMP dword ptr [RSP + 0x8],0x2
00005325(3): SETZ AL
00005328(3): TEST R9B,R9B
0000532b(6): JNZ 0x000057e0
00005331(3): MOV ESI,R8D
00005334(3): XOR ESI,0x1
00005337(3): AND AL,SIL
0000533a(2): JZ 0x0000536b
0000533c(3): CMP R13,R15
0000533f(2): JBE 0x00005346
00005341(5): MOV byte ptr [R14 + R15*0x1],0x27
00005346(4): LEA RSI,[R15 + 0x1]
0000534a(3): CMP R13,RSI
0000534d(2): JBE 0x00005355
0000534f(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00005355(4): LEA RSI,[R15 + 0x2]
00005359(3): CMP R13,RSI
0000535c(2): JBE 0x00005364
0000535e(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00005364(4): ADD R15,0x3
00005368(3): MOV R8D,EAX
0000536b(3): CMP R13,R15
0000536e(2): JBE 0x00005375
00005370(5): MOV byte ptr [R14 + R15*0x1],0x5c
00005375(4): LEA RAX,[R15 + 0x1]
00005379(3): CMP R13,RAX
0000537c(2): JBE 0x0000538b
0000537e(2): MOV EAX,EBX
00005380(3): SHR AL,0x6
00005383(3): ADD EAX,0x30
00005386(5): MOV byte ptr [R14 + R15*0x1 + 0x1],AL
0000538b(4): LEA RAX,[R15 + 0x2]
0000538f(3): CMP R13,RAX
00005392(2): JBE 0x000053a4
00005394(2): MOV EAX,EBX
00005396(3): SHR AL,0x3
00005399(3): AND EAX,0x7
0000539c(3): ADD EAX,0x30
0000539f(5): MOV byte ptr [R14 + R15*0x1 + 0x2],AL
000053a4(3): AND EBX,0x7
000053a7(4): ADD RBP,0x1
000053ab(4): ADD R15,0x3
000053af(3): ADD EBX,0x30
000053b2(3): CMP RBP,RCX
000053b5(6): JNC 0x00004ba0
000053bb(2): MOV ESI,EDX
000053bd(3): CMP R13,R15
000053c0(2): JBE 0x000053c6
000053c2(4): MOV byte ptr [R14 + R15*0x1],BL
000053c6(4): MOVZX EBX,byte ptr [RDI + RBP*0x1]
000053ca(4): ADD R15,0x1
000053ce(2): TEST DL,DL
000053d0(6): JNZ 0x00005320
000053d6(2): MOV EAX,ESI
000053d8(3): XOR EAX,0x1
000053db(3): AND EAX,R8D
000053de(3): TEST R10B,R10B
000053e1(2): JZ 0x000053f1
000053e3(3): CMP R13,R15
000053e6(2): JBE 0x000053ed
000053e8(5): MOV byte ptr [R14 + R15*0x1],0x5c
000053ed(4): ADD R15,0x1
000053f1(4): ADD RBP,0x1
000053f5(3): CMP RBP,RCX
000053f8(6): JNC 0x00004b7c
000053fe(2): TEST AL,AL
00005400(6): JZ 0x000057fe
00005406(3): CMP R13,R15
00005409(2): JBE 0x00005410
0000540b(5): MOV byte ptr [R14 + R15*0x1],0x27
00005410(4): LEA RAX,[R15 + 0x1]
00005414(3): CMP R13,RAX
00005417(2): JBE 0x0000541f
00005419(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
0000541f(4): ADD R15,0x2
00005423(3): XOR R10D,R10D
00005426(3): XOR R8D,R8D
00005429(2): JMP 0x000053bd
00005430(4): CMP R15,0x1
00005434(6): JZ 0x00005299
0000543a(5): MOV RDI,qword ptr [RSP + 0x10]
0000543f(4): LEA RCX,[RDI + R15*0x1]
00005443(5): LEA RDX,[RDI + R14*0x1 + 0x1]
00005448(4): LEA R8,[RCX + R14*0x1]
0000544c(2): JMP 0x0000545d
00005450(4): ADD RDX,0x1
00005454(3): CMP R8,RDX
00005457(6): JZ 0x00005299
0000545d(3): MOVZX ECX,byte ptr [RDX]
00005460(3): SUB ECX,0x5b
00005463(3): CMP CL,0x21
00005466(2): JA 0x00005450
00005468(5): MOV ESI,0x1
0000546d(3): SHL RSI,CL
00005470(3): MOV RCX,RSI
00005473(10): MOV RSI,0x20000002b
0000547d(3): TEST RCX,RSI
00005480(2): JZ 0x00005450
00005482(5): MOV R14,qword ptr [RSP + 0x40]
00005487(5): MOV R13,qword ptr [RSP + 0x70]
0000548c(5): MOV RBP,qword ptr [RSP + 0x30]
00005491(8): MOV dword ptr [RSP + 0x8],0x2
00005499(5): CMP byte ptr [RSP + 0xd],0x0
0000549e(2): JZ 0x000054b0
000054a0(2): TEST AL,AL
000054a2(5): MOV EAX,0x4
000054a7(5): CMOVZ EAX,dword ptr [RSP + 0x8]
000054ac(4): MOV dword ptr [RSP + 0x8],EAX
000054b0(4): SUB RSP,0x8
000054b4(3): MOV RCX,RBP
000054b7(3): MOV RSI,R13
000054ba(4): PUSH qword ptr [RSP + 0x68]
000054be(4): PUSH qword ptr [RSP + 0x78]
000054c2(3): MOV RDI,R14
000054c5(2): PUSH 0x0
000054c7(8): MOV R9D,dword ptr [0x98 + RSP]
000054cf(5): MOV R8D,dword ptr [RSP + 0x28]
000054d4(5): MOV RDX,qword ptr [RSP + 0x30]
000054d9(4): AND R9D,0xfffffffd
000054dd(5): CALL 0x00004910
000054e2(4): ADD RSP,0x20
000054e6(3): MOV R15,RAX
000054e9(8): MOV RBX,qword ptr [0xa8 + RSP]
000054f1(9): XOR RBX,qword ptr FS:[0x28]
000054fa(3): MOV RAX,R15
000054fd(6): JNZ 0x00005b03
00005503(7): ADD RSP,0xb8
0000550a(1): POP RBX
0000550b(1): POP RBP
0000550c(2): POP R12
0000550e(2): POP R13
00005510(2): POP R14
00005512(2): POP R15
00005514(1): RET
00005518(3): MOV RBP,R11
0000551b(5): JMP 0x00005499
00005520(3): CMP R13,R15
00005523(2): JBE 0x0000552a
00005525(5): MOV byte ptr [R14 + R15*0x1],0x27
0000552a(4): LEA RAX,[R15 + 0x1]
0000552e(3): CMP R13,RAX
00005531(2): JBE 0x00005539
00005533(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x5c
00005539(4): LEA RAX,[R15 + 0x2]
0000553d(3): CMP R13,RAX
00005540(6): JBE 0x00005b32
00005546(3): MOV RDX,R13
00005549(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000554f(5): MOV R13,qword ptr [RSP + 0x50]
00005554(5): JMP 0x00005132
00005559(3): MOV EAX,R12D
0000555c(5): MOV EBX,0x30
00005561(3): XOR R12D,R12D
00005564(5): JMP 0x00004b69
00005569(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000556f(5): JMP 0x00004f39
00005574(2): TEST EBX,EBX
00005576(6): JNZ 0x000049a3
0000557c(5): MOV byte ptr [RSP + 0xd],0x1
00005581(3): TEST R13,R13
00005584(6): JNZ 0x00005b1a
0000558a(7): LEA RAX,[0x1609e]
00005591(9): MOV qword ptr [RSP + 0x50],0x0
0000559a(5): MOV byte ptr [RSP + 0xe],0x1
0000559f(5): MOV byte ptr [RSP + 0x7c],0x0
000055a4(3): XOR R12D,R12D
000055a7(5): MOV byte ptr [RSP + 0xf],0x0
000055ac(9): MOV qword ptr [RSP + 0x18],0x1
000055b5(5): MOV qword ptr [RSP + 0x48],RAX
000055ba(6): MOV R15D,0x1
000055c0(8): MOV dword ptr [RSP + 0x8],0x2
000055c8(5): JMP 0x000049e3
000055d0(2): TEST EBX,EBX
000055d2(6): JNZ 0x000059cd
000055d8(3): TEST R13,R13
000055db(6): JZ 0x00005806
000055e1(4): MOV byte ptr [R14],0x22
000055e5(5): MOV byte ptr [RSP + 0xe],0x1
000055ea(3): XOR R12D,R12D
000055ed(5): MOV byte ptr [RSP + 0x7c],0x0
000055f2(9): MOV qword ptr [RSP + 0x50],0x0
000055fb(7): LEA RAX,[0x1624b]
00005602(5): MOV byte ptr [RSP + 0xf],0x0
00005607(5): MOV byte ptr [RSP + 0xd],0x1
0000560c(9): MOV qword ptr [RSP + 0x18],0x1
00005615(6): MOV R15D,0x1
0000561b(5): MOV qword ptr [RSP + 0x48],RAX
00005620(5): JMP 0x000049e3
00005625(7): LEA RAX,[0x1624b]
0000562c(5): MOV byte ptr [RSP + 0xe],0x1
00005631(5): MOV byte ptr [RSP + 0x7c],0x0
00005636(3): XOR R12D,R12D
00005639(9): MOV qword ptr [RSP + 0x50],0x0
00005642(5): MOV byte ptr [RSP + 0xf],0x1
00005647(5): MOV byte ptr [RSP + 0xd],0x1
0000564c(9): MOV qword ptr [RSP + 0x18],0x1
00005655(3): XOR R15D,R15D
00005658(5): MOV qword ptr [RSP + 0x48],RAX
0000565d(8): MOV dword ptr [RSP + 0x8],0x5
00005665(5): JMP 0x000049e3
0000566a(5): MOV byte ptr [RSP + 0xe],0x1
0000566f(5): MOV byte ptr [RSP + 0x7c],0x0
00005674(3): XOR R12D,R12D
00005677(9): MOV qword ptr [RSP + 0x50],0x0
00005680(5): MOV byte ptr [RSP + 0xf],0x0
00005685(3): XOR R15D,R15D
00005688(5): MOV byte ptr [RSP + 0xd],0x1
0000568d(9): MOV qword ptr [RSP + 0x18],0x0
00005696(9): MOV qword ptr [RSP + 0x48],0x0
0000569f(5): JMP 0x000049e3
000056a4(5): CMP dword ptr [RSP + 0x8],0xa
000056a9(2): JZ 0x00005701
000056ab(7): LEA RSI,[0x1624d]
000056b2(2): XOR EDI,EDI
000056b4(5): MOV EDX,0x5
000056b9(5): CALL 0x00001a90
000056be(3): MOV RCX,RAX
000056c1(5): MOV qword ptr [RSP + 0x68],RAX
000056c6(7): LEA RAX,[0x1624d]
000056cd(3): CMP RCX,RAX
000056d0(6): JZ 0x00005a6e
000056d6(7): LEA RSI,[0x1609e]
000056dd(2): XOR EDI,EDI
000056df(5): MOV EDX,0x5
000056e4(5): CALL 0x00001a90
000056e9(3): MOV RCX,RAX
000056ec(5): MOV qword ptr [RSP + 0x60],RAX
000056f1(7): LEA RAX,[0x1609e]
000056f8(3): CMP RCX,RAX
000056fb(6): JZ 0x00005a84
00005701(3): XOR R15D,R15D
00005704(2): TEST EBX,EBX
00005706(6): JZ 0x000058cd
0000570c(2): TEST EBX,EBX
0000570e(5): MOV RBX,qword ptr [RSP + 0x60]
00005713(5): SETNZ byte ptr [RSP + 0xf]
00005718(3): XOR R12D,R12D
0000571b(3): MOV RDI,RBX
0000571e(5): CALL 0x00001ab0
00005723(5): MOV qword ptr [RSP + 0x48],RBX
00005728(5): MOV qword ptr [RSP + 0x18],RAX
0000572d(5): MOV byte ptr [RSP + 0xe],0x1
00005732(5): MOV byte ptr [RSP + 0x7c],0x0
00005737(9): MOV qword ptr [RSP + 0x50],0x0
00005740(5): MOV byte ptr [RSP + 0xd],0x1
00005745(5): JMP 0x000049e3
0000574a(5): MOV byte ptr [RSP + 0xe],0x1
0000574f(5): MOV byte ptr [RSP + 0x7c],0x0
00005754(3): XOR R12D,R12D
00005757(9): MOV qword ptr [RSP + 0x50],0x0
00005760(5): MOV byte ptr [RSP + 0xf],0x0
00005765(3): XOR R15D,R15D
00005768(5): MOV byte ptr [RSP + 0xd],0x0
0000576d(9): MOV qword ptr [RSP + 0x18],0x0
00005776(9): MOV qword ptr [RSP + 0x48],0x0
0000577f(5): JMP 0x000049e3
00005784(5): MOV byte ptr [RSP + 0xe],0x1
00005789(5): MOV byte ptr [RSP + 0x7c],0x0
0000578e(3): XOR R12D,R12D
00005791(9): MOV qword ptr [RSP + 0x50],0x0
0000579a(5): MOV byte ptr [RSP + 0xf],0x1
0000579f(5): MOV byte ptr [RSP + 0xd],0x1
000057a4(5): JMP 0x000049c3
000057a9(3): CMP R13,R15
000057ac(2): JBE 0x000057b3
000057ae(5): MOV byte ptr [R14 + R15*0x1],0x30
000057b3(4): LEA RAX,[RCX + 0x2]
000057b7(3): CMP R13,RAX
000057ba(2): JBE 0x000057c2
000057bc(6): MOV byte ptr [R14 + RCX*0x1 + 0x2],0x30
000057c2(3): MOV EAX,R12D
000057c5(4): LEA R15,[RCX + 0x3]
000057c9(3): XOR R12D,R12D
000057cc(5): MOV EBX,0x30
000057d1(5): JMP 0x00004b38
000057e0(5): MOVZX EBX,byte ptr [RSP + 0xf]
000057e5(3): MOV RBP,R11
000057e8(4): MOV byte ptr [RSP + 0xd],BL
000057ec(5): JMP 0x00005499
000057f1(5): MOVZX EDX,byte ptr [RSP + 0xd]
000057f6(3): XOR R12D,R12D
000057f9(5): JMP 0x00005300
000057fe(3): XOR R10D,R10D
00005801(5): JMP 0x000053bd
00005806(9): MOV qword ptr [RSP + 0x50],0x0
0000580f(5): MOV byte ptr [RSP + 0xe],0x1
00005814(3): XOR R12D,R12D
00005817(5): MOV byte ptr [RSP + 0x7c],0x0
0000581c(5): JMP 0x000055fb
00005821(5): MOV R11,qword ptr [RSP + 0x30]
00005826(3): MOV RSI,R14
00005829(3): MOV RCX,R13
0000582c(3): MOV RAX,RBX
0000582f(3): MOV RDI,RBX
00005832(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00005838(5): MOVZX EBX,byte ptr [RSP + 0x7e]
0000583d(8): MOV R9,qword ptr [0x88 + RSP]
00005845(3): CMP RSI,R11
00005848(6): MOVZX R10D,byte ptr [RSP + 0x7f]
0000584e(8): MOV R15,qword ptr [0x80 + RSP]
00005856(5): MOV R14,qword ptr [RSP + 0x40]
0000585b(5): MOV R13,qword ptr [RSP + 0x70]
00005860(2): JNC 0x00005888
00005862(3): CMP byte ptr [RCX],0x0
00005865(2): JNZ 0x00005877
00005867(2): JMP 0x00005888
00005870(5): CMP byte ptr [R9 + RAX*0x1],0x0
00005875(2): JZ 0x00005885
00005877(4): ADD RAX,0x1
0000587b(5): LEA RDX,[RBP + RAX*0x1]
00005880(3): CMP R11,RDX
00005883(2): JA 0x00005870
00005885(3): MOV RDI,RAX
00005888(5): MOVZX EDX,byte ptr [RSP + 0xd]
0000588d(3): XOR R12D,R12D
00005890(5): JMP 0x000052f6
00005895(3): MOV RDI,RBX
00005898(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000589e(5): MOVZX EBX,byte ptr [RSP + 0x7e]
000058a3(6): MOVZX R10D,byte ptr [RSP + 0x7f]
000058a9(8): MOV R15,qword ptr [0x80 + RSP]
000058b1(3): XOR R12D,R12D
000058b4(5): MOV R14,qword ptr [RSP + 0x40]
000058b9(5): MOV R13,qword ptr [RSP + 0x70]
000058be(5): MOV R11,qword ptr [RSP + 0x30]
000058c3(5): MOVZX EDX,byte ptr [RSP + 0xd]
000058c8(5): JMP 0x000052f6
000058cd(5): MOV RDX,qword ptr [RSP + 0x68]
000058d2(3): MOVZX EAX,byte ptr [RDX]
000058d5(2): TEST AL,AL
000058d7(6): JZ 0x0000570c
000058dd(3): NOP dword ptr [RAX]
000058e0(3): CMP R13,R15
000058e3(2): JBE 0x000058e9
000058e5(4): MOV byte ptr [R14 + R15*0x1],AL
000058e9(4): ADD R15,0x1
000058ed(5): MOVZX EAX,byte ptr [RDX + R15*0x1]
000058f2(2): TEST AL,AL
000058f4(2): JNZ 0x000058e0
000058f6(5): JMP 0x0000570c
000058fb(2): MOV EAX,EDX
000058fd(5): JMP 0x00004e57
00005902(4): MOVZX EBX,byte ptr [RAX + RCX*0x1]
00005906(3): CMP BL,0x3e
00005909(6): JA 0x00005180
0000590f(10): MOV RAX,0x7000a38200000000
00005919(4): BT RAX,RBX
0000591d(6): JNC 0x00005180
00005923(5): CMP byte ptr [RSP + 0xf],0x0
00005928(6): JNZ 0x00005b12
0000592e(3): CMP R13,R15
00005931(2): JBE 0x00005938
00005933(5): MOV byte ptr [R14 + R15*0x1],0x3f
00005938(4): LEA RAX,[R15 + 0x1]
0000593c(3): CMP R13,RAX
0000593f(2): JBE 0x00005947
00005941(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x22
00005947(4): LEA RAX,[R15 + 0x2]
0000594b(3): CMP R13,RAX
0000594e(2): JBE 0x00005956
00005950(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x22
00005956(4): LEA RAX,[R15 + 0x3]
0000595a(3): CMP R13,RAX
0000595d(2): JBE 0x00005965
0000595f(6): MOV byte ptr [R14 + R15*0x1 + 0x3],0x3f
00005965(4): ADD R15,0x4
00005969(2): XOR EDX,EDX
0000596b(3): XOR R12D,R12D
0000596e(2): XOR EAX,EAX
00005970(3): MOV RBP,RCX
00005973(5): JMP 0x00004b38
00005978(2): TEST EBX,EBX
0000597a(6): JZ 0x00005b08
00005980(7): LEA RAX,[0x1609e]
00005987(5): MOV byte ptr [RSP + 0xe],0x1
0000598c(5): MOV byte ptr [RSP + 0x7c],0x0
00005991(3): XOR R12D,R12D
00005994(9): MOV qword ptr [RSP + 0x50],0x0
0000599d(5): MOV byte ptr [RSP + 0xf],0x1
000059a2(5): MOV byte ptr [RSP + 0xd],0x0
000059a7(9): MOV qword ptr [RSP + 0x18],0x1
000059b0(3): XOR R15D,R15D
000059b3(5): MOV qword ptr [RSP + 0x48],RAX
000059b8(5): JMP 0x000049e3
000059c0(3): MOV RBP,R11
000059c3(5): MOVZX EAX,byte ptr [RSP + 0xf]
000059c8(5): JMP 0x00005499
000059cd(7): LEA RAX,[0x1624b]
000059d4(5): MOV byte ptr [RSP + 0xe],0x1
000059d9(5): MOV byte ptr [RSP + 0x7c],0x0
000059de(3): XOR R12D,R12D
000059e1(9): MOV qword ptr [RSP + 0x50],0x0
000059ea(5): MOV byte ptr [RSP + 0xf],0x1
000059ef(5): MOV byte ptr [RSP + 0xd],0x1
000059f4(9): MOV qword ptr [RSP + 0x18],0x1
000059fd(3): XOR R15D,R15D
00005a00(5): MOV qword ptr [RSP + 0x48],RAX
00005a05(5): JMP 0x000049e3
00005a0a(2): MOV EAX,EDX
00005a0c(5): MOV RBX,qword ptr [RSP + 0x48]
00005a11(3): TEST RBX,RBX
00005a14(2): JZ 0x00005a42
00005a16(2): TEST AL,AL
00005a18(2): JZ 0x00005a42
00005a1a(3): MOVZX ECX,byte ptr [RBX]
00005a1d(3): MOV RAX,RBX
00005a20(2): TEST CL,CL
00005a22(2): JZ 0x00005a42
00005a24(3): MOV RDX,R15
00005a27(3): SUB RAX,R15
00005a2a(3): CMP R13,RDX
00005a2d(2): JBE 0x00005a33
00005a2f(4): MOV byte ptr [R14 + RDX*0x1],CL
00005a33(4): ADD RDX,0x1
00005a37(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
00005a3b(2): TEST CL,CL
00005a3d(2): JNZ 0x00005a2a
00005a3f(3): MOV R15,RDX
00005a42(3): CMP R13,R15
00005a45(6): JBE 0x000054e9
00005a4b(5): MOV byte ptr [R14 + R15*0x1],0x0
00005a50(5): JMP 0x000054e9
00005a55(5): CMP dword ptr [RSP + 0x8],0x2
00005a5a(5): MOVZX EBX,byte ptr [RSP + 0xf]
00005a5f(3): MOV RBP,R11
00005a62(3): SETZ AL
00005a65(4): MOV byte ptr [RSP + 0xd],BL
00005a69(5): JMP 0x00005499
00005a6e(4): MOV ESI,dword ptr [RSP + 0x8]
00005a72(3): MOV RDI,RCX
00005a75(5): CALL 0x00004820
00005a7a(5): MOV qword ptr [RSP + 0x68],RAX
00005a7f(5): JMP 0x000056d6
00005a84(4): MOV ESI,dword ptr [RSP + 0x8]
00005a88(3): MOV RDI,RCX
00005a8b(5): CALL 0x00004820
00005a90(5): MOV qword ptr [RSP + 0x60],RAX
00005a95(5): JMP 0x00005701
00005a9a(5): MOVZX EBX,byte ptr [RSP + 0xf]
00005a9f(3): MOV RBP,R11
00005aa2(2): MOV EAX,EDX
00005aa4(4): MOV byte ptr [RSP + 0xd],BL
00005aa8(5): JMP 0x00005499
00005aad(4): SUB RSP,0x8
00005ab1(6): MOV R8D,0x5
00005ab7(3): MOV RCX,R11
00005aba(4): PUSH qword ptr [RSP + 0x68]
00005abe(4): PUSH qword ptr [RSP + 0x78]
00005ac2(3): MOV RDI,R14
00005ac5(4): PUSH qword ptr [RSP + 0x38]
00005ac9(8): MOV R9D,dword ptr [0x98 + RSP]
00005ad1(5): MOV RDX,qword ptr [RSP + 0x30]
00005ad6(5): MOV RSI,qword ptr [RSP + 0x70]
00005adb(5): CALL 0x00004910
00005ae0(4): ADD RSP,0x20
00005ae4(3): MOV R15,RAX
00005ae7(5): JMP 0x000054e9
00005aec(5): MOVZX EAX,byte ptr [RSP + 0x7c]
00005af1(5): JMP 0x00005a0c
00005af6(8): MOV dword ptr [RSP + 0x8],0x2
00005afe(5): JMP 0x00005499
00005b03(5): CALL 0x00001ad0
00005b08(5): MOV byte ptr [RSP + 0xd],0x0
00005b0d(5): JMP 0x00005581
00005b12(3): MOV RBP,R11
00005b15(5): JMP 0x000054b0
00005b1a(5): MOV byte ptr [RSP + 0xe],0x1
00005b1f(2): XOR EAX,EAX
00005b21(3): XOR R12D,R12D
00005b24(9): MOV qword ptr [RSP + 0x50],0x0
00005b2d(5): JMP 0x000050d4
00005b32(3): MOV RDX,R13
00005b35(5): MOV R13,qword ptr [RSP + 0x50]
00005b3a(5): JMP 0x00005132
00005b3f(5): CALL 0x000019e0
00005b44(2): NOP
00005b46(10): NOP word ptr CS:[RAX + RAX*0x1]
00005b50(2): PUSH R15
00005b52(2): PUSH R14
00005b54(3): MOVSXD R15,EDI
00005b57(2): PUSH R13
00005b59(2): PUSH R12
00005b5b(3): MOV R14,RDX
00005b5e(1): PUSH RBP
00005b5f(1): PUSH RBX
00005b60(3): MOV RBP,RCX
00005b63(4): SUB RSP,0x28
00005b67(5): MOV qword ptr [RSP + 0x8],RSI
00005b6c(5): CALL 0x000019f0
00005b71(3): MOV R13,RAX
00005b74(2): MOV EAX,dword ptr [RAX]
00005b76(3): TEST R15D,R15D
00005b79(7): MOV RBX,qword ptr [0x0021b060]
00005b80(4): MOV dword ptr [RSP + 0x18],EAX
00005b84(6): JS 0x00005cf1
00005b8a(7): CMP dword ptr [0x0021b058],R15D
00005b91(2): JG 0x00005bf5
00005b93(7): CMP R15D,0x7fffffff
00005b9a(6): JZ 0x00005cf6
00005ba0(4): LEA R12D,[R15 + 0x1]
00005ba4(7): LEA RAX,[0x21b070]
00005bab(3): MOVSXD RSI,R12D
00005bae(4): SHL RSI,0x4
00005bb2(3): CMP RBX,RAX
00005bb5(6): JZ 0x00005cd0
00005bbb(3): MOV RDI,RBX
00005bbe(5): CALL 0x00006e20
00005bc3(3): MOV RBX,RAX
00005bc6(7): MOV qword ptr [0x0021b060],RAX
00005bcd(7): MOVSXD RDI,dword ptr [0x0021b058]
00005bd4(3): MOV EDX,R12D
00005bd7(2): XOR ESI,ESI
00005bd9(2): SUB EDX,EDI
00005bdb(4): SHL RDI,0x4
00005bdf(3): MOVSXD RDX,EDX
00005be2(3): ADD RDI,RBX
00005be5(4): SHL RDX,0x4
00005be9(5): CALL 0x00001b60
00005bee(7): MOV dword ptr [0x0021b058],R12D
00005bf5(3): MOV EAX,dword ptr [RBP + 0x4]
00005bf8(4): SHL R15,0x4
00005bfc(4): SUB RSP,0x8
00005c00(3): ADD RBX,R15
00005c03(4): LEA R15,[RBP + 0x8]
00005c07(4): MOV R8D,dword ptr [RBP]
00005c0b(3): MOV R11,qword ptr [RBX]
00005c0e(4): MOV R12,qword ptr [RBX + 0x8]
00005c12(3): MOV RCX,R14
00005c15(3): OR EAX,0x1
00005c18(4): MOV dword ptr [RSP + 0x24],EAX
00005c1c(3): PUSH qword ptr [RBP + 0x30]
00005c1f(3): MOV R9D,EAX
00005c22(3): PUSH qword ptr [RBP + 0x28]
00005c25(2): PUSH R15
00005c27(3): MOV RSI,R11
00005c2a(5): MOV RDX,qword ptr [RSP + 0x28]
00005c2f(3): MOV RDI,R12
00005c32(5): MOV qword ptr [RSP + 0x30],R11
00005c37(5): CALL 0x00004910
00005c3c(4): ADD RSP,0x20
00005c40(5): MOV R11,qword ptr [RSP + 0x10]
00005c45(3): CMP R11,RAX
00005c48(2): JA 0x00005cb1
00005c4a(4): LEA RSI,[RAX + 0x1]
00005c4e(7): LEA RAX,[0x21b100]
00005c55(3): CMP R12,RAX
00005c58(3): MOV qword ptr [RBX],RSI
00005c5b(2): JZ 0x00005c6f
00005c5d(3): MOV RDI,R12
00005c60(5): MOV qword ptr [RSP + 0x10],RSI
00005c65(5): CALL 0x000019d0
00005c6a(5): MOV RSI,qword ptr [RSP + 0x10]
00005c6f(3): MOV RDI,RSI
00005c72(5): MOV qword ptr [RSP + 0x10],RSI
00005c77(5): CALL 0x00006dc0
00005c7c(4): SUB RSP,0x8
00005c80(4): MOV qword ptr [RBX + 0x8],RAX
00005c84(4): MOV R8D,dword ptr [RBP]
00005c88(3): PUSH qword ptr [RBP + 0x30]
00005c8b(3): PUSH qword ptr [RBP + 0x28]
00005c8e(3): MOV RCX,R14
00005c91(2): PUSH R15
00005c93(5): MOV R9D,dword ptr [RSP + 0x3c]
00005c98(3): MOV RDI,RAX
00005c9b(5): MOV RDX,qword ptr [RSP + 0x28]
00005ca0(5): MOV RSI,qword ptr [RSP + 0x30]
00005ca5(3): MOV R12,RAX
00005ca8(5): CALL 0x00004910
00005cad(4): ADD RSP,0x20
00005cb1(4): MOV EAX,dword ptr [RSP + 0x18]
00005cb5(4): MOV dword ptr [R13],EAX
00005cb9(4): ADD RSP,0x28
00005cbd(3): MOV RAX,R12
00005cc0(1): POP RBX
00005cc1(1): POP RBP
00005cc2(2): POP R12
00005cc4(2): POP R13
00005cc6(2): POP R14
00005cc8(2): POP R15
00005cca(1): RET
00005cd0(2): XOR EDI,EDI
00005cd2(5): CALL 0x00006e20
00005cd7(8): MOVDQA XMM0,xmmword ptr [0x0021b070]
00005cdf(3): MOV RBX,RAX
00005ce2(7): MOV qword ptr [0x0021b060],RAX
00005ce9(3): MOVUPS xmmword ptr [RAX],XMM0
00005cec(5): JMP 0x00005bcd
00005cf1(5): CALL 0x000019e0
00005cf6(5): CALL 0x00007010
00005cfb(5): NOP dword ptr [RAX + RAX*0x1]
00005d00(2): PUSH R12
00005d02(1): PUSH RBP
00005d03(1): PUSH RBX
00005d04(3): MOV RBX,RDI
00005d07(5): CALL 0x000019f0
00005d0c(3): MOV R12D,dword ptr [RAX]
00005d0f(3): MOV RBP,RAX
00005d12(7): LEA RAX,[0x21b200]
00005d19(3): TEST RBX,RBX
00005d1c(5): MOV ESI,0x38
00005d21(4): CMOVZ RBX,RAX
00005d25(3): MOV RDI,RBX
00005d28(5): CALL 0x00006fc0
00005d2d(4): MOV dword ptr [RBP],R12D
00005d31(1): POP RBX
00005d32(1): POP RBP
00005d33(2): POP R12
00005d35(1): RET
00005d40(7): LEA RAX,[0x21b200]
00005d47(3): TEST RDI,RDI
00005d4a(4): CMOVZ RDI,RAX
00005d4e(2): MOV EAX,dword ptr [RDI]
00005d50(1): RET
00005d60(7): LEA RAX,[0x21b200]
00005d67(3): TEST RDI,RDI
00005d6a(4): CMOVZ RDI,RAX
00005d6e(2): MOV dword ptr [RDI],ESI
00005d70(1): RET
00005d80(7): LEA RAX,[0x21b200]
00005d87(3): TEST RDI,RDI
00005d8a(2): MOV ECX,ESI
00005d8c(4): CMOVZ RDI,RAX
00005d90(2): MOV EAX,ESI
00005d92(3): AND ECX,0x1f
00005d95(3): SHR AL,0x5
00005d98(3): MOVZX EAX,AL
00005d9b(5): LEA RDI,[RDI + RAX*0x4 + 0x8]
00005da0(2): MOV ESI,dword ptr [RDI]
00005da2(2): MOV EAX,ESI
00005da4(2): SHR EAX,CL
00005da6(2): XOR EDX,EAX
00005da8(3): AND EAX,0x1
00005dab(3): AND EDX,0x1
00005dae(2): SHL EDX,CL
00005db0(2): XOR EDX,ESI
00005db2(2): MOV dword ptr [RDI],EDX
00005db4(1): RET
00005dc0(7): LEA RAX,[0x21b200]
00005dc7(3): TEST RDI,RDI
00005dca(4): CMOVZ RDI,RAX
00005dce(3): MOV EAX,dword ptr [RDI + 0x4]
00005dd1(3): MOV dword ptr [RDI + 0x4],ESI
00005dd4(1): RET
00005de0(7): LEA RAX,[0x21b200]
00005de7(3): TEST RDI,RDI
00005dea(4): CMOVZ RDI,RAX
00005dee(3): TEST RSI,RSI
00005df1(6): MOV dword ptr [RDI],0xa
00005df7(2): JZ 0x00005e07
00005df9(3): TEST RDX,RDX
00005dfc(2): JZ 0x00005e07
00005dfe(4): MOV qword ptr [RDI + 0x28],RSI
00005e02(4): MOV qword ptr [RDI + 0x30],RDX
00005e06(1): RET
00005e07(4): SUB RSP,0x8
00005e0b(5): CALL 0x000019e0
00005e10(2): PUSH R15
00005e12(2): PUSH R14
00005e14(7): LEA RAX,[0x21b200]
00005e1b(2): PUSH R13
00005e1d(2): PUSH R12
00005e1f(3): MOV R13,RDI
00005e22(1): PUSH RBP
00005e23(1): PUSH RBX
00005e24(3): MOV RBX,R8
00005e27(3): MOV R14,RSI
00005e2a(3): MOV R15,RDX
00005e2d(4): SUB RSP,0x18
00005e31(3): TEST R8,R8
00005e34(4): CMOVZ RBX,RAX
00005e38(5): MOV qword ptr [RSP + 0x8],RCX
00005e3d(5): CALL 0x000019f0
00005e42(3): MOV R12D,dword ptr [RAX]
00005e45(3): MOV RBP,RAX
00005e48(4): LEA RAX,[RBX + 0x8]
00005e4c(4): SUB RSP,0x8
00005e50(4): MOV R9D,dword ptr [RBX + 0x4]
00005e54(3): PUSH qword ptr [RBX + 0x30]
00005e57(3): MOV R8D,dword ptr [RBX]
00005e5a(3): PUSH qword ptr [RBX + 0x28]
00005e5d(3): MOV RDX,R15
00005e60(1): PUSH RAX
00005e61(5): MOV RCX,qword ptr [RSP + 0x28]
00005e66(3): MOV RSI,R14
00005e69(3): MOV RDI,R13
00005e6c(5): CALL 0x00004910
00005e71(4): MOV dword ptr [RBP],R12D
00005e75(4): ADD RSP,0x38
00005e79(1): POP RBX
00005e7a(1): POP RBP
00005e7b(2): POP R12
00005e7d(2): POP R13
00005e7f(2): POP R14
00005e81(2): POP R15
00005e83(1): RET
00005e90(2): PUSH R15
00005e92(2): PUSH R14
00005e94(7): LEA RAX,[0x21b200]
00005e9b(2): PUSH R13
00005e9d(2): PUSH R12
00005e9f(3): MOV R12,RDX
00005ea2(1): PUSH RBP
00005ea3(1): PUSH RBX
00005ea4(3): MOV RBX,RCX
00005ea7(3): MOV R14,RDI
00005eaa(3): MOV R15,RSI
00005ead(4): SUB RSP,0x38
00005eb1(3): TEST RCX,RCX
00005eb4(4): CMOVZ RBX,RAX
00005eb8(2): XOR EBP,EBP
00005eba(5): CALL 0x000019f0
00005ebf(3): TEST R12,R12
00005ec2(3): MOV R13,RAX
00005ec5(2): MOV EAX,dword ptr [RAX]
00005ec7(4): SETZ BPL
00005ecb(3): OR EBP,dword ptr [RBX + 0x4]
00005ece(4): LEA R10,[RBX + 0x8]
00005ed2(4): SUB RSP,0x8
00005ed6(3): MOV R8D,dword ptr [RBX]
00005ed9(3): MOV RCX,R15
00005edc(4): MOV dword ptr [RSP + 0x14],EAX
00005ee0(3): PUSH qword ptr [RBX + 0x30]
00005ee3(3): MOV RDX,R14
00005ee6(3): PUSH qword ptr [RBX + 0x28]
00005ee9(2): PUSH R10
00005eeb(2): XOR ESI,ESI
00005eed(3): MOV R9D,EBP
00005ef0(2): XOR EDI,EDI
00005ef2(5): MOV qword ptr [RSP + 0x40],R10
00005ef7(5): CALL 0x00004910
00005efc(4): LEA RSI,[RAX + 0x1]
00005f00(5): MOV qword ptr [RSP + 0x48],RAX
00005f05(4): ADD RSP,0x20
00005f09(3): MOV RDI,RSI
00005f0c(5): MOV qword ptr [RSP + 0x18],RSI
00005f11(5): CALL 0x00006dc0
00005f16(5): MOV qword ptr [RSP + 0x10],RAX
00005f1b(4): SUB RSP,0x8
00005f1f(3): PUSH qword ptr [RBX + 0x30]
00005f22(3): PUSH qword ptr [RBX + 0x28]
00005f25(5): MOV R10,qword ptr [RSP + 0x38]
00005f2a(3): MOV R9D,EBP
00005f2d(3): MOV R8D,dword ptr [RBX]
00005f30(3): MOV RCX,R15
00005f33(3): MOV RDX,R14
00005f36(3): MOV RDI,RAX
00005f39(2): PUSH R10
00005f3b(5): MOV RSI,qword ptr [RSP + 0x38]
00005f40(5): CALL 0x00004910
00005f45(4): MOV EAX,dword ptr [RSP + 0x2c]
00005f49(4): ADD RSP,0x20
00005f4d(3): TEST R12,R12
00005f50(4): MOV dword ptr [R13],EAX
00005f54(2): JZ 0x00005f5f
00005f56(5): MOV R11,qword ptr [RSP + 0x28]
00005f5b(4): MOV qword ptr [R12],R11
00005f5f(5): MOV RAX,qword ptr [RSP + 0x10]
00005f64(4): ADD RSP,0x38
00005f68(1): POP RBX
00005f69(1): POP RBP
00005f6a(2): POP R12
00005f6c(2): POP R13
00005f6e(2): POP R14
00005f70(2): POP R15
00005f72(1): RET
00005f80(3): MOV RCX,RDX
00005f83(2): XOR EDX,EDX
00005f85(5): JMP 0x00005e90
00005f90(6): MOV EAX,dword ptr [0x0021b058]
00005f96(2): PUSH R12
00005f98(7): MOV R12,qword ptr [0x0021b060]
00005f9f(1): PUSH RBP
00005fa0(1): PUSH RBX
00005fa1(3): CMP EAX,0x1
00005fa4(2): JLE 0x00005fd1
00005fa6(3): SUB EAX,0x2
00005fa9(5): LEA RBX,[R12 + 0x18]
00005fae(4): SHL RAX,0x4
00005fb2(5): LEA RBP,[R12 + RAX*0x1 + 0x28]
00005fb7(9): NOP word ptr [RAX + RAX*0x1]
00005fc0(3): MOV RDI,qword ptr [RBX]
00005fc3(4): ADD RBX,0x10
00005fc7(5): CALL 0x000019d0
00005fcc(3): CMP RBX,RBP
00005fcf(2): JNZ 0x00005fc0
00005fd1(5): MOV RDI,qword ptr [R12 + 0x8]
00005fd6(7): LEA RBX,[0x21b100]
00005fdd(3): CMP RDI,RBX
00005fe0(2): JZ 0x00005ff9
00005fe2(5): CALL 0x000019d0
00005fe7(11): MOV qword ptr [0x0021b070],0x100
00005ff2(7): MOV qword ptr [0x0021b078],RBX
00005ff9(7): LEA RBX,[0x21b070]
00006000(3): CMP R12,RBX
00006003(2): JZ 0x00006014
00006005(3): MOV RDI,R12
00006008(5): CALL 0x000019d0
0000600d(7): MOV qword ptr [0x0021b060],RBX
00006014(1): POP RBX
00006015(10): MOV dword ptr [0x0021b058],0x1
0000601f(1): POP RBP
00006020(2): POP R12
00006022(1): RET
00006030(7): LEA RCX,[0x21b200]
00006037(7): MOV RDX,-0x1
0000603e(5): JMP 0x00005b50
00006050(7): LEA RCX,[0x21b200]
00006057(5): JMP 0x00005b50
00006060(7): LEA RCX,[0x21b200]
00006067(3): MOV RSI,RDI
0000606a(7): MOV RDX,-0x1
00006071(2): XOR EDI,EDI
00006073(5): JMP 0x00005b50
00006080(7): LEA RCX,[0x21b200]
00006087(3): MOV RDX,RSI
0000608a(3): MOV RSI,RDI
0000608d(2): XOR EDI,EDI
0000608f(5): JMP 0x00005b50
000060a0(4): SUB RSP,0x48
000060a4(3): MOV RAX,RDX
000060a7(9): MOV RDX,qword ptr FS:[0x28]
000060b0(5): MOV qword ptr [RSP + 0x38],RDX
000060b5(2): XOR EDX,EDX
000060b7(3): CMP ESI,0xa
000060ba(2): JZ 0x00006124
000060bc(3): MOV dword ptr [RSP],ESI
000060bf(3): MOV RCX,RSP
000060c2(7): MOV RDX,-0x1
000060c9(3): MOV RSI,RAX
000060cc(9): MOV qword ptr [RSP + 0x4],0x0
000060d5(9): MOV qword ptr [RSP + 0xc],0x0
000060de(9): MOV qword ptr [RSP + 0x14],0x0
000060e7(9): MOV qword ptr [RSP + 0x1c],0x0
000060f0(9): MOV qword ptr [RSP + 0x24],0x0
000060f9(9): MOV qword ptr [RSP + 0x2c],0x0
00006102(8): MOV dword ptr [RSP + 0x34],0x0
0000610a(5): CALL 0x00005b50
0000610f(5): MOV RCX,qword ptr [RSP + 0x38]
00006114(9): XOR RCX,qword ptr FS:[0x28]
0000611d(2): JNZ 0x00006129
0000611f(4): ADD RSP,0x48
00006123(1): RET
00006124(5): CALL 0x000019e0
00006129(5): CALL 0x00001ad0
0000612e(2): NOP
00006130(4): SUB RSP,0x48
00006134(3): MOV RAX,RDX
00006137(3): MOV RDX,RCX
0000613a(9): MOV RCX,qword ptr FS:[0x28]
00006143(5): MOV qword ptr [RSP + 0x38],RCX
00006148(2): XOR ECX,ECX
0000614a(3): CMP ESI,0xa
0000614d(2): JZ 0x000061b0
0000614f(3): MOV dword ptr [RSP],ESI
00006152(3): MOV RCX,RSP
00006155(3): MOV RSI,RAX
00006158(9): MOV qword ptr [RSP + 0x4],0x0
00006161(9): MOV qword ptr [RSP + 0xc],0x0
0000616a(9): MOV qword ptr [RSP + 0x14],0x0
00006173(9): MOV qword ptr [RSP + 0x1c],0x0
0000617c(9): MOV qword ptr [RSP + 0x24],0x0
00006185(9): MOV qword ptr [RSP + 0x2c],0x0
0000618e(8): MOV dword ptr [RSP + 0x34],0x0
00006196(5): CALL 0x00005b50
0000619b(5): MOV RDX,qword ptr [RSP + 0x38]
000061a0(9): XOR RDX,qword ptr FS:[0x28]
000061a9(2): JNZ 0x000061b5
000061ab(4): ADD RSP,0x48
000061af(1): RET
000061b0(5): CALL 0x000019e0
000061b5(5): CALL 0x00001ad0
000061ba(6): NOP word ptr [RAX + RAX*0x1]
000061c0(3): MOV RDX,RSI
000061c3(2): MOV ESI,EDI
000061c5(2): XOR EDI,EDI
000061c7(5): JMP 0x000060a0
000061d0(3): MOV RCX,RDX
000061d3(3): MOV RDX,RSI
000061d6(2): MOV ESI,EDI
000061d8(2): XOR EDI,EDI
000061da(5): JMP 0x00006130
000061e0(4): SUB RSP,0x48
000061e4(2): MOV ECX,EDX
000061e6(9): MOV RAX,qword ptr FS:[0x28]
000061ef(5): MOV qword ptr [RSP + 0x38],RAX
000061f4(2): XOR EAX,EAX
000061f6(7): MOV RAX,qword ptr [0x0021b230]
000061fd(3): MOV R8,RSP
00006200(3): AND ECX,0x1f
00006203(8): MOVDQA XMM0,xmmword ptr [0x0021b200]
0000620b(5): MOV qword ptr [RSP + 0x30],RAX
00006210(2): MOV EAX,EDX
00006212(4): MOVAPS xmmword ptr [RSP],XMM0
00006216(3): SHR AL,0x5
00006219(3): MOVZX EAX,AL
0000621c(5): LEA R9,[R8 + RAX*0x4 + 0x8]
00006221(8): MOVDQA XMM0,xmmword ptr [0x0021b210]
00006229(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
0000622e(8): MOVDQA XMM0,xmmword ptr [0x0021b220]
00006236(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000623b(3): MOV EDX,dword ptr [R9]
0000623e(2): MOV EAX,EDX
00006240(2): SHR EAX,CL
00006242(2): NOT EAX
00006244(3): AND EAX,0x1
00006247(2): SHL EAX,CL
00006249(3): MOV RCX,R8
0000624c(2): XOR EAX,EDX
0000624e(3): MOV RDX,RSI
00006251(3): MOV RSI,RDI
00006254(3): MOV dword ptr [R9],EAX
00006257(2): XOR EDI,EDI
00006259(5): CALL 0x00005b50
0000625e(5): MOV RSI,qword ptr [RSP + 0x38]
00006263(9): XOR RSI,qword ptr FS:[0x28]
0000626c(2): JNZ 0x00006273
0000626e(4): ADD RSP,0x48
00006272(1): RET
00006273(5): CALL 0x00001ad0
00006278(8): NOP dword ptr [RAX + RAX*0x1]
00006280(4): MOVSX EDX,SIL
00006284(7): MOV RSI,-0x1
0000628b(5): JMP 0x000061e0
00006290(5): MOV EDX,0x3a
00006295(7): MOV RSI,-0x1
0000629c(5): JMP 0x000061e0
000062b0(5): MOV EDX,0x3a
000062b5(5): JMP 0x000061e0
000062c0(4): SUB RSP,0x48
000062c4(3): MOV RAX,RDX
000062c7(9): MOV RDX,qword ptr FS:[0x28]
000062d0(5): MOV qword ptr [RSP + 0x38],RDX
000062d5(2): XOR EDX,EDX
000062d7(3): CMP ESI,0xa
000062da(2): JZ 0x00006344
000062dc(3): MOV dword ptr [RSP],ESI
000062df(3): MOV RCX,RSP
000062e2(7): MOV RDX,-0x1
000062e9(3): MOV RSI,RAX
000062ec(9): MOV qword ptr [RSP + 0x4],0x0
000062f5(9): MOV qword ptr [RSP + 0xc],0x4000000
000062fe(9): MOV qword ptr [RSP + 0x14],0x0
00006307(9): MOV qword ptr [RSP + 0x1c],0x0
00006310(9): MOV qword ptr [RSP + 0x24],0x0
00006319(9): MOV qword ptr [RSP + 0x2c],0x0
00006322(8): MOV dword ptr [RSP + 0x34],0x0
0000632a(5): CALL 0x00005b50
0000632f(5): MOV RCX,qword ptr [RSP + 0x38]
00006334(9): XOR RCX,qword ptr FS:[0x28]
0000633d(2): JNZ 0x00006349
0000633f(4): ADD RSP,0x48
00006343(1): RET
00006344(5): CALL 0x000019e0
00006349(5): CALL 0x00001ad0
0000634e(2): NOP
00006350(4): SUB RSP,0x48
00006354(3): MOV R9,RCX
00006357(7): MOV RCX,qword ptr [0x0021b230]
0000635e(8): MOVDQA XMM0,xmmword ptr [0x0021b200]
00006366(9): MOV RAX,qword ptr FS:[0x28]
0000636f(5): MOV qword ptr [RSP + 0x38],RAX
00006374(2): XOR EAX,EAX
00006376(4): MOVAPS xmmword ptr [RSP],XMM0
0000637a(3): TEST RSI,RSI
0000637d(5): MOV qword ptr [RSP + 0x30],RCX
00006382(7): MOV dword ptr [RSP],0xa
00006389(8): MOVDQA XMM0,xmmword ptr [0x0021b210]
00006391(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00006396(8): MOVDQA XMM0,xmmword ptr [0x0021b220]
0000639e(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
000063a3(2): JZ 0x000063d7
000063a5(3): TEST RDX,RDX
000063a8(2): JZ 0x000063d7
000063aa(5): MOV qword ptr [RSP + 0x28],RSI
000063af(5): MOV qword ptr [RSP + 0x30],RDX
000063b4(3): MOV RCX,RSP
000063b7(3): MOV RDX,R8
000063ba(3): MOV RSI,R9
000063bd(5): CALL 0x00005b50
000063c2(5): MOV RDI,qword ptr [RSP + 0x38]
000063c7(9): XOR RDI,qword ptr FS:[0x28]
000063d0(2): JNZ 0x000063dc
000063d2(4): ADD RSP,0x48
000063d6(1): RET
000063d7(5): CALL 0x000019e0
000063dc(5): CALL 0x00001ad0
000063e1(5): NOP dword ptr [RAX + RAX*0x1]
000063e6(10): NOP word ptr CS:[RAX + RAX*0x1]
000063f0(7): MOV R8,-0x1
000063f7(5): JMP 0x00006350
00006400(3): MOV RCX,RDX
00006403(7): MOV R8,-0x1
0000640a(3): MOV RDX,RSI
0000640d(3): MOV RSI,RDI
00006410(2): XOR EDI,EDI
00006412(5): JMP 0x00006350
00006420(3): MOV R8,RCX
00006423(3): MOV RCX,RDX
00006426(3): MOV RDX,RSI
00006429(3): MOV RSI,RDI
0000642c(2): XOR EDI,EDI
0000642e(5): JMP 0x00006350
00006440(7): LEA RCX,[0x21b020]
00006447(5): JMP 0x00005b50
00006450(7): LEA RCX,[0x21b020]
00006457(3): MOV RDX,RSI
0000645a(3): MOV RSI,RDI
0000645d(2): XOR EDI,EDI
0000645f(5): JMP 0x00005b50
00006470(7): LEA RCX,[0x21b020]
00006477(7): MOV RDX,-0x1
0000647e(5): JMP 0x00005b50
00006490(7): LEA RCX,[0x21b020]
00006497(3): MOV RSI,RDI
0000649a(7): MOV RDX,-0x1
000064a1(2): XOR EDI,EDI
000064a3(5): JMP 0x00005b50
000064b0(1): PUSH RBP
000064b1(1): PUSH RBX
000064b2(3): MOV RDX,RSI
000064b5(3): MOV RBX,RSI
000064b8(2): XOR ESI,ESI
000064ba(3): MOV RBP,RDI
000064bd(4): SUB RSP,0x8
000064c1(5): CALL 0x00001b80
000064c6(3): MOV RDX,RAX
000064c9(3): SUB RDX,RBP
000064cc(4): ADD RDX,0x1
000064d0(3): TEST RAX,RAX
000064d3(3): MOV RAX,RBX
000064d6(4): CMOVNZ RAX,RDX
000064da(4): ADD RSP,0x8
000064de(1): POP RBX
000064df(1): POP RBP
000064e0(1): RET
000064f0(4): MOVZX R8D,byte ptr [RDI]
000064f4(3): MOVZX EDX,byte ptr [RSI]
000064f7(4): CMP R8B,0x2d
000064fb(6): JZ 0x000065a0
00006501(3): CMP DL,0x2d
00006504(6): JZ 0x000065e8
0000650a(6): NOP word ptr [RAX + RAX*0x1]
00006510(4): CMP R8B,0x30
00006514(6): JZ 0x000066a8
0000651a(3): CMP DL,0x30
0000651d(6): JZ 0x00006698
00006523(3): MOVZX EAX,DL
00006526(3): CMP DL,R8B
00006529(3): LEA ECX,[RAX + -0x30]
0000652c(6): JNZ 0x000066c8
00006532(3): CMP ECX,0x9
00006535(6): JA 0x00006760
0000653b(4): ADD RDI,0x1
0000653f(4): ADD RSI,0x1
00006543(3): MOVZX EAX,byte ptr [RSI]
00006546(4): MOVZX R8D,byte ptr [RDI]
0000654a(2): MOV EDX,EAX
0000654c(3): LEA ECX,[RAX + -0x30]
0000654f(3): CMP R8B,AL
00006552(6): JNZ 0x000066c8
00006558(3): CMP ECX,0x9
0000655b(2): JBE 0x0000653b
0000655d(4): MOVZX EDX,R8B
00006561(3): XOR R9D,R9D
00006564(3): CMP ECX,0x9
00006567(6): JA 0x00006760
0000656d(3): NOP dword ptr [RAX]
00006570(2): XOR ECX,ECX
00006572(6): NOP word ptr [RAX + RAX*0x1]
00006578(5): MOVZX EAX,byte ptr [RSI + RCX*0x1 + 0x1]
0000657d(4): ADD RCX,0x1
00006581(3): SUB EAX,0x30
00006584(3): CMP EAX,0x9
00006587(2): JBE 0x00006578
00006589(3): CMP R9,RCX
0000658c(6): JZ 0x00006763
00006592(2): SBB EAX,EAX
00006594(3): OR EAX,0x1
00006597(1): RET
000065a0(4): ADD RDI,0x1
000065a4(3): MOVZX ECX,byte ptr [RDI]
000065a7(3): CMP CL,0x30
000065aa(2): JZ 0x000065a0
000065ac(3): MOVZX EAX,CL
000065af(3): CMP DL,0x2d
000065b2(4): LEA R8D,[RAX + -0x30]
000065b6(2): JZ 0x00006620
000065b8(4): CMP R8D,0x9
000065bc(6): JBE 0x0000678e
000065c2(6): NOP word ptr [RAX + RAX*0x1]
000065c8(3): CMP DL,0x30
000065cb(6): JZ 0x000066b8
000065d1(3): SUB EDX,0x30
000065d4(3): XOR R9D,R9D
000065d7(3): CMP EDX,0x9
000065da(4): SETBE R9B
000065de(3): MOV EAX,R9D
000065e1(2): NEG EAX
000065e3(1): RET
000065e8(4): ADD RSI,0x1
000065ec(3): MOVZX EAX,byte ptr [RSI]
000065ef(2): CMP AL,0x30
000065f1(2): JZ 0x000065e8
000065f3(3): LEA EDX,[RAX + -0x30]
000065f6(5): MOV EAX,0x1
000065fb(3): CMP EDX,0x9
000065fe(6): JBE 0x00006703
00006604(4): CMP R8B,0x30
00006608(6): JZ 0x00006708
0000660e(4): SUB R8D,0x30
00006612(2): XOR EAX,EAX
00006614(4): CMP R8D,0x9
00006618(3): SETBE AL
0000661b(1): RET
00006620(4): ADD RSI,0x1
00006624(4): MOVZX R9D,byte ptr [RSI]
00006628(4): CMP R9B,0x30
0000662c(2): JZ 0x00006620
0000662e(3): CMP CL,R9B
00006631(6): JNZ 0x00006774
00006637(4): CMP R8D,0x9
0000663b(3): LEA EDX,[RAX + -0x30]
0000663e(2): JA 0x00006661
00006640(4): ADD RDI,0x1
00006644(4): ADD RSI,0x1
00006648(3): MOVZX EAX,byte ptr [RSI]
0000664b(3): MOVZX ECX,byte ptr [RDI]
0000664e(3): MOV R9D,EAX
00006651(3): LEA EDX,[RAX + -0x30]
00006654(2): CMP CL,AL
00006656(6): JNZ 0x00006718
0000665c(3): CMP EDX,0x9
0000665f(2): JBE 0x00006640
00006661(3): XOR R10D,R10D
00006664(3): CMP EDX,0x9
00006667(6): JA 0x00006760
0000666d(2): XOR EDX,EDX
0000666f(1): NOP
00006670(5): MOVZX EAX,byte ptr [RSI + RDX*0x1 + 0x1]
00006675(4): ADD RDX,0x1
00006679(3): SUB EAX,0x30
0000667c(3): CMP EAX,0x9
0000667f(2): JBE 0x00006670
00006681(3): CMP R10,RDX
00006684(6): JZ 0x0000677d
0000668a(2): SBB EAX,EAX
0000668c(3): AND EAX,0x2
0000668f(3): SUB EAX,0x1
00006692(1): RET
00006698(4): ADD RSI,0x1
0000669c(3): MOVZX EDX,byte ptr [RSI]
0000669f(5): JMP 0x0000651a
000066a8(4): ADD RDI,0x1
000066ac(4): MOVZX R8D,byte ptr [RDI]
000066b0(5): JMP 0x00006510
000066b8(4): ADD RSI,0x1
000066bc(3): MOVZX EDX,byte ptr [RSI]
000066bf(5): JMP 0x000065c8
000066c8(4): MOVZX EAX,R8B
000066cc(3): SUB EAX,0x30
000066cf(3): CMP EAX,0x9
000066d2(6): JA 0x00006561
000066d8(3): XOR R9D,R9D
000066db(5): NOP dword ptr [RAX + RAX*0x1]
000066e0(6): MOVZX EAX,byte ptr [RDI + R9*0x1 + 0x1]
000066e6(4): ADD R9,0x1
000066ea(3): SUB EAX,0x30
000066ed(3): CMP EAX,0x9
000066f0(2): JBE 0x000066e0
000066f2(3): CMP ECX,0x9
000066f5(6): JBE 0x00006570
000066fb(2): XOR EAX,EAX
000066fd(3): TEST R9,R9
00006700(3): SETNZ AL
00006703(2): RET
00006708(4): ADD RDI,0x1
0000670c(4): MOVZX R8D,byte ptr [RDI]
00006710(5): JMP 0x00006604
00006718(4): MOVZX R8D,CL
0000671c(4): SUB R8D,0x30
00006720(4): CMP R8D,0x9
00006724(6): JA 0x00006661
0000672a(3): XOR R10D,R10D
0000672d(3): NOP dword ptr [RAX]
00006730(6): MOVZX EAX,byte ptr [RDI + R10*0x1 + 0x1]
00006736(4): ADD R10,0x1
0000673a(3): SUB EAX,0x30
0000673d(3): CMP EAX,0x9
00006740(2): JBE 0x00006730
00006742(3): CMP EDX,0x9
00006745(6): JBE 0x0000666d
0000674b(2): XOR EAX,EAX
0000674d(3): TEST R10,R10
00006750(3): SETNZ AL
00006753(2): NEG EAX
00006755(1): RET
00006760(2): XOR EAX,EAX
00006762(1): RET
00006763(2): XOR EAX,EAX
00006765(3): TEST R9,R9
00006768(2): JZ 0x00006703
0000676a(4): MOVZX R9D,R8B
0000676e(3): MOV EAX,R9D
00006771(2): SUB EAX,EDX
00006773(1): RET
00006774(4): MOVZX EAX,R9B
00006778(3): LEA EDX,[RAX + -0x30]
0000677b(2): JMP 0x00006720
0000677d(2): XOR EAX,EAX
0000677f(3): TEST R10,R10
00006782(6): JZ 0x00006703
00006788(3): MOV EAX,R9D
0000678b(2): SUB EAX,ECX
0000678d(1): RET
0000678e(5): MOV EAX,0xffffffff
00006793(1): RET
000067a0(2): PUSH R15
000067a2(2): PUSH R14
000067a4(2): PUSH R13
000067a6(2): PUSH R12
000067a8(3): MOV R12,R9
000067ab(1): PUSH RBP
000067ac(1): PUSH RBX
000067ad(3): MOV RBP,RDI
000067b0(3): MOV RBX,R8
000067b3(4): SUB RSP,0x28
000067b7(3): TEST RSI,RSI
000067ba(6): JZ 0x000068d8
000067c0(3): MOV R8,RDX
000067c3(7): LEA RDX,[0x16708]
000067ca(3): MOV R9,RCX
000067cd(2): XOR EAX,EAX
000067cf(3): MOV RCX,RSI
000067d2(5): MOV ESI,0x1
000067d7(5): CALL 0x00001d80
000067dc(7): LEA RSI,[0x1671b]
000067e3(2): XOR EDI,EDI
000067e5(5): MOV EDX,0x5
000067ea(5): CALL 0x00001a90
000067ef(7): LEA RDX,[0x16a40]
000067f6(3): MOV RCX,RAX
000067f9(6): MOV R8D,0x7e3
000067ff(5): MOV ESI,0x1
00006804(3): MOV RDI,RBP
00006807(2): XOR EAX,EAX
00006809(5): CALL 0x00001d80
0000680e(7): LEA RSI,[0x167a8]
00006815(2): XOR EDI,EDI
00006817(5): MOV EDX,0x5
0000681c(5): CALL 0x00001a90
00006821(3): MOV RSI,RBP
00006824(3): MOV RDI,RAX
00006827(5): CALL 0x00001bb0
0000682c(4): CMP R12,0x9
00006830(6): JA 0x00006b70
00006836(7): LEA RDX,[0x16a04]
0000683d(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
00006841(3): ADD RAX,RDX
00006844(2): JMP RAX
00006850(4): MOV R9,qword ptr [RBX + 0x38]
00006854(4): MOV RAX,qword ptr [RBX + 0x10]
00006858(7): LEA RSI,[0x16918]
0000685f(4): MOV R8,qword ptr [RBX + 0x8]
00006863(5): MOV EDX,0x5
00006868(2): XOR EDI,EDI
0000686a(4): MOV R13,qword ptr [RBX + 0x30]
0000686e(4): MOV R12,qword ptr [RBX + 0x28]
00006872(5): MOV qword ptr [RSP + 0x10],R9
00006877(4): MOV R15,qword ptr [RBX + 0x20]
0000687b(4): MOV R14,qword ptr [RBX + 0x18]
0000687f(4): MOV qword ptr [RSP],RAX
00006883(5): MOV qword ptr [RSP + 0x8],R8
00006888(3): MOV RBX,qword ptr [RBX]
0000688b(5): CALL 0x00001a90
00006890(4): SUB RSP,0x8
00006894(5): MOV R9,qword ptr [RSP + 0x18]
00006899(3): MOV RDX,RAX
0000689c(3): MOV RCX,RBX
0000689f(5): MOV ESI,0x1
000068a4(3): MOV RDI,RBP
000068a7(2): XOR EAX,EAX
000068a9(2): PUSH R9
000068ab(2): PUSH R13
000068ad(2): PUSH R12
000068af(2): PUSH R15
000068b1(2): PUSH R14
000068b3(5): MOV R9,qword ptr [RSP + 0x30]
000068b8(5): MOV R8,qword ptr [RSP + 0x38]
000068bd(5): CALL 0x00001d80
000068c2(4): ADD RSP,0x30
000068c6(4): ADD RSP,0x28
000068ca(1): POP RBX
000068cb(1): POP RBP
000068cc(2): POP R12
000068ce(2): POP R13
000068d0(2): POP R14
000068d2(2): POP R15
000068d4(1): RET
000068d8(3): MOV R8,RCX
000068db(3): MOV RCX,RDX
000068de(7): LEA RDX,[0x16714]
000068e5(5): MOV ESI,0x1
000068ea(2): XOR EAX,EAX
000068ec(5): CALL 0x00001d80
000068f1(5): JMP 0x000067dc
00006900(4): MOV R10,qword ptr [RBX + 0x40]
00006904(4): MOV R9,qword ptr [RBX + 0x38]
00006908(7): LEA RSI,[0x16948]
0000690f(4): MOV RAX,qword ptr [RBX + 0x10]
00006913(4): MOV R8,qword ptr [RBX + 0x8]
00006917(5): MOV EDX,0x5
0000691c(4): MOV R13,qword ptr [RBX + 0x30]
00006920(4): MOV R12,qword ptr [RBX + 0x28]
00006924(4): MOV R15,qword ptr [RBX + 0x20]
00006928(4): MOV R14,qword ptr [RBX + 0x18]
0000692c(3): MOV RBX,qword ptr [RBX]
0000692f(5): MOV qword ptr [RSP + 0x18],R10
00006934(5): MOV qword ptr [RSP + 0x10],R9
00006939(4): MOV qword ptr [RSP],RAX
0000693d(5): MOV qword ptr [RSP + 0x8],R8
00006942(2): XOR EDI,EDI
00006944(5): CALL 0x00001a90
00006949(5): MOV R10,qword ptr [RSP + 0x18]
0000694e(2): PUSH R10
00006950(5): JMP 0x00006894
00006958(3): MOV RBX,qword ptr [RBX]
0000695b(7): LEA RSI,[0x1671f]
00006962(5): MOV EDX,0x5
00006967(2): XOR EDI,EDI
00006969(5): CALL 0x00001a90
0000696e(4): ADD RSP,0x28
00006972(3): MOV RCX,RBX
00006975(3): MOV RDI,RBP
00006978(1): POP RBX
00006979(1): POP RBP
0000697a(2): POP R12
0000697c(2): POP R13
0000697e(2): POP R14
00006980(2): POP R15
00006982(3): MOV RDX,RAX
00006985(5): MOV ESI,0x1
0000698a(2): XOR EAX,EAX
0000698c(5): JMP 0x00001d80
00006998(4): MOV R12,qword ptr [RBX + 0x8]
0000699c(7): LEA RSI,[0x1672f]
000069a3(3): MOV RBX,qword ptr [RBX]
000069a6(5): MOV EDX,0x5
000069ab(2): XOR EDI,EDI
000069ad(5): CALL 0x00001a90
000069b2(4): ADD RSP,0x28
000069b6(3): MOV R8,R12
000069b9(3): MOV RCX,RBX
000069bc(3): MOV RDI,RBP
000069bf(3): MOV RDX,RAX
000069c2(5): MOV ESI,0x1
000069c7(1): POP RBX
000069c8(1): POP RBP
000069c9(2): POP R12
000069cb(2): POP R13
000069cd(2): POP R14
000069cf(2): POP R15
000069d1(2): XOR EAX,EAX
000069d3(5): JMP 0x00001d80
000069e0(4): MOV R13,qword ptr [RBX + 0x10]
000069e4(4): MOV R12,qword ptr [RBX + 0x8]
000069e8(7): LEA RSI,[0x16746]
000069ef(3): MOV RBX,qword ptr [RBX]
000069f2(5): MOV EDX,0x5
000069f7(2): XOR EDI,EDI
000069f9(5): CALL 0x00001a90
000069fe(4): ADD RSP,0x28
00006a02(3): MOV R9,R13
00006a05(3): MOV R8,R12
00006a08(3): MOV RCX,RBX
00006a0b(3): MOV RDI,RBP
00006a0e(3): MOV RDX,RAX
00006a11(1): POP RBX
00006a12(1): POP RBP
00006a13(2): POP R12
00006a15(2): POP R13
00006a17(2): POP R14
00006a19(2): POP R15
00006a1b(5): MOV ESI,0x1
00006a20(2): XOR EAX,EAX
00006a22(5): JMP 0x00001d80
00006a30(7): LEA RSI,[0x16878]
00006a37(5): MOV EDX,0x5
00006a3c(2): XOR EDI,EDI
00006a3e(4): MOV R14,qword ptr [RBX + 0x18]
00006a42(4): MOV R13,qword ptr [RBX + 0x10]
00006a46(4): MOV R12,qword ptr [RBX + 0x8]
00006a4a(3): MOV RBX,qword ptr [RBX]
00006a4d(5): CALL 0x00001a90
00006a52(4): SUB RSP,0x8
00006a56(2): PUSH R14
00006a58(3): MOV RDX,RAX
00006a5b(3): MOV R9,R13
00006a5e(3): MOV R8,R12
00006a61(3): MOV RCX,RBX
00006a64(3): MOV RDI,RBP
00006a67(5): MOV ESI,0x1
00006a6c(2): XOR EAX,EAX
00006a6e(5): CALL 0x00001d80
00006a73(1): POP RAX
00006a74(1): POP RDX
00006a75(4): ADD RSP,0x28
00006a79(1): POP RBX
00006a7a(1): POP RBP
00006a7b(2): POP R12
00006a7d(2): POP R13
00006a7f(2): POP R14
00006a81(2): POP R15
00006a83(1): RET
00006a88(4): MOV R15,qword ptr [RBX + 0x20]
00006a8c(7): LEA RSI,[0x16898]
00006a93(5): MOV EDX,0x5
00006a98(2): XOR EDI,EDI
00006a9a(4): MOV R14,qword ptr [RBX + 0x18]
00006a9e(4): MOV R13,qword ptr [RBX + 0x10]
00006aa2(4): MOV R12,qword ptr [RBX + 0x8]
00006aa6(3): MOV RBX,qword ptr [RBX]
00006aa9(5): CALL 0x00001a90
00006aae(2): PUSH R15
00006ab0(2): JMP 0x00006a56
00006ab8(4): MOV R8,qword ptr [RBX + 0x8]
00006abc(4): MOV R12,qword ptr [RBX + 0x28]
00006ac0(7): LEA RSI,[0x168c0]
00006ac7(4): MOV R15,qword ptr [RBX + 0x20]
00006acb(4): MOV R14,qword ptr [RBX + 0x18]
00006acf(5): MOV EDX,0x5
00006ad4(4): MOV R13,qword ptr [RBX + 0x10]
00006ad8(2): XOR EDI,EDI
00006ada(3): MOV RBX,qword ptr [RBX]
00006add(4): MOV qword ptr [RSP],R8
00006ae1(5): CALL 0x00001a90
00006ae6(4): SUB RSP,0x8
00006aea(3): MOV R9,R13
00006aed(2): PUSH R12
00006aef(2): PUSH R15
00006af1(2): PUSH R14
00006af3(5): MOV R8,qword ptr [RSP + 0x20]
00006af8(3): MOV RCX,RBX
00006afb(3): MOV RDX,RAX
00006afe(3): MOV RDI,RBP
00006b01(5): MOV ESI,0x1
00006b06(2): XOR EAX,EAX
00006b08(5): CALL 0x00001d80
00006b0d(4): ADD RSP,0x20
00006b11(4): ADD RSP,0x28
00006b15(1): POP RBX
00006b16(1): POP RBP
00006b17(2): POP R12
00006b19(2): POP R13
00006b1b(2): POP R14
00006b1d(2): POP R15
00006b1f(1): RET
00006b20(4): MOV R9,qword ptr [RBX + 0x10]
00006b24(4): MOV R13,qword ptr [RBX + 0x30]
00006b28(7): LEA RSI,[0x168e8]
00006b2f(4): MOV R12,qword ptr [RBX + 0x28]
00006b33(4): MOV R15,qword ptr [RBX + 0x20]
00006b37(5): MOV EDX,0x5
00006b3c(4): MOV R14,qword ptr [RBX + 0x18]
00006b40(4): MOV R8,qword ptr [RBX + 0x8]
00006b44(2): XOR EDI,EDI
00006b46(5): MOV qword ptr [RSP + 0x8],R9
00006b4b(3): MOV RBX,qword ptr [RBX]
00006b4e(4): MOV qword ptr [RSP],R8
00006b52(5): CALL 0x00001a90
00006b57(2): PUSH R13
00006b59(2): PUSH R12
00006b5b(2): PUSH R15
00006b5d(2): PUSH R14
00006b5f(5): MOV R9,qword ptr [RSP + 0x28]
00006b64(2): JMP 0x00006af3
00006b70(4): MOV R10,qword ptr [RBX + 0x40]
00006b74(4): MOV R9,qword ptr [RBX + 0x38]
00006b78(5): MOV EDX,0x5
00006b7d(4): MOV RAX,qword ptr [RBX + 0x10]
00006b81(4): MOV R8,qword ptr [RBX + 0x8]
00006b85(7): LEA RSI,[0x16980]
00006b8c(4): MOV R13,qword ptr [RBX + 0x30]
00006b90(4): MOV R12,qword ptr [RBX + 0x28]
00006b94(4): MOV R15,qword ptr [RBX + 0x20]
00006b98(4): MOV R14,qword ptr [RBX + 0x18]
00006b9c(5): MOV qword ptr [RSP + 0x18],R10
00006ba1(5): MOV qword ptr [RSP + 0x10],R9
00006ba6(4): MOV qword ptr [RSP],RAX
00006baa(5): MOV qword ptr [RSP + 0x8],R8
00006baf(3): MOV RBX,qword ptr [RBX]
00006bb2(5): JMP 0x00006942
00006bc0(3): XOR R9D,R9D
00006bc3(4): CMP qword ptr [R8],0x0
00006bc7(2): JZ 0x00006bdb
00006bc9(7): NOP dword ptr [RAX]
00006bd0(4): ADD R9,0x1
00006bd4(5): CMP qword ptr [R8 + R9*0x8],0x0
00006bd9(2): JNZ 0x00006bd0
00006bdb(5): JMP 0x000067a0
00006be0(4): SUB RSP,0x68
00006be4(3): MOV R10,R8
00006be7(3): XOR R9D,R9D
00006bea(9): MOV RAX,qword ptr FS:[0x28]
00006bf3(5): MOV qword ptr [RSP + 0x58],RAX
00006bf8(2): XOR EAX,EAX
00006bfa(3): MOV R8,RSP
00006bfd(3): NOP dword ptr [RAX]
00006c00(3): MOV EAX,dword ptr [R10]
00006c03(3): CMP EAX,0x2f
00006c06(2): JA 0x00006c4a
00006c08(3): MOV R11D,EAX
00006c0b(4): ADD R11,qword ptr [R10 + 0x10]
00006c0f(3): ADD EAX,0x8
00006c12(3): MOV dword ptr [R10],EAX
00006c15(3): MOV RAX,qword ptr [R11]
00006c18(3): TEST RAX,RAX
00006c1b(4): MOV qword ptr [R8 + R9*0x8],RAX
00006c1f(2): JZ 0x00006c2b
00006c21(4): ADD R9,0x1
00006c25(4): CMP R9,0xa
00006c29(2): JNZ 0x00006c00
00006c2b(5): CALL 0x000067a0
00006c30(5): MOV RAX,qword ptr [RSP + 0x58]
00006c35(9): XOR RAX,qword ptr FS:[0x28]
00006c3e(2): JNZ 0x00006c45
00006c40(4): ADD RSP,0x68
00006c44(1): RET
00006c45(5): CALL 0x00001ad0
00006c4a(4): MOV R11,qword ptr [R10 + 0x8]
00006c4e(4): LEA RAX,[R11 + 0x8]
00006c52(4): MOV qword ptr [R10 + 0x8],RAX
00006c56(2): JMP 0x00006c15
00006c60(1): PUSH RBP
00006c61(1): PUSH RBX
00006c62(6): MOV R10D,0x20
00006c68(3): XOR R11D,R11D
00006c6b(7): SUB RSP,0xb8
00006c72(9): MOV RAX,qword ptr FS:[0x28]
00006c7b(5): MOV qword ptr [RSP + 0x78],RAX
00006c80(2): XOR EAX,EAX
00006c82(8): LEA RAX,[0xd0 + RSP]
00006c8a(8): MOV qword ptr [0xa0 + RSP],R8
00006c92(8): LEA RBX,[0xd0 + RSP]
00006c9a(5): LEA R8,[RSP + 0x20]
00006c9f(8): MOV qword ptr [0xa8 + RSP],R9
00006ca7(8): MOV dword ptr [RSP + 0x8],0x20
00006caf(5): MOV qword ptr [RSP + 0x10],RAX
00006cb4(8): LEA RAX,[0x80 + RSP]
00006cbc(3): XOR R9D,R9D
00006cbf(5): MOV qword ptr [RSP + 0x18],RAX
00006cc4(3): MOV RBP,RAX
00006cc7(9): NOP word ptr [RAX + RAX*0x1]
00006cd0(4): CMP R10D,0x2f
00006cd4(2): JA 0x00006d2c
00006cd6(3): MOV EAX,R10D
00006cd9(6): MOV R11D,0x1
00006cdf(4): ADD R10D,0x8
00006ce3(3): ADD RAX,RBP
00006ce6(3): MOV RAX,qword ptr [RAX]
00006ce9(3): TEST RAX,RAX
00006cec(4): MOV qword ptr [R8 + R9*0x8],RAX
00006cf0(2): JZ 0x00006cfc
00006cf2(4): ADD R9,0x1
00006cf6(4): CMP R9,0xa
00006cfa(2): JNZ 0x00006cd0
00006cfc(3): TEST R11B,R11B
00006cff(2): JNZ 0x00006d25
00006d01(5): CALL 0x000067a0
00006d06(5): MOV RAX,qword ptr [RSP + 0x78]
00006d0b(9): XOR RAX,qword ptr FS:[0x28]
00006d14(2): JNZ 0x00006d20
00006d16(7): ADD RSP,0xb8
00006d1d(1): POP RBX
00006d1e(1): POP RBP
00006d1f(1): RET
00006d20(5): CALL 0x00001ad0
00006d25(5): MOV dword ptr [RSP + 0x8],R10D
00006d2a(2): JMP 0x00006d01
00006d2c(3): MOV RAX,RBX
00006d2f(4): ADD RBX,0x8
00006d33(2): JMP 0x00006ce6
00006d40(1): PUSH RBX
00006d41(7): LEA RSI,[0x16762]
00006d48(5): MOV EDX,0x5
00006d4d(2): XOR EDI,EDI
00006d4f(5): CALL 0x00001a90
00006d54(7): LEA RDX,[0x16777]
00006d5b(3): MOV RSI,RAX
00006d5e(5): MOV EDI,0x1
00006d63(2): XOR EAX,EAX
00006d65(5): CALL 0x00001cb0
00006d6a(7): LEA RSI,[0x1678d]
00006d71(5): MOV EDX,0x5
00006d76(2): XOR EDI,EDI
00006d78(5): CALL 0x00001a90
00006d7d(7): LEA RCX,[0x15e30]
00006d84(7): LEA RDX,[0x1600a]
00006d8b(3): MOV RSI,RAX
00006d8e(5): MOV EDI,0x1
00006d93(2): XOR EAX,EAX
00006d95(5): CALL 0x00001cb0
00006d9a(7): MOV RBX,qword ptr [0x0021b088]
00006da1(7): LEA RSI,[0x169c0]
00006da8(2): XOR EDI,EDI
00006daa(5): MOV EDX,0x5
00006daf(5): CALL 0x00001a90
00006db4(3): MOV RSI,RBX
00006db7(3): MOV RDI,RAX
00006dba(1): POP RBX
00006dbb(5): JMP 0x00001bb0
00006dc0(1): PUSH RBX
00006dc1(3): MOV RBX,RDI
00006dc4(5): CALL 0x00001c20
00006dc9(3): TEST RAX,RAX
00006dcc(2): JNZ 0x00006dd3
00006dce(3): TEST RBX,RBX
00006dd1(2): JNZ 0x00006dd5
00006dd3(1): POP RBX
00006dd4(1): RET
00006dd5(5): CALL 0x00007010
00006dda(6): NOP word ptr [RAX + RAX*0x1]
00006de0(3): MOV RAX,RDI
00006de3(3): MUL RSI
00006de6(3): MOV RDI,RAX
00006de9(3): SETO AL
00006dec(3): TEST RDI,RDI
00006def(2): JS 0x00006dfb
00006df1(3): MOVZX EAX,AL
00006df4(3): TEST RAX,RAX
00006df7(2): JNZ 0x00006dfb
00006df9(2): JMP 0x00006dc0
00006dfb(4): SUB RSP,0x8
00006dff(5): CALL 0x00007010
00006e04(2): NOP
00006e06(10): NOP word ptr CS:[RAX + RAX*0x1]
00006e10(2): JMP 0x00006dc0
00006e20(3): TEST RSI,RSI
00006e23(1): PUSH RBX
00006e24(3): MOV RBX,RSI
00006e27(2): JNZ 0x00006e2e
00006e29(3): TEST RDI,RDI
00006e2c(2): JNZ 0x00006e48
00006e2e(3): MOV RSI,RBX
00006e31(5): CALL 0x00001c90
00006e36(3): TEST RAX,RAX
00006e39(2): JNZ 0x00006e40
00006e3b(3): TEST RBX,RBX
00006e3e(2): JNZ 0x00006e51
00006e40(1): POP RBX
00006e41(1): RET
00006e48(5): CALL 0x000019d0
00006e4d(2): XOR EAX,EAX
00006e4f(1): POP RBX
00006e50(1): RET
00006e51(5): CALL 0x00007010
00006e56(10): NOP word ptr CS:[RAX + RAX*0x1]
00006e60(3): MOV RAX,RSI
00006e63(3): MUL RDX
00006e66(3): MOV RSI,RAX
00006e69(3): SETO AL
00006e6c(3): TEST RSI,RSI
00006e6f(2): JS 0x00006e7b
00006e71(3): MOVZX EAX,AL
00006e74(3): TEST RAX,RAX
00006e77(2): JNZ 0x00006e7b
00006e79(2): JMP 0x00006e20
00006e7b(4): SUB RSP,0x8
00006e7f(5): CALL 0x00007010
00006e84(2): NOP
00006e86(10): NOP word ptr CS:[RAX + RAX*0x1]
00006e90(3): TEST RDI,RDI
00006e93(3): MOV R9,RDX
00006e96(3): MOV RCX,qword ptr [RSI]
00006e99(2): JZ 0x00006ed0
00006e9b(2): XOR EDX,EDX
00006e9d(10): MOV RAX,0x5555555555555554
00006ea7(3): DIV R9
00006eaa(3): CMP RAX,RCX
00006ead(2): JBE 0x00006eeb
00006eaf(3): MOV RAX,RCX
00006eb2(3): SHR RAX,1
00006eb5(5): LEA RCX,[RAX + RCX*0x1 + 0x1]
00006eba(3): MOV qword ptr [RSI],RCX
00006ebd(4): IMUL RCX,R9
00006ec1(3): MOV RSI,RCX
00006ec4(5): JMP 0x00006e20
00006ed0(3): TEST RCX,RCX
00006ed3(2): JZ 0x00006ef8
00006ed5(3): MOV RAX,RCX
00006ed8(3): MUL R9
00006edb(3): SETO DL
00006ede(3): TEST RAX,RAX
00006ee1(3): MOVZX EDX,DL
00006ee4(2): JS 0x00006eeb
00006ee6(3): TEST RDX,RDX
00006ee9(2): JZ 0x00006eba
00006eeb(4): SUB RSP,0x8
00006eef(5): CALL 0x00007010
00006ef4(4): NOP dword ptr [RAX]
00006ef8(2): XOR EDX,EDX
00006efa(5): MOV EAX,0x80
00006eff(3): XOR R8D,R8D
00006f02(3): DIV R9
00006f05(3): TEST RAX,RAX
00006f08(4): SETZ R8B
00006f0c(4): LEA RCX,[R8 + RAX*0x1]
00006f10(2): JMP 0x00006ed5
00006f20(3): TEST RDI,RDI
00006f23(3): MOV RAX,qword ptr [RSI]
00006f26(2): JZ 0x00006f50
00006f28(10): MOV RDX,0x5555555555555553
00006f32(3): CMP RAX,RDX
00006f35(2): JA 0x00006f61
00006f37(3): MOV RDX,RAX
00006f3a(3): SHR RDX,1
00006f3d(5): LEA RAX,[RDX + RAX*0x1 + 0x1]
00006f42(3): MOV qword ptr [RSI],RAX
00006f45(3): MOV RSI,RAX
00006f48(5): JMP 0x00006e20
00006f50(3): TEST RAX,RAX
00006f53(5): MOV EDX,0x80
00006f58(4): CMOVZ RAX,RDX
00006f5c(3): TEST RAX,RAX
00006f5f(2): JNS 0x00006f42
00006f61(4): SUB RSP,0x8
00006f65(5): CALL 0x00007010
00006f6a(6): NOP word ptr [RAX + RAX*0x1]
00006f70(1): PUSH RBX
00006f71(3): MOV RBX,RDI
00006f74(5): CALL 0x00006dc0
00006f79(3): MOV RDX,RBX
00006f7c(2): XOR ESI,ESI
00006f7e(3): MOV RDI,RAX
00006f81(1): POP RBX
00006f82(5): JMP 0x00001b60
00006f90(3): MOV RAX,RDI
00006f93(4): SUB RSP,0x8
00006f97(3): MUL RSI
00006f9a(3): SETO DL
00006f9d(3): TEST RAX,RAX
00006fa0(2): JS 0x00006fb9
00006fa2(3): MOVZX EDX,DL
00006fa5(3): TEST RDX,RDX
00006fa8(2): JNZ 0x00006fb9
00006faa(5): CALL 0x00001bc0
00006faf(3): TEST RAX,RAX
00006fb2(2): JZ 0x00006fb9
00006fb4(4): ADD RSP,0x8
00006fb8(1): RET
00006fb9(5): CALL 0x00007010
00006fbe(2): NOP
00006fc0(1): PUSH RBP
00006fc1(1): PUSH RBX
00006fc2(3): MOV RBP,RDI
00006fc5(3): MOV RDI,RSI
00006fc8(3): MOV RBX,RSI
00006fcb(4): SUB RSP,0x8
00006fcf(5): CALL 0x00006dc0
00006fd4(4): ADD RSP,0x8
00006fd8(3): MOV RDX,RBX
00006fdb(3): MOV RSI,RBP
00006fde(1): POP RBX
00006fdf(1): POP RBP
00006fe0(3): MOV RDI,RAX
00006fe3(5): JMP 0x00001be0
00006ff0(1): PUSH RBX
00006ff1(3): MOV RBX,RDI
00006ff4(5): CALL 0x00001ab0
00006ff9(3): MOV RDI,RBX
00006ffc(4): LEA RSI,[RAX + 0x1]
00007000(1): POP RBX
00007001(2): JMP 0x00006fc0
00007010(7): LEA RSI,[0x16a6f]
00007017(4): SUB RSP,0x8
0000701b(5): MOV EDX,0x5
00007020(2): XOR EDI,EDI
00007022(5): CALL 0x00001a90
00007027(6): MOV EDI,dword ptr [0x0021b010]
0000702d(7): LEA RDX,[0x16183]
00007034(3): MOV RCX,RAX
00007037(2): XOR ESI,ESI
00007039(2): XOR EAX,EAX
0000703b(5): CALL 0x00001d00
00007045(10): NOP word ptr CS:[RAX + RAX*0x1]
0000704f(1): NOP
00007050(2): PUSH R13
00007052(2): PUSH R12
00007054(3): MOV R13,RSI
00007057(1): PUSH RBP
00007058(1): PUSH RBX
00007059(3): MOV RBX,RDI
0000705c(3): MOV R12,RDX
0000705f(4): SUB RSP,0x18
00007063(9): MOV RAX,qword ptr FS:[0x28]
0000706c(5): MOV qword ptr [RSP + 0x8],RAX
00007071(2): XOR EAX,EAX
00007073(5): LEA RAX,[RSP + 0x4]
00007078(3): TEST RDI,RDI
0000707b(4): CMOVZ RBX,RAX
0000707f(3): MOV RDI,RBX
00007082(5): CALL 0x00001af0
00007087(4): CMP RAX,-0x3
0000708b(3): MOV RBP,RAX
0000708e(2): JBE 0x000070b0
00007090(3): TEST R12,R12
00007093(2): JZ 0x000070b0
00007095(2): XOR EDI,EDI
00007097(5): CALL 0x00015370
0000709c(2): TEST AL,AL
0000709e(2): JNZ 0x000070b0
000070a0(5): MOVZX EAX,byte ptr [R13]
000070a5(5): MOV EBP,0x1
000070aa(2): MOV dword ptr [RBX],EAX
000070ac(4): NOP dword ptr [RAX]
000070b0(5): MOV RDX,qword ptr [RSP + 0x8]
000070b5(9): XOR RDX,qword ptr FS:[0x28]
000070be(3): MOV RAX,RBP
000070c1(2): JNZ 0x000070ce
000070c3(4): ADD RSP,0x18
000070c7(1): POP RBX
000070c8(1): POP RBP
000070c9(2): POP R12
000070cb(2): POP R13
000070cd(1): RET
000070ce(5): CALL 0x00001ad0
000070d3(10): NOP word ptr CS:[RAX + RAX*0x1]
000070dd(3): NOP dword ptr [RAX]
000070e0(4): MOV RAX,qword ptr [RSI + 0x48]
000070e4(4): CMP qword ptr [RSI + 0x68],RAX
000070e8(2): JLE 0x00007140
000070ea(4): MOV R8,qword ptr [RSI + 0x8]
000070ee(7): CMP dword ptr [0x90 + RSI],0x1
000070f5(5): MOVZX ECX,byte ptr [R8 + RAX*0x1]
000070fa(2): MOV byte ptr [RDI],CL
000070fc(2): JLE 0x00007113
000070fe(4): CMP RAX,qword ptr [RSI + 0x30]
00007102(2): JZ 0x00007113
00007104(4): MOV R9,qword ptr [RSI + 0x10]
00007108(5): CMP dword ptr [R9 + RAX*0x4],-0x1
0000710d(6): JZ 0x0000718f
00007113(3): CMP CL,0x5c
00007116(2): JZ 0x00007180
00007118(3): CMP CL,0x5b
0000711b(2): JZ 0x00007150
0000711d(3): CMP CL,0x5d
00007120(6): JZ 0x000071c0
00007126(3): CMP CL,0x5e
00007129(6): JZ 0x000071b0
0000712f(3): CMP CL,0x2d
00007132(2): JNZ 0x0000718f
00007134(4): MOV byte ptr [RDI + 0x8],0x16
00007138(5): MOV EAX,0x1
0000713d(1): RET
00007140(4): MOV byte ptr [RDI + 0x8],0x2
00007144(2): XOR EAX,EAX
00007146(1): RET
00007150(4): LEA RCX,[RAX + 0x1]
00007154(4): CMP RCX,qword ptr [RSI + 0x58]
00007158(2): JGE 0x000071a0
0000715a(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
00007160(2): CMP AL,0x3a
00007162(2): MOV byte ptr [RDI],AL
00007164(6): JZ 0x00007200
0000716a(2): CMP AL,0x3d
0000716c(6): JZ 0x000071f0
00007172(2): CMP AL,0x2e
00007174(2): JNZ 0x000071a0
00007176(4): MOV byte ptr [RDI + 0x8],0x1a
0000717a(5): MOV EAX,0x2
0000717f(1): RET
00007180(3): AND EDX,0x1
00007183(2): JZ 0x0000718f
00007185(4): LEA RDX,[RAX + 0x1]
00007189(4): CMP RDX,qword ptr [RSI + 0x58]
0000718d(2): JL 0x000071d0
0000718f(4): MOV byte ptr [RDI + 0x8],0x1
00007193(5): MOV EAX,0x1
00007198(1): RET
000071a0(4): MOV byte ptr [RDI + 0x8],0x1
000071a4(3): MOV byte ptr [RDI],0x5b
000071a7(5): MOV EAX,0x1
000071ac(1): RET
000071b0(4): MOV byte ptr [RDI + 0x8],0x19
000071b4(5): MOV EAX,0x1
000071b9(1): RET
000071c0(4): MOV byte ptr [RDI + 0x8],0x15
000071c4(5): MOV EAX,0x1
000071c9(1): RET
000071d0(4): MOV qword ptr [RSI + 0x48],RDX
000071d4(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
000071da(4): MOV byte ptr [RDI + 0x8],0x1
000071de(2): MOV byte ptr [RDI],AL
000071e0(5): MOV EAX,0x1
000071e5(1): RET
000071f0(4): MOV byte ptr [RDI + 0x8],0x1c
000071f4(5): MOV EAX,0x2
000071f9(1): RET
00007200(3): AND EDX,0x4
00007203(2): JZ 0x000071a0
00007205(4): MOV byte ptr [RDI + 0x8],0x1e
00007209(5): MOV EAX,0x2
0000720e(1): RET
00007210(4): CMP byte ptr [RSI + 0x30],0x11
00007214(2): JZ 0x00007220
00007216(2): XOR EAX,EAX
00007218(1): RET
00007220(4): CMP RDI,qword ptr [RSI + 0x28]
00007224(2): JNZ 0x00007216
00007226(4): OR byte ptr [RSI + 0x32],0x8
0000722a(2): XOR EAX,EAX
0000722c(1): RET
00007230(2): PUSH R15
00007232(2): PUSH R14
00007234(3): MOV R9,RDX
00007237(2): PUSH R13
00007239(2): PUSH R12
0000723b(4): LEA RDX,[RCX + RCX*0x2]
0000723f(1): PUSH RBP
00007240(1): PUSH RBX
00007241(3): MOV R15D,ESI
00007244(4): SUB RSP,0x48
00007248(7): MOV R14,qword ptr [0x98 + RDI]
0000724f(4): MOV qword ptr [RSP],RDI
00007253(4): MOV RAX,qword ptr [R14 + 0x30]
00007257(4): LEA R12,[RAX + RDX*0x8]
0000725b(6): CMP qword ptr [R12 + 0x8],0x0
00007261(6): JLE 0x000073f5
00007267(4): LEA RAX,[R8 + R8*0x4]
0000726b(3): MOV R11,RCX
0000726e(3): MOV ECX,R9D
00007271(3): MOV R10,R8
00007274(2): XOR EBX,EBX
00007276(4): MOV dword ptr [RSP + 0x20],ESI
0000727a(4): SHL RAX,0x3
0000727e(3): MOV R15,R9
00007281(5): MOV qword ptr [RSP + 0x10],R11
00007286(5): MOV qword ptr [RSP + 0x28],RAX
0000728b(5): MOV EAX,0x1
00007290(3): SHL RAX,CL
00007293(5): MOV qword ptr [RSP + 0x18],RAX
00007298(2): NOT EAX
0000729a(5): MOV word ptr [RSP + 0x26],AX
0000729f(2): MOV EAX,ESI
000072a1(3): AND EAX,0x1
000072a4(4): MOV dword ptr [RSP + 0xc],EAX
000072a8(2): MOV EAX,ESI
000072aa(3): AND EAX,0x2
000072ad(4): MOV dword ptr [RSP + 0x8],EAX
000072b1(2): JMP 0x000072d5
000072b8(3): CMP DL,0x9
000072bb(6): JZ 0x00007410
000072c1(3): CMP DL,0x4
000072c4(2): JZ 0x00007318
000072c6(4): ADD RBX,0x1
000072ca(5): CMP qword ptr [R12 + 0x8],RBX
000072cf(6): JLE 0x000073f0
000072d5(5): MOV RAX,qword ptr [R12 + 0x10]
000072da(4): MOV RBP,qword ptr [RAX + RBX*0x8]
000072de(3): MOV RAX,RBP
000072e1(4): SHL RAX,0x4
000072e5(3): ADD RAX,qword ptr [R14]
000072e8(4): MOVZX EDX,byte ptr [RAX + 0x8]
000072ec(3): CMP DL,0x8
000072ef(2): JNZ 0x000072b8
000072f1(4): MOV ECX,dword ptr [RSP + 0xc]
000072f5(2): TEST ECX,ECX
000072f7(2): JZ 0x000072c6
000072f9(3): CMP qword ptr [RAX],R15
000072fc(2): JNZ 0x000072c6
000072fe(4): ADD RSP,0x48
00007302(5): MOV EAX,0xffffffff
00007307(1): POP RBX
00007308(1): POP RBP
00007309(2): POP R12
0000730b(2): POP R13
0000730d(2): POP R14
0000730f(2): POP R15
00007311(1): RET
00007318(4): CMP R10,-0x1
0000731c(2): JZ 0x000072c6
0000731e(4): MOV RAX,qword ptr [RSP]
00007322(5): MOV R13,qword ptr [RSP + 0x28]
00007327(3): MOV RDI,RBP
0000732a(5): MOV qword ptr [RSP + 0x30],R12
0000732f(5): MOV qword ptr [RSP + 0x38],RBX
00007334(3): MOV R12,R10
00007337(7): ADD R13,qword ptr [0xd8 + RAX]
0000733e(5): LEA RAX,[RBP + RBP*0x2]
00007343(3): MOV RBP,R14
00007346(3): MOV R14,RDI
00007349(4): SHL RAX,0x3
0000734d(3): MOV RBX,RAX
00007350(4): CMP qword ptr [R13],R14
00007354(2): JNZ 0x000073c0
00007356(4): CMP R15,0x3f
0000735a(2): JG 0x00007368
0000735c(5): MOVZX EAX,word ptr [R13 + 0x22]
00007361(5): TEST qword ptr [RSP + 0x18],RAX
00007366(2): JZ 0x000073c0
00007368(4): MOV RAX,qword ptr [RBP + 0x28]
0000736c(5): MOV RAX,qword ptr [RAX + RBX*0x1 + 0x10]
00007371(3): MOV RCX,qword ptr [RAX]
00007374(5): CMP qword ptr [RSP + 0x10],RCX
00007379(6): JZ 0x00007440
0000737f(4): MOV ESI,dword ptr [RSP + 0x20]
00007383(4): MOV RDI,qword ptr [RSP]
00007387(3): MOV R8,R12
0000738a(3): MOV RDX,R15
0000738d(5): CALL 0x00007230
00007392(3): CMP EAX,-0x1
00007395(6): JZ 0x000072fe
0000739b(2): TEST EAX,EAX
0000739d(2): JNZ 0x000073a7
0000739f(4): MOV ESI,dword ptr [RSP + 0x8]
000073a3(2): TEST ESI,ESI
000073a5(2): JNZ 0x00007425
000073a7(4): CMP R15,0x3f
000073ab(2): JG 0x000073c0
000073ad(5): MOVZX EAX,word ptr [RSP + 0x26]
000073b2(5): AND word ptr [R13 + 0x22],AX
000073b7(9): NOP word ptr [RAX + RAX*0x1]
000073c0(4): ADD R13,0x28
000073c4(5): CMP byte ptr [R13 + -0x8],0x0
000073c9(2): JNZ 0x00007350
000073cb(5): MOV RBX,qword ptr [RSP + 0x38]
000073d0(3): MOV R10,R12
000073d3(5): MOV R12,qword ptr [RSP + 0x30]
000073d8(3): MOV R14,RBP
000073db(4): ADD RBX,0x1
000073df(5): CMP qword ptr [R12 + 0x8],RBX
000073e4(6): JG 0x000072d5
000073ea(6): NOP word ptr [RAX + RAX*0x1]
000073f0(5): MOV R15D,dword ptr [RSP + 0x20]
000073f5(4): ADD RSP,0x48
000073f9(3): MOV EAX,R15D
000073fc(1): POP RBX
000073fd(2): SAR EAX,1
000073ff(1): POP RBP
00007400(2): POP R12
00007402(2): POP R13
00007404(2): POP R14
00007406(2): POP R15
00007408(1): RET
00007410(4): MOV EDX,dword ptr [RSP + 0x8]
00007414(2): TEST EDX,EDX
00007416(6): JZ 0x000072c6
0000741c(3): CMP qword ptr [RAX],R15
0000741f(6): JNZ 0x000072c6
00007425(4): ADD RSP,0x48
00007429(2): XOR EAX,EAX
0000742b(1): POP RBX
0000742c(1): POP RBP
0000742d(2): POP R12
0000742f(2): POP R13
00007431(2): POP R14
00007433(2): POP R15
00007435(1): RET
00007440(5): MOV R15D,dword ptr [RSP + 0x20]
00007445(4): ADD RSP,0x48
00007449(1): POP RBX
0000744a(1): POP RBP
0000744b(3): MOV EAX,R15D
0000744e(3): AND EAX,0x1
00007451(2): POP R12
00007453(2): NEG EAX
00007455(2): POP R13
00007457(2): POP R14
00007459(2): POP R15
0000745b(1): RET
00007460(7): MOV RAX,qword ptr [0xd8 + RDI]
00007467(4): LEA RSI,[RSI + RSI*0x4]
0000746b(4): LEA RAX,[RAX + RSI*0x8]
0000746f(4): MOV R10,qword ptr [RAX + 0x10]
00007473(3): CMP R10,R8
00007476(2): JG 0x000074c0
00007478(4): MOV RAX,qword ptr [RAX + 0x18]
0000747c(3): CMP RAX,R8
0000747f(2): JL 0x000074a0
00007481(2): XOR ESI,ESI
00007483(3): CMP R10,R8
00007486(4): SETZ SIL
0000748a(3): OR ESI,0x2
0000748d(3): CMP RAX,R8
00007490(2): JZ 0x000074b5
00007492(2): XOR EAX,EAX
00007494(3): CMP R10,R8
00007497(2): JZ 0x000074b0
00007499(2): RET
000074a0(5): MOV EAX,0x1
000074a5(1): RET
000074b0(5): MOV ESI,0x1
000074b5(3): MOV R8,R9
000074b8(5): JMP 0x00007230
000074c0(5): MOV EAX,0xffffffff
000074c5(1): RET
000074d0(2): PUSH R12
000074d2(3): MOV R12,RSI
000074d5(1): PUSH RBP
000074d6(3): MOV RBP,RDX
000074d9(1): PUSH RBX
000074da(3): MOV RBX,RDI
000074dd(2): JMP 0x000074e3
000074e0(3): MOV RBX,RAX
000074e3(4): MOV RAX,qword ptr [RBX + 0x8]
000074e7(3): TEST RAX,RAX
000074ea(2): JNZ 0x000074e0
000074ec(4): MOV RAX,qword ptr [RBX + 0x10]
000074f0(3): TEST RAX,RAX
000074f3(2): JNZ 0x000074e0
000074f5(3): MOV RSI,RBX
000074f8(3): MOV RDI,RBP
000074fb(3): CALL R12
000074fe(2): TEST EAX,EAX
00007500(2): JNZ 0x00007536
00007502(6): NOP word ptr [RAX + RAX*0x1]
00007508(3): MOV RDX,qword ptr [RBX]
0000750b(3): TEST RDX,RDX
0000750e(2): JZ 0x00007536
00007510(4): MOV RAX,qword ptr [RDX + 0x10]
00007514(3): CMP RAX,RBX
00007517(3): MOV RBX,RDX
0000751a(4): SETZ SIL
0000751e(3): TEST RAX,RAX
00007521(3): SETZ CL
00007524(3): OR SIL,CL
00007527(2): JZ 0x000074e0
00007529(3): MOV RSI,RBX
0000752c(3): MOV RDI,RBP
0000752f(3): CALL R12
00007532(2): TEST EAX,EAX
00007534(2): JZ 0x00007508
00007536(1): POP RBX
00007537(1): POP RBP
00007538(2): POP R12
0000753a(1): RET
00007540(2): PUSH R12
00007542(3): MOV R12,RSI
00007545(1): PUSH RBP
00007546(3): MOV RBP,RDX
00007549(1): PUSH RBX
0000754a(3): MOV RBX,RDI
0000754d(2): JMP 0x00007553
00007550(3): MOV RBX,RDX
00007553(3): MOV RSI,RBX
00007556(3): MOV RDI,RBP
00007559(3): CALL R12
0000755c(2): TEST EAX,EAX
0000755e(2): JNZ 0x0000758c
00007560(4): MOV RDX,qword ptr [RBX + 0x8]
00007564(2): XOR ECX,ECX
00007566(3): TEST RDX,RDX
00007569(2): JNZ 0x00007550
0000756b(2): JMP 0x00007573
00007570(3): MOV RBX,RDX
00007573(4): MOV RDX,qword ptr [RBX + 0x10]
00007577(3): CMP RDX,RCX
0000757a(2): JZ 0x00007581
0000757c(3): TEST RDX,RDX
0000757f(2): JNZ 0x00007550
00007581(3): MOV RDX,qword ptr [RBX]
00007584(3): MOV RCX,RBX
00007587(3): TEST RDX,RDX
0000758a(2): JNZ 0x00007570
0000758c(1): POP RBX
0000758d(1): POP RBP
0000758e(2): POP R12
00007590(1): RET
000075a0(1): PUSH RBP
000075a1(1): PUSH RBX
000075a2(3): MOV RBP,RSI
000075a5(3): MOV RBX,RDI
000075a8(4): SUB RSP,0x8
000075ac(7): CMP dword ptr [0x90 + RDI],0x1
000075b3(2): JLE 0x000075fd
000075b5(10): MOV RAX,0x1fffffffffffffff
000075bf(3): CMP RSI,RAX
000075c2(2): JA 0x00007630
000075c4(4): MOV RDI,qword ptr [RDI + 0x10]
000075c8(8): LEA RSI,[RSI*0x4]
000075d0(5): CALL 0x00001c90
000075d5(3): TEST RAX,RAX
000075d8(2): JZ 0x00007630
000075da(4): MOV RDI,qword ptr [RBX + 0x18]
000075de(4): MOV qword ptr [RBX + 0x10],RAX
000075e2(3): TEST RDI,RDI
000075e5(2): JZ 0x000075fd
000075e7(8): LEA RSI,[RBP*0x8]
000075ef(5): CALL 0x00001c90
000075f4(3): TEST RAX,RAX
000075f7(2): JZ 0x00007630
000075f9(4): MOV qword ptr [RBX + 0x18],RAX
000075fd(7): CMP byte ptr [0x8b + RBX],0x0
00007604(2): JNZ 0x00007618
00007606(4): MOV qword ptr [RBX + 0x40],RBP
0000760a(4): ADD RSP,0x8
0000760e(2): XOR EAX,EAX
00007610(1): POP RBX
00007611(1): POP RBP
00007612(1): RET
00007618(4): MOV RDI,qword ptr [RBX + 0x8]
0000761c(3): MOV RSI,RBP
0000761f(5): CALL 0x00001c90
00007624(3): TEST RAX,RAX
00007627(2): JZ 0x00007630
00007629(4): MOV qword ptr [RBX + 0x8],RAX
0000762d(2): JMP 0x00007606
00007630(4): ADD RSP,0x8
00007634(5): MOV EAX,0xc
00007639(1): POP RBX
0000763a(1): POP RBP
0000763b(1): RET
00007640(1): PUSH RBP
00007641(1): PUSH RBX
00007642(3): MOV RBP,RSI
00007645(3): MOV RBX,RDI
00007648(4): SUB RSP,0x8
0000764c(4): MOV RSI,qword ptr [RDI + 0x8]
00007650(3): CMP qword ptr [RDI],RSI
00007653(4): MOV RAX,qword ptr [RDI + 0x10]
00007657(2): JZ 0x00007678
00007659(4): LEA RDX,[RSI + 0x1]
0000765d(4): MOV qword ptr [RBX + 0x8],RDX
00007661(4): MOV qword ptr [RAX + RSI*0x8],RBP
00007665(5): MOV EAX,0x1
0000766a(4): ADD RSP,0x8
0000766e(1): POP RBX
0000766f(1): POP RBP
00007670(1): RET
00007678(4): ADD RSI,0x1
0000767c(4): LEA RDX,[RSI + RSI*0x1]
00007680(4): SHL RSI,0x4
00007684(3): MOV qword ptr [RDI],RDX
00007687(3): MOV RDI,RAX
0000768a(5): CALL 0x00001c90
0000768f(3): TEST RAX,RAX
00007692(2): JZ 0x000076a0
00007694(4): MOV qword ptr [RBX + 0x10],RAX
00007698(4): MOV RSI,qword ptr [RBX + 0x8]
0000769c(2): JMP 0x00007659
000076a0(2): XOR EAX,EAX
000076a2(2): JMP 0x0000766a
000076b0(1): PUSH RBP
000076b1(1): PUSH RBX
000076b2(3): MOV RBP,RSI
000076b5(3): MOV RBX,RDI
000076b8(4): SUB RSP,0x8
000076bc(3): MOV RDX,qword ptr [RDI]
000076bf(3): TEST RDX,RDX
000076c2(2): JZ 0x000076e8
000076c4(4): MOV RSI,qword ptr [RDI + 0x8]
000076c8(4): MOV RAX,qword ptr [RDI + 0x10]
000076cc(3): TEST RSI,RSI
000076cf(2): JNZ 0x00007720
000076d1(3): MOV qword ptr [RAX],RBP
000076d4(5): ADD qword ptr [RDI + 0x8],0x1
000076d9(5): MOV EAX,0x1
000076de(4): ADD RSP,0x8
000076e2(1): POP RBX
000076e3(1): POP RBP
000076e4(1): RET
000076e8(7): MOV qword ptr [RDI],0x1
000076ef(8): MOV qword ptr [RDI + 0x8],0x1
000076f7(5): MOV EDI,0x8
000076fc(5): CALL 0x00001c20
00007701(3): TEST RAX,RAX
00007704(4): MOV qword ptr [RBX + 0x10],RAX
00007708(6): JZ 0x00007798
0000770e(3): MOV qword ptr [RAX],RBP
00007711(4): ADD RSP,0x8
00007715(5): MOV EAX,0x1
0000771a(1): POP RBX
0000771b(1): POP RBP
0000771c(1): RET
00007720(3): CMP RDX,RSI
00007723(6): JZ 0x000077b0
00007729(3): CMP qword ptr [RAX],RBP
0000772c(8): LEA RDX,[RSI*0x8]
00007734(2): JLE 0x00007770
00007736(3): TEST RSI,RSI
00007739(2): JLE 0x00007753
0000773b(3): ADD RDX,RAX
0000773e(2): NOP
00007740(4): MOV RCX,qword ptr [RDX + -0x8]
00007744(4): SUB RDX,0x8
00007748(4): MOV qword ptr [RDX + 0x8],RCX
0000774c(3): CMP RAX,RDX
0000774f(2): JNZ 0x00007740
00007751(2): XOR EDX,EDX
00007753(4): MOV qword ptr [RAX + RDX*0x1],RBP
00007757(5): MOV EAX,0x1
0000775c(5): ADD qword ptr [RBX + 0x8],0x1
00007761(5): JMP 0x000076de
00007770(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
00007775(3): CMP RBP,RCX
00007778(2): JGE 0x00007753
0000777a(6): NOP word ptr [RAX + RAX*0x1]
00007780(4): MOV qword ptr [RAX + RDX*0x1],RCX
00007784(4): SUB RDX,0x8
00007788(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
0000778d(3): CMP RCX,RBP
00007790(2): JG 0x00007780
00007792(2): JMP 0x00007753
00007798(8): MOV qword ptr [RBX + 0x8],0x0
000077a0(7): MOV qword ptr [RBX],0x0
000077a7(5): JMP 0x000076de
000077b0(4): LEA RDX,[RSI + RSI*0x1]
000077b4(4): SHL RSI,0x4
000077b8(3): MOV qword ptr [RDI],RDX
000077bb(3): MOV RDI,RAX
000077be(5): CALL 0x00001c90
000077c3(3): TEST RAX,RAX
000077c6(2): JZ 0x000077d5
000077c8(4): MOV qword ptr [RBX + 0x10],RAX
000077cc(4): MOV RSI,qword ptr [RBX + 0x8]
000077d0(5): JMP 0x00007729
000077d5(2): XOR EAX,EAX
000077d7(5): JMP 0x000076de
000077e0(2): PUSH R14
000077e2(2): PUSH R13
000077e4(3): MOV R14,RDI
000077e7(2): PUSH R12
000077e9(1): PUSH RBP
000077ea(3): MOV R12,RDX
000077ed(1): PUSH RBX
000077ee(4): MOV RBX,qword ptr [RSI + 0x10]
000077f2(3): MOV RBP,RSI
000077f5(3): MOV qword ptr [RSI],RDX
000077f8(8): MOV qword ptr [RSI + 0x28],0x0
00007800(4): LEA R13,[RSI + 0x20]
00007804(8): LEA RDI,[RBX*0x8]
0000780c(4): MOV qword ptr [RSI + 0x20],RBX
00007810(5): CALL 0x00001c20
00007815(3): TEST RAX,RAX
00007818(4): MOV qword ptr [RBP + 0x30],RAX
0000781c(2): JZ 0x0000785e
0000781e(3): TEST RBX,RBX
00007821(2): JLE 0x00007870
00007823(2): XOR EBX,EBX
00007825(2): JMP 0x0000783a
00007830(4): ADD RBX,0x1
00007834(4): CMP qword ptr [RBP + 0x10],RBX
00007838(2): JLE 0x00007870
0000783a(4): MOV RAX,qword ptr [RBP + 0x18]
0000783e(4): MOV RSI,qword ptr [RAX + RBX*0x8]
00007842(3): MOV RAX,RSI
00007845(4): SHL RAX,0x4
00007849(3): ADD RAX,qword ptr [R14]
0000784c(4): TEST byte ptr [RAX + 0x8],0x8
00007850(2): JNZ 0x00007830
00007852(3): MOV RDI,R13
00007855(5): CALL 0x00007640
0000785a(2): TEST AL,AL
0000785c(2): JNZ 0x00007830
0000785e(1): POP RBX
0000785f(5): MOV EAX,0xc
00007864(1): POP RBP
00007865(2): POP R12
00007867(2): POP R13
00007869(2): POP R14
0000786b(1): RET
00007870(7): AND R12,qword ptr [0x88 + R14]
00007877(4): MOV RAX,qword ptr [R14 + 0x40]
0000787b(4): LEA RDX,[R12 + R12*0x2]
0000787f(4): LEA RBX,[RAX + RDX*0x8]
00007883(3): MOV RDX,qword ptr [RBX]
00007886(4): CMP qword ptr [RBX + 0x8],RDX
0000788a(4): MOV RAX,qword ptr [RBX + 0x10]
0000788e(4): LEA RSI,[RDX + 0x1]
00007892(2): JLE 0x000078a6
00007894(3): MOV qword ptr [RBX],RSI
00007897(4): MOV qword ptr [RAX + RDX*0x8],RBP
0000789b(2): XOR EAX,EAX
0000789d(1): POP RBX
0000789e(1): POP RBP
0000789f(2): POP R12
000078a1(2): POP R13
000078a3(2): POP R14
000078a5(1): RET
000078a6(4): LEA R12,[RSI + RSI*0x1]
000078aa(3): MOV RDI,RAX
000078ad(4): SHL RSI,0x4
000078b1(5): CALL 0x00001c90
000078b6(3): TEST RAX,RAX
000078b9(2): JZ 0x0000785e
000078bb(3): MOV RDX,qword ptr [RBX]
000078be(4): MOV qword ptr [RBX + 0x10],RAX
000078c2(4): MOV qword ptr [RBX + 0x8],R12
000078c6(4): LEA RSI,[RDX + 0x1]
000078ca(2): JMP 0x00007894
000078d0(2): PUSH R12
000078d2(4): MOV R12,qword ptr [RDI + 0x58]
000078d6(4): CMP qword ptr [RDI + 0x40],R12
000078da(1): PUSH RBP
000078db(3): MOV RBP,RDI
000078de(5): CMOVLE R12,qword ptr [RDI + 0x40]
000078e3(1): PUSH RBX
000078e4(4): MOV RBX,qword ptr [RDI + 0x30]
000078e8(3): CMP R12,RBX
000078eb(2): JLE 0x00007925
000078ed(5): CALL 0x000019c0
000078f2(6): NOP word ptr [RAX + RAX*0x1]
000078f8(4): MOV RDX,qword ptr [RBP]
000078fc(4): MOV RCX,qword ptr [RBP + 0x78]
00007900(3): ADD RDX,RBX
00007903(4): ADD RDX,qword ptr [RBP + 0x28]
00007907(3): TEST RCX,RCX
0000790a(3): MOVZX EDX,byte ptr [RDX]
0000790d(2): JNZ 0x00007938
0000790f(3): MOV RSI,qword ptr [RAX]
00007912(4): MOV RCX,qword ptr [RBP + 0x8]
00007916(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00007919(3): MOV byte ptr [RCX + RBX*0x1],DL
0000791c(4): ADD RBX,0x1
00007920(3): CMP R12,RBX
00007923(2): JNZ 0x000078f8
00007925(4): MOV qword ptr [RBP + 0x30],RBX
00007929(4): MOV qword ptr [RBP + 0x38],RBX
0000792d(1): POP RBX
0000792e(1): POP RBP
0000792f(2): POP R12
00007931(1): RET
00007938(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
0000793c(2): JMP 0x0000790f
00007940(2): PUSH R15
00007942(2): PUSH R14
00007944(2): PUSH R13
00007946(2): PUSH R12
00007948(1): PUSH RBP
00007949(1): PUSH RBX
0000794a(3): MOV RBX,RDI
0000794d(4): SUB RSP,0x68
00007951(4): MOV R12,qword ptr [RDI + 0x58]
00007955(4): MOV RBP,qword ptr [RDI + 0x30]
00007959(9): MOV RAX,qword ptr FS:[0x28]
00007962(5): MOV qword ptr [RSP + 0x58],RAX
00007967(2): XOR EAX,EAX
00007969(4): CMP qword ptr [RDI + 0x40],R12
0000796d(5): CMOVLE R12,qword ptr [RDI + 0x40]
00007972(3): CMP R12,RBP
00007975(6): JLE 0x00007a04
0000797b(4): LEA R14,[RDI + 0x20]
0000797f(5): LEA R13,[RSP + 0xc]
00007984(4): NOP dword ptr [RAX]
00007988(4): MOV RDI,qword ptr [RBX + 0x78]
0000798c(3): MOV RDX,R12
0000798f(4): MOV R15,qword ptr [RBX + 0x20]
00007993(3): SUB RDX,RBP
00007996(3): TEST RDI,RDI
00007999(6): JNZ 0x00007a80
0000799f(4): MOV RSI,qword ptr [RBX + 0x28]
000079a3(3): ADD RSI,RBP
000079a6(3): ADD RSI,qword ptr [RBX]
000079a9(3): MOV RCX,R14
000079ac(3): MOV RDI,R13
000079af(5): CALL 0x00007050
000079b4(4): LEA RDX,[RAX + -0x1]
000079b8(4): CMP RDX,-0x3
000079bc(6): JA 0x00007a50
000079c2(4): CMP RAX,-0x2
000079c6(4): MOV EDX,dword ptr [RSP + 0xc]
000079ca(2): JZ 0x00007a40
000079cc(4): MOV RCX,qword ptr [RBX + 0x10]
000079d0(4): LEA RSI,[RBP + 0x1]
000079d4(8): LEA RDI,[RBP*0x4]
000079dc(3): MOV dword ptr [RCX + RBP*0x4],EDX
000079df(3): ADD RBP,RAX
000079e2(3): CMP RSI,RBP
000079e5(2): JGE 0x00007a30
000079e7(5): LEA RDX,[RCX + RDI*0x1 + 0x4]
000079ec(4): LEA RAX,[RCX + RBP*0x4]
000079f0(6): MOV dword ptr [RDX],0xffffffff
000079f6(4): ADD RDX,0x4
000079fa(3): CMP RAX,RDX
000079fd(2): JNZ 0x000079f0
000079ff(3): CMP RBP,R12
00007a02(2): JL 0x00007988
00007a04(5): MOV RAX,qword ptr [RSP + 0x58]
00007a09(9): XOR RAX,qword ptr FS:[0x28]
00007a12(4): MOV qword ptr [RBX + 0x30],RBP
00007a16(4): MOV qword ptr [RBX + 0x38],RBP
00007a1a(6): JNZ 0x00007afe
00007a20(4): ADD RSP,0x68
00007a24(1): POP RBX
00007a25(1): POP RBP
00007a26(2): POP R12
00007a28(2): POP R13
00007a2a(2): POP R14
00007a2c(2): POP R15
00007a2e(1): RET
00007a30(3): MOV RBP,RSI
00007a33(3): CMP RBP,R12
00007a36(6): JL 0x00007988
00007a3c(2): JMP 0x00007a04
00007a40(4): MOV RAX,qword ptr [RBX + 0x58]
00007a44(4): CMP qword ptr [RBX + 0x40],RAX
00007a48(6): JL 0x00007ae8
00007a4e(2): NOP
00007a50(3): MOV RAX,qword ptr [RBX]
00007a53(4): MOV RCX,qword ptr [RBX + 0x78]
00007a57(3): ADD RAX,RBP
00007a5a(4): ADD RAX,qword ptr [RBX + 0x28]
00007a5e(3): TEST RCX,RCX
00007a61(3): MOVZX EDX,byte ptr [RAX]
00007a64(4): MOV dword ptr [RSP + 0xc],EDX
00007a68(6): JNZ 0x00007af1
00007a6e(4): MOV qword ptr [RBX + 0x20],R15
00007a72(5): MOV EAX,0x1
00007a77(5): JMP 0x000079cc
00007a80(6): MOV ECX,dword ptr [0x90 + RBX]
00007a86(2): XOR EAX,EAX
00007a88(5): LEA RSI,[RSP + 0x10]
00007a8d(2): TEST ECX,ECX
00007a8f(2): JG 0x00007ab1
00007a91(5): JMP 0x000079a9
00007aa0(4): ADD RAX,0x1
00007aa4(3): CMP RDX,RAX
00007aa7(6): JZ 0x000079a9
00007aad(4): MOV RDI,qword ptr [RBX + 0x78]
00007ab1(3): MOV RCX,qword ptr [RBX]
00007ab4(3): ADD RCX,RBP
00007ab7(3): ADD RCX,RAX
00007aba(4): ADD RCX,qword ptr [RBX + 0x28]
00007abe(3): MOVZX ECX,byte ptr [RCX]
00007ac1(4): MOVZX ECX,byte ptr [RDI + RCX*0x1]
00007ac5(4): MOV RDI,qword ptr [RBX + 0x8]
00007ac9(3): ADD RDI,RBP
00007acc(3): MOV byte ptr [RDI + RAX*0x1],CL
00007acf(3): MOV byte ptr [RSI + RAX*0x1],CL
00007ad2(3): LEA ECX,[RAX + 0x1]
00007ad5(6): CMP ECX,dword ptr [0x90 + RBX]
00007adb(2): JL 0x00007aa0
00007add(5): JMP 0x000079a9
00007ae8(4): MOV qword ptr [RBX + 0x20],R15
00007aec(5): JMP 0x00007a04
00007af1(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
00007af5(4): MOV dword ptr [RSP + 0xc],EDX
00007af9(5): JMP 0x00007a6e
00007afe(5): CALL 0x00001ad0
00007b03(3): NOP dword ptr [RAX]
00007b06(10): NOP word ptr CS:[RAX + RAX*0x1]
00007b10(2): PUSH R15
00007b12(2): PUSH R14
00007b14(3): MOV R14,RDI
00007b17(2): PUSH R13
00007b19(2): PUSH R12
00007b1b(1): PUSH RBP
00007b1c(1): PUSH RBX
00007b1d(7): SUB RSP,0xa8
00007b24(4): MOV RBX,qword ptr [RDI + 0x58]
00007b28(4): MOV R15,qword ptr [RDI + 0x30]
00007b2c(9): MOV RAX,qword ptr FS:[0x28]
00007b35(8): MOV qword ptr [0x98 + RSP],RAX
00007b3d(2): XOR EAX,EAX
00007b3f(4): CMP qword ptr [RDI + 0x40],RBX
00007b43(5): CMOVLE RBX,qword ptr [RDI + 0x40]
00007b48(7): CMP byte ptr [0x8a + RDI],0x0
00007b4f(2): JNZ 0x00007b5c
00007b51(5): CMP qword ptr [RDI + 0x78],0x0
00007b56(6): JZ 0x00007ce0
00007b5c(4): MOV R13,qword ptr [R14 + 0x38]
00007b60(3): CMP R15,RBX
00007b63(2): JL 0x00007ba0
00007b65(4): MOV qword ptr [R14 + 0x30],R15
00007b69(4): MOV qword ptr [R14 + 0x38],R13
00007b6d(2): XOR EAX,EAX
00007b6f(8): MOV RCX,qword ptr [0x98 + RSP]
00007b77(9): XOR RCX,qword ptr FS:[0x28]
00007b80(6): JNZ 0x0000810a
00007b86(7): ADD RSP,0xa8
00007b8d(1): POP RBX
00007b8e(1): POP RBP
00007b8f(2): POP R12
00007b91(2): POP R13
00007b93(2): POP R14
00007b95(2): POP R15
00007b97(1): RET
00007ba0(4): LEA RAX,[R14 + 0x20]
00007ba4(5): MOV qword ptr [RSP + 0x8],RAX
00007ba9(3): MOV RAX,RBX
00007bac(3): SUB RAX,R15
00007baf(5): MOV qword ptr [RSP + 0x10],RAX
00007bb4(5): LEA RAX,[RSP + 0x44]
00007bb9(5): MOV qword ptr [RSP + 0x20],RAX
00007bbe(4): MOV RDX,qword ptr [R14 + 0x78]
00007bc2(4): MOV RAX,qword ptr [R14 + 0x20]
00007bc6(3): TEST RDX,RDX
00007bc9(5): MOV qword ptr [RSP + 0x48],RAX
00007bce(6): JNZ 0x00007ed9
00007bd4(4): MOV RBP,qword ptr [R14 + 0x28]
00007bd8(3): ADD RBP,R13
00007bdb(3): ADD RBP,qword ptr [R14]
00007bde(5): MOV qword ptr [RSP + 0x18],RBP
00007be3(5): MOV RCX,qword ptr [RSP + 0x8]
00007be8(5): MOV RDX,qword ptr [RSP + 0x10]
00007bed(5): MOV RSI,qword ptr [RSP + 0x18]
00007bf2(5): MOV RDI,qword ptr [RSP + 0x20]
00007bf7(5): CALL 0x00007050
00007bfc(3): MOV RBP,RAX
00007bff(4): LEA RAX,[RAX + -0x1]
00007c03(4): CMP RAX,-0x4
00007c07(5): MOV qword ptr [RSP + 0x20],RAX
00007c0c(6): JA 0x00007f49
00007c12(4): MOV EDX,dword ptr [RSP + 0x44]
00007c16(2): MOV EDI,EDX
00007c18(4): MOV dword ptr [RSP + 0x10],EDX
00007c1c(5): CALL 0x00001d30
00007c21(4): MOV EDX,dword ptr [RSP + 0x10]
00007c25(3): MOV R12D,EAX
00007c28(5): MOV qword ptr [RSP + 0x8],R15
00007c2d(2): CMP EDX,EAX
00007c2f(6): JZ 0x00007f30
00007c35(5): LEA RCX,[RSP + 0x50]
00007c3a(5): LEA RDX,[RSP + 0x48]
00007c3f(2): MOV ESI,EAX
00007c41(3): MOV RDI,RCX
00007c44(5): MOV qword ptr [RSP + 0x10],RCX
00007c49(5): CALL 0x00001c30
00007c4e(3): CMP RBP,RAX
00007c51(3): MOV R11,RAX
00007c54(5): MOV RCX,qword ptr [RSP + 0x10]
00007c59(6): JNZ 0x00007fe6
00007c5f(4): MOV RDI,qword ptr [R14 + 0x8]
00007c63(3): MOV RDX,RBP
00007c66(3): MOV RSI,RCX
00007c69(3): ADD RDI,R15
00007c6c(5): CALL 0x00001be0
00007c71(8): CMP byte ptr [0x8c + R14],0x0
00007c79(5): LEA RAX,[RBP + R13*0x1]
00007c7e(6): JNZ 0x00007fb5
00007c84(4): ADD R15,0x1
00007c88(5): MOV RSI,qword ptr [RSP + 0x8]
00007c8d(4): MOV RDX,qword ptr [R14 + 0x10]
00007c91(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
00007c96(3): MOV R13,RAX
00007c99(3): CMP R15,RCX
00007c9c(8): LEA RAX,[RSI*0x4]
00007ca4(4): MOV dword ptr [RDX + RSI*0x4],R12D
00007ca8(6): JGE 0x00007b60
00007cae(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
00007cb3(4): LEA RDX,[RDX + RCX*0x4]
00007cb7(9): NOP word ptr [RAX + RAX*0x1]
00007cc0(6): MOV dword ptr [RAX],0xffffffff
00007cc6(4): ADD RAX,0x4
00007cca(3): CMP RDX,RAX
00007ccd(2): JNZ 0x00007cc0
00007ccf(3): MOV R15,RCX
00007cd2(5): JMP 0x00007b60
00007ce0(7): CMP byte ptr [0x8c + RDI],0x0
00007ce7(6): JNZ 0x00007b5c
00007ced(3): CMP R15,RBX
00007cf0(6): JGE 0x00007e88
00007cf6(4): LEA RAX,[RDI + 0x20]
00007cfa(5): MOV qword ptr [RSP + 0x8],RAX
00007cff(5): LEA RAX,[RSP + 0x44]
00007d04(5): MOV qword ptr [RSP + 0x30],RAX
00007d09(5): LEA RAX,[RSP + 0x48]
00007d0e(5): MOV qword ptr [RSP + 0x38],RAX
00007d13(5): LEA RAX,[RSP + 0x50]
00007d18(5): MOV qword ptr [RSP + 0x28],RAX
00007d1d(3): NOP dword ptr [RAX]
00007d20(4): MOV RBP,qword ptr [R14 + 0x28]
00007d24(3): MOV R13,R15
00007d27(3): ADD RBP,R15
00007d2a(3): ADD RBP,qword ptr [R14]
00007d2d(5): MOVZX R12D,byte ptr [RBP]
00007d32(4): TEST R12B,0x80
00007d36(2): JNZ 0x00007d4a
00007d38(5): MOV RDI,qword ptr [RSP + 0x8]
00007d3d(5): CALL 0x00001d90
00007d42(2): TEST EAX,EAX
00007d44(6): JNZ 0x00007e38
00007d4a(4): MOV RAX,qword ptr [R14 + 0x20]
00007d4e(5): MOV RDI,qword ptr [RSP + 0x30]
00007d53(3): MOV RDX,RBX
00007d56(5): MOV RCX,qword ptr [RSP + 0x8]
00007d5b(3): SUB RDX,R15
00007d5e(3): MOV RSI,RBP
00007d61(5): MOV qword ptr [RSP + 0x10],RDX
00007d66(5): MOV qword ptr [RSP + 0x48],RAX
00007d6b(5): MOV qword ptr [RSP + 0x20],RDI
00007d70(5): CALL 0x00007050
00007d75(3): MOV RBP,RAX
00007d78(4): LEA RAX,[RAX + -0x1]
00007d7c(4): CMP RAX,-0x4
00007d80(6): JA 0x00007e68
00007d86(4): MOV EDX,dword ptr [RSP + 0x44]
00007d8a(2): MOV EDI,EDX
00007d8c(4): MOV dword ptr [RSP + 0x18],EDX
00007d90(5): CALL 0x00001d30
00007d95(4): MOV EDX,dword ptr [RSP + 0x18]
00007d99(3): MOV R12D,EAX
00007d9c(2): CMP EDX,EAX
00007d9e(2): JZ 0x00007e18
00007da0(5): MOV RDX,qword ptr [RSP + 0x38]
00007da5(5): MOV RDI,qword ptr [RSP + 0x28]
00007daa(2): MOV ESI,EAX
00007dac(5): CALL 0x00001c30
00007db1(3): CMP RBP,RAX
00007db4(6): JNZ 0x00007f28
00007dba(4): MOV RDI,qword ptr [R14 + 0x8]
00007dbe(5): MOV RSI,qword ptr [RSP + 0x28]
00007dc3(3): MOV RDX,RBP
00007dc6(3): ADD RDI,R15
00007dc9(5): CALL 0x00001be0
00007dce(4): ADD R15,0x1
00007dd2(4): MOV RDX,qword ptr [R14 + 0x10]
00007dd6(8): LEA RAX,[R13*0x4]
00007dde(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
00007de3(3): CMP R15,RCX
00007de6(4): MOV dword ptr [RDX + R13*0x4],R12D
00007dea(2): JGE 0x00007e0a
00007dec(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
00007df1(4): LEA RDX,[RDX + RCX*0x4]
00007df5(3): NOP dword ptr [RAX]
00007df8(6): MOV dword ptr [RAX],0xffffffff
00007dfe(4): ADD RAX,0x4
00007e02(3): CMP RDX,RAX
00007e05(2): JNZ 0x00007df8
00007e07(3): MOV R15,RCX
00007e0a(3): CMP RBX,R15
00007e0d(6): JG 0x00007d20
00007e13(2): JMP 0x00007e88
00007e18(4): MOV RSI,qword ptr [R14 + 0x28]
00007e1c(4): MOV RDI,qword ptr [R14 + 0x8]
00007e20(3): MOV RDX,RBP
00007e23(3): ADD RSI,R15
00007e26(3): ADD RSI,qword ptr [R14]
00007e29(3): ADD RDI,R15
00007e2c(5): CALL 0x00001be0
00007e31(2): JMP 0x00007dce
00007e38(5): CALL 0x000019c0
00007e3d(3): MOV RAX,qword ptr [RAX]
00007e40(4): MOV RDX,qword ptr [R14 + 0x8]
00007e44(4): MOV EAX,dword ptr [RAX + R12*0x4]
00007e48(4): MOV byte ptr [RDX + R15*0x1],AL
00007e4c(4): MOV RDX,qword ptr [R14 + 0x8]
00007e50(4): MOV RAX,qword ptr [R14 + 0x10]
00007e54(5): MOVZX EDX,byte ptr [RDX + R15*0x1]
00007e59(4): MOV dword ptr [RAX + R15*0x4],EDX
00007e5d(4): ADD R15,0x1
00007e61(2): JMP 0x00007e0a
00007e68(4): CMP RAX,-0x3
00007e6c(2): JNZ 0x00007ea0
00007e6e(4): MOV RAX,qword ptr [R14 + 0x58]
00007e72(4): CMP qword ptr [R14 + 0x40],RAX
00007e76(2): JGE 0x00007ea0
00007e78(5): MOV RAX,qword ptr [RSP + 0x48]
00007e7d(4): MOV qword ptr [R14 + 0x20],RAX
00007e81(7): NOP dword ptr [RAX]
00007e88(4): MOV qword ptr [R14 + 0x30],R15
00007e8c(4): MOV qword ptr [R14 + 0x38],R15
00007e90(2): XOR EAX,EAX
00007e92(5): JMP 0x00007b6f
00007ea0(3): MOV RAX,qword ptr [R14]
00007ea3(4): MOV RDX,qword ptr [R14 + 0x8]
00007ea7(3): ADD RAX,R15
00007eaa(4): ADD RAX,qword ptr [R14 + 0x28]
00007eae(3): MOVZX EAX,byte ptr [RAX]
00007eb1(4): MOV byte ptr [RDX + R15*0x1],AL
00007eb5(4): MOV RDX,qword ptr [R14 + 0x10]
00007eb9(4): ADD R15,0x1
00007ebd(4): CMP RBP,-0x1
00007ec1(4): MOV dword ptr [RDX + R13*0x4],EAX
00007ec5(6): JNZ 0x00007e0a
00007ecb(5): MOV RAX,qword ptr [RSP + 0x48]
00007ed0(4): MOV qword ptr [R14 + 0x20],RAX
00007ed4(5): JMP 0x00007e0a
00007ed9(7): MOV EAX,dword ptr [0x90 + R14]
00007ee0(2): TEST EAX,EAX
00007ee2(6): JLE 0x00008100
00007ee8(4): MOV RDI,qword ptr [R14 + 0x28]
00007eec(4): LEA R11D,[RAX + -0x1]
00007ef0(5): LEA RCX,[RSP + 0x50]
00007ef5(2): XOR EAX,EAX
00007ef7(3): ADD RDI,R13
00007efa(3): ADD RDI,qword ptr [R14]
00007efd(2): JMP 0x00007f0a
00007eff(4): ADD RAX,0x1
00007f03(5): CMP qword ptr [RSP + 0x10],RAX
00007f08(2): JZ 0x00007f1b
00007f0a(4): MOVZX ESI,byte ptr [RDI + RAX*0x1]
00007f0e(3): CMP R11,RAX
00007f11(4): MOVZX ESI,byte ptr [RDX + RSI*0x1]
00007f15(4): MOV byte ptr [RCX + RAX*0x1],SIL
00007f19(2): JNZ 0x00007eff
00007f1b(5): MOV qword ptr [RSP + 0x18],RCX
00007f20(5): JMP 0x00007be3
00007f28(3): MOV R13,R15
00007f2b(5): JMP 0x00007bbe
00007f30(4): MOV RDI,qword ptr [R14 + 0x8]
00007f34(5): MOV RSI,qword ptr [RSP + 0x18]
00007f39(3): MOV RDX,RBP
00007f3c(3): ADD RDI,R15
00007f3f(5): CALL 0x00001be0
00007f44(5): JMP 0x00007c71
00007f49(6): CMP qword ptr [RSP + 0x20],-0x3
00007f4f(2): JNZ 0x00007f5b
00007f51(4): MOV RAX,qword ptr [R14 + 0x58]
00007f55(4): CMP qword ptr [R14 + 0x40],RAX
00007f59(2): JL 0x00007fd8
00007f5b(3): MOV RAX,qword ptr [R14]
00007f5e(4): MOV RDX,qword ptr [R14 + 0x78]
00007f62(3): ADD RAX,R13
00007f65(4): ADD RAX,qword ptr [R14 + 0x28]
00007f69(3): TEST RDX,RDX
00007f6c(3): MOVZX EAX,byte ptr [RAX]
00007f6f(6): JNZ 0x0000811c
00007f75(4): MOV RDX,qword ptr [R14 + 0x8]
00007f79(3): MOV RCX,R15
00007f7c(4): MOV byte ptr [RDX + R15*0x1],AL
00007f80(8): CMP byte ptr [0x8c + R14],0x0
00007f88(6): JNZ 0x0000810f
00007f8e(4): MOV RDX,qword ptr [R14 + 0x10]
00007f92(4): ADD R13,0x1
00007f96(4): ADD R15,0x1
00007f9a(4): CMP RBP,-0x1
00007f9e(3): MOV dword ptr [RDX + RCX*0x4],EAX
00007fa1(6): JNZ 0x00007b60
00007fa7(5): MOV RAX,qword ptr [RSP + 0x48]
00007fac(4): MOV qword ptr [R14 + 0x20],RAX
00007fb0(5): JMP 0x00007b60
00007fb5(4): MOV RDX,qword ptr [R14 + 0x18]
00007fb9(3): MOV RCX,R15
00007fbc(3): MOV R10,R13
00007fbf(3): SUB RCX,R13
00007fc2(4): LEA RDX,[RDX + RCX*0x8]
00007fc6(4): MOV qword ptr [RDX + R10*0x8],R10
00007fca(4): ADD R10,0x1
00007fce(3): CMP RAX,R10
00007fd1(2): JNZ 0x00007fc6
00007fd3(5): JMP 0x00007c84
00007fd8(5): MOV RAX,qword ptr [RSP + 0x48]
00007fdd(4): MOV qword ptr [R14 + 0x20],RAX
00007fe1(5): JMP 0x00007b65
00007fe6(4): CMP RAX,-0x1
00007fea(6): JZ 0x00007f30
00007ff0(4): LEA RAX,[RAX + R15*0x1]
00007ff4(3): MOV RSI,RAX
00007ff7(5): MOV qword ptr [RSP + 0x8],RAX
00007ffc(4): MOV RAX,qword ptr [R14 + 0x40]
00008000(3): CMP RSI,RAX
00008003(2): JA 0x00007fd8
00008005(5): CMP qword ptr [R14 + 0x18],0x0
0000800a(6): JZ 0x000080c8
00008010(8): CMP byte ptr [0x8c + R14],0x0
00008018(2): JNZ 0x0000803a
0000801a(3): TEST R15,R15
0000801d(2): JZ 0x00008032
0000801f(4): MOV RDX,qword ptr [R14 + 0x18]
00008023(2): XOR EAX,EAX
00008025(4): MOV qword ptr [RDX + RAX*0x8],RAX
00008029(4): ADD RAX,0x1
0000802d(3): CMP RAX,R15
00008030(2): JNZ 0x00008025
00008032(8): MOV byte ptr [0x8c + R14],0x1
0000803a(4): MOV RDI,qword ptr [R14 + 0x8]
0000803e(3): MOV RSI,RCX
00008041(3): MOV RDX,R11
00008044(5): MOV qword ptr [RSP + 0x10],R11
00008049(3): ADD RDI,R15
0000804c(5): CALL 0x00001be0
00008051(4): MOV RAX,qword ptr [R14 + 0x10]
00008055(5): MOV R11,qword ptr [RSP + 0x10]
0000805a(4): LEA RCX,[RAX + R15*0x4]
0000805e(4): MOV RAX,qword ptr [R14 + 0x18]
00008062(4): CMP R11,0x1
00008066(3): MOV dword ptr [RCX],R12D
00008069(4): LEA RSI,[RAX + R15*0x8]
0000806d(3): MOV qword ptr [RSI],R13
00008070(2): JBE 0x0000809a
00008072(5): MOV EAX,0x1
00008077(5): MOV RDX,qword ptr [RSP + 0x20]
0000807c(3): CMP RAX,RBP
0000807f(4): CMOVC RDX,RAX
00008083(3): ADD RDX,R13
00008086(4): MOV qword ptr [RSI + RAX*0x8],RDX
0000808a(7): MOV dword ptr [RCX + RAX*0x4],0xffffffff
00008091(4): ADD RAX,0x1
00008095(3): CMP RAX,R11
00008098(2): JNZ 0x00008077
0000809a(4): MOV RBX,qword ptr [R14 + 0x58]
0000809e(3): SUB R11,RBP
000080a1(3): ADD RBX,R11
000080a4(4): CMP R13,qword ptr [R14 + 0x60]
000080a8(4): MOV qword ptr [R14 + 0x58],RBX
000080ac(2): JGE 0x000080b2
000080ae(4): ADD qword ptr [R14 + 0x68],R11
000080b2(4): CMP qword ptr [R14 + 0x40],RBX
000080b6(5): MOV R15,qword ptr [RSP + 0x8]
000080bb(5): CMOVLE RBX,qword ptr [R14 + 0x40]
000080c0(3): ADD R13,RBP
000080c3(5): JMP 0x00007b60
000080c8(8): LEA RDI,[RAX*0x8]
000080d0(5): MOV qword ptr [RSP + 0x18],RCX
000080d5(5): MOV qword ptr [RSP + 0x10],R11
000080da(5): CALL 0x00001c20
000080df(3): TEST RAX,RAX
000080e2(4): MOV qword ptr [R14 + 0x18],RAX
000080e6(5): MOV R11,qword ptr [RSP + 0x10]
000080eb(5): MOV RCX,qword ptr [RSP + 0x18]
000080f0(6): JNZ 0x00008010
000080f6(5): MOV EAX,0xc
000080fb(5): JMP 0x00007b6f
00008100(5): LEA RCX,[RSP + 0x50]
00008105(5): JMP 0x00007f1b
0000810a(5): CALL 0x00001ad0
0000810f(4): MOV RDX,qword ptr [R14 + 0x18]
00008113(4): MOV qword ptr [RDX + R15*0x8],R13
00008117(5): JMP 0x00007f8e
0000811c(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
00008120(5): JMP 0x00007f75
00008130(1): PUSH RBP
00008131(1): PUSH RBX
00008132(10): MOV RDX,0xffffffffffffffe
0000813c(4): SUB RSP,0x8
00008140(4): MOV RAX,qword ptr [RDI + 0x40]
00008144(3): CMP RAX,RDX
00008147(6): JA 0x00008258
0000814d(4): MOV RDX,qword ptr [RDI + 0x58]
00008151(3): ADD RAX,RAX
00008154(3): MOVSXD RSI,ESI
00008157(3): MOV RBX,RDI
0000815a(3): CMP RAX,RDX
0000815d(4): CMOVG RAX,RDX
00008161(3): CMP RAX,RSI
00008164(4): CMOVGE RSI,RAX
00008168(5): CALL 0x000075a0
0000816d(2): TEST EAX,EAX
0000816f(2): MOV EBP,EAX
00008171(6): JNZ 0x0000822d
00008177(7): MOV RDI,qword ptr [0xb8 + RBX]
0000817e(3): TEST RDI,RDI
00008181(2): JZ 0x000081a4
00008183(4): MOV RAX,qword ptr [RBX + 0x40]
00008187(8): LEA RSI,[0x8 + RAX*0x8]
0000818f(5): CALL 0x00001c90
00008194(3): TEST RAX,RAX
00008197(6): JZ 0x00008258
0000819d(7): MOV qword ptr [0xb8 + RBX],RAX
000081a4(7): CMP byte ptr [0x88 + RBX],0x0
000081ab(6): MOV EAX,dword ptr [0x90 + RBX]
000081b1(2): JZ 0x000081d0
000081b3(3): CMP EAX,0x1
000081b6(3): MOV RDI,RBX
000081b9(6): JLE 0x00008270
000081bf(4): ADD RSP,0x8
000081c3(1): POP RBX
000081c4(1): POP RBP
000081c5(5): JMP 0x00007b10
000081d0(3): CMP EAX,0x1
000081d3(2): JG 0x00008240
000081d5(4): MOV RCX,qword ptr [RBX + 0x78]
000081d9(3): TEST RCX,RCX
000081dc(2): JZ 0x0000822d
000081de(4): MOV RSI,qword ptr [RBX + 0x58]
000081e2(4): CMP qword ptr [RBX + 0x40],RSI
000081e6(5): CMOVLE RSI,qword ptr [RBX + 0x40]
000081eb(4): MOV RAX,qword ptr [RBX + 0x30]
000081ef(3): CMP RSI,RAX
000081f2(2): JG 0x00008204
000081f4(2): JMP 0x00008225
00008200(4): MOV RCX,qword ptr [RBX + 0x78]
00008204(3): MOV RDX,qword ptr [RBX]
00008207(3): ADD RDX,RAX
0000820a(4): ADD RDX,qword ptr [RBX + 0x28]
0000820e(3): MOVZX EDX,byte ptr [RDX]
00008211(4): MOVZX ECX,byte ptr [RCX + RDX*0x1]
00008215(4): MOV RDX,qword ptr [RBX + 0x8]
00008219(3): MOV byte ptr [RDX + RAX*0x1],CL
0000821c(4): ADD RAX,0x1
00008220(3): CMP RSI,RAX
00008223(2): JNZ 0x00008200
00008225(4): MOV qword ptr [RBX + 0x30],RAX
00008229(4): MOV qword ptr [RBX + 0x38],RAX
0000822d(4): ADD RSP,0x8
00008231(2): MOV EAX,EBP
00008233(1): POP RBX
00008234(1): POP RBP
00008235(1): RET
00008240(3): MOV RDI,RBX
00008243(5): CALL 0x00007940
00008248(4): ADD RSP,0x8
0000824c(2): MOV EAX,EBP
0000824e(1): POP RBX
0000824f(1): POP RBP
00008250(1): RET
00008258(5): MOV EBP,0xc
0000825d(4): ADD RSP,0x8
00008261(2): MOV EAX,EBP
00008263(1): POP RBX
00008264(1): POP RBP
00008265(1): RET
00008270(5): CALL 0x000078d0
00008275(4): ADD RSP,0x8
00008279(2): MOV EAX,EBP
0000827b(1): POP RBX
0000827c(1): POP RBP
0000827d(1): RET
00008280(2): PUSH R12
00008282(1): PUSH RBP
00008283(3): MOV RBP,RSI
00008286(1): PUSH RBX
00008287(4): MOV RAX,qword ptr [RDI + 0x40]
0000828b(3): MOV RBX,RDI
0000828e(7): MOV R12,qword ptr [0xc0 + RDI]
00008295(3): CMP RAX,RSI
00008298(2): JG 0x000082c0
0000829a(4): CMP RAX,qword ptr [RDI + 0x58]
0000829e(2): JGE 0x000082c0
000082a0(3): LEA ESI,[RBP + 0x1]
000082a3(3): MOV RDI,RBX
000082a6(5): CALL 0x00008130
000082ab(2): TEST EAX,EAX
000082ad(2): JNZ 0x000082b6
000082af(3): CMP R12,RBP
000082b2(2): JL 0x000082e0
000082b4(2): XOR EAX,EAX
000082b6(1): POP RBX
000082b7(1): POP RBP
000082b8(2): POP R12
000082ba(1): RET
000082c0(4): MOV RAX,qword ptr [RBX + 0x30]
000082c4(3): CMP RAX,RBP
000082c7(2): JG 0x000082af
000082c9(4): CMP RAX,qword ptr [RBX + 0x58]
000082cd(2): JGE 0x000082af
000082cf(3): LEA ESI,[RBP + 0x1]
000082d2(3): MOV RDI,RBX
000082d5(5): CALL 0x00008130
000082da(2): TEST EAX,EAX
000082dc(2): JZ 0x000082af
000082de(2): JMP 0x000082b6
000082e0(7): MOV RAX,qword ptr [0xb8 + RBX]
000082e7(3): MOV RDX,RBP
000082ea(2): XOR ESI,ESI
000082ec(3): SUB RDX,R12
000082ef(4): SHL RDX,0x3
000082f3(5): LEA RDI,[RAX + R12*0x8 + 0x8]
000082f8(5): CALL 0x00001b60
000082fd(7): MOV qword ptr [0xc0 + RBX],RBP
00008304(2): JMP 0x000082b4
00008310(1): PUSH RBX
00008311(3): MOV RBX,RDI
00008314(3): MOV RDI,qword ptr [RDI]
00008317(5): CALL 0x000019d0
0000831c(4): MOV RDI,qword ptr [RBX + 0x8]
00008320(5): CALL 0x000019d0
00008325(4): MOV RDI,qword ptr [RBX + 0x10]
00008329(5): CALL 0x000019d0
0000832e(4): MOV RDI,qword ptr [RBX + 0x18]
00008332(5): CALL 0x000019d0
00008337(3): MOV RDI,RBX
0000833a(1): POP RBX
0000833b(5): JMP 0x000019d0
00008340(3): MOV EAX,dword ptr [RDI + 0x8]
00008343(5): AND EAX,0x400ff
00008348(3): CMP EAX,0x6
0000834b(2): JZ 0x00008360
0000834d(3): CMP EAX,0x3
00008350(2): JZ 0x00008358
00008352(2): RET
00008358(3): MOV RDI,qword ptr [RDI]
0000835b(5): JMP 0x000019d0
00008360(3): MOV RDI,qword ptr [RDI]
00008363(2): JMP 0x00008310
00008370(4): LEA RDI,[RSI + 0x28]
00008374(4): SUB RSP,0x8
00008378(5): CALL 0x00008340
0000837d(2): XOR EAX,EAX
0000837f(4): ADD RSP,0x8
00008383(1): RET
00008390(2): PUSH R15
00008392(2): PUSH R14
00008394(3): MOV R14,RSI
00008397(2): PUSH R13
00008399(2): PUSH R12
0000839b(1): PUSH RBP
0000839c(1): PUSH RBX
0000839d(3): MOV RBX,RDI
000083a0(4): SUB RSP,0x18
000083a4(4): MOV RSI,qword ptr [RDI + 0x10]
000083a8(4): MOV RBP,qword ptr [RDI + 0x8]
000083ac(3): CMP RSI,RBP
000083af(6): JNC 0x00008460
000083b5(4): MOV R12,qword ptr [RDI + 0x18]
000083b9(4): MOV RBP,qword ptr [RDI + 0x28]
000083bd(3): MOV RAX,RSI
000083c0(2): MOV ECX,EDX
000083c2(4): SHL RAX,0x4
000083c6(3): ADD RAX,qword ptr [RBX]
000083c9(6): AND ECX,0xfffc00ff
000083cf(4): MOV qword ptr [RAX + 0x8],RDX
000083d3(3): MOV dword ptr [RAX + 0x8],ECX
000083d6(2): XOR ECX,ECX
000083d8(3): CMP DL,0x6
000083db(3): MOV qword ptr [RAX],R14
000083de(3): SETZ CL
000083e1(3): CMP DL,0x5
000083e4(2): JNZ 0x000083f2
000083e6(2): XOR ECX,ECX
000083e8(7): CMP dword ptr [0xb4 + RBX],0x1
000083ef(3): SETG CL
000083f2(4): MOVZX EDX,byte ptr [RAX + 0xa]
000083f6(3): SHL ECX,0x4
000083f9(4): PXOR XMM0,XMM0
000083fd(3): AND EDX,0xffffffef
00008400(2): OR EDX,ECX
00008402(3): MOV byte ptr [RAX + 0xa],DL
00008405(8): MOV qword ptr [R12 + RSI*0x8],-0x1
0000840d(4): MOV RAX,qword ptr [RBX + 0x10]
00008411(4): LEA RAX,[RAX + RAX*0x2]
00008415(5): LEA RAX,[RBP + RAX*0x8]
0000841a(3): MOVUPS xmmword ptr [RAX],XMM0
0000841d(8): MOV qword ptr [RAX + 0x10],0x0
00008425(4): MOV RAX,qword ptr [RBX + 0x10]
00008429(4): LEA RDX,[RAX + RAX*0x2]
0000842d(4): MOV RAX,qword ptr [RBX + 0x30]
00008431(4): LEA RAX,[RAX + RDX*0x8]
00008435(3): MOVUPS xmmword ptr [RAX],XMM0
00008438(8): MOV qword ptr [RAX + 0x10],0x0
00008440(4): MOV RAX,qword ptr [RBX + 0x10]
00008444(4): LEA RDX,[RAX + 0x1]
00008448(4): MOV qword ptr [RBX + 0x10],RDX
0000844c(4): ADD RSP,0x18
00008450(1): POP RBX
00008451(1): POP RBP
00008452(2): POP R12
00008454(2): POP R13
00008456(2): POP R14
00008458(2): POP R15
0000845a(1): RET
00008460(5): LEA R13,[RBP + RBP*0x1]
00008465(10): MOV RAX,0xaaaaaaaaaaaaaaa
0000846f(3): CMP R13,RAX
00008472(6): JA 0x00008552
00008478(3): MOV RDI,qword ptr [RDI]
0000847b(3): MOV RSI,RBP
0000847e(5): MOV qword ptr [RSP + 0x8],RDX
00008483(4): SHL RSI,0x5
00008487(5): CALL 0x00001c90
0000848c(3): TEST RAX,RAX
0000848f(6): JZ 0x00008552
00008495(3): MOV R15,RBP
00008498(4): MOV RDI,qword ptr [RBX + 0x18]
0000849c(3): MOV qword ptr [RBX],RAX
0000849f(4): SHL R15,0x4
000084a3(3): MOV RSI,R15
000084a6(5): CALL 0x00001c90
000084ab(4): MOV RDI,qword ptr [RBX + 0x20]
000084af(3): MOV RSI,R15
000084b2(5): LEA R15,[R13 + RBP*0x4]
000084b7(3): MOV R12,RAX
000084ba(4): SHL R15,0x3
000084be(5): CALL 0x00001c90
000084c3(4): MOV RDI,qword ptr [RBX + 0x28]
000084c7(3): MOV RSI,R15
000084ca(4): MOV qword ptr [RSP],RAX
000084ce(5): CALL 0x00001c90
000084d3(4): MOV RDI,qword ptr [RBX + 0x30]
000084d7(3): MOV RSI,R15
000084da(3): MOV RBP,RAX
000084dd(5): CALL 0x00001c90
000084e2(3): TEST R12,R12
000084e5(4): MOV RCX,qword ptr [RSP]
000084e9(2): JZ 0x00008520
000084eb(3): TEST RCX,RCX
000084ee(2): JZ 0x00008520
000084f0(3): TEST RBP,RBP
000084f3(2): JZ 0x00008520
000084f5(3): TEST RAX,RAX
000084f8(5): MOV RDX,qword ptr [RSP + 0x8]
000084fd(2): JZ 0x00008520
000084ff(4): MOV qword ptr [RBX + 0x18],R12
00008503(4): MOV qword ptr [RBX + 0x20],RCX
00008507(4): MOV qword ptr [RBX + 0x28],RBP
0000850b(4): MOV qword ptr [RBX + 0x30],RAX
0000850f(4): MOV qword ptr [RBX + 0x8],R13
00008513(4): MOV RSI,qword ptr [RBX + 0x10]
00008517(5): JMP 0x000083bd
00008520(3): MOV RDI,R12
00008523(5): MOV qword ptr [RSP + 0x8],RAX
00008528(4): MOV qword ptr [RSP],RCX
0000852c(5): CALL 0x000019d0
00008531(4): MOV RCX,qword ptr [RSP]
00008535(3): MOV RDI,RCX
00008538(5): CALL 0x000019d0
0000853d(3): MOV RDI,RBP
00008540(5): CALL 0x000019d0
00008545(5): MOV RAX,qword ptr [RSP + 0x8]
0000854a(3): MOV RDI,RAX
0000854d(5): CALL 0x000019d0
00008552(7): MOV RAX,-0x1
00008559(5): JMP 0x0000844c
00008560(2): PUSH R13
00008562(2): PUSH R12
00008564(3): MOV R13,RSI
00008567(1): PUSH RBP
00008568(1): PUSH RBX
00008569(4): SHL R13,0x4
0000856d(3): MOV RBP,RSI
00008570(3): MOV R12D,EDX
00008573(3): MOV RBX,RDI
00008576(4): SUB RSP,0x8
0000857a(3): MOV RAX,qword ptr [RDI]
0000857d(4): MOV RSI,qword ptr [RAX + R13*0x1]
00008581(5): MOV RDX,qword ptr [RAX + R13*0x1 + 0x8]
00008586(5): CALL 0x00008390
0000858b(4): CMP RAX,-0x1
0000858f(2): JZ 0x000085f4
00008591(3): MOV EDI,R12D
00008594(3): MOV R8,qword ptr [RBX]
00008597(3): MOV RSI,RAX
0000859a(5): AND DI,0x3ff
0000859f(4): SHL RSI,0x4
000085a3(2): MOV ECX,EDI
000085a5(6): AND ECX,0x3ff
000085ab(3): ADD RSI,R8
000085ae(3): SHL ECX,0x8
000085b1(2): MOV EDX,ECX
000085b3(3): MOV ECX,dword ptr [RSI + 0x8]
000085b6(6): AND ECX,0xfffc00ff
000085bc(2): OR ECX,EDX
000085be(3): MOV dword ptr [RSI + 0x8],ECX
000085c1(5): MOV EDX,dword ptr [R8 + R13*0x1 + 0x8]
000085c6(6): AND ECX,0xfffc00ff
000085cc(3): SHR EDX,0x8
000085cf(2): OR EDX,EDI
000085d1(6): AND EDX,0x3ff
000085d7(3): SHL EDX,0x8
000085da(2): OR EDX,ECX
000085dc(2): MOV ECX,EDX
000085de(3): MOV dword ptr [RSI + 0x8],EDX
000085e1(3): SHR ECX,0x10
000085e4(2): MOV EDX,ECX
000085e6(3): OR EDX,0x4
000085e9(3): MOV byte ptr [RSI + 0xa],DL
000085ec(4): MOV RDX,qword ptr [RBX + 0x20]
000085f0(4): MOV qword ptr [RDX + RAX*0x8],RBP
000085f4(4): ADD RSP,0x8
000085f8(1): POP RBX
000085f9(1): POP RBP
000085fa(2): POP R12
000085fc(2): POP R13
000085fe(1): RET
00008600(2): PUSH R15
00008602(2): PUSH R14
00008604(3): MOV R9,RSI
00008607(2): PUSH R13
00008609(2): PUSH R12
0000860b(3): MOV R14,RDI
0000860e(1): PUSH RBP
0000860f(1): PUSH RBX
00008610(3): MOV R13,RDX
00008613(3): MOV EBP,R8D
00008616(4): SUB RSP,0x18
0000861a(5): MOV qword ptr [RSP + 0x8],RCX
0000861f(3): MOV R8,qword ptr [R14]
00008622(3): MOV RAX,R9
00008625(4): MOV RDI,qword ptr [R14 + 0x28]
00008629(4): SHL RAX,0x4
0000862d(3): MOV R12,R13
00008630(3): ADD RAX,R8
00008633(4): CMP byte ptr [RAX + 0x8],0x4
00008637(6): JZ 0x000087f0
0000863d(4): LEA R12,[R9 + R9*0x2]
00008641(4): SHL R12,0x3
00008645(4): LEA RSI,[RDI + R12*0x1]
00008649(4): MOV RCX,qword ptr [RSI + 0x8]
0000864d(3): TEST RCX,RCX
00008650(6): JZ 0x00008849
00008656(5): LEA RBX,[R13 + R13*0x2]
0000865b(4): MOV RSI,qword ptr [RSI + 0x10]
0000865f(4): SHL RBX,0x3
00008663(3): ADD RDI,RBX
00008666(4): CMP RCX,0x1
0000866a(3): MOV R15,qword ptr [RSI]
0000866d(8): MOV qword ptr [RDI + 0x8],0x0
00008675(6): JZ 0x00008790
0000867b(4): MOV RDX,qword ptr [R14 + 0x10]
0000867f(4): LEA RSI,[RDX + -0x1]
00008683(3): MOV RAX,RSI
00008686(4): SHL RAX,0x4
0000868a(3): ADD RAX,R8
0000868d(4): TEST byte ptr [RAX + 0xa],0x4
00008691(6): JZ 0x00008740
00008697(3): TEST RSI,RSI
0000869a(6): JLE 0x00008740
000086a0(4): SHL RDX,0x4
000086a4(3): SUB R8,RAX
000086a7(4): MOV RCX,qword ptr [R14 + 0x20]
000086ab(5): LEA R8,[R8 + RDX*0x1 + -0x20]
000086b0(2): JMP 0x000086ca
000086b8(3): ADD RAX,R8
000086bb(4): SUB RSI,0x1
000086bf(4): TEST byte ptr [RAX + 0xa],0x4
000086c3(2): JZ 0x00008740
000086c5(3): TEST RSI,RSI
000086c8(2): JLE 0x00008740
000086ca(4): CMP qword ptr [RCX + RSI*0x8],R15
000086ce(2): JNZ 0x000086b8
000086d0(3): MOV EDX,dword ptr [RAX + 0x8]
000086d3(3): SHR EDX,0x8
000086d6(6): AND EDX,0x3ff
000086dc(2): CMP EBP,EDX
000086de(2): JNZ 0x000086b8
000086e0(5): CALL 0x000076b0
000086e5(2): TEST AL,AL
000086e7(2): JZ 0x0000872b
000086e9(4): MOV RAX,qword ptr [R14 + 0x28]
000086ed(2): MOV EDX,EBP
000086ef(3): MOV RDI,R14
000086f2(5): MOV RAX,qword ptr [RAX + R12*0x1 + 0x10]
000086f7(4): MOV R9,qword ptr [RAX + 0x8]
000086fb(3): MOV RSI,R9
000086fe(4): MOV qword ptr [RSP],R9
00008702(5): CALL 0x00008560
00008707(4): CMP RAX,-0x1
0000870b(3): MOV R13,RAX
0000870e(2): JZ 0x0000872b
00008710(4): ADD RBX,qword ptr [R14 + 0x28]
00008714(3): MOV RSI,R13
00008717(3): MOV RDI,RBX
0000871a(5): CALL 0x000076b0
0000871f(2): TEST AL,AL
00008721(4): MOV R9,qword ptr [RSP]
00008725(6): JNZ 0x0000861f
0000872b(5): MOV EAX,0xc
00008730(4): ADD RSP,0x18
00008734(1): POP RBX
00008735(1): POP RBP
00008736(2): POP R12
00008738(2): POP R13
0000873a(2): POP R14
0000873c(2): POP R15
0000873e(1): RET
00008740(2): MOV EDX,EBP
00008742(3): MOV RSI,R15
00008745(3): MOV RDI,R14
00008748(5): CALL 0x00008560
0000874d(4): CMP RAX,-0x1
00008751(3): MOV R13,RAX
00008754(2): JZ 0x0000872b
00008756(4): MOV RDI,qword ptr [R14 + 0x28]
0000875a(3): MOV RSI,R13
0000875d(3): ADD RDI,RBX
00008760(5): CALL 0x000076b0
00008765(2): TEST AL,AL
00008767(2): JZ 0x0000872b
00008769(5): MOV RCX,qword ptr [RSP + 0x8]
0000876e(3): MOV R8D,EBP
00008771(3): MOV RDX,R13
00008774(3): MOV RSI,R15
00008777(3): MOV RDI,R14
0000877a(5): CALL 0x00008600
0000877f(2): TEST EAX,EAX
00008781(6): JZ 0x000086e9
00008787(2): JMP 0x00008730
00008790(5): CMP R9,qword ptr [RSP + 0x8]
00008795(2): JNZ 0x000087a0
00008797(3): CMP R9,R13
0000879a(6): JNZ 0x0000885c
000087a0(3): MOV EAX,dword ptr [RAX + 0x8]
000087a3(3): MOV RSI,R15
000087a6(3): MOV RDI,R14
000087a9(3): SHR EAX,0x8
000087ac(5): AND EAX,0x3ff
000087b1(2): OR EBP,EAX
000087b3(2): MOV EDX,EBP
000087b5(5): CALL 0x00008560
000087ba(4): CMP RAX,-0x1
000087be(3): MOV R13,RAX
000087c1(6): JZ 0x0000872b
000087c7(4): ADD RBX,qword ptr [R14 + 0x28]
000087cb(3): MOV RSI,RAX
000087ce(3): MOV RDI,RBX
000087d1(5): CALL 0x000076b0
000087d6(2): TEST AL,AL
000087d8(6): JZ 0x0000872b
000087de(3): MOV R9,R15
000087e1(5): JMP 0x0000861f
000087f0(4): MOV RAX,qword ptr [R14 + 0x18]
000087f4(5): LEA RBX,[R13 + R13*0x2]
000087f9(8): LEA R15,[R9*0x8]
00008801(2): MOV EDX,EBP
00008803(4): SHL RBX,0x3
00008807(4): MOV R9,qword ptr [RAX + R9*0x8]
0000880b(9): MOV qword ptr [RDI + RBX*0x1 + 0x8],0x0
00008814(3): MOV RDI,R14
00008817(3): MOV RSI,R9
0000881a(4): MOV qword ptr [RSP],R9
0000881e(5): CALL 0x00008560
00008823(4): CMP RAX,-0x1
00008827(3): MOV R13,RAX
0000882a(4): MOV R9,qword ptr [RSP]
0000882e(6): JZ 0x0000872b
00008834(4): MOV RAX,qword ptr [R14 + 0x18]
00008838(4): MOV qword ptr [RSP],R9
0000883c(4): MOV RCX,qword ptr [RAX + R15*0x1]
00008840(4): MOV qword ptr [RAX + R12*0x8],RCX
00008844(5): JMP 0x00008710
00008849(4): MOV RAX,qword ptr [R14 + 0x18]
0000884d(4): MOV RCX,qword ptr [RAX + R9*0x8]
00008851(4): MOV qword ptr [RAX + R13*0x8],RCX
00008855(2): XOR EAX,EAX
00008857(5): JMP 0x00008730
0000885c(3): MOV RSI,R15
0000885f(5): CALL 0x000076b0
00008864(2): MOV EDX,EAX
00008866(2): XOR EAX,EAX
00008868(2): TEST DL,DL
0000886a(6): JNZ 0x00008730
00008870(5): JMP 0x0000872b
00008880(1): PUSH RBX
00008881(3): MOV RBX,RDI
00008884(4): MOV RDI,qword ptr [RDI + 0x30]
00008888(5): CALL 0x000019d0
0000888d(4): MOV RDI,qword ptr [RBX + 0x48]
00008891(5): CALL 0x000019d0
00008896(4): MOV RAX,qword ptr [RBX + 0x50]
0000889a(4): LEA RDX,[RBX + 0x8]
0000889e(3): CMP RAX,RDX
000088a1(2): JZ 0x000088b5
000088a3(4): MOV RDI,qword ptr [RAX + 0x10]
000088a7(5): CALL 0x000019d0
000088ac(4): MOV RDI,qword ptr [RBX + 0x50]
000088b0(5): CALL 0x000019d0
000088b5(4): MOV RDI,qword ptr [RBX + 0x18]
000088b9(5): CALL 0x000019d0
000088be(4): MOV RDI,qword ptr [RBX + 0x60]
000088c2(5): CALL 0x000019d0
000088c7(4): MOV RDI,qword ptr [RBX + 0x58]
000088cb(5): CALL 0x000019d0
000088d0(3): MOV RDI,RBX
000088d3(1): POP RBX
000088d4(5): JMP 0x000019d0
000088e0(1): PUSH RBX
000088e1(3): MOV RBX,RDI
000088e4(4): MOV RDI,qword ptr [RDI + 0x10]
000088e8(5): CALL 0x000019d0
000088ed(4): MOV RDI,qword ptr [RBX + 0x18]
000088f1(5): CALL 0x000019d0
000088f6(7): CMP byte ptr [0x8b + RBX],0x0
000088fd(2): JNZ 0x00008908
000088ff(1): POP RBX
00008900(1): RET
00008908(4): MOV RDI,qword ptr [RBX + 0x8]
0000890c(1): POP RBX
0000890d(5): JMP 0x000019d0
00008920(2): PUSH R14
00008922(2): PUSH R13
00008924(2): PUSH R12
00008926(3): MOV R12,RDI
00008929(1): PUSH RBP
0000892a(1): PUSH RBX
0000892b(3): MOV RDI,qword ptr [RDI]
0000892e(3): TEST RDI,RDI
00008931(2): JZ 0x0000895e
00008933(6): CMP qword ptr [R12 + 0x10],0x0
00008939(2): JZ 0x0000895e
0000893b(2): XOR EBX,EBX
0000893d(2): JMP 0x00008944
00008940(4): MOV RDI,qword ptr [R12]
00008944(3): MOV RAX,RBX
00008947(4): ADD RBX,0x1
0000894b(4): SHL RAX,0x4
0000894f(3): ADD RDI,RAX
00008952(5): CALL 0x00008340
00008957(5): CMP qword ptr [R12 + 0x10],RBX
0000895c(2): JA 0x00008940
0000895e(5): MOV RDI,qword ptr [R12 + 0x18]
00008963(5): CALL 0x000019d0
00008968(6): CMP qword ptr [R12 + 0x10],0x0
0000896e(2): JZ 0x000089c3
00008970(2): XOR EBX,EBX
00008972(2): XOR EBP,EBP
00008974(4): NOP dword ptr [RAX]
00008978(5): MOV RAX,qword ptr [R12 + 0x30]
0000897d(3): TEST RAX,RAX
00008980(2): JZ 0x0000898c
00008982(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
00008987(5): CALL 0x000019d0
0000898c(5): MOV RAX,qword ptr [R12 + 0x38]
00008991(3): TEST RAX,RAX
00008994(2): JZ 0x000089a0
00008996(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000899b(5): CALL 0x000019d0
000089a0(5): MOV RAX,qword ptr [R12 + 0x28]
000089a5(3): TEST RAX,RAX
000089a8(2): JZ 0x000089b4
000089aa(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
000089af(5): CALL 0x000019d0
000089b4(4): ADD RBP,0x1
000089b8(4): ADD RBX,0x18
000089bc(5): CMP qword ptr [R12 + 0x10],RBP
000089c1(2): JA 0x00008978
000089c3(5): MOV RDI,qword ptr [R12 + 0x28]
000089c8(5): CALL 0x000019d0
000089cd(5): MOV RDI,qword ptr [R12 + 0x30]
000089d2(5): CALL 0x000019d0
000089d7(5): MOV RDI,qword ptr [R12 + 0x38]
000089dc(5): CALL 0x000019d0
000089e1(4): MOV RDI,qword ptr [R12]
000089e5(5): CALL 0x000019d0
000089ea(5): MOV RDI,qword ptr [R12 + 0x40]
000089ef(3): TEST RDI,RDI
000089f2(2): JZ 0x00008a47
000089f4(3): XOR R14D,R14D
000089f7(3): XOR R13D,R13D
000089fa(6): NOP word ptr [RAX + RAX*0x1]
00008a00(4): LEA RBP,[RDI + R14*0x1]
00008a04(5): CMP qword ptr [RBP],0x0
00008a09(2): JLE 0x00008a27
00008a0b(2): XOR EBX,EBX
00008a0d(3): NOP dword ptr [RAX]
00008a10(4): MOV RAX,qword ptr [RBP + 0x10]
00008a14(4): MOV RDI,qword ptr [RAX + RBX*0x8]
00008a18(4): ADD RBX,0x1
00008a1c(5): CALL 0x00008880
00008a21(4): CMP qword ptr [RBP],RBX
00008a25(2): JG 0x00008a10
00008a27(4): MOV RDI,qword ptr [RBP + 0x10]
00008a2b(4): ADD R13,0x1
00008a2f(4): ADD R14,0x18
00008a33(5): CALL 0x000019d0
00008a38(8): CMP qword ptr [0x88 + R12],R13
00008a40(5): MOV RDI,qword ptr [R12 + 0x40]
00008a45(2): JNC 0x00008a00
00008a47(5): CALL 0x000019d0
00008a4c(5): MOV RDI,qword ptr [R12 + 0x78]
00008a51(7): LEA RAX,[0x170a0]
00008a58(3): CMP RDI,RAX
00008a5b(2): JZ 0x00008a62
00008a5d(5): CALL 0x000019d0
00008a62(8): MOV RDI,qword ptr [0xe0 + R12]
00008a6a(5): CALL 0x000019d0
00008a6f(1): POP RBX
00008a70(3): MOV RDI,R12
00008a73(1): POP RBP
00008a74(2): POP R12
00008a76(2): POP R13
00008a78(2): POP R14
00008a7a(5): JMP 0x000019d0
00008a80(2): PUSH R14
00008a82(2): PUSH R13
00008a84(3): MOV R14,RDI
00008a87(2): PUSH R12
00008a89(1): PUSH RBP
00008a8a(1): PUSH RBX
00008a8b(8): CMP qword ptr [0xe8 + RDI],0x0
00008a93(6): JLE 0x00008b19
00008a99(3): XOR R13D,R13D
00008a9c(4): NOP dword ptr [RAX]
00008aa0(7): MOV RAX,qword ptr [0xf8 + R14]
00008aa7(4): MOV R12,qword ptr [RAX + R13*0x8]
00008aab(6): CMP qword ptr [R12 + 0x20],0x0
00008ab1(2): JLE 0x00008add
00008ab3(2): XOR EBX,EBX
00008ab5(3): NOP dword ptr [RAX]
00008ab8(5): MOV RAX,qword ptr [R12 + 0x28]
00008abd(4): MOV RBP,qword ptr [RAX + RBX*0x8]
00008ac1(4): ADD RBX,0x1
00008ac5(4): MOV RDI,qword ptr [RBP + 0x20]
00008ac9(5): CALL 0x000019d0
00008ace(3): MOV RDI,RBP
00008ad1(5): CALL 0x000019d0
00008ad6(5): CMP qword ptr [R12 + 0x20],RBX
00008adb(2): JG 0x00008ab8
00008add(5): MOV RDI,qword ptr [R12 + 0x28]
00008ae2(5): CALL 0x000019d0
00008ae7(5): MOV RAX,qword ptr [R12 + 0x10]
00008aec(3): TEST RAX,RAX
00008aef(2): JZ 0x00008b04
00008af1(4): MOV RDI,qword ptr [RAX + 0x10]
00008af5(5): CALL 0x000019d0
00008afa(5): MOV RDI,qword ptr [R12 + 0x10]
00008aff(5): CALL 0x000019d0
00008b04(3): MOV RDI,R12
00008b07(4): ADD R13,0x1
00008b0b(5): CALL 0x000019d0
00008b10(7): CMP qword ptr [0xe8 + R14],R13
00008b17(2): JG 0x00008aa0
00008b19(1): POP RBX
00008b1a(11): MOV qword ptr [0xe8 + R14],0x0
00008b25(11): MOV qword ptr [0xc8 + R14],0x0
00008b30(1): POP RBP
00008b31(2): POP R12
00008b33(2): POP R13
00008b35(2): POP R14
00008b37(1): RET
00008b40(4): MOV RCX,qword ptr [RDI + 0x30]
00008b44(4): LEA RAX,[RSI + 0x1]
00008b48(3): CMP RAX,RCX
00008b4b(2): JGE 0x00008b88
00008b4d(4): MOV RDX,qword ptr [RDI + 0x10]
00008b51(8): LEA RDI,[RAX*0x4]
00008b59(4): CMP dword ptr [RDX + RAX*0x4],-0x1
00008b5d(2): JNZ 0x00008b88
00008b5f(3): SUB RCX,RSI
00008b62(5): LEA RSI,[RDX + RDI*0x1 + -0x4]
00008b67(5): MOV EDX,0x2
00008b6c(2): JMP 0x00008b7b
00008b70(4): ADD RDX,0x1
00008b74(5): CMP dword ptr [RSI + RDX*0x4 + -0x4],-0x1
00008b79(2): JNZ 0x00008b8d
00008b7b(3): CMP RDX,RCX
00008b7e(2): MOV EAX,EDX
00008b80(2): JNZ 0x00008b70
00008b82(2): RET
00008b88(5): MOV EAX,0x1
00008b8d(2): RET
00008b90(4): MOV RDX,qword ptr [RDI + 0x8]
00008b94(2): XOR EAX,EAX
00008b96(4): CMP RDX,qword ptr [RSI + 0x8]
00008b9a(2): JZ 0x00008ba0
00008b9c(2): RET
00008ba0(4): LEA RAX,[RDX + -0x1]
00008ba4(8): LEA RDX,[RAX*0x8]
00008bac(2): JMP 0x00008bcd
00008bb0(4): MOV RCX,qword ptr [RDI + 0x10]
00008bb4(4): MOV R8,qword ptr [RCX + RDX*0x1]
00008bb8(4): MOV RCX,qword ptr [RSI + 0x10]
00008bbc(4): MOV RCX,qword ptr [RCX + RDX*0x1]
00008bc0(4): SUB RDX,0x8
00008bc4(3): CMP R8,RCX
00008bc7(2): JNZ 0x00008be0
00008bc9(4): SUB RAX,0x1
00008bcd(3): TEST RAX,RAX
00008bd0(2): JNS 0x00008bb0
00008bd2(5): MOV EAX,0x1
00008bd7(1): RET
00008be0(2): XOR EAX,EAX
00008be2(1): RET
00008bf0(2): XOR EAX,EAX
00008bf2(3): TEST RDI,RDI
00008bf5(2): JLE 0x00008c35
00008bf7(3): MOV R8,qword ptr [RSI]
00008bfa(4): SUB RDI,0x1
00008bfe(2): XOR ESI,ESI
00008c00(3): CMP RSI,RDI
00008c03(2): JNC 0x00008c2d
00008c05(4): LEA RCX,[RSI + RDI*0x1]
00008c09(3): SHR RCX,1
00008c0c(4): CMP RDX,qword ptr [R8 + RCX*0x8]
00008c10(2): JLE 0x00008c28
00008c12(2): JMP 0x00008c40
00008c18(4): LEA RAX,[RSI + RCX*0x1]
00008c1c(3): SHR RAX,1
00008c1f(4): CMP qword ptr [R8 + RAX*0x8],RDX
00008c23(2): JL 0x00008c50
00008c25(3): MOV RCX,RAX
00008c28(3): CMP RSI,RCX
00008c2b(2): JC 0x00008c18
00008c2d(2): XOR EAX,EAX
00008c2f(4): CMP RDX,qword ptr [R8 + RSI*0x8]
00008c33(2): JZ 0x00008c60
00008c35(2): RET
00008c40(3): MOV RAX,RCX
00008c43(3): MOV RCX,RDI
00008c46(10): NOP word ptr CS:[RAX + RAX*0x1]
00008c50(4): LEA RSI,[RAX + 0x1]
00008c54(3): MOV RDI,RCX
00008c57(2): JMP 0x00008c00
00008c60(4): LEA RAX,[RSI + 0x1]
00008c64(1): RET
00008c70(2): PUSH R15
00008c72(2): PUSH R14
00008c74(4): LEA R14,[RSI + 0x10]
00008c78(2): PUSH R13
00008c7a(2): PUSH R12
00008c7c(3): MOV R15,RCX
00008c7f(1): PUSH RBP
00008c80(1): PUSH RBX
00008c81(3): MOV R12,RDI
00008c84(3): MOV RBP,RSI
00008c87(3): MOV RBX,RDX
00008c8a(3): MOV R13D,R8D
00008c8d(4): SUB RSP,0x8
00008c91(4): MOV RDI,qword ptr [RBP + 0x8]
00008c95(3): MOV RDX,RBX
00008c98(3): MOV RSI,R14
00008c9b(5): CALL 0x00008bf0
00008ca0(3): TEST RAX,RAX
00008ca3(2): JNZ 0x00008d10
00008ca5(3): MOV RAX,RBX
00008ca8(4): SHL RAX,0x4
00008cac(4): ADD RAX,qword ptr [R12]
00008cb0(4): MOVZX EDX,byte ptr [RAX + 0x8]
00008cb4(3): CMP EDX,R13D
00008cb7(2): JNZ 0x00008cbe
00008cb9(3): CMP qword ptr [RAX],R15
00008cbc(2): JZ 0x00008cf8
00008cbe(3): MOV RSI,RBX
00008cc1(3): MOV RDI,RBP
00008cc4(5): CALL 0x000076b0
00008cc9(2): TEST AL,AL
00008ccb(2): JZ 0x00008d28
00008ccd(4): LEA RBX,[RBX + RBX*0x2]
00008cd1(5): MOV RDX,qword ptr [R12 + 0x28]
00008cd6(4): SHL RBX,0x3
00008cda(3): ADD RDX,RBX
00008cdd(4): MOV RAX,qword ptr [RDX + 0x8]
00008ce1(3): TEST RAX,RAX
00008ce4(2): JZ 0x00008d10
00008ce6(4): CMP RAX,0x2
00008cea(4): MOV RDX,qword ptr [RDX + 0x10]
00008cee(2): JZ 0x00008d40
00008cf0(3): MOV RBX,qword ptr [RDX]
00008cf3(2): JMP 0x00008c91
00008cf8(4): CMP R13D,0x9
00008cfc(2): JNZ 0x00008d10
00008cfe(3): MOV RSI,RBX
00008d01(3): MOV RDI,RBP
00008d04(5): CALL 0x000076b0
00008d09(2): TEST AL,AL
00008d0b(2): JZ 0x00008d28
00008d0d(3): NOP dword ptr [RAX]
00008d10(2): XOR EAX,EAX
00008d12(4): ADD RSP,0x8
00008d16(1): POP RBX
00008d17(1): POP RBP
00008d18(2): POP R12
00008d1a(2): POP R13
00008d1c(2): POP R14
00008d1e(2): POP R15
00008d20(1): RET
00008d28(4): ADD RSP,0x8
00008d2c(5): MOV EAX,0xc
00008d31(1): POP RBX
00008d32(1): POP RBP
00008d33(2): POP R12
00008d35(2): POP R13
00008d37(2): POP R14
00008d39(2): POP R15
00008d3b(1): RET
00008d40(4): MOV RDX,qword ptr [RDX + 0x8]
00008d44(3): MOV R8D,R13D
00008d47(3): MOV RCX,R15
00008d4a(3): MOV RSI,RBP
00008d4d(3): MOV RDI,R12
00008d50(5): CALL 0x00008c70
00008d55(2): TEST EAX,EAX
00008d57(2): JNZ 0x00008d12
00008d59(5): MOV RAX,qword ptr [R12 + 0x28]
00008d5e(5): MOV RDX,qword ptr [RAX + RBX*0x1 + 0x10]
00008d63(2): JMP 0x00008cf0
00008d70(3): MOV RAX,qword ptr [RDI]
00008d73(3): CMP RAX,RDX
00008d76(2): JLE 0x00008da2
00008d78(4): SUB RAX,0x1
00008d7c(3): CMP RDX,RAX
00008d7f(3): MOV qword ptr [RDI],RAX
00008d82(2): JGE 0x00008da2
00008d84(3): MOV RAX,qword ptr [RSI]
00008d87(9): NOP word ptr [RAX + RAX*0x1]
00008d90(5): MOV RCX,qword ptr [RAX + RDX*0x8 + 0x8]
00008d95(4): MOV qword ptr [RAX + RDX*0x8],RCX
00008d99(4): ADD RDX,0x1
00008d9d(3): CMP RDX,qword ptr [RDI]
00008da0(2): JL 0x00008d90
00008da2(2): RET
00008db0(4): MOVZX EAX,byte ptr [RSI + 0x30]
00008db4(2): CMP AL,0x4
00008db6(2): JZ 0x00008e10
00008db8(2): CMP AL,0x11
00008dba(2): JZ 0x00008dc0
00008dbc(2): XOR EAX,EAX
00008dbe(1): RET
00008dc0(4): MOV RAX,qword ptr [RSI + 0x8]
00008dc4(3): TEST RAX,RAX
00008dc7(2): JZ 0x00008dbc
00008dc9(4): CMP byte ptr [RAX + 0x30],0x11
00008dcd(2): JNZ 0x00008dbc
00008dcf(4): MOV RCX,qword ptr [RAX + 0x28]
00008dd3(4): MOV RAX,qword ptr [RAX + 0x8]
00008dd7(3): TEST RAX,RAX
00008dda(4): MOV qword ptr [RSI + 0x8],RAX
00008dde(2): JZ 0x00008de3
00008de0(3): MOV qword ptr [RAX],RSI
00008de3(7): MOV RAX,qword ptr [0xe0 + RDI]
00008dea(4): MOV RDX,qword ptr [RSI + 0x28]
00008dee(4): CMP RCX,0x3f
00008df2(4): MOV RDX,qword ptr [RAX + RDX*0x8]
00008df6(4): MOV qword ptr [RAX + RCX*0x8],RDX
00008dfa(2): JG 0x00008dbc
00008dfc(7): MOV RAX,-0x2
00008e03(3): ROL RAX,CL
00008e06(7): AND qword ptr [0xa0 + RDI],RAX
00008e0d(2): JMP 0x00008dbc
00008e10(7): MOV RAX,qword ptr [0xe0 + RDI]
00008e17(3): TEST RAX,RAX
00008e1a(2): JZ 0x00008dbc
00008e1c(4): MOVSXD RDX,dword ptr [RSI + 0x28]
00008e20(4): MOV RCX,qword ptr [RAX + RDX*0x8]
00008e24(5): MOV EAX,0x1
00008e29(2): SHL EAX,CL
00008e2b(4): MOV qword ptr [RSI + 0x28],RCX
00008e2f(2): CDQE
00008e31(7): OR qword ptr [0xa0 + RDI],RAX
00008e38(2): XOR EAX,EAX
00008e3a(1): RET
00008e40(4): MOVZX EAX,byte ptr [RSI + 0x30]
00008e44(4): MOV RDX,qword ptr [RSI + 0x8]
00008e48(2): CMP AL,0xb
00008e4a(2): JZ 0x00008e90
00008e4c(2): CMP AL,0x10
00008e4e(2): JZ 0x00008e78
00008e50(3): TEST RDX,RDX
00008e53(2): JZ 0x00008e5d
00008e55(4): MOV RAX,qword ptr [RSI + 0x20]
00008e59(4): MOV qword ptr [RDX + 0x20],RAX
00008e5d(4): MOV RAX,qword ptr [RSI + 0x10]
00008e61(3): TEST RAX,RAX
00008e64(2): JZ 0x00008e6e
00008e66(4): MOV RDX,qword ptr [RSI + 0x20]
00008e6a(4): MOV qword ptr [RAX + 0x20],RDX
00008e6e(2): XOR EAX,EAX
00008e70(1): RET
00008e78(4): MOV RAX,qword ptr [RSI + 0x10]
00008e7c(4): MOV RCX,qword ptr [RAX + 0x18]
00008e80(4): MOV qword ptr [RDX + 0x20],RCX
00008e84(4): MOV RDX,qword ptr [RSI + 0x20]
00008e88(4): MOV qword ptr [RAX + 0x20],RDX
00008e8c(2): XOR EAX,EAX
00008e8e(1): RET
00008e90(4): MOV qword ptr [RDX + 0x20],RSI
00008e94(2): XOR EAX,EAX
00008e96(1): RET
00008ea0(2): PUSH R15
00008ea2(2): PUSH R14
00008ea4(2): PUSH R13
00008ea6(2): PUSH R12
00008ea8(1): PUSH RBP
00008ea9(1): PUSH RBX
00008eaa(2): XOR EBX,EBX
00008eac(4): SUB RSP,0x48
00008eb0(7): MOV RAX,qword ptr [0x98 + RDI]
00008eb7(7): MOV R15,qword ptr [0xc8 + RDI]
00008ebe(8): MOV R12,qword ptr [0x80 + RSP]
00008ec6(5): MOV qword ptr [RSP + 0x8],RAX
00008ecb(3): MOV RBP,R15
00008ece(3): CMP RBX,RBP
00008ed1(2): JGE 0x00008f2b
00008ed3(4): LEA RAX,[RBX + RBP*0x1]
00008ed7(7): MOV R13,qword ptr [0xd8 + RDI]
00008ede(3): MOV R10,RAX
00008ee1(4): SHR R10,0x3f
00008ee5(3): ADD R10,RAX
00008ee8(3): SAR R10,1
00008eeb(4): LEA RAX,[R10 + R10*0x4]
00008eef(5): CMP R8,qword ptr [R13 + RAX*0x8 + 0x8]
00008ef4(2): JLE 0x00008f26
00008ef6(5): JMP 0x00009090
00008f00(4): LEA R11,[RBX + R10*0x1]
00008f04(3): MOV RAX,R11
00008f07(4): SHR RAX,0x3f
00008f0b(3): ADD RAX,R11
00008f0e(3): SAR RAX,1
00008f11(4): LEA R11,[RAX + RAX*0x4]
00008f15(3): MOV R14,RAX
00008f18(5): CMP qword ptr [R13 + R11*0x8 + 0x8],R8
00008f1d(6): JL 0x000090a0
00008f23(3): MOV R10,RAX
00008f26(3): CMP RBX,R10
00008f29(2): JL 0x00008f00
00008f2b(3): CMP R15,RBX
00008f2e(6): JLE 0x000090d0
00008f34(7): MOV R11,qword ptr [0xd8 + RDI]
00008f3b(4): LEA RAX,[RBX + RBX*0x4]
00008f3f(4): LEA RAX,[R11 + RAX*0x8]
00008f43(4): CMP R8,qword ptr [RAX + 0x8]
00008f47(7): MOV RAX,-0x1
00008f4e(4): CMOVNZ RBX,RAX
00008f52(3): MOV RAX,R15
00008f55(2): XOR EBP,EBP
00008f57(3): CMP RBP,RAX
00008f5a(2): JGE 0x00008fb4
00008f5c(5): LEA R11,[RBP + RAX*0x1]
00008f61(3): MOV R10,R11
00008f64(4): SHR R10,0x3f
00008f68(3): ADD R10,R11
00008f6b(7): MOV R11,qword ptr [0xd8 + RDI]
00008f72(3): SAR R10,1
00008f75(4): LEA R13,[R10 + R10*0x4]
00008f79(5): CMP R12,qword ptr [R11 + R13*0x8 + 0x8]
00008f7e(2): JLE 0x00008faf
00008f80(5): JMP 0x000090b0
00008f88(5): LEA R13,[RBP + R10*0x1]
00008f8d(3): MOV RAX,R13
00008f90(4): SHR RAX,0x3f
00008f94(3): ADD RAX,R13
00008f97(3): SAR RAX,1
00008f9a(4): LEA R13,[RAX + RAX*0x4]
00008f9e(3): MOV R14,RAX
00008fa1(5): CMP qword ptr [R11 + R13*0x8 + 0x8],R12
00008fa6(6): JL 0x000090c0
00008fac(3): MOV R10,RAX
00008faf(3): CMP RBP,R10
00008fb2(2): JL 0x00008f88
00008fb4(3): CMP R15,RBP
00008fb7(6): JLE 0x000090e0
00008fbd(7): MOV R10,qword ptr [0xd8 + RDI]
00008fc4(5): LEA RAX,[RBP + RBP*0x4]
00008fc9(4): LEA RAX,[R10 + RAX*0x8]
00008fcd(4): CMP R12,qword ptr [RAX + 0x8]
00008fd1(7): MOV RAX,-0x1
00008fd8(4): CMOVNZ RBP,RAX
00008fdc(4): CMP qword ptr [RSI],0x0
00008fe0(6): JLE 0x00009102
00008fe6(5): MOV qword ptr [RSP + 0x30],RBP
00008feb(5): MOV qword ptr [RSP + 0x20],R9
00008ff0(3): MOV R13,RDI
00008ff3(5): MOV qword ptr [RSP + 0x18],R8
00008ff8(5): MOV qword ptr [RSP + 0x10],RCX
00008ffd(3): XOR R14D,R14D
00009000(5): MOV qword ptr [RSP + 0x38],RSI
00009005(5): MOV qword ptr [RSP + 0x28],RBX
0000900a(3): MOV RBP,RDX
0000900d(3): MOV R15,R12
00009010(4): MOV RAX,qword ptr [RBP]
00009014(7): MOV RDX,qword ptr [0xd8 + R13]
0000901b(3): MOV RDI,R13
0000901e(5): MOV R9,qword ptr [RSP + 0x28]
00009023(5): MOV R8,qword ptr [RSP + 0x18]
00009028(5): MOV RCX,qword ptr [RSP + 0x10]
0000902d(4): MOV RSI,qword ptr [RAX + R14*0x8]
00009031(4): LEA RAX,[RSI + RSI*0x4]
00009035(4): LEA RAX,[RDX + RAX*0x8]
00009039(5): MOV RDX,qword ptr [RSP + 0x8]
0000903e(3): MOV RAX,qword ptr [RAX]
00009041(4): SHL RAX,0x4
00009045(3): ADD RAX,qword ptr [RDX]
00009048(3): MOV R12,qword ptr [RAX]
0000904b(3): MOV RDX,R12
0000904e(5): CALL 0x00007460
00009053(2): MOV EBX,EAX
00009055(4): MOV RAX,qword ptr [RBP]
00009059(5): MOV R9,qword ptr [RSP + 0x30]
0000905e(5): MOV RCX,qword ptr [RSP + 0x20]
00009063(3): MOV R8,R15
00009066(3): MOV RDX,R12
00009069(3): MOV RDI,R13
0000906c(4): MOV RSI,qword ptr [RAX + R14*0x8]
00009070(5): CALL 0x00007460
00009075(2): CMP EBX,EAX
00009077(2): JZ 0x000090f0
00009079(5): MOV EAX,0x1
0000907e(4): ADD RSP,0x48
00009082(1): POP RBX
00009083(1): POP RBP
00009084(2): POP R12
00009086(2): POP R13
00009088(2): POP R14
0000908a(2): POP R15
0000908c(1): RET
00009090(3): MOV R14,R10
00009093(3): MOV R10,RBP
00009096(10): NOP word ptr CS:[RAX + RAX*0x1]
000090a0(4): LEA RBX,[R14 + 0x1]
000090a4(3): MOV RBP,R10
000090a7(5): JMP 0x00008ece
000090b0(3): MOV R14,R10
000090b3(3): MOV R10,RAX
000090b6(10): NOP word ptr CS:[RAX + RAX*0x1]
000090c0(4): LEA RBP,[R14 + 0x1]
000090c4(3): MOV RAX,R10
000090c7(5): JMP 0x00008f57
000090d0(7): MOV RBX,-0x1
000090d7(5): JMP 0x00008f52
000090e0(7): MOV RBP,-0x1
000090e7(5): JMP 0x00008fdc
000090f0(5): MOV RAX,qword ptr [RSP + 0x38]
000090f5(4): ADD R14,0x1
000090f9(3): CMP R14,qword ptr [RAX]
000090fc(6): JL 0x00009010
00009102(2): XOR EAX,EAX
00009104(5): JMP 0x0000907e
00009110(3): TEST RSI,RSI
00009113(6): JZ 0x00009208
00009119(4): MOV RDX,qword ptr [RSI + 0x8]
0000911d(3): TEST RDX,RDX
00009120(6): JZ 0x00009208
00009126(2): PUSH R12
00009128(1): PUSH RBP
00009129(3): MOV R12,RSI
0000912c(1): PUSH RBX
0000912d(4): MOV RAX,qword ptr [RDI + 0x8]
00009131(3): MOV RBX,RDI
00009134(3): MOV RSI,qword ptr [RDI]
00009137(4): LEA RCX,[RAX + RDX*0x2]
0000913b(3): CMP RSI,RCX
0000913e(6): JL 0x00009288
00009144(3): TEST RAX,RAX
00009147(6): JZ 0x000092c0
0000914d(4): LEA RBP,[RAX + RDX*0x2]
00009151(4): SUB RDX,0x1
00009155(4): SUB RAX,0x1
00009159(3): MOV RDI,RDX
0000915c(3): NOT RDI
0000915f(3): TEST RDI,RDI
00009162(2): JNS 0x000091a0
00009164(3): TEST RAX,RAX
00009167(2): JS 0x000091a0
00009169(4): MOV RCX,qword ptr [RBX + 0x10]
0000916d(5): MOV RSI,qword ptr [R12 + 0x10]
00009172(4): MOV RSI,qword ptr [RSI + RDX*0x8]
00009176(4): CMP qword ptr [RCX + RAX*0x8],RSI
0000917a(6): JZ 0x00009210
00009180(6): JGE 0x00009228
00009186(4): SUB RDX,0x1
0000918a(4): SUB RBP,0x1
0000918e(3): MOV RDI,RDX
00009191(4): MOV qword ptr [RCX + RBP*0x8],RSI
00009195(3): NOT RDI
00009198(3): TEST RDI,RDI
0000919b(2): JS 0x00009164
0000919d(3): NOP dword ptr [RAX]
000091a0(3): TEST RDX,RDX
000091a3(6): JNS 0x00009238
000091a9(4): MOV RCX,qword ptr [RBX + 0x8]
000091ad(5): MOV RAX,qword ptr [R12 + 0x8]
000091b2(5): LEA R8,[RCX + RAX*0x2 + -0x1]
000091b7(3): MOV RDX,R8
000091ba(3): SUB RDX,RBP
000091bd(4): ADD RDX,0x1
000091c1(2): JZ 0x000091fa
000091c3(4): MOV RDI,qword ptr [RBX + 0x10]
000091c7(4): LEA RAX,[RCX + -0x1]
000091cb(3): ADD RCX,RDX
000091ce(4): MOV qword ptr [RBX + 0x8],RCX
000091d2(6): NOP word ptr [RAX + RAX*0x1]
000091d8(4): MOV RSI,qword ptr [RDI + R8*0x8]
000091dc(4): MOV RCX,qword ptr [RDI + RAX*0x8]
000091e0(4): LEA R9,[RAX + RDX*0x1]
000091e4(4): LEA R9,[RDI + R9*0x8]
000091e8(3): CMP RSI,RCX
000091eb(2): JLE 0x00009260
000091ed(4): SUB R8,0x1
000091f1(4): SUB RDX,0x1
000091f5(3): MOV qword ptr [R9],RSI
000091f8(2): JNZ 0x000091d8
000091fa(2): XOR EAX,EAX
000091fc(1): POP RBX
000091fd(1): POP RBP
000091fe(2): POP R12
00009200(1): RET
00009208(2): XOR EAX,EAX
0000920a(1): RET
00009210(4): SUB RDX,0x1
00009214(4): SUB RAX,0x1
00009218(3): MOV RDI,RDX
0000921b(3): NOT RDI
0000921e(5): JMP 0x0000915f
00009228(4): SUB RAX,0x1
0000922c(5): JMP 0x0000915f
00009238(4): MOV RAX,qword ptr [RBX + 0x10]
0000923c(4): ADD RDX,0x1
00009240(5): MOV RSI,qword ptr [R12 + 0x10]
00009245(3): SUB RBP,RDX
00009248(4): SHL RDX,0x3
0000924c(4): LEA RDI,[RAX + RBP*0x8]
00009250(5): CALL 0x00001be0
00009255(5): JMP 0x000091a9
00009260(4): SUB RAX,0x1
00009264(3): MOV qword ptr [R9],RCX
00009267(6): JNS 0x000091d8
0000926d(4): LEA RSI,[RDI + RBP*0x8]
00009271(4): SHL RDX,0x3
00009275(5): CALL 0x00001be0
0000927a(2): XOR EAX,EAX
0000927c(5): JMP 0x000091fc
00009288(3): ADD RDX,RSI
0000928b(4): MOV RDI,qword ptr [RDI + 0x10]
0000928f(4): LEA RBP,[RDX + RDX*0x1]
00009293(4): SHL RDX,0x4
00009297(3): MOV RSI,RDX
0000929a(5): CALL 0x00001c90
0000929f(3): TEST RAX,RAX
000092a2(2): JZ 0x000092e4
000092a4(4): MOV qword ptr [RBX + 0x10],RAX
000092a8(3): MOV qword ptr [RBX],RBP
000092ab(4): MOV RAX,qword ptr [RBX + 0x8]
000092af(5): MOV RDX,qword ptr [R12 + 0x8]
000092b4(5): JMP 0x00009144
000092c0(4): MOV qword ptr [RBX + 0x8],RDX
000092c4(5): MOV RAX,qword ptr [R12 + 0x8]
000092c9(4): MOV RDI,qword ptr [RBX + 0x10]
000092cd(5): MOV RSI,qword ptr [R12 + 0x10]
000092d2(8): LEA RDX,[RAX*0x8]
000092da(5): CALL 0x00001be0
000092df(5): JMP 0x000091fa
000092e4(5): MOV EAX,0xc
000092e9(5): JMP 0x000091fc
000092f0(2): PUSH R15
000092f2(2): PUSH R14
000092f4(3): MOV R15,RSI
000092f7(2): PUSH R13
000092f9(2): PUSH R12
000092fb(1): PUSH RBP
000092fc(1): PUSH RBX
000092fd(4): LEA RBX,[RDX + RDX*0x2]
00009301(3): MOV RBP,RDX
00009304(4): SUB RSP,0x68
00009308(4): MOV R12,qword ptr [RSI + 0x28]
0000930c(4): SHL RBX,0x3
00009310(9): MOV RAX,qword ptr FS:[0x28]
00009319(5): MOV qword ptr [RSP + 0x58],RAX
0000931e(2): XOR EAX,EAX
00009320(5): MOV qword ptr [RSP + 0x10],RDI
00009325(4): MOV dword ptr [RSP + 0x1c],ECX
00009329(3): ADD R12,RBX
0000932c(5): MOV RAX,qword ptr [R12 + 0x8]
00009331(9): MOV qword ptr [RSP + 0x28],0x0
0000933a(4): LEA RDI,[RAX + 0x1]
0000933e(5): MOV qword ptr [RSP + 0x20],RDI
00009343(4): SHL RDI,0x3
00009347(5): CALL 0x00001c20
0000934c(3): TEST RAX,RAX
0000934f(5): MOV qword ptr [RSP + 0x30],RAX
00009354(6): JZ 0x00009590
0000935a(4): MOV RAX,qword ptr [R15 + 0x30]
0000935e(3): MOV RDX,qword ptr [R15]
00009361(3): MOV R13,RBP
00009364(4): SHL R13,0x4
00009368(9): MOV qword ptr [RAX + RBX*0x1 + 0x8],-0x1
00009371(4): LEA RAX,[RDX + R13*0x1]
00009375(4): MOV R8D,dword ptr [RAX + 0x8]
00009379(7): TEST R8D,0x3ff00
00009380(6): JNZ 0x00009520
00009386(4): TEST byte ptr [RAX + 0x8],0x8
0000938a(6): JZ 0x00009450
00009390(4): MOV RSI,qword ptr [R15 + 0x28]
00009394(4): LEA RAX,[RSI + RBX*0x1]
00009398(5): CMP qword ptr [RAX + 0x8],0x0
0000939d(6): JLE 0x00009450
000093a3(5): LEA RDX,[RSP + 0x20]
000093a8(5): MOV byte ptr [RSP + 0x1b],0x0
000093ad(3): XOR R14D,R14D
000093b0(5): LEA R12,[RSP + 0x40]
000093b5(5): MOV qword ptr [RSP + 0x8],RDX
000093ba(2): JMP 0x000093d6
000093c0(4): MOV RSI,qword ptr [R15 + 0x28]
000093c4(4): ADD R14,0x1
000093c8(4): LEA RAX,[RSI + RBX*0x1]
000093cc(4): CMP qword ptr [RAX + 0x8],R14
000093d0(6): JLE 0x000094d7
000093d6(4): MOV RAX,qword ptr [RAX + 0x10]
000093da(4): MOV RDX,qword ptr [RAX + R14*0x8]
000093de(4): MOV RAX,qword ptr [R15 + 0x30]
000093e2(4): LEA R8,[RDX + RDX*0x2]
000093e6(8): LEA R13,[R8*0x8]
000093ee(3): ADD RAX,R13
000093f1(4): MOV RCX,qword ptr [RAX + 0x8]
000093f5(4): CMP RCX,-0x1
000093f9(6): JZ 0x000094c0
000093ff(3): TEST RCX,RCX
00009402(6): JZ 0x00009578
00009408(4): MOVDQU XMM0,xmmword ptr [RAX]
0000940c(5): MOVAPS xmmword ptr [RSP + 0x40],XMM0
00009411(4): MOV RAX,qword ptr [RAX + 0x10]
00009415(5): MOV qword ptr [RSP + 0x50],RAX
0000941a(5): MOV RDI,qword ptr [RSP + 0x8]
0000941f(3): MOV RSI,R12
00009422(5): CALL 0x00009110
00009427(2): TEST EAX,EAX
00009429(2): JNZ 0x00009496
0000942b(4): MOV RAX,qword ptr [R15 + 0x30]
0000942f(6): CMP qword ptr [RAX + R13*0x1 + 0x8],0x0
00009435(2): JNZ 0x000093c0
00009437(5): MOV RDI,qword ptr [RSP + 0x50]
0000943c(5): CALL 0x000019d0
00009441(5): MOV byte ptr [RSP + 0x1b],0x1
00009446(5): JMP 0x000093c0
00009450(5): LEA RDI,[RSP + 0x20]
00009455(3): MOV RSI,RBP
00009458(5): CALL 0x000076b0
0000945d(2): TEST AL,AL
0000945f(6): JZ 0x00009590
00009465(4): MOV RAX,qword ptr [R15 + 0x30]
00009469(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
0000946f(4): MOVUPS xmmword ptr [RAX + RBX*0x1],XMM0
00009473(5): MOV RDX,qword ptr [RSP + 0x30]
00009478(5): MOV qword ptr [RAX + RBX*0x1 + 0x10],RDX
0000947d(5): MOV RBX,qword ptr [RSP + 0x10]
00009482(5): MOV RAX,qword ptr [RSP + 0x30]
00009487(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
0000948d(3): MOVAPS xmmword ptr [RBX],XMM0
00009490(4): MOV qword ptr [RBX + 0x10],RAX
00009494(2): XOR EAX,EAX
00009496(5): MOV RSI,qword ptr [RSP + 0x58]
0000949b(9): XOR RSI,qword ptr FS:[0x28]
000094a4(6): JNZ 0x0000959a
000094aa(4): ADD RSP,0x68
000094ae(1): POP RBX
000094af(1): POP RBP
000094b0(2): POP R12
000094b2(2): POP R13
000094b4(2): POP R14
000094b6(2): POP R15
000094b8(1): RET
000094c0(4): LEA RAX,[RSI + RBX*0x1]
000094c4(4): ADD R14,0x1
000094c8(5): MOV byte ptr [RSP + 0x1b],0x1
000094cd(4): CMP qword ptr [RAX + 0x8],R14
000094d1(6): JG 0x000093d6
000094d7(5): LEA RDI,[RSP + 0x20]
000094dc(3): MOV RSI,RBP
000094df(5): CALL 0x000076b0
000094e4(2): TEST AL,AL
000094e6(6): JZ 0x00009590
000094ec(5): CMP byte ptr [RSP + 0x1c],0x1
000094f1(4): MOV RAX,qword ptr [R15 + 0x30]
000094f5(4): LEA RDX,[RAX + RBX*0x1]
000094f9(6): JZ 0x00009469
000094ff(5): CMP byte ptr [RSP + 0x1b],0x0
00009504(6): JZ 0x00009469
0000950a(8): MOV qword ptr [RDX + 0x8],0x0
00009512(5): JMP 0x0000947d
00009520(6): CMP qword ptr [R12 + 0x8],0x0
00009526(6): JZ 0x00009450
0000952c(5): MOV RCX,qword ptr [R12 + 0x10]
00009531(3): MOV RCX,qword ptr [RCX]
00009534(4): SHL RCX,0x4
00009538(5): TEST byte ptr [RDX + RCX*0x1 + 0xa],0x4
0000953d(6): JNZ 0x00009386
00009543(4): SHR R8D,0x8
00009547(3): MOV RCX,RBP
0000954a(3): MOV RDX,RBP
0000954d(7): AND R8D,0x3ff
00009554(3): MOV RSI,RBP
00009557(3): MOV RDI,R15
0000955a(5): CALL 0x00008600
0000955f(2): TEST EAX,EAX
00009561(6): JNZ 0x00009496
00009567(3): MOV RAX,qword ptr [R15]
0000956a(3): ADD RAX,R13
0000956d(5): JMP 0x00009386
00009578(3): MOV RSI,R15
0000957b(3): MOV RDI,R12
0000957e(5): CALL 0x000092f0
00009583(2): TEST EAX,EAX
00009585(6): JZ 0x0000941a
0000958b(5): JMP 0x00009496
00009590(5): MOV EAX,0xc
00009595(5): JMP 0x00009496
0000959a(5): CALL 0x00001ad0
0000959f(1): NOP
000095a0(2): PUSH R15
000095a2(2): PUSH R14
000095a4(3): MOV R14,RDI
000095a7(2): PUSH R13
000095a9(2): PUSH R12
000095ab(3): MOV R15,RSI
000095ae(1): PUSH RBP
000095af(1): PUSH RBX
000095b0(3): MOV RBP,RDX
000095b3(2): MOV EBX,ECX
000095b5(4): SUB RSP,0x38
000095b9(4): MOV R12,qword ptr [RSI + 0x8]
000095bd(9): MOV RAX,qword ptr FS:[0x28]
000095c6(5): MOV qword ptr [RSP + 0x28],RAX
000095cb(2): XOR EAX,EAX
000095cd(9): MOV qword ptr [RSP + 0x18],0x0
000095d6(8): LEA RDI,[R12*0x8]
000095de(5): MOV qword ptr [RSP + 0x10],R12
000095e3(5): CALL 0x00001c20
000095e8(3): TEST RAX,RAX
000095eb(5): MOV qword ptr [RSP + 0x20],RAX
000095f0(6): JZ 0x000096ed
000095f6(3): TEST R12,R12
000095f9(6): JLE 0x0000968b
000095ff(5): LEA R12,[RSP + 0x10]
00009604(3): XOR R13D,R13D
00009607(9): NOP word ptr [RAX + RAX*0x1]
00009610(4): MOV RAX,qword ptr [R15 + 0x10]
00009614(4): MOV RDX,qword ptr [RAX + R13*0x8]
00009618(4): MOV RAX,qword ptr [R14 + 0x30]
0000961c(4): LEA RCX,[RDX + RDX*0x2]
00009620(4): LEA RSI,[RAX + RCX*0x8]
00009624(4): MOV R8,qword ptr [RSI + 0x8]
00009628(3): TEST R8,R8
0000962b(6): JLE 0x000096b0
00009631(4): MOV R10,qword ptr [RSI + 0x10]
00009635(3): MOV R9,qword ptr [R14]
00009638(2): XOR ECX,ECX
0000963a(2): JMP 0x00009649
00009640(4): ADD RCX,0x1
00009644(3): CMP R8,RCX
00009647(2): JZ 0x000096b0
00009649(4): MOV RDI,qword ptr [R10 + RCX*0x8]
0000964d(3): MOV RAX,RDI
00009650(4): SHL RAX,0x4
00009654(3): ADD RAX,R9
00009657(5): MOVZX R11D,byte ptr [RAX + 0x8]
0000965c(3): CMP EBX,R11D
0000965f(2): JNZ 0x00009640
00009661(3): CMP RBP,qword ptr [RAX]
00009664(2): JNZ 0x00009640
00009666(4): CMP RDI,-0x1
0000966a(2): JZ 0x000096b0
0000966c(3): MOV R8D,EBX
0000966f(3): MOV RCX,RBP
00009672(3): MOV RSI,R12
00009675(3): MOV RDI,R14
00009678(5): CALL 0x00008c70
0000967d(2): TEST EAX,EAX
0000967f(2): JNZ 0x000096bc
00009681(4): ADD R13,0x1
00009685(4): CMP qword ptr [R15 + 0x8],R13
00009689(2): JG 0x00009610
0000968b(4): MOV RDI,qword ptr [R15 + 0x10]
0000968f(5): CALL 0x000019d0
00009694(5): MOV RAX,qword ptr [RSP + 0x20]
00009699(6): MOVDQA XMM0,xmmword ptr [RSP + 0x10]
0000969f(4): MOV qword ptr [R15 + 0x10],RAX
000096a3(2): XOR EAX,EAX
000096a5(4): MOVAPS xmmword ptr [R15],XMM0
000096a9(2): JMP 0x000096ce
000096b0(3): MOV RDI,R12
000096b3(5): CALL 0x00009110
000096b8(2): TEST EAX,EAX
000096ba(2): JZ 0x00009681
000096bc(5): MOV RDI,qword ptr [RSP + 0x20]
000096c1(4): MOV dword ptr [RSP + 0xc],EAX
000096c5(5): CALL 0x000019d0
000096ca(4): MOV EAX,dword ptr [RSP + 0xc]
000096ce(5): MOV RDX,qword ptr [RSP + 0x28]
000096d3(9): XOR RDX,qword ptr FS:[0x28]
000096dc(2): JNZ 0x000096f4
000096de(4): ADD RSP,0x38
000096e2(1): POP RBX
000096e3(1): POP RBP
000096e4(2): POP R12
000096e6(2): POP R13
000096e8(2): POP R14
000096ea(2): POP R15
000096ec(1): RET
000096ed(5): MOV EAX,0xc
000096f2(2): JMP 0x000096ce
000096f4(5): CALL 0x00001ad0
000096f9(7): NOP dword ptr [RAX]
00009700(4): MOV R9,qword ptr [RSI + 0x8]
00009704(2): XOR EAX,EAX
00009706(3): TEST R9,R9
00009709(6): JZ 0x000097c8
0000970f(4): MOV R11,qword ptr [RDX + 0x8]
00009713(3): TEST R11,R11
00009716(6): JZ 0x000097c8
0000971c(2): PUSH R13
0000971e(2): PUSH R12
00009720(4): LEA RAX,[R9 + R11*0x1]
00009724(1): PUSH RBP
00009725(1): PUSH RBX
00009726(3): MOV R12,RDX
00009729(3): MOV RBX,RDI
0000972c(3): MOV RBP,RSI
0000972f(4): SUB RSP,0x8
00009733(4): MOV RCX,qword ptr [RDI + 0x8]
00009737(3): MOV R13,qword ptr [RDI]
0000973a(4): MOV RDI,qword ptr [RDI + 0x10]
0000973e(4): LEA RDX,[RAX + RCX*0x1]
00009742(3): CMP RDX,R13
00009745(6): JG 0x00009870
0000974b(4): LEA RSI,[RCX + R9*0x1]
0000974f(4): MOV R13,qword ptr [RBP + 0x10]
00009753(5): MOV RDX,qword ptr [R12 + 0x10]
00009758(4): SUB R9,0x1
0000975c(4): SUB RCX,0x1
00009760(3): ADD RSI,R11
00009763(4): SUB R11,0x1
00009767(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000976c(4): MOV R8,qword ptr [RDX + R11*0x8]
00009770(3): CMP RAX,R8
00009773(2): JZ 0x00009786
00009775(2): JGE 0x000097d0
00009777(4): SUB R11,0x1
0000977b(2): JS 0x000097e0
0000977d(4): MOV R8,qword ptr [RDX + R11*0x8]
00009781(3): CMP RAX,R8
00009784(2): JNZ 0x00009775
00009786(3): TEST RCX,RCX
00009789(2): JNS 0x0000979a
0000978b(2): JMP 0x000097a8
00009790(4): SUB RCX,0x1
00009794(4): CMP RCX,-0x1
00009798(2): JZ 0x000097a8
0000979a(4): MOV R10,qword ptr [RDI + RCX*0x8]
0000979e(3): CMP R10,R8
000097a1(2): JG 0x00009790
000097a3(3): CMP R10,R8
000097a6(2): JZ 0x000097b0
000097a8(4): SUB RSI,0x1
000097ac(4): MOV qword ptr [RDI + RSI*0x8],R8
000097b0(4): SUB R9,0x1
000097b4(2): JS 0x000097e0
000097b6(4): SUB R11,0x1
000097ba(2): JS 0x000097e0
000097bc(5): MOV RAX,qword ptr [R13 + R9*0x8]
000097c1(2): JMP 0x0000977d
000097c8(2): RET
000097d0(4): SUB R9,0x1
000097d4(2): JS 0x000097e0
000097d6(5): MOV RAX,qword ptr [R13 + R9*0x8]
000097db(2): JMP 0x00009770
000097e0(4): MOV RCX,qword ptr [RBX + 0x8]
000097e4(4): MOV RDX,qword ptr [RBP + 0x8]
000097e8(3): ADD RDX,RCX
000097eb(5): ADD RDX,qword ptr [R12 + 0x8]
000097f0(4): LEA RAX,[RCX + -0x1]
000097f4(4): LEA R9,[RDX + -0x1]
000097f8(3): SUB RDX,RSI
000097fb(3): ADD RCX,RDX
000097fe(3): TEST RDX,RDX
00009801(4): MOV qword ptr [RBX + 0x8],RCX
00009805(2): JLE 0x0000984d
00009807(3): TEST RAX,RAX
0000980a(2): JS 0x0000984d
0000980c(4): NOP dword ptr [RAX]
00009810(4): MOV R8,qword ptr [RDI + R9*0x8]
00009814(4): MOV RCX,qword ptr [RDI + RAX*0x8]
00009818(4): LEA R10,[RAX + RDX*0x1]
0000981c(4): LEA R10,[RDI + R10*0x8]
00009820(3): CMP R8,RCX
00009823(2): JLE 0x00009840
00009825(4): SUB R9,0x1
00009829(4): SUB RDX,0x1
0000982d(3): MOV qword ptr [R10],R8
00009830(2): JNZ 0x00009810
00009832(2): XOR EDX,EDX
00009834(2): JMP 0x00009851
00009840(4): SUB RAX,0x1
00009844(3): MOV qword ptr [R10],RCX
00009847(4): CMP RAX,-0x1
0000984b(2): JNZ 0x00009810
0000984d(4): SHL RDX,0x3
00009851(4): LEA RSI,[RDI + RSI*0x8]
00009855(5): CALL 0x00001be0
0000985a(2): XOR EAX,EAX
0000985c(4): ADD RSP,0x8
00009860(1): POP RBX
00009861(1): POP RBP
00009862(2): POP R12
00009864(2): POP R13
00009866(1): RET
00009870(3): ADD R13,RAX
00009873(8): LEA RSI,[R13*0x8]
0000987b(5): CALL 0x00001c90
00009880(3): TEST RAX,RAX
00009883(3): MOV RDI,RAX
00009886(2): JZ 0x000098a1
00009888(4): MOV qword ptr [RBX + 0x10],RAX
0000988c(3): MOV qword ptr [RBX],R13
0000988f(4): MOV RCX,qword ptr [RBX + 0x8]
00009893(4): MOV R9,qword ptr [RBP + 0x8]
00009897(5): MOV R11,qword ptr [R12 + 0x8]
0000989c(5): JMP 0x0000974b
000098a1(5): MOV EAX,0xc
000098a6(2): JMP 0x0000985c
000098b0(1): PUSH RBX
000098b1(3): MOV RBX,RDI
000098b4(4): SUB RSP,0x20
000098b8(2): MOV EAX,dword ptr [RSI]
000098ba(3): CMP EAX,0xf
000098bd(2): JZ 0x00009938
000098bf(3): MOVSXD R9,EAX
000098c2(4): LEA R10D,[RAX + 0x1]
000098c6(3): MOV RDI,qword ptr [RDI]
000098c9(3): MOV RAX,R9
000098cc(4): SHL RAX,0x6
000098d0(4): ADD RAX,0x8
000098d4(4): SHL R9,0x6
000098d8(3): MOV dword ptr [RSI],R10D
000098db(3): ADD RAX,RDI
000098de(4): LEA RSI,[RDI + R9*0x1]
000098e2(8): MOV qword ptr [RSI + 0x8],0x0
000098ea(4): MOV qword ptr [RSI + 0x10],RDX
000098ee(4): LEA RDI,[RSI + 0x20]
000098f2(4): MOV qword ptr [RSI + 0x18],RCX
000098f6(5): MOVDQU XMM0,xmmword ptr [R8]
000098fb(4): MOVUPS xmmword ptr [RSI + 0x30],XMM0
000098ff(4): AND byte ptr [RDI + 0x1a],0xf3
00009903(3): TEST RDX,RDX
00009906(8): MOV qword ptr [RSI + 0x20],0x0
0000990e(8): MOV qword ptr [RSI + 0x28],0x0
00009916(8): MOV qword ptr [RSI + 0x40],-0x1
0000991e(2): JZ 0x00009923
00009920(3): MOV qword ptr [RDX],RAX
00009923(3): TEST RCX,RCX
00009926(2): JZ 0x0000992b
00009928(3): MOV qword ptr [RCX],RAX
0000992b(4): ADD RSP,0x20
0000992f(1): POP RBX
00009930(1): RET
00009938(5): MOV EDI,0x3c8
0000993d(5): MOV qword ptr [RSP + 0x18],R8
00009942(5): MOV qword ptr [RSP + 0x10],RCX
00009947(5): MOV qword ptr [RSP + 0x8],RDX
0000994c(4): MOV qword ptr [RSP],RSI
00009950(5): CALL 0x00001c20
00009955(3): TEST RAX,RAX
00009958(3): MOV RDI,RAX
0000995b(2): JZ 0x0000998c
0000995d(3): MOV RAX,qword ptr [RBX]
00009960(6): MOV R10D,0x1
00009966(3): MOV qword ptr [RBX],RDI
00009969(3): XOR R9D,R9D
0000996c(5): MOV R8,qword ptr [RSP + 0x18]
00009971(5): MOV RCX,qword ptr [RSP + 0x10]
00009976(5): MOV RDX,qword ptr [RSP + 0x8]
0000997b(4): MOV RSI,qword ptr [RSP]
0000997f(3): MOV qword ptr [RDI],RAX
00009982(5): MOV EAX,0x8
00009987(5): JMP 0x000098d4
0000998c(2): XOR EAX,EAX
0000998e(2): JMP 0x0000992b
00009990(2): PUSH R14
00009992(2): PUSH R13
00009994(4): LEA R13,[RSI + 0x70]
00009998(2): PUSH R12
0000999a(1): PUSH RBP
0000999b(7): LEA R12,[0x80 + RSI]
000099a2(1): PUSH RBX
000099a3(3): MOV RBX,RDI
000099a6(4): SUB RSP,0x10
000099aa(3): MOV RBP,qword ptr [RDI]
000099ad(9): MOV RAX,qword ptr FS:[0x28]
000099b6(5): MOV qword ptr [RSP + 0x8],RAX
000099bb(2): XOR EAX,EAX
000099bd(3): MOV R14,RSP
000099c0(4): LEA R8,[RBX + 0x28]
000099c4(2): XOR ECX,ECX
000099c6(2): XOR EDX,EDX
000099c8(3): MOV RSI,R12
000099cb(3): MOV RDI,R13
000099ce(5): CALL 0x000098b0
000099d3(3): TEST RAX,RAX
000099d6(3): MOV qword ptr [R14],RAX
000099d9(2): JZ 0x00009a2c
000099db(3): MOV qword ptr [RAX],RBP
000099de(3): MOV RBP,qword ptr [R14]
000099e1(4): OR byte ptr [RBP + 0x32],0x4
000099e5(4): MOV RAX,qword ptr [RBX + 0x8]
000099e9(3): TEST RAX,RAX
000099ec(2): JZ 0x00009a00
000099ee(4): LEA R14,[RBP + 0x8]
000099f2(3): MOV RBX,RAX
000099f5(2): JMP 0x000099c0
00009a00(2): XOR EDX,EDX
00009a02(2): JMP 0x00009a0b
00009a08(3): MOV RBX,RAX
00009a0b(4): MOV RAX,qword ptr [RBX + 0x10]
00009a0f(3): TEST RAX,RAX
00009a12(2): JZ 0x00009a19
00009a14(3): CMP RAX,RDX
00009a17(2): JNZ 0x00009a50
00009a19(3): MOV RAX,qword ptr [RBX]
00009a1c(4): MOV RBP,qword ptr [RBP]
00009a20(3): MOV RDX,RBX
00009a23(3): TEST RAX,RAX
00009a26(2): JNZ 0x00009a08
00009a28(4): MOV RAX,qword ptr [RSP]
00009a2c(5): MOV RCX,qword ptr [RSP + 0x8]
00009a31(9): XOR RCX,qword ptr FS:[0x28]
00009a3a(2): JNZ 0x00009a5c
00009a3c(4): ADD RSP,0x10
00009a40(1): POP RBX
00009a41(1): POP RBP
00009a42(2): POP R12
00009a44(2): POP R13
00009a46(2): POP R14
00009a48(1): RET
00009a50(4): LEA R14,[RBP + 0x10]
00009a54(3): MOV RBX,RAX
00009a57(5): JMP 0x000099c0
00009a5c(5): CALL 0x00001ad0
00009a61(5): NOP dword ptr [RAX + RAX*0x1]
00009a66(10): NOP word ptr CS:[RAX + RAX*0x1]
00009a70(2): PUSH R15
00009a72(2): PUSH R14
00009a74(2): PUSH R13
00009a76(2): PUSH R12
00009a78(3): MOV R13,RDX
00009a7b(1): PUSH RBP
00009a7c(1): PUSH RBX
00009a7d(4): SUB RSP,0x48
00009a81(3): MOV RBX,qword ptr [RSI]
00009a84(4): MOV RBP,qword ptr [RDX + 0x8]
00009a88(9): MOV RAX,qword ptr FS:[0x28]
00009a91(5): MOV qword ptr [RSP + 0x38],RAX
00009a96(2): XOR EAX,EAX
00009a98(4): TEST byte ptr [RSI + 0x38],0x10
00009a9c(5): MOV qword ptr [RSP + 0x18],RDI
00009aa1(6): JZ 0x00009c18
00009aa7(3): TEST RBP,RBP
00009aaa(2): JZ 0x00009b20
00009aac(4): MOV RAX,qword ptr [RDX + 0x28]
00009ab0(4): CMP RAX,0x3f
00009ab4(6): JG 0x00009bed
00009aba(7): MOV RDX,qword ptr [0xa0 + RBX]
00009ac1(4): BT RDX,RAX
00009ac5(6): JNC 0x00009bed
00009acb(4): LEA RAX,[RBX + 0x70]
00009acf(5): LEA R14,[RSP + 0x20]
00009ad4(4): SUB RBX,-0x80
00009ad8(2): XOR ECX,ECX
00009ada(2): XOR EDX,EDX
00009adc(3): MOV RSI,RBX
00009adf(3): MOV R15,RAX
00009ae2(3): MOV R8,R14
00009ae5(3): MOV RDI,RAX
00009ae8(5): MOV byte ptr [RSP + 0x28],0x8
00009aed(5): MOV qword ptr [RSP + 0x8],RAX
00009af2(5): CALL 0x000098b0
00009af7(3): MOV RDI,R15
00009afa(3): MOV R8,R14
00009afd(2): XOR ECX,ECX
00009aff(2): XOR EDX,EDX
00009b01(3): MOV RSI,RBX
00009b04(3): MOV R12,RAX
00009b07(5): MOV byte ptr [RSP + 0x28],0x9
00009b0c(5): CALL 0x000098b0
00009b11(3): MOV R15,RAX
00009b14(5): JMP 0x00009c6d
00009b20(4): LEA RAX,[RBX + 0x70]
00009b24(5): LEA R14,[RSP + 0x20]
00009b29(4): SUB RBX,-0x80
00009b2d(2): XOR ECX,ECX
00009b2f(2): XOR EDX,EDX
00009b31(3): MOV RSI,RBX
00009b34(3): MOV R15,RAX
00009b37(3): MOV R8,R14
00009b3a(3): MOV RDI,RAX
00009b3d(5): MOV byte ptr [RSP + 0x28],0x8
00009b42(5): MOV qword ptr [RSP + 0x8],RAX
00009b47(5): CALL 0x000098b0
00009b4c(3): MOV RDI,R15
00009b4f(3): MOV R8,R14
00009b52(2): XOR ECX,ECX
00009b54(2): XOR EDX,EDX
00009b56(3): MOV RSI,RBX
00009b59(3): MOV R12,RAX
00009b5c(5): MOV byte ptr [RSP + 0x28],0x9
00009b61(5): CALL 0x000098b0
00009b66(3): MOV R11,RAX
00009b69(3): MOV R15,RAX
00009b6c(5): MOV RDI,qword ptr [RSP + 0x8]
00009b71(3): MOV R8,R14
00009b74(3): MOV RCX,R11
00009b77(3): MOV RDX,R12
00009b7a(3): MOV RSI,RBX
00009b7d(5): MOV byte ptr [RSP + 0x28],0x10
00009b82(5): MOV qword ptr [RSP + 0x10],R11
00009b87(5): CALL 0x000098b0
00009b8c(3): TEST RAX,RAX
00009b8f(3): MOV RBP,RAX
00009b92(6): JZ 0x00009c90
00009b98(5): MOV R11,qword ptr [RSP + 0x10]
00009b9d(3): TEST R11,R11
00009ba0(6): JZ 0x00009c90
00009ba6(3): TEST R12,R12
00009ba9(6): JZ 0x00009c90
00009baf(3): TEST R15,R15
00009bb2(6): JZ 0x00009c90
00009bb8(4): MOV RAX,qword ptr [R13 + 0x28]
00009bbc(4): MOV qword ptr [R15 + 0x28],RAX
00009bc0(5): MOV qword ptr [R12 + 0x28],RAX
00009bc5(5): MOVZX EAX,byte ptr [R13 + 0x32]
00009bca(5): MOVZX EDX,byte ptr [R15 + 0x32]
00009bcf(3): AND EAX,0x8
00009bd2(3): AND EDX,0xfffffff7
00009bd5(2): MOV ECX,EAX
00009bd7(2): OR EDX,ECX
00009bd9(4): MOV byte ptr [R15 + 0x32],DL
00009bdd(6): MOVZX EAX,byte ptr [R12 + 0x32]
00009be3(3): AND EAX,0xfffffff7
00009be6(2): OR EAX,ECX
00009be8(5): MOV byte ptr [R12 + 0x32],AL
00009bed(5): MOV RDI,qword ptr [RSP + 0x38]
00009bf2(9): XOR RDI,qword ptr FS:[0x28]
00009bfb(3): MOV RAX,RBP
00009bfe(6): JNZ 0x00009ca2
00009c04(4): ADD RSP,0x48
00009c08(1): POP RBX
00009c09(1): POP RBP
00009c0a(2): POP R12
00009c0c(2): POP R13
00009c0e(2): POP R14
00009c10(2): POP R15
00009c12(1): RET
00009c18(4): LEA RAX,[RBX + 0x70]
00009c1c(5): LEA R14,[RSP + 0x20]
00009c21(4): SUB RBX,-0x80
00009c25(2): XOR ECX,ECX
00009c27(2): XOR EDX,EDX
00009c29(3): MOV RSI,RBX
00009c2c(3): MOV R15,RAX
00009c2f(3): MOV R8,R14
00009c32(3): MOV RDI,RAX
00009c35(5): MOV byte ptr [RSP + 0x28],0x8
00009c3a(5): MOV qword ptr [RSP + 0x8],RAX
00009c3f(5): CALL 0x000098b0
00009c44(2): XOR ECX,ECX
00009c46(2): XOR EDX,EDX
00009c48(3): MOV RDI,R15
00009c4b(3): MOV R8,R14
00009c4e(3): MOV RSI,RBX
00009c51(3): MOV R12,RAX
00009c54(5): MOV byte ptr [RSP + 0x28],0x9
00009c59(5): CALL 0x000098b0
00009c5e(3): TEST RBP,RBP
00009c61(3): MOV R15,RAX
00009c64(3): MOV R11,RAX
00009c67(6): JZ 0x00009b6c
00009c6d(5): MOV RDI,qword ptr [RSP + 0x8]
00009c72(3): MOV R8,R14
00009c75(3): MOV RCX,R15
00009c78(3): MOV RDX,RBP
00009c7b(3): MOV RSI,RBX
00009c7e(5): MOV byte ptr [RSP + 0x28],0x10
00009c83(5): CALL 0x000098b0
00009c88(3): MOV R11,RAX
00009c8b(5): JMP 0x00009b6c
00009c90(5): MOV RAX,qword ptr [RSP + 0x18]
00009c95(2): XOR EBP,EBP
00009c97(6): MOV dword ptr [RAX],0xc
00009c9d(5): JMP 0x00009bed
00009ca2(5): CALL 0x00001ad0
00009ca7(9): NOP word ptr [RAX + RAX*0x1]
00009cb0(1): PUSH RBP
00009cb1(1): PUSH RBX
00009cb2(3): MOV RBP,RDI
00009cb5(3): MOV RBX,RSI
00009cb8(4): SUB RSP,0x18
00009cbc(4): MOV RDX,qword ptr [RSI + 0x8]
00009cc0(9): MOV RAX,qword ptr FS:[0x28]
00009cc9(5): MOV qword ptr [RSP + 0x8],RAX
00009cce(2): XOR EAX,EAX
00009cd0(8): MOV dword ptr [RSP + 0x4],0x0
00009cd8(3): TEST RDX,RDX
00009cdb(2): JZ 0x00009ce3
00009cdd(4): CMP byte ptr [RDX + 0x30],0x11
00009ce1(2): JZ 0x00009d30
00009ce3(4): MOV RDX,qword ptr [RBX + 0x10]
00009ce7(3): TEST RDX,RDX
00009cea(2): JZ 0x00009cf2
00009cec(4): CMP byte ptr [RDX + 0x30],0x11
00009cf0(2): JZ 0x00009d10
00009cf2(5): MOV RCX,qword ptr [RSP + 0x8]
00009cf7(9): XOR RCX,qword ptr FS:[0x28]
00009d00(4): MOV EAX,dword ptr [RSP + 0x4]
00009d04(2): JNZ 0x00009d4b
00009d06(4): ADD RSP,0x18
00009d0a(1): POP RBX
00009d0b(1): POP RBP
00009d0c(1): RET
00009d10(5): LEA RDI,[RSP + 0x4]
00009d15(3): MOV RSI,RBP
00009d18(5): CALL 0x00009a70
00009d1d(3): TEST RAX,RAX
00009d20(4): MOV qword ptr [RBX + 0x10],RAX
00009d24(2): JZ 0x00009cf2
00009d26(3): MOV qword ptr [RAX],RBX
00009d29(2): JMP 0x00009cf2
00009d30(5): LEA RDI,[RSP + 0x4]
00009d35(3): MOV RSI,RBP
00009d38(5): CALL 0x00009a70
00009d3d(3): TEST RAX,RAX
00009d40(4): MOV qword ptr [RBX + 0x8],RAX
00009d44(2): JZ 0x00009ce3
00009d46(3): MOV qword ptr [RAX],RBX
00009d49(2): JMP 0x00009ce3
00009d4b(5): CALL 0x00001ad0
00009d50(2): PUSH R12
00009d52(1): PUSH RBP
00009d53(1): PUSH RBX
00009d54(4): MOV RAX,qword ptr [RSI + 0x8]
00009d58(4): MOV qword ptr [RDI + 0x8],RAX
00009d5c(4): MOV R12,qword ptr [RSI + 0x8]
00009d60(3): TEST R12,R12
00009d63(2): JLE 0x00009da0
00009d65(3): MOV RBX,RDI
00009d68(3): MOV qword ptr [RDI],RAX
00009d6b(8): LEA RDI,[RAX*0x8]
00009d73(3): MOV RBP,RSI
00009d76(5): CALL 0x00001c20
00009d7b(3): TEST RAX,RAX
00009d7e(4): MOV qword ptr [RBX + 0x10],RAX
00009d82(2): JZ 0x00009dc0
00009d84(4): MOV RSI,qword ptr [RBP + 0x10]
00009d88(8): LEA RDX,[R12*0x8]
00009d90(3): MOV RDI,RAX
00009d93(5): CALL 0x00001be0
00009d98(2): XOR EAX,EAX
00009d9a(1): POP RBX
00009d9b(1): POP RBP
00009d9c(2): POP R12
00009d9e(1): RET
00009da0(4): PXOR XMM0,XMM0
00009da4(8): MOV qword ptr [RDI + 0x10],0x0
00009dac(2): XOR EAX,EAX
00009dae(3): MOVUPS xmmword ptr [RDI],XMM0
00009db1(1): POP RBX
00009db2(1): POP RBP
00009db3(2): POP R12
00009db5(1): RET
00009dc0(8): MOV qword ptr [RBX + 0x8],0x0
00009dc8(7): MOV qword ptr [RBX],0x0
00009dcf(5): MOV EAX,0xc
00009dd4(2): JMP 0x00009d9a
00009de0(3): TEST RSI,RSI
00009de3(2): PUSH R14
00009de5(2): PUSH R13
00009de7(2): PUSH R12
00009de9(1): PUSH RBP
00009dea(1): PUSH RBX
00009deb(6): JZ 0x00009e95
00009df1(3): TEST RDX,RDX
00009df4(4): MOV R13,qword ptr [RSI + 0x8]
00009df8(6): JZ 0x00009e90
00009dfe(3): TEST R13,R13
00009e01(6): JLE 0x00009e90
00009e07(4): MOV R14,qword ptr [RDX + 0x8]
00009e0b(3): TEST R14,R14
00009e0e(6): JLE 0x00009ec3
00009e14(3): MOV R12,RDI
00009e17(5): LEA RDI,[R13 + R14*0x1]
00009e1c(3): MOV RBX,RDX
00009e1f(3): MOV RBP,RSI
00009e22(4): MOV qword ptr [R12],RDI
00009e26(4): SHL RDI,0x3
00009e2a(5): CALL 0x00001c20
00009e2f(3): TEST RAX,RAX
00009e32(5): MOV qword ptr [R12 + 0x10],RAX
00009e37(6): JZ 0x00009f28
00009e3d(4): MOV R9,qword ptr [RBX + 0x10]
00009e41(4): MOV R8,qword ptr [RBP + 0x10]
00009e45(2): XOR EBX,EBX
00009e47(2): XOR ECX,ECX
00009e49(2): XOR ESI,ESI
00009e4b(2): JMP 0x00009e6e
00009e50(4): SETZ DIL
00009e54(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDX
00009e59(4): ADD RSI,0x1
00009e5d(4): MOVZX EDI,DIL
00009e61(3): ADD RCX,RDI
00009e64(3): CMP R13,RSI
00009e67(2): JLE 0x00009ed0
00009e69(3): CMP R14,RCX
00009e6c(2): JLE 0x00009ee8
00009e6e(4): MOV RDX,qword ptr [R8 + RSI*0x8]
00009e72(4): MOV RDI,qword ptr [R9 + RCX*0x8]
00009e76(4): ADD RBX,0x1
00009e7a(3): CMP RDX,RDI
00009e7d(2): JLE 0x00009e50
00009e7f(4): ADD RCX,0x1
00009e83(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDI
00009e88(2): JMP 0x00009e64
00009e90(3): TEST R13,R13
00009e93(2): JG 0x00009ec3
00009e95(3): TEST RDX,RDX
00009e98(2): JZ 0x00009ea1
00009e9a(5): CMP qword ptr [RDX + 0x8],0x0
00009e9f(2): JG 0x00009ec0
00009ea1(4): PXOR XMM0,XMM0
00009ea5(8): MOV qword ptr [RDI + 0x10],0x0
00009ead(2): XOR EAX,EAX
00009eaf(3): MOVAPS xmmword ptr [RDI],XMM0
00009eb2(1): POP RBX
00009eb3(1): POP RBP
00009eb4(2): POP R12
00009eb6(2): POP R13
00009eb8(2): POP R14
00009eba(1): RET
00009ec0(3): MOV RSI,RDX
00009ec3(1): POP RBX
00009ec4(1): POP RBP
00009ec5(2): POP R12
00009ec7(2): POP R13
00009ec9(2): POP R14
00009ecb(5): JMP 0x00009d50
00009ed0(3): CMP R14,RCX
00009ed3(2): JG 0x00009f08
00009ed5(5): MOV qword ptr [R12 + 0x8],RBX
00009eda(2): XOR EAX,EAX
00009edc(1): POP RBX
00009edd(1): POP RBP
00009ede(2): POP R12
00009ee0(2): POP R13
00009ee2(2): POP R14
00009ee4(1): RET
00009ee8(3): SUB R13,RSI
00009eeb(4): LEA RDI,[RAX + RBX*0x8]
00009eef(4): LEA RSI,[R8 + RSI*0x8]
00009ef3(8): LEA RDX,[R13*0x8]
00009efb(3): ADD RBX,R13
00009efe(5): CALL 0x00001be0
00009f03(2): JMP 0x00009ed5
00009f08(3): SUB R14,RCX
00009f0b(4): LEA RDI,[RAX + RBX*0x8]
00009f0f(4): LEA RSI,[R9 + RCX*0x8]
00009f13(8): LEA RDX,[R14*0x8]
00009f1b(3): ADD RBX,R14
00009f1e(5): CALL 0x00001be0
00009f23(2): JMP 0x00009ed5
00009f28(5): MOV EAX,0xc
00009f2d(5): JMP 0x00009eb2
00009f40(2): PUSH R15
00009f42(2): PUSH R14
00009f44(2): PUSH R13
00009f46(2): PUSH R12
00009f48(1): PUSH RBP
00009f49(1): PUSH RBX
00009f4a(4): SUB RSP,0x28
00009f4e(4): MOV R10,qword ptr [RDX + 0x8]
00009f52(3): TEST R10,R10
00009f55(6): JZ 0x0000a1df
00009f5b(3): MOV R8D,ECX
00009f5e(3): TEST R10,R10
00009f61(4): LEA R12,[R8 + R10*0x1]
00009f65(2): JLE 0x00009f7c
00009f67(4): MOV RAX,qword ptr [RDX + 0x10]
00009f6b(4): LEA R10,[RAX + R10*0x8]
00009f6f(1): NOP
00009f70(3): ADD R12,qword ptr [RAX]
00009f73(4): ADD RAX,0x8
00009f77(3): CMP R10,RAX
00009f7a(2): JNZ 0x00009f70
00009f7c(7): MOV RAX,qword ptr [0x88 + RSI]
00009f83(3): MOV RBP,RDX
00009f86(4): MOV dword ptr [RSP + 0x4],ECX
00009f8a(3): MOV R13,RSI
00009f8d(5): MOV qword ptr [RSP + 0x18],RDI
00009f92(3): AND RAX,R12
00009f95(4): LEA RDX,[RAX + RAX*0x2]
00009f99(4): MOV RAX,qword ptr [RSI + 0x40]
00009f9d(4): LEA RAX,[RAX + RDX*0x8]
00009fa1(3): MOV R11,qword ptr [RAX]
00009fa4(3): TEST R11,R11
00009fa7(2): JLE 0x0000a000
00009fa9(4): MOV RBX,qword ptr [RAX + 0x10]
00009fad(3): XOR R10D,R10D
00009fb0(3): MOV R9D,ECX
00009fb3(2): JMP 0x00009fc1
00009fb8(4): ADD R10,0x1
00009fbc(3): CMP R10,R11
00009fbf(2): JZ 0x0000a000
00009fc1(4): MOV R14,qword ptr [RBX + R10*0x8]
00009fc5(3): CMP qword ptr [R14],R12
00009fc8(2): JNZ 0x00009fb8
00009fca(5): MOVZX EAX,byte ptr [R14 + 0x68]
00009fcf(3): AND EAX,0xf
00009fd2(3): CMP EAX,R9D
00009fd5(2): JNZ 0x00009fb8
00009fd7(4): MOV RDI,qword ptr [R14 + 0x50]
00009fdb(3): TEST RDI,RDI
00009fde(2): JZ 0x00009fb8
00009fe0(3): MOV RSI,RBP
00009fe3(5): CALL 0x00008b90
00009fe8(2): TEST AL,AL
00009fea(2): JZ 0x00009fb8
00009fec(4): ADD RSP,0x28
00009ff0(3): MOV RAX,R14
00009ff3(1): POP RBX
00009ff4(1): POP RBP
00009ff5(2): POP R12
00009ff7(2): POP R13
00009ff9(2): POP R14
00009ffb(2): POP R15
00009ffd(1): RET
0000a000(5): MOV ESI,0x1
0000a005(5): MOV EDI,0x70
0000a00a(5): CALL 0x00001bc0
0000a00f(3): TEST RAX,RAX
0000a012(3): MOV R14,RAX
0000a015(6): JZ 0x0000a156
0000a01b(4): LEA RAX,[RAX + 0x8]
0000a01f(3): MOV RSI,RBP
0000a022(3): MOV RDI,RAX
0000a025(3): MOV RBX,RAX
0000a028(5): CALL 0x00009d50
0000a02d(2): TEST EAX,EAX
0000a02f(6): JNZ 0x0000a1ed
0000a035(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000a03a(5): MOVZX EDX,byte ptr [RSP + 0x4]
0000a03f(4): MOV qword ptr [R14 + 0x50],RBX
0000a043(3): AND EDX,0xf
0000a046(3): AND EAX,0xfffffff0
0000a049(2): OR EAX,EDX
0000a04b(5): CMP qword ptr [RBP + 0x8],0x0
0000a050(4): MOV byte ptr [R14 + 0x68],AL
0000a054(6): JLE 0x0000a138
0000a05a(4): LEA RCX,[R14 + 0x18]
0000a05e(3): XOR R15D,R15D
0000a061(5): MOV qword ptr [RSP + 0x10],R12
0000a066(3): XOR R10D,R10D
0000a069(3): MOV R12,R13
0000a06c(3): MOV R13,R15
0000a06f(5): MOV qword ptr [RSP + 0x8],RCX
0000a074(3): MOV R15,RBX
0000a077(9): NOP word ptr [RAX + RAX*0x1]
0000a080(4): MOV RAX,qword ptr [RBP + 0x10]
0000a084(4): MOV RAX,qword ptr [RAX + R13*0x8]
0000a088(4): SHL RAX,0x4
0000a08c(4): ADD RAX,qword ptr [R12]
0000a090(4): MOVZX ESI,byte ptr [RAX + 0x8]
0000a094(3): MOV EBX,dword ptr [RAX + 0x8]
0000a097(3): SHR EBX,0x8
0000a09a(5): AND BX,0x3ff
0000a09f(3): CMP ESI,0x1
0000a0a2(3): MOVZX EDI,BX
0000a0a5(2): JNZ 0x0000a0ab
0000a0a7(2): TEST EDI,EDI
0000a0a9(2): JZ 0x0000a122
0000a0ab(5): MOVZX EDX,byte ptr [R14 + 0x68]
0000a0b0(4): MOVZX EAX,byte ptr [RAX + 0xa]
0000a0b4(3): MOV R9D,EDX
0000a0b7(3): SHR AL,0x4
0000a0ba(3): AND EDX,0xffffffdf
0000a0bd(4): SHR R9B,0x5
0000a0c1(3): OR EAX,R9D
0000a0c4(3): AND EAX,0x1
0000a0c7(3): SHL EAX,0x5
0000a0ca(2): OR EAX,EDX
0000a0cc(3): CMP ESI,0x2
0000a0cf(4): MOV byte ptr [R14 + 0x68],AL
0000a0d3(6): JZ 0x0000a1a0
0000a0d9(3): CMP ESI,0x4
0000a0dc(2): JNZ 0x0000a0e5
0000a0de(3): OR EAX,0x40
0000a0e1(4): MOV byte ptr [R14 + 0x68],AL
0000a0e5(2): TEST EDI,EDI
0000a0e7(2): JZ 0x0000a122
0000a0e9(4): CMP R15,qword ptr [R14 + 0x50]
0000a0ed(6): JZ 0x0000a1b0
0000a0f3(3): TEST BL,0x1
0000a0f6(2): JZ 0x0000a170
0000a0f8(5): TEST byte ptr [RSP + 0x4],0x1
0000a0fd(2): JZ 0x0000a108
0000a0ff(3): TEST BL,0x2
0000a102(2): JZ 0x0000a17c
0000a104(4): NOP dword ptr [RAX]
0000a108(3): MOV RDX,R13
0000a10b(3): SUB RDX,R10
0000a10e(2): JS 0x0000a11e
0000a110(5): MOV RSI,qword ptr [RSP + 0x8]
0000a115(4): LEA RDI,[R14 + 0x10]
0000a119(5): CALL 0x00008d70
0000a11e(4): ADD R10,0x1
0000a122(4): ADD R13,0x1
0000a126(4): CMP R13,qword ptr [RBP + 0x8]
0000a12a(6): JL 0x0000a080
0000a130(3): MOV R13,R12
0000a133(5): MOV R12,qword ptr [RSP + 0x10]
0000a138(3): MOV RDX,R12
0000a13b(3): MOV RSI,R14
0000a13e(3): MOV RDI,R13
0000a141(5): CALL 0x000077e0
0000a146(2): TEST EAX,EAX
0000a148(6): JZ 0x00009fec
0000a14e(3): MOV RDI,R14
0000a151(5): CALL 0x00008880
0000a156(5): MOV RAX,qword ptr [RSP + 0x18]
0000a15b(3): XOR R14D,R14D
0000a15e(6): MOV dword ptr [RAX],0xc
0000a164(5): JMP 0x00009fec
0000a170(3): TEST BL,0x2
0000a173(2): JZ 0x0000a17c
0000a175(5): TEST byte ptr [RSP + 0x4],0x1
0000a17a(2): JNZ 0x0000a108
0000a17c(3): TEST BL,0x10
0000a17f(2): JZ 0x0000a188
0000a181(5): TEST byte ptr [RSP + 0x4],0x2
0000a186(2): JZ 0x0000a108
0000a188(3): AND EBX,0x40
0000a18b(2): JZ 0x0000a122
0000a18d(5): TEST byte ptr [RSP + 0x4],0x4
0000a192(2): JNZ 0x0000a122
0000a194(5): JMP 0x0000a108
0000a1a0(3): OR EAX,0x10
0000a1a3(4): MOV byte ptr [R14 + 0x68],AL
0000a1a7(5): JMP 0x0000a0e5
0000a1b0(5): MOV EDI,0x18
0000a1b5(5): CALL 0x00001c20
0000a1ba(3): TEST RAX,RAX
0000a1bd(4): MOV qword ptr [R14 + 0x50],RAX
0000a1c1(2): JZ 0x0000a14e
0000a1c3(3): MOV RSI,RBP
0000a1c6(3): MOV RDI,RAX
0000a1c9(5): CALL 0x00009d50
0000a1ce(2): TEST EAX,EAX
0000a1d0(2): JNZ 0x0000a156
0000a1d2(5): OR byte ptr [R14 + 0x68],0x80
0000a1d7(3): XOR R10D,R10D
0000a1da(5): JMP 0x0000a0f3
0000a1df(6): MOV dword ptr [RDI],0x0
0000a1e5(3): XOR R14D,R14D
0000a1e8(5): JMP 0x00009fec
0000a1ed(3): MOV RDI,R14
0000a1f0(5): CALL 0x000019d0
0000a1f5(5): JMP 0x0000a156
0000a200(2): PUSH R15
0000a202(2): PUSH R14
0000a204(2): PUSH R13
0000a206(2): PUSH R12
0000a208(1): PUSH RBP
0000a209(1): PUSH RBX
0000a20a(4): SUB RSP,0x8
0000a20e(4): MOV RBP,qword ptr [RDX + 0x8]
0000a212(3): TEST RBP,RBP
0000a215(6): JZ 0x0000a3f0
0000a21b(3): TEST RBP,RBP
0000a21e(2): JLE 0x0000a23c
0000a220(4): MOV RAX,qword ptr [RDX + 0x10]
0000a224(4): LEA RCX,[RAX + RBP*0x8]
0000a228(8): NOP dword ptr [RAX + RAX*0x1]
0000a230(3): ADD RBP,qword ptr [RAX]
0000a233(4): ADD RAX,0x8
0000a237(3): CMP RCX,RAX
0000a23a(2): JNZ 0x0000a230
0000a23c(7): MOV RAX,qword ptr [0x88 + RSI]
0000a243(3): MOV R14,RDX
0000a246(3): MOV R12,RSI
0000a249(3): MOV R13,RDI
0000a24c(3): AND RAX,RBP
0000a24f(4): LEA RDX,[RAX + RAX*0x2]
0000a253(4): MOV RAX,qword ptr [RSI + 0x40]
0000a257(4): LEA RAX,[RAX + RDX*0x8]
0000a25b(3): MOV R10,qword ptr [RAX]
0000a25e(3): TEST R10,R10
0000a261(2): JLE 0x0000a296
0000a263(4): MOV R11,qword ptr [RAX + 0x10]
0000a267(3): XOR R9D,R9D
0000a26a(6): NOP word ptr [RAX + RAX*0x1]
0000a270(4): MOV RBX,qword ptr [R11 + R9*0x8]
0000a274(3): CMP qword ptr [RBX],RBP
0000a277(2): JNZ 0x0000a28d
0000a279(4): LEA RDI,[RBX + 0x8]
0000a27d(3): MOV RSI,R14
0000a280(5): CALL 0x00008b90
0000a285(2): TEST AL,AL
0000a287(6): JNZ 0x0000a38f
0000a28d(4): ADD R9,0x1
0000a291(3): CMP R10,R9
0000a294(2): JNZ 0x0000a270
0000a296(5): MOV ESI,0x1
0000a29b(5): MOV EDI,0x70
0000a2a0(5): CALL 0x00001bc0
0000a2a5(3): TEST RAX,RAX
0000a2a8(3): MOV RBX,RAX
0000a2ab(6): JZ 0x0000a3d8
0000a2b1(4): LEA R15,[RAX + 0x8]
0000a2b5(3): MOV RSI,R14
0000a2b8(3): MOV RDI,R15
0000a2bb(5): CALL 0x00009d50
0000a2c0(2): TEST EAX,EAX
0000a2c2(6): JNZ 0x0000a3d0
0000a2c8(4): MOV RAX,qword ptr [R14 + 0x8]
0000a2cc(4): MOV qword ptr [RBX + 0x50],R15
0000a2d0(3): TEST RAX,RAX
0000a2d3(6): JLE 0x0000a37d
0000a2d9(4): MOV RSI,qword ptr [R14 + 0x10]
0000a2dd(4): MOV R8,qword ptr [R12]
0000a2e1(4): LEA R9,[RSI + RAX*0x8]
0000a2e5(2): JMP 0x0000a334
0000a2f0(4): MOVZX ECX,byte ptr [RBX + 0x68]
0000a2f4(4): MOVZX EDX,byte ptr [RAX + 0xa]
0000a2f8(3): MOV R10D,ECX
0000a2fb(3): SHR DL,0x4
0000a2fe(3): AND ECX,0xffffffdf
0000a301(4): SHR R10B,0x5
0000a305(3): OR EDX,R10D
0000a308(3): AND EDX,0x1
0000a30b(3): SHL EDX,0x5
0000a30e(2): OR EDX,ECX
0000a310(3): CMP EDI,0x2
0000a313(3): MOV byte ptr [RBX + 0x68],DL
0000a316(6): JZ 0x0000a3a8
0000a31c(3): CMP EDI,0x4
0000a31f(6): JNZ 0x0000a3b8
0000a325(3): OR EDX,0x40
0000a328(3): MOV byte ptr [RBX + 0x68],DL
0000a32b(4): ADD RSI,0x8
0000a32f(3): CMP R9,RSI
0000a332(2): JZ 0x0000a37d
0000a334(3): MOV RAX,qword ptr [RSI]
0000a337(4): SHL RAX,0x4
0000a33b(3): ADD RAX,R8
0000a33e(4): MOVZX EDI,byte ptr [RAX + 0x8]
0000a342(3): CMP EDI,0x1
0000a345(2): JNZ 0x0000a2f0
0000a347(7): TEST dword ptr [RAX + 0x8],0x3ff00
0000a34e(2): JZ 0x0000a32b
0000a350(4): MOVZX EDX,byte ptr [RBX + 0x68]
0000a354(4): MOVZX EAX,byte ptr [RAX + 0xa]
0000a358(2): MOV ECX,EDX
0000a35a(3): SHR AL,0x4
0000a35d(3): AND EDX,0xffffffdf
0000a360(3): SHR CL,0x5
0000a363(2): OR EAX,ECX
0000a365(3): AND EAX,0x1
0000a368(3): SHL EAX,0x5
0000a36b(2): OR EAX,EDX
0000a36d(3): MOV byte ptr [RBX + 0x68],AL
0000a370(4): ADD RSI,0x8
0000a374(4): OR byte ptr [RBX + 0x68],0x80
0000a378(3): CMP R9,RSI
0000a37b(2): JNZ 0x0000a334
0000a37d(3): MOV RDX,RBP
0000a380(3): MOV RSI,RBX
0000a383(3): MOV RDI,R12
0000a386(5): CALL 0x000077e0
0000a38b(2): TEST EAX,EAX
0000a38d(2): JNZ 0x0000a3e4
0000a38f(4): ADD RSP,0x8
0000a393(3): MOV RAX,RBX
0000a396(1): POP RBX
0000a397(1): POP RBP
0000a398(2): POP R12
0000a39a(2): POP R13
0000a39c(2): POP R14
0000a39e(2): POP R15
0000a3a0(1): RET
0000a3a8(3): OR EDX,0x10
0000a3ab(3): MOV byte ptr [RBX + 0x68],DL
0000a3ae(5): JMP 0x0000a32b
0000a3b8(3): CMP EDI,0xc
0000a3bb(2): JZ 0x0000a370
0000a3bd(7): TEST dword ptr [RAX + 0x8],0x3ff00
0000a3c4(6): JZ 0x0000a32b
0000a3ca(2): JMP 0x0000a370
0000a3d0(3): MOV RDI,RBX
0000a3d3(5): CALL 0x000019d0
0000a3d8(8): MOV dword ptr [R13],0xc
0000a3e0(2): XOR EBX,EBX
0000a3e2(2): JMP 0x0000a38f
0000a3e4(3): MOV RDI,RBX
0000a3e7(5): CALL 0x00008880
0000a3ec(2): JMP 0x0000a3d8
0000a3f0(6): MOV dword ptr [RDI],0x0
0000a3f6(2): XOR EBX,EBX
0000a3f8(2): JMP 0x0000a38f
0000a400(2): PUSH R15
0000a402(2): PUSH R14
0000a404(2): PUSH R13
0000a406(2): PUSH R12
0000a408(1): PUSH RBP
0000a409(1): PUSH RBX
0000a40a(4): SUB RSP,0x48
0000a40e(9): MOV RAX,qword ptr FS:[0x28]
0000a417(5): MOV qword ptr [RSP + 0x38],RAX
0000a41c(2): XOR EAX,EAX
0000a41e(3): TEST RCX,RCX
0000a421(6): JLE 0x0000a4b6
0000a427(5): LEA RAX,[RSP + 0x1c]
0000a42c(3): MOV R14,RDI
0000a42f(3): MOV RBX,RSI
0000a432(3): MOV R12,RDX
0000a435(3): MOV RBP,RCX
0000a438(3): XOR R15D,R15D
0000a43b(5): LEA R13,[RSP + 0x20]
0000a440(5): MOV qword ptr [RSP + 0x8],RAX
0000a445(2): JMP 0x0000a49c
0000a450(3): TEST RDX,RDX
0000a453(2): JZ 0x0000a493
0000a455(4): ADD RDX,0x8
0000a459(4): ADD RSI,0x8
0000a45d(3): MOV RDI,R13
0000a460(5): CALL 0x00009de0
0000a465(2): TEST EAX,EAX
0000a467(4): MOV dword ptr [RSP + 0x1c],EAX
0000a46b(2): JNZ 0x0000a4b8
0000a46d(5): MOV RDI,qword ptr [RSP + 0x8]
0000a472(3): MOV RDX,R13
0000a475(3): MOV RSI,R14
0000a478(5): CALL 0x0000a200
0000a47d(5): MOV RDI,qword ptr [RSP + 0x30]
0000a482(4): MOV qword ptr [RBX + R15*0x8],RAX
0000a486(5): CALL 0x000019d0
0000a48b(4): MOV EAX,dword ptr [RSP + 0x1c]
0000a48f(2): TEST EAX,EAX
0000a491(2): JNZ 0x0000a4b8
0000a493(4): ADD R15,0x1
0000a497(3): CMP RBP,R15
0000a49a(2): JZ 0x0000a4b6
0000a49c(4): MOV RSI,qword ptr [RBX + R15*0x8]
0000a4a0(4): MOV RDX,qword ptr [R12 + R15*0x8]
0000a4a4(3): TEST RSI,RSI
0000a4a7(2): JNZ 0x0000a450
0000a4a9(4): MOV qword ptr [RBX + R15*0x8],RDX
0000a4ad(4): ADD R15,0x1
0000a4b1(3): CMP RBP,R15
0000a4b4(2): JNZ 0x0000a49c
0000a4b6(2): XOR EAX,EAX
0000a4b8(5): MOV RCX,qword ptr [RSP + 0x38]
0000a4bd(9): XOR RCX,qword ptr FS:[0x28]
0000a4c6(2): JNZ 0x0000a4d7
0000a4c8(4): ADD RSP,0x48
0000a4cc(1): POP RBX
0000a4cd(1): POP RBP
0000a4ce(2): POP R12
0000a4d0(2): POP R13
0000a4d2(2): POP R14
0000a4d4(2): POP R15
0000a4d6(1): RET
0000a4d7(5): CALL 0x00001ad0
0000a4dc(4): NOP dword ptr [RAX]
0000a4e0(2): PUSH R15
0000a4e2(2): PUSH R14
0000a4e4(2): PUSH R13
0000a4e6(2): PUSH R12
0000a4e8(3): MOV R12,RDX
0000a4eb(1): PUSH RBP
0000a4ec(1): PUSH RBX
0000a4ed(3): MOV RBX,RDI
0000a4f0(3): MOV RBP,RSI
0000a4f3(2): XOR ESI,ESI
0000a4f5(4): SUB RSP,0x78
0000a4f9(7): MOV RDI,qword ptr [0xc8 + RDI]
0000a500(9): MOV RAX,qword ptr FS:[0x28]
0000a509(5): MOV qword ptr [RSP + 0x68],RAX
0000a50e(2): XOR EAX,EAX
0000a510(5): MOV qword ptr [RSP + 0x20],RCX
0000a515(5): MOV dword ptr [RSP + 0x2c],R8D
0000a51a(3): MOV RDX,RDI
0000a51d(3): CMP RSI,RDX
0000a520(2): JGE 0x0000a577
0000a522(4): LEA RAX,[RSI + RDX*0x1]
0000a526(7): MOV R8,qword ptr [0xd8 + RBX]
0000a52d(3): MOV RCX,RAX
0000a530(4): SHR RCX,0x3f
0000a534(3): ADD RCX,RAX
0000a537(3): SAR RCX,1
0000a53a(4): LEA RAX,[RCX + RCX*0x4]
0000a53e(5): CMP R12,qword ptr [R8 + RAX*0x8 + 0x8]
0000a543(2): JLE 0x0000a572
0000a545(5): JMP 0x0000a5c8
0000a550(4): LEA RDX,[RSI + RCX*0x1]
0000a554(3): MOV RAX,RDX
0000a557(4): SHR RAX,0x3f
0000a55b(3): ADD RAX,RDX
0000a55e(3): SAR RAX,1
0000a561(4): LEA RDX,[RAX + RAX*0x4]
0000a565(3): MOV R9,RAX
0000a568(5): CMP R12,qword ptr [R8 + RDX*0x8 + 0x8]
0000a56d(2): JG 0x0000a5d0
0000a56f(3): MOV RCX,RAX
0000a572(3): CMP RSI,RCX
0000a575(2): JL 0x0000a550
0000a577(3): CMP RDI,RSI
0000a57a(2): JLE 0x0000a59d
0000a57c(7): MOV RCX,qword ptr [0xd8 + RBX]
0000a583(4): LEA RAX,[RSI + RSI*0x4]
0000a587(4): SHL RAX,0x3
0000a58b(5): CMP qword ptr [RCX + RAX*0x1 + 0x8],R12
0000a590(5): MOV qword ptr [RSP + 0x30],RAX
0000a595(2): JNZ 0x0000a59d
0000a597(4): CMP RSI,-0x1
0000a59b(2): JNZ 0x0000a5e0
0000a59d(2): XOR EAX,EAX
0000a59f(5): MOV RBX,qword ptr [RSP + 0x68]
0000a5a4(9): XOR RBX,qword ptr FS:[0x28]
0000a5ad(6): JNZ 0x0000a879
0000a5b3(4): ADD RSP,0x78
0000a5b7(1): POP RBX
0000a5b8(1): POP RBP
0000a5b9(2): POP R12
0000a5bb(2): POP R13
0000a5bd(2): POP R14
0000a5bf(2): POP R15
0000a5c1(1): RET
0000a5c8(3): MOV R9,RCX
0000a5cb(3): MOV RCX,RDX
0000a5ce(2): NOP
0000a5d0(4): LEA RSI,[R9 + 0x1]
0000a5d4(3): MOV RDX,RCX
0000a5d7(5): JMP 0x0000a51d
0000a5e0(4): LEA RAX,[RBP + 0x10]
0000a5e4(7): MOV R13,qword ptr [0x98 + RBX]
0000a5eb(4): MOV qword ptr [RSP],RAX
0000a5ef(5): LEA RAX,[RSP + 0x4c]
0000a5f4(5): MOV qword ptr [RSP + 0x38],RAX
0000a5f9(5): LEA RAX,[RSP + 0x50]
0000a5fe(5): MOV qword ptr [RSP + 0x10],RAX
0000a603(5): MOV RAX,qword ptr [RSP + 0x30]
0000a608(4): LEA R15,[RCX + RAX*0x1]
0000a60c(5): JMP 0x0000a6e8
0000a618(4): MOV RAX,qword ptr [R13 + 0x18]
0000a61c(4): MOV RCX,qword ptr [RAX + R10*0x8]
0000a620(7): MOV R10,qword ptr [0xb8 + RBX]
0000a627(8): LEA RAX,[R14*0x8]
0000a62f(5): MOV qword ptr [RSP + 0x18],RAX
0000a634(3): ADD R10,RAX
0000a637(5): MOV qword ptr [RSP + 0x8],RCX
0000a63c(3): MOV R9,qword ptr [R10]
0000a63f(3): TEST R9,R9
0000a642(6): JZ 0x0000a7d0
0000a648(4): MOV RDI,qword ptr [R9 + 0x10]
0000a64c(4): LEA RSI,[R9 + 0x18]
0000a650(3): MOV RDX,RCX
0000a653(5): CALL 0x00008bf0
0000a658(3): TEST RAX,RAX
0000a65b(2): JNZ 0x0000a6d9
0000a65d(5): MOV RDI,qword ptr [RSP + 0x10]
0000a662(4): LEA RSI,[R9 + 0x8]
0000a666(5): CALL 0x00009d50
0000a66b(5): MOV RSI,qword ptr [RSP + 0x8]
0000a670(5): MOV RDI,qword ptr [RSP + 0x10]
0000a675(4): MOV dword ptr [RSP + 0x4c],EAX
0000a679(5): CALL 0x000076b0
0000a67e(4): MOV EDX,dword ptr [RSP + 0x4c]
0000a682(2): TEST EDX,EDX
0000a684(6): JNZ 0x0000a826
0000a68a(2): CMP AL,0x1
0000a68c(6): JNZ 0x0000a826
0000a692(5): MOV R10,qword ptr [RSP + 0x18]
0000a697(7): ADD R10,qword ptr [0xb8 + RBX]
0000a69e(5): MOV RDX,qword ptr [RSP + 0x10]
0000a6a3(5): MOV RDI,qword ptr [RSP + 0x38]
0000a6a8(3): MOV RSI,R13
0000a6ab(5): MOV qword ptr [RSP + 0x8],R10
0000a6b0(5): CALL 0x0000a200
0000a6b5(5): MOV R10,qword ptr [RSP + 0x8]
0000a6ba(5): MOV RDI,qword ptr [RSP + 0x60]
0000a6bf(3): MOV qword ptr [R10],RAX
0000a6c2(5): CALL 0x000019d0
0000a6c7(7): MOV RAX,qword ptr [0xb8 + RBX]
0000a6ce(5): CMP qword ptr [RAX + R14*0x8],0x0
0000a6d3(6): JZ 0x0000a815
0000a6d9(4): ADD R15,0x28
0000a6dd(5): CMP byte ptr [R15 + -0x8],0x0
0000a6e2(6): JZ 0x0000a59d
0000a6e8(3): MOV R10,qword ptr [R15]
0000a6eb(4): MOV R9,qword ptr [RBP + 0x8]
0000a6ef(4): MOV RSI,qword ptr [RSP]
0000a6f3(3): MOV RDX,R10
0000a6f6(3): MOV RDI,R9
0000a6f9(5): CALL 0x00008bf0
0000a6fe(3): TEST RAX,RAX
0000a701(2): JZ 0x0000a6d9
0000a703(4): MOV R8,qword ptr [R15 + 0x18]
0000a707(3): ADD R8,R12
0000a70a(3): MOV R14,R8
0000a70d(4): SUB R14,qword ptr [R15 + 0x10]
0000a711(3): CMP R12,R14
0000a714(6): JNZ 0x0000a618
0000a71a(4): MOV RCX,qword ptr [R13 + 0x28]
0000a71e(4): LEA RAX,[R10 + R10*0x2]
0000a722(4): MOV RSI,qword ptr [RSP]
0000a726(3): MOV RDI,R9
0000a729(4): LEA RAX,[RCX + RAX*0x8]
0000a72d(4): MOV RAX,qword ptr [RAX + 0x10]
0000a731(3): MOV R14,qword ptr [RAX]
0000a734(3): MOV RDX,R14
0000a737(5): CALL 0x00008bf0
0000a73c(3): TEST RAX,RAX
0000a73f(2): JNZ 0x0000a6d9
0000a741(5): MOV EDI,0x8
0000a746(9): MOV qword ptr [RSP + 0x50],0x1
0000a74f(9): MOV qword ptr [RSP + 0x58],0x1
0000a758(5): CALL 0x00001c20
0000a75d(3): TEST RAX,RAX
0000a760(5): MOV qword ptr [RSP + 0x60],RAX
0000a765(6): JZ 0x0000a85d
0000a76b(3): MOV qword ptr [RAX],R14
0000a76e(2): XOR EAX,EAX
0000a770(5): MOV R15,qword ptr [RSP + 0x10]
0000a775(5): MOV RDX,qword ptr [RSP + 0x20]
0000a77a(3): MOV RDI,R13
0000a77d(4): MOV ECX,dword ptr [RSP + 0x2c]
0000a781(4): MOV dword ptr [RSP + 0x4c],EAX
0000a785(3): MOV RSI,R15
0000a788(5): CALL 0x000095a0
0000a78d(3): MOV RSI,R15
0000a790(3): MOV RDI,RBP
0000a793(3): MOV R14D,EAX
0000a796(5): CALL 0x00009110
0000a79b(5): MOV RDI,qword ptr [RSP + 0x60]
0000a7a0(3): MOV R15D,EAX
0000a7a3(5): CALL 0x000019d0
0000a7a8(4): MOV EAX,dword ptr [RSP + 0x4c]
0000a7ac(3): MOV EDX,R14D
0000a7af(3): OR EDX,R15D
0000a7b2(2): OR EDX,EAX
0000a7b4(6): JNZ 0x0000a846
0000a7ba(7): MOV RCX,qword ptr [0xd8 + RBX]
0000a7c1(5): JMP 0x0000a603
0000a7d0(5): MOV EDI,0x8
0000a7d5(5): MOV qword ptr [RSP + 0x18],R10
0000a7da(9): MOV qword ptr [RSP + 0x50],0x1
0000a7e3(9): MOV qword ptr [RSP + 0x58],0x1
0000a7ec(5): CALL 0x00001c20
0000a7f1(3): TEST RAX,RAX
0000a7f4(5): MOV qword ptr [RSP + 0x60],RAX
0000a7f9(2): JZ 0x0000a83c
0000a7fb(5): MOV RDI,qword ptr [RSP + 0x8]
0000a800(8): MOV dword ptr [RSP + 0x4c],0x0
0000a808(5): MOV R10,qword ptr [RSP + 0x18]
0000a80d(3): MOV qword ptr [RAX],RDI
0000a810(5): JMP 0x0000a69e
0000a815(4): MOV EAX,dword ptr [RSP + 0x4c]
0000a819(2): TEST EAX,EAX
0000a81b(6): JZ 0x0000a6d9
0000a821(5): JMP 0x0000a59f
0000a826(5): MOV RDI,qword ptr [RSP + 0x60]
0000a82b(5): CALL 0x000019d0
0000a830(4): MOV EAX,dword ptr [RSP + 0x4c]
0000a834(2): TEST EAX,EAX
0000a836(6): JNZ 0x0000a59f
0000a83c(5): MOV EAX,0xc
0000a841(5): JMP 0x0000a59f
0000a846(2): TEST EAX,EAX
0000a848(6): JNZ 0x0000a59f
0000a84e(3): TEST R14D,R14D
0000a851(3): MOV EAX,R14D
0000a854(4): CMOVZ EAX,R15D
0000a858(5): JMP 0x0000a59f
0000a85d(9): MOV qword ptr [RSP + 0x58],0x0
0000a866(9): MOV qword ptr [RSP + 0x50],0x0
0000a86f(5): MOV EAX,0xc
0000a874(5): JMP 0x0000a770
0000a879(5): CALL 0x00001ad0
0000a87e(2): NOP
0000a880(2): PUSH R15
0000a882(2): PUSH R14
0000a884(2): PUSH R13
0000a886(2): PUSH R12
0000a888(1): PUSH RBP
0000a889(1): PUSH RBX
0000a88a(4): SUB RSP,0x28
0000a88e(4): CMP qword ptr [RSI],0x0
0000a892(7): MOV R13,qword ptr [0x98 + RDI]
0000a899(6): JLE 0x0000a960
0000a89f(3): MOV R14,RDX
0000a8a2(3): MOV R12,RSI
0000a8a5(3): MOV R15,RDI
0000a8a8(2): XOR EBX,EBX
0000a8aa(2): JMP 0x0000a8be
0000a8b0(4): ADD RBX,0x1
0000a8b4(4): CMP RBX,qword ptr [R12]
0000a8b8(6): JGE 0x0000a960
0000a8be(3): MOV RAX,qword ptr [R14]
0000a8c1(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000a8c5(3): MOV RAX,RBP
0000a8c8(4): SHL RAX,0x4
0000a8cc(4): ADD RAX,qword ptr [R13]
0000a8d0(4): CMP byte ptr [RAX + 0x8],0x8
0000a8d4(2): JNZ 0x0000a8b0
0000a8d6(3): MOV RAX,qword ptr [RAX]
0000a8d9(4): CMP RAX,0x3f
0000a8dd(2): JG 0x0000a8b0
0000a8df(7): MOV RSI,qword ptr [0xa0 + R13]
0000a8e6(4): BT RSI,RAX
0000a8ea(2): JNC 0x0000a8b0
0000a8ec(7): MOV R8,qword ptr [0xe8 + R15]
0000a8f3(7): CMP R8,qword ptr [0xf0 + R15]
0000a8fa(7): MOV R9,qword ptr [0xf8 + R15]
0000a901(2): JZ 0x0000a978
0000a903(5): MOV ESI,0x30
0000a908(5): MOV EDI,0x1
0000a90d(5): MOV qword ptr [RSP + 0x10],R9
0000a912(5): MOV qword ptr [RSP + 0x8],R8
0000a917(5): MOV qword ptr [RSP + 0x18],RCX
0000a91c(5): CALL 0x00001bc0
0000a921(5): MOV R8,qword ptr [RSP + 0x8]
0000a926(5): MOV R9,qword ptr [RSP + 0x10]
0000a92b(3): TEST RAX,RAX
0000a92e(4): MOV qword ptr [R9 + R8*0x8],RAX
0000a932(2): JZ 0x0000a971
0000a934(4): ADD R8,0x1
0000a938(4): ADD RBX,0x1
0000a93c(5): MOV RCX,qword ptr [RSP + 0x18]
0000a941(7): MOV qword ptr [0xe8 + R15],R8
0000a948(4): CMP RBX,qword ptr [R12]
0000a94c(4): MOV qword ptr [RAX + 0x8],RBP
0000a950(3): MOV qword ptr [RAX],RCX
0000a953(6): JL 0x0000a8be
0000a959(7): NOP dword ptr [RAX]
0000a960(2): XOR EAX,EAX
0000a962(4): ADD RSP,0x28
0000a966(1): POP RBX
0000a967(1): POP RBP
0000a968(2): POP R12
0000a96a(2): POP R13
0000a96c(2): POP R14
0000a96e(2): POP R15
0000a970(1): RET
0000a971(5): MOV EAX,0xc
0000a976(2): JMP 0x0000a962
0000a978(4): LEA RAX,[R8 + R8*0x1]
0000a97c(3): MOV RSI,R8
0000a97f(3): MOV RDI,R9
0000a982(4): SHL RSI,0x4
0000a986(5): MOV qword ptr [RSP + 0x8],RCX
0000a98b(5): MOV qword ptr [RSP + 0x10],RAX
0000a990(5): CALL 0x00001c90
0000a995(3): TEST RAX,RAX
0000a998(3): MOV R9,RAX
0000a99b(5): MOV RCX,qword ptr [RSP + 0x8]
0000a9a0(2): JZ 0x0000a971
0000a9a2(7): MOV qword ptr [0xf8 + R15],RAX
0000a9a9(5): MOV RAX,qword ptr [RSP + 0x10]
0000a9ae(7): MOV R8,qword ptr [0xe8 + R15]
0000a9b5(7): MOV qword ptr [0xf0 + R15],RAX
0000a9bc(5): JMP 0x0000a903
0000a9d0(1): PUSH RBP
0000a9d1(1): PUSH RBX
0000a9d2(3): MOV RBP,RDI
0000a9d5(4): SUB RSP,0x8
0000a9d9(3): TEST RSI,RSI
0000a9dc(2): JS 0x0000aa30
0000a9de(4): CMP qword ptr [RDI + 0x58],RSI
0000a9e2(6): JZ 0x0000aa88
0000a9e8(7): CMP dword ptr [0x90 + RDI],0x1
0000a9ef(2): JLE 0x0000aa40
0000a9f1(4): MOV RAX,qword ptr [RDI + 0x10]
0000a9f5(2): JMP 0x0000aa0a
0000aa00(4): SUB RSI,0x1
0000aa04(4): CMP RSI,-0x1
0000aa08(2): JZ 0x0000aa30
0000aa0a(3): MOV EBX,dword ptr [RAX + RSI*0x4]
0000aa0d(3): CMP EBX,-0x1
0000aa10(2): JZ 0x0000aa00
0000aa12(7): CMP byte ptr [0x8e + RBP],0x0
0000aa19(2): JNZ 0x0000aa98
0000aa1b(2): XOR EAX,EAX
0000aa1d(3): CMP EBX,0xa
0000aa20(2): JZ 0x0000aa6c
0000aa22(4): ADD RSP,0x8
0000aa26(1): POP RBX
0000aa27(1): POP RBP
0000aa28(1): RET
0000aa30(3): MOV EAX,dword ptr [RBP + 0x70]
0000aa33(4): ADD RSP,0x8
0000aa37(1): POP RBX
0000aa38(1): POP RBP
0000aa39(1): RET
0000aa40(4): MOV RAX,qword ptr [RDI + 0x8]
0000aa44(7): MOV RCX,qword ptr [0x80 + RDI]
0000aa4b(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
0000aa4f(3): MOV RDX,RAX
0000aa52(4): SAR RAX,0x6
0000aa56(4): MOV RCX,qword ptr [RCX + RAX*0x8]
0000aa5a(5): MOV EAX,0x1
0000aa5f(4): BT RCX,RDX
0000aa63(2): JC 0x0000aa22
0000aa65(2): XOR EAX,EAX
0000aa67(3): CMP DL,0xa
0000aa6a(2): JNZ 0x0000aa22
0000aa6c(2): XOR EAX,EAX
0000aa6e(7): CMP byte ptr [0x8d + RBP],0x0
0000aa75(3): SETNZ AL
0000aa78(4): ADD RSP,0x8
0000aa7c(2): ADD EAX,EAX
0000aa7e(1): POP RBX
0000aa7f(1): POP RBP
0000aa80(1): RET
0000aa88(3): AND EDX,0x2
0000aa8b(3): CMP EDX,0x1
0000aa8e(2): SBB EAX,EAX
0000aa90(3): AND EAX,0x2
0000aa93(3): ADD EAX,0x8
0000aa96(2): JMP 0x0000aa22
0000aa98(2): MOV EDI,EBX
0000aa9a(5): CALL 0x00001c10
0000aa9f(2): TEST EAX,EAX
0000aaa1(2): JNZ 0x0000aaac
0000aaa3(3): CMP EBX,0x5f
0000aaa6(6): JNZ 0x0000aa1b
0000aaac(5): MOV EAX,0x1
0000aab1(5): JMP 0x0000aa22
0000aac0(4): MOV RAX,qword ptr [RDI + 0x8]
0000aac4(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
0000aac8(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000aacc(2): CMP AL,0x3
0000aace(6): JZ 0x0000ab88
0000aad4(6): JBE 0x0000ab70
0000aada(2): CMP AL,0x5
0000aadc(2): JZ 0x0000aaf0
0000aade(2): CMP AL,0x7
0000aae0(6): JNZ 0x0000ab80
0000aae6(2): XOR EAX,EAX
0000aae8(2): TEST CL,CL
0000aaea(6): JS 0x0000ab7a
0000aaf0(3): CMP CL,0xa
0000aaf3(6): JZ 0x0000abb8
0000aaf9(2): TEST CL,CL
0000aafb(2): JNZ 0x0000ab10
0000aafd(7): MOV RCX,qword ptr [0x98 + RDI]
0000ab04(2): XOR EAX,EAX
0000ab06(7): TEST byte ptr [0xd8 + RCX],0x80
0000ab0d(2): JNZ 0x0000ab7a
0000ab0f(1): NOP
0000ab10(1): PUSH RBX
0000ab11(3): MOV EBX,dword ptr [RSI + 0x8]
0000ab14(5): MOV EAX,0x1
0000ab19(6): TEST EBX,0x3ff00
0000ab1f(2): JZ 0x0000ab6c
0000ab21(3): MOV RSI,RDX
0000ab24(6): MOV EDX,dword ptr [0xa0 + RDI]
0000ab2a(3): SHR EBX,0x8
0000ab2d(5): CALL 0x0000a9d0
0000ab32(2): MOV ECX,EBX
0000ab34(2): MOV EDX,EAX
0000ab36(5): AND CX,0x3ff
0000ab3b(3): TEST BL,0x4
0000ab3e(2): JZ 0x0000aba8
0000ab40(2): XOR EAX,EAX
0000ab42(3): TEST DL,0x1
0000ab45(2): JZ 0x0000ab6c
0000ab47(3): AND EBX,0x8
0000ab4a(2): JNZ 0x0000ab6c
0000ab4c(3): TEST CL,0x20
0000ab4f(2): JZ 0x0000ab58
0000ab51(2): XOR EAX,EAX
0000ab53(3): TEST DL,0x2
0000ab56(2): JZ 0x0000ab6c
0000ab58(3): SHR EDX,0x3
0000ab5b(5): MOV EAX,0x1
0000ab60(3): AND EDX,0x1
0000ab63(6): AND ECX,0x80
0000ab69(3): CMOVNZ EAX,EDX
0000ab6c(1): POP RBX
0000ab6d(1): RET
0000ab70(2): CMP AL,0x1
0000ab72(2): JNZ 0x0000ab80
0000ab74(2): XOR EAX,EAX
0000ab76(2): CMP byte ptr [RSI],CL
0000ab78(2): JZ 0x0000ab10
0000ab7a(2): RET
0000ab80(2): XOR EAX,EAX
0000ab82(1): RET
0000ab88(3): MOV R8,qword ptr [RSI]
0000ab8b(3): MOVZX EAX,CL
0000ab8e(4): SAR RAX,0x6
0000ab92(4): MOV R8,qword ptr [R8 + RAX*0x8]
0000ab96(2): XOR EAX,EAX
0000ab98(4): BT RAX,RCX
0000ab9c(6): JC 0x0000ab10
0000aba2(2): RET
0000aba8(3): AND EBX,0x8
0000abab(2): JZ 0x0000ab4c
0000abad(2): TEST AL,0x1
0000abaf(2): JZ 0x0000ab4c
0000abb1(2): XOR EAX,EAX
0000abb3(1): POP RBX
0000abb4(1): RET
0000abb8(7): MOV RCX,qword ptr [0x98 + RDI]
0000abbf(2): XOR EAX,EAX
0000abc1(7): TEST byte ptr [0xd8 + RCX],0x40
0000abc8(6): JNZ 0x0000ab10
0000abce(2): RET
0000abd0(2): PUSH R12
0000abd2(3): MOV R12,RDX
0000abd5(1): PUSH RBP
0000abd6(1): PUSH RBX
0000abd7(6): MOV EDX,dword ptr [0xa0 + RDI]
0000abdd(3): MOV RBX,RSI
0000abe0(3): MOV RSI,RCX
0000abe3(3): MOV RBP,RDI
0000abe6(5): CALL 0x0000a9d0
0000abeb(3): TEST RBX,RBX
0000abee(6): JLE 0x0000ac98
0000abf4(7): MOV RDX,qword ptr [0x98 + RBP]
0000abfb(3): MOV R11D,EAX
0000abfe(2): MOV EBP,EAX
0000ac00(3): AND EAX,0x1
0000ac03(4): MOV R9,qword ptr [R12]
0000ac07(2): XOR ESI,ESI
0000ac09(3): AND EBP,0x8
0000ac0c(4): AND R11D,0x2
0000ac10(3): MOV R10D,EAX
0000ac13(3): MOV R8,qword ptr [RDX]
0000ac16(2): JMP 0x0000ac29
0000ac20(4): ADD RSI,0x1
0000ac24(3): CMP RSI,RBX
0000ac27(2): JZ 0x0000ac98
0000ac29(4): MOV RAX,qword ptr [R9 + RSI*0x8]
0000ac2d(3): MOV RDX,RAX
0000ac30(4): SHL RDX,0x4
0000ac34(3): ADD RDX,R8
0000ac37(3): MOV ECX,dword ptr [RDX + 0x8]
0000ac3a(3): SHR ECX,0x8
0000ac3d(2): MOV EDI,ECX
0000ac3f(5): AND DI,0x3ff
0000ac44(4): CMP byte ptr [RDX + 0x8],0x2
0000ac48(2): JNZ 0x0000ac20
0000ac4a(3): TEST DI,DI
0000ac4d(2): JZ 0x0000ac75
0000ac4f(3): TEST CL,0x4
0000ac52(2): JZ 0x0000ac80
0000ac54(3): TEST R10D,R10D
0000ac57(2): JZ 0x0000ac20
0000ac59(3): AND ECX,0x8
0000ac5c(2): JNZ 0x0000ac20
0000ac5e(4): TEST DIL,0x20
0000ac62(2): JZ 0x0000ac69
0000ac64(3): TEST R11D,R11D
0000ac67(2): JZ 0x0000ac20
0000ac69(6): AND EDI,0x80
0000ac6f(2): JZ 0x0000ac75
0000ac71(2): TEST EBP,EBP
0000ac73(2): JZ 0x0000ac20
0000ac75(1): POP RBX
0000ac76(1): POP RBP
0000ac77(2): POP R12
0000ac79(1): RET
0000ac80(3): AND ECX,0x8
0000ac83(2): JZ 0x0000ac5e
0000ac85(3): TEST R10D,R10D
0000ac88(2): JNZ 0x0000ac20
0000ac8a(4): TEST DIL,0x20
0000ac8e(2): JZ 0x0000ac69
0000ac90(2): JMP 0x0000ac64
0000ac98(1): POP RBX
0000ac99(2): XOR EAX,EAX
0000ac9b(1): POP RBP
0000ac9c(2): POP R12
0000ac9e(1): RET
0000aca0(2): PUSH R15
0000aca2(2): PUSH R14
0000aca4(3): MOV R15,RSI
0000aca7(2): PUSH R13
0000aca9(2): PUSH R12
0000acab(3): MOV R10D,EDX
0000acae(1): PUSH RBP
0000acaf(1): PUSH RBX
0000acb0(3): MOV RBP,RSI
0000acb3(3): MOV RBX,RDI
0000acb6(4): SUB RSP,0x48
0000acba(9): MOV RAX,qword ptr FS:[0x28]
0000acc3(5): MOV qword ptr [RSP + 0x38],RAX
0000acc8(2): XOR EAX,EAX
0000acca(4): MOV RAX,qword ptr [RDI + 0x28]
0000acce(3): SUB RBP,RAX
0000acd1(3): CMP RAX,RSI
0000acd4(2): JLE 0x0000ad36
0000acd6(7): CMP dword ptr [0x90 + RDI],0x1
0000acdd(6): JG 0x0000ae10
0000ace3(4): MOV RAX,qword ptr [RBX + 0x50]
0000ace7(8): MOV qword ptr [RBX + 0x30],0x0
0000acef(3): MOV RBP,R15
0000acf2(8): MOV qword ptr [RBX + 0x28],0x0
0000acfa(8): MOV qword ptr [RBX + 0x38],0x0
0000ad02(7): MOV byte ptr [0x8c + RBX],0x0
0000ad09(4): MOV qword ptr [RBX + 0x58],RAX
0000ad0d(4): MOV RAX,qword ptr [RBX + 0x60]
0000ad11(4): MOV qword ptr [RBX + 0x68],RAX
0000ad15(3): MOV EAX,R10D
0000ad18(3): AND EAX,0x1
0000ad1b(3): CMP EAX,0x1
0000ad1e(2): SBB EAX,EAX
0000ad20(3): AND EAX,0x2
0000ad23(3): ADD EAX,0x4
0000ad26(7): CMP byte ptr [0x8b + RBX],0x0
0000ad2d(3): MOV dword ptr [RBX + 0x70],EAX
0000ad30(6): JZ 0x0000ae00
0000ad36(3): TEST RBP,RBP
0000ad39(2): JZ 0x0000ad9e
0000ad3b(4): MOV RAX,qword ptr [RBX + 0x38]
0000ad3f(7): MOVZX EDX,byte ptr [0x8c + RBX]
0000ad46(4): MOV R8,qword ptr [RBX + 0x30]
0000ad4a(3): CMP RAX,RBP
0000ad4d(6): JLE 0x0000ae70
0000ad53(2): TEST DL,DL
0000ad55(6): JNZ 0x0000af68
0000ad5b(4): LEA RSI,[RBP + -0x1]
0000ad5f(3): MOV EDX,R10D
0000ad62(3): MOV RDI,RBX
0000ad65(4): MOV qword ptr [RSP],R8
0000ad69(5): CALL 0x0000a9d0
0000ad6e(4): MOV R8,qword ptr [RSP]
0000ad72(3): MOV dword ptr [RBX + 0x70],EAX
0000ad75(3): SUB R8,RBP
0000ad78(7): CMP dword ptr [0x90 + RBX],0x1
0000ad7f(6): JG 0x0000ae20
0000ad85(7): CMP byte ptr [0x8b + RBX],0x0
0000ad8c(6): JNZ 0x0000b130
0000ad92(4): SUB qword ptr [RBX + 0x38],RBP
0000ad96(4): MOV qword ptr [RBX + 0x30],R8
0000ad9a(4): ADD qword ptr [RBX + 0x8],RBP
0000ad9e(4): MOV RAX,qword ptr [RBX + 0x58]
0000ada2(4): SUB qword ptr [RBX + 0x68],RBP
0000ada6(4): MOV qword ptr [RBX + 0x28],R15
0000adaa(3): SUB RAX,RBP
0000adad(7): CMP dword ptr [0x90 + RBX],0x1
0000adb4(4): MOV qword ptr [RBX + 0x58],RAX
0000adb8(6): JLE 0x0000ae58
0000adbe(7): CMP byte ptr [0x88 + RBX],0x0
0000adc5(3): MOV RDI,RBX
0000adc8(2): JZ 0x0000ae48
0000adca(5): CALL 0x00007b10
0000adcf(2): TEST EAX,EAX
0000add1(2): JNZ 0x0000addd
0000add3(8): MOV qword ptr [RBX + 0x48],0x0
0000addb(2): XOR EAX,EAX
0000addd(5): MOV RCX,qword ptr [RSP + 0x38]
0000ade2(9): XOR RCX,qword ptr FS:[0x28]
0000adeb(6): JNZ 0x0000b43a
0000adf1(4): ADD RSP,0x48
0000adf5(1): POP RBX
0000adf6(1): POP RBP
0000adf7(2): POP R12
0000adf9(2): POP R13
0000adfb(2): POP R14
0000adfd(2): POP R15
0000adff(1): RET
0000ae00(3): MOV RAX,qword ptr [RBX]
0000ae03(4): MOV qword ptr [RBX + 0x8],RAX
0000ae07(5): JMP 0x0000ad36
0000ae10(8): MOV qword ptr [RDI + 0x20],0x0
0000ae18(5): JMP 0x0000ace3
0000ae20(4): MOV RDI,qword ptr [RBX + 0x10]
0000ae24(8): LEA RDX,[R8*0x4]
0000ae2c(4): LEA RSI,[RDI + RBP*0x4]
0000ae30(5): CALL 0x00001cf0
0000ae35(4): MOV R8,qword ptr [RBX + 0x30]
0000ae39(3): SUB R8,RBP
0000ae3c(5): JMP 0x0000ad85
0000ae48(5): CALL 0x00007940
0000ae4d(5): JMP 0x0000add3
0000ae58(7): CMP byte ptr [0x8b + RBX],0x0
0000ae5f(6): JNZ 0x0000b210
0000ae65(4): MOV qword ptr [RBX + 0x30],RAX
0000ae69(5): JMP 0x0000add3
0000ae70(2): TEST DL,DL
0000ae72(6): JNZ 0x0000b31d
0000ae78(7): MOVSXD RDX,dword ptr [0x90 + RBX]
0000ae7f(8): MOV qword ptr [RBX + 0x30],0x0
0000ae87(4): MOV R11,qword ptr [RBX + 0x28]
0000ae8b(3): CMP EDX,0x1
0000ae8e(6): JLE 0x0000b278
0000ae94(7): CMP byte ptr [0x89 + RBX],0x0
0000ae9b(6): JNZ 0x0000b158
0000aea1(4): LEA R14,[R11 + RAX*0x1]
0000aea5(3): CMP R15,R14
0000aea8(6): JLE 0x0000b2ef
0000aeae(4): LEA RAX,[RBX + 0x20]
0000aeb2(5): LEA R13,[RSP + 0x24]
0000aeb7(5): MOV qword ptr [RSP + 0x10],RAX
0000aebc(4): NOP dword ptr [RAX]
0000aec0(4): MOV R12,qword ptr [RBX + 0x50]
0000aec4(3): MOV RSI,qword ptr [RBX]
0000aec7(3): MOV RDI,R13
0000aeca(4): MOV RAX,qword ptr [RBX + 0x20]
0000aece(5): MOV RCX,qword ptr [RSP + 0x10]
0000aed3(5): MOV dword ptr [RSP + 0xc],R10D
0000aed8(4): MOV qword ptr [RSP],R8
0000aedc(3): SUB R12,R14
0000aedf(3): ADD RSI,R14
0000aee2(3): MOV RDX,R12
0000aee5(5): MOV qword ptr [RSP + 0x18],RAX
0000aeea(5): CALL 0x00007050
0000aeef(4): LEA RCX,[RAX + -0x1]
0000aef3(4): MOV EDX,dword ptr [RSP + 0x24]
0000aef7(4): MOV R8,qword ptr [RSP]
0000aefb(5): MOV R10D,dword ptr [RSP + 0xc]
0000af00(4): CMP RCX,-0x4
0000af04(6): JA 0x0000b345
0000af0a(3): ADD R14,RAX
0000af0d(3): CMP R15,R14
0000af10(2): JG 0x0000aec0
0000af12(3): SUB R14,R15
0000af15(3): CMP EDX,-0x1
0000af18(3): MOV R12,R14
0000af1b(4): MOV qword ptr [RBX + 0x30],R14
0000af1f(6): JZ 0x0000b2f9
0000af25(7): CMP byte ptr [0x8e + RBX],0x0
0000af2c(6): JNZ 0x0000b399
0000af32(2): XOR EAX,EAX
0000af34(3): CMP EDX,0xa
0000af37(2): JNZ 0x0000af47
0000af39(2): XOR EAX,EAX
0000af3b(7): CMP byte ptr [0x8d + RBX],0x0
0000af42(3): SETNZ AL
0000af45(2): ADD EAX,EAX
0000af47(3): MOV dword ptr [RBX + 0x70],EAX
0000af4a(4): CMP R12,0x0
0000af4e(6): JNZ 0x0000b36a
0000af54(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000af5b(4): MOV qword ptr [RBX + 0x38],R12
0000af5f(5): JMP 0x0000b11c
0000af68(4): MOV R14,qword ptr [RBX + 0x18]
0000af6c(3): MOV RCX,R8
0000af6f(2): XOR ESI,ESI
0000af71(2): JMP 0x0000af83
0000af78(2): JGE 0x0000afb3
0000af7a(4): LEA RSI,[RAX + 0x1]
0000af7e(3): CMP RSI,RCX
0000af81(2): JGE 0x0000afa8
0000af83(4): LEA RDX,[RSI + RCX*0x1]
0000af87(3): MOV RAX,RDX
0000af8a(4): SHR RAX,0x3f
0000af8e(3): ADD RAX,RDX
0000af91(3): SAR RAX,1
0000af94(4): MOV RDX,qword ptr [R14 + RAX*0x8]
0000af98(3): MOV R12,RAX
0000af9b(3): CMP RDX,RBP
0000af9e(2): JLE 0x0000af78
0000afa0(3): MOV RCX,RAX
0000afa3(2): JMP 0x0000af7e
0000afa8(4): LEA R12,[RAX + 0x1]
0000afac(3): CMP RDX,RBP
0000afaf(4): CMOVGE R12,RAX
0000afb3(5): LEA R13,[R12 + -0x1]
0000afb8(3): MOV EDX,R10D
0000afbb(3): MOV RDI,RBX
0000afbe(4): MOV qword ptr [RSP],R8
0000afc2(3): MOV RSI,R13
0000afc5(5): CALL 0x0000a9d0
0000afca(3): CMP RBP,R12
0000afcd(3): MOV dword ptr [RBX + 0x70],EAX
0000afd0(4): MOV R8,qword ptr [RSP]
0000afd4(6): JNZ 0x0000b058
0000afda(3): CMP RBP,R8
0000afdd(2): JGE 0x0000b058
0000afdf(4): CMP qword ptr [R14 + R12*0x8],RBP
0000afe3(2): JNZ 0x0000b058
0000afe5(4): MOV RDI,qword ptr [RBX + 0x10]
0000afe9(3): SUB R8,RBP
0000afec(8): LEA RDX,[R8*0x4]
0000aff4(4): LEA RSI,[RDI + RBP*0x4]
0000aff8(5): CALL 0x00001cf0
0000affd(4): MOV RDI,qword ptr [RBX + 0x8]
0000b001(4): MOV RDX,qword ptr [RBX + 0x30]
0000b005(4): LEA RSI,[RDI + RBP*0x1]
0000b009(3): SUB RDX,RBP
0000b00c(5): CALL 0x00001cf0
0000b011(4): MOV RAX,qword ptr [RBX + 0x30]
0000b015(4): SUB qword ptr [RBX + 0x38],RBP
0000b019(3): SUB RAX,RBP
0000b01c(3): TEST RAX,RAX
0000b01f(4): MOV qword ptr [RBX + 0x30],RAX
0000b023(2): JLE 0x0000b048
0000b025(4): MOV RCX,qword ptr [RBX + 0x18]
0000b029(2): XOR EAX,EAX
0000b02b(4): LEA RSI,[RCX + RBP*0x8]
0000b02f(1): NOP
0000b030(4): MOV RDX,qword ptr [RSI + RAX*0x8]
0000b034(3): SUB RDX,RBP
0000b037(4): MOV qword ptr [RCX + RAX*0x8],RDX
0000b03b(4): ADD RAX,0x1
0000b03f(4): CMP qword ptr [RBX + 0x30],RAX
0000b043(2): JG 0x0000b030
0000b045(3): NOP dword ptr [RAX]
0000b048(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000b04f(5): JMP 0x0000b11c
0000b058(4): MOV RAX,qword ptr [RBX + 0x50]
0000b05c(7): MOV byte ptr [0x8c + RBX],0x0
0000b063(3): ADD RAX,RBP
0000b066(3): SUB RAX,R15
0000b069(4): MOV qword ptr [RBX + 0x58],RAX
0000b06d(4): MOV RAX,qword ptr [RBX + 0x60]
0000b071(3): ADD RAX,RBP
0000b074(3): SUB RAX,R15
0000b077(3): TEST R12,R12
0000b07a(4): MOV qword ptr [RBX + 0x68],RAX
0000b07e(2): JLE 0x0000b0a3
0000b080(5): CMP qword ptr [R14 + R12*0x8 + -0x8],RBP
0000b085(2): JZ 0x0000b09b
0000b087(2): JMP 0x0000b0a3
0000b090(5): CMP qword ptr [R14 + R13*0x8 + -0x8],RBP
0000b095(2): JNZ 0x0000b0a3
0000b097(4): SUB R13,0x1
0000b09b(3): TEST R13,R13
0000b09e(3): MOV R12,R13
0000b0a1(2): JNZ 0x0000b090
0000b0a3(3): CMP R12,R8
0000b0a6(6): JGE 0x0000b2d8
0000b0ac(4): MOV RAX,qword ptr [RBX + 0x10]
0000b0b0(2): JMP 0x0000b0c5
0000b0b8(4): ADD R12,0x1
0000b0bc(3): CMP R12,R8
0000b0bf(6): JZ 0x0000b2e0
0000b0c5(5): CMP dword ptr [RAX + R12*0x4],-0x1
0000b0ca(2): JZ 0x0000b0b8
0000b0cc(4): MOV RDX,qword ptr [R14 + R12*0x8]
0000b0d0(3): SUB RDX,RBP
0000b0d3(4): CMP RDX,0x0
0000b0d7(4): MOV qword ptr [RBX + 0x30],RDX
0000b0db(2): JZ 0x0000b111
0000b0dd(2): JLE 0x0000b0ff
0000b0df(4): MOV RAX,qword ptr [RBX + 0x10]
0000b0e3(4): LEA RCX,[RAX + RDX*0x4]
0000b0e7(9): NOP word ptr [RAX + RAX*0x1]
0000b0f0(6): MOV dword ptr [RAX],0xffffffff
0000b0f6(4): ADD RAX,0x4
0000b0fa(3): CMP RCX,RAX
0000b0fd(2): JNZ 0x0000b0f0
0000b0ff(4): MOV RDI,qword ptr [RBX + 0x8]
0000b103(5): MOV ESI,0xff
0000b108(5): CALL 0x00001b60
0000b10d(4): MOV RDX,qword ptr [RBX + 0x30]
0000b111(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000b118(4): MOV qword ptr [RBX + 0x38],RDX
0000b11c(2): TEST AL,AL
0000b11e(6): JZ 0x0000ad9a
0000b124(5): JMP 0x0000ad9e
0000b130(4): MOV RDI,qword ptr [RBX + 0x8]
0000b134(3): MOV RDX,R8
0000b137(4): LEA RSI,[RDI + RBP*0x1]
0000b13b(5): CALL 0x00001cf0
0000b140(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000b147(4): SUB qword ptr [RBX + 0x30],RBP
0000b14b(4): SUB qword ptr [RBX + 0x38],RBP
0000b14f(2): JMP 0x0000b11c
0000b158(3): MOV RCX,qword ptr [RBX]
0000b15b(3): MOV RDI,RBP
0000b15e(3): SUB RDI,RDX
0000b161(3): MOV RDX,RDI
0000b164(4): LEA R12,[RCX + R11*0x1]
0000b168(3): ADD RDX,R12
0000b16b(5): LEA RSI,[R12 + RBP*0x1 + -0x1]
0000b170(3): CMP RCX,RDX
0000b173(4): CMOVC RCX,RDX
0000b177(3): CMP RCX,RSI
0000b17a(2): JBE 0x0000b195
0000b17c(5): JMP 0x0000aea1
0000b188(4): SUB RSI,0x1
0000b18c(3): CMP RCX,RSI
0000b18f(6): JA 0x0000aea1
0000b195(3): MOVZX EDX,byte ptr [RSI]
0000b198(3): AND EDX,0xffffffc0
0000b19b(3): CMP DL,0x80
0000b19e(2): JZ 0x0000b188
0000b1a0(4): MOV RDX,qword ptr [RBX + 0x58]
0000b1a4(4): MOV RCX,qword ptr [RBX + 0x78]
0000b1a8(3): MOV R14,RSI
0000b1ab(3): ADD RDX,R12
0000b1ae(3): SUB RDX,RSI
0000b1b1(3): TEST RCX,RCX
0000b1b4(6): JNZ 0x0000b402
0000b1ba(5): LEA R13,[RSP + 0x24]
0000b1bf(3): ADD R12,RBP
0000b1c2(5): LEA RCX,[RSP + 0x28]
0000b1c7(3): SUB R12,R14
0000b1ca(5): MOV dword ptr [RSP + 0xc],R10D
0000b1cf(4): MOV qword ptr [RSP],R8
0000b1d3(3): MOV RDI,R13
0000b1d6(9): MOV qword ptr [RSP + 0x28],0x0
0000b1df(5): CALL 0x00007050
0000b1e4(3): CMP R12,RAX
0000b1e7(4): MOV R8,qword ptr [RSP]
0000b1eb(5): MOV R10D,dword ptr [RSP + 0xc]
0000b1f0(2): JA 0x0000b1fc
0000b1f2(4): CMP RAX,-0x3
0000b1f6(6): JBE 0x0000b3c1
0000b1fc(4): MOV R11,qword ptr [RBX + 0x28]
0000b200(4): MOV RAX,qword ptr [RBX + 0x38]
0000b204(5): JMP 0x0000aea1
0000b210(7): CMP byte ptr [0x88 + RBX],0x0
0000b217(6): JNZ 0x0000b310
0000b21d(4): MOV RCX,qword ptr [RBX + 0x78]
0000b221(3): TEST RCX,RCX
0000b224(6): JZ 0x0000add3
0000b22a(4): CMP qword ptr [RBX + 0x40],RAX
0000b22e(4): MOV RDX,qword ptr [RBX + 0x30]
0000b232(5): CMOVLE RAX,qword ptr [RBX + 0x40]
0000b237(3): CMP RAX,RDX
0000b23a(2): JG 0x0000b248
0000b23c(2): JMP 0x0000b268
0000b240(4): MOV R15,qword ptr [RBX + 0x28]
0000b244(4): MOV RCX,qword ptr [RBX + 0x78]
0000b248(3): MOV RSI,qword ptr [RBX]
0000b24b(3): ADD RSI,RDX
0000b24e(5): MOVZX ESI,byte ptr [RSI + R15*0x1]
0000b253(4): MOVZX ESI,byte ptr [RCX + RSI*0x1]
0000b257(4): MOV RCX,qword ptr [RBX + 0x8]
0000b25b(4): MOV byte ptr [RCX + RDX*0x1],SIL
0000b25f(4): ADD RDX,0x1
0000b263(3): CMP RAX,RDX
0000b266(2): JNZ 0x0000b240
0000b268(4): MOV qword ptr [RBX + 0x30],RDX
0000b26c(4): MOV qword ptr [RBX + 0x38],RDX
0000b270(5): JMP 0x0000add3
0000b278(3): MOV RAX,qword ptr [RBX]
0000b27b(4): MOV RDX,qword ptr [RBX + 0x78]
0000b27f(3): ADD RAX,RBP
0000b282(3): TEST RDX,RDX
0000b285(6): MOVZX EAX,byte ptr [R11 + RAX*0x1 + -0x1]
0000b28b(8): MOV qword ptr [RBX + 0x38],0x0
0000b293(2): JZ 0x0000b299
0000b295(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
0000b299(7): MOV RCX,qword ptr [0x80 + RBX]
0000b2a0(3): MOVZX EDX,AL
0000b2a3(4): SAR RDX,0x6
0000b2a7(4): MOV RCX,qword ptr [RCX + RDX*0x8]
0000b2ab(5): MOV EDX,0x1
0000b2b0(4): BT RCX,RAX
0000b2b4(2): JC 0x0000b2d0
0000b2b6(2): XOR EDX,EDX
0000b2b8(2): CMP AL,0xa
0000b2ba(2): JNZ 0x0000b2d0
0000b2bc(2): XOR EDX,EDX
0000b2be(7): CMP byte ptr [0x8d + RBX],0x0
0000b2c5(3): SETNZ DL
0000b2c8(2): ADD EDX,EDX
0000b2ca(6): NOP word ptr [RAX + RAX*0x1]
0000b2d0(3): MOV dword ptr [RBX + 0x70],EDX
0000b2d3(5): JMP 0x0000b048
0000b2d8(6): JNZ 0x0000b0cc
0000b2de(2): NOP
0000b2e0(8): MOV qword ptr [RBX + 0x30],0x0
0000b2e8(2): XOR EDX,EDX
0000b2ea(5): JMP 0x0000b111
0000b2ef(3): SUB R14,R15
0000b2f2(3): MOV R12,R14
0000b2f5(4): MOV qword ptr [RBX + 0x30],R14
0000b2f9(4): LEA RSI,[R8 + -0x1]
0000b2fd(3): MOV EDX,R10D
0000b300(3): MOV RDI,RBX
0000b303(5): CALL 0x0000a9d0
0000b308(3): MOV dword ptr [RBX + 0x70],EAX
0000b30b(5): JMP 0x0000af4a
0000b310(3): MOV RDI,RBX
0000b313(5): CALL 0x000078d0
0000b318(5): JMP 0x0000add3
0000b31d(4): MOV RDX,qword ptr [RBX + 0x50]
0000b321(7): MOV byte ptr [0x8c + RBX],0x0
0000b328(3): ADD RDX,RBP
0000b32b(3): SUB RDX,R15
0000b32e(4): MOV qword ptr [RBX + 0x58],RDX
0000b332(4): MOV RDX,qword ptr [RBX + 0x60]
0000b336(3): ADD RDX,RBP
0000b339(3): SUB RDX,R15
0000b33c(4): MOV qword ptr [RBX + 0x68],RDX
0000b340(5): JMP 0x0000ae78
0000b345(3): TEST RAX,RAX
0000b348(2): JZ 0x0000b3bd
0000b34a(3): TEST R12,R12
0000b34d(2): JZ 0x0000b3bd
0000b34f(3): MOV RAX,qword ptr [RBX]
0000b352(5): MOVZX EDX,byte ptr [RAX + R14*0x1]
0000b357(5): MOV RAX,qword ptr [RSP + 0x18]
0000b35c(4): MOV qword ptr [RBX + 0x20],RAX
0000b360(5): MOV EAX,0x1
0000b365(5): JMP 0x0000af0a
0000b36a(2): JLE 0x0000b387
0000b36c(4): MOV RAX,qword ptr [RBX + 0x10]
0000b370(4): LEA RDX,[RAX + R12*0x4]
0000b374(4): NOP dword ptr [RAX]
0000b378(6): MOV dword ptr [RAX],0xffffffff
0000b37e(4): ADD RAX,0x4
0000b382(3): CMP RDX,RAX
0000b385(2): JNZ 0x0000b378
0000b387(7): CMP byte ptr [0x8b + RBX],0x0
0000b38e(2): JNZ 0x0000b3e8
0000b390(4): MOV qword ptr [RBX + 0x38],R12
0000b394(5): JMP 0x0000ad9a
0000b399(2): MOV EDI,EDX
0000b39b(3): MOV dword ptr [RSP],EDX
0000b39e(5): CALL 0x00001c10
0000b3a3(2): TEST EAX,EAX
0000b3a5(2): JNZ 0x0000b3b3
0000b3a7(3): MOV EDX,dword ptr [RSP]
0000b3aa(3): CMP EDX,0x5f
0000b3ad(6): JNZ 0x0000af32
0000b3b3(5): MOV EAX,0x1
0000b3b8(5): JMP 0x0000af47
0000b3bd(2): XOR EDX,EDX
0000b3bf(2): JMP 0x0000b357
0000b3c1(4): MOV EDX,dword ptr [RSP + 0x24]
0000b3c5(3): SUB RAX,R12
0000b3c8(8): MOV qword ptr [RBX + 0x20],0x0
0000b3d0(3): MOV R12,RAX
0000b3d3(4): MOV qword ptr [RBX + 0x30],RAX
0000b3d7(3): CMP EDX,-0x1
0000b3da(6): JNZ 0x0000af25
0000b3e0(5): JMP 0x0000b1fc
0000b3e8(4): MOV RDI,qword ptr [RBX + 0x8]
0000b3ec(3): MOV RDX,R12
0000b3ef(5): MOV ESI,0xff
0000b3f4(5): CALL 0x00001b60
0000b3f9(4): MOV R12,qword ptr [RBX + 0x30]
0000b3fd(5): JMP 0x0000af54
0000b402(4): CMP RDX,0x6
0000b406(5): MOV EDI,0x6
0000b40b(5): LEA R11,[RSP + 0x32]
0000b410(4): CMOVLE RDI,RDX
0000b414(3): SUB EDI,0x1
0000b417(2): TEST EDI,EDI
0000b419(3): MOVSXD RAX,EDI
0000b41c(2): JS 0x0000b432
0000b41e(4): MOVZX EDI,byte ptr [RSI + RAX*0x1]
0000b422(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
0000b426(4): MOV byte ptr [R11 + RAX*0x1],DIL
0000b42a(4): SUB RAX,0x1
0000b42e(2): TEST EAX,EAX
0000b430(2): JNS 0x0000b41e
0000b432(3): MOV RSI,R11
0000b435(5): JMP 0x0000b1ba
0000b43a(5): CALL 0x00001ad0
0000b43f(1): NOP
0000b440(2): PUSH R15
0000b442(2): PUSH R14
0000b444(3): MOV R14,RDX
0000b447(2): PUSH R13
0000b449(2): PUSH R12
0000b44b(4): LEA RDX,[RSI + RSI*0x2]
0000b44f(1): PUSH RBP
0000b450(1): PUSH RBX
0000b451(4): PXOR XMM0,XMM0
0000b455(4): SUB RSP,0x48
0000b459(9): MOV RAX,qword ptr FS:[0x28]
0000b462(5): MOV qword ptr [RSP + 0x38],RAX
0000b467(2): XOR EAX,EAX
0000b469(4): MOV RAX,qword ptr [RDI + 0x38]
0000b46d(9): MOV qword ptr [RSP + 0x30],0x0
0000b476(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000b47b(5): MOV qword ptr [RSP + 0x10],RCX
0000b480(4): LEA RBP,[RAX + RDX*0x8]
0000b484(4): MOV R10,qword ptr [RBP + 0x8]
0000b488(3): TEST R10,R10
0000b48b(6): JLE 0x0000b672
0000b491(5): LEA RAX,[RSP + 0x20]
0000b496(3): MOV R12,RDI
0000b499(3): MOV R13,RSI
0000b49c(2): XOR EBX,EBX
0000b49e(5): MOV qword ptr [RSP + 0x18],RAX
0000b4a3(2): JMP 0x0000b4fd
0000b4a8(3): TEST RAX,RAX
0000b4ab(6): JNZ 0x0000b588
0000b4b1(4): MOV RDI,qword ptr [R14 + 0x8]
0000b4b5(4): LEA RSI,[R14 + 0x10]
0000b4b9(3): MOV RDX,R8
0000b4bc(5): CALL 0x00008bf0
0000b4c1(3): TEST RAX,RAX
0000b4c4(6): JZ 0x0000b588
0000b4ca(5): MOV RDX,qword ptr [R12 + 0x38]
0000b4cf(5): MOV RSI,qword ptr [RSP + 0x10]
0000b4d4(5): MOV RDI,qword ptr [RSP + 0x18]
0000b4d9(3): ADD RDX,R9
0000b4dc(5): CALL 0x00009700
0000b4e1(2): TEST EAX,EAX
0000b4e3(6): JNZ 0x0000b660
0000b4e9(4): MOV R10,qword ptr [RBP + 0x8]
0000b4ed(3): NOP dword ptr [RAX]
0000b4f0(4): ADD RBX,0x1
0000b4f4(3): CMP R10,RBX
0000b4f7(6): JLE 0x0000b5d0
0000b4fd(4): MOV RAX,qword ptr [RBP + 0x10]
0000b501(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000b505(3): CMP R13,RAX
0000b508(2): JZ 0x0000b4f0
0000b50a(3): MOV RDX,RAX
0000b50d(4): SHL RDX,0x4
0000b511(4): ADD RDX,qword ptr [R12]
0000b515(4): TEST byte ptr [RDX + 0x8],0x8
0000b519(2): JZ 0x0000b4f0
0000b51b(4): LEA R9,[RAX + RAX*0x2]
0000b51f(5): MOV RCX,qword ptr [R12 + 0x28]
0000b524(4): LEA R11,[RBP + 0x10]
0000b528(3): MOV RDI,R10
0000b52b(4): SHL R9,0x3
0000b52f(3): MOV RSI,R11
0000b532(3): ADD RCX,R9
0000b535(4): MOV R15,qword ptr [RCX + 0x10]
0000b539(5): MOV qword ptr [RSP + 0x8],RCX
0000b53e(3): MOV R8,qword ptr [R15]
0000b541(3): MOV RDX,R8
0000b544(4): MOV qword ptr [RSP],R8
0000b548(5): CALL 0x00008bf0
0000b54d(5): MOV RCX,qword ptr [RSP + 0x8]
0000b552(4): MOV R8,qword ptr [RSP]
0000b556(5): CMP qword ptr [RCX + 0x8],0x1
0000b55b(6): JG 0x0000b4a8
0000b561(3): TEST RAX,RAX
0000b564(2): JNZ 0x0000b4f0
0000b566(4): MOV RDI,qword ptr [R14 + 0x8]
0000b56a(4): LEA RSI,[R14 + 0x10]
0000b56e(3): MOV RDX,R8
0000b571(5): CALL 0x00008bf0
0000b576(3): TEST RAX,RAX
0000b579(6): JNZ 0x0000b4ca
0000b57f(5): JMP 0x0000b4f0
0000b588(4): MOV R15,qword ptr [R15 + 0x8]
0000b58c(3): TEST R15,R15
0000b58f(6): JLE 0x0000b4f0
0000b595(3): MOV RDX,R15
0000b598(3): MOV RSI,R11
0000b59b(3): MOV RDI,R10
0000b59e(5): CALL 0x00008bf0
0000b5a3(3): TEST RAX,RAX
0000b5a6(6): JNZ 0x0000b4f0
0000b5ac(4): MOV RDI,qword ptr [R14 + 0x8]
0000b5b0(4): LEA RSI,[R14 + 0x10]
0000b5b4(5): CALL 0x00008bf0
0000b5b9(3): TEST RAX,RAX
0000b5bc(6): JZ 0x0000b4f0
0000b5c2(5): JMP 0x0000b4ca
0000b5d0(3): XOR R9D,R9D
0000b5d3(3): TEST R10,R10
0000b5d6(5): LEA R11,[RSP + 0x30]
0000b5db(2): JLE 0x0000b62c
0000b5dd(3): NOP dword ptr [RAX]
0000b5e0(4): MOV RAX,qword ptr [RBP + 0x10]
0000b5e4(5): MOV RDI,qword ptr [RSP + 0x28]
0000b5e9(3): MOV RSI,R11
0000b5ec(4): MOV R10,qword ptr [RAX + R9*0x8]
0000b5f0(3): MOV RDX,R10
0000b5f3(5): CALL 0x00008bf0
0000b5f8(3): TEST RAX,RAX
0000b5fb(2): JNZ 0x0000b622
0000b5fd(4): LEA RBX,[R14 + 0x10]
0000b601(4): MOV RDI,qword ptr [R14 + 0x8]
0000b605(3): MOV RSI,RBX
0000b608(5): CALL 0x00008bf0
0000b60d(4): SUB RAX,0x1
0000b611(3): MOV RDX,RAX
0000b614(2): JS 0x0000b622
0000b616(4): LEA RDI,[R14 + 0x8]
0000b61a(3): MOV RSI,RBX
0000b61d(5): CALL 0x00008d70
0000b622(4): ADD R9,0x1
0000b626(4): CMP qword ptr [RBP + 0x8],R9
0000b62a(2): JG 0x0000b5e0
0000b62c(5): MOV RDI,qword ptr [RSP + 0x30]
0000b631(5): CALL 0x000019d0
0000b636(2): XOR EAX,EAX
0000b638(5): MOV RSI,qword ptr [RSP + 0x38]
0000b63d(9): XOR RSI,qword ptr FS:[0x28]
0000b646(2): JNZ 0x0000b676
0000b648(4): ADD RSP,0x48
0000b64c(1): POP RBX
0000b64d(1): POP RBP
0000b64e(2): POP R12
0000b650(2): POP R13
0000b652(2): POP R14
0000b654(2): POP R15
0000b656(1): RET
0000b660(5): MOV RDI,qword ptr [RSP + 0x30]
0000b665(3): MOV dword ptr [RSP],EAX
0000b668(5): CALL 0x000019d0
0000b66d(3): MOV EAX,dword ptr [RSP]
0000b670(2): JMP 0x0000b638
0000b672(2): XOR EDI,EDI
0000b674(2): JMP 0x0000b631
0000b676(5): CALL 0x00001ad0
0000b67b(5): NOP dword ptr [RAX + RAX*0x1]
0000b680(2): PUSH R15
0000b682(2): PUSH R14
0000b684(3): MOV R15,RDI
0000b687(2): PUSH R13
0000b689(2): PUSH R12
0000b68b(5): MOV EDI,0x3800
0000b690(1): PUSH RBP
0000b691(1): PUSH RBX
0000b692(7): SUB RSP,0x108
0000b699(9): MOV RAX,qword ptr FS:[0x28]
0000b6a2(8): MOV qword ptr [0xf8 + RSP],RAX
0000b6aa(2): XOR EAX,EAX
0000b6ac(5): MOV qword ptr [RSP + 0x8],RSI
0000b6b1(5): CALL 0x00001c20
0000b6b6(3): TEST RAX,RAX
0000b6b9(5): MOV qword ptr [RSP + 0x18],RAX
0000b6be(6): JZ 0x0000ba90
0000b6c4(5): MOV RAX,qword ptr [RSP + 0x18]
0000b6c9(4): PXOR XMM0,XMM0
0000b6cd(7): LEA RBX,[0x1800 + RAX]
0000b6d4(5): MOV RAX,qword ptr [RSP + 0x8]
0000b6d9(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000b6e1(5): MOV qword ptr [RSP + 0x40],RBX
0000b6e6(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000b6ee(5): CMP qword ptr [RAX + 0x10],0x0
0000b6f3(8): MOV qword ptr [RAX + 0x58],0x0
0000b6fb(8): MOV qword ptr [RAX + 0x60],0x0
0000b703(6): JLE 0x0000c17a
0000b709(5): MOV qword ptr [RSP + 0x30],R15
0000b70e(2): XOR EBP,EBP
0000b710(9): MOV qword ptr [RSP + 0x10],0x0
0000b719(3): MOV R15,RBX
0000b71c(5): MOV RBX,qword ptr [RSP + 0x10]
0000b721(8): LEA RAX,[RBX*0x8]
0000b729(5): MOV qword ptr [RSP + 0x20],RAX
0000b72e(5): MOV RAX,qword ptr [RSP + 0x8]
0000b733(4): MOV RAX,qword ptr [RAX + 0x18]
0000b737(4): MOV R13,qword ptr [RAX + RBX*0x8]
0000b73b(5): MOV RAX,qword ptr [RSP + 0x30]
0000b740(4): SHL R13,0x4
0000b744(3): ADD R13,qword ptr [RAX]
0000b747(5): MOVZX R14D,byte ptr [R13 + 0x8]
0000b74c(4): MOV EAX,dword ptr [R13 + 0x8]
0000b750(3): SHR EAX,0x8
0000b753(4): AND AX,0x3ff
0000b757(4): CMP R14D,0x1
0000b75b(6): JZ 0x0000bac0
0000b761(4): CMP R14D,0x3
0000b765(6): JZ 0x0000bf30
0000b76b(4): CMP R14D,0x5
0000b76f(6): JZ 0x0000bdf0
0000b775(4): CMP R14D,0x7
0000b779(6): JZ 0x0000bf59
0000b77f(5): MOV RBX,qword ptr [RSP + 0x8]
0000b784(6): ADD qword ptr [RSP + 0x10],0x1
0000b78a(5): MOV RAX,qword ptr [RSP + 0x10]
0000b78f(4): CMP RAX,qword ptr [RBX + 0x10]
0000b793(2): JL 0x0000b71c
0000b795(3): TEST RBP,RBP
0000b798(5): MOV R15,qword ptr [RSP + 0x30]
0000b79d(6): JLE 0x0000c1f9
0000b7a3(4): LEA RBX,[RBP + 0x1]
0000b7a7(9): MOV qword ptr [RSP + 0x78],0x0
0000b7b0(5): MOV qword ptr [RSP + 0x70],RBX
0000b7b5(4): SHL RBX,0x3
0000b7b9(3): MOV RDI,RBX
0000b7bc(5): CALL 0x00001c20
0000b7c1(3): TEST RAX,RAX
0000b7c4(3): MOV R12,RAX
0000b7c7(8): MOV qword ptr [0x80 + RSP],RAX
0000b7cf(6): JZ 0x0000bfcf
0000b7d5(10): MOV RAX,0xaaaaaaaaaaaa855
0000b7df(8): MOV dword ptr [RSP + 0x6c],0x0
0000b7e7(3): CMP RBP,RAX
0000b7ea(6): JG 0x0000bfcf
0000b7f0(5): LEA RAX,[RBP + RBP*0x2]
0000b7f5(4): SHL RAX,0x3
0000b7f9(3): MOV RDI,RAX
0000b7fc(5): MOV qword ptr [RSP + 0x58],RAX
0000b801(5): CALL 0x00001c20
0000b806(3): TEST RAX,RAX
0000b809(5): MOV qword ptr [RSP + 0x10],RAX
0000b80e(6): JZ 0x0000bfcf
0000b814(5): MOV RAX,qword ptr [RSP + 0x10]
0000b819(4): SUB RBX,0x8
0000b81d(5): MOV R12,qword ptr [RSP + 0x40]
0000b822(4): PXOR XMM0,XMM0
0000b826(5): LEA R14,[RSP + 0x70]
0000b82b(5): MOV qword ptr [RSP + 0x20],RBP
0000b830(5): MOV byte ptr [RSP + 0x4f],0x0
0000b835(3): MOV RBP,R15
0000b838(3): ADD RAX,RBX
0000b83b(5): MOV qword ptr [RSP + 0x50],R12
0000b840(3): ADD RBX,RAX
0000b843(5): MOV qword ptr [RSP + 0x30],RAX
0000b848(5): MOV RAX,qword ptr [RSP + 0x18]
0000b84d(8): MOVAPS xmmword ptr [0xd0 + RSP],XMM0
0000b855(5): MOV qword ptr [RSP + 0x38],RBX
0000b85a(2): XOR EBX,EBX
0000b85c(4): LEA R13,[RAX + 0x8]
0000b860(5): LEA RAX,[RSP + 0x6c]
0000b865(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0000b86d(5): MOV qword ptr [RSP + 0x28],RAX
0000b872(9): MOV qword ptr [RSP + 0x78],0x0
0000b87b(5): CMP qword ptr [R13],0x0
0000b880(2): JLE 0x0000b8c8
0000b882(3): XOR R15D,R15D
0000b885(3): NOP dword ptr [RAX]
0000b888(4): MOV RAX,qword ptr [R13 + 0x8]
0000b88c(4): MOV RDX,qword ptr [RAX + R15*0x8]
0000b890(4): MOV RAX,qword ptr [RBP + 0x18]
0000b894(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000b898(4): CMP RAX,-0x1
0000b89c(2): JZ 0x0000b8be
0000b89e(4): LEA RDX,[RAX + RAX*0x2]
0000b8a2(4): MOV RAX,qword ptr [RBP + 0x30]
0000b8a6(3): MOV RDI,R14
0000b8a9(4): LEA RSI,[RAX + RDX*0x8]
0000b8ad(5): CALL 0x00009110
0000b8b2(2): TEST EAX,EAX
0000b8b4(4): MOV dword ptr [RSP + 0x6c],EAX
0000b8b8(6): JNZ 0x0000bfb8
0000b8be(4): ADD R15,0x1
0000b8c2(4): CMP qword ptr [R13],R15
0000b8c6(2): JG 0x0000b888
0000b8c8(5): MOV RDI,qword ptr [RSP + 0x28]
0000b8cd(2): XOR ECX,ECX
0000b8cf(3): MOV RSI,RBP
0000b8d2(3): MOV RDX,R14
0000b8d5(5): CALL 0x00009f40
0000b8da(5): MOV RSI,qword ptr [RSP + 0x10]
0000b8df(3): TEST RAX,RAX
0000b8e2(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000b8e6(6): JZ 0x0000c098
0000b8ec(4): CMP byte ptr [RAX + 0x68],0x0
0000b8f0(6): JS 0x0000c010
0000b8f6(5): MOV RDI,qword ptr [RSP + 0x30]
0000b8fb(5): MOV RSI,qword ptr [RSP + 0x38]
0000b900(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000b904(5): MOV RAX,qword ptr [RSP + 0x10]
0000b909(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000b90d(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000b911(8): LEA RDX,[0xd0 + RSP]
0000b919(2): XOR EAX,EAX
0000b91b(4): MOV RCX,qword ptr [RDX + RAX*0x1]
0000b91f(4): OR RCX,qword ptr [R12 + RAX*0x1]
0000b923(4): MOV qword ptr [RDX + RAX*0x1],RCX
0000b927(4): ADD RAX,0x8
0000b92b(4): CMP RAX,0x20
0000b92f(2): JNZ 0x0000b91b
0000b931(4): ADD RBX,0x1
0000b935(4): ADD R13,0x18
0000b939(4): ADD R12,0x20
0000b93d(5): CMP RBX,qword ptr [RSP + 0x20]
0000b942(6): JNZ 0x0000b872
0000b948(5): CMP byte ptr [RSP + 0x4f],0x0
0000b94d(3): MOV R15,RBP
0000b950(5): MOV RBP,qword ptr [RSP + 0x20]
0000b955(5): MOV qword ptr [RSP + 0x20],RDX
0000b95a(6): JNZ 0x0000c0a9
0000b960(5): MOV ESI,0x100
0000b965(5): MOV EDI,0x8
0000b96a(5): CALL 0x00001bc0
0000b96f(3): MOV R11,RAX
0000b972(5): MOV RAX,qword ptr [RSP + 0x8]
0000b977(3): TEST R11,R11
0000b97a(4): MOV qword ptr [RAX + 0x58],R11
0000b97e(6): JZ 0x0000bfbd
0000b984(5): MOV RBX,qword ptr [RSP + 0x40]
0000b989(5): MOV R12,qword ptr [RSP + 0x10]
0000b98e(3): XOR R9D,R9D
0000b991(5): MOV R13,qword ptr [RSP + 0x30]
0000b996(5): MOV RDX,qword ptr [RSP + 0x20]
0000b99b(4): ADD RBX,0x20
0000b99f(4): MOV RAX,qword ptr [RDX + R9*0x1]
0000b9a3(3): TEST RAX,RAX
0000b9a6(2): JZ 0x0000b9d4
0000b9a8(3): MOV RSI,R9
0000b9ab(5): MOV ECX,0x1
0000b9b0(4): SHL RSI,0x6
0000b9b4(3): ADD RSI,R11
0000b9b7(9): NOP word ptr [RAX + RAX*0x1]
0000b9c0(2): TEST AL,0x1
0000b9c2(6): JNZ 0x0000c128
0000b9c8(3): ADD RCX,RCX
0000b9cb(4): ADD RSI,0x8
0000b9cf(3): SHR RAX,1
0000b9d2(2): JNZ 0x0000b9c0
0000b9d4(4): ADD R9,0x8
0000b9d8(4): CMP R9,0x20
0000b9dc(2): JNZ 0x0000b99f
0000b9de(8): TEST byte ptr [0xd1 + RSP],0x4
0000b9e6(2): JZ 0x0000ba22
0000b9e8(2): XOR EAX,EAX
0000b9ea(5): MOV RDX,qword ptr [RSP + 0x50]
0000b9ef(2): JMP 0x0000b9fe
0000b9f1(4): ADD RAX,0x1
0000b9f5(4): ADD RDX,0x20
0000b9f9(3): CMP RAX,RBP
0000b9fc(2): JZ 0x0000ba22
0000b9fe(7): TEST qword ptr [RDX],0x400
0000ba05(2): JZ 0x0000b9f1
0000ba07(5): MOV RBX,qword ptr [RSP + 0x38]
0000ba0c(5): CMP byte ptr [RSP + 0x4f],0x0
0000ba11(4): MOV RAX,qword ptr [RBX + RAX*0x8]
0000ba15(4): MOV qword ptr [R11 + 0x50],RAX
0000ba19(2): JZ 0x0000ba22
0000ba1b(7): MOV qword ptr [0x850 + R11],RAX
0000ba22(5): MOV RDI,qword ptr [RSP + 0x10]
0000ba27(5): CALL 0x000019d0
0000ba2c(8): MOV RDI,qword ptr [0x80 + RSP]
0000ba34(5): CALL 0x000019d0
0000ba39(5): MOV RAX,qword ptr [RSP + 0x18]
0000ba3e(5): MOV RBX,qword ptr [RSP + 0x58]
0000ba43(4): LEA RBP,[RAX + 0x10]
0000ba47(3): ADD RBX,RBP
0000ba4a(4): MOV RDI,qword ptr [RBP]
0000ba4e(4): ADD RBP,0x18
0000ba52(5): CALL 0x000019d0
0000ba57(3): CMP RBX,RBP
0000ba5a(2): JNZ 0x0000ba4a
0000ba5c(5): MOV RDI,qword ptr [RSP + 0x18]
0000ba61(5): CALL 0x000019d0
0000ba66(5): MOV EAX,0x1
0000ba6b(2): JMP 0x0000ba92
0000ba6d(3): TEST RBP,RBP
0000ba70(8): MOV qword ptr [RBX + 0x8],0x0
0000ba78(7): MOV qword ptr [RBX],0x0
0000ba7f(6): JNZ 0x0000bdb0
0000ba85(5): MOV RDI,qword ptr [RSP + 0x18]
0000ba8a(5): CALL 0x000019d0
0000ba8f(1): NOP
0000ba90(2): XOR EAX,EAX
0000ba92(8): MOV RBX,qword ptr [0xf8 + RSP]
0000ba9a(9): XOR RBX,qword ptr FS:[0x28]
0000baa3(6): JNZ 0x0000c1f4
0000baa9(7): ADD RSP,0x108
0000bab0(1): POP RBX
0000bab1(1): POP RBP
0000bab2(2): POP R12
0000bab4(2): POP R13
0000bab6(2): POP R14
0000bab8(2): POP R15
0000baba(1): RET
0000bac0(5): MOVZX ECX,byte ptr [R13]
0000bac5(8): LEA R12,[0x90 + RSP]
0000bacd(5): MOV EDI,0x1
0000bad2(3): MOV RDX,RCX
0000bad5(3): AND ECX,0x3f
0000bad8(4): SHR RDX,0x3
0000badc(3): SHL RDI,CL
0000badf(3): AND EDX,0x18
0000bae2(4): OR qword ptr [R12 + RDX*0x1],RDI
0000bae6(3): TEST AX,AX
0000bae9(6): JZ 0x0000bbb0
0000baef(2): TEST AL,0x20
0000baf1(6): JNZ 0x0000be60
0000baf7(2): TEST AL,0x80
0000baf9(6): JNZ 0x0000bd94
0000baff(2): TEST AL,0x4
0000bb01(2): JZ 0x0000bb55
0000bb03(4): CMP R14D,0x1
0000bb07(6): JZ 0x0000bee5
0000bb0d(5): MOV R8,qword ptr [RSP + 0x30]
0000bb12(8): CMP dword ptr [0xb4 + R8],0x1
0000bb1a(6): JLE 0x0000bf72
0000bb20(4): MOV RDI,qword ptr [R8 + 0x78]
0000bb24(2): XOR ESI,ESI
0000bb26(2): XOR ECX,ECX
0000bb28(4): MOV RDX,qword ptr [RDI + RCX*0x8]
0000bb2c(3): NOT RDX
0000bb2f(8): OR RDX,qword ptr [0xb8 + R8 + RCX*0x8]
0000bb37(4): AND RDX,qword ptr [R12 + RCX*0x8]
0000bb3b(4): MOV qword ptr [R12 + RCX*0x8],RDX
0000bb3f(4): ADD RCX,0x1
0000bb43(3): OR RSI,RDX
0000bb46(4): CMP RCX,0x4
0000bb4a(2): JNZ 0x0000bb28
0000bb4c(3): TEST RSI,RSI
0000bb4f(6): JZ 0x0000b77f
0000bb55(2): TEST AL,0x8
0000bb57(2): JZ 0x0000bbb0
0000bb59(4): CMP R14D,0x1
0000bb5d(6): JZ 0x0000be91
0000bb63(5): MOV RDI,qword ptr [RSP + 0x30]
0000bb68(7): CMP dword ptr [0xb4 + RDI],0x1
0000bb6f(6): JLE 0x0000beae
0000bb75(4): MOV RSI,qword ptr [RDI + 0x78]
0000bb79(2): XOR ECX,ECX
0000bb7b(2): XOR EDX,EDX
0000bb7d(8): MOV RAX,qword ptr [0xb8 + RDI + RDX*0x8]
0000bb85(4): AND RAX,qword ptr [RSI + RDX*0x8]
0000bb89(3): NOT RAX
0000bb8c(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000bb90(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000bb94(4): ADD RDX,0x1
0000bb98(3): OR RCX,RAX
0000bb9b(4): CMP RDX,0x4
0000bb9f(2): JNZ 0x0000bb7d
0000bba1(3): TEST RCX,RCX
0000bba4(6): JZ 0x0000b77f
0000bbaa(6): NOP word ptr [RAX + RAX*0x1]
0000bbb0(2): XOR EBX,EBX
0000bbb2(3): TEST RBP,RBP
0000bbb5(6): JLE 0x0000bd1b
0000bbbb(5): MOV qword ptr [RSP + 0x28],R13
0000bbc0(3): MOV R13,R15
0000bbc3(5): NOP dword ptr [RAX + RAX*0x1]
0000bbc8(3): MOV R10,RBX
0000bbcb(4): SHL R10,0x5
0000bbcf(4): CMP R14D,0x1
0000bbd3(2): JNZ 0x0000bbf8
0000bbd5(5): MOV RAX,qword ptr [RSP + 0x28]
0000bbda(3): MOVZX EDX,byte ptr [RAX]
0000bbdd(3): MOV RAX,RDX
0000bbe0(4): SHR RAX,0x3
0000bbe4(3): AND EAX,0x18
0000bbe7(3): ADD RAX,R13
0000bbea(4): MOV RAX,qword ptr [RAX + R10*0x1]
0000bbee(4): BT RAX,RDX
0000bbf2(6): JNC 0x0000bd0b
0000bbf8(5): LEA RDI,[R13 + R10*0x1]
0000bbfd(8): LEA RSI,[0xb0 + RSP]
0000bc05(2): XOR ECX,ECX
0000bc07(2): XOR EAX,EAX
0000bc09(4): MOV RDX,qword ptr [R12 + RAX*0x8]
0000bc0d(4): AND RDX,qword ptr [RDI + RAX*0x8]
0000bc11(4): MOV qword ptr [RSI + RAX*0x8],RDX
0000bc15(4): ADD RAX,0x1
0000bc19(3): OR RCX,RDX
0000bc1c(4): CMP RAX,0x4
0000bc20(2): JNZ 0x0000bc09
0000bc22(3): TEST RCX,RCX
0000bc25(6): JZ 0x0000bd0b
0000bc2b(8): LEA R11,[0xd0 + RSP]
0000bc33(3): XOR R15D,R15D
0000bc36(3): XOR R9D,R9D
0000bc39(2): XOR ECX,ECX
0000bc3b(4): MOV RSI,qword ptr [R12 + RCX*0x8]
0000bc3f(4): MOV RAX,qword ptr [RDI + RCX*0x8]
0000bc43(3): MOV RDX,RSI
0000bc46(3): NOT RDX
0000bc49(3): AND RDX,RAX
0000bc4c(3): NOT RAX
0000bc4f(3): AND RAX,RSI
0000bc52(4): MOV qword ptr [R11 + RCX*0x8],RDX
0000bc56(3): OR R9,RDX
0000bc59(4): MOV qword ptr [R12 + RCX*0x8],RAX
0000bc5d(4): ADD RCX,0x1
0000bc61(3): OR R15,RAX
0000bc64(4): CMP RCX,0x4
0000bc68(2): JNZ 0x0000bc3b
0000bc6a(5): MOV RDI,qword ptr [RSP + 0x18]
0000bc6f(4): LEA RAX,[RBX + RBX*0x2]
0000bc73(3): TEST R9,R9
0000bc76(4): LEA RDX,[RDI + RAX*0x8]
0000bc7a(2): JZ 0x0000bce4
0000bc7c(3): MOV RAX,RBP
0000bc7f(9): MOVDQA XMM0,xmmword ptr [0xd0 + RSP]
0000bc88(4): SHL RAX,0x5
0000bc8c(3): MOV RSI,RDX
0000bc8f(5): MOV qword ptr [RSP + 0x38],RDX
0000bc94(3): ADD RAX,R13
0000bc97(3): MOVUPS xmmword ptr [RAX],XMM0
0000bc9a(9): MOVDQA XMM0,xmmword ptr [0xe0 + RSP]
0000bca3(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000bca7(5): LEA RAX,[RBP + RBP*0x2]
0000bcac(4): LEA RDI,[RDI + RAX*0x8]
0000bcb0(9): MOVDQA XMM0,xmmword ptr [0xb0 + RSP]
0000bcb9(6): MOVUPS xmmword ptr [R13 + R10*0x1],XMM0
0000bcbf(9): MOVDQA XMM0,xmmword ptr [0xc0 + RSP]
0000bcc8(6): MOVUPS xmmword ptr [R13 + R10*0x1 + 0x10],XMM0
0000bcce(5): CALL 0x00009d50
0000bcd3(2): TEST EAX,EAX
0000bcd5(6): JNZ 0x0000bdb0
0000bcdb(5): MOV RDX,qword ptr [RSP + 0x38]
0000bce0(4): ADD RBP,0x1
0000bce4(5): MOV RAX,qword ptr [RSP + 0x8]
0000bce9(5): MOV RSI,qword ptr [RSP + 0x20]
0000bcee(3): MOV RDI,RDX
0000bcf1(4): MOV RAX,qword ptr [RAX + 0x18]
0000bcf5(4): MOV RSI,qword ptr [RAX + RSI*0x1]
0000bcf9(5): CALL 0x000076b0
0000bcfe(2): TEST AL,AL
0000bd00(6): JZ 0x0000bdb0
0000bd06(3): TEST R15,R15
0000bd09(2): JZ 0x0000bd18
0000bd0b(4): ADD RBX,0x1
0000bd0f(3): CMP RBX,RBP
0000bd12(6): JL 0x0000bbc8
0000bd18(3): MOV R15,R13
0000bd1b(3): CMP RBP,RBX
0000bd1e(6): JNZ 0x0000b77f
0000bd24(3): MOV RAX,RBP
0000bd27(9): MOVDQA XMM0,xmmword ptr [0x90 + RSP]
0000bd30(4): SHL RAX,0x5
0000bd34(5): MOV RBX,qword ptr [RSP + 0x20]
0000bd39(5): MOV EDI,0x8
0000bd3e(3): ADD RAX,R15
0000bd41(3): MOVUPS xmmword ptr [RAX],XMM0
0000bd44(9): MOVDQA XMM0,xmmword ptr [0xa0 + RSP]
0000bd4d(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000bd51(5): MOV RAX,qword ptr [RSP + 0x8]
0000bd56(4): MOV RAX,qword ptr [RAX + 0x18]
0000bd5a(4): MOV R13,qword ptr [RAX + RBX*0x1]
0000bd5e(5): MOV RBX,qword ptr [RSP + 0x18]
0000bd63(5): LEA RAX,[RBP + RBP*0x2]
0000bd68(4): LEA RBX,[RBX + RAX*0x8]
0000bd6c(7): MOV qword ptr [RBX],0x1
0000bd73(8): MOV qword ptr [RBX + 0x8],0x1
0000bd7b(5): CALL 0x00001c20
0000bd80(3): TEST RAX,RAX
0000bd83(4): MOV qword ptr [RBX + 0x10],RAX
0000bd87(6): JZ 0x0000ba6d
0000bd8d(3): MOV qword ptr [RAX],R13
0000bd90(4): ADD RBP,0x1
0000bd94(4): PXOR XMM0,XMM0
0000bd98(5): MOVAPS xmmword ptr [R12],XMM0
0000bd9d(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000bda3(5): JMP 0x0000b77f
0000bdb0(5): MOV RAX,qword ptr [RSP + 0x18]
0000bdb5(4): LEA RBX,[RAX + 0x10]
0000bdb9(5): LEA RAX,[RBP + RBP*0x2]
0000bdbe(4): LEA RBP,[RBX + RAX*0x8]
0000bdc2(6): NOP word ptr [RAX + RAX*0x1]
0000bdc8(3): MOV RDI,qword ptr [RBX]
0000bdcb(4): ADD RBX,0x18
0000bdcf(5): CALL 0x000019d0
0000bdd4(3): CMP RBP,RBX
0000bdd7(2): JNZ 0x0000bdc8
0000bdd9(5): MOV RDI,qword ptr [RSP + 0x18]
0000bdde(5): CALL 0x000019d0
0000bde3(5): JMP 0x0000ba90
0000bdf0(5): MOV RSI,qword ptr [RSP + 0x30]
0000bdf5(7): CMP dword ptr [0xb4 + RSI],0x1
0000bdfc(6): JLE 0x0000bf05
0000be02(4): MOV RSI,qword ptr [RSI + 0x78]
0000be06(8): LEA R12,[0x90 + RSP]
0000be0e(2): XOR EDX,EDX
0000be10(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000be14(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000be18(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000be1c(4): ADD RDX,0x8
0000be20(4): CMP RDX,0x20
0000be24(2): JNZ 0x0000be10
0000be26(5): MOV RBX,qword ptr [RSP + 0x30]
0000be2b(7): MOV RDX,qword ptr [0xd8 + RBX]
0000be32(3): TEST DL,0x40
0000be35(2): JNZ 0x0000be43
0000be37(12): AND qword ptr [0x90 + RSP],0xfffffbff
0000be43(6): AND EDX,0x80
0000be49(6): JZ 0x0000bae6
0000be4f(9): AND qword ptr [0x90 + RSP],-0x2
0000be58(5): JMP 0x0000bae6
0000be60(8): MOV RDX,qword ptr [0x90 + RSP]
0000be68(4): PXOR XMM0,XMM0
0000be6c(3): AND DH,0x4
0000be6f(5): MOVAPS xmmword ptr [R12],XMM0
0000be74(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000be7a(6): JZ 0x0000b77f
0000be80(12): MOV qword ptr [0x90 + RSP],0x400
0000be8c(5): JMP 0x0000baf7
0000be91(5): TEST byte ptr [R13 + 0xa],0x40
0000be96(6): JNZ 0x0000bd94
0000be9c(5): MOV RDI,qword ptr [RSP + 0x30]
0000bea1(7): CMP dword ptr [0xb4 + RDI],0x1
0000bea8(6): JG 0x0000bb75
0000beae(5): MOV RSI,qword ptr [RSP + 0x30]
0000beb3(2): XOR ECX,ECX
0000beb5(2): XOR EDX,EDX
0000beb7(8): MOV RAX,qword ptr [0xb8 + RSI + RDX*0x8]
0000bebf(3): NOT RAX
0000bec2(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000bec6(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000beca(4): ADD RDX,0x1
0000bece(3): OR RCX,RAX
0000bed1(4): CMP RDX,0x4
0000bed5(2): JNZ 0x0000beb7
0000bed7(3): TEST RCX,RCX
0000beda(6): JNZ 0x0000bbb0
0000bee0(5): JMP 0x0000b77f
0000bee5(5): TEST byte ptr [R13 + 0xa],0x40
0000beea(6): JZ 0x0000bd94
0000bef0(5): MOV R8,qword ptr [RSP + 0x30]
0000bef5(8): CMP dword ptr [0xb4 + R8],0x1
0000befd(6): JG 0x0000bb20
0000bf03(2): JMP 0x0000bf72
0000bf05(4): PCMPEQD XMM0,XMM0
0000bf09(8): LEA R12,[0x90 + RSP]
0000bf11(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000bf19(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000bf21(5): JMP 0x0000be26
0000bf30(4): MOV RSI,qword ptr [R13]
0000bf34(8): LEA R12,[0x90 + RSP]
0000bf3c(2): XOR EDX,EDX
0000bf3e(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000bf42(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000bf46(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000bf4a(4): ADD RDX,0x8
0000bf4e(4): CMP RDX,0x20
0000bf52(2): JNZ 0x0000bf3e
0000bf54(5): JMP 0x0000bae6
0000bf59(4): PCMPEQD XMM0,XMM0
0000bf5d(8): LEA R12,[0x90 + RSP]
0000bf65(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000bf6d(5): JMP 0x0000be26
0000bf72(5): MOV RDI,qword ptr [RSP + 0x30]
0000bf77(2): XOR ESI,ESI
0000bf79(2): XOR EDX,EDX
0000bf7b(4): MOV RCX,qword ptr [R12 + RDX*0x8]
0000bf7f(8): AND RCX,qword ptr [0xb8 + RDI + RDX*0x8]
0000bf87(4): MOV qword ptr [R12 + RDX*0x8],RCX
0000bf8b(4): ADD RDX,0x1
0000bf8f(3): OR RSI,RCX
0000bf92(4): CMP RDX,0x4
0000bf96(2): JNZ 0x0000bf7b
0000bf98(3): TEST RSI,RSI
0000bf9b(6): JNZ 0x0000bb55
0000bfa1(5): JMP 0x0000b77f
0000bfa6(4): MOV EDX,dword ptr [RSP + 0x6c]
0000bfaa(2): TEST EDX,EDX
0000bfac(6): JZ 0x0000c037
0000bfb2(6): NOP word ptr [RAX + RAX*0x1]
0000bfb8(5): MOV RBP,qword ptr [RSP + 0x20]
0000bfbd(5): MOV RDI,qword ptr [RSP + 0x10]
0000bfc2(5): CALL 0x000019d0
0000bfc7(8): MOV R12,qword ptr [0x80 + RSP]
0000bfcf(3): MOV RDI,R12
0000bfd2(5): CALL 0x000019d0
0000bfd7(5): MOV RAX,qword ptr [RSP + 0x18]
0000bfdc(4): LEA RBX,[RAX + 0x10]
0000bfe0(5): LEA RAX,[RBP + RBP*0x2]
0000bfe5(4): LEA RBP,[RBX + RAX*0x8]
0000bfe9(7): NOP dword ptr [RAX]
0000bff0(3): MOV RDI,qword ptr [RBX]
0000bff3(4): ADD RBX,0x18
0000bff7(5): CALL 0x000019d0
0000bffc(3): CMP RBP,RBX
0000bfff(2): JNZ 0x0000bff0
0000c001(5): MOV RDI,qword ptr [RSP + 0x18]
0000c006(5): CALL 0x000019d0
0000c00b(5): JMP 0x0000ba90
0000c010(5): MOV RDI,qword ptr [RSP + 0x28]
0000c015(5): MOV ECX,0x1
0000c01a(3): MOV RDX,R14
0000c01d(3): MOV RSI,RBP
0000c020(5): CALL 0x00009f40
0000c025(5): MOV RDI,qword ptr [RSP + 0x30]
0000c02a(3): TEST RAX,RAX
0000c02d(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000c031(6): JZ 0x0000bfa6
0000c037(5): MOV RDI,qword ptr [RSP + 0x10]
0000c03c(4): CMP RAX,qword ptr [RDI + RBX*0x8]
0000c040(2): JZ 0x0000c05b
0000c042(5): MOVZX EDI,byte ptr [RSP + 0x4f]
0000c047(7): CMP dword ptr [0xb4 + RBP],0x2
0000c04e(5): MOV EAX,0x1
0000c053(3): CMOVGE EDI,EAX
0000c056(5): MOV byte ptr [RSP + 0x4f],DIL
0000c05b(5): MOV RDI,qword ptr [RSP + 0x28]
0000c060(3): MOV RSI,RBP
0000c063(5): MOV ECX,0x2
0000c068(3): MOV RDX,R14
0000c06b(5): CALL 0x00009f40
0000c070(5): MOV RSI,qword ptr [RSP + 0x38]
0000c075(3): TEST RAX,RAX
0000c078(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000c07c(6): JNZ 0x0000b911
0000c082(4): MOV EAX,dword ptr [RSP + 0x6c]
0000c086(2): TEST EAX,EAX
0000c088(6): JZ 0x0000b911
0000c08e(5): JMP 0x0000bfb8
0000c098(4): MOV ECX,dword ptr [RSP + 0x6c]
0000c09c(2): TEST ECX,ECX
0000c09e(6): JZ 0x0000b8ec
0000c0a4(5): JMP 0x0000bfb8
0000c0a9(5): MOV ESI,0x200
0000c0ae(5): MOV EDI,0x8
0000c0b3(5): CALL 0x00001bc0
0000c0b8(3): MOV R11,RAX
0000c0bb(5): MOV RAX,qword ptr [RSP + 0x8]
0000c0c0(3): TEST R11,R11
0000c0c3(4): MOV qword ptr [RAX + 0x60],R11
0000c0c7(6): JZ 0x0000bfbd
0000c0cd(5): MOV R13,qword ptr [RSP + 0x40]
0000c0d2(5): MOV R10,qword ptr [RSP + 0x10]
0000c0d7(3): MOV R12,R11
0000c0da(5): MOV R14,qword ptr [RSP + 0x30]
0000c0df(5): MOV RDX,qword ptr [RSP + 0x20]
0000c0e4(2): XOR EBX,EBX
0000c0e6(4): ADD R13,0x20
0000c0ea(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000c0ee(3): TEST RAX,RAX
0000c0f1(2): JZ 0x0000c10f
0000c0f3(3): MOV RSI,R12
0000c0f6(5): MOV ECX,0x1
0000c0fb(2): TEST AL,0x1
0000c0fd(6): JNZ 0x0000c1ac
0000c103(3): ADD RCX,RCX
0000c106(4): ADD RSI,0x8
0000c10a(3): SHR RAX,1
0000c10d(2): JNZ 0x0000c0fb
0000c10f(4): ADD RBX,0x8
0000c113(7): ADD R12,0x200
0000c11a(4): CMP RBX,0x20
0000c11e(2): JNZ 0x0000c0ea
0000c120(5): JMP 0x0000b9de
0000c128(5): MOV RDI,qword ptr [RSP + 0x18]
0000c12d(8): TEST qword ptr [0x1800 + RDI + R9*0x1],RCX
0000c135(2): JNZ 0x0000c1a7
0000c137(4): LEA RDI,[RBX + R9*0x1]
0000c13b(3): XOR R8D,R8D
0000c13e(2): NOP
0000c140(3): MOV R10,qword ptr [RDI]
0000c143(4): ADD R8,0x1
0000c147(4): ADD RDI,0x20
0000c14b(3): AND R10,RCX
0000c14e(3): TEST R10,R10
0000c151(2): JZ 0x0000c140
0000c153(4): SHL R8,0x3
0000c157(8): TEST qword ptr [0xb8 + R15 + R9*0x1],RCX
0000c15f(2): JZ 0x0000c16e
0000c161(5): MOV RDI,qword ptr [R13 + R8*0x1]
0000c166(3): MOV qword ptr [RSI],RDI
0000c169(5): JMP 0x0000b9c8
0000c16e(4): MOV RDI,qword ptr [R12 + R8*0x1]
0000c172(3): MOV qword ptr [RSI],RDI
0000c175(5): JMP 0x0000b9c8
0000c17a(5): MOV RDI,qword ptr [RSP + 0x18]
0000c17f(5): CALL 0x000019d0
0000c184(5): MOV ESI,0x100
0000c189(5): MOV EDI,0x8
0000c18e(5): CALL 0x00001bc0
0000c193(5): MOV RBX,qword ptr [RSP + 0x8]
0000c198(3): TEST RAX,RAX
0000c19b(4): MOV qword ptr [RBX + 0x58],RAX
0000c19f(3): SETNZ AL
0000c1a2(5): JMP 0x0000ba92
0000c1a7(3): XOR R8D,R8D
0000c1aa(2): JMP 0x0000c157
0000c1ac(5): MOV RDI,qword ptr [RSP + 0x18]
0000c1b1(8): TEST qword ptr [0x1800 + RDI + RBX*0x1],RCX
0000c1b9(2): JNZ 0x0000c1f0
0000c1bb(5): LEA R9,[R13 + RBX*0x1]
0000c1c0(3): XOR R8D,R8D
0000c1c3(3): MOV R15,qword ptr [R9]
0000c1c6(4): ADD R8,0x1
0000c1ca(4): ADD R9,0x20
0000c1ce(3): MOV RDI,R8
0000c1d1(3): AND R15,RCX
0000c1d4(3): TEST R15,R15
0000c1d7(2): JZ 0x0000c1c3
0000c1d9(4): MOV R8,qword ptr [R10 + RDI*0x8]
0000c1dd(3): MOV qword ptr [RSI],R8
0000c1e0(4): MOV RDI,qword ptr [R14 + RDI*0x8]
0000c1e4(7): MOV qword ptr [0x800 + RSI],RDI
0000c1eb(5): JMP 0x0000c103
0000c1f0(2): XOR EDI,EDI
0000c1f2(2): JMP 0x0000c1d9
0000c1f4(5): CALL 0x00001ad0
0000c1f9(5): MOV RDI,qword ptr [RSP + 0x18]
0000c1fe(5): CALL 0x000019d0
0000c203(3): TEST RBP,RBP
0000c206(6): JNZ 0x0000ba90
0000c20c(5): JMP 0x0000c184
0000c220(4): CMP byte ptr [RSI + 0x30],0x10
0000c224(2): JZ 0x0000c288
0000c226(1): PUSH RBP
0000c227(1): PUSH RBX
0000c228(3): MOV RBX,RSI
0000c22b(3): MOV RBP,RDI
0000c22e(4): SUB RSP,0x8
0000c232(4): MOV qword ptr [RBX + 0x18],RSI
0000c236(4): MOV RDX,qword ptr [RBX + 0x30]
0000c23a(4): MOV RSI,qword ptr [RSI + 0x28]
0000c23e(5): CALL 0x00008390
0000c243(4): CMP RAX,-0x1
0000c247(3): MOV RDX,RAX
0000c24a(4): MOV qword ptr [RBX + 0x38],RAX
0000c24e(2): JZ 0x0000c2a0
0000c250(2): XOR EAX,EAX
0000c252(4): CMP byte ptr [RBX + 0x30],0xc
0000c256(2): JNZ 0x0000c27c
0000c258(3): MOV ECX,dword ptr [RBX + 0x28]
0000c25b(4): SHL RDX,0x4
0000c25f(4): ADD RDX,qword ptr [RBP]
0000c263(6): AND ECX,0x3ff
0000c269(3): SHL ECX,0x8
0000c26c(2): MOV ESI,ECX
0000c26e(3): MOV ECX,dword ptr [RDX + 0x8]
0000c271(6): AND ECX,0xfffc00ff
0000c277(2): OR ECX,ESI
0000c279(3): MOV dword ptr [RDX + 0x8],ECX
0000c27c(4): ADD RSP,0x8
0000c280(1): POP RBX
0000c281(1): POP RBP
0000c282(1): RET
0000c288(4): MOV RAX,qword ptr [RSI + 0x8]
0000c28c(4): MOV RDX,qword ptr [RAX + 0x18]
0000c290(4): MOV RAX,qword ptr [RAX + 0x38]
0000c294(4): MOV qword ptr [RSI + 0x18],RDX
0000c298(4): MOV qword ptr [RSI + 0x38],RAX
0000c29c(2): XOR EAX,EAX
0000c29e(1): RET
0000c2a0(5): MOV EAX,0xc
0000c2a5(2): JMP 0x0000c27c
0000c2b0(2): PUSH R12
0000c2b2(1): PUSH RBP
0000c2b3(3): MOV RBP,RDI
0000c2b6(1): PUSH RBX
0000c2b7(4): CMP qword ptr [RDI],0x0
0000c2bb(2): JLE 0x0000c2f2
0000c2bd(2): XOR EBX,EBX
0000c2bf(3): XOR R12D,R12D
0000c2c2(6): NOP word ptr [RAX + RAX*0x1]
0000c2c8(4): MOV RAX,qword ptr [RBP + 0x10]
0000c2cc(4): ADD R12,0x1
0000c2d0(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x28]
0000c2d5(5): CALL 0x000019d0
0000c2da(4): MOV RAX,qword ptr [RBP + 0x10]
0000c2de(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000c2e3(4): ADD RBX,0x30
0000c2e7(5): CALL 0x000019d0
0000c2ec(4): CMP R12,qword ptr [RBP]
0000c2f0(2): JL 0x0000c2c8
0000c2f2(1): POP RBX
0000c2f3(4): MOV RDI,qword ptr [RBP + 0x10]
0000c2f7(1): POP RBP
0000c2f8(2): POP R12
0000c2fa(5): JMP 0x000019d0
0000c300(2): PUSH R12
0000c302(1): PUSH RBP
0000c303(1): PUSH RBX
0000c304(3): MOV RAX,qword ptr [RDI]
0000c307(4): SUB RAX,0x1
0000c30b(3): TEST RAX,RAX
0000c30e(3): MOV qword ptr [RDI],RAX
0000c311(2): JS 0x0000c375
0000c313(4): LEA RBX,[RAX + RAX*0x2]
0000c317(3): MOV RAX,qword ptr [RSI]
0000c31a(3): MOV R12,RSI
0000c31d(4): SHL RCX,0x4
0000c321(3): MOV RBP,R9
0000c324(3): MOV RDI,R8
0000c327(4): SHL RBX,0x4
0000c32b(3): ADD RAX,RBX
0000c32e(3): MOV RSI,qword ptr [RAX]
0000c331(3): MOV qword ptr [RDX],RSI
0000c334(4): MOV RSI,qword ptr [RAX + 0x10]
0000c338(3): MOV RDX,RCX
0000c33b(5): CALL 0x00001be0
0000c340(4): MOV RDI,qword ptr [RBP + 0x10]
0000c344(5): CALL 0x000019d0
0000c349(4): MOV RAX,qword ptr [R12]
0000c34d(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000c352(5): CALL 0x000019d0
0000c357(4): ADD RBX,qword ptr [R12]
0000c35b(5): MOVDQU XMM0,xmmword ptr [RBX + 0x18]
0000c360(4): MOVAPS xmmword ptr [RBP],XMM0
0000c364(4): MOV RAX,qword ptr [RBX + 0x28]
0000c368(4): MOV qword ptr [RBP + 0x10],RAX
0000c36c(4): MOV RAX,qword ptr [RBX + 0x8]
0000c370(1): POP RBX
0000c371(1): POP RBP
0000c372(2): POP R12
0000c374(1): RET
0000c375(7): LEA RCX,[0x17040]
0000c37c(7): LEA RSI,[0x16a80]
0000c383(7): LEA RDI,[0x16ae8]
0000c38a(5): MOV EDX,0x555
0000c38f(5): CALL 0x00001b50
0000c394(2): NOP
0000c396(10): NOP word ptr CS:[RAX + RAX*0x1]
0000c3a0(1): PUSH RBP
0000c3a1(1): PUSH RBX
0000c3a2(3): MOV RBP,RDI
0000c3a5(3): MOV RDI,RSI
0000c3a8(3): MOV RBX,RSI
0000c3ab(4): SUB RSP,0x8
0000c3af(5): CALL 0x00001ab0
0000c3b4(4): CMP RAX,0x1
0000c3b8(2): JNZ 0x0000c3e0
0000c3ba(3): MOVZX ECX,byte ptr [RBX]
0000c3bd(3): MOV RDX,RCX
0000c3c0(3): AND ECX,0x3f
0000c3c3(4): SHR RDX,0x3
0000c3c7(3): SHL RAX,CL
0000c3ca(3): AND EDX,0x18
0000c3cd(5): OR qword ptr [RBP + RDX*0x1],RAX
0000c3d2(4): ADD RSP,0x8
0000c3d6(2): XOR EAX,EAX
0000c3d8(1): POP RBX
0000c3d9(1): POP RBP
0000c3da(1): RET
0000c3e0(4): ADD RSP,0x8
0000c3e4(5): MOV EAX,0x3
0000c3e9(1): POP RBX
0000c3ea(1): POP RBP
0000c3eb(1): RET
0000c3f0(2): PUSH R14
0000c3f2(2): PUSH R13
0000c3f4(3): MOV R13,RCX
0000c3f7(2): PUSH R12
0000c3f9(1): PUSH RBP
0000c3fa(3): MOV R12,R9
0000c3fd(1): PUSH RBX
0000c3fe(3): MOV RBP,RDI
0000c401(3): MOV RBX,RSI
0000c404(4): SUB RSP,0x10
0000c408(9): TEST qword ptr [RSP + 0x40],0x400000
0000c411(2): JZ 0x0000c438
0000c413(7): LEA RDI,[0x16af7]
0000c41a(5): MOV ECX,0x6
0000c41f(3): MOV RSI,R9
0000c422(2): CMPSB.REPE RDI,RSI
0000c424(3): SETA AL
0000c427(2): SBB AL,0x0
0000c429(2): TEST AL,AL
0000c42b(6): JNZ 0x0000c526
0000c431(7): LEA R12,[0x16af1]
0000c438(4): MOV RCX,qword ptr [R13]
0000c43c(3): CMP qword ptr [R8],RCX
0000c43f(3): MOV RAX,qword ptr [RDX]
0000c442(6): JZ 0x0000c559
0000c448(4): LEA RDX,[RCX + 0x1]
0000c44c(3): MOV RDI,R12
0000c44f(4): MOV qword ptr [R13],RDX
0000c453(4): LEA R13,[RAX + RCX*0x8]
0000c457(5): CALL 0x00001ba0
0000c45c(7): LEA RDI,[0x16b03]
0000c463(4): MOV qword ptr [R13],RAX
0000c467(5): MOV ECX,0x6
0000c46c(3): MOV RSI,R12
0000c46f(2): CMPSB.REPE RDI,RSI
0000c471(3): SETA AL
0000c474(2): SBB AL,0x0
0000c476(2): TEST AL,AL
0000c478(2): JZ 0x0000c4e8
0000c47a(7): LEA RDI,[0x16b09]
0000c481(5): MOV ECX,0x6
0000c486(3): MOV RSI,R12
0000c489(2): CMPSB.REPE RDI,RSI
0000c48b(3): SETA AL
0000c48e(2): SBB AL,0x0
0000c490(2): TEST AL,AL
0000c492(6): JNZ 0x0000c598
0000c498(5): CALL 0x00001dc0
0000c49d(2): XOR ECX,ECX
0000c49f(3): TEST RBP,RBP
0000c4a2(3): MOV RDX,qword ptr [RAX]
0000c4a5(5): MOV EDI,0x1
0000c4aa(6): JNZ 0x0000c76a
0000c4b0(4): TEST byte ptr [RDX + RCX*0x2],0x2
0000c4b4(2): JZ 0x0000c4c7
0000c4b6(3): MOV RAX,RCX
0000c4b9(3): MOV RSI,RDI
0000c4bc(4): SAR RAX,0x6
0000c4c0(3): SHL RSI,CL
0000c4c3(4): OR qword ptr [RBX + RAX*0x8],RSI
0000c4c7(4): ADD RCX,0x1
0000c4cb(7): CMP RCX,0x100
0000c4d2(2): JNZ 0x0000c4b0
0000c4d4(2): XOR EAX,EAX
0000c4d6(4): ADD RSP,0x10
0000c4da(1): POP RBX
0000c4db(1): POP RBP
0000c4dc(2): POP R12
0000c4de(2): POP R13
0000c4e0(2): POP R14
0000c4e2(1): RET
0000c4e8(5): CALL 0x00001dc0
0000c4ed(2): XOR ECX,ECX
0000c4ef(3): TEST RBP,RBP
0000c4f2(3): MOV RDX,qword ptr [RAX]
0000c4f5(5): MOV EDI,0x1
0000c4fa(6): JNZ 0x0000c6ea
0000c500(4): TEST byte ptr [RDX + RCX*0x2],0x8
0000c504(2): JZ 0x0000c517
0000c506(3): MOV RAX,RCX
0000c509(3): MOV RSI,RDI
0000c50c(4): SAR RAX,0x6
0000c510(3): SHL RSI,CL
0000c513(4): OR qword ptr [RBX + RAX*0x8],RSI
0000c517(4): ADD RCX,0x1
0000c51b(7): CMP RCX,0x100
0000c522(2): JNZ 0x0000c500
0000c524(2): JMP 0x0000c4d4
0000c526(7): LEA RDI,[0x16afd]
0000c52d(5): MOV ECX,0x6
0000c532(3): MOV RSI,R9
0000c535(2): CMPSB.REPE RDI,RSI
0000c537(4): MOV RCX,qword ptr [R13]
0000c53b(3): SETA AL
0000c53e(2): SBB AL,0x0
0000c540(2): TEST AL,AL
0000c542(7): LEA RAX,[0x16af1]
0000c549(4): CMOVZ R12,RAX
0000c54d(3): CMP qword ptr [R8],RCX
0000c550(3): MOV RAX,qword ptr [RDX]
0000c553(6): JNZ 0x0000c448
0000c559(5): LEA R14,[RCX + RCX*0x1 + 0x1]
0000c55e(3): MOV RDI,RAX
0000c561(5): MOV qword ptr [RSP + 0x8],R8
0000c566(4): MOV qword ptr [RSP],RDX
0000c56a(8): LEA RSI,[R14*0x8]
0000c572(5): CALL 0x00001c90
0000c577(3): TEST RAX,RAX
0000c57a(6): JZ 0x0000c898
0000c580(4): MOV RDX,qword ptr [RSP]
0000c584(5): MOV R8,qword ptr [RSP + 0x8]
0000c589(3): MOV qword ptr [RDX],RAX
0000c58c(3): MOV qword ptr [R8],R14
0000c58f(4): MOV RCX,qword ptr [R13]
0000c593(5): JMP 0x0000c448
0000c598(7): LEA RDI,[0x16afd]
0000c59f(5): MOV ECX,0x6
0000c5a4(3): MOV RSI,R12
0000c5a7(2): CMPSB.REPE RDI,RSI
0000c5a9(3): SETA AL
0000c5ac(2): SBB AL,0x0
0000c5ae(2): TEST AL,AL
0000c5b0(2): JZ 0x0000c61a
0000c5b2(7): LEA RDI,[0x16b0f]
0000c5b9(5): MOV ECX,0x6
0000c5be(3): MOV RSI,R12
0000c5c1(2): CMPSB.REPE RDI,RSI
0000c5c3(3): SETA AL
0000c5c6(2): SBB AL,0x0
0000c5c8(2): TEST AL,AL
0000c5ca(6): JNZ 0x0000c662
0000c5d0(5): CALL 0x00001dc0
0000c5d5(2): XOR ECX,ECX
0000c5d7(3): TEST RBP,RBP
0000c5da(3): MOV RDX,qword ptr [RAX]
0000c5dd(5): MOV EDI,0x1
0000c5e2(6): JNZ 0x0000c93e
0000c5e8(8): NOP dword ptr [RAX + RAX*0x1]
0000c5f0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x20
0000c5f5(2): JZ 0x0000c608
0000c5f7(3): MOV RAX,RCX
0000c5fa(3): MOV RSI,RDI
0000c5fd(4): SAR RAX,0x6
0000c601(3): SHL RSI,CL
0000c604(4): OR qword ptr [RBX + RAX*0x8],RSI
0000c608(4): ADD RCX,0x1
0000c60c(7): CMP RCX,0x100
0000c613(2): JNZ 0x0000c5f0
0000c615(5): JMP 0x0000c4d4
0000c61a(5): CALL 0x00001dc0
0000c61f(2): XOR ECX,ECX
0000c621(3): TEST RBP,RBP
0000c624(3): MOV RDX,qword ptr [RAX]
0000c627(5): MOV EDI,0x1
0000c62c(6): JNZ 0x0000c802
0000c632(6): NOP word ptr [RAX + RAX*0x1]
0000c638(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x2
0000c63d(2): JZ 0x0000c650
0000c63f(3): MOV RAX,RCX
0000c642(3): MOV RSI,RDI
0000c645(4): SAR RAX,0x6
0000c649(3): SHL RSI,CL
0000c64c(4): OR qword ptr [RBX + RAX*0x8],RSI
0000c650(4): ADD RCX,0x1
0000c654(7): CMP RCX,0x100
0000c65b(2): JNZ 0x0000c638
0000c65d(5): JMP 0x0000c4d4
0000c662(7): LEA RDI,[0x16af1]
0000c669(5): MOV ECX,0x6
0000c66e(3): MOV RSI,R12
0000c671(2): CMPSB.REPE RDI,RSI
0000c673(3): SETA AL
0000c676(2): SBB AL,0x0
0000c678(2): TEST AL,AL
0000c67a(6): JZ 0x0000c723
0000c680(7): LEA RDI,[0x16b2e]
0000c687(5): MOV ECX,0x6
0000c68c(3): MOV RSI,R12
0000c68f(2): CMPSB.REPE RDI,RSI
0000c691(3): SETA AL
0000c694(2): SBB AL,0x0
0000c696(2): TEST AL,AL
0000c698(6): JNZ 0x0000c7a3
0000c69e(5): CALL 0x00001dc0
0000c6a3(2): XOR ECX,ECX
0000c6a5(3): TEST RBP,RBP
0000c6a8(3): MOV RDX,qword ptr [RAX]
0000c6ab(5): MOV EDI,0x1
0000c6b0(6): JNZ 0x0000cb5a
0000c6b6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000c6c0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x8
0000c6c5(2): JZ 0x0000c6d8
0000c6c7(3): MOV RAX,RCX
0000c6ca(3): MOV RSI,RDI
0000c6cd(4): SAR RAX,0x6
0000c6d1(3): SHL RSI,CL
0000c6d4(4): OR qword ptr [RBX + RAX*0x8],RSI
0000c6d8(4): ADD RCX,0x1
0000c6dc(7): CMP RCX,0x100
0000c6e3(2): JNZ 0x0000c6c0
0000c6e5(5): JMP 0x0000c4d4
0000c6ea(2): XOR EAX,EAX
0000c6ec(4): NOP dword ptr [RAX]
0000c6f0(4): TEST byte ptr [RDX + RAX*0x2],0x8
0000c6f4(2): JZ 0x0000c712
0000c6f6(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000c6fb(3): MOV R10,RDI
0000c6fe(3): MOV RSI,RCX
0000c701(3): AND ECX,0x3f
0000c704(4): SHR RSI,0x3
0000c708(3): SHL R10,CL
0000c70b(3): AND ESI,0x18
0000c70e(4): OR qword ptr [RBX + RSI*0x1],R10
0000c712(4): ADD RAX,0x1
0000c716(6): CMP RAX,0x100
0000c71c(2): JNZ 0x0000c6f0
0000c71e(5): JMP 0x0000c4d4
0000c723(5): CALL 0x00001dc0
0000c728(2): XOR ECX,ECX
0000c72a(3): TEST RBP,RBP
0000c72d(3): MOV RDX,qword ptr [RAX]
0000c730(5): MOV EDI,0x1
0000c735(6): JNZ 0x0000c908
0000c73b(5): NOP dword ptr [RAX + RAX*0x1]
0000c740(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x4
0000c745(2): JZ 0x0000c758
0000c747(3): MOV RAX,RCX
0000c74a(3): MOV RSI,RDI
0000c74d(4): SAR RAX,0x6
0000c751(3): SHL RSI,CL
0000c754(4): OR qword ptr [RBX + RAX*0x8],RSI
0000c758(4): ADD RCX,0x1
0000c75c(7): CMP RCX,0x100
0000c763(2): JNZ 0x0000c740
0000c765(5): JMP 0x0000c4d4
0000c76a(2): XOR EAX,EAX
0000c76c(4): NOP dword ptr [RAX]
0000c770(4): TEST byte ptr [RDX + RAX*0x2],0x2
0000c774(2): JZ 0x0000c792
0000c776(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000c77b(3): MOV R11,RDI
0000c77e(3): MOV RSI,RCX
0000c781(3): AND ECX,0x3f
0000c784(4): SHR RSI,0x3
0000c788(3): SHL R11,CL
0000c78b(3): AND ESI,0x18
0000c78e(4): OR qword ptr [RBX + RSI*0x1],R11
0000c792(4): ADD RAX,0x1
0000c796(6): CMP RAX,0x100
0000c79c(2): JNZ 0x0000c770
0000c79e(5): JMP 0x0000c4d4
0000c7a3(7): LEA RDI,[0x16b15]
0000c7aa(5): MOV ECX,0x6
0000c7af(3): MOV RSI,R12
0000c7b2(2): CMPSB.REPE RDI,RSI
0000c7b4(3): SETA AL
0000c7b7(2): SBB AL,0x0
0000c7b9(2): TEST AL,AL
0000c7bb(2): JNZ 0x0000c83c
0000c7bd(5): CALL 0x00001dc0
0000c7c2(2): XOR ECX,ECX
0000c7c4(3): TEST RBP,RBP
0000c7c7(3): MOV RDX,qword ptr [RAX]
0000c7ca(5): MOV EDI,0x1
0000c7cf(6): JNZ 0x0000cbc7
0000c7d5(3): NOP dword ptr [RAX]
0000c7d8(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x40
0000c7dd(2): JZ 0x0000c7f0
0000c7df(3): MOV RAX,RCX
0000c7e2(3): MOV RSI,RDI
0000c7e5(4): SAR RAX,0x6
0000c7e9(3): SHL RSI,CL
0000c7ec(4): OR qword ptr [RBX + RAX*0x8],RSI
0000c7f0(4): ADD RCX,0x1
0000c7f4(7): CMP RCX,0x100
0000c7fb(2): JNZ 0x0000c7d8
0000c7fd(5): JMP 0x0000c4d4
0000c802(2): XOR EAX,EAX
0000c804(4): NOP dword ptr [RAX]
0000c808(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x2
0000c80d(2): JZ 0x0000c82b
0000c80f(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000c814(3): MOV R14,RDI
0000c817(3): MOV RSI,RCX
0000c81a(3): AND ECX,0x3f
0000c81d(4): SHR RSI,0x3
0000c821(3): SHL R14,CL
0000c824(3): AND ESI,0x18
0000c827(4): OR qword ptr [RBX + RSI*0x1],R14
0000c82b(4): ADD RAX,0x1
0000c82f(6): CMP RAX,0x100
0000c835(2): JNZ 0x0000c808
0000c837(5): JMP 0x0000c4d4
0000c83c(7): LEA RDI,[0x16af7]
0000c843(5): MOV ECX,0x6
0000c848(3): MOV RSI,R12
0000c84b(2): CMPSB.REPE RDI,RSI
0000c84d(3): SETA AL
0000c850(2): SBB AL,0x0
0000c852(2): TEST AL,AL
0000c854(2): JNZ 0x0000c8a2
0000c856(5): CALL 0x00001dc0
0000c85b(2): XOR ECX,ECX
0000c85d(3): TEST RBP,RBP
0000c860(3): MOV RAX,qword ptr [RAX]
0000c863(5): MOV EDI,0x1
0000c868(6): JNZ 0x0000cb90
0000c86e(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x1
0000c873(2): JZ 0x0000c886
0000c875(3): MOV RDX,RCX
0000c878(3): MOV RSI,RDI
0000c87b(4): SAR RDX,0x6
0000c87f(3): SHL RSI,CL
0000c882(4): OR qword ptr [RBX + RDX*0x8],RSI
0000c886(4): ADD RCX,0x1
0000c88a(7): CMP RCX,0x100
0000c891(2): JNZ 0x0000c86e
0000c893(5): JMP 0x0000c4d4
0000c898(5): MOV EAX,0xc
0000c89d(5): JMP 0x0000c4d6
0000c8a2(7): LEA RDI,[0x16b1b]
0000c8a9(5): MOV ECX,0x6
0000c8ae(3): MOV RSI,R12
0000c8b1(2): CMPSB.REPE RDI,RSI
0000c8b3(3): SETA AL
0000c8b6(2): SBB AL,0x0
0000c8b8(2): TEST AL,AL
0000c8ba(6): JNZ 0x0000c9ae
0000c8c0(5): CALL 0x00001dc0
0000c8c5(2): XOR ECX,ECX
0000c8c7(3): TEST RBP,RBP
0000c8ca(3): MOV RDX,qword ptr [RAX]
0000c8cd(5): MOV ESI,0x1
0000c8d2(6): JNZ 0x0000c974
0000c8d8(4): TEST byte ptr [RDX + RCX*0x2],0x1
0000c8dc(2): JZ 0x0000c8ef
0000c8de(3): MOV RAX,RCX
0000c8e1(3): MOV RDI,RSI
0000c8e4(4): SAR RAX,0x6
0000c8e8(3): SHL RDI,CL
0000c8eb(4): OR qword ptr [RBX + RAX*0x8],RDI
0000c8ef(4): ADD RCX,0x1
0000c8f3(7): CMP RCX,0x100
0000c8fa(2): JNZ 0x0000c8d8
0000c8fc(5): JMP 0x0000c4d4
0000c908(2): XOR EAX,EAX
0000c90a(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x4
0000c90f(2): JZ 0x0000c92d
0000c911(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000c916(3): MOV R9,RDI
0000c919(3): MOV RSI,RCX
0000c91c(3): AND ECX,0x3f
0000c91f(4): SHR RSI,0x3
0000c923(3): SHL R9,CL
0000c926(3): AND ESI,0x18
0000c929(4): OR qword ptr [RBX + RSI*0x1],R9
0000c92d(4): ADD RAX,0x1
0000c931(6): CMP RAX,0x100
0000c937(2): JNZ 0x0000c90a
0000c939(5): JMP 0x0000c4d4
0000c93e(2): XOR EAX,EAX
0000c940(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x20
0000c945(2): JZ 0x0000c963
0000c947(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000c94c(3): MOV R9,RDI
0000c94f(3): MOV RSI,RCX
0000c952(3): AND ECX,0x3f
0000c955(4): SHR RSI,0x3
0000c959(3): SHL R9,CL
0000c95c(3): AND ESI,0x18
0000c95f(4): OR qword ptr [RBX + RSI*0x1],R9
0000c963(4): ADD RAX,0x1
0000c967(6): CMP RAX,0x100
0000c96d(2): JNZ 0x0000c940
0000c96f(5): JMP 0x0000c4d4
0000c974(2): XOR EAX,EAX
0000c976(5): MOV EDI,0x1
0000c97b(4): TEST byte ptr [RDX + RAX*0x2],0x1
0000c97f(2): JZ 0x0000c99d
0000c981(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000c986(3): MOV R14,RDI
0000c989(3): MOV RSI,RCX
0000c98c(3): AND ECX,0x3f
0000c98f(4): SHR RSI,0x3
0000c993(3): SHL R14,CL
0000c996(3): AND ESI,0x18
0000c999(4): OR qword ptr [RBX + RSI*0x1],R14
0000c99d(4): ADD RAX,0x1
0000c9a1(6): CMP RAX,0x100
0000c9a7(2): JNZ 0x0000c97b
0000c9a9(5): JMP 0x0000c4d4
0000c9ae(7): LEA RSI,[0x16b21]
0000c9b5(3): MOV RDI,R12
0000c9b8(5): CALL 0x00001bd0
0000c9bd(2): TEST EAX,EAX
0000c9bf(2): JNZ 0x0000ca3a
0000c9c1(5): CALL 0x00001dc0
0000c9c6(2): XOR ECX,ECX
0000c9c8(3): TEST RBP,RBP
0000c9cb(3): MOV RSI,qword ptr [RAX]
0000c9ce(5): MOV EDX,0x1
0000c9d3(2): JNZ 0x0000c9ff
0000c9d5(5): CMP word ptr [RSI + RCX*0x2],0x0
0000c9da(2): JNS 0x0000c9ed
0000c9dc(3): MOV RAX,RCX
0000c9df(3): MOV RDI,RDX
0000c9e2(4): SAR RAX,0x6
0000c9e6(3): SHL RDI,CL
0000c9e9(4): OR qword ptr [RBX + RAX*0x8],RDI
0000c9ed(4): ADD RCX,0x1
0000c9f1(7): CMP RCX,0x100
0000c9f8(2): JNZ 0x0000c9d5
0000c9fa(5): JMP 0x0000c4d4
0000c9ff(2): XOR EAX,EAX
0000ca01(5): MOV EDI,0x1
0000ca06(5): CMP word ptr [RSI + RAX*0x2],0x0
0000ca0b(2): JNS 0x0000ca29
0000ca0d(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000ca12(3): MOV R9,RDI
0000ca15(3): MOV RDX,RCX
0000ca18(3): AND ECX,0x3f
0000ca1b(4): SHR RDX,0x3
0000ca1f(3): SHL R9,CL
0000ca22(3): AND EDX,0x18
0000ca25(4): OR qword ptr [RBX + RDX*0x1],R9
0000ca29(4): ADD RAX,0x1
0000ca2d(6): CMP RAX,0x100
0000ca33(2): JNZ 0x0000ca06
0000ca35(5): JMP 0x0000c4d4
0000ca3a(7): LEA RSI,[0x16b27]
0000ca41(3): MOV RDI,R12
0000ca44(5): CALL 0x00001bd0
0000ca49(2): TEST EAX,EAX
0000ca4b(2): JNZ 0x0000cac4
0000ca4d(5): CALL 0x00001dc0
0000ca52(2): XOR ECX,ECX
0000ca54(3): TEST RBP,RBP
0000ca57(3): MOV RSI,qword ptr [RAX]
0000ca5a(5): MOV EDX,0x1
0000ca5f(2): JNZ 0x0000ca8a
0000ca61(4): TEST byte ptr [RSI + RCX*0x2],0x4
0000ca65(2): JZ 0x0000ca78
0000ca67(3): MOV RAX,RCX
0000ca6a(3): MOV RDI,RDX
0000ca6d(4): SAR RAX,0x6
0000ca71(3): SHL RDI,CL
0000ca74(4): OR qword ptr [RBX + RAX*0x8],RDI
0000ca78(4): ADD RCX,0x1
0000ca7c(7): CMP RCX,0x100
0000ca83(2): JNZ 0x0000ca61
0000ca85(5): JMP 0x0000c4d4
0000ca8a(2): XOR EAX,EAX
0000ca8c(5): MOV EDI,0x1
0000ca91(4): TEST byte ptr [RSI + RAX*0x2],0x4
0000ca95(2): JZ 0x0000cab3
0000ca97(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000ca9c(3): MOV R14,RDI
0000ca9f(3): MOV RDX,RCX
0000caa2(3): AND ECX,0x3f
0000caa5(4): SHR RDX,0x3
0000caa9(3): SHL R14,CL
0000caac(3): AND EDX,0x18
0000caaf(4): OR qword ptr [RBX + RDX*0x1],R14
0000cab3(4): ADD RAX,0x1
0000cab7(6): CMP RAX,0x100
0000cabd(2): JNZ 0x0000ca91
0000cabf(5): JMP 0x0000c4d4
0000cac4(7): LEA RSI,[0x16b2d]
0000cacb(3): MOV RDI,R12
0000cace(5): CALL 0x00001bd0
0000cad3(2): TEST EAX,EAX
0000cad5(2): JNZ 0x0000cb50
0000cad7(5): CALL 0x00001dc0
0000cadc(2): XOR ECX,ECX
0000cade(3): TEST RBP,RBP
0000cae1(3): MOV RSI,qword ptr [RAX]
0000cae4(5): MOV EDX,0x1
0000cae9(2): JNZ 0x0000cb15
0000caeb(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x10
0000caf0(2): JZ 0x0000cb03
0000caf2(3): MOV RAX,RCX
0000caf5(3): MOV RDI,RDX
0000caf8(4): SAR RAX,0x6
0000cafc(3): SHL RDI,CL
0000caff(4): OR qword ptr [RBX + RAX*0x8],RDI
0000cb03(4): ADD RCX,0x1
0000cb07(7): CMP RCX,0x100
0000cb0e(2): JNZ 0x0000caeb
0000cb10(5): JMP 0x0000c4d4
0000cb15(2): XOR EAX,EAX
0000cb17(5): MOV EDI,0x1
0000cb1c(5): TEST byte ptr [RSI + RAX*0x2 + 0x1],0x10
0000cb21(2): JZ 0x0000cb3f
0000cb23(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000cb28(3): MOV R9,RDI
0000cb2b(3): MOV RDX,RCX
0000cb2e(3): AND ECX,0x3f
0000cb31(4): SHR RDX,0x3
0000cb35(3): SHL R9,CL
0000cb38(3): AND EDX,0x18
0000cb3b(4): OR qword ptr [RBX + RDX*0x1],R9
0000cb3f(4): ADD RAX,0x1
0000cb43(6): CMP RAX,0x100
0000cb49(2): JNZ 0x0000cb1c
0000cb4b(5): JMP 0x0000c4d4
0000cb50(5): MOV EAX,0x4
0000cb55(5): JMP 0x0000c4d6
0000cb5a(2): XOR EAX,EAX
0000cb5c(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x8
0000cb61(2): JZ 0x0000cb7f
0000cb63(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000cb68(3): MOV R14,RDI
0000cb6b(3): MOV RSI,RCX
0000cb6e(3): AND ECX,0x3f
0000cb71(4): SHR RSI,0x3
0000cb75(3): SHL R14,CL
0000cb78(3): AND ESI,0x18
0000cb7b(4): OR qword ptr [RBX + RSI*0x1],R14
0000cb7f(4): ADD RAX,0x1
0000cb83(6): CMP RAX,0x100
0000cb89(2): JNZ 0x0000cb5c
0000cb8b(5): JMP 0x0000c4d4
0000cb90(2): XOR EDX,EDX
0000cb92(5): TEST byte ptr [RAX + RDX*0x2 + 0x1],0x1
0000cb97(2): JZ 0x0000cbb5
0000cb99(5): MOVZX ECX,byte ptr [RBP + RDX*0x1]
0000cb9e(3): MOV R9,RDI
0000cba1(3): MOV RSI,RCX
0000cba4(3): AND ECX,0x3f
0000cba7(4): SHR RSI,0x3
0000cbab(3): SHL R9,CL
0000cbae(3): AND ESI,0x18
0000cbb1(4): OR qword ptr [RBX + RSI*0x1],R9
0000cbb5(4): ADD RDX,0x1
0000cbb9(7): CMP RDX,0x100
0000cbc0(2): JNZ 0x0000cb92
0000cbc2(5): JMP 0x0000c4d4
0000cbc7(2): XOR EAX,EAX
0000cbc9(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x40
0000cbce(2): JZ 0x0000cbec
0000cbd0(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000cbd5(3): MOV R14,RDI
0000cbd8(3): MOV RSI,RCX
0000cbdb(3): AND ECX,0x3f
0000cbde(4): SHR RSI,0x3
0000cbe2(3): SHL R14,CL
0000cbe5(3): AND ESI,0x18
0000cbe8(4): OR qword ptr [RBX + RSI*0x1],R14
0000cbec(4): ADD RAX,0x1
0000cbf0(6): CMP RAX,0x100
0000cbf6(2): JNZ 0x0000cbc9
0000cbf8(5): JMP 0x0000c4d4
0000cc00(2): PUSH R15
0000cc02(2): PUSH R14
0000cc04(3): MOV R14,RDX
0000cc07(2): PUSH R13
0000cc09(2): PUSH R12
0000cc0b(3): MOV R13,RCX
0000cc0e(1): PUSH RBP
0000cc0f(1): PUSH RBX
0000cc10(3): MOV RBP,RDI
0000cc13(5): MOV EDI,0x20
0000cc18(3): MOV R12D,R8D
0000cc1b(4): SUB RSP,0x58
0000cc1f(4): MOV qword ptr [RSP],RSI
0000cc23(5): MOV ESI,0x1
0000cc28(5): MOV qword ptr [RSP + 0x8],R9
0000cc2d(9): MOV RAX,qword ptr FS:[0x28]
0000cc36(5): MOV qword ptr [RSP + 0x48],RAX
0000cc3b(2): XOR EAX,EAX
0000cc3d(9): MOV qword ptr [RSP + 0x18],0x0
0000cc46(5): CALL 0x00001bc0
0000cc4b(3): TEST RAX,RAX
0000cc4e(6): JZ 0x0000ce10
0000cc54(5): MOV ESI,0x1
0000cc59(5): MOV EDI,0x50
0000cc5e(3): MOV RBX,RAX
0000cc61(5): CALL 0x00001bc0
0000cc66(3): TEST RAX,RAX
0000cc69(3): MOV R15,RAX
0000cc6c(6): JZ 0x0000ce20
0000cc72(4): MOVZX EAX,byte ptr [RAX + 0x20]
0000cc76(4): SUB RSP,0x8
0000cc7a(3): MOV EDX,R12D
0000cc7d(2): PUSH 0x0
0000cc7f(3): AND EDX,0x1
0000cc82(5): MOV RDI,qword ptr [RSP + 0x10]
0000cc87(4): LEA RCX,[R15 + 0x48]
0000cc8b(3): MOV R9,R14
0000cc8e(3): MOV RSI,RBX
0000cc91(5): LEA R8,[RSP + 0x28]
0000cc96(3): AND EAX,0xfffffffe
0000cc99(2): OR EAX,EDX
0000cc9b(4): LEA RDX,[R15 + 0x18]
0000cc9f(4): MOV byte ptr [R15 + 0x20],AL
0000cca3(5): CALL 0x0000c3f0
0000cca8(2): TEST EAX,EAX
0000ccaa(1): POP RDX
0000ccab(1): POP RCX
0000ccac(6): JNZ 0x0000ce40
0000ccb2(5): MOVSX RCX,byte ptr [R13]
0000ccb7(5): MOV ESI,0x1
0000ccbc(2): TEST CL,CL
0000ccbe(2): JZ 0x0000ccfa
0000ccc0(4): LEA RAX,[RCX + 0x3f]
0000ccc4(3): TEST RCX,RCX
0000ccc7(3): MOV RDX,RCX
0000ccca(4): CMOVNS RAX,RCX
0000ccce(4): SAR RDX,0x3f
0000ccd2(4): ADD R13,0x1
0000ccd6(4): SHR RDX,0x3a
0000ccda(4): SAR RAX,0x6
0000ccde(3): ADD RCX,RDX
0000cce1(3): AND ECX,0x3f
0000cce4(3): SUB RCX,RDX
0000cce7(3): MOV RDX,RSI
0000ccea(3): SHL RDX,CL
0000cced(5): MOVSX RCX,byte ptr [R13]
0000ccf2(4): OR qword ptr [RBX + RAX*0x8],RDX
0000ccf6(2): TEST CL,CL
0000ccf8(2): JNZ 0x0000ccc0
0000ccfa(3): TEST R12B,R12B
0000ccfd(2): JZ 0x0000cd12
0000ccff(4): LEA RDX,[RBX + 0x20]
0000cd03(3): MOV RAX,RBX
0000cd06(3): NOT qword ptr [RAX]
0000cd09(4): ADD RAX,0x8
0000cd0d(3): CMP RDX,RAX
0000cd10(2): JNZ 0x0000cd06
0000cd12(7): CMP dword ptr [0xb4 + RBP],0x1
0000cd19(2): JLE 0x0000cd33
0000cd1b(4): MOV RCX,qword ptr [RBP + 0x78]
0000cd1f(2): XOR EAX,EAX
0000cd21(4): MOV RDX,qword ptr [RCX + RAX*0x1]
0000cd25(4): AND qword ptr [RBX + RAX*0x1],RDX
0000cd29(4): ADD RAX,0x8
0000cd2d(4): CMP RAX,0x20
0000cd31(2): JNZ 0x0000cd21
0000cd33(5): LEA R9,[RSP + 0x20]
0000cd38(4): LEA R12,[RBP + 0x70]
0000cd3c(7): LEA R13,[0x80 + RBP]
0000cd43(2): XOR ECX,ECX
0000cd45(2): XOR EDX,EDX
0000cd47(5): MOV byte ptr [RSP + 0x28],0x3
0000cd4c(3): MOV R8,R9
0000cd4f(3): MOV RSI,R13
0000cd52(3): MOV RDI,R12
0000cd55(5): MOV qword ptr [RSP + 0x20],RBX
0000cd5a(4): MOV qword ptr [RSP],R9
0000cd5e(5): CALL 0x000098b0
0000cd63(3): TEST RAX,RAX
0000cd66(3): MOV R14,RAX
0000cd69(6): JZ 0x0000ce00
0000cd6f(7): CMP dword ptr [0xb4 + RBP],0x1
0000cd76(2): JLE 0x0000cdf0
0000cd78(7): OR byte ptr [0xb0 + RBP],0x2
0000cd7f(4): MOV R9,qword ptr [RSP]
0000cd83(2): XOR ECX,ECX
0000cd85(2): XOR EDX,EDX
0000cd87(3): MOV RSI,R13
0000cd8a(3): MOV RDI,R12
0000cd8d(5): MOV byte ptr [RSP + 0x28],0x6
0000cd92(5): MOV qword ptr [RSP + 0x20],R15
0000cd97(3): MOV R8,R9
0000cd9a(5): CALL 0x000098b0
0000cd9f(3): TEST RAX,RAX
0000cda2(2): JZ 0x0000ce00
0000cda4(5): LEA R8,[RSP + 0x30]
0000cda9(3): MOV RDX,R14
0000cdac(3): MOV RCX,RAX
0000cdaf(3): MOV RSI,R13
0000cdb2(3): MOV RDI,R12
0000cdb5(5): MOV byte ptr [RSP + 0x38],0xa
0000cdba(5): CALL 0x000098b0
0000cdbf(3): MOV R14,RAX
0000cdc2(5): MOV RDI,qword ptr [RSP + 0x48]
0000cdc7(9): XOR RDI,qword ptr FS:[0x28]
0000cdd0(3): MOV RAX,R14
0000cdd3(6): JNZ 0x0000ce65
0000cdd9(4): ADD RSP,0x58
0000cddd(1): POP RBX
0000cdde(1): POP RBP
0000cddf(2): POP R12
0000cde1(2): POP R13
0000cde3(2): POP R14
0000cde5(2): POP R15
0000cde7(1): RET
0000cdf0(3): MOV RDI,R15
0000cdf3(5): CALL 0x00008310
0000cdf8(2): JMP 0x0000cdc2
0000ce00(3): MOV RDI,RBX
0000ce03(5): CALL 0x000019d0
0000ce08(3): MOV RDI,R15
0000ce0b(5): CALL 0x00008310
0000ce10(5): MOV RAX,qword ptr [RSP + 0x8]
0000ce15(3): XOR R14D,R14D
0000ce18(6): MOV dword ptr [RAX],0xc
0000ce1e(2): JMP 0x0000cdc2
0000ce20(3): MOV RDI,RBX
0000ce23(3): XOR R14D,R14D
0000ce26(5): CALL 0x000019d0
0000ce2b(5): MOV RAX,qword ptr [RSP + 0x8]
0000ce30(6): MOV dword ptr [RAX],0xc
0000ce36(2): JMP 0x0000cdc2
0000ce40(3): MOV RDI,RBX
0000ce43(3): MOV dword ptr [RSP],EAX
0000ce46(3): XOR R14D,R14D
0000ce49(5): CALL 0x000019d0
0000ce4e(3): MOV RDI,R15
0000ce51(5): CALL 0x00008310
0000ce56(5): MOV RDI,qword ptr [RSP + 0x8]
0000ce5b(3): MOV EAX,dword ptr [RSP]
0000ce5e(2): MOV dword ptr [RDI],EAX
0000ce60(5): JMP 0x0000cdc2
0000ce65(5): CALL 0x00001ad0
0000ce6a(6): NOP word ptr [RAX + RAX*0x1]
0000ce70(2): PUSH R15
0000ce72(2): PUSH R14
0000ce74(3): MOV RAX,RDI
0000ce77(2): PUSH R13
0000ce79(2): PUSH R12
0000ce7b(1): PUSH RBP
0000ce7c(1): PUSH RBX
0000ce7d(2): XOR EBX,EBX
0000ce7f(3): MOV RBP,RCX
0000ce82(7): SUB RSP,0x178
0000ce89(3): MOV RAX,qword ptr [RAX]
0000ce8c(5): MOV qword ptr [RSP + 0x30],RDI
0000ce91(5): MOV qword ptr [RSP + 0x20],RSI
0000ce96(9): MOV RDI,qword ptr FS:[0x28]
0000ce9f(8): MOV qword ptr [0x168 + RSP],RDI
0000cea7(2): XOR EDI,EDI
0000cea9(7): CMP dword ptr [0xb4 + RAX],0x1
0000ceb0(5): MOV qword ptr [RSP + 0x28],RDX
0000ceb5(5): MOV qword ptr [RSP + 0x8],RAX
0000ceba(2): JNZ 0x0000ced3
0000cebc(5): MOV RAX,qword ptr [RSP + 0x30]
0000cec1(4): MOV RAX,qword ptr [RAX + 0x18]
0000cec5(3): MOV RBX,RAX
0000cec8(4): MOV qword ptr [RSP],RAX
0000cecc(4): SHR RBX,0x16
0000ced0(3): AND EBX,0x1
0000ced3(5): MOV RAX,qword ptr [RSP + 0x20]
0000ced8(4): CMP qword ptr [RAX],0x0
0000cedc(6): JLE 0x0000d2ed
0000cee2(5): LEA RAX,[RSP + 0x58]
0000cee7(8): MOV qword ptr [RSP],0x0
0000ceef(5): MOV qword ptr [RSP + 0x40],RAX
0000cef4(5): LEA RAX,[RSP + 0x54]
0000cef9(5): MOV qword ptr [RSP + 0x48],RAX
0000cefe(5): LEA RAX,[RSP + 0x60]
0000cf03(5): MOV qword ptr [RSP + 0x38],RAX
0000cf08(2): JMP 0x0000cf4e
0000cf10(3): CMP EAX,0x3
0000cf13(6): JZ 0x0000d206
0000cf19(3): CMP EAX,0x6
0000cf1c(6): JZ 0x0000d0a8
0000cf22(3): AND EDX,0xfffffffd
0000cf25(3): CMP DL,0x5
0000cf28(6): JZ 0x0000d324
0000cf2e(3): CMP EAX,0x2
0000cf31(6): JZ 0x0000d284
0000cf37(5): MOV RDI,qword ptr [RSP + 0x20]
0000cf3c(5): ADD qword ptr [RSP],0x1
0000cf41(4): MOV RAX,qword ptr [RSP]
0000cf45(3): CMP RAX,qword ptr [RDI]
0000cf48(6): JGE 0x0000d2ed
0000cf4e(5): MOV RAX,qword ptr [RSP + 0x28]
0000cf53(4): MOV RDI,qword ptr [RSP]
0000cf57(3): MOV RAX,qword ptr [RAX]
0000cf5a(4): MOV R12,qword ptr [RAX + RDI*0x8]
0000cf5e(5): MOV RAX,qword ptr [RSP + 0x8]
0000cf63(3): MOV RCX,qword ptr [RAX]
0000cf66(3): MOV RAX,R12
0000cf69(4): SHL RAX,0x4
0000cf6d(5): MOV qword ptr [RSP + 0x10],RAX
0000cf72(4): LEA RSI,[RCX + RAX*0x1]
0000cf76(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000cf7a(3): CMP EAX,0x1
0000cf7d(2): MOV EDX,EAX
0000cf7f(2): JNZ 0x0000cf10
0000cf81(4): MOVZX R13D,byte ptr [RSI]
0000cf85(2): TEST EBX,EBX
0000cf87(6): MOV byte ptr [RBP + R13*0x1],0x1
0000cf8d(2): JZ 0x0000cfa0
0000cf8f(5): CALL 0x00001db0
0000cf94(3): MOV RAX,qword ptr [RAX]
0000cf97(4): MOVSXD RAX,dword ptr [RAX + R13*0x4]
0000cf9b(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000cfa0(5): MOV RAX,qword ptr [RSP + 0x30]
0000cfa5(4): TEST byte ptr [RAX + 0x1a],0x40
0000cfa9(2): JZ 0x0000cf37
0000cfab(5): MOV RSI,qword ptr [RSP + 0x8]
0000cfb0(7): CMP dword ptr [0xb4 + RSI],0x1
0000cfb7(6): JLE 0x0000cf37
0000cfbd(3): MOV RAX,qword ptr [RSI]
0000cfc0(5): MOV RDI,qword ptr [RSP + 0x10]
0000cfc5(4): MOVZX EDX,byte ptr [RAX + RDI*0x1]
0000cfc9(4): MOV byte ptr [RSP + 0x60],DL
0000cfcd(5): LEA RDX,[R12 + 0x1]
0000cfd2(4): CMP qword ptr [RSI + 0x10],RDX
0000cfd6(6): JBE 0x0000d316
0000cfdc(5): LEA RCX,[RAX + RDI*0x1 + 0x10]
0000cfe1(3): MOV EAX,dword ptr [RCX + 0x8]
0000cfe4(5): AND EAX,0x2000ff
0000cfe9(5): CMP EAX,0x200001
0000cfee(6): JNZ 0x0000d316
0000cff4(4): ADD RDI,0x20
0000cff8(3): MOV R13,RDI
0000cffb(5): MOV RDI,qword ptr [RSP + 0x38]
0000d000(4): LEA RAX,[RDI + 0x1]
0000d004(2): JMP 0x0000d02b
0000d010(3): MOV RCX,qword ptr [RSI]
0000d013(3): ADD RCX,R13
0000d016(4): ADD R13,0x10
0000d01a(3): MOV EDX,dword ptr [RCX + 0x8]
0000d01d(6): AND EDX,0x2000ff
0000d023(6): CMP EDX,0x200001
0000d029(2): JNZ 0x0000d044
0000d02b(3): MOVZX EDX,byte ptr [RCX]
0000d02e(4): ADD RAX,0x1
0000d032(3): MOV byte ptr [RAX + -0x1],DL
0000d035(3): MOV RDX,RAX
0000d038(3): SUB RDX,RDI
0000d03b(3): ADD RDX,R12
0000d03e(4): CMP qword ptr [RSI + 0x10],RDX
0000d042(2): JA 0x0000d010
0000d044(5): MOV RSI,qword ptr [RSP + 0x38]
0000d049(5): MOV RCX,qword ptr [RSP + 0x40]
0000d04e(5): MOV RDI,qword ptr [RSP + 0x48]
0000d053(3): SUB RAX,RSI
0000d056(7): MOV qword ptr [RCX],0x0
0000d05d(3): MOV R12,RAX
0000d060(3): MOV RDX,RAX
0000d063(5): CALL 0x00007050
0000d068(3): CMP R12,RAX
0000d06b(6): JNZ 0x0000cf37
0000d071(4): MOV EDI,dword ptr [RSP + 0x54]
0000d075(5): CALL 0x00001d20
0000d07a(5): MOV RDX,qword ptr [RSP + 0x40]
0000d07f(5): MOV RDI,qword ptr [RSP + 0x38]
0000d084(2): MOV ESI,EAX
0000d086(5): CALL 0x00001c30
0000d08b(4): CMP RAX,-0x1
0000d08f(6): JZ 0x0000cf37
0000d095(5): MOVZX EAX,byte ptr [RSP + 0x60]
0000d09a(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000d09f(5): JMP 0x0000cf37
0000d0a8(5): MOV RAX,qword ptr [RSP + 0x8]
0000d0ad(3): MOV R12,qword ptr [RSI]
0000d0b0(7): CMP dword ptr [0xb4 + RAX],0x1
0000d0b7(2): JLE 0x0000d0dd
0000d0b9(6): CMP qword ptr [R12 + 0x48],0x0
0000d0bf(6): JNZ 0x0000d1bf
0000d0c5(6): TEST byte ptr [R12 + 0x20],0x1
0000d0cb(6): JNZ 0x0000d1bf
0000d0d1(6): CMP qword ptr [R12 + 0x40],0x0
0000d0d7(6): JNZ 0x0000d1bf
0000d0dd(3): XOR R13D,R13D
0000d0e0(6): CMP qword ptr [R12 + 0x28],0x0
0000d0e6(6): JLE 0x0000cf37
0000d0ec(3): MOV R15,R12
0000d0ef(5): MOV R14,qword ptr [RSP + 0x40]
0000d0f4(3): MOV R12,RBP
0000d0f7(3): MOV RBP,R13
0000d0fa(3): MOV R13D,EBX
0000d0fd(2): JMP 0x0000d10d
0000d0ff(4): ADD RBP,0x1
0000d103(4): CMP RBP,qword ptr [R15 + 0x28]
0000d107(6): JGE 0x0000d1b4
0000d10d(7): MOV qword ptr [R14],0x0
0000d114(3): MOV RAX,qword ptr [R15]
0000d117(3): MOV RDX,R14
0000d11a(5): MOV RDI,qword ptr [RSP + 0x38]
0000d11f(8): LEA RBX,[RBP*0x4]
0000d127(3): MOV ESI,dword ptr [RAX + RBP*0x4]
0000d12a(5): CALL 0x00001c30
0000d12f(4): CMP RAX,-0x1
0000d133(2): JZ 0x0000d15f
0000d135(5): MOVZX EDX,byte ptr [RSP + 0x60]
0000d13a(3): TEST R13D,R13D
0000d13d(5): MOV byte ptr [R12 + RDX*0x1],0x1
0000d142(5): MOV qword ptr [RSP + 0x10],RDX
0000d147(2): JZ 0x0000d15f
0000d149(5): CALL 0x00001db0
0000d14e(5): MOV RDX,qword ptr [RSP + 0x10]
0000d153(3): MOV RAX,qword ptr [RAX]
0000d156(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
0000d15a(5): MOV byte ptr [R12 + RAX*0x1],0x1
0000d15f(5): MOV RAX,qword ptr [RSP + 0x30]
0000d164(4): TEST byte ptr [RAX + 0x1a],0x40
0000d168(2): JZ 0x0000d0ff
0000d16a(5): MOV RAX,qword ptr [RSP + 0x8]
0000d16f(7): CMP dword ptr [0xb4 + RAX],0x1
0000d176(2): JLE 0x0000d0ff
0000d178(3): MOV RAX,qword ptr [R15]
0000d17b(3): MOV EDI,dword ptr [RAX + RBX*0x1]
0000d17e(5): CALL 0x00001d20
0000d183(5): MOV RDI,qword ptr [RSP + 0x38]
0000d188(3): MOV RDX,R14
0000d18b(2): MOV ESI,EAX
0000d18d(5): CALL 0x00001c30
0000d192(4): CMP RAX,-0x1
0000d196(6): JZ 0x0000d0ff
0000d19c(5): MOVZX EAX,byte ptr [RSP + 0x60]
0000d1a1(4): ADD RBP,0x1
0000d1a5(5): MOV byte ptr [R12 + RAX*0x1],0x1
0000d1aa(4): CMP RBP,qword ptr [R15 + 0x28]
0000d1ae(6): JL 0x0000d10d
0000d1b4(3): MOV EBX,R13D
0000d1b7(3): MOV RBP,R12
0000d1ba(5): JMP 0x0000cf37
0000d1bf(5): MOV R12,qword ptr [RSP + 0x40]
0000d1c4(5): MOV R13,qword ptr [RSP + 0x48]
0000d1c9(5): MOV byte ptr [RSP + 0x54],0x0
0000d1ce(2): NOP
0000d1d0(2): XOR EDI,EDI
0000d1d2(8): MOV qword ptr [R12],0x0
0000d1da(3): MOV RCX,R12
0000d1dd(5): MOV EDX,0x1
0000d1e2(3): MOV RSI,R13
0000d1e5(5): CALL 0x00007050
0000d1ea(4): CMP RAX,-0x2
0000d1ee(2): JNZ 0x0000d1fa
0000d1f0(5): MOVZX EAX,byte ptr [RSP + 0x54]
0000d1f5(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000d1fa(5): ADD byte ptr [RSP + 0x54],0x1
0000d1ff(2): JNZ 0x0000d1d0
0000d201(5): JMP 0x0000cf37
0000d206(3): MOV R13,RBP
0000d209(3): XOR R12D,R12D
0000d20c(9): MOV qword ptr [RSP + 0x18],0x0
0000d215(5): MOV RAX,qword ptr [RSP + 0x10]
0000d21a(5): MOV RSI,qword ptr [RSP + 0x18]
0000d21f(3): XOR R14D,R14D
0000d222(4): MOV RAX,qword ptr [RCX + RAX*0x1]
0000d226(4): MOV R15,qword ptr [RAX + RSI*0x1]
0000d22a(6): NOP word ptr [RAX + RAX*0x1]
0000d230(4): BT RDI,R14
0000d234(2): JNC 0x0000d255
0000d236(2): TEST EBX,EBX
0000d238(6): MOV byte ptr [R13 + R14*0x1],0x1
0000d23e(2): JZ 0x0000d255
0000d240(5): CALL 0x00001db0
0000d245(3): MOV RAX,qword ptr [RAX]
0000d248(4): LEA RDX,[R12 + R14*0x1]
0000d24c(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
0000d250(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000d255(4): ADD R14,0x1
0000d259(4): CMP R14,0x40
0000d25d(2): JNZ 0x0000d230
0000d25f(4): ADD R12,0x40
0000d263(6): ADD qword ptr [RSP + 0x18],0x8
0000d269(4): ADD R13,0x40
0000d26d(7): CMP R12,0x100
0000d274(6): JZ 0x0000cf37
0000d27a(5): MOV RAX,qword ptr [RSP + 0x8]
0000d27f(3): MOV RCX,qword ptr [RAX]
0000d282(2): JMP 0x0000d215
0000d284(8): MOVDQA XMM0,xmmword ptr [0x000172e0]
0000d28c(4): MOVUPS xmmword ptr [RBP],XMM0
0000d290(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
0000d294(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0000d298(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0000d29c(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
0000d2a0(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
0000d2a4(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
0000d2a8(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0000d2ac(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
0000d2b3(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0000d2ba(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
0000d2c1(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
0000d2c8(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0000d2cf(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
0000d2d6(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0000d2dd(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
0000d2e4(5): MOV RAX,qword ptr [RSP + 0x30]
0000d2e9(4): OR byte ptr [RAX + 0x38],0x1
0000d2ed(8): MOV RAX,qword ptr [0x168 + RSP]
0000d2f5(9): XOR RAX,qword ptr FS:[0x28]
0000d2fe(6): JNZ 0x0000d392
0000d304(7): ADD RSP,0x178
0000d30b(1): POP RBX
0000d30c(1): POP RBP
0000d30d(2): POP R12
0000d30f(2): POP R13
0000d311(2): POP R14
0000d313(2): POP R15
0000d315(1): RET
0000d316(5): MOV RAX,qword ptr [RSP + 0x38]
0000d31b(4): ADD RAX,0x1
0000d31f(5): JMP 0x0000d044
0000d324(8): MOVDQA XMM0,xmmword ptr [0x000172e0]
0000d32c(3): CMP EAX,0x2
0000d32f(4): MOVUPS xmmword ptr [RBP],XMM0
0000d333(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
0000d337(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0000d33b(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0000d33f(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
0000d343(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
0000d347(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
0000d34b(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0000d34f(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
0000d356(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0000d35d(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
0000d364(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
0000d36b(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0000d372(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
0000d379(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0000d380(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
0000d387(6): JNZ 0x0000d2ed
0000d38d(5): JMP 0x0000d2e4
0000d392(5): CALL 0x00001ad0
0000d397(9): NOP word ptr [RAX + RAX*0x1]
0000d3a0(4): SHL RDX,0x4
0000d3a4(2): PUSH R13
0000d3a6(2): PUSH R12
0000d3a8(4): LEA R9,[RDI + RDX*0x1]
0000d3ac(1): PUSH RBP
0000d3ad(1): PUSH RBX
0000d3ae(4): SUB RSP,0x8
0000d3b2(5): MOVZX R11D,byte ptr [R9 + 0x8]
0000d3b7(4): CMP R11B,0x7
0000d3bb(6): JZ 0x0000d4d0
0000d3c1(7): CMP dword ptr [0x90 + RCX],0x1
0000d3c8(6): JZ 0x0000d490
0000d3ce(3): MOV RBX,RSI
0000d3d1(3): MOV RDI,RCX
0000d3d4(3): MOV RSI,R8
0000d3d7(3): MOV R10,RCX
0000d3da(5): CALL 0x00008b40
0000d3df(4): CMP R11B,0x5
0000d3e3(2): MOV EBP,EAX
0000d3e5(6): JZ 0x0000d4a0
0000d3eb(4): CMP R11B,0x6
0000d3ef(6): JNZ 0x0000d490
0000d3f5(3): CMP EAX,0x1
0000d3f8(6): JLE 0x0000d490
0000d3fe(3): MOV R13,qword ptr [R9]
0000d401(4): MOV RSI,qword ptr [R13 + 0x40]
0000d405(4): MOV RDX,qword ptr [R13 + 0x28]
0000d409(3): TEST RSI,RSI
0000d40c(2): JNZ 0x0000d419
0000d40e(5): CMP qword ptr [R13 + 0x48],0x0
0000d413(6): JZ 0x0000d508
0000d419(4): MOV RAX,qword ptr [R10 + 0x10]
0000d41d(3): TEST RDX,RDX
0000d420(4): MOV R12D,dword ptr [RAX + R8*0x4]
0000d424(2): JLE 0x0000d447
0000d426(4): MOV RCX,qword ptr [R13]
0000d42a(3): CMP R12D,dword ptr [RCX]
0000d42d(2): JZ 0x0000d482
0000d42f(2): XOR EAX,EAX
0000d431(2): JMP 0x0000d43e
0000d438(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0000d43c(2): JZ 0x0000d482
0000d43e(4): ADD RAX,0x1
0000d442(3): CMP RAX,RDX
0000d445(2): JNZ 0x0000d438
0000d447(4): MOV RAX,qword ptr [R13 + 0x48]
0000d44b(3): TEST RAX,RAX
0000d44e(6): JLE 0x0000d52c
0000d454(2): XOR EBX,EBX
0000d456(2): JMP 0x0000d46e
0000d460(4): ADD RBX,0x1
0000d464(4): CMP RBX,qword ptr [R13 + 0x48]
0000d468(6): JGE 0x0000d528
0000d46e(4): MOV RAX,qword ptr [R13 + 0x18]
0000d472(3): MOV EDI,R12D
0000d475(4): MOV RSI,qword ptr [RAX + RBX*0x8]
0000d479(5): CALL 0x00001a60
0000d47e(2): TEST EAX,EAX
0000d480(2): JZ 0x0000d460
0000d482(5): TEST byte ptr [R13 + 0x20],0x1
0000d487(2): JZ 0x0000d492
0000d489(7): NOP dword ptr [RAX]
0000d490(2): XOR EBP,EBP
0000d492(4): ADD RSP,0x8
0000d496(2): MOV EAX,EBP
0000d498(1): POP RBX
0000d499(1): POP RBP
0000d49a(2): POP R12
0000d49c(2): POP R13
0000d49e(1): RET
0000d4a0(3): CMP EAX,0x1
0000d4a3(2): JLE 0x0000d490
0000d4a5(3): MOV RAX,qword ptr [RBX]
0000d4a8(2): TEST AL,0x40
0000d4aa(2): JZ 0x0000d4c0
0000d4ac(2): TEST AL,0x80
0000d4ae(2): JZ 0x0000d492
0000d4b0(4): MOV RAX,qword ptr [R10 + 0x8]
0000d4b4(5): CMP byte ptr [RAX + R8*0x1],0x0
0000d4b9(2): JZ 0x0000d490
0000d4bb(2): JMP 0x0000d492
0000d4c0(4): MOV RDX,qword ptr [R10 + 0x8]
0000d4c4(5): CMP byte ptr [RDX + R8*0x1],0xa
0000d4c9(2): JNZ 0x0000d4ac
0000d4cb(2): JMP 0x0000d490
0000d4d0(4): MOV RDX,qword ptr [RCX + 0x8]
0000d4d4(4): LEA RSI,[RDX + R8*0x1]
0000d4d8(3): MOVZX EAX,byte ptr [RSI]
0000d4db(2): CMP AL,0xc1
0000d4dd(2): JBE 0x0000d490
0000d4df(4): MOV RCX,qword ptr [RCX + 0x58]
0000d4e3(4): LEA RDI,[R8 + 0x1]
0000d4e7(3): CMP RDI,RCX
0000d4ea(2): JGE 0x0000d490
0000d4ec(2): CMP AL,0xdf
0000d4ee(6): MOVZX EDX,byte ptr [RDX + R8*0x1 + 0x1]
0000d4f4(2): JA 0x0000d55e
0000d4f6(3): ADD EDX,-0x80
0000d4f9(5): MOV EBP,0x2
0000d4fe(3): CMP DL,0x3f
0000d501(2): JA 0x0000d490
0000d503(2): JMP 0x0000d492
0000d508(3): TEST RDX,RDX
0000d50b(6): JNZ 0x0000d419
0000d511(5): TEST byte ptr [R13 + 0x20],0x1
0000d516(6): JNZ 0x0000d492
0000d51c(5): JMP 0x0000d490
0000d528(4): MOV RSI,qword ptr [R13 + 0x40]
0000d52c(3): TEST RSI,RSI
0000d52f(2): JLE 0x0000d511
0000d531(4): MOV RDX,qword ptr [R13 + 0x8]
0000d535(2): XOR EAX,EAX
0000d537(2): JMP 0x0000d549
0000d540(4): ADD RAX,0x1
0000d544(3): CMP RAX,RSI
0000d547(2): JZ 0x0000d511
0000d549(4): CMP R12D,dword ptr [RDX + RAX*0x4]
0000d54d(2): JL 0x0000d540
0000d54f(4): MOV RCX,qword ptr [R13 + 0x10]
0000d553(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0000d557(2): JG 0x0000d540
0000d559(5): JMP 0x0000d482
0000d55e(2): CMP AL,0xef
0000d560(2): JA 0x0000d5a8
0000d562(2): CMP AL,0xe0
0000d564(2): JNZ 0x0000d56f
0000d566(3): CMP DL,0x9f
0000d569(6): JBE 0x0000d490
0000d56f(5): MOV EBP,0x3
0000d574(3): MOVSXD RDI,EBP
0000d577(3): ADD R8,RDI
0000d57a(3): CMP RCX,R8
0000d57d(6): JL 0x0000d490
0000d583(5): MOV EAX,0x1
0000d588(2): JMP 0x0000d597
0000d58a(4): ADD RAX,0x1
0000d58e(3): CMP RDI,RAX
0000d591(6): JLE 0x0000d492
0000d597(4): MOVZX EBX,byte ptr [RSI + RAX*0x1]
0000d59b(3): LEA EDX,[RBX + -0x80]
0000d59e(3): CMP DL,0x3f
0000d5a1(2): JBE 0x0000d58a
0000d5a3(5): JMP 0x0000d490
0000d5a8(2): CMP AL,0xf7
0000d5aa(2): JA 0x0000d5c0
0000d5ac(2): CMP AL,0xf0
0000d5ae(2): JNZ 0x0000d5b9
0000d5b0(3): CMP DL,0x8f
0000d5b3(6): JBE 0x0000d490
0000d5b9(5): MOV EBP,0x4
0000d5be(2): JMP 0x0000d574
0000d5c0(2): CMP AL,0xfb
0000d5c2(2): JA 0x0000d5d8
0000d5c4(2): CMP AL,0xf8
0000d5c6(2): JNZ 0x0000d5d1
0000d5c8(3): CMP DL,0x87
0000d5cb(6): JBE 0x0000d490
0000d5d1(5): MOV EBP,0x5
0000d5d6(2): JMP 0x0000d574
0000d5d8(2): CMP AL,0xfd
0000d5da(6): JA 0x0000d490
0000d5e0(2): CMP AL,0xfc
0000d5e2(2): JNZ 0x0000d5ed
0000d5e4(3): CMP DL,0x83
0000d5e7(6): JBE 0x0000d490
0000d5ed(5): MOV EBP,0x6
0000d5f2(2): JMP 0x0000d574
0000d600(2): PUSH R15
0000d602(2): PUSH R14
0000d604(3): MOV R15,RDI
0000d607(2): PUSH R13
0000d609(2): PUSH R12
0000d60b(1): PUSH RBP
0000d60c(1): PUSH RBX
0000d60d(3): MOV RBP,RCX
0000d610(3): MOV RBX,RDX
0000d613(7): SUB RSP,0xd8
0000d61a(7): MOV RCX,qword ptr [0x98 + RDI]
0000d621(4): MOV R13,qword ptr [RSI + 0x8]
0000d625(9): MOV RAX,qword ptr FS:[0x28]
0000d62e(8): MOV qword ptr [0xc8 + RSP],RAX
0000d636(2): XOR EAX,EAX
0000d638(3): MOV RAX,RDX
0000d63b(5): MOV qword ptr [RSP + 0x60],RSI
0000d640(5): MOV qword ptr [RSP + 0x78],R8
0000d645(4): SHL RAX,0x4
0000d649(3): ADD RAX,qword ptr [RCX]
0000d64c(5): MOV qword ptr [RSP + 0x40],R9
0000d651(5): MOV qword ptr [RSP + 0x30],RCX
0000d656(11): MOV dword ptr [0x88 + RSP],0x0
0000d661(3): MOV RAX,qword ptr [RAX]
0000d664(5): MOV qword ptr [RSP + 0x48],RAX
0000d669(7): MOVSXD RAX,dword ptr [0xe0 + RDI]
0000d670(3): ADD RAX,R9
0000d673(3): CMP RAX,R13
0000d676(6): JGE 0x0000dc96
0000d67c(5): MOV RAX,qword ptr [RSP + 0x60]
0000d681(7): MOV RDX,qword ptr [0xb8 + R15]
0000d688(4): MOV RCX,qword ptr [R15 + 0x48]
0000d68c(3): MOV R12,qword ptr [RAX]
0000d68f(4): MOV R14,qword ptr [RAX + 0x10]
0000d693(5): MOV qword ptr [RSP + 0x68],RDX
0000d698(5): MOV qword ptr [RSP + 0x70],RCX
0000d69d(7): MOV EDX,dword ptr [0xa0 + R15]
0000d6a4(3): TEST R12,R12
0000d6a7(7): MOV qword ptr [0xb8 + R15],R14
0000d6ae(6): JZ 0x0000da90
0000d6b4(5): LEA RSI,[R12 + -0x1]
0000d6b9(4): MOV qword ptr [R15 + 0x48],R12
0000d6bd(3): MOV RDI,R15
0000d6c0(5): CALL 0x0000a9d0
0000d6c5(3): CMP R12,RBP
0000d6c8(3): MOV R13D,EAX
0000d6cb(6): JZ 0x0000daa3
0000d6d1(4): MOV RBP,qword ptr [R14 + R12*0x8]
0000d6d5(3): TEST RBP,RBP
0000d6d8(2): JZ 0x0000d6e4
0000d6da(4): TEST byte ptr [RBP + 0x68],0x40
0000d6de(6): JNZ 0x0000dc00
0000d6e4(4): PXOR XMM0,XMM0
0000d6e8(12): MOV qword ptr [0xa0 + RSP],0x0
0000d6f4(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000d6fc(5): CMP R12,qword ptr [RSP + 0x40]
0000d701(6): JGE 0x0000da28
0000d707(7): MOV ECX,dword ptr [0xe0 + R15]
0000d70e(2): TEST ECX,ECX
0000d710(6): JS 0x0000da28
0000d716(8): LEA RBX,[0x90 + RSP]
0000d71e(8): LEA RAX,[0x8 + R12*0x8]
0000d726(4): MOV qword ptr [RSP],R12
0000d72a(9): MOV qword ptr [RSP + 0x20],0x0
0000d733(5): MOV qword ptr [RSP + 0x8],RBX
0000d738(8): LEA RBX,[0xb0 + RSP]
0000d740(5): MOV qword ptr [RSP + 0x10],RAX
0000d745(7): MOV RAX,qword ptr [0xb8 + R15]
0000d74c(5): MOV qword ptr [RSP + 0x18],RBX
0000d751(8): LEA RBX,[0x8c + RSP]
0000d759(5): MOV qword ptr [RSP + 0x58],RBX
0000d75e(5): MOV RCX,qword ptr [RSP + 0x10]
0000d763(12): MOV qword ptr [0x98 + RSP],0x0
0000d76f(4): MOV RSI,qword ptr [RAX + RCX*0x1]
0000d773(3): TEST RSI,RSI
0000d776(6): JZ 0x0000db38
0000d77c(5): MOV RDI,qword ptr [RSP + 0x8]
0000d781(4): ADD RSI,0x8
0000d785(5): CALL 0x00009110
0000d78a(2): TEST EAX,EAX
0000d78c(7): MOV dword ptr [0x88 + RSP],EAX
0000d793(6): JNZ 0x0000db70
0000d799(3): TEST RBP,RBP
0000d79c(6): JZ 0x0000d948
0000d7a2(5): CMP qword ptr [RBP + 0x28],0x0
0000d7a7(5): MOV RAX,qword ptr [RSP + 0x18]
0000d7ac(4): PXOR XMM0,XMM0
0000d7b0(7): MOV R12,qword ptr [0x98 + R15]
0000d7b7(11): MOV dword ptr [0x8c + RSP],0x0
0000d7c2(8): MOV qword ptr [RAX + 0x10],0x0
0000d7ca(3): MOVAPS xmmword ptr [RAX],XMM0
0000d7cd(6): JLE 0x0000dd00
0000d7d3(8): LEA RAX,[0xd8 + R12]
0000d7db(2): XOR EBX,EBX
0000d7dd(5): MOV qword ptr [RSP + 0x28],RAX
0000d7e2(2): JMP 0x0000d829
0000d7e8(4): MOV RDX,qword ptr [RSP]
0000d7ec(3): MOV RDI,R15
0000d7ef(5): CALL 0x0000aac0
0000d7f4(2): TEST AL,AL
0000d7f6(2): JZ 0x0000d81b
0000d7f8(8): LEA R13,[R14*0x8]
0000d800(5): MOV RAX,qword ptr [R12 + 0x18]
0000d805(5): MOV RDI,qword ptr [RSP + 0x8]
0000d80a(4): MOV RSI,qword ptr [RAX + R13*0x1]
0000d80e(5): CALL 0x000076b0
0000d813(2): TEST AL,AL
0000d815(6): JZ 0x0000db58
0000d81b(4): ADD RBX,0x1
0000d81f(4): CMP RBX,qword ptr [RBP + 0x28]
0000d823(6): JGE 0x0000dbb0
0000d829(4): MOV RAX,qword ptr [RBP + 0x30]
0000d82d(4): MOV RDI,qword ptr [R12]
0000d831(4): MOV R14,qword ptr [RAX + RBX*0x8]
0000d835(3): MOV R13,R14
0000d838(4): SHL R13,0x4
0000d83c(4): LEA RSI,[RDI + R13*0x1]
0000d840(4): TEST byte ptr [RSI + 0xa],0x10
0000d844(2): JZ 0x0000d7e8
0000d846(4): MOV R8,qword ptr [RSP]
0000d84a(5): MOV RSI,qword ptr [RSP + 0x28]
0000d84f(3): MOV RCX,R15
0000d852(3): MOV RDX,R14
0000d855(5): CALL 0x0000d3a0
0000d85a(3): CMP EAX,0x1
0000d85d(6): JLE 0x0000db20
0000d863(2): CDQE
0000d865(4): ADD RAX,qword ptr [RSP]
0000d869(5): MOV RDX,qword ptr [R12 + 0x18]
0000d86e(8): LEA R13,[R14*0x8]
0000d876(4): MOV RDX,qword ptr [RDX + R14*0x8]
0000d87a(3): MOV RCX,RAX
0000d87d(5): MOV qword ptr [RSP + 0x38],RAX
0000d882(8): LEA R14,[RAX*0x8]
0000d88a(7): MOV RAX,qword ptr [0xb8 + R15]
0000d891(4): MOV RSI,qword ptr [RAX + RCX*0x8]
0000d895(12): MOV qword ptr [0xb8 + RSP],0x0
0000d8a1(3): TEST RSI,RSI
0000d8a4(2): JZ 0x0000d8c9
0000d8a6(5): MOV RDI,qword ptr [RSP + 0x18]
0000d8ab(4): ADD RSI,0x8
0000d8af(5): MOV qword ptr [RSP + 0x50],RDX
0000d8b4(5): CALL 0x00009110
0000d8b9(2): TEST EAX,EAX
0000d8bb(7): MOV dword ptr [0x8c + RSP],EAX
0000d8c2(5): MOV RDX,qword ptr [RSP + 0x50]
0000d8c7(2): JNZ 0x0000d920
0000d8c9(5): MOV RDI,qword ptr [RSP + 0x18]
0000d8ce(3): MOV RSI,RDX
0000d8d1(5): CALL 0x000076b0
0000d8d6(2): TEST AL,AL
0000d8d8(6): JZ 0x0000db58
0000d8de(7): ADD R14,qword ptr [0xb8 + R15]
0000d8e5(5): MOV RDX,qword ptr [RSP + 0x18]
0000d8ea(3): MOV RSI,R12
0000d8ed(5): MOV RDI,qword ptr [RSP + 0x58]
0000d8f2(5): CALL 0x0000a200
0000d8f7(5): MOV RDX,qword ptr [RSP + 0x38]
0000d8fc(3): MOV qword ptr [R14],RAX
0000d8ff(7): MOV RAX,qword ptr [0xb8 + R15]
0000d906(5): CMP qword ptr [RAX + RDX*0x8],0x0
0000d90b(6): JNZ 0x0000d800
0000d911(7): MOV EDX,dword ptr [0x8c + RSP]
0000d918(2): TEST EDX,EDX
0000d91a(6): JZ 0x0000d800
0000d920(8): MOV RDI,qword ptr [0xc0 + RSP]
0000d928(5): CALL 0x000019d0
0000d92d(7): MOV EAX,dword ptr [0x8c + RSP]
0000d934(2): TEST EAX,EAX
0000d936(7): MOV dword ptr [0x88 + RSP],EAX
0000d93d(6): JNZ 0x0000db70
0000d943(5): NOP dword ptr [RAX + RAX*0x1]
0000d948(4): MOV RAX,qword ptr [RSP]
0000d94c(9): CMP qword ptr [0x98 + RSP],0x0
0000d955(4): LEA RBX,[RAX + 0x1]
0000d959(3): MOV R12,RBX
0000d95c(2): JZ 0x0000d9b4
0000d95e(7): MOV ECX,dword ptr [0x110 + RSP]
0000d965(5): MOV RDX,qword ptr [RSP + 0x48]
0000d96a(5): MOV RSI,qword ptr [RSP + 0x8]
0000d96f(5): MOV RDI,qword ptr [RSP + 0x30]
0000d974(5): CALL 0x000095a0
0000d979(2): TEST EAX,EAX
0000d97b(7): MOV dword ptr [0x88 + RSP],EAX
0000d982(6): JNZ 0x0000db70
0000d988(8): MOV R8D,dword ptr [0x110 + RSP]
0000d990(5): MOV RCX,qword ptr [RSP + 0x48]
0000d995(3): MOV RDX,RBX
0000d998(5): MOV RSI,qword ptr [RSP + 0x8]
0000d99d(3): MOV RDI,R15
0000d9a0(5): CALL 0x0000a4e0
0000d9a5(2): TEST EAX,EAX
0000d9a7(7): MOV dword ptr [0x88 + RSP],EAX
0000d9ae(6): JNZ 0x0000db70
0000d9b4(7): MOV EDX,dword ptr [0xa0 + R15]
0000d9bb(4): MOV RSI,qword ptr [RSP]
0000d9bf(3): MOV RDI,R15
0000d9c2(5): CALL 0x0000a9d0
0000d9c7(5): MOV RDX,qword ptr [RSP + 0x8]
0000d9cc(5): MOV RSI,qword ptr [RSP + 0x30]
0000d9d1(8): LEA RDI,[0x88 + RSP]
0000d9d9(2): MOV ECX,EAX
0000d9db(5): CALL 0x00009f40
0000d9e0(3): TEST RAX,RAX
0000d9e3(3): MOV RBP,RAX
0000d9e6(6): JZ 0x0000dbd0
0000d9ec(7): MOV RAX,qword ptr [0xb8 + R15]
0000d9f3(5): MOV RDX,qword ptr [RSP + 0x10]
0000d9f8(9): MOV qword ptr [RSP + 0x20],0x0
0000da01(4): MOV qword ptr [RAX + RDX*0x1],RBP
0000da05(5): CMP qword ptr [RSP + 0x40],RBX
0000da0a(2): JLE 0x0000da28
0000da0c(7): MOVSXD RDX,dword ptr [0xe0 + R15]
0000da13(6): ADD qword ptr [RSP + 0x10],0x8
0000da19(5): CMP RDX,qword ptr [RSP + 0x20]
0000da1e(4): MOV qword ptr [RSP],RBX
0000da22(6): JGE 0x0000d75e
0000da28(8): MOV RDI,qword ptr [0xa0 + RSP]
0000da30(5): CALL 0x000019d0
0000da35(7): MOV RAX,qword ptr [0xb8 + R15]
0000da3c(5): MOV RBX,qword ptr [RSP + 0x40]
0000da41(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000da45(3): TEST RAX,RAX
0000da48(6): JZ 0x0000dd25
0000da4e(5): MOV RBX,qword ptr [RSP + 0x60]
0000da53(5): MOV RDX,qword ptr [RSP + 0x78]
0000da58(4): LEA RSI,[RAX + 0x18]
0000da5c(3): MOV qword ptr [RBX],R12
0000da5f(5): MOV RBX,qword ptr [RSP + 0x68]
0000da64(7): MOV qword ptr [0xb8 + R15],RBX
0000da6b(5): MOV RBX,qword ptr [RSP + 0x70]
0000da70(4): MOV qword ptr [R15 + 0x48],RBX
0000da74(4): MOV RDI,qword ptr [RAX + 0x10]
0000da78(5): CALL 0x00008bf0
0000da7d(3): TEST RAX,RAX
0000da80(3): SETZ AL
0000da83(3): MOVZX EAX,AL
0000da86(5): JMP 0x0000db84
0000da90(4): LEA RSI,[RBP + -0x1]
0000da94(4): MOV qword ptr [R15 + 0x48],RBP
0000da98(3): MOV RDI,R15
0000da9b(5): CALL 0x0000a9d0
0000daa0(3): MOV R13D,EAX
0000daa3(5): MOV EDI,0x8
0000daa8(12): MOV qword ptr [0x90 + RSP],0x1
0000dab4(12): MOV qword ptr [0x98 + RSP],0x1
0000dac0(5): CALL 0x00001c20
0000dac5(3): TEST RAX,RAX
0000dac8(8): MOV qword ptr [0xa0 + RSP],RAX
0000dad0(6): JZ 0x0000dd1b
0000dad6(3): MOV qword ptr [RAX],RBX
0000dad9(7): MOV ECX,dword ptr [0x110 + RSP]
0000dae0(8): LEA RBX,[0x90 + RSP]
0000dae8(5): MOV RDX,qword ptr [RSP + 0x48]
0000daed(5): MOV RDI,qword ptr [RSP + 0x30]
0000daf2(3): MOV R12,RBP
0000daf5(3): MOV RSI,RBX
0000daf8(11): MOV dword ptr [0x88 + RSP],0x0
0000db03(5): CALL 0x000095a0
0000db08(2): TEST EAX,EAX
0000db0a(7): MOV dword ptr [0x88 + RSP],EAX
0000db11(6): JZ 0x0000dc2d
0000db17(2): JMP 0x0000db70
0000db20(2): TEST EAX,EAX
0000db22(6): JNZ 0x0000d7f8
0000db28(4): MOV RSI,qword ptr [R12]
0000db2c(3): ADD RSI,R13
0000db2f(5): JMP 0x0000d7e8
0000db38(3): TEST RBP,RBP
0000db3b(6): JNZ 0x0000d7a2
0000db41(4): MOV RAX,qword ptr [RSP]
0000db45(4): LEA RBX,[RAX + 0x1]
0000db49(3): MOV R12,RBX
0000db4c(5): JMP 0x0000d9b4
0000db58(8): MOV RDI,qword ptr [0xc0 + RSP]
0000db60(5): CALL 0x000019d0
0000db65(11): MOV dword ptr [0x88 + RSP],0xc
0000db70(8): MOV RDI,qword ptr [0xa0 + RSP]
0000db78(5): CALL 0x000019d0
0000db7d(7): MOV EAX,dword ptr [0x88 + RSP]
0000db84(8): MOV RBX,qword ptr [0xc8 + RSP]
0000db8c(9): XOR RBX,qword ptr FS:[0x28]
0000db95(6): JNZ 0x0000dd4c
0000db9b(7): ADD RSP,0xd8
0000dba2(1): POP RBX
0000dba3(1): POP RBP
0000dba4(2): POP R12
0000dba6(2): POP R13
0000dba8(2): POP R14
0000dbaa(2): POP R15
0000dbac(1): RET
0000dbb0(8): MOV RDI,qword ptr [0xc0 + RSP]
0000dbb8(5): CALL 0x000019d0
0000dbbd(11): MOV dword ptr [0x88 + RSP],0x0
0000dbc8(5): JMP 0x0000d948
0000dbd0(7): MOV EAX,dword ptr [0x88 + RSP]
0000dbd7(2): TEST EAX,EAX
0000dbd9(2): JNZ 0x0000db70
0000dbdb(7): MOV RAX,qword ptr [0xb8 + R15]
0000dbe2(5): MOV RDX,qword ptr [RSP + 0x10]
0000dbe7(6): ADD qword ptr [RSP + 0x20],0x1
0000dbed(8): MOV qword ptr [RAX + RDX*0x1],0x0
0000dbf5(5): JMP 0x0000da05
0000dc00(8): LEA RBX,[0x90 + RSP]
0000dc08(4): LEA RSI,[RBP + 0x8]
0000dc0c(3): MOV RDI,RBX
0000dc0f(5): CALL 0x00009d50
0000dc14(2): TEST EAX,EAX
0000dc16(7): MOV dword ptr [0x88 + RSP],EAX
0000dc1d(6): JNZ 0x0000db84
0000dc23(4): TEST byte ptr [RBP + 0x68],0x40
0000dc27(6): JZ 0x0000d6fc
0000dc2d(9): CMP qword ptr [0x98 + RSP],0x0
0000dc36(2): JZ 0x0000dc62
0000dc38(8): MOV R8D,dword ptr [0x110 + RSP]
0000dc40(5): MOV RCX,qword ptr [RSP + 0x48]
0000dc45(3): MOV RDX,R12
0000dc48(3): MOV RSI,RBX
0000dc4b(3): MOV RDI,R15
0000dc4e(5): CALL 0x0000a4e0
0000dc53(2): TEST EAX,EAX
0000dc55(7): MOV dword ptr [0x88 + RSP],EAX
0000dc5c(6): JNZ 0x0000db70
0000dc62(5): MOV RSI,qword ptr [RSP + 0x30]
0000dc67(8): LEA RDI,[0x88 + RSP]
0000dc6f(3): MOV ECX,R13D
0000dc72(3): MOV RDX,RBX
0000dc75(5): CALL 0x00009f40
0000dc7a(3): TEST RAX,RAX
0000dc7d(3): MOV RBP,RAX
0000dc80(6): JZ 0x0000dd07
0000dc86(7): MOV RAX,qword ptr [0xb8 + R15]
0000dc8d(4): MOV qword ptr [RAX + R12*0x8],RBP
0000dc91(5): JMP 0x0000d6fc
0000dc96(4): LEA R12,[RAX + 0x1]
0000dc9a(10): MOV RAX,0x7fffffffffffffff
0000dca4(3): SUB RAX,R13
0000dca7(3): CMP RAX,R12
0000dcaa(2): JL 0x0000dd1b
0000dcac(5): LEA R14,[R13 + R12*0x1]
0000dcb1(10): MOV RAX,0x1fffffffffffffff
0000dcbb(3): CMP R14,RAX
0000dcbe(2): JA 0x0000dd1b
0000dcc0(5): MOV RAX,qword ptr [RSP + 0x60]
0000dcc5(8): LEA RSI,[R14*0x8]
0000dccd(4): MOV RDI,qword ptr [RAX + 0x10]
0000dcd1(5): CALL 0x00001c90
0000dcd6(3): TEST RAX,RAX
0000dcd9(2): JZ 0x0000dd1b
0000dcdb(5): MOV RCX,qword ptr [RSP + 0x60]
0000dce0(8): LEA RDX,[R12*0x8]
0000dce8(4): LEA RDI,[RAX + R13*0x8]
0000dcec(2): XOR ESI,ESI
0000dcee(4): MOV qword ptr [RCX + 0x10],RAX
0000dcf2(4): MOV qword ptr [RCX + 0x8],R14
0000dcf6(5): CALL 0x00001b60
0000dcfb(5): JMP 0x0000d67c
0000dd00(2): XOR EDI,EDI
0000dd02(5): JMP 0x0000dbb8
0000dd07(7): MOV ESI,dword ptr [0x88 + RSP]
0000dd0e(2): TEST ESI,ESI
0000dd10(6): JZ 0x0000dc86
0000dd16(5): JMP 0x0000db70
0000dd1b(5): MOV EAX,0xc
0000dd20(5): JMP 0x0000db84
0000dd25(5): MOV RAX,qword ptr [RSP + 0x60]
0000dd2a(3): MOV qword ptr [RAX],R12
0000dd2d(5): MOV RAX,qword ptr [RSP + 0x68]
0000dd32(7): MOV qword ptr [0xb8 + R15],RAX
0000dd39(5): MOV RAX,qword ptr [RSP + 0x70]
0000dd3e(4): MOV qword ptr [R15 + 0x48],RAX
0000dd42(5): MOV EAX,0x1
0000dd47(5): JMP 0x0000db84
0000dd4c(5): CALL 0x00001ad0
0000dd51(5): NOP dword ptr [RAX + RAX*0x1]
0000dd56(10): NOP word ptr CS:[RAX + RAX*0x1]
0000dd60(1): PUSH RBP
0000dd61(3): MOV RBP,RSP
0000dd64(2): PUSH R15
0000dd66(2): PUSH R14
0000dd68(2): PUSH R13
0000dd6a(2): PUSH R12
0000dd6c(3): MOV R13,RCX
0000dd6f(1): PUSH RBX
0000dd70(3): MOV R12,RSI
0000dd73(7): SUB RSP,0xb8
0000dd7a(7): MOV qword ptr [-0x98 + RBP],RDX
0000dd81(8): MOV qword ptr [RBP + -0x50],0x0
0000dd89(9): MOV RAX,qword ptr FS:[0x28]
0000dd92(4): MOV qword ptr [RBP + -0x38],RAX
0000dd96(2): XOR EAX,EAX
0000dd98(3): MOV RAX,qword ptr [RDI]
0000dd9b(3): TEST R8B,R8B
0000dd9e(8): MOV qword ptr [RBP + -0x48],0x2
0000dda6(8): MOV qword ptr [RBP + -0x40],0x0
0000ddae(7): MOV qword ptr [-0x90 + RBP],RAX
0000ddb5(6): JZ 0x0000e55d
0000ddbb(5): MOV EDI,0x60
0000ddc0(5): CALL 0x00001c20
0000ddc5(4): LEA RCX,[RBP + -0x50]
0000ddc9(3): TEST RAX,RAX
0000ddcc(4): MOV qword ptr [RBP + -0x40],RAX
0000ddd0(7): MOV qword ptr [-0x88 + RBP],RCX
0000ddd7(6): JZ 0x0000e4fc
0000dddd(7): MOV RAX,qword ptr [-0x90 + RBP]
0000dde4(4): PXOR XMM0,XMM0
0000dde8(8): MOV qword ptr [RBP + -0x60],0x0
0000ddf0(7): MOV RBX,qword ptr [0x90 + RAX]
0000ddf7(7): MOV RAX,qword ptr [-0x98 + RBP]
0000ddfe(4): MOVAPS xmmword ptr [RBP + -0x70],XMM0
0000de02(4): SHL RAX,0x4
0000de06(6): CMP RAX,0xfbf
0000de0c(7): MOV qword ptr [-0xb8 + RBP],RAX
0000de13(6): JA 0x0000e506
0000de19(4): ADD RAX,0x10
0000de1d(7): MOV byte ptr [-0xc9 + RBP],0x0
0000de24(3): SUB RSP,RAX
0000de27(5): LEA RAX,[RSP + 0xf]
0000de2c(4): AND RAX,-0x10
0000de30(7): MOV qword ptr [-0xc0 + RBP],RAX
0000de37(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000de3e(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000de45(3): MOV RSI,R13
0000de48(5): CALL 0x00001be0
0000de4d(4): LEA RAX,[RBP + -0x70]
0000de51(4): MOV RCX,qword ptr [R13]
0000de55(7): MOV qword ptr [-0xa8 + RBP],RAX
0000de5c(4): ADD RAX,0x10
0000de60(4): MOV qword ptr [RBP + -0x78],RCX
0000de64(7): MOV qword ptr [-0xc8 + RBP],RAX
0000de6b(4): LEA RAX,[RBP + -0x78]
0000de6f(7): MOV qword ptr [-0xb0 + RBP],RAX
0000de76(5): JMP 0x0000df59
0000de80(3): CMP ESI,0x9
0000de83(6): JZ 0x0000e070
0000de89(3): CMP RAX,RCX
0000de8c(2): JNZ 0x0000de9c
0000de8e(8): CMP qword ptr [0xb0 + R12],RBX
0000de96(6): JZ 0x0000e270
0000de9c(8): MOV R14,qword ptr [0x98 + R12]
0000dea4(3): MOV RDI,qword ptr [R14]
0000dea7(4): LEA RSI,[RDI + R9*0x1]
0000deab(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000deaf(2): TEST AL,0x8
0000deb1(6): JNZ 0x0000dfc0
0000deb7(4): TEST byte ptr [RSI + 0xa],0x10
0000debb(6): JNZ 0x0000e0c0
0000dec1(2): CMP AL,0x4
0000dec3(6): JZ 0x0000e100
0000dec9(4): MOV RCX,qword ptr [RBP + -0x78]
0000decd(3): MOV RDX,RCX
0000ded0(3): MOV RDI,R12
0000ded3(7): MOV qword ptr [-0xa0 + RBP],RCX
0000deda(5): CALL 0x0000aac0
0000dedf(2): TEST AL,AL
0000dee1(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000dee8(6): JZ 0x0000e338
0000deee(4): MOV RAX,qword ptr [R14 + 0x18]
0000def2(4): LEA RDX,[RCX + 0x1]
0000def6(4): MOV RBX,qword ptr [RAX + R15*0x8]
0000defa(8): CMP qword ptr [-0x88 + RBP],0x0
0000df02(4): MOV qword ptr [RBP + -0x78],RDX
0000df06(2): JZ 0x0000df44
0000df08(8): CMP RDX,qword ptr [0xa8 + R12]
0000df10(6): JG 0x0000e346
0000df16(8): MOV RAX,qword ptr [0xb8 + R12]
0000df1e(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000df22(3): TEST RAX,RAX
0000df25(6): JZ 0x0000e346
0000df2b(4): MOV RDI,qword ptr [RAX + 0x10]
0000df2f(4): LEA RSI,[RAX + 0x18]
0000df33(3): MOV RDX,RBX
0000df36(5): CALL 0x00008bf0
0000df3b(3): TEST RAX,RAX
0000df3e(6): JZ 0x0000e346
0000df44(8): MOV qword ptr [RBP + -0x68],0x0
0000df4c(3): TEST RBX,RBX
0000df4f(6): JS 0x0000e32a
0000df55(4): MOV RCX,qword ptr [RBP + -0x78]
0000df59(4): MOV RAX,qword ptr [R13 + 0x8]
0000df5d(3): CMP RAX,RCX
0000df60(6): JL 0x0000e450
0000df66(7): MOV RDI,qword ptr [-0x90 + RBP]
0000df6d(3): MOV R9,RBX
0000df70(3): MOV R15,RBX
0000df73(4): SHL R9,0x4
0000df77(3): MOV RDX,qword ptr [RDI]
0000df7a(3): ADD RDX,R9
0000df7d(4): MOVZX ESI,byte ptr [RDX + 0x8]
0000df81(3): CMP ESI,0x8
0000df84(6): JNZ 0x0000de80
0000df8a(3): MOV RDX,qword ptr [RDX]
0000df8d(4): ADD RDX,0x1
0000df91(7): CMP qword ptr [-0x98 + RBP],RDX
0000df98(6): JLE 0x0000de89
0000df9e(4): SHL RDX,0x4
0000dfa2(3): ADD RDX,R13
0000dfa5(8): MOV qword ptr [RDX + 0x8],-0x1
0000dfad(3): MOV qword ptr [RDX],RCX
0000dfb0(4): MOV RAX,qword ptr [R13 + 0x8]
0000dfb4(5): JMP 0x0000de89
0000dfc0(8): MOV RAX,qword ptr [0xb8 + R12]
0000dfc8(4): MOV RDX,qword ptr [RBP + -0x78]
0000dfcc(3): MOV RSI,RBX
0000dfcf(7): MOV RDI,qword ptr [-0xa8 + RBP]
0000dfd6(4): MOV R9,qword ptr [RAX + RDX*0x8]
0000dfda(4): MOV RAX,qword ptr [R14 + 0x28]
0000dfde(4): LEA RDX,[RBX + RBX*0x2]
0000dfe2(7): MOV qword ptr [-0xa0 + RBP],R9
0000dfe9(4): LEA R15,[RAX + RDX*0x8]
0000dfed(5): CALL 0x000076b0
0000dff2(2): TEST AL,AL
0000dff4(7): MOV R9,qword ptr [-0xa0 + RBP]
0000dffb(6): JZ 0x0000e4d8
0000e001(4): MOV R10,qword ptr [R15 + 0x8]
0000e005(3): TEST R10,R10
0000e008(6): JLE 0x0000e338
0000e00e(4): MOV R15,qword ptr [R15 + 0x10]
0000e012(4): MOV R11,qword ptr [R9 + 0x10]
0000e016(4): LEA R14,[R9 + 0x18]
0000e01a(7): MOV RBX,-0x1
0000e021(3): XOR R9D,R9D
0000e024(7): MOV qword ptr [-0xa0 + RBP],R12
0000e02b(5): NOP dword ptr [RAX + RAX*0x1]
0000e030(4): MOV R12,qword ptr [R15 + R9*0x8]
0000e034(3): MOV RSI,R14
0000e037(3): MOV RDI,R11
0000e03a(3): MOV RDX,R12
0000e03d(5): CALL 0x00008bf0
0000e042(3): TEST RAX,RAX
0000e045(2): JZ 0x0000e054
0000e047(4): CMP RBX,-0x1
0000e04b(6): JNZ 0x0000e1a0
0000e051(3): MOV RBX,R12
0000e054(4): ADD R9,0x1
0000e058(3): CMP R10,R9
0000e05b(2): JNZ 0x0000e030
0000e05d(7): MOV R12,qword ptr [-0xa0 + RBP]
0000e064(5): JMP 0x0000df4c
0000e070(3): MOV RDI,qword ptr [RDX]
0000e073(4): LEA RSI,[RDI + 0x1]
0000e077(7): CMP qword ptr [-0x98 + RBP],RSI
0000e07e(6): JLE 0x0000de89
0000e084(4): SHL RSI,0x4
0000e088(5): LEA RAX,[R13 + RSI*0x1]
0000e08d(3): CMP qword ptr [RAX],RCX
0000e090(6): JL 0x0000e410
0000e096(4): TEST byte ptr [RDX + 0xa],0x8
0000e09a(2): JZ 0x0000e0ae
0000e09c(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000e0a3(5): CMP qword ptr [RDI + RSI*0x1],-0x1
0000e0a8(6): JNZ 0x0000e49b
0000e0ae(4): MOV qword ptr [RAX + 0x8],RCX
0000e0b2(4): MOV RAX,qword ptr [R13 + 0x8]
0000e0b6(5): JMP 0x0000de89
0000e0c0(4): MOV R8,qword ptr [RBP + -0x78]
0000e0c4(7): LEA RSI,[0xd8 + R14]
0000e0cb(3): MOV RCX,R12
0000e0ce(3): MOV RDX,RBX
0000e0d1(7): MOV qword ptr [-0xa0 + RBP],R9
0000e0d8(5): CALL 0x0000d3a0
0000e0dd(3): MOVSXD RCX,EAX
0000e0e0(3): TEST RCX,RCX
0000e0e3(6): JNZ 0x0000e2e1
0000e0e9(7): MOV R9,qword ptr [-0xa0 + RBP]
0000e0f0(3): MOV RSI,qword ptr [R14]
0000e0f3(4): MOV RCX,qword ptr [RBP + -0x78]
0000e0f7(3): ADD RSI,R9
0000e0fa(5): JMP 0x0000decd
0000e100(3): MOV RAX,qword ptr [RSI]
0000e103(4): ADD RAX,0x1
0000e107(4): SHL RAX,0x4
0000e10b(3): ADD RAX,R13
0000e10e(4): MOV RDX,qword ptr [RAX + 0x8]
0000e112(3): MOV RDI,qword ptr [RAX]
0000e115(3): MOV RCX,RDX
0000e118(3): SUB RCX,RDI
0000e11b(8): CMP qword ptr [-0x88 + RBP],0x0
0000e123(6): JZ 0x0000e2d8
0000e129(4): CMP RDI,-0x1
0000e12d(6): JZ 0x0000e346
0000e133(4): CMP RDX,-0x1
0000e137(6): JZ 0x0000e346
0000e13d(3): TEST RCX,RCX
0000e140(6): JZ 0x0000e390
0000e146(4): MOV R15,qword ptr [RBP + -0x78]
0000e14a(5): MOV RDX,qword ptr [R12 + 0x30]
0000e14f(5): MOV RAX,qword ptr [R12 + 0x8]
0000e154(3): SUB RDX,R15
0000e157(3): CMP RCX,RDX
0000e15a(6): JG 0x0000e346
0000e160(4): LEA RSI,[RAX + R15*0x1]
0000e164(3): ADD RDI,RAX
0000e167(3): MOV RDX,RCX
0000e16a(7): MOV qword ptr [-0xa0 + RBP],RCX
0000e171(5): CALL 0x00001b90
0000e176(2): TEST EAX,EAX
0000e178(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000e17f(6): JNZ 0x0000e346
0000e185(4): MOV RAX,qword ptr [R14 + 0x18]
0000e189(4): LEA RDX,[R15 + RCX*0x1]
0000e18d(4): MOV RBX,qword ptr [RAX + RBX*0x8]
0000e191(5): JMP 0x0000defa
0000e1a0(7): MOV RSI,qword ptr [-0xc8 + RBP]
0000e1a7(4): MOV RDI,qword ptr [RBP + -0x68]
0000e1ab(3): MOV RDX,RBX
0000e1ae(3): MOV R14,R12
0000e1b1(7): MOV R12,qword ptr [-0xa0 + RBP]
0000e1b8(5): CALL 0x00008bf0
0000e1bd(3): TEST RAX,RAX
0000e1c0(6): JNZ 0x0000e380
0000e1c6(7): MOV RCX,qword ptr [-0x88 + RBP]
0000e1cd(3): TEST RCX,RCX
0000e1d0(6): JZ 0x0000df4c
0000e1d6(3): MOV R15,qword ptr [RCX]
0000e1d9(4): MOV RDX,qword ptr [RBP + -0x78]
0000e1dd(4): LEA RAX,[R15 + 0x1]
0000e1e1(4): CMP RAX,qword ptr [RCX + 0x8]
0000e1e5(3): MOV qword ptr [RCX],RAX
0000e1e8(6): JZ 0x0000e56d
0000e1ee(4): MOV RAX,qword ptr [RCX + 0x10]
0000e1f2(4): LEA R15,[R15 + R15*0x2]
0000e1f6(4): SHL R15,0x4
0000e1fa(3): ADD R15,RAX
0000e1fd(4): MOV qword ptr [R15 + 0x8],R14
0000e201(7): MOV R14,qword ptr [-0xb8 + RBP]
0000e208(3): MOV qword ptr [R15],RDX
0000e20b(3): MOV RDI,R14
0000e20e(5): CALL 0x00001c20
0000e213(3): TEST RAX,RAX
0000e216(4): MOV qword ptr [R15 + 0x10],RAX
0000e21a(2): JZ 0x0000e242
0000e21c(3): MOV RDX,R14
0000e21f(3): MOV RSI,R13
0000e222(3): MOV RDI,RAX
0000e225(5): CALL 0x00001be0
0000e22a(7): MOV RSI,qword ptr [-0xa8 + RBP]
0000e231(4): LEA RDI,[R15 + 0x18]
0000e235(5): CALL 0x00009d50
0000e23a(2): TEST EAX,EAX
0000e23c(6): JZ 0x0000df4c
0000e242(4): MOV RDI,qword ptr [RBP + -0x60]
0000e246(5): CALL 0x000019d0
0000e24b(7): CMP byte ptr [-0xc9 + RBP],0x0
0000e252(6): JNZ 0x0000e5eb
0000e258(7): MOV RDI,qword ptr [-0x88 + RBP]
0000e25f(5): CALL 0x0000c2b0
0000e264(5): MOV EAX,0xc
0000e269(5): JMP 0x0000e479
0000e270(8): CMP qword ptr [-0x88 + RBP],0x0
0000e278(6): JZ 0x0000e5ac
0000e27e(7): MOV RCX,qword ptr [-0x98 + RBP]
0000e285(3): TEST RCX,RCX
0000e288(2): JZ 0x0000e2aa
0000e28a(3): MOV RAX,R13
0000e28d(2): XOR EDX,EDX
0000e28f(1): NOP
0000e290(4): CMP qword ptr [RAX],0x0
0000e294(2): JS 0x0000e29d
0000e296(5): CMP qword ptr [RAX + 0x8],-0x1
0000e29b(2): JZ 0x0000e2f0
0000e29d(4): ADD RDX,0x1
0000e2a1(4): ADD RAX,0x10
0000e2a5(3): CMP RCX,RDX
0000e2a8(2): JNZ 0x0000e290
0000e2aa(4): MOV RDI,qword ptr [RBP + -0x60]
0000e2ae(5): CALL 0x000019d0
0000e2b3(7): CMP byte ptr [-0xc9 + RBP],0x0
0000e2ba(6): JNZ 0x0000e634
0000e2c0(7): MOV RDI,qword ptr [-0x88 + RBP]
0000e2c7(5): CALL 0x0000c2b0
0000e2cc(2): XOR EAX,EAX
0000e2ce(5): JMP 0x0000e479
0000e2d8(3): TEST RCX,RCX
0000e2db(6): JZ 0x0000e390
0000e2e1(4): MOV R15,qword ptr [RBP + -0x78]
0000e2e5(5): JMP 0x0000e185
0000e2f0(7): MOV RDI,qword ptr [-0x88 + RBP]
0000e2f7(7): MOV R9,qword ptr [-0xa8 + RBP]
0000e2fe(3): MOV R8,R13
0000e301(7): MOV RCX,qword ptr [-0x98 + RBP]
0000e308(7): MOV RDX,qword ptr [-0xb0 + RBP]
0000e30f(4): LEA RSI,[RDI + 0x10]
0000e313(5): CALL 0x0000c300
0000e318(3): MOV R9,RAX
0000e31b(3): MOV RBX,RAX
0000e31e(3): MOV R15,RAX
0000e321(4): SHL R9,0x4
0000e325(5): JMP 0x0000de9c
0000e32a(4): CMP RBX,-0x2
0000e32e(6): JZ 0x0000e4d8
0000e334(4): NOP dword ptr [RAX]
0000e338(8): CMP qword ptr [-0x88 + RBP],0x0
0000e340(6): JZ 0x0000e5fc
0000e346(7): MOV RDI,qword ptr [-0x88 + RBP]
0000e34d(7): MOV RCX,qword ptr [-0x98 + RBP]
0000e354(4): LEA RDX,[RBP + -0x78]
0000e358(7): MOV R9,qword ptr [-0xa8 + RBP]
0000e35f(3): MOV R8,R13
0000e362(4): LEA RSI,[RDI + 0x10]
0000e366(5): CALL 0x0000c300
0000e36b(4): MOV RCX,qword ptr [RBP + -0x78]
0000e36f(3): MOV RBX,RAX
0000e372(5): JMP 0x0000de6b
0000e380(3): MOV RBX,R14
0000e383(5): JMP 0x0000df4c
0000e390(7): MOV RDI,qword ptr [-0xa8 + RBP]
0000e397(3): MOV RSI,RBX
0000e39a(7): MOV qword ptr [-0xa0 + RBP],R9
0000e3a1(5): CALL 0x000076b0
0000e3a6(2): TEST AL,AL
0000e3a8(6): JZ 0x0000e4d8
0000e3ae(4): MOV RDX,qword ptr [R14 + 0x28]
0000e3b2(4): LEA RAX,[RBX + RBX*0x2]
0000e3b6(4): MOV RCX,qword ptr [RBP + -0x78]
0000e3ba(4): LEA RAX,[RDX + RAX*0x8]
0000e3be(7): MOV qword ptr [-0xd8 + RBP],RCX
0000e3c5(4): MOV RAX,qword ptr [RAX + 0x10]
0000e3c9(3): MOV RBX,qword ptr [RAX]
0000e3cc(8): MOV RAX,qword ptr [0xb8 + R12]
0000e3d4(4): MOV RAX,qword ptr [RAX + RCX*0x8]
0000e3d8(3): MOV RDX,RBX
0000e3db(4): MOV RDI,qword ptr [RAX + 0x10]
0000e3df(4): LEA RSI,[RAX + 0x18]
0000e3e3(5): CALL 0x00008bf0
0000e3e8(3): TEST RAX,RAX
0000e3eb(6): JNZ 0x0000df4c
0000e3f1(7): MOV R9,qword ptr [-0xa0 + RBP]
0000e3f8(3): MOV RSI,qword ptr [R14]
0000e3fb(7): MOV RCX,qword ptr [-0xd8 + RBP]
0000e402(3): ADD RSI,R9
0000e405(5): JMP 0x0000decd
0000e410(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000e417(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000e41e(3): MOV RSI,R13
0000e421(4): MOV qword ptr [RAX + 0x8],RCX
0000e425(7): MOV qword ptr [-0xd8 + RBP],R9
0000e42c(7): MOV qword ptr [-0xa0 + RBP],RCX
0000e433(5): CALL 0x00001be0
0000e438(4): MOV RAX,qword ptr [R13 + 0x8]
0000e43c(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000e443(7): MOV R9,qword ptr [-0xd8 + RBP]
0000e44a(5): JMP 0x0000de89
0000e450(4): MOV RDI,qword ptr [RBP + -0x60]
0000e454(5): CALL 0x000019d0
0000e459(7): CMP byte ptr [-0xc9 + RBP],0x0
0000e460(6): JNZ 0x0000e53c
0000e466(7): MOV RDI,qword ptr [-0x88 + RBP]
0000e46d(3): TEST RDI,RDI
0000e470(2): JZ 0x0000e477
0000e472(5): CALL 0x0000c2b0
0000e477(2): XOR EAX,EAX
0000e479(4): MOV RBX,qword ptr [RBP + -0x38]
0000e47d(9): XOR RBX,qword ptr FS:[0x28]
0000e486(6): JNZ 0x0000e645
0000e48c(4): LEA RSP,[RBP + -0x28]
0000e490(1): POP RBX
0000e491(2): POP R12
0000e493(2): POP R13
0000e495(2): POP R14
0000e497(2): POP R15
0000e499(1): POP RBP
0000e49a(1): RET
0000e49b(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000e4a2(3): MOV RSI,RDI
0000e4a5(3): MOV RDI,R13
0000e4a8(7): MOV qword ptr [-0xd8 + RBP],RCX
0000e4af(7): MOV qword ptr [-0xa0 + RBP],R9
0000e4b6(5): CALL 0x00001be0
0000e4bb(4): MOV RAX,qword ptr [R13 + 0x8]
0000e4bf(7): MOV R9,qword ptr [-0xa0 + RBP]
0000e4c6(7): MOV RCX,qword ptr [-0xd8 + RBP]
0000e4cd(5): JMP 0x0000de89
0000e4d8(4): MOV RDI,qword ptr [RBP + -0x60]
0000e4dc(5): CALL 0x000019d0
0000e4e1(7): CMP byte ptr [-0xc9 + RBP],0x0
0000e4e8(6): JNZ 0x0000e5eb
0000e4ee(8): CMP qword ptr [-0x88 + RBP],0x0
0000e4f6(6): JNZ 0x0000e258
0000e4fc(5): MOV EAX,0xc
0000e501(5): JMP 0x0000e479
0000e506(7): MOV RDI,qword ptr [-0xb8 + RBP]
0000e50d(5): CALL 0x00001c20
0000e512(3): TEST RAX,RAX
0000e515(7): MOV qword ptr [-0xc0 + RBP],RAX
0000e51c(7): MOV byte ptr [-0xc9 + RBP],0x1
0000e523(6): JNZ 0x0000de37
0000e529(7): MOV RDI,qword ptr [-0x88 + RBP]
0000e530(3): TEST RDI,RDI
0000e533(2): JZ 0x0000e4fc
0000e535(5): CALL 0x0000c2b0
0000e53a(2): JMP 0x0000e4fc
0000e53c(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000e543(5): CALL 0x000019d0
0000e548(7): MOV RDI,qword ptr [-0x88 + RBP]
0000e54f(3): TEST RDI,RDI
0000e552(6): JNZ 0x0000e472
0000e558(5): JMP 0x0000e477
0000e55d(11): MOV qword ptr [-0x88 + RBP],0x0
0000e568(5): JMP 0x0000dddd
0000e56d(4): LEA RSI,[RAX + RAX*0x2]
0000e571(7): MOV RAX,qword ptr [-0x88 + RBP]
0000e578(7): MOV qword ptr [-0xa0 + RBP],RDX
0000e57f(4): SHL RSI,0x5
0000e583(4): MOV RDI,qword ptr [RAX + 0x10]
0000e587(5): CALL 0x00001c90
0000e58c(3): TEST RAX,RAX
0000e58f(2): JZ 0x0000e5d5
0000e591(7): MOV RCX,qword ptr [-0x88 + RBP]
0000e598(7): MOV RDX,qword ptr [-0xa0 + RBP]
0000e59f(4): SHL qword ptr [RCX + 0x8],1
0000e5a3(4): MOV qword ptr [RCX + 0x10],RAX
0000e5a7(5): JMP 0x0000e1f2
0000e5ac(4): MOV RDI,qword ptr [RBP + -0x60]
0000e5b0(5): CALL 0x000019d0
0000e5b5(7): CMP byte ptr [-0xc9 + RBP],0x0
0000e5bc(6): JZ 0x0000e477
0000e5c2(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000e5c9(5): CALL 0x000019d0
0000e5ce(2): XOR EAX,EAX
0000e5d0(5): JMP 0x0000e479
0000e5d5(4): MOV RDI,qword ptr [RBP + -0x60]
0000e5d9(5): CALL 0x000019d0
0000e5de(7): CMP byte ptr [-0xc9 + RBP],0x0
0000e5e5(6): JZ 0x0000e258
0000e5eb(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000e5f2(5): CALL 0x000019d0
0000e5f7(5): JMP 0x0000e4ee
0000e5fc(4): MOV RDI,qword ptr [RBP + -0x60]
0000e600(5): CALL 0x000019d0
0000e605(7): CMP byte ptr [-0xc9 + RBP],0x0
0000e60c(5): MOV EAX,0x1
0000e611(6): JZ 0x0000e479
0000e617(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000e61e(6): MOV dword ptr [-0x88 + RBP],EAX
0000e624(5): CALL 0x000019d0
0000e629(6): MOV EAX,dword ptr [-0x88 + RBP]
0000e62f(5): JMP 0x0000e479
0000e634(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000e63b(5): CALL 0x000019d0
0000e640(5): JMP 0x0000e2c0
0000e645(5): CALL 0x00001ad0
0000e64a(6): NOP word ptr [RAX + RAX*0x1]
0000e650(2): PUSH R15
0000e652(2): PUSH R14
0000e654(3): MOV R14,RCX
0000e657(2): PUSH R13
0000e659(2): PUSH R12
0000e65b(3): MOV R13,RSI
0000e65e(1): PUSH RBP
0000e65f(1): PUSH RBX
0000e660(4): LEA RSI,[RDX + 0x10]
0000e664(3): MOV RBP,RDX
0000e667(3): MOV R9,R8
0000e66a(3): MOV R12,R8
0000e66d(4): SUB RSP,0x20
0000e671(4): MOV RCX,qword ptr [RDX + 0x8]
0000e675(3): MOV R8,R14
0000e678(2): PUSH 0x8
0000e67a(3): MOV RDX,qword ptr [RDX]
0000e67d(3): MOV RBX,RDI
0000e680(5): CALL 0x0000d600
0000e685(2): TEST EAX,EAX
0000e687(1): POP RDX
0000e688(1): POP RCX
0000e689(2): JZ 0x0000e6a0
0000e68b(4): ADD RSP,0x18
0000e68f(1): POP RBX
0000e690(1): POP RBP
0000e691(2): POP R12
0000e693(2): POP R13
0000e695(2): POP R14
0000e697(2): POP R15
0000e699(1): RET
0000e6a0(7): MOV RAX,qword ptr [0xc8 + RBX]
0000e6a7(7): MOV RDX,qword ptr [0xd0 + RBX]
0000e6ae(4): MOV R15,qword ptr [RBP + 0x8]
0000e6b2(4): MOV RCX,qword ptr [R13]
0000e6b6(7): MOV RDI,qword ptr [0xd8 + RBX]
0000e6bd(3): CMP RAX,RDX
0000e6c0(3): MOV RSI,R15
0000e6c3(6): JGE 0x0000e760
0000e6c9(4): LEA RDX,[RAX + RAX*0x4]
0000e6cd(4): SHL RDX,0x3
0000e6d1(3): TEST RAX,RAX
0000e6d4(2): JLE 0x0000e6e1
0000e6d6(5): LEA R8,[RDI + RDX*0x1 + -0x28]
0000e6db(4): CMP R12,qword ptr [R8 + 0x8]
0000e6df(2): JZ 0x0000e750
0000e6e1(3): ADD RDI,RDX
0000e6e4(2): XOR EDX,EDX
0000e6e6(3): CMP R15,RCX
0000e6e9(3): SETZ DL
0000e6ec(4): ADD RAX,0x1
0000e6f0(3): MOV qword ptr [RDI],R14
0000e6f3(2): NEG EDX
0000e6f5(4): MOV qword ptr [RDI + 0x8],R12
0000e6f9(4): MOV qword ptr [RDI + 0x10],RCX
0000e6fd(4): MOV word ptr [RDI + 0x22],DX
0000e701(4): MOV qword ptr [RDI + 0x18],R15
0000e705(7): MOV qword ptr [0xc8 + RBX],RAX
0000e70c(4): MOV byte ptr [RDI + 0x20],0x0
0000e710(3): MOV RAX,R15
0000e713(7): MOVSXD RDX,dword ptr [0xe0 + RBX]
0000e71a(3): SUB RAX,RCX
0000e71d(3): CMP RDX,RAX
0000e720(2): JGE 0x0000e72c
0000e722(3): SUB R15D,ECX
0000e725(7): MOV dword ptr [0xe0 + RBX],R15D
0000e72c(3): ADD RSI,R12
0000e72f(4): SUB RSI,qword ptr [R13]
0000e733(4): ADD RSP,0x18
0000e737(3): MOV RDI,RBX
0000e73a(1): POP RBX
0000e73b(1): POP RBP
0000e73c(2): POP R12
0000e73e(2): POP R13
0000e740(2): POP R14
0000e742(2): POP R15
0000e744(5): JMP 0x00008280
0000e750(5): MOV byte ptr [R8 + 0x20],0x1
0000e755(2): JMP 0x0000e6e1
0000e760(4): LEA RSI,[RDX + RDX*0x4]
0000e764(5): MOV qword ptr [RSP + 0x8],RCX
0000e769(4): SHL RSI,0x4
0000e76d(5): CALL 0x00001c90
0000e772(3): TEST RAX,RAX
0000e775(5): MOV RCX,qword ptr [RSP + 0x8]
0000e77a(2): JZ 0x0000e7d0
0000e77c(7): MOV RSI,qword ptr [0xc8 + RBX]
0000e783(7): MOV RDX,qword ptr [0xd0 + RBX]
0000e78a(7): MOV qword ptr [0xd8 + RBX],RAX
0000e791(5): MOV qword ptr [RSP + 0x8],RCX
0000e796(4): LEA RSI,[RSI + RSI*0x4]
0000e79a(4): LEA RDX,[RDX + RDX*0x4]
0000e79e(4): LEA RDI,[RAX + RSI*0x8]
0000e7a2(4): SHL RDX,0x3
0000e7a6(2): XOR ESI,ESI
0000e7a8(5): CALL 0x00001b60
0000e7ad(7): SHL qword ptr [0xd0 + RBX],1
0000e7b4(7): MOV RAX,qword ptr [0xc8 + RBX]
0000e7bb(7): MOV RDI,qword ptr [0xd8 + RBX]
0000e7c2(4): MOV RSI,qword ptr [RBP + 0x8]
0000e7c6(5): MOV RCX,qword ptr [RSP + 0x8]
0000e7cb(5): JMP 0x0000e6c9
0000e7d0(7): MOV RDI,qword ptr [0xd8 + RBX]
0000e7d7(5): CALL 0x000019d0
0000e7dc(5): MOV EAX,0xc
0000e7e1(5): JMP 0x0000e68b
0000e7f0(2): PUSH R15
0000e7f2(2): PUSH R14
0000e7f4(2): PUSH R13
0000e7f6(2): PUSH R12
0000e7f8(1): PUSH RBP
0000e7f9(1): PUSH RBX
0000e7fa(7): SUB RSP,0xb8
0000e801(4): MOV R15,qword ptr [RDI + 0x48]
0000e805(9): MOV RAX,qword ptr FS:[0x28]
0000e80e(8): MOV qword ptr [0xa8 + RSP],RAX
0000e816(2): XOR EAX,EAX
0000e818(4): CMP qword ptr [RSI],0x0
0000e81c(7): MOV RAX,qword ptr [0x98 + RDI]
0000e823(5): MOV qword ptr [RSP + 0x48],RSI
0000e828(5): MOV qword ptr [RSP + 0x40],RDX
0000e82d(5): MOV qword ptr [RSP + 0x38],RAX
0000e832(6): JLE 0x0000eb60
0000e838(8): LEA RAX,[R15*0x8]
0000e840(3): MOV R14,RDI
0000e843(8): MOV qword ptr [RSP],0x0
0000e84b(5): MOV qword ptr [RSP + 0x8],R15
0000e850(5): MOV qword ptr [RSP + 0x60],RAX
0000e855(8): LEA RAX,[0x90 + RSP]
0000e85d(5): MOV qword ptr [RSP + 0x68],RAX
0000e862(8): LEA RAX,[0x8c + RSP]
0000e86a(5): MOV qword ptr [RSP + 0x78],RAX
0000e86f(2): JMP 0x0000e8b7
0000e878(2): TEST AL,0x1
0000e87a(2): JZ 0x0000e8a0
0000e87c(3): AND EDX,0x8
0000e87f(2): JNZ 0x0000e8a0
0000e881(3): TEST CL,0x20
0000e884(2): JZ 0x0000e88a
0000e886(2): TEST AL,0x2
0000e888(2): JZ 0x0000e8a0
0000e88a(6): AND ECX,0x80
0000e890(6): JZ 0x0000e930
0000e896(2): TEST AL,0x8
0000e898(6): JNZ 0x0000e930
0000e89e(2): NOP
0000e8a0(5): MOV RDI,qword ptr [RSP + 0x48]
0000e8a5(5): ADD qword ptr [RSP],0x1
0000e8aa(4): MOV RAX,qword ptr [RSP]
0000e8ae(3): CMP RAX,qword ptr [RDI]
0000e8b1(6): JGE 0x0000eb60
0000e8b7(5): MOV RAX,qword ptr [RSP + 0x40]
0000e8bc(4): MOV RDI,qword ptr [RSP]
0000e8c0(3): MOV RAX,qword ptr [RAX]
0000e8c3(4): MOV R13,qword ptr [RAX + RDI*0x8]
0000e8c7(5): MOV RDI,qword ptr [RSP + 0x38]
0000e8cc(3): MOV RAX,qword ptr [RDI]
0000e8cf(3): MOV RBX,R13
0000e8d2(4): SHL RBX,0x4
0000e8d6(3): ADD RAX,RBX
0000e8d9(4): CMP byte ptr [RAX + 0x8],0x4
0000e8dd(2): JNZ 0x0000e8a0
0000e8df(3): MOV EBP,dword ptr [RAX + 0x8]
0000e8e2(6): TEST EBP,0x3ff00
0000e8e8(2): JZ 0x0000e930
0000e8ea(7): MOV EDX,dword ptr [0xa0 + R14]
0000e8f1(5): MOV RSI,qword ptr [RSP + 0x8]
0000e8f6(3): MOV RDI,R14
0000e8f9(5): CALL 0x0000a9d0
0000e8fe(2): MOV EDX,EBP
0000e900(3): SHR EDX,0x8
0000e903(2): MOV ECX,EDX
0000e905(5): AND CX,0x3ff
0000e90a(3): TEST DL,0x4
0000e90d(6): JNZ 0x0000e878
0000e913(3): AND EDX,0x8
0000e916(6): JZ 0x0000e881
0000e91c(2): TEST AL,0x1
0000e91e(6): JZ 0x0000e881
0000e924(5): JMP 0x0000e8a0
0000e930(7): MOV RDI,qword ptr [0xc8 + R14]
0000e937(7): MOV RAX,qword ptr [0x98 + R14]
0000e93e(2): XOR ECX,ECX
0000e940(4): MOV R10,qword ptr [R14 + 0x8]
0000e944(5): MOV R9,qword ptr [RSP + 0x8]
0000e949(5): MOV qword ptr [RSP + 0x70],RDI
0000e94e(5): MOV qword ptr [RSP + 0x50],RAX
0000e953(3): CMP RCX,RDI
0000e956(2): JGE 0x0000e9ab
0000e958(4): LEA RAX,[RCX + RDI*0x1]
0000e95c(7): MOV R11,qword ptr [0xd8 + R14]
0000e963(3): MOV RSI,RAX
0000e966(4): SHR RSI,0x3f
0000e96a(3): ADD RSI,RAX
0000e96d(3): SAR RSI,1
0000e970(4): LEA RAX,[RSI + RSI*0x4]
0000e974(5): CMP R9,qword ptr [R11 + RAX*0x8 + 0x8]
0000e979(2): JLE 0x0000e9a6
0000e97b(5): JMP 0x0000eb48
0000e980(4): LEA RDX,[RSI + RCX*0x1]
0000e984(3): MOV RAX,RDX
0000e987(4): SHR RAX,0x3f
0000e98b(3): ADD RAX,RDX
0000e98e(3): SAR RAX,1
0000e991(4): LEA RDX,[RAX + RAX*0x4]
0000e995(3): MOV R8,RAX
0000e998(5): CMP R9,qword ptr [R11 + RDX*0x8 + 0x8]
0000e99d(6): JG 0x0000eb50
0000e9a3(3): MOV RSI,RAX
0000e9a6(3): CMP RSI,RCX
0000e9a9(2): JG 0x0000e980
0000e9ab(5): CMP qword ptr [RSP + 0x70],RCX
0000e9b0(2): JLE 0x0000e9d6
0000e9b2(7): MOV RDX,qword ptr [0xd8 + R14]
0000e9b9(4): LEA RAX,[RCX + RCX*0x4]
0000e9bd(5): MOV RDI,qword ptr [RSP + 0x8]
0000e9c2(4): LEA RAX,[RDX + RAX*0x8]
0000e9c6(4): CMP qword ptr [RAX + 0x8],RDI
0000e9ca(2): JNZ 0x0000e9d6
0000e9cc(4): CMP RCX,-0x1
0000e9d0(6): JNZ 0x0000eba6
0000e9d6(5): MOV RAX,qword ptr [RSP + 0x50]
0000e9db(8): CMP qword ptr [0xe8 + R14],0x0
0000e9e3(3): MOV RDX,qword ptr [RAX]
0000e9e6(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000e9ea(5): MOV qword ptr [RSP + 0x58],RAX
0000e9ef(6): JLE 0x0000ebab
0000e9f5(5): MOV qword ptr [RSP + 0x30],R13
0000e9fa(9): MOV qword ptr [RSP + 0x28],0x0
0000ea03(3): MOV R13,R10
0000ea06(7): MOV RAX,qword ptr [0xf8 + R14]
0000ea0d(5): MOV RBX,qword ptr [RSP + 0x28]
0000ea12(5): MOV RDI,qword ptr [RSP + 0x58]
0000ea17(4): MOV RBX,qword ptr [RAX + RBX*0x8]
0000ea1b(4): MOV RAX,qword ptr [RBX + 0x8]
0000ea1f(4): SHL RAX,0x4
0000ea23(4): CMP RDI,qword ptr [RDX + RAX*0x1]
0000ea27(2): JZ 0x0000ea50
0000ea29(6): ADD qword ptr [RSP + 0x28],0x1
0000ea2f(5): MOV RAX,qword ptr [RSP + 0x28]
0000ea34(7): CMP RAX,qword ptr [0xe8 + R14]
0000ea3b(6): JGE 0x0000f0b1
0000ea41(5): MOV RAX,qword ptr [RSP + 0x50]
0000ea46(3): MOV RDX,qword ptr [RAX]
0000ea49(2): JMP 0x0000ea06
0000ea50(5): CMP qword ptr [RBX + 0x20],0x0
0000ea55(3): MOV R11,qword ptr [RBX]
0000ea58(6): JLE 0x0000f0c2
0000ea5e(5): MOV RCX,qword ptr [RSP + 0x8]
0000ea63(3): MOV R8,R13
0000ea66(2): XOR EBP,EBP
0000ea68(3): MOV R13,RBX
0000ea6b(3): MOV RBX,RCX
0000ea6e(2): JMP 0x0000eadc
0000ea70(4): LEA RSI,[R8 + R11*0x1]
0000ea74(4): LEA RDI,[R8 + RBX*0x1]
0000ea78(5): MOV qword ptr [RSP + 0x20],R9
0000ea7d(5): MOV qword ptr [RSP + 0x18],R11
0000ea82(5): MOV qword ptr [RSP + 0x10],R8
0000ea87(5): CALL 0x00001b90
0000ea8c(2): TEST EAX,EAX
0000ea8e(5): MOV R8,qword ptr [RSP + 0x10]
0000ea93(5): MOV R11,qword ptr [RSP + 0x18]
0000ea98(5): MOV R9,qword ptr [RSP + 0x20]
0000ea9d(6): JNZ 0x0000ef68
0000eaa3(5): MOV R8,qword ptr [RSP + 0x8]
0000eaa8(5): MOV RCX,qword ptr [RSP + 0x30]
0000eaad(3): MOV RDX,R9
0000eab0(3): MOV RSI,R13
0000eab3(3): MOV RDI,R14
0000eab6(5): CALL 0x0000e650
0000eabb(3): CMP EAX,0x1
0000eabe(4): MOV R8,qword ptr [R14 + 0x8]
0000eac2(6): JA 0x0000eb68
0000eac8(4): ADD RBP,0x1
0000eacc(4): CMP RBP,qword ptr [R13 + 0x20]
0000ead0(3): MOV R11,R15
0000ead3(3): MOV RBX,R12
0000ead6(6): JGE 0x0000ed88
0000eadc(4): MOV RAX,qword ptr [R13 + 0x28]
0000eae0(4): MOV R9,qword ptr [RAX + RBP*0x8]
0000eae4(4): MOV R15,qword ptr [R9 + 0x8]
0000eae8(3): MOV RDX,R15
0000eaeb(3): SUB RDX,R11
0000eaee(3): TEST RDX,RDX
0000eaf1(4): LEA R12,[RDX + RBX*0x1]
0000eaf5(2): JLE 0x0000eaa3
0000eaf7(4): CMP qword ptr [R14 + 0x30],R12
0000eafb(6): JGE 0x0000ea70
0000eb01(4): CMP qword ptr [R14 + 0x58],R12
0000eb05(5): MOV qword ptr [RSP + 0x18],RDX
0000eb0a(5): MOV qword ptr [RSP + 0x10],R9
0000eb0f(6): JL 0x0000ef68
0000eb15(3): MOV RSI,R12
0000eb18(3): MOV RDI,R14
0000eb1b(5): MOV qword ptr [RSP + 0x20],R11
0000eb20(5): CALL 0x00008280
0000eb25(2): TEST EAX,EAX
0000eb27(2): JNZ 0x0000eb68
0000eb29(4): MOV R8,qword ptr [R14 + 0x8]
0000eb2d(5): MOV RDX,qword ptr [RSP + 0x18]
0000eb32(5): MOV R9,qword ptr [RSP + 0x10]
0000eb37(5): MOV R11,qword ptr [RSP + 0x20]
0000eb3c(5): JMP 0x0000ea70
0000eb48(3): MOV R8,RSI
0000eb4b(3): MOV RSI,RDI
0000eb4e(2): NOP
0000eb50(4): LEA RCX,[R8 + 0x1]
0000eb54(3): MOV RDI,RSI
0000eb57(5): JMP 0x0000e953
0000eb60(2): XOR EAX,EAX
0000eb62(6): NOP word ptr [RAX + RAX*0x1]
0000eb68(8): MOV RBX,qword ptr [0xa8 + RSP]
0000eb70(9): XOR RBX,qword ptr FS:[0x28]
0000eb79(6): JNZ 0x0000f0cc
0000eb7f(7): ADD RSP,0xb8
0000eb86(1): POP RBX
0000eb87(1): POP RBP
0000eb88(2): POP R12
0000eb8a(2): POP R13
0000eb8c(2): POP R14
0000eb8e(2): POP R15
0000eb90(1): RET
0000eb98(4): ADD RAX,0x28
0000eb9c(4): CMP byte ptr [RAX + -0x8],0x0
0000eba0(6): JZ 0x0000e9d6
0000eba6(3): CMP R13,qword ptr [RAX]
0000eba9(2): JNZ 0x0000eb98
0000ebab(5): MOV RAX,qword ptr [RSP + 0x70]
0000ebb0(5): CMP qword ptr [RSP + 0x70],RAX
0000ebb5(11): MOV dword ptr [0x8c + RSP],0x0
0000ebc0(6): JGE 0x0000e8a0
0000ebc6(8): LEA RAX,[R13*0x8]
0000ebce(5): MOV R12,qword ptr [RSP + 0x70]
0000ebd3(5): MOV RBP,qword ptr [RSP + 0x38]
0000ebd8(5): MOV qword ptr [RSP + 0x50],RAX
0000ebdd(5): LEA RAX,[R13 + R13*0x2]
0000ebe2(4): LEA R8,[R12 + R12*0x4]
0000ebe6(4): SHL RAX,0x3
0000ebea(5): MOV qword ptr [RSP + 0x58],RAX
0000ebef(8): LEA R15,[R8*0x8]
0000ebf7(5): JMP 0x0000ed2d
0000ec00(4): MOV RCX,qword ptr [RBP + 0x28]
0000ec04(5): MOV RDI,qword ptr [RSP + 0x58]
0000ec09(5): MOV RCX,qword ptr [RCX + RDI*0x1 + 0x10]
0000ec0e(3): MOV RCX,qword ptr [RCX]
0000ec11(4): LEA RCX,[RCX + RCX*0x2]
0000ec15(4): LEA RCX,[RDX + RCX*0x8]
0000ec19(5): MOV qword ptr [RSP + 0x18],RCX
0000ec1e(5): ADD RBX,qword ptr [RSP + 0x8]
0000ec23(7): MOV EDX,dword ptr [0xa0 + R14]
0000ec2a(3): MOV RDI,R14
0000ec2d(3): SUB RBX,RAX
0000ec30(4): LEA RSI,[RBX + -0x1]
0000ec34(5): CALL 0x0000a9d0
0000ec39(5): MOV RSI,qword ptr [RSP + 0x60]
0000ec3e(2): MOV ECX,EAX
0000ec40(7): MOV RAX,qword ptr [0xb8 + R14]
0000ec47(8): LEA R10,[RBX*0x8]
0000ec4f(9): MOV qword ptr [RSP + 0x10],0x0
0000ec58(4): LEA R11,[RAX + R10*0x1]
0000ec5c(4): MOV RAX,qword ptr [RAX + RSI*0x1]
0000ec60(3): MOV RDX,qword ptr [R11]
0000ec63(3): TEST RAX,RAX
0000ec66(2): JZ 0x0000ec71
0000ec68(4): MOV RAX,qword ptr [RAX + 0x10]
0000ec6c(5): MOV qword ptr [RSP + 0x10],RAX
0000ec71(3): TEST RDX,RDX
0000ec74(6): JZ 0x0000ef90
0000ec7a(4): MOV RSI,qword ptr [RDX + 0x50]
0000ec7e(5): MOV RDI,qword ptr [RSP + 0x68]
0000ec83(5): MOV RDX,qword ptr [RSP + 0x18]
0000ec88(5): MOV qword ptr [RSP + 0x30],R10
0000ec8d(4): MOV dword ptr [RSP + 0x28],ECX
0000ec91(5): CALL 0x00009de0
0000ec96(2): TEST EAX,EAX
0000ec98(7): MOV dword ptr [0x8c + RSP],EAX
0000ec9f(4): MOV ECX,dword ptr [RSP + 0x28]
0000eca3(5): MOV R10,qword ptr [RSP + 0x30]
0000eca8(6): JNZ 0x0000f038
0000ecae(7): ADD R10,qword ptr [0xb8 + R14]
0000ecb5(5): MOV RDX,qword ptr [RSP + 0x68]
0000ecba(3): MOV RSI,RBP
0000ecbd(5): MOV RDI,qword ptr [RSP + 0x78]
0000ecc2(5): MOV qword ptr [RSP + 0x28],R10
0000ecc7(5): CALL 0x00009f40
0000eccc(5): MOV R10,qword ptr [RSP + 0x28]
0000ecd1(8): MOV RDI,qword ptr [0xa0 + RSP]
0000ecd9(3): MOV qword ptr [R10],RAX
0000ecdc(5): CALL 0x000019d0
0000ece1(7): MOV RDX,qword ptr [0xb8 + R14]
0000ece8(5): CMP qword ptr [RDX + RBX*0x8],0x0
0000eced(6): JZ 0x0000efc1
0000ecf3(6): CMP qword ptr [RSP + 0x20],0x0
0000ecf9(2): JNZ 0x0000ed18
0000ecfb(5): MOV RAX,qword ptr [RSP + 0x60]
0000ed00(5): MOV RBX,qword ptr [RSP + 0x10]
0000ed05(4): MOV RAX,qword ptr [RDX + RAX*0x1]
0000ed09(4): CMP qword ptr [RAX + 0x10],RBX
0000ed0d(6): JG 0x0000efd8
0000ed13(5): NOP dword ptr [RAX + RAX*0x1]
0000ed18(4): ADD R12,0x1
0000ed1c(4): ADD R15,0x28
0000ed20(7): CMP R12,qword ptr [0xc8 + R14]
0000ed27(6): JGE 0x0000e8a0
0000ed2d(7): MOV RAX,qword ptr [0xd8 + R14]
0000ed34(3): ADD RAX,R15
0000ed37(3): CMP R13,qword ptr [RAX]
0000ed3a(2): JNZ 0x0000ed18
0000ed3c(5): MOV RDI,qword ptr [RSP + 0x8]
0000ed41(4): CMP RDI,qword ptr [RAX + 0x8]
0000ed45(2): JNZ 0x0000ed18
0000ed47(4): MOV RBX,qword ptr [RAX + 0x18]
0000ed4b(4): MOV RAX,qword ptr [RAX + 0x10]
0000ed4f(4): MOV RDX,qword ptr [RBP + 0x30]
0000ed53(3): MOV RCX,RBX
0000ed56(3): SUB RCX,RAX
0000ed59(5): MOV qword ptr [RSP + 0x20],RCX
0000ed5e(6): JZ 0x0000ec00
0000ed64(4): MOV RCX,qword ptr [RBP + 0x18]
0000ed68(5): MOV RDI,qword ptr [RSP + 0x50]
0000ed6d(4): MOV RCX,qword ptr [RCX + RDI*0x1]
0000ed71(4): LEA RCX,[RCX + RCX*0x2]
0000ed75(4): LEA RCX,[RDX + RCX*0x8]
0000ed79(5): MOV qword ptr [RSP + 0x18],RCX
0000ed7e(5): JMP 0x0000ec1e
0000ed88(3): MOV RBX,R13
0000ed8b(3): MOV R13,R8
0000ed8e(4): LEA R11,[R15 + 0x1]
0000ed92(5): CMP qword ptr [RSP + 0x8],R11
0000ed97(6): JL 0x0000ea29
0000ed9d(3): MOV RAX,R12
0000eda0(8): LEA R15,[R11*0x8]
0000eda8(3): MOV R12,RBX
0000edab(3): MOV RBX,R11
0000edae(3): MOV R11,R13
0000edb1(3): MOV R13,RAX
0000edb4(4): NOP dword ptr [RAX]
0000edb8(3): MOV RAX,RBX
0000edbb(4): SUB RAX,qword ptr [R12]
0000edbf(3): TEST RAX,RAX
0000edc2(2): JLE 0x0000ede5
0000edc4(4): CMP qword ptr [R14 + 0x30],R13
0000edc8(6): JLE 0x0000f051
0000edce(6): MOVZX ECX,byte ptr [R11 + RBX*0x1 + -0x1]
0000edd4(4): LEA RAX,[R13 + 0x1]
0000edd8(4): CMP byte ptr [R11 + R13*0x1],CL
0000eddc(6): JNZ 0x0000ef12
0000ede2(3): MOV R13,RAX
0000ede5(7): MOV RAX,qword ptr [0xb8 + R14]
0000edec(4): MOV RAX,qword ptr [RAX + R15*0x1]
0000edf0(3): TEST RAX,RAX
0000edf3(6): JZ 0x0000eeff
0000edf9(4): MOV RCX,qword ptr [RAX + 0x10]
0000edfd(3): TEST RCX,RCX
0000ee00(6): JLE 0x0000eeff
0000ee06(4): MOV RDI,qword ptr [RAX + 0x18]
0000ee0a(5): MOV RAX,qword ptr [RSP + 0x50]
0000ee0f(2): XOR EDX,EDX
0000ee11(5): MOV R8,qword ptr [RSP + 0x58]
0000ee16(3): MOV RSI,qword ptr [RAX]
0000ee19(2): JMP 0x0000ee2d
0000ee20(4): ADD RDX,0x1
0000ee24(3): CMP RCX,RDX
0000ee27(6): JZ 0x0000eeff
0000ee2d(4): MOV RBP,qword ptr [RDI + RDX*0x8]
0000ee31(3): MOV RAX,RBP
0000ee34(4): SHL RAX,0x4
0000ee38(3): ADD RAX,RSI
0000ee3b(4): CMP byte ptr [RAX + 0x8],0x9
0000ee3f(2): JNZ 0x0000ee20
0000ee41(3): CMP R8,qword ptr [RAX]
0000ee44(2): JNZ 0x0000ee20
0000ee46(4): CMP RBP,-0x1
0000ee4a(6): JZ 0x0000eeff
0000ee50(5): MOV RSI,qword ptr [R12 + 0x10]
0000ee55(4): MOV RCX,qword ptr [R12]
0000ee59(3): TEST RSI,RSI
0000ee5c(6): JZ 0x0000ef20
0000ee62(5): MOV qword ptr [RSP + 0x10],R11
0000ee67(5): MOV RDX,qword ptr [R12 + 0x8]
0000ee6c(4): SUB RSP,0x8
0000ee70(2): PUSH 0x9
0000ee72(3): MOV R9,RBX
0000ee75(3): MOV R8,RBP
0000ee78(3): MOV RDI,R14
0000ee7b(5): CALL 0x0000d600
0000ee80(1): POP RDX
0000ee81(3): CMP EAX,0x1
0000ee84(1): POP RCX
0000ee85(5): MOV R11,qword ptr [RSP + 0x10]
0000ee8a(2): JZ 0x0000eeff
0000ee8c(2): TEST EAX,EAX
0000ee8e(6): JNZ 0x0000eb68
0000ee94(5): MOV RAX,qword ptr [R12 + 0x20]
0000ee99(5): CMP RAX,qword ptr [R12 + 0x18]
0000ee9e(6): JZ 0x0000f078
0000eea4(5): MOV ESI,0x28
0000eea9(5): MOV EDI,0x1
0000eeae(5): CALL 0x00001bc0
0000eeb3(3): TEST RAX,RAX
0000eeb6(6): JZ 0x0000ef59
0000eebc(5): MOV RDX,qword ptr [R12 + 0x20]
0000eec1(5): MOV RCX,qword ptr [R12 + 0x28]
0000eec6(3): MOV RSI,R12
0000eec9(5): MOV R8,qword ptr [RSP + 0x8]
0000eece(3): MOV RDI,R14
0000eed1(4): MOV qword ptr [RCX + RDX*0x8],RAX
0000eed5(5): MOV RCX,qword ptr [RSP + 0x30]
0000eeda(4): ADD RDX,0x1
0000eede(3): MOV qword ptr [RAX],RBP
0000eee1(4): MOV qword ptr [RAX + 0x8],RBX
0000eee5(5): MOV qword ptr [R12 + 0x20],RDX
0000eeea(3): MOV RDX,RAX
0000eeed(5): CALL 0x0000e650
0000eef2(3): CMP EAX,0x1
0000eef5(4): MOV R11,qword ptr [R14 + 0x8]
0000eef9(6): JA 0x0000eb68
0000eeff(4): ADD RBX,0x1
0000ef03(4): ADD R15,0x8
0000ef07(5): CMP qword ptr [RSP + 0x8],RBX
0000ef0c(6): JGE 0x0000edb8
0000ef12(3): MOV R13,R11
0000ef15(5): JMP 0x0000ea29
0000ef20(3): MOV RSI,RBX
0000ef23(5): MOV EDI,0x18
0000ef28(5): MOV qword ptr [RSP + 0x18],R11
0000ef2d(3): SUB RSI,RCX
0000ef30(5): MOV qword ptr [RSP + 0x10],RCX
0000ef35(4): ADD RSI,0x1
0000ef39(5): CALL 0x00001bc0
0000ef3e(3): TEST RAX,RAX
0000ef41(3): MOV RSI,RAX
0000ef44(5): MOV qword ptr [R12 + 0x10],RAX
0000ef49(5): MOV RCX,qword ptr [RSP + 0x10]
0000ef4e(5): MOV R11,qword ptr [RSP + 0x18]
0000ef53(6): JNZ 0x0000ee62
0000ef59(5): MOV EAX,0xc
0000ef5e(5): JMP 0x0000eb68
0000ef68(3): MOV RCX,RBX
0000ef6b(3): MOV RBX,R13
0000ef6e(3): MOV R13,R8
0000ef71(4): CMP qword ptr [RBX + 0x20],RBP
0000ef75(6): JG 0x0000ea29
0000ef7b(3): TEST RBP,RBP
0000ef7e(3): MOV R12,RCX
0000ef81(6): JZ 0x0000ed92
0000ef87(3): MOV R15,R11
0000ef8a(5): JMP 0x0000ed8e
0000ef90(5): MOV RDX,qword ptr [RSP + 0x18]
0000ef95(5): MOV RDI,qword ptr [RSP + 0x78]
0000ef9a(3): MOV RSI,RBP
0000ef9d(5): MOV qword ptr [RSP + 0x28],R11
0000efa2(5): CALL 0x00009f40
0000efa7(5): MOV R11,qword ptr [RSP + 0x28]
0000efac(7): MOV RDX,qword ptr [0xb8 + R14]
0000efb3(3): MOV qword ptr [R11],RAX
0000efb6(5): CMP qword ptr [RDX + RBX*0x8],0x0
0000efbb(6): JNZ 0x0000ecf3
0000efc1(7): MOV EAX,dword ptr [0x8c + RSP]
0000efc8(2): TEST EAX,EAX
0000efca(6): JZ 0x0000ecf3
0000efd0(5): JMP 0x0000eb68
0000efd8(5): MOV RAX,qword ptr [RSP + 0x18]
0000efdd(5): MOV RCX,qword ptr [RSP + 0x8]
0000efe2(3): MOV RDI,R14
0000efe5(4): LEA R8,[RAX + 0x10]
0000efe9(4): LEA RBX,[RAX + 0x8]
0000efed(3): MOV RDX,R8
0000eff0(3): MOV RSI,RBX
0000eff3(5): MOV qword ptr [RSP + 0x10],R8
0000eff8(5): CALL 0x0000a880
0000effd(2): TEST EAX,EAX
0000efff(7): MOV dword ptr [0x8c + RSP],EAX
0000f006(6): JNZ 0x0000eb68
0000f00c(5): MOV R8,qword ptr [RSP + 0x10]
0000f011(3): MOV RSI,RBX
0000f014(3): MOV RDI,R14
0000f017(3): MOV RDX,R8
0000f01a(5): CALL 0x0000e7f0
0000f01f(2): TEST EAX,EAX
0000f021(7): MOV dword ptr [0x8c + RSP],EAX
0000f028(6): JZ 0x0000ed18
0000f02e(5): JMP 0x0000eb68
0000f038(8): MOV RDI,qword ptr [0xa0 + RSP]
0000f040(5): CALL 0x000019d0
0000f045(7): MOV EAX,dword ptr [0x8c + RSP]
0000f04c(5): JMP 0x0000eb68
0000f051(4): CMP qword ptr [R14 + 0x58],R13
0000f055(6): JLE 0x0000ef12
0000f05b(4): LEA ESI,[R13 + 0x1]
0000f05f(3): MOV RDI,R14
0000f062(5): CALL 0x00008130
0000f067(2): TEST EAX,EAX
0000f069(6): JNZ 0x0000eb68
0000f06f(4): MOV R11,qword ptr [R14 + 0x8]
0000f073(5): JMP 0x0000edce
0000f078(5): LEA RDX,[RAX + RAX*0x1 + 0x1]
0000f07d(5): MOV RDI,qword ptr [R12 + 0x28]
0000f082(8): LEA RSI,[RDX*0x8]
0000f08a(5): MOV qword ptr [RSP + 0x10],RDX
0000f08f(5): CALL 0x00001c90
0000f094(3): TEST RAX,RAX
0000f097(6): JZ 0x0000ef59
0000f09d(5): MOV RDX,qword ptr [RSP + 0x10]
0000f0a2(5): MOV qword ptr [R12 + 0x28],RAX
0000f0a7(5): MOV qword ptr [R12 + 0x18],RDX
0000f0ac(5): JMP 0x0000eea4
0000f0b1(5): MOV R13,qword ptr [RSP + 0x30]
0000f0b6(7): MOV RAX,qword ptr [0xc8 + R14]
0000f0bd(5): JMP 0x0000ebb0
0000f0c2(5): MOV R12,qword ptr [RSP + 0x8]
0000f0c7(5): JMP 0x0000ed92
0000f0cc(5): CALL 0x00001ad0
0000f0d1(5): NOP dword ptr [RAX + RAX*0x1]
0000f0d6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000f0e0(2): PUSH R15
0000f0e2(2): PUSH R14
0000f0e4(2): PUSH R13
0000f0e6(2): PUSH R12
0000f0e8(3): MOV R13,RDI
0000f0eb(1): PUSH RBP
0000f0ec(1): PUSH RBX
0000f0ed(3): MOV RBX,RSI
0000f0f0(4): SUB RSP,0x38
0000f0f4(4): MOV R12,qword ptr [RSI + 0x48]
0000f0f8(7): MOV R14,qword ptr [0xb8 + RSI]
0000f0ff(9): MOV RAX,qword ptr FS:[0x28]
0000f108(5): MOV qword ptr [RSP + 0x28],RAX
0000f10d(2): XOR EAX,EAX
0000f10f(7): MOV R15,qword ptr [0x98 + RSI]
0000f116(8): LEA RBP,[R12*0x8]
0000f11e(3): ADD R14,RBP
0000f121(7): CMP qword ptr [0xc0 + RSI],R12
0000f128(2): JGE 0x0000f170
0000f12a(3): MOV qword ptr [R14],RDX
0000f12d(3): MOV RBP,RDX
0000f130(7): MOV qword ptr [0xc0 + RSI],R12
0000f137(8): CMP qword ptr [0x98 + R15],0x0
0000f13f(6): JNZ 0x0000f268
0000f145(5): MOV RCX,qword ptr [RSP + 0x28]
0000f14a(9): XOR RCX,qword ptr FS:[0x28]
0000f153(3): MOV RAX,RBP
0000f156(6): JNZ 0x0000f2c7
0000f15c(4): ADD RSP,0x38
0000f160(1): POP RBX
0000f161(1): POP RBP
0000f162(2): POP R12
0000f164(2): POP R13
0000f166(2): POP R14
0000f168(2): POP R15
0000f16a(1): RET
0000f170(3): MOV RAX,qword ptr [R14]
0000f173(3): TEST RAX,RAX
0000f176(6): JZ 0x0000f258
0000f17c(3): TEST RDX,RDX
0000f17f(4): MOV RAX,qword ptr [RAX + 0x50]
0000f183(6): JZ 0x0000f210
0000f189(4): MOV R14,qword ptr [RDX + 0x50]
0000f18d(5): LEA RDI,[RSP + 0x10]
0000f192(3): MOV RDX,RAX
0000f195(4): MOV qword ptr [RSP],RDI
0000f199(3): MOV RSI,R14
0000f19c(5): CALL 0x00009de0
0000f1a1(2): TEST EAX,EAX
0000f1a3(4): MOV dword ptr [R13],EAX
0000f1a7(6): JNZ 0x0000f2c0
0000f1ad(4): MOV RAX,qword ptr [RBX + 0x48]
0000f1b1(6): MOV EDX,dword ptr [0xa0 + RBX]
0000f1b7(3): MOV RDI,RBX
0000f1ba(4): LEA RSI,[RAX + -0x1]
0000f1be(5): CALL 0x0000a9d0
0000f1c3(7): MOV R8,qword ptr [0xb8 + RBX]
0000f1ca(4): MOV RDX,qword ptr [RSP]
0000f1ce(2): MOV ECX,EAX
0000f1d0(3): MOV RSI,R15
0000f1d3(3): MOV RDI,R13
0000f1d6(3): ADD R8,RBP
0000f1d9(5): MOV qword ptr [RSP + 0x8],R8
0000f1de(5): CALL 0x00009f40
0000f1e3(5): MOV R8,qword ptr [RSP + 0x8]
0000f1e8(3): TEST R14,R14
0000f1eb(3): MOV RBP,RAX
0000f1ee(3): MOV qword ptr [R8],RAX
0000f1f1(6): JZ 0x0000f137
0000f1f7(5): MOV RDI,qword ptr [RSP + 0x20]
0000f1fc(5): CALL 0x000019d0
0000f201(5): JMP 0x0000f137
0000f210(4): MOVDQU XMM0,xmmword ptr [RAX]
0000f214(3): MOV RDI,RBX
0000f217(6): MOV EDX,dword ptr [0xa0 + RSI]
0000f21d(5): LEA RSI,[R12 + -0x1]
0000f222(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
0000f227(4): MOV RAX,qword ptr [RAX + 0x10]
0000f22b(5): MOV qword ptr [RSP + 0x20],RAX
0000f230(5): CALL 0x0000a9d0
0000f235(5): LEA RDX,[RSP + 0x10]
0000f23a(2): MOV ECX,EAX
0000f23c(3): MOV RSI,R15
0000f23f(3): MOV RDI,R13
0000f242(5): CALL 0x00009f40
0000f247(3): MOV RBP,RAX
0000f24a(3): MOV qword ptr [R14],RAX
0000f24d(5): JMP 0x0000f137
0000f258(3): MOV qword ptr [R14],RDX
0000f25b(3): MOV RBP,RDX
0000f25e(5): JMP 0x0000f137
0000f268(3): TEST RBP,RBP
0000f26b(2): JZ 0x0000f2c0
0000f26d(4): LEA R14,[RBP + 0x10]
0000f271(4): LEA R15,[RBP + 0x18]
0000f275(3): MOV RCX,R12
0000f278(3): MOV RDI,RBX
0000f27b(3): MOV RDX,R15
0000f27e(3): MOV RSI,R14
0000f281(5): CALL 0x0000a880
0000f286(2): TEST EAX,EAX
0000f288(4): MOV dword ptr [R13],EAX
0000f28c(2): JNZ 0x0000f2c0
0000f28e(4): TEST byte ptr [RBP + 0x68],0x40
0000f292(6): JZ 0x0000f145
0000f298(3): MOV RDX,R15
0000f29b(3): MOV RSI,R14
0000f29e(3): MOV RDI,RBX
0000f2a1(5): CALL 0x0000e7f0
0000f2a6(2): TEST EAX,EAX
0000f2a8(4): MOV dword ptr [R13],EAX
0000f2ac(2): JNZ 0x0000f2c0
0000f2ae(7): MOV RAX,qword ptr [0xb8 + RBX]
0000f2b5(4): MOV RBP,qword ptr [RAX + R12*0x8]
0000f2b9(5): JMP 0x0000f145
0000f2c0(2): XOR EBP,EBP
0000f2c2(5): JMP 0x0000f145
0000f2c7(5): CALL 0x00001ad0
0000f2cc(4): NOP dword ptr [RAX]
0000f2d0(2): PUSH R15
0000f2d2(2): PUSH R14
0000f2d4(3): MOV R14,RDI
0000f2d7(2): PUSH R13
0000f2d9(2): PUSH R12
0000f2db(3): MOV R13,RSI
0000f2de(1): PUSH RBP
0000f2df(1): PUSH RBX
0000f2e0(4): SUB RSP,0x68
0000f2e4(4): MOV R15,qword ptr [RSI + 0x18]
0000f2e8(4): MOV RBX,qword ptr [RSI + 0x10]
0000f2ec(4): MOV qword ptr [RSP],RDI
0000f2f0(5): MOV EDI,0x8
0000f2f5(9): MOV qword ptr [RSP + 0x40],0x1
0000f2fe(9): MOV RAX,qword ptr FS:[0x28]
0000f307(5): MOV qword ptr [RSP + 0x58],RAX
0000f30c(2): XOR EAX,EAX
0000f30e(9): MOV qword ptr [RSP + 0x48],0x1
0000f317(5): CALL 0x00001c20
0000f31c(3): TEST RAX,RAX
0000f31f(5): MOV qword ptr [RSP + 0x50],RAX
0000f324(6): JZ 0x0000f604
0000f32a(5): LEA RCX,[RSP + 0x40]
0000f32f(3): MOV qword ptr [RAX],RBX
0000f332(3): MOV RDX,R15
0000f335(3): MOV RSI,R13
0000f338(3): MOV RDI,R14
0000f33b(5): MOV qword ptr [RSP + 0x10],RCX
0000f340(5): CALL 0x00010d40
0000f345(2): TEST EAX,EAX
0000f347(6): JNZ 0x0000f5d5
0000f34d(8): LEA RAX,[R15*0x8]
0000f355(3): TEST R15,R15
0000f358(8): MOV dword ptr [RSP + 0x2c],0x0
0000f360(5): MOV qword ptr [RSP + 0x8],RAX
0000f365(4): LEA RAX,[R13 + 0x30]
0000f369(5): MOV qword ptr [RSP + 0x38],RAX
0000f36e(6): JLE 0x0000f577
0000f374(4): MOV RDI,qword ptr [R13]
0000f378(5): MOV RAX,qword ptr [RSP + 0x8]
0000f37d(5): CMP qword ptr [RDI + RAX*0x1],0x0
0000f382(6): JZ 0x0000f598
0000f388(4): MOV RAX,qword ptr [RSP]
0000f38c(8): MOV dword ptr [RSP + 0x2c],0x0
0000f394(4): MOV ECX,dword ptr [RSP + 0x2c]
0000f398(6): CMP dword ptr [0xe0 + RAX],ECX
0000f39e(6): JL 0x0000f5b1
0000f3a4(4): MOV RBX,qword ptr [RSP]
0000f3a8(5): MOV RDI,qword ptr [RSP + 0x8]
0000f3ad(4): SUB R15,0x1
0000f3b1(9): MOV qword ptr [RSP + 0x48],0x0
0000f3ba(7): MOV RAX,qword ptr [0xb8 + RBX]
0000f3c1(5): MOV R12,qword ptr [RAX + RDI*0x1 + -0x8]
0000f3c6(3): TEST R12,R12
0000f3c9(6): JZ 0x0000f550
0000f3cf(6): CMP qword ptr [R12 + 0x28],0x0
0000f3d5(7): MOV R14,qword ptr [0x98 + RBX]
0000f3dc(6): JLE 0x0000f550
0000f3e2(2): XOR EBX,EBX
0000f3e4(5): JMP 0x0000f48b
0000f3f0(4): MOV RDI,qword ptr [RSP]
0000f3f4(3): MOV RDX,R15
0000f3f7(5): CALL 0x0000aac0
0000f3fc(2): TEST AL,AL
0000f3fe(2): JZ 0x0000f47c
0000f400(4): MOV RAX,qword ptr [R13]
0000f404(5): MOV RCX,qword ptr [RSP + 0x8]
0000f409(4): MOV RAX,qword ptr [RAX + RCX*0x1]
0000f40d(3): TEST RAX,RAX
0000f410(2): JZ 0x0000f47c
0000f412(4): MOV RDX,qword ptr [R14 + 0x18]
0000f416(4): MOV RDI,qword ptr [RAX + 0x10]
0000f41a(4): LEA RSI,[RAX + 0x18]
0000f41e(4): MOV RDX,qword ptr [RDX + RBP*0x8]
0000f422(5): CALL 0x00008bf0
0000f427(3): TEST RAX,RAX
0000f42a(2): JZ 0x0000f47c
0000f42c(6): MOV R10D,0x1
0000f432(5): CMP qword ptr [R13 + 0x28],0x0
0000f437(2): JZ 0x0000f467
0000f439(4): MOV RAX,qword ptr [R14 + 0x18]
0000f43d(4): SUB RSP,0x8
0000f441(4): LEA RSI,[R13 + 0x28]
0000f445(4): LEA R8,[R10 + R15*0x1]
0000f449(3): MOV R9,RBP
0000f44c(4): MOV RCX,qword ptr [RAX + RBP*0x8]
0000f450(2): PUSH R15
0000f452(5): MOV RDX,qword ptr [RSP + 0x48]
0000f457(5): MOV RDI,qword ptr [RSP + 0x10]
0000f45c(5): CALL 0x00008ea0
0000f461(2): TEST AL,AL
0000f463(1): POP RDX
0000f464(1): POP RCX
0000f465(2): JNZ 0x0000f47c
0000f467(5): MOV RDI,qword ptr [RSP + 0x10]
0000f46c(3): MOV RSI,RBP
0000f46f(5): CALL 0x000076b0
0000f474(2): TEST AL,AL
0000f476(6): JZ 0x0000f5d0
0000f47c(4): ADD RBX,0x1
0000f480(5): CMP RBX,qword ptr [R12 + 0x28]
0000f485(6): JGE 0x0000f550
0000f48b(5): MOV RAX,qword ptr [R12 + 0x30]
0000f490(3): MOV RSI,qword ptr [R14]
0000f493(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000f497(3): MOV R9,RBP
0000f49a(4): SHL R9,0x4
0000f49e(3): ADD RSI,R9
0000f4a1(4): TEST byte ptr [RSI + 0xa],0x10
0000f4a5(6): JZ 0x0000f3f0
0000f4ab(4): MOV RCX,qword ptr [RSP]
0000f4af(4): MOV RAX,qword ptr [R13 + 0x18]
0000f4b3(3): MOV R8,R15
0000f4b6(3): MOV RDX,RBP
0000f4b9(5): MOV qword ptr [RSP + 0x18],R9
0000f4be(7): MOV R11,qword ptr [0x98 + RCX]
0000f4c5(5): MOV qword ptr [RSP + 0x20],RAX
0000f4ca(3): MOV RDI,qword ptr [R11]
0000f4cd(7): LEA RSI,[0xd8 + R11]
0000f4d4(5): MOV qword ptr [RSP + 0x30],R11
0000f4d9(5): CALL 0x0000d3a0
0000f4de(3): MOVSXD R10,EAX
0000f4e1(5): MOV R9,qword ptr [RSP + 0x18]
0000f4e6(4): CMP R10D,0x0
0000f4ea(6): JLE 0x0000f580
0000f4f0(3): MOVSXD RAX,R10D
0000f4f3(3): ADD RAX,R15
0000f4f6(5): CMP qword ptr [RSP + 0x20],RAX
0000f4fb(6): JL 0x0000f432
0000f501(4): MOV RDX,qword ptr [R13]
0000f505(5): MOV R11,qword ptr [RSP + 0x30]
0000f50a(4): MOV RAX,qword ptr [RDX + RAX*0x8]
0000f50e(3): TEST RAX,RAX
0000f511(2): JZ 0x0000f586
0000f513(4): MOV RDX,qword ptr [R11 + 0x18]
0000f517(4): MOV RDI,qword ptr [RAX + 0x10]
0000f51b(4): LEA RSI,[RAX + 0x18]
0000f51f(5): MOV qword ptr [RSP + 0x18],R9
0000f524(4): MOV RDX,qword ptr [RDX + RBP*0x8]
0000f528(5): CALL 0x00008bf0
0000f52d(3): TEST RAX,RAX
0000f530(6): JNZ 0x0000f432
0000f536(5): MOV R9,qword ptr [RSP + 0x18]
0000f53b(3): MOV RSI,qword ptr [R14]
0000f53e(3): ADD RSI,R9
0000f541(5): JMP 0x0000f3f0
0000f550(5): MOV RCX,qword ptr [RSP + 0x10]
0000f555(4): MOV RDI,qword ptr [RSP]
0000f559(3): MOV RDX,R15
0000f55c(3): MOV RSI,R13
0000f55f(5): CALL 0x00010d40
0000f564(2): TEST EAX,EAX
0000f566(2): JNZ 0x0000f5d5
0000f568(6): SUB qword ptr [RSP + 0x8],0x8
0000f56e(3): TEST R15,R15
0000f571(6): JNZ 0x0000f374
0000f577(2): XOR EAX,EAX
0000f579(2): JMP 0x0000f5d5
0000f580(6): JNZ 0x0000f432
0000f586(3): MOV RSI,qword ptr [R14]
0000f589(3): ADD RSI,R9
0000f58c(5): JMP 0x0000f3f0
0000f598(4): MOV RAX,qword ptr [RSP]
0000f59c(5): ADD dword ptr [RSP + 0x2c],0x1
0000f5a1(4): MOV ECX,dword ptr [RSP + 0x2c]
0000f5a5(6): CMP dword ptr [0xe0 + RAX],ECX
0000f5ab(6): JGE 0x0000f3a4
0000f5b1(5): MOV RDX,qword ptr [RSP + 0x8]
0000f5b6(2): XOR ESI,ESI
0000f5b8(5): CALL 0x00001b60
0000f5bd(5): MOV RDI,qword ptr [RSP + 0x50]
0000f5c2(5): CALL 0x000019d0
0000f5c7(2): XOR EAX,EAX
0000f5c9(2): JMP 0x0000f5e5
0000f5d0(5): MOV EAX,0xc
0000f5d5(5): MOV RDI,qword ptr [RSP + 0x50]
0000f5da(3): MOV dword ptr [RSP],EAX
0000f5dd(5): CALL 0x000019d0
0000f5e2(3): MOV EAX,dword ptr [RSP]
0000f5e5(5): MOV RDX,qword ptr [RSP + 0x58]
0000f5ea(9): XOR RDX,qword ptr FS:[0x28]
0000f5f3(2): JNZ 0x0000f60b
0000f5f5(4): ADD RSP,0x68
0000f5f9(1): POP RBX
0000f5fa(1): POP RBP
0000f5fb(2): POP R12
0000f5fd(2): POP R13
0000f5ff(2): POP R14
0000f601(2): POP R15
0000f603(1): RET
0000f604(5): MOV EAX,0xc
0000f609(2): JMP 0x0000f5e5
0000f60b(5): CALL 0x00001ad0
0000f610(2): PUSH R15
0000f612(2): PUSH R14
0000f614(2): PUSH R13
0000f616(2): PUSH R12
0000f618(3): MOV R13,R9
0000f61b(1): PUSH RBP
0000f61c(1): PUSH RBX
0000f61d(3): MOV RBP,RCX
0000f620(5): MOV ECX,0x20
0000f625(3): MOV R12,R8
0000f628(7): SUB RSP,0x238
0000f62f(3): MOV RBX,qword ptr [RDI]
0000f632(8): MOV RAX,qword ptr [0x278 + RSP]
0000f63a(5): MOV qword ptr [RSP + 0x48],RDI
0000f63f(5): MOV qword ptr [RSP + 0x78],RSI
0000f644(3): MOV RSI,RDI
0000f647(8): LEA RDI,[0x120 + RSP]
0000f64f(8): MOV qword ptr [0x88 + RSP],RDX
0000f657(5): MOV qword ptr [RSP + 0x38],RBX
0000f65c(8): MOV qword ptr [0xb8 + RSP],RAX
0000f664(4): MOV qword ptr [RSP],RDI
0000f668(9): MOV RAX,qword ptr FS:[0x28]
0000f671(8): MOV qword ptr [0x228 + RSP],RAX
0000f679(2): XOR EAX,EAX
0000f67b(3): STOSQ.REP RDI
0000f67e(4): MOV RDI,qword ptr [RSI + 0x20]
0000f682(8): MOV qword ptr [0x1b8 + RSP],RBX
0000f68a(3): TEST RDI,RDI
0000f68d(5): MOV qword ptr [RSP + 0x68],RDI
0000f692(2): JZ 0x0000f6b6
0000f694(4): MOVZX EDX,byte ptr [RSI + 0x38]
0000f698(3): TEST DL,0x8
0000f69b(6): JZ 0x0000fb30
0000f6a1(3): CMP RBP,R8
0000f6a4(6): JZ 0x0000fb30
0000f6aa(3): AND EDX,0x1
0000f6ad(4): CMOVZ RAX,RDI
0000f6b1(5): MOV qword ptr [RSP + 0x68],RAX
0000f6b6(5): MOV RAX,qword ptr [RSP + 0x48]
0000f6bb(12): MOV qword ptr [0x98 + RSP],0x0
0000f6c7(4): MOV RAX,qword ptr [RAX + 0x30]
0000f6cb(8): CMP RAX,qword ptr [0x270 + RSP]
0000f6d3(2): JNC 0x0000f6f4
0000f6d5(8): MOV RCX,qword ptr [0x270 + RSP]
0000f6dd(4): LEA RDX,[RCX + -0x1]
0000f6e1(3): SUB RDX,RAX
0000f6e4(8): SUB qword ptr [0x270 + RSP],RDX
0000f6ec(8): MOV qword ptr [0x98 + RSP],RDX
0000f6f4(5): MOV RSI,qword ptr [RSP + 0x48]
0000f6f9(5): CMP qword ptr [RSI + 0x10],0x0
0000f6fe(6): JZ 0x00010590
0000f704(5): MOV RDI,qword ptr [RSP + 0x38]
0000f709(4): MOV RAX,qword ptr [RDI + 0x48]
0000f70d(3): TEST RAX,RAX
0000f710(6): JZ 0x00010590
0000f716(4): MOV RDX,qword ptr [RDI + 0x50]
0000f71a(3): TEST RDX,RDX
0000f71d(6): JZ 0x00010590
0000f723(4): MOV RCX,qword ptr [RDI + 0x58]
0000f727(3): TEST RCX,RCX
0000f72a(6): JZ 0x00010590
0000f730(5): CMP qword ptr [RDI + 0x60],0x0
0000f735(6): JZ 0x00010590
0000f73b(5): CMP qword ptr [RAX + 0x10],0x0
0000f740(2): JNZ 0x0000f778
0000f742(5): CMP qword ptr [RDX + 0x10],0x0
0000f747(2): JNZ 0x0000f778
0000f749(5): CMP qword ptr [RCX + 0x10],0x0
0000f74e(2): JZ 0x0000f756
0000f750(4): CMP byte ptr [RSI + 0x38],0x0
0000f754(2): JS 0x0000f778
0000f756(3): TEST RBP,RBP
0000f759(2): JZ 0x0000f76c
0000f75b(3): TEST R12,R12
0000f75e(8): MOV dword ptr [RSP + 0x5c],0x1
0000f766(6): JNZ 0x00010189
0000f76c(3): XOR R12D,R12D
0000f76f(2): XOR EBP,EBP
0000f771(7): NOP dword ptr [RAX]
0000f778(9): CMP qword ptr [0x270 + RSP],0x0
0000f781(8): MOV dword ptr [RSP + 0x58],0x1
0000f789(6): JZ 0x0000fb10
0000f78f(5): MOV R11,qword ptr [RSP + 0x38]
0000f794(5): MOV RAX,qword ptr [RSP + 0x48]
0000f799(8): MOV RDI,qword ptr [0x88 + RSP]
0000f7a1(4): MOV RSI,qword ptr [R11 + 0x10]
0000f7a5(4): MOV RBX,qword ptr [RAX + 0x28]
0000f7a9(7): MOV EDX,dword ptr [0xb4 + R11]
0000f7b0(4): MOV RAX,qword ptr [RAX + 0x18]
0000f7b4(8): MOV qword ptr [0x178 + RSP],RDI
0000f7bc(8): MOV qword ptr [0x170 + RSP],RDI
0000f7c4(5): MOV qword ptr [RSP + 0x8],RSI
0000f7c9(4): LEA RSI,[RSI + 0x1]
0000f7cd(8): MOV qword ptr [0xb0 + RSP],RBX
0000f7d5(3): MOVSXD RCX,EDX
0000f7d8(4): SHR RAX,0x16
0000f7dc(8): MOV qword ptr [0x198 + RSP],RBX
0000f7e4(3): AND EAX,0x1
0000f7e7(3): CMP RSI,RCX
0000f7ea(7): MOV dword ptr [0x1b0 + RSP],EDX
0000f7f1(4): CMOVL RSI,RCX
0000f7f5(4): LEA RCX,[RDI + 0x1]
0000f7f9(7): MOV byte ptr [0x1a8 + RSP],AL
0000f800(8): MOV qword ptr [0x188 + RSP],RDI
0000f808(8): MOV qword ptr [0x180 + RSP],RDI
0000f810(3): CMP RSI,RCX
0000f813(4): MOV RDI,qword ptr [RSP]
0000f817(4): CMOVG RSI,RCX
0000f81b(3): TEST RBX,RBX
0000f81e(5): MOV RCX,qword ptr [RSP + 0x78]
0000f823(3): SETNZ BL
0000f826(2): OR EAX,EBX
0000f828(7): MOV byte ptr [0x1ab + RSP],AL
0000f82f(8): MOVZX EAX,byte ptr [0xb0 + R11]
0000f837(8): MOV qword ptr [0x120 + RSP],RCX
0000f83f(2): MOV EDX,EAX
0000f841(3): SHR AL,0x3
0000f844(3): SHR DL,0x2
0000f847(3): AND EAX,0x1
0000f84a(3): AND EDX,0x1
0000f84d(7): MOV byte ptr [0x1aa + RSP],AL
0000f854(7): MOV byte ptr [0x1a9 + RSP],DL
0000f85b(5): CALL 0x000075a0
0000f860(2): TEST EAX,EAX
0000f862(4): MOV dword ptr [RSP + 0x5c],EAX
0000f866(6): JNZ 0x00010160
0000f86c(5): MOV RDI,qword ptr [RSP + 0x38]
0000f871(7): LEA RAX,[0xb8 + RDI]
0000f878(8): MOV qword ptr [0x1a0 + RSP],RAX
0000f880(7): MOVZX EAX,byte ptr [0xb0 + RDI]
0000f887(4): MOV byte ptr [RSP + 0x8],AL
0000f88b(3): SHR AL,0x4
0000f88e(3): AND EAX,0x1
0000f891(8): CMP byte ptr [0x1ab + RSP],0x0
0000f899(7): MOV byte ptr [0x1ae + RSP],AL
0000f8a0(2): JNZ 0x0000f8c5
0000f8a2(5): MOV RSI,qword ptr [RSP + 0x38]
0000f8a7(5): MOV RAX,qword ptr [RSP + 0x78]
0000f8ac(7): CMP dword ptr [0xb4 + RSI],0x1
0000f8b3(8): MOV qword ptr [0x128 + RSP],RAX
0000f8bb(8): MOV RAX,qword ptr [0x88 + RSP]
0000f8c3(2): JLE 0x0000f8c7
0000f8c5(2): XOR EAX,EAX
0000f8c7(8): MOV qword ptr [0x150 + RSP],RAX
0000f8cf(8): MOV qword ptr [0x158 + RSP],RAX
0000f8d7(5): MOV RAX,qword ptr [RSP + 0x48]
0000f8dc(8): MOV qword ptr [0x188 + RSP],R13
0000f8e4(8): MOV qword ptr [0x180 + RSP],R13
0000f8ec(4): MOVZX EAX,byte ptr [RAX + 0x38]
0000f8f0(4): MOV byte ptr [RSP + 0x8],AL
0000f8f4(3): SHR AL,0x7
0000f8f7(7): MOV byte ptr [0x1ad + RSP],AL
0000f8fe(5): MOV RAX,qword ptr [RSP + 0x38]
0000f903(7): MOV R14,qword ptr [0x98 + RAX]
0000f90a(7): MOV EAX,dword ptr [0x280 + RSP]
0000f911(12): MOV qword ptr [0x1c8 + RSP],-0x1
0000f91d(4): LEA R13,[R14 + R14*0x1]
0000f921(7): MOV dword ptr [0x1c0 + RSP],EAX
0000f928(3): TEST R13,R13
0000f92b(2): JLE 0x0000f97f
0000f92d(10): MOV RAX,0x666666666666666
0000f937(3): CMP R13,RAX
0000f93a(6): JG 0x00010680
0000f940(5): LEA RDI,[R13 + R14*0x8]
0000f945(4): SHL RDI,0x3
0000f949(5): CALL 0x00001c20
0000f94e(3): MOV RDI,R14
0000f951(3): MOV R15,RAX
0000f954(8): MOV qword ptr [0x1f8 + RSP],RAX
0000f95c(4): SHL RDI,0x4
0000f960(5): CALL 0x00001c20
0000f965(3): TEST RAX,RAX
0000f968(8): MOV qword ptr [0x218 + RSP],RAX
0000f970(6): JZ 0x00010680
0000f976(3): TEST R15,R15
0000f979(6): JZ 0x00010680
0000f97f(9): CMP qword ptr [0x270 + RSP],0x1
0000f988(8): MOV qword ptr [0x1f0 + RSP],R13
0000f990(11): MOV dword ptr [0x200 + RSP],0x1
0000f99b(8): MOV qword ptr [0x210 + RSP],R13
0000f9a3(6): JBE 0x00010ac8
0000f9a9(8): MOV RAX,qword ptr [0x160 + RSP]
0000f9b1(10): MOV RDX,0x1ffffffffffffffe
0000f9bb(3): CMP RAX,RDX
0000f9be(6): JA 0x00010680
0000f9c4(8): LEA RDI,[0x8 + RAX*0x8]
0000f9cc(5): CALL 0x00001c20
0000f9d1(3): TEST RAX,RAX
0000f9d4(3): MOV RDI,RAX
0000f9d7(8): MOV qword ptr [0x1d8 + RSP],RAX
0000f9df(6): JZ 0x000106d0
0000f9e5(7): MOV EAX,dword ptr [0x280 + RSP]
0000f9ec(8): MOV qword ptr [0xd8 + RSP],RBP
0000f9f4(3): AND EAX,0x1
0000f9f7(3): CMP EAX,0x1
0000f9fa(2): SBB EAX,EAX
0000f9fc(3): AND EAX,0x2
0000f9ff(3): ADD EAX,0x4
0000fa02(7): MOV dword ptr [0x190 + RSP],EAX
0000fa09(2): XOR EAX,EAX
0000fa0b(3): CMP RBP,R12
0000fa0e(3): SETLE AL
0000fa11(4): LEA EAX,[RAX + RAX*0x1 + -0x1]
0000fa15(7): MOV dword ptr [0xac + RSP],EAX
0000fa1c(3): MOV RAX,R12
0000fa1f(4): CMOVLE RAX,RBP
0000fa23(8): MOV qword ptr [0x90 + RSP],RAX
0000fa2b(3): MOV RAX,R12
0000fa2e(4): CMOVGE RAX,RBP
0000fa32(6): CMP qword ptr [RSP + 0x68],0x0
0000fa38(5): MOV qword ptr [RSP + 0x70],RAX
0000fa3d(5): MOV RAX,qword ptr [RSP + 0x38]
0000fa42(6): MOV ESI,dword ptr [0xb4 + RAX]
0000fa48(5): MOV EAX,0x8
0000fa4d(7): MOV dword ptr [0xc8 + RSP],ESI
0000fa54(2): JZ 0x0000fa8f
0000fa56(3): CMP ESI,0x1
0000fa59(5): MOV ECX,0x4
0000fa5e(2): JZ 0x0000fa7e
0000fa60(5): MOV RAX,qword ptr [RSP + 0x48]
0000fa65(4): TEST byte ptr [RAX + 0x1a],0x40
0000fa69(6): JNZ 0x000107ee
0000fa6f(9): CMP qword ptr [0xb0 + RSP],0x0
0000fa78(6): JNZ 0x000107ee
0000fa7e(2): XOR EDX,EDX
0000fa80(3): CMP RBP,R12
0000fa83(3): MOVZX EAX,BL
0000fa86(3): SETLE DL
0000fa89(2): OR EAX,ECX
0000fa8b(2): ADD EDX,EDX
0000fa8d(2): OR EAX,EDX
0000fa8f(5): CMP RBP,qword ptr [RSP + 0x70]
0000fa94(3): SETG CL
0000fa97(8): CMP RBP,qword ptr [0x90 + RSP]
0000fa9f(3): SETL DL
0000faa2(2): OR CL,DL
0000faa4(6): JNZ 0x00010579
0000faaa(8): LEA RCX,[0xd8 + RSP]
0000fab2(3): CMP RBP,R12
0000fab5(5): MOV EDX,0x0
0000faba(4): CMOVLE RDX,RCX
0000fabe(3): TEST RDX,RDX
0000fac1(8): MOV qword ptr [0xc0 + RSP],RDX
0000fac9(8): SETNZ byte ptr [0xcf + RSP]
0000fad1(3): SUB EAX,0x4
0000fad4(7): MOV dword ptr [0xa8 + RSP],EAX
0000fadb(8): LEA RAX,[0xd0 + RSP]
0000fae3(5): MOV qword ptr [RSP + 0x28],RAX
0000fae8(7): MOV EAX,dword ptr [0xa8 + RSP]
0000faef(3): CMP EAX,0x4
0000faf2(6): JA 0x000106dd
0000faf8(7): LEA RCX,[0x16bc0]
0000faff(4): MOVSXD RAX,dword ptr [RCX + RAX*0x4]
0000fb03(3): ADD RAX,RCX
0000fb06(2): JMP RAX
0000fb10(5): MOV RAX,qword ptr [RSP + 0x38]
0000fb15(8): CMP qword ptr [0x98 + RAX],0x0
0000fb1d(3): SETNZ AL
0000fb20(3): MOVZX EAX,AL
0000fb23(4): MOV dword ptr [RSP + 0x58],EAX
0000fb27(5): JMP 0x0000f78f
0000fb30(9): MOV qword ptr [RSP + 0x68],0x0
0000fb39(5): JMP 0x0000f6b6
0000fb3e(5): CMP qword ptr [RSP + 0x70],RBP
0000fb43(2): JLE 0x0000fb9f
0000fb45(5): MOV RAX,qword ptr [RSP + 0x78]
0000fb4a(5): MOV RDI,qword ptr [RSP + 0x68]
0000fb4f(4): MOVZX EDX,byte ptr [RAX + RBP*0x1]
0000fb53(4): LEA RAX,[RBP + 0x1]
0000fb57(4): CMP byte ptr [RDI + RDX*0x1],0x0
0000fb5b(6): JNZ 0x0000fbe8
0000fb61(5): MOV RSI,qword ptr [RSP + 0x68]
0000fb66(5): MOV RCX,qword ptr [RSP + 0x70]
0000fb6b(5): MOV RDI,qword ptr [RSP + 0x78]
0000fb70(2): JMP 0x0000fb8a
0000fb78(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0000fb7c(4): LEA RAX,[RAX + 0x1]
0000fb80(4): CMP byte ptr [RSI + RDX*0x1],0x0
0000fb84(6): JNZ 0x00010d21
0000fb8a(3): CMP RCX,RAX
0000fb8d(3): MOV RBP,RAX
0000fb90(2): JNZ 0x0000fb78
0000fb92(5): MOV RAX,qword ptr [RSP + 0x70]
0000fb97(8): MOV qword ptr [0xd8 + RSP],RAX
0000fb9f(5): CMP qword ptr [RSP + 0x70],RBP
0000fba4(2): JNZ 0x0000fbe8
0000fba6(2): XOR EAX,EAX
0000fba8(5): MOV RSI,qword ptr [RSP + 0x70]
0000fbad(8): CMP qword ptr [0x88 + RSP],RSI
0000fbb5(2): JLE 0x0000fbc0
0000fbb7(5): MOV RAX,qword ptr [RSP + 0x78]
0000fbbc(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
0000fbc0(8): MOV RSI,qword ptr [0xb0 + RSP]
0000fbc8(3): TEST RSI,RSI
0000fbcb(2): JZ 0x0000fbd1
0000fbcd(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
0000fbd1(5): MOV RDI,qword ptr [RSP + 0x68]
0000fbd6(4): CMP byte ptr [RDI + RAX*0x1],0x0
0000fbda(6): JZ 0x00010579
0000fbe0(5): MOV RBP,qword ptr [RSP + 0x70]
0000fbe5(3): NOP dword ptr [RAX]
0000fbe8(7): MOV EDX,dword ptr [0x280 + RSP]
0000fbef(4): MOV RDI,qword ptr [RSP]
0000fbf3(3): MOV RSI,RBP
0000fbf6(5): CALL 0x0000aca0
0000fbfb(2): TEST EAX,EAX
0000fbfd(4): MOV dword ptr [RSP + 0x5c],EAX
0000fc01(6): JNZ 0x00010160
0000fc07(8): CMP dword ptr [0xc8 + RSP],0x1
0000fc0f(2): JZ 0x0000fc2d
0000fc11(9): CMP qword ptr [0x150 + RSP],0x0
0000fc1a(2): JZ 0x0000fc2d
0000fc1c(8): MOV RAX,qword ptr [0x130 + RSP]
0000fc24(3): CMP dword ptr [RAX],-0x1
0000fc27(6): JZ 0x00010551
0000fc2d(8): MOV RBX,qword ptr [0x1b8 + RSP]
0000fc35(5): MOVZX EAX,byte ptr [RSP + 0x58]
0000fc3a(11): MOV dword ptr [0x200 + RSP],0x0
0000fc45(12): MOV qword ptr [0x1e8 + RSP],0x0
0000fc51(12): MOV qword ptr [0x1e0 + RSP],0x0
0000fc5d(11): MOV dword ptr [0xd0 + RSP],0x0
0000fc68(4): MOV R14,qword ptr [RBX + 0x48]
0000fc6c(3): AND EAX,0x1
0000fc6f(7): MOV byte ptr [0xce + RSP],AL
0000fc76(8): MOV RAX,qword ptr [0x168 + RSP]
0000fc7e(5): CMP byte ptr [R14 + 0x68],0x0
0000fc83(5): MOV qword ptr [RSP + 0x8],RAX
0000fc88(6): JS 0x00010600
0000fc8e(8): MOV RAX,qword ptr [0x1d8 + RSP]
0000fc96(3): TEST RAX,RAX
0000fc99(2): JZ 0x0000fcb2
0000fc9b(8): CMP qword ptr [0x98 + RBX],0x0
0000fca3(5): MOV RDI,qword ptr [RSP + 0x8]
0000fca8(4): MOV qword ptr [RAX + RDI*0x8],R14
0000fcac(6): JNZ 0x00010b9b
0000fcb2(8): MOVZX EAX,byte ptr [0xcf + RSP]
0000fcba(4): MOV byte ptr [RSP + 0x18],AL
0000fcbe(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000fcc3(2): TEST AL,0x10
0000fcc5(9): MOV qword ptr [RSP + 0x20],-0x1
0000fcce(9): MOV qword ptr [RSP + 0x30],0x0
0000fcd7(6): JNZ 0x00010b60
0000fcdd(8): MOV RAX,qword ptr [0xc0 + RSP]
0000fce5(8): MOV R8,qword ptr [0x168 + RSP]
0000fced(5): MOV qword ptr [RSP + 0x50],RAX
0000fcf2(8): LEA RAX,[0xe0 + RSP]
0000fcfa(5): MOV qword ptr [RSP + 0x60],RAX
0000fcff(8): LEA RAX,[0xd4 + RSP]
0000fd07(8): MOV qword ptr [0x80 + RSP],RAX
0000fd0f(2): JMP 0x0000fd6c
0000fd18(3): CMP R14,R13
0000fd1b(8): MOV R8,qword ptr [0x168 + RSP]
0000fd23(3): SETZ AL
0000fd26(4): AND byte ptr [RSP + 0x18],AL
0000fd2a(5): MOVZX EAX,byte ptr [R13 + 0x68]
0000fd2f(6): CMOVZ RBX,qword ptr [RSP + 0x8]
0000fd35(2): TEST AL,0x10
0000fd37(5): MOV qword ptr [RSP + 0x8],RBX
0000fd3c(2): JZ 0x0000fd69
0000fd3e(2): TEST AL,AL
0000fd40(6): JS 0x00010200
0000fd46(4): MOV EAX,dword ptr [RSP + 0x58]
0000fd4a(5): MOV qword ptr [RSP + 0x20],R8
0000fd4f(2): TEST EAX,EAX
0000fd51(6): JZ 0x0000fe76
0000fd57(9): MOV qword ptr [RSP + 0x30],0x1
0000fd60(9): MOV qword ptr [RSP + 0x50],0x0
0000fd69(3): MOV R14,R13
0000fd6c(8): CMP qword ptr [0x188 + RSP],R8
0000fd74(6): JLE 0x0000fe64
0000fd7a(8): MOV RAX,qword ptr [0x160 + RSP]
0000fd82(4): LEA RBX,[R8 + 0x1]
0000fd86(3): CMP RBX,RAX
0000fd89(6): JGE 0x00010230
0000fd8f(8): MOV RAX,qword ptr [0x150 + RSP]
0000fd97(3): CMP RBX,RAX
0000fd9a(6): JGE 0x00010520
0000fda0(5): TEST byte ptr [R14 + 0x68],0x20
0000fda5(6): JNZ 0x00010270
0000fdab(4): LEA RAX,[R8 + 0x1]
0000fdaf(8): MOV qword ptr [0x168 + RSP],RAX
0000fdb7(8): MOV RAX,qword ptr [0x128 + RSP]
0000fdbf(5): MOVZX R13D,byte ptr [RAX + R8*0x1]
0000fdc4(4): MOV RAX,qword ptr [R14 + 0x58]
0000fdc8(3): TEST RAX,RAX
0000fdcb(6): JZ 0x000104e0
0000fdd1(4): MOV R13,qword ptr [RAX + R13*0x8]
0000fdd5(9): CMP qword ptr [0x1d8 + RSP],0x0
0000fdde(2): JZ 0x0000fdf4
0000fde0(4): MOV RSI,qword ptr [RSP]
0000fde4(5): MOV RDI,qword ptr [RSP + 0x28]
0000fde9(3): MOV RDX,R13
0000fdec(5): CALL 0x0000f0e0
0000fdf1(3): MOV R13,RAX
0000fdf4(3): TEST R13,R13
0000fdf7(6): JNZ 0x0000fd18
0000fdfd(7): MOV ECX,dword ptr [0xd0 + RSP]
0000fe04(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000fe0c(2): TEST ECX,ECX
0000fe0e(6): JNZ 0x000106d0
0000fe14(3): TEST RDI,RDI
0000fe17(2): JZ 0x0000fe64
0000fe19(8): MOVZX EAX,byte ptr [0xce + RSP]
0000fe21(3): XOR EAX,0x1
0000fe24(4): TEST byte ptr [RSP + 0x30],AL
0000fe28(2): JNZ 0x0000fe64
0000fe2a(8): MOV RSI,qword ptr [0x1e0 + RSP]
0000fe32(8): MOV RAX,qword ptr [0x168 + RSP]
0000fe3a(2): XOR ECX,ECX
0000fe3c(2): JMP 0x0000fe53
0000fe40(5): CMP qword ptr [RDI + RDX*0x8],0x0
0000fe45(3): MOV RAX,RDX
0000fe48(5): MOV ECX,0x1
0000fe4d(6): JNZ 0x000101c0
0000fe53(4): LEA RDX,[RAX + 0x1]
0000fe57(3): CMP RSI,RDX
0000fe5a(2): JGE 0x0000fe40
0000fe5c(2): TEST CL,CL
0000fe5e(6): JNZ 0x00010d2e
0000fe64(5): MOV RAX,qword ptr [RSP + 0x50]
0000fe69(3): TEST RAX,RAX
0000fe6c(2): JZ 0x0000fe76
0000fe6e(5): MOV RDI,qword ptr [RSP + 0x8]
0000fe73(3): ADD qword ptr [RAX],RDI
0000fe76(5): MOV RAX,qword ptr [RSP + 0x20]
0000fe7b(4): CMP RAX,-0x1
0000fe7f(6): JZ 0x00010540
0000fe85(4): CMP RAX,-0x2
0000fe89(6): JZ 0x00010680
0000fe8f(5): MOV RAX,qword ptr [RSP + 0x20]
0000fe94(8): MOV qword ptr [0x1c8 + RSP],RAX
0000fe9c(5): MOV RAX,qword ptr [RSP + 0x48]
0000fea1(4): TEST byte ptr [RAX + 0x38],0x10
0000fea5(6): JNZ 0x00010660
0000feab(9): CMP qword ptr [0x270 + RSP],0x1
0000feb4(6): JBE 0x000107ac
0000feba(5): MOV RCX,qword ptr [RSP + 0x20]
0000febf(8): MOV RBX,qword ptr [0x1d8 + RSP]
0000fec7(4): MOV RDI,qword ptr [RSP]
0000fecb(4): MOV RAX,qword ptr [RBX + RCX*0x8]
0000fecf(4): MOV RSI,qword ptr [RAX + 0x10]
0000fed3(4): LEA RDX,[RAX + 0x18]
0000fed7(5): CALL 0x0000abd0
0000fedc(3): MOV R13,RAX
0000fedf(8): MOV qword ptr [0x1d0 + RSP],RAX
0000fee7(5): MOV RAX,qword ptr [RSP + 0x38]
0000feec(7): TEST byte ptr [0xb0 + RAX],0x1
0000fef3(2): JNZ 0x0000ff10
0000fef5(5): MOV RAX,qword ptr [RSP + 0x38]
0000fefa(8): CMP qword ptr [0x98 + RAX],0x0
0000ff02(6): JZ 0x0001089c
0000ff08(8): MOV R13,qword ptr [0x1d0 + RSP]
0000ff10(10): MOV RSI,0x1ffffffffffffffe
0000ff1a(5): CMP qword ptr [RSP + 0x20],RSI
0000ff1f(8): MOV R15,qword ptr [0x1b8 + RSP]
0000ff27(6): JA 0x00010b8b
0000ff2d(5): MOV RAX,qword ptr [RSP + 0x20]
0000ff32(4): ADD RAX,0x1
0000ff36(8): LEA RBX,[RAX*0x8]
0000ff3e(5): MOV qword ptr [RSP + 0x8],RAX
0000ff43(3): MOV RDI,RBX
0000ff46(5): CALL 0x00001c20
0000ff4b(3): TEST RAX,RAX
0000ff4e(3): MOV R12,RAX
0000ff51(6): JZ 0x00010680
0000ff57(8): CMP qword ptr [0x98 + R15],0x0
0000ff5f(6): JZ 0x000107f5
0000ff65(3): MOV RDI,RBX
0000ff68(5): CALL 0x00001c20
0000ff6d(3): TEST RAX,RAX
0000ff70(3): MOV RBP,RAX
0000ff73(6): JZ 0x00010678
0000ff79(5): MOV R14,qword ptr [RSP + 0x20]
0000ff7e(8): LEA RBX,[0xe0 + RSP]
0000ff86(5): MOV qword ptr [RSP + 0x10],R15
0000ff8b(5): MOV qword ptr [RSP + 0x18],RAX
0000ff90(5): MOV RAX,qword ptr [RSP + 0x8]
0000ff95(2): XOR ESI,ESI
0000ff97(3): MOV RDI,RBP
0000ff9a(8): LEA RDX,[RAX*0x8]
0000ffa2(5): CALL 0x00001b60
0000ffa7(4): PXOR XMM0,XMM0
0000ffab(8): MOV qword ptr [0xe0 + RSP],R12
0000ffb3(8): MOV qword ptr [0xe8 + RSP],RBP
0000ffbb(8): MOV qword ptr [0xf0 + RSP],R13
0000ffc3(3): MOV RSI,RBX
0000ffc6(8): MOV qword ptr [0xf8 + RSP],R14
0000ffce(4): MOV RDI,qword ptr [RSP]
0000ffd2(4): MOVAPS xmmword ptr [RBX + 0x20],XMM0
0000ffd6(8): MOV qword ptr [RBX + 0x30],0x0
0000ffde(5): CALL 0x0000f2d0
0000ffe3(8): MOV RDI,qword ptr [0x110 + RSP]
0000ffeb(3): MOV R15D,EAX
0000ffee(5): CALL 0x000019d0
0000fff3(3): TEST R15D,R15D
0000fff6(6): JNZ 0x00010c14
0000fffc(5): CMP qword ptr [R12],0x0
00010001(6): JNZ 0x00010c73
00010007(5): CMP qword ptr [RBP],0x0
0001000c(6): JNZ 0x00010c73
00010012(8): MOV RDX,qword ptr [0x1d8 + RSP]
0001001a(6): NOP word ptr [RAX + RAX*0x1]
00010020(4): SUB R14,0x1
00010024(4): CMP R14,-0x1
00010028(6): JZ 0x00010aeb
0001002e(4): MOV RAX,qword ptr [RDX + R14*0x8]
00010032(3): TEST RAX,RAX
00010035(2): JZ 0x00010020
00010037(4): TEST byte ptr [RAX + 0x68],0x10
0001003b(2): JZ 0x00010020
0001003d(4): MOV RSI,qword ptr [RAX + 0x10]
00010041(4): MOV RDI,qword ptr [RSP]
00010045(4): LEA RDX,[RAX + 0x18]
00010049(3): MOV RCX,R14
0001004c(5): CALL 0x0000abd0
00010051(3): MOV R13,RAX
00010054(4): LEA RAX,[R14 + 0x1]
00010058(5): MOV qword ptr [RSP + 0x8],RAX
0001005d(5): JMP 0x0000ff90
00010062(5): CMP qword ptr [RSP + 0x70],RBP
00010067(6): JLE 0x0000fb9f
0001006d(5): MOV RAX,qword ptr [RSP + 0x78]
00010072(8): MOV RDI,qword ptr [0xb0 + RSP]
0001007a(5): MOV RSI,qword ptr [RSP + 0x68]
0001007f(4): MOVZX EAX,byte ptr [RAX + RBP*0x1]
00010083(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
00010087(4): LEA RAX,[RBP + 0x1]
0001008b(4): CMP byte ptr [RSI + RDX*0x1],0x0
0001008f(6): JNZ 0x0000fbe8
00010095(5): MOV RSI,qword ptr [RSP + 0x68]
0001009a(8): MOV RDI,qword ptr [0xb0 + RSP]
000100a2(5): MOV RCX,qword ptr [RSP + 0x70]
000100a7(5): MOV R8,qword ptr [RSP + 0x78]
000100ac(2): JMP 0x000100c7
000100b0(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
000100b5(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
000100b9(4): LEA RAX,[RBP + 0x1]
000100bd(4): CMP byte ptr [RSI + RDX*0x1],0x0
000100c1(6): JNZ 0x00010d21
000100c7(3): CMP RCX,RAX
000100ca(3): MOV RBP,RAX
000100cd(2): JNZ 0x000100b0
000100cf(5): JMP 0x0000fb92
000100d4(8): CMP qword ptr [0x90 + RSP],RBP
000100dc(6): JG 0x00010579
000100e2(2): XOR ECX,ECX
000100e4(3): MOV RAX,RBP
000100e7(5): MOV RDI,qword ptr [RSP + 0x68]
000100ec(8): MOV RSI,qword ptr [0xb0 + RSP]
000100f4(8): MOV R9,qword ptr [0x90 + RSP]
000100fc(5): MOV R10,qword ptr [RSP + 0x78]
00010101(8): MOV R8,qword ptr [0x88 + RSP]
00010109(2): JMP 0x00010122
00010110(4): SUB RAX,0x1
00010114(5): MOV ECX,0x1
00010119(3): CMP RAX,R9
0001011c(6): JL 0x00010b00
00010122(2): XOR EDX,EDX
00010124(3): CMP R8,RAX
00010127(2): JLE 0x0001012e
00010129(5): MOVZX EDX,byte ptr [R10 + RAX*0x1]
0001012e(3): TEST RSI,RSI
00010131(2): JZ 0x00010137
00010133(4): MOVZX EDX,byte ptr [RSI + RDX*0x1]
00010137(4): CMP byte ptr [RDI + RDX*0x1],0x0
0001013b(2): JZ 0x00010110
0001013d(2): TEST CL,CL
0001013f(6): JZ 0x0000fbe8
00010145(8): MOV qword ptr [0xd8 + RSP],RAX
0001014d(3): MOV RBP,RAX
00010150(5): JMP 0x0000fbe8
00010158(4): MOV dword ptr [RSP + 0x5c],EAX
0001015c(4): NOP dword ptr [RAX]
00010160(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010168(5): CALL 0x000019d0
0001016d(5): MOV RAX,qword ptr [RSP + 0x38]
00010172(8): CMP qword ptr [0x98 + RAX],0x0
0001017a(6): JNZ 0x00010aa0
00010180(4): MOV RDI,qword ptr [RSP]
00010184(5): CALL 0x000088e0
00010189(8): MOV RSI,qword ptr [0x228 + RSP]
00010191(9): XOR RSI,qword ptr FS:[0x28]
0001019a(4): MOV EAX,dword ptr [RSP + 0x5c]
0001019e(6): JNZ 0x00010d3b
000101a4(7): ADD RSP,0x238
000101ab(1): POP RBX
000101ac(1): POP RBP
000101ad(2): POP R12
000101af(2): POP R13
000101b1(2): POP R14
000101b3(2): POP R15
000101b5(1): RET
000101c0(4): MOV RSI,qword ptr [RSP]
000101c4(5): MOV RDI,qword ptr [RSP + 0x28]
000101c9(8): MOV qword ptr [0x168 + RSP],RDX
000101d1(2): XOR EDX,EDX
000101d3(5): CALL 0x0000f0e0
000101d8(7): MOV EDX,dword ptr [0xd0 + RSP]
000101df(2): TEST EDX,EDX
000101e1(6): JNZ 0x00010b1d
000101e7(3): TEST RAX,RAX
000101ea(6): JNZ 0x00010b30
000101f0(8): MOV RDI,qword ptr [0x1d8 + RSP]
000101f8(5): JMP 0x0000fe2a
00010200(4): MOV RSI,qword ptr [R13 + 0x10]
00010204(4): MOV RDI,qword ptr [RSP]
00010208(4): LEA RDX,[R13 + 0x18]
0001020c(3): MOV RCX,R8
0001020f(5): MOV qword ptr [RSP + 0x10],R8
00010214(5): CALL 0x0000abd0
00010219(3): TEST RAX,RAX
0001021c(5): MOV R8,qword ptr [RSP + 0x10]
00010221(6): JZ 0x0000fd69
00010227(5): JMP 0x0000fd46
00010230(8): CMP RAX,qword ptr [0x178 + RSP]
00010238(6): JGE 0x0000fd8f
0001023e(4): MOV RDI,qword ptr [RSP]
00010242(3): LEA ESI,[RBX + 0x1]
00010245(5): CALL 0x00008130
0001024a(2): TEST EAX,EAX
0001024c(7): MOV dword ptr [0xd0 + RSP],EAX
00010253(6): JNZ 0x00010b38
00010259(5): TEST byte ptr [R14 + 0x68],0x20
0001025e(8): MOV R8,qword ptr [0x168 + RSP]
00010266(6): JZ 0x0000fdab
0001026c(4): NOP dword ptr [RAX]
00010270(5): CMP qword ptr [R14 + 0x10],0x0
00010275(8): MOV R13,qword ptr [0x1b8 + RSP]
0001027d(6): JLE 0x000105ab
00010283(7): LEA RAX,[0xd8 + R13]
0001028a(3): XOR R12D,R12D
0001028d(8): MOV qword ptr [0xa0 + RSP],RBX
00010295(3): MOV RBX,R12
00010298(3): MOV R12,R8
0001029b(5): MOV qword ptr [RSP + 0x40],RAX
000102a0(5): JMP 0x000103f8
000102a8(2): TEST AL,0x1
000102aa(6): JZ 0x000103ea
000102b0(3): AND ECX,0x8
000102b3(6): JNZ 0x000103ea
000102b9(3): TEST DL,0x20
000102bc(2): JZ 0x000102c6
000102be(2): TEST AL,0x2
000102c0(6): JZ 0x000103ea
000102c6(6): AND EDX,0x80
000102cc(2): JZ 0x000102e0
000102ce(2): TEST AL,0x8
000102d0(6): JZ 0x000103ea
000102d6(10): NOP word ptr CS:[RAX + RAX*0x1]
000102e0(4): MOV RCX,qword ptr [RSP]
000102e4(5): MOV RSI,qword ptr [RSP + 0x40]
000102e9(3): MOV R8,R12
000102ec(3): MOV RDX,R15
000102ef(3): MOV RDI,RBP
000102f2(5): CALL 0x0000d3a0
000102f7(2): TEST EAX,EAX
000102f9(6): JZ 0x000103e2
000102ff(3): MOVSXD RBP,EAX
00010302(8): ADD RBP,qword ptr [0x168 + RSP]
0001030a(7): CMP dword ptr [0x200 + RSP],EAX
00010311(8): CMOVGE EAX,dword ptr [0x200 + RSP]
00010319(4): MOV RDI,qword ptr [RSP]
0001031d(3): MOV RSI,RBP
00010320(7): MOV dword ptr [0x200 + RSP],EAX
00010327(5): CALL 0x00008280
0001032c(2): TEST EAX,EAX
0001032e(7): MOV dword ptr [0xd4 + RSP],EAX
00010335(6): JNZ 0x000105d0
0001033b(4): MOV RAX,qword ptr [R13 + 0x18]
0001033f(8): LEA R12,[RBP*0x8]
00010347(4): MOV RAX,qword ptr [RAX + R15*0x8]
0001034b(8): MOV R15,qword ptr [0x1d8 + RSP]
00010353(4): LEA RDX,[RAX + RAX*0x2]
00010357(4): MOV RAX,qword ptr [R13 + 0x30]
0001035b(3): ADD R15,R12
0001035e(4): LEA RDX,[RAX + RDX*0x8]
00010362(3): MOV RAX,qword ptr [R15]
00010365(3): TEST RAX,RAX
00010368(6): JZ 0x00010468
0001036e(4): MOV RSI,qword ptr [RAX + 0x50]
00010372(5): MOV RDI,qword ptr [RSP + 0x60]
00010377(5): CALL 0x00009de0
0001037c(2): TEST EAX,EAX
0001037e(7): MOV dword ptr [0xd4 + RSP],EAX
00010385(6): JNZ 0x000105d0
0001038b(7): MOV EDX,dword ptr [0x1c0 + RSP]
00010392(4): MOV RDI,qword ptr [RSP]
00010396(4): LEA RSI,[RBP + -0x1]
0001039a(5): CALL 0x0000a9d0
0001039f(5): MOV RDX,qword ptr [RSP + 0x60]
000103a4(8): MOV RDI,qword ptr [0x80 + RSP]
000103ac(2): MOV ECX,EAX
000103ae(8): ADD R12,qword ptr [0x1d8 + RSP]
000103b6(3): MOV RSI,R13
000103b9(5): CALL 0x00009f40
000103be(8): MOV RDI,qword ptr [0xf0 + RSP]
000103c6(4): MOV qword ptr [R12],RAX
000103ca(5): CALL 0x000019d0
000103cf(8): MOV RDI,qword ptr [0x1d8 + RSP]
000103d7(5): CMP qword ptr [RDI + RBP*0x8],0x0
000103dc(6): JZ 0x000104c1
000103e2(8): MOV R12,qword ptr [0x168 + RSP]
000103ea(4): ADD RBX,0x1
000103ee(4): CMP RBX,qword ptr [R14 + 0x10]
000103f2(6): JGE 0x000105a0
000103f8(4): MOV RAX,qword ptr [R14 + 0x18]
000103fc(4): MOV RBP,qword ptr [R13]
00010400(4): MOV R15,qword ptr [RAX + RBX*0x8]
00010404(3): MOV RAX,R15
00010407(4): SHL RAX,0x4
0001040b(3): ADD RAX,RBP
0001040e(4): TEST byte ptr [RAX + 0xa],0x10
00010412(2): JZ 0x000103ea
00010414(3): MOV ECX,dword ptr [RAX + 0x8]
00010417(6): TEST ECX,0x3ff00
0001041d(4): MOV dword ptr [RSP + 0x10],ECX
00010421(6): JZ 0x000102e0
00010427(7): MOV EDX,dword ptr [0x1c0 + RSP]
0001042e(4): MOV RDI,qword ptr [RSP]
00010432(3): MOV RSI,R12
00010435(5): CALL 0x0000a9d0
0001043a(4): MOV ECX,dword ptr [RSP + 0x10]
0001043e(3): SHR ECX,0x8
00010441(2): MOV EDX,ECX
00010443(5): AND DX,0x3ff
00010448(3): TEST CL,0x4
0001044b(6): JNZ 0x000102a8
00010451(3): AND ECX,0x8
00010454(6): JZ 0x000102b9
0001045a(2): TEST AL,0x1
0001045c(6): JZ 0x000102b9
00010462(2): JMP 0x000103ea
00010468(4): MOVDQU XMM0,xmmword ptr [RDX]
0001046c(4): LEA RSI,[RBP + -0x1]
00010470(4): MOV RDI,qword ptr [RSP]
00010474(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0001047c(4): MOV RAX,qword ptr [RDX + 0x10]
00010480(7): MOV EDX,dword ptr [0x1c0 + RSP]
00010487(8): MOV qword ptr [0xf0 + RSP],RAX
0001048f(5): CALL 0x0000a9d0
00010494(8): MOV RDI,qword ptr [0x80 + RSP]
0001049c(5): MOV RDX,qword ptr [RSP + 0x60]
000104a1(2): MOV ECX,EAX
000104a3(3): MOV RSI,R13
000104a6(5): CALL 0x00009f40
000104ab(8): MOV RDI,qword ptr [0x1d8 + RSP]
000104b3(3): MOV qword ptr [R15],RAX
000104b6(5): CMP qword ptr [RDI + RBP*0x8],0x0
000104bb(6): JNZ 0x000103e2
000104c1(7): MOV EAX,dword ptr [0xd4 + RSP]
000104c8(2): TEST EAX,EAX
000104ca(6): JZ 0x000103e2
000104d0(8): MOV RBX,qword ptr [0xa0 + RSP]
000104d8(5): JMP 0x000105e0
000104e0(4): MOV RBP,qword ptr [R14 + 0x60]
000104e4(3): TEST RBP,RBP
000104e7(6): JZ 0x00010695
000104ed(8): MOV RAX,qword ptr [0x168 + RSP]
000104f5(7): MOV EDX,dword ptr [0x1c0 + RSP]
000104fc(4): MOV RDI,qword ptr [RSP]
00010500(4): LEA RSI,[RAX + -0x1]
00010504(5): CALL 0x0000a9d0
00010509(2): TEST AL,0x1
0001050b(6): JZ 0x000105c0
00010511(8): MOV R13,qword ptr [0x800 + RBP + R13*0x8]
00010519(5): JMP 0x0000fdd5
00010520(8): CMP RAX,qword ptr [0x178 + RSP]
00010528(6): JGE 0x0000fda0
0001052e(5): JMP 0x0001023e
00010533(3): MOV RDI,R12
00010536(5): CALL 0x000019d0
0001053b(5): NOP dword ptr [RAX + RAX*0x1]
00010540(4): MOV RDI,qword ptr [RSP]
00010544(5): CALL 0x00008a80
00010549(8): MOV RBP,qword ptr [0xd8 + RSP]
00010551(8): MOVSXD RAX,dword ptr [0xac + RSP]
00010559(3): ADD RBP,RAX
0001055c(8): CMP RBP,qword ptr [0x90 + RSP]
00010564(8): MOV qword ptr [0xd8 + RSP],RBP
0001056c(2): JL 0x00010579
0001056e(5): CMP RBP,qword ptr [RSP + 0x70]
00010573(6): JLE 0x0000fae8
00010579(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010581(8): MOV dword ptr [RSP + 0x5c],0x1
00010589(5): JMP 0x00010168
00010590(8): MOV dword ptr [RSP + 0x5c],0x1
00010598(5): JMP 0x00010189
000105a0(8): MOV RBX,qword ptr [0xa0 + RSP]
000105a8(3): MOV R8,R12
000105ab(11): MOV dword ptr [0xd0 + RSP],0x0
000105b6(5): JMP 0x0000fdab
000105c0(5): MOV R13,qword ptr [RBP + R13*0x8]
000105c5(5): JMP 0x0000fdd5
000105d0(8): MOV RBX,qword ptr [0xa0 + RSP]
000105d8(8): MOV RDI,qword ptr [0x1d8 + RSP]
000105e0(3): TEST RDI,RDI
000105e3(7): MOV dword ptr [0xd0 + RSP],EAX
000105ea(6): JZ 0x000106d0
000105f0(3): XOR R13D,R13D
000105f3(5): JMP 0x0000fde0
00010600(7): MOV EDX,dword ptr [0x1c0 + RSP]
00010607(4): MOV RDI,qword ptr [RSP]
0001060b(4): LEA RSI,[RAX + -0x1]
0001060f(5): CALL 0x0000a9d0
00010614(2): TEST AL,0x1
00010616(6): JZ 0x00010785
0001061c(4): MOV R14,qword ptr [RBX + 0x50]
00010620(3): TEST R14,R14
00010623(6): JNZ 0x0000fc8e
00010629(7): MOV EAX,dword ptr [0xd0 + RSP]
00010630(3): CMP EAX,0xc
00010633(4): MOV dword ptr [RSP + 0x5c],EAX
00010637(6): JZ 0x00010160
0001063d(7): LEA RCX,[0x17050]
00010644(7): LEA RSI,[0x16a80]
0001064b(7): LEA RDI,[0x16b34]
00010652(5): MOV EDX,0x435
00010657(5): CALL 0x00001b50
0001065c(4): NOP dword ptr [RAX]
00010660(5): MOV RAX,qword ptr [RSP + 0x38]
00010665(8): CMP qword ptr [0x98 + RAX],0x0
0001066d(6): JZ 0x0001089c
00010673(5): JMP 0x000107bf
00010678(3): MOV RDI,R12
0001067b(5): CALL 0x000019d0
00010680(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010688(8): MOV dword ptr [RSP + 0x5c],0xc
00010690(5): JMP 0x00010168
00010695(8): MOV RDI,qword ptr [0x1b8 + RSP]
0001069d(3): MOV RSI,R14
000106a0(5): CALL 0x0000b680
000106a5(2): TEST AL,AL
000106a7(6): JNZ 0x0000fdc4
000106ad(8): MOV RDI,qword ptr [0x1d8 + RSP]
000106b5(11): MOV dword ptr [0xd0 + RSP],0xc
000106c0(3): TEST RDI,RDI
000106c3(6): JNZ 0x000105f0
000106c9(7): NOP dword ptr [RAX]
000106d0(8): MOV dword ptr [RSP + 0x5c],0xc
000106d8(5): JMP 0x00010168
000106dd(5): MOV RBX,qword ptr [RSP + 0x68]
000106e2(8): MOV R13D,dword ptr [0xac + RSP]
000106ea(8): MOV R14,qword ptr [0x90 + RSP]
000106f2(5): MOV R15,qword ptr [RSP + 0x70]
000106f7(8): MOV R12,qword ptr [0x88 + RSP]
000106ff(2): JMP 0x00010748
00010708(3): CMP R12,RBP
0001070b(3): MOV RAX,RBX
0001070e(2): JLE 0x0001071f
00010710(8): MOV RAX,qword ptr [0x128 + RSP]
00010718(4): MOVZX EAX,byte ptr [RAX + RDX*0x1]
0001071c(3): ADD RAX,RBX
0001071f(3): CMP byte ptr [RAX],0x0
00010722(6): JNZ 0x0000fbe8
00010728(3): MOVSXD RAX,R13D
0001072b(3): ADD RBP,RAX
0001072e(3): CMP RBP,R14
00010731(8): MOV qword ptr [0xd8 + RSP],RBP
00010739(6): JL 0x00010579
0001073f(3): CMP RBP,R15
00010742(6): JG 0x00010579
00010748(3): MOV RDX,RBP
0001074b(8): SUB RDX,qword ptr [0x148 + RSP]
00010753(8): CMP qword ptr [0x158 + RSP],RDX
0001075b(2): JA 0x00010708
0001075d(7): MOV EDX,dword ptr [0x280 + RSP]
00010764(4): MOV RDI,qword ptr [RSP]
00010768(3): MOV RSI,RBP
0001076b(5): CALL 0x0000aca0
00010770(2): TEST EAX,EAX
00010772(6): JNZ 0x00010158
00010778(3): MOV RDX,RBP
0001077b(8): SUB RDX,qword ptr [0x148 + RSP]
00010783(2): JMP 0x00010708
00010785(2): TEST EAX,EAX
00010787(6): JZ 0x0000fc8e
0001078d(2): MOV EDX,EAX
0001078f(3): AND EDX,0x6
00010792(3): CMP EDX,0x6
00010795(6): JZ 0x00010bff
0001079b(2): TEST AL,0x2
0001079d(6): JZ 0x00010c50
000107a3(4): MOV R14,qword ptr [RBX + 0x58]
000107a7(5): JMP 0x00010620
000107ac(5): MOV RAX,qword ptr [RSP + 0x38]
000107b1(8): CMP qword ptr [0x98 + RAX],0x0
000107b9(6): JZ 0x0001089c
000107bf(5): MOV RCX,qword ptr [RSP + 0x20]
000107c4(8): MOV RBX,qword ptr [0x1d8 + RSP]
000107cc(4): MOV RDI,qword ptr [RSP]
000107d0(4): MOV RAX,qword ptr [RBX + RCX*0x8]
000107d4(4): MOV RSI,qword ptr [RAX + 0x10]
000107d8(4): LEA RDX,[RAX + 0x18]
000107dc(5): CALL 0x0000abd0
000107e1(8): MOV qword ptr [0x1d0 + RSP],RAX
000107e9(5): JMP 0x0000ff08
000107ee(2): XOR ECX,ECX
000107f0(5): JMP 0x0000fa7e
000107f5(4): PXOR XMM0,XMM0
000107f9(8): MOV qword ptr [0xe0 + RSP],RAX
00010801(4): MOV RDI,qword ptr [RSP]
00010805(5): MOV RAX,qword ptr [RSP + 0x20]
0001080a(8): LEA RBX,[0xe0 + RSP]
00010812(12): MOV qword ptr [0xe8 + RSP],0x0
0001081e(8): MOV qword ptr [0xf0 + RSP],R13
00010826(3): MOV RSI,RBX
00010829(12): MOV qword ptr [0x110 + RSP],0x0
00010835(8): MOVAPS xmmword ptr [0x100 + RSP],XMM0
0001083d(8): MOV qword ptr [0xf8 + RSP],RAX
00010845(5): CALL 0x0000f2d0
0001084a(8): MOV RDI,qword ptr [0x110 + RSP]
00010852(4): MOV dword ptr [RSP + 0x8],EAX
00010856(5): CALL 0x000019d0
0001085b(4): MOV EAX,dword ptr [RSP + 0x8]
0001085f(2): TEST EAX,EAX
00010861(6): JNZ 0x00010ca8
00010867(5): CMP qword ptr [R12],0x0
0001086c(6): JZ 0x00010533
00010872(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001087a(5): CALL 0x000019d0
0001087f(5): MOV RAX,qword ptr [RSP + 0x20]
00010884(8): MOV qword ptr [0x1d8 + RSP],R12
0001088c(8): MOV qword ptr [0x1d0 + RSP],R13
00010894(8): MOV qword ptr [0x1c8 + RSP],RAX
0001089c(9): CMP qword ptr [0x270 + RSP],0x0
000108a5(6): JZ 0x00010160
000108ab(9): CMP qword ptr [0x270 + RSP],0x1
000108b4(6): JZ 0x00010cd8
000108ba(8): MOV RSI,qword ptr [0xb8 + RSP]
000108c2(8): MOV RCX,qword ptr [0x270 + RSP]
000108ca(7): MOV RDX,-0x1
000108d1(4): SHL RCX,0x4
000108d5(4): LEA RAX,[RSI + 0x10]
000108d9(3): ADD RCX,RSI
000108dc(4): MOV qword ptr [RAX + 0x8],RDX
000108e0(3): MOV qword ptr [RAX],RDX
000108e3(4): ADD RAX,0x10
000108e7(3): CMP RCX,RAX
000108ea(2): JNZ 0x000108dc
000108ec(8): MOV RDI,qword ptr [0xb8 + RSP]
000108f4(8): MOV RAX,qword ptr [0x1c8 + RSP]
000108fc(4): MOV qword ptr [RDI + 0x8],RAX
00010900(5): MOV RAX,qword ptr [RSP + 0x48]
00010905(7): MOV qword ptr [RDI],0x0
0001090c(4): TEST byte ptr [RAX + 0x38],0x10
00010910(6): JNZ 0x00010cf3
00010916(9): CMP qword ptr [0x270 + RSP],0x1
0001091f(6): JZ 0x00010cf3
00010925(5): MOV RAX,qword ptr [RSP + 0x38]
0001092a(3): XOR R8D,R8D
0001092d(7): TEST byte ptr [0xb0 + RAX],0x1
00010934(2): JZ 0x00010945
00010936(3): XOR R8D,R8D
00010939(8): CMP qword ptr [0x98 + RAX],0x0
00010941(4): SETG R8B
00010945(8): MOV RBX,qword ptr [0xb8 + RSP]
0001094d(8): MOV RDX,qword ptr [0x270 + RSP]
00010955(4): MOV RSI,qword ptr [RSP]
00010959(5): MOV RDI,qword ptr [RSP + 0x48]
0001095e(3): MOV RCX,RBX
00010961(5): CALL 0x0000dd60
00010966(2): TEST EAX,EAX
00010968(6): JNZ 0x00010c3d
0001096e(3): MOV RAX,qword ptr [RBX]
00010971(9): MOVZX R11D,byte ptr [0x1ac + RSP]
0001097a(8): MOV R10,qword ptr [0x150 + RSP]
00010982(2): XOR ECX,ECX
00010984(8): MOV R9,qword ptr [0x138 + RSP]
0001098c(8): MOV R8,qword ptr [0x158 + RSP]
00010994(8): MOV RDI,qword ptr [0xd8 + RSP]
0001099c(8): MOV RDX,qword ptr [0xb8 + RSP]
000109a4(2): JMP 0x000109a9
000109a6(3): MOV RAX,qword ptr [RDX]
000109a9(4): CMP RAX,-0x1
000109ad(2): JZ 0x000109c9
000109af(3): TEST R11B,R11B
000109b2(4): MOV RSI,qword ptr [RDX + 0x8]
000109b6(6): JNZ 0x00010cfa
000109bc(3): ADD RAX,RDI
000109bf(3): ADD RSI,RDI
000109c2(3): MOV qword ptr [RDX],RAX
000109c5(4): MOV qword ptr [RDX + 0x8],RSI
000109c9(4): ADD RCX,0x1
000109cd(4): ADD RDX,0x10
000109d1(8): CMP RCX,qword ptr [0x270 + RSP]
000109d9(2): JNZ 0x000109a6
000109db(9): CMP qword ptr [0x98 + RSP],0x0
000109e4(2): JLE 0x00010a25
000109e6(8): MOV RDX,qword ptr [0x98 + RSP]
000109ee(8): MOV RDI,qword ptr [0xb8 + RSP]
000109f6(3): MOV RAX,RCX
000109f9(4): SHL RAX,0x4
000109fd(3): ADD RDX,RCX
00010a00(5): LEA RAX,[RDI + RAX*0x1 + 0x8]
00010a05(4): SHL RDX,0x4
00010a09(5): LEA RSI,[RDI + RDX*0x1 + 0x8]
00010a0e(7): MOV RDX,-0x1
00010a15(4): MOV qword ptr [RAX + -0x8],RDX
00010a19(3): MOV qword ptr [RAX],RDX
00010a1c(4): ADD RAX,0x10
00010a20(3): CMP RSI,RAX
00010a23(2): JNZ 0x00010a15
00010a25(5): MOV RAX,qword ptr [RSP + 0x38]
00010a2a(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010a32(7): MOV R9,qword ptr [0xe0 + RAX]
00010a39(3): TEST R9,R9
00010a3c(6): JZ 0x00010168
00010a42(8): MOV R10,qword ptr [0xb8 + RSP]
00010a4a(3): XOR R8D,R8D
00010a4d(4): LEA RDX,[R10 + 0x10]
00010a51(2): JMP 0x00010a89
00010a53(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
00010a58(3): CMP RAX,R8
00010a5b(2): JZ 0x00010a82
00010a5d(4): ADD RAX,0x1
00010a61(4): SHL RAX,0x4
00010a65(4): MOV RAX,qword ptr [R10 + RAX*0x1]
00010a69(3): MOV qword ptr [RDX],RAX
00010a6c(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
00010a71(4): ADD RAX,0x1
00010a75(4): SHL RAX,0x4
00010a79(5): MOV RAX,qword ptr [R10 + RAX*0x1 + 0x8]
00010a7e(4): MOV qword ptr [RDX + 0x8],RAX
00010a82(4): ADD RDX,0x10
00010a86(3): MOV R8,RSI
00010a89(4): LEA RSI,[R8 + 0x1]
00010a8d(3): CMP RSI,RCX
00010a90(2): JNZ 0x00010a53
00010a92(5): JMP 0x00010168
00010aa0(4): MOV RDI,qword ptr [RSP]
00010aa4(5): CALL 0x00008a80
00010aa9(8): MOV RDI,qword ptr [0x218 + RSP]
00010ab1(5): CALL 0x000019d0
00010ab6(8): MOV RDI,qword ptr [0x1f8 + RSP]
00010abe(5): CALL 0x000019d0
00010ac3(5): JMP 0x00010180
00010ac8(5): MOV RAX,qword ptr [RSP + 0x38]
00010acd(7): TEST byte ptr [0xb0 + RAX],0x2
00010ad4(6): JNZ 0x0000f9a9
00010ada(12): MOV qword ptr [0x1d8 + RSP],0x0
00010ae6(5): JMP 0x0000f9e5
00010aeb(3): MOV RDI,R12
00010aee(5): CALL 0x000019d0
00010af3(3): MOV RDI,RBP
00010af6(5): CALL 0x000019d0
00010afb(5): JMP 0x00010540
00010b00(8): MOV qword ptr [0xd8 + RSP],RAX
00010b08(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010b10(8): MOV dword ptr [RSP + 0x5c],0x1
00010b18(5): JMP 0x00010168
00010b1d(3): TEST RAX,RAX
00010b20(3): MOV R13,RAX
00010b23(6): JNZ 0x0000fd18
00010b29(5): JMP 0x0000fe64
00010b30(3): MOV R13,RAX
00010b33(5): JMP 0x0000fd18
00010b38(3): CMP EAX,0xc
00010b3b(6): JZ 0x00010680
00010b41(7): LEA RCX,[0x17050]
00010b48(7): LEA RSI,[0x16a80]
00010b4f(7): LEA RDI,[0x16b34]
00010b56(5): MOV EDX,0x46c
00010b5b(5): CALL 0x00001b50
00010b60(5): CMP byte ptr [R14 + 0x68],0x0
00010b65(2): JS 0x00010bd6
00010b67(4): MOV ESI,dword ptr [RSP + 0x58]
00010b6b(5): MOV RAX,qword ptr [RSP + 0x8]
00010b70(2): TEST ESI,ESI
00010b72(5): MOV qword ptr [RSP + 0x20],RAX
00010b77(6): JZ 0x0000fe76
00010b7d(9): MOV qword ptr [RSP + 0x30],0x1
00010b86(5): JMP 0x0000fcdd
00010b8b(3): MOV RDI,RBX
00010b8e(8): MOV dword ptr [RSP + 0x5c],0xc
00010b96(5): JMP 0x00010168
00010b9b(4): LEA RBX,[R14 + 0x10]
00010b9f(4): LEA RBP,[R14 + 0x18]
00010ba3(4): MOV RDI,qword ptr [RSP]
00010ba7(2): XOR ECX,ECX
00010ba9(3): MOV RDX,RBP
00010bac(3): MOV RSI,RBX
00010baf(5): CALL 0x0000a880
00010bb4(2): TEST EAX,EAX
00010bb6(7): MOV dword ptr [0xd0 + RSP],EAX
00010bbd(2): JNZ 0x00010c08
00010bbf(5): MOVZX EAX,byte ptr [R14 + 0x68]
00010bc4(2): TEST AL,0x40
00010bc6(6): JNZ 0x00010cb0
00010bcc(5): MOV byte ptr [RSP + 0x18],0x0
00010bd1(5): JMP 0x0000fcc3
00010bd6(4): MOV RSI,qword ptr [R14 + 0x10]
00010bda(5): MOV RCX,qword ptr [RSP + 0x8]
00010bdf(4): LEA RDX,[R14 + 0x18]
00010be3(4): MOV RDI,qword ptr [RSP]
00010be7(5): CALL 0x0000abd0
00010bec(3): TEST RAX,RAX
00010bef(5): MOV qword ptr [RSP + 0x30],RAX
00010bf4(6): JZ 0x0000fcdd
00010bfa(5): JMP 0x00010b67
00010bff(4): MOV R14,qword ptr [RBX + 0x60]
00010c03(5): JMP 0x00010620
00010c08(2): CDQE
00010c0a(5): MOV qword ptr [RSP + 0x20],RAX
00010c0f(5): JMP 0x0000fe76
00010c14(5): MOV R14,qword ptr [RSP + 0x18]
00010c19(3): MOV EAX,R15D
00010c1c(3): MOV RDI,R12
00010c1f(4): MOV dword ptr [RSP + 0x8],EAX
00010c23(5): CALL 0x000019d0
00010c28(3): MOV RDI,R14
00010c2b(5): CALL 0x000019d0
00010c30(4): MOV EAX,dword ptr [RSP + 0x8]
00010c34(3): CMP EAX,0x1
00010c37(6): JZ 0x00010540
00010c3d(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010c45(4): MOV dword ptr [RSP + 0x5c],EAX
00010c49(5): JMP 0x00010168
00010c50(2): TEST AL,0x4
00010c52(6): JZ 0x0000fc8e
00010c58(4): MOV RDX,qword ptr [R14 + 0x50]
00010c5c(5): MOV RDI,qword ptr [RSP + 0x28]
00010c61(2): MOV ECX,EAX
00010c63(3): MOV RSI,RBX
00010c66(5): CALL 0x00009f40
00010c6b(3): MOV R14,RAX
00010c6e(5): JMP 0x00010620
00010c73(5): MOV R15,qword ptr [RSP + 0x10]
00010c78(5): MOV RCX,qword ptr [RSP + 0x8]
00010c7d(3): MOV RDX,RBP
00010c80(3): MOV RSI,R12
00010c83(5): MOV qword ptr [RSP + 0x20],R14
00010c88(3): MOV RDI,R15
00010c8b(5): CALL 0x0000a400
00010c90(3): MOV RDI,RBP
00010c93(4): MOV dword ptr [RSP + 0x8],EAX
00010c97(5): CALL 0x000019d0
00010c9c(4): MOV EAX,dword ptr [RSP + 0x8]
00010ca0(2): TEST EAX,EAX
00010ca2(6): JZ 0x00010872
00010ca8(3): XOR R14D,R14D
00010cab(5): JMP 0x00010c1c
00010cb0(4): MOV RDI,qword ptr [RSP]
00010cb4(3): MOV RDX,RBP
00010cb7(3): MOV RSI,RBX
00010cba(5): CALL 0x0000e7f0
00010cbf(2): TEST EAX,EAX
00010cc1(7): MOV dword ptr [0xd0 + RSP],EAX
00010cc8(6): JNZ 0x00010c08
00010cce(5): MOVZX EAX,byte ptr [R14 + 0x68]
00010cd3(5): JMP 0x00010bcc
00010cd8(8): MOV RSI,qword ptr [0xb8 + RSP]
00010ce0(8): MOV RAX,qword ptr [0x1c8 + RSP]
00010ce8(7): MOV qword ptr [RSI],0x0
00010cef(4): MOV qword ptr [RSI + 0x8],RAX
00010cf3(2): XOR EAX,EAX
00010cf5(5): JMP 0x00010971
00010cfa(3): CMP R10,RAX
00010cfd(2): JZ 0x00010d1c
00010cff(4): MOV RAX,qword ptr [R9 + RAX*0x8]
00010d03(3): CMP R10,RSI
00010d06(3): MOV qword ptr [RDX],RAX
00010d09(2): JZ 0x00010d14
00010d0b(4): MOV RSI,qword ptr [R9 + RSI*0x8]
00010d0f(5): JMP 0x000109bc
00010d14(3): MOV RSI,R8
00010d17(5): JMP 0x000109bc
00010d1c(3): MOV RAX,R8
00010d1f(2): JMP 0x00010d03
00010d21(8): MOV qword ptr [0xd8 + RSP],RBP
00010d29(5): JMP 0x0000fbe8
00010d2e(8): MOV qword ptr [0x168 + RSP],RAX
00010d36(5): JMP 0x0000fe64
00010d3b(5): CALL 0x00001ad0
00010d40(2): PUSH R15
00010d42(2): PUSH R14
00010d44(3): MOV RAX,RDI
00010d47(2): PUSH R13
00010d49(2): PUSH R12
00010d4b(3): MOV R13,RSI
00010d4e(1): PUSH RBP
00010d4f(1): PUSH RBX
00010d50(3): MOV RBP,RDX
00010d53(3): MOV RBX,RCX
00010d56(8): LEA RCX,[RDX*0x8]
00010d5e(7): SUB RSP,0xa8
00010d65(7): MOV R12,qword ptr [0x98 + RAX]
00010d6c(7): MOV RAX,qword ptr [0xb8 + RAX]
00010d73(5): MOV qword ptr [RSP + 0x8],RDI
00010d78(5): MOV qword ptr [RSP + 0x18],RCX
00010d7d(9): MOV RDI,qword ptr FS:[0x28]
00010d86(8): MOV qword ptr [0x98 + RSP],RDI
00010d8e(2): XOR EDI,EDI
00010d90(4): MOV RDX,qword ptr [RAX + RDX*0x8]
00010d94(8): MOV dword ptr [RSP + 0x5c],0x0
00010d9c(4): MOV RCX,qword ptr [RBX + 0x8]
00010da0(3): TEST RDX,RDX
00010da3(6): JZ 0x00010ff8
00010da9(4): LEA RDI,[RDX + 0x8]
00010dad(3): TEST RCX,RCX
00010db0(5): MOV qword ptr [RSP + 0x10],RDI
00010db5(2): JNZ 0x00010e08
00010db7(3): MOV RDX,qword ptr [RSI]
00010dba(8): MOV qword ptr [RDX + RBP*0x8],0x0
00010dc2(4): MOV RDX,qword ptr [RAX + RBP*0x8]
00010dc6(2): XOR EAX,EAX
00010dc8(4): TEST byte ptr [RDX + 0x68],0x40
00010dcc(6): JNZ 0x00010eaf
00010dd2(6): NOP word ptr [RAX + RAX*0x1]
00010dd8(8): MOV RDI,qword ptr [0x98 + RSP]
00010de0(9): XOR RDI,qword ptr FS:[0x28]
00010de9(6): JNZ 0x0001158b
00010def(7): ADD RSP,0xa8
00010df6(1): POP RBX
00010df7(1): POP RBP
00010df8(2): POP R12
00010dfa(2): POP R13
00010dfc(2): POP R14
00010dfe(2): POP R15
00010e00(1): RET
00010e08(5): LEA RDI,[RSP + 0x60]
00010e0d(3): MOV RDX,RBX
00010e10(3): MOV RSI,R12
00010e13(8): MOV dword ptr [RSP + 0x60],0x0
00010e1b(5): CALL 0x0000a200
00010e20(3): MOV RDX,RAX
00010e23(4): MOV EAX,dword ptr [RSP + 0x60]
00010e27(2): TEST EAX,EAX
00010e29(2): JNZ 0x00010dd8
00010e2b(4): MOV R15,qword ptr [RDX + 0x38]
00010e2f(4): LEA R14,[RDX + 0x38]
00010e33(3): TEST R15,R15
00010e36(6): JZ 0x00011040
00010e3c(5): MOV RSI,qword ptr [RSP + 0x10]
00010e41(3): MOV RDX,R14
00010e44(3): MOV RDI,RBX
00010e47(5): CALL 0x00009700
00010e4c(2): TEST EAX,EAX
00010e4e(4): MOV dword ptr [RSP + 0x5c],EAX
00010e52(2): JNZ 0x00010dd8
00010e54(5): CMP qword ptr [R13 + 0x28],0x0
00010e59(6): JNZ 0x000110d0
00010e5f(5): MOV R14,qword ptr [RSP + 0x18]
00010e64(4): ADD R14,qword ptr [R13]
00010e68(5): LEA RDI,[RSP + 0x5c]
00010e6d(3): MOV RDX,RBX
00010e70(3): MOV RSI,R12
00010e73(5): CALL 0x0000a200
00010e78(3): MOV qword ptr [R14],RAX
00010e7b(4): MOV EAX,dword ptr [RSP + 0x5c]
00010e7f(2): TEST EAX,EAX
00010e81(6): JNZ 0x00010dd8
00010e87(6): CMP qword ptr [RSP + 0x10],0x0
00010e8d(6): JZ 0x00010dd8
00010e93(5): MOV RAX,qword ptr [RSP + 0x8]
00010e98(7): MOV RAX,qword ptr [0xb8 + RAX]
00010e9f(4): MOV RDX,qword ptr [RAX + RBP*0x8]
00010ea3(2): XOR EAX,EAX
00010ea5(4): TEST byte ptr [RDX + 0x68],0x40
00010ea9(6): JZ 0x00010dd8
00010eaf(5): MOV RAX,qword ptr [RSP + 0x8]
00010eb4(2): XOR EBX,EBX
00010eb6(7): MOV RSI,qword ptr [0xc8 + RAX]
00010ebd(3): MOV RDX,RSI
00010ec0(3): CMP RBX,RDX
00010ec3(2): JGE 0x00010f23
00010ec5(4): LEA RAX,[RBX + RDX*0x1]
00010ec9(3): MOV RCX,RAX
00010ecc(4): SHR RCX,0x3f
00010ed0(3): ADD RCX,RAX
00010ed3(5): MOV RAX,qword ptr [RSP + 0x8]
00010ed8(3): SAR RCX,1
00010edb(7): MOV RDI,qword ptr [0xd8 + RAX]
00010ee2(4): LEA RAX,[RCX + RCX*0x4]
00010ee6(5): CMP RBP,qword ptr [RDI + RAX*0x8 + 0x8]
00010eeb(2): JLE 0x00010f1e
00010eed(5): JMP 0x00011027
00010ef8(4): LEA RDX,[RBX + RCX*0x1]
00010efc(3): MOV RAX,RDX
00010eff(4): SHR RAX,0x3f
00010f03(3): ADD RAX,RDX
00010f06(3): SAR RAX,1
00010f09(4): LEA RDX,[RAX + RAX*0x4]
00010f0d(3): MOV R8,RAX
00010f10(5): CMP RBP,qword ptr [RDI + RDX*0x8 + 0x8]
00010f15(6): JG 0x00011030
00010f1b(3): MOV RCX,RAX
00010f1e(3): CMP RBX,RCX
00010f21(2): JL 0x00010ef8
00010f23(3): CMP RSI,RBX
00010f26(6): JLE 0x00011020
00010f2c(4): LEA RAX,[RBX + RBX*0x4]
00010f30(8): LEA RSI,[RAX*0x8]
00010f38(5): MOV RAX,qword ptr [RSP + 0x8]
00010f3d(5): MOV qword ptr [RSP + 0x40],RSI
00010f42(7): MOV RAX,qword ptr [0xd8 + RAX]
00010f49(5): CMP RBP,qword ptr [RAX + RSI*0x1 + 0x8]
00010f4e(6): JNZ 0x00011020
00010f54(4): CMP RBX,-0x1
00010f58(6): JZ 0x00011020
00010f5e(5): MOV RAX,qword ptr [RSP + 0x8]
00010f63(9): MOV qword ptr [RSP + 0x60],0x0
00010f6c(7): MOV R12,qword ptr [0x98 + RAX]
00010f73(5): MOV RAX,qword ptr [RSP + 0x10]
00010f78(5): CMP qword ptr [RAX + 0x8],0x0
00010f7d(6): JLE 0x00011020
00010f83(5): LEA RAX,[RSP + 0x60]
00010f88(9): MOV qword ptr [RSP + 0x20],0x0
00010f91(5): MOV qword ptr [RSP + 0x48],RBX
00010f96(3): MOV R15,R13
00010f99(5): MOV qword ptr [RSP + 0x38],RAX
00010f9e(2): JMP 0x00010fc2
00010fa0(2): CMP AL,0x4
00010fa2(6): JZ 0x00011328
00010fa8(5): MOV RCX,qword ptr [RSP + 0x10]
00010fad(6): ADD qword ptr [RSP + 0x20],0x1
00010fb3(5): MOV RAX,qword ptr [RSP + 0x20]
00010fb8(4): CMP RAX,qword ptr [RCX + 0x8]
00010fbc(6): JGE 0x0001157b
00010fc2(5): MOV RAX,qword ptr [RSP + 0x10]
00010fc7(5): MOV RDI,qword ptr [RSP + 0x20]
00010fcc(4): MOV RAX,qword ptr [RAX + 0x10]
00010fd0(4): MOV R14,qword ptr [RAX + RDI*0x8]
00010fd4(3): MOV RAX,R14
00010fd7(4): SHL RAX,0x4
00010fdb(4): ADD RAX,qword ptr [R12]
00010fdf(4): CMP R14,qword ptr [R15 + 0x10]
00010fe3(4): MOVZX EAX,byte ptr [RAX + 0x8]
00010fe7(2): JNZ 0x00010fa0
00010fe9(4): CMP RBP,qword ptr [R15 + 0x18]
00010fed(2): JNZ 0x00010fa0
00010fef(2): JMP 0x00010fa8
00010ff8(8): LEA R14,[RBP*0x8]
00011000(3): ADD R14,qword ptr [RSI]
00011003(3): TEST RCX,RCX
00011006(6): JNZ 0x000110c0
0001100c(7): MOV qword ptr [R14],0x0
00011013(2): XOR EAX,EAX
00011015(5): JMP 0x00010dd8
00011020(2): XOR EAX,EAX
00011022(5): JMP 0x00010dd8
00011027(3): MOV R8,RCX
0001102a(3): MOV RCX,RDX
0001102d(3): NOP dword ptr [RAX]
00011030(4): LEA RBX,[R8 + 0x1]
00011034(3): MOV RDX,RCX
00011037(5): JMP 0x00010ec0
00011040(4): MOV RDI,qword ptr [RBX + 0x8]
00011044(8): MOV qword ptr [RDX + 0x40],0x0
0001104c(5): MOV qword ptr [RSP + 0x20],RDX
00011051(4): MOV qword ptr [RDX + 0x38],RDI
00011055(4): SHL RDI,0x3
00011059(5): CALL 0x00001c20
0001105e(5): MOV RDX,qword ptr [RSP + 0x20]
00011063(3): TEST RAX,RAX
00011066(4): MOV qword ptr [RDX + 0x48],RAX
0001106a(2): JZ 0x000110b3
0001106c(5): CMP qword ptr [RBX + 0x8],0x0
00011071(8): MOV dword ptr [RSP + 0x60],0x0
00011079(2): JG 0x0001108e
0001107b(5): JMP 0x00010e3c
00011080(4): ADD R15,0x1
00011084(4): CMP R15,qword ptr [RBX + 0x8]
00011088(6): JGE 0x00010e3c
0001108e(4): MOV RAX,qword ptr [RBX + 0x10]
00011092(3): MOV RDI,R14
00011095(4): MOV RAX,qword ptr [RAX + R15*0x8]
00011099(4): LEA RDX,[RAX + RAX*0x2]
0001109d(5): MOV RAX,qword ptr [R12 + 0x38]
000110a2(4): LEA RSI,[RAX + RDX*0x8]
000110a6(5): CALL 0x00009110
000110ab(2): TEST EAX,EAX
000110ad(4): MOV dword ptr [RSP + 0x60],EAX
000110b1(2): JZ 0x00011080
000110b3(5): MOV EAX,0xc
000110b8(5): JMP 0x00010dd8
000110c0(9): MOV qword ptr [RSP + 0x10],0x0
000110c9(5): JMP 0x00010e68
000110d0(5): MOV RAX,qword ptr [RSP + 0x8]
000110d5(7): MOV RAX,qword ptr [0xd8 + RAX]
000110dc(5): MOV qword ptr [RSP + 0x20],RAX
000110e1(6): JLE 0x000111bb
000110e7(3): XOR R15D,R15D
000110ea(6): NOP word ptr [RAX + RAX*0x1]
000110f0(4): MOV RAX,qword ptr [R13 + 0x30]
000110f4(5): MOV RDI,qword ptr [RSP + 0x20]
000110f9(4): MOV RAX,qword ptr [RAX + R15*0x8]
000110fd(4): LEA RAX,[RAX + RAX*0x4]
00011101(4): LEA RDX,[RDI + RAX*0x8]
00011105(4): CMP RBP,qword ptr [RDX + 0x10]
00011109(6): JLE 0x000111ad
0001110f(4): CMP RBP,qword ptr [RDX + 0x8]
00011113(6): JG 0x000111ad
00011119(3): MOV RCX,qword ptr [RDX]
0001111c(4): MOV RAX,qword ptr [R12]
00011120(4): MOV RSI,qword ptr [RBX + 0x8]
00011124(4): SHL RCX,0x4
00011128(4): CMP RBP,qword ptr [RDX + 0x18]
0001112c(4): MOV R8,qword ptr [RAX + RCX*0x1]
00011130(6): JZ 0x000111d0
00011136(3): XOR R14D,R14D
00011139(3): TEST RSI,RSI
0001113c(2): JLE 0x000111ad
0001113e(5): MOV qword ptr [RSP + 0x28],RBP
00011143(3): MOV RBP,R8
00011146(2): JMP 0x0001115e
00011150(4): ADD R14,0x1
00011154(4): CMP R14,qword ptr [RBX + 0x8]
00011158(2): JGE 0x000111a8
0001115a(4): MOV RAX,qword ptr [R12]
0001115e(4): MOV RDX,qword ptr [RBX + 0x10]
00011162(4): MOV RSI,qword ptr [RDX + R14*0x8]
00011166(3): MOV RDX,RSI
00011169(4): SHL RDX,0x4
0001116d(3): ADD RAX,RDX
00011170(4): MOVZX EDX,byte ptr [RAX + 0x8]
00011174(3): SUB EDX,0x8
00011177(3): CMP EDX,0x1
0001117a(2): JA 0x00011150
0001117c(3): CMP RBP,qword ptr [RAX]
0001117f(2): JNZ 0x00011150
00011181(5): MOV RCX,qword ptr [RSP + 0x10]
00011186(3): MOV RDX,RBX
00011189(3): MOV RDI,R12
0001118c(5): CALL 0x0000b440
00011191(2): TEST EAX,EAX
00011193(6): JNZ 0x00010dd8
00011199(4): ADD R14,0x1
0001119d(4): CMP R14,qword ptr [RBX + 0x8]
000111a1(2): JL 0x0001115a
000111a3(5): NOP dword ptr [RAX + RAX*0x1]
000111a8(5): MOV RBP,qword ptr [RSP + 0x28]
000111ad(4): ADD R15,0x1
000111b1(4): CMP R15,qword ptr [R13 + 0x28]
000111b5(6): JL 0x000110f0
000111bb(8): MOV dword ptr [RSP + 0x5c],0x0
000111c3(5): JMP 0x00010e5f
000111d0(3): TEST RSI,RSI
000111d3(2): JLE 0x000111ad
000111d5(4): MOV R10,qword ptr [RBX + 0x10]
000111d9(7): MOV R9,-0x1
000111e0(4): LEA R11,[R10 + RSI*0x8]
000111e4(3): MOV RCX,R10
000111e7(3): MOV RSI,R9
000111ea(2): JMP 0x00011206
000111f0(4): CMP R14D,0x9
000111f4(2): JNZ 0x000111fd
000111f6(3): CMP R8,qword ptr [RDX]
000111f9(4): CMOVZ R9,RDI
000111fd(4): ADD RCX,0x8
00011201(3): CMP R11,RCX
00011204(2): JZ 0x0001122e
00011206(3): MOV RDI,qword ptr [RCX]
00011209(3): MOV RDX,RDI
0001120c(4): SHL RDX,0x4
00011210(3): ADD RDX,RAX
00011213(5): MOVZX R14D,byte ptr [RDX + 0x8]
00011218(4): CMP R14D,0x8
0001121c(2): JNZ 0x000111f0
0001121e(3): CMP R8,qword ptr [RDX]
00011221(4): CMOVZ RSI,RDI
00011225(4): ADD RCX,0x8
00011229(3): CMP R11,RCX
0001122c(2): JNZ 0x00011206
0001122e(3): TEST RSI,RSI
00011231(3): MOV R14,R9
00011234(5): MOV qword ptr [RSP + 0x28],R9
00011239(6): JS 0x00011300
0001123f(5): MOV RCX,qword ptr [RSP + 0x10]
00011244(3): MOV RDX,RBX
00011247(3): MOV RDI,R12
0001124a(5): CALL 0x0000b440
0001124f(2): TEST EAX,EAX
00011251(6): JNZ 0x00010dd8
00011257(3): TEST R14,R14
0001125a(6): JS 0x000111ad
00011260(5): CMP qword ptr [RBX + 0x8],0x0
00011265(6): JLE 0x000111ad
0001126b(4): MOV R10,qword ptr [RBX + 0x10]
0001126f(3): XOR R14D,R14D
00011272(5): MOV qword ptr [RSP + 0x30],RBP
00011277(3): MOV RBP,R14
0001127a(5): MOV R14,qword ptr [RSP + 0x28]
0001127f(2): JMP 0x0001129a
00011288(4): ADD RBP,0x1
0001128c(4): CMP RBP,qword ptr [RBX + 0x8]
00011290(6): JGE 0x00011318
00011296(4): MOV R10,qword ptr [RBX + 0x10]
0001129a(4): MOV R10,qword ptr [R10 + RBP*0x8]
0001129e(5): MOV RAX,qword ptr [R12 + 0x38]
000112a3(3): MOV RDX,R14
000112a6(4): LEA R9,[R10 + R10*0x2]
000112aa(4): SHL R9,0x3
000112ae(3): ADD RAX,R9
000112b1(4): MOV RDI,qword ptr [RAX + 0x8]
000112b5(4): LEA RSI,[RAX + 0x10]
000112b9(5): CALL 0x00008bf0
000112be(3): TEST RAX,RAX
000112c1(2): JNZ 0x00011288
000112c3(5): ADD R9,qword ptr [R12 + 0x30]
000112c8(4): MOV RDI,qword ptr [R9 + 0x8]
000112cc(4): LEA RSI,[R9 + 0x10]
000112d0(5): CALL 0x00008bf0
000112d5(3): TEST RAX,RAX
000112d8(2): JNZ 0x00011288
000112da(5): MOV RCX,qword ptr [RSP + 0x10]
000112df(3): MOV RDX,RBX
000112e2(3): MOV RSI,R10
000112e5(3): MOV RDI,R12
000112e8(5): CALL 0x0000b440
000112ed(2): TEST EAX,EAX
000112ef(6): JNZ 0x00010dd8
000112f5(4): SUB RBP,0x1
000112f9(2): JMP 0x00011288
00011300(6): CMP qword ptr [RSP + 0x28],0x0
00011306(6): JNS 0x0001126f
0001130c(5): JMP 0x000111ad
00011318(5): MOV RBP,qword ptr [RSP + 0x30]
0001131d(5): JMP 0x000111ad
00011328(5): MOV RAX,qword ptr [RSP + 0x8]
0001132d(5): MOV R13,qword ptr [RSP + 0x40]
00011332(5): MOV RBX,qword ptr [RSP + 0x48]
00011337(7): ADD R13,qword ptr [0xd8 + RAX]
0001133e(4): LEA RAX,[R14 + R14*0x2]
00011342(4): SHL RAX,0x3
00011346(5): MOV qword ptr [RSP + 0x30],RAX
0001134b(8): LEA RAX,[R14*0x8]
00011353(5): MOV qword ptr [RSP + 0x28],RAX
00011358(3): MOV RAX,R15
0001135b(3): MOV R15,R13
0001135e(3): MOV R13,RBX
00011361(3): MOV RBX,RAX
00011364(5): JMP 0x000114ce
00011370(4): MOV RAX,qword ptr [R15 + 0x18]
00011374(4): SUB RAX,qword ptr [R15 + 0x10]
00011378(3): TEST RAX,RAX
0001137b(5): LEA R9,[RBP + RAX*0x1]
00011380(6): JZ 0x000114e0
00011386(5): MOV RAX,qword ptr [R12 + 0x18]
0001138b(5): MOV RSI,qword ptr [RSP + 0x28]
00011390(4): MOV R10,qword ptr [RAX + RSI*0x1]
00011394(4): CMP R9,qword ptr [RBX + 0x18]
00011398(6): JG 0x000114d7
0001139e(3): MOV RAX,qword ptr [RBX]
000113a1(4): MOV RAX,qword ptr [RAX + R9*0x8]
000113a5(3): TEST RAX,RAX
000113a8(6): JZ 0x000114d7
000113ae(4): MOV RDI,qword ptr [RAX + 0x10]
000113b2(4): LEA RSI,[RAX + 0x18]
000113b6(3): MOV RDX,R10
000113b9(5): CALL 0x00008bf0
000113be(3): TEST RAX,RAX
000113c1(6): JZ 0x000114d7
000113c7(4): SUB RSP,0x8
000113cb(4): LEA RDX,[RBX + 0x30]
000113cf(4): LEA RSI,[RBX + 0x28]
000113d3(2): PUSH R9
000113d5(5): MOV RDI,qword ptr [RSP + 0x18]
000113da(3): MOV RCX,R14
000113dd(3): MOV R9,R10
000113e0(3): MOV R8,RBP
000113e3(5): CALL 0x00008ea0
000113e8(2): TEST AL,AL
000113ea(1): POP RDX
000113eb(1): POP RCX
000113ec(6): JNZ 0x000114d7
000113f2(6): CMP qword ptr [RSP + 0x60],0x0
000113f8(6): JZ 0x00011508
000113fe(5): MOV RAX,qword ptr [RSP + 0x38]
00011403(3): MOV RSI,R13
00011406(5): MOV qword ptr [RSP + 0x70],R14
0001140b(5): MOV qword ptr [RSP + 0x78],RBP
00011410(4): LEA RDI,[RAX + 0x20]
00011414(5): CALL 0x000076b0
00011419(2): TEST AL,AL
0001141b(6): JZ 0x00011574
00011421(5): MOV RDI,qword ptr [RSP + 0x18]
00011426(5): MOV RAX,qword ptr [RSP + 0x60]
0001142b(5): MOV RSI,qword ptr [RSP + 0x38]
00011430(4): MOV R15,qword ptr [RAX + RDI*0x1]
00011434(5): MOV RDI,qword ptr [RSP + 0x8]
00011439(5): CALL 0x0000f2d0
0001143e(2): TEST EAX,EAX
00011440(6): JNZ 0x0001154e
00011446(4): MOV RSI,qword ptr [RBX + 0x8]
0001144a(5): MOV RDX,qword ptr [RSP + 0x60]
0001144f(3): TEST RSI,RSI
00011452(2): JZ 0x0001146d
00011454(4): LEA RCX,[RBP + 0x1]
00011458(3): MOV RDI,R12
0001145b(5): CALL 0x0000a400
00011460(2): TEST EAX,EAX
00011462(6): JNZ 0x0001154e
00011468(5): MOV RDX,qword ptr [RSP + 0x60]
0001146d(5): MOV R11,qword ptr [RSP + 0x38]
00011472(5): MOV RAX,qword ptr [RSP + 0x18]
00011477(8): MOV RDI,qword ptr [0x88 + RSP]
0001147f(4): LEA R9,[R11 + 0x30]
00011483(4): MOV qword ptr [RDX + RAX*0x1],R15
00011487(3): MOV RDX,R13
0001148a(3): MOV RSI,R9
0001148d(5): CALL 0x00008bf0
00011492(4): SUB RAX,0x1
00011496(3): MOV RDX,RAX
00011499(2): JS 0x000114a7
0001149b(4): LEA RDI,[R11 + 0x28]
0001149f(3): MOV RSI,R9
000114a2(5): CALL 0x00008d70
000114a7(5): MOV RCX,qword ptr [RSP + 0x8]
000114ac(5): LEA RAX,[R13 + R13*0x4]
000114b1(7): MOV RDX,qword ptr [0xd8 + RCX]
000114b8(4): LEA RAX,[RDX + RAX*0x8]
000114bc(4): NOP dword ptr [RAX]
000114c0(4): ADD R13,0x1
000114c4(4): CMP byte ptr [RAX + 0x20],0x0
000114c8(4): LEA R15,[RAX + 0x28]
000114cc(2): JZ 0x00011500
000114ce(3): CMP R14,qword ptr [R15]
000114d1(6): JZ 0x00011370
000114d7(3): MOV RAX,R15
000114da(2): JMP 0x000114c0
000114e0(5): MOV RAX,qword ptr [R12 + 0x28]
000114e5(5): MOV RDI,qword ptr [RSP + 0x30]
000114ea(5): MOV RAX,qword ptr [RAX + RDI*0x1 + 0x10]
000114ef(3): MOV R10,qword ptr [RAX]
000114f2(5): JMP 0x00011394
00011500(3): MOV R15,RBX
00011503(5): JMP 0x00010fa8
00011508(4): MOV RAX,qword ptr [RBX + 0x30]
0001150c(4): LEA RSI,[RBX + 0x20]
00011510(4): MOVDQA XMM0,xmmword ptr [RBX]
00011514(8): MOV qword ptr [0x90 + RSP],RAX
0001151c(5): MOV RAX,qword ptr [RSP + 0x38]
00011521(5): MOVAPS xmmword ptr [RSP + 0x60],XMM0
00011526(4): LEA RDI,[RAX + 0x20]
0001152a(5): MOVDQA XMM0,xmmword ptr [RBX + 0x10]
0001152f(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
00011534(5): MOVDQA XMM0,xmmword ptr [RBX + 0x20]
00011539(8): MOVAPS xmmword ptr [0x80 + RSP],XMM0
00011541(5): CALL 0x00009d50
00011546(2): TEST EAX,EAX
00011548(6): JZ 0x000113fe
0001154e(6): CMP qword ptr [RSP + 0x60],0x0
00011554(6): JZ 0x00010dd8
0001155a(8): MOV RDI,qword ptr [0x90 + RSP]
00011562(4): MOV dword ptr [RSP + 0x8],EAX
00011566(5): CALL 0x000019d0
0001156b(4): MOV EAX,dword ptr [RSP + 0x8]
0001156f(5): JMP 0x00010dd8
00011574(5): MOV EAX,0xc
00011579(2): JMP 0x0001154e
0001157b(6): CMP qword ptr [RSP + 0x60],0x0
00011581(6): JZ 0x00011020
00011587(2): XOR EAX,EAX
00011589(2): JMP 0x0001155a
0001158b(5): CALL 0x00001ad0
00011590(2): PUSH R14
00011592(2): PUSH R13
00011594(3): MOV R10,RSI
00011597(2): PUSH R12
00011599(1): PUSH RBP
0001159a(3): MOVSXD R11,ECX
0001159d(1): PUSH RBX
0001159e(3): MOV RBP,RDX
000115a1(3): MOV RBX,RDI
000115a4(4): SUB RSP,0x20
000115a8(4): MOV R12,qword ptr [RSI + 0x48]
000115ac(9): MOV RAX,qword ptr FS:[0x28]
000115b5(5): MOV qword ptr [RSP + 0x18],RAX
000115ba(2): XOR EAX,EAX
000115bc(7): CMP dword ptr [0x90 + RSI],0x1
000115c3(2): JZ 0x00011618
000115c5(3): MOV RSI,R12
000115c8(3): MOV RDI,R10
000115cb(5): CALL 0x00008b40
000115d0(3): CMP EAX,0x1
000115d3(2): JLE 0x00011618
000115d5(4): MOV RDX,qword ptr [R10 + 0x10]
000115d9(2): CDQE
000115db(6): MOV dword ptr [RBX],0x1
000115e1(3): ADD RAX,R12
000115e4(4): MOV EDX,dword ptr [RDX + R12*0x4]
000115e8(3): MOV dword ptr [RBX + 0x8],EDX
000115eb(4): MOV qword ptr [R10 + 0x48],RAX
000115ef(2): XOR EAX,EAX
000115f1(5): MOV RCX,qword ptr [RSP + 0x18]
000115f6(9): XOR RCX,qword ptr FS:[0x28]
000115ff(6): JNZ 0x000117e8
00011605(4): ADD RSP,0x20
00011609(1): POP RBX
0001160a(1): POP RBP
0001160b(2): POP R12
0001160d(2): POP R13
0001160f(2): POP R14
00011611(1): RET
00011618(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001161c(3): ADD R11,R12
0001161f(4): MOV qword ptr [R10 + 0x48],R11
00011623(2): MOV EDX,EAX
00011625(3): AND EDX,0xfffffffb
00011628(3): CMP DL,0x1a
0001162b(2): JZ 0x00011650
0001162d(2): CMP AL,0x1c
0001162f(2): JZ 0x00011650
00011631(2): CMP AL,0x16
00011633(2): JNZ 0x0001163e
00011635(3): TEST R9B,R9B
00011638(6): JZ 0x00011782
0001163e(4): MOVZX EAX,byte ptr [RBP]
00011642(6): MOV dword ptr [RBX],0x0
00011648(3): MOV byte ptr [RBX + 0x8],AL
0001164b(2): XOR EAX,EAX
0001164d(2): JMP 0x000115f1
00011650(4): MOV R12,qword ptr [R10 + 0x68]
00011654(3): CMP R11,R12
00011657(6): JGE 0x00011778
0001165d(5): MOVZX R13D,byte ptr [RBP]
00011662(3): XOR R8D,R8D
00011665(2): JMP 0x00011692
00011670(4): MOV RAX,qword ptr [RBX + 0x8]
00011674(4): MOV byte ptr [RAX + R8*0x1],R9B
00011678(4): ADD R8,0x1
0001167c(4): CMP R8,0x20
00011680(6): JZ 0x00011778
00011686(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001168a(4): MOV R11,qword ptr [R10 + 0x48]
0001168e(4): MOV R12,qword ptr [R10 + 0x68]
00011692(2): CMP AL,0x1e
00011694(3): MOVSXD R14,R8D
00011697(2): JZ 0x00011700
00011699(4): MOV RDX,qword ptr [R10 + 0x8]
0001169d(4): LEA RAX,[R11 + 0x1]
000116a1(4): MOV qword ptr [R10 + 0x48],RAX
000116a5(5): MOVZX R9D,byte ptr [RDX + R11*0x1]
000116aa(3): CMP RAX,R12
000116ad(6): JGE 0x00011778
000116b3(3): CMP R13B,R9B
000116b6(2): JNZ 0x00011670
000116b8(4): MOV RDX,qword ptr [R10 + 0x8]
000116bc(4): CMP byte ptr [RDX + RAX*0x1],0x5d
000116c0(2): JNZ 0x00011670
000116c2(4): ADD RAX,0x1
000116c6(4): MOV qword ptr [R10 + 0x48],RAX
000116ca(4): MOV RAX,qword ptr [RBX + 0x8]
000116ce(5): MOV byte ptr [RAX + R14*0x1],0x0
000116d3(4): MOVZX EAX,byte ptr [RBP + 0x8]
000116d7(2): CMP AL,0x1c
000116d9(6): JZ 0x000117db
000116df(2): CMP AL,0x1e
000116e1(6): JZ 0x000117ce
000116e7(2): CMP AL,0x1a
000116e9(6): JZ 0x000117c1
000116ef(2): XOR EAX,EAX
000116f1(5): JMP 0x000115f1
00011700(8): CMP byte ptr [0x8b + R10],0x0
00011708(2): JZ 0x00011699
0001170a(8): CMP byte ptr [0x8c + R10],0x0
00011712(6): JZ 0x000117a8
00011718(4): CMP R11,qword ptr [R10 + 0x30]
0001171c(2): JZ 0x0001172d
0001171e(4): MOV RAX,qword ptr [R10 + 0x10]
00011722(5): CMP dword ptr [RAX + R11*0x4],-0x1
00011727(6): JZ 0x00011699
0001172d(4): MOV RAX,qword ptr [R10 + 0x18]
00011731(4): MOV RAX,qword ptr [RAX + R11*0x8]
00011735(3): ADD RAX,qword ptr [R10]
00011738(4): ADD RAX,qword ptr [R10 + 0x28]
0001173c(4): MOVZX R9D,byte ptr [RAX]
00011740(4): TEST R9B,0x80
00011744(6): JNZ 0x00011699
0001174a(8): CMP dword ptr [0x90 + R10],0x1
00011752(5): MOV EAX,0x1
00011757(2): JZ 0x00011766
00011759(3): MOV RSI,R11
0001175c(3): MOV RDI,R10
0001175f(5): CALL 0x00008b40
00011764(2): CDQE
00011766(3): ADD RAX,R11
00011769(4): MOV qword ptr [R10 + 0x48],RAX
0001176d(5): JMP 0x000116aa
00011778(5): MOV EAX,0x7
0001177d(5): JMP 0x000115f1
00011782(3): MOV RDI,RSP
00011785(3): MOV RDX,R8
00011788(3): MOV RSI,R10
0001178b(5): CALL 0x000070e0
00011790(5): CMP byte ptr [RSP + 0x8],0x15
00011795(5): MOV EAX,0xb
0001179a(6): JZ 0x0001163e
000117a0(5): JMP 0x000115f1
000117a8(4): LEA RAX,[R11 + 0x1]
000117ac(3): ADD R11,qword ptr [R10]
000117af(4): MOV RDX,qword ptr [R10 + 0x28]
000117b3(4): MOV qword ptr [R10 + 0x48],RAX
000117b7(5): MOVZX R9D,byte ptr [R11 + RDX*0x1]
000117bc(5): JMP 0x000116aa
000117c1(6): MOV dword ptr [RBX],0x3
000117c7(2): XOR EAX,EAX
000117c9(5): JMP 0x000115f1
000117ce(6): MOV dword ptr [RBX],0x4
000117d4(2): XOR EAX,EAX
000117d6(5): JMP 0x000115f1
000117db(6): MOV dword ptr [RBX],0x2
000117e1(2): XOR EAX,EAX
000117e3(5): JMP 0x000115f1
000117e8(5): CALL 0x00001ad0
000117ed(3): NOP dword ptr [RAX]
000117f0(2): PUSH R15
000117f2(2): PUSH R14
000117f4(2): PUSH R13
000117f6(2): PUSH R12
000117f8(1): PUSH RBP
000117f9(1): PUSH RBX
000117fa(3): MOV RBP,RDI
000117fd(4): SUB RSP,0x38
00011801(4): MOV R14,qword ptr [RSI + 0x48]
00011805(9): MOV RAX,qword ptr FS:[0x28]
0001180e(5): MOV qword ptr [RSP + 0x28],RAX
00011813(2): XOR EAX,EAX
00011815(4): CMP qword ptr [RSI + 0x68],R14
00011819(6): JLE 0x000118b0
0001181f(5): MOVZX R13D,byte ptr [RDI + 0xa]
00011824(3): MOV R15,RDX
00011827(4): MOV RDX,qword ptr [RSI + 0x8]
0001182b(3): MOV RBX,RSI
0001182e(5): MOVZX R12D,byte ptr [RDX + R14*0x1]
00011833(4): AND R13D,0xffffff9f
00011837(4): MOV byte ptr [RDI + 0xa],R13B
0001183b(6): MOV EAX,dword ptr [0x90 + RSI]
00011841(3): MOV byte ptr [RDI],R12B
00011844(3): CMP EAX,0x1
00011847(6): JLE 0x000118e0
0001184d(4): CMP R14,qword ptr [RSI + 0x30]
00011851(6): JZ 0x000119f0
00011857(4): MOV RCX,qword ptr [RSI + 0x10]
0001185b(4): MOV ECX,dword ptr [RCX + R14*0x4]
0001185f(3): CMP ECX,-0x1
00011862(6): JZ 0x00011940
00011868(4): CMP R12B,0x5c
0001186c(6): JZ 0x00011960
00011872(4): MOV byte ptr [RDI + 0x8],0x1
00011876(2): MOV EDI,ECX
00011878(5): MOV qword ptr [RSP + 0x8],RDX
0001187d(3): MOV dword ptr [RSP],ECX
00011880(5): CALL 0x00001c10
00011885(3): MOV ECX,dword ptr [RSP]
00011888(2): TEST EAX,EAX
0001188a(3): SETNZ AL
0001188d(3): CMP ECX,0x5f
00011890(3): SETZ CL
00011893(2): OR EAX,ECX
00011895(3): SHL EAX,0x6
00011898(3): OR R13D,EAX
0001189b(4): MOV byte ptr [RBP + 0xa],R13B
0001189f(5): MOV RDX,qword ptr [RSP + 0x8]
000118a4(2): JMP 0x0001191c
000118b0(4): MOV byte ptr [RDI + 0x8],0x2
000118b4(5): MOV RDI,qword ptr [RSP + 0x28]
000118b9(9): XOR RDI,qword ptr FS:[0x28]
000118c2(6): JNZ 0x00011ee8
000118c8(4): ADD RSP,0x38
000118cc(1): POP RBX
000118cd(1): POP RBP
000118ce(2): POP R12
000118d0(2): POP R13
000118d2(2): POP R14
000118d4(2): POP R15
000118d6(1): RET
000118e0(4): CMP R12B,0x5c
000118e4(2): JZ 0x00011960
000118e6(4): MOV byte ptr [RBP + 0x8],0x1
000118ea(4): MOV qword ptr [RSP],RDX
000118ee(5): CALL 0x00001dc0
000118f3(3): MOV RSI,qword ptr [RAX]
000118f6(4): MOVZX ECX,R12B
000118fa(4): MOVZX EAX,word ptr [RSI + RCX*0x2]
000118fe(4): SHR AX,0x3
00011902(3): AND EAX,0x1
00011905(4): CMP R12B,0x5f
00011909(3): SETZ CL
0001190c(2): OR EAX,ECX
0001190e(3): SHL EAX,0x6
00011911(3): OR R13D,EAX
00011914(4): MOV byte ptr [RBP + 0xa],R13B
00011918(4): MOV RDX,qword ptr [RSP]
0001191c(4): SUB R12D,0xa
00011920(4): CMP R12B,0x73
00011924(6): JA 0x00011a5c
0001192a(7): LEA RCX,[0x16bd4]
00011931(4): MOVZX R12D,R12B
00011935(4): MOVSXD RAX,dword ptr [RCX + R12*0x4]
00011939(3): ADD RAX,RCX
0001193c(2): JMP RAX
00011940(4): OR R13D,0x20
00011944(4): MOV byte ptr [RDI + 0x8],0x1
00011948(5): MOV EAX,0x1
0001194d(4): MOV byte ptr [RDI + 0xa],R13B
00011951(5): JMP 0x000118b4
00011960(4): LEA RSI,[R14 + 0x1]
00011964(4): CMP RSI,qword ptr [RBX + 0x58]
00011968(6): JGE 0x00011a10
0001196e(7): CMP byte ptr [0x8b + RBX],0x0
00011975(6): JNZ 0x00011e00
0001197b(6): MOVZX EDI,byte ptr [RDX + R14*0x1 + 0x1]
00011981(3): MOV R12D,EDI
00011984(4): MOV dword ptr [RSP + 0x8],EDI
00011988(3): CMP EAX,0x1
0001198b(4): MOV byte ptr [RBP],R12B
0001198f(4): MOV byte ptr [RBP + 0x8],0x1
00011993(6): JLE 0x00011de0
00011999(4): MOV RAX,qword ptr [RBX + 0x10]
0001199d(4): MOV R8D,dword ptr [RAX + RSI*0x4]
000119a1(3): MOV EDI,R8D
000119a4(4): MOV dword ptr [RSP],R8D
000119a8(5): CALL 0x00001c10
000119ad(4): MOV R8D,dword ptr [RSP]
000119b1(2): TEST EAX,EAX
000119b3(3): SETNZ AL
000119b6(4): CMP R8D,0x5f
000119ba(3): SETZ DL
000119bd(5): LEA ECX,[R12 + -0x27]
000119c2(2): OR EAX,EDX
000119c4(3): SHL EAX,0x6
000119c7(3): OR R13D,EAX
000119ca(3): CMP CL,0x56
000119cd(4): MOV byte ptr [RBP + 0xa],R13B
000119d1(6): JA 0x00011dd5
000119d7(7): LEA RDX,[0x16da4]
000119de(3): MOVZX ECX,CL
000119e1(4): MOVSXD RAX,dword ptr [RDX + RCX*0x4]
000119e5(3): ADD RAX,RDX
000119e8(2): JMP RAX
000119f0(4): CMP R12B,0x5c
000119f4(6): JZ 0x00011960
000119fa(4): MOV RAX,qword ptr [RBX + 0x10]
000119fe(4): MOV byte ptr [RBP + 0x8],0x1
00011a02(4): MOV ECX,dword ptr [RAX + R14*0x4]
00011a06(5): JMP 0x00011876
00011a10(4): MOV byte ptr [RBP + 0x8],0x24
00011a14(5): MOV EAX,0x1
00011a19(5): JMP 0x000118b4
00011a20(7): AND R15D,0x1200
00011a27(5): MOV EAX,0x1
00011a2c(7): CMP R15,0x1200
00011a33(6): JNZ 0x000118b4
00011a39(4): MOV byte ptr [RBP + 0x8],0x18
00011a3d(5): JMP 0x000118b4
00011a48(7): AND R15D,0x8400
00011a4f(7): CMP R15,0x8000
00011a56(6): JZ 0x00011b32
00011a5c(5): MOV EAX,0x1
00011a61(5): JMP 0x000118b4
00011a70(7): AND R15D,0x1200
00011a77(5): MOV EAX,0x1
00011a7c(7): CMP R15,0x1200
00011a83(6): JNZ 0x000118b4
00011a89(4): MOV byte ptr [RBP + 0x8],0x17
00011a8d(5): JMP 0x000118b4
00011a98(7): TEST R15D,0x800008
00011a9f(2): JNZ 0x00011aaa
00011aa1(3): TEST R14,R14
00011aa4(6): JNZ 0x00011e6a
00011aaa(4): MOV byte ptr [RBP + 0x8],0xc
00011aae(7): MOV dword ptr [RBP],0x10
00011ab5(5): MOV EAX,0x1
00011aba(5): JMP 0x000118b4
00011ac0(4): MOV byte ptr [RBP + 0x8],0x14
00011ac4(5): MOV EAX,0x1
00011ac9(5): JMP 0x000118b4
00011ad0(7): TEST R15D,0x402
00011ad7(5): MOV EAX,0x1
00011adc(6): JNZ 0x000118b4
00011ae2(4): MOV byte ptr [RBP + 0x8],0x13
00011ae6(5): JMP 0x000118b4
00011af0(4): MOV byte ptr [RBP + 0x8],0x5
00011af4(5): MOV EAX,0x1
00011af9(5): JMP 0x000118b4
00011b00(7): TEST R15D,0x402
00011b07(5): MOV EAX,0x1
00011b0c(6): JNZ 0x000118b4
00011b12(4): MOV byte ptr [RBP + 0x8],0x12
00011b16(5): JMP 0x000118b4
00011b20(7): TEST R15D,0x800
00011b27(5): MOV EAX,0x1
00011b2c(6): JZ 0x000118b4
00011b32(4): MOV byte ptr [RBP + 0x8],0xa
00011b36(5): MOV EAX,0x1
00011b3b(5): JMP 0x000118b4
00011b40(4): MOV byte ptr [RBP + 0x8],0xb
00011b44(5): MOV EAX,0x1
00011b49(5): JMP 0x000118b4
00011b50(7): TEST R15D,0x2000
00011b57(5): MOV EAX,0x1
00011b5c(6): JZ 0x000118b4
00011b62(4): MOV byte ptr [RBP + 0x8],0x9
00011b66(5): JMP 0x000118b4
00011b70(7): TEST R15D,0x2000
00011b77(5): MOV EAX,0x1
00011b7c(6): JZ 0x000118b4
00011b82(4): MOV byte ptr [RBP + 0x8],0x8
00011b86(5): JMP 0x000118b4
00011b90(4): TEST R15B,0x8
00011b94(2): JNZ 0x00011ba4
00011b96(4): ADD R14,0x1
00011b9a(4): CMP R14,qword ptr [RBX + 0x58]
00011b9e(6): JNZ 0x00011e9b
00011ba4(4): MOV byte ptr [RBP + 0x8],0xc
00011ba8(7): MOV dword ptr [RBP],0x20
00011baf(5): MOV EAX,0x1
00011bb4(5): JMP 0x000118b4
00011bb9(7): TEST R15D,0x8400
00011bc0(5): MOV EAX,0x2
00011bc5(6): JNZ 0x000118b4
00011bcb(4): MOV byte ptr [RBP + 0x8],0xa
00011bcf(5): JMP 0x000118b4
00011bd4(7): AND R15D,0x1200
00011bdb(5): MOV EAX,0x2
00011be0(7): CMP R15,0x200
00011be7(6): JNZ 0x000118b4
00011bed(5): JMP 0x00011a89
00011bf2(7): TEST R15D,0x80000
00011bf9(5): MOV EAX,0x2
00011bfe(6): JNZ 0x000118b4
00011c04(4): MOV byte ptr [RBP + 0x8],0x20
00011c08(5): JMP 0x000118b4
00011c0d(7): TEST R15D,0x80000
00011c14(5): MOV EAX,0x2
00011c19(6): JNZ 0x000118b4
00011c1f(4): MOV byte ptr [RBP + 0x8],0x22
00011c23(5): JMP 0x000118b4
00011c28(7): AND R15D,0x1200
00011c2f(5): MOV EAX,0x2
00011c34(7): CMP R15,0x200
00011c3b(6): JNZ 0x000118b4
00011c41(5): JMP 0x00011a39
00011c46(7): TEST R15D,0x80000
00011c4d(5): MOV EAX,0x2
00011c52(6): JNZ 0x000118b4
00011c58(4): MOV byte ptr [RBP + 0x8],0xc
00011c5c(7): MOV dword ptr [RBP],0x100
00011c63(5): JMP 0x000118b4
00011c68(7): TEST R15D,0x80000
00011c6f(5): MOV EAX,0x2
00011c74(6): JNZ 0x000118b4
00011c7a(4): MOV byte ptr [RBP + 0x8],0xc
00011c7e(7): MOV dword ptr [RBP],0x40
00011c85(5): JMP 0x000118b4
00011c8a(7): TEST R15D,0x80000
00011c91(5): MOV EAX,0x2
00011c96(6): JNZ 0x000118b4
00011c9c(4): MOV byte ptr [RBP + 0x8],0x21
00011ca0(5): JMP 0x000118b4
00011ca5(7): TEST R15D,0x80000
00011cac(5): MOV EAX,0x2
00011cb1(6): JNZ 0x000118b4
00011cb7(4): MOV byte ptr [RBP + 0x8],0x23
00011cbb(5): JMP 0x000118b4
00011cc0(7): TEST R15D,0x80000
00011cc7(5): MOV EAX,0x2
00011ccc(6): JNZ 0x000118b4
00011cd2(4): MOV byte ptr [RBP + 0x8],0xc
00011cd6(7): MOV dword ptr [RBP],0x200
00011cdd(5): JMP 0x000118b4
00011ce2(7): AND R15D,0x402
00011ce9(5): MOV EAX,0x2
00011cee(4): CMP R15,0x2
00011cf2(6): JNZ 0x000118b4
00011cf8(5): JMP 0x00011ae2
00011cfd(7): TEST R15D,0x80000
00011d04(5): MOV EAX,0x2
00011d09(6): JNZ 0x000118b4
00011d0f(4): MOV byte ptr [RBP + 0x8],0xc
00011d13(7): MOV dword ptr [RBP],0x9
00011d1a(5): JMP 0x000118b4
00011d1f(7): TEST R15D,0x80000
00011d26(5): MOV EAX,0x2
00011d2b(6): JNZ 0x000118b4
00011d31(4): MOV byte ptr [RBP + 0x8],0xc
00011d35(7): MOV dword ptr [RBP],0x6
00011d3c(5): JMP 0x000118b4
00011d41(7): TEST R15D,0x4000
00011d48(5): MOV EAX,0x2
00011d4d(6): JNZ 0x000118b4
00011d53(4): MOV EDX,dword ptr [RSP + 0x8]
00011d57(4): MOV byte ptr [RBP + 0x8],0x4
00011d5b(3): SUB EDX,0x31
00011d5e(3): MOVSXD RDX,EDX
00011d61(4): MOV qword ptr [RBP],RDX
00011d65(5): JMP 0x000118b4
00011d6a(7): AND R15D,0x402
00011d71(5): MOV EAX,0x2
00011d76(4): CMP R15,0x2
00011d7a(6): JNZ 0x000118b4
00011d80(5): JMP 0x00011b12
00011d85(7): TEST R15D,0x2000
00011d8c(5): MOV EAX,0x2
00011d91(6): JNZ 0x000118b4
00011d97(5): JMP 0x00011b62
00011d9c(7): TEST R15D,0x2000
00011da3(5): MOV EAX,0x2
00011da8(6): JNZ 0x000118b4
00011dae(5): JMP 0x00011b82
00011db3(7): TEST R15D,0x80000
00011dba(5): MOV EAX,0x2
00011dbf(6): JNZ 0x000118b4
00011dc5(4): MOV byte ptr [RBP + 0x8],0xc
00011dc9(7): MOV dword ptr [RBP],0x80
00011dd0(5): JMP 0x000118b4
00011dd5(5): MOV EAX,0x2
00011dda(5): JMP 0x000118b4
00011de0(5): CALL 0x00001dc0
00011de5(3): MOV RSI,qword ptr [RAX]
00011de8(4): MOVZX EDX,R12B
00011dec(4): MOVZX EAX,word ptr [RSI + RDX*0x2]
00011df0(4): SHR AX,0x3
00011df4(3): AND EAX,0x1
00011df7(4): CMP R12B,0x5f
00011dfb(5): JMP 0x000119ba
00011e00(3): CMP EAX,0x1
00011e03(2): JLE 0x00011e34
00011e05(4): MOV RCX,qword ptr [RBX + 0x10]
00011e09(8): LEA RDI,[RSI*0x4]
00011e11(4): MOV R8D,dword ptr [RCX + RSI*0x4]
00011e15(4): CMP R8D,-0x1
00011e19(6): JZ 0x00011ecf
00011e1f(4): LEA R9,[R14 + 0x2]
00011e23(4): CMP qword ptr [RBX + 0x30],R9
00011e27(2): JZ 0x00011e34
00011e29(5): CMP dword ptr [RCX + RDI*0x1 + 0x4],-0x1
00011e2e(6): JZ 0x00011ecf
00011e34(7): CMP byte ptr [0x8c + RBX],0x0
00011e3b(3): MOV RCX,qword ptr [RBX]
00011e3e(4): MOV RDI,qword ptr [RBX + 0x28]
00011e42(2): JZ 0x00011e88
00011e44(4): MOV R8,qword ptr [RBX + 0x18]
00011e48(3): ADD RCX,RDI
00011e4b(4): ADD RCX,qword ptr [R8 + RSI*0x8]
00011e4f(3): MOVZX EDI,byte ptr [RCX]
00011e52(3): MOV R12D,EDI
00011e55(4): MOV dword ptr [RSP + 0x8],EDI
00011e59(6): AND EDI,0x80
00011e5f(6): JNZ 0x0001197b
00011e65(5): JMP 0x00011988
00011e6a(6): CMP byte ptr [RDX + R14*0x1 + -0x1],0xa
00011e70(6): JNZ 0x00011a5c
00011e76(7): TEST R15D,0x800
00011e7d(6): JZ 0x00011a5c
00011e83(5): JMP 0x00011aaa
00011e88(3): ADD RCX,RSI
00011e8b(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
00011e8f(3): MOV R12D,EDI
00011e92(4): MOV dword ptr [RSP + 0x8],EDI
00011e96(5): JMP 0x00011988
00011e9b(5): LEA RDI,[RSP + 0x10]
00011ea0(3): MOV RDX,R15
00011ea3(4): MOV qword ptr [RBX + 0x48],R14
00011ea7(3): MOV RSI,RBX
00011eaa(5): CALL 0x000117f0
00011eaf(5): MOVZX EAX,byte ptr [RSP + 0x18]
00011eb4(5): SUB qword ptr [RBX + 0x48],0x1
00011eb9(3): LEA EDX,[RAX + -0x9]
00011ebc(5): MOV EAX,0x1
00011ec1(3): CMP DL,0x1
00011ec4(6): JA 0x000118b4
00011eca(5): JMP 0x00011ba4
00011ecf(6): MOVZX EAX,byte ptr [RDX + R14*0x1 + 0x1]
00011ed5(4): MOV byte ptr [RBP + 0x8],0x1
00011ed9(3): MOV R12D,EAX
00011edc(3): MOV byte ptr [RBP],AL
00011edf(4): MOV dword ptr [RSP + 0x8],EAX
00011ee3(5): JMP 0x000119a1
00011ee8(5): CALL 0x00001ad0
00011eed(3): NOP dword ptr [RAX]
00011ef0(2): PUSH R14
00011ef2(3): MOV R14,RDI
00011ef5(2): PUSH R13
00011ef7(3): MOV R13,RSI
00011efa(2): PUSH R12
00011efc(7): MOV R12,-0x2
00011f03(1): PUSH RBP
00011f04(3): MOV RBP,RDX
00011f07(1): PUSH RBX
00011f08(7): MOV RBX,-0x1
00011f0f(1): NOP
00011f10(3): MOV RDX,RBP
00011f13(3): MOV RSI,R14
00011f16(3): MOV RDI,R13
00011f19(5): CALL 0x000117f0
00011f1e(2): CDQE
00011f20(4): ADD qword ptr [R14 + 0x48],RAX
00011f24(5): MOVZX EAX,byte ptr [R13 + 0x8]
00011f29(5): MOVZX EDX,byte ptr [R13]
00011f2e(2): CMP AL,0x2
00011f30(2): JZ 0x00011f80
00011f32(2): CMP AL,0x18
00011f34(2): JZ 0x00011f87
00011f36(3): CMP DL,0x2c
00011f39(2): JZ 0x00011f87
00011f3b(2): CMP AL,0x1
00011f3d(2): JZ 0x00011f48
00011f3f(3): MOV RBX,R12
00011f42(2): JMP 0x00011f10
00011f48(3): LEA EAX,[RDX + -0x30]
00011f4b(2): CMP AL,0x9
00011f4d(2): JA 0x00011f3f
00011f4f(4): CMP RBX,-0x2
00011f53(2): JZ 0x00011f3f
00011f55(4): CMP RBX,-0x1
00011f59(2): JZ 0x00011f98
00011f5b(4): LEA RAX,[RBX + RBX*0x4]
00011f5f(4): LEA RBX,[RDX + RAX*0x2]
00011f63(5): MOV EAX,0x8030
00011f68(7): CMP RBX,0x8030
00011f6f(4): CMOVG RBX,RAX
00011f73(4): SUB RBX,0x30
00011f77(2): JMP 0x00011f10
00011f80(7): MOV RBX,-0x2
00011f87(3): MOV RAX,RBX
00011f8a(1): POP RBX
00011f8b(1): POP RBP
00011f8c(2): POP R12
00011f8e(2): POP R13
00011f90(2): POP R14
00011f92(1): RET
00011f98(3): MOVZX EBX,DL
00011f9b(3): SUB EBX,0x30
00011f9e(3): MOVSXD RBX,EBX
00011fa1(5): JMP 0x00011f10
00011fb0(2): PUSH R15
00011fb2(2): PUSH R14
00011fb4(2): PUSH R13
00011fb6(2): PUSH R12
00011fb8(1): PUSH RBP
00011fb9(1): PUSH RBX
00011fba(7): SUB RSP,0x128
00011fc1(5): MOV qword ptr [RSP + 0x20],RCX
00011fc6(4): MOVZX ECX,byte ptr [RDX + 0x8]
00011fca(9): MOV RAX,qword ptr FS:[0x28]
00011fd3(8): MOV qword ptr [0x118 + RSP],RAX
00011fdb(2): XOR EAX,EAX
00011fdd(3): MOV RAX,qword ptr [RSI]
00011fe0(5): MOV qword ptr [RSP + 0x18],RDX
00011fe5(5): MOV qword ptr [RSP + 0x40],R9
00011fea(3): CMP CL,0x24
00011fed(5): MOV qword ptr [RSP + 0x10],RAX
00011ff2(6): JA 0x000120b0
00011ff8(3): MOV RBP,RSI
00011ffb(7): LEA RSI,[0x16f00]
00012002(3): MOVZX EDX,CL
00012005(3): MOV R14,RDI
00012008(4): MOVSXD RAX,dword ptr [RSI + RDX*0x4]
0001200c(3): ADD RAX,RSI
0001200f(2): JMP RAX
00012011(4): MOV RBX,qword ptr [RBP + 0x30]
00012015(5): MOV R15,qword ptr [RSP + 0x20]
0001201a(3): MOV RSI,RDI
0001201d(5): MOV R13,qword ptr [RSP + 0x18]
00012022(4): MOV qword ptr [RSP],R8
00012026(4): LEA RAX,[RBX + 0x1]
0001202a(3): MOV RDX,R15
0001202d(7): OR RDX,0x800000
00012034(3): MOV RDI,R13
00012037(4): MOV qword ptr [RBP + 0x30],RAX
0001203b(5): CALL 0x000117f0
00012040(2): CDQE
00012042(4): ADD qword ptr [R14 + 0x48],RAX
00012046(2): XOR EAX,EAX
00012048(5): CMP byte ptr [R13 + 0x8],0x9
0001204d(3): MOV RDX,R13
00012050(6): JZ 0x00012b50
00012056(5): MOV R13,qword ptr [RSP + 0x40]
0001205b(4): MOV R8,qword ptr [RSP]
0001205f(3): MOV RCX,R15
00012062(3): MOV RSI,RBP
00012065(3): MOV RDI,R14
00012068(4): ADD R8,0x1
0001206c(3): MOV R9,R13
0001206f(5): CALL 0x00013620
00012074(4): MOV R11D,dword ptr [R13]
00012078(3): TEST R11D,R11D
0001207b(2): JNZ 0x000120b0
0001207d(5): MOV RDX,qword ptr [RSP + 0x18]
00012082(4): CMP byte ptr [RDX + 0x8],0x9
00012086(6): JZ 0x00012b50
0001208c(3): TEST RAX,RAX
0001208f(2): JZ 0x000120a2
00012091(7): LEA RSI,[0x8370]
00012098(2): XOR EDX,EDX
0001209a(3): MOV RDI,RAX
0001209d(5): CALL 0x000074d0
000120a2(5): MOV RAX,qword ptr [RSP + 0x40]
000120a7(6): MOV dword ptr [RAX],0x8
000120ad(3): NOP dword ptr [RAX]
000120b0(9): MOV qword ptr [RSP + 0x28],0x0
000120b9(7): NOP dword ptr [RAX]
000120c0(8): MOV RDI,qword ptr [0x118 + RSP]
000120c8(9): XOR RDI,qword ptr FS:[0x28]
000120d1(5): MOV RAX,qword ptr [RSP + 0x28]
000120d6(6): JNZ 0x0001344e
000120dc(7): ADD RSP,0x128
000120e3(1): POP RBX
000120e4(1): POP RBP
000120e5(2): POP R12
000120e7(2): POP R13
000120e9(2): POP R14
000120eb(2): POP R15
000120ed(1): RET
000120ee(9): TEST qword ptr [RSP + 0x20],0x1000000
000120f7(6): JNZ 0x0001234d
000120fd(5): MOV RAX,qword ptr [RSP + 0x20]
00012102(2): TEST AL,0x20
00012104(6): JNZ 0x0001234d
0001210a(2): TEST AL,0x10
0001210c(6): JNZ 0x00012f75
00012112(3): CMP CL,0x9
00012115(6): JZ 0x00012b28
0001211b(5): MOV RAX,qword ptr [RSP + 0x10]
00012120(5): MOV R8,qword ptr [RSP + 0x18]
00012125(2): XOR ECX,ECX
00012127(2): XOR EDX,EDX
00012129(7): LEA RSI,[0x80 + RAX]
00012130(4): LEA RDI,[RAX + 0x70]
00012134(5): MOV byte ptr [R8 + 0x8],0x1
00012139(5): CALL 0x000098b0
0001213e(3): TEST RAX,RAX
00012141(5): MOV qword ptr [RSP + 0x28],RAX
00012146(6): JZ 0x00012b18
0001214c(5): MOV RBX,qword ptr [RSP + 0x18]
00012151(5): MOV RDX,qword ptr [RSP + 0x20]
00012156(3): MOV RSI,R14
00012159(8): LEA R15,[0xc0 + RSP]
00012161(3): MOV RDI,RBX
00012164(5): CALL 0x000117f0
00012169(2): CDQE
0001216b(4): ADD qword ptr [R14 + 0x48],RAX
0001216f(4): MOVZX EAX,byte ptr [RBX + 0x8]
00012173(5): NOP dword ptr [RAX + RAX*0x1]
00012178(2): CMP AL,0x17
0001217a(6): JA 0x000120c0
00012180(2): CMP AL,0x12
00012182(5): MOV ECX,0x8c0800
00012187(3): SETZ BL
0001218a(4): BT RCX,RAX
0001218e(6): JNC 0x000120c0
00012194(5): MOV RCX,qword ptr [RSP + 0x18]
00012199(2): CMP AL,0x17
0001219b(4): MOV RBP,qword ptr [R14 + 0x48]
0001219f(4): MOVDQA XMM0,xmmword ptr [RCX]
000121a3(6): JZ 0x000124c8
000121a9(2): CMP AL,0x13
000121ab(3): MOVZX EBX,BL
000121ae(6): JZ 0x00012460
000121b4(5): MOV RDX,qword ptr [RSP + 0x20]
000121b9(5): MOV RDI,qword ptr [RSP + 0x18]
000121be(3): MOV RSI,R14
000121c1(5): CALL 0x000117f0
000121c6(2): CDQE
000121c8(4): ADD qword ptr [R14 + 0x48],RAX
000121cc(6): CMP qword ptr [RSP + 0x28],0x0
000121d2(6): JZ 0x00012560
000121d8(8): MOV qword ptr [RSP],-0x1
000121e0(3): TEST RBX,RBX
000121e3(5): MOV RBP,qword ptr [RSP + 0x28]
000121e8(9): MOV qword ptr [RSP + 0x30],0x0
000121f1(6): JG 0x00012370
000121f7(4): CMP byte ptr [RBP + 0x30],0x11
000121fb(6): JZ 0x00012540
00012201(5): CMP qword ptr [RSP],-0x1
00012206(3): MOV RDX,RBP
00012209(3): MOV R8,R15
0001220c(3): SETZ AL
0001220f(2): XOR ECX,ECX
00012211(3): ADD EAX,0xa
00012214(7): MOV byte ptr [0xc8 + RSP],AL
0001221b(5): MOV RAX,qword ptr [RSP + 0x10]
00012220(4): LEA R12,[RAX + 0x70]
00012224(7): LEA R13,[0x80 + RAX]
0001222b(3): MOV RDI,R12
0001222e(3): MOV RSI,R13
00012231(5): CALL 0x000098b0
00012236(3): TEST RAX,RAX
00012239(3): MOV RDX,RAX
0001223c(6): JZ 0x00012430
00012242(4): ADD RBX,0x2
00012246(4): CMP RBX,qword ptr [RSP]
0001224a(2): JG 0x000122cb
0001224c(5): MOV qword ptr [RSP + 0x48],R14
00012251(3): MOV R14,RAX
00012254(5): MOV RSI,qword ptr [RSP + 0x10]
00012259(3): MOV RDI,RBP
0001225c(5): CALL 0x00009990
00012261(3): MOV R8,R15
00012264(3): MOV RBP,RAX
00012267(3): MOV RCX,RAX
0001226a(3): MOV RDX,R14
0001226d(3): MOV RSI,R13
00012270(3): MOV RDI,R12
00012273(8): MOV byte ptr [0xc8 + RSP],0x10
0001227b(5): CALL 0x000098b0
00012280(3): TEST RBP,RBP
00012283(6): JZ 0x00012430
00012289(3): TEST RAX,RAX
0001228c(6): JZ 0x00012430
00012292(2): XOR ECX,ECX
00012294(3): MOV R8,R15
00012297(3): MOV RDX,RAX
0001229a(3): MOV RSI,R13
0001229d(3): MOV RDI,R12
000122a0(8): MOV byte ptr [0xc8 + RSP],0xa
000122a8(5): CALL 0x000098b0
000122ad(3): TEST RAX,RAX
000122b0(3): MOV R14,RAX
000122b3(6): JZ 0x00012430
000122b9(4): ADD RBX,0x1
000122bd(4): CMP RBX,qword ptr [RSP]
000122c1(2): JLE 0x00012254
000122c3(5): MOV R14,qword ptr [RSP + 0x48]
000122c8(3): MOV RDX,RAX
000122cb(5): MOV RAX,qword ptr [RSP + 0x30]
000122d0(3): TEST RAX,RAX
000122d3(6): JZ 0x00012580
000122d9(3): MOV RCX,RDX
000122dc(3): MOV R8,R15
000122df(3): MOV RDX,RAX
000122e2(3): MOV RSI,R13
000122e5(3): MOV RDI,R12
000122e8(8): MOV byte ptr [0xc8 + RSP],0x10
000122f0(5): CALL 0x000098b0
000122f5(5): MOV RDI,qword ptr [RSP + 0x40]
000122fa(2): MOV EDX,dword ptr [RDI]
000122fc(2): TEST EDX,EDX
000122fe(2): JZ 0x00012309
00012300(3): TEST RAX,RAX
00012303(6): JZ 0x0001265b
00012309(5): MOV qword ptr [RSP + 0x28],RAX
0001230e(9): TEST qword ptr [RSP + 0x20],0x1000000
00012317(5): MOV RAX,qword ptr [RSP + 0x18]
0001231c(4): MOVZX EAX,byte ptr [RAX + 0x8]
00012320(6): JZ 0x00012178
00012326(2): CMP AL,0xb
00012328(2): JZ 0x00012332
0001232a(2): CMP AL,0x17
0001232c(6): JNZ 0x00012178
00012332(5): MOV RAX,qword ptr [RSP + 0x28]
00012337(3): TEST RAX,RAX
0001233a(2): JZ 0x0001234d
0001233c(7): LEA RSI,[0x8370]
00012343(2): XOR EDX,EDX
00012345(3): MOV RDI,RAX
00012348(5): CALL 0x000074d0
0001234d(5): MOV RAX,qword ptr [RSP + 0x40]
00012352(9): MOV qword ptr [RSP + 0x28],0x0
0001235b(6): MOV dword ptr [RAX],0xd
00012361(5): JMP 0x000120c0
00012370(4): CMP RBX,0x1
00012374(6): JZ 0x00012bac
0001237a(5): MOV RAX,qword ptr [RSP + 0x10]
0001237f(3): MOV R13,RBP
00012382(5): MOV qword ptr [RSP + 0x48],R14
00012387(7): LEA R12,[0x80 + RAX]
0001238e(4): LEA RDI,[RAX + 0x70]
00012392(3): MOV RAX,RBP
00012395(3): MOV R14,RAX
00012398(5): MOV EBP,0x2
0001239d(3): MOV RSI,R12
000123a0(5): MOV qword ptr [RSP + 0x30],RDI
000123a5(3): MOV R12,R13
000123a8(3): MOV R13,RBX
000123ab(3): MOV RBX,RSI
000123ae(2): NOP
000123b0(5): MOV RSI,qword ptr [RSP + 0x10]
000123b5(3): MOV RDI,R12
000123b8(5): CALL 0x00009990
000123bd(5): MOV RDI,qword ptr [RSP + 0x30]
000123c2(3): MOV R12,RAX
000123c5(3): MOV RDX,R14
000123c8(3): MOV R8,R15
000123cb(3): MOV RCX,RAX
000123ce(3): MOV RSI,RBX
000123d1(8): MOV byte ptr [0xc8 + RSP],0x10
000123d9(5): CALL 0x000098b0
000123de(3): TEST R12,R12
000123e1(3): MOV R14,RAX
000123e4(2): JZ 0x00012430
000123e6(3): TEST RAX,RAX
000123e9(2): JZ 0x00012430
000123eb(4): ADD RBP,0x1
000123ef(3): CMP RBP,R13
000123f2(2): JLE 0x000123b0
000123f4(5): MOV R14,qword ptr [RSP + 0x48]
000123f9(3): MOV RBX,R13
000123fc(5): MOV qword ptr [RSP + 0x30],RAX
00012401(3): MOV R13,R12
00012404(4): CMP qword ptr [RSP],RBX
00012408(6): JZ 0x00012574
0001240e(5): MOV RSI,qword ptr [RSP + 0x10]
00012413(3): MOV RDI,R13
00012416(5): CALL 0x00009990
0001241b(3): TEST RAX,RAX
0001241e(3): MOV RBP,RAX
00012421(6): JNZ 0x000121f7
00012427(9): NOP word ptr [RAX + RAX*0x1]
00012430(5): MOV RAX,qword ptr [RSP + 0x40]
00012435(6): MOV dword ptr [RAX],0xc
0001243b(5): MOV RDI,qword ptr [RSP + 0x28]
00012440(7): LEA RSI,[0x8370]
00012447(2): XOR EDX,EDX
00012449(5): CALL 0x000074d0
0001244e(9): MOV qword ptr [RSP + 0x28],0x0
00012457(5): JMP 0x000120c0
00012460(8): MOV qword ptr [RSP],0x1
00012468(5): MOV RDX,qword ptr [RSP + 0x20]
0001246d(5): MOV RDI,qword ptr [RSP + 0x18]
00012472(3): MOV RSI,R14
00012475(5): CALL 0x000117f0
0001247a(2): CDQE
0001247c(4): ADD qword ptr [R14 + 0x48],RAX
00012480(6): CMP qword ptr [RSP + 0x28],0x0
00012486(6): JZ 0x00012560
0001248c(4): MOV RAX,qword ptr [RSP]
00012490(3): OR RAX,RBX
00012493(6): JNZ 0x000121e0
00012499(5): MOV RDI,qword ptr [RSP + 0x28]
0001249e(7): LEA RSI,[0x8370]
000124a5(2): XOR EDX,EDX
000124a7(5): CALL 0x000074d0
000124ac(5): MOV RAX,qword ptr [RSP + 0x40]
000124b1(2): MOV ESI,dword ptr [RAX]
000124b3(2): TEST ESI,ESI
000124b5(2): JNZ 0x0001243b
000124b7(9): MOV qword ptr [RSP + 0x28],0x0
000124c0(5): JMP 0x0001230e
000124c8(5): MOV RDX,qword ptr [RSP + 0x20]
000124cd(3): MOV RSI,RCX
000124d0(3): MOV RDI,R14
000124d3(4): MOVAPS xmmword ptr [RSP],XMM0
000124d7(5): CALL 0x00011ef0
000124dc(4): CMP RAX,-0x1
000124e0(3): MOV RBX,RAX
000124e3(5): MOVDQA XMM0,xmmword ptr [RSP]
000124e8(6): JZ 0x00012590
000124ee(4): CMP RAX,-0x2
000124f2(2): JZ 0x0001250d
000124f4(5): MOV RAX,qword ptr [RSP + 0x18]
000124f9(4): MOVZX EAX,byte ptr [RAX + 0x8]
000124fd(2): CMP AL,0x18
000124ff(6): JZ 0x00012620
00012505(2): CMP AL,0x1
00012507(6): JZ 0x00012633
0001250d(9): TEST qword ptr [RSP + 0x20],0x200000
00012516(6): JZ 0x00013453
0001251c(5): MOV RAX,qword ptr [RSP + 0x18]
00012521(4): MOV qword ptr [R14 + 0x48],RBP
00012525(3): MOVAPS xmmword ptr [RAX],XMM0
00012528(4): MOV byte ptr [RAX + 0x8],0x1
0001252c(5): MOV RAX,qword ptr [RSP + 0x28]
00012531(5): JMP 0x000122f5
00012540(4): MOV RDX,qword ptr [RBP + 0x28]
00012544(7): LEA RSI,[0x7210]
0001254b(3): MOV RDI,RBP
0001254e(5): CALL 0x000074d0
00012553(5): JMP 0x00012201
00012560(5): MOV RAX,qword ptr [RSP + 0x40]
00012565(2): MOV ECX,dword ptr [RAX]
00012567(2): TEST ECX,ECX
00012569(6): JZ 0x000124b7
0001256f(5): JMP 0x000120b0
00012574(5): MOV RDX,qword ptr [RSP + 0x30]
00012579(7): NOP dword ptr [RAX]
00012580(5): MOV qword ptr [RSP + 0x28],RDX
00012585(5): JMP 0x0001230e
00012590(5): MOV RAX,qword ptr [RSP + 0x18]
00012595(4): CMP byte ptr [RAX + 0x8],0x1
00012599(6): JNZ 0x00012650
0001259f(5): MOV RAX,qword ptr [RSP + 0x18]
000125a4(3): CMP byte ptr [RAX],0x2c
000125a7(6): JNZ 0x00012650
000125ad(2): XOR EBX,EBX
000125af(5): MOV RDX,qword ptr [RSP + 0x20]
000125b4(5): MOV RSI,qword ptr [RSP + 0x18]
000125b9(3): MOV RDI,R14
000125bc(5): MOVAPS xmmword ptr [RSP + 0x30],XMM0
000125c1(5): CALL 0x00011ef0
000125c6(4): CMP RAX,-0x2
000125ca(4): MOV qword ptr [RSP],RAX
000125ce(6): MOVDQA XMM0,xmmword ptr [RSP + 0x30]
000125d4(6): JZ 0x0001250d
000125da(4): MOV RAX,qword ptr [RSP]
000125de(4): CMP RAX,-0x1
000125e2(2): JZ 0x000125e9
000125e4(3): CMP RAX,RBX
000125e7(2): JL 0x00012650
000125e9(5): MOV RAX,qword ptr [RSP + 0x18]
000125ee(4): CMP byte ptr [RAX + 0x8],0x18
000125f2(2): JNZ 0x00012650
000125f4(5): CMP qword ptr [RSP],-0x1
000125f9(2): JNZ 0x00012624
000125fb(2): XOR EAX,EAX
000125fd(7): CMP RBX,0x7fff
00012604(3): SETG AL
00012607(3): TEST RAX,RAX
0001260a(6): JZ 0x00012468
00012610(5): MOV RAX,qword ptr [RSP + 0x40]
00012615(6): MOV dword ptr [RAX],0xf
0001261b(2): JMP 0x0001265b
00012620(4): MOV qword ptr [RSP],RBX
00012624(2): XOR EAX,EAX
00012626(8): CMP qword ptr [RSP],0x7fff
0001262e(3): SETG AL
00012631(2): JMP 0x00012607
00012633(5): MOV RAX,qword ptr [RSP + 0x18]
00012638(3): CMP byte ptr [RAX],0x2c
0001263b(6): JZ 0x000125af
00012641(9): TEST qword ptr [RSP + 0x20],0x200000
0001264a(6): JNZ 0x0001251c
00012650(5): MOV RAX,qword ptr [RSP + 0x40]
00012655(6): MOV dword ptr [RAX],0xa
0001265b(6): CMP qword ptr [RSP + 0x28],0x0
00012661(6): JNZ 0x0001243b
00012667(5): JMP 0x000120b0
00012670(5): MOV RAX,qword ptr [RSP + 0x18]
00012675(2): MOV EBP,dword ptr [RAX]
00012677(6): TEST EBP,0x30f
0001267d(2): JZ 0x000126e1
0001267f(5): MOV RAX,qword ptr [RSP + 0x10]
00012684(7): MOVZX EAX,byte ptr [0xb0 + RAX]
0001268b(2): TEST AL,0x10
0001268d(2): JNZ 0x000126e1
0001268f(5): MOV RDI,qword ptr [RSP + 0x10]
00012694(3): OR EAX,0x10
00012697(2): TEST AL,0x8
00012699(6): MOV byte ptr [0xb0 + RDI],AL
0001269f(6): JNZ 0x000132a3
000126a5(10): MOV RDX,0x3ff000000000000
000126af(2): TEST AL,0x4
000126b1(7): MOV qword ptr [0xb8 + RDI],RDX
000126b8(10): MOV RDX,0x7fffffe87fffffe
000126c2(7): MOV qword ptr [0xc0 + RDI],RDX
000126c9(6): JZ 0x00013228
000126cf(4): PXOR XMM0,XMM0
000126d3(5): MOV RAX,qword ptr [RSP + 0x18]
000126d8(7): MOVUPS xmmword ptr [0xc8 + RDI],XMM0
000126df(2): MOV EBP,dword ptr [RAX]
000126e1(5): MOV RAX,qword ptr [RSP + 0x10]
000126e6(4): LEA RBX,[RAX + 0x70]
000126ea(7): LEA R12,[0x80 + RAX]
000126f1(6): LEA EAX,[-0x100 + RBP]
000126f7(5): TEST EAX,0xfffffeff
000126fc(6): JNZ 0x00012d6a
00012702(6): CMP EBP,0x100
00012708(5): MOV R15,qword ptr [RSP + 0x18]
0001270d(6): JZ 0x00012d42
00012713(7): MOV dword ptr [R15],0x5
0001271a(3): MOV R8,R15
0001271d(2): XOR ECX,ECX
0001271f(2): XOR EDX,EDX
00012721(3): MOV RSI,R12
00012724(3): MOV RDI,RBX
00012727(5): CALL 0x000098b0
0001272c(7): MOV dword ptr [R15],0xa
00012733(3): MOV RBP,RAX
00012736(5): MOV R8,qword ptr [RSP + 0x18]
0001273b(2): XOR ECX,ECX
0001273d(2): XOR EDX,EDX
0001273f(3): MOV RSI,R12
00012742(3): MOV RDI,RBX
00012745(5): CALL 0x000098b0
0001274a(8): LEA R8,[0xc0 + RSP]
00012752(3): MOV RDX,RBP
00012755(3): MOV RDI,RBX
00012758(3): MOV RCX,RAX
0001275b(3): MOV RSI,R12
0001275e(3): MOV R13,RAX
00012761(8): MOV byte ptr [0xc8 + RSP],0xa
00012769(5): CALL 0x000098b0
0001276e(3): TEST RBP,RBP
00012771(3): MOV RDI,RAX
00012774(5): MOV qword ptr [RSP + 0x28],RAX
00012779(3): SETZ DL
0001277c(3): TEST R13,R13
0001277f(3): SETZ AL
00012782(2): OR DL,AL
00012784(6): JNZ 0x00012b18
0001278a(3): TEST RDI,RDI
0001278d(6): JZ 0x00012b18
00012793(5): MOV RDX,qword ptr [RSP + 0x20]
00012798(5): MOV RDI,qword ptr [RSP + 0x18]
0001279d(3): MOV RSI,R14
000127a0(5): CALL 0x000117f0
000127a5(2): CDQE
000127a7(4): ADD qword ptr [R14 + 0x48],RAX
000127ab(5): JMP 0x000120c0
000127b0(5): MOV ESI,0x1
000127b5(5): MOV EDI,0x20
000127ba(12): MOV qword ptr [0x98 + RSP],0x0
000127c6(5): CALL 0x00001bc0
000127cb(5): MOV ESI,0x1
000127d0(3): MOV R12,RAX
000127d3(5): MOV EDI,0x50
000127d8(5): CALL 0x00001bc0
000127dd(3): TEST R12,R12
000127e0(3): MOV R13,RAX
000127e3(3): SETZ DL
000127e6(3): TEST RAX,RAX
000127e9(3): SETZ AL
000127ec(2): OR DL,AL
000127ee(6): JNZ 0x00012fc9
000127f4(5): MOV R10,qword ptr [RSP + 0x18]
000127f9(5): MOV RDX,qword ptr [RSP + 0x20]
000127fe(3): MOV RSI,R14
00012801(3): MOV RDI,R10
00012804(5): CALL 0x000070e0
00012809(3): MOVSXD RBX,EAX
0001280c(5): MOVZX EAX,byte ptr [R10 + 0x8]
00012811(2): CMP AL,0x2
00012813(6): JZ 0x00012fb9
00012819(2): CMP AL,0x19
0001281b(5): MOV byte ptr [RSP + 0x57],0x0
00012820(6): JZ 0x00012cea
00012826(2): CMP AL,0x15
00012828(6): JZ 0x00012d34
0001282e(8): LEA RAX,[0xd0 + RSP]
00012836(5): MOV R15,qword ptr [RSP + 0x18]
0001283b(7): LEA RBP,[0x16f94]
00012842(9): MOV qword ptr [RSP + 0x48],0x0
0001284b(6): MOV R9D,0x1
00012851(9): MOV qword ptr [RSP + 0x30],0x0
0001285a(5): MOV qword ptr [RSP + 0x28],RAX
0001285f(8): LEA RAX,[0xa0 + RSP]
00012867(4): MOV qword ptr [RSP],RAX
0001286b(8): LEA RAX,[0x98 + RSP]
00012873(5): MOV qword ptr [RSP + 0x58],RAX
00012878(8): LEA RAX,[0xc0 + RSP]
00012880(5): MOV qword ptr [RSP + 0x60],RAX
00012885(8): LEA RAX,[0xf0 + RSP]
0001288d(5): MOV qword ptr [RSP + 0x68],RAX
00012892(5): MOV RAX,qword ptr [RSP + 0x28]
00012897(5): MOV R8,qword ptr [RSP + 0x20]
0001289c(4): AND R9D,0x1
000128a0(4): MOV RDI,qword ptr [RSP]
000128a4(2): MOV ECX,EBX
000128a6(3): MOV RDX,R15
000128a9(3): MOV RSI,R14
000128ac(11): MOV dword ptr [0xa0 + RSP],0x3
000128b7(8): MOV qword ptr [0xa8 + RSP],RAX
000128bf(5): CALL 0x00011590
000128c4(2): TEST EAX,EAX
000128c6(6): JNZ 0x00012dab
000128cc(5): MOV RDX,qword ptr [RSP + 0x20]
000128d1(3): MOV RSI,R14
000128d4(3): MOV RDI,R15
000128d7(5): CALL 0x000070e0
000128dc(3): MOVSXD RBX,EAX
000128df(7): MOV EAX,dword ptr [0xa0 + RSP]
000128e6(3): LEA EDX,[RAX + -0x2]
000128e9(3): AND EDX,0xfffffffd
000128ec(2): JZ 0x00012905
000128ee(5): MOVZX EDX,byte ptr [R15 + 0x8]
000128f3(3): CMP DL,0x2
000128f6(6): JZ 0x00012d91
000128fc(3): CMP DL,0x16
000128ff(6): JZ 0x00012db7
00012905(3): CMP EAX,0x4
00012908(6): JA 0x000132aa
0001290e(5): MOVSXD RAX,dword ptr [RBP + RAX*0x4]
00012913(3): ADD RAX,RBP
00012916(2): JMP RAX
00012918(5): MOV RBX,qword ptr [RSP + 0x40]
0001291d(3): CMP CL,0x23
00012920(4): MOV RSI,qword ptr [RDI + 0x78]
00012924(4): SETZ R8B
00012928(7): LEA RCX,[0x16761]
0001292f(7): LEA RDX,[0x16b0f]
00012936(4): MOVZX R8D,R8B
0001293a(3): MOV R9,RBX
0001293d(5): MOV RDI,qword ptr [RSP + 0x10]
00012942(5): CALL 0x0000cc00
00012947(2): MOV EDI,dword ptr [RBX]
00012949(5): MOV qword ptr [RSP + 0x28],RAX
0001294e(2): TEST EDI,EDI
00012950(6): JZ 0x0001214c
00012956(3): TEST RAX,RAX
00012959(6): JNZ 0x0001214c
0001295f(5): JMP 0x000120b0
00012968(5): MOV RBX,qword ptr [RSP + 0x40]
0001296d(3): CMP CL,0x21
00012970(4): MOV RSI,qword ptr [RDI + 0x78]
00012974(4): SETZ R8B
00012978(7): LEA RCX,[0x1601a]
0001297f(7): LEA RDX,[0x16b03]
00012986(4): MOVZX R8D,R8B
0001298a(3): MOV R9,RBX
0001298d(2): JMP 0x0001293d
0001298f(5): MOV RAX,qword ptr [RSP + 0x18]
00012994(5): MOV RDI,qword ptr [RSP + 0x10]
00012999(3): MOV RCX,qword ptr [RAX]
0001299c(5): MOV EAX,0x1
000129a1(2): SHL EAX,CL
000129a3(2): CDQE
000129a5(7): TEST qword ptr [0xa8 + RDI],RAX
000129ac(6): JZ 0x00012fde
000129b2(5): MOV RBX,qword ptr [RSP + 0x10]
000129b7(5): MOV R8,qword ptr [RSP + 0x18]
000129bc(2): XOR ECX,ECX
000129be(2): XOR EDX,EDX
000129c0(7): OR qword ptr [0xa0 + RBX],RAX
000129c7(7): LEA RSI,[0x80 + RBX]
000129ce(4): LEA RDI,[RBX + 0x70]
000129d2(5): CALL 0x000098b0
000129d7(3): TEST RAX,RAX
000129da(5): MOV qword ptr [RSP + 0x28],RAX
000129df(6): JZ 0x00012b18
000129e5(8): ADD qword ptr [0x98 + RBX],0x1
000129ed(7): OR byte ptr [0xb0 + RBX],0x2
000129f4(5): JMP 0x0001214c
000129f9(5): MOV RBX,qword ptr [RSP + 0x10]
000129fe(5): MOV R8,qword ptr [RSP + 0x18]
00012a03(2): XOR ECX,ECX
00012a05(2): XOR EDX,EDX
00012a07(7): LEA RSI,[0x80 + RBX]
00012a0e(4): LEA RDI,[RBX + 0x70]
00012a12(5): CALL 0x000098b0
00012a17(3): TEST RAX,RAX
00012a1a(5): MOV qword ptr [RSP + 0x28],RAX
00012a1f(6): JZ 0x00012b18
00012a25(7): CMP dword ptr [0xb4 + RBX],0x1
00012a2c(6): JLE 0x0001214c
00012a32(7): OR byte ptr [0xb0 + RBX],0x2
00012a39(5): JMP 0x0001214c
00012a3e(5): MOV RAX,qword ptr [RSP + 0x10]
00012a43(5): MOV R8,qword ptr [RSP + 0x18]
00012a48(2): XOR ECX,ECX
00012a4a(2): XOR EDX,EDX
00012a4c(4): LEA RBX,[RAX + 0x70]
00012a50(7): LEA RBP,[0x80 + RAX]
00012a57(3): MOV RDI,RBX
00012a5a(3): MOV RSI,RBP
00012a5d(5): CALL 0x000098b0
00012a62(3): TEST RAX,RAX
00012a65(5): MOV qword ptr [RSP + 0x28],RAX
00012a6a(6): JZ 0x00012b18
00012a70(5): MOV RAX,qword ptr [RSP + 0x10]
00012a75(8): LEA R12,[0xc0 + RSP]
00012a7d(5): MOV R15,qword ptr [RSP + 0x28]
00012a82(7): CMP dword ptr [0xb4 + RAX],0x1
00012a89(6): JLE 0x0001214c
00012a8f(4): MOV RAX,qword ptr [R14 + 0x48]
00012a93(4): CMP qword ptr [R14 + 0x68],RAX
00012a97(6): JLE 0x00012da1
00012a9d(4): CMP RAX,qword ptr [R14 + 0x30]
00012aa1(6): JZ 0x00012da1
00012aa7(4): MOV RDX,qword ptr [R14 + 0x10]
00012aab(4): CMP dword ptr [RDX + RAX*0x4],-0x1
00012aaf(6): JNZ 0x00012da1
00012ab5(5): MOV R13,qword ptr [RSP + 0x18]
00012aba(5): MOV RDX,qword ptr [RSP + 0x20]
00012abf(3): MOV RSI,R14
00012ac2(3): MOV RDI,R13
00012ac5(5): CALL 0x000117f0
00012aca(2): CDQE
00012acc(4): ADD qword ptr [R14 + 0x48],RAX
00012ad0(3): MOV R8,R13
00012ad3(2): XOR ECX,ECX
00012ad5(2): XOR EDX,EDX
00012ad7(3): MOV RSI,RBP
00012ada(3): MOV RDI,RBX
00012add(5): CALL 0x000098b0
00012ae2(3): MOV RDX,R15
00012ae5(3): MOV R13,RAX
00012ae8(3): MOV R8,R12
00012aeb(3): MOV RCX,RAX
00012aee(3): MOV RSI,RBP
00012af1(3): MOV RDI,RBX
00012af4(8): MOV byte ptr [0xc8 + RSP],0x10
00012afc(5): CALL 0x000098b0
00012b01(3): TEST R13,R13
00012b04(3): MOV R15,RAX
00012b07(3): SETZ DL
00012b0a(3): TEST RAX,RAX
00012b0d(3): SETZ AL
00012b10(2): OR DL,AL
00012b12(6): JZ 0x00012a8f
00012b18(5): MOV RAX,qword ptr [RSP + 0x40]
00012b1d(6): MOV dword ptr [RAX],0xc
00012b23(5): JMP 0x000120b0
00012b28(9): TEST qword ptr [RSP + 0x20],0x20000
00012b31(6): JNZ 0x0001211b
00012b37(5): MOV RAX,qword ptr [RSP + 0x40]
00012b3c(9): MOV qword ptr [RSP + 0x28],0x0
00012b45(6): MOV dword ptr [RAX],0x10
00012b4b(5): JMP 0x000120c0
00012b50(4): CMP RBX,0x8
00012b54(2): JBE 0x00012bbb
00012b56(5): MOV RDI,qword ptr [RSP + 0x10]
00012b5b(8): LEA R8,[0xc0 + RSP]
00012b63(2): XOR ECX,ECX
00012b65(3): MOV RDX,RAX
00012b68(8): MOV byte ptr [0xc8 + RSP],0x11
00012b70(7): LEA RSI,[0x80 + RDI]
00012b77(4): ADD RDI,0x70
00012b7b(5): CALL 0x000098b0
00012b80(3): TEST RAX,RAX
00012b83(5): MOV qword ptr [RSP + 0x28],RAX
00012b88(2): JZ 0x00012b18
00012b8a(4): MOV qword ptr [RAX + 0x28],RBX
00012b8e(5): JMP 0x0001214c
00012b93(5): MOV RAX,qword ptr [RSP + 0x40]
00012b98(9): MOV qword ptr [RSP + 0x28],0x0
00012ba1(6): MOV dword ptr [RAX],0x5
00012ba7(5): JMP 0x000120c0
00012bac(5): MOV R13,qword ptr [RSP + 0x28]
00012bb1(5): MOV qword ptr [RSP + 0x30],R13
00012bb6(5): JMP 0x00012404
00012bbb(5): MOV RSI,qword ptr [RSP + 0x10]
00012bc0(5): MOV EDX,0x1
00012bc5(2): MOV ECX,EBX
00012bc7(2): SHL EDX,CL
00012bc9(3): MOVSXD RDX,EDX
00012bcc(7): OR qword ptr [0xa8 + RSI],RDX
00012bd3(2): JMP 0x00012b56
00012bd5(8): MOV RSI,qword ptr [0xa8 + RSP]
00012bdd(3): MOV RDI,R12
00012be0(5): CALL 0x0000c3a0
00012be5(5): MOV RDX,qword ptr [RSP + 0x40]
00012bea(2): TEST EAX,EAX
00012bec(2): MOV dword ptr [RDX],EAX
00012bee(2): JNZ 0x00012c28
00012bf0(5): MOVZX EAX,byte ptr [R15 + 0x8]
00012bf5(2): CMP AL,0x2
00012bf7(6): JZ 0x00012d91
00012bfd(2): CMP AL,0x15
00012bff(6): JZ 0x00013012
00012c05(3): XOR R9D,R9D
00012c08(5): JMP 0x00012892
00012c0d(8): MOV RSI,qword ptr [0xa8 + RSP]
00012c15(3): MOV RDI,R12
00012c18(5): CALL 0x0000c3a0
00012c1d(5): MOV RDX,qword ptr [RSP + 0x40]
00012c22(2): TEST EAX,EAX
00012c24(2): MOV dword ptr [RDX],EAX
00012c26(2): JZ 0x00012bf0
00012c28(3): MOV RDI,R12
00012c2b(5): CALL 0x000019d0
00012c30(3): MOV RDI,R13
00012c33(5): CALL 0x00008310
00012c38(5): MOV RAX,qword ptr [RSP + 0x40]
00012c3d(3): MOV R8D,dword ptr [RAX]
00012c40(3): TEST R8D,R8D
00012c43(6): JNZ 0x000120b0
00012c49(9): MOV qword ptr [RSP + 0x28],0x0
00012c52(5): JMP 0x0001214c
00012c57(4): MOV RDX,qword ptr [R13 + 0x28]
00012c5b(5): CMP RDX,qword ptr [RSP + 0x30]
00012c60(4): MOV RAX,qword ptr [R13]
00012c64(6): JZ 0x0001315e
00012c6a(4): LEA RCX,[RDX + 0x1]
00012c6e(4): MOV qword ptr [R13 + 0x28],RCX
00012c72(7): MOV ECX,dword ptr [0xa8 + RSP]
00012c79(3): MOV dword ptr [RAX + RDX*0x4],ECX
00012c7c(5): JMP 0x00012bf0
00012c81(8): MOVZX EDX,byte ptr [0xa8 + RSP]
00012c89(5): MOV ESI,0x1
00012c8e(3): MOV RAX,RDX
00012c91(3): AND EDX,0x3f
00012c94(4): SHR RAX,0x3
00012c98(2): MOV ECX,EDX
00012c9a(3): AND EAX,0x18
00012c9d(3): SHL RSI,CL
00012ca0(4): OR qword ptr [R12 + RAX*0x1],RSI
00012ca4(5): JMP 0x00012bf0
00012ca9(4): SUB RSP,0x8
00012cad(4): MOV RDI,qword ptr [R14 + 0x78]
00012cb1(4): LEA RDX,[R13 + 0x18]
00012cb5(4): PUSH qword ptr [RSP + 0x28]
00012cb9(8): MOV R9,qword ptr [0xb8 + RSP]
00012cc1(4): LEA RCX,[R13 + 0x48]
00012cc5(5): MOV R8,qword ptr [RSP + 0x68]
00012cca(3): MOV RSI,R12
00012ccd(5): CALL 0x0000c3f0
00012cd2(5): MOV RDX,qword ptr [RSP + 0x50]
00012cd7(2): TEST EAX,EAX
00012cd9(2): MOV dword ptr [RDX],EAX
00012cdb(2): POP R9
00012cdd(2): POP R10
00012cdf(6): JZ 0x00012bf0
00012ce5(5): JMP 0x00012c28
00012cea(5): OR byte ptr [R13 + 0x20],0x1
00012cef(9): TEST qword ptr [RSP + 0x20],0x100
00012cf8(2): JZ 0x00012d02
00012cfa(8): OR qword ptr [R12],0x400
00012d02(4): ADD qword ptr [R14 + 0x48],RBX
00012d06(5): MOV R11,qword ptr [RSP + 0x18]
00012d0b(3): MOV RSI,R14
00012d0e(5): MOV RDX,qword ptr [RSP + 0x20]
00012d13(3): MOV RDI,R11
00012d16(5): CALL 0x000070e0
00012d1b(2): MOV EBX,EAX
00012d1d(5): MOVZX EAX,byte ptr [R11 + 0x8]
00012d22(2): CMP AL,0x2
00012d24(6): JZ 0x00012fb9
00012d2a(5): MOV byte ptr [RSP + 0x57],0x1
00012d2f(5): JMP 0x00012826
00012d34(5): MOV RAX,qword ptr [RSP + 0x18]
00012d39(4): MOV byte ptr [RAX + 0x8],0x1
00012d3d(5): JMP 0x0001282e
00012d42(7): MOV dword ptr [R15],0x6
00012d49(3): MOV R8,R15
00012d4c(2): XOR ECX,ECX
00012d4e(2): XOR EDX,EDX
00012d50(3): MOV RSI,R12
00012d53(3): MOV RDI,RBX
00012d56(5): CALL 0x000098b0
00012d5b(7): MOV dword ptr [R15],0x9
00012d62(3): MOV RBP,RAX
00012d65(5): JMP 0x00012736
00012d6a(5): MOV R8,qword ptr [RSP + 0x18]
00012d6f(2): XOR ECX,ECX
00012d71(2): XOR EDX,EDX
00012d73(3): MOV RSI,R12
00012d76(3): MOV RDI,RBX
00012d79(5): CALL 0x000098b0
00012d7e(3): TEST RAX,RAX
00012d81(5): MOV qword ptr [RSP + 0x28],RAX
00012d86(6): JNZ 0x00012793
00012d8c(5): JMP 0x00012b18
00012d91(5): MOV RAX,qword ptr [RSP + 0x40]
00012d96(6): MOV dword ptr [RAX],0x7
00012d9c(5): JMP 0x00012c28
00012da1(5): MOV qword ptr [RSP + 0x28],R15
00012da6(5): JMP 0x0001214c
00012dab(5): MOV RDX,qword ptr [RSP + 0x40]
00012db0(2): MOV dword ptr [RDX],EAX
00012db2(5): JMP 0x00012c28
00012db7(3): MOVSXD RAX,EBX
00012dba(5): MOV R11,qword ptr [RSP + 0x20]
00012dbf(4): ADD qword ptr [R14 + 0x48],RAX
00012dc3(5): MOV R10,qword ptr [RSP + 0x60]
00012dc8(3): MOV RDX,R11
00012dcb(3): MOV RDI,R10
00012dce(5): CALL 0x000070e0
00012dd3(8): MOVZX EDX,byte ptr [0xc8 + RSP]
00012ddb(3): CMP DL,0x2
00012dde(2): JZ 0x00012d91
00012de0(3): CMP DL,0x15
00012de3(6): JZ 0x00012ff7
00012de9(5): MOV RDX,qword ptr [RSP + 0x68]
00012dee(8): LEA RDI,[0xb0 + RSP]
00012df6(6): MOV R9D,0x1
00012dfc(3): MOV R8,R11
00012dff(2): MOV ECX,EAX
00012e01(11): MOV dword ptr [0xb0 + RSP],0x3
00012e0c(8): MOV qword ptr [0xb8 + RSP],RDX
00012e14(3): MOV RDX,R10
00012e17(5): CALL 0x00011590
00012e1c(2): TEST EAX,EAX
00012e1e(2): JNZ 0x00012dab
00012e20(5): MOV RDX,qword ptr [RSP + 0x20]
00012e25(3): MOV RSI,R14
00012e28(3): MOV RDI,R15
00012e2b(5): CALL 0x000070e0
00012e30(3): MOVSXD RBX,EAX
00012e33(5): MOV RAX,qword ptr [RSP + 0x10]
00012e38(7): MOV ESI,dword ptr [0xa0 + RSP]
00012e3f(6): MOV R9D,0x0
00012e45(7): CMP dword ptr [0xb4 + RAX],0x1
00012e4c(3): LEA EAX,[RSI + -0x2]
00012e4f(4): CMOVG R9,R13
00012e53(3): AND EAX,0xfffffffd
00012e56(6): JZ 0x000132c9
00012e5c(8): MOV R10D,dword ptr [0xb0 + RSP]
00012e64(4): LEA EAX,[R10 + -0x2]
00012e68(3): AND EAX,0xfffffffd
00012e6b(6): JZ 0x000132c9
00012e71(3): CMP ESI,0x3
00012e74(4): SETZ R11B
00012e78(6): JZ 0x0001330d
00012e7e(4): CMP R10D,0x3
00012e82(6): JZ 0x000132d9
00012e88(2): TEST ESI,ESI
00012e8a(6): JNZ 0x000131f9
00012e90(8): MOVZX EDX,byte ptr [0xa8 + RSP]
00012e98(3): TEST R10D,R10D
00012e9b(6): JNZ 0x000131dd
00012ea1(9): MOVZX R8D,byte ptr [0xb8 + RSP]
00012eaa(2): TEST ESI,ESI
00012eac(6): JZ 0x00013196
00012eb2(3): TEST R11B,R11B
00012eb5(6): JNZ 0x00013196
00012ebb(3): TEST R9,R9
00012ebe(7): MOV EDX,dword ptr [0xa8 + RSP]
00012ec5(2): JZ 0x00012ee4
00012ec7(3): MOV EDI,R8D
00012eca(4): MOV dword ptr [RSP + 0x78],EDX
00012ece(5): MOV qword ptr [RSP + 0x70],R9
00012ed3(5): CALL 0x00001cd0
00012ed8(5): MOV R9,qword ptr [RSP + 0x70]
00012edd(4): MOV EDX,dword ptr [RSP + 0x78]
00012ee1(3): MOV R8D,EAX
00012ee4(3): CMP EDX,-0x1
00012ee7(6): JZ 0x000132fd
00012eed(4): CMP R8D,-0x1
00012ef1(6): JZ 0x000132fd
00012ef7(9): TEST qword ptr [RSP + 0x20],0x10000
00012f00(2): JZ 0x00012f0b
00012f02(3): CMP R8D,EDX
00012f05(6): JC 0x000132c9
00012f0b(3): TEST R9,R9
00012f0e(2): JZ 0x00012f36
00012f10(4): MOV RAX,qword ptr [R9 + 0x40]
00012f14(5): CMP RAX,qword ptr [RSP + 0x48]
00012f19(4): MOV RCX,qword ptr [R9 + 0x8]
00012f1d(6): JZ 0x00013333
00012f23(3): MOV dword ptr [RCX + RAX*0x4],EDX
00012f26(4): MOV RCX,qword ptr [R9 + 0x10]
00012f2a(4): LEA RSI,[RAX + 0x1]
00012f2e(4): MOV qword ptr [R9 + 0x40],RSI
00012f32(4): MOV dword ptr [RCX + RAX*0x4],R8D
00012f36(2): XOR EAX,EAX
00012f38(5): MOV EDI,0x1
00012f3d(2): CMP EDX,EAX
00012f3f(2): MOV ECX,EAX
00012f41(2): JA 0x00012f59
00012f43(3): CMP R8D,EAX
00012f46(2): JC 0x00012f59
00012f48(3): MOV RSI,RAX
00012f4b(3): MOV R11,RDI
00012f4e(4): SAR RSI,0x6
00012f52(3): SHL R11,CL
00012f55(4): OR qword ptr [R12 + RSI*0x8],R11
00012f59(4): ADD RAX,0x1
00012f5d(6): CMP RAX,0x100
00012f63(2): JNZ 0x00012f3d
00012f65(5): MOV RAX,qword ptr [RSP + 0x40]
00012f6a(6): MOV dword ptr [RAX],0x0
00012f70(5): JMP 0x00012bf0
00012f75(5): MOV RBX,qword ptr [RSP + 0x18]
00012f7a(3): MOV RDX,RAX
00012f7d(3): MOV RSI,R14
00012f80(4): MOV qword ptr [RSP],R8
00012f84(3): MOV R15,RAX
00012f87(3): MOV RDI,RBX
00012f8a(5): CALL 0x000117f0
00012f8f(2): CDQE
00012f91(4): ADD qword ptr [R14 + 0x48],RAX
00012f95(5): MOV R9,qword ptr [RSP + 0x40]
00012f9a(4): MOV R8,qword ptr [RSP]
00012f9e(3): MOV RCX,R15
00012fa1(3): MOV RDX,RBX
00012fa4(3): MOV RSI,RBP
00012fa7(3): MOV RDI,R14
00012faa(5): CALL 0x00011fb0
00012faf(5): MOV qword ptr [RSP + 0x28],RAX
00012fb4(5): JMP 0x000120c0
00012fb9(5): MOV RAX,qword ptr [RSP + 0x40]
00012fbe(6): MOV dword ptr [RAX],0x2
00012fc4(5): JMP 0x00012c28
00012fc9(3): MOV RDI,R12
00012fcc(5): CALL 0x000019d0
00012fd1(3): MOV RDI,R13
00012fd4(5): CALL 0x000019d0
00012fd9(5): JMP 0x00012b18
00012fde(5): MOV RAX,qword ptr [RSP + 0x40]
00012fe3(9): MOV qword ptr [RSP + 0x28],0x0
00012fec(6): MOV dword ptr [RAX],0x6
00012ff2(5): JMP 0x000120c0
00012ff7(2): MOV EAX,EBX
00012ff9(2): NEG EAX
00012ffb(2): CDQE
00012ffd(4): ADD qword ptr [R14 + 0x48],RAX
00013001(5): MOV byte ptr [R15 + 0x8],0x1
00013006(7): MOV EAX,dword ptr [0xa0 + RSP]
0001300d(5): JMP 0x00012905
00013012(4): ADD qword ptr [R14 + 0x48],RBX
00013016(5): CMP byte ptr [RSP + 0x57],0x0
0001301b(2): JZ 0x00013031
0001301d(5): LEA RDX,[R12 + 0x20]
00013022(3): MOV RAX,R12
00013025(3): NOT qword ptr [RAX]
00013028(4): ADD RAX,0x8
0001302c(3): CMP RDX,RAX
0001302f(2): JNZ 0x00013025
00013031(5): MOV RAX,qword ptr [RSP + 0x10]
00013036(6): MOV EDX,dword ptr [0xb4 + RAX]
0001303c(3): CMP EDX,0x1
0001303f(2): JLE 0x00013059
00013041(4): MOV RCX,qword ptr [RAX + 0x78]
00013045(2): XOR EAX,EAX
00013047(4): MOV RSI,qword ptr [RCX + RAX*0x1]
0001304b(4): AND qword ptr [R12 + RAX*0x1],RSI
0001304f(4): ADD RAX,0x8
00013053(4): CMP RAX,0x20
00013057(2): JNZ 0x00013047
00013059(5): CMP qword ptr [R13 + 0x28],0x0
0001305e(6): JNZ 0x000130e8
00013064(5): CMP qword ptr [R13 + 0x30],0x0
00013069(2): JNZ 0x000130e8
0001306b(5): CMP qword ptr [R13 + 0x38],0x0
00013070(2): JNZ 0x000130e8
00013072(5): CMP qword ptr [R13 + 0x40],0x0
00013077(2): JNZ 0x000130e8
00013079(3): SUB EDX,0x1
0001307c(2): JLE 0x0001308c
0001307e(5): CMP qword ptr [R13 + 0x48],0x0
00013083(2): JNZ 0x000130e8
00013085(5): TEST byte ptr [R13 + 0x20],0x1
0001308a(2): JNZ 0x000130e8
0001308c(3): MOV RDI,R13
0001308f(5): CALL 0x00008310
00013094(5): MOV RAX,qword ptr [RSP + 0x10]
00013099(8): LEA R8,[0xb0 + RSP]
000130a1(2): XOR ECX,ECX
000130a3(2): XOR EDX,EDX
000130a5(8): MOV byte ptr [0xb8 + RSP],0x3
000130ad(8): MOV qword ptr [0xb0 + RSP],R12
000130b5(7): LEA RSI,[0x80 + RAX]
000130bc(4): LEA RDI,[RAX + 0x70]
000130c0(5): CALL 0x000098b0
000130c5(3): TEST RAX,RAX
000130c8(5): MOV qword ptr [RSP + 0x28],RAX
000130cd(6): JNZ 0x0001214c
000130d3(5): MOV RAX,qword ptr [RSP + 0x40]
000130d8(6): MOV dword ptr [RAX],0xc
000130de(5): JMP 0x00012c28
000130e8(5): MOV RAX,qword ptr [RSP + 0x10]
000130ed(8): LEA R15,[0xb0 + RSP]
000130f5(2): XOR EDX,EDX
000130f7(2): XOR ECX,ECX
000130f9(3): MOV R8,R15
000130fc(7): OR byte ptr [0xb0 + RAX],0x2
00013103(4): LEA RBX,[RAX + 0x70]
00013107(7): LEA RBP,[0x80 + RAX]
0001310e(8): MOV byte ptr [0xb8 + RSP],0x6
00013116(8): MOV qword ptr [0xb0 + RSP],R13
0001311e(3): MOV RDI,RBX
00013121(3): MOV RSI,RBP
00013124(5): CALL 0x000098b0
00013129(3): MOV RDI,RAX
0001312c(5): MOV qword ptr [RSP + 0x28],RAX
00013131(5): LEA RDX,[R12 + 0x20]
00013136(3): TEST RDI,RDI
00013139(3): MOV RAX,R12
0001313c(2): JZ 0x000130d3
0001313e(4): CMP qword ptr [RAX],0x0
00013142(6): JNZ 0x000133ed
00013148(4): ADD RAX,0x8
0001314c(3): CMP RDX,RAX
0001314f(2): JNZ 0x0001313e
00013151(3): MOV RDI,R12
00013154(5): CALL 0x000019d0
00013159(5): JMP 0x0001214c
0001315e(5): MOV RDX,qword ptr [RSP + 0x30]
00013163(5): LEA RDI,[RDX + RDX*0x1 + 0x1]
00013168(8): LEA RSI,[RDI*0x4]
00013170(5): MOV qword ptr [RSP + 0x30],RDI
00013175(3): MOV RDI,RAX
00013178(5): CALL 0x00001c90
0001317d(3): TEST RAX,RAX
00013180(6): JZ 0x000130d3
00013186(4): MOV qword ptr [R13],RAX
0001318a(4): MOV RDX,qword ptr [R13 + 0x28]
0001318e(5): JMP 0x00012c6a
00013193(3): XOR R8D,R8D
00013196(3): TEST R9,R9
00013199(2): JZ 0x00013214
0001319b(2): MOV EDI,EDX
0001319d(5): MOV dword ptr [RSP + 0x78],R8D
000131a2(5): MOV qword ptr [RSP + 0x70],R9
000131a7(5): CALL 0x00001cd0
000131ac(2): MOV EDX,EAX
000131ae(7): MOV EAX,dword ptr [0xb0 + RSP]
000131b5(5): MOV R9,qword ptr [RSP + 0x70]
000131ba(5): MOV R8D,dword ptr [RSP + 0x78]
000131bf(3): CMP EAX,0x3
000131c2(6): JZ 0x00012ec7
000131c8(2): TEST EAX,EAX
000131ca(6): JZ 0x00012ec7
000131d0(8): MOV R8D,dword ptr [0xb8 + RSP]
000131d8(5): JMP 0x00012ee4
000131dd(4): CMP R10D,0x3
000131e1(6): JZ 0x00013472
000131e7(2): TEST ESI,ESI
000131e9(2): JZ 0x00013193
000131eb(3): TEST R11B,R11B
000131ee(2): JNZ 0x00013193
000131f0(7): MOV EDX,dword ptr [0xa8 + RSP]
000131f7(2): JMP 0x000131d0
000131f9(2): XOR EDX,EDX
000131fb(3): CMP ESI,0x3
000131fe(6): JNZ 0x00012e98
00013204(8): MOV RAX,qword ptr [0xa8 + RSP]
0001320c(3): MOVZX EDX,byte ptr [RAX]
0001320f(5): JMP 0x00012e98
00013214(3): TEST R10D,R10D
00013217(6): JZ 0x00012ef7
0001321d(4): CMP R10D,0x3
00013221(2): JNZ 0x000131d0
00013223(5): JMP 0x00012ef7
00013228(5): MOV EBX,0x80
0001322d(6): MOV R12D,0x2
00013233(5): CALL 0x00001dc0
00013238(3): MOVSXD RDX,EBX
0001323b(3): MOVSXD R9,R12D
0001323e(6): MOV R8D,0x1
00013244(3): ADD RDX,RDX
00013247(3): ADD RDX,qword ptr [RAX]
0001324a(5): MOV RAX,qword ptr [RSP + 0x10]
0001324f(4): LEA RDI,[RAX + R9*0x8]
00013253(2): XOR EAX,EAX
00013255(2): JMP 0x00013272
00013260(3): LEA ESI,[RBX + RAX*0x1]
00013263(3): CMP ESI,0x5f
00013266(2): JZ 0x0001327a
00013268(4): ADD RAX,0x1
0001326c(4): CMP RAX,0x40
00013270(2): JZ 0x00013289
00013272(4): TEST byte ptr [RDX + RAX*0x2],0x8
00013276(2): MOV ECX,EAX
00013278(2): JZ 0x00013260
0001327a(3): MOV RSI,R8
0001327d(3): SHL RSI,CL
00013280(7): OR qword ptr [0xb8 + RDI],RSI
00013287(2): JMP 0x00013268
00013289(4): ADD R9,0x1
0001328d(3): ADD EBX,0x40
00013290(4): SUB RDX,-0x80
00013294(4): ADD RDI,0x8
00013298(4): CMP R9D,0x3
0001329c(2): JLE 0x00013253
0001329e(5): JMP 0x000126e1
000132a3(2): XOR EBX,EBX
000132a5(3): XOR R12D,R12D
000132a8(2): JMP 0x00013233
000132aa(7): LEA RCX,[0x17070]
000132b1(7): LEA RSI,[0x16aa0]
000132b8(7): LEA RDI,[0x15f8d]
000132bf(5): MOV EDX,0xced
000132c4(5): CALL 0x00001b50
000132c9(5): MOV RAX,qword ptr [RSP + 0x40]
000132ce(6): MOV dword ptr [RAX],0xb
000132d4(5): JMP 0x00012c28
000132d9(8): MOV RDI,qword ptr [0xb8 + RSP]
000132e1(2): XOR EAX,EAX
000132e3(4): OR RCX,-0x1
000132e7(2): SCASB.REPNE RDI
000132e9(3): MOV RAX,RCX
000132ec(3): NOT RAX
000132ef(4): SUB RAX,0x1
000132f3(4): CMP RAX,0x1
000132f7(6): JBE 0x00012e88
000132fd(5): MOV RAX,qword ptr [RSP + 0x40]
00013302(6): MOV dword ptr [RAX],0x3
00013308(5): JMP 0x00012c28
0001330d(8): MOV RDI,qword ptr [0xa8 + RSP]
00013315(2): XOR EAX,EAX
00013317(4): OR RCX,-0x1
0001331b(2): SCASB.REPNE RDI
0001331d(3): MOV RAX,RCX
00013320(3): NOT RAX
00013323(4): SUB RAX,0x1
00013327(4): CMP RAX,0x1
0001332b(6): JBE 0x00012e7e
00013331(2): JMP 0x000132fd
00013333(5): MOV RAX,qword ptr [RSP + 0x48]
00013338(3): MOV RDI,RCX
0001333b(8): MOV dword ptr [0x8c + RSP],R8D
00013343(7): MOV dword ptr [0x88 + RSP],EDX
0001334a(5): MOV qword ptr [RSP + 0x70],R9
0001334f(3): ADD RAX,RAX
00013352(4): ADD RAX,0x1
00013356(8): LEA R10,[RAX*0x4]
0001335e(5): MOV qword ptr [RSP + 0x48],RAX
00013363(3): MOV RSI,R10
00013366(8): MOV qword ptr [0x80 + RSP],R10
0001336e(5): CALL 0x00001c90
00013373(5): MOV R9,qword ptr [RSP + 0x70]
00013378(8): MOV R10,qword ptr [0x80 + RSP]
00013380(5): MOV qword ptr [RSP + 0x78],RAX
00013385(4): MOV RDI,qword ptr [R9 + 0x10]
00013389(3): MOV RSI,R10
0001338c(5): CALL 0x00001c90
00013391(5): MOV RCX,qword ptr [RSP + 0x78]
00013396(3): TEST RCX,RCX
00013399(2): JZ 0x000133c5
0001339b(3): TEST RAX,RAX
0001339e(5): MOV R9,qword ptr [RSP + 0x70]
000133a3(7): MOV EDX,dword ptr [0x88 + RSP]
000133aa(8): MOV R8D,dword ptr [0x8c + RSP]
000133b2(2): JZ 0x000133c5
000133b4(4): MOV qword ptr [R9 + 0x10],RAX
000133b8(4): MOV qword ptr [R9 + 0x8],RCX
000133bc(4): MOV RAX,qword ptr [R9 + 0x40]
000133c0(5): JMP 0x00012f23
000133c5(3): MOV RDI,RCX
000133c8(4): MOV qword ptr [RSP],RAX
000133cc(5): CALL 0x000019d0
000133d1(4): MOV RAX,qword ptr [RSP]
000133d5(3): MOV RDI,RAX
000133d8(5): CALL 0x000019d0
000133dd(5): MOV RAX,qword ptr [RSP + 0x40]
000133e2(6): MOV dword ptr [RAX],0xc
000133e8(5): JMP 0x00012c28
000133ed(2): XOR ECX,ECX
000133ef(2): XOR EDX,EDX
000133f1(3): MOV R8,R15
000133f4(3): MOV RSI,RBP
000133f7(3): MOV RDI,RBX
000133fa(8): MOV byte ptr [0xb8 + RSP],0x3
00013402(8): MOV qword ptr [0xb0 + RSP],R12
0001340a(5): CALL 0x000098b0
0001340f(3): TEST RAX,RAX
00013412(6): JZ 0x000130d3
00013418(5): MOV RCX,qword ptr [RSP + 0x28]
0001341d(8): LEA R8,[0xc0 + RSP]
00013425(3): MOV RDX,RAX
00013428(3): MOV RSI,RBP
0001342b(3): MOV RDI,RBX
0001342e(8): MOV byte ptr [0xc8 + RSP],0xa
00013436(5): CALL 0x000098b0
0001343b(3): TEST RAX,RAX
0001343e(5): MOV qword ptr [RSP + 0x28],RAX
00013443(6): JNZ 0x0001214c
00013449(5): JMP 0x000130d3
0001344e(5): CALL 0x00001ad0
00013453(5): MOV RAX,qword ptr [RSP + 0x18]
00013458(4): CMP byte ptr [RAX + 0x8],0x2
0001345c(6): JNZ 0x00012650
00013462(5): MOV RAX,qword ptr [RSP + 0x40]
00013467(6): MOV dword ptr [RAX],0x9
0001346d(5): JMP 0x0001265b
00013472(8): MOV RAX,qword ptr [0xb8 + RSP]
0001347a(4): MOVZX R8D,byte ptr [RAX]
0001347e(5): JMP 0x00012eaa
00013490(2): PUSH R15
00013492(2): PUSH R14
00013494(3): MOV R15,RCX
00013497(2): PUSH R13
00013499(2): PUSH R12
0001349b(3): MOV R13,RSI
0001349e(1): PUSH RBP
0001349f(1): PUSH RBX
000134a0(3): MOV RBX,R9
000134a3(3): MOV RBP,RDX
000134a6(3): MOV R12,R8
000134a9(4): SUB RSP,0x48
000134ad(9): MOV RAX,qword ptr FS:[0x28]
000134b6(5): MOV qword ptr [RSP + 0x38],RAX
000134bb(2): XOR EAX,EAX
000134bd(3): MOV RAX,qword ptr [RSI]
000134c0(4): MOV qword ptr [RSP],RDI
000134c4(5): MOV qword ptr [RSP + 0x10],RAX
000134c9(5): CALL 0x00011fb0
000134ce(2): MOV EDX,dword ptr [RBX]
000134d0(3): MOV R14,RAX
000134d3(2): TEST EDX,EDX
000134d5(2): JZ 0x000134e0
000134d7(3): TEST RAX,RAX
000134da(6): JZ 0x000135da
000134e0(5): LEA RAX,[RSP + 0x20]
000134e5(5): MOV qword ptr [RSP + 0x18],RAX
000134ea(6): NOP word ptr [RAX + RAX*0x1]
000134f0(4): MOVZX EAX,byte ptr [RBP + 0x8]
000134f4(2): MOV EDX,EAX
000134f6(3): AND EDX,0xfffffff7
000134f9(3): CMP DL,0x2
000134fc(6): JZ 0x00013590
00013502(2): CMP AL,0x9
00013504(2): JNZ 0x0001350f
00013506(3): TEST R12,R12
00013509(6): JNZ 0x00013590
0001350f(4): MOV RDI,qword ptr [RSP]
00013513(3): MOV R9,RBX
00013516(3): MOV R8,R12
00013519(3): MOV RCX,R15
0001351c(3): MOV RDX,RBP
0001351f(3): MOV RSI,R13
00013522(5): CALL 0x00011fb0
00013527(3): MOV R9,RAX
0001352a(2): MOV EAX,dword ptr [RBX]
0001352c(2): TEST EAX,EAX
0001352e(2): JZ 0x00013539
00013530(3): TEST R9,R9
00013533(6): JZ 0x000135c4
00013539(3): TEST R14,R14
0001353c(2): JZ 0x000135b8
0001353e(3): TEST R9,R9
00013541(2): JZ 0x000135b8
00013543(5): MOV RAX,qword ptr [RSP + 0x10]
00013548(5): MOV R8,qword ptr [RSP + 0x18]
0001354d(3): MOV RCX,R9
00013550(3): MOV RDX,R14
00013553(5): MOV qword ptr [RSP + 0x8],R9
00013558(5): MOV byte ptr [RSP + 0x28],0x10
0001355d(7): LEA RSI,[0x80 + RAX]
00013564(4): LEA RDI,[RAX + 0x70]
00013568(5): CALL 0x000098b0
0001356d(3): TEST RAX,RAX
00013570(5): MOV R9,qword ptr [RSP + 0x8]
00013575(2): JZ 0x000135e0
00013577(3): MOV R14,RAX
0001357a(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001357e(2): MOV EDX,EAX
00013580(3): AND EDX,0xfffffff7
00013583(3): CMP DL,0x2
00013586(6): JNZ 0x00013502
0001358c(4): NOP dword ptr [RAX]
00013590(5): MOV RCX,qword ptr [RSP + 0x38]
00013595(9): XOR RCX,qword ptr FS:[0x28]
0001359e(3): MOV RAX,R14
000135a1(2): JNZ 0x0001360d
000135a3(4): ADD RSP,0x48
000135a7(1): POP RBX
000135a8(1): POP RBP
000135a9(2): POP R12
000135ab(2): POP R13
000135ad(2): POP R14
000135af(2): POP R15
000135b1(1): RET
000135b8(3): TEST R14,R14
000135bb(4): CMOVZ R14,R9
000135bf(5): JMP 0x000134f0
000135c4(3): TEST R14,R14
000135c7(2): JZ 0x000135da
000135c9(7): LEA RSI,[0x8370]
000135d0(2): XOR EDX,EDX
000135d2(3): MOV RDI,R14
000135d5(5): CALL 0x000074d0
000135da(3): XOR R14D,R14D
000135dd(2): JMP 0x00013590
000135e0(7): LEA RSI,[0x8370]
000135e7(3): MOV RDI,R9
000135ea(2): XOR EDX,EDX
000135ec(5): CALL 0x000074d0
000135f1(7): LEA RSI,[0x8370]
000135f8(3): MOV RDI,R14
000135fb(2): XOR EDX,EDX
000135fd(3): XOR R14D,R14D
00013600(5): CALL 0x000074d0
00013605(6): MOV dword ptr [RBX],0xc
0001360b(2): JMP 0x00013590
0001360d(5): CALL 0x00001ad0
00013612(4): NOP dword ptr [RAX]
00013616(10): NOP word ptr CS:[RAX + RAX*0x1]
00013620(2): PUSH R15
00013622(2): PUSH R14
00013624(3): MOV R14,RCX
00013627(2): PUSH R13
00013629(2): PUSH R12
0001362b(3): MOV R13,R9
0001362e(1): PUSH RBP
0001362f(1): PUSH RBX
00013630(3): MOV RBP,RDX
00013633(3): MOV R12,RDI
00013636(4): SUB RSP,0x58
0001363a(3): MOV RBX,qword ptr [RSI]
0001363d(9): MOV RAX,qword ptr FS:[0x28]
00013646(5): MOV qword ptr [RSP + 0x48],RAX
0001364b(2): XOR EAX,EAX
0001364d(5): MOV qword ptr [RSP + 0x28],RSI
00013652(5): MOV qword ptr [RSP + 0x10],R8
00013657(7): MOV RAX,qword ptr [0xa8 + RBX]
0001365e(5): MOV qword ptr [RSP + 0x20],RAX
00013663(5): CALL 0x00013490
00013668(4): MOV EDX,dword ptr [R13]
0001366c(3): MOV R15,RAX
0001366f(2): TEST EDX,EDX
00013671(2): JZ 0x0001367c
00013673(3): TEST RAX,RAX
00013676(6): JZ 0x00013762
0001367c(5): LEA RAX,[RSP + 0x30]
00013681(5): MOV qword ptr [RSP + 0x8],RAX
00013686(5): JMP 0x00013714
00013690(2): CMP AL,0x9
00013692(2): JNZ 0x000136a0
00013694(6): CMP qword ptr [RSP + 0x10],0x0
0001369a(6): JNZ 0x00013748
000136a0(7): MOV RAX,qword ptr [0xa8 + RBX]
000136a7(5): MOV R8,qword ptr [RSP + 0x10]
000136ac(3): MOV RCX,R14
000136af(5): MOV RSI,qword ptr [RSP + 0x28]
000136b4(3): MOV R9,R13
000136b7(3): MOV RDX,RBP
000136ba(3): MOV RDI,R12
000136bd(5): MOV qword ptr [RSP + 0x18],RAX
000136c2(5): MOV RAX,qword ptr [RSP + 0x20]
000136c7(7): MOV qword ptr [0xa8 + RBX],RAX
000136ce(5): CALL 0x00013490
000136d3(3): MOV RCX,RAX
000136d6(4): MOV EAX,dword ptr [R13]
000136da(2): TEST EAX,EAX
000136dc(2): JZ 0x000136e3
000136de(3): TEST RCX,RCX
000136e1(2): JZ 0x0001374c
000136e3(5): MOV RAX,qword ptr [RSP + 0x18]
000136e8(7): OR qword ptr [0xa8 + RBX],RAX
000136ef(5): MOV R8,qword ptr [RSP + 0x8]
000136f4(7): LEA RSI,[0x80 + RBX]
000136fb(4): LEA RDI,[RBX + 0x70]
000136ff(3): MOV RDX,R15
00013702(5): MOV byte ptr [RSP + 0x38],0xa
00013707(5): CALL 0x000098b0
0001370c(3): TEST RAX,RAX
0001370f(3): MOV R15,RAX
00013712(2): JZ 0x00013790
00013714(4): CMP byte ptr [RBP + 0x8],0xa
00013718(2): JNZ 0x00013768
0001371a(3): MOV RDX,R14
0001371d(3): MOV RSI,R12
00013720(3): MOV RDI,RBP
00013723(7): OR RDX,0x800000
0001372a(5): CALL 0x000117f0
0001372f(2): CDQE
00013731(5): ADD qword ptr [R12 + 0x48],RAX
00013736(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001373a(2): MOV EDX,EAX
0001373c(3): AND EDX,0xfffffff7
0001373f(3): CMP DL,0x2
00013742(6): JNZ 0x00013690
00013748(2): XOR ECX,ECX
0001374a(2): JMP 0x000136ef
0001374c(3): TEST R15,R15
0001374f(2): JZ 0x00013762
00013751(7): LEA RSI,[0x8370]
00013758(2): XOR EDX,EDX
0001375a(3): MOV RDI,R15
0001375d(5): CALL 0x000074d0
00013762(3): XOR R15D,R15D
00013765(3): NOP dword ptr [RAX]
00013768(5): MOV RCX,qword ptr [RSP + 0x48]
0001376d(9): XOR RCX,qword ptr FS:[0x28]
00013776(3): MOV RAX,R15
00013779(2): JNZ 0x0001379a
0001377b(4): ADD RSP,0x58
0001377f(1): POP RBX
00013780(1): POP RBP
00013781(2): POP R12
00013783(2): POP R13
00013785(2): POP R14
00013787(2): POP R15
00013789(1): RET
00013790(8): MOV dword ptr [R13],0xc
00013798(2): JMP 0x00013768
0001379a(5): CALL 0x00001ad0
0001379f(1): NOP
000137a0(2): PUSH R15
000137a2(2): PUSH R14
000137a4(2): PUSH R13
000137a6(2): PUSH R12
000137a8(1): PUSH RBP
000137a9(1): PUSH RBX
000137aa(7): SUB RSP,0x128
000137b1(4): MOV qword ptr [RDI + 0x18],RCX
000137b5(8): MOV qword ptr [RDI + 0x10],0x0
000137bd(9): MOV RAX,qword ptr FS:[0x28]
000137c6(8): MOV qword ptr [0x118 + RSP],RAX
000137ce(2): XOR EAX,EAX
000137d0(4): MOVZX EAX,byte ptr [RDI + 0x38]
000137d4(5): MOV qword ptr [RSP + 0x8],RDI
000137d9(5): MOV qword ptr [RSP + 0x10],RSI
000137de(4): MOV qword ptr [RSP],RDX
000137e2(5): MOV qword ptr [RSP + 0x18],RCX
000137e7(8): MOV dword ptr [RSP + 0x4c],0x0
000137ef(8): MOV qword ptr [RDI + 0x30],0x0
000137f7(3): MOV RBX,qword ptr [RDI]
000137fa(4): MOV byte ptr [RSP + 0x20],AL
000137fe(3): AND EAX,0xffffff90
00013801(8): CMP qword ptr [RDI + 0x8],0xe7
00013809(3): MOV byte ptr [RDI + 0x38],AL
0001380c(6): JBE 0x00014606
00013812(4): LEA RDI,[RBX + 0x8]
00013816(5): MOV RAX,qword ptr [RSP + 0x8]
0001381b(3): MOV RCX,RBX
0001381e(4): AND RDI,-0x8
00013822(3): SUB RCX,RDI
00013825(8): MOV qword ptr [RAX + 0x10],0xe8
0001382d(2): XOR EAX,EAX
0001382f(6): ADD ECX,0xe8
00013835(7): MOV qword ptr [RBX],0x0
0001383c(11): MOV qword ptr [0xe0 + RBX],0x0
00013847(3): SHR ECX,0x3
0001384a(3): STOSQ.REP RDI
0001384d(10): MOV RAX,0x555555555555554
00013857(10): MOV dword ptr [0x80 + RBX],0xf
00013861(4): CMP qword ptr [RSP],RAX
00013865(6): JA 0x00013ea6
0001386b(4): MOV R14,qword ptr [RSP]
0001386f(4): LEA RAX,[R14 + 0x1]
00013873(3): MOV RDI,RAX
00013876(4): MOV qword ptr [RBX + 0x8],RAX
0001387a(5): MOV qword ptr [RSP + 0x28],RAX
0001387f(4): SHL RDI,0x4
00013883(5): CALL 0x00001c20
00013888(3): TEST R14,R14
0001388b(3): MOV qword ptr [RBX],RAX
0001388e(6): JZ 0x00014575
00013894(5): MOV ESI,0x1
00013899(7): NOP dword ptr [RAX]
000138a0(3): ADD RSI,RSI
000138a3(4): CMP qword ptr [RSP],RSI
000138a7(2): JNC 0x000138a0
000138a9(4): LEA RBP,[RSI + -0x1]
000138ad(5): MOV EDI,0x18
000138b2(5): CALL 0x00001bc0
000138b7(7): MOV qword ptr [0x88 + RBX],RBP
000138be(4): MOV qword ptr [RBX + 0x40],RAX
000138c2(5): CALL 0x00001aa0
000138c7(5): MOV EDI,0xe
000138cc(6): MOV dword ptr [0xb4 + RBX],EAX
000138d2(5): CALL 0x00001c60
000138d7(3): MOVZX EDX,byte ptr [RAX]
000138da(3): AND EDX,0xffffffdf
000138dd(3): CMP DL,0x55
000138e0(2): JNZ 0x00013930
000138e2(4): MOVZX EDX,byte ptr [RAX + 0x1]
000138e6(3): AND EDX,0xffffffdf
000138e9(3): CMP DL,0x54
000138ec(2): JNZ 0x00013930
000138ee(4): MOVZX EDX,byte ptr [RAX + 0x2]
000138f2(3): AND EDX,0xffffffdf
000138f5(3): CMP DL,0x46
000138f8(2): JNZ 0x00013930
000138fa(2): XOR EDX,EDX
000138fc(4): CMP byte ptr [RAX + 0x3],0x2d
00013900(7): LEA RDI,[0x16b46]
00013907(5): MOV ECX,0x2
0001390c(3): SETZ DL
0001390f(5): LEA RSI,[RAX + RDX*0x1 + 0x3]
00013914(2): CMPSB.REPE RDI,RSI
00013916(3): SETA AL
00013919(2): SBB AL,0x0
0001391b(2): TEST AL,AL
0001391d(2): JNZ 0x00013930
0001391f(7): OR byte ptr [0xb0 + RBX],0x4
00013926(10): NOP word ptr CS:[RAX + RAX*0x1]
00013930(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00013937(2): MOV EDX,EAX
00013939(3): AND EDX,0xfffffff7
0001393c(7): CMP dword ptr [0xb4 + RBX],0x1
00013943(6): MOV byte ptr [0xb0 + RBX],DL
00013949(2): JLE 0x0001395e
0001394b(2): TEST AL,0x4
0001394d(6): JZ 0x00013eb3
00013953(7): LEA RAX,[0x170a0]
0001395a(4): MOV qword ptr [RBX + 0x78],RAX
0001395e(4): CMP qword ptr [RBX],0x0
00013962(6): JZ 0x00013ea6
00013968(5): CMP qword ptr [RBX + 0x40],0x0
0001396d(6): JZ 0x00013ea6
00013973(5): MOV RAX,qword ptr [RSP + 0x18]
00013978(8): LEA RBP,[0x80 + RSP]
00013980(5): MOV ECX,0x12
00013985(8): MOV dword ptr [RSP + 0x4c],0x0
0001398d(4): LEA R8,[RBP + 0x8]
00013991(5): AND EAX,0x400000
00013996(5): MOV qword ptr [RSP + 0x20],RAX
0001399b(5): MOV RAX,qword ptr [RSP + 0x8]
000139a0(3): SETNZ DL
000139a3(3): MOV RDI,R8
000139a6(4): MOV RSI,qword ptr [RAX + 0x28]
000139aa(2): XOR EAX,EAX
000139ac(3): STOSQ.REP RDI
000139af(5): MOV RAX,qword ptr [RSP + 0x10]
000139b4(4): MOV RDI,qword ptr [RSP]
000139b8(3): TEST RSI,RSI
000139bb(7): MOV byte ptr [0x108 + RSP],DL
000139c2(6): MOV ECX,dword ptr [0xb4 + RBX]
000139c8(4): SETNZ R12B
000139cc(8): MOV qword ptr [0xf8 + RSP],RSI
000139d4(8): MOV qword ptr [0x80 + RSP],RAX
000139dc(7): MOVZX EAX,byte ptr [0xb0 + RBX]
000139e3(3): OR R12D,EDX
000139e6(8): MOV qword ptr [0xd8 + RSP],RDI
000139ee(8): MOV qword ptr [0xd0 + RSP],RDI
000139f6(3): MOV ESI,R12D
000139f9(8): MOV byte ptr [0x10b + RSP],R12B
00013a01(7): MOV dword ptr [0x110 + RSP],ECX
00013a08(8): MOV qword ptr [0xe8 + RSP],RDI
00013a10(8): MOV qword ptr [0xe0 + RSP],RDI
00013a18(2): MOV EDX,EAX
00013a1a(3): SHR AL,0x3
00013a1d(3): SHR DL,0x2
00013a20(3): AND EAX,0x1
00013a23(3): AND EDX,0x1
00013a26(3): TEST RDI,RDI
00013a29(7): MOV byte ptr [0x10a + RSP],AL
00013a30(7): MOV byte ptr [0x109 + RSP],DL
00013a37(6): JNZ 0x00013e75
00013a3d(3): TEST SIL,SIL
00013a40(2): JZ 0x00013a4f
00013a42(8): MOV RAX,qword ptr [0x88 + RSP]
00013a4a(5): MOV qword ptr [RSP + 0x10],RAX
00013a4f(6): CMP qword ptr [RSP + 0x20],0x0
00013a55(5): MOV RAX,qword ptr [RSP + 0x10]
00013a5a(8): MOV qword ptr [0x88 + RSP],RAX
00013a62(6): JZ 0x00013b65
00013a68(3): CMP ECX,0x1
00013a6b(6): JLE 0x0001465d
00013a71(3): MOV RDI,RBP
00013a74(5): CALL 0x00007b10
00013a79(2): TEST EAX,EAX
00013a7b(2): JNZ 0x00013ac0
00013a7d(4): MOV RAX,qword ptr [RSP]
00013a81(8): CMP RAX,qword ptr [0xb8 + RSP]
00013a89(6): JLE 0x00014640
00013a8f(7): MOVSXD RAX,dword ptr [0xb4 + RBX]
00013a96(8): MOV RSI,qword ptr [0xc0 + RSP]
00013a9e(8): ADD RAX,qword ptr [0xb0 + RSP]
00013aa6(3): CMP RSI,RAX
00013aa9(6): JG 0x00014640
00013aaf(3): ADD RSI,RSI
00013ab2(3): MOV RDI,RBP
00013ab5(5): CALL 0x000075a0
00013aba(2): TEST EAX,EAX
00013abc(2): JZ 0x00013a71
00013abe(2): NOP
00013ac0(4): MOV dword ptr [RSP + 0x4c],EAX
00013ac4(5): MOV RAX,qword ptr [RSP + 0x8]
00013ac9(3): MOV R13,qword ptr [RAX]
00013acc(4): MOV RDI,qword ptr [R13 + 0x70]
00013ad0(3): TEST RDI,RDI
00013ad3(2): JZ 0x00013ae8
00013ad5(3): NOP dword ptr [RAX]
00013ad8(3): MOV R12,qword ptr [RDI]
00013adb(5): CALL 0x000019d0
00013ae0(3): TEST R12,R12
00013ae3(3): MOV RDI,R12
00013ae6(2): JNZ 0x00013ad8
00013ae8(4): MOV RDI,qword ptr [R13 + 0x20]
00013aec(8): MOV qword ptr [R13 + 0x70],0x0
00013af4(11): MOV dword ptr [0x80 + R13],0xf
00013aff(8): MOV qword ptr [R13 + 0x68],0x0
00013b07(5): CALL 0x000019d0
00013b0c(8): MOV qword ptr [R13 + 0x20],0x0
00013b14(3): MOV RDI,RBP
00013b17(5): CALL 0x000088e0
00013b1c(3): MOV RDI,RBX
00013b1f(5): CALL 0x00008920
00013b24(5): MOV RAX,qword ptr [RSP + 0x8]
00013b29(7): MOV qword ptr [RAX],0x0
00013b30(8): MOV qword ptr [RAX + 0x8],0x0
00013b38(4): MOV EAX,dword ptr [RSP + 0x4c]
00013b3c(8): MOV RBX,qword ptr [0x118 + RSP]
00013b44(9): XOR RBX,qword ptr FS:[0x28]
00013b4d(6): JNZ 0x00014890
00013b53(7): ADD RSP,0x128
00013b5a(1): POP RBX
00013b5b(1): POP RBP
00013b5c(2): POP R12
00013b5e(2): POP R13
00013b60(2): POP R14
00013b62(2): POP R15
00013b64(1): RET
00013b65(3): CMP ECX,0x1
00013b68(6): JG 0x0001451a
00013b6e(3): TEST R12B,R12B
00013b71(8): MOV RSI,qword ptr [0xc0 + RSP]
00013b79(6): JZ 0x00014194
00013b7f(8): CMP qword ptr [0xd8 + RSP],RSI
00013b87(8): MOV RAX,qword ptr [0xb0 + RSP]
00013b8f(9): CMOVLE RSI,qword ptr [0xd8 + RSP]
00013b98(3): CMP RSI,RAX
00013b9b(2): JG 0x00013bad
00013b9d(2): JMP 0x00013be0
00013ba0(8): MOV RDX,qword ptr [0x88 + RSP]
00013ba8(5): MOV qword ptr [RSP + 0x10],RDX
00013bad(8): MOV RDX,qword ptr [0x80 + RSP]
00013bb5(8): MOV RCX,qword ptr [0xf8 + RSP]
00013bbd(3): ADD RDX,RAX
00013bc0(8): ADD RDX,qword ptr [0xa8 + RSP]
00013bc8(3): MOVZX EDX,byte ptr [RDX]
00013bcb(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
00013bcf(5): MOV RCX,qword ptr [RSP + 0x10]
00013bd4(3): MOV byte ptr [RCX + RAX*0x1],DL
00013bd7(4): ADD RAX,0x1
00013bdb(3): CMP RSI,RAX
00013bde(2): JNZ 0x00013ba0
00013be0(8): MOV qword ptr [0xb0 + RSP],RAX
00013be8(8): MOV qword ptr [0xb8 + RSP],RAX
00013bf0(8): MOV dword ptr [RSP + 0x4c],0x0
00013bf8(5): MOV R12,qword ptr [RSP + 0x8]
00013bfd(5): MOV R14,qword ptr [RSP + 0x18]
00013c02(5): LEA R13,[RSP + 0x50]
00013c07(3): MOV RSI,RBP
00013c0a(3): MOV RDI,R13
00013c0d(5): MOV qword ptr [RSP + 0x28],R13
00013c12(4): MOV R15,qword ptr [R12]
00013c16(3): MOV RDX,R14
00013c19(9): MOV qword ptr [R12 + 0x30],0x0
00013c22(7): OR RDX,0x800000
00013c29(7): MOV qword ptr [0xd8 + R15],R14
00013c30(5): CALL 0x000117f0
00013c35(5): LEA R9,[RSP + 0x4c]
00013c3a(3): XOR R8D,R8D
00013c3d(3): MOV RCX,R14
00013c40(3): MOV RDX,R13
00013c43(3): MOV RSI,R12
00013c46(3): MOV RDI,RBP
00013c49(2): CDQE
00013c4b(8): ADD qword ptr [0xc8 + RSP],RAX
00013c53(5): CALL 0x00013620
00013c58(4): MOV ECX,dword ptr [RSP + 0x4c]
00013c5c(2): TEST ECX,ECX
00013c5e(6): JNZ 0x00014687
00013c64(4): LEA R13,[R15 + 0x70]
00013c68(5): LEA R12,[RSP + 0x60]
00013c6d(4): SUB R15,-0x80
00013c71(2): XOR EDX,EDX
00013c73(2): XOR ECX,ECX
00013c75(3): MOV RSI,R15
00013c78(3): MOV R8,R12
00013c7b(3): MOV RDI,R13
00013c7e(4): MOV qword ptr [RSP],RAX
00013c82(5): MOV byte ptr [RSP + 0x68],0x2
00013c87(5): CALL 0x000098b0
00013c8c(4): MOV R9,qword ptr [RSP]
00013c90(3): MOV R11,RAX
00013c93(3): MOV RDX,RAX
00013c96(3): TEST R9,R9
00013c99(2): JZ 0x00013cc2
00013c9b(3): MOV RCX,R11
00013c9e(3): MOV RDX,R9
00013ca1(3): MOV R8,R12
00013ca4(3): MOV RSI,R15
00013ca7(3): MOV RDI,R13
00013caa(4): MOV qword ptr [RSP],R11
00013cae(5): MOV byte ptr [RSP + 0x68],0x10
00013cb3(5): CALL 0x000098b0
00013cb8(4): MOV R11,qword ptr [RSP]
00013cbc(3): MOV RDX,R11
00013cbf(3): MOV R11,RAX
00013cc2(3): TEST RDX,RDX
00013cc5(5): MOV RCX,qword ptr [RSP + 0x8]
00013cca(3): SETZ DL
00013ccd(3): TEST R11,R11
00013cd0(3): SETZ AL
00013cd3(2): OR DL,AL
00013cd5(3): MOV R13,qword ptr [RCX]
00013cd8(6): JNZ 0x00014672
00013cde(4): MOV R15,qword ptr [R13 + 0x8]
00013ce2(4): MOV qword ptr [RBX + 0x68],R11
00013ce6(8): LEA RCX,[R15*0x8]
00013cee(4): LEA R15,[R15 + R15*0x2]
00013cf2(3): MOV RDI,RCX
00013cf5(4): MOV qword ptr [RSP],RCX
00013cf9(4): SHL R15,0x3
00013cfd(5): CALL 0x00001c20
00013d02(4): MOV RCX,qword ptr [RSP]
00013d06(4): MOV qword ptr [R13 + 0x18],RAX
00013d0a(5): MOV qword ptr [RSP + 0x18],RAX
00013d0f(3): MOV RDI,RCX
00013d12(5): CALL 0x00001c20
00013d17(3): MOV RDI,R15
00013d1a(4): MOV qword ptr [R13 + 0x20],RAX
00013d1e(5): MOV qword ptr [RSP + 0x10],RAX
00013d23(5): CALL 0x00001c20
00013d28(3): MOV RDI,R15
00013d2b(4): MOV qword ptr [R13 + 0x28],RAX
00013d2f(4): MOV qword ptr [RSP],RAX
00013d33(5): CALL 0x00001c20
00013d38(5): MOV RDX,qword ptr [RSP + 0x18]
00013d3d(4): MOV qword ptr [R13 + 0x30],RAX
00013d41(4): MOV RSI,qword ptr [RSP]
00013d45(5): MOV RCX,qword ptr [RSP + 0x10]
00013d4a(3): TEST RDX,RDX
00013d4d(6): JZ 0x0001450d
00013d53(3): TEST RCX,RCX
00013d56(6): JZ 0x0001450d
00013d5c(3): TEST RSI,RSI
00013d5f(6): JZ 0x0001450d
00013d65(3): TEST RAX,RAX
00013d68(6): JZ 0x0001450d
00013d6e(5): MOV RAX,qword ptr [RSP + 0x8]
00013d73(4): MOV R15,qword ptr [RAX + 0x30]
00013d77(8): LEA RDI,[R15*0x8]
00013d7f(5): CALL 0x00001c20
00013d84(3): TEST RAX,RAX
00013d87(7): MOV qword ptr [0xe0 + R13],RAX
00013d8e(2): JZ 0x00013dfd
00013d90(3): TEST R15,R15
00013d93(2): JZ 0x00013dad
00013d95(2): XOR EDX,EDX
00013d97(9): NOP word ptr [RAX + RAX*0x1]
00013da0(4): MOV qword ptr [RAX + RDX*0x8],RDX
00013da4(4): ADD RDX,0x1
00013da8(3): CMP RDX,R15
00013dab(2): JNZ 0x00013da0
00013dad(4): MOV RDI,qword ptr [R13 + 0x68]
00013db1(7): LEA RSI,[0x8db0]
00013db8(3): MOV RDX,R13
00013dbb(5): CALL 0x00007540
00013dc0(5): MOV RAX,qword ptr [RSP + 0x8]
00013dc5(7): MOV RDI,qword ptr [0xe0 + R13]
00013dcc(4): MOV RDX,qword ptr [RAX + 0x30]
00013dd0(3): TEST RDX,RDX
00013dd3(6): JZ 0x000146c4
00013dd9(3): MOV RAX,qword ptr [RDI]
00013ddc(3): TEST RAX,RAX
00013ddf(2): JZ 0x00013dee
00013de1(2): JMP 0x00013dfd
00013de8(4): CMP qword ptr [RDI + RAX*0x8],RAX
00013dec(2): JNZ 0x00013dfd
00013dee(4): ADD RAX,0x1
00013df2(3): CMP RDX,RAX
00013df5(2): JA 0x00013de8
00013df7(6): JZ 0x000146c4
00013dfd(4): MOV RDI,qword ptr [R13 + 0x68]
00013e01(5): MOV RDX,qword ptr [RSP + 0x8]
00013e06(7): LEA RSI,[0x9cb0]
00013e0d(5): CALL 0x000074d0
00013e12(2): TEST EAX,EAX
00013e14(6): JNZ 0x00013ac0
00013e1a(4): MOV RDI,qword ptr [R13 + 0x68]
00013e1e(7): LEA RSI,[0xc220]
00013e25(3): MOV RDX,R13
00013e28(5): CALL 0x000074d0
00013e2d(2): TEST EAX,EAX
00013e2f(6): JNZ 0x00013ac0
00013e35(4): MOV RDI,qword ptr [R13 + 0x68]
00013e39(7): LEA RSI,[0x8e40]
00013e40(3): MOV RDX,R13
00013e43(5): CALL 0x00007540
00013e48(4): MOV RDX,qword ptr [R13 + 0x68]
00013e4c(7): LEA RSI,[0x16fa8]
00013e53(5): NOP dword ptr [RAX + RAX*0x1]
00013e58(4): MOVZX ECX,byte ptr [RDX + 0x30]
00013e5c(4): MOV RDI,qword ptr [RDX + 0x38]
00013e60(3): CMP CL,0x10
00013e63(6): JA 0x00013f38
00013e69(3): MOVZX EAX,CL
00013e6c(4): MOVSXD RAX,dword ptr [RSI + RAX*0x4]
00013e70(3): ADD RAX,RSI
00013e73(2): JMP RAX
00013e75(5): MOV RSI,qword ptr [RSP + 0x28]
00013e7a(3): MOV RDI,RBP
00013e7d(5): CALL 0x000075a0
00013e82(2): TEST EAX,EAX
00013e84(6): JNZ 0x00013ac0
00013e8a(8): MOVZX ESI,byte ptr [0x10b + RSP]
00013e92(6): MOV ECX,dword ptr [0xb4 + RBX]
00013e98(3): TEST SIL,SIL
00013e9b(6): JZ 0x00013a4f
00013ea1(5): JMP 0x00013a42
00013ea6(8): MOV dword ptr [RSP + 0x4c],0xc
00013eae(5): JMP 0x00013b1c
00013eb3(5): MOV ESI,0x1
00013eb8(5): MOV EDI,0x20
00013ebd(5): CALL 0x00001bc0
00013ec2(3): TEST RAX,RAX
00013ec5(4): MOV qword ptr [RBX + 0x78],RAX
00013ec9(2): JZ 0x00013ea6
00013ecb(3): XOR R12D,R12D
00013ece(2): XOR EBP,EBP
00013ed0(6): MOV R13D,0x1
00013ed6(3): XOR R15D,R15D
00013ed9(7): NOP dword ptr [RAX]
00013ee0(5): LEA R14D,[RBP + R15*0x1]
00013ee5(3): MOV EDI,R14D
00013ee8(5): CALL 0x00001cd0
00013eed(3): CMP EAX,-0x1
00013ef0(2): JZ 0x00013f05
00013ef2(4): MOV RSI,qword ptr [RBX + 0x78]
00013ef6(3): MOV RDI,R13
00013ef9(3): MOV ECX,R15D
00013efc(3): SHL RDI,CL
00013eff(3): ADD RSI,R12
00013f02(3): OR qword ptr [RSI],RDI
00013f05(7): TEST R14D,0xffffff80
00013f0c(2): JNZ 0x00013f1a
00013f0e(3): CMP EAX,R14D
00013f11(2): JZ 0x00013f1a
00013f13(7): OR byte ptr [0xb0 + RBX],0x8
00013f1a(4): ADD R15,0x1
00013f1e(4): CMP R15,0x40
00013f22(2): JNZ 0x00013ee0
00013f24(3): ADD EBP,0x40
00013f27(4): ADD R12,0x8
00013f2b(6): CMP EBP,0x100
00013f31(2): JNZ 0x00013ed6
00013f33(5): JMP 0x0001395e
00013f38(3): AND ECX,0x8
00013f3b(6): JNZ 0x00014852
00013f41(4): MOV RAX,qword ptr [RDX + 0x20]
00013f45(4): MOV RCX,qword ptr [RAX + 0x38]
00013f49(4): MOV RAX,qword ptr [R13 + 0x18]
00013f4d(4): MOV qword ptr [RAX + RDI*0x8],RCX
00013f51(4): MOV R15,qword ptr [RDX + 0x8]
00013f55(2): XOR EDI,EDI
00013f57(3): TEST R15,R15
00013f5a(2): JZ 0x00013f6b
00013f5c(3): MOV RDX,R15
00013f5f(5): JMP 0x00013e58
00013f68(3): MOV RDX,RAX
00013f6b(4): MOV R15,qword ptr [RDX + 0x10]
00013f6f(3): TEST R15,R15
00013f72(3): SETZ CL
00013f75(3): CMP R15,RDI
00013f78(3): SETZ AL
00013f7b(2): OR CL,AL
00013f7d(4): MOV byte ptr [RSP + 0x10],CL
00013f81(2): JZ 0x00013f5c
00013f83(3): MOV RAX,qword ptr [RDX]
00013f86(3): MOV RDI,RDX
00013f89(3): TEST RAX,RAX
00013f8c(2): JNZ 0x00013f68
00013f8e(3): XOR R14D,R14D
00013f91(3): XOR R15D,R15D
00013f94(4): NOP dword ptr [RAX]
00013f98(4): MOV RDX,qword ptr [R13 + 0x10]
00013f9c(3): CMP RDX,R15
00013f9f(2): JZ 0x00013fc6
00013fa1(4): LEA R10,[R15 + R15*0x2]
00013fa5(4): MOV RAX,qword ptr [R13 + 0x30]
00013fa9(4): SHL R10,0x3
00013fad(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
00013fb3(6): JZ 0x000141b8
00013fb9(4): MOV RDX,qword ptr [R13 + 0x10]
00013fbd(4): ADD R15,0x1
00013fc1(3): CMP RDX,R15
00013fc4(2): JNZ 0x00013fa1
00013fc6(3): TEST R14B,R14B
00013fc9(6): JZ 0x0001420e
00013fcf(3): XOR R14D,R14D
00013fd2(3): XOR R15D,R15D
00013fd5(2): JMP 0x00013fa1
00013fd7(8): OR byte ptr [0xb0 + R13],0x1
00013fdf(4): MOV R15,qword ptr [RDX + 0x8]
00013fe3(3): TEST R15,R15
00013fe6(6): JZ 0x000145f9
00013fec(4): MOV RAX,qword ptr [R15 + 0x18]
00013ff0(4): MOV RCX,qword ptr [RAX + 0x38]
00013ff4(4): MOV RAX,qword ptr [RDX + 0x10]
00013ff8(3): TEST RAX,RAX
00013ffb(6): JZ 0x000145ec
00014001(4): MOV RAX,qword ptr [RAX + 0x18]
00014005(4): MOV R9,qword ptr [RAX + 0x38]
00014009(3): TEST RCX,RCX
0001400c(6): JS 0x00014871
00014012(3): TEST R9,R9
00014015(6): JS 0x00014833
0001401b(4): MOV RAX,qword ptr [R13 + 0x28]
0001401f(4): LEA RDI,[RDI + RDI*0x2]
00014023(5): MOV qword ptr [RSP + 0x38],RSI
00014028(5): MOV qword ptr [RSP + 0x30],R9
0001402d(5): MOV qword ptr [RSP + 0x18],RCX
00014032(5): MOV qword ptr [RSP + 0x10],RDX
00014037(4): LEA R10,[RAX + RDI*0x8]
0001403b(5): MOV EDI,0x10
00014040(7): MOV qword ptr [R10],0x2
00014047(4): MOV qword ptr [RSP],R10
0001404b(5): CALL 0x00001c20
00014050(4): MOV R10,qword ptr [RSP]
00014054(3): TEST RAX,RAX
00014057(5): MOV RDX,qword ptr [RSP + 0x10]
0001405c(5): MOV RCX,qword ptr [RSP + 0x18]
00014061(5): MOV R9,qword ptr [RSP + 0x30]
00014066(5): MOV RSI,qword ptr [RSP + 0x38]
0001406b(4): MOV qword ptr [R10 + 0x10],RAX
0001406f(6): JZ 0x0001430a
00014075(3): CMP RCX,R9
00014078(6): JZ 0x0001464d
0001407e(8): MOV qword ptr [R10 + 0x8],0x2
00014086(6): JL 0x00014634
0001408c(3): MOV qword ptr [RAX],R9
0001408f(4): MOV qword ptr [RAX + 0x8],RCX
00014093(5): JMP 0x00013f55
00014098(4): MOV RAX,qword ptr [RDX + 0x20]
0001409c(4): LEA RCX,[RDI + RDI*0x2]
000140a0(5): MOV EDI,0x8
000140a5(5): MOV qword ptr [RSP + 0x10],RSI
000140aa(4): MOV qword ptr [RSP],RDX
000140ae(4): MOV R14,qword ptr [RAX + 0x38]
000140b2(4): MOV RAX,qword ptr [R13 + 0x28]
000140b6(4): LEA R15,[RAX + RCX*0x8]
000140ba(7): MOV qword ptr [R15],0x1
000140c1(8): MOV qword ptr [R15 + 0x8],0x1
000140c9(5): CALL 0x00001c20
000140ce(3): TEST RAX,RAX
000140d1(4): MOV qword ptr [R15 + 0x10],RAX
000140d5(4): MOV RDX,qword ptr [RSP]
000140d9(5): MOV RSI,qword ptr [RSP + 0x10]
000140de(6): JZ 0x00014788
000140e4(3): MOV qword ptr [RAX],R14
000140e7(4): MOV R15,qword ptr [RDX + 0x8]
000140eb(5): JMP 0x00013f55
000140f0(5): CMP qword ptr [RDX + 0x20],0x0
000140f5(6): JZ 0x00013f51
000140fb(7): LEA RCX,[0x17060]
00014102(7): LEA RSI,[0x16aa0]
00014109(7): LEA RDI,[0x16b48]
00014110(5): MOV EDX,0x59f
00014115(5): CALL 0x00001b50
00014120(4): MOV RAX,qword ptr [RDX + 0x20]
00014124(4): MOV R15,qword ptr [RAX + 0x38]
00014128(4): MOV RAX,qword ptr [R13 + 0x18]
0001412c(4): MOV qword ptr [RAX + RDI*0x8],R15
00014130(4): CMP byte ptr [RDX + 0x30],0x4
00014134(6): JNZ 0x00013f51
0001413a(4): MOV RAX,qword ptr [R13 + 0x28]
0001413e(4): LEA RCX,[RDI + RDI*0x2]
00014142(5): MOV EDI,0x8
00014147(5): MOV qword ptr [RSP + 0x18],RSI
0001414c(5): MOV qword ptr [RSP + 0x10],RDX
00014151(4): LEA RCX,[RAX + RCX*0x8]
00014155(7): MOV qword ptr [RCX],0x1
0001415c(8): MOV qword ptr [RCX + 0x8],0x1
00014164(4): MOV qword ptr [RSP],RCX
00014168(5): CALL 0x00001c20
0001416d(4): MOV RCX,qword ptr [RSP]
00014171(3): TEST RAX,RAX
00014174(5): MOV RDX,qword ptr [RSP + 0x10]
00014179(5): MOV RSI,qword ptr [RSP + 0x18]
0001417e(4): MOV qword ptr [RCX + 0x10],RAX
00014182(6): JZ 0x000147d0
00014188(3): MOV qword ptr [RAX],R15
0001418b(4): MOV R15,qword ptr [RDX + 0x8]
0001418f(5): JMP 0x00013f55
00014194(8): MOV qword ptr [0xb0 + RSP],RSI
0001419c(8): MOV qword ptr [0xb8 + RSP],RSI
000141a4(8): MOV dword ptr [RSP + 0x4c],0x0
000141ac(5): JMP 0x00013bf8
000141b8(5): MOV ECX,0x1
000141bd(3): MOV RDX,R15
000141c0(3): MOV RSI,R13
000141c3(3): MOV RDI,R12
000141c6(4): MOV qword ptr [RSP],R10
000141ca(5): CALL 0x000092f0
000141cf(2): TEST EAX,EAX
000141d1(6): JNZ 0x00013ac0
000141d7(4): MOV RAX,qword ptr [R13 + 0x30]
000141db(4): MOV R10,qword ptr [RSP]
000141df(4): ADD R15,0x1
000141e3(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
000141e9(6): JNZ 0x00013f98
000141ef(5): MOV RDI,qword ptr [RSP + 0x70]
000141f4(5): CALL 0x000019d0
000141f9(4): CMP qword ptr [R13 + 0x10],R15
000141fd(6): JZ 0x00013fcf
00014203(6): MOVZX R14D,byte ptr [RSP + 0x10]
00014209(5): JMP 0x00013fa1
0001420e(5): MOV RAX,qword ptr [RSP + 0x8]
00014213(4): TEST byte ptr [RAX + 0x38],0x10
00014217(2): JNZ 0x0001422a
00014219(5): CMP qword ptr [RAX + 0x30],0x0
0001421e(2): JZ 0x0001422a
00014220(8): TEST byte ptr [0xb0 + R13],0x1
00014228(2): JNZ 0x00014238
0001422a(8): CMP qword ptr [0x98 + R13],0x0
00014232(6): JZ 0x0001432b
00014238(4): LEA RDI,[RDX + RDX*0x2]
0001423c(4): MOV qword ptr [RSP],RDX
00014240(4): SHL RDI,0x3
00014244(5): CALL 0x00001c20
00014249(3): TEST RAX,RAX
0001424c(4): MOV qword ptr [R13 + 0x38],RAX
00014250(6): JZ 0x0001479c
00014256(4): MOV RDX,qword ptr [RSP]
0001425a(2): XOR ESI,ESI
0001425c(2): XOR ECX,ECX
0001425e(3): TEST RDX,RDX
00014261(2): JNZ 0x00014274
00014263(5): JMP 0x0001432b
00014270(4): MOV RAX,qword ptr [R13 + 0x38]
00014274(4): PXOR XMM0,XMM0
00014278(3): ADD RAX,RSI
0001427b(4): ADD RCX,0x1
0001427f(8): MOV qword ptr [RAX + 0x10],0x0
00014287(4): ADD RSI,0x18
0001428b(3): MOVUPS xmmword ptr [RAX],XMM0
0001428e(4): MOV RAX,qword ptr [R13 + 0x10]
00014292(3): CMP RCX,RAX
00014295(2): JC 0x00014270
00014297(3): TEST RAX,RAX
0001429a(6): JZ 0x0001432b
000142a0(4): MOV RAX,qword ptr [R13 + 0x30]
000142a4(9): MOV qword ptr [RSP + 0x18],0x0
000142ad(9): MOV qword ptr [RSP + 0x10],0x0
000142b6(5): MOV RCX,qword ptr [RSP + 0x18]
000142bb(4): LEA RDX,[RAX + RCX*0x1]
000142bf(5): CMP qword ptr [RDX + 0x8],0x0
000142c4(4): MOV RCX,qword ptr [RDX + 0x10]
000142c8(2): JLE 0x00014314
000142ca(3): XOR R15D,R15D
000142cd(2): JMP 0x000142e8
000142d0(4): MOV RAX,qword ptr [R13 + 0x30]
000142d4(5): MOV RDX,qword ptr [RSP + 0x18]
000142d9(4): ADD R15,0x1
000142dd(4): MOV RCX,qword ptr [RSP]
000142e1(5): CMP R15,qword ptr [RAX + RDX*0x1 + 0x8]
000142e6(2): JGE 0x00014314
000142e8(4): MOV RAX,qword ptr [RCX + R15*0x8]
000142ec(4): MOV qword ptr [RSP],RCX
000142f0(4): LEA RSI,[RAX + RAX*0x2]
000142f4(4): MOV RAX,qword ptr [R13 + 0x38]
000142f8(4): LEA RDI,[RAX + RSI*0x8]
000142fc(5): MOV RSI,qword ptr [RSP + 0x10]
00014301(5): CALL 0x00007640
00014306(2): TEST AL,AL
00014308(2): JNZ 0x000142d0
0001430a(5): MOV EAX,0xc
0001430f(5): JMP 0x00013ac0
00014314(6): ADD qword ptr [RSP + 0x10],0x1
0001431a(6): ADD qword ptr [RSP + 0x18],0x18
00014320(5): MOV RDX,qword ptr [RSP + 0x10]
00014325(4): CMP RDX,qword ptr [R13 + 0x10]
00014329(2): JC 0x000142b6
0001432b(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00014332(8): MOV dword ptr [RSP + 0x4c],0x0
0001433a(3): SHR AL,0x2
0001433d(6): CMP qword ptr [RSP + 0x20],0x0
00014343(3): SETZ DL
00014346(2): AND AL,DL
00014348(6): JNZ 0x0001452f
0001434e(4): MOV RAX,qword ptr [RBX + 0x68]
00014352(3): MOV RDI,R12
00014355(4): MOV RAX,qword ptr [RAX + 0x18]
00014359(4): MOV RAX,qword ptr [RAX + 0x38]
0001435d(4): LEA RDX,[RAX + RAX*0x2]
00014361(7): MOV qword ptr [0x90 + RBX],RAX
00014368(4): MOV RAX,qword ptr [RBX + 0x30]
0001436c(4): LEA RSI,[RAX + RDX*0x8]
00014370(5): CALL 0x00009d50
00014375(2): TEST EAX,EAX
00014377(3): MOV R15D,EAX
0001437a(4): MOV dword ptr [RSP + 0x50],EAX
0001437e(6): JNZ 0x0001449f
00014384(8): CMP qword ptr [0x98 + RBX],0x0
0001438c(6): JLE 0x00014460
00014392(5): MOV R9,qword ptr [RSP + 0x68]
00014397(3): TEST R9,R9
0001439a(6): JLE 0x00014460
000143a0(3): XOR R10D,R10D
000143a3(5): LEA R13,[R12 + 0x10]
000143a8(2): JMP 0x000143bd
000143b0(4): ADD R10,0x1
000143b4(3): CMP R9,R10
000143b7(6): JLE 0x00014460
000143bd(5): MOV RCX,qword ptr [RSP + 0x70]
000143c2(3): MOV RSI,qword ptr [RBX]
000143c5(4): MOV R8,qword ptr [RCX + R10*0x8]
000143c9(3): MOV RDI,R8
000143cc(4): SHL RDI,0x4
000143d0(3): ADD RDI,RSI
000143d3(4): CMP byte ptr [RDI + 0x8],0x4
000143d7(2): JNZ 0x000143b0
000143d9(2): XOR EDX,EDX
000143db(2): JMP 0x000143e9
000143e0(4): ADD RDX,0x1
000143e4(3): CMP R9,RDX
000143e7(2): JZ 0x000143b0
000143e9(4): MOV RAX,qword ptr [RCX + RDX*0x8]
000143ed(4): SHL RAX,0x4
000143f1(3): ADD RAX,RSI
000143f4(4): CMP byte ptr [RAX + 0x8],0x9
000143f8(2): JNZ 0x000143e0
000143fa(3): MOV R11,qword ptr [RDI]
000143fd(3): CMP qword ptr [RAX],R11
00014400(2): JNZ 0x000143e0
00014402(4): MOV RDX,qword ptr [RBX + 0x28]
00014406(4): LEA RAX,[R8 + R8*0x2]
0001440a(3): MOV RSI,R13
0001440d(3): MOV RDI,R9
00014410(4): LEA RAX,[RDX + RAX*0x8]
00014414(4): MOV RAX,qword ptr [RAX + 0x10]
00014418(3): MOV R11,qword ptr [RAX]
0001441b(3): MOV RDX,R11
0001441e(5): CALL 0x00008bf0
00014423(3): TEST RAX,RAX
00014426(2): JNZ 0x000143b0
00014428(4): MOV RAX,qword ptr [RBX + 0x30]
0001442c(4): LEA RDX,[R11 + R11*0x2]
00014430(3): MOV RDI,R12
00014433(4): LEA RSI,[RAX + RDX*0x8]
00014437(5): CALL 0x00009110
0001443c(2): TEST EAX,EAX
0001443e(6): JNZ 0x00014780
00014444(5): MOV R9,qword ptr [RSP + 0x68]
00014449(6): MOV R10D,0x1
0001444f(3): CMP R9,R10
00014452(6): JG 0x000143bd
00014458(8): NOP dword ptr [RAX + RAX*0x1]
00014460(5): MOV RDI,qword ptr [RSP + 0x28]
00014465(2): XOR ECX,ECX
00014467(3): MOV RDX,R12
0001446a(3): MOV RSI,RBX
0001446d(5): CALL 0x00009f40
00014472(3): TEST RAX,RAX
00014475(4): MOV qword ptr [RBX + 0x48],RAX
00014479(6): JZ 0x000145e2
0001447f(4): CMP byte ptr [RAX + 0x68],0x0
00014483(6): JS 0x00014581
00014489(4): MOV qword ptr [RBX + 0x60],RAX
0001448d(4): MOV qword ptr [RBX + 0x58],RAX
00014491(4): MOV qword ptr [RBX + 0x50],RAX
00014495(5): MOV RDI,qword ptr [RSP + 0x70]
0001449a(5): CALL 0x000019d0
0001449f(5): MOV RAX,qword ptr [RSP + 0x8]
000144a4(5): MOV dword ptr [RSP + 0x4c],R15D
000144a9(3): MOV R13,qword ptr [RAX]
000144ac(4): MOV RDI,qword ptr [R13 + 0x70]
000144b0(3): TEST RDI,RDI
000144b3(2): JZ 0x000144c8
000144b5(3): NOP dword ptr [RAX]
000144b8(3): MOV R12,qword ptr [RDI]
000144bb(5): CALL 0x000019d0
000144c0(3): TEST R12,R12
000144c3(3): MOV RDI,R12
000144c6(2): JNZ 0x000144b8
000144c8(4): MOV RDI,qword ptr [R13 + 0x20]
000144cc(8): MOV qword ptr [R13 + 0x70],0x0
000144d4(11): MOV dword ptr [0x80 + R13],0xf
000144df(8): MOV qword ptr [R13 + 0x68],0x0
000144e7(5): CALL 0x000019d0
000144ec(8): MOV qword ptr [R13 + 0x20],0x0
000144f4(3): MOV RDI,RBP
000144f7(5): CALL 0x000088e0
000144fc(4): MOV EAX,dword ptr [RSP + 0x4c]
00014500(2): TEST EAX,EAX
00014502(6): JZ 0x00013b3c
00014508(5): JMP 0x00013b1c
0001450d(8): MOV dword ptr [RSP + 0x4c],0xc
00014515(5): JMP 0x00013acc
0001451a(3): MOV RDI,RBP
0001451d(5): CALL 0x00007940
00014522(8): MOV dword ptr [RSP + 0x4c],0x0
0001452a(5): JMP 0x00013bf8
0001452f(5): MOV RCX,qword ptr [RSP + 0x8]
00014534(5): CMP qword ptr [RCX + 0x28],0x0
00014539(6): JNZ 0x0001434e
0001453f(4): MOV R10,qword ptr [RBX + 0x10]
00014543(3): TEST R10,R10
00014546(6): JZ 0x000147fa
0001454c(3): MOV RSI,qword ptr [RBX]
0001454f(7): LEA R9,[0x16fec]
00014556(3): XOR R8D,R8D
00014559(2): XOR EDX,EDX
0001455b(3): MOV RCX,RSI
0001455e(4): CMP byte ptr [RCX + 0x8],0xc
00014562(6): JA 0x0001482e
00014568(4): MOVZX EDI,byte ptr [RCX + 0x8]
0001456c(4): MOVSXD RDI,dword ptr [R9 + RDI*0x4]
00014570(3): ADD RDI,R9
00014573(2): JMP RDI
00014575(2): XOR EBP,EBP
00014577(5): MOV ESI,0x1
0001457c(5): JMP 0x000138ad
00014581(5): MOV R14,qword ptr [RSP + 0x28]
00014586(5): MOV ECX,0x1
0001458b(3): MOV RDX,R12
0001458e(3): MOV RSI,RBX
00014591(3): MOV RDI,R14
00014594(5): CALL 0x00009f40
00014599(5): MOV ECX,0x2
0001459e(3): MOV RDX,R12
000145a1(3): MOV RSI,RBX
000145a4(3): MOV RDI,R14
000145a7(4): MOV qword ptr [RBX + 0x50],RAX
000145ab(5): CALL 0x00009f40
000145b0(5): MOV ECX,0x6
000145b5(4): MOV qword ptr [RBX + 0x58],RAX
000145b9(3): MOV RDX,R12
000145bc(3): MOV RSI,RBX
000145bf(3): MOV RDI,R14
000145c2(5): CALL 0x00009f40
000145c7(5): CMP qword ptr [RBX + 0x50],0x0
000145cc(4): MOV qword ptr [RBX + 0x60],RAX
000145d0(2): JZ 0x000145e2
000145d2(5): CMP qword ptr [RBX + 0x58],0x0
000145d7(2): JZ 0x000145e2
000145d9(3): TEST RAX,RAX
000145dc(6): JNZ 0x00014495
000145e2(5): MOV R15D,dword ptr [RSP + 0x50]
000145e7(5): JMP 0x0001449f
000145ec(4): MOV RAX,qword ptr [RDX + 0x20]
000145f0(4): MOV R9,qword ptr [RAX + 0x38]
000145f4(5): JMP 0x00014009
000145f9(4): MOV RAX,qword ptr [RDX + 0x20]
000145fd(4): MOV RCX,qword ptr [RAX + 0x38]
00014601(5): JMP 0x00013ff4
00014606(3): MOV RDI,RBX
00014609(5): MOV ESI,0xe8
0001460e(5): CALL 0x00001c90
00014613(3): TEST RAX,RAX
00014616(3): MOV RBX,RAX
00014619(6): JZ 0x000147b1
0001461f(5): MOV RAX,qword ptr [RSP + 0x8]
00014624(8): MOV qword ptr [RAX + 0x8],0xe8
0001462c(3): MOV qword ptr [RAX],RBX
0001462f(5): JMP 0x00013812
00014634(3): MOV qword ptr [RAX],RCX
00014637(4): MOV qword ptr [RAX + 0x8],R9
0001463b(5): JMP 0x00013f55
00014640(8): MOV dword ptr [RSP + 0x4c],0x0
00014648(5): JMP 0x00013bf8
0001464d(8): MOV qword ptr [R10 + 0x8],0x1
00014655(3): MOV qword ptr [RAX],RCX
00014658(5): JMP 0x00013f55
0001465d(3): MOV RDI,RBP
00014660(5): CALL 0x000078d0
00014665(8): MOV dword ptr [RSP + 0x4c],0x0
0001466d(5): JMP 0x00013bf8
00014672(8): MOV dword ptr [RSP + 0x4c],0xc
0001467a(8): MOV qword ptr [RBX + 0x68],0x0
00014682(5): JMP 0x00013acc
00014687(3): TEST RAX,RAX
0001468a(6): JZ 0x000147bb
00014690(4): LEA R13,[R15 + 0x70]
00014694(5): LEA R12,[RSP + 0x60]
00014699(4): SUB R15,-0x80
0001469d(2): XOR ECX,ECX
0001469f(2): XOR EDX,EDX
000146a1(3): MOV RSI,R15
000146a4(3): MOV R8,R12
000146a7(3): MOV RDI,R13
000146aa(4): MOV qword ptr [RSP],RAX
000146ae(5): MOV byte ptr [RSP + 0x68],0x2
000146b3(5): CALL 0x000098b0
000146b8(4): MOV R9,qword ptr [RSP]
000146bc(3): MOV R11,RAX
000146bf(5): JMP 0x00013c9b
000146c4(5): CALL 0x000019d0
000146c9(11): MOV qword ptr [0xe0 + R13],0x0
000146d4(5): JMP 0x00013dfd
000146d9(3): MOV R8D,EAX
000146dc(4): ADD RDX,0x1
000146e0(4): ADD RCX,0x10
000146e4(3): CMP RDX,R10
000146e7(6): JNZ 0x0001455e
000146ed(3): OR R14B,R8B
000146f0(6): JZ 0x000147fa
000146f6(3): MOV RAX,RDX
000146f9(4): SHL RAX,0x4
000146fd(3): ADD RAX,RSI
00014700(2): JMP 0x00014718
00014702(3): CMP DL,0x5
00014705(2): JNZ 0x0001470b
00014707(4): MOV byte ptr [RSI + 0x8],0x7
0001470b(4): ADD RSI,0x10
0001470f(3): CMP RAX,RSI
00014712(6): JZ 0x000147f7
00014718(4): MOVZX EDX,byte ptr [RSI + 0x8]
0001471c(3): CMP DL,0x1
0001471f(2): JNZ 0x00014702
00014721(3): CMP byte ptr [RSI],0x0
00014724(2): JNS 0x0001470b
00014726(4): AND byte ptr [RSI + 0xa],0xdf
0001472a(2): JMP 0x0001470b
00014730(3): CMP byte ptr [RCX],0x0
00014733(4): CMOVS R14D,EAX
00014737(2): JMP 0x000146dc
00014739(2): MOV EDI,dword ptr [RCX]
0001473b(3): CMP EDI,0x20
0001473e(2): JZ 0x000146dc
00014740(6): JBE 0x000147e9
00014746(3): CMP EDI,0x40
00014749(2): JZ 0x000146dc
0001474b(3): ADD EDI,-0x80
0001474e(2): JZ 0x000146dc
00014750(5): JMP 0x0001434e
00014758(3): MOV RDI,qword ptr [RCX]
0001475b(5): CMP qword ptr [RDI + 0x10],0x0
00014760(6): JNZ 0x0001434e
00014766(5): CMP qword ptr [RDI + 0x18],0x0
0001476b(6): JZ 0x000146dc
00014771(5): JMP 0x0001434e
00014780(3): MOV R15D,EAX
00014783(5): JMP 0x0001449f
00014788(8): MOV qword ptr [R15 + 0x8],0x0
00014790(7): MOV qword ptr [R15],0x0
00014797(5): JMP 0x0001430a
0001479c(5): MOV RAX,qword ptr [RSP + 0x8]
000147a1(8): MOV dword ptr [RSP + 0x4c],0xc
000147a9(3): MOV R13,qword ptr [RAX]
000147ac(5): JMP 0x00013acc
000147b1(5): MOV EAX,0xc
000147b6(5): JMP 0x00013b3c
000147bb(5): MOV RAX,qword ptr [RSP + 0x8]
000147c0(8): MOV qword ptr [RBX + 0x68],0x0
000147c8(3): MOV R13,qword ptr [RAX]
000147cb(5): JMP 0x00013acc
000147d0(8): MOV qword ptr [RCX + 0x8],0x0
000147d8(7): MOV qword ptr [RCX],0x0
000147df(5): MOV EAX,0xc
000147e4(5): JMP 0x00013ac0
000147e9(3): CMP EDI,0x10
000147ec(6): JZ 0x000146dc
000147f2(5): JMP 0x0001434e
000147f7(3): MOV R14D,R8D
000147fa(8): CMP qword ptr [0x98 + RBX],0x0
00014802(7): MOVZX EDX,byte ptr [0xb0 + RBX]
00014809(10): MOV dword ptr [0xb4 + RBX],0x1
00014813(3): SETG AL
00014816(3): AND EDX,0xfffffff9
00014819(3): OR EAX,R14D
0001481c(3): AND EAX,0x1
0001481f(2): ADD EAX,EAX
00014821(2): OR EAX,EDX
00014823(6): MOV byte ptr [0xb0 + RBX],AL
00014829(5): JMP 0x0001434e
0001482e(5): CALL 0x000019e0
00014833(7): LEA RCX,[0x17060]
0001483a(7): LEA RSI,[0x16aa0]
00014841(7): LEA RDI,[0x16b65]
00014848(5): MOV EDX,0x5b0
0001484d(5): CALL 0x00001b50
00014852(7): LEA RCX,[0x17060]
00014859(7): LEA RSI,[0x16aa0]
00014860(7): LEA RDI,[0x16ac0]
00014867(5): MOV EDX,0x5c2
0001486c(5): CALL 0x00001b50
00014871(7): LEA RCX,[0x17060]
00014878(7): LEA RSI,[0x16aa0]
0001487f(7): LEA RDI,[0x16b5b]
00014886(5): MOV EDX,0x5af
0001488b(5): CALL 0x00001b50
00014890(5): CALL 0x00001ad0
00014895(1): NOP
00014896(10): NOP word ptr CS:[RAX + RAX*0x1]
000148a0(4): SUB RSP,0x8
000148a4(7): MOV RCX,qword ptr [0x0021b238]
000148ab(3): MOV R8,RDI
000148ae(3): MOV RDI,RDX
000148b1(3): MOV RAX,RCX
000148b4(4): SHR RAX,0x19
000148b8(3): AND EAX,0x1
000148bb(3): SHL EAX,0x4
000148be(2): MOV EDX,EAX
000148c0(4): MOVZX EAX,byte ptr [RDI + 0x38]
000148c4(3): AND EAX,0xffffffef
000148c7(2): OR EAX,EDX
000148c9(3): MOV RDX,RSI
000148cc(3): MOV RSI,R8
000148cf(3): OR EAX,0xffffff80
000148d2(3): MOV byte ptr [RDI + 0x38],AL
000148d5(5): CALL 0x000137a0
000148da(2): TEST EAX,EAX
000148dc(2): JZ 0x00014908
000148de(7): LEA RDX,[0x170c0]
000148e5(2): CDQE
000148e7(7): LEA RSI,[0x17160]
000148ee(2): XOR EDI,EDI
000148f0(4): ADD RSI,qword ptr [RDX + RAX*0x8]
000148f4(5): MOV EDX,0x5
000148f9(4): ADD RSP,0x8
000148fd(5): JMP 0x00001a90
00014908(2): XOR EAX,EAX
0001490a(4): ADD RSP,0x8
0001490e(1): RET
00014910(7): MOV RAX,qword ptr [0x0021b238]
00014917(7): MOV qword ptr [0x0021b238],RDI
0001491e(1): RET
00014920(2): PUSH R12
00014922(1): PUSH RBP
00014923(2): XOR EAX,EAX
00014925(1): PUSH RBX
00014926(4): MOV RBP,qword ptr [RDI + 0x20]
0001492a(3): MOV RBX,RDI
0001492d(3): MOV R12,qword ptr [RDI]
00014930(4): LEA RDI,[RBP + 0x8]
00014934(3): MOV RCX,RBP
00014937(8): MOV qword ptr [RBP],0x0
0001493f(11): MOV qword ptr [0xf8 + RBP],0x0
0001494a(4): AND RDI,-0x8
0001494e(3): SUB RCX,RDI
00014951(6): ADD ECX,0x100
00014957(3): SHR ECX,0x3
0001495a(3): STOSQ.REP RDI
0001495d(3): MOV RCX,RBP
00014960(3): MOV RDI,RBX
00014963(5): MOV RSI,qword ptr [R12 + 0x48]
00014968(4): LEA RDX,[RSI + 0x18]
0001496c(4): ADD RSI,0x10
00014970(5): CALL 0x0000ce70
00014975(5): MOV RAX,qword ptr [R12 + 0x50]
0001497a(5): CMP qword ptr [R12 + 0x48],RAX
0001497f(2): JZ 0x00014999
00014981(4): LEA RDX,[RAX + 0x18]
00014985(4): LEA RSI,[RAX + 0x10]
00014989(3): MOV RCX,RBP
0001498c(3): MOV RDI,RBX
0001498f(5): CALL 0x0000ce70
00014994(5): MOV RAX,qword ptr [R12 + 0x48]
00014999(5): MOV RSI,qword ptr [R12 + 0x58]
0001499e(3): CMP RSI,RAX
000149a1(2): JZ 0x000149bb
000149a3(4): LEA RDX,[RSI + 0x18]
000149a7(3): MOV RCX,RBP
000149aa(4): ADD RSI,0x10
000149ae(3): MOV RDI,RBX
000149b1(5): CALL 0x0000ce70
000149b6(5): MOV RAX,qword ptr [R12 + 0x48]
000149bb(5): MOV RSI,qword ptr [R12 + 0x60]
000149c0(3): CMP RSI,RAX
000149c3(2): JZ 0x000149d8
000149c5(4): LEA RDX,[RSI + 0x18]
000149c9(3): MOV RCX,RBP
000149cc(4): ADD RSI,0x10
000149d0(3): MOV RDI,RBX
000149d3(5): CALL 0x0000ce70
000149d8(4): OR byte ptr [RBX + 0x38],0x8
000149dc(2): XOR EAX,EAX
000149de(1): POP RBX
000149df(1): POP RBP
000149e0(2): POP R12
000149e2(1): RET
000149f0(2): PUSH R15
000149f2(2): PUSH R14
000149f4(3): MOV RAX,R8
000149f7(2): PUSH R13
000149f9(2): PUSH R12
000149fb(3): ADD R8,RCX
000149fe(1): PUSH RBP
000149ff(1): PUSH RBX
00014a00(4): SUB RSP,0x38
00014a04(3): TEST RCX,RCX
00014a07(4): MOV EBX,dword ptr [RSP + 0x78]
00014a0b(5): MOV R12,qword ptr [RSP + 0x70]
00014a10(4): MOV dword ptr [RSP + 0x28],EBX
00014a14(6): JS 0x00014d50
00014a1a(3): CMP RCX,RDX
00014a1d(6): JG 0x00014d50
00014a23(3): CMP R8,RDX
00014a26(3): MOV RBX,RCX
00014a29(3): MOV R15,RDI
00014a2c(6): JG 0x00014cb0
00014a32(3): TEST RAX,RAX
00014a35(2): JS 0x00014a40
00014a37(3): CMP RCX,R8
00014a3a(6): JG 0x00014cb0
00014a40(3): TEST R8,R8
00014a43(6): JS 0x00014d28
00014a49(3): TEST RAX,RAX
00014a4c(2): JNS 0x00014a57
00014a4e(3): CMP RBX,R8
00014a51(6): JLE 0x00014d28
00014a57(5): MOVZX EAX,byte ptr [R15 + 0x38]
00014a5c(3): MOV R13D,EAX
00014a5f(4): SHR R13B,0x5
00014a63(3): MOV EDI,R13D
00014a66(3): AND EDI,0x3
00014a69(3): CMP R8,RBX
00014a6c(4): MOV dword ptr [RSP + 0x2c],EDI
00014a70(2): JLE 0x00014a81
00014a72(5): CMP qword ptr [R15 + 0x20],0x0
00014a77(2): JZ 0x00014a81
00014a79(2): TEST AL,0x8
00014a7b(6): JZ 0x00014c70
00014a81(2): TEST AL,0x10
00014a83(6): JNZ 0x00014c50
00014a89(3): TEST R12,R12
00014a8c(6): JZ 0x00014c50
00014a92(3): AND EAX,0x6
00014a95(4): MOV RCX,qword ptr [R15 + 0x30]
00014a99(2): CMP AL,0x4
00014a9b(6): JZ 0x00014c30
00014aa1(4): LEA R14,[RCX + 0x1]
00014aa5(3): MOV R13,R14
00014aa8(3): MOV RDI,R14
00014aab(4): SHL RDI,0x4
00014aaf(5): MOV qword ptr [RSP + 0x20],R9
00014ab4(5): MOV qword ptr [RSP + 0x18],RDX
00014ab9(5): MOV qword ptr [RSP + 0x10],RSI
00014abe(5): MOV qword ptr [RSP + 0x8],R8
00014ac3(5): CALL 0x00001c20
00014ac8(3): TEST RAX,RAX
00014acb(3): MOV RBP,RAX
00014ace(6): JZ 0x00014d60
00014ad4(4): SUB RSP,0x8
00014ad8(3): MOV RCX,RBX
00014adb(3): MOV RDI,R15
00014ade(4): MOV EAX,dword ptr [RSP + 0x34]
00014ae2(1): PUSH RAX
00014ae3(1): PUSH RBP
00014ae4(2): PUSH R14
00014ae6(5): MOV R9,qword ptr [RSP + 0x40]
00014aeb(5): MOV R8,qword ptr [RSP + 0x28]
00014af0(5): MOV RDX,qword ptr [RSP + 0x38]
00014af5(5): MOV RSI,qword ptr [RSP + 0x30]
00014afa(5): CALL 0x0000f610
00014aff(4): ADD RSP,0x20
00014b03(2): TEST EAX,EAX
00014b05(2): JZ 0x00014b38
00014b07(3): CMP EAX,0x1
00014b0a(7): MOV R12,-0x1
00014b11(2): JZ 0x00014b1a
00014b13(7): MOV R12,-0x2
00014b1a(3): MOV RDI,RBP
00014b1d(5): CALL 0x000019d0
00014b22(4): ADD RSP,0x38
00014b26(3): MOV RAX,R12
00014b29(1): POP RBX
00014b2a(1): POP RBP
00014b2b(2): POP R12
00014b2d(2): POP R13
00014b2f(2): POP R14
00014b31(2): POP R15
00014b33(1): RET
00014b38(3): TEST R12,R12
00014b3b(6): JZ 0x00014c08
00014b41(5): MOVZX EAX,byte ptr [R15 + 0x38]
00014b46(4): LEA RDX,[R13 + 0x1]
00014b4a(2): SHR AL,1
00014b4c(3): AND EAX,0x3
00014b4f(6): JZ 0x00014cc0
00014b55(3): CMP EAX,0x1
00014b58(6): JZ 0x00014d70
00014b5e(3): CMP EAX,0x2
00014b61(6): JNZ 0x00014e50
00014b67(4): CMP R14,qword ptr [R12]
00014b6b(6): JA 0x00014e31
00014b71(6): MOV R9D,0x2
00014b77(3): TEST R13,R13
00014b7a(6): JLE 0x00014de8
00014b80(5): MOV R8,qword ptr [R12 + 0x8]
00014b85(5): MOV RDI,qword ptr [R12 + 0x10]
00014b8a(8): LEA RSI,[R13*0x8]
00014b92(3): MOV RDX,R13
00014b95(2): XOR EAX,EAX
00014b97(9): NOP word ptr [RAX + RAX*0x1]
00014ba0(5): MOV RCX,qword ptr [RBP + RAX*0x2]
00014ba5(4): MOV qword ptr [R8 + RAX*0x1],RCX
00014ba9(5): MOV RCX,qword ptr [RBP + RAX*0x2 + 0x8]
00014bae(4): MOV qword ptr [RDI + RAX*0x1],RCX
00014bb2(4): ADD RAX,0x8
00014bb6(3): CMP RSI,RAX
00014bb9(2): JNZ 0x00014ba0
00014bbb(4): CMP qword ptr [R12],RDX
00014bbf(2): JBE 0x00014bed
00014bc1(5): MOV RSI,qword ptr [R12 + 0x10]
00014bc6(5): MOV RCX,qword ptr [R12 + 0x8]
00014bcb(7): MOV RAX,-0x1
00014bd2(6): NOP word ptr [RAX + RAX*0x1]
00014bd8(4): MOV qword ptr [RSI + RDX*0x8],RAX
00014bdc(4): ADD R13,0x1
00014be0(4): MOV qword ptr [RCX + RDX*0x8],RAX
00014be4(4): CMP R13,qword ptr [R12]
00014be8(3): MOV RDX,R13
00014beb(2): JC 0x00014bd8
00014bed(5): MOVZX EAX,byte ptr [R15 + 0x38]
00014bf2(4): LEA R13D,[R9 + R9*0x1]
00014bf6(3): AND EAX,0xfffffff9
00014bf9(3): OR EAX,R13D
00014bfc(2): TEST AL,0x6
00014bfe(4): MOV byte ptr [R15 + 0x38],AL
00014c02(6): JZ 0x00014b13
00014c08(5): CMP byte ptr [RSP + 0x28],0x0
00014c0d(4): MOV R12,qword ptr [RBP]
00014c11(6): JZ 0x00014b1a
00014c17(3): CMP R12,RBX
00014c1a(6): JNZ 0x00014e12
00014c20(4): MOV R12,qword ptr [RBP + 0x8]
00014c24(3): SUB R12,RBX
00014c27(5): JMP 0x00014b1a
00014c30(4): MOV R14,qword ptr [R12]
00014c34(3): CMP R14,RCX
00014c37(6): JA 0x00014aa1
00014c3d(3): TEST R14,R14
00014c40(3): MOV R13,R14
00014c43(6): JG 0x00014aa8
00014c49(7): NOP dword ptr [RAX]
00014c50(5): MOV EDI,0x10
00014c55(6): MOV R14D,0x1
00014c5b(6): MOV R13D,0x1
00014c61(3): XOR R12D,R12D
00014c64(5): JMP 0x00014aaf
00014c70(3): MOV RDI,R15
00014c73(5): MOV qword ptr [RSP + 0x20],R9
00014c78(5): MOV qword ptr [RSP + 0x18],RDX
00014c7d(5): MOV qword ptr [RSP + 0x10],RSI
00014c82(5): MOV qword ptr [RSP + 0x8],R8
00014c87(5): CALL 0x00014920
00014c8c(5): MOVZX EAX,byte ptr [R15 + 0x38]
00014c91(5): MOV R9,qword ptr [RSP + 0x20]
00014c96(5): MOV RDX,qword ptr [RSP + 0x18]
00014c9b(5): MOV RSI,qword ptr [RSP + 0x10]
00014ca0(5): MOV R8,qword ptr [RSP + 0x8]
00014ca5(5): JMP 0x00014a81
00014cb0(3): MOV R8,RDX
00014cb3(5): JMP 0x00014a57
00014cc0(8): LEA R14,[RDX*0x8]
00014cc8(5): MOV qword ptr [RSP + 0x8],RDX
00014ccd(3): MOV RDI,R14
00014cd0(5): CALL 0x00001c20
00014cd5(3): TEST RAX,RAX
00014cd8(5): MOV qword ptr [R12 + 0x8],RAX
00014cdd(5): MOV RDX,qword ptr [RSP + 0x8]
00014ce2(6): JZ 0x00014dfa
00014ce8(3): MOV RDI,R14
00014ceb(5): MOV qword ptr [RSP + 0x8],RDX
00014cf0(5): MOV qword ptr [RSP + 0x10],RAX
00014cf5(5): CALL 0x00001c20
00014cfa(3): TEST RAX,RAX
00014cfd(5): MOV qword ptr [R12 + 0x10],RAX
00014d02(5): MOV RDX,qword ptr [RSP + 0x8]
00014d07(5): MOV RCX,qword ptr [RSP + 0x10]
00014d0c(6): JZ 0x00014df2
00014d12(4): MOV qword ptr [R12],RDX
00014d16(6): MOV R9D,0x1
00014d1c(5): JMP 0x00014b77
00014d28(5): MOVZX EAX,byte ptr [R15 + 0x38]
00014d2d(3): XOR R8D,R8D
00014d30(3): MOV R13D,EAX
00014d33(4): SHR R13B,0x5
00014d37(3): MOV EDI,R13D
00014d3a(3): AND EDI,0x3
00014d3d(4): MOV dword ptr [RSP + 0x2c],EDI
00014d41(5): JMP 0x00014a81
00014d50(7): MOV R12,-0x1
00014d57(5): JMP 0x00014b22
00014d60(7): MOV R12,-0x2
00014d67(5): JMP 0x00014b22
00014d70(4): CMP qword ptr [R12],RDX
00014d74(6): MOV R9D,0x1
00014d7a(6): JNC 0x00014b77
00014d80(8): LEA RCX,[RDX*0x8]
00014d88(5): MOV RDI,qword ptr [R12 + 0x8]
00014d8d(5): MOV byte ptr [RSP + 0x18],R9B
00014d92(5): MOV qword ptr [RSP + 0x10],RDX
00014d97(3): MOV RSI,RCX
00014d9a(5): MOV qword ptr [RSP + 0x8],RCX
00014d9f(5): CALL 0x00001c90
00014da4(3): TEST RAX,RAX
00014da7(3): MOV R14,RAX
00014daa(2): JZ 0x00014dfa
00014dac(5): MOV RCX,qword ptr [RSP + 0x8]
00014db1(5): MOV RDI,qword ptr [R12 + 0x10]
00014db6(3): MOV RSI,RCX
00014db9(5): CALL 0x00001c90
00014dbe(3): TEST RAX,RAX
00014dc1(5): MOV RDX,qword ptr [RSP + 0x10]
00014dc6(6): MOVZX R9D,byte ptr [RSP + 0x18]
00014dcc(2): JZ 0x00014e02
00014dce(5): MOV qword ptr [R12 + 0x8],R14
00014dd3(5): MOV qword ptr [R12 + 0x10],RAX
00014dd8(4): MOV qword ptr [R12],RDX
00014ddc(5): JMP 0x00014b77
00014de8(2): XOR EDX,EDX
00014dea(3): XOR R13D,R13D
00014ded(5): JMP 0x00014bbb
00014df2(3): MOV RDI,RCX
00014df5(5): CALL 0x000019d0
00014dfa(3): XOR R9D,R9D
00014dfd(5): JMP 0x00014bed
00014e02(3): MOV RDI,R14
00014e05(5): CALL 0x000019d0
00014e0a(3): XOR R9D,R9D
00014e0d(5): JMP 0x00014bed
00014e12(7): LEA RCX,[0x17030]
00014e19(7): LEA RSI,[0x16a80]
00014e20(7): LEA RDI,[0x16ba5]
00014e27(5): MOV EDX,0x1be
00014e2c(5): CALL 0x00001b50
00014e31(7): LEA RCX,[0x17020]
00014e38(7): LEA RSI,[0x16a80]
00014e3f(7): LEA RDI,[0x16b8d]
00014e46(5): MOV EDX,0x1fb
00014e4b(5): CALL 0x00001b50
00014e50(7): LEA RCX,[0x17020]
00014e57(7): LEA RSI,[0x16a80]
00014e5e(7): LEA RDI,[0x16b70]
00014e65(5): MOV EDX,0x1f9
00014e6a(5): CALL 0x00001b50
00014e6f(1): NOP
00014e70(2): PUSH R15
00014e72(2): PUSH R14
00014e74(2): PUSH R13
00014e76(2): PUSH R12
00014e78(3): MOV R12,RDI
00014e7b(1): PUSH RBP
00014e7c(1): PUSH RBX
00014e7d(3): MOV RBP,R8
00014e80(3): MOV RBX,RDX
00014e83(3): MOV RDX,RBP
00014e86(4): SUB RSP,0x28
00014e8a(4): SHR RDX,0x3f
00014e8e(5): MOV RAX,qword ptr [RSP + 0x70]
00014e93(2): MOV EDI,EDX
00014e95(5): MOV R8D,dword ptr [RSP + 0x78]
00014e9a(4): SHR RAX,0x3f
00014e9e(3): OR DIL,AL
00014ea1(6): JNZ 0x00014f70
00014ea7(3): TEST RBX,RBX
00014eaa(6): JS 0x00014f70
00014eb0(3): MOV R15,RBX
00014eb3(3): ADD R15,RBP
00014eb6(6): JO 0x00014f70
00014ebc(3): TEST RBP,RBP
00014ebf(3): MOV R14,RCX
00014ec2(3): MOV RCX,R9
00014ec5(6): JZ 0x00014f80
00014ecb(3): XOR R13D,R13D
00014ece(3): TEST RBX,RBX
00014ed1(5): MOV qword ptr [RSP + 0x8],RSI
00014ed6(2): JNZ 0x00014f20
00014ed8(4): MOVZX R8D,R8B
00014edc(3): MOV RDX,R15
00014edf(3): MOV RSI,R14
00014ee2(2): PUSH R8
00014ee4(4): PUSH qword ptr [RSP + 0x70]
00014ee8(3): MOV RDI,R12
00014eeb(8): MOV R9,qword ptr [0x80 + RSP]
00014ef3(5): MOV R8,qword ptr [RSP + 0x70]
00014ef8(5): CALL 0x000149f0
00014efd(3): MOV RDI,R13
00014f00(3): MOV RBX,RAX
00014f03(5): CALL 0x000019d0
00014f08(1): POP RAX
00014f09(1): POP RDX
00014f0a(4): ADD RSP,0x28
00014f0e(3): MOV RAX,RBX
00014f11(1): POP RBX
00014f12(1): POP RBP
00014f13(2): POP R12
00014f15(2): POP R13
00014f17(2): POP R14
00014f19(2): POP R15
00014f1b(1): RET
00014f20(3): MOV RDI,R15
00014f23(5): MOV dword ptr [RSP + 0x1c],R8D
00014f28(5): MOV qword ptr [RSP + 0x10],R9
00014f2d(5): CALL 0x00001c20
00014f32(3): TEST RAX,RAX
00014f35(3): MOV R13,RAX
00014f38(2): JZ 0x00014f70
00014f3a(5): MOV RSI,qword ptr [RSP + 0x8]
00014f3f(3): MOV RDX,RBX
00014f42(3): MOV RDI,RAX
00014f45(5): CALL 0x00001be0
00014f4a(5): LEA RDI,[R13 + RBX*0x1]
00014f4f(3): MOV RSI,R14
00014f52(3): MOV RDX,RBP
00014f55(3): MOV R14,R13
00014f58(5): CALL 0x00001be0
00014f5d(5): MOV RCX,qword ptr [RSP + 0x10]
00014f62(5): MOV R8D,dword ptr [RSP + 0x1c]
00014f67(5): JMP 0x00014ed8
00014f70(7): MOV RBX,-0x2
00014f77(2): JMP 0x00014f0a
00014f80(3): MOV R14,RSI
00014f83(3): XOR R13D,R13D
00014f86(5): JMP 0x00014ed8
00014f90(2): MOV EAX,EDX
00014f92(2): PUSH R14
00014f94(2): PUSH R13
00014f96(3): AND EAX,0x1
00014f99(2): PUSH R12
00014f9b(1): PUSH RBP
00014f9c(3): CMP EAX,0x1
00014f9f(1): PUSH RBX
00014fa0(3): MOV RBX,RDI
00014fa3(3): SBB R14,R14
00014fa6(7): MOV qword ptr [RDI],0x0
00014fad(8): MOV qword ptr [RDI + 0x8],0x0
00014fb5(7): AND R14D,0xfd4fca
00014fbc(8): MOV qword ptr [RDI + 0x10],0x0
00014fc4(5): MOV EDI,0x100
00014fc9(3): MOV R12,RSI
00014fcc(2): MOV EBP,EDX
00014fce(7): ADD R14,0x3b2fc
00014fd5(5): CALL 0x00001c20
00014fda(3): TEST RAX,RAX
00014fdd(4): MOV qword ptr [RBX + 0x20],RAX
00014fe1(6): JZ 0x00015090
00014fe7(3): MOV R13,RBP
00014fea(4): SHL R13,0x15
00014fee(7): AND R13D,0x400000
00014ff5(3): OR R13,R14
00014ff8(4): TEST BPL,0x4
00014ffc(2): JNZ 0x00015060
00014ffe(4): AND byte ptr [RBX + 0x38],0x7f
00015002(4): MOVZX EDX,byte ptr [RBX + 0x38]
00015006(3): SHR EBP,0x3
00015009(3): MOV RDI,R12
0001500c(3): AND EBP,0x1
0001500f(8): MOV qword ptr [RBX + 0x28],0x0
00015017(3): SHL EBP,0x4
0001501a(3): AND EDX,0xffffffef
0001501d(2): OR EBP,EDX
0001501f(4): MOV byte ptr [RBX + 0x38],BPL
00015023(5): CALL 0x00001ab0
00015028(3): MOV RCX,R13
0001502b(3): MOV RDX,RAX
0001502e(3): MOV RSI,R12
00015031(3): MOV RDI,RBX
00015034(5): CALL 0x000137a0
00015039(3): CMP EAX,0x10
0001503c(2): MOV EBP,EAX
0001503e(2): JZ 0x00015078
00015040(2): TEST EAX,EAX
00015042(2): JNZ 0x0001507d
00015044(3): MOV RDI,RBX
00015047(5): CALL 0x00014920
0001504c(1): POP RBX
0001504d(2): MOV EAX,EBP
0001504f(1): POP RBP
00015050(2): POP R12
00015052(2): POP R13
00015054(2): POP R14
00015056(1): RET
00015060(4): AND R13,-0x41
00015064(4): OR byte ptr [RBX + 0x38],0x80
00015068(7): OR R13,0x100
0001506f(2): JMP 0x00015002
00015078(5): MOV EBP,0x8
0001507d(4): MOV RDI,qword ptr [RBX + 0x20]
00015081(5): CALL 0x000019d0
00015086(8): MOV qword ptr [RBX + 0x20],0x0
0001508e(2): JMP 0x0001504c
00015090(5): MOV EBP,0xc
00015095(1): POP RBX
00015096(2): MOV EAX,EBP
00015098(1): POP RBP
00015099(2): POP R12
0001509b(2): POP R13
0001509d(2): POP R14
0001509f(1): RET
000150a0(2): PUSH R13
000150a2(2): PUSH R12
000150a4(1): PUSH RBP
000150a5(1): PUSH RBX
000150a6(4): SUB RSP,0x8
000150aa(3): CMP EDI,0x10
000150ad(2): JA 0x00015110
000150af(7): LEA RAX,[0x170c0]
000150b6(3): MOVSXD RDI,EDI
000150b9(7): LEA RSI,[0x17160]
000150c0(3): MOV RBP,RDX
000150c3(5): MOV EDX,0x5
000150c8(3): MOV R12,RCX
000150cb(4): ADD RSI,qword ptr [RAX + RDI*0x8]
000150cf(2): XOR EDI,EDI
000150d1(5): CALL 0x00001a90
000150d6(3): MOV RDI,RAX
000150d9(3): MOV R13,RAX
000150dc(5): CALL 0x00001ab0
000150e1(3): TEST R12,R12
000150e4(4): LEA RBX,[RAX + 0x1]
000150e8(2): JZ 0x000150fd
000150ea(3): CMP RBX,R12
000150ed(3): MOV RDX,RBX
000150f0(2): JA 0x00015118
000150f2(3): MOV RSI,R13
000150f5(3): MOV RDI,RBP
000150f8(5): CALL 0x00001be0
000150fd(4): ADD RSP,0x8
00015101(3): MOV RAX,RBX
00015104(1): POP RBX
00015105(1): POP RBP
00015106(2): POP R12
00015108(2): POP R13
0001510a(1): RET
00015110(5): CALL 0x000019e0
00015115(3): NOP dword ptr [RAX]
00015118(5): LEA RDX,[R12 + -0x1]
0001511d(6): MOV byte ptr [RBP + R12*0x1 + -0x1],0x0
00015123(2): JMP 0x000150f2
00015130(1): PUSH RBX
00015131(3): MOV RBX,RDI
00015134(3): MOV RDI,qword ptr [RDI]
00015137(3): TEST RDI,RDI
0001513a(2): JZ 0x00015141
0001513c(5): CALL 0x00008920
00015141(4): MOV RDI,qword ptr [RBX + 0x20]
00015145(7): MOV qword ptr [RBX],0x0
0001514c(8): MOV qword ptr [RBX + 0x8],0x0
00015154(5): CALL 0x000019d0
00015159(4): MOV RDI,qword ptr [RBX + 0x28]
0001515d(8): MOV qword ptr [RBX + 0x20],0x0
00015165(5): CALL 0x000019d0
0001516a(8): MOV qword ptr [RBX + 0x28],0x0
00015172(1): POP RBX
00015173(1): RET
00015180(7): TEST R8D,0xfffffff8
00015187(6): JNZ 0x00015218
0001518d(2): PUSH R13
0001518f(2): PUSH R12
00015191(3): MOV R13,RDX
00015194(1): PUSH RBP
00015195(1): PUSH RBX
00015196(3): MOV R12,RCX
00015199(3): MOV EBX,R8D
0001519c(3): MOV RBP,RDI
0001519f(4): SUB RSP,0x18
000151a3(4): TEST R8B,0x4
000151a7(2): JNZ 0x000151f8
000151a9(3): MOV RDI,RSI
000151ac(5): MOV qword ptr [RSP + 0x8],RSI
000151b1(5): CALL 0x00001ab0
000151b6(2): XOR ECX,ECX
000151b8(4): TEST byte ptr [RBP + 0x38],0x10
000151bc(3): MOV RDX,RAX
000151bf(5): MOV RSI,qword ptr [RSP + 0x8]
000151c4(2): JZ 0x00015206
000151c6(4): SUB RSP,0x8
000151ca(1): PUSH RBX
000151cb(2): PUSH 0x0
000151cd(2): PUSH 0x0
000151cf(3): MOV RDI,RBP
000151d2(3): MOV R9,RDX
000151d5(3): MOV R8,RDX
000151d8(5): CALL 0x0000f610
000151dd(4): ADD RSP,0x20
000151e1(2): TEST EAX,EAX
000151e3(3): SETNZ AL
000151e6(4): ADD RSP,0x18
000151ea(1): POP RBX
000151eb(3): MOVZX EAX,AL
000151ee(1): POP RBP
000151ef(2): POP R12
000151f1(2): POP R13
000151f3(1): RET
000151f8(4): TEST byte ptr [RBP + 0x38],0x10
000151fc(3): MOV RCX,qword ptr [RCX]
000151ff(5): MOV RDX,qword ptr [R12 + 0x8]
00015204(2): JNZ 0x000151c6
00015206(4): SUB RSP,0x8
0001520a(1): PUSH RBX
0001520b(2): PUSH R12
0001520d(2): PUSH R13
0001520f(2): JMP 0x000151cf
00015218(5): MOV EAX,0x2
0001521d(1): RET
00015220(4): SUB RSP,0x8
00015224(3): MOV R9,RDX
00015227(2): PUSH 0x1
00015229(2): PUSH R8
0001522b(3): XOR R8D,R8D
0001522e(5): CALL 0x000149f0
00015233(4): ADD RSP,0x18
00015237(1): RET
00015240(4): SUB RSP,0x8
00015244(2): PUSH 0x0
00015246(2): PUSH R9
00015248(3): MOV R9,RDX
0001524b(5): CALL 0x000149f0
00015250(4): ADD RSP,0x18
00015254(1): RET
00015260(4): SUB RSP,0x8
00015264(2): PUSH 0x1
00015266(4): PUSH qword ptr [RSP + 0x20]
0001526a(4): PUSH qword ptr [RSP + 0x20]
0001526e(2): PUSH 0x0
00015270(5): CALL 0x00014e70
00015275(4): ADD RSP,0x28
00015279(1): RET
00015280(4): SUB RSP,0x8
00015284(2): PUSH 0x0
00015286(4): PUSH qword ptr [RSP + 0x28]
0001528a(4): PUSH qword ptr [RSP + 0x28]
0001528e(4): PUSH qword ptr [RSP + 0x28]
00015292(5): CALL 0x00014e70
00015297(4): ADD RSP,0x28
0001529b(1): RET
000152a0(3): TEST RDX,RDX
000152a3(2): JNZ 0x000152c8
000152a5(4): AND byte ptr [RDI + 0x38],0xf9
000152a9(7): MOV qword ptr [RSI],0x0
000152b0(8): MOV qword ptr [RSI + 0x10],0x0
000152b8(8): MOV qword ptr [RSI + 0x8],0x0
000152c0(1): RET
000152c8(4): MOVZX EAX,byte ptr [RDI + 0x38]
000152cc(3): AND EAX,0xfffffff9
000152cf(3): OR EAX,0x2
000152d2(3): MOV byte ptr [RDI + 0x38],AL
000152d5(3): MOV qword ptr [RSI],RDX
000152d8(4): MOV qword ptr [RSI + 0x8],RCX
000152dc(4): MOV qword ptr [RSI + 0x10],R8
000152e0(1): RET
000152f0(2): PUSH R12
000152f2(1): PUSH RBP
000152f3(3): MOV RBP,RDI
000152f6(1): PUSH RBX
000152f7(5): CALL 0x00001a20
000152fc(3): MOV EBX,dword ptr [RBP]
000152ff(3): MOV RDI,RBP
00015302(3): MOV R12,RAX
00015305(5): CALL 0x00015410
0001530a(3): AND EBX,0x20
0001530d(2): TEST EBX,EBX
0001530f(2): JNZ 0x00015328
00015311(2): TEST EAX,EAX
00015313(2): JZ 0x0001531f
00015315(3): TEST R12,R12
00015318(5): MOV EAX,0xffffffff
0001531d(2): JZ 0x00015358
0001531f(1): POP RBX
00015320(1): POP RBP
00015321(2): POP R12
00015323(1): RET
00015328(2): TEST EAX,EAX
0001532a(2): JNZ 0x00015348
0001532c(5): CALL 0x000019f0
00015331(6): MOV dword ptr [RAX],0x0
00015337(5): MOV EAX,0xffffffff
0001533c(1): POP RBX
0001533d(1): POP RBP
0001533e(2): POP R12
00015340(1): RET
00015348(1): POP RBX
00015349(5): MOV EAX,0xffffffff
0001534e(1): POP RBP
0001534f(2): POP R12
00015351(1): RET
00015358(5): CALL 0x000019f0
0001535d(3): CMP dword ptr [RAX],0x9
00015360(1): POP RBX
00015361(1): POP RBP
00015362(2): POP R12
00015364(3): SETNZ AL
00015367(3): MOVZX EAX,AL
0001536a(2): NEG EAX
0001536c(1): RET
00015370(4): SUB RSP,0x8
00015374(2): XOR ESI,ESI
00015376(5): CALL 0x00001ca0
0001537b(3): MOV RDX,RAX
0001537e(5): MOV EAX,0x1
00015383(3): TEST RDX,RDX
00015386(2): JZ 0x000153a5
00015388(7): LEA RDI,[0x172f0]
0001538f(5): MOV ECX,0x2
00015394(3): MOV RSI,RDX
00015397(2): CMPSB.REPE RDI,RSI
00015399(3): SETA CL
0001539c(3): SBB CL,0x0
0001539f(2): XOR EAX,EAX
000153a1(2): TEST CL,CL
000153a3(2): JNZ 0x000153b0
000153a5(4): ADD RSP,0x8
000153a9(1): RET
000153b0(7): LEA RDI,[0x172f2]
000153b7(5): MOV ECX,0x6
000153bc(3): MOV RSI,RDX
000153bf(2): CMPSB.REPE RDI,RSI
000153c1(3): SETA AL
000153c4(2): SBB AL,0x0
000153c6(2): TEST AL,AL
000153c8(3): SETNZ AL
000153cb(4): ADD RSP,0x8
000153cf(1): RET
000153d0(4): SUB RSP,0x8
000153d4(5): MOV EDI,0xe
000153d9(5): CALL 0x00001c60
000153de(3): TEST RAX,RAX
000153e1(2): JZ 0x00015400
000153e3(3): CMP byte ptr [RAX],0x0
000153e6(7): LEA RDX,[0x172f8]
000153ed(4): CMOVZ RAX,RDX
000153f1(4): ADD RSP,0x8
000153f5(1): RET
00015400(7): LEA RAX,[0x172f8]
00015407(4): ADD RSP,0x8
0001540b(1): RET
00015410(2): PUSH R12
00015412(1): PUSH RBP
00015413(1): PUSH RBX
00015414(3): MOV RBX,RDI
00015417(5): CALL 0x00001bf0
0001541c(2): TEST EAX,EAX
0001541e(3): MOV RDI,RBX
00015421(2): JS 0x00015477
00015423(5): CALL 0x00001c80
00015428(2): TEST EAX,EAX
0001542a(2): JNZ 0x00015458
0001542c(3): MOV RDI,RBX
0001542f(5): CALL 0x00015490
00015434(2): TEST EAX,EAX
00015436(2): JZ 0x00015474
00015438(5): CALL 0x000019f0
0001543d(3): MOV R12D,dword ptr [RAX]
00015440(3): MOV RDI,RBX
00015443(3): MOV RBP,RAX
00015446(5): CALL 0x00001a70
0001544b(3): TEST R12D,R12D
0001544e(2): JNZ 0x00015480
00015450(1): POP RBX
00015451(1): POP RBP
00015452(2): POP R12
00015454(1): RET
00015458(3): MOV RDI,RBX
0001545b(5): CALL 0x00001bf0
00015460(2): XOR ESI,ESI
00015462(5): MOV EDX,0x1
00015467(2): MOV EDI,EAX
00015469(5): CALL 0x00001b30
0001546e(4): CMP RAX,-0x1
00015472(2): JNZ 0x0001542c
00015474(3): MOV RDI,RBX
00015477(1): POP RBX
00015478(1): POP RBP
00015479(2): POP R12
0001547b(5): JMP 0x00001a70
00015480(4): MOV dword ptr [RBP],R12D
00015484(5): MOV EAX,0xffffffff
00015489(2): JMP 0x00015450
00015490(3): TEST RDI,RDI
00015493(1): PUSH RBX
00015494(3): MOV RBX,RDI
00015497(2): JZ 0x000154aa
00015499(5): CALL 0x00001c80
0001549e(2): TEST EAX,EAX
000154a0(2): JZ 0x000154aa
000154a2(6): TEST dword ptr [RBX],0x100
000154a8(2): JNZ 0x000154b8
000154aa(3): MOV RDI,RBX
000154ad(1): POP RBX
000154ae(5): JMP 0x00001c40
000154b8(3): MOV RDI,RBX
000154bb(5): MOV EDX,0x1
000154c0(2): XOR ESI,ESI
000154c2(5): CALL 0x000154d0
000154c7(3): MOV RDI,RBX
000154ca(1): POP RBX
000154cb(5): JMP 0x00001c40
000154d0(4): MOV RAX,qword ptr [RDI + 0x8]
000154d4(4): CMP qword ptr [RDI + 0x10],RAX
000154d8(2): JZ 0x000154e0
000154da(5): JMP 0x00001d10
000154e0(4): MOV RAX,qword ptr [RDI + 0x20]
000154e4(4): CMP qword ptr [RDI + 0x28],RAX
000154e8(2): JNZ 0x000154da
000154ea(5): CMP qword ptr [RDI + 0x48],0x0
000154ef(2): JNZ 0x000154da
000154f1(2): PUSH R12
000154f3(1): PUSH RBP
000154f4(3): MOV R12D,EDX
000154f7(1): PUSH RBX
000154f8(3): MOV RBP,RSI
000154fb(3): MOV RBX,RDI
000154fe(5): CALL 0x00001bf0
00015503(3): MOV EDX,R12D
00015506(3): MOV RSI,RBP
00015509(2): MOV EDI,EAX
0001550b(5): CALL 0x00001b30
00015510(4): CMP RAX,-0x1
00015514(2): JZ 0x00015522
00015516(3): AND dword ptr [RBX],0xffffffef
00015519(7): MOV qword ptr [0x90 + RBX],RAX
00015520(2): XOR EAX,EAX
00015522(1): POP RBX
00015523(1): POP RBP
00015524(2): POP R12
00015526(1): RET
00015530(2): PUSH R15
00015532(2): PUSH R14
00015534(3): MOV R15,RDX
00015537(2): PUSH R13
00015539(2): PUSH R12
0001553b(7): LEA R12,[0x21aab0]
00015542(1): PUSH RBP
00015543(7): LEA RBP,[0x21aab8]
0001554a(1): PUSH RBX
0001554b(3): MOV R13D,EDI
0001554e(3): MOV R14,RSI
00015551(3): SUB RBP,R12
00015554(4): SUB RSP,0x8
00015558(4): SAR RBP,0x3
0001555c(5): CALL 0x00001990
00015561(3): TEST RBP,RBP
00015564(2): JZ 0x00015586
00015566(2): XOR EBX,EBX
00015568(8): NOP dword ptr [RAX + RAX*0x1]
00015570(3): MOV RDX,R15
00015573(3): MOV RSI,R14
00015576(3): MOV EDI,R13D
00015579(4): CALL qword ptr [R12 + RBX*0x8]
0001557d(4): ADD RBX,0x1
00015581(3): CMP RBP,RBX
00015584(2): JNZ 0x00015570
00015586(4): ADD RSP,0x8
0001558a(1): POP RBX
0001558b(1): POP RBP
0001558c(2): POP R12
0001558e(2): POP R13
00015590(2): POP R14
00015592(2): POP R15
00015594(1): RET
000155a0(2): RET
000155b0(7): MOV RDX,qword ptr [0x0021b008]
000155b7(2): XOR ESI,ESI
000155b9(5): JMP 0x00001d50
000155c0(4): SUB RSP,0x8
000155c4(4): ADD RSP,0x8
000155c8(1): RET

