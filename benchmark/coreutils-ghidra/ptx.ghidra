00001c28(4): SUB RSP,0x8
00001c2c(7): MOV RAX,qword ptr [0x00220fd0]
00001c33(3): TEST RAX,RAX
00001c36(2): JZ 0x00001c3a
00001c38(2): CALL RAX
00001c3a(4): ADD RSP,0x8
00001c3e(1): RET
00001c40(6): PUSH qword ptr [0x00220d50]
00001c46(6): JMP qword ptr [0x00220d58]
00001c50(6): JMP qword ptr [0x00220d60]
00001c56(5): PUSH 0x0
00001c5b(5): JMP 0x00001c40
00001c60(6): JMP qword ptr [0x00220d68]
00001c66(5): PUSH 0x1
00001c6b(5): JMP 0x00001c40
00001c70(6): JMP qword ptr [0x00220d70]
00001c76(5): PUSH 0x2
00001c7b(5): JMP 0x00001c40
00001c80(6): JMP qword ptr [0x00220d78]
00001c86(5): PUSH 0x3
00001c8b(5): JMP 0x00001c40
00001c90(6): JMP qword ptr [0x00220d80]
00001c96(5): PUSH 0x4
00001c9b(5): JMP 0x00001c40
00001ca0(6): JMP qword ptr [0x00220d88]
00001ca6(5): PUSH 0x5
00001cab(5): JMP 0x00001c40
00001cb0(6): JMP qword ptr [0x00220d90]
00001cb6(5): PUSH 0x6
00001cbb(5): JMP 0x00001c40
00001cc0(6): JMP qword ptr [0x00220d98]
00001cc6(5): PUSH 0x7
00001ccb(5): JMP 0x00001c40
00001cd0(6): JMP qword ptr [0x00220da0]
00001cd6(5): PUSH 0x8
00001cdb(5): JMP 0x00001c40
00001ce0(6): JMP qword ptr [0x00220da8]
00001ce6(5): PUSH 0x9
00001ceb(5): JMP 0x00001c40
00001cf0(6): JMP qword ptr [0x00220db0]
00001cf6(5): PUSH 0xa
00001cfb(5): JMP 0x00001c40
00001d00(6): JMP qword ptr [0x00220db8]
00001d06(5): PUSH 0xb
00001d0b(5): JMP 0x00001c40
00001d10(6): JMP qword ptr [0x00220dc0]
00001d16(5): PUSH 0xc
00001d1b(5): JMP 0x00001c40
00001d20(6): JMP qword ptr [0x00220dc8]
00001d26(5): PUSH 0xd
00001d2b(5): JMP 0x00001c40
00001d30(6): JMP qword ptr [0x00220dd0]
00001d36(5): PUSH 0xe
00001d3b(5): JMP 0x00001c40
00001d40(6): JMP qword ptr [0x00220dd8]
00001d46(5): PUSH 0xf
00001d4b(5): JMP 0x00001c40
00001d50(6): JMP qword ptr [0x00220de0]
00001d56(5): PUSH 0x10
00001d5b(5): JMP 0x00001c40
00001d60(6): JMP qword ptr [0x00220de8]
00001d66(5): PUSH 0x11
00001d6b(5): JMP 0x00001c40
00001d70(6): JMP qword ptr [0x00220df0]
00001d76(5): PUSH 0x12
00001d7b(5): JMP 0x00001c40
00001d80(6): JMP qword ptr [0x00220df8]
00001d86(5): PUSH 0x13
00001d8b(5): JMP 0x00001c40
00001d90(6): JMP qword ptr [0x00220e00]
00001d96(5): PUSH 0x14
00001d9b(5): JMP 0x00001c40
00001da0(6): JMP qword ptr [0x00220e08]
00001da6(5): PUSH 0x15
00001dab(5): JMP 0x00001c40
00001db0(6): JMP qword ptr [0x00220e10]
00001db6(5): PUSH 0x16
00001dbb(5): JMP 0x00001c40
00001dc0(6): JMP qword ptr [0x00220e18]
00001dc6(5): PUSH 0x17
00001dcb(5): JMP 0x00001c40
00001dd0(6): JMP qword ptr [0x00220e20]
00001dd6(5): PUSH 0x18
00001ddb(5): JMP 0x00001c40
00001de0(6): JMP qword ptr [0x00220e28]
00001de6(5): PUSH 0x19
00001deb(5): JMP 0x00001c40
00001df0(6): JMP qword ptr [0x00220e30]
00001df6(5): PUSH 0x1a
00001dfb(5): JMP 0x00001c40
00001e00(6): JMP qword ptr [0x00220e38]
00001e06(5): PUSH 0x1b
00001e0b(5): JMP 0x00001c40
00001e10(6): JMP qword ptr [0x00220e40]
00001e16(5): PUSH 0x1c
00001e1b(5): JMP 0x00001c40
00001e20(6): JMP qword ptr [0x00220e48]
00001e26(5): PUSH 0x1d
00001e2b(5): JMP 0x00001c40
00001e30(6): JMP qword ptr [0x00220e50]
00001e36(5): PUSH 0x1e
00001e3b(5): JMP 0x00001c40
00001e40(6): JMP qword ptr [0x00220e58]
00001e46(5): PUSH 0x1f
00001e4b(5): JMP 0x00001c40
00001e50(6): JMP qword ptr [0x00220e60]
00001e56(5): PUSH 0x20
00001e5b(5): JMP 0x00001c40
00001e60(6): JMP qword ptr [0x00220e68]
00001e66(5): PUSH 0x21
00001e6b(5): JMP 0x00001c40
00001e70(6): JMP qword ptr [0x00220e70]
00001e76(5): PUSH 0x22
00001e7b(5): JMP 0x00001c40
00001e80(6): JMP qword ptr [0x00220e78]
00001e86(5): PUSH 0x23
00001e8b(5): JMP 0x00001c40
00001e90(6): JMP qword ptr [0x00220e80]
00001e96(5): PUSH 0x24
00001e9b(5): JMP 0x00001c40
00001ea0(6): JMP qword ptr [0x00220e88]
00001ea6(5): PUSH 0x25
00001eab(5): JMP 0x00001c40
00001eb0(6): JMP qword ptr [0x00220e90]
00001eb6(5): PUSH 0x26
00001ebb(5): JMP 0x00001c40
00001ec0(6): JMP qword ptr [0x00220e98]
00001ec6(5): PUSH 0x27
00001ecb(5): JMP 0x00001c40
00001ed0(6): JMP qword ptr [0x00220ea0]
00001ed6(5): PUSH 0x28
00001edb(5): JMP 0x00001c40
00001ee0(6): JMP qword ptr [0x00220ea8]
00001ee6(5): PUSH 0x29
00001eeb(5): JMP 0x00001c40
00001ef0(6): JMP qword ptr [0x00220eb0]
00001ef6(5): PUSH 0x2a
00001efb(5): JMP 0x00001c40
00001f00(6): JMP qword ptr [0x00220eb8]
00001f06(5): PUSH 0x2b
00001f0b(5): JMP 0x00001c40
00001f10(6): JMP qword ptr [0x00220ec0]
00001f16(5): PUSH 0x2c
00001f1b(5): JMP 0x00001c40
00001f20(6): JMP qword ptr [0x00220ec8]
00001f26(5): PUSH 0x2d
00001f2b(5): JMP 0x00001c40
00001f30(6): JMP qword ptr [0x00220ed0]
00001f36(5): PUSH 0x2e
00001f3b(5): JMP 0x00001c40
00001f40(6): JMP qword ptr [0x00220ed8]
00001f46(5): PUSH 0x2f
00001f4b(5): JMP 0x00001c40
00001f50(6): JMP qword ptr [0x00220ee0]
00001f56(5): PUSH 0x30
00001f5b(5): JMP 0x00001c40
00001f60(6): JMP qword ptr [0x00220ee8]
00001f66(5): PUSH 0x31
00001f6b(5): JMP 0x00001c40
00001f70(6): JMP qword ptr [0x00220ef0]
00001f76(5): PUSH 0x32
00001f7b(5): JMP 0x00001c40
00001f80(6): JMP qword ptr [0x00220ef8]
00001f86(5): PUSH 0x33
00001f8b(5): JMP 0x00001c40
00001f90(6): JMP qword ptr [0x00220f00]
00001f96(5): PUSH 0x34
00001f9b(5): JMP 0x00001c40
00001fa0(6): JMP qword ptr [0x00220f08]
00001fa6(5): PUSH 0x35
00001fab(5): JMP 0x00001c40
00001fb0(6): JMP qword ptr [0x00220f10]
00001fb6(5): PUSH 0x36
00001fbb(5): JMP 0x00001c40
00001fc0(6): JMP qword ptr [0x00220f18]
00001fc6(5): PUSH 0x37
00001fcb(5): JMP 0x00001c40
00001fd0(6): JMP qword ptr [0x00220f20]
00001fd6(5): PUSH 0x38
00001fdb(5): JMP 0x00001c40
00001fe0(6): JMP qword ptr [0x00220f28]
00001fe6(5): PUSH 0x39
00001feb(5): JMP 0x00001c40
00001ff0(6): JMP qword ptr [0x00220f30]
00001ff6(5): PUSH 0x3a
00001ffb(5): JMP 0x00001c40
00002000(6): JMP qword ptr [0x00220f38]
00002006(5): PUSH 0x3b
0000200b(5): JMP 0x00001c40
00002010(6): JMP qword ptr [0x00220f40]
00002016(5): PUSH 0x3c
0000201b(5): JMP 0x00001c40
00002020(6): JMP qword ptr [0x00220f48]
00002026(5): PUSH 0x3d
0000202b(5): JMP 0x00001c40
00002030(6): JMP qword ptr [0x00220f50]
00002036(5): PUSH 0x3e
0000203b(5): JMP 0x00001c40
00002040(6): JMP qword ptr [0x00220f58]
00002046(5): PUSH 0x3f
0000204b(5): JMP 0x00001c40
00002050(6): JMP qword ptr [0x00220f60]
00002056(5): PUSH 0x40
0000205b(5): JMP 0x00001c40
00002060(6): JMP qword ptr [0x00220f68]
00002066(5): PUSH 0x41
0000206b(5): JMP 0x00001c40
00002070(6): JMP qword ptr [0x00220f70]
00002076(5): PUSH 0x42
0000207b(5): JMP 0x00001c40
00002080(6): JMP qword ptr [0x00220f78]
00002086(5): PUSH 0x43
0000208b(5): JMP 0x00001c40
00002090(6): JMP qword ptr [0x00220f80]
00002096(5): PUSH 0x44
0000209b(5): JMP 0x00001c40
000020a0(6): JMP qword ptr [0x00220f88]
000020a6(5): PUSH 0x45
000020ab(5): JMP 0x00001c40
000020b0(6): JMP qword ptr [0x00220f90]
000020b6(5): PUSH 0x46
000020bb(5): JMP 0x00001c40
000020c0(6): JMP qword ptr [0x00220f98]
000020c6(5): PUSH 0x47
000020cb(5): JMP 0x00001c40
000020d0(6): JMP qword ptr [0x00220fa0]
000020d6(5): PUSH 0x48
000020db(5): JMP 0x00001c40
000020e0(6): JMP qword ptr [0x00220fa8]
000020e6(5): PUSH 0x49
000020eb(5): JMP 0x00001c40
000020f0(6): JMP qword ptr [0x00220fb0]
000020f6(5): PUSH 0x4a
000020fb(5): JMP 0x00001c40
00002100(6): JMP qword ptr [0x00220fb8]
00002106(5): PUSH 0x4b
0000210b(5): JMP 0x00001c40
00002110(6): JMP qword ptr [0x00220fe0]
00002120(7): LEA RCX,[0x1bd10]
00002127(7): LEA RSI,[0x1bc98]
0000212e(7): LEA RDI,[0x1bcb8]
00002135(4): SUB RSP,0x8
00002139(5): MOV EDX,0xb3
0000213e(5): CALL 0x00001e30
00002143(7): LEA RCX,[0x1c210]
0000214a(7): LEA RSI,[0x1c1f0]
00002151(7): LEA RDI,[0x1bcb8]
00002158(4): SUB RSP,0x8
0000215c(5): MOV EDX,0xaa
00002161(5): CALL 0x00001e30
00002166(7): LEA RCX,[0x1cf80]
0000216d(7): LEA RSI,[0x1bc98]
00002174(7): LEA RDI,[0x1bcb8]
0000217b(4): SUB RSP,0x8
0000217f(5): MOV EDX,0xb3
00002184(5): CALL 0x00001e30
00002189(7): NOP dword ptr [RAX]
00002190(2): PUSH R15
00002192(2): PUSH R14
00002194(7): LEA R14,[0x1b9b0]
0000219b(2): PUSH R13
0000219d(2): PUSH R12
0000219f(7): LEA R13,[0x2208a0]
000021a6(1): PUSH RBP
000021a7(1): PUSH RBX
000021a8(2): MOV EBX,EDI
000021aa(3): MOV RBP,RSI
000021ad(7): LEA R12,[0x1b871]
000021b4(7): SUB RSP,0x98
000021bb(3): MOV RDI,qword ptr [RSI]
000021be(9): MOV RAX,qword ptr FS:[0x28]
000021c7(8): MOV qword ptr [0x88 + RSP],RAX
000021cf(2): XOR EAX,EAX
000021d1(5): LEA R15,[RSP + 0x60]
000021d6(5): CALL 0x00005f90
000021db(7): LEA RSI,[0x1c27b]
000021e2(5): MOV EDI,0x6
000021e7(5): CALL 0x00001fa0
000021ec(7): LEA RSI,[0x1b808]
000021f3(7): LEA RDI,[0x1b7d6]
000021fa(5): CALL 0x00001d60
000021ff(7): LEA RDI,[0x1b7d6]
00002206(5): CALL 0x00001d20
0000220b(7): LEA RDI,[0x5ce0]
00002212(5): CALL 0x0001aed0
00002217(9): NOP word ptr [RAX + RAX*0x1]
00002220(3): XOR R8D,R8D
00002223(3): MOV RCX,R13
00002226(3): MOV RDX,R12
00002229(3): MOV RSI,RBP
0000222c(2): MOV EDI,EBX
0000222e(5): CALL 0x00001dc0
00002233(3): CMP EAX,-0x1
00002236(6): JZ 0x000024fd
0000223c(3): CMP EAX,0x53
0000223f(6): JZ 0x000024ba
00002245(2): JLE 0x0000227a
00002247(3): CMP EAX,0x67
0000224a(6): JZ 0x00002476
00002250(2): JLE 0x000022ac
00002252(3): CMP EAX,0x72
00002255(6): JZ 0x000024ae
0000225b(6): JG 0x0000232a
00002261(3): CMP EAX,0x69
00002264(6): JNZ 0x00002374
0000226a(7): MOV RAX,qword ptr [0x002210e0]
00002271(7): MOV qword ptr [0x00221868],RAX
00002278(2): JMP 0x00002220
0000227a(3): CMP EAX,0x46
0000227d(6): JZ 0x000024e5
00002283(2): JLE 0x000022d7
00002285(3): CMP EAX,0x4d
00002288(6): JZ 0x000024d2
0000228e(6): JLE 0x00002390
00002294(3): CMP EAX,0x4f
00002297(6): JNZ 0x000023d2
0000229d(10): MOV dword ptr [0x00221884],0x2
000022a7(5): JMP 0x00002220
000022ac(3): CMP EAX,0x57
000022af(6): JZ 0x0000244a
000022b5(6): JLE 0x000023ba
000022bb(3): CMP EAX,0x62
000022be(6): JNZ 0x000023a5
000022c4(7): MOV RAX,qword ptr [0x002210e0]
000022cb(7): MOV qword ptr [0x00221878],RAX
000022d2(5): JMP 0x00002220
000022d7(5): CMP EAX,0xffffff7e
000022dc(6): JZ 0x000045f5
000022e2(6): JLE 0x000023fc
000022e8(3): CMP EAX,0xa
000022eb(6): JNZ 0x000023e7
000022f1(7): MOV R9,qword ptr [0x00221040]
000022f8(7): MOV RSI,qword ptr [0x002210e0]
000022ff(7): LEA RDX,[0x220880]
00002306(7): LEA RDI,[0x1b84d]
0000230d(6): MOV R8D,0x4
00002313(3): MOV RCX,R14
00002316(5): CALL 0x00005c00
0000231b(4): MOV EAX,dword ptr [R14 + RAX*0x4]
0000231f(6): MOV dword ptr [0x00221884],EAX
00002325(5): JMP 0x00002220
0000232a(3): CMP EAX,0x74
0000232d(6): JZ 0x00002220
00002333(3): CMP EAX,0x77
00002336(6): JNZ 0x000044e8
0000233c(7): MOV RDI,qword ptr [0x002210e0]
00002343(3): XOR R8D,R8D
00002346(2): XOR EDX,EDX
00002348(2): XOR ESI,ESI
0000234a(3): MOV RCX,R15
0000234d(5): CALL 0x00009bd0
00002352(2): TEST EAX,EAX
00002354(6): JNZ 0x0000463c
0000235a(5): MOV RAX,qword ptr [RSP + 0x60]
0000235f(3): TEST RAX,RAX
00002362(6): JLE 0x0000463c
00002368(7): MOV qword ptr [0x00221018],RAX
0000236f(5): JMP 0x00002220
00002374(3): CMP EAX,0x6f
00002377(6): JNZ 0x000044e8
0000237d(7): MOV RAX,qword ptr [0x002210e0]
00002384(7): MOV qword ptr [0x00221870],RAX
0000238b(5): JMP 0x00002220
00002390(3): CMP EAX,0x47
00002393(6): JNZ 0x000044e8
00002399(7): MOV byte ptr [0x00221020],0x0
000023a0(5): JMP 0x00002220
000023a5(3): CMP EAX,0x66
000023a8(6): JNZ 0x000044e8
000023ae(7): MOV byte ptr [0x00221880],0x1
000023b5(5): JMP 0x00002220
000023ba(3): CMP EAX,0x54
000023bd(6): JNZ 0x000044e8
000023c3(10): MOV dword ptr [0x00221884],0x3
000023cd(5): JMP 0x00002220
000023d2(3): CMP EAX,0x52
000023d5(6): JNZ 0x000044e8
000023db(7): MOV byte ptr [0x00221888],0x1
000023e2(5): JMP 0x00002220
000023e7(3): CMP EAX,0x41
000023ea(6): JNZ 0x000044e8
000023f0(7): MOV byte ptr [0x0022188a],0x1
000023f7(5): JMP 0x00002220
000023fc(5): CMP EAX,0xffffff7d
00002401(6): JNZ 0x000044e8
00002407(7): LEA RSI,[0x1b856]
0000240e(7): LEA RDI,[0x1b867]
00002415(5): CALL 0x00006a30
0000241a(7): MOV RDI,qword ptr [0x002210c8]
00002421(7): MOV RCX,qword ptr [0x00221038]
00002428(7): LEA RDX,[0x1b7d2]
0000242f(7): LEA RSI,[0x1b758]
00002436(3): MOV R8,RAX
00002439(3): XOR R9D,R9D
0000243c(2): XOR EAX,EAX
0000243e(5): CALL 0x00009760
00002443(2): XOR EDI,EDI
00002445(5): CALL 0x00002070
0000244a(7): MOV RDI,qword ptr [0x002210e0]
00002451(5): CALL 0x00004a30
00002456(7): MOV qword ptr [0x002215c0],RAX
0000245d(3): CMP byte ptr [RAX],0x0
00002460(6): JNZ 0x00002220
00002466(11): MOV qword ptr [0x002215c0],0x0
00002471(5): JMP 0x00002220
00002476(7): MOV RDI,qword ptr [0x002210e0]
0000247d(3): XOR R8D,R8D
00002480(2): XOR EDX,EDX
00002482(2): XOR ESI,ESI
00002484(3): MOV RCX,R15
00002487(5): CALL 0x00009bd0
0000248c(2): TEST EAX,EAX
0000248e(6): JNZ 0x00004606
00002494(5): MOV RAX,qword ptr [RSP + 0x60]
00002499(3): TEST RAX,RAX
0000249c(6): JLE 0x00004606
000024a2(7): MOV qword ptr [0x00221010],RAX
000024a9(5): JMP 0x00002220
000024ae(7): MOV byte ptr [0x00221889],0x1
000024b5(5): JMP 0x00002220
000024ba(7): MOV RDI,qword ptr [0x002210e0]
000024c1(5): CALL 0x00004a30
000024c6(7): MOV qword ptr [0x00221720],RAX
000024cd(5): JMP 0x00002220
000024d2(7): MOV RAX,qword ptr [0x002210e0]
000024d9(7): MOV qword ptr [0x00221028],RAX
000024e0(5): JMP 0x00002220
000024e5(7): MOV RDI,qword ptr [0x002210e0]
000024ec(5): CALL 0x00004a30
000024f1(7): MOV qword ptr [0x00221030],RAX
000024f8(5): JMP 0x00002220
000024fd(6): MOV EAX,dword ptr [0x002210d8]
00002503(2): CMP EAX,EBX
00002505(6): JZ 0x0000265b
0000250b(7): CMP byte ptr [0x00221020],0x0
00002512(6): JZ 0x000043e9
00002518(2): MOV ECX,EBX
0000251a(5): MOV EDX,0x8
0000251f(2): XOR ESI,ESI
00002521(2): SUB ECX,EAX
00002523(3): MOV RAX,RDX
00002526(6): MOV dword ptr [0x00221318],ECX
0000252c(3): MOVSXD RCX,ECX
0000252f(3): MUL RCX
00002532(6): JO 0x000045fc
00002538(3): TEST RAX,RAX
0000253b(6): JS 0x000031e5
00002541(3): TEST RSI,RSI
00002544(6): JNZ 0x000031e5
0000254a(8): LEA RDI,[RCX*0x8]
00002552(5): CALL 0x000098c0
00002557(7): MOVSXD RCX,dword ptr [0x00221318]
0000255e(5): MOV EDX,0x8
00002563(7): MOV qword ptr [0x00221308],RAX
0000256a(3): MOV RAX,RDX
0000256d(2): XOR ESI,ESI
0000256f(3): MUL RCX
00002572(6): JO 0x0000454c
00002578(3): TEST RAX,RAX
0000257b(6): JS 0x000031e5
00002581(3): TEST RSI,RSI
00002584(6): JNZ 0x000031e5
0000258a(8): LEA RDI,[RCX*0x8]
00002592(5): CALL 0x000098c0
00002597(7): MOVSXD RCX,dword ptr [0x00221318]
0000259e(5): MOV EDX,0x10
000025a3(7): MOV qword ptr [0x00221300],RAX
000025aa(3): MOV RAX,RDX
000025ad(2): XOR ESI,ESI
000025af(3): MUL RCX
000025b2(6): JO 0x00004542
000025b8(3): TEST RAX,RAX
000025bb(6): JS 0x000031e5
000025c1(3): TEST RSI,RSI
000025c4(6): JNZ 0x000031e5
000025ca(3): MOV RDI,RCX
000025cd(4): SHL RDI,0x4
000025d1(5): CALL 0x000098c0
000025d6(6): MOV EDX,dword ptr [0x00221318]
000025dc(7): MOV qword ptr [0x002212f8],RAX
000025e3(2): TEST EDX,EDX
000025e5(6): JLE 0x000026a6
000025eb(6): MOV EAX,dword ptr [0x002210d8]
000025f1(4): LEA R13D,[RDX + -0x1]
000025f5(3): LEA EBX,[RAX + 0x1]
000025f8(3): MOVSXD RDX,EAX
000025fb(3): MOVSXD RBX,EBX
000025fe(4): IMUL RAX,RBX,-0x8
00002602(4): LEA R12,[RBX + 0x1]
00002606(3): ADD R13,R12
00002609(4): LEA R14,[RAX + RDX*0x8]
0000260d(7): ADD RAX,qword ptr [0x00221308]
00002614(3): ADD R14,RBP
00002617(3): MOV RBP,RAX
0000261a(2): JMP 0x00002646
0000261c(7): LEA RSI,[0x1bc92]
00002623(3): MOV RDI,R15
00002626(5): CALL 0x00001ed0
0000262b(2): TEST EAX,EAX
0000262d(2): JZ 0x00002650
0000262f(5): MOV qword ptr [RBP + RBX*0x8],R15
00002634(3): CMP R13,R12
00002637(6): MOV dword ptr [0x002210d8],EBX
0000263d(3): MOV RBX,R12
00002640(2): JZ 0x000026a6
00002642(4): ADD R12,0x1
00002646(4): MOV R15,qword ptr [R14 + RBX*0x8]
0000264a(4): CMP byte ptr [R15],0x0
0000264e(2): JNZ 0x0000261c
00002650(9): MOV qword ptr [RBP + RBX*0x8],0x0
00002659(2): JMP 0x00002634
0000265b(5): MOV EDI,0x8
00002660(5): CALL 0x000098c0
00002665(5): MOV EDI,0x8
0000266a(7): MOV qword ptr [0x00221308],RAX
00002671(5): CALL 0x000098c0
00002676(5): MOV EDI,0x10
0000267b(7): MOV qword ptr [0x00221300],RAX
00002682(5): CALL 0x000098c0
00002687(7): MOV qword ptr [0x002212f8],RAX
0000268e(7): MOV RAX,qword ptr [0x00221308]
00002695(10): MOV dword ptr [0x00221318],0x1
0000269f(7): MOV qword ptr [RAX],0x0
000026a6(7): CMP dword ptr [0x00221884],0x0
000026ad(2): JNZ 0x000026c3
000026af(7): CMP byte ptr [0x00221020],0x1
000026b6(2): SBB EAX,EAX
000026b8(2): NOT EAX
000026ba(3): ADD EAX,0x2
000026bd(6): MOV dword ptr [0x00221884],EAX
000026c3(7): CMP byte ptr [0x00221880],0x0
000026ca(2): JZ 0x000026fb
000026cc(5): CALL 0x00001c50
000026d1(7): LEA RCX,[0x2214c0]
000026d8(2): XOR EDX,EDX
000026da(6): NOP word ptr [RAX + RAX*0x1]
000026e0(3): MOV RSI,qword ptr [RAX]
000026e3(4): ADD RCX,0x1
000026e7(3): MOV ESI,dword ptr [RSI + RDX*0x1]
000026ea(4): ADD RDX,0x4
000026ee(4): MOV byte ptr [RCX + -0x1],SIL
000026f2(7): CMP RDX,0x400
000026f9(2): JNZ 0x000026e0
000026fb(7): MOV RAX,qword ptr [0x00221720]
00002702(3): TEST RAX,RAX
00002705(6): JZ 0x00004505
0000270b(3): CMP byte ptr [RAX],0x0
0000270e(6): JZ 0x00003392
00002714(7): LEA RDI,[0x221720]
0000271b(5): CALL 0x00004cb0
00002720(8): CMP qword ptr [0x002215c0],0x0
00002728(6): JNZ 0x00003226
0000272e(7): MOV RDI,qword ptr [0x00221878]
00002735(3): TEST RDI,RDI
00002738(6): JZ 0x00003350
0000273e(5): LEA RSI,[RSP + 0x60]
00002743(5): CALL 0x00004d50
00002748(7): LEA RDX,[0x221380]
0000274f(5): MOV ECX,0x20
00002754(10): MOV RAX,0x101010101010101
0000275e(3): MOV RDI,RDX
00002761(3): STOSQ.REP RDI
00002764(5): MOV RDI,qword ptr [RSP + 0x60]
00002769(5): MOV RCX,qword ptr [RSP + 0x68]
0000276e(3): CMP RDI,RCX
00002771(2): JNC 0x00002786
00002773(3): MOV RAX,RDI
00002776(3): MOVZX ESI,byte ptr [RAX]
00002779(4): ADD RAX,0x1
0000277d(3): CMP RAX,RCX
00002780(4): MOV byte ptr [RDX + RSI*0x1],0x0
00002784(2): JNZ 0x00002776
00002786(7): CMP byte ptr [0x00221020],0x0
0000278d(2): JNZ 0x0000279f
0000278f(7): MOV byte ptr [0x002213a0],0x0
00002796(9): MOV word ptr [0x00221389],0x0
0000279f(5): CALL 0x00001c60
000027a4(7): MOV RDI,qword ptr [0x00221868]
000027ab(3): TEST RDI,RDI
000027ae(2): JZ 0x000027ca
000027b0(7): LEA RSI,[0x221340]
000027b7(5): CALL 0x00004e30
000027bc(8): CMP qword ptr [0x00221350],0x0
000027c4(6): JZ 0x00003340
000027ca(7): MOV RDI,qword ptr [0x00221870]
000027d1(3): TEST RDI,RDI
000027d4(2): JZ 0x000027f0
000027d6(7): LEA RSI,[0x221320]
000027dd(5): CALL 0x00004e30
000027e2(8): CMP qword ptr [0x00221330],0x0
000027ea(6): JZ 0x00003330
000027f0(7): CMP dword ptr [0x00221318],0x0
000027f7(11): MOV qword ptr [0x002212e0],0x0
00002802(11): MOV qword ptr [0x00221310],0x0
0000280d(11): MOV qword ptr [0x00221360],0x0
00002818(11): MOV qword ptr [0x00221358],0x0
00002823(6): JLE 0x00002bdd
00002829(7): LEA R15,[0x221380]
00002830(9): MOV qword ptr [RSP + 0x58],0x0
00002839(8): MOV dword ptr [RSP + 0x38],0x0
00002841(5): MOV RDI,qword ptr [RSP + 0x58]
00002846(7): MOV RAX,qword ptr [0x00221308]
0000284d(7): MOV RSI,qword ptr [0x002212f8]
00002854(4): LEA RBX,[RDI + RDI*0x1]
00002858(4): MOV RDI,qword ptr [RAX + RDI*0x1]
0000285c(3): ADD RSI,RBX
0000285f(5): CALL 0x00004d50
00002864(7): MOV RAX,qword ptr [0x002212f8]
0000286b(3): ADD RAX,RBX
0000286e(7): CMP byte ptr [0x00221889],0x0
00002875(5): MOV qword ptr [RSP + 0x18],RAX
0000287a(3): MOV R12,qword ptr [RAX]
0000287d(6): JZ 0x0000320c
00002883(4): MOV RBP,qword ptr [RAX + 0x8]
00002887(3): CMP R12,RBP
0000288a(3): MOV RBX,RBP
0000288d(6): JNC 0x00003247
00002893(5): CALL 0x000020e0
00002898(3): MOV R14,R12
0000289b(3): MOV RAX,qword ptr [RAX]
0000289e(2): JMP 0x000028ad
000028a0(4): ADD R14,0x1
000028a4(3): CMP R14,RBP
000028a7(6): JZ 0x0000324a
000028ad(4): MOVZX EDX,byte ptr [R14]
000028b1(5): TEST byte ptr [RAX + RDX*0x2 + 0x1],0x20
000028b6(2): JZ 0x000028a0
000028b8(3): MOV RSI,R14
000028bb(3): SUB RSI,R12
000028be(3): CMP R14,RBP
000028c1(5): MOV qword ptr [RSP + 0x20],RSI
000028c6(2): JC 0x000028d9
000028c8(2): JMP 0x000028e4
000028d0(4): ADD R14,0x1
000028d4(3): CMP R14,RBP
000028d7(2): JZ 0x000028e4
000028d9(4): MOVZX EDX,byte ptr [R14]
000028dd(5): TEST byte ptr [RAX + RDX*0x2 + 0x1],0x20
000028e2(2): JNZ 0x000028d0
000028e4(5): LEA RAX,[RSP + 0x60]
000028e9(3): CMP RBP,R12
000028ec(4): MOV qword ptr [RSP],R12
000028f0(5): MOV qword ptr [RSP + 0x50],RBP
000028f5(5): MOV qword ptr [RSP + 0x8],RAX
000028fa(6): JBE 0x00002b8d
00002900(8): CMP qword ptr [0x00221720],0x0
00002908(2): JZ 0x00002964
0000290a(5): MOV RDX,qword ptr [RSP + 0x50]
0000290f(7): LEA R9,[0x2214a0]
00002916(7): LEA RDI,[0x221728]
0000291d(2): XOR ECX,ECX
0000291f(3): MOV RSI,R12
00002922(3): SUB RDX,R12
00002925(3): MOV R8,RDX
00002928(5): CALL 0x000185a0
0000292d(4): CMP RAX,-0x1
00002931(2): JZ 0x00002958
00002933(3): TEST RAX,RAX
00002936(6): JZ 0x00004587
0000293c(4): CMP RAX,-0x2
00002940(6): JZ 0x0000452a
00002946(7): MOV RAX,qword ptr [0x002214b0]
0000294d(3): MOV RSI,qword ptr [RAX]
00002950(3): ADD RSI,R12
00002953(5): MOV qword ptr [RSP + 0x50],RSI
00002958(5): CMP R12,qword ptr [RSP + 0x50]
0000295d(5): MOV RBP,qword ptr [RSP + 0x50]
00002962(2): JNC 0x0000298c
00002964(5): CALL 0x000020e0
00002969(5): MOV RBP,qword ptr [RSP + 0x50]
0000296e(3): MOV RDX,qword ptr [RAX]
00002971(2): JMP 0x00002981
00002978(4): SUB RBP,0x1
0000297c(3): CMP R12,RBP
0000297f(2): JNC 0x0000298c
00002981(4): MOVZX EAX,byte ptr [RBP + -0x1]
00002985(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x20
0000298a(2): JNZ 0x00002978
0000298c(7): LEA RAX,[0x2215c0]
00002993(5): MOV qword ptr [RSP + 0x10],R12
00002998(3): MOV RDX,qword ptr [RAX]
0000299b(5): NOP dword ptr [RAX + RAX*0x1]
000029a0(3): TEST RDX,RDX
000029a3(6): JZ 0x00002b3b
000029a9(3): MOV RDX,RBP
000029ac(7): LEA R9,[0x221480]
000029b3(7): LEA RDI,[0x2215c8]
000029ba(3): SUB RDX,R12
000029bd(2): XOR ECX,ECX
000029bf(3): MOV RSI,R12
000029c2(3): MOV R8,RDX
000029c5(5): CALL 0x000185a0
000029ca(4): CMP RAX,-0x2
000029ce(6): JZ 0x0000452a
000029d4(4): CMP RAX,-0x1
000029d8(6): JZ 0x00002b71
000029de(7): MOV RAX,qword ptr [0x00221488]
000029e5(3): MOV RBX,qword ptr [RAX]
000029e8(7): MOV RAX,qword ptr [0x00221490]
000029ef(3): ADD RBX,R12
000029f2(3): ADD R12,qword ptr [RAX]
000029f5(3): CMP RBX,R12
000029f8(6): JZ 0x000030a0
000029fe(3): MOV RAX,R12
00002a01(5): MOV qword ptr [RSP + 0x60],RBX
00002a06(3): SUB RAX,RBX
00002a09(7): CMP RAX,qword ptr [0x00221360]
00002a10(5): MOV qword ptr [RSP + 0x68],RAX
00002a15(2): JLE 0x00002a1e
00002a17(7): MOV qword ptr [0x00221360],RAX
00002a1e(8): MOVZX R13D,byte ptr [0x00221889]
00002a26(3): TEST R13B,R13B
00002a29(6): JNZ 0x00002f28
00002a2f(8): CMP qword ptr [0x00221868],0x0
00002a37(2): JZ 0x00002a59
00002a39(7): MOV RDX,qword ptr [0x00221350]
00002a40(7): MOV RSI,qword ptr [0x00221340]
00002a47(5): MOV RDI,qword ptr [RSP + 0x8]
00002a4c(5): CALL 0x00005450
00002a51(2): TEST AL,AL
00002a53(6): JNZ 0x00002ec9
00002a59(8): CMP qword ptr [0x00221870],0x0
00002a61(2): JZ 0x00002a83
00002a63(7): MOV RDX,qword ptr [0x00221330]
00002a6a(7): MOV RSI,qword ptr [0x00221320]
00002a71(5): MOV RDI,qword ptr [RSP + 0x8]
00002a76(5): CALL 0x00005450
00002a7b(2): TEST AL,AL
00002a7d(6): JZ 0x00002ec9
00002a83(7): MOV RCX,qword ptr [0x002212e0]
00002a8a(7): CMP RCX,qword ptr [0x002212e8]
00002a91(7): MOV R8,qword ptr [0x002212f0]
00002a98(6): JZ 0x000030c8
00002a9e(4): LEA RDI,[RCX + RCX*0x2]
00002aa2(3): MOV RAX,RDI
00002aa5(4): SHL RAX,0x4
00002aa9(4): LEA RDI,[R8 + RAX*0x1]
00002aad(8): MOVZX R8D,byte ptr [0x0022188a]
00002ab5(3): TEST R8B,R8B
00002ab8(6): JNZ 0x00002fc0
00002abe(3): TEST R13B,R13B
00002ac1(2): JZ 0x00002af7
00002ac3(4): MOV RAX,qword ptr [RSP]
00002ac7(3): SUB RAX,RBX
00002aca(4): MOV qword ptr [RDI + 0x20],RAX
00002ace(5): MOV RAX,qword ptr [RSP + 0x20]
00002ad3(7): CMP qword ptr [0x00221358],RAX
00002ada(2): JGE 0x00002ae3
00002adc(7): MOV qword ptr [0x00221358],RAX
00002ae3(5): MOV RSI,qword ptr [RSP + 0x10]
00002ae8(4): CMP qword ptr [RSP],RSI
00002aec(2): JNZ 0x00002af7
00002aee(3): TEST R13B,R13B
00002af1(6): JNZ 0x00003140
00002af7(5): MOV RAX,qword ptr [RSP + 0x10]
00002afc(4): ADD RCX,0x1
00002b00(6): MOVDQA XMM0,xmmword ptr [RSP + 0x60]
00002b06(7): MOV qword ptr [0x002212e0],RCX
00002b0d(3): SUB RAX,RBX
00002b10(4): MOV qword ptr [RDI + 0x10],RAX
00002b14(3): MOV RAX,RBP
00002b17(3): SUB RAX,RBX
00002b1a(4): MOV qword ptr [RDI + 0x18],RAX
00002b1e(4): MOV EAX,dword ptr [RSP + 0x38]
00002b22(3): MOVUPS xmmword ptr [RDI],XMM0
00002b25(3): MOV dword ptr [RDI + 0x28],EAX
00002b28(7): LEA RAX,[0x2215c0]
00002b2f(3): MOV RDX,qword ptr [RAX]
00002b32(3): TEST RDX,RDX
00002b35(6): JNZ 0x000029a9
00002b3b(3): CMP R12,RBP
00002b3e(6): JNC 0x00003128
00002b44(5): MOVZX EAX,byte ptr [R12]
00002b49(5): CMP byte ptr [R15 + RAX*0x1],0x0
00002b4e(2): JZ 0x00002b68
00002b50(5): JMP 0x00002ee9
00002b58(5): MOVZX EAX,byte ptr [R12]
00002b5d(5): CMP byte ptr [R15 + RAX*0x1],0x0
00002b62(6): JNZ 0x00002ee0
00002b68(4): ADD R12,0x1
00002b6c(3): CMP R12,RBP
00002b6f(2): JNZ 0x00002b58
00002b71(5): MOV RAX,qword ptr [RSP + 0x18]
00002b76(5): MOV R12,qword ptr [RSP + 0x50]
00002b7b(4): MOV RBP,qword ptr [RAX + 0x8]
00002b7f(3): CMP RBP,R12
00002b82(5): MOV qword ptr [RSP + 0x50],RBP
00002b87(6): JA 0x00002900
00002b8d(7): MOV RAX,qword ptr [0x00221310]
00002b94(5): MOV RSI,qword ptr [RSP + 0x58]
00002b99(7): MOV RDX,qword ptr [0x00221300]
00002ba0(5): ADD dword ptr [RSP + 0x38],0x1
00002ba5(4): ADD RAX,0x1
00002ba9(4): MOV qword ptr [RDX + RSI*0x1],RAX
00002bad(4): ADD RSI,0x8
00002bb1(7): MOV qword ptr [0x00221310],RAX
00002bb8(4): MOV EAX,dword ptr [RSP + 0x38]
00002bbc(6): CMP dword ptr [0x00221318],EAX
00002bc2(5): MOV qword ptr [RSP + 0x58],RSI
00002bc7(6): JG 0x00002841
00002bcd(7): MOV RSI,qword ptr [0x002212e0]
00002bd4(3): TEST RSI,RSI
00002bd7(6): JNZ 0x000033a2
00002bdd(7): CMP byte ptr [0x0022188a],0x0
00002be4(6): JNZ 0x0000325d
00002bea(7): CMP byte ptr [0x00221889],0x0
00002bf1(2): JZ 0x00002c11
00002bf3(7): CMP byte ptr [0x00221888],0x0
00002bfa(2): JNZ 0x00002c11
00002bfc(7): MOV RAX,qword ptr [0x00221010]
00002c03(7): ADD RAX,qword ptr [0x00221358]
00002c0a(7): SUB qword ptr [0x00221018],RAX
00002c11(8): CMP qword ptr [0x00221018],0x0
00002c19(2): JNS 0x00002c26
00002c1b(11): MOV qword ptr [0x00221018],0x0
00002c26(7): MOV RAX,qword ptr [0x00221018]
00002c2d(5): MOV ECX,0x2
00002c32(7): MOV RDI,qword ptr [0x00221030]
00002c39(2): CQO
00002c3b(3): IDIV RCX
00002c3e(3): MOV RDX,RAX
00002c41(7): SUB RDX,qword ptr [0x00221010]
00002c48(3): TEST RDI,RDI
00002c4b(3): MOV RSI,RAX
00002c4e(7): MOV qword ptr [0x002211c8],RAX
00002c55(7): MOV qword ptr [0x002211b8],RAX
00002c5c(7): MOV qword ptr [0x002211c0],RDX
00002c63(6): JZ 0x000043d1
00002c69(3): CMP byte ptr [RDI],0x0
00002c6c(6): JZ 0x000043d1
00002c72(2): XOR EAX,EAX
00002c74(4): OR RCX,-0x1
00002c78(2): SCASB.REPNE RDI
00002c7a(3): MOV RAX,RCX
00002c7d(3): NOT RAX
00002c80(4): SUB RAX,0x1
00002c84(7): MOV qword ptr [0x002211b0],RAX
00002c8b(7): MOV RAX,qword ptr [0x002211b0]
00002c92(3): ADD RAX,RAX
00002c95(7): CMP byte ptr [0x00221020],0x0
00002c9c(6): JZ 0x000043c8
00002ca2(3): SUB RDX,RAX
00002ca5(3): TEST RDX,RDX
00002ca8(7): MOV qword ptr [0x002211c0],RDX
00002caf(6): JS 0x00004744
00002cb5(3): SUB RSI,RAX
00002cb8(7): MOV qword ptr [0x002211b8],RSI
00002cbf(5): CALL 0x000020e0
00002cc4(3): MOV RSI,qword ptr [RAX]
00002cc7(7): LEA RCX,[0x2211e0]
00002cce(4): MOV qword ptr [RSP],RAX
00002cd2(2): XOR EDX,EDX
00002cd4(4): NOP dword ptr [RAX]
00002cd8(4): MOVZX EAX,word ptr [RSI + RDX*0x2]
00002cdc(4): SHR AX,0xd
00002ce0(3): AND EAX,0x1
00002ce3(3): MOV byte ptr [RCX + RDX*0x1],AL
00002ce6(4): ADD RDX,0x1
00002cea(7): CMP RDX,0x100
00002cf1(2): JNZ 0x00002cd8
00002cf3(6): MOV EAX,dword ptr [0x00221884]
00002cf9(7): MOV byte ptr [0x002211ec],0x1
00002d00(3): CMP EAX,0x2
00002d03(6): JZ 0x000043bc
00002d09(3): CMP EAX,0x3
00002d0c(2): JNZ 0x00002d49
00002d0e(7): LEA RDX,[0x1b7ff]
00002d15(5): MOV EAX,0x24
00002d1a(4): ADD RDX,0x1
00002d1e(4): MOV byte ptr [RCX + RAX*0x1],0x1
00002d22(3): MOVZX EAX,byte ptr [RDX]
00002d25(2): TEST AL,AL
00002d27(2): JNZ 0x00002d1a
00002d29(7): LEA RDX,[0x1ba40]
00002d30(5): MOV EAX,0x80
00002d35(4): CMP byte ptr [RDX + RAX*0x1],0x0
00002d39(4): SETNZ byte ptr [RCX + RAX*0x1]
00002d3d(4): ADD RAX,0x1
00002d41(6): CMP RAX,0x100
00002d47(2): JNZ 0x00002d35
00002d49(8): CMP qword ptr [0x002212e0],0x0
00002d51(11): MOV qword ptr [0x002211a0],0x0
00002d5c(11): MOV qword ptr [0x002211a8],0x0
00002d67(7): MOV byte ptr [0x00221190],0x0
00002d6e(11): MOV qword ptr [0x00221140],0x0
00002d79(11): MOV qword ptr [0x00221148],0x0
00002d84(7): MOV byte ptr [0x00221130],0x0
00002d8b(7): MOV R12,qword ptr [0x002212f0]
00002d92(6): JLE 0x00003c39
00002d98(9): MOV qword ptr [RSP + 0x10],0x0
00002da1(4): MOV RDX,qword ptr [R12]
00002da5(5): MOV RCX,qword ptr [R12 + 0x10]
00002daa(7): LEA RAX,[0x221160]
00002db1(5): MOV RBX,qword ptr [R12 + 0x8]
00002db6(5): MOV RBP,qword ptr [R12 + 0x18]
00002dbb(3): MOV qword ptr [RAX],RDX
00002dbe(4): LEA RAX,[RDX + RCX*0x1]
00002dc2(3): ADD RBX,RDX
00002dc5(3): ADD RBP,RDX
00002dc8(5): MOV qword ptr [RSP + 0x18],RAX
00002dcd(5): MOVSXD RAX,dword ptr [R12 + 0x28]
00002dd2(7): MOV qword ptr [0x00221168],RBX
00002dd9(4): SHL RAX,0x4
00002ddd(7): ADD RAX,qword ptr [0x002212f8]
00002de4(3): MOV R13,qword ptr [RAX]
00002de7(4): MOV R14,qword ptr [RAX + 0x8]
00002deb(7): MOV RAX,qword ptr [0x002211b8]
00002df2(3): ADD RDX,RAX
00002df5(3): CMP RBX,RBP
00002df8(6): JNC 0x000033f5
00002dfe(3): CMP RBX,RDX
00002e01(2): JBE 0x00002e6a
00002e03(5): JMP 0x00003d58
00002e10(3): MOV RDX,RBP
00002e13(7): LEA RDI,[0x2215c8]
00002e1a(3): XOR R8D,R8D
00002e1d(3): SUB RDX,RBX
00002e20(2): XOR ECX,ECX
00002e22(3): MOV RSI,RBX
00002e25(5): CALL 0x00018580
00002e2a(4): CMP RAX,-0x2
00002e2e(6): JZ 0x0000452a
00002e34(4): CMP RAX,-0x1
00002e38(5): MOV EDX,0x1
00002e3d(4): CMOVZ RAX,RDX
00002e41(3): ADD RBX,RAX
00002e44(7): MOV RAX,qword ptr [0x002211b8]
00002e4b(3): CMP RBP,RBX
00002e4e(6): JBE 0x000033f0
00002e54(7): LEA RSI,[0x221160]
00002e5b(3): MOV RDX,qword ptr [RSI]
00002e5e(3): ADD RDX,RAX
00002e61(3): CMP RBX,RDX
00002e64(6): JA 0x00003d53
00002e6a(7): LEA RSI,[0x2215c0]
00002e71(7): MOV qword ptr [0x00221168],RBX
00002e78(4): CMP qword ptr [RSI],0x0
00002e7c(2): JNZ 0x00002e10
00002e7e(3): MOVZX EDX,byte ptr [RBX]
00002e81(7): LEA RSI,[0x221380]
00002e88(4): CMP byte ptr [RSI + RDX*0x1],0x0
00002e8c(6): JNZ 0x000033c0
00002e92(4): ADD RBX,0x1
00002e96(2): JMP 0x00002e4b
00002ea0(2): TEST DL,DL
00002ea2(3): MOV RBX,R13
00002ea5(3): MOV RDI,R12
00002ea8(3): MOV R13D,EBP
00002eab(5): MOV R12,qword ptr [RSP + 0x30]
00002eb0(5): MOV RBP,qword ptr [RSP + 0x28]
00002eb5(2): JZ 0x00002ec0
00002eb7(7): MOV qword ptr [0x00221310],RDI
00002ebe(2): NOP
00002ec0(3): CMP R14,RBX
00002ec3(6): JBE 0x00002a2f
00002ec9(7): LEA RAX,[0x2215c0]
00002ed0(3): MOV RDX,qword ptr [RAX]
00002ed3(5): JMP 0x000029a0
00002ee0(3): CMP R12,RBP
00002ee3(6): JNC 0x0000312e
00002ee9(5): MOVZX EAX,byte ptr [R12]
00002eee(5): CMP byte ptr [R15 + RAX*0x1],0x0
00002ef3(6): JZ 0x0000312e
00002ef9(3): MOV RAX,R12
00002efc(2): JMP 0x00002f0e
00002f00(3): MOVZX EDX,byte ptr [RAX]
00002f03(5): CMP byte ptr [R15 + RDX*0x1],0x0
00002f08(6): JZ 0x000030b8
00002f0e(4): ADD RAX,0x1
00002f12(3): CMP RAX,RBP
00002f15(2): JNZ 0x00002f00
00002f17(3): MOV RBX,R12
00002f1a(3): MOV R12,RBP
00002f1d(5): JMP 0x000029fe
00002f28(3): CMP R14,RBX
00002f2b(2): JNC 0x00002ec0
00002f2d(7): MOV RDI,qword ptr [0x00221310]
00002f34(5): MOV qword ptr [RSP + 0x28],RBP
00002f39(2): XOR EDX,EDX
00002f3b(5): MOV qword ptr [RSP + 0x30],R12
00002f40(3): MOV EBP,R13D
00002f43(3): MOV R13,RBX
00002f46(3): MOV R12,RDI
00002f49(2): JMP 0x00002f59
00002f50(3): CMP R14,R13
00002f53(6): JNC 0x00002ea0
00002f59(4): MOVZX EAX,byte ptr [R14]
00002f5d(4): ADD R14,0x1
00002f61(2): CMP AL,0xa
00002f63(2): JNZ 0x00002f50
00002f65(5): MOV RAX,qword ptr [RSP + 0x18]
00002f6a(4): ADD R12,0x1
00002f6e(4): MOV RBX,qword ptr [RAX + 0x8]
00002f72(3): CMP RBX,R14
00002f75(6): JBE 0x000031f0
00002f7b(5): CALL 0x000020e0
00002f80(3): MOV RCX,qword ptr [RAX]
00002f83(3): MOV RAX,R14
00002f86(2): JMP 0x00002f99
00002f90(4): ADD RAX,0x1
00002f94(3): CMP RAX,RBX
00002f97(2): JZ 0x00002fa3
00002f99(3): MOVZX EDX,byte ptr [RAX]
00002f9c(5): TEST byte ptr [RCX + RDX*0x2 + 0x1],0x20
00002fa1(2): JZ 0x00002f90
00002fa3(3): MOV RSI,RAX
00002fa6(3): SUB RSI,R14
00002fa9(5): MOV qword ptr [RSP + 0x20],RSI
00002fae(4): MOV qword ptr [RSP],R14
00002fb2(2): MOV EDX,EBP
00002fb4(3): MOV R14,RAX
00002fb7(2): JMP 0x00002f50
00002fc0(3): CMP R14,RBX
00002fc3(7): MOV R10,qword ptr [0x00221310]
00002fca(6): JNC 0x00003094
00002fd0(5): MOV qword ptr [RSP + 0x28],RBP
00002fd5(5): MOV qword ptr [RSP + 0x30],R12
00002fda(2): XOR ESI,ESI
00002fdc(3): MOV R12,R10
00002fdf(5): MOV qword ptr [RSP + 0x48],R10
00002fe4(5): MOV byte ptr [RSP + 0x3f],R13B
00002fe9(3): MOV R10,R14
00002fec(5): MOV qword ptr [RSP + 0x40],RCX
00002ff1(3): MOV EBP,R8D
00002ff4(3): MOV R14,RDI
00002ff7(2): JMP 0x00003005
00003000(3): CMP R10,RBX
00003003(2): JNC 0x00003068
00003005(4): MOVZX EAX,byte ptr [R10]
00003009(4): ADD R10,0x1
0000300d(2): CMP AL,0xa
0000300f(2): JNZ 0x00003000
00003011(5): MOV RAX,qword ptr [RSP + 0x18]
00003016(4): ADD R12,0x1
0000301a(4): MOV R13,qword ptr [RAX + 0x8]
0000301e(3): CMP R13,R10
00003021(6): JBE 0x00003201
00003027(4): MOV qword ptr [RSP],R10
0000302b(5): CALL 0x000020e0
00003030(4): MOV R10,qword ptr [RSP]
00003034(3): MOV R8,qword ptr [RAX]
00003037(3): MOV RAX,R10
0000303a(2): JMP 0x00003049
00003040(4): ADD RAX,0x1
00003044(3): CMP RAX,R13
00003047(2): JZ 0x00003054
00003049(3): MOVZX EDX,byte ptr [RAX]
0000304c(6): TEST byte ptr [R8 + RDX*0x2 + 0x1],0x20
00003052(2): JZ 0x00003040
00003054(4): MOV qword ptr [RSP],R10
00003058(3): MOV R10,RAX
0000305b(2): MOV ESI,EBP
0000305d(3): CMP R10,RBX
00003060(2): JC 0x00003005
00003062(6): NOP word ptr [RAX + RAX*0x1]
00003068(3): TEST SIL,SIL
0000306b(3): MOV RDI,R14
0000306e(3): MOV R9,R12
00003071(3): MOV R14,R10
00003074(5): MOV RBP,qword ptr [RSP + 0x28]
00003079(6): MOVZX R13D,byte ptr [RSP + 0x3f]
0000307f(5): MOV RCX,qword ptr [RSP + 0x40]
00003084(5): MOV R12,qword ptr [RSP + 0x30]
00003089(5): MOV R10,qword ptr [RSP + 0x48]
0000308e(6): JNZ 0x0000482b
00003094(4): MOV qword ptr [RDI + 0x20],R10
00003098(5): JMP 0x00002ae3
000030a0(7): LEA RAX,[0x2215c0]
000030a7(3): MOV RDX,qword ptr [RAX]
000030aa(4): LEA R12,[RBX + 0x1]
000030ae(5): JMP 0x000029a0
000030b8(3): MOV RBX,R12
000030bb(3): MOV R12,RAX
000030be(5): JMP 0x000029f5
000030c8(3): TEST R8,R8
000030cb(6): JZ 0x000031b8
000030d1(10): MOV RAX,0x1c71c71c71c71c6
000030db(3): CMP RCX,RAX
000030de(6): JA 0x000031e5
000030e4(3): MOV RAX,RCX
000030e7(3): SHR RAX,1
000030ea(5): LEA RCX,[RCX + RAX*0x1 + 0x1]
000030ef(4): LEA RSI,[RCX + RCX*0x2]
000030f3(3): MOV RDI,R8
000030f6(7): MOV qword ptr [0x002212e8],RCX
000030fd(4): SHL RSI,0x4
00003101(5): CALL 0x00009920
00003106(7): MOV RCX,qword ptr [0x002212e0]
0000310d(3): MOV R8,RAX
00003110(7): MOV qword ptr [0x002212f0],RAX
00003117(8): MOVZX R13D,byte ptr [0x00221889]
0000311f(5): JMP 0x00002a9e
00003128(6): JZ 0x00002b71
0000312e(3): MOV RBX,R12
00003131(5): JMP 0x000030aa
00003140(3): CMP RSI,RBP
00003143(3): MOV R13,RSI
00003146(6): JNC 0x00002af7
0000314c(5): MOV qword ptr [RSP + 0x28],RDI
00003151(5): MOV qword ptr [RSP + 0x10],RCX
00003156(5): CALL 0x000020e0
0000315b(5): MOV RCX,qword ptr [RSP + 0x10]
00003160(3): MOV RAX,qword ptr [RAX]
00003163(3): MOV RDX,R13
00003166(5): MOV RDI,qword ptr [RSP + 0x28]
0000316b(2): JMP 0x00003179
00003170(4): ADD RDX,0x1
00003174(3): CMP RDX,RBP
00003177(2): JZ 0x000031ab
00003179(3): MOVZX ESI,byte ptr [RDX]
0000317c(5): TEST byte ptr [RAX + RSI*0x2 + 0x1],0x20
00003181(2): JZ 0x00003170
00003183(3): CMP RDX,RBP
00003186(5): MOV qword ptr [RSP + 0x10],RDX
0000318b(6): JNC 0x00002af7
00003191(7): NOP dword ptr [RAX]
00003198(4): ADD RDX,0x1
0000319c(3): CMP RDX,RBP
0000319f(2): JZ 0x000031ab
000031a1(3): MOVZX ESI,byte ptr [RDX]
000031a4(5): TEST byte ptr [RAX + RSI*0x2 + 0x1],0x20
000031a9(2): JNZ 0x00003198
000031ab(5): MOV qword ptr [RSP + 0x10],RDX
000031b0(5): JMP 0x00002af7
000031b8(3): TEST RCX,RCX
000031bb(5): MOV EAX,0x2
000031c0(5): MOV EDX,0x30
000031c5(4): CMOVZ RCX,RAX
000031c9(3): MOV RAX,RDX
000031cc(2): XOR ESI,ESI
000031ce(3): MUL RCX
000031d1(6): JO 0x00004821
000031d7(3): TEST RAX,RAX
000031da(2): JS 0x000031e5
000031dc(3): TEST RSI,RSI
000031df(6): JZ 0x000030ef
000031e5(5): CALL 0x00009b10
000031ea(6): NOP word ptr [RAX + RAX*0x1]
000031f0(3): MOV RAX,R14
000031f3(9): MOV qword ptr [RSP + 0x20],0x0
000031fc(5): JMP 0x00002fae
00003201(2): MOV ESI,EBP
00003203(4): MOV qword ptr [RSP],R10
00003207(5): JMP 0x00003000
0000320c(5): MOV RAX,qword ptr [RSP + 0x18]
00003211(3): MOV R14,R12
00003214(9): MOV qword ptr [RSP + 0x20],0x0
0000321d(4): MOV RBP,qword ptr [RAX + 0x8]
00003221(5): JMP 0x000028e4
00003226(7): LEA RDI,[0x2215c0]
0000322d(5): CALL 0x00004cb0
00003232(7): MOV RDI,qword ptr [0x00221878]
00003239(3): TEST RDI,RDI
0000323c(6): JZ 0x000027a4
00003242(5): JMP 0x0000273e
00003247(3): MOV RBX,R12
0000324a(3): MOV RAX,RBX
0000324d(3): MOV R14,RBX
00003250(3): SUB RAX,R12
00003253(5): MOV qword ptr [RSP + 0x20],RAX
00003258(5): JMP 0x000028e4
0000325d(11): MOV qword ptr [0x00221358],0x0
00003268(3): XOR R13D,R13D
0000326b(5): LEA R12,[RSP + 0x70]
00003270(7): LEA RBP,[0x1b8a0]
00003277(4): OR RBX,-0x1
0000327b(2): JMP 0x000032f0
0000327d(7): MOV RAX,qword ptr [0x00221300]
00003284(3): TEST R13,R13
00003287(8): LEA R14,[R13*0x8]
0000328f(4): MOV RSI,qword ptr [RAX + R13*0x8]
00003293(4): LEA R8,[RSI + 0x1]
00003297(2): JZ 0x0000329e
00003299(5): SUB R8,qword ptr [RAX + R14*0x1 + -0x8]
0000329e(5): MOV EDX,0x15
000032a3(3): MOV RDI,R12
000032a6(2): XOR EAX,EAX
000032a8(3): MOV RCX,RBP
000032ab(5): MOV ESI,0x1
000032b0(5): CALL 0x00002100
000032b5(2): MOV EDX,EAX
000032b7(7): MOV RAX,qword ptr [0x00221308]
000032be(4): MOV RDI,qword ptr [RAX + R14*0x1]
000032c2(3): MOVSXD RAX,EDX
000032c5(3): TEST RDI,RDI
000032c8(2): JZ 0x000032dc
000032ca(2): XOR EAX,EAX
000032cc(3): MOV RCX,RBX
000032cf(2): SCASB.REPNE RDI
000032d1(3): MOVSXD RAX,EDX
000032d4(3): NOT RCX
000032d7(5): LEA RAX,[RCX + RAX*0x1 + -0x1]
000032dc(7): CMP qword ptr [0x00221358],RAX
000032e3(2): JGE 0x000032ec
000032e5(7): MOV qword ptr [0x00221358],RAX
000032ec(4): ADD R13,0x1
000032f0(7): MOVSXD RAX,dword ptr [0x00221318]
000032f7(3): CMP R13,RAX
000032fa(2): JC 0x0000327d
000032fc(7): MOV RAX,qword ptr [0x00221358]
00003303(4): LEA RDX,[RAX + 0x1]
00003307(4): LEA RDI,[RAX + 0x2]
0000330b(7): MOV qword ptr [0x00221358],RDX
00003312(5): CALL 0x000098c0
00003317(7): CMP byte ptr [0x0022188a],0x0
0000331e(7): MOV qword ptr [0x00221120],RAX
00003325(6): JNZ 0x00002bf3
0000332b(5): JMP 0x00002bea
00003330(11): MOV qword ptr [0x00221870],0x0
0000333b(5): JMP 0x000027f0
00003340(11): MOV qword ptr [0x00221868],0x0
0000334b(5): JMP 0x000027ca
00003350(7): CMP byte ptr [0x00221020],0x0
00003357(6): JZ 0x00004556
0000335d(5): CALL 0x000020e0
00003362(7): LEA RSI,[0x221380]
00003369(2): XOR ECX,ECX
0000336b(3): MOV RDX,qword ptr [RAX]
0000336e(4): ADD RSI,0x1
00003372(4): MOVZX EDX,word ptr [RDX + RCX*0x1]
00003376(4): ADD RCX,0x2
0000337a(4): SHR DX,0xa
0000337e(3): AND EDX,0x1
00003381(3): MOV byte ptr [RSI + -0x1],DL
00003384(7): CMP RCX,0x200
0000338b(2): JNZ 0x0000336b
0000338d(5): JMP 0x000027a4
00003392(11): MOV qword ptr [0x00221720],0x0
0000339d(5): JMP 0x00002720
000033a2(7): MOV RDI,qword ptr [0x002212f0]
000033a9(7): LEA RCX,[0x5420]
000033b0(5): MOV EDX,0x30
000033b5(5): CALL 0x00001cf0
000033ba(5): JMP 0x00002bdd
000033c0(3): CMP RBP,RBX
000033c3(2): JA 0x000033e4
000033c5(2): JMP 0x000033f0
000033d0(3): MOVZX EDX,byte ptr [RBX]
000033d3(7): LEA RSI,[0x221380]
000033da(4): CMP byte ptr [RSI + RDX*0x1],0x0
000033de(6): JZ 0x00002e54
000033e4(4): ADD RBX,0x1
000033e8(3): CMP RBP,RBX
000033eb(2): JNZ 0x000033d0
000033ed(3): MOV RBX,RBP
000033f0(5): MOV RCX,qword ptr [R12 + 0x10]
000033f5(7): LEA RSI,[0x221160]
000033fc(3): MOV RSI,qword ptr [RSI]
000033ff(3): ADD RAX,RSI
00003402(3): CMP RBX,RAX
00003405(2): JA 0x0000340e
00003407(7): MOV qword ptr [0x00221168],RBX
0000340e(2): XOR EDI,EDI
00003410(8): CMP qword ptr [0x00221030],0x0
00003418(7): MOV RDX,qword ptr [0x00221168]
0000341f(3): MOV RAX,RDX
00003422(2): JZ 0x0000342d
00003424(2): XOR EDI,EDI
00003426(3): CMP RBP,RDX
00003429(4): SETA DIL
0000342d(7): MOV byte ptr [0x00221150],DIL
00003434(7): AND byte ptr [0x00221150],0x1
0000343b(3): CMP RSI,RDX
0000343e(2): JNC 0x00003472
00003440(4): MOV RDI,qword ptr [RSP]
00003444(3): MOV R8,qword ptr [RDI]
00003447(2): XOR EDI,EDI
00003449(2): JMP 0x0000345d
0000344b(4): SUB RAX,0x1
0000344f(5): MOV EDI,0x1
00003454(3): CMP RAX,RSI
00003457(6): JZ 0x00004815
0000345d(4): MOVZX EDX,byte ptr [RAX + -0x1]
00003461(6): TEST byte ptr [R8 + RDX*0x2 + 0x1],0x20
00003467(2): JNZ 0x0000344b
00003469(3): TEST DIL,DIL
0000346c(6): JNZ 0x000047fa
00003472(7): MOV RDX,qword ptr [0x00221360]
00003479(7): ADD RDX,qword ptr [0x002211c8]
00003480(3): MOV RAX,RCX
00003483(3): NEG RAX
00003486(3): CMP RAX,RDX
00003489(6): JLE 0x00003d4a
0000348f(7): LEA RAX,[0x2215c0]
00003496(3): MOV RBX,RSI
00003499(3): SUB RBX,RDX
0000349c(4): CMP qword ptr [RAX],0x0
000034a0(6): JZ 0x000041ca
000034a6(4): LEA RDI,[RAX + 0x8]
000034aa(3): XOR R8D,R8D
000034ad(2): XOR ECX,ECX
000034af(3): MOV RSI,RBX
000034b2(5): CALL 0x00018580
000034b7(4): CMP RAX,-0x2
000034bb(6): JZ 0x0000452a
000034c1(4): CMP RAX,-0x1
000034c5(2): JNZ 0x000034cc
000034c7(5): MOV EAX,0x1
000034cc(3): ADD RBX,RAX
000034cf(7): LEA RAX,[0x221160]
000034d6(7): LEA R15,[0x221180]
000034dd(7): MOV qword ptr [0x00221180],RBX
000034e4(3): MOV RAX,qword ptr [RAX]
000034e7(3): CMP RBX,RAX
000034ea(7): MOV qword ptr [0x00221188],RAX
000034f1(2): JNC 0x00003523
000034f3(4): MOV RSI,qword ptr [RSP]
000034f7(2): XOR ECX,ECX
000034f9(3): MOV RSI,qword ptr [RSI]
000034fc(2): JMP 0x00003510
000034fe(4): SUB RAX,0x1
00003502(5): MOV ECX,0x1
00003507(3): CMP RBX,RAX
0000350a(6): JZ 0x000047ee
00003510(4): MOVZX EDX,byte ptr [RAX + -0x1]
00003514(5): TEST byte ptr [RSI + RDX*0x2 + 0x1],0x20
00003519(2): JNZ 0x000034fe
0000351b(2): TEST CL,CL
0000351d(6): JNZ 0x00004703
00003523(7): MOV RCX,qword ptr [0x002211c0]
0000352a(7): MOV RDX,qword ptr [0x00221188]
00003531(3): MOV RSI,RBX
00003534(4): LEA RAX,[RBX + RCX*0x1]
00003538(3): CMP RDX,RAX
0000353b(2): JBE 0x00003596
0000353d(7): LEA RDI,[0x2215c0]
00003544(4): CMP qword ptr [RDI],0x0
00003548(6): JZ 0x00003723
0000354e(3): SUB RDX,RSI
00003551(3): XOR R8D,R8D
00003554(2): XOR ECX,ECX
00003556(4): ADD RDI,0x8
0000355a(5): CALL 0x00018580
0000355f(4): CMP RAX,-0x2
00003563(6): JZ 0x0000452a
00003569(4): CMP RAX,-0x1
0000356d(5): MOV EDX,0x1
00003572(7): MOV RCX,qword ptr [0x002211c0]
00003579(4): CMOVZ RAX,RDX
0000357d(3): ADD RAX,qword ptr [R15]
00003580(7): MOV RDX,qword ptr [0x00221188]
00003587(3): MOV RSI,RAX
0000358a(3): MOV qword ptr [R15],RAX
0000358d(4): LEA RAX,[RAX + RCX*0x1]
00003591(3): CMP RDX,RAX
00003594(2): JA 0x0000353d
00003596(8): CMP qword ptr [0x00221030],0x0
0000359e(6): JZ 0x00003dbb
000035a4(3): CMP R13,RSI
000035a7(6): JNC 0x000043e1
000035ad(4): MOV RAX,qword ptr [RSP]
000035b1(3): MOV R8,qword ptr [RAX]
000035b4(3): MOV RAX,RSI
000035b7(2): JMP 0x000035c6
000035b9(4): SUB RAX,0x1
000035bd(3): CMP R13,RAX
000035c0(6): JZ 0x00003dc7
000035c6(4): MOVZX EDI,byte ptr [RAX + -0x1]
000035ca(6): TEST byte ptr [R8 + RDI*0x2 + 0x1],0x20
000035d0(2): JNZ 0x000035b9
000035d2(5): CMP qword ptr [RSP + 0x18],RAX
000035d7(7): SETC byte ptr [0x00221170]
000035de(3): CMP R14,RSI
000035e1(2): JBE 0x00003614
000035e3(4): MOV RAX,qword ptr [RSP]
000035e7(2): XOR EDI,EDI
000035e9(3): MOV R8,qword ptr [RAX]
000035ec(2): JMP 0x00003600
000035ee(4): ADD RSI,0x1
000035f2(5): MOV EDI,0x1
000035f7(3): CMP R14,RSI
000035fa(6): JZ 0x00003d67
00003600(3): MOVZX EAX,byte ptr [RSI]
00003603(6): TEST byte ptr [R8 + RAX*0x2 + 0x1],0x20
00003609(2): JNZ 0x000035ee
0000360b(3): TEST DIL,DIL
0000360e(6): JNZ 0x0000476c
00003614(3): SUB RDX,RSI
00003617(3): SUB RCX,RDX
0000361a(7): SUB RCX,qword ptr [0x00221010]
00003621(3): TEST RCX,RCX
00003624(3): MOV R10,RCX
00003627(6): JLE 0x00003d73
0000362d(7): MOV RDX,qword ptr [0x00221168]
00003634(7): LEA R11,[0x2211a0]
0000363b(3): CMP R14,RDX
0000363e(3): MOV R9,RDX
00003641(7): MOV qword ptr [0x002211a0],RDX
00003648(2): JBE 0x0000367a
0000364a(4): MOV RAX,qword ptr [RSP]
0000364e(2): XOR ECX,ECX
00003650(3): MOV RSI,qword ptr [RAX]
00003653(2): JMP 0x00003667
00003655(4): ADD R9,0x1
00003659(5): MOV ECX,0x1
0000365e(3): CMP R14,R9
00003661(6): JZ 0x00003d9c
00003667(4): MOVZX EAX,byte ptr [R9]
0000366b(5): TEST byte ptr [RSI + RAX*0x2 + 0x1],0x20
00003670(2): JNZ 0x00003655
00003672(2): TEST CL,CL
00003674(6): JNZ 0x00003d9c
0000367a(7): MOV RAX,qword ptr [0x002211a0]
00003681(7): MOV qword ptr [0x002211a8],R9
00003688(3): ADD RAX,R10
0000368b(3): CMP RBP,R9
0000368e(6): JBE 0x000037c3
00003694(3): CMP R9,RAX
00003697(6): JNC 0x00003daf
0000369d(3): MOV R15,R10
000036a0(3): MOV R14,R9
000036a3(2): JMP 0x000036f8
000036a5(3): MOV RDX,RBP
000036a8(4): LEA RDI,[RAX + 0x8]
000036ac(3): XOR R8D,R8D
000036af(3): SUB RDX,R14
000036b2(2): XOR ECX,ECX
000036b4(3): MOV RSI,R14
000036b7(5): MOV qword ptr [RSP + 0x8],R11
000036bc(5): CALL 0x00018580
000036c1(4): CMP RAX,-0x2
000036c5(6): JZ 0x0000452a
000036cb(4): CMP RAX,-0x1
000036cf(5): MOV EDX,0x1
000036d4(5): MOV R11,qword ptr [RSP + 0x8]
000036d9(4): CMOVZ RAX,RDX
000036dd(3): ADD R14,RAX
000036e0(3): CMP RBP,R14
000036e3(6): JBE 0x000043aa
000036e9(3): MOV RAX,qword ptr [R11]
000036ec(3): ADD RAX,R15
000036ef(3): CMP R14,RAX
000036f2(6): JNC 0x00003da8
000036f8(7): LEA RAX,[0x2215c0]
000036ff(7): MOV qword ptr [0x002211a8],R14
00003706(4): CMP qword ptr [RAX],0x0
0000370a(2): JNZ 0x000036a5
0000370c(4): MOVZX EAX,byte ptr [R14]
00003710(7): LEA RSI,[0x221380]
00003717(4): CMP byte ptr [RSI + RAX*0x1],0x0
0000371b(2): JNZ 0x00003788
0000371d(4): ADD R14,0x1
00003721(2): JMP 0x000036e0
00003723(3): MOVZX EDI,byte ptr [RSI]
00003726(7): LEA R11,[0x221380]
0000372d(5): CMP byte ptr [R11 + RDI*0x1],0x0
00003732(2): JNZ 0x00003744
00003734(4): ADD RSI,0x1
00003738(3): MOV qword ptr [R15],RSI
0000373b(4): LEA RAX,[RSI + RCX*0x1]
0000373f(5): JMP 0x00003538
00003744(3): CMP RSI,RDX
00003747(6): JNC 0x00003538
0000374d(4): LEA RAX,[RSI + 0x1]
00003751(2): JMP 0x00003771
00003758(3): MOVZX EDI,byte ptr [RSI]
0000375b(7): LEA R11,[0x221380]
00003762(4): LEA RAX,[RAX + 0x1]
00003766(5): CMP byte ptr [R11 + RDI*0x1],0x0
0000376b(6): JZ 0x0000471b
00003771(3): CMP RDX,RAX
00003774(3): MOV RSI,RAX
00003777(2): JNZ 0x00003758
00003779(3): MOV qword ptr [R15],RDX
0000377c(4): LEA RAX,[RDX + RCX*0x1]
00003780(5): JMP 0x00003538
00003788(3): CMP RBP,R14
0000378b(2): JA 0x000037ad
0000378d(5): JMP 0x000043aa
00003798(4): MOVZX EAX,byte ptr [R14]
0000379c(7): LEA RSI,[0x221380]
000037a3(4): CMP byte ptr [RSI + RAX*0x1],0x0
000037a7(6): JZ 0x000036e9
000037ad(4): ADD R14,0x1
000037b1(3): CMP RBP,R14
000037b4(2): JNZ 0x00003798
000037b6(7): MOV RDX,qword ptr [0x00221168]
000037bd(3): MOV R10,R15
000037c0(3): MOV R9,RBP
000037c3(7): MOV RCX,qword ptr [0x002211a0]
000037ca(3): ADD R10,RCX
000037cd(3): CMP R9,R10
000037d0(2): JNC 0x000037d9
000037d2(7): MOV qword ptr [0x002211a8],R9
000037d9(7): MOV RAX,qword ptr [0x002211a8]
000037e0(3): CMP RAX,RCX
000037e3(6): JBE 0x00003dcf
000037e9(8): CMP qword ptr [0x00221030],0x0
000037f1(7): MOV byte ptr [0x00221150],0x0
000037f8(7): MOV R8,qword ptr [0x002211a0]
000037ff(3): SETNZ CL
00003802(3): CMP RBP,RAX
00003805(4): SETA SIL
00003809(2): AND ECX,ESI
0000380b(4): MOV RSI,qword ptr [RSP]
0000380f(6): MOV byte ptr [0x00221190],CL
00003815(3): MOV RDI,qword ptr [RSI]
00003818(2): XOR ESI,ESI
0000381a(2): JMP 0x00003832
00003820(4): SUB RAX,0x1
00003824(5): MOV ESI,0x1
00003829(3): CMP R8,RAX
0000382c(6): JNC 0x0000470f
00003832(4): MOVZX ECX,byte ptr [RAX + -0x1]
00003836(5): TEST byte ptr [RDI + RCX*0x2 + 0x1],0x20
0000383b(2): JNZ 0x00003820
0000383d(3): TEST SIL,SIL
00003840(6): JNZ 0x0000470f
00003846(7): LEA RAX,[0x221160]
0000384d(7): MOV R14,qword ptr [0x002211b8]
00003854(3): SUB RDX,qword ptr [RAX]
00003857(3): SUB R14,RDX
0000385a(7): SUB R14,qword ptr [0x00221010]
00003861(3): TEST R14,R14
00003864(6): JLE 0x00003cbd
0000386a(7): MOV RAX,qword ptr [0x00221180]
00003871(3): CMP R13,RAX
00003874(7): MOV qword ptr [0x00221148],RAX
0000387b(2): JNC 0x000038ad
0000387d(4): MOV RSI,qword ptr [RSP]
00003881(2): XOR ECX,ECX
00003883(3): MOV RSI,qword ptr [RSI]
00003886(2): JMP 0x0000389a
00003888(4): SUB RAX,0x1
0000388c(5): MOV ECX,0x1
00003891(3): CMP R13,RAX
00003894(6): JZ 0x00004727
0000389a(4): MOVZX EDX,byte ptr [RAX + -0x1]
0000389e(5): TEST byte ptr [RSI + RDX*0x2 + 0x1],0x20
000038a3(2): JNZ 0x00003888
000038a5(2): TEST CL,CL
000038a7(6): JNZ 0x00004760
000038ad(7): MOV RDX,qword ptr [0x00221148]
000038b4(7): LEA R13,[0x221140]
000038bb(4): LEA RAX,[RBX + R14*0x1]
000038bf(7): MOV qword ptr [0x00221140],RBX
000038c6(3): MOV RSI,RBX
000038c9(3): CMP RDX,RAX
000038cc(2): JBE 0x00003922
000038ce(7): LEA RDI,[0x2215c0]
000038d5(4): CMP qword ptr [RDI],0x0
000038d9(6): JZ 0x00003c64
000038df(3): SUB RDX,RSI
000038e2(3): XOR R8D,R8D
000038e5(2): XOR ECX,ECX
000038e7(4): ADD RDI,0x8
000038eb(5): CALL 0x00018580
000038f0(4): CMP RAX,-0x2
000038f4(6): JZ 0x0000452a
000038fa(4): CMP RAX,-0x1
000038fe(5): MOV EDX,0x1
00003903(4): CMOVZ RAX,RDX
00003907(4): ADD RAX,qword ptr [R13]
0000390b(7): MOV RDX,qword ptr [0x00221148]
00003912(3): MOV RSI,RAX
00003915(4): MOV qword ptr [R13],RAX
00003919(4): LEA RAX,[RAX + R14*0x1]
0000391d(3): CMP RDX,RAX
00003920(2): JA 0x000038ce
00003922(3): CMP RDX,RSI
00003925(3): MOV RBX,RSI
00003928(6): JBE 0x00003cd3
0000392e(8): CMP qword ptr [0x00221030],0x0
00003936(7): MOV byte ptr [0x00221170],0x0
0000393d(3): SETNZ AL
00003940(5): CMP qword ptr [RSP + 0x18],RSI
00003945(3): SETC CL
00003948(2): AND EAX,ECX
0000394a(2): XOR ECX,ECX
0000394c(6): MOV byte ptr [0x00221130],AL
00003952(4): MOV RAX,qword ptr [RSP]
00003956(3): MOV RSI,qword ptr [RAX]
00003959(2): JMP 0x00003972
00003960(4): ADD RBX,0x1
00003964(5): MOV ECX,0x1
00003969(3): CMP RBX,RDX
0000396c(6): JZ 0x00004733
00003972(3): MOVZX EAX,byte ptr [RBX]
00003975(5): TEST byte ptr [RSI + RAX*0x2 + 0x1],0x20
0000397a(2): JNZ 0x00003960
0000397c(2): TEST CL,CL
0000397e(6): JNZ 0x00004733
00003984(7): MOVZX EDX,byte ptr [0x0022188a]
0000398b(2): TEST DL,DL
0000398d(6): JZ 0x00003cdf
00003993(5): MOVSXD RDX,dword ptr [R12 + 0x28]
00003998(7): MOV RSI,qword ptr [0x00221308]
0000399f(7): LEA RDI,[0x1c27b]
000039a6(4): MOV RSI,qword ptr [RSI + RDX*0x8]
000039aa(8): LEA RCX,[RDX*0x8]
000039b2(3): TEST RSI,RSI
000039b5(4): CMOVZ RSI,RDI
000039b9(5): MOV RDI,qword ptr [R12 + 0x20]
000039be(2): TEST EDX,EDX
000039c0(4): LEA RBX,[RDI + 0x1]
000039c4(2): JLE 0x000039d2
000039c6(7): MOV RAX,qword ptr [0x00221300]
000039cd(5): SUB RBX,qword ptr [RAX + RCX*0x1 + -0x8]
000039d2(7): MOV RDI,qword ptr [0x00221120]
000039d9(5): CALL 0x00001d70
000039de(7): LEA RCX,[0x1b89f]
000039e5(3): MOV RBP,RAX
000039e8(3): MOV RDI,RAX
000039eb(3): MOV R8,RBX
000039ee(4): OR RDX,-0x1
000039f2(5): MOV ESI,0x1
000039f7(2): XOR EAX,EAX
000039f9(5): CALL 0x00002100
000039fe(2): CDQE
00003a00(3): ADD RBP,RAX
00003a03(7): MOV qword ptr [0x00221128],RBP
00003a0a(6): MOV EAX,dword ptr [0x00221884]
00003a10(3): CMP EAX,0x2
00003a13(6): JZ 0x00003ddb
00003a19(6): JC 0x00003ff6
00003a1f(3): CMP EAX,0x3
00003a22(6): JNZ 0x00003c1d
00003a28(7): MOV RDX,qword ptr [0x00221028]
00003a2f(7): LEA RSI,[0x1b8aa]
00003a36(5): MOV EDI,0x1
00003a3b(2): XOR EAX,EAX
00003a3d(5): CALL 0x00001fb0
00003a42(7): MOV RDI,qword ptr [0x002210c8]
00003a49(4): MOV RAX,qword ptr [RDI + 0x28]
00003a4d(4): CMP RAX,qword ptr [RDI + 0x30]
00003a51(6): JNC 0x00004672
00003a57(4): LEA RDX,[RAX + 0x1]
00003a5b(4): MOV qword ptr [RDI + 0x28],RDX
00003a5f(3): MOV byte ptr [RAX],0x7b
00003a62(7): MOV RDI,qword ptr [0x002211a0]
00003a69(7): MOV RSI,qword ptr [0x002211a8]
00003a70(5): CALL 0x00004fa0
00003a75(7): MOV RCX,qword ptr [0x002210c8]
00003a7c(7): LEA RDI,[0x1b8af]
00003a83(5): MOV EDX,0x2
00003a88(5): MOV ESI,0x1
00003a8d(5): CALL 0x00001f80
00003a92(7): MOV RDI,qword ptr [0x00221180]
00003a99(7): MOV RSI,qword ptr [0x00221188]
00003aa0(5): CALL 0x00004fa0
00003aa5(7): MOV RCX,qword ptr [0x002210c8]
00003aac(7): LEA RDI,[0x1b8af]
00003ab3(5): MOV EDX,0x2
00003ab8(5): MOV ESI,0x1
00003abd(5): CALL 0x00001f80
00003ac2(7): LEA RAX,[0x221160]
00003ac9(7): MOV RBP,qword ptr [0x00221168]
00003ad0(3): MOV RBX,qword ptr [RAX]
00003ad3(7): LEA RAX,[0x2215c0]
00003ada(4): CMP qword ptr [RAX],0x0
00003ade(3): MOV R13,RBX
00003ae1(6): JZ 0x0000436e
00003ae7(3): MOV RDX,RBP
00003aea(4): LEA RDI,[RAX + 0x8]
00003aee(3): XOR R8D,R8D
00003af1(3): SUB RDX,RBX
00003af4(2): XOR ECX,ECX
00003af6(3): MOV RSI,RBX
00003af9(5): CALL 0x00018580
00003afe(4): CMP RAX,-0x2
00003b02(6): JZ 0x0000452a
00003b08(4): CMP RAX,-0x1
00003b0c(6): JZ 0x000046db
00003b12(3): ADD RBX,RAX
00003b15(3): MOV RDI,R13
00003b18(3): MOV RSI,RBX
00003b1b(5): CALL 0x00004fa0
00003b20(7): MOV RCX,qword ptr [0x002210c8]
00003b27(7): LEA RDI,[0x1b8af]
00003b2e(5): MOV EDX,0x2
00003b33(5): MOV ESI,0x1
00003b38(5): CALL 0x00001f80
00003b3d(3): MOV RDI,RBX
00003b40(3): MOV RSI,RBP
00003b43(5): CALL 0x00004fa0
00003b48(7): MOV RCX,qword ptr [0x002210c8]
00003b4f(7): LEA RDI,[0x1b8af]
00003b56(5): MOV EDX,0x2
00003b5b(5): MOV ESI,0x1
00003b60(5): CALL 0x00001f80
00003b65(7): MOV RDI,qword ptr [0x00221140]
00003b6c(7): MOV RSI,qword ptr [0x00221148]
00003b73(5): CALL 0x00004fa0
00003b78(7): MOV RDI,qword ptr [0x002210c8]
00003b7f(4): MOV RAX,qword ptr [RDI + 0x28]
00003b83(4): CMP RAX,qword ptr [RDI + 0x30]
00003b87(6): JNC 0x000046cc
00003b8d(4): LEA RDX,[RAX + 0x1]
00003b91(4): MOV qword ptr [RDI + 0x28],RDX
00003b95(3): MOV byte ptr [RAX],0x7d
00003b98(7): CMP byte ptr [0x0022188a],0x0
00003b9f(2): JNZ 0x00003baa
00003ba1(7): CMP byte ptr [0x00221889],0x0
00003ba8(2): JZ 0x00003bfd
00003baa(7): MOV RDI,qword ptr [0x002210c8]
00003bb1(4): MOV RAX,qword ptr [RDI + 0x28]
00003bb5(4): CMP RAX,qword ptr [RDI + 0x30]
00003bb9(6): JNC 0x00004681
00003bbf(4): LEA RDX,[RAX + 0x1]
00003bc3(4): MOV qword ptr [RDI + 0x28],RDX
00003bc7(3): MOV byte ptr [RAX],0x7b
00003bca(7): MOV RDI,qword ptr [0x00221120]
00003bd1(7): MOV RSI,qword ptr [0x00221128]
00003bd8(5): CALL 0x00004fa0
00003bdd(7): MOV RDI,qword ptr [0x002210c8]
00003be4(4): MOV RAX,qword ptr [RDI + 0x28]
00003be8(4): CMP RAX,qword ptr [RDI + 0x30]
00003bec(6): JNC 0x00004690
00003bf2(4): LEA RDX,[RAX + 0x1]
00003bf6(4): MOV qword ptr [RDI + 0x28],RDX
00003bfa(3): MOV byte ptr [RAX],0x7d
00003bfd(7): MOV RDI,qword ptr [0x002210c8]
00003c04(4): MOV RAX,qword ptr [RDI + 0x28]
00003c08(4): CMP RAX,qword ptr [RDI + 0x30]
00003c0c(6): JNC 0x00004806
00003c12(4): LEA RDX,[RAX + 0x1]
00003c16(4): MOV qword ptr [RDI + 0x28],RDX
00003c1a(3): MOV byte ptr [RAX],0xa
00003c1d(6): ADD qword ptr [RSP + 0x10],0x1
00003c23(4): ADD R12,0x30
00003c27(5): MOV RAX,qword ptr [RSP + 0x10]
00003c2c(7): CMP RAX,qword ptr [0x002212e0]
00003c33(6): JL 0x00002da1
00003c39(2): XOR EAX,EAX
00003c3b(8): MOV RSI,qword ptr [0x88 + RSP]
00003c43(9): XOR RSI,qword ptr FS:[0x28]
00003c4c(6): JNZ 0x0000473f
00003c52(7): ADD RSP,0x98
00003c59(1): POP RBX
00003c5a(1): POP RBP
00003c5b(2): POP R12
00003c5d(2): POP R13
00003c5f(2): POP R14
00003c61(2): POP R15
00003c63(1): RET
00003c64(3): MOVZX ECX,byte ptr [RSI]
00003c67(7): LEA RDI,[0x221380]
00003c6e(4): CMP byte ptr [RDI + RCX*0x1],0x0
00003c72(2): JNZ 0x00003c85
00003c74(4): ADD RSI,0x1
00003c78(4): MOV qword ptr [R13],RSI
00003c7c(4): LEA RAX,[RSI + R14*0x1]
00003c80(5): JMP 0x000038c9
00003c85(3): CMP RDX,RSI
00003c88(6): JBE 0x000038c9
00003c8e(4): LEA RAX,[RSI + 0x1]
00003c92(2): JMP 0x00003ca8
00003c94(3): MOVZX ECX,byte ptr [RSI]
00003c97(7): LEA RDI,[0x221380]
00003c9e(4): LEA RAX,[RAX + 0x1]
00003ca2(4): CMP byte ptr [RDI + RCX*0x1],0x0
00003ca6(2): JZ 0x00003c78
00003ca8(3): CMP RDX,RAX
00003cab(3): MOV RSI,RAX
00003cae(2): JNZ 0x00003c94
00003cb0(4): MOV qword ptr [R13],RDX
00003cb4(4): LEA RAX,[RDX + R14*0x1]
00003cb8(5): JMP 0x000038c9
00003cbd(11): MOV qword ptr [0x00221140],0x0
00003cc8(11): MOV qword ptr [0x00221148],0x0
00003cd3(7): MOV byte ptr [0x00221130],0x0
00003cda(5): JMP 0x00003984
00003cdf(7): MOVZX ECX,byte ptr [0x00221889]
00003ce6(2): TEST CL,CL
00003ce8(6): JZ 0x00003a0a
00003cee(7): LEA RSI,[0x221160]
00003cf5(5): MOV RAX,qword ptr [R12 + 0x20]
00003cfa(3): ADD RAX,qword ptr [RSI]
00003cfd(3): CMP RBP,RAX
00003d00(7): MOV qword ptr [0x00221120],RAX
00003d07(7): MOV qword ptr [0x00221128],RAX
00003d0e(6): JBE 0x00003a0a
00003d14(4): MOV RSI,qword ptr [RSP]
00003d18(3): MOV RSI,qword ptr [RSI]
00003d1b(2): JMP 0x00003d2c
00003d1d(4): ADD RAX,0x1
00003d21(2): MOV EDX,ECX
00003d23(3): CMP RBP,RAX
00003d26(6): JZ 0x00004754
00003d2c(3): MOVZX EDI,byte ptr [RAX]
00003d2f(5): TEST byte ptr [RSI + RDI*0x2 + 0x1],0x20
00003d34(2): JZ 0x00003d1d
00003d36(2): TEST DL,DL
00003d38(6): JZ 0x00003a0a
00003d3e(7): MOV qword ptr [0x00221128],RAX
00003d45(5): JMP 0x00003a0a
00003d4a(4): LEA RBX,[RSI + RCX*0x1]
00003d4e(5): JMP 0x000034cf
00003d53(5): MOV RCX,qword ptr [R12 + 0x10]
00003d58(7): LEA RAX,[0x221160]
00003d5f(3): MOV RSI,qword ptr [RAX]
00003d62(5): JMP 0x0000340e
00003d67(7): MOV qword ptr [0x00221180],R14
00003d6e(5): JMP 0x00003614
00003d73(11): MOV qword ptr [0x002211a0],0x0
00003d7e(11): MOV qword ptr [0x002211a8],0x0
00003d89(7): MOV byte ptr [0x00221190],0x0
00003d90(7): MOV RDX,qword ptr [0x00221168]
00003d97(5): JMP 0x00003846
00003d9c(7): MOV qword ptr [0x002211a0],R9
00003da3(5): JMP 0x0000367a
00003da8(7): MOV RDX,qword ptr [0x00221168]
00003daf(7): MOV RCX,qword ptr [0x002211a0]
00003db6(5): JMP 0x000037d9
00003dbb(7): MOV byte ptr [0x00221170],0x0
00003dc2(5): JMP 0x000035de
00003dc7(3): MOV RAX,R13
00003dca(5): JMP 0x000035d2
00003dcf(7): MOV byte ptr [0x00221190],0x0
00003dd6(5): JMP 0x00003846
00003ddb(7): MOV RDX,qword ptr [0x00221028]
00003de2(7): LEA RSI,[0x1b8a4]
00003de9(5): MOV EDI,0x1
00003dee(2): XOR EAX,EAX
00003df0(5): CALL 0x00001fb0
00003df5(7): MOV RDI,qword ptr [0x002211a0]
00003dfc(7): MOV RSI,qword ptr [0x002211a8]
00003e03(5): CALL 0x00004fa0
00003e08(7): CMP byte ptr [0x00221190],0x0
00003e0f(2): JZ 0x00003e24
00003e11(7): MOV RSI,qword ptr [0x002210c8]
00003e18(7): MOV RDI,qword ptr [0x00221030]
00003e1f(5): CALL 0x00001eb0
00003e24(7): MOV RDI,qword ptr [0x002210c8]
00003e2b(4): MOV RAX,qword ptr [RDI + 0x28]
00003e2f(4): CMP RAX,qword ptr [RDI + 0x30]
00003e33(6): JNC 0x000046f4
00003e39(4): LEA RDX,[RAX + 0x1]
00003e3d(4): MOV qword ptr [RDI + 0x28],RDX
00003e41(3): MOV byte ptr [RAX],0x22
00003e44(7): MOV RCX,qword ptr [0x002210c8]
00003e4b(7): LEA RDI,[0x1b8a7]
00003e52(5): MOV EDX,0x2
00003e57(5): MOV ESI,0x1
00003e5c(5): CALL 0x00001f80
00003e61(7): CMP byte ptr [0x00221170],0x0
00003e68(2): JZ 0x00003e7d
00003e6a(7): MOV RSI,qword ptr [0x002210c8]
00003e71(7): MOV RDI,qword ptr [0x00221030]
00003e78(5): CALL 0x00001eb0
00003e7d(7): MOV RDI,qword ptr [0x00221180]
00003e84(7): MOV RSI,qword ptr [0x00221188]
00003e8b(5): CALL 0x00004fa0
00003e90(7): MOV RDI,qword ptr [0x002210c8]
00003e97(4): MOV RAX,qword ptr [RDI + 0x28]
00003e9b(4): CMP RAX,qword ptr [RDI + 0x30]
00003e9f(6): JNC 0x000046e5
00003ea5(4): LEA RDX,[RAX + 0x1]
00003ea9(4): MOV qword ptr [RDI + 0x28],RDX
00003ead(3): MOV byte ptr [RAX],0x22
00003eb0(7): MOV RCX,qword ptr [0x002210c8]
00003eb7(7): LEA RDI,[0x1b8a7]
00003ebe(5): MOV EDX,0x2
00003ec3(5): MOV ESI,0x1
00003ec8(5): CALL 0x00001f80
00003ecd(7): LEA RAX,[0x221160]
00003ed4(7): MOV RSI,qword ptr [0x00221168]
00003edb(3): MOV RDI,qword ptr [RAX]
00003ede(5): CALL 0x00004fa0
00003ee3(7): CMP byte ptr [0x00221150],0x0
00003eea(2): JZ 0x00003eff
00003eec(7): MOV RSI,qword ptr [0x002210c8]
00003ef3(7): MOV RDI,qword ptr [0x00221030]
00003efa(5): CALL 0x00001eb0
00003eff(7): MOV RDI,qword ptr [0x002210c8]
00003f06(4): MOV RAX,qword ptr [RDI + 0x28]
00003f0a(4): CMP RAX,qword ptr [RDI + 0x30]
00003f0e(6): JNC 0x000046bd
00003f14(4): LEA RDX,[RAX + 0x1]
00003f18(4): MOV qword ptr [RDI + 0x28],RDX
00003f1c(3): MOV byte ptr [RAX],0x22
00003f1f(7): MOV RCX,qword ptr [0x002210c8]
00003f26(7): LEA RDI,[0x1b8a7]
00003f2d(5): MOV EDX,0x2
00003f32(5): MOV ESI,0x1
00003f37(5): CALL 0x00001f80
00003f3c(7): CMP byte ptr [0x00221130],0x0
00003f43(2): JZ 0x00003f58
00003f45(7): MOV RSI,qword ptr [0x002210c8]
00003f4c(7): MOV RDI,qword ptr [0x00221030]
00003f53(5): CALL 0x00001eb0
00003f58(7): MOV RDI,qword ptr [0x00221140]
00003f5f(7): MOV RSI,qword ptr [0x00221148]
00003f66(5): CALL 0x00004fa0
00003f6b(7): MOV RDI,qword ptr [0x002210c8]
00003f72(4): MOV RAX,qword ptr [RDI + 0x28]
00003f76(4): CMP RAX,qword ptr [RDI + 0x30]
00003f7a(6): JNC 0x000046ae
00003f80(4): LEA RDX,[RAX + 0x1]
00003f84(4): MOV qword ptr [RDI + 0x28],RDX
00003f88(3): MOV byte ptr [RAX],0x22
00003f8b(7): CMP byte ptr [0x0022188a],0x0
00003f92(2): JNZ 0x00003fa1
00003f94(7): CMP byte ptr [0x00221889],0x0
00003f9b(6): JZ 0x00003bfd
00003fa1(7): MOV RCX,qword ptr [0x002210c8]
00003fa8(7): LEA RDI,[0x1b8a7]
00003faf(5): MOV EDX,0x2
00003fb4(5): MOV ESI,0x1
00003fb9(5): CALL 0x00001f80
00003fbe(7): MOV RDI,qword ptr [0x00221120]
00003fc5(7): MOV RSI,qword ptr [0x00221128]
00003fcc(5): CALL 0x00004fa0
00003fd1(7): MOV RDI,qword ptr [0x002210c8]
00003fd8(4): MOV RAX,qword ptr [RDI + 0x28]
00003fdc(4): CMP RAX,qword ptr [RDI + 0x30]
00003fe0(6): JNC 0x0000469f
00003fe6(4): LEA RDX,[RAX + 0x1]
00003fea(4): MOV qword ptr [RDI + 0x28],RDX
00003fee(3): MOV byte ptr [RAX],0x22
00003ff1(5): JMP 0x00003bfd
00003ff6(7): CMP byte ptr [0x00221888],0x0
00003ffd(2): JNZ 0x00004067
00003fff(7): CMP byte ptr [0x0022188a],0x0
00004006(7): MOV RDI,qword ptr [0x00221120]
0000400d(7): MOV RSI,qword ptr [0x00221128]
00004014(6): JZ 0x0000421c
0000401a(5): CALL 0x00004fa0
0000401f(7): MOV RDI,qword ptr [0x002210c8]
00004026(4): MOV RAX,qword ptr [RDI + 0x28]
0000402a(4): CMP RAX,qword ptr [RDI + 0x30]
0000402e(6): JNC 0x000047b5
00004034(4): LEA RDX,[RAX + 0x1]
00004038(4): MOV qword ptr [RDI + 0x28],RDX
0000403c(3): MOV byte ptr [RAX],0x3a
0000403f(7): MOV RDI,qword ptr [0x00221010]
00004046(7): MOV RAX,qword ptr [0x00221128]
0000404d(7): ADD RDI,qword ptr [0x00221358]
00004054(7): SUB RAX,qword ptr [0x00221120]
0000405b(3): SUB RDI,RAX
0000405e(4): SUB RDI,0x1
00004062(5): CALL 0x00004f50
00004067(7): MOV RDI,qword ptr [0x002211a0]
0000406e(7): CMP RDI,qword ptr [0x002211a8]
00004075(6): JC 0x000042f3
0000407b(7): MOV RDI,qword ptr [0x002211c8]
00004082(7): MOV RAX,qword ptr [0x00221188]
00004089(7): SUB RDI,qword ptr [0x00221010]
00004090(7): SUB RAX,qword ptr [0x00221180]
00004097(3): SUB RDI,RAX
0000409a(2): XOR EAX,EAX
0000409c(7): CMP byte ptr [0x00221170],0x0
000040a3(2): JZ 0x000040ac
000040a5(7): MOV RAX,qword ptr [0x002211b0]
000040ac(3): SUB RDI,RAX
000040af(5): CALL 0x00004f50
000040b4(7): CMP byte ptr [0x00221170],0x0
000040bb(2): JZ 0x000040d0
000040bd(7): MOV RSI,qword ptr [0x002210c8]
000040c4(7): MOV RDI,qword ptr [0x00221030]
000040cb(5): CALL 0x00001eb0
000040d0(7): MOV RSI,qword ptr [0x00221188]
000040d7(7): MOV RDI,qword ptr [0x00221180]
000040de(5): CALL 0x00004fa0
000040e3(7): MOV RDI,qword ptr [0x00221010]
000040ea(5): CALL 0x00004f50
000040ef(7): LEA RAX,[0x221160]
000040f6(7): MOV RSI,qword ptr [0x00221168]
000040fd(3): MOV RDI,qword ptr [RAX]
00004100(5): CALL 0x00004fa0
00004105(7): CMP byte ptr [0x00221150],0x0
0000410c(6): JNZ 0x0000424a
00004112(7): MOV RCX,qword ptr [0x00221140]
00004119(7): MOV RDX,qword ptr [0x00221148]
00004120(7): LEA R13,[0x221140]
00004127(3): CMP RCX,RDX
0000412a(6): JC 0x00004790
00004130(7): CMP byte ptr [0x0022188a],0x0
00004137(6): JNZ 0x0000420a
0000413d(7): CMP byte ptr [0x00221889],0x0
00004144(6): JZ 0x00003bfd
0000414a(7): CMP byte ptr [0x00221888],0x0
00004151(6): JZ 0x000047dc
00004157(7): LEA RSI,[0x221160]
0000415e(7): MOV RAX,qword ptr [0x00221168]
00004165(7): MOV RDI,qword ptr [0x002211c8]
0000416c(3): SUB RAX,qword ptr [RSI]
0000416f(3): SUB RDI,RAX
00004172(2): XOR EAX,EAX
00004174(7): CMP byte ptr [0x00221150],0x0
0000417b(2): JZ 0x00004184
0000417d(7): MOV RAX,qword ptr [0x002211b0]
00004184(3): SUB RDI,RAX
00004187(5): CALL 0x00004f50
0000418c(7): CMP byte ptr [0x0022188a],0x0
00004193(6): JZ 0x000047dc
00004199(7): CMP byte ptr [0x00221888],0x0
000041a0(6): JZ 0x00003bfd
000041a6(7): MOV RDI,qword ptr [0x00221010]
000041ad(5): CALL 0x00004f50
000041b2(7): MOV RDI,qword ptr [0x00221120]
000041b9(7): MOV RSI,qword ptr [0x00221128]
000041c0(5): CALL 0x00004fa0
000041c5(5): JMP 0x00003bfd
000041ca(3): MOVZX EAX,byte ptr [RBX]
000041cd(7): LEA RDI,[0x221380]
000041d4(4): CMP byte ptr [RDI + RAX*0x1],0x0
000041d8(6): JZ 0x00004365
000041de(3): CMP RBX,RSI
000041e1(2): JC 0x000041fc
000041e3(5): JMP 0x000034cf
000041e8(3): MOVZX EAX,byte ptr [RBX]
000041eb(7): LEA RDI,[0x221380]
000041f2(4): CMP byte ptr [RDI + RAX*0x1],0x0
000041f6(6): JZ 0x000034cf
000041fc(4): ADD RBX,0x1
00004200(3): CMP RBX,RSI
00004203(2): JNZ 0x000041e8
00004205(5): JMP 0x000034cf
0000420a(7): CMP byte ptr [0x00221888],0x0
00004211(6): JNZ 0x00004157
00004217(5): JMP 0x00003bfd
0000421c(5): CALL 0x00004fa0
00004221(7): MOV RDI,qword ptr [0x00221010]
00004228(7): MOV RAX,qword ptr [0x00221128]
0000422f(7): ADD RDI,qword ptr [0x00221358]
00004236(7): SUB RAX,qword ptr [0x00221120]
0000423d(3): SUB RDI,RAX
00004240(5): CALL 0x00004f50
00004245(5): JMP 0x00004067
0000424a(7): MOV RSI,qword ptr [0x002210c8]
00004251(7): MOV RDI,qword ptr [0x00221030]
00004258(7): LEA R13,[0x221140]
0000425f(5): CALL 0x00001eb0
00004264(7): MOV RCX,qword ptr [0x00221140]
0000426b(7): MOV RDX,qword ptr [0x00221148]
00004272(3): CMP RCX,RDX
00004275(6): JNC 0x00004130
0000427b(7): LEA RSI,[0x221160]
00004282(7): MOV RAX,qword ptr [0x00221168]
00004289(3): SUB RAX,qword ptr [RSI]
0000428c(7): MOV RSI,qword ptr [0x002211c8]
00004293(3): SUB RSI,RAX
00004296(3): MOV RAX,RSI
00004299(2): XOR ESI,ESI
0000429b(7): CMP byte ptr [0x00221150],0x0
000042a2(2): JZ 0x000042ab
000042a4(7): MOV RSI,qword ptr [0x002211b0]
000042ab(3): SUB RAX,RSI
000042ae(3): SUB RDX,RCX
000042b1(3): MOV RDI,RAX
000042b4(2): XOR EAX,EAX
000042b6(3): SUB RDI,RDX
000042b9(7): CMP byte ptr [0x00221130],0x0
000042c0(2): JZ 0x000042c9
000042c2(7): MOV RAX,qword ptr [0x002211b0]
000042c9(3): SUB RDI,RAX
000042cc(5): CALL 0x00004f50
000042d1(7): CMP byte ptr [0x00221130],0x0
000042d8(6): JNZ 0x000047c4
000042de(4): MOV RDI,qword ptr [R13]
000042e2(7): MOV RSI,qword ptr [0x00221148]
000042e9(5): CALL 0x00004fa0
000042ee(5): JMP 0x0000418c
000042f3(7): MOV RSI,qword ptr [0x002211a8]
000042fa(5): CALL 0x00004fa0
000042ff(7): CMP byte ptr [0x00221190],0x0
00004306(6): JNZ 0x00004778
0000430c(7): MOV RDI,qword ptr [0x002211c8]
00004313(7): MOV RAX,qword ptr [0x00221188]
0000431a(7): SUB RDI,qword ptr [0x00221010]
00004321(7): SUB RAX,qword ptr [0x00221180]
00004328(3): SUB RDI,RAX
0000432b(2): XOR EAX,EAX
0000432d(7): CMP byte ptr [0x00221170],0x0
00004334(2): JZ 0x0000433d
00004336(7): MOV RAX,qword ptr [0x002211b0]
0000433d(3): SUB RDI,RAX
00004340(7): MOV RAX,qword ptr [0x002211a8]
00004347(7): SUB RAX,qword ptr [0x002211a0]
0000434e(3): SUB RDI,RAX
00004351(2): XOR EAX,EAX
00004353(7): CMP byte ptr [0x00221190],0x0
0000435a(6): JZ 0x000040ac
00004360(5): JMP 0x000040a5
00004365(4): ADD RBX,0x1
00004369(5): JMP 0x000034cf
0000436e(3): MOVZX EAX,byte ptr [RBX]
00004371(7): LEA RSI,[0x221380]
00004378(4): CMP byte ptr [RSI + RAX*0x1],0x0
0000437c(2): JNZ 0x00004387
0000437e(4): ADD RBX,0x1
00004382(5): JMP 0x00003b15
00004387(3): CMP RBP,RBX
0000438a(6): JBE 0x00003b15
00004390(3): MOVZX EAX,byte ptr [RBX]
00004393(7): LEA RSI,[0x221380]
0000439a(4): CMP byte ptr [RSI + RAX*0x1],0x0
0000439e(6): JZ 0x00003b15
000043a4(4): ADD RBX,0x1
000043a8(2): JMP 0x00004387
000043aa(3): MOV R10,R15
000043ad(3): MOV R9,R14
000043b0(7): MOV RDX,qword ptr [0x00221168]
000043b7(5): JMP 0x000037c3
000043bc(7): MOV byte ptr [0x00221202],0x1
000043c3(5): JMP 0x00002d49
000043c8(4): ADD RAX,0x1
000043cc(5): JMP 0x00002cb5
000043d1(11): MOV qword ptr [0x00221030],0x0
000043dc(5): JMP 0x00002c8b
000043e1(3): MOV RAX,RSI
000043e4(5): JMP 0x000035d2
000043e9(5): MOV EDI,0x8
000043ee(10): MOV dword ptr [0x00221318],0x1
000043f8(5): CALL 0x000098c0
000043fd(5): MOV EDI,0x8
00004402(7): MOV qword ptr [0x00221308],RAX
00004409(5): CALL 0x000098c0
0000440e(5): MOV EDI,0x10
00004413(7): MOV qword ptr [0x00221300],RAX
0000441a(5): CALL 0x000098c0
0000441f(7): MOV qword ptr [0x002212f8],RAX
00004426(7): MOVSXD RAX,dword ptr [0x002210d8]
0000442d(5): MOV R13,qword ptr [RBP + RAX*0x8]
00004432(3): MOV R12,RAX
00004435(8): LEA R14,[RAX*0x8]
0000443d(5): CMP byte ptr [R13],0x0
00004442(6): JZ 0x000044f2
00004448(7): LEA RSI,[0x1bc92]
0000444f(3): MOV RDI,R13
00004452(5): CALL 0x00001ed0
00004457(2): TEST EAX,EAX
00004459(7): MOV RDX,qword ptr [0x00221308]
00004460(6): JZ 0x000044f9
00004466(3): MOV qword ptr [RDX],R13
00004469(4): ADD R12D,0x1
0000446d(3): CMP R12D,EBX
00004470(7): MOV dword ptr [0x002210d8],R12D
00004477(6): JGE 0x000026a6
0000447d(5): MOV RDI,qword ptr [RBP + R14*0x1 + 0x8]
00004482(7): MOV RDX,qword ptr [0x002210c8]
00004489(7): LEA RSI,[0x1b88c]
00004490(5): CALL 0x00005de0
00004495(3): TEST RAX,RAX
00004498(6): JZ 0x000045bd
0000449e(6): MOV EAX,dword ptr [0x002210d8]
000044a4(3): ADD EAX,0x1
000044a7(2): CMP EAX,EBX
000044a9(6): MOV dword ptr [0x002210d8],EAX
000044af(6): JGE 0x000026a6
000044b5(2): CDQE
000044b7(5): MOV RDI,qword ptr [RBP + RAX*0x8]
000044bc(5): CALL 0x00008990
000044c1(7): LEA RSI,[0x1b88e]
000044c8(3): MOV RBX,RAX
000044cb(5): MOV EDX,0x5
000044d0(2): XOR EDI,EDI
000044d2(5): CALL 0x00001d80
000044d7(3): MOV RCX,RBX
000044da(3): MOV RDX,RAX
000044dd(2): XOR ESI,ESI
000044df(2): XOR EDI,EDI
000044e1(2): XOR EAX,EAX
000044e3(5): CALL 0x00002000
000044e8(5): MOV EDI,0x1
000044ed(5): CALL 0x000054e0
000044f2(7): MOV RDX,qword ptr [0x00221308]
000044f9(7): MOV qword ptr [RDX],0x0
00004500(5): JMP 0x00004469
00004505(7): CMP byte ptr [0x00221020],0x0
0000450c(2): JZ 0x0000452f
0000450e(7): CMP byte ptr [0x00221889],0x0
00004515(2): JNZ 0x0000452f
00004517(7): LEA RAX,[0x1b688]
0000451e(7): MOV qword ptr [0x00221720],RAX
00004525(5): JMP 0x00002714
0000452a(5): CALL 0x00004a00
0000452f(7): LEA RAX,[0x1c27a]
00004536(7): MOV qword ptr [0x00221720],RAX
0000453d(5): JMP 0x00002714
00004542(5): MOV ESI,0x1
00004547(5): JMP 0x000025b8
0000454c(5): MOV ESI,0x1
00004551(5): JMP 0x00002578
00004556(7): LEA RDX,[0x221380]
0000455d(5): MOV ECX,0x20
00004562(10): MOV RAX,0x101010101010101
0000456c(3): MOV RDI,RDX
0000456f(3): STOSQ.REP RDI
00004572(7): MOV byte ptr [0x002213a0],0x0
00004579(9): MOV word ptr [0x00221389],0x0
00004582(5): JMP 0x000027a4
00004587(7): MOV RDI,qword ptr [0x00221720]
0000458e(5): CALL 0x00008990
00004593(7): LEA RSI,[0x1b6a8]
0000459a(3): MOV RBX,RAX
0000459d(5): MOV EDX,0x5
000045a2(2): XOR EDI,EDI
000045a4(5): CALL 0x00001d80
000045a9(3): MOV RCX,RBX
000045ac(3): MOV RDX,RAX
000045af(2): XOR ESI,ESI
000045b1(5): MOV EDI,0x1
000045b6(2): XOR EAX,EAX
000045b8(5): CALL 0x00002000
000045bd(7): MOVSXD RAX,dword ptr [0x002210d8]
000045c4(5): MOV ESI,0x3
000045c9(2): XOR EDI,EDI
000045cb(5): MOV RDX,qword ptr [RBP + RAX*0x8]
000045d0(5): CALL 0x000087c0
000045d5(3): MOV RBX,RAX
000045d8(5): CALL 0x00001c80
000045dd(2): MOV ESI,dword ptr [RAX]
000045df(7): LEA RDX,[0x1ba14]
000045e6(3): MOV RCX,RBX
000045e9(5): MOV EDI,0x1
000045ee(2): XOR EAX,EAX
000045f0(5): CALL 0x00002000
000045f5(2): XOR EDI,EDI
000045f7(5): CALL 0x000054e0
000045fc(5): MOV ESI,0x1
00004601(5): JMP 0x00002538
00004606(7): MOV RDI,qword ptr [0x002210e0]
0000460d(5): CALL 0x00008990
00004612(7): LEA RSI,[0x1b820]
00004619(3): MOV RBX,RAX
0000461c(5): MOV EDX,0x5
00004621(2): XOR EDI,EDI
00004623(5): CALL 0x00001d80
00004628(3): MOV RCX,RBX
0000462b(3): MOV RDX,RAX
0000462e(2): XOR ESI,ESI
00004630(5): MOV EDI,0x1
00004635(2): XOR EAX,EAX
00004637(5): CALL 0x00002000
0000463c(7): MOV RDI,qword ptr [0x002210e0]
00004643(5): CALL 0x00008990
00004648(7): LEA RSI,[0x1b836]
0000464f(3): MOV RBX,RAX
00004652(5): MOV EDX,0x5
00004657(2): XOR EDI,EDI
00004659(5): CALL 0x00001d80
0000465e(3): MOV RCX,RBX
00004661(3): MOV RDX,RAX
00004664(2): XOR ESI,ESI
00004666(5): MOV EDI,0x1
0000466b(2): XOR EAX,EAX
0000466d(5): CALL 0x00002000
00004672(5): MOV ESI,0x7b
00004677(5): CALL 0x00001e00
0000467c(5): JMP 0x00003a62
00004681(5): MOV ESI,0x7b
00004686(5): CALL 0x00001e00
0000468b(5): JMP 0x00003bca
00004690(5): MOV ESI,0x7d
00004695(5): CALL 0x00001e00
0000469a(5): JMP 0x00003bfd
0000469f(5): MOV ESI,0x22
000046a4(5): CALL 0x00001e00
000046a9(5): JMP 0x00003bfd
000046ae(5): MOV ESI,0x22
000046b3(5): CALL 0x00001e00
000046b8(5): JMP 0x00003f8b
000046bd(5): MOV ESI,0x22
000046c2(5): CALL 0x00001e00
000046c7(5): JMP 0x00003f1f
000046cc(5): MOV ESI,0x7d
000046d1(5): CALL 0x00001e00
000046d6(5): JMP 0x00003b98
000046db(5): MOV EAX,0x1
000046e0(5): JMP 0x00003b12
000046e5(5): MOV ESI,0x22
000046ea(5): CALL 0x00001e00
000046ef(5): JMP 0x00003eb0
000046f4(5): MOV ESI,0x22
000046f9(5): CALL 0x00001e00
000046fe(5): JMP 0x00003e44
00004703(7): MOV qword ptr [0x00221188],RAX
0000470a(5): JMP 0x00003523
0000470f(7): MOV qword ptr [0x002211a8],RAX
00004716(5): JMP 0x00003846
0000471b(3): MOV qword ptr [R15],RSI
0000471e(4): LEA RAX,[RSI + RCX*0x1]
00004722(5): JMP 0x00003538
00004727(7): MOV qword ptr [0x00221148],R13
0000472e(5): JMP 0x000038ad
00004733(7): MOV qword ptr [0x00221140],RBX
0000473a(5): JMP 0x00003984
0000473f(5): CALL 0x00001db0
00004744(11): MOV qword ptr [0x002211c0],0x0
0000474f(5): JMP 0x00002cb5
00004754(7): MOV qword ptr [0x00221128],RBP
0000475b(5): JMP 0x00003a0a
00004760(7): MOV qword ptr [0x00221148],RAX
00004767(5): JMP 0x000038ad
0000476c(7): MOV qword ptr [0x00221180],RSI
00004773(5): JMP 0x00003614
00004778(7): MOV RSI,qword ptr [0x002210c8]
0000477f(7): MOV RDI,qword ptr [0x00221030]
00004786(5): CALL 0x00001eb0
0000478b(5): JMP 0x0000430c
00004790(7): LEA RSI,[0x221160]
00004797(7): MOV RAX,qword ptr [0x00221168]
0000479e(3): SUB RAX,qword ptr [RSI]
000047a1(7): MOV RSI,qword ptr [0x002211c8]
000047a8(3): SUB RSI,RAX
000047ab(3): MOV RAX,RSI
000047ae(2): XOR ESI,ESI
000047b0(5): JMP 0x000042ab
000047b5(5): MOV ESI,0x3a
000047ba(5): CALL 0x00001e00
000047bf(5): JMP 0x0000403f
000047c4(7): MOV RSI,qword ptr [0x002210c8]
000047cb(7): MOV RDI,qword ptr [0x00221030]
000047d2(5): CALL 0x00001eb0
000047d7(5): JMP 0x000042de
000047dc(7): CMP byte ptr [0x00221889],0x0
000047e3(6): JNZ 0x00004199
000047e9(5): JMP 0x00003bfd
000047ee(7): MOV qword ptr [0x00221188],RBX
000047f5(5): JMP 0x00003523
000047fa(7): MOV qword ptr [0x00221168],RAX
00004801(5): JMP 0x00003472
00004806(5): MOV ESI,0xa
0000480b(5): CALL 0x00001e00
00004810(5): JMP 0x00003c1d
00004815(7): MOV qword ptr [0x00221168],RSI
0000481c(5): JMP 0x00003472
00004821(5): MOV ESI,0x1
00004826(5): JMP 0x000031d7
0000482b(7): MOV qword ptr [0x00221310],R9
00004832(3): MOV R10,R9
00004835(5): JMP 0x00003094
00004840(2): XOR EBP,EBP
00004842(3): MOV R9,RDX
00004845(1): POP RSI
00004846(3): MOV RDX,RSP
00004849(4): AND RSP,-0x10
0000484d(1): PUSH RAX
0000484e(1): PUSH RSP
0000484f(7): LEA R8,[0x1aec0]
00004856(7): LEA RCX,[0x1ae50]
0000485d(7): LEA RDI,[0x2190]
00004864(6): CALL qword ptr [0x00220fc8]
0000486a(1): HLT
00004870(7): LEA RDI,[0x2210c0]
00004877(1): PUSH RBP
00004878(7): LEA RAX,[0x2210c0]
0000487f(3): CMP RAX,RDI
00004882(3): MOV RBP,RSP
00004885(2): JZ 0x000048a0
00004887(7): MOV RAX,qword ptr [0x00220fc0]
0000488e(3): TEST RAX,RAX
00004891(2): JZ 0x000048a0
00004893(1): POP RBP
00004894(2): JMP RAX
000048a0(1): POP RBP
000048a1(1): RET
000048b0(7): LEA RDI,[0x2210c0]
000048b7(7): LEA RSI,[0x2210c0]
000048be(1): PUSH RBP
000048bf(3): SUB RSI,RDI
000048c2(3): MOV RBP,RSP
000048c5(4): SAR RSI,0x3
000048c9(3): MOV RAX,RSI
000048cc(4): SHR RAX,0x3f
000048d0(3): ADD RSI,RAX
000048d3(3): SAR RSI,1
000048d6(2): JZ 0x000048f0
000048d8(7): MOV RAX,qword ptr [0x00220fd8]
000048df(3): TEST RAX,RAX
000048e2(2): JZ 0x000048f0
000048e4(1): POP RBP
000048e5(2): JMP RAX
000048f0(1): POP RBP
000048f1(1): RET
00004900(7): CMP byte ptr [0x00221108],0x0
00004907(2): JNZ 0x00004938
00004909(8): CMP qword ptr [0x00220fe0],0x0
00004911(1): PUSH RBP
00004912(3): MOV RBP,RSP
00004915(2): JZ 0x00004923
00004917(7): MOV RDI,qword ptr [0x00221008]
0000491e(5): CALL 0x00002110
00004923(5): CALL 0x00004870
00004928(7): MOV byte ptr [0x00221108],0x1
0000492f(1): POP RBP
00004930(1): RET
00004938(2): RET
00004940(1): PUSH RBP
00004941(3): MOV RBP,RSP
00004944(1): POP RBP
00004945(5): JMP 0x000048b0
00004950(4): MOV R10,qword ptr [RSI + 0x8]
00004954(4): MOV R9,qword ptr [RDI + 0x8]
00004958(3): CMP R10,R9
0000495b(3): MOV R8,R9
0000495e(4): CMOVLE R8,R10
00004962(7): CMP byte ptr [0x00221880],0x0
00004969(2): JNZ 0x000049b0
0000496b(3): TEST R8,R8
0000496e(2): JLE 0x0000499d
00004970(3): MOV RDI,qword ptr [RDI]
00004973(3): MOV RSI,qword ptr [RSI]
00004976(3): MOVZX EAX,byte ptr [RDI]
00004979(3): MOVZX EDX,byte ptr [RSI]
0000497c(2): SUB EAX,EDX
0000497e(2): JNZ 0x000049ae
00004980(2): XOR EDX,EDX
00004982(2): JMP 0x00004994
00004988(4): MOVZX EAX,byte ptr [RDI + RDX*0x1]
0000498c(4): MOVZX ECX,byte ptr [RSI + RDX*0x1]
00004990(2): SUB EAX,ECX
00004992(2): JNZ 0x000049ae
00004994(4): ADD RDX,0x1
00004998(3): CMP R8,RDX
0000499b(2): JNZ 0x00004988
0000499d(3): CMP R10,R9
000049a0(2): JG 0x000049a9
000049a2(3): SETL AL
000049a5(3): MOVZX EAX,AL
000049a8(1): RET
000049a9(5): MOV EAX,0xffffffff
000049ae(2): RET
000049b0(3): TEST R8,R8
000049b3(2): JLE 0x0000499d
000049b5(3): MOV R11,qword ptr [RSI]
000049b8(3): MOV RDI,qword ptr [RDI]
000049bb(7): LEA RSI,[0x2214c0]
000049c2(3): MOVZX EAX,byte ptr [RDI]
000049c5(4): MOVZX EDX,byte ptr [R11]
000049c9(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
000049cd(4): MOVZX EDX,byte ptr [RSI + RDX*0x1]
000049d1(2): SUB EAX,EDX
000049d3(2): JNZ 0x000049ae
000049d5(2): XOR EDX,EDX
000049d7(2): JMP 0x000049f5
000049e0(4): MOVZX EAX,byte ptr [RDI + RDX*0x1]
000049e4(5): MOVZX ECX,byte ptr [R11 + RDX*0x1]
000049e9(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
000049ed(4): MOVZX ECX,byte ptr [RSI + RCX*0x1]
000049f1(2): SUB EAX,ECX
000049f3(2): JNZ 0x000049ae
000049f5(4): ADD RDX,0x1
000049f9(3): CMP R8,RDX
000049fc(2): JNZ 0x000049e0
000049fe(2): JMP 0x0000499d
00004a00(1): PUSH RBX
00004a01(7): LEA RSI,[0x1af08]
00004a08(5): MOV EDX,0x5
00004a0d(2): XOR EDI,EDI
00004a0f(5): CALL 0x00001d80
00004a14(3): MOV RBX,RAX
00004a17(5): CALL 0x00001c80
00004a1c(2): MOV ESI,dword ptr [RAX]
00004a1e(3): MOV RDX,RBX
00004a21(5): MOV EDI,0x1
00004a26(2): XOR EAX,EAX
00004a28(5): CALL 0x00002000
00004a2d(3): NOP dword ptr [RAX]
00004a30(2): PUSH R12
00004a32(1): PUSH RBP
00004a33(1): PUSH RBX
00004a34(3): MOV RBX,RDI
00004a37(5): CALL 0x00001da0
00004a3c(4): LEA RDI,[RAX + 0x1]
00004a40(5): CALL 0x000098c0
00004a45(3): MOV R12,RAX
00004a48(3): MOVZX EAX,byte ptr [RBX]
00004a4b(3): MOV RBP,R12
00004a4e(2): TEST AL,AL
00004a50(2): JZ 0x00004a6e
00004a52(2): CMP AL,0x5c
00004a54(4): MOVZX EDX,byte ptr [RBX + 0x1]
00004a58(4): LEA RCX,[RBX + 0x1]
00004a5c(2): JZ 0x00004a80
00004a5e(3): MOV byte ptr [RBP],AL
00004a61(2): MOV EAX,EDX
00004a63(4): ADD RBP,0x1
00004a67(2): TEST AL,AL
00004a69(3): MOV RBX,RCX
00004a6c(2): JNZ 0x00004a52
00004a6e(4): MOV byte ptr [RBP],0x0
00004a72(3): MOV RAX,R12
00004a75(1): POP RBX
00004a76(1): POP RBP
00004a77(2): POP R12
00004a79(1): RET
00004a80(3): CMP DL,0x66
00004a83(6): JZ 0x00004c20
00004a89(2): JG 0x00004ac8
00004a8b(3): CMP DL,0x61
00004a8e(6): JZ 0x00004c38
00004a94(6): JLE 0x00004b68
00004a9a(3): CMP DL,0x62
00004a9d(6): JZ 0x00004c68
00004aa3(3): CMP DL,0x63
00004aa6(6): JNZ 0x00004bb8
00004aac(4): NOP dword ptr [RAX]
00004ab0(4): ADD RCX,0x1
00004ab4(3): CMP byte ptr [RCX],0x0
00004ab7(2): JZ 0x00004a6e
00004ab9(4): ADD RCX,0x1
00004abd(3): CMP byte ptr [RCX],0x0
00004ac0(2): JNZ 0x00004ab0
00004ac2(2): JMP 0x00004a6e
00004ac8(3): CMP DL,0x74
00004acb(6): JZ 0x00004c50
00004ad1(2): JLE 0x00004b40
00004ad3(3): CMP DL,0x76
00004ad6(6): JZ 0x00004bf0
00004adc(3): CMP DL,0x78
00004adf(6): JNZ 0x00004bb8
00004ae5(5): CALL 0x000020e0
00004aea(3): MOV R8,qword ptr [RAX]
00004aed(4): ADD RBX,0x2
00004af1(2): XOR EDI,EDI
00004af3(2): XOR ECX,ECX
00004af5(3): MOVSX EDX,byte ptr [RBX]
00004af8(3): MOVZX ESI,DL
00004afb(2): MOV EAX,EDX
00004afd(6): TEST byte ptr [R8 + RSI*0x2 + 0x1],0x10
00004b03(6): JZ 0x00004c90
00004b09(2): MOV ESI,ECX
00004b0b(3): LEA ECX,[RAX + -0x61]
00004b0e(3): SHL ESI,0x4
00004b11(3): CMP CL,0x5
00004b14(6): JA 0x00004bd0
00004b1a(3): LEA EAX,[RDX + -0x57]
00004b1d(3): ADD EDI,0x1
00004b20(4): ADD RBX,0x1
00004b24(3): LEA ECX,[RSI + RAX*0x1]
00004b27(3): CMP EDI,0x3
00004b2a(2): JNZ 0x00004af5
00004b2c(3): MOV byte ptr [RBP],CL
00004b2f(3): MOVZX EAX,byte ptr [RBX]
00004b32(4): ADD RBP,0x1
00004b36(5): JMP 0x00004a4e
00004b40(3): CMP DL,0x6e
00004b43(6): JZ 0x00004c08
00004b49(3): CMP DL,0x72
00004b4c(2): JNZ 0x00004bb8
00004b4e(4): MOV byte ptr [RBP],0xd
00004b52(4): MOVZX EAX,byte ptr [RBX + 0x2]
00004b56(4): ADD RBP,0x1
00004b5a(4): ADD RBX,0x2
00004b5e(5): JMP 0x00004a4e
00004b68(2): TEST DL,DL
00004b6a(6): JZ 0x00004a6e
00004b70(3): CMP DL,0x30
00004b73(2): JNZ 0x00004bb8
00004b75(4): LEA RDX,[RBX + 0x2]
00004b79(3): MOVSX EAX,byte ptr [RDX]
00004b7c(2): XOR ECX,ECX
00004b7e(4): LEA RDI,[RBX + 0x5]
00004b82(3): LEA ESI,[RAX + -0x30]
00004b85(4): CMP SIL,0x7
00004b89(2): JA 0x00004bab
00004b8b(4): LEA RBX,[RDX + 0x1]
00004b8f(4): LEA ECX,[RAX + RCX*0x8 + -0x30]
00004b93(3): CMP RDI,RBX
00004b96(6): JZ 0x00004c80
00004b9c(3): MOV RDX,RBX
00004b9f(3): MOVSX EAX,byte ptr [RDX]
00004ba2(3): LEA ESI,[RAX + -0x30]
00004ba5(4): CMP SIL,0x7
00004ba9(2): JBE 0x00004b8b
00004bab(3): MOV RBX,RDX
00004bae(5): JMP 0x00004c84
00004bb8(4): MOV byte ptr [RBP],0x5c
00004bbc(3): MOV byte ptr [RBP + 0x1],DL
00004bbf(4): ADD RBX,0x2
00004bc3(3): MOVZX EAX,byte ptr [RBX]
00004bc6(4): ADD RBP,0x2
00004bca(5): JMP 0x00004a4e
00004bd0(4): LEA R9D,[RAX + -0x41]
00004bd4(3): LEA ECX,[RDX + -0x30]
00004bd7(3): LEA EAX,[RDX + -0x37]
00004bda(4): CMP R9B,0x5
00004bde(3): CMOVA EAX,ECX
00004be1(5): JMP 0x00004b1d
00004bf0(4): MOV byte ptr [RBP],0xb
00004bf4(4): MOVZX EAX,byte ptr [RBX + 0x2]
00004bf8(4): ADD RBP,0x1
00004bfc(4): ADD RBX,0x2
00004c00(5): JMP 0x00004a4e
00004c08(4): MOV byte ptr [RBP],0xa
00004c0c(4): MOVZX EAX,byte ptr [RBX + 0x2]
00004c10(4): ADD RBP,0x1
00004c14(4): ADD RBX,0x2
00004c18(5): JMP 0x00004a4e
00004c20(4): MOV byte ptr [RBP],0xc
00004c24(4): MOVZX EAX,byte ptr [RBX + 0x2]
00004c28(4): ADD RBP,0x1
00004c2c(4): ADD RBX,0x2
00004c30(5): JMP 0x00004a4e
00004c38(4): MOV byte ptr [RBP],0x7
00004c3c(4): MOVZX EAX,byte ptr [RBX + 0x2]
00004c40(4): ADD RBP,0x1
00004c44(4): ADD RBX,0x2
00004c48(5): JMP 0x00004a4e
00004c50(4): MOV byte ptr [RBP],0x9
00004c54(4): MOVZX EAX,byte ptr [RBX + 0x2]
00004c58(4): ADD RBP,0x1
00004c5c(4): ADD RBX,0x2
00004c60(5): JMP 0x00004a4e
00004c68(4): MOV byte ptr [RBP],0x8
00004c6c(4): MOVZX EAX,byte ptr [RBX + 0x2]
00004c70(4): ADD RBP,0x1
00004c74(4): ADD RBX,0x2
00004c78(5): JMP 0x00004a4e
00004c80(4): MOVZX EAX,byte ptr [RDX + 0x1]
00004c84(3): MOV byte ptr [RBP],CL
00004c87(4): ADD RBP,0x1
00004c8b(5): JMP 0x00004a4e
00004c90(2): TEST EDI,EDI
00004c92(6): JNZ 0x00004b2c
00004c98(5): MOV EDX,0x785c
00004c9d(4): ADD RBP,0x2
00004ca1(4): MOV word ptr [RBP + -0x2],DX
00004ca5(5): JMP 0x00004a4e
00004cb0(7): CMP byte ptr [0x00221880],0x0
00004cb7(4): LEA RAX,[RDI + 0x48]
00004cbb(2): PUSH R12
00004cbd(1): PUSH RBP
00004cbe(1): PUSH RBX
00004cbf(5): MOV EDX,0x0
00004cc4(3): MOV RBX,qword ptr [RDI]
00004cc7(4): MOV qword ptr [RDI + 0x28],RAX
00004ccb(7): LEA RAX,[0x2214c0]
00004cd2(4): LEA RBP,[RDI + 0x8]
00004cd6(8): MOV qword ptr [RDI + 0x8],0x0
00004cde(8): MOV qword ptr [RDI + 0x10],0x0
00004ce6(4): CMOVZ RAX,RDX
00004cea(4): MOV qword ptr [RDI + 0x30],RAX
00004cee(3): MOV RDI,RBX
00004cf1(5): CALL 0x00001da0
00004cf6(3): MOV RDX,RBP
00004cf9(3): MOV RSI,RAX
00004cfc(3): MOV RDI,RBX
00004cff(5): CALL 0x00017c00
00004d04(3): TEST RAX,RAX
00004d07(2): JNZ 0x00004d15
00004d09(1): POP RBX
00004d0a(3): MOV RDI,RBP
00004d0d(1): POP RBP
00004d0e(2): POP R12
00004d10(5): JMP 0x00017c80
00004d15(3): MOV RDI,RBX
00004d18(3): MOV R12,RAX
00004d1b(5): CALL 0x00008990
00004d20(7): LEA RSI,[0x1b6e1]
00004d27(3): MOV RBX,RAX
00004d2a(5): MOV EDX,0x5
00004d2f(2): XOR EDI,EDI
00004d31(5): CALL 0x00001d80
00004d36(3): MOV R8,RBX
00004d39(3): MOV RDX,RAX
00004d3c(3): MOV RCX,R12
00004d3f(2): XOR ESI,ESI
00004d41(5): MOV EDI,0x1
00004d46(2): XOR EAX,EAX
00004d48(5): CALL 0x00002000
00004d4d(3): NOP dword ptr [RAX]
00004d50(1): PUSH RBP
00004d51(1): PUSH RBX
00004d52(3): MOV RBP,RSI
00004d55(4): SUB RSP,0x18
00004d59(9): MOV RAX,qword ptr FS:[0x28]
00004d62(5): MOV qword ptr [RSP + 0x8],RAX
00004d67(2): XOR EAX,EAX
00004d69(3): TEST RDI,RDI
00004d6c(2): JZ 0x00004d76
00004d6e(3): CMP byte ptr [RDI],0x0
00004d71(3): MOV RBX,RDI
00004d74(2): JNZ 0x00004db8
00004d76(7): MOV RDI,qword ptr [0x002210d0]
00004d7d(3): MOV RSI,RSP
00004d80(5): CALL 0x000089b0
00004d85(3): TEST RAX,RAX
00004d88(4): MOV qword ptr [RBP],RAX
00004d8c(6): JZ 0x00004e1a
00004d92(4): ADD RAX,qword ptr [RSP]
00004d96(4): MOV qword ptr [RBP + 0x8],RAX
00004d9a(5): MOV RAX,qword ptr [RSP + 0x8]
00004d9f(9): XOR RAX,qword ptr FS:[0x28]
00004da8(2): JNZ 0x00004e15
00004daa(4): ADD RSP,0x18
00004dae(1): POP RBX
00004daf(1): POP RBP
00004db0(1): RET
00004db8(7): LEA RDI,[0x1bc92]
00004dbf(5): MOV ECX,0x2
00004dc4(3): MOV RSI,RBX
00004dc7(2): CMPSB.REPE RDI,RSI
00004dc9(3): SETA AL
00004dcc(2): SBB AL,0x0
00004dce(2): TEST AL,AL
00004dd0(2): JZ 0x00004d76
00004dd2(3): MOV RSI,RSP
00004dd5(3): MOV RDI,RBX
00004dd8(5): CALL 0x00008c10
00004ddd(3): TEST RAX,RAX
00004de0(4): MOV qword ptr [RBP],RAX
00004de4(2): JNZ 0x00004d92
00004de6(3): MOV RDX,RBX
00004de9(5): MOV ESI,0x3
00004dee(2): XOR EDI,EDI
00004df0(5): CALL 0x000087c0
00004df5(3): MOV RBX,RAX
00004df8(5): CALL 0x00001c80
00004dfd(2): MOV ESI,dword ptr [RAX]
00004dff(7): LEA RDX,[0x1ba14]
00004e06(3): MOV RCX,RBX
00004e09(5): MOV EDI,0x1
00004e0e(2): XOR EAX,EAX
00004e10(5): CALL 0x00002000
00004e15(5): CALL 0x00001db0
00004e1a(7): LEA RBX,[0x1bc92]
00004e21(2): JMP 0x00004de6
00004e30(2): PUSH R13
00004e32(2): PUSH R12
00004e34(3): MOV R12,RSI
00004e37(1): PUSH RBP
00004e38(1): PUSH RBX
00004e39(5): LEA R13,[R12 + 0x8]
00004e3e(4): SUB RSP,0x28
00004e42(3): MOV RSI,RSP
00004e45(9): MOV RAX,qword ptr FS:[0x28]
00004e4e(5): MOV qword ptr [RSP + 0x18],RAX
00004e53(2): XOR EAX,EAX
00004e55(5): CALL 0x00004d50
00004e5a(4): MOV RBP,qword ptr [RSP]
00004e5e(5): MOV RDX,qword ptr [RSP + 0x8]
00004e63(2): XOR ESI,ESI
00004e65(8): MOV qword ptr [R12],0x0
00004e6d(9): MOV qword ptr [R12 + 0x8],0x0
00004e76(2): XOR EDI,EDI
00004e78(9): MOV qword ptr [R12 + 0x10],0x0
00004e81(3): CMP RBP,RDX
00004e84(2): JNC 0x00004eb3
00004e86(4): CMP byte ptr [RBP],0xa
00004e8a(3): MOV RBX,RBP
00004e8d(2): JNZ 0x00004e9d
00004e8f(5): JMP 0x00004f11
00004e98(3): CMP byte ptr [RBX],0xa
00004e9b(2): JZ 0x00004ee0
00004e9d(4): ADD RBX,0x1
00004ea1(3): CMP RBX,RDX
00004ea4(2): JNZ 0x00004e98
00004ea6(3): CMP RBP,RDX
00004ea9(2): JC 0x00004ee5
00004eab(3): MOV RBP,RDX
00004eae(3): CMP RBP,RDX
00004eb1(2): JC 0x00004e86
00004eb3(7): LEA RCX,[0x4950]
00004eba(5): MOV EDX,0x10
00004ebf(5): CALL 0x00001cf0
00004ec4(5): MOV RAX,qword ptr [RSP + 0x18]
00004ec9(9): XOR RAX,qword ptr FS:[0x28]
00004ed2(2): JNZ 0x00004f42
00004ed4(4): ADD RSP,0x28
00004ed8(1): POP RBX
00004ed9(1): POP RBP
00004eda(2): POP R12
00004edc(2): POP R13
00004ede(1): RET
00004ee0(3): CMP RBP,RBX
00004ee3(2): JNC 0x00004f11
00004ee5(5): CMP RSI,qword ptr [R12 + 0x8]
00004eea(2): JZ 0x00004f1a
00004eec(3): MOV RCX,RSI
00004eef(3): MOV RAX,RBX
00004ef2(4): ADD RSI,0x1
00004ef6(4): SHL RCX,0x4
00004efa(3): SUB RAX,RBP
00004efd(3): ADD RCX,RDI
00004f00(3): CMP RBX,RDX
00004f03(3): MOV qword ptr [RCX],RBP
00004f06(4): MOV qword ptr [RCX + 0x8],RAX
00004f0a(5): MOV qword ptr [R12 + 0x10],RSI
00004f0f(2): JNC 0x00004f3a
00004f11(4): LEA RBP,[RBX + 0x1]
00004f15(5): JMP 0x00004e81
00004f1a(5): MOV EDX,0x10
00004f1f(3): MOV RSI,R13
00004f22(5): CALL 0x00009990
00004f27(5): MOV RSI,qword ptr [R12 + 0x10]
00004f2c(3): MOV RDI,RAX
00004f2f(4): MOV qword ptr [R12],RAX
00004f33(5): MOV RDX,qword ptr [RSP + 0x8]
00004f38(2): JMP 0x00004eec
00004f3a(3): MOV RBP,RBX
00004f3d(5): JMP 0x00004e81
00004f42(5): CALL 0x00001db0
00004f47(9): NOP word ptr [RAX + RAX*0x1]
00004f50(3): TEST RDI,RDI
00004f53(2): JLE 0x00004f98
00004f55(1): PUSH RBX
00004f56(3): MOV RBX,RDI
00004f59(7): NOP dword ptr [RAX]
00004f60(7): MOV RDI,qword ptr [0x002210c8]
00004f67(4): MOV RAX,qword ptr [RDI + 0x28]
00004f6b(4): CMP RAX,qword ptr [RDI + 0x30]
00004f6f(2): JNC 0x00004f88
00004f71(4): LEA RDX,[RAX + 0x1]
00004f75(4): MOV qword ptr [RDI + 0x28],RDX
00004f79(3): MOV byte ptr [RAX],0x20
00004f7c(4): SUB RBX,0x1
00004f80(2): JNZ 0x00004f60
00004f82(1): POP RBX
00004f83(1): RET
00004f88(5): MOV ESI,0x20
00004f8d(5): CALL 0x00001e00
00004f92(2): JMP 0x00004f7c
00004f98(2): RET
00004fa0(3): CMP RSI,RDI
00004fa3(6): JBE 0x000051c0
00004fa9(2): PUSH R15
00004fab(2): PUSH R14
00004fad(7): LEA R14,[0x1ba40]
00004fb4(2): PUSH R13
00004fb6(2): PUSH R12
00004fb8(7): LEA R13,[0x2211e0]
00004fbf(1): PUSH RBP
00004fc0(1): PUSH RBX
00004fc1(7): LEA R12,[0x1b988]
00004fc8(3): MOV RBX,RDI
00004fcb(3): MOV R15,RSI
00004fce(4): SUB RSP,0x18
00004fd2(6): NOP word ptr [RAX + RAX*0x1]
00004fd8(3): MOVZX EDX,byte ptr [RBX]
00004fdb(3): MOVSXD RAX,EDX
00004fde(2): MOV EBP,EDX
00004fe0(6): CMP byte ptr [R13 + RAX*0x1],0x0
00004fe6(6): JZ 0x000050a0
00004fec(5): MOVZX ESI,byte ptr [R14 + RAX*0x1]
00004ff1(3): TEST SIL,SIL
00004ff4(2): JZ 0x00005003
00004ff6(7): CMP dword ptr [0x00221884],0x3
00004ffd(6): JZ 0x00005130
00005003(4): CMP BPL,0x5c
00005007(6): JZ 0x00005158
0000500d(6): JG 0x000050e0
00005013(4): CMP BPL,0x22
00005017(2): JNZ 0x00005078
00005019(7): MOV RDI,qword ptr [0x002210c8]
00005020(4): MOV RAX,qword ptr [RDI + 0x28]
00005024(4): CMP RAX,qword ptr [RDI + 0x30]
00005028(6): JNC 0x00005328
0000502e(4): LEA RDX,[RAX + 0x1]
00005032(4): MOV qword ptr [RDI + 0x28],RDX
00005036(3): MOV byte ptr [RAX],0x22
00005039(7): MOV RDI,qword ptr [0x002210c8]
00005040(4): MOV RAX,qword ptr [RDI + 0x28]
00005044(4): CMP RAX,qword ptr [RDI + 0x30]
00005048(6): JNC 0x00005337
0000504e(4): LEA RDX,[RAX + 0x1]
00005052(4): ADD RBX,0x1
00005056(3): CMP R15,RBX
00005059(4): MOV qword ptr [RDI + 0x28],RDX
0000505d(3): MOV byte ptr [RAX],0x22
00005060(6): JNZ 0x00004fd8
00005066(4): ADD RSP,0x18
0000506a(1): POP RBX
0000506b(1): POP RBP
0000506c(2): POP R12
0000506e(2): POP R13
00005070(2): POP R14
00005072(2): POP R15
00005074(1): RET
00005078(2): JL 0x000050f2
0000507a(4): CMP BPL,0x26
0000507e(2): JG 0x000050f2
00005080(7): MOV RDI,qword ptr [0x002210c8]
00005087(4): MOV RAX,qword ptr [RDI + 0x28]
0000508b(4): CMP RAX,qword ptr [RDI + 0x30]
0000508f(6): JNC 0x00005311
00005095(4): LEA RCX,[RAX + 0x1]
00005099(4): MOV qword ptr [RDI + 0x28],RCX
0000509d(3): MOV byte ptr [RAX],0x5c
000050a0(7): MOV RDI,qword ptr [0x002210c8]
000050a7(4): MOV RAX,qword ptr [RDI + 0x28]
000050ab(4): CMP RAX,qword ptr [RDI + 0x30]
000050af(6): JNC 0x00005180
000050b5(4): LEA RDX,[RAX + 0x1]
000050b9(4): MOV qword ptr [RDI + 0x28],RDX
000050bd(3): MOV byte ptr [RAX],BPL
000050c0(4): ADD RBX,0x1
000050c4(3): CMP R15,RBX
000050c7(6): JNZ 0x00004fd8
000050cd(4): ADD RSP,0x18
000050d1(1): POP RBX
000050d2(1): POP RBP
000050d3(2): POP R12
000050d5(2): POP R13
000050d7(2): POP R14
000050d9(2): POP R15
000050db(1): RET
000050e0(4): CMP BPL,0x7b
000050e4(2): JZ 0x00005118
000050e6(4): CMP BPL,0x7d
000050ea(2): JZ 0x00005118
000050ec(4): CMP BPL,0x5f
000050f0(2): JZ 0x00005080
000050f2(7): MOV RDI,qword ptr [0x002210c8]
000050f9(4): MOV RAX,qword ptr [RDI + 0x28]
000050fd(4): CMP RAX,qword ptr [RDI + 0x30]
00005101(6): JNC 0x00005346
00005107(4): LEA RDX,[RAX + 0x1]
0000510b(4): MOV qword ptr [RDI + 0x28],RDX
0000510f(3): MOV byte ptr [RAX],0x20
00005112(2): JMP 0x000050c0
00005118(7): LEA RSI,[0x1b745]
0000511f(5): MOV EDI,0x1
00005124(2): XOR EAX,EAX
00005126(5): CALL 0x00001fb0
0000512b(2): JMP 0x000050c0
00005130(7): LEA RCX,[0x1bb40]
00005137(4): CMP SIL,0x9
0000513b(4): MOVSX ECX,byte ptr [RCX + RAX*0x1]
0000513f(3): MOV R10D,ECX
00005142(6): JA 0x000050c0
00005148(4): MOVSXD RAX,dword ptr [R12 + RSI*0x4]
0000514c(3): ADD RAX,R12
0000514f(2): JMP RAX
00005158(7): MOV RCX,qword ptr [0x002210c8]
0000515f(7): LEA RDI,[0x1b74b]
00005166(5): MOV EDX,0xc
0000516b(5): MOV ESI,0x1
00005170(5): CALL 0x00001f80
00005175(5): JMP 0x000050c0
00005180(2): MOV ESI,EDX
00005182(5): CALL 0x00001e00
00005187(5): JMP 0x000050c0
00005190(7): LEA RAX,[0x1c27b]
00005197(7): LEA RDX,[0x1b806]
0000519e(3): CMP ECX,0x69
000051a1(7): LEA RSI,[0x1b70c]
000051a8(5): MOV EDI,0x1
000051ad(4): CMOVNZ RDX,RAX
000051b1(2): XOR EAX,EAX
000051b3(5): CALL 0x00001fb0
000051b8(5): JMP 0x000050c0
000051c0(2): RET
000051c2(4): CMP R10B,0x4f
000051c6(7): MOV RCX,qword ptr [0x002210c8]
000051cd(6): JZ 0x00005373
000051d3(4): CMP R10B,0x6f
000051d7(6): JNZ 0x00005355
000051dd(7): LEA RDI,[0x1b73b]
000051e4(5): MOV EDX,0x4
000051e9(5): MOV ESI,0x1
000051ee(5): CALL 0x00001f80
000051f3(5): JMP 0x000050c0
000051f8(7): LEA RAX,[0x1c27b]
000051ff(7): LEA RDX,[0x1b806]
00005206(3): CMP ECX,0x69
00005209(7): LEA RSI,[0x1b713]
00005210(5): MOV EDI,0x1
00005215(4): CMOVNZ RDX,RAX
00005219(2): XOR EAX,EAX
0000521b(5): CALL 0x00001fb0
00005220(5): JMP 0x000050c0
00005225(7): LEA RAX,[0x1c27b]
0000522c(7): LEA RDX,[0x1b806]
00005233(3): CMP ECX,0x69
00005236(7): LEA RSI,[0x1b71a]
0000523d(5): MOV EDI,0x1
00005242(4): CMOVNZ RDX,RAX
00005246(2): XOR EAX,EAX
00005248(5): CALL 0x00001fb0
0000524d(5): JMP 0x000050c0
00005252(7): LEA RAX,[0x1c27b]
00005259(7): LEA RDX,[0x1b806]
00005260(3): CMP ECX,0x69
00005263(7): LEA RSI,[0x1b721]
0000526a(5): MOV EDI,0x1
0000526f(4): CMOVNZ RDX,RAX
00005273(2): XOR EAX,EAX
00005275(5): CALL 0x00001fb0
0000527a(5): JMP 0x000050c0
0000527f(7): LEA RSI,[0x1b728]
00005286(2): MOV EDX,ECX
00005288(5): MOV EDI,0x1
0000528d(2): XOR EAX,EAX
0000528f(5): CALL 0x00001fb0
00005294(5): JMP 0x000050c0
00005299(4): CMP R10B,0x41
0000529d(7): MOV RCX,qword ptr [0x002210c8]
000052a4(6): JZ 0x0000538e
000052aa(4): CMP R10B,0x61
000052ae(6): JNZ 0x00005355
000052b4(7): LEA RDI,[0x1b72f]
000052bb(5): MOV EDX,0x5
000052c0(5): MOV ESI,0x1
000052c5(5): CALL 0x00001f80
000052ca(5): JMP 0x000050c0
000052cf(4): CMP R10B,0x4f
000052d3(7): MOV RCX,qword ptr [0x002210c8]
000052da(6): JZ 0x000053ca
000052e0(6): JLE 0x000053a9
000052e6(4): CMP R10B,0x61
000052ea(6): JZ 0x000053e5
000052f0(4): CMP R10B,0x6f
000052f4(2): JNZ 0x00005355
000052f6(7): LEA RDI,[0x1b6f4]
000052fd(5): MOV EDX,0x5
00005302(5): MOV ESI,0x1
00005307(5): CALL 0x00001f80
0000530c(5): JMP 0x000050c0
00005311(5): MOV ESI,0x5c
00005316(4): MOV dword ptr [RSP + 0xc],EDX
0000531a(5): CALL 0x00001e00
0000531f(4): MOV EDX,dword ptr [RSP + 0xc]
00005323(5): JMP 0x000050a0
00005328(5): MOV ESI,0x22
0000532d(5): CALL 0x00001e00
00005332(5): JMP 0x00005039
00005337(5): MOV ESI,0x22
0000533c(5): CALL 0x00001e00
00005341(5): JMP 0x000050c0
00005346(5): MOV ESI,0x20
0000534b(5): CALL 0x00001e00
00005350(5): JMP 0x000050c0
00005355(4): MOV RAX,qword ptr [RCX + 0x28]
00005359(4): CMP RAX,qword ptr [RCX + 0x30]
0000535d(6): JNC 0x00005400
00005363(4): LEA RDX,[RAX + 0x1]
00005367(4): MOV qword ptr [RCX + 0x28],RDX
0000536b(3): MOV byte ptr [RAX],0x20
0000536e(5): JMP 0x000050c0
00005373(7): LEA RDI,[0x1b740]
0000537a(5): MOV EDX,0x4
0000537f(5): MOV ESI,0x1
00005384(5): CALL 0x00001f80
00005389(5): JMP 0x000050c0
0000538e(7): LEA RDI,[0x1b735]
00005395(5): MOV EDX,0x5
0000539a(5): MOV ESI,0x1
0000539f(5): CALL 0x00001f80
000053a4(5): JMP 0x000050c0
000053a9(4): CMP R10B,0x41
000053ad(2): JNZ 0x00005355
000053af(7): LEA RDI,[0x1b706]
000053b6(5): MOV EDX,0x5
000053bb(5): MOV ESI,0x1
000053c0(5): CALL 0x00001f80
000053c5(5): JMP 0x000050c0
000053ca(7): LEA RDI,[0x1b6fa]
000053d1(5): MOV EDX,0x5
000053d6(5): MOV ESI,0x1
000053db(5): CALL 0x00001f80
000053e0(5): JMP 0x000050c0
000053e5(7): LEA RDI,[0x1b700]
000053ec(5): MOV EDX,0x5
000053f1(5): MOV ESI,0x1
000053f6(5): CALL 0x00001f80
000053fb(5): JMP 0x000050c0
00005400(5): MOV ESI,0x20
00005405(3): MOV RDI,RCX
00005408(5): CALL 0x00001e00
0000540d(5): JMP 0x000050c0
00005420(1): PUSH RBP
00005421(1): PUSH RBX
00005422(3): MOV RBP,RDI
00005425(3): MOV RBX,RSI
00005428(5): CALL 0x00004950
0000542d(2): TEST EAX,EAX
0000542f(2): JNZ 0x00005440
00005431(3): MOV RAX,qword ptr [RBX]
00005434(4): CMP qword ptr [RBP],RAX
00005438(2): JC 0x00005448
0000543a(3): SETA AL
0000543d(3): MOVZX EAX,AL
00005440(1): POP RBX
00005441(1): POP RBP
00005442(1): RET
00005448(5): MOV EAX,0xffffffff
0000544d(2): JMP 0x00005440
00005450(4): SUB RDX,0x1
00005454(2): JS 0x000054ce
00005456(2): PUSH R14
00005458(3): XOR R14D,R14D
0000545b(2): PUSH R13
0000545d(3): MOV R13,RDX
00005460(2): PUSH R12
00005462(3): MOV R12,RSI
00005465(1): PUSH RBP
00005466(3): MOV RBP,RDI
00005469(1): PUSH RBX
0000546a(2): JMP 0x0000547b
00005470(2): JZ 0x000054c0
00005472(4): LEA R14,[RBX + 0x1]
00005476(3): CMP R14,R13
00005479(2): JG 0x000054ab
0000547b(4): LEA RAX,[R14 + R13*0x1]
0000547f(3): MOV RDI,RBP
00005482(3): MOV RBX,RAX
00005485(4): SHR RBX,0x3f
00005489(3): ADD RBX,RAX
0000548c(3): SAR RBX,1
0000548f(3): MOV RSI,RBX
00005492(4): SHL RSI,0x4
00005496(3): ADD RSI,R12
00005499(5): CALL 0x00004950
0000549e(2): TEST EAX,EAX
000054a0(2): JNS 0x00005470
000054a2(4): LEA R13,[RBX + -0x1]
000054a6(3): CMP R14,R13
000054a9(2): JLE 0x0000547b
000054ab(1): POP RBX
000054ac(2): XOR EAX,EAX
000054ae(1): POP RBP
000054af(2): POP R12
000054b1(2): POP R13
000054b3(2): POP R14
000054b5(1): RET
000054c0(1): POP RBX
000054c1(5): MOV EAX,0x1
000054c6(1): POP RBP
000054c7(2): POP R12
000054c9(2): POP R13
000054cb(2): POP R14
000054cd(1): RET
000054ce(2): XOR EAX,EAX
000054d0(1): RET
000054e0(2): PUSH R13
000054e2(2): PUSH R12
000054e4(5): MOV EDX,0x5
000054e9(1): PUSH RBP
000054ea(1): PUSH RBX
000054eb(2): MOV EBP,EDI
000054ed(7): SUB RSP,0x88
000054f4(7): MOV RBX,qword ptr [0x002218a0]
000054fb(9): MOV RAX,qword ptr FS:[0x28]
00005504(5): MOV qword ptr [RSP + 0x78],RAX
00005509(2): XOR EAX,EAX
0000550b(2): TEST EDI,EDI
0000550d(2): JZ 0x0000553d
0000550f(7): LEA RSI,[0x1af30]
00005516(2): XOR EDI,EDI
00005518(5): CALL 0x00001d80
0000551d(7): MOV RDI,qword ptr [0x00221100]
00005524(3): MOV RDX,RAX
00005527(3): MOV RCX,RBX
0000552a(5): MOV ESI,0x1
0000552f(2): XOR EAX,EAX
00005531(5): CALL 0x00002090
00005536(2): MOV EDI,EBP
00005538(5): CALL 0x00002070
0000553d(7): LEA RSI,[0x1af58]
00005544(2): XOR EDI,EDI
00005546(5): CALL 0x00001d80
0000554b(3): MOV RCX,RBX
0000554e(3): MOV RDX,RBX
00005551(3): MOV RSI,RAX
00005554(5): MOV EDI,0x1
00005559(2): XOR EAX,EAX
0000555b(5): CALL 0x00001fb0
00005560(7): MOV RBX,qword ptr [0x002210c8]
00005567(7): LEA RSI,[0x1afb8]
0000556e(5): MOV EDX,0x5
00005573(2): XOR EDI,EDI
00005575(5): CALL 0x00001d80
0000557a(3): MOV RSI,RBX
0000557d(3): MOV RDI,RAX
00005580(5): CALL 0x00001eb0
00005585(7): MOV RBX,qword ptr [0x002210c8]
0000558c(7): LEA RSI,[0x1b008]
00005593(5): MOV EDX,0x5
00005598(2): XOR EDI,EDI
0000559a(5): CALL 0x00001d80
0000559f(3): MOV RSI,RBX
000055a2(3): MOV RDI,RAX
000055a5(5): CALL 0x00001eb0
000055aa(7): MOV RBX,qword ptr [0x002210c8]
000055b1(7): LEA RSI,[0x1b040]
000055b8(5): MOV EDX,0x5
000055bd(2): XOR EDI,EDI
000055bf(5): CALL 0x00001d80
000055c4(3): MOV RSI,RBX
000055c7(3): MOV RDI,RAX
000055ca(5): CALL 0x00001eb0
000055cf(7): MOV RBX,qword ptr [0x002210c8]
000055d6(7): LEA RSI,[0x1b090]
000055dd(5): MOV EDX,0x5
000055e2(2): XOR EDI,EDI
000055e4(5): CALL 0x00001d80
000055e9(3): MOV RSI,RBX
000055ec(3): MOV RDI,RAX
000055ef(5): CALL 0x00001eb0
000055f4(7): MOV RBX,qword ptr [0x002210c8]
000055fb(7): LEA RSI,[0x1b120]
00005602(5): MOV EDX,0x5
00005607(2): XOR EDI,EDI
00005609(5): CALL 0x00001d80
0000560e(3): MOV RSI,RBX
00005611(3): MOV RDI,RAX
00005614(5): CALL 0x00001eb0
00005619(7): MOV RBX,qword ptr [0x002210c8]
00005620(7): LEA RSI,[0x1b1a0]
00005627(5): MOV EDX,0x5
0000562c(2): XOR EDI,EDI
0000562e(5): CALL 0x00001d80
00005633(3): MOV RSI,RBX
00005636(3): MOV RDI,RAX
00005639(5): CALL 0x00001eb0
0000563e(7): MOV RBX,qword ptr [0x002210c8]
00005645(7): LEA RSI,[0x1b300]
0000564c(5): MOV EDX,0x5
00005651(2): XOR EDI,EDI
00005653(5): CALL 0x00001d80
00005658(3): MOV RSI,RBX
0000565b(3): MOV RDI,RAX
0000565e(5): CALL 0x00001eb0
00005663(7): MOV RBX,qword ptr [0x002210c8]
0000566a(7): LEA RSI,[0x1b4a8]
00005671(5): MOV EDX,0x5
00005676(2): XOR EDI,EDI
00005678(5): CALL 0x00001d80
0000567d(3): MOV RSI,RBX
00005680(3): MOV RDI,RAX
00005683(5): CALL 0x00001eb0
00005688(7): MOV RBX,qword ptr [0x002210c8]
0000568f(7): LEA RSI,[0x1b578]
00005696(5): MOV EDX,0x5
0000569b(2): XOR EDI,EDI
0000569d(5): CALL 0x00001d80
000056a2(3): MOV RSI,RBX
000056a5(3): MOV RDI,RAX
000056a8(5): CALL 0x00001eb0
000056ad(7): MOV RBX,qword ptr [0x002210c8]
000056b4(7): LEA RSI,[0x1b5a8]
000056bb(5): MOV EDX,0x5
000056c0(2): XOR EDI,EDI
000056c2(5): CALL 0x00001d80
000056c7(3): MOV RSI,RBX
000056ca(3): MOV RDI,RAX
000056cd(7): LEA RBX,[0x1b758]
000056d4(5): CALL 0x00001eb0
000056d9(7): LEA RAX,[0x1b75c]
000056e0(7): LEA RCX,[0x1b79d]
000056e7(9): MOV qword ptr [RSP + 0x60],0x0
000056f0(9): MOV qword ptr [RSP + 0x68],0x0
000056f9(3): MOV RDX,RSP
000056fc(4): MOV qword ptr [RSP],RAX
00005700(7): LEA RAX,[0x1b75e]
00005707(5): MOV qword ptr [RSP + 0x30],RCX
0000570c(7): LEA RCX,[0x1b7a7]
00005713(5): MOV qword ptr [RSP + 0x8],RAX
00005718(7): LEA RAX,[0x1b7d6]
0000571f(5): MOV qword ptr [RSP + 0x40],RCX
00005724(7): LEA RCX,[0x1b7b1]
0000572b(5): MOV qword ptr [RSP + 0x10],RAX
00005730(7): LEA RAX,[0x1b76e]
00005737(5): MOV qword ptr [RSP + 0x50],RCX
0000573c(5): MOV qword ptr [RSP + 0x18],RAX
00005741(7): LEA RAX,[0x1b784]
00005748(5): MOV qword ptr [RSP + 0x20],RAX
0000574d(7): LEA RAX,[0x1b78e]
00005754(5): MOV qword ptr [RSP + 0x28],RAX
00005759(5): MOV qword ptr [RSP + 0x38],RAX
0000575e(5): MOV qword ptr [RSP + 0x48],RAX
00005763(5): MOV qword ptr [RSP + 0x58],RAX
00005768(8): NOP dword ptr [RAX + RAX*0x1]
00005770(4): ADD RDX,0x10
00005774(3): MOV RDI,qword ptr [RDX]
00005777(3): TEST RDI,RDI
0000577a(2): JZ 0x0000578f
0000577c(5): MOV ECX,0x4
00005781(3): MOV RSI,RBX
00005784(2): CMPSB.REPE RDI,RSI
00005786(3): SETA AL
00005789(2): SBB AL,0x0
0000578b(2): TEST AL,AL
0000578d(2): JNZ 0x00005770
0000578f(4): MOV R12,qword ptr [RDX + 0x8]
00005793(2): XOR EDI,EDI
00005795(5): MOV EDX,0x5
0000579a(7): LEA RSI,[0x1b7bb]
000057a1(3): TEST R12,R12
000057a4(6): JZ 0x0000586b
000057aa(5): CALL 0x00001d80
000057af(7): LEA RCX,[0x1b5e0]
000057b6(7): LEA RDX,[0x1b7d2]
000057bd(3): MOV RSI,RAX
000057c0(5): MOV EDI,0x1
000057c5(2): XOR EAX,EAX
000057c7(5): CALL 0x00001fb0
000057cc(2): XOR ESI,ESI
000057ce(5): MOV EDI,0x5
000057d3(5): CALL 0x00001fa0
000057d8(3): TEST RAX,RAX
000057db(2): JZ 0x000057f9
000057dd(7): LEA RSI,[0x1b7e0]
000057e4(5): MOV EDX,0x3
000057e9(3): MOV RDI,RAX
000057ec(5): CALL 0x00001c90
000057f1(2): TEST EAX,EAX
000057f3(6): JNZ 0x00005900
000057f9(7): LEA RSI,[0x1b7e4]
00005800(2): XOR EDI,EDI
00005802(5): MOV EDX,0x5
00005807(5): CALL 0x00001d80
0000580c(7): LEA RCX,[0x1b758]
00005813(7): LEA RDX,[0x1b5e0]
0000581a(3): MOV RSI,RAX
0000581d(5): MOV EDI,0x1
00005822(2): XOR EAX,EAX
00005824(5): CALL 0x00001fb0
00005829(3): CMP R12,RBX
0000582c(7): LEA RCX,[0x1b778]
00005833(7): LEA RBX,[0x1c27b]
0000583a(4): CMOVZ RBX,RCX
0000583e(7): LEA RSI,[0x1b650]
00005845(2): XOR EDI,EDI
00005847(5): MOV EDX,0x5
0000584c(5): CALL 0x00001d80
00005851(3): MOV RCX,RBX
00005854(3): MOV RSI,RAX
00005857(3): MOV RDX,R12
0000585a(5): MOV EDI,0x1
0000585f(2): XOR EAX,EAX
00005861(5): CALL 0x00001fb0
00005866(5): JMP 0x00005536
0000586b(5): CALL 0x00001d80
00005870(7): LEA RCX,[0x1b5e0]
00005877(7): LEA RDX,[0x1b7d2]
0000587e(3): MOV RSI,RAX
00005881(5): MOV EDI,0x1
00005886(2): XOR EAX,EAX
00005888(5): CALL 0x00001fb0
0000588d(2): XOR ESI,ESI
0000588f(5): MOV EDI,0x5
00005894(5): CALL 0x00001fa0
00005899(3): TEST RAX,RAX
0000589c(2): JZ 0x000058b6
0000589e(7): LEA RSI,[0x1b7e0]
000058a5(5): MOV EDX,0x3
000058aa(3): MOV RDI,RAX
000058ad(5): CALL 0x00001c90
000058b2(2): TEST EAX,EAX
000058b4(2): JNZ 0x000058f9
000058b6(7): LEA RSI,[0x1b7e4]
000058bd(5): MOV EDX,0x5
000058c2(2): XOR EDI,EDI
000058c4(7): LEA R12,[0x1b758]
000058cb(7): LEA RBX,[0x1b778]
000058d2(5): CALL 0x00001d80
000058d7(7): LEA RCX,[0x1b758]
000058de(7): LEA RDX,[0x1b5e0]
000058e5(3): MOV RSI,RAX
000058e8(5): MOV EDI,0x1
000058ed(2): XOR EAX,EAX
000058ef(5): CALL 0x00001fb0
000058f4(5): JMP 0x0000583e
000058f9(7): LEA R12,[0x1b758]
00005900(7): MOV R13,qword ptr [0x002210c8]
00005907(7): LEA RSI,[0x1b608]
0000590e(2): XOR EDI,EDI
00005910(5): MOV EDX,0x5
00005915(5): CALL 0x00001d80
0000591a(3): MOV RSI,R13
0000591d(3): MOV RDI,RAX
00005920(5): CALL 0x00001eb0
00005925(5): JMP 0x000057f9
00005930(5): MOV EDI,0x1
00005935(5): JMP 0x000054e0
00005940(2): PUSH R15
00005942(2): PUSH R14
00005944(3): MOV R15,RSI
00005947(2): PUSH R13
00005949(2): PUSH R12
0000594b(3): MOV R13,RCX
0000594e(1): PUSH RBP
0000594f(1): PUSH RBX
00005950(3): MOV RBP,RDX
00005953(4): SUB RSP,0x28
00005957(5): MOV qword ptr [RSP + 0x8],RDI
0000595c(5): MOV qword ptr [RSP + 0x18],RDX
00005961(5): CALL 0x00001da0
00005966(3): MOV R14,qword ptr [R15]
00005969(8): MOV qword ptr [RSP],-0x1
00005971(3): TEST R14,R14
00005974(6): JZ 0x00005a2d
0000597a(3): MOV R12,RAX
0000597d(5): MOV byte ptr [RSP + 0x17],0x0
00005982(2): XOR EBX,EBX
00005984(2): JMP 0x000059d7
00005990(5): MOV RAX,qword ptr [RSP + 0x18]
00005995(3): TEST RAX,RAX
00005998(6): JZ 0x00005a40
0000599e(4): MOV RDI,qword ptr [RSP]
000059a2(3): MOV RDX,R13
000059a5(3): MOV RSI,RBP
000059a8(4): IMUL RDI,R13
000059ac(3): ADD RDI,RAX
000059af(5): CALL 0x00001e90
000059b4(2): TEST EAX,EAX
000059b6(5): MOVZX EAX,byte ptr [RSP + 0x17]
000059bb(5): MOV ECX,0x1
000059c0(3): CMOVNZ EAX,ECX
000059c3(4): MOV byte ptr [RSP + 0x17],AL
000059c7(4): ADD RBX,0x1
000059cb(3): ADD RBP,R13
000059ce(4): MOV R14,qword ptr [R15 + RBX*0x8]
000059d2(3): TEST R14,R14
000059d5(2): JZ 0x00005a18
000059d7(5): MOV RSI,qword ptr [RSP + 0x8]
000059dc(3): MOV RDX,R12
000059df(3): MOV RDI,R14
000059e2(5): CALL 0x00001c90
000059e7(2): TEST EAX,EAX
000059e9(2): JNZ 0x000059c7
000059eb(3): MOV RDI,R14
000059ee(5): CALL 0x00001da0
000059f3(3): CMP RAX,R12
000059f6(2): JZ 0x00005a50
000059f8(5): CMP qword ptr [RSP],-0x1
000059fd(2): JNZ 0x00005990
000059ff(4): MOV qword ptr [RSP],RBX
00005a03(4): ADD RBX,0x1
00005a07(3): ADD RBP,R13
00005a0a(4): MOV R14,qword ptr [R15 + RBX*0x8]
00005a0e(3): TEST R14,R14
00005a11(2): JNZ 0x000059d7
00005a13(5): NOP dword ptr [RAX + RAX*0x1]
00005a18(5): CMP byte ptr [RSP + 0x17],0x0
00005a1d(7): MOV RAX,-0x2
00005a24(5): CMOVZ RAX,qword ptr [RSP]
00005a29(4): MOV qword ptr [RSP],RAX
00005a2d(4): MOV RAX,qword ptr [RSP]
00005a31(4): ADD RSP,0x28
00005a35(1): POP RBX
00005a36(1): POP RBP
00005a37(2): POP R12
00005a39(2): POP R13
00005a3b(2): POP R14
00005a3d(2): POP R15
00005a3f(1): RET
00005a40(5): MOV byte ptr [RSP + 0x17],0x1
00005a45(2): JMP 0x000059c7
00005a50(4): MOV qword ptr [RSP],RBX
00005a54(2): JMP 0x00005a2d
00005a60(4): CMP RDX,-0x1
00005a64(2): PUSH R12
00005a66(5): MOV EDX,0x5
00005a6b(1): PUSH RBP
00005a6c(3): MOV R12,RSI
00005a6f(1): PUSH RBX
00005a70(3): MOV RBP,RDI
00005a73(2): JZ 0x00005ac0
00005a75(7): LEA RSI,[0x1b9d8]
00005a7c(2): XOR EDI,EDI
00005a7e(5): CALL 0x00001d80
00005a83(3): MOV RBX,RAX
00005a86(3): MOV RSI,RBP
00005a89(5): MOV EDI,0x1
00005a8e(5): CALL 0x00008970
00005a93(3): MOV RDX,R12
00005a96(3): MOV RBP,RAX
00005a99(5): MOV ESI,0x8
00005a9e(2): XOR EDI,EDI
00005aa0(5): CALL 0x000085a0
00005aa5(3): MOV R8,RBP
00005aa8(3): MOV RDX,RBX
00005aab(3): MOV RCX,RAX
00005aae(1): POP RBX
00005aaf(1): POP RBP
00005ab0(2): POP R12
00005ab2(2): XOR ESI,ESI
00005ab4(2): XOR EDI,EDI
00005ab6(2): XOR EAX,EAX
00005ab8(5): JMP 0x00002000
00005ac0(7): LEA RSI,[0x1b9bd]
00005ac7(2): XOR EDI,EDI
00005ac9(5): CALL 0x00001d80
00005ace(3): MOV RBX,RAX
00005ad1(2): JMP 0x00005a86
00005ae0(2): PUSH R15
00005ae2(2): PUSH R14
00005ae4(3): MOV R14,RDI
00005ae7(2): PUSH R13
00005ae9(2): PUSH R12
00005aeb(2): XOR EDI,EDI
00005aed(1): PUSH RBP
00005aee(1): PUSH RBX
00005aef(3): MOV RBP,RSI
00005af2(7): LEA RSI,[0x1b9f5]
00005af9(3): MOV R12,RDX
00005afc(5): MOV EDX,0x5
00005b01(4): SUB RSP,0x8
00005b05(7): MOV RBX,qword ptr [0x00221100]
00005b0c(5): CALL 0x00001d80
00005b11(3): MOV RDI,RAX
00005b14(3): MOV RSI,RBX
00005b17(5): CALL 0x00001eb0
00005b1c(3): MOV R15,qword ptr [R14]
00005b1f(3): TEST R15,R15
00005b22(6): JZ 0x00005bb8
00005b28(3): XOR R13D,R13D
00005b2b(2): XOR EBX,EBX
00005b2d(2): JMP 0x00005b68
00005b30(3): MOV RDI,R15
00005b33(4): ADD RBX,0x1
00005b37(3): MOV R13,RBP
00005b3a(5): CALL 0x00008990
00005b3f(7): MOV RDI,qword ptr [0x00221100]
00005b46(7): LEA RDX,[0x1ba0a]
00005b4d(3): MOV RCX,RAX
00005b50(5): MOV ESI,0x1
00005b55(2): XOR EAX,EAX
00005b57(3): ADD RBP,R12
00005b5a(5): CALL 0x00002090
00005b5f(4): MOV R15,qword ptr [R14 + RBX*0x8]
00005b63(3): TEST R15,R15
00005b66(2): JZ 0x00005bb8
00005b68(3): TEST RBX,RBX
00005b6b(2): JZ 0x00005b30
00005b6d(3): MOV RDX,R12
00005b70(3): MOV RSI,RBP
00005b73(3): MOV RDI,R13
00005b76(5): CALL 0x00001e90
00005b7b(2): TEST EAX,EAX
00005b7d(2): JNZ 0x00005b30
00005b7f(3): MOV RDI,R15
00005b82(4): ADD RBX,0x1
00005b86(3): ADD RBP,R12
00005b89(5): CALL 0x00008990
00005b8e(7): MOV RDI,qword ptr [0x00221100]
00005b95(7): LEA RDX,[0x1ba12]
00005b9c(3): MOV RCX,RAX
00005b9f(5): MOV ESI,0x1
00005ba4(2): XOR EAX,EAX
00005ba6(5): CALL 0x00002090
00005bab(4): MOV R15,qword ptr [R14 + RBX*0x8]
00005baf(3): TEST R15,R15
00005bb2(2): JNZ 0x00005b68
00005bb4(4): NOP dword ptr [RAX]
00005bb8(7): MOV RDI,qword ptr [0x00221100]
00005bbf(4): MOV RAX,qword ptr [RDI + 0x28]
00005bc3(4): CMP RAX,qword ptr [RDI + 0x30]
00005bc7(2): JNC 0x00005be8
00005bc9(4): LEA RDX,[RAX + 0x1]
00005bcd(4): MOV qword ptr [RDI + 0x28],RDX
00005bd1(3): MOV byte ptr [RAX],0xa
00005bd4(4): ADD RSP,0x8
00005bd8(1): POP RBX
00005bd9(1): POP RBP
00005bda(2): POP R12
00005bdc(2): POP R13
00005bde(2): POP R14
00005be0(2): POP R15
00005be2(1): RET
00005be8(4): ADD RSP,0x8
00005bec(5): MOV ESI,0xa
00005bf1(1): POP RBX
00005bf2(1): POP RBP
00005bf3(2): POP R12
00005bf5(2): POP R13
00005bf7(2): POP R14
00005bf9(2): POP R15
00005bfb(5): JMP 0x00001e00
00005c00(2): PUSH R15
00005c02(2): PUSH R14
00005c04(3): MOV R14,RDI
00005c07(2): PUSH R13
00005c09(2): PUSH R12
00005c0b(3): MOV R12,RSI
00005c0e(1): PUSH RBP
00005c0f(1): PUSH RBX
00005c10(3): MOV RBP,RCX
00005c13(3): MOV RBX,RDX
00005c16(3): MOV RCX,R8
00005c19(3): MOV RDX,RBP
00005c1c(4): SUB RSP,0x8
00005c20(3): MOV RSI,RBX
00005c23(3): MOV RDI,R12
00005c26(3): MOV R15,R8
00005c29(3): MOV R13,R9
00005c2c(5): CALL 0x00005940
00005c31(3): TEST RAX,RAX
00005c34(2): JS 0x00005c45
00005c36(4): ADD RSP,0x8
00005c3a(1): POP RBX
00005c3b(1): POP RBP
00005c3c(2): POP R12
00005c3e(2): POP R13
00005c40(2): POP R14
00005c42(2): POP R15
00005c44(1): RET
00005c45(3): MOV RDX,RAX
00005c48(3): MOV RSI,R12
00005c4b(3): MOV RDI,R14
00005c4e(5): CALL 0x00005a60
00005c53(3): MOV RDX,R15
00005c56(3): MOV RSI,RBP
00005c59(3): MOV RDI,RBX
00005c5c(5): CALL 0x00005ae0
00005c61(3): CALL R13
00005c64(7): MOV RAX,-0x1
00005c6b(2): JMP 0x00005c36
00005c70(2): PUSH R14
00005c72(2): PUSH R13
00005c74(2): PUSH R12
00005c76(1): PUSH RBP
00005c77(1): PUSH RBX
00005c78(3): MOV R14,qword ptr [RSI]
00005c7b(3): TEST R14,R14
00005c7e(2): JZ 0x00005cb1
00005c80(3): MOV R12,RCX
00005c83(3): MOV R13,RDI
00005c86(3): MOV RBP,RDX
00005c89(4): LEA RBX,[RSI + 0x8]
00005c8d(2): JMP 0x00005c9f
00005c90(3): MOV R14,qword ptr [RBX]
00005c93(3): ADD RBP,R12
00005c96(4): ADD RBX,0x8
00005c9a(3): TEST R14,R14
00005c9d(2): JZ 0x00005cb1
00005c9f(3): MOV RDX,R12
00005ca2(3): MOV RSI,RBP
00005ca5(3): MOV RDI,R13
00005ca8(5): CALL 0x00001e90
00005cad(2): TEST EAX,EAX
00005caf(2): JNZ 0x00005c90
00005cb1(1): POP RBX
00005cb2(3): MOV RAX,R14
00005cb5(1): POP RBP
00005cb6(2): POP R12
00005cb8(2): POP R13
00005cba(2): POP R14
00005cbc(1): RET
00005cc0(7): MOV qword ptr [0x00221898],RDI
00005cc7(1): RET
00005cd0(7): MOV byte ptr [0x00221890],DIL
00005cd7(1): RET
00005ce0(1): PUSH RBP
00005ce1(1): PUSH RBX
00005ce2(4): SUB RSP,0x8
00005ce6(7): MOV RDI,qword ptr [0x002210c8]
00005ced(5): CALL 0x000186a0
00005cf2(2): TEST EAX,EAX
00005cf4(2): JZ 0x00005d0c
00005cf6(5): CALL 0x00001c80
00005cfb(7): CMP byte ptr [0x00221890],0x0
00005d02(3): MOV RBX,RAX
00005d05(2): JZ 0x00005d23
00005d07(3): CMP dword ptr [RAX],0x20
00005d0a(2): JNZ 0x00005d23
00005d0c(7): MOV RDI,qword ptr [0x00221100]
00005d13(5): CALL 0x000186a0
00005d18(2): TEST EAX,EAX
00005d1a(2): JNZ 0x00005d62
00005d1c(4): ADD RSP,0x8
00005d20(1): POP RBX
00005d21(1): POP RBP
00005d22(1): RET
00005d23(7): LEA RSI,[0x1ba17]
00005d2a(2): XOR EDI,EDI
00005d2c(5): MOV EDX,0x5
00005d31(5): CALL 0x00001d80
00005d36(7): MOV RDI,qword ptr [0x00221898]
00005d3d(3): MOV RBP,RAX
00005d40(3): TEST RDI,RDI
00005d43(2): JZ 0x00005d6d
00005d45(5): CALL 0x00008790
00005d4a(2): MOV ESI,dword ptr [RBX]
00005d4c(7): LEA RDX,[0x1ba23]
00005d53(3): MOV RCX,RAX
00005d56(3): MOV R8,RBP
00005d59(2): XOR EDI,EDI
00005d5b(2): XOR EAX,EAX
00005d5d(5): CALL 0x00002000
00005d62(6): MOV EDI,dword ptr [0x00221048]
00005d68(5): CALL 0x00001ca0
00005d6d(2): MOV ESI,dword ptr [RBX]
00005d6f(7): LEA RDX,[0x1ba14]
00005d76(3): MOV RCX,RAX
00005d79(2): XOR EDI,EDI
00005d7b(2): XOR EAX,EAX
00005d7d(5): CALL 0x00002000
00005d82(2): JMP 0x00005d62
00005d90(1): PUSH RBP
00005d91(1): PUSH RBX
00005d92(2): MOV EBP,EDI
00005d94(7): LEA RDI,[0x1bc40]
00005d9b(2): XOR ESI,ESI
00005d9d(2): XOR EAX,EAX
00005d9f(4): SUB RSP,0x8
00005da3(5): MOV EBX,0x1
00005da8(5): CALL 0x00002010
00005dad(2): CMP EBP,EAX
00005daf(2): JZ 0x00005dc9
00005db1(2): XOR EBX,EBX
00005db3(2): TEST EAX,EAX
00005db5(2): JS 0x00005dc9
00005db7(2): MOV EDI,EAX
00005db9(5): CALL 0x00001e70
00005dbe(5): CALL 0x00001c80
00005dc3(6): MOV dword ptr [RAX],0x9
00005dc9(4): ADD RSP,0x8
00005dcd(2): MOV EAX,EBX
00005dcf(1): POP RBX
00005dd0(1): POP RBP
00005dd1(1): RET
00005de0(2): PUSH R15
00005de2(2): PUSH R14
00005de4(3): MOV R15,RSI
00005de7(2): PUSH R13
00005de9(2): PUSH R12
00005deb(3): MOV R12,RDX
00005dee(1): PUSH RBP
00005def(1): PUSH RBX
00005df0(4): SUB RSP,0x18
00005df4(5): MOV qword ptr [RSP + 0x8],RDI
00005df9(3): MOV RDI,RDX
00005dfc(5): CALL 0x00001ef0
00005e01(2): MOV EBX,EAX
00005e03(5): CALL 0x00001c80
00005e08(3): CMP EBX,0x1
00005e0b(3): MOV R14,RAX
00005e0e(6): JZ 0x00005f70
00005e14(3): CMP EBX,0x2
00005e17(6): JZ 0x00005f60
00005e1d(2): TEST EBX,EBX
00005e1f(6): JZ 0x00005ed8
00005e25(5): MOV ESI,0x2
00005e2a(5): MOV EDI,0x2
00005e2f(5): CALL 0x00001de0
00005e34(3): CMP EAX,0x2
00005e37(3): SETNZ BL
00005e3a(5): MOV ESI,0x1
00005e3f(5): MOV EDI,0x1
00005e44(5): CALL 0x00001de0
00005e49(3): CMP EAX,0x1
00005e4c(4): SETNZ BPL
00005e50(2): XOR ESI,ESI
00005e52(2): XOR EDI,EDI
00005e54(5): CALL 0x00001de0
00005e59(2): TEST EAX,EAX
00005e5b(6): JZ 0x00005ee8
00005e61(2): XOR EDI,EDI
00005e63(5): CALL 0x00005d90
00005e68(2): TEST AL,AL
00005e6a(3): MOV R13D,EAX
00005e6d(6): JZ 0x00005f80
00005e73(3): TEST BPL,BPL
00005e76(2): JNZ 0x00005ef0
00005e78(2): TEST BL,BL
00005e7a(2): JZ 0x00005e90
00005e7c(5): MOV EDI,0x2
00005e81(5): CALL 0x00005d90
00005e86(2): TEST AL,AL
00005e88(2): MOV EBX,EAX
00005e8a(6): JZ 0x00005f40
00005e90(5): MOV RDI,qword ptr [RSP + 0x8]
00005e95(3): MOV RDX,R12
00005e98(3): MOV RSI,R15
00005e9b(5): CALL 0x00001e50
00005ea0(3): MOV R12,RAX
00005ea3(2): TEST BL,BL
00005ea5(3): MOV R15D,dword ptr [R14]
00005ea8(6): JNZ 0x00005f50
00005eae(3): TEST BPL,BPL
00005eb1(2): JNZ 0x00005f20
00005eb3(3): TEST R13B,R13B
00005eb6(2): JNZ 0x00005f2f
00005eb8(3): TEST R12,R12
00005ebb(2): JNZ 0x00005ec0
00005ebd(3): MOV dword ptr [R14],R15D
00005ec0(4): ADD RSP,0x18
00005ec4(3): MOV RAX,R12
00005ec7(1): POP RBX
00005ec8(1): POP RBP
00005ec9(2): POP R12
00005ecb(2): POP R13
00005ecd(2): POP R14
00005ecf(2): POP R15
00005ed1(1): RET
00005ed8(2): XOR EBX,EBX
00005eda(2): XOR EBP,EBP
00005edc(3): XOR R13D,R13D
00005edf(2): JMP 0x00005e90
00005ee8(3): XOR R13D,R13D
00005eeb(3): TEST BPL,BPL
00005eee(2): JZ 0x00005e78
00005ef0(5): MOV EDI,0x1
00005ef5(5): CALL 0x00005d90
00005efa(2): TEST AL,AL
00005efc(2): MOV EBP,EAX
00005efe(6): JNZ 0x00005e78
00005f04(3): XOR R12D,R12D
00005f07(2): TEST BL,BL
00005f09(3): MOV R15D,dword ptr [R14]
00005f0c(2): JZ 0x00005f20
00005f0e(5): MOV EDI,0x2
00005f13(5): CALL 0x00001e70
00005f18(8): NOP dword ptr [RAX + RAX*0x1]
00005f20(5): MOV EDI,0x1
00005f25(5): CALL 0x00001e70
00005f2a(3): TEST R13B,R13B
00005f2d(2): JZ 0x00005eb8
00005f2f(2): XOR EDI,EDI
00005f31(5): CALL 0x00001e70
00005f36(2): JMP 0x00005eb8
00005f40(3): MOV R15D,dword ptr [R14]
00005f43(3): XOR R12D,R12D
00005f46(10): NOP word ptr CS:[RAX + RAX*0x1]
00005f50(5): MOV EDI,0x2
00005f55(5): CALL 0x00001e70
00005f5a(5): JMP 0x00005eae
00005f60(2): XOR EBX,EBX
00005f62(5): JMP 0x00005e3a
00005f70(2): XOR EBX,EBX
00005f72(2): XOR EBP,EBP
00005f74(5): JMP 0x00005e50
00005f80(6): MOV R13D,0x1
00005f86(3): XOR R12D,R12D
00005f89(5): JMP 0x00005ea3
00005f90(3): TEST RDI,RDI
00005f93(1): PUSH RBX
00005f94(2): JZ 0x0000600d
00005f96(5): MOV ESI,0x2f
00005f9b(3): MOV RBX,RDI
00005f9e(5): CALL 0x00001e10
00005fa3(3): TEST RAX,RAX
00005fa6(2): JZ 0x00005ffd
00005fa8(4): LEA R8,[RAX + 0x1]
00005fac(3): MOV RDX,R8
00005faf(3): SUB RDX,RBX
00005fb2(4): CMP RDX,0x6
00005fb6(2): JLE 0x00005ffd
00005fb8(4): LEA RSI,[RAX + -0x6]
00005fbc(7): LEA RDI,[0x1bc88]
00005fc3(5): MOV ECX,0x7
00005fc8(2): CMPSB.REPE RDI,RSI
00005fca(3): SETA DL
00005fcd(3): SBB DL,0x0
00005fd0(2): TEST DL,DL
00005fd2(2): JNZ 0x00005ffd
00005fd4(7): LEA RDI,[0x1bc90]
00005fdb(5): MOV ECX,0x3
00005fe0(3): MOV RSI,R8
00005fe3(3): MOV RBX,R8
00005fe6(2): CMPSB.REPE RDI,RSI
00005fe8(3): SETA DL
00005feb(3): SBB DL,0x0
00005fee(2): TEST DL,DL
00005ff0(2): JNZ 0x00005ffd
00005ff2(4): LEA RBX,[RAX + 0x4]
00005ff6(7): MOV qword ptr [0x002210c0],RBX
00005ffd(7): MOV qword ptr [0x002218a0],RBX
00006004(7): MOV qword ptr [0x002210e8],RBX
0000600b(1): POP RBX
0000600c(1): RET
0000600d(7): MOV RCX,qword ptr [0x00221100]
00006014(7): LEA RDI,[0x1bc50]
0000601b(5): MOV EDX,0x37
00006020(5): MOV ESI,0x1
00006025(5): CALL 0x00002080
0000602a(5): CALL 0x00001c70
0000602f(1): NOP
00006030(2): PUSH R15
00006032(2): PUSH R14
00006034(3): MOV R15,RDI
00006037(2): PUSH R13
00006039(2): PUSH R12
0000603b(3): MOV RDI,RSI
0000603e(1): PUSH RBP
0000603f(1): PUSH RBX
00006040(5): MOV ESI,0x2
00006045(7): LEA R13,[0x1cf60]
0000604c(7): SUB RSP,0xb8
00006053(5): LEA RBX,[RSP + 0x20]
00006058(5): LEA R12,[RSP + 0x60]
0000605d(9): MOV RAX,qword ptr FS:[0x28]
00006066(8): MOV qword ptr [0xa8 + RSP],RAX
0000606e(2): XOR EAX,EAX
00006070(4): LEA R14,[RBX + 0x24]
00006074(5): CALL 0x00008c70
00006079(5): MOV qword ptr [RSP + 0x8],RAX
0000607e(2): NOP
00006080(4): CMP byte ptr [R15],0x0
00006084(2): JZ 0x00006105
00006086(5): MOV RSI,qword ptr [RSP + 0x8]
0000608b(3): MOV RDI,R15
0000608e(5): CALL 0x000194a0
00006093(3): TEST RAX,RAX
00006096(3): MOV RBP,RAX
00006099(2): JZ 0x00006105
0000609b(5): CALL 0x00001d90
000060a0(4): CMP RAX,0x1
000060a4(6): JA 0x00006148
000060aa(3): CMP R15,RBP
000060ad(6): JNC 0x00006718
000060b3(5): CALL 0x000020e0
000060b8(4): MOVZX EDX,byte ptr [RBP + -0x1]
000060bc(3): MOV RAX,qword ptr [RAX]
000060bf(5): MOV RDI,qword ptr [RSP + 0x8]
000060c4(5): MOVZX R15D,word ptr [RAX + RDX*0x2]
000060c9(5): SHR R15W,0x3
000060ce(4): XOR R15D,0x1
000060d2(3): MOV EAX,R15D
000060d5(3): AND EAX,0x1
000060d8(4): MOV byte ptr [RSP + 0x10],AL
000060dc(5): CALL 0x00001da0
000060e1(5): MOVZX EDX,byte ptr [RBP + RAX*0x1]
000060e6(2): TEST DL,DL
000060e8(6): JNZ 0x00006734
000060ee(5): CMP byte ptr [RSP + 0x10],0x0
000060f3(2): JNZ 0x0000610a
000060f5(4): CMP byte ptr [RBP],0x0
000060f9(2): JZ 0x00006105
000060fb(4): LEA R15,[RBP + 0x1]
000060ff(4): CMP byte ptr [R15],0x0
00006103(2): JNZ 0x00006086
00006105(5): MOV byte ptr [RSP + 0x10],0x0
0000610a(5): MOV RDI,qword ptr [RSP + 0x8]
0000610f(5): CALL 0x00001c60
00006114(8): MOV RBX,qword ptr [0xa8 + RSP]
0000611c(9): XOR RBX,qword ptr FS:[0x28]
00006125(5): MOVZX EAX,byte ptr [RSP + 0x10]
0000612a(6): JNZ 0x00006976
00006130(7): ADD RSP,0xb8
00006137(1): POP RBX
00006138(1): POP RBP
00006139(2): POP R12
0000613b(2): POP R13
0000613d(2): POP R14
0000613f(2): POP R15
00006141(1): RET
00006148(3): CMP R15,RBP
0000614b(5): MOV qword ptr [RSP + 0x30],R15
00006150(5): MOV byte ptr [RSP + 0x20],0x0
00006155(8): MOV qword ptr [RBX + 0x4],0x0
0000615d(5): MOV byte ptr [RSP + 0x2c],0x0
00006162(2): JC 0x000061d7
00006164(5): JMP 0x00006708
00006170(5): MOV R15,qword ptr [RSP + 0x30]
00006175(4): MOVZX EDX,byte ptr [R15]
00006179(2): MOV EAX,EDX
0000617b(3): SHR AL,0x5
0000617e(3): AND EAX,0x7
00006181(5): MOV EAX,dword ptr [R13 + RAX*0x4]
00006186(3): BT EAX,EDX
00006189(6): JNC 0x00006278
0000618f(9): MOV qword ptr [RSP + 0x38],0x1
00006198(4): MOVSX EDX,byte ptr [R15]
0000619c(5): MOV byte ptr [RSP + 0x40],0x1
000061a1(5): MOV byte ptr [RSP + 0x2c],0x1
000061a6(4): MOV dword ptr [RSP + 0x44],EDX
000061aa(2): TEST EDX,EDX
000061ac(6): JZ 0x00006952
000061b2(5): MOV R15,qword ptr [RSP + 0x30]
000061b7(5): MOV RAX,qword ptr [RSP + 0x38]
000061bc(5): MOVZX ECX,byte ptr [RSP + 0x40]
000061c1(5): MOV byte ptr [RSP + 0x2c],0x0
000061c6(3): ADD RAX,R15
000061c9(3): CMP RAX,RBP
000061cc(5): MOV qword ptr [RSP + 0x30],RAX
000061d1(6): JNC 0x00006300
000061d7(5): CMP byte ptr [RSP + 0x20],0x0
000061dc(2): JZ 0x00006170
000061de(5): CALL 0x00001d90
000061e3(5): MOV R15,qword ptr [RSP + 0x30]
000061e8(3): MOV RSI,RAX
000061eb(3): MOV RDI,R15
000061ee(5): CALL 0x00008c30
000061f3(4): LEA RCX,[RBX + 0x4]
000061f7(3): MOV RDX,RAX
000061fa(3): MOV RSI,R15
000061fd(3): MOV RDI,R14
00006200(5): CALL 0x0000a3b0
00006205(4): CMP RAX,-0x1
00006209(5): MOV qword ptr [RSP + 0x38],RAX
0000620e(6): JZ 0x00006298
00006214(4): CMP RAX,-0x2
00006218(6): JZ 0x000062b8
0000621e(3): TEST RAX,RAX
00006221(6): JNZ 0x000062f0
00006227(5): MOV R15,qword ptr [RSP + 0x30]
0000622c(9): MOV qword ptr [RSP + 0x38],0x1
00006235(4): CMP byte ptr [R15],0x0
00006239(6): JNZ 0x0000697b
0000623f(4): MOV EDX,dword ptr [RSP + 0x44]
00006243(2): TEST EDX,EDX
00006245(6): JNZ 0x000068fc
0000624b(4): LEA RDI,[RBX + 0x4]
0000624f(4): MOV dword ptr [RSP + 0x10],EDX
00006253(5): MOV byte ptr [RSP + 0x40],0x1
00006258(5): CALL 0x000020b0
0000625d(2): TEST EAX,EAX
0000625f(4): MOV EDX,dword ptr [RSP + 0x10]
00006263(2): JZ 0x000062e0
00006265(5): MOV byte ptr [RSP + 0x20],0x0
0000626a(5): MOV byte ptr [RSP + 0x2c],0x1
0000626f(5): JMP 0x000061aa
00006278(4): LEA RDI,[RBX + 0x4]
0000627c(5): CALL 0x000020b0
00006281(2): TEST EAX,EAX
00006283(6): JZ 0x00006957
00006289(5): MOV byte ptr [RSP + 0x20],0x1
0000628e(5): JMP 0x000061de
00006298(9): MOV qword ptr [RSP + 0x38],0x1
000062a1(5): MOV byte ptr [RSP + 0x40],0x0
000062a6(4): MOV EDX,dword ptr [RSP + 0x44]
000062aa(5): MOV R15,qword ptr [RSP + 0x30]
000062af(5): JMP 0x000061b7
000062b8(5): MOV R15,qword ptr [RSP + 0x30]
000062bd(3): MOV RDI,R15
000062c0(5): CALL 0x00001da0
000062c5(5): MOV byte ptr [RSP + 0x40],0x0
000062ca(5): MOV qword ptr [RSP + 0x38],RAX
000062cf(4): MOV EDX,dword ptr [RSP + 0x44]
000062d3(5): JMP 0x000061b7
000062e0(5): MOV byte ptr [RSP + 0x2c],0x1
000062e5(5): JMP 0x000061aa
000062f0(4): MOV EDX,dword ptr [RSP + 0x44]
000062f4(5): JMP 0x0000624b
00006300(2): TEST CL,CL
00006302(6): JZ 0x00006708
00006308(2): MOV EDI,EDX
0000630a(5): CALL 0x00001f10
0000630f(2): TEST EAX,EAX
00006311(5): SETZ byte ptr [RSP + 0x10]
00006316(5): MOV RAX,qword ptr [RSP + 0x8]
0000631b(5): MOV qword ptr [RSP + 0x30],RBP
00006320(5): MOV byte ptr [RSP + 0x20],0x0
00006325(8): MOV qword ptr [RBX + 0x4],0x0
0000632d(5): MOV byte ptr [RSP + 0x2c],0x0
00006332(5): MOV byte ptr [RSP + 0x60],0x0
00006337(5): MOV qword ptr [RSP + 0x70],RAX
0000633c(9): MOV qword ptr [R12 + 0x4],0x0
00006345(5): MOV byte ptr [RSP + 0x6c],0x0
0000634a(2): JMP 0x000063bd
00006350(5): CMP byte ptr [RSP + 0x20],0x0
00006355(6): JNZ 0x000065d6
0000635b(5): MOV RCX,qword ptr [RSP + 0x30]
00006360(3): MOVZX EDX,byte ptr [RCX]
00006363(2): MOV EAX,EDX
00006365(3): SHR AL,0x5
00006368(3): AND EAX,0x7
0000636b(5): MOV EAX,dword ptr [R13 + RAX*0x4]
00006370(3): BT EAX,EDX
00006373(6): JNC 0x000065c0
00006379(9): MOV qword ptr [RSP + 0x38],0x1
00006382(3): MOVSX EAX,byte ptr [RCX]
00006385(5): MOV byte ptr [RSP + 0x40],0x1
0000638a(5): MOV byte ptr [RSP + 0x2c],0x1
0000638f(4): MOV dword ptr [RSP + 0x44],EAX
00006393(4): MOV EDI,dword ptr [RSP + 0x44]
00006397(2): TEST EDI,EDI
00006399(6): JZ 0x00006952
0000639f(5): MOV RAX,qword ptr [RSP + 0x38]
000063a4(5): ADD qword ptr [RSP + 0x30],RAX
000063a9(5): MOV RAX,qword ptr [RSP + 0x78]
000063ae(5): ADD qword ptr [RSP + 0x70],RAX
000063b3(5): MOV byte ptr [RSP + 0x2c],0x0
000063b8(5): MOV byte ptr [RSP + 0x6c],0x0
000063bd(5): CMP byte ptr [RSP + 0x60],0x0
000063c2(2): JNZ 0x0000643f
000063c4(5): MOV RCX,qword ptr [RSP + 0x70]
000063c9(3): MOVZX EDX,byte ptr [RCX]
000063cc(2): MOV EAX,EDX
000063ce(3): SHR AL,0x5
000063d1(3): AND EAX,0x7
000063d4(5): MOV EAX,dword ptr [R13 + RAX*0x4]
000063d9(3): BT EAX,EDX
000063dc(2): JNC 0x00006428
000063de(9): MOV qword ptr [RSP + 0x78],0x1
000063e7(3): MOVSX EAX,byte ptr [RCX]
000063ea(8): MOV byte ptr [0x80 + RSP],0x1
000063f2(5): MOV byte ptr [RSP + 0x6c],0x1
000063f7(7): MOV dword ptr [0x84 + RSP],EAX
000063fe(7): MOV ECX,dword ptr [0x84 + RSP]
00006405(2): TEST ECX,ECX
00006407(6): JZ 0x000064e0
0000640d(5): CMP byte ptr [RSP + 0x2c],0x0
00006412(6): JZ 0x00006350
00006418(5): CMP byte ptr [RSP + 0x40],0x0
0000641d(2): JZ 0x0000639f
0000641f(5): JMP 0x00006393
00006428(5): LEA RDI,[R12 + 0x4]
0000642d(5): CALL 0x000020b0
00006432(2): TEST EAX,EAX
00006434(6): JZ 0x00006957
0000643a(5): MOV byte ptr [RSP + 0x60],0x1
0000643f(5): CALL 0x00001d90
00006444(5): MOV R15,qword ptr [RSP + 0x70]
00006449(3): MOV RSI,RAX
0000644c(3): MOV RDI,R15
0000644f(5): CALL 0x00008c30
00006454(5): LEA RCX,[R12 + 0x4]
00006459(5): LEA RDI,[R12 + 0x24]
0000645e(3): MOV RDX,RAX
00006461(3): MOV RSI,R15
00006464(5): CALL 0x0000a3b0
00006469(4): CMP RAX,-0x1
0000646d(5): MOV qword ptr [RSP + 0x78],RAX
00006472(6): JZ 0x00006668
00006478(4): CMP RAX,-0x2
0000647c(6): JZ 0x000066a0
00006482(3): TEST RAX,RAX
00006485(2): JNZ 0x000064ad
00006487(5): MOV RAX,qword ptr [RSP + 0x70]
0000648c(9): MOV qword ptr [RSP + 0x78],0x1
00006495(3): CMP byte ptr [RAX],0x0
00006498(6): JNZ 0x0000697b
0000649e(7): MOV ESI,dword ptr [0x84 + RSP]
000064a5(2): TEST ESI,ESI
000064a7(6): JNZ 0x000068fc
000064ad(5): LEA RDI,[R12 + 0x4]
000064b2(8): MOV byte ptr [0x80 + RSP],0x1
000064ba(5): CALL 0x000020b0
000064bf(2): TEST EAX,EAX
000064c1(6): JZ 0x000066c8
000064c7(7): MOV ECX,dword ptr [0x84 + RSP]
000064ce(5): MOV byte ptr [RSP + 0x60],0x0
000064d3(5): MOV byte ptr [RSP + 0x6c],0x1
000064d8(2): TEST ECX,ECX
000064da(6): JNZ 0x0000640d
000064e0(5): CMP byte ptr [RSP + 0x2c],0x0
000064e5(6): JNZ 0x00006758
000064eb(5): CMP byte ptr [RSP + 0x20],0x0
000064f0(6): JNZ 0x00006782
000064f6(5): MOV RCX,qword ptr [RSP + 0x30]
000064fb(3): MOVZX EDX,byte ptr [RCX]
000064fe(2): MOV EAX,EDX
00006500(3): SHR AL,0x5
00006503(3): AND EAX,0x7
00006506(5): MOV EAX,dword ptr [R13 + RAX*0x4]
0000650b(3): BT EAX,EDX
0000650e(6): JNC 0x0000676c
00006514(9): MOV qword ptr [RSP + 0x38],0x1
0000651d(3): MOVSX EDX,byte ptr [RCX]
00006520(5): MOV byte ptr [RSP + 0x40],0x1
00006525(5): MOV byte ptr [RSP + 0x2c],0x1
0000652a(4): MOV dword ptr [RSP + 0x44],EDX
0000652e(2): TEST EDX,EDX
00006530(2): JZ 0x00006544
00006532(5): CMP byte ptr [RSP + 0x40],0x0
00006537(2): JZ 0x00006544
00006539(2): MOV EDI,EDX
0000653b(5): CALL 0x00001f10
00006540(2): TEST EAX,EAX
00006542(2): JNZ 0x0000654f
00006544(5): CMP byte ptr [RSP + 0x10],0x0
00006549(6): JNZ 0x0000610a
0000654f(5): MOV qword ptr [RSP + 0x30],RBP
00006554(5): MOV byte ptr [RSP + 0x20],0x0
00006559(4): LEA R15,[RBX + 0x4]
0000655d(8): MOV qword ptr [RBX + 0x4],0x0
00006565(5): MOV byte ptr [RSP + 0x2c],0x0
0000656a(4): MOVZX EDX,byte ptr [RBP]
0000656e(2): MOV EAX,EDX
00006570(3): SHR AL,0x5
00006573(3): AND EAX,0x7
00006576(5): MOV EAX,dword ptr [R13 + RAX*0x4]
0000657b(3): BT EAX,EDX
0000657e(6): JNC 0x00006810
00006584(9): MOV qword ptr [RSP + 0x38],0x1
0000658d(4): MOVSX EAX,byte ptr [RBP]
00006591(5): MOV byte ptr [RSP + 0x40],0x1
00006596(5): MOV byte ptr [RSP + 0x2c],0x1
0000659b(4): MOV dword ptr [RSP + 0x44],EAX
0000659f(4): MOV EAX,dword ptr [RSP + 0x44]
000065a3(2): TEST EAX,EAX
000065a5(6): JZ 0x00006105
000065ab(5): MOV R15,qword ptr [RSP + 0x38]
000065b0(3): ADD R15,RBP
000065b3(5): JMP 0x00006080
000065c0(4): LEA RDI,[RBX + 0x4]
000065c4(5): CALL 0x000020b0
000065c9(2): TEST EAX,EAX
000065cb(6): JZ 0x00006957
000065d1(5): MOV byte ptr [RSP + 0x20],0x1
000065d6(5): CALL 0x00001d90
000065db(5): MOV R15,qword ptr [RSP + 0x30]
000065e0(3): MOV RSI,RAX
000065e3(3): MOV RDI,R15
000065e6(5): CALL 0x00008c30
000065eb(4): LEA RCX,[RBX + 0x4]
000065ef(3): MOV RDX,RAX
000065f2(3): MOV RSI,R15
000065f5(3): MOV RDI,R14
000065f8(5): CALL 0x0000a3b0
000065fd(4): CMP RAX,-0x1
00006601(5): MOV qword ptr [RSP + 0x38],RAX
00006606(6): JZ 0x00006688
0000660c(4): CMP RAX,-0x2
00006610(6): JZ 0x000066d8
00006616(3): TEST RAX,RAX
00006619(2): JNZ 0x00006640
0000661b(5): MOV RAX,qword ptr [RSP + 0x30]
00006620(9): MOV qword ptr [RSP + 0x38],0x1
00006629(3): CMP byte ptr [RAX],0x0
0000662c(6): JNZ 0x0000697b
00006632(5): MOV R8D,dword ptr [RSP + 0x44]
00006637(3): TEST R8D,R8D
0000663a(6): JNZ 0x000068fc
00006640(4): LEA RDI,[RBX + 0x4]
00006644(5): MOV byte ptr [RSP + 0x40],0x1
00006649(5): CALL 0x000020b0
0000664e(2): TEST EAX,EAX
00006650(6): JZ 0x000066f8
00006656(5): MOV byte ptr [RSP + 0x20],0x0
0000665b(5): MOV byte ptr [RSP + 0x2c],0x1
00006660(5): JMP 0x00006393
00006668(9): MOV qword ptr [RSP + 0x78],0x1
00006671(8): MOV byte ptr [0x80 + RSP],0x0
00006679(5): MOV byte ptr [RSP + 0x6c],0x1
0000667e(5): JMP 0x0000640d
00006688(9): MOV qword ptr [RSP + 0x38],0x1
00006691(5): MOV byte ptr [RSP + 0x40],0x0
00006696(5): JMP 0x0000639f
000066a0(5): MOV RDI,qword ptr [RSP + 0x70]
000066a5(5): CALL 0x00001da0
000066aa(8): MOV byte ptr [0x80 + RSP],0x0
000066b2(5): MOV qword ptr [RSP + 0x78],RAX
000066b7(5): MOV byte ptr [RSP + 0x6c],0x1
000066bc(5): JMP 0x0000640d
000066c8(5): MOV byte ptr [RSP + 0x6c],0x1
000066cd(5): JMP 0x000063fe
000066d8(5): MOV RDI,qword ptr [RSP + 0x30]
000066dd(5): CALL 0x00001da0
000066e2(5): MOV byte ptr [RSP + 0x40],0x0
000066e7(5): MOV qword ptr [RSP + 0x38],RAX
000066ec(5): JMP 0x0000639f
000066f8(5): MOV byte ptr [RSP + 0x2c],0x1
000066fd(5): JMP 0x00006393
00006708(5): MOV byte ptr [RSP + 0x10],0x1
0000670d(5): JMP 0x00006316
00006718(5): MOV RDI,qword ptr [RSP + 0x8]
0000671d(5): CALL 0x00001da0
00006722(5): MOVZX EDX,byte ptr [RBP + RAX*0x1]
00006727(5): MOV byte ptr [RSP + 0x10],0x1
0000672c(2): TEST DL,DL
0000672e(6): JZ 0x0000610a
00006734(4): MOV byte ptr [RSP + 0x18],DL
00006738(5): CALL 0x000020e0
0000673d(5): MOVZX EDX,byte ptr [RSP + 0x18]
00006742(3): MOV RAX,qword ptr [RAX]
00006745(4): TEST byte ptr [RAX + RDX*0x2],0x8
00006749(6): JNZ 0x000060f5
0000674f(5): JMP 0x000060ee
00006758(5): CMP byte ptr [RSP + 0x40],0x0
0000675d(4): MOV EDX,dword ptr [RSP + 0x44]
00006761(6): JZ 0x00006532
00006767(5): JMP 0x0000652e
0000676c(4): LEA RDI,[RBX + 0x4]
00006770(5): CALL 0x000020b0
00006775(2): TEST EAX,EAX
00006777(6): JZ 0x00006957
0000677d(5): MOV byte ptr [RSP + 0x20],0x1
00006782(5): CALL 0x00001d90
00006787(5): MOV R8,qword ptr [RSP + 0x30]
0000678c(3): MOV RSI,RAX
0000678f(3): MOV RDI,R8
00006792(5): MOV qword ptr [RSP + 0x18],R8
00006797(5): CALL 0x00008c30
0000679c(5): MOV R8,qword ptr [RSP + 0x18]
000067a1(4): LEA RCX,[RBX + 0x4]
000067a5(3): MOV RDX,RAX
000067a8(3): MOV RDI,R14
000067ab(3): MOV RSI,R8
000067ae(5): CALL 0x0000a3b0
000067b3(4): CMP RAX,-0x1
000067b7(5): MOV qword ptr [RSP + 0x38],RAX
000067bc(6): JZ 0x000068af
000067c2(4): CMP RAX,-0x2
000067c6(6): JZ 0x00006930
000067cc(3): TEST RAX,RAX
000067cf(6): JZ 0x000068d9
000067d5(4): MOV EDX,dword ptr [RSP + 0x44]
000067d9(4): LEA RDI,[RBX + 0x4]
000067dd(4): MOV dword ptr [RSP + 0x18],EDX
000067e1(5): MOV byte ptr [RSP + 0x40],0x1
000067e6(5): CALL 0x000020b0
000067eb(2): TEST EAX,EAX
000067ed(4): MOV EDX,dword ptr [RSP + 0x18]
000067f1(6): JZ 0x00006912
000067f7(5): MOV byte ptr [RSP + 0x20],0x0
000067fc(5): MOV byte ptr [RSP + 0x2c],0x1
00006801(5): JMP 0x0000652e
00006810(3): MOV RDI,R15
00006813(5): CALL 0x000020b0
00006818(2): TEST EAX,EAX
0000681a(6): JZ 0x00006957
00006820(5): MOV byte ptr [RSP + 0x20],0x1
00006825(5): CALL 0x00001d90
0000682a(5): MOV R8,qword ptr [RSP + 0x30]
0000682f(3): MOV RSI,RAX
00006832(3): MOV RDI,R8
00006835(5): MOV qword ptr [RSP + 0x10],R8
0000683a(5): CALL 0x00008c30
0000683f(5): MOV R8,qword ptr [RSP + 0x10]
00006844(3): MOV RCX,R15
00006847(3): MOV RDX,RAX
0000684a(3): MOV RDI,R14
0000684d(3): MOV RSI,R8
00006850(5): CALL 0x0000a3b0
00006855(4): CMP RAX,-0x1
00006859(5): MOV qword ptr [RSP + 0x38],RAX
0000685e(2): JZ 0x000068cb
00006860(4): CMP RAX,-0x2
00006864(6): JZ 0x0000691c
0000686a(3): TEST RAX,RAX
0000686d(2): JNZ 0x0000688e
0000686f(5): MOV RAX,qword ptr [RSP + 0x30]
00006874(9): MOV qword ptr [RSP + 0x38],0x1
0000687d(3): CMP byte ptr [RAX],0x0
00006880(6): JNZ 0x0000697b
00006886(4): MOV EDX,dword ptr [RSP + 0x44]
0000688a(2): TEST EDX,EDX
0000688c(2): JNZ 0x000068fc
0000688e(4): LEA RDI,[RBX + 0x4]
00006892(5): MOV byte ptr [RSP + 0x40],0x1
00006897(5): CALL 0x000020b0
0000689c(2): TEST EAX,EAX
0000689e(2): JZ 0x00006908
000068a0(5): MOV byte ptr [RSP + 0x20],0x0
000068a5(5): MOV byte ptr [RSP + 0x2c],0x1
000068aa(5): JMP 0x0000659f
000068af(9): MOV qword ptr [RSP + 0x38],0x1
000068b8(5): MOV byte ptr [RSP + 0x40],0x0
000068bd(4): MOV EDX,dword ptr [RSP + 0x44]
000068c1(5): MOV byte ptr [RSP + 0x2c],0x1
000068c6(5): JMP 0x00006532
000068cb(9): MOV qword ptr [RSP + 0x38],0x1
000068d4(5): JMP 0x000065ab
000068d9(5): MOV RAX,qword ptr [RSP + 0x30]
000068de(9): MOV qword ptr [RSP + 0x38],0x1
000068e7(3): CMP byte ptr [RAX],0x0
000068ea(6): JNZ 0x0000697b
000068f0(4): MOV EDX,dword ptr [RSP + 0x44]
000068f4(2): TEST EDX,EDX
000068f6(6): JZ 0x000067d9
000068fc(5): CALL 0x00002120
00006901(7): NOP dword ptr [RAX]
00006908(5): MOV byte ptr [RSP + 0x2c],0x1
0000690d(5): JMP 0x0000659f
00006912(5): MOV byte ptr [RSP + 0x2c],0x1
00006917(5): JMP 0x0000652e
0000691c(5): MOV RDI,qword ptr [RSP + 0x30]
00006921(5): CALL 0x00001da0
00006926(5): MOV qword ptr [RSP + 0x38],RAX
0000692b(5): JMP 0x000065ab
00006930(5): MOV RDI,qword ptr [RSP + 0x30]
00006935(5): CALL 0x00001da0
0000693a(5): MOV byte ptr [RSP + 0x40],0x0
0000693f(5): MOV qword ptr [RSP + 0x38],RAX
00006944(4): MOV EDX,dword ptr [RSP + 0x44]
00006948(5): MOV byte ptr [RSP + 0x2c],0x1
0000694d(5): JMP 0x00006532
00006952(5): CALL 0x00001c70
00006957(7): LEA RCX,[0x1bd10]
0000695e(7): LEA RSI,[0x1bc98]
00006965(7): LEA RDI,[0x1bcca]
0000696c(5): MOV EDX,0x96
00006971(5): CALL 0x00001e30
00006976(5): CALL 0x00001db0
0000697b(7): LEA RCX,[0x1bd10]
00006982(7): LEA RSI,[0x1bc98]
00006989(7): LEA RDI,[0x1bce1]
00006990(5): MOV EDX,0xb2
00006995(5): CALL 0x00001e30
0000699a(6): NOP word ptr [RAX + RAX*0x1]
000069a0(2): PUSH R12
000069a2(1): PUSH RBP
000069a3(3): MOV RSI,RDI
000069a6(1): PUSH RBX
000069a7(3): MOV RBP,RDI
000069aa(5): MOV EDX,0x5
000069af(2): XOR EDI,EDI
000069b1(5): CALL 0x00001d80
000069b6(3): CMP RBP,RAX
000069b9(3): MOV RBX,RAX
000069bc(2): JZ 0x000069cd
000069be(3): MOV RSI,RBP
000069c1(3): MOV RDI,RAX
000069c4(5): CALL 0x00006030
000069c9(2): TEST AL,AL
000069cb(2): JZ 0x000069d8
000069cd(3): MOV RAX,RBX
000069d0(1): POP RBX
000069d1(1): POP RBP
000069d2(2): POP R12
000069d4(1): RET
000069d8(3): MOV RDI,RBX
000069db(5): CALL 0x00001da0
000069e0(3): MOV RDI,RBP
000069e3(3): MOV R12,RAX
000069e6(5): CALL 0x00001da0
000069eb(5): LEA RDI,[R12 + RAX*0x1 + 0x4]
000069f0(5): CALL 0x000098c0
000069f5(7): LEA RCX,[0x1bcf8]
000069fc(3): MOV R12,RAX
000069ff(3): MOV R9,RBP
00006a02(3): MOV R8,RBX
00006a05(3): MOV RDI,RAX
00006a08(3): MOV RBX,R12
00006a0b(7): MOV RDX,-0x1
00006a12(5): MOV ESI,0x1
00006a17(2): XOR EAX,EAX
00006a19(5): CALL 0x00002100
00006a1e(3): MOV RAX,RBX
00006a21(1): POP RBX
00006a22(1): POP RBP
00006a23(2): POP R12
00006a25(1): RET
00006a30(2): PUSH R15
00006a32(2): PUSH R14
00006a34(5): MOV EDX,0x5
00006a39(2): PUSH R13
00006a3b(2): PUSH R12
00006a3d(3): MOV R13,RDI
00006a40(1): PUSH RBP
00006a41(1): PUSH RBX
00006a42(3): MOV RBP,RSI
00006a45(3): MOV RSI,RDI
00006a48(2): XOR EDI,EDI
00006a4a(4): SUB RSP,0x18
00006a4e(5): CALL 0x00001d80
00006a53(3): MOV R14,RAX
00006a56(5): CALL 0x00018780
00006a5b(7): LEA RSI,[0x1bd00]
00006a62(3): MOV RDI,RAX
00006a65(3): MOV R12,RAX
00006a68(5): CALL 0x00018650
00006a6d(2): TEST EAX,EAX
00006a6f(6): JNZ 0x00006b58
00006a75(3): TEST RBP,RBP
00006a78(2): JZ 0x00006ad0
00006a7a(5): MOV qword ptr [RSP + 0x8],RBP
00006a7f(3): MOV RBX,RBP
00006a82(3): XOR R12D,R12D
00006a85(3): XOR R15D,R15D
00006a88(3): MOV RSI,R13
00006a8b(3): MOV RDI,R14
00006a8e(5): CALL 0x00001ed0
00006a93(2): TEST EAX,EAX
00006a95(2): JNZ 0x00006af1
00006a97(3): TEST R15,R15
00006a9a(2): JZ 0x00006aa9
00006a9c(3): CMP RBX,R15
00006a9f(2): JZ 0x00006aa9
00006aa1(3): MOV RDI,R15
00006aa4(5): CALL 0x00001c60
00006aa9(3): TEST R12,R12
00006aac(2): JZ 0x00006abb
00006aae(3): CMP RBX,R12
00006ab1(2): JZ 0x00006abb
00006ab3(3): MOV RDI,R12
00006ab6(5): CALL 0x00001c60
00006abb(4): ADD RSP,0x18
00006abf(3): MOV RAX,RBX
00006ac2(1): POP RBX
00006ac3(1): POP RBP
00006ac4(2): POP R12
00006ac6(2): POP R13
00006ac8(2): POP R14
00006aca(2): POP R15
00006acc(1): RET
00006ad0(3): MOV RSI,R13
00006ad3(3): MOV RDI,R14
00006ad6(9): MOV qword ptr [RSP + 0x8],0x0
00006adf(3): XOR R12D,R12D
00006ae2(3): XOR R15D,R15D
00006ae5(3): MOV RBX,R13
00006ae8(5): CALL 0x00001ed0
00006aed(2): TEST EAX,EAX
00006aef(2): JZ 0x00006a97
00006af1(3): MOV RSI,R13
00006af4(3): MOV RDI,R14
00006af7(5): CALL 0x00006030
00006afc(2): TEST AL,AL
00006afe(2): JNZ 0x00006b38
00006b00(3): TEST RBP,RBP
00006b03(2): JZ 0x00006b14
00006b05(3): MOV RSI,RBP
00006b08(3): MOV RDI,R14
00006b0b(5): CALL 0x00006030
00006b10(2): TEST AL,AL
00006b12(2): JNZ 0x00006b38
00006b14(6): CMP qword ptr [RSP + 0x8],0x0
00006b1a(6): JZ 0x00006c90
00006b20(5): MOV RSI,qword ptr [RSP + 0x8]
00006b25(3): MOV RDI,R14
00006b28(5): CALL 0x00006030
00006b2d(2): TEST AL,AL
00006b2f(6): JZ 0x00006c90
00006b35(3): NOP dword ptr [RAX]
00006b38(3): TEST R15,R15
00006b3b(6): JNZ 0x00006c30
00006b41(3): TEST R12,R12
00006b44(3): MOV RBX,R14
00006b47(6): JNZ 0x00006ab3
00006b4d(5): JMP 0x00006abb
00006b58(7): LEA RSI,[0x1bd00]
00006b5f(3): MOV RDX,R12
00006b62(3): MOV RDI,RBP
00006b65(5): CALL 0x00009ba0
00006b6a(3): MOV RDI,R12
00006b6d(3): MOV RBX,RAX
00006b70(5): CALL 0x00001da0
00006b75(4): LEA RDI,[RAX + 0xb]
00006b79(3): MOV R15,RAX
00006b7c(5): CALL 0x000098c0
00006b81(3): MOV RDX,R15
00006b84(3): MOV RSI,R12
00006b87(3): MOV RDI,RAX
00006b8a(5): CALL 0x00001ee0
00006b8f(3): MOV RCX,RAX
00006b92(3): ADD R15,RAX
00006b95(10): MOV RAX,0x4c534e4152542f2f
00006b9f(3): MOV qword ptr [R15],RAX
00006ba2(7): LEA RSI,[0x1bd00]
00006ba9(5): MOV EAX,0x5449
00006bae(3): MOV RDX,RCX
00006bb1(3): MOV RDI,RBP
00006bb4(5): MOV word ptr [R15 + 0x8],AX
00006bb9(5): MOV byte ptr [R15 + 0xa],0x0
00006bbe(5): MOV qword ptr [RSP + 0x8],RCX
00006bc3(5): CALL 0x00009ba0
00006bc8(5): MOV RCX,qword ptr [RSP + 0x8]
00006bcd(3): MOV R12,RAX
00006bd0(3): MOV RDI,RCX
00006bd3(5): CALL 0x00001c60
00006bd8(3): TEST R12,R12
00006bdb(2): JZ 0x00006bf7
00006bdd(5): MOV ESI,0x3f
00006be2(3): MOV RDI,R12
00006be5(5): CALL 0x00001df0
00006bea(3): TEST RAX,RAX
00006bed(2): JZ 0x00006c50
00006bef(3): MOV RDI,R12
00006bf2(5): CALL 0x00001c60
00006bf7(3): TEST RBX,RBX
00006bfa(2): JZ 0x00006c70
00006bfc(3): MOV RSI,R13
00006bff(3): MOV RDI,R14
00006c02(5): CALL 0x00001ed0
00006c07(2): TEST EAX,EAX
00006c09(6): JZ 0x00006abb
00006c0f(3): MOV RSI,R13
00006c12(3): MOV RDI,R14
00006c15(5): CALL 0x00006030
00006c1a(2): TEST AL,AL
00006c1c(6): JZ 0x00006cf8
00006c22(3): MOV R15,RBX
00006c25(3): XOR R12D,R12D
00006c28(8): NOP dword ptr [RAX + RAX*0x1]
00006c30(3): MOV RDI,R15
00006c33(3): MOV RBX,R14
00006c36(5): CALL 0x00001c60
00006c3b(3): TEST R12,R12
00006c3e(6): JNZ 0x00006ab3
00006c44(5): JMP 0x00006abb
00006c50(3): TEST RBX,RBX
00006c53(5): MOV qword ptr [RSP + 0x8],R12
00006c58(6): JZ 0x00006d10
00006c5e(3): MOV RBP,RBX
00006c61(3): MOV R15,RBX
00006c64(5): JMP 0x00006a88
00006c70(3): MOV RBX,R13
00006c73(9): MOV qword ptr [RSP + 0x8],0x0
00006c7c(2): XOR EBP,EBP
00006c7e(3): XOR R12D,R12D
00006c81(3): XOR R15D,R15D
00006c84(5): JMP 0x00006a88
00006c90(3): MOV RDI,R14
00006c93(5): CALL 0x00001da0
00006c98(3): MOV RDI,RBX
00006c9b(3): MOV RBP,RAX
00006c9e(5): CALL 0x00001da0
00006ca3(5): LEA RDI,[RBP + RAX*0x1 + 0x4]
00006ca8(5): CALL 0x000098c0
00006cad(7): LEA RCX,[0x1bcf8]
00006cb4(3): MOV RDI,RAX
00006cb7(3): MOV RBP,RAX
00006cba(3): MOV R9,RBX
00006cbd(2): XOR EAX,EAX
00006cbf(3): MOV R8,R14
00006cc2(7): MOV RDX,-0x1
00006cc9(5): MOV ESI,0x1
00006cce(5): CALL 0x00002100
00006cd3(3): TEST R15,R15
00006cd6(2): JZ 0x00006ce0
00006cd8(3): MOV RDI,R15
00006cdb(5): CALL 0x00001c60
00006ce0(3): TEST R12,R12
00006ce3(3): MOV RBX,RBP
00006ce6(6): JNZ 0x00006ab3
00006cec(5): JMP 0x00006abb
00006cf8(3): MOV RBP,RBX
00006cfb(3): MOV R15,RBX
00006cfe(9): MOV qword ptr [RSP + 0x8],0x0
00006d07(3): XOR R12D,R12D
00006d0a(5): JMP 0x00006b00
00006d10(2): XOR EBP,EBP
00006d12(3): XOR R15D,R15D
00006d15(3): MOV RBX,R12
00006d18(5): JMP 0x00006a88
00006d20(1): PUSH RBP
00006d21(1): PUSH RBX
00006d22(3): MOV RBP,RDI
00006d25(2): MOV EBX,ESI
00006d27(4): SUB RSP,0x8
00006d2b(5): CALL 0x00018780
00006d30(3): MOVZX EDX,byte ptr [RAX]
00006d33(3): AND EDX,0xffffffdf
00006d36(3): CMP DL,0x55
00006d39(2): JZ 0x00006db0
00006d3b(3): CMP DL,0x47
00006d3e(2): JZ 0x00006d60
00006d40(7): LEA RAX,[0x1b8a8]
00006d47(7): LEA RDX,[0x1bcf6]
00006d4e(3): CMP EBX,0x9
00006d51(4): CMOVNZ RAX,RDX
00006d55(4): ADD RSP,0x8
00006d59(1): POP RBX
00006d5a(1): POP RBP
00006d5b(1): RET
00006d60(4): MOVZX EDX,byte ptr [RAX + 0x1]
00006d64(3): AND EDX,0xffffffdf
00006d67(3): CMP DL,0x42
00006d6a(2): JNZ 0x00006d40
00006d6c(4): CMP byte ptr [RAX + 0x2],0x31
00006d70(2): JNZ 0x00006d40
00006d72(4): CMP byte ptr [RAX + 0x3],0x38
00006d76(2): JNZ 0x00006d40
00006d78(4): CMP byte ptr [RAX + 0x4],0x30
00006d7c(2): JNZ 0x00006d40
00006d7e(4): CMP byte ptr [RAX + 0x5],0x33
00006d82(2): JNZ 0x00006d40
00006d84(4): CMP byte ptr [RAX + 0x6],0x30
00006d88(2): JNZ 0x00006d40
00006d8a(4): CMP byte ptr [RAX + 0x7],0x0
00006d8e(2): JNZ 0x00006d40
00006d90(4): CMP byte ptr [RBP],0x60
00006d94(7): LEA RAX,[0x1bd2b]
00006d9b(7): LEA RDX,[0x1bd2f]
00006da2(4): CMOVNZ RAX,RDX
00006da6(4): ADD RSP,0x8
00006daa(1): POP RBX
00006dab(1): POP RBP
00006dac(1): RET
00006db0(4): MOVZX EDX,byte ptr [RAX + 0x1]
00006db4(3): AND EDX,0xffffffdf
00006db7(3): CMP DL,0x54
00006dba(2): JNZ 0x00006d40
00006dbc(4): MOVZX EDX,byte ptr [RAX + 0x2]
00006dc0(3): AND EDX,0xffffffdf
00006dc3(3): CMP DL,0x46
00006dc6(6): JNZ 0x00006d40
00006dcc(4): CMP byte ptr [RAX + 0x3],0x2d
00006dd0(6): JNZ 0x00006d40
00006dd6(4): CMP byte ptr [RAX + 0x4],0x38
00006dda(6): JNZ 0x00006d40
00006de0(4): CMP byte ptr [RAX + 0x5],0x0
00006de4(6): JNZ 0x00006d40
00006dea(4): CMP byte ptr [RBP],0x60
00006dee(7): LEA RAX,[0x1bd23]
00006df5(7): LEA RDX,[0x1bd27]
00006dfc(4): CMOVNZ RAX,RDX
00006e00(4): ADD RSP,0x8
00006e04(1): POP RBX
00006e05(1): POP RBP
00006e06(1): RET
00006e10(2): PUSH R15
00006e12(2): PUSH R14
00006e14(3): MOV R15D,R8D
00006e17(2): PUSH R13
00006e19(2): PUSH R12
00006e1b(3): MOV R14,RDI
00006e1e(1): PUSH RBP
00006e1f(1): PUSH RBX
00006e20(3): MOV EBX,R9D
00006e23(3): MOV R13,RSI
00006e26(3): MOV RBP,RCX
00006e29(3): AND EBX,0x2
00006e2c(7): SUB RSP,0xb8
00006e33(8): MOV RAX,qword ptr [0xf0 + RSP]
00006e3b(5): MOV qword ptr [RSP + 0x10],RDX
00006e40(5): MOV dword ptr [RSP + 0x8],R8D
00006e45(5): MOV dword ptr [RSP + 0x78],R9D
00006e4a(5): MOV qword ptr [RSP + 0x20],RAX
00006e4f(8): MOV RAX,qword ptr [0xf8 + RSP]
00006e57(5): MOV qword ptr [RSP + 0x68],RAX
00006e5c(8): MOV RAX,qword ptr [0x100 + RSP]
00006e64(5): MOV qword ptr [RSP + 0x60],RAX
00006e69(9): MOV RAX,qword ptr FS:[0x28]
00006e72(8): MOV qword ptr [0xa8 + RSP],RAX
00006e7a(2): XOR EAX,EAX
00006e7c(5): CALL 0x00001d90
00006e81(4): CMP R15D,0xa
00006e85(5): MOV qword ptr [RSP + 0x58],RAX
00006e8a(6): JA 0x0000803f
00006e90(7): LEA RCX,[0x1bd80]
00006e97(3): MOV EDX,R15D
00006e9a(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00006e9e(3): ADD RAX,RCX
00006ea1(2): JMP RAX
00006ea3(5): MOV byte ptr [RSP + 0xe],0x1
00006ea8(5): MOV byte ptr [RSP + 0x7c],0x0
00006ead(3): XOR R12D,R12D
00006eb0(9): MOV qword ptr [RSP + 0x50],0x0
00006eb9(5): MOV byte ptr [RSP + 0xf],0x1
00006ebe(5): MOV byte ptr [RSP + 0xd],0x0
00006ec3(7): LEA RAX,[0x1bcf6]
00006eca(9): MOV qword ptr [RSP + 0x18],0x1
00006ed3(3): XOR R15D,R15D
00006ed6(8): MOV dword ptr [RSP + 0x8],0x2
00006ede(5): MOV qword ptr [RSP + 0x48],RAX
00006ee3(3): XOR R11D,R11D
00006ee6(3): MOV RAX,RBP
00006ee9(3): MOV R8D,R12D
00006eec(3): MOV RBP,R11
00006eef(3): MOV R11,RAX
00006ef2(6): NOP word ptr [RAX + RAX*0x1]
00006ef8(3): CMP R11,RBP
00006efb(4): SETNZ R12B
00006eff(4): CMP R11,-0x1
00006f03(2): JNZ 0x00006f12
00006f05(5): MOV RAX,qword ptr [RSP + 0x10]
00006f0a(4): CMP byte ptr [RAX + RBP*0x1],0x0
00006f0e(4): SETNZ R12B
00006f12(3): TEST R12B,R12B
00006f15(6): JZ 0x00007570
00006f1b(5): CMP dword ptr [RSP + 0x8],0x2
00006f20(5): MOV RDI,qword ptr [RSP + 0x10]
00006f25(4): LEA R9,[RDI + RBP*0x1]
00006f29(3): SETNZ AL
00006f2c(4): AND AL,byte ptr [RSP + 0xd]
00006f30(3): MOV R10D,EAX
00006f33(6): JZ 0x00006fe0
00006f39(5): MOV RAX,qword ptr [RSP + 0x18]
00006f3e(3): TEST RAX,RAX
00006f41(6): JZ 0x00007370
00006f47(4): CMP R11,-0x1
00006f4b(5): LEA RBX,[RBP + RAX*0x1]
00006f50(2): JNZ 0x00006f80
00006f52(4): CMP RAX,0x1
00006f56(2): JBE 0x00006f80
00006f58(5): MOV byte ptr [RSP + 0x38],R8B
00006f5d(5): MOV byte ptr [RSP + 0x30],R10B
00006f62(5): MOV qword ptr [RSP + 0x28],R9
00006f67(5): CALL 0x00001da0
00006f6c(6): MOVZX R8D,byte ptr [RSP + 0x38]
00006f72(6): MOVZX R10D,byte ptr [RSP + 0x30]
00006f78(3): MOV R11,RAX
00006f7b(5): MOV R9,qword ptr [RSP + 0x28]
00006f80(3): CMP RBX,R11
00006f83(5): MOV byte ptr [RSP + 0x28],R10B
00006f88(6): JA 0x00007540
00006f8e(5): MOV RDX,qword ptr [RSP + 0x18]
00006f93(5): MOV RSI,qword ptr [RSP + 0x48]
00006f98(3): MOV RDI,R9
00006f9b(5): MOV qword ptr [RSP + 0x40],R11
00006fa0(5): MOV byte ptr [RSP + 0x38],R8B
00006fa5(5): MOV qword ptr [RSP + 0x30],R9
00006faa(5): CALL 0x00001e90
00006faf(2): TEST EAX,EAX
00006fb1(5): MOV R9,qword ptr [RSP + 0x30]
00006fb6(6): MOVZX R8D,byte ptr [RSP + 0x38]
00006fbc(5): MOV R11,qword ptr [RSP + 0x40]
00006fc1(6): JNZ 0x00007540
00006fc7(5): CMP byte ptr [RSP + 0xf],0x0
00006fcc(6): MOVZX R10D,byte ptr [RSP + 0x28]
00006fd2(6): JNZ 0x00007f55
00006fd8(8): NOP dword ptr [RAX + RAX*0x1]
00006fe0(4): MOVZX EBX,byte ptr [R9]
00006fe4(3): CMP BL,0x7e
00006fe7(6): JA 0x00007308
00006fed(7): LEA RCX,[0x1bdac]
00006ff4(3): MOVZX EDX,BL
00006ff7(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00006ffb(3): ADD RAX,RCX
00006ffe(2): JMP RAX
00007000(3): XOR R10D,R10D
00007003(4): CMP R11,0x1
00007007(3): SETNZ AL
0000700a(4): CMP R11,-0x1
0000700e(2): JNZ 0x0000701c
00007010(5): MOV RAX,qword ptr [RSP + 0x10]
00007015(4): CMP byte ptr [RAX + 0x1],0x0
00007019(3): SETNZ AL
0000701c(5): CMP dword ptr [RSP + 0x8],0x2
00007021(3): SETZ DL
00007024(2): TEST AL,AL
00007026(6): JZ 0x00007278
0000702c(3): XOR R12D,R12D
0000702f(2): XOR EAX,EAX
00007031(7): NOP dword ptr [RAX]
00007038(5): CMP byte ptr [RSP + 0xd],0x1
0000703d(6): JNZ 0x00007152
00007043(2): TEST DL,DL
00007045(6): JNZ 0x00007152
0000704b(5): MOV RSI,qword ptr [RSP + 0x20]
00007050(3): TEST RSI,RSI
00007053(2): JZ 0x00007069
00007055(2): MOV EDX,EBX
00007057(3): SHR DL,0x5
0000705a(3): MOVZX EDX,DL
0000705d(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00007060(3): BT EDX,EBX
00007063(6): JC 0x000071b3
00007069(3): TEST R10B,R10B
0000706c(6): JNZ 0x000071b3
00007072(3): XOR EAX,0x1
00007075(4): ADD RBP,0x1
00007079(3): AND EAX,R8D
0000707c(2): TEST AL,AL
0000707e(2): JZ 0x000070a0
00007080(3): CMP R13,R15
00007083(2): JBE 0x0000708a
00007085(5): MOV byte ptr [R14 + R15*0x1],0x27
0000708a(4): LEA RAX,[R15 + 0x1]
0000708e(3): CMP R13,RAX
00007091(2): JBE 0x00007099
00007093(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
00007099(4): ADD R15,0x2
0000709d(3): XOR R8D,R8D
000070a0(3): CMP R15,R13
000070a3(2): JNC 0x000070a9
000070a5(4): MOV byte ptr [R14 + R15*0x1],BL
000070a9(5): MOVZX EDI,byte ptr [RSP + 0xe]
000070ae(4): ADD R15,0x1
000070b2(5): MOV EAX,0x0
000070b7(3): TEST R12B,R12B
000070ba(3): CMOVZ EDI,EAX
000070bd(5): MOV byte ptr [RSP + 0xe],DIL
000070c2(5): JMP 0x00006ef8
000070d0(3): XOR R10D,R10D
000070d3(4): MOV EAX,dword ptr [RSP + 0x8]
000070d7(3): CMP EAX,0x2
000070da(6): JZ 0x00007698
000070e0(3): CMP EAX,0x5
000070e3(6): JZ 0x00007658
000070e9(3): CMP EAX,0x2
000070ec(5): MOV EBX,0x3f
000070f1(3): SETZ DL
000070f4(3): XOR R12D,R12D
000070f7(2): XOR EAX,EAX
000070f9(5): JMP 0x00007038
00007100(3): XOR R10D,R10D
00007103(5): CMP dword ptr [RSP + 0x8],0x2
00007108(6): JZ 0x00007610
0000710e(5): MOV byte ptr [RSP + 0x7c],R12B
00007113(2): XOR EDX,EDX
00007115(2): XOR EAX,EAX
00007117(5): MOV EBX,0x27
0000711c(5): JMP 0x00007038
00007128(5): MOV EDX,0x9
0000712d(5): MOV EBX,0x74
00007132(5): CMP dword ptr [RSP + 0x8],0x2
00007137(3): SETZ AL
0000713a(4): AND AL,byte ptr [RSP + 0xf]
0000713e(6): JNZ 0x0000728e
00007144(5): CMP byte ptr [RSP + 0xd],0x0
00007149(2): JNZ 0x000071b0
0000714b(2): MOV EBX,EDX
0000714d(3): XOR R12D,R12D
00007150(2): XOR EAX,EAX
00007152(5): CMP byte ptr [RSP + 0xf],0x0
00007157(6): JNZ 0x0000704b
0000715d(5): JMP 0x00007069
00007168(5): MOV EDX,0x8
0000716d(5): MOV EBX,0x62
00007172(2): JMP 0x00007144
00007178(5): CMP dword ptr [RSP + 0x8],0x2
0000717d(6): JZ 0x00007550
00007183(5): CMP byte ptr [RSP + 0xd],0x0
00007188(6): JZ 0x000073a0
0000718e(5): CMP byte ptr [RSP + 0xf],0x0
00007193(6): JZ 0x000073a0
00007199(6): CMP qword ptr [RSP + 0x18],0x0
0000719f(6): JNZ 0x0000755b
000071a5(5): MOV EBX,0x5c
000071aa(6): NOP word ptr [RAX + RAX*0x1]
000071b0(3): XOR R12D,R12D
000071b3(5): CMP dword ptr [RSP + 0x8],0x2
000071b8(3): SETZ DL
000071bb(5): CMP byte ptr [RSP + 0xf],0x0
000071c0(2): MOV EAX,EDX
000071c2(6): JNZ 0x00007a18
000071c8(3): MOV EAX,R8D
000071cb(3): XOR EAX,0x1
000071ce(2): AND AL,DL
000071d0(2): JZ 0x00007201
000071d2(3): CMP R13,R15
000071d5(2): JBE 0x000071dc
000071d7(5): MOV byte ptr [R14 + R15*0x1],0x27
000071dc(4): LEA RDX,[R15 + 0x1]
000071e0(3): CMP R13,RDX
000071e3(2): JBE 0x000071eb
000071e5(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
000071eb(4): LEA RDX,[R15 + 0x2]
000071ef(3): CMP R13,RDX
000071f2(2): JBE 0x000071fa
000071f4(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
000071fa(4): ADD R15,0x3
000071fe(3): MOV R8D,EAX
00007201(3): CMP R13,R15
00007204(2): JBE 0x0000720b
00007206(5): MOV byte ptr [R14 + R15*0x1],0x5c
0000720b(4): ADD R15,0x1
0000720f(4): ADD RBP,0x1
00007213(5): JMP 0x000070a0
00007220(5): CMP byte ptr [RSP + 0xd],0x0
00007225(6): JNZ 0x000073f3
0000722b(2): XOR EDX,EDX
0000722d(5): TEST byte ptr [RSP + 0x78],0x1
00007232(6): JZ 0x0000714b
00007238(4): ADD RBP,0x1
0000723c(5): JMP 0x00006ef8
00007248(5): CMP dword ptr [RSP + 0x8],0x2
0000724d(3): SETZ DL
00007250(2): XOR EAX,EAX
00007252(5): JMP 0x00007038
00007260(5): MOV EDX,0x7
00007265(5): MOV EBX,0x61
0000726a(5): JMP 0x00007144
00007270(5): CMP dword ptr [RSP + 0x8],0x2
00007275(3): SETZ DL
00007278(3): TEST RBP,RBP
0000727b(6): JNZ 0x0000702c
00007281(5): MOVZX EAX,byte ptr [RSP + 0xf]
00007286(2): AND AL,DL
00007288(6): JZ 0x00007038
0000728e(3): MOV RBP,R11
00007291(8): MOV dword ptr [RSP + 0x8],0x2
00007299(5): JMP 0x00007999
000072a0(5): CMP dword ptr [RSP + 0x8],0x2
000072a5(3): SETZ DL
000072a8(3): XOR R12D,R12D
000072ab(2): JMP 0x00007281
000072b0(5): CMP dword ptr [RSP + 0x8],0x2
000072b5(5): MOV EBX,0x20
000072ba(3): SETZ DL
000072bd(2): JMP 0x00007281
000072c0(5): MOV EDX,0xd
000072c5(5): MOV EBX,0x72
000072ca(5): JMP 0x00007132
000072d0(5): MOV EDX,0xc
000072d5(5): MOV EBX,0x66
000072da(5): JMP 0x00007144
000072e0(5): MOV EDX,0xb
000072e5(5): MOV EBX,0x76
000072ea(5): JMP 0x00007144
000072f0(5): MOV EDX,0xa
000072f5(5): MOV EBX,0x6e
000072fa(5): JMP 0x00007132
00007300(3): XOR R10D,R10D
00007303(5): NOP dword ptr [RAX + RAX*0x1]
00007308(6): CMP qword ptr [RSP + 0x58],0x1
0000730e(6): JNZ 0x000076b8
00007314(5): MOV qword ptr [RSP + 0x38],R11
00007319(5): MOV byte ptr [RSP + 0x30],R8B
0000731e(5): MOV byte ptr [RSP + 0x28],R10B
00007323(5): CALL 0x000020e0
00007328(3): MOV RCX,qword ptr [RAX]
0000732b(3): MOVZX EDX,BL
0000732e(6): MOVZX R10D,byte ptr [RSP + 0x28]
00007334(6): MOVZX R8D,byte ptr [RSP + 0x30]
0000733a(5): MOV R11,qword ptr [RSP + 0x38]
0000733f(5): MOV EDI,0x1
00007344(4): MOVZX EAX,word ptr [RCX + RDX*0x2]
00007348(4): AND AX,0x4000
0000734c(4): SETNZ R12B
00007350(3): SETZ AL
00007353(4): AND AL,byte ptr [RSP + 0xd]
00007357(2): TEST AL,AL
00007359(6): JNZ 0x00007cf1
0000735f(5): CMP dword ptr [RSP + 0x8],0x2
00007364(3): SETZ DL
00007367(5): JMP 0x00007038
00007370(4): MOVZX EBX,byte ptr [R9]
00007374(3): CMP BL,0x7e
00007377(2): JA 0x00007300
00007379(7): LEA RCX,[0x1bfa8]
00007380(3): MOVZX EDX,BL
00007383(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00007387(3): ADD RAX,RCX
0000738a(2): JMP RAX
00007390(3): XOR R10D,R10D
00007393(5): CMP byte ptr [RSP + 0xd],0x0
00007398(6): JNZ 0x0000718e
0000739e(2): NOP
000073a0(5): MOV EDX,0x5c
000073a5(5): MOV EBX,0x5c
000073aa(5): JMP 0x00007144
000073b0(5): MOV EDX,0xc
000073b5(3): XOR R10D,R10D
000073b8(5): MOV EBX,0x66
000073bd(5): JMP 0x00007144
000073c8(5): MOV EDX,0xa
000073cd(3): XOR R10D,R10D
000073d0(5): MOV EBX,0x6e
000073d5(5): JMP 0x00007132
000073e0(5): MOV EBX,0x61
000073e5(5): JMP 0x000071b0
000073f0(3): XOR R10D,R10D
000073f3(5): CMP dword ptr [RSP + 0x8],0x2
000073f8(3): SETZ DL
000073fb(5): CMP byte ptr [RSP + 0xf],0x0
00007400(6): JNZ 0x00007f9a
00007406(3): MOV EAX,R8D
00007409(3): MOV RCX,R15
0000740c(3): XOR EAX,0x1
0000740f(2): AND AL,DL
00007411(2): JZ 0x00007440
00007413(3): CMP R13,R15
00007416(2): JBE 0x0000741d
00007418(5): MOV byte ptr [R14 + R15*0x1],0x27
0000741d(4): LEA RCX,[R15 + 0x1]
00007421(3): CMP R13,RCX
00007424(2): JBE 0x0000742c
00007426(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
0000742c(4): LEA RCX,[R15 + 0x2]
00007430(3): CMP R13,RCX
00007433(6): JA 0x00007a69
00007439(4): LEA RCX,[R15 + 0x3]
0000743d(3): MOV R8D,EAX
00007440(3): CMP R13,RCX
00007443(2): JBE 0x0000744a
00007445(5): MOV byte ptr [R14 + RCX*0x1],0x5c
0000744a(5): CMP dword ptr [RSP + 0x8],0x2
0000744f(4): LEA R15,[RCX + 0x1]
00007453(6): JZ 0x00007a59
00007459(4): LEA RAX,[RBP + 0x1]
0000745d(3): CMP RAX,R11
00007460(2): JNC 0x0000747b
00007462(5): MOV RAX,qword ptr [RSP + 0x10]
00007467(5): MOVZX EAX,byte ptr [RAX + RBP*0x1 + 0x1]
0000746c(4): MOV byte ptr [RSP + 0x28],AL
00007470(3): SUB EAX,0x30
00007473(2): CMP AL,0x9
00007475(6): JBE 0x00007ca9
0000747b(3): MOV EAX,R12D
0000747e(5): MOV EBX,0x30
00007483(3): XOR R12D,R12D
00007486(5): JMP 0x00007038
00007490(5): CMP dword ptr [RSP + 0x8],0x2
00007495(3): MOV R12D,R10D
00007498(3): SETZ DL
0000749b(3): XOR R10D,R10D
0000749e(2): XOR EAX,EAX
000074a0(5): JMP 0x00007038
000074a8(5): CMP dword ptr [RSP + 0x8],0x2
000074ad(3): SETZ DL
000074b0(3): XOR R10D,R10D
000074b3(5): JMP 0x00007278
000074c0(5): CMP dword ptr [RSP + 0x8],0x2
000074c5(3): SETZ DL
000074c8(3): XOR R10D,R10D
000074cb(3): XOR R12D,R12D
000074ce(5): JMP 0x00007281
000074d8(5): CMP dword ptr [RSP + 0x8],0x2
000074dd(3): MOV R12D,R10D
000074e0(5): MOV EBX,0x20
000074e5(3): SETZ DL
000074e8(3): XOR R10D,R10D
000074eb(5): JMP 0x00007281
000074f0(5): MOV EDX,0xd
000074f5(3): XOR R10D,R10D
000074f8(5): MOV EBX,0x72
000074fd(5): JMP 0x00007132
00007508(5): MOV EBX,0x76
0000750d(5): JMP 0x000071b0
00007518(5): MOV EDX,0x9
0000751d(3): XOR R10D,R10D
00007520(5): MOV EBX,0x74
00007525(5): JMP 0x00007132
00007530(5): MOV EBX,0x62
00007535(5): JMP 0x000071b0
00007540(3): XOR R10D,R10D
00007543(5): JMP 0x00006fe0
00007550(5): CMP byte ptr [RSP + 0xf],0x0
00007555(6): JNZ 0x00007ec0
0000755b(4): ADD RBP,0x1
0000755f(3): MOV EAX,R8D
00007562(3): XOR R12D,R12D
00007565(5): MOV EBX,0x5c
0000756a(5): JMP 0x0000707c
00007570(5): CMP dword ptr [RSP + 0x8],0x2
00007575(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000757a(3): MOV R12D,R8D
0000757d(3): MOV RBP,R11
00007580(3): SETZ DL
00007583(2): MOV EAX,EBX
00007585(3): TEST R15,R15
00007588(3): SETZ CL
0000758b(2): AND EAX,EDX
0000758d(2): AND AL,CL
0000758f(6): JNZ 0x00007ff6
00007595(2): MOV EAX,EBX
00007597(3): XOR EAX,0x1
0000759a(2): AND DL,AL
0000759c(6): JZ 0x00007f0c
000075a2(5): CMP byte ptr [RSP + 0x7c],0x0
000075a7(6): JZ 0x00007f0a
000075ad(5): CMP byte ptr [RSP + 0xe],0x0
000075b2(6): JNZ 0x00007fad
000075b8(3): TEST R13,R13
000075bb(3): SETZ AL
000075be(6): CMP qword ptr [RSP + 0x50],0x0
000075c4(3): SETNZ DL
000075c7(2): AND AL,DL
000075c9(6): JZ 0x00007fec
000075cf(5): MOV R13,qword ptr [RSP + 0x50]
000075d4(7): LEA RBX,[0x1bcf6]
000075db(4): MOV byte ptr [R14],0x27
000075df(8): MOV dword ptr [RSP + 0x8],0x2
000075e7(6): MOV R15D,0x1
000075ed(9): MOV qword ptr [RSP + 0x18],0x1
000075f6(5): MOV byte ptr [RSP + 0xf],0x0
000075fb(5): MOV qword ptr [RSP + 0x48],RBX
00007600(4): MOV byte ptr [RSP + 0x7c],AL
00007604(5): JMP 0x00006ee3
00007610(5): CMP byte ptr [RSP + 0xf],0x0
00007615(6): JNZ 0x00007ec0
0000761b(3): TEST R13,R13
0000761e(6): JZ 0x00007a20
00007624(2): XOR EDX,EDX
00007626(6): CMP qword ptr [RSP + 0x50],0x0
0000762c(6): JNZ 0x00007a20
00007632(5): MOV qword ptr [RSP + 0x50],R13
00007637(4): ADD R15,0x3
0000763b(2): XOR EAX,EAX
0000763d(5): MOV byte ptr [RSP + 0x7c],R12B
00007642(3): XOR R8D,R8D
00007645(3): MOV R13,RDX
00007648(5): MOV EBX,0x27
0000764d(5): JMP 0x00007069
00007658(5): TEST byte ptr [RSP + 0x78],0x4
0000765d(2): JZ 0x00007680
0000765f(4): LEA RCX,[RBP + 0x2]
00007663(3): CMP RCX,R11
00007666(2): JNC 0x00007680
00007668(5): MOV RAX,qword ptr [RSP + 0x10]
0000766d(5): CMP byte ptr [RAX + RBP*0x1 + 0x1],0x3f
00007672(6): JZ 0x00007e02
00007678(8): NOP dword ptr [RAX + RAX*0x1]
00007680(2): XOR EDX,EDX
00007682(3): XOR R12D,R12D
00007685(2): XOR EAX,EAX
00007687(5): MOV EBX,0x3f
0000768c(5): JMP 0x00007038
00007698(5): CMP byte ptr [RSP + 0xf],0x0
0000769d(6): JNZ 0x00007ec0
000076a3(3): XOR R12D,R12D
000076a6(2): XOR EAX,EAX
000076a8(5): MOV EBX,0x3f
000076ad(5): JMP 0x00007069
000076b8(8): LEA RAX,[0xa0 + RSP]
000076c0(4): CMP R11,-0x1
000076c4(12): MOV qword ptr [0xa0 + RSP],0x0
000076d0(5): MOV qword ptr [RSP + 0x28],RAX
000076d5(2): JNZ 0x00007704
000076d7(5): MOV RDI,qword ptr [RSP + 0x10]
000076dc(5): MOV byte ptr [RSP + 0x40],R8B
000076e1(5): MOV byte ptr [RSP + 0x38],R10B
000076e6(5): MOV qword ptr [RSP + 0x30],R9
000076eb(5): CALL 0x00001da0
000076f0(6): MOVZX R8D,byte ptr [RSP + 0x40]
000076f6(6): MOVZX R10D,byte ptr [RSP + 0x38]
000076fc(3): MOV R11,RAX
000076ff(5): MOV R9,qword ptr [RSP + 0x30]
00007704(8): LEA RAX,[0x9c + RSP]
0000770c(2): XOR ECX,ECX
0000770e(4): MOV byte ptr [RSP + 0x7e],BL
00007712(5): MOV byte ptr [RSP + 0x7d],R8B
00007717(3): MOV RBX,RCX
0000771a(8): MOV qword ptr [0x88 + RSP],R9
00007722(5): MOV qword ptr [RSP + 0x38],RAX
00007727(5): MOV byte ptr [RSP + 0x7f],R10B
0000772c(8): MOV qword ptr [0x80 + RSP],R15
00007734(5): MOV qword ptr [RSP + 0x40],R14
00007739(5): MOV qword ptr [RSP + 0x70],R13
0000773e(5): MOV qword ptr [RSP + 0x30],R11
00007743(5): MOV RAX,qword ptr [RSP + 0x10]
00007748(5): LEA R14,[RBP + RBX*0x1]
0000774d(5): MOV RDX,qword ptr [RSP + 0x30]
00007752(5): MOV RCX,qword ptr [RSP + 0x28]
00007757(5): MOV RDI,qword ptr [RSP + 0x38]
0000775c(4): LEA R13,[RAX + R14*0x1]
00007760(3): SUB RDX,R14
00007763(3): MOV RSI,R13
00007766(5): CALL 0x0000a3b0
0000776b(3): TEST RAX,RAX
0000776e(3): MOV R15,RAX
00007771(2): JZ 0x000077c1
00007773(4): CMP RAX,-0x1
00007777(6): JZ 0x00007d95
0000777d(4): CMP RAX,-0x2
00007781(6): JZ 0x00007d21
00007787(5): CMP dword ptr [RSP + 0x8],0x2
0000778c(3): SETZ AL
0000778f(4): AND AL,byte ptr [RSP + 0xf]
00007793(6): JNZ 0x00007930
00007799(7): MOV EDI,dword ptr [0x9c + RSP]
000077a0(5): CALL 0x000020c0
000077a5(5): MOV RDI,qword ptr [RSP + 0x28]
000077aa(2): TEST EAX,EAX
000077ac(5): MOV EAX,0x0
000077b1(4): CMOVZ R12D,EAX
000077b5(3): ADD RBX,R15
000077b8(5): CALL 0x000020b0
000077bd(2): TEST EAX,EAX
000077bf(2): JZ 0x00007743
000077c1(3): MOV EDX,R12D
000077c4(3): MOV RDI,RBX
000077c7(6): MOVZX R8D,byte ptr [RSP + 0x7d]
000077cd(3): XOR EDX,0x1
000077d0(5): MOVZX EBX,byte ptr [RSP + 0x7e]
000077d5(6): MOVZX R10D,byte ptr [RSP + 0x7f]
000077db(4): AND DL,byte ptr [RSP + 0xd]
000077df(8): MOV R15,qword ptr [0x80 + RSP]
000077e7(5): MOV R14,qword ptr [RSP + 0x40]
000077ec(5): MOV R13,qword ptr [RSP + 0x70]
000077f1(5): MOV R11,qword ptr [RSP + 0x30]
000077f6(4): CMP RDI,0x1
000077fa(6): JBE 0x00007dfb
00007800(3): MOV RCX,RDI
00007803(2): XOR ESI,ESI
00007805(6): MOVZX R9D,byte ptr [RSP + 0xf]
0000780b(3): ADD RCX,RBP
0000780e(5): MOV RDI,qword ptr [RSP + 0x10]
00007813(5): JMP 0x000078ce
00007820(5): CMP dword ptr [RSP + 0x8],0x2
00007825(3): SETZ AL
00007828(3): TEST R9B,R9B
0000782b(6): JNZ 0x00007ce0
00007831(3): MOV ESI,R8D
00007834(3): XOR ESI,0x1
00007837(3): AND AL,SIL
0000783a(2): JZ 0x0000786b
0000783c(3): CMP R13,R15
0000783f(2): JBE 0x00007846
00007841(5): MOV byte ptr [R14 + R15*0x1],0x27
00007846(4): LEA RSI,[R15 + 0x1]
0000784a(3): CMP R13,RSI
0000784d(2): JBE 0x00007855
0000784f(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00007855(4): LEA RSI,[R15 + 0x2]
00007859(3): CMP R13,RSI
0000785c(2): JBE 0x00007864
0000785e(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00007864(4): ADD R15,0x3
00007868(3): MOV R8D,EAX
0000786b(3): CMP R13,R15
0000786e(2): JBE 0x00007875
00007870(5): MOV byte ptr [R14 + R15*0x1],0x5c
00007875(4): LEA RAX,[R15 + 0x1]
00007879(3): CMP R13,RAX
0000787c(2): JBE 0x0000788b
0000787e(2): MOV EAX,EBX
00007880(3): SHR AL,0x6
00007883(3): ADD EAX,0x30
00007886(5): MOV byte ptr [R14 + R15*0x1 + 0x1],AL
0000788b(4): LEA RAX,[R15 + 0x2]
0000788f(3): CMP R13,RAX
00007892(2): JBE 0x000078a4
00007894(2): MOV EAX,EBX
00007896(3): SHR AL,0x3
00007899(3): AND EAX,0x7
0000789c(3): ADD EAX,0x30
0000789f(5): MOV byte ptr [R14 + R15*0x1 + 0x2],AL
000078a4(3): AND EBX,0x7
000078a7(4): ADD RBP,0x1
000078ab(4): ADD R15,0x3
000078af(3): ADD EBX,0x30
000078b2(3): CMP RBP,RCX
000078b5(6): JNC 0x000070a0
000078bb(2): MOV ESI,EDX
000078bd(3): CMP R13,R15
000078c0(2): JBE 0x000078c6
000078c2(4): MOV byte ptr [R14 + R15*0x1],BL
000078c6(4): MOVZX EBX,byte ptr [RDI + RBP*0x1]
000078ca(4): ADD R15,0x1
000078ce(2): TEST DL,DL
000078d0(6): JNZ 0x00007820
000078d6(2): MOV EAX,ESI
000078d8(3): XOR EAX,0x1
000078db(3): AND EAX,R8D
000078de(3): TEST R10B,R10B
000078e1(2): JZ 0x000078f1
000078e3(3): CMP R13,R15
000078e6(2): JBE 0x000078ed
000078e8(5): MOV byte ptr [R14 + R15*0x1],0x5c
000078ed(4): ADD R15,0x1
000078f1(4): ADD RBP,0x1
000078f5(3): CMP RBP,RCX
000078f8(6): JNC 0x0000707c
000078fe(2): TEST AL,AL
00007900(6): JZ 0x00007cfe
00007906(3): CMP R13,R15
00007909(2): JBE 0x00007910
0000790b(5): MOV byte ptr [R14 + R15*0x1],0x27
00007910(4): LEA RAX,[R15 + 0x1]
00007914(3): CMP R13,RAX
00007917(2): JBE 0x0000791f
00007919(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
0000791f(4): ADD R15,0x2
00007923(3): XOR R10D,R10D
00007926(3): XOR R8D,R8D
00007929(2): JMP 0x000078bd
00007930(4): CMP R15,0x1
00007934(6): JZ 0x00007799
0000793a(5): MOV RDI,qword ptr [RSP + 0x10]
0000793f(4): LEA RCX,[RDI + R15*0x1]
00007943(5): LEA RDX,[RDI + R14*0x1 + 0x1]
00007948(4): LEA R8,[RCX + R14*0x1]
0000794c(2): JMP 0x0000795d
00007950(4): ADD RDX,0x1
00007954(3): CMP R8,RDX
00007957(6): JZ 0x00007799
0000795d(3): MOVZX ECX,byte ptr [RDX]
00007960(3): SUB ECX,0x5b
00007963(3): CMP CL,0x21
00007966(2): JA 0x00007950
00007968(5): MOV ESI,0x1
0000796d(3): SHL RSI,CL
00007970(3): MOV RCX,RSI
00007973(10): MOV RSI,0x20000002b
0000797d(3): TEST RCX,RSI
00007980(2): JZ 0x00007950
00007982(5): MOV R14,qword ptr [RSP + 0x40]
00007987(5): MOV R13,qword ptr [RSP + 0x70]
0000798c(5): MOV RBP,qword ptr [RSP + 0x30]
00007991(8): MOV dword ptr [RSP + 0x8],0x2
00007999(5): CMP byte ptr [RSP + 0xd],0x0
0000799e(2): JZ 0x000079b0
000079a0(2): TEST AL,AL
000079a2(5): MOV EAX,0x4
000079a7(5): CMOVZ EAX,dword ptr [RSP + 0x8]
000079ac(4): MOV dword ptr [RSP + 0x8],EAX
000079b0(4): SUB RSP,0x8
000079b4(3): MOV RCX,RBP
000079b7(3): MOV RSI,R13
000079ba(4): PUSH qword ptr [RSP + 0x68]
000079be(4): PUSH qword ptr [RSP + 0x78]
000079c2(3): MOV RDI,R14
000079c5(2): PUSH 0x0
000079c7(8): MOV R9D,dword ptr [0x98 + RSP]
000079cf(5): MOV R8D,dword ptr [RSP + 0x28]
000079d4(5): MOV RDX,qword ptr [RSP + 0x30]
000079d9(4): AND R9D,0xfffffffd
000079dd(5): CALL 0x00006e10
000079e2(4): ADD RSP,0x20
000079e6(3): MOV R15,RAX
000079e9(8): MOV RBX,qword ptr [0xa8 + RSP]
000079f1(9): XOR RBX,qword ptr FS:[0x28]
000079fa(3): MOV RAX,R15
000079fd(6): JNZ 0x00008003
00007a03(7): ADD RSP,0xb8
00007a0a(1): POP RBX
00007a0b(1): POP RBP
00007a0c(2): POP R12
00007a0e(2): POP R13
00007a10(2): POP R14
00007a12(2): POP R15
00007a14(1): RET
00007a18(3): MOV RBP,R11
00007a1b(5): JMP 0x00007999
00007a20(3): CMP R13,R15
00007a23(2): JBE 0x00007a2a
00007a25(5): MOV byte ptr [R14 + R15*0x1],0x27
00007a2a(4): LEA RAX,[R15 + 0x1]
00007a2e(3): CMP R13,RAX
00007a31(2): JBE 0x00007a39
00007a33(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x5c
00007a39(4): LEA RAX,[R15 + 0x2]
00007a3d(3): CMP R13,RAX
00007a40(6): JBE 0x00008032
00007a46(3): MOV RDX,R13
00007a49(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00007a4f(5): MOV R13,qword ptr [RSP + 0x50]
00007a54(5): JMP 0x00007632
00007a59(3): MOV EAX,R12D
00007a5c(5): MOV EBX,0x30
00007a61(3): XOR R12D,R12D
00007a64(5): JMP 0x00007069
00007a69(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00007a6f(5): JMP 0x00007439
00007a74(2): TEST EBX,EBX
00007a76(6): JNZ 0x00006ea3
00007a7c(5): MOV byte ptr [RSP + 0xd],0x1
00007a81(3): TEST R13,R13
00007a84(6): JNZ 0x0000801a
00007a8a(7): LEA RAX,[0x1bcf6]
00007a91(9): MOV qword ptr [RSP + 0x50],0x0
00007a9a(5): MOV byte ptr [RSP + 0xe],0x1
00007a9f(5): MOV byte ptr [RSP + 0x7c],0x0
00007aa4(3): XOR R12D,R12D
00007aa7(5): MOV byte ptr [RSP + 0xf],0x0
00007aac(9): MOV qword ptr [RSP + 0x18],0x1
00007ab5(5): MOV qword ptr [RSP + 0x48],RAX
00007aba(6): MOV R15D,0x1
00007ac0(8): MOV dword ptr [RSP + 0x8],0x2
00007ac8(5): JMP 0x00006ee3
00007ad0(2): TEST EBX,EBX
00007ad2(6): JNZ 0x00007ecd
00007ad8(3): TEST R13,R13
00007adb(6): JZ 0x00007d06
00007ae1(4): MOV byte ptr [R14],0x22
00007ae5(5): MOV byte ptr [RSP + 0xe],0x1
00007aea(3): XOR R12D,R12D
00007aed(5): MOV byte ptr [RSP + 0x7c],0x0
00007af2(9): MOV qword ptr [RSP + 0x50],0x0
00007afb(7): LEA RAX,[0x1b8a8]
00007b02(5): MOV byte ptr [RSP + 0xf],0x0
00007b07(5): MOV byte ptr [RSP + 0xd],0x1
00007b0c(9): MOV qword ptr [RSP + 0x18],0x1
00007b15(6): MOV R15D,0x1
00007b1b(5): MOV qword ptr [RSP + 0x48],RAX
00007b20(5): JMP 0x00006ee3
00007b25(7): LEA RAX,[0x1b8a8]
00007b2c(5): MOV byte ptr [RSP + 0xe],0x1
00007b31(5): MOV byte ptr [RSP + 0x7c],0x0
00007b36(3): XOR R12D,R12D
00007b39(9): MOV qword ptr [RSP + 0x50],0x0
00007b42(5): MOV byte ptr [RSP + 0xf],0x1
00007b47(5): MOV byte ptr [RSP + 0xd],0x1
00007b4c(9): MOV qword ptr [RSP + 0x18],0x1
00007b55(3): XOR R15D,R15D
00007b58(5): MOV qword ptr [RSP + 0x48],RAX
00007b5d(8): MOV dword ptr [RSP + 0x8],0x5
00007b65(5): JMP 0x00006ee3
00007b6a(5): MOV byte ptr [RSP + 0xe],0x1
00007b6f(5): MOV byte ptr [RSP + 0x7c],0x0
00007b74(3): XOR R12D,R12D
00007b77(9): MOV qword ptr [RSP + 0x50],0x0
00007b80(5): MOV byte ptr [RSP + 0xf],0x0
00007b85(3): XOR R15D,R15D
00007b88(5): MOV byte ptr [RSP + 0xd],0x1
00007b8d(9): MOV qword ptr [RSP + 0x18],0x0
00007b96(9): MOV qword ptr [RSP + 0x48],0x0
00007b9f(5): JMP 0x00006ee3
00007ba4(5): CMP dword ptr [RSP + 0x8],0xa
00007ba9(2): JZ 0x00007c01
00007bab(7): LEA RSI,[0x1bd32]
00007bb2(2): XOR EDI,EDI
00007bb4(5): MOV EDX,0x5
00007bb9(5): CALL 0x00001d80
00007bbe(3): MOV RCX,RAX
00007bc1(5): MOV qword ptr [RSP + 0x68],RAX
00007bc6(7): LEA RAX,[0x1bd32]
00007bcd(3): CMP RCX,RAX
00007bd0(6): JZ 0x00007f6e
00007bd6(7): LEA RSI,[0x1bcf6]
00007bdd(2): XOR EDI,EDI
00007bdf(5): MOV EDX,0x5
00007be4(5): CALL 0x00001d80
00007be9(3): MOV RCX,RAX
00007bec(5): MOV qword ptr [RSP + 0x60],RAX
00007bf1(7): LEA RAX,[0x1bcf6]
00007bf8(3): CMP RCX,RAX
00007bfb(6): JZ 0x00007f84
00007c01(3): XOR R15D,R15D
00007c04(2): TEST EBX,EBX
00007c06(6): JZ 0x00007dcd
00007c0c(2): TEST EBX,EBX
00007c0e(5): MOV RBX,qword ptr [RSP + 0x60]
00007c13(5): SETNZ byte ptr [RSP + 0xf]
00007c18(3): XOR R12D,R12D
00007c1b(3): MOV RDI,RBX
00007c1e(5): CALL 0x00001da0
00007c23(5): MOV qword ptr [RSP + 0x48],RBX
00007c28(5): MOV qword ptr [RSP + 0x18],RAX
00007c2d(5): MOV byte ptr [RSP + 0xe],0x1
00007c32(5): MOV byte ptr [RSP + 0x7c],0x0
00007c37(9): MOV qword ptr [RSP + 0x50],0x0
00007c40(5): MOV byte ptr [RSP + 0xd],0x1
00007c45(5): JMP 0x00006ee3
00007c4a(5): MOV byte ptr [RSP + 0xe],0x1
00007c4f(5): MOV byte ptr [RSP + 0x7c],0x0
00007c54(3): XOR R12D,R12D
00007c57(9): MOV qword ptr [RSP + 0x50],0x0
00007c60(5): MOV byte ptr [RSP + 0xf],0x0
00007c65(3): XOR R15D,R15D
00007c68(5): MOV byte ptr [RSP + 0xd],0x0
00007c6d(9): MOV qword ptr [RSP + 0x18],0x0
00007c76(9): MOV qword ptr [RSP + 0x48],0x0
00007c7f(5): JMP 0x00006ee3
00007c84(5): MOV byte ptr [RSP + 0xe],0x1
00007c89(5): MOV byte ptr [RSP + 0x7c],0x0
00007c8e(3): XOR R12D,R12D
00007c91(9): MOV qword ptr [RSP + 0x50],0x0
00007c9a(5): MOV byte ptr [RSP + 0xf],0x1
00007c9f(5): MOV byte ptr [RSP + 0xd],0x1
00007ca4(5): JMP 0x00006ec3
00007ca9(3): CMP R13,R15
00007cac(2): JBE 0x00007cb3
00007cae(5): MOV byte ptr [R14 + R15*0x1],0x30
00007cb3(4): LEA RAX,[RCX + 0x2]
00007cb7(3): CMP R13,RAX
00007cba(2): JBE 0x00007cc2
00007cbc(6): MOV byte ptr [R14 + RCX*0x1 + 0x2],0x30
00007cc2(3): MOV EAX,R12D
00007cc5(4): LEA R15,[RCX + 0x3]
00007cc9(3): XOR R12D,R12D
00007ccc(5): MOV EBX,0x30
00007cd1(5): JMP 0x00007038
00007ce0(5): MOVZX EBX,byte ptr [RSP + 0xf]
00007ce5(3): MOV RBP,R11
00007ce8(4): MOV byte ptr [RSP + 0xd],BL
00007cec(5): JMP 0x00007999
00007cf1(5): MOVZX EDX,byte ptr [RSP + 0xd]
00007cf6(3): XOR R12D,R12D
00007cf9(5): JMP 0x00007800
00007cfe(3): XOR R10D,R10D
00007d01(5): JMP 0x000078bd
00007d06(9): MOV qword ptr [RSP + 0x50],0x0
00007d0f(5): MOV byte ptr [RSP + 0xe],0x1
00007d14(3): XOR R12D,R12D
00007d17(5): MOV byte ptr [RSP + 0x7c],0x0
00007d1c(5): JMP 0x00007afb
00007d21(5): MOV R11,qword ptr [RSP + 0x30]
00007d26(3): MOV RSI,R14
00007d29(3): MOV RCX,R13
00007d2c(3): MOV RAX,RBX
00007d2f(3): MOV RDI,RBX
00007d32(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00007d38(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00007d3d(8): MOV R9,qword ptr [0x88 + RSP]
00007d45(3): CMP RSI,R11
00007d48(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00007d4e(8): MOV R15,qword ptr [0x80 + RSP]
00007d56(5): MOV R14,qword ptr [RSP + 0x40]
00007d5b(5): MOV R13,qword ptr [RSP + 0x70]
00007d60(2): JNC 0x00007d88
00007d62(3): CMP byte ptr [RCX],0x0
00007d65(2): JNZ 0x00007d77
00007d67(2): JMP 0x00007d88
00007d70(5): CMP byte ptr [R9 + RAX*0x1],0x0
00007d75(2): JZ 0x00007d85
00007d77(4): ADD RAX,0x1
00007d7b(5): LEA RDX,[RBP + RAX*0x1]
00007d80(3): CMP R11,RDX
00007d83(2): JA 0x00007d70
00007d85(3): MOV RDI,RAX
00007d88(5): MOVZX EDX,byte ptr [RSP + 0xd]
00007d8d(3): XOR R12D,R12D
00007d90(5): JMP 0x000077f6
00007d95(3): MOV RDI,RBX
00007d98(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00007d9e(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00007da3(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00007da9(8): MOV R15,qword ptr [0x80 + RSP]
00007db1(3): XOR R12D,R12D
00007db4(5): MOV R14,qword ptr [RSP + 0x40]
00007db9(5): MOV R13,qword ptr [RSP + 0x70]
00007dbe(5): MOV R11,qword ptr [RSP + 0x30]
00007dc3(5): MOVZX EDX,byte ptr [RSP + 0xd]
00007dc8(5): JMP 0x000077f6
00007dcd(5): MOV RDX,qword ptr [RSP + 0x68]
00007dd2(3): MOVZX EAX,byte ptr [RDX]
00007dd5(2): TEST AL,AL
00007dd7(6): JZ 0x00007c0c
00007ddd(3): NOP dword ptr [RAX]
00007de0(3): CMP R13,R15
00007de3(2): JBE 0x00007de9
00007de5(4): MOV byte ptr [R14 + R15*0x1],AL
00007de9(4): ADD R15,0x1
00007ded(5): MOVZX EAX,byte ptr [RDX + R15*0x1]
00007df2(2): TEST AL,AL
00007df4(2): JNZ 0x00007de0
00007df6(5): JMP 0x00007c0c
00007dfb(2): MOV EAX,EDX
00007dfd(5): JMP 0x00007357
00007e02(4): MOVZX EBX,byte ptr [RAX + RCX*0x1]
00007e06(3): CMP BL,0x3e
00007e09(6): JA 0x00007680
00007e0f(10): MOV RAX,0x7000a38200000000
00007e19(4): BT RAX,RBX
00007e1d(6): JNC 0x00007680
00007e23(5): CMP byte ptr [RSP + 0xf],0x0
00007e28(6): JNZ 0x00008012
00007e2e(3): CMP R13,R15
00007e31(2): JBE 0x00007e38
00007e33(5): MOV byte ptr [R14 + R15*0x1],0x3f
00007e38(4): LEA RAX,[R15 + 0x1]
00007e3c(3): CMP R13,RAX
00007e3f(2): JBE 0x00007e47
00007e41(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x22
00007e47(4): LEA RAX,[R15 + 0x2]
00007e4b(3): CMP R13,RAX
00007e4e(2): JBE 0x00007e56
00007e50(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x22
00007e56(4): LEA RAX,[R15 + 0x3]
00007e5a(3): CMP R13,RAX
00007e5d(2): JBE 0x00007e65
00007e5f(6): MOV byte ptr [R14 + R15*0x1 + 0x3],0x3f
00007e65(4): ADD R15,0x4
00007e69(2): XOR EDX,EDX
00007e6b(3): XOR R12D,R12D
00007e6e(2): XOR EAX,EAX
00007e70(3): MOV RBP,RCX
00007e73(5): JMP 0x00007038
00007e78(2): TEST EBX,EBX
00007e7a(6): JZ 0x00008008
00007e80(7): LEA RAX,[0x1bcf6]
00007e87(5): MOV byte ptr [RSP + 0xe],0x1
00007e8c(5): MOV byte ptr [RSP + 0x7c],0x0
00007e91(3): XOR R12D,R12D
00007e94(9): MOV qword ptr [RSP + 0x50],0x0
00007e9d(5): MOV byte ptr [RSP + 0xf],0x1
00007ea2(5): MOV byte ptr [RSP + 0xd],0x0
00007ea7(9): MOV qword ptr [RSP + 0x18],0x1
00007eb0(3): XOR R15D,R15D
00007eb3(5): MOV qword ptr [RSP + 0x48],RAX
00007eb8(5): JMP 0x00006ee3
00007ec0(3): MOV RBP,R11
00007ec3(5): MOVZX EAX,byte ptr [RSP + 0xf]
00007ec8(5): JMP 0x00007999
00007ecd(7): LEA RAX,[0x1b8a8]
00007ed4(5): MOV byte ptr [RSP + 0xe],0x1
00007ed9(5): MOV byte ptr [RSP + 0x7c],0x0
00007ede(3): XOR R12D,R12D
00007ee1(9): MOV qword ptr [RSP + 0x50],0x0
00007eea(5): MOV byte ptr [RSP + 0xf],0x1
00007eef(5): MOV byte ptr [RSP + 0xd],0x1
00007ef4(9): MOV qword ptr [RSP + 0x18],0x1
00007efd(3): XOR R15D,R15D
00007f00(5): MOV qword ptr [RSP + 0x48],RAX
00007f05(5): JMP 0x00006ee3
00007f0a(2): MOV EAX,EDX
00007f0c(5): MOV RBX,qword ptr [RSP + 0x48]
00007f11(3): TEST RBX,RBX
00007f14(2): JZ 0x00007f42
00007f16(2): TEST AL,AL
00007f18(2): JZ 0x00007f42
00007f1a(3): MOVZX ECX,byte ptr [RBX]
00007f1d(3): MOV RAX,RBX
00007f20(2): TEST CL,CL
00007f22(2): JZ 0x00007f42
00007f24(3): MOV RDX,R15
00007f27(3): SUB RAX,R15
00007f2a(3): CMP R13,RDX
00007f2d(2): JBE 0x00007f33
00007f2f(4): MOV byte ptr [R14 + RDX*0x1],CL
00007f33(4): ADD RDX,0x1
00007f37(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
00007f3b(2): TEST CL,CL
00007f3d(2): JNZ 0x00007f2a
00007f3f(3): MOV R15,RDX
00007f42(3): CMP R13,R15
00007f45(6): JBE 0x000079e9
00007f4b(5): MOV byte ptr [R14 + R15*0x1],0x0
00007f50(5): JMP 0x000079e9
00007f55(5): CMP dword ptr [RSP + 0x8],0x2
00007f5a(5): MOVZX EBX,byte ptr [RSP + 0xf]
00007f5f(3): MOV RBP,R11
00007f62(3): SETZ AL
00007f65(4): MOV byte ptr [RSP + 0xd],BL
00007f69(5): JMP 0x00007999
00007f6e(4): MOV ESI,dword ptr [RSP + 0x8]
00007f72(3): MOV RDI,RCX
00007f75(5): CALL 0x00006d20
00007f7a(5): MOV qword ptr [RSP + 0x68],RAX
00007f7f(5): JMP 0x00007bd6
00007f84(4): MOV ESI,dword ptr [RSP + 0x8]
00007f88(3): MOV RDI,RCX
00007f8b(5): CALL 0x00006d20
00007f90(5): MOV qword ptr [RSP + 0x60],RAX
00007f95(5): JMP 0x00007c01
00007f9a(5): MOVZX EBX,byte ptr [RSP + 0xf]
00007f9f(3): MOV RBP,R11
00007fa2(2): MOV EAX,EDX
00007fa4(4): MOV byte ptr [RSP + 0xd],BL
00007fa8(5): JMP 0x00007999
00007fad(4): SUB RSP,0x8
00007fb1(6): MOV R8D,0x5
00007fb7(3): MOV RCX,R11
00007fba(4): PUSH qword ptr [RSP + 0x68]
00007fbe(4): PUSH qword ptr [RSP + 0x78]
00007fc2(3): MOV RDI,R14
00007fc5(4): PUSH qword ptr [RSP + 0x38]
00007fc9(8): MOV R9D,dword ptr [0x98 + RSP]
00007fd1(5): MOV RDX,qword ptr [RSP + 0x30]
00007fd6(5): MOV RSI,qword ptr [RSP + 0x70]
00007fdb(5): CALL 0x00006e10
00007fe0(4): ADD RSP,0x20
00007fe4(3): MOV R15,RAX
00007fe7(5): JMP 0x000079e9
00007fec(5): MOVZX EAX,byte ptr [RSP + 0x7c]
00007ff1(5): JMP 0x00007f0c
00007ff6(8): MOV dword ptr [RSP + 0x8],0x2
00007ffe(5): JMP 0x00007999
00008003(5): CALL 0x00001db0
00008008(5): MOV byte ptr [RSP + 0xd],0x0
0000800d(5): JMP 0x00007a81
00008012(3): MOV RBP,R11
00008015(5): JMP 0x000079b0
0000801a(5): MOV byte ptr [RSP + 0xe],0x1
0000801f(2): XOR EAX,EAX
00008021(3): XOR R12D,R12D
00008024(9): MOV qword ptr [RSP + 0x50],0x0
0000802d(5): JMP 0x000075d4
00008032(3): MOV RDX,R13
00008035(5): MOV R13,qword ptr [RSP + 0x50]
0000803a(5): JMP 0x00007632
0000803f(5): CALL 0x00001c70
00008044(2): NOP
00008046(10): NOP word ptr CS:[RAX + RAX*0x1]
00008050(2): PUSH R15
00008052(2): PUSH R14
00008054(3): MOVSXD R15,EDI
00008057(2): PUSH R13
00008059(2): PUSH R12
0000805b(3): MOV R14,RDX
0000805e(1): PUSH RBP
0000805f(1): PUSH RBX
00008060(3): MOV RBP,RCX
00008063(4): SUB RSP,0x28
00008067(5): MOV qword ptr [RSP + 0x8],RSI
0000806c(5): CALL 0x00001c80
00008071(3): MOV R13,RAX
00008074(2): MOV EAX,dword ptr [RAX]
00008076(3): TEST R15D,R15D
00008079(7): MOV RBX,qword ptr [0x002210a0]
00008080(4): MOV dword ptr [RSP + 0x18],EAX
00008084(6): JS 0x000081f1
0000808a(7): CMP dword ptr [0x00221098],R15D
00008091(2): JG 0x000080f5
00008093(7): CMP R15D,0x7fffffff
0000809a(6): JZ 0x000081f6
000080a0(4): LEA R12D,[R15 + 0x1]
000080a4(7): LEA RAX,[0x2210b0]
000080ab(3): MOVSXD RSI,R12D
000080ae(4): SHL RSI,0x4
000080b2(3): CMP RBX,RAX
000080b5(6): JZ 0x000081d0
000080bb(3): MOV RDI,RBX
000080be(5): CALL 0x00009920
000080c3(3): MOV RBX,RAX
000080c6(7): MOV qword ptr [0x002210a0],RAX
000080cd(7): MOVSXD RDI,dword ptr [0x00221098]
000080d4(3): MOV EDX,R12D
000080d7(2): XOR ESI,ESI
000080d9(2): SUB EDX,EDI
000080db(4): SHL RDI,0x4
000080df(3): MOVSXD RDX,EDX
000080e2(3): ADD RDI,RBX
000080e5(4): SHL RDX,0x4
000080e9(5): CALL 0x00001e40
000080ee(7): MOV dword ptr [0x00221098],R12D
000080f5(3): MOV EAX,dword ptr [RBP + 0x4]
000080f8(4): SHL R15,0x4
000080fc(4): SUB RSP,0x8
00008100(3): ADD RBX,R15
00008103(4): LEA R15,[RBP + 0x8]
00008107(4): MOV R8D,dword ptr [RBP]
0000810b(3): MOV R11,qword ptr [RBX]
0000810e(4): MOV R12,qword ptr [RBX + 0x8]
00008112(3): MOV RCX,R14
00008115(3): OR EAX,0x1
00008118(4): MOV dword ptr [RSP + 0x24],EAX
0000811c(3): PUSH qword ptr [RBP + 0x30]
0000811f(3): MOV R9D,EAX
00008122(3): PUSH qword ptr [RBP + 0x28]
00008125(2): PUSH R15
00008127(3): MOV RSI,R11
0000812a(5): MOV RDX,qword ptr [RSP + 0x28]
0000812f(3): MOV RDI,R12
00008132(5): MOV qword ptr [RSP + 0x30],R11
00008137(5): CALL 0x00006e10
0000813c(4): ADD RSP,0x20
00008140(5): MOV R11,qword ptr [RSP + 0x10]
00008145(3): CMP R11,RAX
00008148(2): JA 0x000081b1
0000814a(4): LEA RSI,[RAX + 0x1]
0000814e(7): LEA RAX,[0x2218c0]
00008155(3): CMP R12,RAX
00008158(3): MOV qword ptr [RBX],RSI
0000815b(2): JZ 0x0000816f
0000815d(3): MOV RDI,R12
00008160(5): MOV qword ptr [RSP + 0x10],RSI
00008165(5): CALL 0x00001c60
0000816a(5): MOV RSI,qword ptr [RSP + 0x10]
0000816f(3): MOV RDI,RSI
00008172(5): MOV qword ptr [RSP + 0x10],RSI
00008177(5): CALL 0x000098c0
0000817c(4): SUB RSP,0x8
00008180(4): MOV qword ptr [RBX + 0x8],RAX
00008184(4): MOV R8D,dword ptr [RBP]
00008188(3): PUSH qword ptr [RBP + 0x30]
0000818b(3): PUSH qword ptr [RBP + 0x28]
0000818e(3): MOV RCX,R14
00008191(2): PUSH R15
00008193(5): MOV R9D,dword ptr [RSP + 0x3c]
00008198(3): MOV RDI,RAX
0000819b(5): MOV RDX,qword ptr [RSP + 0x28]
000081a0(5): MOV RSI,qword ptr [RSP + 0x30]
000081a5(3): MOV R12,RAX
000081a8(5): CALL 0x00006e10
000081ad(4): ADD RSP,0x20
000081b1(4): MOV EAX,dword ptr [RSP + 0x18]
000081b5(4): MOV dword ptr [R13],EAX
000081b9(4): ADD RSP,0x28
000081bd(3): MOV RAX,R12
000081c0(1): POP RBX
000081c1(1): POP RBP
000081c2(2): POP R12
000081c4(2): POP R13
000081c6(2): POP R14
000081c8(2): POP R15
000081ca(1): RET
000081d0(2): XOR EDI,EDI
000081d2(5): CALL 0x00009920
000081d7(8): MOVDQA XMM0,xmmword ptr [0x002210b0]
000081df(3): MOV RBX,RAX
000081e2(7): MOV qword ptr [0x002210a0],RAX
000081e9(3): MOVUPS xmmword ptr [RAX],XMM0
000081ec(5): JMP 0x000080cd
000081f1(5): CALL 0x00001c70
000081f6(5): CALL 0x00009b10
000081fb(5): NOP dword ptr [RAX + RAX*0x1]
00008200(2): PUSH R12
00008202(1): PUSH RBP
00008203(1): PUSH RBX
00008204(3): MOV RBX,RDI
00008207(5): CALL 0x00001c80
0000820c(3): MOV R12D,dword ptr [RAX]
0000820f(3): MOV RBP,RAX
00008212(7): LEA RAX,[0x2219c0]
00008219(3): TEST RBX,RBX
0000821c(5): MOV ESI,0x38
00008221(4): CMOVZ RBX,RAX
00008225(3): MOV RDI,RBX
00008228(5): CALL 0x00009ac0
0000822d(4): MOV dword ptr [RBP],R12D
00008231(1): POP RBX
00008232(1): POP RBP
00008233(2): POP R12
00008235(1): RET
00008240(7): LEA RAX,[0x2219c0]
00008247(3): TEST RDI,RDI
0000824a(4): CMOVZ RDI,RAX
0000824e(2): MOV EAX,dword ptr [RDI]
00008250(1): RET
00008260(7): LEA RAX,[0x2219c0]
00008267(3): TEST RDI,RDI
0000826a(4): CMOVZ RDI,RAX
0000826e(2): MOV dword ptr [RDI],ESI
00008270(1): RET
00008280(7): LEA RAX,[0x2219c0]
00008287(3): TEST RDI,RDI
0000828a(2): MOV ECX,ESI
0000828c(4): CMOVZ RDI,RAX
00008290(2): MOV EAX,ESI
00008292(3): AND ECX,0x1f
00008295(3): SHR AL,0x5
00008298(3): MOVZX EAX,AL
0000829b(5): LEA RDI,[RDI + RAX*0x4 + 0x8]
000082a0(2): MOV ESI,dword ptr [RDI]
000082a2(2): MOV EAX,ESI
000082a4(2): SHR EAX,CL
000082a6(2): XOR EDX,EAX
000082a8(3): AND EAX,0x1
000082ab(3): AND EDX,0x1
000082ae(2): SHL EDX,CL
000082b0(2): XOR EDX,ESI
000082b2(2): MOV dword ptr [RDI],EDX
000082b4(1): RET
000082c0(7): LEA RAX,[0x2219c0]
000082c7(3): TEST RDI,RDI
000082ca(4): CMOVZ RDI,RAX
000082ce(3): MOV EAX,dword ptr [RDI + 0x4]
000082d1(3): MOV dword ptr [RDI + 0x4],ESI
000082d4(1): RET
000082e0(7): LEA RAX,[0x2219c0]
000082e7(3): TEST RDI,RDI
000082ea(4): CMOVZ RDI,RAX
000082ee(3): TEST RSI,RSI
000082f1(6): MOV dword ptr [RDI],0xa
000082f7(2): JZ 0x00008307
000082f9(3): TEST RDX,RDX
000082fc(2): JZ 0x00008307
000082fe(4): MOV qword ptr [RDI + 0x28],RSI
00008302(4): MOV qword ptr [RDI + 0x30],RDX
00008306(1): RET
00008307(4): SUB RSP,0x8
0000830b(5): CALL 0x00001c70
00008310(2): PUSH R15
00008312(2): PUSH R14
00008314(7): LEA RAX,[0x2219c0]
0000831b(2): PUSH R13
0000831d(2): PUSH R12
0000831f(3): MOV R13,RDI
00008322(1): PUSH RBP
00008323(1): PUSH RBX
00008324(3): MOV RBX,R8
00008327(3): MOV R14,RSI
0000832a(3): MOV R15,RDX
0000832d(4): SUB RSP,0x18
00008331(3): TEST R8,R8
00008334(4): CMOVZ RBX,RAX
00008338(5): MOV qword ptr [RSP + 0x8],RCX
0000833d(5): CALL 0x00001c80
00008342(3): MOV R12D,dword ptr [RAX]
00008345(3): MOV RBP,RAX
00008348(4): LEA RAX,[RBX + 0x8]
0000834c(4): SUB RSP,0x8
00008350(4): MOV R9D,dword ptr [RBX + 0x4]
00008354(3): PUSH qword ptr [RBX + 0x30]
00008357(3): MOV R8D,dword ptr [RBX]
0000835a(3): PUSH qword ptr [RBX + 0x28]
0000835d(3): MOV RDX,R15
00008360(1): PUSH RAX
00008361(5): MOV RCX,qword ptr [RSP + 0x28]
00008366(3): MOV RSI,R14
00008369(3): MOV RDI,R13
0000836c(5): CALL 0x00006e10
00008371(4): MOV dword ptr [RBP],R12D
00008375(4): ADD RSP,0x38
00008379(1): POP RBX
0000837a(1): POP RBP
0000837b(2): POP R12
0000837d(2): POP R13
0000837f(2): POP R14
00008381(2): POP R15
00008383(1): RET
00008390(2): PUSH R15
00008392(2): PUSH R14
00008394(7): LEA RAX,[0x2219c0]
0000839b(2): PUSH R13
0000839d(2): PUSH R12
0000839f(3): MOV R12,RDX
000083a2(1): PUSH RBP
000083a3(1): PUSH RBX
000083a4(3): MOV RBX,RCX
000083a7(3): MOV R14,RDI
000083aa(3): MOV R15,RSI
000083ad(4): SUB RSP,0x38
000083b1(3): TEST RCX,RCX
000083b4(4): CMOVZ RBX,RAX
000083b8(2): XOR EBP,EBP
000083ba(5): CALL 0x00001c80
000083bf(3): TEST R12,R12
000083c2(3): MOV R13,RAX
000083c5(2): MOV EAX,dword ptr [RAX]
000083c7(4): SETZ BPL
000083cb(3): OR EBP,dword ptr [RBX + 0x4]
000083ce(4): LEA R10,[RBX + 0x8]
000083d2(4): SUB RSP,0x8
000083d6(3): MOV R8D,dword ptr [RBX]
000083d9(3): MOV RCX,R15
000083dc(4): MOV dword ptr [RSP + 0x14],EAX
000083e0(3): PUSH qword ptr [RBX + 0x30]
000083e3(3): MOV RDX,R14
000083e6(3): PUSH qword ptr [RBX + 0x28]
000083e9(2): PUSH R10
000083eb(2): XOR ESI,ESI
000083ed(3): MOV R9D,EBP
000083f0(2): XOR EDI,EDI
000083f2(5): MOV qword ptr [RSP + 0x40],R10
000083f7(5): CALL 0x00006e10
000083fc(4): LEA RSI,[RAX + 0x1]
00008400(5): MOV qword ptr [RSP + 0x48],RAX
00008405(4): ADD RSP,0x20
00008409(3): MOV RDI,RSI
0000840c(5): MOV qword ptr [RSP + 0x18],RSI
00008411(5): CALL 0x000098c0
00008416(5): MOV qword ptr [RSP + 0x10],RAX
0000841b(4): SUB RSP,0x8
0000841f(3): PUSH qword ptr [RBX + 0x30]
00008422(3): PUSH qword ptr [RBX + 0x28]
00008425(5): MOV R10,qword ptr [RSP + 0x38]
0000842a(3): MOV R9D,EBP
0000842d(3): MOV R8D,dword ptr [RBX]
00008430(3): MOV RCX,R15
00008433(3): MOV RDX,R14
00008436(3): MOV RDI,RAX
00008439(2): PUSH R10
0000843b(5): MOV RSI,qword ptr [RSP + 0x38]
00008440(5): CALL 0x00006e10
00008445(4): MOV EAX,dword ptr [RSP + 0x2c]
00008449(4): ADD RSP,0x20
0000844d(3): TEST R12,R12
00008450(4): MOV dword ptr [R13],EAX
00008454(2): JZ 0x0000845f
00008456(5): MOV R11,qword ptr [RSP + 0x28]
0000845b(4): MOV qword ptr [R12],R11
0000845f(5): MOV RAX,qword ptr [RSP + 0x10]
00008464(4): ADD RSP,0x38
00008468(1): POP RBX
00008469(1): POP RBP
0000846a(2): POP R12
0000846c(2): POP R13
0000846e(2): POP R14
00008470(2): POP R15
00008472(1): RET
00008480(3): MOV RCX,RDX
00008483(2): XOR EDX,EDX
00008485(5): JMP 0x00008390
00008490(6): MOV EAX,dword ptr [0x00221098]
00008496(2): PUSH R12
00008498(7): MOV R12,qword ptr [0x002210a0]
0000849f(1): PUSH RBP
000084a0(1): PUSH RBX
000084a1(3): CMP EAX,0x1
000084a4(2): JLE 0x000084d1
000084a6(3): SUB EAX,0x2
000084a9(5): LEA RBX,[R12 + 0x18]
000084ae(4): SHL RAX,0x4
000084b2(5): LEA RBP,[R12 + RAX*0x1 + 0x28]
000084b7(9): NOP word ptr [RAX + RAX*0x1]
000084c0(3): MOV RDI,qword ptr [RBX]
000084c3(4): ADD RBX,0x10
000084c7(5): CALL 0x00001c60
000084cc(3): CMP RBX,RBP
000084cf(2): JNZ 0x000084c0
000084d1(5): MOV RDI,qword ptr [R12 + 0x8]
000084d6(7): LEA RBX,[0x2218c0]
000084dd(3): CMP RDI,RBX
000084e0(2): JZ 0x000084f9
000084e2(5): CALL 0x00001c60
000084e7(11): MOV qword ptr [0x002210b0],0x100
000084f2(7): MOV qword ptr [0x002210b8],RBX
000084f9(7): LEA RBX,[0x2210b0]
00008500(3): CMP R12,RBX
00008503(2): JZ 0x00008514
00008505(3): MOV RDI,R12
00008508(5): CALL 0x00001c60
0000850d(7): MOV qword ptr [0x002210a0],RBX
00008514(1): POP RBX
00008515(10): MOV dword ptr [0x00221098],0x1
0000851f(1): POP RBP
00008520(2): POP R12
00008522(1): RET
00008530(7): LEA RCX,[0x2219c0]
00008537(7): MOV RDX,-0x1
0000853e(5): JMP 0x00008050
00008550(7): LEA RCX,[0x2219c0]
00008557(5): JMP 0x00008050
00008560(7): LEA RCX,[0x2219c0]
00008567(3): MOV RSI,RDI
0000856a(7): MOV RDX,-0x1
00008571(2): XOR EDI,EDI
00008573(5): JMP 0x00008050
00008580(7): LEA RCX,[0x2219c0]
00008587(3): MOV RDX,RSI
0000858a(3): MOV RSI,RDI
0000858d(2): XOR EDI,EDI
0000858f(5): JMP 0x00008050
000085a0(4): SUB RSP,0x48
000085a4(3): MOV RAX,RDX
000085a7(9): MOV RDX,qword ptr FS:[0x28]
000085b0(5): MOV qword ptr [RSP + 0x38],RDX
000085b5(2): XOR EDX,EDX
000085b7(3): CMP ESI,0xa
000085ba(2): JZ 0x00008624
000085bc(3): MOV dword ptr [RSP],ESI
000085bf(3): MOV RCX,RSP
000085c2(7): MOV RDX,-0x1
000085c9(3): MOV RSI,RAX
000085cc(9): MOV qword ptr [RSP + 0x4],0x0
000085d5(9): MOV qword ptr [RSP + 0xc],0x0
000085de(9): MOV qword ptr [RSP + 0x14],0x0
000085e7(9): MOV qword ptr [RSP + 0x1c],0x0
000085f0(9): MOV qword ptr [RSP + 0x24],0x0
000085f9(9): MOV qword ptr [RSP + 0x2c],0x0
00008602(8): MOV dword ptr [RSP + 0x34],0x0
0000860a(5): CALL 0x00008050
0000860f(5): MOV RCX,qword ptr [RSP + 0x38]
00008614(9): XOR RCX,qword ptr FS:[0x28]
0000861d(2): JNZ 0x00008629
0000861f(4): ADD RSP,0x48
00008623(1): RET
00008624(5): CALL 0x00001c70
00008629(5): CALL 0x00001db0
0000862e(2): NOP
00008630(4): SUB RSP,0x48
00008634(3): MOV RAX,RDX
00008637(3): MOV RDX,RCX
0000863a(9): MOV RCX,qword ptr FS:[0x28]
00008643(5): MOV qword ptr [RSP + 0x38],RCX
00008648(2): XOR ECX,ECX
0000864a(3): CMP ESI,0xa
0000864d(2): JZ 0x000086b0
0000864f(3): MOV dword ptr [RSP],ESI
00008652(3): MOV RCX,RSP
00008655(3): MOV RSI,RAX
00008658(9): MOV qword ptr [RSP + 0x4],0x0
00008661(9): MOV qword ptr [RSP + 0xc],0x0
0000866a(9): MOV qword ptr [RSP + 0x14],0x0
00008673(9): MOV qword ptr [RSP + 0x1c],0x0
0000867c(9): MOV qword ptr [RSP + 0x24],0x0
00008685(9): MOV qword ptr [RSP + 0x2c],0x0
0000868e(8): MOV dword ptr [RSP + 0x34],0x0
00008696(5): CALL 0x00008050
0000869b(5): MOV RDX,qword ptr [RSP + 0x38]
000086a0(9): XOR RDX,qword ptr FS:[0x28]
000086a9(2): JNZ 0x000086b5
000086ab(4): ADD RSP,0x48
000086af(1): RET
000086b0(5): CALL 0x00001c70
000086b5(5): CALL 0x00001db0
000086ba(6): NOP word ptr [RAX + RAX*0x1]
000086c0(3): MOV RDX,RSI
000086c3(2): MOV ESI,EDI
000086c5(2): XOR EDI,EDI
000086c7(5): JMP 0x000085a0
000086d0(3): MOV RCX,RDX
000086d3(3): MOV RDX,RSI
000086d6(2): MOV ESI,EDI
000086d8(2): XOR EDI,EDI
000086da(5): JMP 0x00008630
000086e0(4): SUB RSP,0x48
000086e4(2): MOV ECX,EDX
000086e6(9): MOV RAX,qword ptr FS:[0x28]
000086ef(5): MOV qword ptr [RSP + 0x38],RAX
000086f4(2): XOR EAX,EAX
000086f6(7): MOV RAX,qword ptr [0x002219f0]
000086fd(3): MOV R8,RSP
00008700(3): AND ECX,0x1f
00008703(8): MOVDQA XMM0,xmmword ptr [0x002219c0]
0000870b(5): MOV qword ptr [RSP + 0x30],RAX
00008710(2): MOV EAX,EDX
00008712(4): MOVAPS xmmword ptr [RSP],XMM0
00008716(3): SHR AL,0x5
00008719(3): MOVZX EAX,AL
0000871c(5): LEA R9,[R8 + RAX*0x4 + 0x8]
00008721(8): MOVDQA XMM0,xmmword ptr [0x002219d0]
00008729(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
0000872e(8): MOVDQA XMM0,xmmword ptr [0x002219e0]
00008736(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000873b(3): MOV EDX,dword ptr [R9]
0000873e(2): MOV EAX,EDX
00008740(2): SHR EAX,CL
00008742(2): NOT EAX
00008744(3): AND EAX,0x1
00008747(2): SHL EAX,CL
00008749(3): MOV RCX,R8
0000874c(2): XOR EAX,EDX
0000874e(3): MOV RDX,RSI
00008751(3): MOV RSI,RDI
00008754(3): MOV dword ptr [R9],EAX
00008757(2): XOR EDI,EDI
00008759(5): CALL 0x00008050
0000875e(5): MOV RSI,qword ptr [RSP + 0x38]
00008763(9): XOR RSI,qword ptr FS:[0x28]
0000876c(2): JNZ 0x00008773
0000876e(4): ADD RSP,0x48
00008772(1): RET
00008773(5): CALL 0x00001db0
00008778(8): NOP dword ptr [RAX + RAX*0x1]
00008780(4): MOVSX EDX,SIL
00008784(7): MOV RSI,-0x1
0000878b(5): JMP 0x000086e0
00008790(5): MOV EDX,0x3a
00008795(7): MOV RSI,-0x1
0000879c(5): JMP 0x000086e0
000087b0(5): MOV EDX,0x3a
000087b5(5): JMP 0x000086e0
000087c0(4): SUB RSP,0x48
000087c4(3): MOV RAX,RDX
000087c7(9): MOV RDX,qword ptr FS:[0x28]
000087d0(5): MOV qword ptr [RSP + 0x38],RDX
000087d5(2): XOR EDX,EDX
000087d7(3): CMP ESI,0xa
000087da(2): JZ 0x00008844
000087dc(3): MOV dword ptr [RSP],ESI
000087df(3): MOV RCX,RSP
000087e2(7): MOV RDX,-0x1
000087e9(3): MOV RSI,RAX
000087ec(9): MOV qword ptr [RSP + 0x4],0x0
000087f5(9): MOV qword ptr [RSP + 0xc],0x4000000
000087fe(9): MOV qword ptr [RSP + 0x14],0x0
00008807(9): MOV qword ptr [RSP + 0x1c],0x0
00008810(9): MOV qword ptr [RSP + 0x24],0x0
00008819(9): MOV qword ptr [RSP + 0x2c],0x0
00008822(8): MOV dword ptr [RSP + 0x34],0x0
0000882a(5): CALL 0x00008050
0000882f(5): MOV RCX,qword ptr [RSP + 0x38]
00008834(9): XOR RCX,qword ptr FS:[0x28]
0000883d(2): JNZ 0x00008849
0000883f(4): ADD RSP,0x48
00008843(1): RET
00008844(5): CALL 0x00001c70
00008849(5): CALL 0x00001db0
0000884e(2): NOP
00008850(4): SUB RSP,0x48
00008854(3): MOV R9,RCX
00008857(7): MOV RCX,qword ptr [0x002219f0]
0000885e(8): MOVDQA XMM0,xmmword ptr [0x002219c0]
00008866(9): MOV RAX,qword ptr FS:[0x28]
0000886f(5): MOV qword ptr [RSP + 0x38],RAX
00008874(2): XOR EAX,EAX
00008876(4): MOVAPS xmmword ptr [RSP],XMM0
0000887a(3): TEST RSI,RSI
0000887d(5): MOV qword ptr [RSP + 0x30],RCX
00008882(7): MOV dword ptr [RSP],0xa
00008889(8): MOVDQA XMM0,xmmword ptr [0x002219d0]
00008891(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00008896(8): MOVDQA XMM0,xmmword ptr [0x002219e0]
0000889e(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
000088a3(2): JZ 0x000088d7
000088a5(3): TEST RDX,RDX
000088a8(2): JZ 0x000088d7
000088aa(5): MOV qword ptr [RSP + 0x28],RSI
000088af(5): MOV qword ptr [RSP + 0x30],RDX
000088b4(3): MOV RCX,RSP
000088b7(3): MOV RDX,R8
000088ba(3): MOV RSI,R9
000088bd(5): CALL 0x00008050
000088c2(5): MOV RDI,qword ptr [RSP + 0x38]
000088c7(9): XOR RDI,qword ptr FS:[0x28]
000088d0(2): JNZ 0x000088dc
000088d2(4): ADD RSP,0x48
000088d6(1): RET
000088d7(5): CALL 0x00001c70
000088dc(5): CALL 0x00001db0
000088e1(5): NOP dword ptr [RAX + RAX*0x1]
000088e6(10): NOP word ptr CS:[RAX + RAX*0x1]
000088f0(7): MOV R8,-0x1
000088f7(5): JMP 0x00008850
00008900(3): MOV RCX,RDX
00008903(7): MOV R8,-0x1
0000890a(3): MOV RDX,RSI
0000890d(3): MOV RSI,RDI
00008910(2): XOR EDI,EDI
00008912(5): JMP 0x00008850
00008920(3): MOV R8,RCX
00008923(3): MOV RCX,RDX
00008926(3): MOV RDX,RSI
00008929(3): MOV RSI,RDI
0000892c(2): XOR EDI,EDI
0000892e(5): JMP 0x00008850
00008940(7): LEA RCX,[0x221060]
00008947(5): JMP 0x00008050
00008950(7): LEA RCX,[0x221060]
00008957(3): MOV RDX,RSI
0000895a(3): MOV RSI,RDI
0000895d(2): XOR EDI,EDI
0000895f(5): JMP 0x00008050
00008970(7): LEA RCX,[0x221060]
00008977(7): MOV RDX,-0x1
0000897e(5): JMP 0x00008050
00008990(7): LEA RCX,[0x221060]
00008997(3): MOV RSI,RDI
0000899a(7): MOV RDX,-0x1
000089a1(2): XOR EDI,EDI
000089a3(5): JMP 0x00008050
000089b0(2): PUSH R15
000089b2(2): PUSH R14
000089b4(2): PUSH R13
000089b6(2): PUSH R12
000089b8(3): MOV R13,RDI
000089bb(1): PUSH RBP
000089bc(1): PUSH RBX
000089bd(7): SUB RSP,0xb8
000089c4(5): MOV qword ptr [RSP + 0x8],RSI
000089c9(9): MOV RAX,qword ptr FS:[0x28]
000089d2(8): MOV qword ptr [0xa8 + RSP],RAX
000089da(2): XOR EAX,EAX
000089dc(5): CALL 0x00001ef0
000089e1(5): LEA RDX,[RSP + 0x10]
000089e6(2): MOV ESI,EAX
000089e8(5): MOV EDI,0x1
000089ed(5): CALL 0x00001f60
000089f2(2): TEST EAX,EAX
000089f4(2): JS 0x00008a0a
000089f6(4): MOV EAX,dword ptr [RSP + 0x28]
000089fa(5): AND EAX,0xf000
000089ff(5): CMP EAX,0x8000
00008a04(6): JZ 0x00008b58
00008a0a(5): MOV EBX,0x2000
00008a0f(3): MOV RDI,RBX
00008a12(5): CALL 0x00001f20
00008a17(3): TEST RAX,RAX
00008a1a(3): MOV R12,RAX
00008a1d(6): JZ 0x00008ac0
00008a23(2): XOR EBP,EBP
00008a25(7): MOV R15,-0x1
00008a2c(2): JMP 0x00008a6a
00008a30(4): CMP RBX,-0x1
00008a34(6): JZ 0x00008b10
00008a3a(3): MOV RAX,RBX
00008a3d(3): MOV RDI,R12
00008a40(3): SHR RAX,1
00008a43(3): MOV RDX,RAX
00008a46(3): ADD RAX,RBX
00008a49(3): NOT RDX
00008a4c(3): CMP RDX,RBX
00008a4f(4): CMOVBE RAX,R15
00008a53(3): MOV RSI,RAX
00008a56(3): MOV RBX,RAX
00008a59(5): CALL 0x00001f90
00008a5e(3): TEST RAX,RAX
00008a61(6): JZ 0x00008af0
00008a67(3): MOV R12,RAX
00008a6a(3): MOV R14,RBX
00008a6d(4): LEA RDI,[R12 + RBP*0x1]
00008a71(3): MOV RCX,R13
00008a74(3): SUB R14,RBP
00008a77(5): MOV ESI,0x1
00008a7c(3): MOV RDX,R14
00008a7f(5): CALL 0x00001d00
00008a84(3): ADD RBP,RAX
00008a87(3): CMP R14,RAX
00008a8a(2): JZ 0x00008a30
00008a8c(5): CALL 0x00001c80
00008a91(3): MOV RDI,R13
00008a94(3): MOV R14,RAX
00008a97(3): MOV R15D,dword ptr [RAX]
00008a9a(5): CALL 0x00001ce0
00008a9f(2): TEST EAX,EAX
00008aa1(2): JNZ 0x00008afb
00008aa3(4): SUB RBX,0x1
00008aa7(3): CMP RBX,RBP
00008aaa(6): JA 0x00008b30
00008ab0(5): MOV RAX,qword ptr [RSP + 0x8]
00008ab5(5): MOV byte ptr [R12 + RBP*0x1],0x0
00008aba(3): MOV qword ptr [RAX],RBP
00008abd(3): NOP dword ptr [RAX]
00008ac0(8): MOV RCX,qword ptr [0xa8 + RSP]
00008ac8(9): XOR RCX,qword ptr FS:[0x28]
00008ad1(3): MOV RAX,R12
00008ad4(6): JNZ 0x00008b83
00008ada(7): ADD RSP,0xb8
00008ae1(1): POP RBX
00008ae2(1): POP RBP
00008ae3(2): POP R12
00008ae5(2): POP R13
00008ae7(2): POP R14
00008ae9(2): POP R15
00008aeb(1): RET
00008af0(5): CALL 0x00001c80
00008af5(3): MOV R15D,dword ptr [RAX]
00008af8(3): MOV R14,RAX
00008afb(3): MOV RDI,R12
00008afe(3): XOR R12D,R12D
00008b01(5): CALL 0x00001c60
00008b06(3): MOV dword ptr [R14],R15D
00008b09(2): JMP 0x00008ac0
00008b10(5): CALL 0x00001c80
00008b15(6): MOV R15D,0xc
00008b1b(3): MOV R14,RAX
00008b1e(3): MOV RDI,R12
00008b21(5): CALL 0x00001c60
00008b26(3): XOR R12D,R12D
00008b29(3): MOV dword ptr [R14],R15D
00008b2c(2): JMP 0x00008ac0
00008b30(4): LEA RSI,[RBP + 0x1]
00008b34(3): MOV RDI,R12
00008b37(5): CALL 0x00001f90
00008b3c(3): TEST RAX,RAX
00008b3f(4): CMOVNZ R12,RAX
00008b43(5): MOV RAX,qword ptr [RSP + 0x8]
00008b48(5): MOV byte ptr [R12 + RBP*0x1],0x0
00008b4d(3): MOV qword ptr [RAX],RBP
00008b50(5): JMP 0x00008ac0
00008b58(3): MOV RDI,R13
00008b5b(5): CALL 0x00001cb0
00008b60(3): TEST RAX,RAX
00008b63(6): JS 0x00008a0a
00008b69(5): MOV RBX,qword ptr [RSP + 0x40]
00008b6e(3): CMP RBX,RAX
00008b71(6): JLE 0x00008a0a
00008b77(3): SUB RBX,RAX
00008b7a(4): ADD RBX,0x1
00008b7e(5): JMP 0x00008a0f
00008b83(5): CALL 0x00001db0
00008b88(8): NOP dword ptr [RAX + RAX*0x1]
00008b90(2): PUSH R13
00008b92(2): PUSH R12
00008b94(1): PUSH RBP
00008b95(1): PUSH RBX
00008b96(3): MOV RBP,RSI
00008b99(3): MOV RSI,RDX
00008b9c(4): SUB RSP,0x8
00008ba0(5): CALL 0x00002030
00008ba5(3): TEST RAX,RAX
00008ba8(2): JZ 0x00008c00
00008baa(3): MOV RSI,RBP
00008bad(3): MOV RDI,RAX
00008bb0(3): MOV RBX,RAX
00008bb3(5): CALL 0x000089b0
00008bb8(3): MOV RBP,RAX
00008bbb(5): CALL 0x00001c80
00008bc0(3): MOV RDI,RBX
00008bc3(3): MOV R12,RAX
00008bc6(3): MOV R13D,dword ptr [RAX]
00008bc9(5): CALL 0x0000a290
00008bce(2): TEST EAX,EAX
00008bd0(2): JNZ 0x00008be0
00008bd2(4): ADD RSP,0x8
00008bd6(3): MOV RAX,RBP
00008bd9(1): POP RBX
00008bda(1): POP RBP
00008bdb(2): POP R12
00008bdd(2): POP R13
00008bdf(1): RET
00008be0(3): TEST RBP,RBP
00008be3(2): JZ 0x00008bf1
00008be5(3): MOV RDI,RBP
00008be8(4): MOV R13D,dword ptr [R12]
00008bec(5): CALL 0x00001c60
00008bf1(4): MOV dword ptr [R12],R13D
00008bf5(2): XOR EBP,EBP
00008bf7(2): JMP 0x00008bd2
00008c00(2): XOR EBP,EBP
00008c02(2): JMP 0x00008bd2
00008c10(7): LEA RDX,[0x1c74b]
00008c17(5): JMP 0x00008b90
00008c20(7): LEA RDX,[0x1c1e8]
00008c27(5): JMP 0x00008b90
00008c30(1): PUSH RBP
00008c31(1): PUSH RBX
00008c32(3): MOV RDX,RSI
00008c35(3): MOV RBX,RSI
00008c38(2): XOR ESI,ESI
00008c3a(3): MOV RBP,RDI
00008c3d(4): SUB RSP,0x8
00008c41(5): CALL 0x00001e80
00008c46(3): MOV RDX,RAX
00008c49(3): SUB RDX,RBP
00008c4c(4): ADD RDX,0x1
00008c50(3): TEST RAX,RAX
00008c53(3): MOV RAX,RBX
00008c56(4): CMOVNZ RAX,RDX
00008c5a(4): ADD RSP,0x8
00008c5e(1): POP RBX
00008c5f(1): POP RBP
00008c60(1): RET
00008c70(2): PUSH R15
00008c72(2): PUSH R14
00008c74(2): PUSH R13
00008c76(2): PUSH R12
00008c78(3): MOV R12D,ESI
00008c7b(1): PUSH RBP
00008c7c(1): PUSH RBX
00008c7d(4): SUB RSP,0x78
00008c81(9): MOV RAX,qword ptr FS:[0x28]
00008c8a(5): MOV qword ptr [RSP + 0x68],RAX
00008c8f(2): XOR EAX,EAX
00008c91(5): CALL 0x000020a0
00008c96(3): TEST RAX,RAX
00008c99(6): JZ 0x00009257
00008c9f(3): MOV RBX,RAX
00008ca2(5): CALL 0x00001d90
00008ca7(4): CMP RAX,0x1
00008cab(6): JBE 0x00008fb0
00008cb1(3): TEST R12D,R12D
00008cb4(6): JNZ 0x00008e08
00008cba(5): MOV qword ptr [RSP + 0x38],RBX
00008cbf(3): MOV RDX,RBX
00008cc2(2): MOV ECX,dword ptr [RDX]
00008cc4(4): ADD RDX,0x4
00008cc8(6): LEA EAX,[-0x1010101 + RCX]
00008cce(2): NOT ECX
00008cd0(2): AND EAX,ECX
00008cd2(5): AND EAX,0x80808080
00008cd7(2): JZ 0x00008cc2
00008cd9(2): MOV ECX,EAX
00008cdb(5): MOV byte ptr [RSP + 0x28],0x0
00008ce0(9): MOV qword ptr [RSP + 0x2c],0x0
00008ce9(3): SHR ECX,0x10
00008cec(5): TEST EAX,0x8080
00008cf1(5): MOV byte ptr [RSP + 0x34],0x0
00008cf6(3): CMOVZ EAX,ECX
00008cf9(4): LEA RCX,[RDX + 0x2]
00008cfd(2): MOV ESI,EAX
00008cff(4): CMOVZ RDX,RCX
00008d03(3): ADD SIL,AL
00008d06(3): MOV RSI,RBX
00008d09(4): SBB RDX,0x3
00008d0d(3): XOR R15D,R15D
00008d10(3): CMP RDX,RBX
00008d13(3): MOV R14,RDX
00008d16(5): MOV qword ptr [RSP + 0x20],RDX
00008d1b(6): JBE 0x00008f80
00008d21(5): LEA RBP,[RSP + 0x20]
00008d26(4): LEA RAX,[RBP + 0xc]
00008d2a(5): MOV qword ptr [RSP + 0x18],RAX
00008d2f(2): JMP 0x00008d6e
00008d38(5): CMP byte ptr [RSP + 0x48],0x0
00008d3d(6): MOV R15D,0x1
00008d43(2): JZ 0x00008d57
00008d45(4): MOV EDI,dword ptr [RSP + 0x4c]
00008d49(3): XOR R15D,R15D
00008d4c(5): CALL 0x00001fd0
00008d51(2): TEST EAX,EAX
00008d53(4): SETZ R15B
00008d57(4): LEA RSI,[R12 + R13*0x1]
00008d5b(5): MOV byte ptr [RSP + 0x34],0x0
00008d60(3): CMP RSI,R14
00008d63(5): MOV qword ptr [RSP + 0x38],RSI
00008d68(6): JNC 0x00008f70
00008d6e(5): CMP byte ptr [RSP + 0x28],0x0
00008d73(6): JNZ 0x000090a1
00008d79(3): MOVZX ECX,byte ptr [RSI]
00008d7c(7): LEA RDI,[0x1cf60]
00008d83(2): MOV EAX,ECX
00008d85(3): SHR AL,0x5
00008d88(3): AND EAX,0x7
00008d8b(3): MOV EAX,dword ptr [RDI + RAX*0x4]
00008d8e(3): BT EAX,ECX
00008d91(6): JNC 0x00009080
00008d97(9): MOV qword ptr [RSP + 0x40],0x1
00008da0(3): MOVSX EAX,byte ptr [RSI]
00008da3(6): MOV R13D,0x1
00008da9(5): MOV R12,qword ptr [RSP + 0x38]
00008dae(5): MOV R14,qword ptr [RSP + 0x20]
00008db3(5): MOV byte ptr [RSP + 0x48],0x1
00008db8(4): MOV dword ptr [RSP + 0x4c],EAX
00008dbc(3): TEST R15D,R15D
00008dbf(5): MOV byte ptr [RSP + 0x34],0x1
00008dc4(6): JZ 0x00008d38
00008dca(4): CMP R15D,0x1
00008dce(6): JZ 0x00009120
00008dd4(4): CMP R15D,0x2
00008dd8(6): JNZ 0x000091f0
00008dde(5): CMP byte ptr [RSP + 0x48],0x0
00008de3(6): JZ 0x000091f0
00008de9(4): MOV EDI,dword ptr [RSP + 0x4c]
00008ded(5): CALL 0x00001fd0
00008df2(2): TEST EAX,EAX
00008df4(5): MOV EAX,0x1
00008df9(4): CMOVZ R15D,EAX
00008dfd(5): JMP 0x00008d57
00008e08(5): MOV qword ptr [RSP + 0x38],RBX
00008e0d(3): MOV RDX,RBX
00008e10(2): MOV ECX,dword ptr [RDX]
00008e12(4): ADD RDX,0x4
00008e16(6): LEA EAX,[-0x1010101 + RCX]
00008e1c(2): NOT ECX
00008e1e(2): AND EAX,ECX
00008e20(5): AND EAX,0x80808080
00008e25(2): JZ 0x00008e10
00008e27(2): MOV ECX,EAX
00008e29(5): MOV byte ptr [RSP + 0x28],0x0
00008e2e(9): MOV qword ptr [RSP + 0x2c],0x0
00008e37(3): SHR ECX,0x10
00008e3a(5): TEST EAX,0x8080
00008e3f(5): MOV byte ptr [RSP + 0x34],0x0
00008e44(3): CMOVZ EAX,ECX
00008e47(4): LEA RCX,[RDX + 0x2]
00008e4b(3): MOV R15,RBX
00008e4e(2): MOV ESI,EAX
00008e50(4): CMOVZ RDX,RCX
00008e54(3): ADD SIL,AL
00008e57(4): SBB RDX,0x3
00008e5b(3): CMP RDX,RBX
00008e5e(5): MOV qword ptr [RSP + 0x20],RDX
00008e63(6): JBE 0x000091c0
00008e69(5): LEA RBP,[RSP + 0x20]
00008e6e(7): LEA R14,[0x1cf60]
00008e75(4): LEA R13,[RBP + 0xc]
00008e79(2): JMP 0x00008ee7
00008e80(4): MOVZX ECX,byte ptr [R15]
00008e84(2): MOV EAX,ECX
00008e86(3): SHR AL,0x5
00008e89(3): AND EAX,0x7
00008e8c(4): MOV EAX,dword ptr [R14 + RAX*0x4]
00008e90(3): BT EAX,ECX
00008e93(6): JNC 0x00009158
00008e99(9): MOV qword ptr [RSP + 0x40],0x1
00008ea2(4): MOVSX EAX,byte ptr [R15]
00008ea6(5): MOV R15,qword ptr [RSP + 0x38]
00008eab(5): MOV byte ptr [RSP + 0x48],0x1
00008eb0(5): MOV byte ptr [RSP + 0x34],0x1
00008eb5(4): MOV dword ptr [RSP + 0x4c],EAX
00008eb9(4): MOV EDI,dword ptr [RSP + 0x4c]
00008ebd(5): CALL 0x00001fd0
00008ec2(2): TEST EAX,EAX
00008ec4(6): JZ 0x000091c0
00008eca(5): ADD R15,qword ptr [RSP + 0x40]
00008ecf(5): MOV RDX,qword ptr [RSP + 0x20]
00008ed4(5): MOV byte ptr [RSP + 0x34],0x0
00008ed9(3): CMP R15,RDX
00008edc(5): MOV qword ptr [RSP + 0x38],R15
00008ee1(6): JNC 0x000091c0
00008ee7(5): CMP byte ptr [RSP + 0x28],0x0
00008eec(2): JZ 0x00008e80
00008eee(4): LEA RCX,[RBP + 0xc]
00008ef2(4): LEA RDI,[RBP + 0x2c]
00008ef6(3): SUB RDX,R15
00008ef9(3): MOV RSI,R15
00008efc(5): CALL 0x0000a3b0
00008f01(4): CMP RAX,-0x1
00008f05(5): MOV qword ptr [RSP + 0x40],RAX
00008f0a(6): JZ 0x000091a8
00008f10(4): CMP RAX,-0x2
00008f14(5): MOV R15,qword ptr [RSP + 0x38]
00008f19(6): JZ 0x00009220
00008f1f(3): TEST RAX,RAX
00008f22(2): JNZ 0x00008f43
00008f24(9): MOV qword ptr [RSP + 0x40],0x1
00008f2d(4): CMP byte ptr [R15],0x0
00008f31(6): JNZ 0x00009280
00008f37(4): MOV EDX,dword ptr [RSP + 0x4c]
00008f3b(2): TEST EDX,EDX
00008f3d(6): JNZ 0x0000927b
00008f43(4): LEA RDI,[RBP + 0xc]
00008f47(5): MOV byte ptr [RSP + 0x48],0x1
00008f4c(5): CALL 0x000020b0
00008f51(2): TEST EAX,EAX
00008f53(6): JZ 0x00009240
00008f59(5): MOV byte ptr [RSP + 0x28],0x0
00008f5e(5): MOV byte ptr [RSP + 0x34],0x1
00008f63(5): JMP 0x00008eb9
00008f70(4): CMP R15D,0x2
00008f74(2): JNZ 0x00008f80
00008f76(5): MOV RAX,qword ptr [RSP + 0x8]
00008f7b(3): MOV byte ptr [RAX],0x0
00008f7e(2): NOP
00008f80(3): MOV RAX,RBX
00008f83(5): MOV RBX,qword ptr [RSP + 0x68]
00008f88(9): XOR RBX,qword ptr FS:[0x28]
00008f91(6): JNZ 0x00009252
00008f97(4): ADD RSP,0x78
00008f9b(1): POP RBX
00008f9c(1): POP RBP
00008f9d(2): POP R12
00008f9f(2): POP R13
00008fa1(2): POP R14
00008fa3(2): POP R15
00008fa5(1): RET
00008fb0(3): TEST R12D,R12D
00008fb3(2): JZ 0x00009006
00008fb5(3): MOVZX EBP,byte ptr [RBX]
00008fb8(3): TEST BPL,BPL
00008fbb(6): JZ 0x0000924a
00008fc1(5): CALL 0x000020e0
00008fc6(3): MOV R13,RBX
00008fc9(3): MOV RAX,qword ptr [RAX]
00008fcc(2): JMP 0x00008fde
00008fd0(4): ADD R13,0x1
00008fd4(5): MOVZX EBP,byte ptr [R13]
00008fd9(3): TEST BPL,BPL
00008fdc(2): JZ 0x00008fe5
00008fde(5): TEST byte ptr [RAX + RBP*0x2 + 0x1],0x20
00008fe3(2): JNZ 0x00008fd0
00008fe5(3): MOV RDI,R13
00008fe8(5): CALL 0x00001da0
00008fed(4): LEA RDX,[RAX + 0x1]
00008ff1(3): MOV RSI,R13
00008ff4(3): MOV RDI,RBX
00008ff7(5): CALL 0x00001ff0
00008ffc(4): CMP R12D,0x1
00009000(6): JZ 0x00008f80
00009006(3): MOV RDX,RBX
00009009(2): MOV ECX,dword ptr [RDX]
0000900b(4): ADD RDX,0x4
0000900f(6): LEA EAX,[-0x1010101 + RCX]
00009015(2): NOT ECX
00009017(2): AND EAX,ECX
00009019(5): AND EAX,0x80808080
0000901e(2): JZ 0x00009009
00009020(2): MOV ECX,EAX
00009022(3): SHR ECX,0x10
00009025(5): TEST EAX,0x8080
0000902a(3): CMOVZ EAX,ECX
0000902d(4): LEA RCX,[RDX + 0x2]
00009031(2): MOV ESI,EAX
00009033(4): CMOVZ RDX,RCX
00009037(3): ADD SIL,AL
0000903a(4): SBB RDX,0x3
0000903e(4): LEA RBP,[RDX + -0x1]
00009042(3): CMP RBX,RBP
00009045(6): JA 0x00008f80
0000904b(5): CALL 0x000020e0
00009050(3): MOV RDX,qword ptr [RAX]
00009053(2): JMP 0x00009069
00009058(4): MOV byte ptr [RBP],0x0
0000905c(4): SUB RBP,0x1
00009060(3): CMP RBX,RBP
00009063(6): JA 0x00008f80
00009069(4): MOVZX EAX,byte ptr [RBP]
0000906d(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x20
00009072(2): JNZ 0x00009058
00009074(5): JMP 0x00008f80
00009080(5): MOV RDI,qword ptr [RSP + 0x18]
00009085(5): MOV qword ptr [RSP + 0x10],RSI
0000908a(5): CALL 0x000020b0
0000908f(2): TEST EAX,EAX
00009091(6): JZ 0x0000925c
00009097(5): MOV RSI,qword ptr [RSP + 0x10]
0000909c(5): MOV byte ptr [RSP + 0x28],0x1
000090a1(4): LEA RCX,[RBP + 0xc]
000090a5(3): MOV RDX,R14
000090a8(4): LEA RDI,[RBP + 0x2c]
000090ac(3): SUB RDX,RSI
000090af(5): CALL 0x0000a3b0
000090b4(4): CMP RAX,-0x1
000090b8(5): MOV qword ptr [RSP + 0x40],RAX
000090bd(6): JZ 0x00009180
000090c3(4): CMP RAX,-0x2
000090c7(5): MOV R12,qword ptr [RSP + 0x38]
000090cc(6): JZ 0x00009200
000090d2(3): TEST RAX,RAX
000090d5(2): JNZ 0x000090f7
000090d7(9): MOV qword ptr [RSP + 0x40],0x1
000090e0(5): CMP byte ptr [R12],0x0
000090e5(6): JNZ 0x00009280
000090eb(4): MOV EAX,dword ptr [RSP + 0x4c]
000090ef(2): TEST EAX,EAX
000090f1(6): JNZ 0x0000927b
000090f7(4): LEA RDI,[RBP + 0xc]
000090fb(5): MOV byte ptr [RSP + 0x48],0x1
00009100(5): CALL 0x000020b0
00009105(2): TEST EAX,EAX
00009107(5): MOV R14,qword ptr [RSP + 0x20]
0000910c(2): JZ 0x00009113
0000910e(5): MOV byte ptr [RSP + 0x28],0x0
00009113(5): MOV R13,qword ptr [RSP + 0x40]
00009118(5): JMP 0x00008dbc
00009120(5): CMP byte ptr [RSP + 0x48],0x0
00009125(6): JZ 0x00008d57
0000912b(4): MOV EDI,dword ptr [RSP + 0x4c]
0000912f(5): CALL 0x00001fd0
00009134(5): MOV RSI,qword ptr [RSP + 0x8]
00009139(2): TEST EAX,EAX
0000913b(5): MOV EAX,0x2
00009140(4): CMOVNZ R15D,EAX
00009144(4): CMOVNZ RSI,R12
00009148(5): MOV qword ptr [RSP + 0x8],RSI
0000914d(5): JMP 0x00008d57
00009158(3): MOV RDI,R13
0000915b(5): MOV qword ptr [RSP + 0x10],RDX
00009160(5): CALL 0x000020b0
00009165(2): TEST EAX,EAX
00009167(5): MOV RDX,qword ptr [RSP + 0x10]
0000916c(6): JZ 0x0000925c
00009172(5): MOV byte ptr [RSP + 0x28],0x1
00009177(5): JMP 0x00008eee
00009180(9): MOV qword ptr [RSP + 0x40],0x1
00009189(5): MOV byte ptr [RSP + 0x48],0x0
0000918e(6): MOV R13D,0x1
00009194(5): MOV R12,qword ptr [RSP + 0x38]
00009199(5): MOV R14,qword ptr [RSP + 0x20]
0000919e(5): JMP 0x00008dbc
000091a8(5): MOV R15,qword ptr [RSP + 0x38]
000091ad(9): MOV qword ptr [RSP + 0x40],0x1
000091b6(5): MOV byte ptr [RSP + 0x48],0x0
000091bb(5): MOV byte ptr [RSP + 0x34],0x1
000091c0(3): MOV RDI,R15
000091c3(5): CALL 0x00001da0
000091c8(4): LEA RDX,[RAX + 0x1]
000091cc(3): MOV RSI,R15
000091cf(3): MOV RDI,RBX
000091d2(5): CALL 0x00001ff0
000091d7(4): CMP R12D,0x1
000091db(6): JZ 0x00008f80
000091e1(5): JMP 0x00008cba
000091f0(6): MOV R15D,0x1
000091f6(5): JMP 0x00008d57
00009200(5): MOV R14,qword ptr [RSP + 0x20]
00009205(5): MOV byte ptr [RSP + 0x48],0x0
0000920a(3): MOV R13,R14
0000920d(3): SUB R13,R12
00009210(5): MOV qword ptr [RSP + 0x40],R13
00009215(5): JMP 0x00008dbc
00009220(5): MOV RAX,qword ptr [RSP + 0x20]
00009225(5): MOV byte ptr [RSP + 0x48],0x0
0000922a(5): MOV byte ptr [RSP + 0x34],0x1
0000922f(3): SUB RAX,R15
00009232(5): MOV qword ptr [RSP + 0x40],RAX
00009237(2): JMP 0x000091c0
00009240(5): MOV byte ptr [RSP + 0x34],0x1
00009245(5): JMP 0x00008eb9
0000924a(3): MOV R13,RBX
0000924d(5): JMP 0x00008fe5
00009252(5): CALL 0x00001db0
00009257(5): CALL 0x00009b10
0000925c(7): LEA RCX,[0x1c210]
00009263(7): LEA RSI,[0x1c1f0]
0000926a(7): LEA RDI,[0x1bcca]
00009271(5): MOV EDX,0x8e
00009276(5): CALL 0x00001e30
0000927b(5): CALL 0x00002143
00009280(7): LEA RCX,[0x1c210]
00009287(7): LEA RSI,[0x1c1f0]
0000928e(7): LEA RDI,[0x1bce1]
00009295(5): MOV EDX,0xa9
0000929a(5): CALL 0x00001e30
0000929f(1): NOP
000092a0(2): PUSH R15
000092a2(2): PUSH R14
000092a4(2): PUSH R13
000092a6(2): PUSH R12
000092a8(3): MOV R12,R9
000092ab(1): PUSH RBP
000092ac(1): PUSH RBX
000092ad(3): MOV RBP,RDI
000092b0(3): MOV RBX,R8
000092b3(4): SUB RSP,0x28
000092b7(3): TEST RSI,RSI
000092ba(6): JZ 0x000093d8
000092c0(3): MOV R8,RDX
000092c3(7): LEA RDX,[0x1c222]
000092ca(3): MOV R9,RCX
000092cd(2): XOR EAX,EAX
000092cf(3): MOV RCX,RSI
000092d2(5): MOV ESI,0x1
000092d7(5): CALL 0x00002090
000092dc(7): LEA RSI,[0x1c235]
000092e3(2): XOR EDI,EDI
000092e5(5): MOV EDX,0x5
000092ea(5): CALL 0x00001d80
000092ef(7): LEA RDX,[0x1c560]
000092f6(3): MOV RCX,RAX
000092f9(6): MOV R8D,0x7e3
000092ff(5): MOV ESI,0x1
00009304(3): MOV RDI,RBP
00009307(2): XOR EAX,EAX
00009309(5): CALL 0x00002090
0000930e(7): LEA RSI,[0x1c2c0]
00009315(2): XOR EDI,EDI
00009317(5): MOV EDX,0x5
0000931c(5): CALL 0x00001d80
00009321(3): MOV RSI,RBP
00009324(3): MOV RDI,RAX
00009327(5): CALL 0x00001eb0
0000932c(4): CMP R12,0x9
00009330(6): JA 0x00009670
00009336(7): LEA RDX,[0x1c51c]
0000933d(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
00009341(3): ADD RAX,RDX
00009344(2): JMP RAX
00009350(4): MOV R9,qword ptr [RBX + 0x38]
00009354(4): MOV RAX,qword ptr [RBX + 0x10]
00009358(7): LEA RSI,[0x1c430]
0000935f(4): MOV R8,qword ptr [RBX + 0x8]
00009363(5): MOV EDX,0x5
00009368(2): XOR EDI,EDI
0000936a(4): MOV R13,qword ptr [RBX + 0x30]
0000936e(4): MOV R12,qword ptr [RBX + 0x28]
00009372(5): MOV qword ptr [RSP + 0x10],R9
00009377(4): MOV R15,qword ptr [RBX + 0x20]
0000937b(4): MOV R14,qword ptr [RBX + 0x18]
0000937f(4): MOV qword ptr [RSP],RAX
00009383(5): MOV qword ptr [RSP + 0x8],R8
00009388(3): MOV RBX,qword ptr [RBX]
0000938b(5): CALL 0x00001d80
00009390(4): SUB RSP,0x8
00009394(5): MOV R9,qword ptr [RSP + 0x18]
00009399(3): MOV RDX,RAX
0000939c(3): MOV RCX,RBX
0000939f(5): MOV ESI,0x1
000093a4(3): MOV RDI,RBP
000093a7(2): XOR EAX,EAX
000093a9(2): PUSH R9
000093ab(2): PUSH R13
000093ad(2): PUSH R12
000093af(2): PUSH R15
000093b1(2): PUSH R14
000093b3(5): MOV R9,qword ptr [RSP + 0x30]
000093b8(5): MOV R8,qword ptr [RSP + 0x38]
000093bd(5): CALL 0x00002090
000093c2(4): ADD RSP,0x30
000093c6(4): ADD RSP,0x28
000093ca(1): POP RBX
000093cb(1): POP RBP
000093cc(2): POP R12
000093ce(2): POP R13
000093d0(2): POP R14
000093d2(2): POP R15
000093d4(1): RET
000093d8(3): MOV R8,RCX
000093db(3): MOV RCX,RDX
000093de(7): LEA RDX,[0x1c22e]
000093e5(5): MOV ESI,0x1
000093ea(2): XOR EAX,EAX
000093ec(5): CALL 0x00002090
000093f1(5): JMP 0x000092dc
00009400(4): MOV R10,qword ptr [RBX + 0x40]
00009404(4): MOV R9,qword ptr [RBX + 0x38]
00009408(7): LEA RSI,[0x1c460]
0000940f(4): MOV RAX,qword ptr [RBX + 0x10]
00009413(4): MOV R8,qword ptr [RBX + 0x8]
00009417(5): MOV EDX,0x5
0000941c(4): MOV R13,qword ptr [RBX + 0x30]
00009420(4): MOV R12,qword ptr [RBX + 0x28]
00009424(4): MOV R15,qword ptr [RBX + 0x20]
00009428(4): MOV R14,qword ptr [RBX + 0x18]
0000942c(3): MOV RBX,qword ptr [RBX]
0000942f(5): MOV qword ptr [RSP + 0x18],R10
00009434(5): MOV qword ptr [RSP + 0x10],R9
00009439(4): MOV qword ptr [RSP],RAX
0000943d(5): MOV qword ptr [RSP + 0x8],R8
00009442(2): XOR EDI,EDI
00009444(5): CALL 0x00001d80
00009449(5): MOV R10,qword ptr [RSP + 0x18]
0000944e(2): PUSH R10
00009450(5): JMP 0x00009394
00009458(3): MOV RBX,qword ptr [RBX]
0000945b(7): LEA RSI,[0x1c239]
00009462(5): MOV EDX,0x5
00009467(2): XOR EDI,EDI
00009469(5): CALL 0x00001d80
0000946e(4): ADD RSP,0x28
00009472(3): MOV RCX,RBX
00009475(3): MOV RDI,RBP
00009478(1): POP RBX
00009479(1): POP RBP
0000947a(2): POP R12
0000947c(2): POP R13
0000947e(2): POP R14
00009480(2): POP R15
00009482(3): MOV RDX,RAX
00009485(5): MOV ESI,0x1
0000948a(2): XOR EAX,EAX
0000948c(5): JMP 0x00002090
00009498(4): MOV R12,qword ptr [RBX + 0x8]
0000949c(7): LEA RSI,[0x1c249]
000094a3(3): MOV RBX,qword ptr [RBX]
000094a6(5): MOV EDX,0x5
000094ab(2): XOR EDI,EDI
000094ad(5): CALL 0x00001d80
000094b2(4): ADD RSP,0x28
000094b6(3): MOV R8,R12
000094b9(3): MOV RCX,RBX
000094bc(3): MOV RDI,RBP
000094bf(3): MOV RDX,RAX
000094c2(5): MOV ESI,0x1
000094c7(1): POP RBX
000094c8(1): POP RBP
000094c9(2): POP R12
000094cb(2): POP R13
000094cd(2): POP R14
000094cf(2): POP R15
000094d1(2): XOR EAX,EAX
000094d3(5): JMP 0x00002090
000094e0(4): MOV R13,qword ptr [RBX + 0x10]
000094e4(4): MOV R12,qword ptr [RBX + 0x8]
000094e8(7): LEA RSI,[0x1c260]
000094ef(3): MOV RBX,qword ptr [RBX]
000094f2(5): MOV EDX,0x5
000094f7(2): XOR EDI,EDI
000094f9(5): CALL 0x00001d80
000094fe(4): ADD RSP,0x28
00009502(3): MOV R9,R13
00009505(3): MOV R8,R12
00009508(3): MOV RCX,RBX
0000950b(3): MOV RDI,RBP
0000950e(3): MOV RDX,RAX
00009511(1): POP RBX
00009512(1): POP RBP
00009513(2): POP R12
00009515(2): POP R13
00009517(2): POP R14
00009519(2): POP R15
0000951b(5): MOV ESI,0x1
00009520(2): XOR EAX,EAX
00009522(5): JMP 0x00002090
00009530(7): LEA RSI,[0x1c390]
00009537(5): MOV EDX,0x5
0000953c(2): XOR EDI,EDI
0000953e(4): MOV R14,qword ptr [RBX + 0x18]
00009542(4): MOV R13,qword ptr [RBX + 0x10]
00009546(4): MOV R12,qword ptr [RBX + 0x8]
0000954a(3): MOV RBX,qword ptr [RBX]
0000954d(5): CALL 0x00001d80
00009552(4): SUB RSP,0x8
00009556(2): PUSH R14
00009558(3): MOV RDX,RAX
0000955b(3): MOV R9,R13
0000955e(3): MOV R8,R12
00009561(3): MOV RCX,RBX
00009564(3): MOV RDI,RBP
00009567(5): MOV ESI,0x1
0000956c(2): XOR EAX,EAX
0000956e(5): CALL 0x00002090
00009573(1): POP RAX
00009574(1): POP RDX
00009575(4): ADD RSP,0x28
00009579(1): POP RBX
0000957a(1): POP RBP
0000957b(2): POP R12
0000957d(2): POP R13
0000957f(2): POP R14
00009581(2): POP R15
00009583(1): RET
00009588(4): MOV R15,qword ptr [RBX + 0x20]
0000958c(7): LEA RSI,[0x1c3b0]
00009593(5): MOV EDX,0x5
00009598(2): XOR EDI,EDI
0000959a(4): MOV R14,qword ptr [RBX + 0x18]
0000959e(4): MOV R13,qword ptr [RBX + 0x10]
000095a2(4): MOV R12,qword ptr [RBX + 0x8]
000095a6(3): MOV RBX,qword ptr [RBX]
000095a9(5): CALL 0x00001d80
000095ae(2): PUSH R15
000095b0(2): JMP 0x00009556
000095b8(4): MOV R8,qword ptr [RBX + 0x8]
000095bc(4): MOV R12,qword ptr [RBX + 0x28]
000095c0(7): LEA RSI,[0x1c3d8]
000095c7(4): MOV R15,qword ptr [RBX + 0x20]
000095cb(4): MOV R14,qword ptr [RBX + 0x18]
000095cf(5): MOV EDX,0x5
000095d4(4): MOV R13,qword ptr [RBX + 0x10]
000095d8(2): XOR EDI,EDI
000095da(3): MOV RBX,qword ptr [RBX]
000095dd(4): MOV qword ptr [RSP],R8
000095e1(5): CALL 0x00001d80
000095e6(4): SUB RSP,0x8
000095ea(3): MOV R9,R13
000095ed(2): PUSH R12
000095ef(2): PUSH R15
000095f1(2): PUSH R14
000095f3(5): MOV R8,qword ptr [RSP + 0x20]
000095f8(3): MOV RCX,RBX
000095fb(3): MOV RDX,RAX
000095fe(3): MOV RDI,RBP
00009601(5): MOV ESI,0x1
00009606(2): XOR EAX,EAX
00009608(5): CALL 0x00002090
0000960d(4): ADD RSP,0x20
00009611(4): ADD RSP,0x28
00009615(1): POP RBX
00009616(1): POP RBP
00009617(2): POP R12
00009619(2): POP R13
0000961b(2): POP R14
0000961d(2): POP R15
0000961f(1): RET
00009620(4): MOV R9,qword ptr [RBX + 0x10]
00009624(4): MOV R13,qword ptr [RBX + 0x30]
00009628(7): LEA RSI,[0x1c400]
0000962f(4): MOV R12,qword ptr [RBX + 0x28]
00009633(4): MOV R15,qword ptr [RBX + 0x20]
00009637(5): MOV EDX,0x5
0000963c(4): MOV R14,qword ptr [RBX + 0x18]
00009640(4): MOV R8,qword ptr [RBX + 0x8]
00009644(2): XOR EDI,EDI
00009646(5): MOV qword ptr [RSP + 0x8],R9
0000964b(3): MOV RBX,qword ptr [RBX]
0000964e(4): MOV qword ptr [RSP],R8
00009652(5): CALL 0x00001d80
00009657(2): PUSH R13
00009659(2): PUSH R12
0000965b(2): PUSH R15
0000965d(2): PUSH R14
0000965f(5): MOV R9,qword ptr [RSP + 0x28]
00009664(2): JMP 0x000095f3
00009670(4): MOV R10,qword ptr [RBX + 0x40]
00009674(4): MOV R9,qword ptr [RBX + 0x38]
00009678(5): MOV EDX,0x5
0000967d(4): MOV RAX,qword ptr [RBX + 0x10]
00009681(4): MOV R8,qword ptr [RBX + 0x8]
00009685(7): LEA RSI,[0x1c498]
0000968c(4): MOV R13,qword ptr [RBX + 0x30]
00009690(4): MOV R12,qword ptr [RBX + 0x28]
00009694(4): MOV R15,qword ptr [RBX + 0x20]
00009698(4): MOV R14,qword ptr [RBX + 0x18]
0000969c(5): MOV qword ptr [RSP + 0x18],R10
000096a1(5): MOV qword ptr [RSP + 0x10],R9
000096a6(4): MOV qword ptr [RSP],RAX
000096aa(5): MOV qword ptr [RSP + 0x8],R8
000096af(3): MOV RBX,qword ptr [RBX]
000096b2(5): JMP 0x00009442
000096c0(3): XOR R9D,R9D
000096c3(4): CMP qword ptr [R8],0x0
000096c7(2): JZ 0x000096db
000096c9(7): NOP dword ptr [RAX]
000096d0(4): ADD R9,0x1
000096d4(5): CMP qword ptr [R8 + R9*0x8],0x0
000096d9(2): JNZ 0x000096d0
000096db(5): JMP 0x000092a0
000096e0(4): SUB RSP,0x68
000096e4(3): MOV R10,R8
000096e7(3): XOR R9D,R9D
000096ea(9): MOV RAX,qword ptr FS:[0x28]
000096f3(5): MOV qword ptr [RSP + 0x58],RAX
000096f8(2): XOR EAX,EAX
000096fa(3): MOV R8,RSP
000096fd(3): NOP dword ptr [RAX]
00009700(3): MOV EAX,dword ptr [R10]
00009703(3): CMP EAX,0x2f
00009706(2): JA 0x0000974a
00009708(3): MOV R11D,EAX
0000970b(4): ADD R11,qword ptr [R10 + 0x10]
0000970f(3): ADD EAX,0x8
00009712(3): MOV dword ptr [R10],EAX
00009715(3): MOV RAX,qword ptr [R11]
00009718(3): TEST RAX,RAX
0000971b(4): MOV qword ptr [R8 + R9*0x8],RAX
0000971f(2): JZ 0x0000972b
00009721(4): ADD R9,0x1
00009725(4): CMP R9,0xa
00009729(2): JNZ 0x00009700
0000972b(5): CALL 0x000092a0
00009730(5): MOV RAX,qword ptr [RSP + 0x58]
00009735(9): XOR RAX,qword ptr FS:[0x28]
0000973e(2): JNZ 0x00009745
00009740(4): ADD RSP,0x68
00009744(1): RET
00009745(5): CALL 0x00001db0
0000974a(4): MOV R11,qword ptr [R10 + 0x8]
0000974e(4): LEA RAX,[R11 + 0x8]
00009752(4): MOV qword ptr [R10 + 0x8],RAX
00009756(2): JMP 0x00009715
00009760(1): PUSH RBP
00009761(1): PUSH RBX
00009762(6): MOV R10D,0x20
00009768(3): XOR R11D,R11D
0000976b(7): SUB RSP,0xb8
00009772(9): MOV RAX,qword ptr FS:[0x28]
0000977b(5): MOV qword ptr [RSP + 0x78],RAX
00009780(2): XOR EAX,EAX
00009782(8): LEA RAX,[0xd0 + RSP]
0000978a(8): MOV qword ptr [0xa0 + RSP],R8
00009792(8): LEA RBX,[0xd0 + RSP]
0000979a(5): LEA R8,[RSP + 0x20]
0000979f(8): MOV qword ptr [0xa8 + RSP],R9
000097a7(8): MOV dword ptr [RSP + 0x8],0x20
000097af(5): MOV qword ptr [RSP + 0x10],RAX
000097b4(8): LEA RAX,[0x80 + RSP]
000097bc(3): XOR R9D,R9D
000097bf(5): MOV qword ptr [RSP + 0x18],RAX
000097c4(3): MOV RBP,RAX
000097c7(9): NOP word ptr [RAX + RAX*0x1]
000097d0(4): CMP R10D,0x2f
000097d4(2): JA 0x0000982c
000097d6(3): MOV EAX,R10D
000097d9(6): MOV R11D,0x1
000097df(4): ADD R10D,0x8
000097e3(3): ADD RAX,RBP
000097e6(3): MOV RAX,qword ptr [RAX]
000097e9(3): TEST RAX,RAX
000097ec(4): MOV qword ptr [R8 + R9*0x8],RAX
000097f0(2): JZ 0x000097fc
000097f2(4): ADD R9,0x1
000097f6(4): CMP R9,0xa
000097fa(2): JNZ 0x000097d0
000097fc(3): TEST R11B,R11B
000097ff(2): JNZ 0x00009825
00009801(5): CALL 0x000092a0
00009806(5): MOV RAX,qword ptr [RSP + 0x78]
0000980b(9): XOR RAX,qword ptr FS:[0x28]
00009814(2): JNZ 0x00009820
00009816(7): ADD RSP,0xb8
0000981d(1): POP RBX
0000981e(1): POP RBP
0000981f(1): RET
00009820(5): CALL 0x00001db0
00009825(5): MOV dword ptr [RSP + 0x8],R10D
0000982a(2): JMP 0x00009801
0000982c(3): MOV RAX,RBX
0000982f(4): ADD RBX,0x8
00009833(2): JMP 0x000097e6
00009840(1): PUSH RBX
00009841(7): LEA RSI,[0x1c27c]
00009848(5): MOV EDX,0x5
0000984d(2): XOR EDI,EDI
0000984f(5): CALL 0x00001d80
00009854(7): LEA RDX,[0x1c291]
0000985b(3): MOV RSI,RAX
0000985e(5): MOV EDI,0x1
00009863(2): XOR EAX,EAX
00009865(5): CALL 0x00001fb0
0000986a(7): LEA RSI,[0x1c2a7]
00009871(5): MOV EDX,0x5
00009876(2): XOR EDI,EDI
00009878(5): CALL 0x00001d80
0000987d(7): LEA RCX,[0x1b5e0]
00009884(7): LEA RDX,[0x1b7d2]
0000988b(3): MOV RSI,RAX
0000988e(5): MOV EDI,0x1
00009893(2): XOR EAX,EAX
00009895(5): CALL 0x00001fb0
0000989a(7): MOV RBX,qword ptr [0x002210c8]
000098a1(7): LEA RSI,[0x1c4d8]
000098a8(2): XOR EDI,EDI
000098aa(5): MOV EDX,0x5
000098af(5): CALL 0x00001d80
000098b4(3): MOV RSI,RBX
000098b7(3): MOV RDI,RAX
000098ba(1): POP RBX
000098bb(5): JMP 0x00001eb0
000098c0(1): PUSH RBX
000098c1(3): MOV RBX,RDI
000098c4(5): CALL 0x00001f20
000098c9(3): TEST RAX,RAX
000098cc(2): JNZ 0x000098d3
000098ce(3): TEST RBX,RBX
000098d1(2): JNZ 0x000098d5
000098d3(1): POP RBX
000098d4(1): RET
000098d5(5): CALL 0x00009b10
000098da(6): NOP word ptr [RAX + RAX*0x1]
000098e0(3): MOV RAX,RDI
000098e3(3): MUL RSI
000098e6(3): MOV RDI,RAX
000098e9(3): SETO AL
000098ec(3): TEST RDI,RDI
000098ef(2): JS 0x000098fb
000098f1(3): MOVZX EAX,AL
000098f4(3): TEST RAX,RAX
000098f7(2): JNZ 0x000098fb
000098f9(2): JMP 0x000098c0
000098fb(4): SUB RSP,0x8
000098ff(5): CALL 0x00009b10
00009904(2): NOP
00009906(10): NOP word ptr CS:[RAX + RAX*0x1]
00009910(2): JMP 0x000098c0
00009920(3): TEST RSI,RSI
00009923(1): PUSH RBX
00009924(3): MOV RBX,RSI
00009927(2): JNZ 0x0000992e
00009929(3): TEST RDI,RDI
0000992c(2): JNZ 0x00009948
0000992e(3): MOV RSI,RBX
00009931(5): CALL 0x00001f90
00009936(3): TEST RAX,RAX
00009939(2): JNZ 0x00009940
0000993b(3): TEST RBX,RBX
0000993e(2): JNZ 0x00009951
00009940(1): POP RBX
00009941(1): RET
00009948(5): CALL 0x00001c60
0000994d(2): XOR EAX,EAX
0000994f(1): POP RBX
00009950(1): RET
00009951(5): CALL 0x00009b10
00009956(10): NOP word ptr CS:[RAX + RAX*0x1]
00009960(3): MOV RAX,RSI
00009963(3): MUL RDX
00009966(3): MOV RSI,RAX
00009969(3): SETO AL
0000996c(3): TEST RSI,RSI
0000996f(2): JS 0x0000997b
00009971(3): MOVZX EAX,AL
00009974(3): TEST RAX,RAX
00009977(2): JNZ 0x0000997b
00009979(2): JMP 0x00009920
0000997b(4): SUB RSP,0x8
0000997f(5): CALL 0x00009b10
00009984(2): NOP
00009986(10): NOP word ptr CS:[RAX + RAX*0x1]
00009990(3): TEST RDI,RDI
00009993(3): MOV R9,RDX
00009996(3): MOV RCX,qword ptr [RSI]
00009999(2): JZ 0x000099d0
0000999b(2): XOR EDX,EDX
0000999d(10): MOV RAX,0x5555555555555554
000099a7(3): DIV R9
000099aa(3): CMP RAX,RCX
000099ad(2): JBE 0x000099eb
000099af(3): MOV RAX,RCX
000099b2(3): SHR RAX,1
000099b5(5): LEA RCX,[RAX + RCX*0x1 + 0x1]
000099ba(3): MOV qword ptr [RSI],RCX
000099bd(4): IMUL RCX,R9
000099c1(3): MOV RSI,RCX
000099c4(5): JMP 0x00009920
000099d0(3): TEST RCX,RCX
000099d3(2): JZ 0x000099f8
000099d5(3): MOV RAX,RCX
000099d8(3): MUL R9
000099db(3): SETO DL
000099de(3): TEST RAX,RAX
000099e1(3): MOVZX EDX,DL
000099e4(2): JS 0x000099eb
000099e6(3): TEST RDX,RDX
000099e9(2): JZ 0x000099ba
000099eb(4): SUB RSP,0x8
000099ef(5): CALL 0x00009b10
000099f4(4): NOP dword ptr [RAX]
000099f8(2): XOR EDX,EDX
000099fa(5): MOV EAX,0x80
000099ff(3): XOR R8D,R8D
00009a02(3): DIV R9
00009a05(3): TEST RAX,RAX
00009a08(4): SETZ R8B
00009a0c(4): LEA RCX,[R8 + RAX*0x1]
00009a10(2): JMP 0x000099d5
00009a20(3): TEST RDI,RDI
00009a23(3): MOV RAX,qword ptr [RSI]
00009a26(2): JZ 0x00009a50
00009a28(10): MOV RDX,0x5555555555555553
00009a32(3): CMP RAX,RDX
00009a35(2): JA 0x00009a61
00009a37(3): MOV RDX,RAX
00009a3a(3): SHR RDX,1
00009a3d(5): LEA RAX,[RDX + RAX*0x1 + 0x1]
00009a42(3): MOV qword ptr [RSI],RAX
00009a45(3): MOV RSI,RAX
00009a48(5): JMP 0x00009920
00009a50(3): TEST RAX,RAX
00009a53(5): MOV EDX,0x80
00009a58(4): CMOVZ RAX,RDX
00009a5c(3): TEST RAX,RAX
00009a5f(2): JNS 0x00009a42
00009a61(4): SUB RSP,0x8
00009a65(5): CALL 0x00009b10
00009a6a(6): NOP word ptr [RAX + RAX*0x1]
00009a70(1): PUSH RBX
00009a71(3): MOV RBX,RDI
00009a74(5): CALL 0x000098c0
00009a79(3): MOV RDX,RBX
00009a7c(2): XOR ESI,ESI
00009a7e(3): MOV RDI,RAX
00009a81(1): POP RBX
00009a82(5): JMP 0x00001e40
00009a90(3): MOV RAX,RDI
00009a93(4): SUB RSP,0x8
00009a97(3): MUL RSI
00009a9a(3): SETO DL
00009a9d(3): TEST RAX,RAX
00009aa0(2): JS 0x00009ab9
00009aa2(3): MOVZX EDX,DL
00009aa5(3): TEST RDX,RDX
00009aa8(2): JNZ 0x00009ab9
00009aaa(5): CALL 0x00001ec0
00009aaf(3): TEST RAX,RAX
00009ab2(2): JZ 0x00009ab9
00009ab4(4): ADD RSP,0x8
00009ab8(1): RET
00009ab9(5): CALL 0x00009b10
00009abe(2): NOP
00009ac0(1): PUSH RBP
00009ac1(1): PUSH RBX
00009ac2(3): MOV RBP,RDI
00009ac5(3): MOV RDI,RSI
00009ac8(3): MOV RBX,RSI
00009acb(4): SUB RSP,0x8
00009acf(5): CALL 0x000098c0
00009ad4(4): ADD RSP,0x8
00009ad8(3): MOV RDX,RBX
00009adb(3): MOV RSI,RBP
00009ade(1): POP RBX
00009adf(1): POP RBP
00009ae0(3): MOV RDI,RAX
00009ae3(5): JMP 0x00001ee0
00009af0(1): PUSH RBX
00009af1(3): MOV RBX,RDI
00009af4(5): CALL 0x00001da0
00009af9(3): MOV RDI,RBX
00009afc(4): LEA RSI,[RAX + 0x1]
00009b00(1): POP RBX
00009b01(2): JMP 0x00009ac0
00009b10(7): LEA RSI,[0x1c58f]
00009b17(4): SUB RSP,0x8
00009b1b(5): MOV EDX,0x5
00009b20(2): XOR EDI,EDI
00009b22(5): CALL 0x00001d80
00009b27(6): MOV EDI,dword ptr [0x00221048]
00009b2d(7): LEA RDX,[0x1ba14]
00009b34(3): MOV RCX,RAX
00009b37(2): XOR ESI,ESI
00009b39(2): XOR EAX,EAX
00009b3b(5): CALL 0x00002000
00009b40(5): CALL 0x00001c70
00009b45(10): NOP word ptr CS:[RAX + RAX*0x1]
00009b4f(1): NOP
00009b50(1): PUSH RBX
00009b51(5): CALL 0x0001a5b0
00009b56(2): TEST EAX,EAX
00009b58(2): MOV EBX,EAX
00009b5a(2): JS 0x00009b60
00009b5c(2): MOV EAX,EBX
00009b5e(1): POP RBX
00009b5f(1): RET
00009b60(5): CALL 0x00001c80
00009b65(3): CMP dword ptr [RAX],0xc
00009b68(2): JNZ 0x00009b5c
00009b6a(5): CALL 0x00009b10
00009b6f(1): NOP
00009b70(1): PUSH RBX
00009b71(5): CALL 0x0001a870
00009b76(3): TEST RAX,RAX
00009b79(3): MOV RBX,RAX
00009b7c(2): JZ 0x00009b88
00009b7e(3): MOV RAX,RBX
00009b81(1): POP RBX
00009b82(1): RET
00009b88(5): CALL 0x00001c80
00009b8d(3): CMP dword ptr [RAX],0xc
00009b90(2): JNZ 0x00009b7e
00009b92(5): CALL 0x00009b10
00009b97(9): NOP word ptr [RAX + RAX*0x1]
00009ba0(1): PUSH RBX
00009ba1(5): CALL 0x0001aac0
00009ba6(3): TEST RAX,RAX
00009ba9(3): MOV RBX,RAX
00009bac(2): JZ 0x00009bb8
00009bae(3): MOV RAX,RBX
00009bb1(1): POP RBX
00009bb2(1): RET
00009bb8(5): CALL 0x00001c80
00009bbd(3): CMP dword ptr [RAX],0xc
00009bc0(2): JNZ 0x00009bae
00009bc2(5): CALL 0x00009b10
00009bc7(9): NOP word ptr [RAX + RAX*0x1]
00009bd0(2): PUSH R15
00009bd2(2): PUSH R14
00009bd4(2): PUSH R13
00009bd6(2): PUSH R12
00009bd8(1): PUSH RBP
00009bd9(1): PUSH RBX
00009bda(4): SUB RSP,0x28
00009bde(9): MOV RAX,qword ptr FS:[0x28]
00009be7(5): MOV qword ptr [RSP + 0x18],RAX
00009bec(2): XOR EAX,EAX
00009bee(3): CMP EDX,0x24
00009bf1(6): JA 0x0000a25f
00009bf7(5): LEA RAX,[RSP + 0x10]
00009bfc(3): TEST RSI,RSI
00009bff(3): MOV RBX,RSI
00009c02(3): MOV R12,RDI
00009c05(2): MOV EBP,EDX
00009c07(3): MOV R14,RCX
00009c0a(4): CMOVZ RBX,RAX
00009c0e(3): MOV R15,R8
00009c11(5): CALL 0x00001c80
00009c16(2): XOR ECX,ECX
00009c18(2): MOV EDX,EBP
00009c1a(6): MOV dword ptr [RAX],0x0
00009c20(3): MOV RSI,RBX
00009c23(3): MOV RDI,R12
00009c26(3): MOV R13,RAX
00009c29(5): CALL 0x00001d30
00009c2e(3): MOV RCX,qword ptr [RBX]
00009c31(3): MOV RBP,RAX
00009c34(3): CMP RCX,R12
00009c37(2): JZ 0x00009c98
00009c39(4): MOV EAX,dword ptr [R13]
00009c3d(2): TEST EAX,EAX
00009c3f(2): JNZ 0x00009c80
00009c41(3): XOR R12D,R12D
00009c44(3): TEST R15,R15
00009c47(2): JZ 0x00009c56
00009c49(4): MOVZX R13D,byte ptr [RCX]
00009c4d(3): TEST R13B,R13B
00009c50(6): JNZ 0x00009cd3
00009c56(3): MOV qword ptr [R14],RBP
00009c59(5): MOV RDI,qword ptr [RSP + 0x18]
00009c5e(9): XOR RDI,qword ptr FS:[0x28]
00009c67(3): MOV EAX,R12D
00009c6a(6): JNZ 0x0000a27e
00009c70(4): ADD RSP,0x28
00009c74(1): POP RBX
00009c75(1): POP RBP
00009c76(2): POP R12
00009c78(2): POP R13
00009c7a(2): POP R14
00009c7c(2): POP R15
00009c7e(1): RET
00009c80(3): CMP EAX,0x22
00009c83(6): MOV R12D,0x4
00009c89(2): JNZ 0x00009c59
00009c8b(6): MOV R12D,0x1
00009c91(2): JMP 0x00009c44
00009c98(3): TEST R15,R15
00009c9b(6): JZ 0x0000a130
00009ca1(4): MOVZX R13D,byte ptr [RCX]
00009ca5(5): MOV qword ptr [RSP + 0x8],RCX
00009caa(6): MOV R12D,0x4
00009cb0(3): TEST R13B,R13B
00009cb3(2): JZ 0x00009c59
00009cb5(4): MOVSX ESI,R13B
00009cb9(3): MOV RDI,R15
00009cbc(5): CALL 0x00001df0
00009cc1(3): TEST RAX,RAX
00009cc4(5): MOV RCX,qword ptr [RSP + 0x8]
00009cc9(2): JZ 0x00009c59
00009ccb(5): MOV EBP,0x1
00009cd0(3): XOR R12D,R12D
00009cd3(4): MOVSX ESI,R13B
00009cd7(3): MOV RDI,R15
00009cda(5): MOV qword ptr [RSP + 0x8],RCX
00009cdf(5): CALL 0x00001df0
00009ce4(3): TEST RAX,RAX
00009ce7(5): MOV RCX,qword ptr [RSP + 0x8]
00009cec(2): JZ 0x00009d48
00009cee(4): LEA EAX,[R13 + -0x45]
00009cf2(2): CMP AL,0x2f
00009cf4(2): JA 0x00009d58
00009cf6(10): MOV RDX,0x814400308945
00009d00(4): BT RDX,RAX
00009d04(2): JNC 0x00009d58
00009d06(5): MOV ESI,0x30
00009d0b(3): MOV RDI,R15
00009d0e(5): MOV qword ptr [RSP + 0x8],RCX
00009d13(5): CALL 0x00001df0
00009d18(3): TEST RAX,RAX
00009d1b(5): MOV RCX,qword ptr [RSP + 0x8]
00009d20(2): JZ 0x00009d58
00009d22(4): MOVZX EAX,byte ptr [RCX + 0x1]
00009d26(2): CMP AL,0x44
00009d28(2): JZ 0x00009d36
00009d2a(2): CMP AL,0x69
00009d2c(6): JZ 0x0000a218
00009d32(2): CMP AL,0x42
00009d34(2): JNZ 0x00009d58
00009d36(5): MOV EDI,0x2
00009d3b(5): MOV EAX,0x3e8
00009d40(2): JMP 0x00009d62
00009d48(3): MOV qword ptr [R14],RBP
00009d4b(4): OR R12D,0x2
00009d4f(5): JMP 0x00009c59
00009d58(5): MOV EDI,0x1
00009d5d(5): MOV EAX,0x400
00009d62(4): SUB R13D,0x42
00009d66(4): CMP R13B,0x35
00009d6a(2): JA 0x00009d48
00009d6c(7): LEA RSI,[0x1c5e8]
00009d73(4): MOVZX R13D,R13B
00009d77(4): MOVSXD RDX,dword ptr [RSI + R13*0x4]
00009d7b(3): ADD RDX,RSI
00009d7e(2): JMP RDX
00009d80(10): MOV R8,-0x8000000000000000
00009d8a(3): MOVSXD RSI,EAX
00009d8d(3): MOV RAX,R8
00009d90(2): CQO
00009d92(3): IDIV RSI
00009d95(3): CMP RBP,RAX
00009d98(3): MOV R9,RAX
00009d9b(6): JL 0x0000a245
00009da1(10): MOV R10,0x7fffffffffffffff
00009dab(3): MOV RAX,R10
00009dae(2): CQO
00009db0(3): IDIV RSI
00009db3(3): CMP RBP,RAX
00009db6(6): JG 0x0000a252
00009dbc(4): IMUL RBP,RSI
00009dc0(3): CMP R9,RBP
00009dc3(6): JG 0x0000a245
00009dc9(3): CMP RAX,RBP
00009dcc(6): JL 0x0000a252
00009dd2(4): IMUL RBP,RSI
00009dd6(2): XOR EAX,EAX
00009dd8(3): OR R12D,EAX
00009ddb(5): NOP dword ptr [RAX + RAX*0x1]
00009de0(3): MOVSXD RAX,EDI
00009de3(3): ADD RCX,RAX
00009de6(3): MOV EAX,R12D
00009de9(3): OR EAX,0x2
00009dec(3): MOV qword ptr [RBX],RCX
00009def(3): CMP byte ptr [RCX],0x0
00009df2(4): CMOVNZ R12D,EAX
00009df6(5): JMP 0x00009c56
00009e00(10): MOV RAX,-0x4000000000000000
00009e0a(3): CMP RBP,RAX
00009e0d(6): JL 0x0000a140
00009e13(10): MOV RAX,0x3fffffffffffffff
00009e1d(3): CMP RBP,RAX
00009e20(6): JG 0x0000a200
00009e26(3): ADD RBP,RBP
00009e29(2): JMP 0x00009de0
00009e30(10): MOV RAX,-0x40000000000000
00009e3a(3): CMP RBP,RAX
00009e3d(6): JL 0x0000a140
00009e43(10): MOV RAX,0x3fffffffffffff
00009e4d(3): CMP RBP,RAX
00009e50(6): JG 0x0000a200
00009e56(4): SHL RBP,0x9
00009e5a(2): JMP 0x00009de0
00009e60(3): MOVSXD RSI,EAX
00009e63(10): MOV RAX,-0x8000000000000000
00009e6d(6): MOV R8D,0x7
00009e73(2): CQO
00009e75(3): XOR R11D,R11D
00009e78(10): MOV R9,0x7fffffffffffffff
00009e82(3): IDIV RSI
00009e85(3): MOV R10,RAX
00009e88(2): JMP 0x00009eaf
00009e90(3): MOV RAX,R9
00009e93(2): CQO
00009e95(3): IDIV RSI
00009e98(3): CMP RAX,RBP
00009e9b(6): JL 0x0000a188
00009ea1(4): IMUL RBP,RSI
00009ea5(4): SUB R8D,0x1
00009ea9(6): JZ 0x00009fd0
00009eaf(3): CMP R10,RBP
00009eb2(2): JLE 0x00009e90
00009eb4(6): MOV R11D,0x1
00009eba(10): MOV RBP,-0x8000000000000000
00009ec4(2): JMP 0x00009ea5
00009ed0(3): MOVSXD RSI,EAX
00009ed3(10): MOV RAX,-0x8000000000000000
00009edd(6): MOV R8D,0x8
00009ee3(2): CQO
00009ee5(3): XOR R11D,R11D
00009ee8(10): MOV R9,0x7fffffffffffffff
00009ef2(3): IDIV RSI
00009ef5(3): MOV R10,RAX
00009ef8(2): JMP 0x00009f1f
00009f00(3): MOV RAX,R9
00009f03(2): CQO
00009f05(3): IDIV RSI
00009f08(3): CMP RAX,RBP
00009f0b(6): JL 0x0000a158
00009f11(4): IMUL RBP,RSI
00009f15(4): SUB R8D,0x1
00009f19(6): JZ 0x00009fd0
00009f1f(3): CMP R10,RBP
00009f22(2): JLE 0x00009f00
00009f24(6): MOV R11D,0x1
00009f2a(10): MOV RBP,-0x8000000000000000
00009f34(2): JMP 0x00009f15
00009f40(10): MOV R8,-0x8000000000000000
00009f4a(3): MOVSXD RSI,EAX
00009f4d(3): MOV RAX,R8
00009f50(2): CQO
00009f52(3): IDIV RSI
00009f55(3): CMP RBP,RAX
00009f58(6): JL 0x0000a140
00009f5e(4): SUB R8,0x1
00009f62(3): MOV RAX,R8
00009f65(2): CQO
00009f67(3): IDIV RSI
00009f6a(3): CMP RBP,RAX
00009f6d(6): JG 0x0000a200
00009f73(4): IMUL RBP,RSI
00009f77(5): JMP 0x00009de0
00009f80(3): MOVSXD RSI,EAX
00009f83(10): MOV RAX,-0x8000000000000000
00009f8d(6): MOV R8D,0x3
00009f93(2): CQO
00009f95(3): XOR R11D,R11D
00009f98(10): MOV R9,0x7fffffffffffffff
00009fa2(3): IDIV RSI
00009fa5(3): MOV R10,RAX
00009fa8(3): CMP R10,RBP
00009fab(6): JG 0x0000a1a0
00009fb1(3): MOV RAX,R9
00009fb4(2): CQO
00009fb6(3): IDIV RSI
00009fb9(3): CMP RAX,RBP
00009fbc(6): JL 0x0000a230
00009fc2(4): IMUL RBP,RSI
00009fc6(4): SUB R8D,0x1
00009fca(2): JNZ 0x00009fa8
00009fcc(4): NOP dword ptr [RAX]
00009fd0(3): OR R12D,R11D
00009fd3(5): JMP 0x00009de0
00009fe0(3): MOVSXD RSI,EAX
00009fe3(10): MOV RAX,-0x8000000000000000
00009fed(6): MOV R8D,0x6
00009ff3(2): CQO
00009ff5(3): XOR R11D,R11D
00009ff8(10): MOV R9,0x7fffffffffffffff
0000a002(3): IDIV RSI
0000a005(3): MOV R10,RAX
0000a008(2): JMP 0x0000a02b
0000a010(3): MOV RAX,R9
0000a013(2): CQO
0000a015(3): IDIV RSI
0000a018(3): CMP RAX,RBP
0000a01b(6): JL 0x0000a1b8
0000a021(4): IMUL RBP,RSI
0000a025(4): SUB R8D,0x1
0000a029(2): JZ 0x00009fd0
0000a02b(3): CMP R10,RBP
0000a02e(2): JLE 0x0000a010
0000a030(6): MOV R11D,0x1
0000a036(10): MOV RBP,-0x8000000000000000
0000a040(2): JMP 0x0000a025
0000a048(3): MOVSXD RSI,EAX
0000a04b(10): MOV RAX,-0x8000000000000000
0000a055(6): MOV R8D,0x5
0000a05b(2): CQO
0000a05d(3): XOR R11D,R11D
0000a060(10): MOV R9,0x7fffffffffffffff
0000a06a(3): IDIV RSI
0000a06d(3): MOV R10,RAX
0000a070(2): JMP 0x0000a097
0000a078(3): MOV RAX,R9
0000a07b(2): CQO
0000a07d(3): IDIV RSI
0000a080(3): CMP RAX,RBP
0000a083(6): JL 0x0000a1d0
0000a089(4): IMUL RBP,RSI
0000a08d(4): SUB R8D,0x1
0000a091(6): JZ 0x00009fd0
0000a097(3): CMP R10,RBP
0000a09a(2): JLE 0x0000a078
0000a09c(6): MOV R11D,0x1
0000a0a2(10): MOV RBP,-0x8000000000000000
0000a0ac(2): JMP 0x0000a08d
0000a0b0(10): MOV RAX,-0x20000000000000
0000a0ba(3): CMP RBP,RAX
0000a0bd(6): JL 0x0000a140
0000a0c3(10): MOV RAX,0x1fffffffffffff
0000a0cd(3): CMP RBP,RAX
0000a0d0(6): JG 0x0000a200
0000a0d6(4): SHL RBP,0xa
0000a0da(5): JMP 0x00009de0
0000a0e0(3): MOVSXD RSI,EAX
0000a0e3(10): MOV RAX,-0x8000000000000000
0000a0ed(6): MOV R8D,0x4
0000a0f3(2): CQO
0000a0f5(3): XOR R11D,R11D
0000a0f8(10): MOV R9,0x7fffffffffffffff
0000a102(3): IDIV RSI
0000a105(3): MOV R10,RAX
0000a108(3): CMP R10,RBP
0000a10b(2): JG 0x0000a170
0000a10d(3): MOV RAX,R9
0000a110(2): CQO
0000a112(3): IDIV RSI
0000a115(3): CMP RAX,RBP
0000a118(6): JL 0x0000a1e8
0000a11e(4): IMUL RBP,RSI
0000a122(4): SUB R8D,0x1
0000a126(2): JNZ 0x0000a108
0000a128(5): JMP 0x00009fd0
0000a130(6): MOV R12D,0x4
0000a136(5): JMP 0x00009c59
0000a140(6): MOV R12D,0x1
0000a146(10): MOV RBP,-0x8000000000000000
0000a150(5): JMP 0x00009de0
0000a158(6): MOV R11D,0x1
0000a15e(10): MOV RBP,0x7fffffffffffffff
0000a168(5): JMP 0x00009f15
0000a170(6): MOV R11D,0x1
0000a176(10): MOV RBP,-0x8000000000000000
0000a180(2): JMP 0x0000a122
0000a188(6): MOV R11D,0x1
0000a18e(10): MOV RBP,0x7fffffffffffffff
0000a198(5): JMP 0x00009ea5
0000a1a0(6): MOV R11D,0x1
0000a1a6(10): MOV RBP,-0x8000000000000000
0000a1b0(5): JMP 0x00009fc6
0000a1b8(6): MOV R11D,0x1
0000a1be(10): MOV RBP,0x7fffffffffffffff
0000a1c8(5): JMP 0x0000a025
0000a1d0(6): MOV R11D,0x1
0000a1d6(10): MOV RBP,0x7fffffffffffffff
0000a1e0(5): JMP 0x0000a08d
0000a1e8(6): MOV R11D,0x1
0000a1ee(10): MOV RBP,0x7fffffffffffffff
0000a1f8(5): JMP 0x0000a122
0000a200(6): MOV R12D,0x1
0000a206(10): MOV RBP,0x7fffffffffffffff
0000a210(5): JMP 0x00009de0
0000a218(2): XOR EDI,EDI
0000a21a(4): CMP byte ptr [RCX + 0x2],0x42
0000a21e(5): MOV EAX,0x400
0000a223(4): SETZ DIL
0000a227(4): LEA EDI,[RDI + RDI*0x1 + 0x1]
0000a22b(5): JMP 0x00009d62
0000a230(6): MOV R11D,0x1
0000a236(10): MOV RBP,0x7fffffffffffffff
0000a240(5): JMP 0x00009fc6
0000a245(5): MOV EAX,0x1
0000a24a(3): MOV RBP,R8
0000a24d(5): JMP 0x00009dd8
0000a252(5): MOV EAX,0x1
0000a257(3): MOV RBP,R10
0000a25a(5): JMP 0x00009dd8
0000a25f(7): LEA RCX,[0x1c6c0]
0000a266(7): LEA RSI,[0x1c5a0]
0000a26d(7): LEA RDI,[0x1c5c0]
0000a274(5): MOV EDX,0x54
0000a279(5): CALL 0x00001e30
0000a27e(5): CALL 0x00001db0
0000a283(10): NOP word ptr CS:[RAX + RAX*0x1]
0000a28d(3): NOP dword ptr [RAX]
0000a290(2): PUSH R12
0000a292(1): PUSH RBP
0000a293(1): PUSH RBX
0000a294(3): MOV RBX,RDI
0000a297(5): CALL 0x00001ef0
0000a29c(2): TEST EAX,EAX
0000a29e(3): MOV RDI,RBX
0000a2a1(2): JS 0x0000a2f7
0000a2a3(5): CALL 0x00001f70
0000a2a8(2): TEST EAX,EAX
0000a2aa(2): JNZ 0x0000a2d8
0000a2ac(3): MOV RDI,RBX
0000a2af(5): CALL 0x0000a310
0000a2b4(2): TEST EAX,EAX
0000a2b6(2): JZ 0x0000a2f4
0000a2b8(5): CALL 0x00001c80
0000a2bd(3): MOV R12D,dword ptr [RAX]
0000a2c0(3): MOV RDI,RBX
0000a2c3(3): MOV RBP,RAX
0000a2c6(5): CALL 0x00001d50
0000a2cb(3): TEST R12D,R12D
0000a2ce(2): JNZ 0x0000a300
0000a2d0(1): POP RBX
0000a2d1(1): POP RBP
0000a2d2(2): POP R12
0000a2d4(1): RET
0000a2d8(3): MOV RDI,RBX
0000a2db(5): CALL 0x00001ef0
0000a2e0(2): XOR ESI,ESI
0000a2e2(5): MOV EDX,0x1
0000a2e7(2): MOV EDI,EAX
0000a2e9(5): CALL 0x00001e20
0000a2ee(4): CMP RAX,-0x1
0000a2f2(2): JNZ 0x0000a2ac
0000a2f4(3): MOV RDI,RBX
0000a2f7(1): POP RBX
0000a2f8(1): POP RBP
0000a2f9(2): POP R12
0000a2fb(5): JMP 0x00001d50
0000a300(4): MOV dword ptr [RBP],R12D
0000a304(5): MOV EAX,0xffffffff
0000a309(2): JMP 0x0000a2d0
0000a310(3): TEST RDI,RDI
0000a313(1): PUSH RBX
0000a314(3): MOV RBX,RDI
0000a317(2): JZ 0x0000a32a
0000a319(5): CALL 0x00001f70
0000a31e(2): TEST EAX,EAX
0000a320(2): JZ 0x0000a32a
0000a322(6): TEST dword ptr [RBX],0x100
0000a328(2): JNZ 0x0000a338
0000a32a(3): MOV RDI,RBX
0000a32d(1): POP RBX
0000a32e(5): JMP 0x00001f40
0000a338(3): MOV RDI,RBX
0000a33b(5): MOV EDX,0x1
0000a340(2): XOR ESI,ESI
0000a342(5): CALL 0x0000a350
0000a347(3): MOV RDI,RBX
0000a34a(1): POP RBX
0000a34b(5): JMP 0x00001f40
0000a350(4): MOV RAX,qword ptr [RDI + 0x8]
0000a354(4): CMP qword ptr [RDI + 0x10],RAX
0000a358(2): JZ 0x0000a360
0000a35a(5): JMP 0x00002020
0000a360(4): MOV RAX,qword ptr [RDI + 0x20]
0000a364(4): CMP qword ptr [RDI + 0x28],RAX
0000a368(2): JNZ 0x0000a35a
0000a36a(5): CMP qword ptr [RDI + 0x48],0x0
0000a36f(2): JNZ 0x0000a35a
0000a371(2): PUSH R12
0000a373(1): PUSH RBP
0000a374(3): MOV R12D,EDX
0000a377(1): PUSH RBX
0000a378(3): MOV RBP,RSI
0000a37b(3): MOV RBX,RDI
0000a37e(5): CALL 0x00001ef0
0000a383(3): MOV EDX,R12D
0000a386(3): MOV RSI,RBP
0000a389(2): MOV EDI,EAX
0000a38b(5): CALL 0x00001e20
0000a390(4): CMP RAX,-0x1
0000a394(2): JZ 0x0000a3a2
0000a396(3): AND dword ptr [RBX],0xffffffef
0000a399(7): MOV qword ptr [0x90 + RBX],RAX
0000a3a0(2): XOR EAX,EAX
0000a3a2(1): POP RBX
0000a3a3(1): POP RBP
0000a3a4(2): POP R12
0000a3a6(1): RET
0000a3b0(2): PUSH R13
0000a3b2(2): PUSH R12
0000a3b4(3): MOV R13,RSI
0000a3b7(1): PUSH RBP
0000a3b8(1): PUSH RBX
0000a3b9(3): MOV RBX,RDI
0000a3bc(3): MOV R12,RDX
0000a3bf(4): SUB RSP,0x18
0000a3c3(9): MOV RAX,qword ptr FS:[0x28]
0000a3cc(5): MOV qword ptr [RSP + 0x8],RAX
0000a3d1(2): XOR EAX,EAX
0000a3d3(5): LEA RAX,[RSP + 0x4]
0000a3d8(3): TEST RDI,RDI
0000a3db(4): CMOVZ RBX,RAX
0000a3df(3): MOV RDI,RBX
0000a3e2(5): CALL 0x00001dd0
0000a3e7(4): CMP RAX,-0x3
0000a3eb(3): MOV RBP,RAX
0000a3ee(2): JBE 0x0000a410
0000a3f0(3): TEST R12,R12
0000a3f3(2): JZ 0x0000a410
0000a3f5(2): XOR EDI,EDI
0000a3f7(5): CALL 0x00018720
0000a3fc(2): TEST AL,AL
0000a3fe(2): JNZ 0x0000a410
0000a400(5): MOVZX EAX,byte ptr [R13]
0000a405(5): MOV EBP,0x1
0000a40a(2): MOV dword ptr [RBX],EAX
0000a40c(4): NOP dword ptr [RAX]
0000a410(5): MOV RDX,qword ptr [RSP + 0x8]
0000a415(9): XOR RDX,qword ptr FS:[0x28]
0000a41e(3): MOV RAX,RBP
0000a421(2): JNZ 0x0000a42e
0000a423(4): ADD RSP,0x18
0000a427(1): POP RBX
0000a428(1): POP RBP
0000a429(2): POP R12
0000a42b(2): POP R13
0000a42d(1): RET
0000a42e(5): CALL 0x00001db0
0000a433(10): NOP word ptr CS:[RAX + RAX*0x1]
0000a43d(3): NOP dword ptr [RAX]
0000a440(4): MOV RAX,qword ptr [RSI + 0x48]
0000a444(4): CMP qword ptr [RSI + 0x68],RAX
0000a448(2): JLE 0x0000a4a0
0000a44a(4): MOV R8,qword ptr [RSI + 0x8]
0000a44e(7): CMP dword ptr [0x90 + RSI],0x1
0000a455(5): MOVZX ECX,byte ptr [R8 + RAX*0x1]
0000a45a(2): MOV byte ptr [RDI],CL
0000a45c(2): JLE 0x0000a473
0000a45e(4): CMP RAX,qword ptr [RSI + 0x30]
0000a462(2): JZ 0x0000a473
0000a464(4): MOV R9,qword ptr [RSI + 0x10]
0000a468(5): CMP dword ptr [R9 + RAX*0x4],-0x1
0000a46d(6): JZ 0x0000a4ef
0000a473(3): CMP CL,0x5c
0000a476(2): JZ 0x0000a4e0
0000a478(3): CMP CL,0x5b
0000a47b(2): JZ 0x0000a4b0
0000a47d(3): CMP CL,0x5d
0000a480(6): JZ 0x0000a520
0000a486(3): CMP CL,0x5e
0000a489(6): JZ 0x0000a510
0000a48f(3): CMP CL,0x2d
0000a492(2): JNZ 0x0000a4ef
0000a494(4): MOV byte ptr [RDI + 0x8],0x16
0000a498(5): MOV EAX,0x1
0000a49d(1): RET
0000a4a0(4): MOV byte ptr [RDI + 0x8],0x2
0000a4a4(2): XOR EAX,EAX
0000a4a6(1): RET
0000a4b0(4): LEA RCX,[RAX + 0x1]
0000a4b4(4): CMP RCX,qword ptr [RSI + 0x58]
0000a4b8(2): JGE 0x0000a500
0000a4ba(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
0000a4c0(2): CMP AL,0x3a
0000a4c2(2): MOV byte ptr [RDI],AL
0000a4c4(6): JZ 0x0000a560
0000a4ca(2): CMP AL,0x3d
0000a4cc(6): JZ 0x0000a550
0000a4d2(2): CMP AL,0x2e
0000a4d4(2): JNZ 0x0000a500
0000a4d6(4): MOV byte ptr [RDI + 0x8],0x1a
0000a4da(5): MOV EAX,0x2
0000a4df(1): RET
0000a4e0(3): AND EDX,0x1
0000a4e3(2): JZ 0x0000a4ef
0000a4e5(4): LEA RDX,[RAX + 0x1]
0000a4e9(4): CMP RDX,qword ptr [RSI + 0x58]
0000a4ed(2): JL 0x0000a530
0000a4ef(4): MOV byte ptr [RDI + 0x8],0x1
0000a4f3(5): MOV EAX,0x1
0000a4f8(1): RET
0000a500(4): MOV byte ptr [RDI + 0x8],0x1
0000a504(3): MOV byte ptr [RDI],0x5b
0000a507(5): MOV EAX,0x1
0000a50c(1): RET
0000a510(4): MOV byte ptr [RDI + 0x8],0x19
0000a514(5): MOV EAX,0x1
0000a519(1): RET
0000a520(4): MOV byte ptr [RDI + 0x8],0x15
0000a524(5): MOV EAX,0x1
0000a529(1): RET
0000a530(4): MOV qword ptr [RSI + 0x48],RDX
0000a534(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
0000a53a(4): MOV byte ptr [RDI + 0x8],0x1
0000a53e(2): MOV byte ptr [RDI],AL
0000a540(5): MOV EAX,0x1
0000a545(1): RET
0000a550(4): MOV byte ptr [RDI + 0x8],0x1c
0000a554(5): MOV EAX,0x2
0000a559(1): RET
0000a560(3): AND EDX,0x4
0000a563(2): JZ 0x0000a500
0000a565(4): MOV byte ptr [RDI + 0x8],0x1e
0000a569(5): MOV EAX,0x2
0000a56e(1): RET
0000a570(4): CMP byte ptr [RSI + 0x30],0x11
0000a574(2): JZ 0x0000a580
0000a576(2): XOR EAX,EAX
0000a578(1): RET
0000a580(4): CMP RDI,qword ptr [RSI + 0x28]
0000a584(2): JNZ 0x0000a576
0000a586(4): OR byte ptr [RSI + 0x32],0x8
0000a58a(2): XOR EAX,EAX
0000a58c(1): RET
0000a590(2): PUSH R15
0000a592(2): PUSH R14
0000a594(3): MOV R9,RDX
0000a597(2): PUSH R13
0000a599(2): PUSH R12
0000a59b(4): LEA RDX,[RCX + RCX*0x2]
0000a59f(1): PUSH RBP
0000a5a0(1): PUSH RBX
0000a5a1(3): MOV R15D,ESI
0000a5a4(4): SUB RSP,0x48
0000a5a8(7): MOV R14,qword ptr [0x98 + RDI]
0000a5af(4): MOV qword ptr [RSP],RDI
0000a5b3(4): MOV RAX,qword ptr [R14 + 0x30]
0000a5b7(4): LEA R12,[RAX + RDX*0x8]
0000a5bb(6): CMP qword ptr [R12 + 0x8],0x0
0000a5c1(6): JLE 0x0000a755
0000a5c7(4): LEA RAX,[R8 + R8*0x4]
0000a5cb(3): MOV R11,RCX
0000a5ce(3): MOV ECX,R9D
0000a5d1(3): MOV R10,R8
0000a5d4(2): XOR EBX,EBX
0000a5d6(4): MOV dword ptr [RSP + 0x20],ESI
0000a5da(4): SHL RAX,0x3
0000a5de(3): MOV R15,R9
0000a5e1(5): MOV qword ptr [RSP + 0x10],R11
0000a5e6(5): MOV qword ptr [RSP + 0x28],RAX
0000a5eb(5): MOV EAX,0x1
0000a5f0(3): SHL RAX,CL
0000a5f3(5): MOV qword ptr [RSP + 0x18],RAX
0000a5f8(2): NOT EAX
0000a5fa(5): MOV word ptr [RSP + 0x26],AX
0000a5ff(2): MOV EAX,ESI
0000a601(3): AND EAX,0x1
0000a604(4): MOV dword ptr [RSP + 0xc],EAX
0000a608(2): MOV EAX,ESI
0000a60a(3): AND EAX,0x2
0000a60d(4): MOV dword ptr [RSP + 0x8],EAX
0000a611(2): JMP 0x0000a635
0000a618(3): CMP DL,0x9
0000a61b(6): JZ 0x0000a770
0000a621(3): CMP DL,0x4
0000a624(2): JZ 0x0000a678
0000a626(4): ADD RBX,0x1
0000a62a(5): CMP qword ptr [R12 + 0x8],RBX
0000a62f(6): JLE 0x0000a750
0000a635(5): MOV RAX,qword ptr [R12 + 0x10]
0000a63a(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000a63e(3): MOV RAX,RBP
0000a641(4): SHL RAX,0x4
0000a645(3): ADD RAX,qword ptr [R14]
0000a648(4): MOVZX EDX,byte ptr [RAX + 0x8]
0000a64c(3): CMP DL,0x8
0000a64f(2): JNZ 0x0000a618
0000a651(4): MOV ECX,dword ptr [RSP + 0xc]
0000a655(2): TEST ECX,ECX
0000a657(2): JZ 0x0000a626
0000a659(3): CMP qword ptr [RAX],R15
0000a65c(2): JNZ 0x0000a626
0000a65e(4): ADD RSP,0x48
0000a662(5): MOV EAX,0xffffffff
0000a667(1): POP RBX
0000a668(1): POP RBP
0000a669(2): POP R12
0000a66b(2): POP R13
0000a66d(2): POP R14
0000a66f(2): POP R15
0000a671(1): RET
0000a678(4): CMP R10,-0x1
0000a67c(2): JZ 0x0000a626
0000a67e(4): MOV RAX,qword ptr [RSP]
0000a682(5): MOV R13,qword ptr [RSP + 0x28]
0000a687(3): MOV RDI,RBP
0000a68a(5): MOV qword ptr [RSP + 0x30],R12
0000a68f(5): MOV qword ptr [RSP + 0x38],RBX
0000a694(3): MOV R12,R10
0000a697(7): ADD R13,qword ptr [0xd8 + RAX]
0000a69e(5): LEA RAX,[RBP + RBP*0x2]
0000a6a3(3): MOV RBP,R14
0000a6a6(3): MOV R14,RDI
0000a6a9(4): SHL RAX,0x3
0000a6ad(3): MOV RBX,RAX
0000a6b0(4): CMP qword ptr [R13],R14
0000a6b4(2): JNZ 0x0000a720
0000a6b6(4): CMP R15,0x3f
0000a6ba(2): JG 0x0000a6c8
0000a6bc(5): MOVZX EAX,word ptr [R13 + 0x22]
0000a6c1(5): TEST qword ptr [RSP + 0x18],RAX
0000a6c6(2): JZ 0x0000a720
0000a6c8(4): MOV RAX,qword ptr [RBP + 0x28]
0000a6cc(5): MOV RAX,qword ptr [RAX + RBX*0x1 + 0x10]
0000a6d1(3): MOV RCX,qword ptr [RAX]
0000a6d4(5): CMP qword ptr [RSP + 0x10],RCX
0000a6d9(6): JZ 0x0000a7a0
0000a6df(4): MOV ESI,dword ptr [RSP + 0x20]
0000a6e3(4): MOV RDI,qword ptr [RSP]
0000a6e7(3): MOV R8,R12
0000a6ea(3): MOV RDX,R15
0000a6ed(5): CALL 0x0000a590
0000a6f2(3): CMP EAX,-0x1
0000a6f5(6): JZ 0x0000a65e
0000a6fb(2): TEST EAX,EAX
0000a6fd(2): JNZ 0x0000a707
0000a6ff(4): MOV ESI,dword ptr [RSP + 0x8]
0000a703(2): TEST ESI,ESI
0000a705(2): JNZ 0x0000a785
0000a707(4): CMP R15,0x3f
0000a70b(2): JG 0x0000a720
0000a70d(5): MOVZX EAX,word ptr [RSP + 0x26]
0000a712(5): AND word ptr [R13 + 0x22],AX
0000a717(9): NOP word ptr [RAX + RAX*0x1]
0000a720(4): ADD R13,0x28
0000a724(5): CMP byte ptr [R13 + -0x8],0x0
0000a729(2): JNZ 0x0000a6b0
0000a72b(5): MOV RBX,qword ptr [RSP + 0x38]
0000a730(3): MOV R10,R12
0000a733(5): MOV R12,qword ptr [RSP + 0x30]
0000a738(3): MOV R14,RBP
0000a73b(4): ADD RBX,0x1
0000a73f(5): CMP qword ptr [R12 + 0x8],RBX
0000a744(6): JG 0x0000a635
0000a74a(6): NOP word ptr [RAX + RAX*0x1]
0000a750(5): MOV R15D,dword ptr [RSP + 0x20]
0000a755(4): ADD RSP,0x48
0000a759(3): MOV EAX,R15D
0000a75c(1): POP RBX
0000a75d(2): SAR EAX,1
0000a75f(1): POP RBP
0000a760(2): POP R12
0000a762(2): POP R13
0000a764(2): POP R14
0000a766(2): POP R15
0000a768(1): RET
0000a770(4): MOV EDX,dword ptr [RSP + 0x8]
0000a774(2): TEST EDX,EDX
0000a776(6): JZ 0x0000a626
0000a77c(3): CMP qword ptr [RAX],R15
0000a77f(6): JNZ 0x0000a626
0000a785(4): ADD RSP,0x48
0000a789(2): XOR EAX,EAX
0000a78b(1): POP RBX
0000a78c(1): POP RBP
0000a78d(2): POP R12
0000a78f(2): POP R13
0000a791(2): POP R14
0000a793(2): POP R15
0000a795(1): RET
0000a7a0(5): MOV R15D,dword ptr [RSP + 0x20]
0000a7a5(4): ADD RSP,0x48
0000a7a9(1): POP RBX
0000a7aa(1): POP RBP
0000a7ab(3): MOV EAX,R15D
0000a7ae(3): AND EAX,0x1
0000a7b1(2): POP R12
0000a7b3(2): NEG EAX
0000a7b5(2): POP R13
0000a7b7(2): POP R14
0000a7b9(2): POP R15
0000a7bb(1): RET
0000a7c0(7): MOV RAX,qword ptr [0xd8 + RDI]
0000a7c7(4): LEA RSI,[RSI + RSI*0x4]
0000a7cb(4): LEA RAX,[RAX + RSI*0x8]
0000a7cf(4): MOV R10,qword ptr [RAX + 0x10]
0000a7d3(3): CMP R10,R8
0000a7d6(2): JG 0x0000a820
0000a7d8(4): MOV RAX,qword ptr [RAX + 0x18]
0000a7dc(3): CMP RAX,R8
0000a7df(2): JL 0x0000a800
0000a7e1(2): XOR ESI,ESI
0000a7e3(3): CMP R10,R8
0000a7e6(4): SETZ SIL
0000a7ea(3): OR ESI,0x2
0000a7ed(3): CMP RAX,R8
0000a7f0(2): JZ 0x0000a815
0000a7f2(2): XOR EAX,EAX
0000a7f4(3): CMP R10,R8
0000a7f7(2): JZ 0x0000a810
0000a7f9(2): RET
0000a800(5): MOV EAX,0x1
0000a805(1): RET
0000a810(5): MOV ESI,0x1
0000a815(3): MOV R8,R9
0000a818(5): JMP 0x0000a590
0000a820(5): MOV EAX,0xffffffff
0000a825(1): RET
0000a830(2): PUSH R12
0000a832(3): MOV R12,RSI
0000a835(1): PUSH RBP
0000a836(3): MOV RBP,RDX
0000a839(1): PUSH RBX
0000a83a(3): MOV RBX,RDI
0000a83d(2): JMP 0x0000a843
0000a840(3): MOV RBX,RAX
0000a843(4): MOV RAX,qword ptr [RBX + 0x8]
0000a847(3): TEST RAX,RAX
0000a84a(2): JNZ 0x0000a840
0000a84c(4): MOV RAX,qword ptr [RBX + 0x10]
0000a850(3): TEST RAX,RAX
0000a853(2): JNZ 0x0000a840
0000a855(3): MOV RSI,RBX
0000a858(3): MOV RDI,RBP
0000a85b(3): CALL R12
0000a85e(2): TEST EAX,EAX
0000a860(2): JNZ 0x0000a896
0000a862(6): NOP word ptr [RAX + RAX*0x1]
0000a868(3): MOV RDX,qword ptr [RBX]
0000a86b(3): TEST RDX,RDX
0000a86e(2): JZ 0x0000a896
0000a870(4): MOV RAX,qword ptr [RDX + 0x10]
0000a874(3): CMP RAX,RBX
0000a877(3): MOV RBX,RDX
0000a87a(4): SETZ SIL
0000a87e(3): TEST RAX,RAX
0000a881(3): SETZ CL
0000a884(3): OR SIL,CL
0000a887(2): JZ 0x0000a840
0000a889(3): MOV RSI,RBX
0000a88c(3): MOV RDI,RBP
0000a88f(3): CALL R12
0000a892(2): TEST EAX,EAX
0000a894(2): JZ 0x0000a868
0000a896(1): POP RBX
0000a897(1): POP RBP
0000a898(2): POP R12
0000a89a(1): RET
0000a8a0(2): PUSH R12
0000a8a2(3): MOV R12,RSI
0000a8a5(1): PUSH RBP
0000a8a6(3): MOV RBP,RDX
0000a8a9(1): PUSH RBX
0000a8aa(3): MOV RBX,RDI
0000a8ad(2): JMP 0x0000a8b3
0000a8b0(3): MOV RBX,RDX
0000a8b3(3): MOV RSI,RBX
0000a8b6(3): MOV RDI,RBP
0000a8b9(3): CALL R12
0000a8bc(2): TEST EAX,EAX
0000a8be(2): JNZ 0x0000a8ec
0000a8c0(4): MOV RDX,qword ptr [RBX + 0x8]
0000a8c4(2): XOR ECX,ECX
0000a8c6(3): TEST RDX,RDX
0000a8c9(2): JNZ 0x0000a8b0
0000a8cb(2): JMP 0x0000a8d3
0000a8d0(3): MOV RBX,RDX
0000a8d3(4): MOV RDX,qword ptr [RBX + 0x10]
0000a8d7(3): CMP RDX,RCX
0000a8da(2): JZ 0x0000a8e1
0000a8dc(3): TEST RDX,RDX
0000a8df(2): JNZ 0x0000a8b0
0000a8e1(3): MOV RDX,qword ptr [RBX]
0000a8e4(3): MOV RCX,RBX
0000a8e7(3): TEST RDX,RDX
0000a8ea(2): JNZ 0x0000a8d0
0000a8ec(1): POP RBX
0000a8ed(1): POP RBP
0000a8ee(2): POP R12
0000a8f0(1): RET
0000a900(1): PUSH RBP
0000a901(1): PUSH RBX
0000a902(3): MOV RBP,RSI
0000a905(3): MOV RBX,RDI
0000a908(4): SUB RSP,0x8
0000a90c(7): CMP dword ptr [0x90 + RDI],0x1
0000a913(2): JLE 0x0000a95d
0000a915(10): MOV RAX,0x1fffffffffffffff
0000a91f(3): CMP RSI,RAX
0000a922(2): JA 0x0000a990
0000a924(4): MOV RDI,qword ptr [RDI + 0x10]
0000a928(8): LEA RSI,[RSI*0x4]
0000a930(5): CALL 0x00001f90
0000a935(3): TEST RAX,RAX
0000a938(2): JZ 0x0000a990
0000a93a(4): MOV RDI,qword ptr [RBX + 0x18]
0000a93e(4): MOV qword ptr [RBX + 0x10],RAX
0000a942(3): TEST RDI,RDI
0000a945(2): JZ 0x0000a95d
0000a947(8): LEA RSI,[RBP*0x8]
0000a94f(5): CALL 0x00001f90
0000a954(3): TEST RAX,RAX
0000a957(2): JZ 0x0000a990
0000a959(4): MOV qword ptr [RBX + 0x18],RAX
0000a95d(7): CMP byte ptr [0x8b + RBX],0x0
0000a964(2): JNZ 0x0000a978
0000a966(4): MOV qword ptr [RBX + 0x40],RBP
0000a96a(4): ADD RSP,0x8
0000a96e(2): XOR EAX,EAX
0000a970(1): POP RBX
0000a971(1): POP RBP
0000a972(1): RET
0000a978(4): MOV RDI,qword ptr [RBX + 0x8]
0000a97c(3): MOV RSI,RBP
0000a97f(5): CALL 0x00001f90
0000a984(3): TEST RAX,RAX
0000a987(2): JZ 0x0000a990
0000a989(4): MOV qword ptr [RBX + 0x8],RAX
0000a98d(2): JMP 0x0000a966
0000a990(4): ADD RSP,0x8
0000a994(5): MOV EAX,0xc
0000a999(1): POP RBX
0000a99a(1): POP RBP
0000a99b(1): RET
0000a9a0(1): PUSH RBP
0000a9a1(1): PUSH RBX
0000a9a2(3): MOV RBP,RSI
0000a9a5(3): MOV RBX,RDI
0000a9a8(4): SUB RSP,0x8
0000a9ac(4): MOV RSI,qword ptr [RDI + 0x8]
0000a9b0(3): CMP qword ptr [RDI],RSI
0000a9b3(4): MOV RAX,qword ptr [RDI + 0x10]
0000a9b7(2): JZ 0x0000a9d8
0000a9b9(4): LEA RDX,[RSI + 0x1]
0000a9bd(4): MOV qword ptr [RBX + 0x8],RDX
0000a9c1(4): MOV qword ptr [RAX + RSI*0x8],RBP
0000a9c5(5): MOV EAX,0x1
0000a9ca(4): ADD RSP,0x8
0000a9ce(1): POP RBX
0000a9cf(1): POP RBP
0000a9d0(1): RET
0000a9d8(4): ADD RSI,0x1
0000a9dc(4): LEA RDX,[RSI + RSI*0x1]
0000a9e0(4): SHL RSI,0x4
0000a9e4(3): MOV qword ptr [RDI],RDX
0000a9e7(3): MOV RDI,RAX
0000a9ea(5): CALL 0x00001f90
0000a9ef(3): TEST RAX,RAX
0000a9f2(2): JZ 0x0000aa00
0000a9f4(4): MOV qword ptr [RBX + 0x10],RAX
0000a9f8(4): MOV RSI,qword ptr [RBX + 0x8]
0000a9fc(2): JMP 0x0000a9b9
0000aa00(2): XOR EAX,EAX
0000aa02(2): JMP 0x0000a9ca
0000aa10(1): PUSH RBP
0000aa11(1): PUSH RBX
0000aa12(3): MOV RBP,RSI
0000aa15(3): MOV RBX,RDI
0000aa18(4): SUB RSP,0x8
0000aa1c(3): MOV RDX,qword ptr [RDI]
0000aa1f(3): TEST RDX,RDX
0000aa22(2): JZ 0x0000aa48
0000aa24(4): MOV RSI,qword ptr [RDI + 0x8]
0000aa28(4): MOV RAX,qword ptr [RDI + 0x10]
0000aa2c(3): TEST RSI,RSI
0000aa2f(2): JNZ 0x0000aa80
0000aa31(3): MOV qword ptr [RAX],RBP
0000aa34(5): ADD qword ptr [RDI + 0x8],0x1
0000aa39(5): MOV EAX,0x1
0000aa3e(4): ADD RSP,0x8
0000aa42(1): POP RBX
0000aa43(1): POP RBP
0000aa44(1): RET
0000aa48(7): MOV qword ptr [RDI],0x1
0000aa4f(8): MOV qword ptr [RDI + 0x8],0x1
0000aa57(5): MOV EDI,0x8
0000aa5c(5): CALL 0x00001f20
0000aa61(3): TEST RAX,RAX
0000aa64(4): MOV qword ptr [RBX + 0x10],RAX
0000aa68(6): JZ 0x0000aaf8
0000aa6e(3): MOV qword ptr [RAX],RBP
0000aa71(4): ADD RSP,0x8
0000aa75(5): MOV EAX,0x1
0000aa7a(1): POP RBX
0000aa7b(1): POP RBP
0000aa7c(1): RET
0000aa80(3): CMP RDX,RSI
0000aa83(6): JZ 0x0000ab10
0000aa89(3): CMP qword ptr [RAX],RBP
0000aa8c(8): LEA RDX,[RSI*0x8]
0000aa94(2): JLE 0x0000aad0
0000aa96(3): TEST RSI,RSI
0000aa99(2): JLE 0x0000aab3
0000aa9b(3): ADD RDX,RAX
0000aa9e(2): NOP
0000aaa0(4): MOV RCX,qword ptr [RDX + -0x8]
0000aaa4(4): SUB RDX,0x8
0000aaa8(4): MOV qword ptr [RDX + 0x8],RCX
0000aaac(3): CMP RAX,RDX
0000aaaf(2): JNZ 0x0000aaa0
0000aab1(2): XOR EDX,EDX
0000aab3(4): MOV qword ptr [RAX + RDX*0x1],RBP
0000aab7(5): MOV EAX,0x1
0000aabc(5): ADD qword ptr [RBX + 0x8],0x1
0000aac1(5): JMP 0x0000aa3e
0000aad0(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
0000aad5(3): CMP RBP,RCX
0000aad8(2): JGE 0x0000aab3
0000aada(6): NOP word ptr [RAX + RAX*0x1]
0000aae0(4): MOV qword ptr [RAX + RDX*0x1],RCX
0000aae4(4): SUB RDX,0x8
0000aae8(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
0000aaed(3): CMP RCX,RBP
0000aaf0(2): JG 0x0000aae0
0000aaf2(2): JMP 0x0000aab3
0000aaf8(8): MOV qword ptr [RBX + 0x8],0x0
0000ab00(7): MOV qword ptr [RBX],0x0
0000ab07(5): JMP 0x0000aa3e
0000ab10(4): LEA RDX,[RSI + RSI*0x1]
0000ab14(4): SHL RSI,0x4
0000ab18(3): MOV qword ptr [RDI],RDX
0000ab1b(3): MOV RDI,RAX
0000ab1e(5): CALL 0x00001f90
0000ab23(3): TEST RAX,RAX
0000ab26(2): JZ 0x0000ab35
0000ab28(4): MOV qword ptr [RBX + 0x10],RAX
0000ab2c(4): MOV RSI,qword ptr [RBX + 0x8]
0000ab30(5): JMP 0x0000aa89
0000ab35(2): XOR EAX,EAX
0000ab37(5): JMP 0x0000aa3e
0000ab40(2): PUSH R14
0000ab42(2): PUSH R13
0000ab44(3): MOV R14,RDI
0000ab47(2): PUSH R12
0000ab49(1): PUSH RBP
0000ab4a(3): MOV R12,RDX
0000ab4d(1): PUSH RBX
0000ab4e(4): MOV RBX,qword ptr [RSI + 0x10]
0000ab52(3): MOV RBP,RSI
0000ab55(3): MOV qword ptr [RSI],RDX
0000ab58(8): MOV qword ptr [RSI + 0x28],0x0
0000ab60(4): LEA R13,[RSI + 0x20]
0000ab64(8): LEA RDI,[RBX*0x8]
0000ab6c(4): MOV qword ptr [RSI + 0x20],RBX
0000ab70(5): CALL 0x00001f20
0000ab75(3): TEST RAX,RAX
0000ab78(4): MOV qword ptr [RBP + 0x30],RAX
0000ab7c(2): JZ 0x0000abbe
0000ab7e(3): TEST RBX,RBX
0000ab81(2): JLE 0x0000abd0
0000ab83(2): XOR EBX,EBX
0000ab85(2): JMP 0x0000ab9a
0000ab90(4): ADD RBX,0x1
0000ab94(4): CMP qword ptr [RBP + 0x10],RBX
0000ab98(2): JLE 0x0000abd0
0000ab9a(4): MOV RAX,qword ptr [RBP + 0x18]
0000ab9e(4): MOV RSI,qword ptr [RAX + RBX*0x8]
0000aba2(3): MOV RAX,RSI
0000aba5(4): SHL RAX,0x4
0000aba9(3): ADD RAX,qword ptr [R14]
0000abac(4): TEST byte ptr [RAX + 0x8],0x8
0000abb0(2): JNZ 0x0000ab90
0000abb2(3): MOV RDI,R13
0000abb5(5): CALL 0x0000a9a0
0000abba(2): TEST AL,AL
0000abbc(2): JNZ 0x0000ab90
0000abbe(1): POP RBX
0000abbf(5): MOV EAX,0xc
0000abc4(1): POP RBP
0000abc5(2): POP R12
0000abc7(2): POP R13
0000abc9(2): POP R14
0000abcb(1): RET
0000abd0(7): AND R12,qword ptr [0x88 + R14]
0000abd7(4): MOV RAX,qword ptr [R14 + 0x40]
0000abdb(4): LEA RDX,[R12 + R12*0x2]
0000abdf(4): LEA RBX,[RAX + RDX*0x8]
0000abe3(3): MOV RDX,qword ptr [RBX]
0000abe6(4): CMP qword ptr [RBX + 0x8],RDX
0000abea(4): MOV RAX,qword ptr [RBX + 0x10]
0000abee(4): LEA RSI,[RDX + 0x1]
0000abf2(2): JLE 0x0000ac06
0000abf4(3): MOV qword ptr [RBX],RSI
0000abf7(4): MOV qword ptr [RAX + RDX*0x8],RBP
0000abfb(2): XOR EAX,EAX
0000abfd(1): POP RBX
0000abfe(1): POP RBP
0000abff(2): POP R12
0000ac01(2): POP R13
0000ac03(2): POP R14
0000ac05(1): RET
0000ac06(4): LEA R12,[RSI + RSI*0x1]
0000ac0a(3): MOV RDI,RAX
0000ac0d(4): SHL RSI,0x4
0000ac11(5): CALL 0x00001f90
0000ac16(3): TEST RAX,RAX
0000ac19(2): JZ 0x0000abbe
0000ac1b(3): MOV RDX,qword ptr [RBX]
0000ac1e(4): MOV qword ptr [RBX + 0x10],RAX
0000ac22(4): MOV qword ptr [RBX + 0x8],R12
0000ac26(4): LEA RSI,[RDX + 0x1]
0000ac2a(2): JMP 0x0000abf4
0000ac30(2): PUSH R12
0000ac32(4): MOV R12,qword ptr [RDI + 0x58]
0000ac36(4): CMP qword ptr [RDI + 0x40],R12
0000ac3a(1): PUSH RBP
0000ac3b(3): MOV RBP,RDI
0000ac3e(5): CMOVLE R12,qword ptr [RDI + 0x40]
0000ac43(1): PUSH RBX
0000ac44(4): MOV RBX,qword ptr [RDI + 0x30]
0000ac48(3): CMP R12,RBX
0000ac4b(2): JLE 0x0000ac85
0000ac4d(5): CALL 0x00001c50
0000ac52(6): NOP word ptr [RAX + RAX*0x1]
0000ac58(4): MOV RDX,qword ptr [RBP]
0000ac5c(4): MOV RCX,qword ptr [RBP + 0x78]
0000ac60(3): ADD RDX,RBX
0000ac63(4): ADD RDX,qword ptr [RBP + 0x28]
0000ac67(3): TEST RCX,RCX
0000ac6a(3): MOVZX EDX,byte ptr [RDX]
0000ac6d(2): JNZ 0x0000ac98
0000ac6f(3): MOV RSI,qword ptr [RAX]
0000ac72(4): MOV RCX,qword ptr [RBP + 0x8]
0000ac76(3): MOV EDX,dword ptr [RSI + RDX*0x4]
0000ac79(3): MOV byte ptr [RCX + RBX*0x1],DL
0000ac7c(4): ADD RBX,0x1
0000ac80(3): CMP R12,RBX
0000ac83(2): JNZ 0x0000ac58
0000ac85(4): MOV qword ptr [RBP + 0x30],RBX
0000ac89(4): MOV qword ptr [RBP + 0x38],RBX
0000ac8d(1): POP RBX
0000ac8e(1): POP RBP
0000ac8f(2): POP R12
0000ac91(1): RET
0000ac98(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
0000ac9c(2): JMP 0x0000ac6f
0000aca0(2): PUSH R15
0000aca2(2): PUSH R14
0000aca4(2): PUSH R13
0000aca6(2): PUSH R12
0000aca8(1): PUSH RBP
0000aca9(1): PUSH RBX
0000acaa(3): MOV RBX,RDI
0000acad(4): SUB RSP,0x68
0000acb1(4): MOV R12,qword ptr [RDI + 0x58]
0000acb5(4): MOV RBP,qword ptr [RDI + 0x30]
0000acb9(9): MOV RAX,qword ptr FS:[0x28]
0000acc2(5): MOV qword ptr [RSP + 0x58],RAX
0000acc7(2): XOR EAX,EAX
0000acc9(4): CMP qword ptr [RDI + 0x40],R12
0000accd(5): CMOVLE R12,qword ptr [RDI + 0x40]
0000acd2(3): CMP R12,RBP
0000acd5(6): JLE 0x0000ad64
0000acdb(4): LEA R14,[RDI + 0x20]
0000acdf(5): LEA R13,[RSP + 0xc]
0000ace4(4): NOP dword ptr [RAX]
0000ace8(4): MOV RDI,qword ptr [RBX + 0x78]
0000acec(3): MOV RDX,R12
0000acef(4): MOV R15,qword ptr [RBX + 0x20]
0000acf3(3): SUB RDX,RBP
0000acf6(3): TEST RDI,RDI
0000acf9(6): JNZ 0x0000ade0
0000acff(4): MOV RSI,qword ptr [RBX + 0x28]
0000ad03(3): ADD RSI,RBP
0000ad06(3): ADD RSI,qword ptr [RBX]
0000ad09(3): MOV RCX,R14
0000ad0c(3): MOV RDI,R13
0000ad0f(5): CALL 0x0000a3b0
0000ad14(4): LEA RDX,[RAX + -0x1]
0000ad18(4): CMP RDX,-0x3
0000ad1c(6): JA 0x0000adb0
0000ad22(4): CMP RAX,-0x2
0000ad26(4): MOV EDX,dword ptr [RSP + 0xc]
0000ad2a(2): JZ 0x0000ada0
0000ad2c(4): MOV RCX,qword ptr [RBX + 0x10]
0000ad30(4): LEA RSI,[RBP + 0x1]
0000ad34(8): LEA RDI,[RBP*0x4]
0000ad3c(3): MOV dword ptr [RCX + RBP*0x4],EDX
0000ad3f(3): ADD RBP,RAX
0000ad42(3): CMP RSI,RBP
0000ad45(2): JGE 0x0000ad90
0000ad47(5): LEA RDX,[RCX + RDI*0x1 + 0x4]
0000ad4c(4): LEA RAX,[RCX + RBP*0x4]
0000ad50(6): MOV dword ptr [RDX],0xffffffff
0000ad56(4): ADD RDX,0x4
0000ad5a(3): CMP RAX,RDX
0000ad5d(2): JNZ 0x0000ad50
0000ad5f(3): CMP RBP,R12
0000ad62(2): JL 0x0000ace8
0000ad64(5): MOV RAX,qword ptr [RSP + 0x58]
0000ad69(9): XOR RAX,qword ptr FS:[0x28]
0000ad72(4): MOV qword ptr [RBX + 0x30],RBP
0000ad76(4): MOV qword ptr [RBX + 0x38],RBP
0000ad7a(6): JNZ 0x0000ae5e
0000ad80(4): ADD RSP,0x68
0000ad84(1): POP RBX
0000ad85(1): POP RBP
0000ad86(2): POP R12
0000ad88(2): POP R13
0000ad8a(2): POP R14
0000ad8c(2): POP R15
0000ad8e(1): RET
0000ad90(3): MOV RBP,RSI
0000ad93(3): CMP RBP,R12
0000ad96(6): JL 0x0000ace8
0000ad9c(2): JMP 0x0000ad64
0000ada0(4): MOV RAX,qword ptr [RBX + 0x58]
0000ada4(4): CMP qword ptr [RBX + 0x40],RAX
0000ada8(6): JL 0x0000ae48
0000adae(2): NOP
0000adb0(3): MOV RAX,qword ptr [RBX]
0000adb3(4): MOV RCX,qword ptr [RBX + 0x78]
0000adb7(3): ADD RAX,RBP
0000adba(4): ADD RAX,qword ptr [RBX + 0x28]
0000adbe(3): TEST RCX,RCX
0000adc1(3): MOVZX EDX,byte ptr [RAX]
0000adc4(4): MOV dword ptr [RSP + 0xc],EDX
0000adc8(6): JNZ 0x0000ae51
0000adce(4): MOV qword ptr [RBX + 0x20],R15
0000add2(5): MOV EAX,0x1
0000add7(5): JMP 0x0000ad2c
0000ade0(6): MOV ECX,dword ptr [0x90 + RBX]
0000ade6(2): XOR EAX,EAX
0000ade8(5): LEA RSI,[RSP + 0x10]
0000aded(2): TEST ECX,ECX
0000adef(2): JG 0x0000ae11
0000adf1(5): JMP 0x0000ad09
0000ae00(4): ADD RAX,0x1
0000ae04(3): CMP RDX,RAX
0000ae07(6): JZ 0x0000ad09
0000ae0d(4): MOV RDI,qword ptr [RBX + 0x78]
0000ae11(3): MOV RCX,qword ptr [RBX]
0000ae14(3): ADD RCX,RBP
0000ae17(3): ADD RCX,RAX
0000ae1a(4): ADD RCX,qword ptr [RBX + 0x28]
0000ae1e(3): MOVZX ECX,byte ptr [RCX]
0000ae21(4): MOVZX ECX,byte ptr [RDI + RCX*0x1]
0000ae25(4): MOV RDI,qword ptr [RBX + 0x8]
0000ae29(3): ADD RDI,RBP
0000ae2c(3): MOV byte ptr [RDI + RAX*0x1],CL
0000ae2f(3): MOV byte ptr [RSI + RAX*0x1],CL
0000ae32(3): LEA ECX,[RAX + 0x1]
0000ae35(6): CMP ECX,dword ptr [0x90 + RBX]
0000ae3b(2): JL 0x0000ae00
0000ae3d(5): JMP 0x0000ad09
0000ae48(4): MOV qword ptr [RBX + 0x20],R15
0000ae4c(5): JMP 0x0000ad64
0000ae51(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
0000ae55(4): MOV dword ptr [RSP + 0xc],EDX
0000ae59(5): JMP 0x0000adce
0000ae5e(5): CALL 0x00001db0
0000ae63(3): NOP dword ptr [RAX]
0000ae66(10): NOP word ptr CS:[RAX + RAX*0x1]
0000ae70(2): PUSH R15
0000ae72(2): PUSH R14
0000ae74(3): MOV R14,RDI
0000ae77(2): PUSH R13
0000ae79(2): PUSH R12
0000ae7b(1): PUSH RBP
0000ae7c(1): PUSH RBX
0000ae7d(7): SUB RSP,0xa8
0000ae84(4): MOV RBX,qword ptr [RDI + 0x58]
0000ae88(4): MOV R15,qword ptr [RDI + 0x30]
0000ae8c(9): MOV RAX,qword ptr FS:[0x28]
0000ae95(8): MOV qword ptr [0x98 + RSP],RAX
0000ae9d(2): XOR EAX,EAX
0000ae9f(4): CMP qword ptr [RDI + 0x40],RBX
0000aea3(5): CMOVLE RBX,qword ptr [RDI + 0x40]
0000aea8(7): CMP byte ptr [0x8a + RDI],0x0
0000aeaf(2): JNZ 0x0000aebc
0000aeb1(5): CMP qword ptr [RDI + 0x78],0x0
0000aeb6(6): JZ 0x0000b040
0000aebc(4): MOV R13,qword ptr [R14 + 0x38]
0000aec0(3): CMP R15,RBX
0000aec3(2): JL 0x0000af00
0000aec5(4): MOV qword ptr [R14 + 0x30],R15
0000aec9(4): MOV qword ptr [R14 + 0x38],R13
0000aecd(2): XOR EAX,EAX
0000aecf(8): MOV RCX,qword ptr [0x98 + RSP]
0000aed7(9): XOR RCX,qword ptr FS:[0x28]
0000aee0(6): JNZ 0x0000b46a
0000aee6(7): ADD RSP,0xa8
0000aeed(1): POP RBX
0000aeee(1): POP RBP
0000aeef(2): POP R12
0000aef1(2): POP R13
0000aef3(2): POP R14
0000aef5(2): POP R15
0000aef7(1): RET
0000af00(4): LEA RAX,[R14 + 0x20]
0000af04(5): MOV qword ptr [RSP + 0x8],RAX
0000af09(3): MOV RAX,RBX
0000af0c(3): SUB RAX,R15
0000af0f(5): MOV qword ptr [RSP + 0x10],RAX
0000af14(5): LEA RAX,[RSP + 0x44]
0000af19(5): MOV qword ptr [RSP + 0x20],RAX
0000af1e(4): MOV RDX,qword ptr [R14 + 0x78]
0000af22(4): MOV RAX,qword ptr [R14 + 0x20]
0000af26(3): TEST RDX,RDX
0000af29(5): MOV qword ptr [RSP + 0x48],RAX
0000af2e(6): JNZ 0x0000b239
0000af34(4): MOV RBP,qword ptr [R14 + 0x28]
0000af38(3): ADD RBP,R13
0000af3b(3): ADD RBP,qword ptr [R14]
0000af3e(5): MOV qword ptr [RSP + 0x18],RBP
0000af43(5): MOV RCX,qword ptr [RSP + 0x8]
0000af48(5): MOV RDX,qword ptr [RSP + 0x10]
0000af4d(5): MOV RSI,qword ptr [RSP + 0x18]
0000af52(5): MOV RDI,qword ptr [RSP + 0x20]
0000af57(5): CALL 0x0000a3b0
0000af5c(3): MOV RBP,RAX
0000af5f(4): LEA RAX,[RAX + -0x1]
0000af63(4): CMP RAX,-0x4
0000af67(5): MOV qword ptr [RSP + 0x20],RAX
0000af6c(6): JA 0x0000b2a9
0000af72(4): MOV EDX,dword ptr [RSP + 0x44]
0000af76(2): MOV EDI,EDX
0000af78(4): MOV dword ptr [RSP + 0x10],EDX
0000af7c(5): CALL 0x00002050
0000af81(4): MOV EDX,dword ptr [RSP + 0x10]
0000af85(3): MOV R12D,EAX
0000af88(5): MOV qword ptr [RSP + 0x8],R15
0000af8d(2): CMP EDX,EAX
0000af8f(6): JZ 0x0000b290
0000af95(5): LEA RCX,[RSP + 0x50]
0000af9a(5): LEA RDX,[RSP + 0x48]
0000af9f(2): MOV ESI,EAX
0000afa1(3): MOV RDI,RCX
0000afa4(5): MOV qword ptr [RSP + 0x10],RCX
0000afa9(5): CALL 0x00001f30
0000afae(3): CMP RBP,RAX
0000afb1(3): MOV R11,RAX
0000afb4(5): MOV RCX,qword ptr [RSP + 0x10]
0000afb9(6): JNZ 0x0000b346
0000afbf(4): MOV RDI,qword ptr [R14 + 0x8]
0000afc3(3): MOV RDX,RBP
0000afc6(3): MOV RSI,RCX
0000afc9(3): ADD RDI,R15
0000afcc(5): CALL 0x00001ee0
0000afd1(8): CMP byte ptr [0x8c + R14],0x0
0000afd9(5): LEA RAX,[RBP + R13*0x1]
0000afde(6): JNZ 0x0000b315
0000afe4(4): ADD R15,0x1
0000afe8(5): MOV RSI,qword ptr [RSP + 0x8]
0000afed(4): MOV RDX,qword ptr [R14 + 0x10]
0000aff1(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
0000aff6(3): MOV R13,RAX
0000aff9(3): CMP R15,RCX
0000affc(8): LEA RAX,[RSI*0x4]
0000b004(4): MOV dword ptr [RDX + RSI*0x4],R12D
0000b008(6): JGE 0x0000aec0
0000b00e(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
0000b013(4): LEA RDX,[RDX + RCX*0x4]
0000b017(9): NOP word ptr [RAX + RAX*0x1]
0000b020(6): MOV dword ptr [RAX],0xffffffff
0000b026(4): ADD RAX,0x4
0000b02a(3): CMP RDX,RAX
0000b02d(2): JNZ 0x0000b020
0000b02f(3): MOV R15,RCX
0000b032(5): JMP 0x0000aec0
0000b040(7): CMP byte ptr [0x8c + RDI],0x0
0000b047(6): JNZ 0x0000aebc
0000b04d(3): CMP R15,RBX
0000b050(6): JGE 0x0000b1e8
0000b056(4): LEA RAX,[RDI + 0x20]
0000b05a(5): MOV qword ptr [RSP + 0x8],RAX
0000b05f(5): LEA RAX,[RSP + 0x44]
0000b064(5): MOV qword ptr [RSP + 0x30],RAX
0000b069(5): LEA RAX,[RSP + 0x48]
0000b06e(5): MOV qword ptr [RSP + 0x38],RAX
0000b073(5): LEA RAX,[RSP + 0x50]
0000b078(5): MOV qword ptr [RSP + 0x28],RAX
0000b07d(3): NOP dword ptr [RAX]
0000b080(4): MOV RBP,qword ptr [R14 + 0x28]
0000b084(3): MOV R13,R15
0000b087(3): ADD RBP,R15
0000b08a(3): ADD RBP,qword ptr [R14]
0000b08d(5): MOVZX R12D,byte ptr [RBP]
0000b092(4): TEST R12B,0x80
0000b096(2): JNZ 0x0000b0aa
0000b098(5): MOV RDI,qword ptr [RSP + 0x8]
0000b09d(5): CALL 0x000020b0
0000b0a2(2): TEST EAX,EAX
0000b0a4(6): JNZ 0x0000b198
0000b0aa(4): MOV RAX,qword ptr [R14 + 0x20]
0000b0ae(5): MOV RDI,qword ptr [RSP + 0x30]
0000b0b3(3): MOV RDX,RBX
0000b0b6(5): MOV RCX,qword ptr [RSP + 0x8]
0000b0bb(3): SUB RDX,R15
0000b0be(3): MOV RSI,RBP
0000b0c1(5): MOV qword ptr [RSP + 0x10],RDX
0000b0c6(5): MOV qword ptr [RSP + 0x48],RAX
0000b0cb(5): MOV qword ptr [RSP + 0x20],RDI
0000b0d0(5): CALL 0x0000a3b0
0000b0d5(3): MOV RBP,RAX
0000b0d8(4): LEA RAX,[RAX + -0x1]
0000b0dc(4): CMP RAX,-0x4
0000b0e0(6): JA 0x0000b1c8
0000b0e6(4): MOV EDX,dword ptr [RSP + 0x44]
0000b0ea(2): MOV EDI,EDX
0000b0ec(4): MOV dword ptr [RSP + 0x18],EDX
0000b0f0(5): CALL 0x00002050
0000b0f5(4): MOV EDX,dword ptr [RSP + 0x18]
0000b0f9(3): MOV R12D,EAX
0000b0fc(2): CMP EDX,EAX
0000b0fe(2): JZ 0x0000b178
0000b100(5): MOV RDX,qword ptr [RSP + 0x38]
0000b105(5): MOV RDI,qword ptr [RSP + 0x28]
0000b10a(2): MOV ESI,EAX
0000b10c(5): CALL 0x00001f30
0000b111(3): CMP RBP,RAX
0000b114(6): JNZ 0x0000b288
0000b11a(4): MOV RDI,qword ptr [R14 + 0x8]
0000b11e(5): MOV RSI,qword ptr [RSP + 0x28]
0000b123(3): MOV RDX,RBP
0000b126(3): ADD RDI,R15
0000b129(5): CALL 0x00001ee0
0000b12e(4): ADD R15,0x1
0000b132(4): MOV RDX,qword ptr [R14 + 0x10]
0000b136(8): LEA RAX,[R13*0x4]
0000b13e(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
0000b143(3): CMP R15,RCX
0000b146(4): MOV dword ptr [RDX + R13*0x4],R12D
0000b14a(2): JGE 0x0000b16a
0000b14c(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
0000b151(4): LEA RDX,[RDX + RCX*0x4]
0000b155(3): NOP dword ptr [RAX]
0000b158(6): MOV dword ptr [RAX],0xffffffff
0000b15e(4): ADD RAX,0x4
0000b162(3): CMP RDX,RAX
0000b165(2): JNZ 0x0000b158
0000b167(3): MOV R15,RCX
0000b16a(3): CMP RBX,R15
0000b16d(6): JG 0x0000b080
0000b173(2): JMP 0x0000b1e8
0000b178(4): MOV RSI,qword ptr [R14 + 0x28]
0000b17c(4): MOV RDI,qword ptr [R14 + 0x8]
0000b180(3): MOV RDX,RBP
0000b183(3): ADD RSI,R15
0000b186(3): ADD RSI,qword ptr [R14]
0000b189(3): ADD RDI,R15
0000b18c(5): CALL 0x00001ee0
0000b191(2): JMP 0x0000b12e
0000b198(5): CALL 0x00001c50
0000b19d(3): MOV RAX,qword ptr [RAX]
0000b1a0(4): MOV RDX,qword ptr [R14 + 0x8]
0000b1a4(4): MOV EAX,dword ptr [RAX + R12*0x4]
0000b1a8(4): MOV byte ptr [RDX + R15*0x1],AL
0000b1ac(4): MOV RDX,qword ptr [R14 + 0x8]
0000b1b0(4): MOV RAX,qword ptr [R14 + 0x10]
0000b1b4(5): MOVZX EDX,byte ptr [RDX + R15*0x1]
0000b1b9(4): MOV dword ptr [RAX + R15*0x4],EDX
0000b1bd(4): ADD R15,0x1
0000b1c1(2): JMP 0x0000b16a
0000b1c8(4): CMP RAX,-0x3
0000b1cc(2): JNZ 0x0000b200
0000b1ce(4): MOV RAX,qword ptr [R14 + 0x58]
0000b1d2(4): CMP qword ptr [R14 + 0x40],RAX
0000b1d6(2): JGE 0x0000b200
0000b1d8(5): MOV RAX,qword ptr [RSP + 0x48]
0000b1dd(4): MOV qword ptr [R14 + 0x20],RAX
0000b1e1(7): NOP dword ptr [RAX]
0000b1e8(4): MOV qword ptr [R14 + 0x30],R15
0000b1ec(4): MOV qword ptr [R14 + 0x38],R15
0000b1f0(2): XOR EAX,EAX
0000b1f2(5): JMP 0x0000aecf
0000b200(3): MOV RAX,qword ptr [R14]
0000b203(4): MOV RDX,qword ptr [R14 + 0x8]
0000b207(3): ADD RAX,R15
0000b20a(4): ADD RAX,qword ptr [R14 + 0x28]
0000b20e(3): MOVZX EAX,byte ptr [RAX]
0000b211(4): MOV byte ptr [RDX + R15*0x1],AL
0000b215(4): MOV RDX,qword ptr [R14 + 0x10]
0000b219(4): ADD R15,0x1
0000b21d(4): CMP RBP,-0x1
0000b221(4): MOV dword ptr [RDX + R13*0x4],EAX
0000b225(6): JNZ 0x0000b16a
0000b22b(5): MOV RAX,qword ptr [RSP + 0x48]
0000b230(4): MOV qword ptr [R14 + 0x20],RAX
0000b234(5): JMP 0x0000b16a
0000b239(7): MOV EAX,dword ptr [0x90 + R14]
0000b240(2): TEST EAX,EAX
0000b242(6): JLE 0x0000b460
0000b248(4): MOV RDI,qword ptr [R14 + 0x28]
0000b24c(4): LEA R11D,[RAX + -0x1]
0000b250(5): LEA RCX,[RSP + 0x50]
0000b255(2): XOR EAX,EAX
0000b257(3): ADD RDI,R13
0000b25a(3): ADD RDI,qword ptr [R14]
0000b25d(2): JMP 0x0000b26a
0000b25f(4): ADD RAX,0x1
0000b263(5): CMP qword ptr [RSP + 0x10],RAX
0000b268(2): JZ 0x0000b27b
0000b26a(4): MOVZX ESI,byte ptr [RDI + RAX*0x1]
0000b26e(3): CMP R11,RAX
0000b271(4): MOVZX ESI,byte ptr [RDX + RSI*0x1]
0000b275(4): MOV byte ptr [RCX + RAX*0x1],SIL
0000b279(2): JNZ 0x0000b25f
0000b27b(5): MOV qword ptr [RSP + 0x18],RCX
0000b280(5): JMP 0x0000af43
0000b288(3): MOV R13,R15
0000b28b(5): JMP 0x0000af1e
0000b290(4): MOV RDI,qword ptr [R14 + 0x8]
0000b294(5): MOV RSI,qword ptr [RSP + 0x18]
0000b299(3): MOV RDX,RBP
0000b29c(3): ADD RDI,R15
0000b29f(5): CALL 0x00001ee0
0000b2a4(5): JMP 0x0000afd1
0000b2a9(6): CMP qword ptr [RSP + 0x20],-0x3
0000b2af(2): JNZ 0x0000b2bb
0000b2b1(4): MOV RAX,qword ptr [R14 + 0x58]
0000b2b5(4): CMP qword ptr [R14 + 0x40],RAX
0000b2b9(2): JL 0x0000b338
0000b2bb(3): MOV RAX,qword ptr [R14]
0000b2be(4): MOV RDX,qword ptr [R14 + 0x78]
0000b2c2(3): ADD RAX,R13
0000b2c5(4): ADD RAX,qword ptr [R14 + 0x28]
0000b2c9(3): TEST RDX,RDX
0000b2cc(3): MOVZX EAX,byte ptr [RAX]
0000b2cf(6): JNZ 0x0000b47c
0000b2d5(4): MOV RDX,qword ptr [R14 + 0x8]
0000b2d9(3): MOV RCX,R15
0000b2dc(4): MOV byte ptr [RDX + R15*0x1],AL
0000b2e0(8): CMP byte ptr [0x8c + R14],0x0
0000b2e8(6): JNZ 0x0000b46f
0000b2ee(4): MOV RDX,qword ptr [R14 + 0x10]
0000b2f2(4): ADD R13,0x1
0000b2f6(4): ADD R15,0x1
0000b2fa(4): CMP RBP,-0x1
0000b2fe(3): MOV dword ptr [RDX + RCX*0x4],EAX
0000b301(6): JNZ 0x0000aec0
0000b307(5): MOV RAX,qword ptr [RSP + 0x48]
0000b30c(4): MOV qword ptr [R14 + 0x20],RAX
0000b310(5): JMP 0x0000aec0
0000b315(4): MOV RDX,qword ptr [R14 + 0x18]
0000b319(3): MOV RCX,R15
0000b31c(3): MOV R10,R13
0000b31f(3): SUB RCX,R13
0000b322(4): LEA RDX,[RDX + RCX*0x8]
0000b326(4): MOV qword ptr [RDX + R10*0x8],R10
0000b32a(4): ADD R10,0x1
0000b32e(3): CMP RAX,R10
0000b331(2): JNZ 0x0000b326
0000b333(5): JMP 0x0000afe4
0000b338(5): MOV RAX,qword ptr [RSP + 0x48]
0000b33d(4): MOV qword ptr [R14 + 0x20],RAX
0000b341(5): JMP 0x0000aec5
0000b346(4): CMP RAX,-0x1
0000b34a(6): JZ 0x0000b290
0000b350(4): LEA RAX,[RAX + R15*0x1]
0000b354(3): MOV RSI,RAX
0000b357(5): MOV qword ptr [RSP + 0x8],RAX
0000b35c(4): MOV RAX,qword ptr [R14 + 0x40]
0000b360(3): CMP RSI,RAX
0000b363(2): JA 0x0000b338
0000b365(5): CMP qword ptr [R14 + 0x18],0x0
0000b36a(6): JZ 0x0000b428
0000b370(8): CMP byte ptr [0x8c + R14],0x0
0000b378(2): JNZ 0x0000b39a
0000b37a(3): TEST R15,R15
0000b37d(2): JZ 0x0000b392
0000b37f(4): MOV RDX,qword ptr [R14 + 0x18]
0000b383(2): XOR EAX,EAX
0000b385(4): MOV qword ptr [RDX + RAX*0x8],RAX
0000b389(4): ADD RAX,0x1
0000b38d(3): CMP RAX,R15
0000b390(2): JNZ 0x0000b385
0000b392(8): MOV byte ptr [0x8c + R14],0x1
0000b39a(4): MOV RDI,qword ptr [R14 + 0x8]
0000b39e(3): MOV RSI,RCX
0000b3a1(3): MOV RDX,R11
0000b3a4(5): MOV qword ptr [RSP + 0x10],R11
0000b3a9(3): ADD RDI,R15
0000b3ac(5): CALL 0x00001ee0
0000b3b1(4): MOV RAX,qword ptr [R14 + 0x10]
0000b3b5(5): MOV R11,qword ptr [RSP + 0x10]
0000b3ba(4): LEA RCX,[RAX + R15*0x4]
0000b3be(4): MOV RAX,qword ptr [R14 + 0x18]
0000b3c2(4): CMP R11,0x1
0000b3c6(3): MOV dword ptr [RCX],R12D
0000b3c9(4): LEA RSI,[RAX + R15*0x8]
0000b3cd(3): MOV qword ptr [RSI],R13
0000b3d0(2): JBE 0x0000b3fa
0000b3d2(5): MOV EAX,0x1
0000b3d7(5): MOV RDX,qword ptr [RSP + 0x20]
0000b3dc(3): CMP RAX,RBP
0000b3df(4): CMOVC RDX,RAX
0000b3e3(3): ADD RDX,R13
0000b3e6(4): MOV qword ptr [RSI + RAX*0x8],RDX
0000b3ea(7): MOV dword ptr [RCX + RAX*0x4],0xffffffff
0000b3f1(4): ADD RAX,0x1
0000b3f5(3): CMP RAX,R11
0000b3f8(2): JNZ 0x0000b3d7
0000b3fa(4): MOV RBX,qword ptr [R14 + 0x58]
0000b3fe(3): SUB R11,RBP
0000b401(3): ADD RBX,R11
0000b404(4): CMP R13,qword ptr [R14 + 0x60]
0000b408(4): MOV qword ptr [R14 + 0x58],RBX
0000b40c(2): JGE 0x0000b412
0000b40e(4): ADD qword ptr [R14 + 0x68],R11
0000b412(4): CMP qword ptr [R14 + 0x40],RBX
0000b416(5): MOV R15,qword ptr [RSP + 0x8]
0000b41b(5): CMOVLE RBX,qword ptr [R14 + 0x40]
0000b420(3): ADD R13,RBP
0000b423(5): JMP 0x0000aec0
0000b428(8): LEA RDI,[RAX*0x8]
0000b430(5): MOV qword ptr [RSP + 0x18],RCX
0000b435(5): MOV qword ptr [RSP + 0x10],R11
0000b43a(5): CALL 0x00001f20
0000b43f(3): TEST RAX,RAX
0000b442(4): MOV qword ptr [R14 + 0x18],RAX
0000b446(5): MOV R11,qword ptr [RSP + 0x10]
0000b44b(5): MOV RCX,qword ptr [RSP + 0x18]
0000b450(6): JNZ 0x0000b370
0000b456(5): MOV EAX,0xc
0000b45b(5): JMP 0x0000aecf
0000b460(5): LEA RCX,[RSP + 0x50]
0000b465(5): JMP 0x0000b27b
0000b46a(5): CALL 0x00001db0
0000b46f(4): MOV RDX,qword ptr [R14 + 0x18]
0000b473(4): MOV qword ptr [RDX + R15*0x8],R13
0000b477(5): JMP 0x0000b2ee
0000b47c(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
0000b480(5): JMP 0x0000b2d5
0000b490(1): PUSH RBP
0000b491(1): PUSH RBX
0000b492(10): MOV RDX,0xffffffffffffffe
0000b49c(4): SUB RSP,0x8
0000b4a0(4): MOV RAX,qword ptr [RDI + 0x40]
0000b4a4(3): CMP RAX,RDX
0000b4a7(6): JA 0x0000b5b8
0000b4ad(4): MOV RDX,qword ptr [RDI + 0x58]
0000b4b1(3): ADD RAX,RAX
0000b4b4(3): MOVSXD RSI,ESI
0000b4b7(3): MOV RBX,RDI
0000b4ba(3): CMP RAX,RDX
0000b4bd(4): CMOVG RAX,RDX
0000b4c1(3): CMP RAX,RSI
0000b4c4(4): CMOVGE RSI,RAX
0000b4c8(5): CALL 0x0000a900
0000b4cd(2): TEST EAX,EAX
0000b4cf(2): MOV EBP,EAX
0000b4d1(6): JNZ 0x0000b58d
0000b4d7(7): MOV RDI,qword ptr [0xb8 + RBX]
0000b4de(3): TEST RDI,RDI
0000b4e1(2): JZ 0x0000b504
0000b4e3(4): MOV RAX,qword ptr [RBX + 0x40]
0000b4e7(8): LEA RSI,[0x8 + RAX*0x8]
0000b4ef(5): CALL 0x00001f90
0000b4f4(3): TEST RAX,RAX
0000b4f7(6): JZ 0x0000b5b8
0000b4fd(7): MOV qword ptr [0xb8 + RBX],RAX
0000b504(7): CMP byte ptr [0x88 + RBX],0x0
0000b50b(6): MOV EAX,dword ptr [0x90 + RBX]
0000b511(2): JZ 0x0000b530
0000b513(3): CMP EAX,0x1
0000b516(3): MOV RDI,RBX
0000b519(6): JLE 0x0000b5d0
0000b51f(4): ADD RSP,0x8
0000b523(1): POP RBX
0000b524(1): POP RBP
0000b525(5): JMP 0x0000ae70
0000b530(3): CMP EAX,0x1
0000b533(2): JG 0x0000b5a0
0000b535(4): MOV RCX,qword ptr [RBX + 0x78]
0000b539(3): TEST RCX,RCX
0000b53c(2): JZ 0x0000b58d
0000b53e(4): MOV RSI,qword ptr [RBX + 0x58]
0000b542(4): CMP qword ptr [RBX + 0x40],RSI
0000b546(5): CMOVLE RSI,qword ptr [RBX + 0x40]
0000b54b(4): MOV RAX,qword ptr [RBX + 0x30]
0000b54f(3): CMP RSI,RAX
0000b552(2): JG 0x0000b564
0000b554(2): JMP 0x0000b585
0000b560(4): MOV RCX,qword ptr [RBX + 0x78]
0000b564(3): MOV RDX,qword ptr [RBX]
0000b567(3): ADD RDX,RAX
0000b56a(4): ADD RDX,qword ptr [RBX + 0x28]
0000b56e(3): MOVZX EDX,byte ptr [RDX]
0000b571(4): MOVZX ECX,byte ptr [RCX + RDX*0x1]
0000b575(4): MOV RDX,qword ptr [RBX + 0x8]
0000b579(3): MOV byte ptr [RDX + RAX*0x1],CL
0000b57c(4): ADD RAX,0x1
0000b580(3): CMP RSI,RAX
0000b583(2): JNZ 0x0000b560
0000b585(4): MOV qword ptr [RBX + 0x30],RAX
0000b589(4): MOV qword ptr [RBX + 0x38],RAX
0000b58d(4): ADD RSP,0x8
0000b591(2): MOV EAX,EBP
0000b593(1): POP RBX
0000b594(1): POP RBP
0000b595(1): RET
0000b5a0(3): MOV RDI,RBX
0000b5a3(5): CALL 0x0000aca0
0000b5a8(4): ADD RSP,0x8
0000b5ac(2): MOV EAX,EBP
0000b5ae(1): POP RBX
0000b5af(1): POP RBP
0000b5b0(1): RET
0000b5b8(5): MOV EBP,0xc
0000b5bd(4): ADD RSP,0x8
0000b5c1(2): MOV EAX,EBP
0000b5c3(1): POP RBX
0000b5c4(1): POP RBP
0000b5c5(1): RET
0000b5d0(5): CALL 0x0000ac30
0000b5d5(4): ADD RSP,0x8
0000b5d9(2): MOV EAX,EBP
0000b5db(1): POP RBX
0000b5dc(1): POP RBP
0000b5dd(1): RET
0000b5e0(2): PUSH R12
0000b5e2(1): PUSH RBP
0000b5e3(3): MOV RBP,RSI
0000b5e6(1): PUSH RBX
0000b5e7(4): MOV RAX,qword ptr [RDI + 0x40]
0000b5eb(3): MOV RBX,RDI
0000b5ee(7): MOV R12,qword ptr [0xc0 + RDI]
0000b5f5(3): CMP RAX,RSI
0000b5f8(2): JG 0x0000b620
0000b5fa(4): CMP RAX,qword ptr [RDI + 0x58]
0000b5fe(2): JGE 0x0000b620
0000b600(3): LEA ESI,[RBP + 0x1]
0000b603(3): MOV RDI,RBX
0000b606(5): CALL 0x0000b490
0000b60b(2): TEST EAX,EAX
0000b60d(2): JNZ 0x0000b616
0000b60f(3): CMP R12,RBP
0000b612(2): JL 0x0000b640
0000b614(2): XOR EAX,EAX
0000b616(1): POP RBX
0000b617(1): POP RBP
0000b618(2): POP R12
0000b61a(1): RET
0000b620(4): MOV RAX,qword ptr [RBX + 0x30]
0000b624(3): CMP RAX,RBP
0000b627(2): JG 0x0000b60f
0000b629(4): CMP RAX,qword ptr [RBX + 0x58]
0000b62d(2): JGE 0x0000b60f
0000b62f(3): LEA ESI,[RBP + 0x1]
0000b632(3): MOV RDI,RBX
0000b635(5): CALL 0x0000b490
0000b63a(2): TEST EAX,EAX
0000b63c(2): JZ 0x0000b60f
0000b63e(2): JMP 0x0000b616
0000b640(7): MOV RAX,qword ptr [0xb8 + RBX]
0000b647(3): MOV RDX,RBP
0000b64a(2): XOR ESI,ESI
0000b64c(3): SUB RDX,R12
0000b64f(4): SHL RDX,0x3
0000b653(5): LEA RDI,[RAX + R12*0x8 + 0x8]
0000b658(5): CALL 0x00001e40
0000b65d(7): MOV qword ptr [0xc0 + RBX],RBP
0000b664(2): JMP 0x0000b614
0000b670(1): PUSH RBX
0000b671(3): MOV RBX,RDI
0000b674(3): MOV RDI,qword ptr [RDI]
0000b677(5): CALL 0x00001c60
0000b67c(4): MOV RDI,qword ptr [RBX + 0x8]
0000b680(5): CALL 0x00001c60
0000b685(4): MOV RDI,qword ptr [RBX + 0x10]
0000b689(5): CALL 0x00001c60
0000b68e(4): MOV RDI,qword ptr [RBX + 0x18]
0000b692(5): CALL 0x00001c60
0000b697(3): MOV RDI,RBX
0000b69a(1): POP RBX
0000b69b(5): JMP 0x00001c60
0000b6a0(3): MOV EAX,dword ptr [RDI + 0x8]
0000b6a3(5): AND EAX,0x400ff
0000b6a8(3): CMP EAX,0x6
0000b6ab(2): JZ 0x0000b6c0
0000b6ad(3): CMP EAX,0x3
0000b6b0(2): JZ 0x0000b6b8
0000b6b2(2): RET
0000b6b8(3): MOV RDI,qword ptr [RDI]
0000b6bb(5): JMP 0x00001c60
0000b6c0(3): MOV RDI,qword ptr [RDI]
0000b6c3(2): JMP 0x0000b670
0000b6d0(4): LEA RDI,[RSI + 0x28]
0000b6d4(4): SUB RSP,0x8
0000b6d8(5): CALL 0x0000b6a0
0000b6dd(2): XOR EAX,EAX
0000b6df(4): ADD RSP,0x8
0000b6e3(1): RET
0000b6f0(2): PUSH R15
0000b6f2(2): PUSH R14
0000b6f4(3): MOV R14,RSI
0000b6f7(2): PUSH R13
0000b6f9(2): PUSH R12
0000b6fb(1): PUSH RBP
0000b6fc(1): PUSH RBX
0000b6fd(3): MOV RBX,RDI
0000b700(4): SUB RSP,0x18
0000b704(4): MOV RSI,qword ptr [RDI + 0x10]
0000b708(4): MOV RBP,qword ptr [RDI + 0x8]
0000b70c(3): CMP RSI,RBP
0000b70f(6): JNC 0x0000b7c0
0000b715(4): MOV R12,qword ptr [RDI + 0x18]
0000b719(4): MOV RBP,qword ptr [RDI + 0x28]
0000b71d(3): MOV RAX,RSI
0000b720(2): MOV ECX,EDX
0000b722(4): SHL RAX,0x4
0000b726(3): ADD RAX,qword ptr [RBX]
0000b729(6): AND ECX,0xfffc00ff
0000b72f(4): MOV qword ptr [RAX + 0x8],RDX
0000b733(3): MOV dword ptr [RAX + 0x8],ECX
0000b736(2): XOR ECX,ECX
0000b738(3): CMP DL,0x6
0000b73b(3): MOV qword ptr [RAX],R14
0000b73e(3): SETZ CL
0000b741(3): CMP DL,0x5
0000b744(2): JNZ 0x0000b752
0000b746(2): XOR ECX,ECX
0000b748(7): CMP dword ptr [0xb4 + RBX],0x1
0000b74f(3): SETG CL
0000b752(4): MOVZX EDX,byte ptr [RAX + 0xa]
0000b756(3): SHL ECX,0x4
0000b759(4): PXOR XMM0,XMM0
0000b75d(3): AND EDX,0xffffffef
0000b760(2): OR EDX,ECX
0000b762(3): MOV byte ptr [RAX + 0xa],DL
0000b765(8): MOV qword ptr [R12 + RSI*0x8],-0x1
0000b76d(4): MOV RAX,qword ptr [RBX + 0x10]
0000b771(4): LEA RAX,[RAX + RAX*0x2]
0000b775(5): LEA RAX,[RBP + RAX*0x8]
0000b77a(3): MOVUPS xmmword ptr [RAX],XMM0
0000b77d(8): MOV qword ptr [RAX + 0x10],0x0
0000b785(4): MOV RAX,qword ptr [RBX + 0x10]
0000b789(4): LEA RDX,[RAX + RAX*0x2]
0000b78d(4): MOV RAX,qword ptr [RBX + 0x30]
0000b791(4): LEA RAX,[RAX + RDX*0x8]
0000b795(3): MOVUPS xmmword ptr [RAX],XMM0
0000b798(8): MOV qword ptr [RAX + 0x10],0x0
0000b7a0(4): MOV RAX,qword ptr [RBX + 0x10]
0000b7a4(4): LEA RDX,[RAX + 0x1]
0000b7a8(4): MOV qword ptr [RBX + 0x10],RDX
0000b7ac(4): ADD RSP,0x18
0000b7b0(1): POP RBX
0000b7b1(1): POP RBP
0000b7b2(2): POP R12
0000b7b4(2): POP R13
0000b7b6(2): POP R14
0000b7b8(2): POP R15
0000b7ba(1): RET
0000b7c0(5): LEA R13,[RBP + RBP*0x1]
0000b7c5(10): MOV RAX,0xaaaaaaaaaaaaaaa
0000b7cf(3): CMP R13,RAX
0000b7d2(6): JA 0x0000b8b2
0000b7d8(3): MOV RDI,qword ptr [RDI]
0000b7db(3): MOV RSI,RBP
0000b7de(5): MOV qword ptr [RSP + 0x8],RDX
0000b7e3(4): SHL RSI,0x5
0000b7e7(5): CALL 0x00001f90
0000b7ec(3): TEST RAX,RAX
0000b7ef(6): JZ 0x0000b8b2
0000b7f5(3): MOV R15,RBP
0000b7f8(4): MOV RDI,qword ptr [RBX + 0x18]
0000b7fc(3): MOV qword ptr [RBX],RAX
0000b7ff(4): SHL R15,0x4
0000b803(3): MOV RSI,R15
0000b806(5): CALL 0x00001f90
0000b80b(4): MOV RDI,qword ptr [RBX + 0x20]
0000b80f(3): MOV RSI,R15
0000b812(5): LEA R15,[R13 + RBP*0x4]
0000b817(3): MOV R12,RAX
0000b81a(4): SHL R15,0x3
0000b81e(5): CALL 0x00001f90
0000b823(4): MOV RDI,qword ptr [RBX + 0x28]
0000b827(3): MOV RSI,R15
0000b82a(4): MOV qword ptr [RSP],RAX
0000b82e(5): CALL 0x00001f90
0000b833(4): MOV RDI,qword ptr [RBX + 0x30]
0000b837(3): MOV RSI,R15
0000b83a(3): MOV RBP,RAX
0000b83d(5): CALL 0x00001f90
0000b842(3): TEST R12,R12
0000b845(4): MOV RCX,qword ptr [RSP]
0000b849(2): JZ 0x0000b880
0000b84b(3): TEST RCX,RCX
0000b84e(2): JZ 0x0000b880
0000b850(3): TEST RBP,RBP
0000b853(2): JZ 0x0000b880
0000b855(3): TEST RAX,RAX
0000b858(5): MOV RDX,qword ptr [RSP + 0x8]
0000b85d(2): JZ 0x0000b880
0000b85f(4): MOV qword ptr [RBX + 0x18],R12
0000b863(4): MOV qword ptr [RBX + 0x20],RCX
0000b867(4): MOV qword ptr [RBX + 0x28],RBP
0000b86b(4): MOV qword ptr [RBX + 0x30],RAX
0000b86f(4): MOV qword ptr [RBX + 0x8],R13
0000b873(4): MOV RSI,qword ptr [RBX + 0x10]
0000b877(5): JMP 0x0000b71d
0000b880(3): MOV RDI,R12
0000b883(5): MOV qword ptr [RSP + 0x8],RAX
0000b888(4): MOV qword ptr [RSP],RCX
0000b88c(5): CALL 0x00001c60
0000b891(4): MOV RCX,qword ptr [RSP]
0000b895(3): MOV RDI,RCX
0000b898(5): CALL 0x00001c60
0000b89d(3): MOV RDI,RBP
0000b8a0(5): CALL 0x00001c60
0000b8a5(5): MOV RAX,qword ptr [RSP + 0x8]
0000b8aa(3): MOV RDI,RAX
0000b8ad(5): CALL 0x00001c60
0000b8b2(7): MOV RAX,-0x1
0000b8b9(5): JMP 0x0000b7ac
0000b8c0(2): PUSH R13
0000b8c2(2): PUSH R12
0000b8c4(3): MOV R13,RSI
0000b8c7(1): PUSH RBP
0000b8c8(1): PUSH RBX
0000b8c9(4): SHL R13,0x4
0000b8cd(3): MOV RBP,RSI
0000b8d0(3): MOV R12D,EDX
0000b8d3(3): MOV RBX,RDI
0000b8d6(4): SUB RSP,0x8
0000b8da(3): MOV RAX,qword ptr [RDI]
0000b8dd(4): MOV RSI,qword ptr [RAX + R13*0x1]
0000b8e1(5): MOV RDX,qword ptr [RAX + R13*0x1 + 0x8]
0000b8e6(5): CALL 0x0000b6f0
0000b8eb(4): CMP RAX,-0x1
0000b8ef(2): JZ 0x0000b954
0000b8f1(3): MOV EDI,R12D
0000b8f4(3): MOV R8,qword ptr [RBX]
0000b8f7(3): MOV RSI,RAX
0000b8fa(5): AND DI,0x3ff
0000b8ff(4): SHL RSI,0x4
0000b903(2): MOV ECX,EDI
0000b905(6): AND ECX,0x3ff
0000b90b(3): ADD RSI,R8
0000b90e(3): SHL ECX,0x8
0000b911(2): MOV EDX,ECX
0000b913(3): MOV ECX,dword ptr [RSI + 0x8]
0000b916(6): AND ECX,0xfffc00ff
0000b91c(2): OR ECX,EDX
0000b91e(3): MOV dword ptr [RSI + 0x8],ECX
0000b921(5): MOV EDX,dword ptr [R8 + R13*0x1 + 0x8]
0000b926(6): AND ECX,0xfffc00ff
0000b92c(3): SHR EDX,0x8
0000b92f(2): OR EDX,EDI
0000b931(6): AND EDX,0x3ff
0000b937(3): SHL EDX,0x8
0000b93a(2): OR EDX,ECX
0000b93c(2): MOV ECX,EDX
0000b93e(3): MOV dword ptr [RSI + 0x8],EDX
0000b941(3): SHR ECX,0x10
0000b944(2): MOV EDX,ECX
0000b946(3): OR EDX,0x4
0000b949(3): MOV byte ptr [RSI + 0xa],DL
0000b94c(4): MOV RDX,qword ptr [RBX + 0x20]
0000b950(4): MOV qword ptr [RDX + RAX*0x8],RBP
0000b954(4): ADD RSP,0x8
0000b958(1): POP RBX
0000b959(1): POP RBP
0000b95a(2): POP R12
0000b95c(2): POP R13
0000b95e(1): RET
0000b960(2): PUSH R15
0000b962(2): PUSH R14
0000b964(3): MOV R9,RSI
0000b967(2): PUSH R13
0000b969(2): PUSH R12
0000b96b(3): MOV R14,RDI
0000b96e(1): PUSH RBP
0000b96f(1): PUSH RBX
0000b970(3): MOV R13,RDX
0000b973(3): MOV EBP,R8D
0000b976(4): SUB RSP,0x18
0000b97a(5): MOV qword ptr [RSP + 0x8],RCX
0000b97f(3): MOV R8,qword ptr [R14]
0000b982(3): MOV RAX,R9
0000b985(4): MOV RDI,qword ptr [R14 + 0x28]
0000b989(4): SHL RAX,0x4
0000b98d(3): MOV R12,R13
0000b990(3): ADD RAX,R8
0000b993(4): CMP byte ptr [RAX + 0x8],0x4
0000b997(6): JZ 0x0000bb50
0000b99d(4): LEA R12,[R9 + R9*0x2]
0000b9a1(4): SHL R12,0x3
0000b9a5(4): LEA RSI,[RDI + R12*0x1]
0000b9a9(4): MOV RCX,qword ptr [RSI + 0x8]
0000b9ad(3): TEST RCX,RCX
0000b9b0(6): JZ 0x0000bba9
0000b9b6(5): LEA RBX,[R13 + R13*0x2]
0000b9bb(4): MOV RSI,qword ptr [RSI + 0x10]
0000b9bf(4): SHL RBX,0x3
0000b9c3(3): ADD RDI,RBX
0000b9c6(4): CMP RCX,0x1
0000b9ca(3): MOV R15,qword ptr [RSI]
0000b9cd(8): MOV qword ptr [RDI + 0x8],0x0
0000b9d5(6): JZ 0x0000baf0
0000b9db(4): MOV RDX,qword ptr [R14 + 0x10]
0000b9df(4): LEA RSI,[RDX + -0x1]
0000b9e3(3): MOV RAX,RSI
0000b9e6(4): SHL RAX,0x4
0000b9ea(3): ADD RAX,R8
0000b9ed(4): TEST byte ptr [RAX + 0xa],0x4
0000b9f1(6): JZ 0x0000baa0
0000b9f7(3): TEST RSI,RSI
0000b9fa(6): JLE 0x0000baa0
0000ba00(4): SHL RDX,0x4
0000ba04(3): SUB R8,RAX
0000ba07(4): MOV RCX,qword ptr [R14 + 0x20]
0000ba0b(5): LEA R8,[R8 + RDX*0x1 + -0x20]
0000ba10(2): JMP 0x0000ba2a
0000ba18(3): ADD RAX,R8
0000ba1b(4): SUB RSI,0x1
0000ba1f(4): TEST byte ptr [RAX + 0xa],0x4
0000ba23(2): JZ 0x0000baa0
0000ba25(3): TEST RSI,RSI
0000ba28(2): JLE 0x0000baa0
0000ba2a(4): CMP qword ptr [RCX + RSI*0x8],R15
0000ba2e(2): JNZ 0x0000ba18
0000ba30(3): MOV EDX,dword ptr [RAX + 0x8]
0000ba33(3): SHR EDX,0x8
0000ba36(6): AND EDX,0x3ff
0000ba3c(2): CMP EBP,EDX
0000ba3e(2): JNZ 0x0000ba18
0000ba40(5): CALL 0x0000aa10
0000ba45(2): TEST AL,AL
0000ba47(2): JZ 0x0000ba8b
0000ba49(4): MOV RAX,qword ptr [R14 + 0x28]
0000ba4d(2): MOV EDX,EBP
0000ba4f(3): MOV RDI,R14
0000ba52(5): MOV RAX,qword ptr [RAX + R12*0x1 + 0x10]
0000ba57(4): MOV R9,qword ptr [RAX + 0x8]
0000ba5b(3): MOV RSI,R9
0000ba5e(4): MOV qword ptr [RSP],R9
0000ba62(5): CALL 0x0000b8c0
0000ba67(4): CMP RAX,-0x1
0000ba6b(3): MOV R13,RAX
0000ba6e(2): JZ 0x0000ba8b
0000ba70(4): ADD RBX,qword ptr [R14 + 0x28]
0000ba74(3): MOV RSI,R13
0000ba77(3): MOV RDI,RBX
0000ba7a(5): CALL 0x0000aa10
0000ba7f(2): TEST AL,AL
0000ba81(4): MOV R9,qword ptr [RSP]
0000ba85(6): JNZ 0x0000b97f
0000ba8b(5): MOV EAX,0xc
0000ba90(4): ADD RSP,0x18
0000ba94(1): POP RBX
0000ba95(1): POP RBP
0000ba96(2): POP R12
0000ba98(2): POP R13
0000ba9a(2): POP R14
0000ba9c(2): POP R15
0000ba9e(1): RET
0000baa0(2): MOV EDX,EBP
0000baa2(3): MOV RSI,R15
0000baa5(3): MOV RDI,R14
0000baa8(5): CALL 0x0000b8c0
0000baad(4): CMP RAX,-0x1
0000bab1(3): MOV R13,RAX
0000bab4(2): JZ 0x0000ba8b
0000bab6(4): MOV RDI,qword ptr [R14 + 0x28]
0000baba(3): MOV RSI,R13
0000babd(3): ADD RDI,RBX
0000bac0(5): CALL 0x0000aa10
0000bac5(2): TEST AL,AL
0000bac7(2): JZ 0x0000ba8b
0000bac9(5): MOV RCX,qword ptr [RSP + 0x8]
0000bace(3): MOV R8D,EBP
0000bad1(3): MOV RDX,R13
0000bad4(3): MOV RSI,R15
0000bad7(3): MOV RDI,R14
0000bada(5): CALL 0x0000b960
0000badf(2): TEST EAX,EAX
0000bae1(6): JZ 0x0000ba49
0000bae7(2): JMP 0x0000ba90
0000baf0(5): CMP R9,qword ptr [RSP + 0x8]
0000baf5(2): JNZ 0x0000bb00
0000baf7(3): CMP R9,R13
0000bafa(6): JNZ 0x0000bbbc
0000bb00(3): MOV EAX,dword ptr [RAX + 0x8]
0000bb03(3): MOV RSI,R15
0000bb06(3): MOV RDI,R14
0000bb09(3): SHR EAX,0x8
0000bb0c(5): AND EAX,0x3ff
0000bb11(2): OR EBP,EAX
0000bb13(2): MOV EDX,EBP
0000bb15(5): CALL 0x0000b8c0
0000bb1a(4): CMP RAX,-0x1
0000bb1e(3): MOV R13,RAX
0000bb21(6): JZ 0x0000ba8b
0000bb27(4): ADD RBX,qword ptr [R14 + 0x28]
0000bb2b(3): MOV RSI,RAX
0000bb2e(3): MOV RDI,RBX
0000bb31(5): CALL 0x0000aa10
0000bb36(2): TEST AL,AL
0000bb38(6): JZ 0x0000ba8b
0000bb3e(3): MOV R9,R15
0000bb41(5): JMP 0x0000b97f
0000bb50(4): MOV RAX,qword ptr [R14 + 0x18]
0000bb54(5): LEA RBX,[R13 + R13*0x2]
0000bb59(8): LEA R15,[R9*0x8]
0000bb61(2): MOV EDX,EBP
0000bb63(4): SHL RBX,0x3
0000bb67(4): MOV R9,qword ptr [RAX + R9*0x8]
0000bb6b(9): MOV qword ptr [RDI + RBX*0x1 + 0x8],0x0
0000bb74(3): MOV RDI,R14
0000bb77(3): MOV RSI,R9
0000bb7a(4): MOV qword ptr [RSP],R9
0000bb7e(5): CALL 0x0000b8c0
0000bb83(4): CMP RAX,-0x1
0000bb87(3): MOV R13,RAX
0000bb8a(4): MOV R9,qword ptr [RSP]
0000bb8e(6): JZ 0x0000ba8b
0000bb94(4): MOV RAX,qword ptr [R14 + 0x18]
0000bb98(4): MOV qword ptr [RSP],R9
0000bb9c(4): MOV RCX,qword ptr [RAX + R15*0x1]
0000bba0(4): MOV qword ptr [RAX + R12*0x8],RCX
0000bba4(5): JMP 0x0000ba70
0000bba9(4): MOV RAX,qword ptr [R14 + 0x18]
0000bbad(4): MOV RCX,qword ptr [RAX + R9*0x8]
0000bbb1(4): MOV qword ptr [RAX + R13*0x8],RCX
0000bbb5(2): XOR EAX,EAX
0000bbb7(5): JMP 0x0000ba90
0000bbbc(3): MOV RSI,R15
0000bbbf(5): CALL 0x0000aa10
0000bbc4(2): MOV EDX,EAX
0000bbc6(2): XOR EAX,EAX
0000bbc8(2): TEST DL,DL
0000bbca(6): JNZ 0x0000ba90
0000bbd0(5): JMP 0x0000ba8b
0000bbe0(1): PUSH RBX
0000bbe1(3): MOV RBX,RDI
0000bbe4(4): MOV RDI,qword ptr [RDI + 0x30]
0000bbe8(5): CALL 0x00001c60
0000bbed(4): MOV RDI,qword ptr [RBX + 0x48]
0000bbf1(5): CALL 0x00001c60
0000bbf6(4): MOV RAX,qword ptr [RBX + 0x50]
0000bbfa(4): LEA RDX,[RBX + 0x8]
0000bbfe(3): CMP RAX,RDX
0000bc01(2): JZ 0x0000bc15
0000bc03(4): MOV RDI,qword ptr [RAX + 0x10]
0000bc07(5): CALL 0x00001c60
0000bc0c(4): MOV RDI,qword ptr [RBX + 0x50]
0000bc10(5): CALL 0x00001c60
0000bc15(4): MOV RDI,qword ptr [RBX + 0x18]
0000bc19(5): CALL 0x00001c60
0000bc1e(4): MOV RDI,qword ptr [RBX + 0x60]
0000bc22(5): CALL 0x00001c60
0000bc27(4): MOV RDI,qword ptr [RBX + 0x58]
0000bc2b(5): CALL 0x00001c60
0000bc30(3): MOV RDI,RBX
0000bc33(1): POP RBX
0000bc34(5): JMP 0x00001c60
0000bc40(1): PUSH RBX
0000bc41(3): MOV RBX,RDI
0000bc44(4): MOV RDI,qword ptr [RDI + 0x10]
0000bc48(5): CALL 0x00001c60
0000bc4d(4): MOV RDI,qword ptr [RBX + 0x18]
0000bc51(5): CALL 0x00001c60
0000bc56(7): CMP byte ptr [0x8b + RBX],0x0
0000bc5d(2): JNZ 0x0000bc68
0000bc5f(1): POP RBX
0000bc60(1): RET
0000bc68(4): MOV RDI,qword ptr [RBX + 0x8]
0000bc6c(1): POP RBX
0000bc6d(5): JMP 0x00001c60
0000bc80(2): PUSH R14
0000bc82(2): PUSH R13
0000bc84(2): PUSH R12
0000bc86(3): MOV R12,RDI
0000bc89(1): PUSH RBP
0000bc8a(1): PUSH RBX
0000bc8b(3): MOV RDI,qword ptr [RDI]
0000bc8e(3): TEST RDI,RDI
0000bc91(2): JZ 0x0000bcbe
0000bc93(6): CMP qword ptr [R12 + 0x10],0x0
0000bc99(2): JZ 0x0000bcbe
0000bc9b(2): XOR EBX,EBX
0000bc9d(2): JMP 0x0000bca4
0000bca0(4): MOV RDI,qword ptr [R12]
0000bca4(3): MOV RAX,RBX
0000bca7(4): ADD RBX,0x1
0000bcab(4): SHL RAX,0x4
0000bcaf(3): ADD RDI,RAX
0000bcb2(5): CALL 0x0000b6a0
0000bcb7(5): CMP qword ptr [R12 + 0x10],RBX
0000bcbc(2): JA 0x0000bca0
0000bcbe(5): MOV RDI,qword ptr [R12 + 0x18]
0000bcc3(5): CALL 0x00001c60
0000bcc8(6): CMP qword ptr [R12 + 0x10],0x0
0000bcce(2): JZ 0x0000bd23
0000bcd0(2): XOR EBX,EBX
0000bcd2(2): XOR EBP,EBP
0000bcd4(4): NOP dword ptr [RAX]
0000bcd8(5): MOV RAX,qword ptr [R12 + 0x30]
0000bcdd(3): TEST RAX,RAX
0000bce0(2): JZ 0x0000bcec
0000bce2(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000bce7(5): CALL 0x00001c60
0000bcec(5): MOV RAX,qword ptr [R12 + 0x38]
0000bcf1(3): TEST RAX,RAX
0000bcf4(2): JZ 0x0000bd00
0000bcf6(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000bcfb(5): CALL 0x00001c60
0000bd00(5): MOV RAX,qword ptr [R12 + 0x28]
0000bd05(3): TEST RAX,RAX
0000bd08(2): JZ 0x0000bd14
0000bd0a(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000bd0f(5): CALL 0x00001c60
0000bd14(4): ADD RBP,0x1
0000bd18(4): ADD RBX,0x18
0000bd1c(5): CMP qword ptr [R12 + 0x10],RBP
0000bd21(2): JA 0x0000bcd8
0000bd23(5): MOV RDI,qword ptr [R12 + 0x28]
0000bd28(5): CALL 0x00001c60
0000bd2d(5): MOV RDI,qword ptr [R12 + 0x30]
0000bd32(5): CALL 0x00001c60
0000bd37(5): MOV RDI,qword ptr [R12 + 0x38]
0000bd3c(5): CALL 0x00001c60
0000bd41(4): MOV RDI,qword ptr [R12]
0000bd45(5): CALL 0x00001c60
0000bd4a(5): MOV RDI,qword ptr [R12 + 0x40]
0000bd4f(3): TEST RDI,RDI
0000bd52(2): JZ 0x0000bda7
0000bd54(3): XOR R14D,R14D
0000bd57(3): XOR R13D,R13D
0000bd5a(6): NOP word ptr [RAX + RAX*0x1]
0000bd60(4): LEA RBP,[RDI + R14*0x1]
0000bd64(5): CMP qword ptr [RBP],0x0
0000bd69(2): JLE 0x0000bd87
0000bd6b(2): XOR EBX,EBX
0000bd6d(3): NOP dword ptr [RAX]
0000bd70(4): MOV RAX,qword ptr [RBP + 0x10]
0000bd74(4): MOV RDI,qword ptr [RAX + RBX*0x8]
0000bd78(4): ADD RBX,0x1
0000bd7c(5): CALL 0x0000bbe0
0000bd81(4): CMP qword ptr [RBP],RBX
0000bd85(2): JG 0x0000bd70
0000bd87(4): MOV RDI,qword ptr [RBP + 0x10]
0000bd8b(4): ADD R13,0x1
0000bd8f(4): ADD R14,0x18
0000bd93(5): CALL 0x00001c60
0000bd98(8): CMP qword ptr [0x88 + R12],R13
0000bda0(5): MOV RDI,qword ptr [R12 + 0x40]
0000bda5(2): JNC 0x0000bd60
0000bda7(5): CALL 0x00001c60
0000bdac(5): MOV RDI,qword ptr [R12 + 0x78]
0000bdb1(7): LEA RAX,[0x1cd00]
0000bdb8(3): CMP RDI,RAX
0000bdbb(2): JZ 0x0000bdc2
0000bdbd(5): CALL 0x00001c60
0000bdc2(8): MOV RDI,qword ptr [0xe0 + R12]
0000bdca(5): CALL 0x00001c60
0000bdcf(1): POP RBX
0000bdd0(3): MOV RDI,R12
0000bdd3(1): POP RBP
0000bdd4(2): POP R12
0000bdd6(2): POP R13
0000bdd8(2): POP R14
0000bdda(5): JMP 0x00001c60
0000bde0(2): PUSH R14
0000bde2(2): PUSH R13
0000bde4(3): MOV R14,RDI
0000bde7(2): PUSH R12
0000bde9(1): PUSH RBP
0000bdea(1): PUSH RBX
0000bdeb(8): CMP qword ptr [0xe8 + RDI],0x0
0000bdf3(6): JLE 0x0000be79
0000bdf9(3): XOR R13D,R13D
0000bdfc(4): NOP dword ptr [RAX]
0000be00(7): MOV RAX,qword ptr [0xf8 + R14]
0000be07(4): MOV R12,qword ptr [RAX + R13*0x8]
0000be0b(6): CMP qword ptr [R12 + 0x20],0x0
0000be11(2): JLE 0x0000be3d
0000be13(2): XOR EBX,EBX
0000be15(3): NOP dword ptr [RAX]
0000be18(5): MOV RAX,qword ptr [R12 + 0x28]
0000be1d(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000be21(4): ADD RBX,0x1
0000be25(4): MOV RDI,qword ptr [RBP + 0x20]
0000be29(5): CALL 0x00001c60
0000be2e(3): MOV RDI,RBP
0000be31(5): CALL 0x00001c60
0000be36(5): CMP qword ptr [R12 + 0x20],RBX
0000be3b(2): JG 0x0000be18
0000be3d(5): MOV RDI,qword ptr [R12 + 0x28]
0000be42(5): CALL 0x00001c60
0000be47(5): MOV RAX,qword ptr [R12 + 0x10]
0000be4c(3): TEST RAX,RAX
0000be4f(2): JZ 0x0000be64
0000be51(4): MOV RDI,qword ptr [RAX + 0x10]
0000be55(5): CALL 0x00001c60
0000be5a(5): MOV RDI,qword ptr [R12 + 0x10]
0000be5f(5): CALL 0x00001c60
0000be64(3): MOV RDI,R12
0000be67(4): ADD R13,0x1
0000be6b(5): CALL 0x00001c60
0000be70(7): CMP qword ptr [0xe8 + R14],R13
0000be77(2): JG 0x0000be00
0000be79(1): POP RBX
0000be7a(11): MOV qword ptr [0xe8 + R14],0x0
0000be85(11): MOV qword ptr [0xc8 + R14],0x0
0000be90(1): POP RBP
0000be91(2): POP R12
0000be93(2): POP R13
0000be95(2): POP R14
0000be97(1): RET
0000bea0(4): MOV RCX,qword ptr [RDI + 0x30]
0000bea4(4): LEA RAX,[RSI + 0x1]
0000bea8(3): CMP RAX,RCX
0000beab(2): JGE 0x0000bee8
0000bead(4): MOV RDX,qword ptr [RDI + 0x10]
0000beb1(8): LEA RDI,[RAX*0x4]
0000beb9(4): CMP dword ptr [RDX + RAX*0x4],-0x1
0000bebd(2): JNZ 0x0000bee8
0000bebf(3): SUB RCX,RSI
0000bec2(5): LEA RSI,[RDX + RDI*0x1 + -0x4]
0000bec7(5): MOV EDX,0x2
0000becc(2): JMP 0x0000bedb
0000bed0(4): ADD RDX,0x1
0000bed4(5): CMP dword ptr [RSI + RDX*0x4 + -0x4],-0x1
0000bed9(2): JNZ 0x0000beed
0000bedb(3): CMP RDX,RCX
0000bede(2): MOV EAX,EDX
0000bee0(2): JNZ 0x0000bed0
0000bee2(2): RET
0000bee8(5): MOV EAX,0x1
0000beed(2): RET
0000bef0(4): MOV RDX,qword ptr [RDI + 0x8]
0000bef4(2): XOR EAX,EAX
0000bef6(4): CMP RDX,qword ptr [RSI + 0x8]
0000befa(2): JZ 0x0000bf00
0000befc(2): RET
0000bf00(4): LEA RAX,[RDX + -0x1]
0000bf04(8): LEA RDX,[RAX*0x8]
0000bf0c(2): JMP 0x0000bf2d
0000bf10(4): MOV RCX,qword ptr [RDI + 0x10]
0000bf14(4): MOV R8,qword ptr [RCX + RDX*0x1]
0000bf18(4): MOV RCX,qword ptr [RSI + 0x10]
0000bf1c(4): MOV RCX,qword ptr [RCX + RDX*0x1]
0000bf20(4): SUB RDX,0x8
0000bf24(3): CMP R8,RCX
0000bf27(2): JNZ 0x0000bf40
0000bf29(4): SUB RAX,0x1
0000bf2d(3): TEST RAX,RAX
0000bf30(2): JNS 0x0000bf10
0000bf32(5): MOV EAX,0x1
0000bf37(1): RET
0000bf40(2): XOR EAX,EAX
0000bf42(1): RET
0000bf50(2): XOR EAX,EAX
0000bf52(3): TEST RDI,RDI
0000bf55(2): JLE 0x0000bf95
0000bf57(3): MOV R8,qword ptr [RSI]
0000bf5a(4): SUB RDI,0x1
0000bf5e(2): XOR ESI,ESI
0000bf60(3): CMP RSI,RDI
0000bf63(2): JNC 0x0000bf8d
0000bf65(4): LEA RCX,[RSI + RDI*0x1]
0000bf69(3): SHR RCX,1
0000bf6c(4): CMP RDX,qword ptr [R8 + RCX*0x8]
0000bf70(2): JLE 0x0000bf88
0000bf72(2): JMP 0x0000bfa0
0000bf78(4): LEA RAX,[RSI + RCX*0x1]
0000bf7c(3): SHR RAX,1
0000bf7f(4): CMP qword ptr [R8 + RAX*0x8],RDX
0000bf83(2): JL 0x0000bfb0
0000bf85(3): MOV RCX,RAX
0000bf88(3): CMP RSI,RCX
0000bf8b(2): JC 0x0000bf78
0000bf8d(2): XOR EAX,EAX
0000bf8f(4): CMP RDX,qword ptr [R8 + RSI*0x8]
0000bf93(2): JZ 0x0000bfc0
0000bf95(2): RET
0000bfa0(3): MOV RAX,RCX
0000bfa3(3): MOV RCX,RDI
0000bfa6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000bfb0(4): LEA RSI,[RAX + 0x1]
0000bfb4(3): MOV RDI,RCX
0000bfb7(2): JMP 0x0000bf60
0000bfc0(4): LEA RAX,[RSI + 0x1]
0000bfc4(1): RET
0000bfd0(2): PUSH R15
0000bfd2(2): PUSH R14
0000bfd4(4): LEA R14,[RSI + 0x10]
0000bfd8(2): PUSH R13
0000bfda(2): PUSH R12
0000bfdc(3): MOV R15,RCX
0000bfdf(1): PUSH RBP
0000bfe0(1): PUSH RBX
0000bfe1(3): MOV R12,RDI
0000bfe4(3): MOV RBP,RSI
0000bfe7(3): MOV RBX,RDX
0000bfea(3): MOV R13D,R8D
0000bfed(4): SUB RSP,0x8
0000bff1(4): MOV RDI,qword ptr [RBP + 0x8]
0000bff5(3): MOV RDX,RBX
0000bff8(3): MOV RSI,R14
0000bffb(5): CALL 0x0000bf50
0000c000(3): TEST RAX,RAX
0000c003(2): JNZ 0x0000c070
0000c005(3): MOV RAX,RBX
0000c008(4): SHL RAX,0x4
0000c00c(4): ADD RAX,qword ptr [R12]
0000c010(4): MOVZX EDX,byte ptr [RAX + 0x8]
0000c014(3): CMP EDX,R13D
0000c017(2): JNZ 0x0000c01e
0000c019(3): CMP qword ptr [RAX],R15
0000c01c(2): JZ 0x0000c058
0000c01e(3): MOV RSI,RBX
0000c021(3): MOV RDI,RBP
0000c024(5): CALL 0x0000aa10
0000c029(2): TEST AL,AL
0000c02b(2): JZ 0x0000c088
0000c02d(4): LEA RBX,[RBX + RBX*0x2]
0000c031(5): MOV RDX,qword ptr [R12 + 0x28]
0000c036(4): SHL RBX,0x3
0000c03a(3): ADD RDX,RBX
0000c03d(4): MOV RAX,qword ptr [RDX + 0x8]
0000c041(3): TEST RAX,RAX
0000c044(2): JZ 0x0000c070
0000c046(4): CMP RAX,0x2
0000c04a(4): MOV RDX,qword ptr [RDX + 0x10]
0000c04e(2): JZ 0x0000c0a0
0000c050(3): MOV RBX,qword ptr [RDX]
0000c053(2): JMP 0x0000bff1
0000c058(4): CMP R13D,0x9
0000c05c(2): JNZ 0x0000c070
0000c05e(3): MOV RSI,RBX
0000c061(3): MOV RDI,RBP
0000c064(5): CALL 0x0000aa10
0000c069(2): TEST AL,AL
0000c06b(2): JZ 0x0000c088
0000c06d(3): NOP dword ptr [RAX]
0000c070(2): XOR EAX,EAX
0000c072(4): ADD RSP,0x8
0000c076(1): POP RBX
0000c077(1): POP RBP
0000c078(2): POP R12
0000c07a(2): POP R13
0000c07c(2): POP R14
0000c07e(2): POP R15
0000c080(1): RET
0000c088(4): ADD RSP,0x8
0000c08c(5): MOV EAX,0xc
0000c091(1): POP RBX
0000c092(1): POP RBP
0000c093(2): POP R12
0000c095(2): POP R13
0000c097(2): POP R14
0000c099(2): POP R15
0000c09b(1): RET
0000c0a0(4): MOV RDX,qword ptr [RDX + 0x8]
0000c0a4(3): MOV R8D,R13D
0000c0a7(3): MOV RCX,R15
0000c0aa(3): MOV RSI,RBP
0000c0ad(3): MOV RDI,R12
0000c0b0(5): CALL 0x0000bfd0
0000c0b5(2): TEST EAX,EAX
0000c0b7(2): JNZ 0x0000c072
0000c0b9(5): MOV RAX,qword ptr [R12 + 0x28]
0000c0be(5): MOV RDX,qword ptr [RAX + RBX*0x1 + 0x10]
0000c0c3(2): JMP 0x0000c050
0000c0d0(3): MOV RAX,qword ptr [RDI]
0000c0d3(3): CMP RAX,RDX
0000c0d6(2): JLE 0x0000c102
0000c0d8(4): SUB RAX,0x1
0000c0dc(3): CMP RDX,RAX
0000c0df(3): MOV qword ptr [RDI],RAX
0000c0e2(2): JGE 0x0000c102
0000c0e4(3): MOV RAX,qword ptr [RSI]
0000c0e7(9): NOP word ptr [RAX + RAX*0x1]
0000c0f0(5): MOV RCX,qword ptr [RAX + RDX*0x8 + 0x8]
0000c0f5(4): MOV qword ptr [RAX + RDX*0x8],RCX
0000c0f9(4): ADD RDX,0x1
0000c0fd(3): CMP RDX,qword ptr [RDI]
0000c100(2): JL 0x0000c0f0
0000c102(2): RET
0000c110(4): MOVZX EAX,byte ptr [RSI + 0x30]
0000c114(2): CMP AL,0x4
0000c116(2): JZ 0x0000c170
0000c118(2): CMP AL,0x11
0000c11a(2): JZ 0x0000c120
0000c11c(2): XOR EAX,EAX
0000c11e(1): RET
0000c120(4): MOV RAX,qword ptr [RSI + 0x8]
0000c124(3): TEST RAX,RAX
0000c127(2): JZ 0x0000c11c
0000c129(4): CMP byte ptr [RAX + 0x30],0x11
0000c12d(2): JNZ 0x0000c11c
0000c12f(4): MOV RCX,qword ptr [RAX + 0x28]
0000c133(4): MOV RAX,qword ptr [RAX + 0x8]
0000c137(3): TEST RAX,RAX
0000c13a(4): MOV qword ptr [RSI + 0x8],RAX
0000c13e(2): JZ 0x0000c143
0000c140(3): MOV qword ptr [RAX],RSI
0000c143(7): MOV RAX,qword ptr [0xe0 + RDI]
0000c14a(4): MOV RDX,qword ptr [RSI + 0x28]
0000c14e(4): CMP RCX,0x3f
0000c152(4): MOV RDX,qword ptr [RAX + RDX*0x8]
0000c156(4): MOV qword ptr [RAX + RCX*0x8],RDX
0000c15a(2): JG 0x0000c11c
0000c15c(7): MOV RAX,-0x2
0000c163(3): ROL RAX,CL
0000c166(7): AND qword ptr [0xa0 + RDI],RAX
0000c16d(2): JMP 0x0000c11c
0000c170(7): MOV RAX,qword ptr [0xe0 + RDI]
0000c177(3): TEST RAX,RAX
0000c17a(2): JZ 0x0000c11c
0000c17c(4): MOVSXD RDX,dword ptr [RSI + 0x28]
0000c180(4): MOV RCX,qword ptr [RAX + RDX*0x8]
0000c184(5): MOV EAX,0x1
0000c189(2): SHL EAX,CL
0000c18b(4): MOV qword ptr [RSI + 0x28],RCX
0000c18f(2): CDQE
0000c191(7): OR qword ptr [0xa0 + RDI],RAX
0000c198(2): XOR EAX,EAX
0000c19a(1): RET
0000c1a0(4): MOVZX EAX,byte ptr [RSI + 0x30]
0000c1a4(4): MOV RDX,qword ptr [RSI + 0x8]
0000c1a8(2): CMP AL,0xb
0000c1aa(2): JZ 0x0000c1f0
0000c1ac(2): CMP AL,0x10
0000c1ae(2): JZ 0x0000c1d8
0000c1b0(3): TEST RDX,RDX
0000c1b3(2): JZ 0x0000c1bd
0000c1b5(4): MOV RAX,qword ptr [RSI + 0x20]
0000c1b9(4): MOV qword ptr [RDX + 0x20],RAX
0000c1bd(4): MOV RAX,qword ptr [RSI + 0x10]
0000c1c1(3): TEST RAX,RAX
0000c1c4(2): JZ 0x0000c1ce
0000c1c6(4): MOV RDX,qword ptr [RSI + 0x20]
0000c1ca(4): MOV qword ptr [RAX + 0x20],RDX
0000c1ce(2): XOR EAX,EAX
0000c1d0(1): RET
0000c1d8(4): MOV RAX,qword ptr [RSI + 0x10]
0000c1dc(4): MOV RCX,qword ptr [RAX + 0x18]
0000c1e0(4): MOV qword ptr [RDX + 0x20],RCX
0000c1e4(4): MOV RDX,qword ptr [RSI + 0x20]
0000c1e8(4): MOV qword ptr [RAX + 0x20],RDX
0000c1ec(2): XOR EAX,EAX
0000c1ee(1): RET
0000c1f0(4): MOV qword ptr [RDX + 0x20],RSI
0000c1f4(2): XOR EAX,EAX
0000c1f6(1): RET
0000c200(2): PUSH R15
0000c202(2): PUSH R14
0000c204(2): PUSH R13
0000c206(2): PUSH R12
0000c208(1): PUSH RBP
0000c209(1): PUSH RBX
0000c20a(2): XOR EBX,EBX
0000c20c(4): SUB RSP,0x48
0000c210(7): MOV RAX,qword ptr [0x98 + RDI]
0000c217(7): MOV R15,qword ptr [0xc8 + RDI]
0000c21e(8): MOV R12,qword ptr [0x80 + RSP]
0000c226(5): MOV qword ptr [RSP + 0x8],RAX
0000c22b(3): MOV RBP,R15
0000c22e(3): CMP RBX,RBP
0000c231(2): JGE 0x0000c28b
0000c233(4): LEA RAX,[RBX + RBP*0x1]
0000c237(7): MOV R13,qword ptr [0xd8 + RDI]
0000c23e(3): MOV R10,RAX
0000c241(4): SHR R10,0x3f
0000c245(3): ADD R10,RAX
0000c248(3): SAR R10,1
0000c24b(4): LEA RAX,[R10 + R10*0x4]
0000c24f(5): CMP R8,qword ptr [R13 + RAX*0x8 + 0x8]
0000c254(2): JLE 0x0000c286
0000c256(5): JMP 0x0000c3f0
0000c260(4): LEA R11,[RBX + R10*0x1]
0000c264(3): MOV RAX,R11
0000c267(4): SHR RAX,0x3f
0000c26b(3): ADD RAX,R11
0000c26e(3): SAR RAX,1
0000c271(4): LEA R11,[RAX + RAX*0x4]
0000c275(3): MOV R14,RAX
0000c278(5): CMP qword ptr [R13 + R11*0x8 + 0x8],R8
0000c27d(6): JL 0x0000c400
0000c283(3): MOV R10,RAX
0000c286(3): CMP RBX,R10
0000c289(2): JL 0x0000c260
0000c28b(3): CMP R15,RBX
0000c28e(6): JLE 0x0000c430
0000c294(7): MOV R11,qword ptr [0xd8 + RDI]
0000c29b(4): LEA RAX,[RBX + RBX*0x4]
0000c29f(4): LEA RAX,[R11 + RAX*0x8]
0000c2a3(4): CMP R8,qword ptr [RAX + 0x8]
0000c2a7(7): MOV RAX,-0x1
0000c2ae(4): CMOVNZ RBX,RAX
0000c2b2(3): MOV RAX,R15
0000c2b5(2): XOR EBP,EBP
0000c2b7(3): CMP RBP,RAX
0000c2ba(2): JGE 0x0000c314
0000c2bc(5): LEA R11,[RBP + RAX*0x1]
0000c2c1(3): MOV R10,R11
0000c2c4(4): SHR R10,0x3f
0000c2c8(3): ADD R10,R11
0000c2cb(7): MOV R11,qword ptr [0xd8 + RDI]
0000c2d2(3): SAR R10,1
0000c2d5(4): LEA R13,[R10 + R10*0x4]
0000c2d9(5): CMP R12,qword ptr [R11 + R13*0x8 + 0x8]
0000c2de(2): JLE 0x0000c30f
0000c2e0(5): JMP 0x0000c410
0000c2e8(5): LEA R13,[RBP + R10*0x1]
0000c2ed(3): MOV RAX,R13
0000c2f0(4): SHR RAX,0x3f
0000c2f4(3): ADD RAX,R13
0000c2f7(3): SAR RAX,1
0000c2fa(4): LEA R13,[RAX + RAX*0x4]
0000c2fe(3): MOV R14,RAX
0000c301(5): CMP qword ptr [R11 + R13*0x8 + 0x8],R12
0000c306(6): JL 0x0000c420
0000c30c(3): MOV R10,RAX
0000c30f(3): CMP RBP,R10
0000c312(2): JL 0x0000c2e8
0000c314(3): CMP R15,RBP
0000c317(6): JLE 0x0000c440
0000c31d(7): MOV R10,qword ptr [0xd8 + RDI]
0000c324(5): LEA RAX,[RBP + RBP*0x4]
0000c329(4): LEA RAX,[R10 + RAX*0x8]
0000c32d(4): CMP R12,qword ptr [RAX + 0x8]
0000c331(7): MOV RAX,-0x1
0000c338(4): CMOVNZ RBP,RAX
0000c33c(4): CMP qword ptr [RSI],0x0
0000c340(6): JLE 0x0000c462
0000c346(5): MOV qword ptr [RSP + 0x30],RBP
0000c34b(5): MOV qword ptr [RSP + 0x20],R9
0000c350(3): MOV R13,RDI
0000c353(5): MOV qword ptr [RSP + 0x18],R8
0000c358(5): MOV qword ptr [RSP + 0x10],RCX
0000c35d(3): XOR R14D,R14D
0000c360(5): MOV qword ptr [RSP + 0x38],RSI
0000c365(5): MOV qword ptr [RSP + 0x28],RBX
0000c36a(3): MOV RBP,RDX
0000c36d(3): MOV R15,R12
0000c370(4): MOV RAX,qword ptr [RBP]
0000c374(7): MOV RDX,qword ptr [0xd8 + R13]
0000c37b(3): MOV RDI,R13
0000c37e(5): MOV R9,qword ptr [RSP + 0x28]
0000c383(5): MOV R8,qword ptr [RSP + 0x18]
0000c388(5): MOV RCX,qword ptr [RSP + 0x10]
0000c38d(4): MOV RSI,qword ptr [RAX + R14*0x8]
0000c391(4): LEA RAX,[RSI + RSI*0x4]
0000c395(4): LEA RAX,[RDX + RAX*0x8]
0000c399(5): MOV RDX,qword ptr [RSP + 0x8]
0000c39e(3): MOV RAX,qword ptr [RAX]
0000c3a1(4): SHL RAX,0x4
0000c3a5(3): ADD RAX,qword ptr [RDX]
0000c3a8(3): MOV R12,qword ptr [RAX]
0000c3ab(3): MOV RDX,R12
0000c3ae(5): CALL 0x0000a7c0
0000c3b3(2): MOV EBX,EAX
0000c3b5(4): MOV RAX,qword ptr [RBP]
0000c3b9(5): MOV R9,qword ptr [RSP + 0x30]
0000c3be(5): MOV RCX,qword ptr [RSP + 0x20]
0000c3c3(3): MOV R8,R15
0000c3c6(3): MOV RDX,R12
0000c3c9(3): MOV RDI,R13
0000c3cc(4): MOV RSI,qword ptr [RAX + R14*0x8]
0000c3d0(5): CALL 0x0000a7c0
0000c3d5(2): CMP EBX,EAX
0000c3d7(2): JZ 0x0000c450
0000c3d9(5): MOV EAX,0x1
0000c3de(4): ADD RSP,0x48
0000c3e2(1): POP RBX
0000c3e3(1): POP RBP
0000c3e4(2): POP R12
0000c3e6(2): POP R13
0000c3e8(2): POP R14
0000c3ea(2): POP R15
0000c3ec(1): RET
0000c3f0(3): MOV R14,R10
0000c3f3(3): MOV R10,RBP
0000c3f6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000c400(4): LEA RBX,[R14 + 0x1]
0000c404(3): MOV RBP,R10
0000c407(5): JMP 0x0000c22e
0000c410(3): MOV R14,R10
0000c413(3): MOV R10,RAX
0000c416(10): NOP word ptr CS:[RAX + RAX*0x1]
0000c420(4): LEA RBP,[R14 + 0x1]
0000c424(3): MOV RAX,R10
0000c427(5): JMP 0x0000c2b7
0000c430(7): MOV RBX,-0x1
0000c437(5): JMP 0x0000c2b2
0000c440(7): MOV RBP,-0x1
0000c447(5): JMP 0x0000c33c
0000c450(5): MOV RAX,qword ptr [RSP + 0x38]
0000c455(4): ADD R14,0x1
0000c459(3): CMP R14,qword ptr [RAX]
0000c45c(6): JL 0x0000c370
0000c462(2): XOR EAX,EAX
0000c464(5): JMP 0x0000c3de
0000c470(3): TEST RSI,RSI
0000c473(6): JZ 0x0000c568
0000c479(4): MOV RDX,qword ptr [RSI + 0x8]
0000c47d(3): TEST RDX,RDX
0000c480(6): JZ 0x0000c568
0000c486(2): PUSH R12
0000c488(1): PUSH RBP
0000c489(3): MOV R12,RSI
0000c48c(1): PUSH RBX
0000c48d(4): MOV RAX,qword ptr [RDI + 0x8]
0000c491(3): MOV RBX,RDI
0000c494(3): MOV RSI,qword ptr [RDI]
0000c497(4): LEA RCX,[RAX + RDX*0x2]
0000c49b(3): CMP RSI,RCX
0000c49e(6): JL 0x0000c5e8
0000c4a4(3): TEST RAX,RAX
0000c4a7(6): JZ 0x0000c620
0000c4ad(4): LEA RBP,[RAX + RDX*0x2]
0000c4b1(4): SUB RDX,0x1
0000c4b5(4): SUB RAX,0x1
0000c4b9(3): MOV RDI,RDX
0000c4bc(3): NOT RDI
0000c4bf(3): TEST RDI,RDI
0000c4c2(2): JNS 0x0000c500
0000c4c4(3): TEST RAX,RAX
0000c4c7(2): JS 0x0000c500
0000c4c9(4): MOV RCX,qword ptr [RBX + 0x10]
0000c4cd(5): MOV RSI,qword ptr [R12 + 0x10]
0000c4d2(4): MOV RSI,qword ptr [RSI + RDX*0x8]
0000c4d6(4): CMP qword ptr [RCX + RAX*0x8],RSI
0000c4da(6): JZ 0x0000c570
0000c4e0(6): JGE 0x0000c588
0000c4e6(4): SUB RDX,0x1
0000c4ea(4): SUB RBP,0x1
0000c4ee(3): MOV RDI,RDX
0000c4f1(4): MOV qword ptr [RCX + RBP*0x8],RSI
0000c4f5(3): NOT RDI
0000c4f8(3): TEST RDI,RDI
0000c4fb(2): JS 0x0000c4c4
0000c4fd(3): NOP dword ptr [RAX]
0000c500(3): TEST RDX,RDX
0000c503(6): JNS 0x0000c598
0000c509(4): MOV RCX,qword ptr [RBX + 0x8]
0000c50d(5): MOV RAX,qword ptr [R12 + 0x8]
0000c512(5): LEA R8,[RCX + RAX*0x2 + -0x1]
0000c517(3): MOV RDX,R8
0000c51a(3): SUB RDX,RBP
0000c51d(4): ADD RDX,0x1
0000c521(2): JZ 0x0000c55a
0000c523(4): MOV RDI,qword ptr [RBX + 0x10]
0000c527(4): LEA RAX,[RCX + -0x1]
0000c52b(3): ADD RCX,RDX
0000c52e(4): MOV qword ptr [RBX + 0x8],RCX
0000c532(6): NOP word ptr [RAX + RAX*0x1]
0000c538(4): MOV RSI,qword ptr [RDI + R8*0x8]
0000c53c(4): MOV RCX,qword ptr [RDI + RAX*0x8]
0000c540(4): LEA R9,[RAX + RDX*0x1]
0000c544(4): LEA R9,[RDI + R9*0x8]
0000c548(3): CMP RSI,RCX
0000c54b(2): JLE 0x0000c5c0
0000c54d(4): SUB R8,0x1
0000c551(4): SUB RDX,0x1
0000c555(3): MOV qword ptr [R9],RSI
0000c558(2): JNZ 0x0000c538
0000c55a(2): XOR EAX,EAX
0000c55c(1): POP RBX
0000c55d(1): POP RBP
0000c55e(2): POP R12
0000c560(1): RET
0000c568(2): XOR EAX,EAX
0000c56a(1): RET
0000c570(4): SUB RDX,0x1
0000c574(4): SUB RAX,0x1
0000c578(3): MOV RDI,RDX
0000c57b(3): NOT RDI
0000c57e(5): JMP 0x0000c4bf
0000c588(4): SUB RAX,0x1
0000c58c(5): JMP 0x0000c4bf
0000c598(4): MOV RAX,qword ptr [RBX + 0x10]
0000c59c(4): ADD RDX,0x1
0000c5a0(5): MOV RSI,qword ptr [R12 + 0x10]
0000c5a5(3): SUB RBP,RDX
0000c5a8(4): SHL RDX,0x3
0000c5ac(4): LEA RDI,[RAX + RBP*0x8]
0000c5b0(5): CALL 0x00001ee0
0000c5b5(5): JMP 0x0000c509
0000c5c0(4): SUB RAX,0x1
0000c5c4(3): MOV qword ptr [R9],RCX
0000c5c7(6): JNS 0x0000c538
0000c5cd(4): LEA RSI,[RDI + RBP*0x8]
0000c5d1(4): SHL RDX,0x3
0000c5d5(5): CALL 0x00001ee0
0000c5da(2): XOR EAX,EAX
0000c5dc(5): JMP 0x0000c55c
0000c5e8(3): ADD RDX,RSI
0000c5eb(4): MOV RDI,qword ptr [RDI + 0x10]
0000c5ef(4): LEA RBP,[RDX + RDX*0x1]
0000c5f3(4): SHL RDX,0x4
0000c5f7(3): MOV RSI,RDX
0000c5fa(5): CALL 0x00001f90
0000c5ff(3): TEST RAX,RAX
0000c602(2): JZ 0x0000c644
0000c604(4): MOV qword ptr [RBX + 0x10],RAX
0000c608(3): MOV qword ptr [RBX],RBP
0000c60b(4): MOV RAX,qword ptr [RBX + 0x8]
0000c60f(5): MOV RDX,qword ptr [R12 + 0x8]
0000c614(5): JMP 0x0000c4a4
0000c620(4): MOV qword ptr [RBX + 0x8],RDX
0000c624(5): MOV RAX,qword ptr [R12 + 0x8]
0000c629(4): MOV RDI,qword ptr [RBX + 0x10]
0000c62d(5): MOV RSI,qword ptr [R12 + 0x10]
0000c632(8): LEA RDX,[RAX*0x8]
0000c63a(5): CALL 0x00001ee0
0000c63f(5): JMP 0x0000c55a
0000c644(5): MOV EAX,0xc
0000c649(5): JMP 0x0000c55c
0000c650(2): PUSH R15
0000c652(2): PUSH R14
0000c654(3): MOV R15,RSI
0000c657(2): PUSH R13
0000c659(2): PUSH R12
0000c65b(1): PUSH RBP
0000c65c(1): PUSH RBX
0000c65d(4): LEA RBX,[RDX + RDX*0x2]
0000c661(3): MOV RBP,RDX
0000c664(4): SUB RSP,0x68
0000c668(4): MOV R12,qword ptr [RSI + 0x28]
0000c66c(4): SHL RBX,0x3
0000c670(9): MOV RAX,qword ptr FS:[0x28]
0000c679(5): MOV qword ptr [RSP + 0x58],RAX
0000c67e(2): XOR EAX,EAX
0000c680(5): MOV qword ptr [RSP + 0x10],RDI
0000c685(4): MOV dword ptr [RSP + 0x1c],ECX
0000c689(3): ADD R12,RBX
0000c68c(5): MOV RAX,qword ptr [R12 + 0x8]
0000c691(9): MOV qword ptr [RSP + 0x28],0x0
0000c69a(4): LEA RDI,[RAX + 0x1]
0000c69e(5): MOV qword ptr [RSP + 0x20],RDI
0000c6a3(4): SHL RDI,0x3
0000c6a7(5): CALL 0x00001f20
0000c6ac(3): TEST RAX,RAX
0000c6af(5): MOV qword ptr [RSP + 0x30],RAX
0000c6b4(6): JZ 0x0000c8f0
0000c6ba(4): MOV RAX,qword ptr [R15 + 0x30]
0000c6be(3): MOV RDX,qword ptr [R15]
0000c6c1(3): MOV R13,RBP
0000c6c4(4): SHL R13,0x4
0000c6c8(9): MOV qword ptr [RAX + RBX*0x1 + 0x8],-0x1
0000c6d1(4): LEA RAX,[RDX + R13*0x1]
0000c6d5(4): MOV R8D,dword ptr [RAX + 0x8]
0000c6d9(7): TEST R8D,0x3ff00
0000c6e0(6): JNZ 0x0000c880
0000c6e6(4): TEST byte ptr [RAX + 0x8],0x8
0000c6ea(6): JZ 0x0000c7b0
0000c6f0(4): MOV RSI,qword ptr [R15 + 0x28]
0000c6f4(4): LEA RAX,[RSI + RBX*0x1]
0000c6f8(5): CMP qword ptr [RAX + 0x8],0x0
0000c6fd(6): JLE 0x0000c7b0
0000c703(5): LEA RDX,[RSP + 0x20]
0000c708(5): MOV byte ptr [RSP + 0x1b],0x0
0000c70d(3): XOR R14D,R14D
0000c710(5): LEA R12,[RSP + 0x40]
0000c715(5): MOV qword ptr [RSP + 0x8],RDX
0000c71a(2): JMP 0x0000c736
0000c720(4): MOV RSI,qword ptr [R15 + 0x28]
0000c724(4): ADD R14,0x1
0000c728(4): LEA RAX,[RSI + RBX*0x1]
0000c72c(4): CMP qword ptr [RAX + 0x8],R14
0000c730(6): JLE 0x0000c837
0000c736(4): MOV RAX,qword ptr [RAX + 0x10]
0000c73a(4): MOV RDX,qword ptr [RAX + R14*0x8]
0000c73e(4): MOV RAX,qword ptr [R15 + 0x30]
0000c742(4): LEA R8,[RDX + RDX*0x2]
0000c746(8): LEA R13,[R8*0x8]
0000c74e(3): ADD RAX,R13
0000c751(4): MOV RCX,qword ptr [RAX + 0x8]
0000c755(4): CMP RCX,-0x1
0000c759(6): JZ 0x0000c820
0000c75f(3): TEST RCX,RCX
0000c762(6): JZ 0x0000c8d8
0000c768(4): MOVDQU XMM0,xmmword ptr [RAX]
0000c76c(5): MOVAPS xmmword ptr [RSP + 0x40],XMM0
0000c771(4): MOV RAX,qword ptr [RAX + 0x10]
0000c775(5): MOV qword ptr [RSP + 0x50],RAX
0000c77a(5): MOV RDI,qword ptr [RSP + 0x8]
0000c77f(3): MOV RSI,R12
0000c782(5): CALL 0x0000c470
0000c787(2): TEST EAX,EAX
0000c789(2): JNZ 0x0000c7f6
0000c78b(4): MOV RAX,qword ptr [R15 + 0x30]
0000c78f(6): CMP qword ptr [RAX + R13*0x1 + 0x8],0x0
0000c795(2): JNZ 0x0000c720
0000c797(5): MOV RDI,qword ptr [RSP + 0x50]
0000c79c(5): CALL 0x00001c60
0000c7a1(5): MOV byte ptr [RSP + 0x1b],0x1
0000c7a6(5): JMP 0x0000c720
0000c7b0(5): LEA RDI,[RSP + 0x20]
0000c7b5(3): MOV RSI,RBP
0000c7b8(5): CALL 0x0000aa10
0000c7bd(2): TEST AL,AL
0000c7bf(6): JZ 0x0000c8f0
0000c7c5(4): MOV RAX,qword ptr [R15 + 0x30]
0000c7c9(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
0000c7cf(4): MOVUPS xmmword ptr [RAX + RBX*0x1],XMM0
0000c7d3(5): MOV RDX,qword ptr [RSP + 0x30]
0000c7d8(5): MOV qword ptr [RAX + RBX*0x1 + 0x10],RDX
0000c7dd(5): MOV RBX,qword ptr [RSP + 0x10]
0000c7e2(5): MOV RAX,qword ptr [RSP + 0x30]
0000c7e7(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
0000c7ed(3): MOVAPS xmmword ptr [RBX],XMM0
0000c7f0(4): MOV qword ptr [RBX + 0x10],RAX
0000c7f4(2): XOR EAX,EAX
0000c7f6(5): MOV RSI,qword ptr [RSP + 0x58]
0000c7fb(9): XOR RSI,qword ptr FS:[0x28]
0000c804(6): JNZ 0x0000c8fa
0000c80a(4): ADD RSP,0x68
0000c80e(1): POP RBX
0000c80f(1): POP RBP
0000c810(2): POP R12
0000c812(2): POP R13
0000c814(2): POP R14
0000c816(2): POP R15
0000c818(1): RET
0000c820(4): LEA RAX,[RSI + RBX*0x1]
0000c824(4): ADD R14,0x1
0000c828(5): MOV byte ptr [RSP + 0x1b],0x1
0000c82d(4): CMP qword ptr [RAX + 0x8],R14
0000c831(6): JG 0x0000c736
0000c837(5): LEA RDI,[RSP + 0x20]
0000c83c(3): MOV RSI,RBP
0000c83f(5): CALL 0x0000aa10
0000c844(2): TEST AL,AL
0000c846(6): JZ 0x0000c8f0
0000c84c(5): CMP byte ptr [RSP + 0x1c],0x1
0000c851(4): MOV RAX,qword ptr [R15 + 0x30]
0000c855(4): LEA RDX,[RAX + RBX*0x1]
0000c859(6): JZ 0x0000c7c9
0000c85f(5): CMP byte ptr [RSP + 0x1b],0x0
0000c864(6): JZ 0x0000c7c9
0000c86a(8): MOV qword ptr [RDX + 0x8],0x0
0000c872(5): JMP 0x0000c7dd
0000c880(6): CMP qword ptr [R12 + 0x8],0x0
0000c886(6): JZ 0x0000c7b0
0000c88c(5): MOV RCX,qword ptr [R12 + 0x10]
0000c891(3): MOV RCX,qword ptr [RCX]
0000c894(4): SHL RCX,0x4
0000c898(5): TEST byte ptr [RDX + RCX*0x1 + 0xa],0x4
0000c89d(6): JNZ 0x0000c6e6
0000c8a3(4): SHR R8D,0x8
0000c8a7(3): MOV RCX,RBP
0000c8aa(3): MOV RDX,RBP
0000c8ad(7): AND R8D,0x3ff
0000c8b4(3): MOV RSI,RBP
0000c8b7(3): MOV RDI,R15
0000c8ba(5): CALL 0x0000b960
0000c8bf(2): TEST EAX,EAX
0000c8c1(6): JNZ 0x0000c7f6
0000c8c7(3): MOV RAX,qword ptr [R15]
0000c8ca(3): ADD RAX,R13
0000c8cd(5): JMP 0x0000c6e6
0000c8d8(3): MOV RSI,R15
0000c8db(3): MOV RDI,R12
0000c8de(5): CALL 0x0000c650
0000c8e3(2): TEST EAX,EAX
0000c8e5(6): JZ 0x0000c77a
0000c8eb(5): JMP 0x0000c7f6
0000c8f0(5): MOV EAX,0xc
0000c8f5(5): JMP 0x0000c7f6
0000c8fa(5): CALL 0x00001db0
0000c8ff(1): NOP
0000c900(2): PUSH R15
0000c902(2): PUSH R14
0000c904(3): MOV R14,RDI
0000c907(2): PUSH R13
0000c909(2): PUSH R12
0000c90b(3): MOV R15,RSI
0000c90e(1): PUSH RBP
0000c90f(1): PUSH RBX
0000c910(3): MOV RBP,RDX
0000c913(2): MOV EBX,ECX
0000c915(4): SUB RSP,0x38
0000c919(4): MOV R12,qword ptr [RSI + 0x8]
0000c91d(9): MOV RAX,qword ptr FS:[0x28]
0000c926(5): MOV qword ptr [RSP + 0x28],RAX
0000c92b(2): XOR EAX,EAX
0000c92d(9): MOV qword ptr [RSP + 0x18],0x0
0000c936(8): LEA RDI,[R12*0x8]
0000c93e(5): MOV qword ptr [RSP + 0x10],R12
0000c943(5): CALL 0x00001f20
0000c948(3): TEST RAX,RAX
0000c94b(5): MOV qword ptr [RSP + 0x20],RAX
0000c950(6): JZ 0x0000ca4d
0000c956(3): TEST R12,R12
0000c959(6): JLE 0x0000c9eb
0000c95f(5): LEA R12,[RSP + 0x10]
0000c964(3): XOR R13D,R13D
0000c967(9): NOP word ptr [RAX + RAX*0x1]
0000c970(4): MOV RAX,qword ptr [R15 + 0x10]
0000c974(4): MOV RDX,qword ptr [RAX + R13*0x8]
0000c978(4): MOV RAX,qword ptr [R14 + 0x30]
0000c97c(4): LEA RCX,[RDX + RDX*0x2]
0000c980(4): LEA RSI,[RAX + RCX*0x8]
0000c984(4): MOV R8,qword ptr [RSI + 0x8]
0000c988(3): TEST R8,R8
0000c98b(6): JLE 0x0000ca10
0000c991(4): MOV R10,qword ptr [RSI + 0x10]
0000c995(3): MOV R9,qword ptr [R14]
0000c998(2): XOR ECX,ECX
0000c99a(2): JMP 0x0000c9a9
0000c9a0(4): ADD RCX,0x1
0000c9a4(3): CMP R8,RCX
0000c9a7(2): JZ 0x0000ca10
0000c9a9(4): MOV RDI,qword ptr [R10 + RCX*0x8]
0000c9ad(3): MOV RAX,RDI
0000c9b0(4): SHL RAX,0x4
0000c9b4(3): ADD RAX,R9
0000c9b7(5): MOVZX R11D,byte ptr [RAX + 0x8]
0000c9bc(3): CMP EBX,R11D
0000c9bf(2): JNZ 0x0000c9a0
0000c9c1(3): CMP RBP,qword ptr [RAX]
0000c9c4(2): JNZ 0x0000c9a0
0000c9c6(4): CMP RDI,-0x1
0000c9ca(2): JZ 0x0000ca10
0000c9cc(3): MOV R8D,EBX
0000c9cf(3): MOV RCX,RBP
0000c9d2(3): MOV RSI,R12
0000c9d5(3): MOV RDI,R14
0000c9d8(5): CALL 0x0000bfd0
0000c9dd(2): TEST EAX,EAX
0000c9df(2): JNZ 0x0000ca1c
0000c9e1(4): ADD R13,0x1
0000c9e5(4): CMP qword ptr [R15 + 0x8],R13
0000c9e9(2): JG 0x0000c970
0000c9eb(4): MOV RDI,qword ptr [R15 + 0x10]
0000c9ef(5): CALL 0x00001c60
0000c9f4(5): MOV RAX,qword ptr [RSP + 0x20]
0000c9f9(6): MOVDQA XMM0,xmmword ptr [RSP + 0x10]
0000c9ff(4): MOV qword ptr [R15 + 0x10],RAX
0000ca03(2): XOR EAX,EAX
0000ca05(4): MOVAPS xmmword ptr [R15],XMM0
0000ca09(2): JMP 0x0000ca2e
0000ca10(3): MOV RDI,R12
0000ca13(5): CALL 0x0000c470
0000ca18(2): TEST EAX,EAX
0000ca1a(2): JZ 0x0000c9e1
0000ca1c(5): MOV RDI,qword ptr [RSP + 0x20]
0000ca21(4): MOV dword ptr [RSP + 0xc],EAX
0000ca25(5): CALL 0x00001c60
0000ca2a(4): MOV EAX,dword ptr [RSP + 0xc]
0000ca2e(5): MOV RDX,qword ptr [RSP + 0x28]
0000ca33(9): XOR RDX,qword ptr FS:[0x28]
0000ca3c(2): JNZ 0x0000ca54
0000ca3e(4): ADD RSP,0x38
0000ca42(1): POP RBX
0000ca43(1): POP RBP
0000ca44(2): POP R12
0000ca46(2): POP R13
0000ca48(2): POP R14
0000ca4a(2): POP R15
0000ca4c(1): RET
0000ca4d(5): MOV EAX,0xc
0000ca52(2): JMP 0x0000ca2e
0000ca54(5): CALL 0x00001db0
0000ca59(7): NOP dword ptr [RAX]
0000ca60(4): MOV R9,qword ptr [RSI + 0x8]
0000ca64(2): XOR EAX,EAX
0000ca66(3): TEST R9,R9
0000ca69(6): JZ 0x0000cb28
0000ca6f(4): MOV R11,qword ptr [RDX + 0x8]
0000ca73(3): TEST R11,R11
0000ca76(6): JZ 0x0000cb28
0000ca7c(2): PUSH R13
0000ca7e(2): PUSH R12
0000ca80(4): LEA RAX,[R9 + R11*0x1]
0000ca84(1): PUSH RBP
0000ca85(1): PUSH RBX
0000ca86(3): MOV R12,RDX
0000ca89(3): MOV RBX,RDI
0000ca8c(3): MOV RBP,RSI
0000ca8f(4): SUB RSP,0x8
0000ca93(4): MOV RCX,qword ptr [RDI + 0x8]
0000ca97(3): MOV R13,qword ptr [RDI]
0000ca9a(4): MOV RDI,qword ptr [RDI + 0x10]
0000ca9e(4): LEA RDX,[RAX + RCX*0x1]
0000caa2(3): CMP RDX,R13
0000caa5(6): JG 0x0000cbd0
0000caab(4): LEA RSI,[RCX + R9*0x1]
0000caaf(4): MOV R13,qword ptr [RBP + 0x10]
0000cab3(5): MOV RDX,qword ptr [R12 + 0x10]
0000cab8(4): SUB R9,0x1
0000cabc(4): SUB RCX,0x1
0000cac0(3): ADD RSI,R11
0000cac3(4): SUB R11,0x1
0000cac7(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000cacc(4): MOV R8,qword ptr [RDX + R11*0x8]
0000cad0(3): CMP RAX,R8
0000cad3(2): JZ 0x0000cae6
0000cad5(2): JGE 0x0000cb30
0000cad7(4): SUB R11,0x1
0000cadb(2): JS 0x0000cb40
0000cadd(4): MOV R8,qword ptr [RDX + R11*0x8]
0000cae1(3): CMP RAX,R8
0000cae4(2): JNZ 0x0000cad5
0000cae6(3): TEST RCX,RCX
0000cae9(2): JNS 0x0000cafa
0000caeb(2): JMP 0x0000cb08
0000caf0(4): SUB RCX,0x1
0000caf4(4): CMP RCX,-0x1
0000caf8(2): JZ 0x0000cb08
0000cafa(4): MOV R10,qword ptr [RDI + RCX*0x8]
0000cafe(3): CMP R10,R8
0000cb01(2): JG 0x0000caf0
0000cb03(3): CMP R10,R8
0000cb06(2): JZ 0x0000cb10
0000cb08(4): SUB RSI,0x1
0000cb0c(4): MOV qword ptr [RDI + RSI*0x8],R8
0000cb10(4): SUB R9,0x1
0000cb14(2): JS 0x0000cb40
0000cb16(4): SUB R11,0x1
0000cb1a(2): JS 0x0000cb40
0000cb1c(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000cb21(2): JMP 0x0000cadd
0000cb28(2): RET
0000cb30(4): SUB R9,0x1
0000cb34(2): JS 0x0000cb40
0000cb36(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000cb3b(2): JMP 0x0000cad0
0000cb40(4): MOV RCX,qword ptr [RBX + 0x8]
0000cb44(4): MOV RDX,qword ptr [RBP + 0x8]
0000cb48(3): ADD RDX,RCX
0000cb4b(5): ADD RDX,qword ptr [R12 + 0x8]
0000cb50(4): LEA RAX,[RCX + -0x1]
0000cb54(4): LEA R9,[RDX + -0x1]
0000cb58(3): SUB RDX,RSI
0000cb5b(3): ADD RCX,RDX
0000cb5e(3): TEST RDX,RDX
0000cb61(4): MOV qword ptr [RBX + 0x8],RCX
0000cb65(2): JLE 0x0000cbad
0000cb67(3): TEST RAX,RAX
0000cb6a(2): JS 0x0000cbad
0000cb6c(4): NOP dword ptr [RAX]
0000cb70(4): MOV R8,qword ptr [RDI + R9*0x8]
0000cb74(4): MOV RCX,qword ptr [RDI + RAX*0x8]
0000cb78(4): LEA R10,[RAX + RDX*0x1]
0000cb7c(4): LEA R10,[RDI + R10*0x8]
0000cb80(3): CMP R8,RCX
0000cb83(2): JLE 0x0000cba0
0000cb85(4): SUB R9,0x1
0000cb89(4): SUB RDX,0x1
0000cb8d(3): MOV qword ptr [R10],R8
0000cb90(2): JNZ 0x0000cb70
0000cb92(2): XOR EDX,EDX
0000cb94(2): JMP 0x0000cbb1
0000cba0(4): SUB RAX,0x1
0000cba4(3): MOV qword ptr [R10],RCX
0000cba7(4): CMP RAX,-0x1
0000cbab(2): JNZ 0x0000cb70
0000cbad(4): SHL RDX,0x3
0000cbb1(4): LEA RSI,[RDI + RSI*0x8]
0000cbb5(5): CALL 0x00001ee0
0000cbba(2): XOR EAX,EAX
0000cbbc(4): ADD RSP,0x8
0000cbc0(1): POP RBX
0000cbc1(1): POP RBP
0000cbc2(2): POP R12
0000cbc4(2): POP R13
0000cbc6(1): RET
0000cbd0(3): ADD R13,RAX
0000cbd3(8): LEA RSI,[R13*0x8]
0000cbdb(5): CALL 0x00001f90
0000cbe0(3): TEST RAX,RAX
0000cbe3(3): MOV RDI,RAX
0000cbe6(2): JZ 0x0000cc01
0000cbe8(4): MOV qword ptr [RBX + 0x10],RAX
0000cbec(3): MOV qword ptr [RBX],R13
0000cbef(4): MOV RCX,qword ptr [RBX + 0x8]
0000cbf3(4): MOV R9,qword ptr [RBP + 0x8]
0000cbf7(5): MOV R11,qword ptr [R12 + 0x8]
0000cbfc(5): JMP 0x0000caab
0000cc01(5): MOV EAX,0xc
0000cc06(2): JMP 0x0000cbbc
0000cc10(1): PUSH RBX
0000cc11(3): MOV RBX,RDI
0000cc14(4): SUB RSP,0x20
0000cc18(2): MOV EAX,dword ptr [RSI]
0000cc1a(3): CMP EAX,0xf
0000cc1d(2): JZ 0x0000cc98
0000cc1f(3): MOVSXD R9,EAX
0000cc22(4): LEA R10D,[RAX + 0x1]
0000cc26(3): MOV RDI,qword ptr [RDI]
0000cc29(3): MOV RAX,R9
0000cc2c(4): SHL RAX,0x6
0000cc30(4): ADD RAX,0x8
0000cc34(4): SHL R9,0x6
0000cc38(3): MOV dword ptr [RSI],R10D
0000cc3b(3): ADD RAX,RDI
0000cc3e(4): LEA RSI,[RDI + R9*0x1]
0000cc42(8): MOV qword ptr [RSI + 0x8],0x0
0000cc4a(4): MOV qword ptr [RSI + 0x10],RDX
0000cc4e(4): LEA RDI,[RSI + 0x20]
0000cc52(4): MOV qword ptr [RSI + 0x18],RCX
0000cc56(5): MOVDQU XMM0,xmmword ptr [R8]
0000cc5b(4): MOVUPS xmmword ptr [RSI + 0x30],XMM0
0000cc5f(4): AND byte ptr [RDI + 0x1a],0xf3
0000cc63(3): TEST RDX,RDX
0000cc66(8): MOV qword ptr [RSI + 0x20],0x0
0000cc6e(8): MOV qword ptr [RSI + 0x28],0x0
0000cc76(8): MOV qword ptr [RSI + 0x40],-0x1
0000cc7e(2): JZ 0x0000cc83
0000cc80(3): MOV qword ptr [RDX],RAX
0000cc83(3): TEST RCX,RCX
0000cc86(2): JZ 0x0000cc8b
0000cc88(3): MOV qword ptr [RCX],RAX
0000cc8b(4): ADD RSP,0x20
0000cc8f(1): POP RBX
0000cc90(1): RET
0000cc98(5): MOV EDI,0x3c8
0000cc9d(5): MOV qword ptr [RSP + 0x18],R8
0000cca2(5): MOV qword ptr [RSP + 0x10],RCX
0000cca7(5): MOV qword ptr [RSP + 0x8],RDX
0000ccac(4): MOV qword ptr [RSP],RSI
0000ccb0(5): CALL 0x00001f20
0000ccb5(3): TEST RAX,RAX
0000ccb8(3): MOV RDI,RAX
0000ccbb(2): JZ 0x0000ccec
0000ccbd(3): MOV RAX,qword ptr [RBX]
0000ccc0(6): MOV R10D,0x1
0000ccc6(3): MOV qword ptr [RBX],RDI
0000ccc9(3): XOR R9D,R9D
0000cccc(5): MOV R8,qword ptr [RSP + 0x18]
0000ccd1(5): MOV RCX,qword ptr [RSP + 0x10]
0000ccd6(5): MOV RDX,qword ptr [RSP + 0x8]
0000ccdb(4): MOV RSI,qword ptr [RSP]
0000ccdf(3): MOV qword ptr [RDI],RAX
0000cce2(5): MOV EAX,0x8
0000cce7(5): JMP 0x0000cc34
0000ccec(2): XOR EAX,EAX
0000ccee(2): JMP 0x0000cc8b
0000ccf0(2): PUSH R14
0000ccf2(2): PUSH R13
0000ccf4(4): LEA R13,[RSI + 0x70]
0000ccf8(2): PUSH R12
0000ccfa(1): PUSH RBP
0000ccfb(7): LEA R12,[0x80 + RSI]
0000cd02(1): PUSH RBX
0000cd03(3): MOV RBX,RDI
0000cd06(4): SUB RSP,0x10
0000cd0a(3): MOV RBP,qword ptr [RDI]
0000cd0d(9): MOV RAX,qword ptr FS:[0x28]
0000cd16(5): MOV qword ptr [RSP + 0x8],RAX
0000cd1b(2): XOR EAX,EAX
0000cd1d(3): MOV R14,RSP
0000cd20(4): LEA R8,[RBX + 0x28]
0000cd24(2): XOR ECX,ECX
0000cd26(2): XOR EDX,EDX
0000cd28(3): MOV RSI,R12
0000cd2b(3): MOV RDI,R13
0000cd2e(5): CALL 0x0000cc10
0000cd33(3): TEST RAX,RAX
0000cd36(3): MOV qword ptr [R14],RAX
0000cd39(2): JZ 0x0000cd8c
0000cd3b(3): MOV qword ptr [RAX],RBP
0000cd3e(3): MOV RBP,qword ptr [R14]
0000cd41(4): OR byte ptr [RBP + 0x32],0x4
0000cd45(4): MOV RAX,qword ptr [RBX + 0x8]
0000cd49(3): TEST RAX,RAX
0000cd4c(2): JZ 0x0000cd60
0000cd4e(4): LEA R14,[RBP + 0x8]
0000cd52(3): MOV RBX,RAX
0000cd55(2): JMP 0x0000cd20
0000cd60(2): XOR EDX,EDX
0000cd62(2): JMP 0x0000cd6b
0000cd68(3): MOV RBX,RAX
0000cd6b(4): MOV RAX,qword ptr [RBX + 0x10]
0000cd6f(3): TEST RAX,RAX
0000cd72(2): JZ 0x0000cd79
0000cd74(3): CMP RAX,RDX
0000cd77(2): JNZ 0x0000cdb0
0000cd79(3): MOV RAX,qword ptr [RBX]
0000cd7c(4): MOV RBP,qword ptr [RBP]
0000cd80(3): MOV RDX,RBX
0000cd83(3): TEST RAX,RAX
0000cd86(2): JNZ 0x0000cd68
0000cd88(4): MOV RAX,qword ptr [RSP]
0000cd8c(5): MOV RCX,qword ptr [RSP + 0x8]
0000cd91(9): XOR RCX,qword ptr FS:[0x28]
0000cd9a(2): JNZ 0x0000cdbc
0000cd9c(4): ADD RSP,0x10
0000cda0(1): POP RBX
0000cda1(1): POP RBP
0000cda2(2): POP R12
0000cda4(2): POP R13
0000cda6(2): POP R14
0000cda8(1): RET
0000cdb0(4): LEA R14,[RBP + 0x10]
0000cdb4(3): MOV RBX,RAX
0000cdb7(5): JMP 0x0000cd20
0000cdbc(5): CALL 0x00001db0
0000cdc1(5): NOP dword ptr [RAX + RAX*0x1]
0000cdc6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000cdd0(2): PUSH R15
0000cdd2(2): PUSH R14
0000cdd4(2): PUSH R13
0000cdd6(2): PUSH R12
0000cdd8(3): MOV R13,RDX
0000cddb(1): PUSH RBP
0000cddc(1): PUSH RBX
0000cddd(4): SUB RSP,0x48
0000cde1(3): MOV RBX,qword ptr [RSI]
0000cde4(4): MOV RBP,qword ptr [RDX + 0x8]
0000cde8(9): MOV RAX,qword ptr FS:[0x28]
0000cdf1(5): MOV qword ptr [RSP + 0x38],RAX
0000cdf6(2): XOR EAX,EAX
0000cdf8(4): TEST byte ptr [RSI + 0x38],0x10
0000cdfc(5): MOV qword ptr [RSP + 0x18],RDI
0000ce01(6): JZ 0x0000cf78
0000ce07(3): TEST RBP,RBP
0000ce0a(2): JZ 0x0000ce80
0000ce0c(4): MOV RAX,qword ptr [RDX + 0x28]
0000ce10(4): CMP RAX,0x3f
0000ce14(6): JG 0x0000cf4d
0000ce1a(7): MOV RDX,qword ptr [0xa0 + RBX]
0000ce21(4): BT RDX,RAX
0000ce25(6): JNC 0x0000cf4d
0000ce2b(4): LEA RAX,[RBX + 0x70]
0000ce2f(5): LEA R14,[RSP + 0x20]
0000ce34(4): SUB RBX,-0x80
0000ce38(2): XOR ECX,ECX
0000ce3a(2): XOR EDX,EDX
0000ce3c(3): MOV RSI,RBX
0000ce3f(3): MOV R15,RAX
0000ce42(3): MOV R8,R14
0000ce45(3): MOV RDI,RAX
0000ce48(5): MOV byte ptr [RSP + 0x28],0x8
0000ce4d(5): MOV qword ptr [RSP + 0x8],RAX
0000ce52(5): CALL 0x0000cc10
0000ce57(3): MOV RDI,R15
0000ce5a(3): MOV R8,R14
0000ce5d(2): XOR ECX,ECX
0000ce5f(2): XOR EDX,EDX
0000ce61(3): MOV RSI,RBX
0000ce64(3): MOV R12,RAX
0000ce67(5): MOV byte ptr [RSP + 0x28],0x9
0000ce6c(5): CALL 0x0000cc10
0000ce71(3): MOV R15,RAX
0000ce74(5): JMP 0x0000cfcd
0000ce80(4): LEA RAX,[RBX + 0x70]
0000ce84(5): LEA R14,[RSP + 0x20]
0000ce89(4): SUB RBX,-0x80
0000ce8d(2): XOR ECX,ECX
0000ce8f(2): XOR EDX,EDX
0000ce91(3): MOV RSI,RBX
0000ce94(3): MOV R15,RAX
0000ce97(3): MOV R8,R14
0000ce9a(3): MOV RDI,RAX
0000ce9d(5): MOV byte ptr [RSP + 0x28],0x8
0000cea2(5): MOV qword ptr [RSP + 0x8],RAX
0000cea7(5): CALL 0x0000cc10
0000ceac(3): MOV RDI,R15
0000ceaf(3): MOV R8,R14
0000ceb2(2): XOR ECX,ECX
0000ceb4(2): XOR EDX,EDX
0000ceb6(3): MOV RSI,RBX
0000ceb9(3): MOV R12,RAX
0000cebc(5): MOV byte ptr [RSP + 0x28],0x9
0000cec1(5): CALL 0x0000cc10
0000cec6(3): MOV R11,RAX
0000cec9(3): MOV R15,RAX
0000cecc(5): MOV RDI,qword ptr [RSP + 0x8]
0000ced1(3): MOV R8,R14
0000ced4(3): MOV RCX,R11
0000ced7(3): MOV RDX,R12
0000ceda(3): MOV RSI,RBX
0000cedd(5): MOV byte ptr [RSP + 0x28],0x10
0000cee2(5): MOV qword ptr [RSP + 0x10],R11
0000cee7(5): CALL 0x0000cc10
0000ceec(3): TEST RAX,RAX
0000ceef(3): MOV RBP,RAX
0000cef2(6): JZ 0x0000cff0
0000cef8(5): MOV R11,qword ptr [RSP + 0x10]
0000cefd(3): TEST R11,R11
0000cf00(6): JZ 0x0000cff0
0000cf06(3): TEST R12,R12
0000cf09(6): JZ 0x0000cff0
0000cf0f(3): TEST R15,R15
0000cf12(6): JZ 0x0000cff0
0000cf18(4): MOV RAX,qword ptr [R13 + 0x28]
0000cf1c(4): MOV qword ptr [R15 + 0x28],RAX
0000cf20(5): MOV qword ptr [R12 + 0x28],RAX
0000cf25(5): MOVZX EAX,byte ptr [R13 + 0x32]
0000cf2a(5): MOVZX EDX,byte ptr [R15 + 0x32]
0000cf2f(3): AND EAX,0x8
0000cf32(3): AND EDX,0xfffffff7
0000cf35(2): MOV ECX,EAX
0000cf37(2): OR EDX,ECX
0000cf39(4): MOV byte ptr [R15 + 0x32],DL
0000cf3d(6): MOVZX EAX,byte ptr [R12 + 0x32]
0000cf43(3): AND EAX,0xfffffff7
0000cf46(2): OR EAX,ECX
0000cf48(5): MOV byte ptr [R12 + 0x32],AL
0000cf4d(5): MOV RDI,qword ptr [RSP + 0x38]
0000cf52(9): XOR RDI,qword ptr FS:[0x28]
0000cf5b(3): MOV RAX,RBP
0000cf5e(6): JNZ 0x0000d002
0000cf64(4): ADD RSP,0x48
0000cf68(1): POP RBX
0000cf69(1): POP RBP
0000cf6a(2): POP R12
0000cf6c(2): POP R13
0000cf6e(2): POP R14
0000cf70(2): POP R15
0000cf72(1): RET
0000cf78(4): LEA RAX,[RBX + 0x70]
0000cf7c(5): LEA R14,[RSP + 0x20]
0000cf81(4): SUB RBX,-0x80
0000cf85(2): XOR ECX,ECX
0000cf87(2): XOR EDX,EDX
0000cf89(3): MOV RSI,RBX
0000cf8c(3): MOV R15,RAX
0000cf8f(3): MOV R8,R14
0000cf92(3): MOV RDI,RAX
0000cf95(5): MOV byte ptr [RSP + 0x28],0x8
0000cf9a(5): MOV qword ptr [RSP + 0x8],RAX
0000cf9f(5): CALL 0x0000cc10
0000cfa4(2): XOR ECX,ECX
0000cfa6(2): XOR EDX,EDX
0000cfa8(3): MOV RDI,R15
0000cfab(3): MOV R8,R14
0000cfae(3): MOV RSI,RBX
0000cfb1(3): MOV R12,RAX
0000cfb4(5): MOV byte ptr [RSP + 0x28],0x9
0000cfb9(5): CALL 0x0000cc10
0000cfbe(3): TEST RBP,RBP
0000cfc1(3): MOV R15,RAX
0000cfc4(3): MOV R11,RAX
0000cfc7(6): JZ 0x0000cecc
0000cfcd(5): MOV RDI,qword ptr [RSP + 0x8]
0000cfd2(3): MOV R8,R14
0000cfd5(3): MOV RCX,R15
0000cfd8(3): MOV RDX,RBP
0000cfdb(3): MOV RSI,RBX
0000cfde(5): MOV byte ptr [RSP + 0x28],0x10
0000cfe3(5): CALL 0x0000cc10
0000cfe8(3): MOV R11,RAX
0000cfeb(5): JMP 0x0000cecc
0000cff0(5): MOV RAX,qword ptr [RSP + 0x18]
0000cff5(2): XOR EBP,EBP
0000cff7(6): MOV dword ptr [RAX],0xc
0000cffd(5): JMP 0x0000cf4d
0000d002(5): CALL 0x00001db0
0000d007(9): NOP word ptr [RAX + RAX*0x1]
0000d010(1): PUSH RBP
0000d011(1): PUSH RBX
0000d012(3): MOV RBP,RDI
0000d015(3): MOV RBX,RSI
0000d018(4): SUB RSP,0x18
0000d01c(4): MOV RDX,qword ptr [RSI + 0x8]
0000d020(9): MOV RAX,qword ptr FS:[0x28]
0000d029(5): MOV qword ptr [RSP + 0x8],RAX
0000d02e(2): XOR EAX,EAX
0000d030(8): MOV dword ptr [RSP + 0x4],0x0
0000d038(3): TEST RDX,RDX
0000d03b(2): JZ 0x0000d043
0000d03d(4): CMP byte ptr [RDX + 0x30],0x11
0000d041(2): JZ 0x0000d090
0000d043(4): MOV RDX,qword ptr [RBX + 0x10]
0000d047(3): TEST RDX,RDX
0000d04a(2): JZ 0x0000d052
0000d04c(4): CMP byte ptr [RDX + 0x30],0x11
0000d050(2): JZ 0x0000d070
0000d052(5): MOV RCX,qword ptr [RSP + 0x8]
0000d057(9): XOR RCX,qword ptr FS:[0x28]
0000d060(4): MOV EAX,dword ptr [RSP + 0x4]
0000d064(2): JNZ 0x0000d0ab
0000d066(4): ADD RSP,0x18
0000d06a(1): POP RBX
0000d06b(1): POP RBP
0000d06c(1): RET
0000d070(5): LEA RDI,[RSP + 0x4]
0000d075(3): MOV RSI,RBP
0000d078(5): CALL 0x0000cdd0
0000d07d(3): TEST RAX,RAX
0000d080(4): MOV qword ptr [RBX + 0x10],RAX
0000d084(2): JZ 0x0000d052
0000d086(3): MOV qword ptr [RAX],RBX
0000d089(2): JMP 0x0000d052
0000d090(5): LEA RDI,[RSP + 0x4]
0000d095(3): MOV RSI,RBP
0000d098(5): CALL 0x0000cdd0
0000d09d(3): TEST RAX,RAX
0000d0a0(4): MOV qword ptr [RBX + 0x8],RAX
0000d0a4(2): JZ 0x0000d043
0000d0a6(3): MOV qword ptr [RAX],RBX
0000d0a9(2): JMP 0x0000d043
0000d0ab(5): CALL 0x00001db0
0000d0b0(2): PUSH R12
0000d0b2(1): PUSH RBP
0000d0b3(1): PUSH RBX
0000d0b4(4): MOV RAX,qword ptr [RSI + 0x8]
0000d0b8(4): MOV qword ptr [RDI + 0x8],RAX
0000d0bc(4): MOV R12,qword ptr [RSI + 0x8]
0000d0c0(3): TEST R12,R12
0000d0c3(2): JLE 0x0000d100
0000d0c5(3): MOV RBX,RDI
0000d0c8(3): MOV qword ptr [RDI],RAX
0000d0cb(8): LEA RDI,[RAX*0x8]
0000d0d3(3): MOV RBP,RSI
0000d0d6(5): CALL 0x00001f20
0000d0db(3): TEST RAX,RAX
0000d0de(4): MOV qword ptr [RBX + 0x10],RAX
0000d0e2(2): JZ 0x0000d120
0000d0e4(4): MOV RSI,qword ptr [RBP + 0x10]
0000d0e8(8): LEA RDX,[R12*0x8]
0000d0f0(3): MOV RDI,RAX
0000d0f3(5): CALL 0x00001ee0
0000d0f8(2): XOR EAX,EAX
0000d0fa(1): POP RBX
0000d0fb(1): POP RBP
0000d0fc(2): POP R12
0000d0fe(1): RET
0000d100(4): PXOR XMM0,XMM0
0000d104(8): MOV qword ptr [RDI + 0x10],0x0
0000d10c(2): XOR EAX,EAX
0000d10e(3): MOVUPS xmmword ptr [RDI],XMM0
0000d111(1): POP RBX
0000d112(1): POP RBP
0000d113(2): POP R12
0000d115(1): RET
0000d120(8): MOV qword ptr [RBX + 0x8],0x0
0000d128(7): MOV qword ptr [RBX],0x0
0000d12f(5): MOV EAX,0xc
0000d134(2): JMP 0x0000d0fa
0000d140(3): TEST RSI,RSI
0000d143(2): PUSH R14
0000d145(2): PUSH R13
0000d147(2): PUSH R12
0000d149(1): PUSH RBP
0000d14a(1): PUSH RBX
0000d14b(6): JZ 0x0000d1f5
0000d151(3): TEST RDX,RDX
0000d154(4): MOV R13,qword ptr [RSI + 0x8]
0000d158(6): JZ 0x0000d1f0
0000d15e(3): TEST R13,R13
0000d161(6): JLE 0x0000d1f0
0000d167(4): MOV R14,qword ptr [RDX + 0x8]
0000d16b(3): TEST R14,R14
0000d16e(6): JLE 0x0000d223
0000d174(3): MOV R12,RDI
0000d177(5): LEA RDI,[R13 + R14*0x1]
0000d17c(3): MOV RBX,RDX
0000d17f(3): MOV RBP,RSI
0000d182(4): MOV qword ptr [R12],RDI
0000d186(4): SHL RDI,0x3
0000d18a(5): CALL 0x00001f20
0000d18f(3): TEST RAX,RAX
0000d192(5): MOV qword ptr [R12 + 0x10],RAX
0000d197(6): JZ 0x0000d288
0000d19d(4): MOV R9,qword ptr [RBX + 0x10]
0000d1a1(4): MOV R8,qword ptr [RBP + 0x10]
0000d1a5(2): XOR EBX,EBX
0000d1a7(2): XOR ECX,ECX
0000d1a9(2): XOR ESI,ESI
0000d1ab(2): JMP 0x0000d1ce
0000d1b0(4): SETZ DIL
0000d1b4(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDX
0000d1b9(4): ADD RSI,0x1
0000d1bd(4): MOVZX EDI,DIL
0000d1c1(3): ADD RCX,RDI
0000d1c4(3): CMP R13,RSI
0000d1c7(2): JLE 0x0000d230
0000d1c9(3): CMP R14,RCX
0000d1cc(2): JLE 0x0000d248
0000d1ce(4): MOV RDX,qword ptr [R8 + RSI*0x8]
0000d1d2(4): MOV RDI,qword ptr [R9 + RCX*0x8]
0000d1d6(4): ADD RBX,0x1
0000d1da(3): CMP RDX,RDI
0000d1dd(2): JLE 0x0000d1b0
0000d1df(4): ADD RCX,0x1
0000d1e3(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDI
0000d1e8(2): JMP 0x0000d1c4
0000d1f0(3): TEST R13,R13
0000d1f3(2): JG 0x0000d223
0000d1f5(3): TEST RDX,RDX
0000d1f8(2): JZ 0x0000d201
0000d1fa(5): CMP qword ptr [RDX + 0x8],0x0
0000d1ff(2): JG 0x0000d220
0000d201(4): PXOR XMM0,XMM0
0000d205(8): MOV qword ptr [RDI + 0x10],0x0
0000d20d(2): XOR EAX,EAX
0000d20f(3): MOVAPS xmmword ptr [RDI],XMM0
0000d212(1): POP RBX
0000d213(1): POP RBP
0000d214(2): POP R12
0000d216(2): POP R13
0000d218(2): POP R14
0000d21a(1): RET
0000d220(3): MOV RSI,RDX
0000d223(1): POP RBX
0000d224(1): POP RBP
0000d225(2): POP R12
0000d227(2): POP R13
0000d229(2): POP R14
0000d22b(5): JMP 0x0000d0b0
0000d230(3): CMP R14,RCX
0000d233(2): JG 0x0000d268
0000d235(5): MOV qword ptr [R12 + 0x8],RBX
0000d23a(2): XOR EAX,EAX
0000d23c(1): POP RBX
0000d23d(1): POP RBP
0000d23e(2): POP R12
0000d240(2): POP R13
0000d242(2): POP R14
0000d244(1): RET
0000d248(3): SUB R13,RSI
0000d24b(4): LEA RDI,[RAX + RBX*0x8]
0000d24f(4): LEA RSI,[R8 + RSI*0x8]
0000d253(8): LEA RDX,[R13*0x8]
0000d25b(3): ADD RBX,R13
0000d25e(5): CALL 0x00001ee0
0000d263(2): JMP 0x0000d235
0000d268(3): SUB R14,RCX
0000d26b(4): LEA RDI,[RAX + RBX*0x8]
0000d26f(4): LEA RSI,[R9 + RCX*0x8]
0000d273(8): LEA RDX,[R14*0x8]
0000d27b(3): ADD RBX,R14
0000d27e(5): CALL 0x00001ee0
0000d283(2): JMP 0x0000d235
0000d288(5): MOV EAX,0xc
0000d28d(5): JMP 0x0000d212
0000d2a0(2): PUSH R15
0000d2a2(2): PUSH R14
0000d2a4(2): PUSH R13
0000d2a6(2): PUSH R12
0000d2a8(1): PUSH RBP
0000d2a9(1): PUSH RBX
0000d2aa(4): SUB RSP,0x28
0000d2ae(4): MOV R10,qword ptr [RDX + 0x8]
0000d2b2(3): TEST R10,R10
0000d2b5(6): JZ 0x0000d53f
0000d2bb(3): MOV R8D,ECX
0000d2be(3): TEST R10,R10
0000d2c1(4): LEA R12,[R8 + R10*0x1]
0000d2c5(2): JLE 0x0000d2dc
0000d2c7(4): MOV RAX,qword ptr [RDX + 0x10]
0000d2cb(4): LEA R10,[RAX + R10*0x8]
0000d2cf(1): NOP
0000d2d0(3): ADD R12,qword ptr [RAX]
0000d2d3(4): ADD RAX,0x8
0000d2d7(3): CMP R10,RAX
0000d2da(2): JNZ 0x0000d2d0
0000d2dc(7): MOV RAX,qword ptr [0x88 + RSI]
0000d2e3(3): MOV RBP,RDX
0000d2e6(4): MOV dword ptr [RSP + 0x4],ECX
0000d2ea(3): MOV R13,RSI
0000d2ed(5): MOV qword ptr [RSP + 0x18],RDI
0000d2f2(3): AND RAX,R12
0000d2f5(4): LEA RDX,[RAX + RAX*0x2]
0000d2f9(4): MOV RAX,qword ptr [RSI + 0x40]
0000d2fd(4): LEA RAX,[RAX + RDX*0x8]
0000d301(3): MOV R11,qword ptr [RAX]
0000d304(3): TEST R11,R11
0000d307(2): JLE 0x0000d360
0000d309(4): MOV RBX,qword ptr [RAX + 0x10]
0000d30d(3): XOR R10D,R10D
0000d310(3): MOV R9D,ECX
0000d313(2): JMP 0x0000d321
0000d318(4): ADD R10,0x1
0000d31c(3): CMP R10,R11
0000d31f(2): JZ 0x0000d360
0000d321(4): MOV R14,qword ptr [RBX + R10*0x8]
0000d325(3): CMP qword ptr [R14],R12
0000d328(2): JNZ 0x0000d318
0000d32a(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000d32f(3): AND EAX,0xf
0000d332(3): CMP EAX,R9D
0000d335(2): JNZ 0x0000d318
0000d337(4): MOV RDI,qword ptr [R14 + 0x50]
0000d33b(3): TEST RDI,RDI
0000d33e(2): JZ 0x0000d318
0000d340(3): MOV RSI,RBP
0000d343(5): CALL 0x0000bef0
0000d348(2): TEST AL,AL
0000d34a(2): JZ 0x0000d318
0000d34c(4): ADD RSP,0x28
0000d350(3): MOV RAX,R14
0000d353(1): POP RBX
0000d354(1): POP RBP
0000d355(2): POP R12
0000d357(2): POP R13
0000d359(2): POP R14
0000d35b(2): POP R15
0000d35d(1): RET
0000d360(5): MOV ESI,0x1
0000d365(5): MOV EDI,0x70
0000d36a(5): CALL 0x00001ec0
0000d36f(3): TEST RAX,RAX
0000d372(3): MOV R14,RAX
0000d375(6): JZ 0x0000d4b6
0000d37b(4): LEA RAX,[RAX + 0x8]
0000d37f(3): MOV RSI,RBP
0000d382(3): MOV RDI,RAX
0000d385(3): MOV RBX,RAX
0000d388(5): CALL 0x0000d0b0
0000d38d(2): TEST EAX,EAX
0000d38f(6): JNZ 0x0000d54d
0000d395(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000d39a(5): MOVZX EDX,byte ptr [RSP + 0x4]
0000d39f(4): MOV qword ptr [R14 + 0x50],RBX
0000d3a3(3): AND EDX,0xf
0000d3a6(3): AND EAX,0xfffffff0
0000d3a9(2): OR EAX,EDX
0000d3ab(5): CMP qword ptr [RBP + 0x8],0x0
0000d3b0(4): MOV byte ptr [R14 + 0x68],AL
0000d3b4(6): JLE 0x0000d498
0000d3ba(4): LEA RCX,[R14 + 0x18]
0000d3be(3): XOR R15D,R15D
0000d3c1(5): MOV qword ptr [RSP + 0x10],R12
0000d3c6(3): XOR R10D,R10D
0000d3c9(3): MOV R12,R13
0000d3cc(3): MOV R13,R15
0000d3cf(5): MOV qword ptr [RSP + 0x8],RCX
0000d3d4(3): MOV R15,RBX
0000d3d7(9): NOP word ptr [RAX + RAX*0x1]
0000d3e0(4): MOV RAX,qword ptr [RBP + 0x10]
0000d3e4(4): MOV RAX,qword ptr [RAX + R13*0x8]
0000d3e8(4): SHL RAX,0x4
0000d3ec(4): ADD RAX,qword ptr [R12]
0000d3f0(4): MOVZX ESI,byte ptr [RAX + 0x8]
0000d3f4(3): MOV EBX,dword ptr [RAX + 0x8]
0000d3f7(3): SHR EBX,0x8
0000d3fa(5): AND BX,0x3ff
0000d3ff(3): CMP ESI,0x1
0000d402(3): MOVZX EDI,BX
0000d405(2): JNZ 0x0000d40b
0000d407(2): TEST EDI,EDI
0000d409(2): JZ 0x0000d482
0000d40b(5): MOVZX EDX,byte ptr [R14 + 0x68]
0000d410(4): MOVZX EAX,byte ptr [RAX + 0xa]
0000d414(3): MOV R9D,EDX
0000d417(3): SHR AL,0x4
0000d41a(3): AND EDX,0xffffffdf
0000d41d(4): SHR R9B,0x5
0000d421(3): OR EAX,R9D
0000d424(3): AND EAX,0x1
0000d427(3): SHL EAX,0x5
0000d42a(2): OR EAX,EDX
0000d42c(3): CMP ESI,0x2
0000d42f(4): MOV byte ptr [R14 + 0x68],AL
0000d433(6): JZ 0x0000d500
0000d439(3): CMP ESI,0x4
0000d43c(2): JNZ 0x0000d445
0000d43e(3): OR EAX,0x40
0000d441(4): MOV byte ptr [R14 + 0x68],AL
0000d445(2): TEST EDI,EDI
0000d447(2): JZ 0x0000d482
0000d449(4): CMP R15,qword ptr [R14 + 0x50]
0000d44d(6): JZ 0x0000d510
0000d453(3): TEST BL,0x1
0000d456(2): JZ 0x0000d4d0
0000d458(5): TEST byte ptr [RSP + 0x4],0x1
0000d45d(2): JZ 0x0000d468
0000d45f(3): TEST BL,0x2
0000d462(2): JZ 0x0000d4dc
0000d464(4): NOP dword ptr [RAX]
0000d468(3): MOV RDX,R13
0000d46b(3): SUB RDX,R10
0000d46e(2): JS 0x0000d47e
0000d470(5): MOV RSI,qword ptr [RSP + 0x8]
0000d475(4): LEA RDI,[R14 + 0x10]
0000d479(5): CALL 0x0000c0d0
0000d47e(4): ADD R10,0x1
0000d482(4): ADD R13,0x1
0000d486(4): CMP R13,qword ptr [RBP + 0x8]
0000d48a(6): JL 0x0000d3e0
0000d490(3): MOV R13,R12
0000d493(5): MOV R12,qword ptr [RSP + 0x10]
0000d498(3): MOV RDX,R12
0000d49b(3): MOV RSI,R14
0000d49e(3): MOV RDI,R13
0000d4a1(5): CALL 0x0000ab40
0000d4a6(2): TEST EAX,EAX
0000d4a8(6): JZ 0x0000d34c
0000d4ae(3): MOV RDI,R14
0000d4b1(5): CALL 0x0000bbe0
0000d4b6(5): MOV RAX,qword ptr [RSP + 0x18]
0000d4bb(3): XOR R14D,R14D
0000d4be(6): MOV dword ptr [RAX],0xc
0000d4c4(5): JMP 0x0000d34c
0000d4d0(3): TEST BL,0x2
0000d4d3(2): JZ 0x0000d4dc
0000d4d5(5): TEST byte ptr [RSP + 0x4],0x1
0000d4da(2): JNZ 0x0000d468
0000d4dc(3): TEST BL,0x10
0000d4df(2): JZ 0x0000d4e8
0000d4e1(5): TEST byte ptr [RSP + 0x4],0x2
0000d4e6(2): JZ 0x0000d468
0000d4e8(3): AND EBX,0x40
0000d4eb(2): JZ 0x0000d482
0000d4ed(5): TEST byte ptr [RSP + 0x4],0x4
0000d4f2(2): JNZ 0x0000d482
0000d4f4(5): JMP 0x0000d468
0000d500(3): OR EAX,0x10
0000d503(4): MOV byte ptr [R14 + 0x68],AL
0000d507(5): JMP 0x0000d445
0000d510(5): MOV EDI,0x18
0000d515(5): CALL 0x00001f20
0000d51a(3): TEST RAX,RAX
0000d51d(4): MOV qword ptr [R14 + 0x50],RAX
0000d521(2): JZ 0x0000d4ae
0000d523(3): MOV RSI,RBP
0000d526(3): MOV RDI,RAX
0000d529(5): CALL 0x0000d0b0
0000d52e(2): TEST EAX,EAX
0000d530(2): JNZ 0x0000d4b6
0000d532(5): OR byte ptr [R14 + 0x68],0x80
0000d537(3): XOR R10D,R10D
0000d53a(5): JMP 0x0000d453
0000d53f(6): MOV dword ptr [RDI],0x0
0000d545(3): XOR R14D,R14D
0000d548(5): JMP 0x0000d34c
0000d54d(3): MOV RDI,R14
0000d550(5): CALL 0x00001c60
0000d555(5): JMP 0x0000d4b6
0000d560(2): PUSH R15
0000d562(2): PUSH R14
0000d564(2): PUSH R13
0000d566(2): PUSH R12
0000d568(1): PUSH RBP
0000d569(1): PUSH RBX
0000d56a(4): SUB RSP,0x8
0000d56e(4): MOV RBP,qword ptr [RDX + 0x8]
0000d572(3): TEST RBP,RBP
0000d575(6): JZ 0x0000d750
0000d57b(3): TEST RBP,RBP
0000d57e(2): JLE 0x0000d59c
0000d580(4): MOV RAX,qword ptr [RDX + 0x10]
0000d584(4): LEA RCX,[RAX + RBP*0x8]
0000d588(8): NOP dword ptr [RAX + RAX*0x1]
0000d590(3): ADD RBP,qword ptr [RAX]
0000d593(4): ADD RAX,0x8
0000d597(3): CMP RCX,RAX
0000d59a(2): JNZ 0x0000d590
0000d59c(7): MOV RAX,qword ptr [0x88 + RSI]
0000d5a3(3): MOV R14,RDX
0000d5a6(3): MOV R12,RSI
0000d5a9(3): MOV R13,RDI
0000d5ac(3): AND RAX,RBP
0000d5af(4): LEA RDX,[RAX + RAX*0x2]
0000d5b3(4): MOV RAX,qword ptr [RSI + 0x40]
0000d5b7(4): LEA RAX,[RAX + RDX*0x8]
0000d5bb(3): MOV R10,qword ptr [RAX]
0000d5be(3): TEST R10,R10
0000d5c1(2): JLE 0x0000d5f6
0000d5c3(4): MOV R11,qword ptr [RAX + 0x10]
0000d5c7(3): XOR R9D,R9D
0000d5ca(6): NOP word ptr [RAX + RAX*0x1]
0000d5d0(4): MOV RBX,qword ptr [R11 + R9*0x8]
0000d5d4(3): CMP qword ptr [RBX],RBP
0000d5d7(2): JNZ 0x0000d5ed
0000d5d9(4): LEA RDI,[RBX + 0x8]
0000d5dd(3): MOV RSI,R14
0000d5e0(5): CALL 0x0000bef0
0000d5e5(2): TEST AL,AL
0000d5e7(6): JNZ 0x0000d6ef
0000d5ed(4): ADD R9,0x1
0000d5f1(3): CMP R10,R9
0000d5f4(2): JNZ 0x0000d5d0
0000d5f6(5): MOV ESI,0x1
0000d5fb(5): MOV EDI,0x70
0000d600(5): CALL 0x00001ec0
0000d605(3): TEST RAX,RAX
0000d608(3): MOV RBX,RAX
0000d60b(6): JZ 0x0000d738
0000d611(4): LEA R15,[RAX + 0x8]
0000d615(3): MOV RSI,R14
0000d618(3): MOV RDI,R15
0000d61b(5): CALL 0x0000d0b0
0000d620(2): TEST EAX,EAX
0000d622(6): JNZ 0x0000d730
0000d628(4): MOV RAX,qword ptr [R14 + 0x8]
0000d62c(4): MOV qword ptr [RBX + 0x50],R15
0000d630(3): TEST RAX,RAX
0000d633(6): JLE 0x0000d6dd
0000d639(4): MOV RSI,qword ptr [R14 + 0x10]
0000d63d(4): MOV R8,qword ptr [R12]
0000d641(4): LEA R9,[RSI + RAX*0x8]
0000d645(2): JMP 0x0000d694
0000d650(4): MOVZX ECX,byte ptr [RBX + 0x68]
0000d654(4): MOVZX EDX,byte ptr [RAX + 0xa]
0000d658(3): MOV R10D,ECX
0000d65b(3): SHR DL,0x4
0000d65e(3): AND ECX,0xffffffdf
0000d661(4): SHR R10B,0x5
0000d665(3): OR EDX,R10D
0000d668(3): AND EDX,0x1
0000d66b(3): SHL EDX,0x5
0000d66e(2): OR EDX,ECX
0000d670(3): CMP EDI,0x2
0000d673(3): MOV byte ptr [RBX + 0x68],DL
0000d676(6): JZ 0x0000d708
0000d67c(3): CMP EDI,0x4
0000d67f(6): JNZ 0x0000d718
0000d685(3): OR EDX,0x40
0000d688(3): MOV byte ptr [RBX + 0x68],DL
0000d68b(4): ADD RSI,0x8
0000d68f(3): CMP R9,RSI
0000d692(2): JZ 0x0000d6dd
0000d694(3): MOV RAX,qword ptr [RSI]
0000d697(4): SHL RAX,0x4
0000d69b(3): ADD RAX,R8
0000d69e(4): MOVZX EDI,byte ptr [RAX + 0x8]
0000d6a2(3): CMP EDI,0x1
0000d6a5(2): JNZ 0x0000d650
0000d6a7(7): TEST dword ptr [RAX + 0x8],0x3ff00
0000d6ae(2): JZ 0x0000d68b
0000d6b0(4): MOVZX EDX,byte ptr [RBX + 0x68]
0000d6b4(4): MOVZX EAX,byte ptr [RAX + 0xa]
0000d6b8(2): MOV ECX,EDX
0000d6ba(3): SHR AL,0x4
0000d6bd(3): AND EDX,0xffffffdf
0000d6c0(3): SHR CL,0x5
0000d6c3(2): OR EAX,ECX
0000d6c5(3): AND EAX,0x1
0000d6c8(3): SHL EAX,0x5
0000d6cb(2): OR EAX,EDX
0000d6cd(3): MOV byte ptr [RBX + 0x68],AL
0000d6d0(4): ADD RSI,0x8
0000d6d4(4): OR byte ptr [RBX + 0x68],0x80
0000d6d8(3): CMP R9,RSI
0000d6db(2): JNZ 0x0000d694
0000d6dd(3): MOV RDX,RBP
0000d6e0(3): MOV RSI,RBX
0000d6e3(3): MOV RDI,R12
0000d6e6(5): CALL 0x0000ab40
0000d6eb(2): TEST EAX,EAX
0000d6ed(2): JNZ 0x0000d744
0000d6ef(4): ADD RSP,0x8
0000d6f3(3): MOV RAX,RBX
0000d6f6(1): POP RBX
0000d6f7(1): POP RBP
0000d6f8(2): POP R12
0000d6fa(2): POP R13
0000d6fc(2): POP R14
0000d6fe(2): POP R15
0000d700(1): RET
0000d708(3): OR EDX,0x10
0000d70b(3): MOV byte ptr [RBX + 0x68],DL
0000d70e(5): JMP 0x0000d68b
0000d718(3): CMP EDI,0xc
0000d71b(2): JZ 0x0000d6d0
0000d71d(7): TEST dword ptr [RAX + 0x8],0x3ff00
0000d724(6): JZ 0x0000d68b
0000d72a(2): JMP 0x0000d6d0
0000d730(3): MOV RDI,RBX
0000d733(5): CALL 0x00001c60
0000d738(8): MOV dword ptr [R13],0xc
0000d740(2): XOR EBX,EBX
0000d742(2): JMP 0x0000d6ef
0000d744(3): MOV RDI,RBX
0000d747(5): CALL 0x0000bbe0
0000d74c(2): JMP 0x0000d738
0000d750(6): MOV dword ptr [RDI],0x0
0000d756(2): XOR EBX,EBX
0000d758(2): JMP 0x0000d6ef
0000d760(2): PUSH R15
0000d762(2): PUSH R14
0000d764(2): PUSH R13
0000d766(2): PUSH R12
0000d768(1): PUSH RBP
0000d769(1): PUSH RBX
0000d76a(4): SUB RSP,0x48
0000d76e(9): MOV RAX,qword ptr FS:[0x28]
0000d777(5): MOV qword ptr [RSP + 0x38],RAX
0000d77c(2): XOR EAX,EAX
0000d77e(3): TEST RCX,RCX
0000d781(6): JLE 0x0000d816
0000d787(5): LEA RAX,[RSP + 0x1c]
0000d78c(3): MOV R14,RDI
0000d78f(3): MOV RBX,RSI
0000d792(3): MOV R12,RDX
0000d795(3): MOV RBP,RCX
0000d798(3): XOR R15D,R15D
0000d79b(5): LEA R13,[RSP + 0x20]
0000d7a0(5): MOV qword ptr [RSP + 0x8],RAX
0000d7a5(2): JMP 0x0000d7fc
0000d7b0(3): TEST RDX,RDX
0000d7b3(2): JZ 0x0000d7f3
0000d7b5(4): ADD RDX,0x8
0000d7b9(4): ADD RSI,0x8
0000d7bd(3): MOV RDI,R13
0000d7c0(5): CALL 0x0000d140
0000d7c5(2): TEST EAX,EAX
0000d7c7(4): MOV dword ptr [RSP + 0x1c],EAX
0000d7cb(2): JNZ 0x0000d818
0000d7cd(5): MOV RDI,qword ptr [RSP + 0x8]
0000d7d2(3): MOV RDX,R13
0000d7d5(3): MOV RSI,R14
0000d7d8(5): CALL 0x0000d560
0000d7dd(5): MOV RDI,qword ptr [RSP + 0x30]
0000d7e2(4): MOV qword ptr [RBX + R15*0x8],RAX
0000d7e6(5): CALL 0x00001c60
0000d7eb(4): MOV EAX,dword ptr [RSP + 0x1c]
0000d7ef(2): TEST EAX,EAX
0000d7f1(2): JNZ 0x0000d818
0000d7f3(4): ADD R15,0x1
0000d7f7(3): CMP RBP,R15
0000d7fa(2): JZ 0x0000d816
0000d7fc(4): MOV RSI,qword ptr [RBX + R15*0x8]
0000d800(4): MOV RDX,qword ptr [R12 + R15*0x8]
0000d804(3): TEST RSI,RSI
0000d807(2): JNZ 0x0000d7b0
0000d809(4): MOV qword ptr [RBX + R15*0x8],RDX
0000d80d(4): ADD R15,0x1
0000d811(3): CMP RBP,R15
0000d814(2): JNZ 0x0000d7fc
0000d816(2): XOR EAX,EAX
0000d818(5): MOV RCX,qword ptr [RSP + 0x38]
0000d81d(9): XOR RCX,qword ptr FS:[0x28]
0000d826(2): JNZ 0x0000d837
0000d828(4): ADD RSP,0x48
0000d82c(1): POP RBX
0000d82d(1): POP RBP
0000d82e(2): POP R12
0000d830(2): POP R13
0000d832(2): POP R14
0000d834(2): POP R15
0000d836(1): RET
0000d837(5): CALL 0x00001db0
0000d83c(4): NOP dword ptr [RAX]
0000d840(2): PUSH R15
0000d842(2): PUSH R14
0000d844(2): PUSH R13
0000d846(2): PUSH R12
0000d848(3): MOV R12,RDX
0000d84b(1): PUSH RBP
0000d84c(1): PUSH RBX
0000d84d(3): MOV RBX,RDI
0000d850(3): MOV RBP,RSI
0000d853(2): XOR ESI,ESI
0000d855(4): SUB RSP,0x78
0000d859(7): MOV RDI,qword ptr [0xc8 + RDI]
0000d860(9): MOV RAX,qword ptr FS:[0x28]
0000d869(5): MOV qword ptr [RSP + 0x68],RAX
0000d86e(2): XOR EAX,EAX
0000d870(5): MOV qword ptr [RSP + 0x20],RCX
0000d875(5): MOV dword ptr [RSP + 0x2c],R8D
0000d87a(3): MOV RDX,RDI
0000d87d(3): CMP RSI,RDX
0000d880(2): JGE 0x0000d8d7
0000d882(4): LEA RAX,[RSI + RDX*0x1]
0000d886(7): MOV R8,qword ptr [0xd8 + RBX]
0000d88d(3): MOV RCX,RAX
0000d890(4): SHR RCX,0x3f
0000d894(3): ADD RCX,RAX
0000d897(3): SAR RCX,1
0000d89a(4): LEA RAX,[RCX + RCX*0x4]
0000d89e(5): CMP R12,qword ptr [R8 + RAX*0x8 + 0x8]
0000d8a3(2): JLE 0x0000d8d2
0000d8a5(5): JMP 0x0000d928
0000d8b0(4): LEA RDX,[RSI + RCX*0x1]
0000d8b4(3): MOV RAX,RDX
0000d8b7(4): SHR RAX,0x3f
0000d8bb(3): ADD RAX,RDX
0000d8be(3): SAR RAX,1
0000d8c1(4): LEA RDX,[RAX + RAX*0x4]
0000d8c5(3): MOV R9,RAX
0000d8c8(5): CMP R12,qword ptr [R8 + RDX*0x8 + 0x8]
0000d8cd(2): JG 0x0000d930
0000d8cf(3): MOV RCX,RAX
0000d8d2(3): CMP RSI,RCX
0000d8d5(2): JL 0x0000d8b0
0000d8d7(3): CMP RDI,RSI
0000d8da(2): JLE 0x0000d8fd
0000d8dc(7): MOV RCX,qword ptr [0xd8 + RBX]
0000d8e3(4): LEA RAX,[RSI + RSI*0x4]
0000d8e7(4): SHL RAX,0x3
0000d8eb(5): CMP qword ptr [RCX + RAX*0x1 + 0x8],R12
0000d8f0(5): MOV qword ptr [RSP + 0x30],RAX
0000d8f5(2): JNZ 0x0000d8fd
0000d8f7(4): CMP RSI,-0x1
0000d8fb(2): JNZ 0x0000d940
0000d8fd(2): XOR EAX,EAX
0000d8ff(5): MOV RBX,qword ptr [RSP + 0x68]
0000d904(9): XOR RBX,qword ptr FS:[0x28]
0000d90d(6): JNZ 0x0000dbd9
0000d913(4): ADD RSP,0x78
0000d917(1): POP RBX
0000d918(1): POP RBP
0000d919(2): POP R12
0000d91b(2): POP R13
0000d91d(2): POP R14
0000d91f(2): POP R15
0000d921(1): RET
0000d928(3): MOV R9,RCX
0000d92b(3): MOV RCX,RDX
0000d92e(2): NOP
0000d930(4): LEA RSI,[R9 + 0x1]
0000d934(3): MOV RDX,RCX
0000d937(5): JMP 0x0000d87d
0000d940(4): LEA RAX,[RBP + 0x10]
0000d944(7): MOV R13,qword ptr [0x98 + RBX]
0000d94b(4): MOV qword ptr [RSP],RAX
0000d94f(5): LEA RAX,[RSP + 0x4c]
0000d954(5): MOV qword ptr [RSP + 0x38],RAX
0000d959(5): LEA RAX,[RSP + 0x50]
0000d95e(5): MOV qword ptr [RSP + 0x10],RAX
0000d963(5): MOV RAX,qword ptr [RSP + 0x30]
0000d968(4): LEA R15,[RCX + RAX*0x1]
0000d96c(5): JMP 0x0000da48
0000d978(4): MOV RAX,qword ptr [R13 + 0x18]
0000d97c(4): MOV RCX,qword ptr [RAX + R10*0x8]
0000d980(7): MOV R10,qword ptr [0xb8 + RBX]
0000d987(8): LEA RAX,[R14*0x8]
0000d98f(5): MOV qword ptr [RSP + 0x18],RAX
0000d994(3): ADD R10,RAX
0000d997(5): MOV qword ptr [RSP + 0x8],RCX
0000d99c(3): MOV R9,qword ptr [R10]
0000d99f(3): TEST R9,R9
0000d9a2(6): JZ 0x0000db30
0000d9a8(4): MOV RDI,qword ptr [R9 + 0x10]
0000d9ac(4): LEA RSI,[R9 + 0x18]
0000d9b0(3): MOV RDX,RCX
0000d9b3(5): CALL 0x0000bf50
0000d9b8(3): TEST RAX,RAX
0000d9bb(2): JNZ 0x0000da39
0000d9bd(5): MOV RDI,qword ptr [RSP + 0x10]
0000d9c2(4): LEA RSI,[R9 + 0x8]
0000d9c6(5): CALL 0x0000d0b0
0000d9cb(5): MOV RSI,qword ptr [RSP + 0x8]
0000d9d0(5): MOV RDI,qword ptr [RSP + 0x10]
0000d9d5(4): MOV dword ptr [RSP + 0x4c],EAX
0000d9d9(5): CALL 0x0000aa10
0000d9de(4): MOV EDX,dword ptr [RSP + 0x4c]
0000d9e2(2): TEST EDX,EDX
0000d9e4(6): JNZ 0x0000db86
0000d9ea(2): CMP AL,0x1
0000d9ec(6): JNZ 0x0000db86
0000d9f2(5): MOV R10,qword ptr [RSP + 0x18]
0000d9f7(7): ADD R10,qword ptr [0xb8 + RBX]
0000d9fe(5): MOV RDX,qword ptr [RSP + 0x10]
0000da03(5): MOV RDI,qword ptr [RSP + 0x38]
0000da08(3): MOV RSI,R13
0000da0b(5): MOV qword ptr [RSP + 0x8],R10
0000da10(5): CALL 0x0000d560
0000da15(5): MOV R10,qword ptr [RSP + 0x8]
0000da1a(5): MOV RDI,qword ptr [RSP + 0x60]
0000da1f(3): MOV qword ptr [R10],RAX
0000da22(5): CALL 0x00001c60
0000da27(7): MOV RAX,qword ptr [0xb8 + RBX]
0000da2e(5): CMP qword ptr [RAX + R14*0x8],0x0
0000da33(6): JZ 0x0000db75
0000da39(4): ADD R15,0x28
0000da3d(5): CMP byte ptr [R15 + -0x8],0x0
0000da42(6): JZ 0x0000d8fd
0000da48(3): MOV R10,qword ptr [R15]
0000da4b(4): MOV R9,qword ptr [RBP + 0x8]
0000da4f(4): MOV RSI,qword ptr [RSP]
0000da53(3): MOV RDX,R10
0000da56(3): MOV RDI,R9
0000da59(5): CALL 0x0000bf50
0000da5e(3): TEST RAX,RAX
0000da61(2): JZ 0x0000da39
0000da63(4): MOV R8,qword ptr [R15 + 0x18]
0000da67(3): ADD R8,R12
0000da6a(3): MOV R14,R8
0000da6d(4): SUB R14,qword ptr [R15 + 0x10]
0000da71(3): CMP R12,R14
0000da74(6): JNZ 0x0000d978
0000da7a(4): MOV RCX,qword ptr [R13 + 0x28]
0000da7e(4): LEA RAX,[R10 + R10*0x2]
0000da82(4): MOV RSI,qword ptr [RSP]
0000da86(3): MOV RDI,R9
0000da89(4): LEA RAX,[RCX + RAX*0x8]
0000da8d(4): MOV RAX,qword ptr [RAX + 0x10]
0000da91(3): MOV R14,qword ptr [RAX]
0000da94(3): MOV RDX,R14
0000da97(5): CALL 0x0000bf50
0000da9c(3): TEST RAX,RAX
0000da9f(2): JNZ 0x0000da39
0000daa1(5): MOV EDI,0x8
0000daa6(9): MOV qword ptr [RSP + 0x50],0x1
0000daaf(9): MOV qword ptr [RSP + 0x58],0x1
0000dab8(5): CALL 0x00001f20
0000dabd(3): TEST RAX,RAX
0000dac0(5): MOV qword ptr [RSP + 0x60],RAX
0000dac5(6): JZ 0x0000dbbd
0000dacb(3): MOV qword ptr [RAX],R14
0000dace(2): XOR EAX,EAX
0000dad0(5): MOV R15,qword ptr [RSP + 0x10]
0000dad5(5): MOV RDX,qword ptr [RSP + 0x20]
0000dada(3): MOV RDI,R13
0000dadd(4): MOV ECX,dword ptr [RSP + 0x2c]
0000dae1(4): MOV dword ptr [RSP + 0x4c],EAX
0000dae5(3): MOV RSI,R15
0000dae8(5): CALL 0x0000c900
0000daed(3): MOV RSI,R15
0000daf0(3): MOV RDI,RBP
0000daf3(3): MOV R14D,EAX
0000daf6(5): CALL 0x0000c470
0000dafb(5): MOV RDI,qword ptr [RSP + 0x60]
0000db00(3): MOV R15D,EAX
0000db03(5): CALL 0x00001c60
0000db08(4): MOV EAX,dword ptr [RSP + 0x4c]
0000db0c(3): MOV EDX,R14D
0000db0f(3): OR EDX,R15D
0000db12(2): OR EDX,EAX
0000db14(6): JNZ 0x0000dba6
0000db1a(7): MOV RCX,qword ptr [0xd8 + RBX]
0000db21(5): JMP 0x0000d963
0000db30(5): MOV EDI,0x8
0000db35(5): MOV qword ptr [RSP + 0x18],R10
0000db3a(9): MOV qword ptr [RSP + 0x50],0x1
0000db43(9): MOV qword ptr [RSP + 0x58],0x1
0000db4c(5): CALL 0x00001f20
0000db51(3): TEST RAX,RAX
0000db54(5): MOV qword ptr [RSP + 0x60],RAX
0000db59(2): JZ 0x0000db9c
0000db5b(5): MOV RDI,qword ptr [RSP + 0x8]
0000db60(8): MOV dword ptr [RSP + 0x4c],0x0
0000db68(5): MOV R10,qword ptr [RSP + 0x18]
0000db6d(3): MOV qword ptr [RAX],RDI
0000db70(5): JMP 0x0000d9fe
0000db75(4): MOV EAX,dword ptr [RSP + 0x4c]
0000db79(2): TEST EAX,EAX
0000db7b(6): JZ 0x0000da39
0000db81(5): JMP 0x0000d8ff
0000db86(5): MOV RDI,qword ptr [RSP + 0x60]
0000db8b(5): CALL 0x00001c60
0000db90(4): MOV EAX,dword ptr [RSP + 0x4c]
0000db94(2): TEST EAX,EAX
0000db96(6): JNZ 0x0000d8ff
0000db9c(5): MOV EAX,0xc
0000dba1(5): JMP 0x0000d8ff
0000dba6(2): TEST EAX,EAX
0000dba8(6): JNZ 0x0000d8ff
0000dbae(3): TEST R14D,R14D
0000dbb1(3): MOV EAX,R14D
0000dbb4(4): CMOVZ EAX,R15D
0000dbb8(5): JMP 0x0000d8ff
0000dbbd(9): MOV qword ptr [RSP + 0x58],0x0
0000dbc6(9): MOV qword ptr [RSP + 0x50],0x0
0000dbcf(5): MOV EAX,0xc
0000dbd4(5): JMP 0x0000dad0
0000dbd9(5): CALL 0x00001db0
0000dbde(2): NOP
0000dbe0(2): PUSH R15
0000dbe2(2): PUSH R14
0000dbe4(2): PUSH R13
0000dbe6(2): PUSH R12
0000dbe8(1): PUSH RBP
0000dbe9(1): PUSH RBX
0000dbea(4): SUB RSP,0x28
0000dbee(4): CMP qword ptr [RSI],0x0
0000dbf2(7): MOV R13,qword ptr [0x98 + RDI]
0000dbf9(6): JLE 0x0000dcc0
0000dbff(3): MOV R14,RDX
0000dc02(3): MOV R12,RSI
0000dc05(3): MOV R15,RDI
0000dc08(2): XOR EBX,EBX
0000dc0a(2): JMP 0x0000dc1e
0000dc10(4): ADD RBX,0x1
0000dc14(4): CMP RBX,qword ptr [R12]
0000dc18(6): JGE 0x0000dcc0
0000dc1e(3): MOV RAX,qword ptr [R14]
0000dc21(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000dc25(3): MOV RAX,RBP
0000dc28(4): SHL RAX,0x4
0000dc2c(4): ADD RAX,qword ptr [R13]
0000dc30(4): CMP byte ptr [RAX + 0x8],0x8
0000dc34(2): JNZ 0x0000dc10
0000dc36(3): MOV RAX,qword ptr [RAX]
0000dc39(4): CMP RAX,0x3f
0000dc3d(2): JG 0x0000dc10
0000dc3f(7): MOV RSI,qword ptr [0xa0 + R13]
0000dc46(4): BT RSI,RAX
0000dc4a(2): JNC 0x0000dc10
0000dc4c(7): MOV R8,qword ptr [0xe8 + R15]
0000dc53(7): CMP R8,qword ptr [0xf0 + R15]
0000dc5a(7): MOV R9,qword ptr [0xf8 + R15]
0000dc61(2): JZ 0x0000dcd8
0000dc63(5): MOV ESI,0x30
0000dc68(5): MOV EDI,0x1
0000dc6d(5): MOV qword ptr [RSP + 0x10],R9
0000dc72(5): MOV qword ptr [RSP + 0x8],R8
0000dc77(5): MOV qword ptr [RSP + 0x18],RCX
0000dc7c(5): CALL 0x00001ec0
0000dc81(5): MOV R8,qword ptr [RSP + 0x8]
0000dc86(5): MOV R9,qword ptr [RSP + 0x10]
0000dc8b(3): TEST RAX,RAX
0000dc8e(4): MOV qword ptr [R9 + R8*0x8],RAX
0000dc92(2): JZ 0x0000dcd1
0000dc94(4): ADD R8,0x1
0000dc98(4): ADD RBX,0x1
0000dc9c(5): MOV RCX,qword ptr [RSP + 0x18]
0000dca1(7): MOV qword ptr [0xe8 + R15],R8
0000dca8(4): CMP RBX,qword ptr [R12]
0000dcac(4): MOV qword ptr [RAX + 0x8],RBP
0000dcb0(3): MOV qword ptr [RAX],RCX
0000dcb3(6): JL 0x0000dc1e
0000dcb9(7): NOP dword ptr [RAX]
0000dcc0(2): XOR EAX,EAX
0000dcc2(4): ADD RSP,0x28
0000dcc6(1): POP RBX
0000dcc7(1): POP RBP
0000dcc8(2): POP R12
0000dcca(2): POP R13
0000dccc(2): POP R14
0000dcce(2): POP R15
0000dcd0(1): RET
0000dcd1(5): MOV EAX,0xc
0000dcd6(2): JMP 0x0000dcc2
0000dcd8(4): LEA RAX,[R8 + R8*0x1]
0000dcdc(3): MOV RSI,R8
0000dcdf(3): MOV RDI,R9
0000dce2(4): SHL RSI,0x4
0000dce6(5): MOV qword ptr [RSP + 0x8],RCX
0000dceb(5): MOV qword ptr [RSP + 0x10],RAX
0000dcf0(5): CALL 0x00001f90
0000dcf5(3): TEST RAX,RAX
0000dcf8(3): MOV R9,RAX
0000dcfb(5): MOV RCX,qword ptr [RSP + 0x8]
0000dd00(2): JZ 0x0000dcd1
0000dd02(7): MOV qword ptr [0xf8 + R15],RAX
0000dd09(5): MOV RAX,qword ptr [RSP + 0x10]
0000dd0e(7): MOV R8,qword ptr [0xe8 + R15]
0000dd15(7): MOV qword ptr [0xf0 + R15],RAX
0000dd1c(5): JMP 0x0000dc63
0000dd30(1): PUSH RBP
0000dd31(1): PUSH RBX
0000dd32(3): MOV RBP,RDI
0000dd35(4): SUB RSP,0x8
0000dd39(3): TEST RSI,RSI
0000dd3c(2): JS 0x0000dd90
0000dd3e(4): CMP qword ptr [RDI + 0x58],RSI
0000dd42(6): JZ 0x0000dde8
0000dd48(7): CMP dword ptr [0x90 + RDI],0x1
0000dd4f(2): JLE 0x0000dda0
0000dd51(4): MOV RAX,qword ptr [RDI + 0x10]
0000dd55(2): JMP 0x0000dd6a
0000dd60(4): SUB RSI,0x1
0000dd64(4): CMP RSI,-0x1
0000dd68(2): JZ 0x0000dd90
0000dd6a(3): MOV EBX,dword ptr [RAX + RSI*0x4]
0000dd6d(3): CMP EBX,-0x1
0000dd70(2): JZ 0x0000dd60
0000dd72(7): CMP byte ptr [0x8e + RBP],0x0
0000dd79(2): JNZ 0x0000ddf8
0000dd7b(2): XOR EAX,EAX
0000dd7d(3): CMP EBX,0xa
0000dd80(2): JZ 0x0000ddcc
0000dd82(4): ADD RSP,0x8
0000dd86(1): POP RBX
0000dd87(1): POP RBP
0000dd88(1): RET
0000dd90(3): MOV EAX,dword ptr [RBP + 0x70]
0000dd93(4): ADD RSP,0x8
0000dd97(1): POP RBX
0000dd98(1): POP RBP
0000dd99(1): RET
0000dda0(4): MOV RAX,qword ptr [RDI + 0x8]
0000dda4(7): MOV RCX,qword ptr [0x80 + RDI]
0000ddab(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
0000ddaf(3): MOV RDX,RAX
0000ddb2(4): SAR RAX,0x6
0000ddb6(4): MOV RCX,qword ptr [RCX + RAX*0x8]
0000ddba(5): MOV EAX,0x1
0000ddbf(4): BT RCX,RDX
0000ddc3(2): JC 0x0000dd82
0000ddc5(2): XOR EAX,EAX
0000ddc7(3): CMP DL,0xa
0000ddca(2): JNZ 0x0000dd82
0000ddcc(2): XOR EAX,EAX
0000ddce(7): CMP byte ptr [0x8d + RBP],0x0
0000ddd5(3): SETNZ AL
0000ddd8(4): ADD RSP,0x8
0000dddc(2): ADD EAX,EAX
0000ddde(1): POP RBX
0000dddf(1): POP RBP
0000dde0(1): RET
0000dde8(3): AND EDX,0x2
0000ddeb(3): CMP EDX,0x1
0000ddee(2): SBB EAX,EAX
0000ddf0(3): AND EAX,0x2
0000ddf3(3): ADD EAX,0x8
0000ddf6(2): JMP 0x0000dd82
0000ddf8(2): MOV EDI,EBX
0000ddfa(5): CALL 0x00001f10
0000ddff(2): TEST EAX,EAX
0000de01(2): JNZ 0x0000de0c
0000de03(3): CMP EBX,0x5f
0000de06(6): JNZ 0x0000dd7b
0000de0c(5): MOV EAX,0x1
0000de11(5): JMP 0x0000dd82
0000de20(4): MOV RAX,qword ptr [RDI + 0x8]
0000de24(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
0000de28(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000de2c(2): CMP AL,0x3
0000de2e(6): JZ 0x0000dee8
0000de34(6): JBE 0x0000ded0
0000de3a(2): CMP AL,0x5
0000de3c(2): JZ 0x0000de50
0000de3e(2): CMP AL,0x7
0000de40(6): JNZ 0x0000dee0
0000de46(2): XOR EAX,EAX
0000de48(2): TEST CL,CL
0000de4a(6): JS 0x0000deda
0000de50(3): CMP CL,0xa
0000de53(6): JZ 0x0000df18
0000de59(2): TEST CL,CL
0000de5b(2): JNZ 0x0000de70
0000de5d(7): MOV RCX,qword ptr [0x98 + RDI]
0000de64(2): XOR EAX,EAX
0000de66(7): TEST byte ptr [0xd8 + RCX],0x80
0000de6d(2): JNZ 0x0000deda
0000de6f(1): NOP
0000de70(1): PUSH RBX
0000de71(3): MOV EBX,dword ptr [RSI + 0x8]
0000de74(5): MOV EAX,0x1
0000de79(6): TEST EBX,0x3ff00
0000de7f(2): JZ 0x0000decc
0000de81(3): MOV RSI,RDX
0000de84(6): MOV EDX,dword ptr [0xa0 + RDI]
0000de8a(3): SHR EBX,0x8
0000de8d(5): CALL 0x0000dd30
0000de92(2): MOV ECX,EBX
0000de94(2): MOV EDX,EAX
0000de96(5): AND CX,0x3ff
0000de9b(3): TEST BL,0x4
0000de9e(2): JZ 0x0000df08
0000dea0(2): XOR EAX,EAX
0000dea2(3): TEST DL,0x1
0000dea5(2): JZ 0x0000decc
0000dea7(3): AND EBX,0x8
0000deaa(2): JNZ 0x0000decc
0000deac(3): TEST CL,0x20
0000deaf(2): JZ 0x0000deb8
0000deb1(2): XOR EAX,EAX
0000deb3(3): TEST DL,0x2
0000deb6(2): JZ 0x0000decc
0000deb8(3): SHR EDX,0x3
0000debb(5): MOV EAX,0x1
0000dec0(3): AND EDX,0x1
0000dec3(6): AND ECX,0x80
0000dec9(3): CMOVNZ EAX,EDX
0000decc(1): POP RBX
0000decd(1): RET
0000ded0(2): CMP AL,0x1
0000ded2(2): JNZ 0x0000dee0
0000ded4(2): XOR EAX,EAX
0000ded6(2): CMP byte ptr [RSI],CL
0000ded8(2): JZ 0x0000de70
0000deda(2): RET
0000dee0(2): XOR EAX,EAX
0000dee2(1): RET
0000dee8(3): MOV R8,qword ptr [RSI]
0000deeb(3): MOVZX EAX,CL
0000deee(4): SAR RAX,0x6
0000def2(4): MOV R8,qword ptr [R8 + RAX*0x8]
0000def6(2): XOR EAX,EAX
0000def8(4): BT RAX,RCX
0000defc(6): JC 0x0000de70
0000df02(2): RET
0000df08(3): AND EBX,0x8
0000df0b(2): JZ 0x0000deac
0000df0d(2): TEST AL,0x1
0000df0f(2): JZ 0x0000deac
0000df11(2): XOR EAX,EAX
0000df13(1): POP RBX
0000df14(1): RET
0000df18(7): MOV RCX,qword ptr [0x98 + RDI]
0000df1f(2): XOR EAX,EAX
0000df21(7): TEST byte ptr [0xd8 + RCX],0x40
0000df28(6): JNZ 0x0000de70
0000df2e(2): RET
0000df30(2): PUSH R12
0000df32(3): MOV R12,RDX
0000df35(1): PUSH RBP
0000df36(1): PUSH RBX
0000df37(6): MOV EDX,dword ptr [0xa0 + RDI]
0000df3d(3): MOV RBX,RSI
0000df40(3): MOV RSI,RCX
0000df43(3): MOV RBP,RDI
0000df46(5): CALL 0x0000dd30
0000df4b(3): TEST RBX,RBX
0000df4e(6): JLE 0x0000dff8
0000df54(7): MOV RDX,qword ptr [0x98 + RBP]
0000df5b(3): MOV R11D,EAX
0000df5e(2): MOV EBP,EAX
0000df60(3): AND EAX,0x1
0000df63(4): MOV R9,qword ptr [R12]
0000df67(2): XOR ESI,ESI
0000df69(3): AND EBP,0x8
0000df6c(4): AND R11D,0x2
0000df70(3): MOV R10D,EAX
0000df73(3): MOV R8,qword ptr [RDX]
0000df76(2): JMP 0x0000df89
0000df80(4): ADD RSI,0x1
0000df84(3): CMP RSI,RBX
0000df87(2): JZ 0x0000dff8
0000df89(4): MOV RAX,qword ptr [R9 + RSI*0x8]
0000df8d(3): MOV RDX,RAX
0000df90(4): SHL RDX,0x4
0000df94(3): ADD RDX,R8
0000df97(3): MOV ECX,dword ptr [RDX + 0x8]
0000df9a(3): SHR ECX,0x8
0000df9d(2): MOV EDI,ECX
0000df9f(5): AND DI,0x3ff
0000dfa4(4): CMP byte ptr [RDX + 0x8],0x2
0000dfa8(2): JNZ 0x0000df80
0000dfaa(3): TEST DI,DI
0000dfad(2): JZ 0x0000dfd5
0000dfaf(3): TEST CL,0x4
0000dfb2(2): JZ 0x0000dfe0
0000dfb4(3): TEST R10D,R10D
0000dfb7(2): JZ 0x0000df80
0000dfb9(3): AND ECX,0x8
0000dfbc(2): JNZ 0x0000df80
0000dfbe(4): TEST DIL,0x20
0000dfc2(2): JZ 0x0000dfc9
0000dfc4(3): TEST R11D,R11D
0000dfc7(2): JZ 0x0000df80
0000dfc9(6): AND EDI,0x80
0000dfcf(2): JZ 0x0000dfd5
0000dfd1(2): TEST EBP,EBP
0000dfd3(2): JZ 0x0000df80
0000dfd5(1): POP RBX
0000dfd6(1): POP RBP
0000dfd7(2): POP R12
0000dfd9(1): RET
0000dfe0(3): AND ECX,0x8
0000dfe3(2): JZ 0x0000dfbe
0000dfe5(3): TEST R10D,R10D
0000dfe8(2): JNZ 0x0000df80
0000dfea(4): TEST DIL,0x20
0000dfee(2): JZ 0x0000dfc9
0000dff0(2): JMP 0x0000dfc4
0000dff8(1): POP RBX
0000dff9(2): XOR EAX,EAX
0000dffb(1): POP RBP
0000dffc(2): POP R12
0000dffe(1): RET
0000e000(2): PUSH R15
0000e002(2): PUSH R14
0000e004(3): MOV R15,RSI
0000e007(2): PUSH R13
0000e009(2): PUSH R12
0000e00b(3): MOV R10D,EDX
0000e00e(1): PUSH RBP
0000e00f(1): PUSH RBX
0000e010(3): MOV RBP,RSI
0000e013(3): MOV RBX,RDI
0000e016(4): SUB RSP,0x48
0000e01a(9): MOV RAX,qword ptr FS:[0x28]
0000e023(5): MOV qword ptr [RSP + 0x38],RAX
0000e028(2): XOR EAX,EAX
0000e02a(4): MOV RAX,qword ptr [RDI + 0x28]
0000e02e(3): SUB RBP,RAX
0000e031(3): CMP RAX,RSI
0000e034(2): JLE 0x0000e096
0000e036(7): CMP dword ptr [0x90 + RDI],0x1
0000e03d(6): JG 0x0000e170
0000e043(4): MOV RAX,qword ptr [RBX + 0x50]
0000e047(8): MOV qword ptr [RBX + 0x30],0x0
0000e04f(3): MOV RBP,R15
0000e052(8): MOV qword ptr [RBX + 0x28],0x0
0000e05a(8): MOV qword ptr [RBX + 0x38],0x0
0000e062(7): MOV byte ptr [0x8c + RBX],0x0
0000e069(4): MOV qword ptr [RBX + 0x58],RAX
0000e06d(4): MOV RAX,qword ptr [RBX + 0x60]
0000e071(4): MOV qword ptr [RBX + 0x68],RAX
0000e075(3): MOV EAX,R10D
0000e078(3): AND EAX,0x1
0000e07b(3): CMP EAX,0x1
0000e07e(2): SBB EAX,EAX
0000e080(3): AND EAX,0x2
0000e083(3): ADD EAX,0x4
0000e086(7): CMP byte ptr [0x8b + RBX],0x0
0000e08d(3): MOV dword ptr [RBX + 0x70],EAX
0000e090(6): JZ 0x0000e160
0000e096(3): TEST RBP,RBP
0000e099(2): JZ 0x0000e0fe
0000e09b(4): MOV RAX,qword ptr [RBX + 0x38]
0000e09f(7): MOVZX EDX,byte ptr [0x8c + RBX]
0000e0a6(4): MOV R8,qword ptr [RBX + 0x30]
0000e0aa(3): CMP RAX,RBP
0000e0ad(6): JLE 0x0000e1d0
0000e0b3(2): TEST DL,DL
0000e0b5(6): JNZ 0x0000e2c8
0000e0bb(4): LEA RSI,[RBP + -0x1]
0000e0bf(3): MOV EDX,R10D
0000e0c2(3): MOV RDI,RBX
0000e0c5(4): MOV qword ptr [RSP],R8
0000e0c9(5): CALL 0x0000dd30
0000e0ce(4): MOV R8,qword ptr [RSP]
0000e0d2(3): MOV dword ptr [RBX + 0x70],EAX
0000e0d5(3): SUB R8,RBP
0000e0d8(7): CMP dword ptr [0x90 + RBX],0x1
0000e0df(6): JG 0x0000e180
0000e0e5(7): CMP byte ptr [0x8b + RBX],0x0
0000e0ec(6): JNZ 0x0000e490
0000e0f2(4): SUB qword ptr [RBX + 0x38],RBP
0000e0f6(4): MOV qword ptr [RBX + 0x30],R8
0000e0fa(4): ADD qword ptr [RBX + 0x8],RBP
0000e0fe(4): MOV RAX,qword ptr [RBX + 0x58]
0000e102(4): SUB qword ptr [RBX + 0x68],RBP
0000e106(4): MOV qword ptr [RBX + 0x28],R15
0000e10a(3): SUB RAX,RBP
0000e10d(7): CMP dword ptr [0x90 + RBX],0x1
0000e114(4): MOV qword ptr [RBX + 0x58],RAX
0000e118(6): JLE 0x0000e1b8
0000e11e(7): CMP byte ptr [0x88 + RBX],0x0
0000e125(3): MOV RDI,RBX
0000e128(2): JZ 0x0000e1a8
0000e12a(5): CALL 0x0000ae70
0000e12f(2): TEST EAX,EAX
0000e131(2): JNZ 0x0000e13d
0000e133(8): MOV qword ptr [RBX + 0x48],0x0
0000e13b(2): XOR EAX,EAX
0000e13d(5): MOV RCX,qword ptr [RSP + 0x38]
0000e142(9): XOR RCX,qword ptr FS:[0x28]
0000e14b(6): JNZ 0x0000e79a
0000e151(4): ADD RSP,0x48
0000e155(1): POP RBX
0000e156(1): POP RBP
0000e157(2): POP R12
0000e159(2): POP R13
0000e15b(2): POP R14
0000e15d(2): POP R15
0000e15f(1): RET
0000e160(3): MOV RAX,qword ptr [RBX]
0000e163(4): MOV qword ptr [RBX + 0x8],RAX
0000e167(5): JMP 0x0000e096
0000e170(8): MOV qword ptr [RDI + 0x20],0x0
0000e178(5): JMP 0x0000e043
0000e180(4): MOV RDI,qword ptr [RBX + 0x10]
0000e184(8): LEA RDX,[R8*0x4]
0000e18c(4): LEA RSI,[RDI + RBP*0x4]
0000e190(5): CALL 0x00001ff0
0000e195(4): MOV R8,qword ptr [RBX + 0x30]
0000e199(3): SUB R8,RBP
0000e19c(5): JMP 0x0000e0e5
0000e1a8(5): CALL 0x0000aca0
0000e1ad(5): JMP 0x0000e133
0000e1b8(7): CMP byte ptr [0x8b + RBX],0x0
0000e1bf(6): JNZ 0x0000e570
0000e1c5(4): MOV qword ptr [RBX + 0x30],RAX
0000e1c9(5): JMP 0x0000e133
0000e1d0(2): TEST DL,DL
0000e1d2(6): JNZ 0x0000e67d
0000e1d8(7): MOVSXD RDX,dword ptr [0x90 + RBX]
0000e1df(8): MOV qword ptr [RBX + 0x30],0x0
0000e1e7(4): MOV R11,qword ptr [RBX + 0x28]
0000e1eb(3): CMP EDX,0x1
0000e1ee(6): JLE 0x0000e5d8
0000e1f4(7): CMP byte ptr [0x89 + RBX],0x0
0000e1fb(6): JNZ 0x0000e4b8
0000e201(4): LEA R14,[R11 + RAX*0x1]
0000e205(3): CMP R15,R14
0000e208(6): JLE 0x0000e64f
0000e20e(4): LEA RAX,[RBX + 0x20]
0000e212(5): LEA R13,[RSP + 0x24]
0000e217(5): MOV qword ptr [RSP + 0x10],RAX
0000e21c(4): NOP dword ptr [RAX]
0000e220(4): MOV R12,qword ptr [RBX + 0x50]
0000e224(3): MOV RSI,qword ptr [RBX]
0000e227(3): MOV RDI,R13
0000e22a(4): MOV RAX,qword ptr [RBX + 0x20]
0000e22e(5): MOV RCX,qword ptr [RSP + 0x10]
0000e233(5): MOV dword ptr [RSP + 0xc],R10D
0000e238(4): MOV qword ptr [RSP],R8
0000e23c(3): SUB R12,R14
0000e23f(3): ADD RSI,R14
0000e242(3): MOV RDX,R12
0000e245(5): MOV qword ptr [RSP + 0x18],RAX
0000e24a(5): CALL 0x0000a3b0
0000e24f(4): LEA RCX,[RAX + -0x1]
0000e253(4): MOV EDX,dword ptr [RSP + 0x24]
0000e257(4): MOV R8,qword ptr [RSP]
0000e25b(5): MOV R10D,dword ptr [RSP + 0xc]
0000e260(4): CMP RCX,-0x4
0000e264(6): JA 0x0000e6a5
0000e26a(3): ADD R14,RAX
0000e26d(3): CMP R15,R14
0000e270(2): JG 0x0000e220
0000e272(3): SUB R14,R15
0000e275(3): CMP EDX,-0x1
0000e278(3): MOV R12,R14
0000e27b(4): MOV qword ptr [RBX + 0x30],R14
0000e27f(6): JZ 0x0000e659
0000e285(7): CMP byte ptr [0x8e + RBX],0x0
0000e28c(6): JNZ 0x0000e6f9
0000e292(2): XOR EAX,EAX
0000e294(3): CMP EDX,0xa
0000e297(2): JNZ 0x0000e2a7
0000e299(2): XOR EAX,EAX
0000e29b(7): CMP byte ptr [0x8d + RBX],0x0
0000e2a2(3): SETNZ AL
0000e2a5(2): ADD EAX,EAX
0000e2a7(3): MOV dword ptr [RBX + 0x70],EAX
0000e2aa(4): CMP R12,0x0
0000e2ae(6): JNZ 0x0000e6ca
0000e2b4(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000e2bb(4): MOV qword ptr [RBX + 0x38],R12
0000e2bf(5): JMP 0x0000e47c
0000e2c8(4): MOV R14,qword ptr [RBX + 0x18]
0000e2cc(3): MOV RCX,R8
0000e2cf(2): XOR ESI,ESI
0000e2d1(2): JMP 0x0000e2e3
0000e2d8(2): JGE 0x0000e313
0000e2da(4): LEA RSI,[RAX + 0x1]
0000e2de(3): CMP RSI,RCX
0000e2e1(2): JGE 0x0000e308
0000e2e3(4): LEA RDX,[RSI + RCX*0x1]
0000e2e7(3): MOV RAX,RDX
0000e2ea(4): SHR RAX,0x3f
0000e2ee(3): ADD RAX,RDX
0000e2f1(3): SAR RAX,1
0000e2f4(4): MOV RDX,qword ptr [R14 + RAX*0x8]
0000e2f8(3): MOV R12,RAX
0000e2fb(3): CMP RDX,RBP
0000e2fe(2): JLE 0x0000e2d8
0000e300(3): MOV RCX,RAX
0000e303(2): JMP 0x0000e2de
0000e308(4): LEA R12,[RAX + 0x1]
0000e30c(3): CMP RDX,RBP
0000e30f(4): CMOVGE R12,RAX
0000e313(5): LEA R13,[R12 + -0x1]
0000e318(3): MOV EDX,R10D
0000e31b(3): MOV RDI,RBX
0000e31e(4): MOV qword ptr [RSP],R8
0000e322(3): MOV RSI,R13
0000e325(5): CALL 0x0000dd30
0000e32a(3): CMP RBP,R12
0000e32d(3): MOV dword ptr [RBX + 0x70],EAX
0000e330(4): MOV R8,qword ptr [RSP]
0000e334(6): JNZ 0x0000e3b8
0000e33a(3): CMP RBP,R8
0000e33d(2): JGE 0x0000e3b8
0000e33f(4): CMP qword ptr [R14 + R12*0x8],RBP
0000e343(2): JNZ 0x0000e3b8
0000e345(4): MOV RDI,qword ptr [RBX + 0x10]
0000e349(3): SUB R8,RBP
0000e34c(8): LEA RDX,[R8*0x4]
0000e354(4): LEA RSI,[RDI + RBP*0x4]
0000e358(5): CALL 0x00001ff0
0000e35d(4): MOV RDI,qword ptr [RBX + 0x8]
0000e361(4): MOV RDX,qword ptr [RBX + 0x30]
0000e365(4): LEA RSI,[RDI + RBP*0x1]
0000e369(3): SUB RDX,RBP
0000e36c(5): CALL 0x00001ff0
0000e371(4): MOV RAX,qword ptr [RBX + 0x30]
0000e375(4): SUB qword ptr [RBX + 0x38],RBP
0000e379(3): SUB RAX,RBP
0000e37c(3): TEST RAX,RAX
0000e37f(4): MOV qword ptr [RBX + 0x30],RAX
0000e383(2): JLE 0x0000e3a8
0000e385(4): MOV RCX,qword ptr [RBX + 0x18]
0000e389(2): XOR EAX,EAX
0000e38b(4): LEA RSI,[RCX + RBP*0x8]
0000e38f(1): NOP
0000e390(4): MOV RDX,qword ptr [RSI + RAX*0x8]
0000e394(3): SUB RDX,RBP
0000e397(4): MOV qword ptr [RCX + RAX*0x8],RDX
0000e39b(4): ADD RAX,0x1
0000e39f(4): CMP qword ptr [RBX + 0x30],RAX
0000e3a3(2): JG 0x0000e390
0000e3a5(3): NOP dword ptr [RAX]
0000e3a8(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000e3af(5): JMP 0x0000e47c
0000e3b8(4): MOV RAX,qword ptr [RBX + 0x50]
0000e3bc(7): MOV byte ptr [0x8c + RBX],0x0
0000e3c3(3): ADD RAX,RBP
0000e3c6(3): SUB RAX,R15
0000e3c9(4): MOV qword ptr [RBX + 0x58],RAX
0000e3cd(4): MOV RAX,qword ptr [RBX + 0x60]
0000e3d1(3): ADD RAX,RBP
0000e3d4(3): SUB RAX,R15
0000e3d7(3): TEST R12,R12
0000e3da(4): MOV qword ptr [RBX + 0x68],RAX
0000e3de(2): JLE 0x0000e403
0000e3e0(5): CMP qword ptr [R14 + R12*0x8 + -0x8],RBP
0000e3e5(2): JZ 0x0000e3fb
0000e3e7(2): JMP 0x0000e403
0000e3f0(5): CMP qword ptr [R14 + R13*0x8 + -0x8],RBP
0000e3f5(2): JNZ 0x0000e403
0000e3f7(4): SUB R13,0x1
0000e3fb(3): TEST R13,R13
0000e3fe(3): MOV R12,R13
0000e401(2): JNZ 0x0000e3f0
0000e403(3): CMP R12,R8
0000e406(6): JGE 0x0000e638
0000e40c(4): MOV RAX,qword ptr [RBX + 0x10]
0000e410(2): JMP 0x0000e425
0000e418(4): ADD R12,0x1
0000e41c(3): CMP R12,R8
0000e41f(6): JZ 0x0000e640
0000e425(5): CMP dword ptr [RAX + R12*0x4],-0x1
0000e42a(2): JZ 0x0000e418
0000e42c(4): MOV RDX,qword ptr [R14 + R12*0x8]
0000e430(3): SUB RDX,RBP
0000e433(4): CMP RDX,0x0
0000e437(4): MOV qword ptr [RBX + 0x30],RDX
0000e43b(2): JZ 0x0000e471
0000e43d(2): JLE 0x0000e45f
0000e43f(4): MOV RAX,qword ptr [RBX + 0x10]
0000e443(4): LEA RCX,[RAX + RDX*0x4]
0000e447(9): NOP word ptr [RAX + RAX*0x1]
0000e450(6): MOV dword ptr [RAX],0xffffffff
0000e456(4): ADD RAX,0x4
0000e45a(3): CMP RCX,RAX
0000e45d(2): JNZ 0x0000e450
0000e45f(4): MOV RDI,qword ptr [RBX + 0x8]
0000e463(5): MOV ESI,0xff
0000e468(5): CALL 0x00001e40
0000e46d(4): MOV RDX,qword ptr [RBX + 0x30]
0000e471(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000e478(4): MOV qword ptr [RBX + 0x38],RDX
0000e47c(2): TEST AL,AL
0000e47e(6): JZ 0x0000e0fa
0000e484(5): JMP 0x0000e0fe
0000e490(4): MOV RDI,qword ptr [RBX + 0x8]
0000e494(3): MOV RDX,R8
0000e497(4): LEA RSI,[RDI + RBP*0x1]
0000e49b(5): CALL 0x00001ff0
0000e4a0(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000e4a7(4): SUB qword ptr [RBX + 0x30],RBP
0000e4ab(4): SUB qword ptr [RBX + 0x38],RBP
0000e4af(2): JMP 0x0000e47c
0000e4b8(3): MOV RCX,qword ptr [RBX]
0000e4bb(3): MOV RDI,RBP
0000e4be(3): SUB RDI,RDX
0000e4c1(3): MOV RDX,RDI
0000e4c4(4): LEA R12,[RCX + R11*0x1]
0000e4c8(3): ADD RDX,R12
0000e4cb(5): LEA RSI,[R12 + RBP*0x1 + -0x1]
0000e4d0(3): CMP RCX,RDX
0000e4d3(4): CMOVC RCX,RDX
0000e4d7(3): CMP RCX,RSI
0000e4da(2): JBE 0x0000e4f5
0000e4dc(5): JMP 0x0000e201
0000e4e8(4): SUB RSI,0x1
0000e4ec(3): CMP RCX,RSI
0000e4ef(6): JA 0x0000e201
0000e4f5(3): MOVZX EDX,byte ptr [RSI]
0000e4f8(3): AND EDX,0xffffffc0
0000e4fb(3): CMP DL,0x80
0000e4fe(2): JZ 0x0000e4e8
0000e500(4): MOV RDX,qword ptr [RBX + 0x58]
0000e504(4): MOV RCX,qword ptr [RBX + 0x78]
0000e508(3): MOV R14,RSI
0000e50b(3): ADD RDX,R12
0000e50e(3): SUB RDX,RSI
0000e511(3): TEST RCX,RCX
0000e514(6): JNZ 0x0000e762
0000e51a(5): LEA R13,[RSP + 0x24]
0000e51f(3): ADD R12,RBP
0000e522(5): LEA RCX,[RSP + 0x28]
0000e527(3): SUB R12,R14
0000e52a(5): MOV dword ptr [RSP + 0xc],R10D
0000e52f(4): MOV qword ptr [RSP],R8
0000e533(3): MOV RDI,R13
0000e536(9): MOV qword ptr [RSP + 0x28],0x0
0000e53f(5): CALL 0x0000a3b0
0000e544(3): CMP R12,RAX
0000e547(4): MOV R8,qword ptr [RSP]
0000e54b(5): MOV R10D,dword ptr [RSP + 0xc]
0000e550(2): JA 0x0000e55c
0000e552(4): CMP RAX,-0x3
0000e556(6): JBE 0x0000e721
0000e55c(4): MOV R11,qword ptr [RBX + 0x28]
0000e560(4): MOV RAX,qword ptr [RBX + 0x38]
0000e564(5): JMP 0x0000e201
0000e570(7): CMP byte ptr [0x88 + RBX],0x0
0000e577(6): JNZ 0x0000e670
0000e57d(4): MOV RCX,qword ptr [RBX + 0x78]
0000e581(3): TEST RCX,RCX
0000e584(6): JZ 0x0000e133
0000e58a(4): CMP qword ptr [RBX + 0x40],RAX
0000e58e(4): MOV RDX,qword ptr [RBX + 0x30]
0000e592(5): CMOVLE RAX,qword ptr [RBX + 0x40]
0000e597(3): CMP RAX,RDX
0000e59a(2): JG 0x0000e5a8
0000e59c(2): JMP 0x0000e5c8
0000e5a0(4): MOV R15,qword ptr [RBX + 0x28]
0000e5a4(4): MOV RCX,qword ptr [RBX + 0x78]
0000e5a8(3): MOV RSI,qword ptr [RBX]
0000e5ab(3): ADD RSI,RDX
0000e5ae(5): MOVZX ESI,byte ptr [RSI + R15*0x1]
0000e5b3(4): MOVZX ESI,byte ptr [RCX + RSI*0x1]
0000e5b7(4): MOV RCX,qword ptr [RBX + 0x8]
0000e5bb(4): MOV byte ptr [RCX + RDX*0x1],SIL
0000e5bf(4): ADD RDX,0x1
0000e5c3(3): CMP RAX,RDX
0000e5c6(2): JNZ 0x0000e5a0
0000e5c8(4): MOV qword ptr [RBX + 0x30],RDX
0000e5cc(4): MOV qword ptr [RBX + 0x38],RDX
0000e5d0(5): JMP 0x0000e133
0000e5d8(3): MOV RAX,qword ptr [RBX]
0000e5db(4): MOV RDX,qword ptr [RBX + 0x78]
0000e5df(3): ADD RAX,RBP
0000e5e2(3): TEST RDX,RDX
0000e5e5(6): MOVZX EAX,byte ptr [R11 + RAX*0x1 + -0x1]
0000e5eb(8): MOV qword ptr [RBX + 0x38],0x0
0000e5f3(2): JZ 0x0000e5f9
0000e5f5(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
0000e5f9(7): MOV RCX,qword ptr [0x80 + RBX]
0000e600(3): MOVZX EDX,AL
0000e603(4): SAR RDX,0x6
0000e607(4): MOV RCX,qword ptr [RCX + RDX*0x8]
0000e60b(5): MOV EDX,0x1
0000e610(4): BT RCX,RAX
0000e614(2): JC 0x0000e630
0000e616(2): XOR EDX,EDX
0000e618(2): CMP AL,0xa
0000e61a(2): JNZ 0x0000e630
0000e61c(2): XOR EDX,EDX
0000e61e(7): CMP byte ptr [0x8d + RBX],0x0
0000e625(3): SETNZ DL
0000e628(2): ADD EDX,EDX
0000e62a(6): NOP word ptr [RAX + RAX*0x1]
0000e630(3): MOV dword ptr [RBX + 0x70],EDX
0000e633(5): JMP 0x0000e3a8
0000e638(6): JNZ 0x0000e42c
0000e63e(2): NOP
0000e640(8): MOV qword ptr [RBX + 0x30],0x0
0000e648(2): XOR EDX,EDX
0000e64a(5): JMP 0x0000e471
0000e64f(3): SUB R14,R15
0000e652(3): MOV R12,R14
0000e655(4): MOV qword ptr [RBX + 0x30],R14
0000e659(4): LEA RSI,[R8 + -0x1]
0000e65d(3): MOV EDX,R10D
0000e660(3): MOV RDI,RBX
0000e663(5): CALL 0x0000dd30
0000e668(3): MOV dword ptr [RBX + 0x70],EAX
0000e66b(5): JMP 0x0000e2aa
0000e670(3): MOV RDI,RBX
0000e673(5): CALL 0x0000ac30
0000e678(5): JMP 0x0000e133
0000e67d(4): MOV RDX,qword ptr [RBX + 0x50]
0000e681(7): MOV byte ptr [0x8c + RBX],0x0
0000e688(3): ADD RDX,RBP
0000e68b(3): SUB RDX,R15
0000e68e(4): MOV qword ptr [RBX + 0x58],RDX
0000e692(4): MOV RDX,qword ptr [RBX + 0x60]
0000e696(3): ADD RDX,RBP
0000e699(3): SUB RDX,R15
0000e69c(4): MOV qword ptr [RBX + 0x68],RDX
0000e6a0(5): JMP 0x0000e1d8
0000e6a5(3): TEST RAX,RAX
0000e6a8(2): JZ 0x0000e71d
0000e6aa(3): TEST R12,R12
0000e6ad(2): JZ 0x0000e71d
0000e6af(3): MOV RAX,qword ptr [RBX]
0000e6b2(5): MOVZX EDX,byte ptr [RAX + R14*0x1]
0000e6b7(5): MOV RAX,qword ptr [RSP + 0x18]
0000e6bc(4): MOV qword ptr [RBX + 0x20],RAX
0000e6c0(5): MOV EAX,0x1
0000e6c5(5): JMP 0x0000e26a
0000e6ca(2): JLE 0x0000e6e7
0000e6cc(4): MOV RAX,qword ptr [RBX + 0x10]
0000e6d0(4): LEA RDX,[RAX + R12*0x4]
0000e6d4(4): NOP dword ptr [RAX]
0000e6d8(6): MOV dword ptr [RAX],0xffffffff
0000e6de(4): ADD RAX,0x4
0000e6e2(3): CMP RDX,RAX
0000e6e5(2): JNZ 0x0000e6d8
0000e6e7(7): CMP byte ptr [0x8b + RBX],0x0
0000e6ee(2): JNZ 0x0000e748
0000e6f0(4): MOV qword ptr [RBX + 0x38],R12
0000e6f4(5): JMP 0x0000e0fa
0000e6f9(2): MOV EDI,EDX
0000e6fb(3): MOV dword ptr [RSP],EDX
0000e6fe(5): CALL 0x00001f10
0000e703(2): TEST EAX,EAX
0000e705(2): JNZ 0x0000e713
0000e707(3): MOV EDX,dword ptr [RSP]
0000e70a(3): CMP EDX,0x5f
0000e70d(6): JNZ 0x0000e292
0000e713(5): MOV EAX,0x1
0000e718(5): JMP 0x0000e2a7
0000e71d(2): XOR EDX,EDX
0000e71f(2): JMP 0x0000e6b7
0000e721(4): MOV EDX,dword ptr [RSP + 0x24]
0000e725(3): SUB RAX,R12
0000e728(8): MOV qword ptr [RBX + 0x20],0x0
0000e730(3): MOV R12,RAX
0000e733(4): MOV qword ptr [RBX + 0x30],RAX
0000e737(3): CMP EDX,-0x1
0000e73a(6): JNZ 0x0000e285
0000e740(5): JMP 0x0000e55c
0000e748(4): MOV RDI,qword ptr [RBX + 0x8]
0000e74c(3): MOV RDX,R12
0000e74f(5): MOV ESI,0xff
0000e754(5): CALL 0x00001e40
0000e759(4): MOV R12,qword ptr [RBX + 0x30]
0000e75d(5): JMP 0x0000e2b4
0000e762(4): CMP RDX,0x6
0000e766(5): MOV EDI,0x6
0000e76b(5): LEA R11,[RSP + 0x32]
0000e770(4): CMOVLE RDI,RDX
0000e774(3): SUB EDI,0x1
0000e777(2): TEST EDI,EDI
0000e779(3): MOVSXD RAX,EDI
0000e77c(2): JS 0x0000e792
0000e77e(4): MOVZX EDI,byte ptr [RSI + RAX*0x1]
0000e782(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
0000e786(4): MOV byte ptr [R11 + RAX*0x1],DIL
0000e78a(4): SUB RAX,0x1
0000e78e(2): TEST EAX,EAX
0000e790(2): JNS 0x0000e77e
0000e792(3): MOV RSI,R11
0000e795(5): JMP 0x0000e51a
0000e79a(5): CALL 0x00001db0
0000e79f(1): NOP
0000e7a0(2): PUSH R15
0000e7a2(2): PUSH R14
0000e7a4(3): MOV R14,RDX
0000e7a7(2): PUSH R13
0000e7a9(2): PUSH R12
0000e7ab(4): LEA RDX,[RSI + RSI*0x2]
0000e7af(1): PUSH RBP
0000e7b0(1): PUSH RBX
0000e7b1(4): PXOR XMM0,XMM0
0000e7b5(4): SUB RSP,0x48
0000e7b9(9): MOV RAX,qword ptr FS:[0x28]
0000e7c2(5): MOV qword ptr [RSP + 0x38],RAX
0000e7c7(2): XOR EAX,EAX
0000e7c9(4): MOV RAX,qword ptr [RDI + 0x38]
0000e7cd(9): MOV qword ptr [RSP + 0x30],0x0
0000e7d6(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000e7db(5): MOV qword ptr [RSP + 0x10],RCX
0000e7e0(4): LEA RBP,[RAX + RDX*0x8]
0000e7e4(4): MOV R10,qword ptr [RBP + 0x8]
0000e7e8(3): TEST R10,R10
0000e7eb(6): JLE 0x0000e9d2
0000e7f1(5): LEA RAX,[RSP + 0x20]
0000e7f6(3): MOV R12,RDI
0000e7f9(3): MOV R13,RSI
0000e7fc(2): XOR EBX,EBX
0000e7fe(5): MOV qword ptr [RSP + 0x18],RAX
0000e803(2): JMP 0x0000e85d
0000e808(3): TEST RAX,RAX
0000e80b(6): JNZ 0x0000e8e8
0000e811(4): MOV RDI,qword ptr [R14 + 0x8]
0000e815(4): LEA RSI,[R14 + 0x10]
0000e819(3): MOV RDX,R8
0000e81c(5): CALL 0x0000bf50
0000e821(3): TEST RAX,RAX
0000e824(6): JZ 0x0000e8e8
0000e82a(5): MOV RDX,qword ptr [R12 + 0x38]
0000e82f(5): MOV RSI,qword ptr [RSP + 0x10]
0000e834(5): MOV RDI,qword ptr [RSP + 0x18]
0000e839(3): ADD RDX,R9
0000e83c(5): CALL 0x0000ca60
0000e841(2): TEST EAX,EAX
0000e843(6): JNZ 0x0000e9c0
0000e849(4): MOV R10,qword ptr [RBP + 0x8]
0000e84d(3): NOP dword ptr [RAX]
0000e850(4): ADD RBX,0x1
0000e854(3): CMP R10,RBX
0000e857(6): JLE 0x0000e930
0000e85d(4): MOV RAX,qword ptr [RBP + 0x10]
0000e861(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000e865(3): CMP R13,RAX
0000e868(2): JZ 0x0000e850
0000e86a(3): MOV RDX,RAX
0000e86d(4): SHL RDX,0x4
0000e871(4): ADD RDX,qword ptr [R12]
0000e875(4): TEST byte ptr [RDX + 0x8],0x8
0000e879(2): JZ 0x0000e850
0000e87b(4): LEA R9,[RAX + RAX*0x2]
0000e87f(5): MOV RCX,qword ptr [R12 + 0x28]
0000e884(4): LEA R11,[RBP + 0x10]
0000e888(3): MOV RDI,R10
0000e88b(4): SHL R9,0x3
0000e88f(3): MOV RSI,R11
0000e892(3): ADD RCX,R9
0000e895(4): MOV R15,qword ptr [RCX + 0x10]
0000e899(5): MOV qword ptr [RSP + 0x8],RCX
0000e89e(3): MOV R8,qword ptr [R15]
0000e8a1(3): MOV RDX,R8
0000e8a4(4): MOV qword ptr [RSP],R8
0000e8a8(5): CALL 0x0000bf50
0000e8ad(5): MOV RCX,qword ptr [RSP + 0x8]
0000e8b2(4): MOV R8,qword ptr [RSP]
0000e8b6(5): CMP qword ptr [RCX + 0x8],0x1
0000e8bb(6): JG 0x0000e808
0000e8c1(3): TEST RAX,RAX
0000e8c4(2): JNZ 0x0000e850
0000e8c6(4): MOV RDI,qword ptr [R14 + 0x8]
0000e8ca(4): LEA RSI,[R14 + 0x10]
0000e8ce(3): MOV RDX,R8
0000e8d1(5): CALL 0x0000bf50
0000e8d6(3): TEST RAX,RAX
0000e8d9(6): JNZ 0x0000e82a
0000e8df(5): JMP 0x0000e850
0000e8e8(4): MOV R15,qword ptr [R15 + 0x8]
0000e8ec(3): TEST R15,R15
0000e8ef(6): JLE 0x0000e850
0000e8f5(3): MOV RDX,R15
0000e8f8(3): MOV RSI,R11
0000e8fb(3): MOV RDI,R10
0000e8fe(5): CALL 0x0000bf50
0000e903(3): TEST RAX,RAX
0000e906(6): JNZ 0x0000e850
0000e90c(4): MOV RDI,qword ptr [R14 + 0x8]
0000e910(4): LEA RSI,[R14 + 0x10]
0000e914(5): CALL 0x0000bf50
0000e919(3): TEST RAX,RAX
0000e91c(6): JZ 0x0000e850
0000e922(5): JMP 0x0000e82a
0000e930(3): XOR R9D,R9D
0000e933(3): TEST R10,R10
0000e936(5): LEA R11,[RSP + 0x30]
0000e93b(2): JLE 0x0000e98c
0000e93d(3): NOP dword ptr [RAX]
0000e940(4): MOV RAX,qword ptr [RBP + 0x10]
0000e944(5): MOV RDI,qword ptr [RSP + 0x28]
0000e949(3): MOV RSI,R11
0000e94c(4): MOV R10,qword ptr [RAX + R9*0x8]
0000e950(3): MOV RDX,R10
0000e953(5): CALL 0x0000bf50
0000e958(3): TEST RAX,RAX
0000e95b(2): JNZ 0x0000e982
0000e95d(4): LEA RBX,[R14 + 0x10]
0000e961(4): MOV RDI,qword ptr [R14 + 0x8]
0000e965(3): MOV RSI,RBX
0000e968(5): CALL 0x0000bf50
0000e96d(4): SUB RAX,0x1
0000e971(3): MOV RDX,RAX
0000e974(2): JS 0x0000e982
0000e976(4): LEA RDI,[R14 + 0x8]
0000e97a(3): MOV RSI,RBX
0000e97d(5): CALL 0x0000c0d0
0000e982(4): ADD R9,0x1
0000e986(4): CMP qword ptr [RBP + 0x8],R9
0000e98a(2): JG 0x0000e940
0000e98c(5): MOV RDI,qword ptr [RSP + 0x30]
0000e991(5): CALL 0x00001c60
0000e996(2): XOR EAX,EAX
0000e998(5): MOV RSI,qword ptr [RSP + 0x38]
0000e99d(9): XOR RSI,qword ptr FS:[0x28]
0000e9a6(2): JNZ 0x0000e9d6
0000e9a8(4): ADD RSP,0x48
0000e9ac(1): POP RBX
0000e9ad(1): POP RBP
0000e9ae(2): POP R12
0000e9b0(2): POP R13
0000e9b2(2): POP R14
0000e9b4(2): POP R15
0000e9b6(1): RET
0000e9c0(5): MOV RDI,qword ptr [RSP + 0x30]
0000e9c5(3): MOV dword ptr [RSP],EAX
0000e9c8(5): CALL 0x00001c60
0000e9cd(3): MOV EAX,dword ptr [RSP]
0000e9d0(2): JMP 0x0000e998
0000e9d2(2): XOR EDI,EDI
0000e9d4(2): JMP 0x0000e991
0000e9d6(5): CALL 0x00001db0
0000e9db(5): NOP dword ptr [RAX + RAX*0x1]
0000e9e0(2): PUSH R15
0000e9e2(2): PUSH R14
0000e9e4(3): MOV R15,RDI
0000e9e7(2): PUSH R13
0000e9e9(2): PUSH R12
0000e9eb(5): MOV EDI,0x3800
0000e9f0(1): PUSH RBP
0000e9f1(1): PUSH RBX
0000e9f2(7): SUB RSP,0x108
0000e9f9(9): MOV RAX,qword ptr FS:[0x28]
0000ea02(8): MOV qword ptr [0xf8 + RSP],RAX
0000ea0a(2): XOR EAX,EAX
0000ea0c(5): MOV qword ptr [RSP + 0x8],RSI
0000ea11(5): CALL 0x00001f20
0000ea16(3): TEST RAX,RAX
0000ea19(5): MOV qword ptr [RSP + 0x18],RAX
0000ea1e(6): JZ 0x0000edf0
0000ea24(5): MOV RAX,qword ptr [RSP + 0x18]
0000ea29(4): PXOR XMM0,XMM0
0000ea2d(7): LEA RBX,[0x1800 + RAX]
0000ea34(5): MOV RAX,qword ptr [RSP + 0x8]
0000ea39(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000ea41(5): MOV qword ptr [RSP + 0x40],RBX
0000ea46(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000ea4e(5): CMP qword ptr [RAX + 0x10],0x0
0000ea53(8): MOV qword ptr [RAX + 0x58],0x0
0000ea5b(8): MOV qword ptr [RAX + 0x60],0x0
0000ea63(6): JLE 0x0000f4da
0000ea69(5): MOV qword ptr [RSP + 0x30],R15
0000ea6e(2): XOR EBP,EBP
0000ea70(9): MOV qword ptr [RSP + 0x10],0x0
0000ea79(3): MOV R15,RBX
0000ea7c(5): MOV RBX,qword ptr [RSP + 0x10]
0000ea81(8): LEA RAX,[RBX*0x8]
0000ea89(5): MOV qword ptr [RSP + 0x20],RAX
0000ea8e(5): MOV RAX,qword ptr [RSP + 0x8]
0000ea93(4): MOV RAX,qword ptr [RAX + 0x18]
0000ea97(4): MOV R13,qword ptr [RAX + RBX*0x8]
0000ea9b(5): MOV RAX,qword ptr [RSP + 0x30]
0000eaa0(4): SHL R13,0x4
0000eaa4(3): ADD R13,qword ptr [RAX]
0000eaa7(5): MOVZX R14D,byte ptr [R13 + 0x8]
0000eaac(4): MOV EAX,dword ptr [R13 + 0x8]
0000eab0(3): SHR EAX,0x8
0000eab3(4): AND AX,0x3ff
0000eab7(4): CMP R14D,0x1
0000eabb(6): JZ 0x0000ee20
0000eac1(4): CMP R14D,0x3
0000eac5(6): JZ 0x0000f290
0000eacb(4): CMP R14D,0x5
0000eacf(6): JZ 0x0000f150
0000ead5(4): CMP R14D,0x7
0000ead9(6): JZ 0x0000f2b9
0000eadf(5): MOV RBX,qword ptr [RSP + 0x8]
0000eae4(6): ADD qword ptr [RSP + 0x10],0x1
0000eaea(5): MOV RAX,qword ptr [RSP + 0x10]
0000eaef(4): CMP RAX,qword ptr [RBX + 0x10]
0000eaf3(2): JL 0x0000ea7c
0000eaf5(3): TEST RBP,RBP
0000eaf8(5): MOV R15,qword ptr [RSP + 0x30]
0000eafd(6): JLE 0x0000f559
0000eb03(4): LEA RBX,[RBP + 0x1]
0000eb07(9): MOV qword ptr [RSP + 0x78],0x0
0000eb10(5): MOV qword ptr [RSP + 0x70],RBX
0000eb15(4): SHL RBX,0x3
0000eb19(3): MOV RDI,RBX
0000eb1c(5): CALL 0x00001f20
0000eb21(3): TEST RAX,RAX
0000eb24(3): MOV R12,RAX
0000eb27(8): MOV qword ptr [0x80 + RSP],RAX
0000eb2f(6): JZ 0x0000f32f
0000eb35(10): MOV RAX,0xaaaaaaaaaaaa855
0000eb3f(8): MOV dword ptr [RSP + 0x6c],0x0
0000eb47(3): CMP RBP,RAX
0000eb4a(6): JG 0x0000f32f
0000eb50(5): LEA RAX,[RBP + RBP*0x2]
0000eb55(4): SHL RAX,0x3
0000eb59(3): MOV RDI,RAX
0000eb5c(5): MOV qword ptr [RSP + 0x58],RAX
0000eb61(5): CALL 0x00001f20
0000eb66(3): TEST RAX,RAX
0000eb69(5): MOV qword ptr [RSP + 0x10],RAX
0000eb6e(6): JZ 0x0000f32f
0000eb74(5): MOV RAX,qword ptr [RSP + 0x10]
0000eb79(4): SUB RBX,0x8
0000eb7d(5): MOV R12,qword ptr [RSP + 0x40]
0000eb82(4): PXOR XMM0,XMM0
0000eb86(5): LEA R14,[RSP + 0x70]
0000eb8b(5): MOV qword ptr [RSP + 0x20],RBP
0000eb90(5): MOV byte ptr [RSP + 0x4f],0x0
0000eb95(3): MOV RBP,R15
0000eb98(3): ADD RAX,RBX
0000eb9b(5): MOV qword ptr [RSP + 0x50],R12
0000eba0(3): ADD RBX,RAX
0000eba3(5): MOV qword ptr [RSP + 0x30],RAX
0000eba8(5): MOV RAX,qword ptr [RSP + 0x18]
0000ebad(8): MOVAPS xmmword ptr [0xd0 + RSP],XMM0
0000ebb5(5): MOV qword ptr [RSP + 0x38],RBX
0000ebba(2): XOR EBX,EBX
0000ebbc(4): LEA R13,[RAX + 0x8]
0000ebc0(5): LEA RAX,[RSP + 0x6c]
0000ebc5(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0000ebcd(5): MOV qword ptr [RSP + 0x28],RAX
0000ebd2(9): MOV qword ptr [RSP + 0x78],0x0
0000ebdb(5): CMP qword ptr [R13],0x0
0000ebe0(2): JLE 0x0000ec28
0000ebe2(3): XOR R15D,R15D
0000ebe5(3): NOP dword ptr [RAX]
0000ebe8(4): MOV RAX,qword ptr [R13 + 0x8]
0000ebec(4): MOV RDX,qword ptr [RAX + R15*0x8]
0000ebf0(4): MOV RAX,qword ptr [RBP + 0x18]
0000ebf4(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000ebf8(4): CMP RAX,-0x1
0000ebfc(2): JZ 0x0000ec1e
0000ebfe(4): LEA RDX,[RAX + RAX*0x2]
0000ec02(4): MOV RAX,qword ptr [RBP + 0x30]
0000ec06(3): MOV RDI,R14
0000ec09(4): LEA RSI,[RAX + RDX*0x8]
0000ec0d(5): CALL 0x0000c470
0000ec12(2): TEST EAX,EAX
0000ec14(4): MOV dword ptr [RSP + 0x6c],EAX
0000ec18(6): JNZ 0x0000f318
0000ec1e(4): ADD R15,0x1
0000ec22(4): CMP qword ptr [R13],R15
0000ec26(2): JG 0x0000ebe8
0000ec28(5): MOV RDI,qword ptr [RSP + 0x28]
0000ec2d(2): XOR ECX,ECX
0000ec2f(3): MOV RSI,RBP
0000ec32(3): MOV RDX,R14
0000ec35(5): CALL 0x0000d2a0
0000ec3a(5): MOV RSI,qword ptr [RSP + 0x10]
0000ec3f(3): TEST RAX,RAX
0000ec42(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000ec46(6): JZ 0x0000f3f8
0000ec4c(4): CMP byte ptr [RAX + 0x68],0x0
0000ec50(6): JS 0x0000f370
0000ec56(5): MOV RDI,qword ptr [RSP + 0x30]
0000ec5b(5): MOV RSI,qword ptr [RSP + 0x38]
0000ec60(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000ec64(5): MOV RAX,qword ptr [RSP + 0x10]
0000ec69(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000ec6d(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000ec71(8): LEA RDX,[0xd0 + RSP]
0000ec79(2): XOR EAX,EAX
0000ec7b(4): MOV RCX,qword ptr [RDX + RAX*0x1]
0000ec7f(4): OR RCX,qword ptr [R12 + RAX*0x1]
0000ec83(4): MOV qword ptr [RDX + RAX*0x1],RCX
0000ec87(4): ADD RAX,0x8
0000ec8b(4): CMP RAX,0x20
0000ec8f(2): JNZ 0x0000ec7b
0000ec91(4): ADD RBX,0x1
0000ec95(4): ADD R13,0x18
0000ec99(4): ADD R12,0x20
0000ec9d(5): CMP RBX,qword ptr [RSP + 0x20]
0000eca2(6): JNZ 0x0000ebd2
0000eca8(5): CMP byte ptr [RSP + 0x4f],0x0
0000ecad(3): MOV R15,RBP
0000ecb0(5): MOV RBP,qword ptr [RSP + 0x20]
0000ecb5(5): MOV qword ptr [RSP + 0x20],RDX
0000ecba(6): JNZ 0x0000f409
0000ecc0(5): MOV ESI,0x100
0000ecc5(5): MOV EDI,0x8
0000ecca(5): CALL 0x00001ec0
0000eccf(3): MOV R11,RAX
0000ecd2(5): MOV RAX,qword ptr [RSP + 0x8]
0000ecd7(3): TEST R11,R11
0000ecda(4): MOV qword ptr [RAX + 0x58],R11
0000ecde(6): JZ 0x0000f31d
0000ece4(5): MOV RBX,qword ptr [RSP + 0x40]
0000ece9(5): MOV R12,qword ptr [RSP + 0x10]
0000ecee(3): XOR R9D,R9D
0000ecf1(5): MOV R13,qword ptr [RSP + 0x30]
0000ecf6(5): MOV RDX,qword ptr [RSP + 0x20]
0000ecfb(4): ADD RBX,0x20
0000ecff(4): MOV RAX,qword ptr [RDX + R9*0x1]
0000ed03(3): TEST RAX,RAX
0000ed06(2): JZ 0x0000ed34
0000ed08(3): MOV RSI,R9
0000ed0b(5): MOV ECX,0x1
0000ed10(4): SHL RSI,0x6
0000ed14(3): ADD RSI,R11
0000ed17(9): NOP word ptr [RAX + RAX*0x1]
0000ed20(2): TEST AL,0x1
0000ed22(6): JNZ 0x0000f488
0000ed28(3): ADD RCX,RCX
0000ed2b(4): ADD RSI,0x8
0000ed2f(3): SHR RAX,1
0000ed32(2): JNZ 0x0000ed20
0000ed34(4): ADD R9,0x8
0000ed38(4): CMP R9,0x20
0000ed3c(2): JNZ 0x0000ecff
0000ed3e(8): TEST byte ptr [0xd1 + RSP],0x4
0000ed46(2): JZ 0x0000ed82
0000ed48(2): XOR EAX,EAX
0000ed4a(5): MOV RDX,qword ptr [RSP + 0x50]
0000ed4f(2): JMP 0x0000ed5e
0000ed51(4): ADD RAX,0x1
0000ed55(4): ADD RDX,0x20
0000ed59(3): CMP RAX,RBP
0000ed5c(2): JZ 0x0000ed82
0000ed5e(7): TEST qword ptr [RDX],0x400
0000ed65(2): JZ 0x0000ed51
0000ed67(5): MOV RBX,qword ptr [RSP + 0x38]
0000ed6c(5): CMP byte ptr [RSP + 0x4f],0x0
0000ed71(4): MOV RAX,qword ptr [RBX + RAX*0x8]
0000ed75(4): MOV qword ptr [R11 + 0x50],RAX
0000ed79(2): JZ 0x0000ed82
0000ed7b(7): MOV qword ptr [0x850 + R11],RAX
0000ed82(5): MOV RDI,qword ptr [RSP + 0x10]
0000ed87(5): CALL 0x00001c60
0000ed8c(8): MOV RDI,qword ptr [0x80 + RSP]
0000ed94(5): CALL 0x00001c60
0000ed99(5): MOV RAX,qword ptr [RSP + 0x18]
0000ed9e(5): MOV RBX,qword ptr [RSP + 0x58]
0000eda3(4): LEA RBP,[RAX + 0x10]
0000eda7(3): ADD RBX,RBP
0000edaa(4): MOV RDI,qword ptr [RBP]
0000edae(4): ADD RBP,0x18
0000edb2(5): CALL 0x00001c60
0000edb7(3): CMP RBX,RBP
0000edba(2): JNZ 0x0000edaa
0000edbc(5): MOV RDI,qword ptr [RSP + 0x18]
0000edc1(5): CALL 0x00001c60
0000edc6(5): MOV EAX,0x1
0000edcb(2): JMP 0x0000edf2
0000edcd(3): TEST RBP,RBP
0000edd0(8): MOV qword ptr [RBX + 0x8],0x0
0000edd8(7): MOV qword ptr [RBX],0x0
0000eddf(6): JNZ 0x0000f110
0000ede5(5): MOV RDI,qword ptr [RSP + 0x18]
0000edea(5): CALL 0x00001c60
0000edef(1): NOP
0000edf0(2): XOR EAX,EAX
0000edf2(8): MOV RBX,qword ptr [0xf8 + RSP]
0000edfa(9): XOR RBX,qword ptr FS:[0x28]
0000ee03(6): JNZ 0x0000f554
0000ee09(7): ADD RSP,0x108
0000ee10(1): POP RBX
0000ee11(1): POP RBP
0000ee12(2): POP R12
0000ee14(2): POP R13
0000ee16(2): POP R14
0000ee18(2): POP R15
0000ee1a(1): RET
0000ee20(5): MOVZX ECX,byte ptr [R13]
0000ee25(8): LEA R12,[0x90 + RSP]
0000ee2d(5): MOV EDI,0x1
0000ee32(3): MOV RDX,RCX
0000ee35(3): AND ECX,0x3f
0000ee38(4): SHR RDX,0x3
0000ee3c(3): SHL RDI,CL
0000ee3f(3): AND EDX,0x18
0000ee42(4): OR qword ptr [R12 + RDX*0x1],RDI
0000ee46(3): TEST AX,AX
0000ee49(6): JZ 0x0000ef10
0000ee4f(2): TEST AL,0x20
0000ee51(6): JNZ 0x0000f1c0
0000ee57(2): TEST AL,0x80
0000ee59(6): JNZ 0x0000f0f4
0000ee5f(2): TEST AL,0x4
0000ee61(2): JZ 0x0000eeb5
0000ee63(4): CMP R14D,0x1
0000ee67(6): JZ 0x0000f245
0000ee6d(5): MOV R8,qword ptr [RSP + 0x30]
0000ee72(8): CMP dword ptr [0xb4 + R8],0x1
0000ee7a(6): JLE 0x0000f2d2
0000ee80(4): MOV RDI,qword ptr [R8 + 0x78]
0000ee84(2): XOR ESI,ESI
0000ee86(2): XOR ECX,ECX
0000ee88(4): MOV RDX,qword ptr [RDI + RCX*0x8]
0000ee8c(3): NOT RDX
0000ee8f(8): OR RDX,qword ptr [0xb8 + R8 + RCX*0x8]
0000ee97(4): AND RDX,qword ptr [R12 + RCX*0x8]
0000ee9b(4): MOV qword ptr [R12 + RCX*0x8],RDX
0000ee9f(4): ADD RCX,0x1
0000eea3(3): OR RSI,RDX
0000eea6(4): CMP RCX,0x4
0000eeaa(2): JNZ 0x0000ee88
0000eeac(3): TEST RSI,RSI
0000eeaf(6): JZ 0x0000eadf
0000eeb5(2): TEST AL,0x8
0000eeb7(2): JZ 0x0000ef10
0000eeb9(4): CMP R14D,0x1
0000eebd(6): JZ 0x0000f1f1
0000eec3(5): MOV RDI,qword ptr [RSP + 0x30]
0000eec8(7): CMP dword ptr [0xb4 + RDI],0x1
0000eecf(6): JLE 0x0000f20e
0000eed5(4): MOV RSI,qword ptr [RDI + 0x78]
0000eed9(2): XOR ECX,ECX
0000eedb(2): XOR EDX,EDX
0000eedd(8): MOV RAX,qword ptr [0xb8 + RDI + RDX*0x8]
0000eee5(4): AND RAX,qword ptr [RSI + RDX*0x8]
0000eee9(3): NOT RAX
0000eeec(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000eef0(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000eef4(4): ADD RDX,0x1
0000eef8(3): OR RCX,RAX
0000eefb(4): CMP RDX,0x4
0000eeff(2): JNZ 0x0000eedd
0000ef01(3): TEST RCX,RCX
0000ef04(6): JZ 0x0000eadf
0000ef0a(6): NOP word ptr [RAX + RAX*0x1]
0000ef10(2): XOR EBX,EBX
0000ef12(3): TEST RBP,RBP
0000ef15(6): JLE 0x0000f07b
0000ef1b(5): MOV qword ptr [RSP + 0x28],R13
0000ef20(3): MOV R13,R15
0000ef23(5): NOP dword ptr [RAX + RAX*0x1]
0000ef28(3): MOV R10,RBX
0000ef2b(4): SHL R10,0x5
0000ef2f(4): CMP R14D,0x1
0000ef33(2): JNZ 0x0000ef58
0000ef35(5): MOV RAX,qword ptr [RSP + 0x28]
0000ef3a(3): MOVZX EDX,byte ptr [RAX]
0000ef3d(3): MOV RAX,RDX
0000ef40(4): SHR RAX,0x3
0000ef44(3): AND EAX,0x18
0000ef47(3): ADD RAX,R13
0000ef4a(4): MOV RAX,qword ptr [RAX + R10*0x1]
0000ef4e(4): BT RAX,RDX
0000ef52(6): JNC 0x0000f06b
0000ef58(5): LEA RDI,[R13 + R10*0x1]
0000ef5d(8): LEA RSI,[0xb0 + RSP]
0000ef65(2): XOR ECX,ECX
0000ef67(2): XOR EAX,EAX
0000ef69(4): MOV RDX,qword ptr [R12 + RAX*0x8]
0000ef6d(4): AND RDX,qword ptr [RDI + RAX*0x8]
0000ef71(4): MOV qword ptr [RSI + RAX*0x8],RDX
0000ef75(4): ADD RAX,0x1
0000ef79(3): OR RCX,RDX
0000ef7c(4): CMP RAX,0x4
0000ef80(2): JNZ 0x0000ef69
0000ef82(3): TEST RCX,RCX
0000ef85(6): JZ 0x0000f06b
0000ef8b(8): LEA R11,[0xd0 + RSP]
0000ef93(3): XOR R15D,R15D
0000ef96(3): XOR R9D,R9D
0000ef99(2): XOR ECX,ECX
0000ef9b(4): MOV RSI,qword ptr [R12 + RCX*0x8]
0000ef9f(4): MOV RAX,qword ptr [RDI + RCX*0x8]
0000efa3(3): MOV RDX,RSI
0000efa6(3): NOT RDX
0000efa9(3): AND RDX,RAX
0000efac(3): NOT RAX
0000efaf(3): AND RAX,RSI
0000efb2(4): MOV qword ptr [R11 + RCX*0x8],RDX
0000efb6(3): OR R9,RDX
0000efb9(4): MOV qword ptr [R12 + RCX*0x8],RAX
0000efbd(4): ADD RCX,0x1
0000efc1(3): OR R15,RAX
0000efc4(4): CMP RCX,0x4
0000efc8(2): JNZ 0x0000ef9b
0000efca(5): MOV RDI,qword ptr [RSP + 0x18]
0000efcf(4): LEA RAX,[RBX + RBX*0x2]
0000efd3(3): TEST R9,R9
0000efd6(4): LEA RDX,[RDI + RAX*0x8]
0000efda(2): JZ 0x0000f044
0000efdc(3): MOV RAX,RBP
0000efdf(9): MOVDQA XMM0,xmmword ptr [0xd0 + RSP]
0000efe8(4): SHL RAX,0x5
0000efec(3): MOV RSI,RDX
0000efef(5): MOV qword ptr [RSP + 0x38],RDX
0000eff4(3): ADD RAX,R13
0000eff7(3): MOVUPS xmmword ptr [RAX],XMM0
0000effa(9): MOVDQA XMM0,xmmword ptr [0xe0 + RSP]
0000f003(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000f007(5): LEA RAX,[RBP + RBP*0x2]
0000f00c(4): LEA RDI,[RDI + RAX*0x8]
0000f010(9): MOVDQA XMM0,xmmword ptr [0xb0 + RSP]
0000f019(6): MOVUPS xmmword ptr [R13 + R10*0x1],XMM0
0000f01f(9): MOVDQA XMM0,xmmword ptr [0xc0 + RSP]
0000f028(6): MOVUPS xmmword ptr [R13 + R10*0x1 + 0x10],XMM0
0000f02e(5): CALL 0x0000d0b0
0000f033(2): TEST EAX,EAX
0000f035(6): JNZ 0x0000f110
0000f03b(5): MOV RDX,qword ptr [RSP + 0x38]
0000f040(4): ADD RBP,0x1
0000f044(5): MOV RAX,qword ptr [RSP + 0x8]
0000f049(5): MOV RSI,qword ptr [RSP + 0x20]
0000f04e(3): MOV RDI,RDX
0000f051(4): MOV RAX,qword ptr [RAX + 0x18]
0000f055(4): MOV RSI,qword ptr [RAX + RSI*0x1]
0000f059(5): CALL 0x0000aa10
0000f05e(2): TEST AL,AL
0000f060(6): JZ 0x0000f110
0000f066(3): TEST R15,R15
0000f069(2): JZ 0x0000f078
0000f06b(4): ADD RBX,0x1
0000f06f(3): CMP RBX,RBP
0000f072(6): JL 0x0000ef28
0000f078(3): MOV R15,R13
0000f07b(3): CMP RBP,RBX
0000f07e(6): JNZ 0x0000eadf
0000f084(3): MOV RAX,RBP
0000f087(9): MOVDQA XMM0,xmmword ptr [0x90 + RSP]
0000f090(4): SHL RAX,0x5
0000f094(5): MOV RBX,qword ptr [RSP + 0x20]
0000f099(5): MOV EDI,0x8
0000f09e(3): ADD RAX,R15
0000f0a1(3): MOVUPS xmmword ptr [RAX],XMM0
0000f0a4(9): MOVDQA XMM0,xmmword ptr [0xa0 + RSP]
0000f0ad(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000f0b1(5): MOV RAX,qword ptr [RSP + 0x8]
0000f0b6(4): MOV RAX,qword ptr [RAX + 0x18]
0000f0ba(4): MOV R13,qword ptr [RAX + RBX*0x1]
0000f0be(5): MOV RBX,qword ptr [RSP + 0x18]
0000f0c3(5): LEA RAX,[RBP + RBP*0x2]
0000f0c8(4): LEA RBX,[RBX + RAX*0x8]
0000f0cc(7): MOV qword ptr [RBX],0x1
0000f0d3(8): MOV qword ptr [RBX + 0x8],0x1
0000f0db(5): CALL 0x00001f20
0000f0e0(3): TEST RAX,RAX
0000f0e3(4): MOV qword ptr [RBX + 0x10],RAX
0000f0e7(6): JZ 0x0000edcd
0000f0ed(3): MOV qword ptr [RAX],R13
0000f0f0(4): ADD RBP,0x1
0000f0f4(4): PXOR XMM0,XMM0
0000f0f8(5): MOVAPS xmmword ptr [R12],XMM0
0000f0fd(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000f103(5): JMP 0x0000eadf
0000f110(5): MOV RAX,qword ptr [RSP + 0x18]
0000f115(4): LEA RBX,[RAX + 0x10]
0000f119(5): LEA RAX,[RBP + RBP*0x2]
0000f11e(4): LEA RBP,[RBX + RAX*0x8]
0000f122(6): NOP word ptr [RAX + RAX*0x1]
0000f128(3): MOV RDI,qword ptr [RBX]
0000f12b(4): ADD RBX,0x18
0000f12f(5): CALL 0x00001c60
0000f134(3): CMP RBP,RBX
0000f137(2): JNZ 0x0000f128
0000f139(5): MOV RDI,qword ptr [RSP + 0x18]
0000f13e(5): CALL 0x00001c60
0000f143(5): JMP 0x0000edf0
0000f150(5): MOV RSI,qword ptr [RSP + 0x30]
0000f155(7): CMP dword ptr [0xb4 + RSI],0x1
0000f15c(6): JLE 0x0000f265
0000f162(4): MOV RSI,qword ptr [RSI + 0x78]
0000f166(8): LEA R12,[0x90 + RSP]
0000f16e(2): XOR EDX,EDX
0000f170(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000f174(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000f178(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000f17c(4): ADD RDX,0x8
0000f180(4): CMP RDX,0x20
0000f184(2): JNZ 0x0000f170
0000f186(5): MOV RBX,qword ptr [RSP + 0x30]
0000f18b(7): MOV RDX,qword ptr [0xd8 + RBX]
0000f192(3): TEST DL,0x40
0000f195(2): JNZ 0x0000f1a3
0000f197(12): AND qword ptr [0x90 + RSP],0xfffffbff
0000f1a3(6): AND EDX,0x80
0000f1a9(6): JZ 0x0000ee46
0000f1af(9): AND qword ptr [0x90 + RSP],-0x2
0000f1b8(5): JMP 0x0000ee46
0000f1c0(8): MOV RDX,qword ptr [0x90 + RSP]
0000f1c8(4): PXOR XMM0,XMM0
0000f1cc(3): AND DH,0x4
0000f1cf(5): MOVAPS xmmword ptr [R12],XMM0
0000f1d4(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000f1da(6): JZ 0x0000eadf
0000f1e0(12): MOV qword ptr [0x90 + RSP],0x400
0000f1ec(5): JMP 0x0000ee57
0000f1f1(5): TEST byte ptr [R13 + 0xa],0x40
0000f1f6(6): JNZ 0x0000f0f4
0000f1fc(5): MOV RDI,qword ptr [RSP + 0x30]
0000f201(7): CMP dword ptr [0xb4 + RDI],0x1
0000f208(6): JG 0x0000eed5
0000f20e(5): MOV RSI,qword ptr [RSP + 0x30]
0000f213(2): XOR ECX,ECX
0000f215(2): XOR EDX,EDX
0000f217(8): MOV RAX,qword ptr [0xb8 + RSI + RDX*0x8]
0000f21f(3): NOT RAX
0000f222(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000f226(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000f22a(4): ADD RDX,0x1
0000f22e(3): OR RCX,RAX
0000f231(4): CMP RDX,0x4
0000f235(2): JNZ 0x0000f217
0000f237(3): TEST RCX,RCX
0000f23a(6): JNZ 0x0000ef10
0000f240(5): JMP 0x0000eadf
0000f245(5): TEST byte ptr [R13 + 0xa],0x40
0000f24a(6): JZ 0x0000f0f4
0000f250(5): MOV R8,qword ptr [RSP + 0x30]
0000f255(8): CMP dword ptr [0xb4 + R8],0x1
0000f25d(6): JG 0x0000ee80
0000f263(2): JMP 0x0000f2d2
0000f265(4): PCMPEQD XMM0,XMM0
0000f269(8): LEA R12,[0x90 + RSP]
0000f271(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000f279(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000f281(5): JMP 0x0000f186
0000f290(4): MOV RSI,qword ptr [R13]
0000f294(8): LEA R12,[0x90 + RSP]
0000f29c(2): XOR EDX,EDX
0000f29e(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000f2a2(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000f2a6(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000f2aa(4): ADD RDX,0x8
0000f2ae(4): CMP RDX,0x20
0000f2b2(2): JNZ 0x0000f29e
0000f2b4(5): JMP 0x0000ee46
0000f2b9(4): PCMPEQD XMM0,XMM0
0000f2bd(8): LEA R12,[0x90 + RSP]
0000f2c5(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000f2cd(5): JMP 0x0000f186
0000f2d2(5): MOV RDI,qword ptr [RSP + 0x30]
0000f2d7(2): XOR ESI,ESI
0000f2d9(2): XOR EDX,EDX
0000f2db(4): MOV RCX,qword ptr [R12 + RDX*0x8]
0000f2df(8): AND RCX,qword ptr [0xb8 + RDI + RDX*0x8]
0000f2e7(4): MOV qword ptr [R12 + RDX*0x8],RCX
0000f2eb(4): ADD RDX,0x1
0000f2ef(3): OR RSI,RCX
0000f2f2(4): CMP RDX,0x4
0000f2f6(2): JNZ 0x0000f2db
0000f2f8(3): TEST RSI,RSI
0000f2fb(6): JNZ 0x0000eeb5
0000f301(5): JMP 0x0000eadf
0000f306(4): MOV EDX,dword ptr [RSP + 0x6c]
0000f30a(2): TEST EDX,EDX
0000f30c(6): JZ 0x0000f397
0000f312(6): NOP word ptr [RAX + RAX*0x1]
0000f318(5): MOV RBP,qword ptr [RSP + 0x20]
0000f31d(5): MOV RDI,qword ptr [RSP + 0x10]
0000f322(5): CALL 0x00001c60
0000f327(8): MOV R12,qword ptr [0x80 + RSP]
0000f32f(3): MOV RDI,R12
0000f332(5): CALL 0x00001c60
0000f337(5): MOV RAX,qword ptr [RSP + 0x18]
0000f33c(4): LEA RBX,[RAX + 0x10]
0000f340(5): LEA RAX,[RBP + RBP*0x2]
0000f345(4): LEA RBP,[RBX + RAX*0x8]
0000f349(7): NOP dword ptr [RAX]
0000f350(3): MOV RDI,qword ptr [RBX]
0000f353(4): ADD RBX,0x18
0000f357(5): CALL 0x00001c60
0000f35c(3): CMP RBP,RBX
0000f35f(2): JNZ 0x0000f350
0000f361(5): MOV RDI,qword ptr [RSP + 0x18]
0000f366(5): CALL 0x00001c60
0000f36b(5): JMP 0x0000edf0
0000f370(5): MOV RDI,qword ptr [RSP + 0x28]
0000f375(5): MOV ECX,0x1
0000f37a(3): MOV RDX,R14
0000f37d(3): MOV RSI,RBP
0000f380(5): CALL 0x0000d2a0
0000f385(5): MOV RDI,qword ptr [RSP + 0x30]
0000f38a(3): TEST RAX,RAX
0000f38d(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000f391(6): JZ 0x0000f306
0000f397(5): MOV RDI,qword ptr [RSP + 0x10]
0000f39c(4): CMP RAX,qword ptr [RDI + RBX*0x8]
0000f3a0(2): JZ 0x0000f3bb
0000f3a2(5): MOVZX EDI,byte ptr [RSP + 0x4f]
0000f3a7(7): CMP dword ptr [0xb4 + RBP],0x2
0000f3ae(5): MOV EAX,0x1
0000f3b3(3): CMOVGE EDI,EAX
0000f3b6(5): MOV byte ptr [RSP + 0x4f],DIL
0000f3bb(5): MOV RDI,qword ptr [RSP + 0x28]
0000f3c0(3): MOV RSI,RBP
0000f3c3(5): MOV ECX,0x2
0000f3c8(3): MOV RDX,R14
0000f3cb(5): CALL 0x0000d2a0
0000f3d0(5): MOV RSI,qword ptr [RSP + 0x38]
0000f3d5(3): TEST RAX,RAX
0000f3d8(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000f3dc(6): JNZ 0x0000ec71
0000f3e2(4): MOV EAX,dword ptr [RSP + 0x6c]
0000f3e6(2): TEST EAX,EAX
0000f3e8(6): JZ 0x0000ec71
0000f3ee(5): JMP 0x0000f318
0000f3f8(4): MOV ECX,dword ptr [RSP + 0x6c]
0000f3fc(2): TEST ECX,ECX
0000f3fe(6): JZ 0x0000ec4c
0000f404(5): JMP 0x0000f318
0000f409(5): MOV ESI,0x200
0000f40e(5): MOV EDI,0x8
0000f413(5): CALL 0x00001ec0
0000f418(3): MOV R11,RAX
0000f41b(5): MOV RAX,qword ptr [RSP + 0x8]
0000f420(3): TEST R11,R11
0000f423(4): MOV qword ptr [RAX + 0x60],R11
0000f427(6): JZ 0x0000f31d
0000f42d(5): MOV R13,qword ptr [RSP + 0x40]
0000f432(5): MOV R10,qword ptr [RSP + 0x10]
0000f437(3): MOV R12,R11
0000f43a(5): MOV R14,qword ptr [RSP + 0x30]
0000f43f(5): MOV RDX,qword ptr [RSP + 0x20]
0000f444(2): XOR EBX,EBX
0000f446(4): ADD R13,0x20
0000f44a(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000f44e(3): TEST RAX,RAX
0000f451(2): JZ 0x0000f46f
0000f453(3): MOV RSI,R12
0000f456(5): MOV ECX,0x1
0000f45b(2): TEST AL,0x1
0000f45d(6): JNZ 0x0000f50c
0000f463(3): ADD RCX,RCX
0000f466(4): ADD RSI,0x8
0000f46a(3): SHR RAX,1
0000f46d(2): JNZ 0x0000f45b
0000f46f(4): ADD RBX,0x8
0000f473(7): ADD R12,0x200
0000f47a(4): CMP RBX,0x20
0000f47e(2): JNZ 0x0000f44a
0000f480(5): JMP 0x0000ed3e
0000f488(5): MOV RDI,qword ptr [RSP + 0x18]
0000f48d(8): TEST qword ptr [0x1800 + RDI + R9*0x1],RCX
0000f495(2): JNZ 0x0000f507
0000f497(4): LEA RDI,[RBX + R9*0x1]
0000f49b(3): XOR R8D,R8D
0000f49e(2): NOP
0000f4a0(3): MOV R10,qword ptr [RDI]
0000f4a3(4): ADD R8,0x1
0000f4a7(4): ADD RDI,0x20
0000f4ab(3): AND R10,RCX
0000f4ae(3): TEST R10,R10
0000f4b1(2): JZ 0x0000f4a0
0000f4b3(4): SHL R8,0x3
0000f4b7(8): TEST qword ptr [0xb8 + R15 + R9*0x1],RCX
0000f4bf(2): JZ 0x0000f4ce
0000f4c1(5): MOV RDI,qword ptr [R13 + R8*0x1]
0000f4c6(3): MOV qword ptr [RSI],RDI
0000f4c9(5): JMP 0x0000ed28
0000f4ce(4): MOV RDI,qword ptr [R12 + R8*0x1]
0000f4d2(3): MOV qword ptr [RSI],RDI
0000f4d5(5): JMP 0x0000ed28
0000f4da(5): MOV RDI,qword ptr [RSP + 0x18]
0000f4df(5): CALL 0x00001c60
0000f4e4(5): MOV ESI,0x100
0000f4e9(5): MOV EDI,0x8
0000f4ee(5): CALL 0x00001ec0
0000f4f3(5): MOV RBX,qword ptr [RSP + 0x8]
0000f4f8(3): TEST RAX,RAX
0000f4fb(4): MOV qword ptr [RBX + 0x58],RAX
0000f4ff(3): SETNZ AL
0000f502(5): JMP 0x0000edf2
0000f507(3): XOR R8D,R8D
0000f50a(2): JMP 0x0000f4b7
0000f50c(5): MOV RDI,qword ptr [RSP + 0x18]
0000f511(8): TEST qword ptr [0x1800 + RDI + RBX*0x1],RCX
0000f519(2): JNZ 0x0000f550
0000f51b(5): LEA R9,[R13 + RBX*0x1]
0000f520(3): XOR R8D,R8D
0000f523(3): MOV R15,qword ptr [R9]
0000f526(4): ADD R8,0x1
0000f52a(4): ADD R9,0x20
0000f52e(3): MOV RDI,R8
0000f531(3): AND R15,RCX
0000f534(3): TEST R15,R15
0000f537(2): JZ 0x0000f523
0000f539(4): MOV R8,qword ptr [R10 + RDI*0x8]
0000f53d(3): MOV qword ptr [RSI],R8
0000f540(4): MOV RDI,qword ptr [R14 + RDI*0x8]
0000f544(7): MOV qword ptr [0x800 + RSI],RDI
0000f54b(5): JMP 0x0000f463
0000f550(2): XOR EDI,EDI
0000f552(2): JMP 0x0000f539
0000f554(5): CALL 0x00001db0
0000f559(5): MOV RDI,qword ptr [RSP + 0x18]
0000f55e(5): CALL 0x00001c60
0000f563(3): TEST RBP,RBP
0000f566(6): JNZ 0x0000edf0
0000f56c(5): JMP 0x0000f4e4
0000f580(4): CMP byte ptr [RSI + 0x30],0x10
0000f584(2): JZ 0x0000f5e8
0000f586(1): PUSH RBP
0000f587(1): PUSH RBX
0000f588(3): MOV RBX,RSI
0000f58b(3): MOV RBP,RDI
0000f58e(4): SUB RSP,0x8
0000f592(4): MOV qword ptr [RBX + 0x18],RSI
0000f596(4): MOV RDX,qword ptr [RBX + 0x30]
0000f59a(4): MOV RSI,qword ptr [RSI + 0x28]
0000f59e(5): CALL 0x0000b6f0
0000f5a3(4): CMP RAX,-0x1
0000f5a7(3): MOV RDX,RAX
0000f5aa(4): MOV qword ptr [RBX + 0x38],RAX
0000f5ae(2): JZ 0x0000f600
0000f5b0(2): XOR EAX,EAX
0000f5b2(4): CMP byte ptr [RBX + 0x30],0xc
0000f5b6(2): JNZ 0x0000f5dc
0000f5b8(3): MOV ECX,dword ptr [RBX + 0x28]
0000f5bb(4): SHL RDX,0x4
0000f5bf(4): ADD RDX,qword ptr [RBP]
0000f5c3(6): AND ECX,0x3ff
0000f5c9(3): SHL ECX,0x8
0000f5cc(2): MOV ESI,ECX
0000f5ce(3): MOV ECX,dword ptr [RDX + 0x8]
0000f5d1(6): AND ECX,0xfffc00ff
0000f5d7(2): OR ECX,ESI
0000f5d9(3): MOV dword ptr [RDX + 0x8],ECX
0000f5dc(4): ADD RSP,0x8
0000f5e0(1): POP RBX
0000f5e1(1): POP RBP
0000f5e2(1): RET
0000f5e8(4): MOV RAX,qword ptr [RSI + 0x8]
0000f5ec(4): MOV RDX,qword ptr [RAX + 0x18]
0000f5f0(4): MOV RAX,qword ptr [RAX + 0x38]
0000f5f4(4): MOV qword ptr [RSI + 0x18],RDX
0000f5f8(4): MOV qword ptr [RSI + 0x38],RAX
0000f5fc(2): XOR EAX,EAX
0000f5fe(1): RET
0000f600(5): MOV EAX,0xc
0000f605(2): JMP 0x0000f5dc
0000f610(2): PUSH R12
0000f612(1): PUSH RBP
0000f613(3): MOV RBP,RDI
0000f616(1): PUSH RBX
0000f617(4): CMP qword ptr [RDI],0x0
0000f61b(2): JLE 0x0000f652
0000f61d(2): XOR EBX,EBX
0000f61f(3): XOR R12D,R12D
0000f622(6): NOP word ptr [RAX + RAX*0x1]
0000f628(4): MOV RAX,qword ptr [RBP + 0x10]
0000f62c(4): ADD R12,0x1
0000f630(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x28]
0000f635(5): CALL 0x00001c60
0000f63a(4): MOV RAX,qword ptr [RBP + 0x10]
0000f63e(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000f643(4): ADD RBX,0x30
0000f647(5): CALL 0x00001c60
0000f64c(4): CMP R12,qword ptr [RBP]
0000f650(2): JL 0x0000f628
0000f652(1): POP RBX
0000f653(4): MOV RDI,qword ptr [RBP + 0x10]
0000f657(1): POP RBP
0000f658(2): POP R12
0000f65a(5): JMP 0x00001c60
0000f660(2): PUSH R12
0000f662(1): PUSH RBP
0000f663(1): PUSH RBX
0000f664(3): MOV RAX,qword ptr [RDI]
0000f667(4): SUB RAX,0x1
0000f66b(3): TEST RAX,RAX
0000f66e(3): MOV qword ptr [RDI],RAX
0000f671(2): JS 0x0000f6d5
0000f673(4): LEA RBX,[RAX + RAX*0x2]
0000f677(3): MOV RAX,qword ptr [RSI]
0000f67a(3): MOV R12,RSI
0000f67d(4): SHL RCX,0x4
0000f681(3): MOV RBP,R9
0000f684(3): MOV RDI,R8
0000f687(4): SHL RBX,0x4
0000f68b(3): ADD RAX,RBX
0000f68e(3): MOV RSI,qword ptr [RAX]
0000f691(3): MOV qword ptr [RDX],RSI
0000f694(4): MOV RSI,qword ptr [RAX + 0x10]
0000f698(3): MOV RDX,RCX
0000f69b(5): CALL 0x00001ee0
0000f6a0(4): MOV RDI,qword ptr [RBP + 0x10]
0000f6a4(5): CALL 0x00001c60
0000f6a9(4): MOV RAX,qword ptr [R12]
0000f6ad(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000f6b2(5): CALL 0x00001c60
0000f6b7(4): ADD RBX,qword ptr [R12]
0000f6bb(5): MOVDQU XMM0,xmmword ptr [RBX + 0x18]
0000f6c0(4): MOVAPS xmmword ptr [RBP],XMM0
0000f6c4(4): MOV RAX,qword ptr [RBX + 0x28]
0000f6c8(4): MOV qword ptr [RBP + 0x10],RAX
0000f6cc(4): MOV RAX,qword ptr [RBX + 0x8]
0000f6d0(1): POP RBX
0000f6d1(1): POP RBP
0000f6d2(2): POP R12
0000f6d4(1): RET
0000f6d5(7): LEA RCX,[0x1cca0]
0000f6dc(7): LEA RSI,[0x1c6d0]
0000f6e3(7): LEA RDI,[0x1c738]
0000f6ea(5): MOV EDX,0x555
0000f6ef(5): CALL 0x00001e30
0000f6f4(2): NOP
0000f6f6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000f700(1): PUSH RBP
0000f701(1): PUSH RBX
0000f702(3): MOV RBP,RDI
0000f705(3): MOV RDI,RSI
0000f708(3): MOV RBX,RSI
0000f70b(4): SUB RSP,0x8
0000f70f(5): CALL 0x00001da0
0000f714(4): CMP RAX,0x1
0000f718(2): JNZ 0x0000f740
0000f71a(3): MOVZX ECX,byte ptr [RBX]
0000f71d(3): MOV RDX,RCX
0000f720(3): AND ECX,0x3f
0000f723(4): SHR RDX,0x3
0000f727(3): SHL RAX,CL
0000f72a(3): AND EDX,0x18
0000f72d(5): OR qword ptr [RBP + RDX*0x1],RAX
0000f732(4): ADD RSP,0x8
0000f736(2): XOR EAX,EAX
0000f738(1): POP RBX
0000f739(1): POP RBP
0000f73a(1): RET
0000f740(4): ADD RSP,0x8
0000f744(5): MOV EAX,0x3
0000f749(1): POP RBX
0000f74a(1): POP RBP
0000f74b(1): RET
0000f750(2): PUSH R14
0000f752(2): PUSH R13
0000f754(3): MOV R13,RCX
0000f757(2): PUSH R12
0000f759(1): PUSH RBP
0000f75a(3): MOV R12,R9
0000f75d(1): PUSH RBX
0000f75e(3): MOV RBP,RDI
0000f761(3): MOV RBX,RSI
0000f764(4): SUB RSP,0x10
0000f768(9): TEST qword ptr [RSP + 0x40],0x400000
0000f771(2): JZ 0x0000f798
0000f773(7): LEA RDI,[0x1c747]
0000f77a(5): MOV ECX,0x6
0000f77f(3): MOV RSI,R9
0000f782(2): CMPSB.REPE RDI,RSI
0000f784(3): SETA AL
0000f787(2): SBB AL,0x0
0000f789(2): TEST AL,AL
0000f78b(6): JNZ 0x0000f886
0000f791(7): LEA R12,[0x1c741]
0000f798(4): MOV RCX,qword ptr [R13]
0000f79c(3): CMP qword ptr [R8],RCX
0000f79f(3): MOV RAX,qword ptr [RDX]
0000f7a2(6): JZ 0x0000f8b9
0000f7a8(4): LEA RDX,[RCX + 0x1]
0000f7ac(3): MOV RDI,R12
0000f7af(4): MOV qword ptr [R13],RDX
0000f7b3(4): LEA R13,[RAX + RCX*0x8]
0000f7b7(5): CALL 0x00001ea0
0000f7bc(7): LEA RDI,[0x1c753]
0000f7c3(4): MOV qword ptr [R13],RAX
0000f7c7(5): MOV ECX,0x6
0000f7cc(3): MOV RSI,R12
0000f7cf(2): CMPSB.REPE RDI,RSI
0000f7d1(3): SETA AL
0000f7d4(2): SBB AL,0x0
0000f7d6(2): TEST AL,AL
0000f7d8(2): JZ 0x0000f848
0000f7da(7): LEA RDI,[0x1c759]
0000f7e1(5): MOV ECX,0x6
0000f7e6(3): MOV RSI,R12
0000f7e9(2): CMPSB.REPE RDI,RSI
0000f7eb(3): SETA AL
0000f7ee(2): SBB AL,0x0
0000f7f0(2): TEST AL,AL
0000f7f2(6): JNZ 0x0000f8f8
0000f7f8(5): CALL 0x000020e0
0000f7fd(2): XOR ECX,ECX
0000f7ff(3): TEST RBP,RBP
0000f802(3): MOV RDX,qword ptr [RAX]
0000f805(5): MOV EDI,0x1
0000f80a(6): JNZ 0x0000faca
0000f810(4): TEST byte ptr [RDX + RCX*0x2],0x2
0000f814(2): JZ 0x0000f827
0000f816(3): MOV RAX,RCX
0000f819(3): MOV RSI,RDI
0000f81c(4): SAR RAX,0x6
0000f820(3): SHL RSI,CL
0000f823(4): OR qword ptr [RBX + RAX*0x8],RSI
0000f827(4): ADD RCX,0x1
0000f82b(7): CMP RCX,0x100
0000f832(2): JNZ 0x0000f810
0000f834(2): XOR EAX,EAX
0000f836(4): ADD RSP,0x10
0000f83a(1): POP RBX
0000f83b(1): POP RBP
0000f83c(2): POP R12
0000f83e(2): POP R13
0000f840(2): POP R14
0000f842(1): RET
0000f848(5): CALL 0x000020e0
0000f84d(2): XOR ECX,ECX
0000f84f(3): TEST RBP,RBP
0000f852(3): MOV RDX,qword ptr [RAX]
0000f855(5): MOV EDI,0x1
0000f85a(6): JNZ 0x0000fa4a
0000f860(4): TEST byte ptr [RDX + RCX*0x2],0x8
0000f864(2): JZ 0x0000f877
0000f866(3): MOV RAX,RCX
0000f869(3): MOV RSI,RDI
0000f86c(4): SAR RAX,0x6
0000f870(3): SHL RSI,CL
0000f873(4): OR qword ptr [RBX + RAX*0x8],RSI
0000f877(4): ADD RCX,0x1
0000f87b(7): CMP RCX,0x100
0000f882(2): JNZ 0x0000f860
0000f884(2): JMP 0x0000f834
0000f886(7): LEA RDI,[0x1c74d]
0000f88d(5): MOV ECX,0x6
0000f892(3): MOV RSI,R9
0000f895(2): CMPSB.REPE RDI,RSI
0000f897(4): MOV RCX,qword ptr [R13]
0000f89b(3): SETA AL
0000f89e(2): SBB AL,0x0
0000f8a0(2): TEST AL,AL
0000f8a2(7): LEA RAX,[0x1c741]
0000f8a9(4): CMOVZ R12,RAX
0000f8ad(3): CMP qword ptr [R8],RCX
0000f8b0(3): MOV RAX,qword ptr [RDX]
0000f8b3(6): JNZ 0x0000f7a8
0000f8b9(5): LEA R14,[RCX + RCX*0x1 + 0x1]
0000f8be(3): MOV RDI,RAX
0000f8c1(5): MOV qword ptr [RSP + 0x8],R8
0000f8c6(4): MOV qword ptr [RSP],RDX
0000f8ca(8): LEA RSI,[R14*0x8]
0000f8d2(5): CALL 0x00001f90
0000f8d7(3): TEST RAX,RAX
0000f8da(6): JZ 0x0000fbf8
0000f8e0(4): MOV RDX,qword ptr [RSP]
0000f8e4(5): MOV R8,qword ptr [RSP + 0x8]
0000f8e9(3): MOV qword ptr [RDX],RAX
0000f8ec(3): MOV qword ptr [R8],R14
0000f8ef(4): MOV RCX,qword ptr [R13]
0000f8f3(5): JMP 0x0000f7a8
0000f8f8(7): LEA RDI,[0x1c74d]
0000f8ff(5): MOV ECX,0x6
0000f904(3): MOV RSI,R12
0000f907(2): CMPSB.REPE RDI,RSI
0000f909(3): SETA AL
0000f90c(2): SBB AL,0x0
0000f90e(2): TEST AL,AL
0000f910(2): JZ 0x0000f97a
0000f912(7): LEA RDI,[0x1c75f]
0000f919(5): MOV ECX,0x6
0000f91e(3): MOV RSI,R12
0000f921(2): CMPSB.REPE RDI,RSI
0000f923(3): SETA AL
0000f926(2): SBB AL,0x0
0000f928(2): TEST AL,AL
0000f92a(6): JNZ 0x0000f9c2
0000f930(5): CALL 0x000020e0
0000f935(2): XOR ECX,ECX
0000f937(3): TEST RBP,RBP
0000f93a(3): MOV RDX,qword ptr [RAX]
0000f93d(5): MOV EDI,0x1
0000f942(6): JNZ 0x0000fc9e
0000f948(8): NOP dword ptr [RAX + RAX*0x1]
0000f950(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x20
0000f955(2): JZ 0x0000f968
0000f957(3): MOV RAX,RCX
0000f95a(3): MOV RSI,RDI
0000f95d(4): SAR RAX,0x6
0000f961(3): SHL RSI,CL
0000f964(4): OR qword ptr [RBX + RAX*0x8],RSI
0000f968(4): ADD RCX,0x1
0000f96c(7): CMP RCX,0x100
0000f973(2): JNZ 0x0000f950
0000f975(5): JMP 0x0000f834
0000f97a(5): CALL 0x000020e0
0000f97f(2): XOR ECX,ECX
0000f981(3): TEST RBP,RBP
0000f984(3): MOV RDX,qword ptr [RAX]
0000f987(5): MOV EDI,0x1
0000f98c(6): JNZ 0x0000fb62
0000f992(6): NOP word ptr [RAX + RAX*0x1]
0000f998(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x2
0000f99d(2): JZ 0x0000f9b0
0000f99f(3): MOV RAX,RCX
0000f9a2(3): MOV RSI,RDI
0000f9a5(4): SAR RAX,0x6
0000f9a9(3): SHL RSI,CL
0000f9ac(4): OR qword ptr [RBX + RAX*0x8],RSI
0000f9b0(4): ADD RCX,0x1
0000f9b4(7): CMP RCX,0x100
0000f9bb(2): JNZ 0x0000f998
0000f9bd(5): JMP 0x0000f834
0000f9c2(7): LEA RDI,[0x1c741]
0000f9c9(5): MOV ECX,0x6
0000f9ce(3): MOV RSI,R12
0000f9d1(2): CMPSB.REPE RDI,RSI
0000f9d3(3): SETA AL
0000f9d6(2): SBB AL,0x0
0000f9d8(2): TEST AL,AL
0000f9da(6): JZ 0x0000fa83
0000f9e0(7): LEA RDI,[0x1c77e]
0000f9e7(5): MOV ECX,0x6
0000f9ec(3): MOV RSI,R12
0000f9ef(2): CMPSB.REPE RDI,RSI
0000f9f1(3): SETA AL
0000f9f4(2): SBB AL,0x0
0000f9f6(2): TEST AL,AL
0000f9f8(6): JNZ 0x0000fb03
0000f9fe(5): CALL 0x000020e0
0000fa03(2): XOR ECX,ECX
0000fa05(3): TEST RBP,RBP
0000fa08(3): MOV RDX,qword ptr [RAX]
0000fa0b(5): MOV EDI,0x1
0000fa10(6): JNZ 0x0000feba
0000fa16(10): NOP word ptr CS:[RAX + RAX*0x1]
0000fa20(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x8
0000fa25(2): JZ 0x0000fa38
0000fa27(3): MOV RAX,RCX
0000fa2a(3): MOV RSI,RDI
0000fa2d(4): SAR RAX,0x6
0000fa31(3): SHL RSI,CL
0000fa34(4): OR qword ptr [RBX + RAX*0x8],RSI
0000fa38(4): ADD RCX,0x1
0000fa3c(7): CMP RCX,0x100
0000fa43(2): JNZ 0x0000fa20
0000fa45(5): JMP 0x0000f834
0000fa4a(2): XOR EAX,EAX
0000fa4c(4): NOP dword ptr [RAX]
0000fa50(4): TEST byte ptr [RDX + RAX*0x2],0x8
0000fa54(2): JZ 0x0000fa72
0000fa56(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fa5b(3): MOV R10,RDI
0000fa5e(3): MOV RSI,RCX
0000fa61(3): AND ECX,0x3f
0000fa64(4): SHR RSI,0x3
0000fa68(3): SHL R10,CL
0000fa6b(3): AND ESI,0x18
0000fa6e(4): OR qword ptr [RBX + RSI*0x1],R10
0000fa72(4): ADD RAX,0x1
0000fa76(6): CMP RAX,0x100
0000fa7c(2): JNZ 0x0000fa50
0000fa7e(5): JMP 0x0000f834
0000fa83(5): CALL 0x000020e0
0000fa88(2): XOR ECX,ECX
0000fa8a(3): TEST RBP,RBP
0000fa8d(3): MOV RDX,qword ptr [RAX]
0000fa90(5): MOV EDI,0x1
0000fa95(6): JNZ 0x0000fc68
0000fa9b(5): NOP dword ptr [RAX + RAX*0x1]
0000faa0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x4
0000faa5(2): JZ 0x0000fab8
0000faa7(3): MOV RAX,RCX
0000faaa(3): MOV RSI,RDI
0000faad(4): SAR RAX,0x6
0000fab1(3): SHL RSI,CL
0000fab4(4): OR qword ptr [RBX + RAX*0x8],RSI
0000fab8(4): ADD RCX,0x1
0000fabc(7): CMP RCX,0x100
0000fac3(2): JNZ 0x0000faa0
0000fac5(5): JMP 0x0000f834
0000faca(2): XOR EAX,EAX
0000facc(4): NOP dword ptr [RAX]
0000fad0(4): TEST byte ptr [RDX + RAX*0x2],0x2
0000fad4(2): JZ 0x0000faf2
0000fad6(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fadb(3): MOV R11,RDI
0000fade(3): MOV RSI,RCX
0000fae1(3): AND ECX,0x3f
0000fae4(4): SHR RSI,0x3
0000fae8(3): SHL R11,CL
0000faeb(3): AND ESI,0x18
0000faee(4): OR qword ptr [RBX + RSI*0x1],R11
0000faf2(4): ADD RAX,0x1
0000faf6(6): CMP RAX,0x100
0000fafc(2): JNZ 0x0000fad0
0000fafe(5): JMP 0x0000f834
0000fb03(7): LEA RDI,[0x1c765]
0000fb0a(5): MOV ECX,0x6
0000fb0f(3): MOV RSI,R12
0000fb12(2): CMPSB.REPE RDI,RSI
0000fb14(3): SETA AL
0000fb17(2): SBB AL,0x0
0000fb19(2): TEST AL,AL
0000fb1b(2): JNZ 0x0000fb9c
0000fb1d(5): CALL 0x000020e0
0000fb22(2): XOR ECX,ECX
0000fb24(3): TEST RBP,RBP
0000fb27(3): MOV RDX,qword ptr [RAX]
0000fb2a(5): MOV EDI,0x1
0000fb2f(6): JNZ 0x0000ff27
0000fb35(3): NOP dword ptr [RAX]
0000fb38(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x40
0000fb3d(2): JZ 0x0000fb50
0000fb3f(3): MOV RAX,RCX
0000fb42(3): MOV RSI,RDI
0000fb45(4): SAR RAX,0x6
0000fb49(3): SHL RSI,CL
0000fb4c(4): OR qword ptr [RBX + RAX*0x8],RSI
0000fb50(4): ADD RCX,0x1
0000fb54(7): CMP RCX,0x100
0000fb5b(2): JNZ 0x0000fb38
0000fb5d(5): JMP 0x0000f834
0000fb62(2): XOR EAX,EAX
0000fb64(4): NOP dword ptr [RAX]
0000fb68(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x2
0000fb6d(2): JZ 0x0000fb8b
0000fb6f(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fb74(3): MOV R14,RDI
0000fb77(3): MOV RSI,RCX
0000fb7a(3): AND ECX,0x3f
0000fb7d(4): SHR RSI,0x3
0000fb81(3): SHL R14,CL
0000fb84(3): AND ESI,0x18
0000fb87(4): OR qword ptr [RBX + RSI*0x1],R14
0000fb8b(4): ADD RAX,0x1
0000fb8f(6): CMP RAX,0x100
0000fb95(2): JNZ 0x0000fb68
0000fb97(5): JMP 0x0000f834
0000fb9c(7): LEA RDI,[0x1c747]
0000fba3(5): MOV ECX,0x6
0000fba8(3): MOV RSI,R12
0000fbab(2): CMPSB.REPE RDI,RSI
0000fbad(3): SETA AL
0000fbb0(2): SBB AL,0x0
0000fbb2(2): TEST AL,AL
0000fbb4(2): JNZ 0x0000fc02
0000fbb6(5): CALL 0x000020e0
0000fbbb(2): XOR ECX,ECX
0000fbbd(3): TEST RBP,RBP
0000fbc0(3): MOV RAX,qword ptr [RAX]
0000fbc3(5): MOV EDI,0x1
0000fbc8(6): JNZ 0x0000fef0
0000fbce(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x1
0000fbd3(2): JZ 0x0000fbe6
0000fbd5(3): MOV RDX,RCX
0000fbd8(3): MOV RSI,RDI
0000fbdb(4): SAR RDX,0x6
0000fbdf(3): SHL RSI,CL
0000fbe2(4): OR qword ptr [RBX + RDX*0x8],RSI
0000fbe6(4): ADD RCX,0x1
0000fbea(7): CMP RCX,0x100
0000fbf1(2): JNZ 0x0000fbce
0000fbf3(5): JMP 0x0000f834
0000fbf8(5): MOV EAX,0xc
0000fbfd(5): JMP 0x0000f836
0000fc02(7): LEA RDI,[0x1c76b]
0000fc09(5): MOV ECX,0x6
0000fc0e(3): MOV RSI,R12
0000fc11(2): CMPSB.REPE RDI,RSI
0000fc13(3): SETA AL
0000fc16(2): SBB AL,0x0
0000fc18(2): TEST AL,AL
0000fc1a(6): JNZ 0x0000fd0e
0000fc20(5): CALL 0x000020e0
0000fc25(2): XOR ECX,ECX
0000fc27(3): TEST RBP,RBP
0000fc2a(3): MOV RDX,qword ptr [RAX]
0000fc2d(5): MOV ESI,0x1
0000fc32(6): JNZ 0x0000fcd4
0000fc38(4): TEST byte ptr [RDX + RCX*0x2],0x1
0000fc3c(2): JZ 0x0000fc4f
0000fc3e(3): MOV RAX,RCX
0000fc41(3): MOV RDI,RSI
0000fc44(4): SAR RAX,0x6
0000fc48(3): SHL RDI,CL
0000fc4b(4): OR qword ptr [RBX + RAX*0x8],RDI
0000fc4f(4): ADD RCX,0x1
0000fc53(7): CMP RCX,0x100
0000fc5a(2): JNZ 0x0000fc38
0000fc5c(5): JMP 0x0000f834
0000fc68(2): XOR EAX,EAX
0000fc6a(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x4
0000fc6f(2): JZ 0x0000fc8d
0000fc71(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fc76(3): MOV R9,RDI
0000fc79(3): MOV RSI,RCX
0000fc7c(3): AND ECX,0x3f
0000fc7f(4): SHR RSI,0x3
0000fc83(3): SHL R9,CL
0000fc86(3): AND ESI,0x18
0000fc89(4): OR qword ptr [RBX + RSI*0x1],R9
0000fc8d(4): ADD RAX,0x1
0000fc91(6): CMP RAX,0x100
0000fc97(2): JNZ 0x0000fc6a
0000fc99(5): JMP 0x0000f834
0000fc9e(2): XOR EAX,EAX
0000fca0(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x20
0000fca5(2): JZ 0x0000fcc3
0000fca7(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fcac(3): MOV R9,RDI
0000fcaf(3): MOV RSI,RCX
0000fcb2(3): AND ECX,0x3f
0000fcb5(4): SHR RSI,0x3
0000fcb9(3): SHL R9,CL
0000fcbc(3): AND ESI,0x18
0000fcbf(4): OR qword ptr [RBX + RSI*0x1],R9
0000fcc3(4): ADD RAX,0x1
0000fcc7(6): CMP RAX,0x100
0000fccd(2): JNZ 0x0000fca0
0000fccf(5): JMP 0x0000f834
0000fcd4(2): XOR EAX,EAX
0000fcd6(5): MOV EDI,0x1
0000fcdb(4): TEST byte ptr [RDX + RAX*0x2],0x1
0000fcdf(2): JZ 0x0000fcfd
0000fce1(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fce6(3): MOV R14,RDI
0000fce9(3): MOV RSI,RCX
0000fcec(3): AND ECX,0x3f
0000fcef(4): SHR RSI,0x3
0000fcf3(3): SHL R14,CL
0000fcf6(3): AND ESI,0x18
0000fcf9(4): OR qword ptr [RBX + RSI*0x1],R14
0000fcfd(4): ADD RAX,0x1
0000fd01(6): CMP RAX,0x100
0000fd07(2): JNZ 0x0000fcdb
0000fd09(5): JMP 0x0000f834
0000fd0e(7): LEA RSI,[0x1c771]
0000fd15(3): MOV RDI,R12
0000fd18(5): CALL 0x00001ed0
0000fd1d(2): TEST EAX,EAX
0000fd1f(2): JNZ 0x0000fd9a
0000fd21(5): CALL 0x000020e0
0000fd26(2): XOR ECX,ECX
0000fd28(3): TEST RBP,RBP
0000fd2b(3): MOV RSI,qword ptr [RAX]
0000fd2e(5): MOV EDX,0x1
0000fd33(2): JNZ 0x0000fd5f
0000fd35(5): CMP word ptr [RSI + RCX*0x2],0x0
0000fd3a(2): JNS 0x0000fd4d
0000fd3c(3): MOV RAX,RCX
0000fd3f(3): MOV RDI,RDX
0000fd42(4): SAR RAX,0x6
0000fd46(3): SHL RDI,CL
0000fd49(4): OR qword ptr [RBX + RAX*0x8],RDI
0000fd4d(4): ADD RCX,0x1
0000fd51(7): CMP RCX,0x100
0000fd58(2): JNZ 0x0000fd35
0000fd5a(5): JMP 0x0000f834
0000fd5f(2): XOR EAX,EAX
0000fd61(5): MOV EDI,0x1
0000fd66(5): CMP word ptr [RSI + RAX*0x2],0x0
0000fd6b(2): JNS 0x0000fd89
0000fd6d(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fd72(3): MOV R9,RDI
0000fd75(3): MOV RDX,RCX
0000fd78(3): AND ECX,0x3f
0000fd7b(4): SHR RDX,0x3
0000fd7f(3): SHL R9,CL
0000fd82(3): AND EDX,0x18
0000fd85(4): OR qword ptr [RBX + RDX*0x1],R9
0000fd89(4): ADD RAX,0x1
0000fd8d(6): CMP RAX,0x100
0000fd93(2): JNZ 0x0000fd66
0000fd95(5): JMP 0x0000f834
0000fd9a(7): LEA RSI,[0x1c777]
0000fda1(3): MOV RDI,R12
0000fda4(5): CALL 0x00001ed0
0000fda9(2): TEST EAX,EAX
0000fdab(2): JNZ 0x0000fe24
0000fdad(5): CALL 0x000020e0
0000fdb2(2): XOR ECX,ECX
0000fdb4(3): TEST RBP,RBP
0000fdb7(3): MOV RSI,qword ptr [RAX]
0000fdba(5): MOV EDX,0x1
0000fdbf(2): JNZ 0x0000fdea
0000fdc1(4): TEST byte ptr [RSI + RCX*0x2],0x4
0000fdc5(2): JZ 0x0000fdd8
0000fdc7(3): MOV RAX,RCX
0000fdca(3): MOV RDI,RDX
0000fdcd(4): SAR RAX,0x6
0000fdd1(3): SHL RDI,CL
0000fdd4(4): OR qword ptr [RBX + RAX*0x8],RDI
0000fdd8(4): ADD RCX,0x1
0000fddc(7): CMP RCX,0x100
0000fde3(2): JNZ 0x0000fdc1
0000fde5(5): JMP 0x0000f834
0000fdea(2): XOR EAX,EAX
0000fdec(5): MOV EDI,0x1
0000fdf1(4): TEST byte ptr [RSI + RAX*0x2],0x4
0000fdf5(2): JZ 0x0000fe13
0000fdf7(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fdfc(3): MOV R14,RDI
0000fdff(3): MOV RDX,RCX
0000fe02(3): AND ECX,0x3f
0000fe05(4): SHR RDX,0x3
0000fe09(3): SHL R14,CL
0000fe0c(3): AND EDX,0x18
0000fe0f(4): OR qword ptr [RBX + RDX*0x1],R14
0000fe13(4): ADD RAX,0x1
0000fe17(6): CMP RAX,0x100
0000fe1d(2): JNZ 0x0000fdf1
0000fe1f(5): JMP 0x0000f834
0000fe24(7): LEA RSI,[0x1c77d]
0000fe2b(3): MOV RDI,R12
0000fe2e(5): CALL 0x00001ed0
0000fe33(2): TEST EAX,EAX
0000fe35(2): JNZ 0x0000feb0
0000fe37(5): CALL 0x000020e0
0000fe3c(2): XOR ECX,ECX
0000fe3e(3): TEST RBP,RBP
0000fe41(3): MOV RSI,qword ptr [RAX]
0000fe44(5): MOV EDX,0x1
0000fe49(2): JNZ 0x0000fe75
0000fe4b(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x10
0000fe50(2): JZ 0x0000fe63
0000fe52(3): MOV RAX,RCX
0000fe55(3): MOV RDI,RDX
0000fe58(4): SAR RAX,0x6
0000fe5c(3): SHL RDI,CL
0000fe5f(4): OR qword ptr [RBX + RAX*0x8],RDI
0000fe63(4): ADD RCX,0x1
0000fe67(7): CMP RCX,0x100
0000fe6e(2): JNZ 0x0000fe4b
0000fe70(5): JMP 0x0000f834
0000fe75(2): XOR EAX,EAX
0000fe77(5): MOV EDI,0x1
0000fe7c(5): TEST byte ptr [RSI + RAX*0x2 + 0x1],0x10
0000fe81(2): JZ 0x0000fe9f
0000fe83(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fe88(3): MOV R9,RDI
0000fe8b(3): MOV RDX,RCX
0000fe8e(3): AND ECX,0x3f
0000fe91(4): SHR RDX,0x3
0000fe95(3): SHL R9,CL
0000fe98(3): AND EDX,0x18
0000fe9b(4): OR qword ptr [RBX + RDX*0x1],R9
0000fe9f(4): ADD RAX,0x1
0000fea3(6): CMP RAX,0x100
0000fea9(2): JNZ 0x0000fe7c
0000feab(5): JMP 0x0000f834
0000feb0(5): MOV EAX,0x4
0000feb5(5): JMP 0x0000f836
0000feba(2): XOR EAX,EAX
0000febc(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x8
0000fec1(2): JZ 0x0000fedf
0000fec3(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000fec8(3): MOV R14,RDI
0000fecb(3): MOV RSI,RCX
0000fece(3): AND ECX,0x3f
0000fed1(4): SHR RSI,0x3
0000fed5(3): SHL R14,CL
0000fed8(3): AND ESI,0x18
0000fedb(4): OR qword ptr [RBX + RSI*0x1],R14
0000fedf(4): ADD RAX,0x1
0000fee3(6): CMP RAX,0x100
0000fee9(2): JNZ 0x0000febc
0000feeb(5): JMP 0x0000f834
0000fef0(2): XOR EDX,EDX
0000fef2(5): TEST byte ptr [RAX + RDX*0x2 + 0x1],0x1
0000fef7(2): JZ 0x0000ff15
0000fef9(5): MOVZX ECX,byte ptr [RBP + RDX*0x1]
0000fefe(3): MOV R9,RDI
0000ff01(3): MOV RSI,RCX
0000ff04(3): AND ECX,0x3f
0000ff07(4): SHR RSI,0x3
0000ff0b(3): SHL R9,CL
0000ff0e(3): AND ESI,0x18
0000ff11(4): OR qword ptr [RBX + RSI*0x1],R9
0000ff15(4): ADD RDX,0x1
0000ff19(7): CMP RDX,0x100
0000ff20(2): JNZ 0x0000fef2
0000ff22(5): JMP 0x0000f834
0000ff27(2): XOR EAX,EAX
0000ff29(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x40
0000ff2e(2): JZ 0x0000ff4c
0000ff30(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000ff35(3): MOV R14,RDI
0000ff38(3): MOV RSI,RCX
0000ff3b(3): AND ECX,0x3f
0000ff3e(4): SHR RSI,0x3
0000ff42(3): SHL R14,CL
0000ff45(3): AND ESI,0x18
0000ff48(4): OR qword ptr [RBX + RSI*0x1],R14
0000ff4c(4): ADD RAX,0x1
0000ff50(6): CMP RAX,0x100
0000ff56(2): JNZ 0x0000ff29
0000ff58(5): JMP 0x0000f834
0000ff60(2): PUSH R15
0000ff62(2): PUSH R14
0000ff64(3): MOV R14,RDX
0000ff67(2): PUSH R13
0000ff69(2): PUSH R12
0000ff6b(3): MOV R13,RCX
0000ff6e(1): PUSH RBP
0000ff6f(1): PUSH RBX
0000ff70(3): MOV RBP,RDI
0000ff73(5): MOV EDI,0x20
0000ff78(3): MOV R12D,R8D
0000ff7b(4): SUB RSP,0x58
0000ff7f(4): MOV qword ptr [RSP],RSI
0000ff83(5): MOV ESI,0x1
0000ff88(5): MOV qword ptr [RSP + 0x8],R9
0000ff8d(9): MOV RAX,qword ptr FS:[0x28]
0000ff96(5): MOV qword ptr [RSP + 0x48],RAX
0000ff9b(2): XOR EAX,EAX
0000ff9d(9): MOV qword ptr [RSP + 0x18],0x0
0000ffa6(5): CALL 0x00001ec0
0000ffab(3): TEST RAX,RAX
0000ffae(6): JZ 0x00010170
0000ffb4(5): MOV ESI,0x1
0000ffb9(5): MOV EDI,0x50
0000ffbe(3): MOV RBX,RAX
0000ffc1(5): CALL 0x00001ec0
0000ffc6(3): TEST RAX,RAX
0000ffc9(3): MOV R15,RAX
0000ffcc(6): JZ 0x00010180
0000ffd2(4): MOVZX EAX,byte ptr [RAX + 0x20]
0000ffd6(4): SUB RSP,0x8
0000ffda(3): MOV EDX,R12D
0000ffdd(2): PUSH 0x0
0000ffdf(3): AND EDX,0x1
0000ffe2(5): MOV RDI,qword ptr [RSP + 0x10]
0000ffe7(4): LEA RCX,[R15 + 0x48]
0000ffeb(3): MOV R9,R14
0000ffee(3): MOV RSI,RBX
0000fff1(5): LEA R8,[RSP + 0x28]
0000fff6(3): AND EAX,0xfffffffe
0000fff9(2): OR EAX,EDX
0000fffb(4): LEA RDX,[R15 + 0x18]
0000ffff(4): MOV byte ptr [R15 + 0x20],AL
00010003(5): CALL 0x0000f750
00010008(2): TEST EAX,EAX
0001000a(1): POP RDX
0001000b(1): POP RCX
0001000c(6): JNZ 0x000101a0
00010012(5): MOVSX RCX,byte ptr [R13]
00010017(5): MOV ESI,0x1
0001001c(2): TEST CL,CL
0001001e(2): JZ 0x0001005a
00010020(4): LEA RAX,[RCX + 0x3f]
00010024(3): TEST RCX,RCX
00010027(3): MOV RDX,RCX
0001002a(4): CMOVNS RAX,RCX
0001002e(4): SAR RDX,0x3f
00010032(4): ADD R13,0x1
00010036(4): SHR RDX,0x3a
0001003a(4): SAR RAX,0x6
0001003e(3): ADD RCX,RDX
00010041(3): AND ECX,0x3f
00010044(3): SUB RCX,RDX
00010047(3): MOV RDX,RSI
0001004a(3): SHL RDX,CL
0001004d(5): MOVSX RCX,byte ptr [R13]
00010052(4): OR qword ptr [RBX + RAX*0x8],RDX
00010056(2): TEST CL,CL
00010058(2): JNZ 0x00010020
0001005a(3): TEST R12B,R12B
0001005d(2): JZ 0x00010072
0001005f(4): LEA RDX,[RBX + 0x20]
00010063(3): MOV RAX,RBX
00010066(3): NOT qword ptr [RAX]
00010069(4): ADD RAX,0x8
0001006d(3): CMP RDX,RAX
00010070(2): JNZ 0x00010066
00010072(7): CMP dword ptr [0xb4 + RBP],0x1
00010079(2): JLE 0x00010093
0001007b(4): MOV RCX,qword ptr [RBP + 0x78]
0001007f(2): XOR EAX,EAX
00010081(4): MOV RDX,qword ptr [RCX + RAX*0x1]
00010085(4): AND qword ptr [RBX + RAX*0x1],RDX
00010089(4): ADD RAX,0x8
0001008d(4): CMP RAX,0x20
00010091(2): JNZ 0x00010081
00010093(5): LEA R9,[RSP + 0x20]
00010098(4): LEA R12,[RBP + 0x70]
0001009c(7): LEA R13,[0x80 + RBP]
000100a3(2): XOR ECX,ECX
000100a5(2): XOR EDX,EDX
000100a7(5): MOV byte ptr [RSP + 0x28],0x3
000100ac(3): MOV R8,R9
000100af(3): MOV RSI,R13
000100b2(3): MOV RDI,R12
000100b5(5): MOV qword ptr [RSP + 0x20],RBX
000100ba(4): MOV qword ptr [RSP],R9
000100be(5): CALL 0x0000cc10
000100c3(3): TEST RAX,RAX
000100c6(3): MOV R14,RAX
000100c9(6): JZ 0x00010160
000100cf(7): CMP dword ptr [0xb4 + RBP],0x1
000100d6(2): JLE 0x00010150
000100d8(7): OR byte ptr [0xb0 + RBP],0x2
000100df(4): MOV R9,qword ptr [RSP]
000100e3(2): XOR ECX,ECX
000100e5(2): XOR EDX,EDX
000100e7(3): MOV RSI,R13
000100ea(3): MOV RDI,R12
000100ed(5): MOV byte ptr [RSP + 0x28],0x6
000100f2(5): MOV qword ptr [RSP + 0x20],R15
000100f7(3): MOV R8,R9
000100fa(5): CALL 0x0000cc10
000100ff(3): TEST RAX,RAX
00010102(2): JZ 0x00010160
00010104(5): LEA R8,[RSP + 0x30]
00010109(3): MOV RDX,R14
0001010c(3): MOV RCX,RAX
0001010f(3): MOV RSI,R13
00010112(3): MOV RDI,R12
00010115(5): MOV byte ptr [RSP + 0x38],0xa
0001011a(5): CALL 0x0000cc10
0001011f(3): MOV R14,RAX
00010122(5): MOV RDI,qword ptr [RSP + 0x48]
00010127(9): XOR RDI,qword ptr FS:[0x28]
00010130(3): MOV RAX,R14
00010133(6): JNZ 0x000101c5
00010139(4): ADD RSP,0x58
0001013d(1): POP RBX
0001013e(1): POP RBP
0001013f(2): POP R12
00010141(2): POP R13
00010143(2): POP R14
00010145(2): POP R15
00010147(1): RET
00010150(3): MOV RDI,R15
00010153(5): CALL 0x0000b670
00010158(2): JMP 0x00010122
00010160(3): MOV RDI,RBX
00010163(5): CALL 0x00001c60
00010168(3): MOV RDI,R15
0001016b(5): CALL 0x0000b670
00010170(5): MOV RAX,qword ptr [RSP + 0x8]
00010175(3): XOR R14D,R14D
00010178(6): MOV dword ptr [RAX],0xc
0001017e(2): JMP 0x00010122
00010180(3): MOV RDI,RBX
00010183(3): XOR R14D,R14D
00010186(5): CALL 0x00001c60
0001018b(5): MOV RAX,qword ptr [RSP + 0x8]
00010190(6): MOV dword ptr [RAX],0xc
00010196(2): JMP 0x00010122
000101a0(3): MOV RDI,RBX
000101a3(3): MOV dword ptr [RSP],EAX
000101a6(3): XOR R14D,R14D
000101a9(5): CALL 0x00001c60
000101ae(3): MOV RDI,R15
000101b1(5): CALL 0x0000b670
000101b6(5): MOV RDI,qword ptr [RSP + 0x8]
000101bb(3): MOV EAX,dword ptr [RSP]
000101be(2): MOV dword ptr [RDI],EAX
000101c0(5): JMP 0x00010122
000101c5(5): CALL 0x00001db0
000101ca(6): NOP word ptr [RAX + RAX*0x1]
000101d0(2): PUSH R15
000101d2(2): PUSH R14
000101d4(3): MOV RAX,RDI
000101d7(2): PUSH R13
000101d9(2): PUSH R12
000101db(1): PUSH RBP
000101dc(1): PUSH RBX
000101dd(2): XOR EBX,EBX
000101df(3): MOV RBP,RCX
000101e2(7): SUB RSP,0x178
000101e9(3): MOV RAX,qword ptr [RAX]
000101ec(5): MOV qword ptr [RSP + 0x30],RDI
000101f1(5): MOV qword ptr [RSP + 0x20],RSI
000101f6(9): MOV RDI,qword ptr FS:[0x28]
000101ff(8): MOV qword ptr [0x168 + RSP],RDI
00010207(2): XOR EDI,EDI
00010209(7): CMP dword ptr [0xb4 + RAX],0x1
00010210(5): MOV qword ptr [RSP + 0x28],RDX
00010215(5): MOV qword ptr [RSP + 0x8],RAX
0001021a(2): JNZ 0x00010233
0001021c(5): MOV RAX,qword ptr [RSP + 0x30]
00010221(4): MOV RAX,qword ptr [RAX + 0x18]
00010225(3): MOV RBX,RAX
00010228(4): MOV qword ptr [RSP],RAX
0001022c(4): SHR RBX,0x16
00010230(3): AND EBX,0x1
00010233(5): MOV RAX,qword ptr [RSP + 0x20]
00010238(4): CMP qword ptr [RAX],0x0
0001023c(6): JLE 0x0001064d
00010242(5): LEA RAX,[RSP + 0x58]
00010247(8): MOV qword ptr [RSP],0x0
0001024f(5): MOV qword ptr [RSP + 0x40],RAX
00010254(5): LEA RAX,[RSP + 0x54]
00010259(5): MOV qword ptr [RSP + 0x48],RAX
0001025e(5): LEA RAX,[RSP + 0x60]
00010263(5): MOV qword ptr [RSP + 0x38],RAX
00010268(2): JMP 0x000102ae
00010270(3): CMP EAX,0x3
00010273(6): JZ 0x00010566
00010279(3): CMP EAX,0x6
0001027c(6): JZ 0x00010408
00010282(3): AND EDX,0xfffffffd
00010285(3): CMP DL,0x5
00010288(6): JZ 0x00010684
0001028e(3): CMP EAX,0x2
00010291(6): JZ 0x000105e4
00010297(5): MOV RDI,qword ptr [RSP + 0x20]
0001029c(5): ADD qword ptr [RSP],0x1
000102a1(4): MOV RAX,qword ptr [RSP]
000102a5(3): CMP RAX,qword ptr [RDI]
000102a8(6): JGE 0x0001064d
000102ae(5): MOV RAX,qword ptr [RSP + 0x28]
000102b3(4): MOV RDI,qword ptr [RSP]
000102b7(3): MOV RAX,qword ptr [RAX]
000102ba(4): MOV R12,qword ptr [RAX + RDI*0x8]
000102be(5): MOV RAX,qword ptr [RSP + 0x8]
000102c3(3): MOV RCX,qword ptr [RAX]
000102c6(3): MOV RAX,R12
000102c9(4): SHL RAX,0x4
000102cd(5): MOV qword ptr [RSP + 0x10],RAX
000102d2(4): LEA RSI,[RCX + RAX*0x1]
000102d6(4): MOVZX EAX,byte ptr [RSI + 0x8]
000102da(3): CMP EAX,0x1
000102dd(2): MOV EDX,EAX
000102df(2): JNZ 0x00010270
000102e1(4): MOVZX R13D,byte ptr [RSI]
000102e5(2): TEST EBX,EBX
000102e7(6): MOV byte ptr [RBP + R13*0x1],0x1
000102ed(2): JZ 0x00010300
000102ef(5): CALL 0x000020d0
000102f4(3): MOV RAX,qword ptr [RAX]
000102f7(4): MOVSXD RAX,dword ptr [RAX + R13*0x4]
000102fb(5): MOV byte ptr [RBP + RAX*0x1],0x1
00010300(5): MOV RAX,qword ptr [RSP + 0x30]
00010305(4): TEST byte ptr [RAX + 0x1a],0x40
00010309(2): JZ 0x00010297
0001030b(5): MOV RSI,qword ptr [RSP + 0x8]
00010310(7): CMP dword ptr [0xb4 + RSI],0x1
00010317(6): JLE 0x00010297
0001031d(3): MOV RAX,qword ptr [RSI]
00010320(5): MOV RDI,qword ptr [RSP + 0x10]
00010325(4): MOVZX EDX,byte ptr [RAX + RDI*0x1]
00010329(4): MOV byte ptr [RSP + 0x60],DL
0001032d(5): LEA RDX,[R12 + 0x1]
00010332(4): CMP qword ptr [RSI + 0x10],RDX
00010336(6): JBE 0x00010676
0001033c(5): LEA RCX,[RAX + RDI*0x1 + 0x10]
00010341(3): MOV EAX,dword ptr [RCX + 0x8]
00010344(5): AND EAX,0x2000ff
00010349(5): CMP EAX,0x200001
0001034e(6): JNZ 0x00010676
00010354(4): ADD RDI,0x20
00010358(3): MOV R13,RDI
0001035b(5): MOV RDI,qword ptr [RSP + 0x38]
00010360(4): LEA RAX,[RDI + 0x1]
00010364(2): JMP 0x0001038b
00010370(3): MOV RCX,qword ptr [RSI]
00010373(3): ADD RCX,R13
00010376(4): ADD R13,0x10
0001037a(3): MOV EDX,dword ptr [RCX + 0x8]
0001037d(6): AND EDX,0x2000ff
00010383(6): CMP EDX,0x200001
00010389(2): JNZ 0x000103a4
0001038b(3): MOVZX EDX,byte ptr [RCX]
0001038e(4): ADD RAX,0x1
00010392(3): MOV byte ptr [RAX + -0x1],DL
00010395(3): MOV RDX,RAX
00010398(3): SUB RDX,RDI
0001039b(3): ADD RDX,R12
0001039e(4): CMP qword ptr [RSI + 0x10],RDX
000103a2(2): JA 0x00010370
000103a4(5): MOV RSI,qword ptr [RSP + 0x38]
000103a9(5): MOV RCX,qword ptr [RSP + 0x40]
000103ae(5): MOV RDI,qword ptr [RSP + 0x48]
000103b3(3): SUB RAX,RSI
000103b6(7): MOV qword ptr [RCX],0x0
000103bd(3): MOV R12,RAX
000103c0(3): MOV RDX,RAX
000103c3(5): CALL 0x0000a3b0
000103c8(3): CMP R12,RAX
000103cb(6): JNZ 0x00010297
000103d1(4): MOV EDI,dword ptr [RSP + 0x54]
000103d5(5): CALL 0x00002040
000103da(5): MOV RDX,qword ptr [RSP + 0x40]
000103df(5): MOV RDI,qword ptr [RSP + 0x38]
000103e4(2): MOV ESI,EAX
000103e6(5): CALL 0x00001f30
000103eb(4): CMP RAX,-0x1
000103ef(6): JZ 0x00010297
000103f5(5): MOVZX EAX,byte ptr [RSP + 0x60]
000103fa(5): MOV byte ptr [RBP + RAX*0x1],0x1
000103ff(5): JMP 0x00010297
00010408(5): MOV RAX,qword ptr [RSP + 0x8]
0001040d(3): MOV R12,qword ptr [RSI]
00010410(7): CMP dword ptr [0xb4 + RAX],0x1
00010417(2): JLE 0x0001043d
00010419(6): CMP qword ptr [R12 + 0x48],0x0
0001041f(6): JNZ 0x0001051f
00010425(6): TEST byte ptr [R12 + 0x20],0x1
0001042b(6): JNZ 0x0001051f
00010431(6): CMP qword ptr [R12 + 0x40],0x0
00010437(6): JNZ 0x0001051f
0001043d(3): XOR R13D,R13D
00010440(6): CMP qword ptr [R12 + 0x28],0x0
00010446(6): JLE 0x00010297
0001044c(3): MOV R15,R12
0001044f(5): MOV R14,qword ptr [RSP + 0x40]
00010454(3): MOV R12,RBP
00010457(3): MOV RBP,R13
0001045a(3): MOV R13D,EBX
0001045d(2): JMP 0x0001046d
0001045f(4): ADD RBP,0x1
00010463(4): CMP RBP,qword ptr [R15 + 0x28]
00010467(6): JGE 0x00010514
0001046d(7): MOV qword ptr [R14],0x0
00010474(3): MOV RAX,qword ptr [R15]
00010477(3): MOV RDX,R14
0001047a(5): MOV RDI,qword ptr [RSP + 0x38]
0001047f(8): LEA RBX,[RBP*0x4]
00010487(3): MOV ESI,dword ptr [RAX + RBP*0x4]
0001048a(5): CALL 0x00001f30
0001048f(4): CMP RAX,-0x1
00010493(2): JZ 0x000104bf
00010495(5): MOVZX EDX,byte ptr [RSP + 0x60]
0001049a(3): TEST R13D,R13D
0001049d(5): MOV byte ptr [R12 + RDX*0x1],0x1
000104a2(5): MOV qword ptr [RSP + 0x10],RDX
000104a7(2): JZ 0x000104bf
000104a9(5): CALL 0x000020d0
000104ae(5): MOV RDX,qword ptr [RSP + 0x10]
000104b3(3): MOV RAX,qword ptr [RAX]
000104b6(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
000104ba(5): MOV byte ptr [R12 + RAX*0x1],0x1
000104bf(5): MOV RAX,qword ptr [RSP + 0x30]
000104c4(4): TEST byte ptr [RAX + 0x1a],0x40
000104c8(2): JZ 0x0001045f
000104ca(5): MOV RAX,qword ptr [RSP + 0x8]
000104cf(7): CMP dword ptr [0xb4 + RAX],0x1
000104d6(2): JLE 0x0001045f
000104d8(3): MOV RAX,qword ptr [R15]
000104db(3): MOV EDI,dword ptr [RAX + RBX*0x1]
000104de(5): CALL 0x00002040
000104e3(5): MOV RDI,qword ptr [RSP + 0x38]
000104e8(3): MOV RDX,R14
000104eb(2): MOV ESI,EAX
000104ed(5): CALL 0x00001f30
000104f2(4): CMP RAX,-0x1
000104f6(6): JZ 0x0001045f
000104fc(5): MOVZX EAX,byte ptr [RSP + 0x60]
00010501(4): ADD RBP,0x1
00010505(5): MOV byte ptr [R12 + RAX*0x1],0x1
0001050a(4): CMP RBP,qword ptr [R15 + 0x28]
0001050e(6): JL 0x0001046d
00010514(3): MOV EBX,R13D
00010517(3): MOV RBP,R12
0001051a(5): JMP 0x00010297
0001051f(5): MOV R12,qword ptr [RSP + 0x40]
00010524(5): MOV R13,qword ptr [RSP + 0x48]
00010529(5): MOV byte ptr [RSP + 0x54],0x0
0001052e(2): NOP
00010530(2): XOR EDI,EDI
00010532(8): MOV qword ptr [R12],0x0
0001053a(3): MOV RCX,R12
0001053d(5): MOV EDX,0x1
00010542(3): MOV RSI,R13
00010545(5): CALL 0x0000a3b0
0001054a(4): CMP RAX,-0x2
0001054e(2): JNZ 0x0001055a
00010550(5): MOVZX EAX,byte ptr [RSP + 0x54]
00010555(5): MOV byte ptr [RBP + RAX*0x1],0x1
0001055a(5): ADD byte ptr [RSP + 0x54],0x1
0001055f(2): JNZ 0x00010530
00010561(5): JMP 0x00010297
00010566(3): MOV R13,RBP
00010569(3): XOR R12D,R12D
0001056c(9): MOV qword ptr [RSP + 0x18],0x0
00010575(5): MOV RAX,qword ptr [RSP + 0x10]
0001057a(5): MOV RSI,qword ptr [RSP + 0x18]
0001057f(3): XOR R14D,R14D
00010582(4): MOV RAX,qword ptr [RCX + RAX*0x1]
00010586(4): MOV R15,qword ptr [RAX + RSI*0x1]
0001058a(6): NOP word ptr [RAX + RAX*0x1]
00010590(4): BT RDI,R14
00010594(2): JNC 0x000105b5
00010596(2): TEST EBX,EBX
00010598(6): MOV byte ptr [R13 + R14*0x1],0x1
0001059e(2): JZ 0x000105b5
000105a0(5): CALL 0x000020d0
000105a5(3): MOV RAX,qword ptr [RAX]
000105a8(4): LEA RDX,[R12 + R14*0x1]
000105ac(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
000105b0(5): MOV byte ptr [RBP + RAX*0x1],0x1
000105b5(4): ADD R14,0x1
000105b9(4): CMP R14,0x40
000105bd(2): JNZ 0x00010590
000105bf(4): ADD R12,0x40
000105c3(6): ADD qword ptr [RSP + 0x18],0x8
000105c9(4): ADD R13,0x40
000105cd(7): CMP R12,0x100
000105d4(6): JZ 0x00010297
000105da(5): MOV RAX,qword ptr [RSP + 0x8]
000105df(3): MOV RCX,qword ptr [RAX]
000105e2(2): JMP 0x00010575
000105e4(8): MOVDQA XMM0,xmmword ptr [0x0001cf40]
000105ec(4): MOVUPS xmmword ptr [RBP],XMM0
000105f0(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
000105f4(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
000105f8(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
000105fc(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
00010600(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
00010604(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
00010608(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0001060c(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
00010613(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0001061a(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
00010621(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
00010628(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0001062f(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
00010636(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0001063d(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
00010644(5): MOV RAX,qword ptr [RSP + 0x30]
00010649(4): OR byte ptr [RAX + 0x38],0x1
0001064d(8): MOV RAX,qword ptr [0x168 + RSP]
00010655(9): XOR RAX,qword ptr FS:[0x28]
0001065e(6): JNZ 0x000106f2
00010664(7): ADD RSP,0x178
0001066b(1): POP RBX
0001066c(1): POP RBP
0001066d(2): POP R12
0001066f(2): POP R13
00010671(2): POP R14
00010673(2): POP R15
00010675(1): RET
00010676(5): MOV RAX,qword ptr [RSP + 0x38]
0001067b(4): ADD RAX,0x1
0001067f(5): JMP 0x000103a4
00010684(8): MOVDQA XMM0,xmmword ptr [0x0001cf40]
0001068c(3): CMP EAX,0x2
0001068f(4): MOVUPS xmmword ptr [RBP],XMM0
00010693(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
00010697(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0001069b(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0001069f(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
000106a3(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
000106a7(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
000106ab(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
000106af(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
000106b6(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
000106bd(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
000106c4(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
000106cb(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
000106d2(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
000106d9(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
000106e0(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
000106e7(6): JNZ 0x0001064d
000106ed(5): JMP 0x00010644
000106f2(5): CALL 0x00001db0
000106f7(9): NOP word ptr [RAX + RAX*0x1]
00010700(4): SHL RDX,0x4
00010704(2): PUSH R13
00010706(2): PUSH R12
00010708(4): LEA R9,[RDI + RDX*0x1]
0001070c(1): PUSH RBP
0001070d(1): PUSH RBX
0001070e(4): SUB RSP,0x8
00010712(5): MOVZX R11D,byte ptr [R9 + 0x8]
00010717(4): CMP R11B,0x7
0001071b(6): JZ 0x00010830
00010721(7): CMP dword ptr [0x90 + RCX],0x1
00010728(6): JZ 0x000107f0
0001072e(3): MOV RBX,RSI
00010731(3): MOV RDI,RCX
00010734(3): MOV RSI,R8
00010737(3): MOV R10,RCX
0001073a(5): CALL 0x0000bea0
0001073f(4): CMP R11B,0x5
00010743(2): MOV EBP,EAX
00010745(6): JZ 0x00010800
0001074b(4): CMP R11B,0x6
0001074f(6): JNZ 0x000107f0
00010755(3): CMP EAX,0x1
00010758(6): JLE 0x000107f0
0001075e(3): MOV R13,qword ptr [R9]
00010761(4): MOV RSI,qword ptr [R13 + 0x40]
00010765(4): MOV RDX,qword ptr [R13 + 0x28]
00010769(3): TEST RSI,RSI
0001076c(2): JNZ 0x00010779
0001076e(5): CMP qword ptr [R13 + 0x48],0x0
00010773(6): JZ 0x00010868
00010779(4): MOV RAX,qword ptr [R10 + 0x10]
0001077d(3): TEST RDX,RDX
00010780(4): MOV R12D,dword ptr [RAX + R8*0x4]
00010784(2): JLE 0x000107a7
00010786(4): MOV RCX,qword ptr [R13]
0001078a(3): CMP R12D,dword ptr [RCX]
0001078d(2): JZ 0x000107e2
0001078f(2): XOR EAX,EAX
00010791(2): JMP 0x0001079e
00010798(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0001079c(2): JZ 0x000107e2
0001079e(4): ADD RAX,0x1
000107a2(3): CMP RAX,RDX
000107a5(2): JNZ 0x00010798
000107a7(4): MOV RAX,qword ptr [R13 + 0x48]
000107ab(3): TEST RAX,RAX
000107ae(6): JLE 0x0001088c
000107b4(2): XOR EBX,EBX
000107b6(2): JMP 0x000107ce
000107c0(4): ADD RBX,0x1
000107c4(4): CMP RBX,qword ptr [R13 + 0x48]
000107c8(6): JGE 0x00010888
000107ce(4): MOV RAX,qword ptr [R13 + 0x18]
000107d2(3): MOV EDI,R12D
000107d5(4): MOV RSI,qword ptr [RAX + RBX*0x8]
000107d9(5): CALL 0x00001d40
000107de(2): TEST EAX,EAX
000107e0(2): JZ 0x000107c0
000107e2(5): TEST byte ptr [R13 + 0x20],0x1
000107e7(2): JZ 0x000107f2
000107e9(7): NOP dword ptr [RAX]
000107f0(2): XOR EBP,EBP
000107f2(4): ADD RSP,0x8
000107f6(2): MOV EAX,EBP
000107f8(1): POP RBX
000107f9(1): POP RBP
000107fa(2): POP R12
000107fc(2): POP R13
000107fe(1): RET
00010800(3): CMP EAX,0x1
00010803(2): JLE 0x000107f0
00010805(3): MOV RAX,qword ptr [RBX]
00010808(2): TEST AL,0x40
0001080a(2): JZ 0x00010820
0001080c(2): TEST AL,0x80
0001080e(2): JZ 0x000107f2
00010810(4): MOV RAX,qword ptr [R10 + 0x8]
00010814(5): CMP byte ptr [RAX + R8*0x1],0x0
00010819(2): JZ 0x000107f0
0001081b(2): JMP 0x000107f2
00010820(4): MOV RDX,qword ptr [R10 + 0x8]
00010824(5): CMP byte ptr [RDX + R8*0x1],0xa
00010829(2): JNZ 0x0001080c
0001082b(2): JMP 0x000107f0
00010830(4): MOV RDX,qword ptr [RCX + 0x8]
00010834(4): LEA RSI,[RDX + R8*0x1]
00010838(3): MOVZX EAX,byte ptr [RSI]
0001083b(2): CMP AL,0xc1
0001083d(2): JBE 0x000107f0
0001083f(4): MOV RCX,qword ptr [RCX + 0x58]
00010843(4): LEA RDI,[R8 + 0x1]
00010847(3): CMP RDI,RCX
0001084a(2): JGE 0x000107f0
0001084c(2): CMP AL,0xdf
0001084e(6): MOVZX EDX,byte ptr [RDX + R8*0x1 + 0x1]
00010854(2): JA 0x000108be
00010856(3): ADD EDX,-0x80
00010859(5): MOV EBP,0x2
0001085e(3): CMP DL,0x3f
00010861(2): JA 0x000107f0
00010863(2): JMP 0x000107f2
00010868(3): TEST RDX,RDX
0001086b(6): JNZ 0x00010779
00010871(5): TEST byte ptr [R13 + 0x20],0x1
00010876(6): JNZ 0x000107f2
0001087c(5): JMP 0x000107f0
00010888(4): MOV RSI,qword ptr [R13 + 0x40]
0001088c(3): TEST RSI,RSI
0001088f(2): JLE 0x00010871
00010891(4): MOV RDX,qword ptr [R13 + 0x8]
00010895(2): XOR EAX,EAX
00010897(2): JMP 0x000108a9
000108a0(4): ADD RAX,0x1
000108a4(3): CMP RAX,RSI
000108a7(2): JZ 0x00010871
000108a9(4): CMP R12D,dword ptr [RDX + RAX*0x4]
000108ad(2): JL 0x000108a0
000108af(4): MOV RCX,qword ptr [R13 + 0x10]
000108b3(4): CMP R12D,dword ptr [RCX + RAX*0x4]
000108b7(2): JG 0x000108a0
000108b9(5): JMP 0x000107e2
000108be(2): CMP AL,0xef
000108c0(2): JA 0x00010908
000108c2(2): CMP AL,0xe0
000108c4(2): JNZ 0x000108cf
000108c6(3): CMP DL,0x9f
000108c9(6): JBE 0x000107f0
000108cf(5): MOV EBP,0x3
000108d4(3): MOVSXD RDI,EBP
000108d7(3): ADD R8,RDI
000108da(3): CMP RCX,R8
000108dd(6): JL 0x000107f0
000108e3(5): MOV EAX,0x1
000108e8(2): JMP 0x000108f7
000108ea(4): ADD RAX,0x1
000108ee(3): CMP RDI,RAX
000108f1(6): JLE 0x000107f2
000108f7(4): MOVZX EBX,byte ptr [RSI + RAX*0x1]
000108fb(3): LEA EDX,[RBX + -0x80]
000108fe(3): CMP DL,0x3f
00010901(2): JBE 0x000108ea
00010903(5): JMP 0x000107f0
00010908(2): CMP AL,0xf7
0001090a(2): JA 0x00010920
0001090c(2): CMP AL,0xf0
0001090e(2): JNZ 0x00010919
00010910(3): CMP DL,0x8f
00010913(6): JBE 0x000107f0
00010919(5): MOV EBP,0x4
0001091e(2): JMP 0x000108d4
00010920(2): CMP AL,0xfb
00010922(2): JA 0x00010938
00010924(2): CMP AL,0xf8
00010926(2): JNZ 0x00010931
00010928(3): CMP DL,0x87
0001092b(6): JBE 0x000107f0
00010931(5): MOV EBP,0x5
00010936(2): JMP 0x000108d4
00010938(2): CMP AL,0xfd
0001093a(6): JA 0x000107f0
00010940(2): CMP AL,0xfc
00010942(2): JNZ 0x0001094d
00010944(3): CMP DL,0x83
00010947(6): JBE 0x000107f0
0001094d(5): MOV EBP,0x6
00010952(2): JMP 0x000108d4
00010960(2): PUSH R15
00010962(2): PUSH R14
00010964(3): MOV R15,RDI
00010967(2): PUSH R13
00010969(2): PUSH R12
0001096b(1): PUSH RBP
0001096c(1): PUSH RBX
0001096d(3): MOV RBP,RCX
00010970(3): MOV RBX,RDX
00010973(7): SUB RSP,0xd8
0001097a(7): MOV RCX,qword ptr [0x98 + RDI]
00010981(4): MOV R13,qword ptr [RSI + 0x8]
00010985(9): MOV RAX,qword ptr FS:[0x28]
0001098e(8): MOV qword ptr [0xc8 + RSP],RAX
00010996(2): XOR EAX,EAX
00010998(3): MOV RAX,RDX
0001099b(5): MOV qword ptr [RSP + 0x60],RSI
000109a0(5): MOV qword ptr [RSP + 0x78],R8
000109a5(4): SHL RAX,0x4
000109a9(3): ADD RAX,qword ptr [RCX]
000109ac(5): MOV qword ptr [RSP + 0x40],R9
000109b1(5): MOV qword ptr [RSP + 0x30],RCX
000109b6(11): MOV dword ptr [0x88 + RSP],0x0
000109c1(3): MOV RAX,qword ptr [RAX]
000109c4(5): MOV qword ptr [RSP + 0x48],RAX
000109c9(7): MOVSXD RAX,dword ptr [0xe0 + RDI]
000109d0(3): ADD RAX,R9
000109d3(3): CMP RAX,R13
000109d6(6): JGE 0x00010ff6
000109dc(5): MOV RAX,qword ptr [RSP + 0x60]
000109e1(7): MOV RDX,qword ptr [0xb8 + R15]
000109e8(4): MOV RCX,qword ptr [R15 + 0x48]
000109ec(3): MOV R12,qword ptr [RAX]
000109ef(4): MOV R14,qword ptr [RAX + 0x10]
000109f3(5): MOV qword ptr [RSP + 0x68],RDX
000109f8(5): MOV qword ptr [RSP + 0x70],RCX
000109fd(7): MOV EDX,dword ptr [0xa0 + R15]
00010a04(3): TEST R12,R12
00010a07(7): MOV qword ptr [0xb8 + R15],R14
00010a0e(6): JZ 0x00010df0
00010a14(5): LEA RSI,[R12 + -0x1]
00010a19(4): MOV qword ptr [R15 + 0x48],R12
00010a1d(3): MOV RDI,R15
00010a20(5): CALL 0x0000dd30
00010a25(3): CMP R12,RBP
00010a28(3): MOV R13D,EAX
00010a2b(6): JZ 0x00010e03
00010a31(4): MOV RBP,qword ptr [R14 + R12*0x8]
00010a35(3): TEST RBP,RBP
00010a38(2): JZ 0x00010a44
00010a3a(4): TEST byte ptr [RBP + 0x68],0x40
00010a3e(6): JNZ 0x00010f60
00010a44(4): PXOR XMM0,XMM0
00010a48(12): MOV qword ptr [0xa0 + RSP],0x0
00010a54(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
00010a5c(5): CMP R12,qword ptr [RSP + 0x40]
00010a61(6): JGE 0x00010d88
00010a67(7): MOV ECX,dword ptr [0xe0 + R15]
00010a6e(2): TEST ECX,ECX
00010a70(6): JS 0x00010d88
00010a76(8): LEA RBX,[0x90 + RSP]
00010a7e(8): LEA RAX,[0x8 + R12*0x8]
00010a86(4): MOV qword ptr [RSP],R12
00010a8a(9): MOV qword ptr [RSP + 0x20],0x0
00010a93(5): MOV qword ptr [RSP + 0x8],RBX
00010a98(8): LEA RBX,[0xb0 + RSP]
00010aa0(5): MOV qword ptr [RSP + 0x10],RAX
00010aa5(7): MOV RAX,qword ptr [0xb8 + R15]
00010aac(5): MOV qword ptr [RSP + 0x18],RBX
00010ab1(8): LEA RBX,[0x8c + RSP]
00010ab9(5): MOV qword ptr [RSP + 0x58],RBX
00010abe(5): MOV RCX,qword ptr [RSP + 0x10]
00010ac3(12): MOV qword ptr [0x98 + RSP],0x0
00010acf(4): MOV RSI,qword ptr [RAX + RCX*0x1]
00010ad3(3): TEST RSI,RSI
00010ad6(6): JZ 0x00010e98
00010adc(5): MOV RDI,qword ptr [RSP + 0x8]
00010ae1(4): ADD RSI,0x8
00010ae5(5): CALL 0x0000c470
00010aea(2): TEST EAX,EAX
00010aec(7): MOV dword ptr [0x88 + RSP],EAX
00010af3(6): JNZ 0x00010ed0
00010af9(3): TEST RBP,RBP
00010afc(6): JZ 0x00010ca8
00010b02(5): CMP qword ptr [RBP + 0x28],0x0
00010b07(5): MOV RAX,qword ptr [RSP + 0x18]
00010b0c(4): PXOR XMM0,XMM0
00010b10(7): MOV R12,qword ptr [0x98 + R15]
00010b17(11): MOV dword ptr [0x8c + RSP],0x0
00010b22(8): MOV qword ptr [RAX + 0x10],0x0
00010b2a(3): MOVAPS xmmword ptr [RAX],XMM0
00010b2d(6): JLE 0x00011060
00010b33(8): LEA RAX,[0xd8 + R12]
00010b3b(2): XOR EBX,EBX
00010b3d(5): MOV qword ptr [RSP + 0x28],RAX
00010b42(2): JMP 0x00010b89
00010b48(4): MOV RDX,qword ptr [RSP]
00010b4c(3): MOV RDI,R15
00010b4f(5): CALL 0x0000de20
00010b54(2): TEST AL,AL
00010b56(2): JZ 0x00010b7b
00010b58(8): LEA R13,[R14*0x8]
00010b60(5): MOV RAX,qword ptr [R12 + 0x18]
00010b65(5): MOV RDI,qword ptr [RSP + 0x8]
00010b6a(4): MOV RSI,qword ptr [RAX + R13*0x1]
00010b6e(5): CALL 0x0000aa10
00010b73(2): TEST AL,AL
00010b75(6): JZ 0x00010eb8
00010b7b(4): ADD RBX,0x1
00010b7f(4): CMP RBX,qword ptr [RBP + 0x28]
00010b83(6): JGE 0x00010f10
00010b89(4): MOV RAX,qword ptr [RBP + 0x30]
00010b8d(4): MOV RDI,qword ptr [R12]
00010b91(4): MOV R14,qword ptr [RAX + RBX*0x8]
00010b95(3): MOV R13,R14
00010b98(4): SHL R13,0x4
00010b9c(4): LEA RSI,[RDI + R13*0x1]
00010ba0(4): TEST byte ptr [RSI + 0xa],0x10
00010ba4(2): JZ 0x00010b48
00010ba6(4): MOV R8,qword ptr [RSP]
00010baa(5): MOV RSI,qword ptr [RSP + 0x28]
00010baf(3): MOV RCX,R15
00010bb2(3): MOV RDX,R14
00010bb5(5): CALL 0x00010700
00010bba(3): CMP EAX,0x1
00010bbd(6): JLE 0x00010e80
00010bc3(2): CDQE
00010bc5(4): ADD RAX,qword ptr [RSP]
00010bc9(5): MOV RDX,qword ptr [R12 + 0x18]
00010bce(8): LEA R13,[R14*0x8]
00010bd6(4): MOV RDX,qword ptr [RDX + R14*0x8]
00010bda(3): MOV RCX,RAX
00010bdd(5): MOV qword ptr [RSP + 0x38],RAX
00010be2(8): LEA R14,[RAX*0x8]
00010bea(7): MOV RAX,qword ptr [0xb8 + R15]
00010bf1(4): MOV RSI,qword ptr [RAX + RCX*0x8]
00010bf5(12): MOV qword ptr [0xb8 + RSP],0x0
00010c01(3): TEST RSI,RSI
00010c04(2): JZ 0x00010c29
00010c06(5): MOV RDI,qword ptr [RSP + 0x18]
00010c0b(4): ADD RSI,0x8
00010c0f(5): MOV qword ptr [RSP + 0x50],RDX
00010c14(5): CALL 0x0000c470
00010c19(2): TEST EAX,EAX
00010c1b(7): MOV dword ptr [0x8c + RSP],EAX
00010c22(5): MOV RDX,qword ptr [RSP + 0x50]
00010c27(2): JNZ 0x00010c80
00010c29(5): MOV RDI,qword ptr [RSP + 0x18]
00010c2e(3): MOV RSI,RDX
00010c31(5): CALL 0x0000aa10
00010c36(2): TEST AL,AL
00010c38(6): JZ 0x00010eb8
00010c3e(7): ADD R14,qword ptr [0xb8 + R15]
00010c45(5): MOV RDX,qword ptr [RSP + 0x18]
00010c4a(3): MOV RSI,R12
00010c4d(5): MOV RDI,qword ptr [RSP + 0x58]
00010c52(5): CALL 0x0000d560
00010c57(5): MOV RDX,qword ptr [RSP + 0x38]
00010c5c(3): MOV qword ptr [R14],RAX
00010c5f(7): MOV RAX,qword ptr [0xb8 + R15]
00010c66(5): CMP qword ptr [RAX + RDX*0x8],0x0
00010c6b(6): JNZ 0x00010b60
00010c71(7): MOV EDX,dword ptr [0x8c + RSP]
00010c78(2): TEST EDX,EDX
00010c7a(6): JZ 0x00010b60
00010c80(8): MOV RDI,qword ptr [0xc0 + RSP]
00010c88(5): CALL 0x00001c60
00010c8d(7): MOV EAX,dword ptr [0x8c + RSP]
00010c94(2): TEST EAX,EAX
00010c96(7): MOV dword ptr [0x88 + RSP],EAX
00010c9d(6): JNZ 0x00010ed0
00010ca3(5): NOP dword ptr [RAX + RAX*0x1]
00010ca8(4): MOV RAX,qword ptr [RSP]
00010cac(9): CMP qword ptr [0x98 + RSP],0x0
00010cb5(4): LEA RBX,[RAX + 0x1]
00010cb9(3): MOV R12,RBX
00010cbc(2): JZ 0x00010d14
00010cbe(7): MOV ECX,dword ptr [0x110 + RSP]
00010cc5(5): MOV RDX,qword ptr [RSP + 0x48]
00010cca(5): MOV RSI,qword ptr [RSP + 0x8]
00010ccf(5): MOV RDI,qword ptr [RSP + 0x30]
00010cd4(5): CALL 0x0000c900
00010cd9(2): TEST EAX,EAX
00010cdb(7): MOV dword ptr [0x88 + RSP],EAX
00010ce2(6): JNZ 0x00010ed0
00010ce8(8): MOV R8D,dword ptr [0x110 + RSP]
00010cf0(5): MOV RCX,qword ptr [RSP + 0x48]
00010cf5(3): MOV RDX,RBX
00010cf8(5): MOV RSI,qword ptr [RSP + 0x8]
00010cfd(3): MOV RDI,R15
00010d00(5): CALL 0x0000d840
00010d05(2): TEST EAX,EAX
00010d07(7): MOV dword ptr [0x88 + RSP],EAX
00010d0e(6): JNZ 0x00010ed0
00010d14(7): MOV EDX,dword ptr [0xa0 + R15]
00010d1b(4): MOV RSI,qword ptr [RSP]
00010d1f(3): MOV RDI,R15
00010d22(5): CALL 0x0000dd30
00010d27(5): MOV RDX,qword ptr [RSP + 0x8]
00010d2c(5): MOV RSI,qword ptr [RSP + 0x30]
00010d31(8): LEA RDI,[0x88 + RSP]
00010d39(2): MOV ECX,EAX
00010d3b(5): CALL 0x0000d2a0
00010d40(3): TEST RAX,RAX
00010d43(3): MOV RBP,RAX
00010d46(6): JZ 0x00010f30
00010d4c(7): MOV RAX,qword ptr [0xb8 + R15]
00010d53(5): MOV RDX,qword ptr [RSP + 0x10]
00010d58(9): MOV qword ptr [RSP + 0x20],0x0
00010d61(4): MOV qword ptr [RAX + RDX*0x1],RBP
00010d65(5): CMP qword ptr [RSP + 0x40],RBX
00010d6a(2): JLE 0x00010d88
00010d6c(7): MOVSXD RDX,dword ptr [0xe0 + R15]
00010d73(6): ADD qword ptr [RSP + 0x10],0x8
00010d79(5): CMP RDX,qword ptr [RSP + 0x20]
00010d7e(4): MOV qword ptr [RSP],RBX
00010d82(6): JGE 0x00010abe
00010d88(8): MOV RDI,qword ptr [0xa0 + RSP]
00010d90(5): CALL 0x00001c60
00010d95(7): MOV RAX,qword ptr [0xb8 + R15]
00010d9c(5): MOV RBX,qword ptr [RSP + 0x40]
00010da1(4): MOV RAX,qword ptr [RAX + RBX*0x8]
00010da5(3): TEST RAX,RAX
00010da8(6): JZ 0x00011085
00010dae(5): MOV RBX,qword ptr [RSP + 0x60]
00010db3(5): MOV RDX,qword ptr [RSP + 0x78]
00010db8(4): LEA RSI,[RAX + 0x18]
00010dbc(3): MOV qword ptr [RBX],R12
00010dbf(5): MOV RBX,qword ptr [RSP + 0x68]
00010dc4(7): MOV qword ptr [0xb8 + R15],RBX
00010dcb(5): MOV RBX,qword ptr [RSP + 0x70]
00010dd0(4): MOV qword ptr [R15 + 0x48],RBX
00010dd4(4): MOV RDI,qword ptr [RAX + 0x10]
00010dd8(5): CALL 0x0000bf50
00010ddd(3): TEST RAX,RAX
00010de0(3): SETZ AL
00010de3(3): MOVZX EAX,AL
00010de6(5): JMP 0x00010ee4
00010df0(4): LEA RSI,[RBP + -0x1]
00010df4(4): MOV qword ptr [R15 + 0x48],RBP
00010df8(3): MOV RDI,R15
00010dfb(5): CALL 0x0000dd30
00010e00(3): MOV R13D,EAX
00010e03(5): MOV EDI,0x8
00010e08(12): MOV qword ptr [0x90 + RSP],0x1
00010e14(12): MOV qword ptr [0x98 + RSP],0x1
00010e20(5): CALL 0x00001f20
00010e25(3): TEST RAX,RAX
00010e28(8): MOV qword ptr [0xa0 + RSP],RAX
00010e30(6): JZ 0x0001107b
00010e36(3): MOV qword ptr [RAX],RBX
00010e39(7): MOV ECX,dword ptr [0x110 + RSP]
00010e40(8): LEA RBX,[0x90 + RSP]
00010e48(5): MOV RDX,qword ptr [RSP + 0x48]
00010e4d(5): MOV RDI,qword ptr [RSP + 0x30]
00010e52(3): MOV R12,RBP
00010e55(3): MOV RSI,RBX
00010e58(11): MOV dword ptr [0x88 + RSP],0x0
00010e63(5): CALL 0x0000c900
00010e68(2): TEST EAX,EAX
00010e6a(7): MOV dword ptr [0x88 + RSP],EAX
00010e71(6): JZ 0x00010f8d
00010e77(2): JMP 0x00010ed0
00010e80(2): TEST EAX,EAX
00010e82(6): JNZ 0x00010b58
00010e88(4): MOV RSI,qword ptr [R12]
00010e8c(3): ADD RSI,R13
00010e8f(5): JMP 0x00010b48
00010e98(3): TEST RBP,RBP
00010e9b(6): JNZ 0x00010b02
00010ea1(4): MOV RAX,qword ptr [RSP]
00010ea5(4): LEA RBX,[RAX + 0x1]
00010ea9(3): MOV R12,RBX
00010eac(5): JMP 0x00010d14
00010eb8(8): MOV RDI,qword ptr [0xc0 + RSP]
00010ec0(5): CALL 0x00001c60
00010ec5(11): MOV dword ptr [0x88 + RSP],0xc
00010ed0(8): MOV RDI,qword ptr [0xa0 + RSP]
00010ed8(5): CALL 0x00001c60
00010edd(7): MOV EAX,dword ptr [0x88 + RSP]
00010ee4(8): MOV RBX,qword ptr [0xc8 + RSP]
00010eec(9): XOR RBX,qword ptr FS:[0x28]
00010ef5(6): JNZ 0x000110ac
00010efb(7): ADD RSP,0xd8
00010f02(1): POP RBX
00010f03(1): POP RBP
00010f04(2): POP R12
00010f06(2): POP R13
00010f08(2): POP R14
00010f0a(2): POP R15
00010f0c(1): RET
00010f10(8): MOV RDI,qword ptr [0xc0 + RSP]
00010f18(5): CALL 0x00001c60
00010f1d(11): MOV dword ptr [0x88 + RSP],0x0
00010f28(5): JMP 0x00010ca8
00010f30(7): MOV EAX,dword ptr [0x88 + RSP]
00010f37(2): TEST EAX,EAX
00010f39(2): JNZ 0x00010ed0
00010f3b(7): MOV RAX,qword ptr [0xb8 + R15]
00010f42(5): MOV RDX,qword ptr [RSP + 0x10]
00010f47(6): ADD qword ptr [RSP + 0x20],0x1
00010f4d(8): MOV qword ptr [RAX + RDX*0x1],0x0
00010f55(5): JMP 0x00010d65
00010f60(8): LEA RBX,[0x90 + RSP]
00010f68(4): LEA RSI,[RBP + 0x8]
00010f6c(3): MOV RDI,RBX
00010f6f(5): CALL 0x0000d0b0
00010f74(2): TEST EAX,EAX
00010f76(7): MOV dword ptr [0x88 + RSP],EAX
00010f7d(6): JNZ 0x00010ee4
00010f83(4): TEST byte ptr [RBP + 0x68],0x40
00010f87(6): JZ 0x00010a5c
00010f8d(9): CMP qword ptr [0x98 + RSP],0x0
00010f96(2): JZ 0x00010fc2
00010f98(8): MOV R8D,dword ptr [0x110 + RSP]
00010fa0(5): MOV RCX,qword ptr [RSP + 0x48]
00010fa5(3): MOV RDX,R12
00010fa8(3): MOV RSI,RBX
00010fab(3): MOV RDI,R15
00010fae(5): CALL 0x0000d840
00010fb3(2): TEST EAX,EAX
00010fb5(7): MOV dword ptr [0x88 + RSP],EAX
00010fbc(6): JNZ 0x00010ed0
00010fc2(5): MOV RSI,qword ptr [RSP + 0x30]
00010fc7(8): LEA RDI,[0x88 + RSP]
00010fcf(3): MOV ECX,R13D
00010fd2(3): MOV RDX,RBX
00010fd5(5): CALL 0x0000d2a0
00010fda(3): TEST RAX,RAX
00010fdd(3): MOV RBP,RAX
00010fe0(6): JZ 0x00011067
00010fe6(7): MOV RAX,qword ptr [0xb8 + R15]
00010fed(4): MOV qword ptr [RAX + R12*0x8],RBP
00010ff1(5): JMP 0x00010a5c
00010ff6(4): LEA R12,[RAX + 0x1]
00010ffa(10): MOV RAX,0x7fffffffffffffff
00011004(3): SUB RAX,R13
00011007(3): CMP RAX,R12
0001100a(2): JL 0x0001107b
0001100c(5): LEA R14,[R13 + R12*0x1]
00011011(10): MOV RAX,0x1fffffffffffffff
0001101b(3): CMP R14,RAX
0001101e(2): JA 0x0001107b
00011020(5): MOV RAX,qword ptr [RSP + 0x60]
00011025(8): LEA RSI,[R14*0x8]
0001102d(4): MOV RDI,qword ptr [RAX + 0x10]
00011031(5): CALL 0x00001f90
00011036(3): TEST RAX,RAX
00011039(2): JZ 0x0001107b
0001103b(5): MOV RCX,qword ptr [RSP + 0x60]
00011040(8): LEA RDX,[R12*0x8]
00011048(4): LEA RDI,[RAX + R13*0x8]
0001104c(2): XOR ESI,ESI
0001104e(4): MOV qword ptr [RCX + 0x10],RAX
00011052(4): MOV qword ptr [RCX + 0x8],R14
00011056(5): CALL 0x00001e40
0001105b(5): JMP 0x000109dc
00011060(2): XOR EDI,EDI
00011062(5): JMP 0x00010f18
00011067(7): MOV ESI,dword ptr [0x88 + RSP]
0001106e(2): TEST ESI,ESI
00011070(6): JZ 0x00010fe6
00011076(5): JMP 0x00010ed0
0001107b(5): MOV EAX,0xc
00011080(5): JMP 0x00010ee4
00011085(5): MOV RAX,qword ptr [RSP + 0x60]
0001108a(3): MOV qword ptr [RAX],R12
0001108d(5): MOV RAX,qword ptr [RSP + 0x68]
00011092(7): MOV qword ptr [0xb8 + R15],RAX
00011099(5): MOV RAX,qword ptr [RSP + 0x70]
0001109e(4): MOV qword ptr [R15 + 0x48],RAX
000110a2(5): MOV EAX,0x1
000110a7(5): JMP 0x00010ee4
000110ac(5): CALL 0x00001db0
000110b1(5): NOP dword ptr [RAX + RAX*0x1]
000110b6(10): NOP word ptr CS:[RAX + RAX*0x1]
000110c0(1): PUSH RBP
000110c1(3): MOV RBP,RSP
000110c4(2): PUSH R15
000110c6(2): PUSH R14
000110c8(2): PUSH R13
000110ca(2): PUSH R12
000110cc(3): MOV R13,RCX
000110cf(1): PUSH RBX
000110d0(3): MOV R12,RSI
000110d3(7): SUB RSP,0xb8
000110da(7): MOV qword ptr [-0x98 + RBP],RDX
000110e1(8): MOV qword ptr [RBP + -0x50],0x0
000110e9(9): MOV RAX,qword ptr FS:[0x28]
000110f2(4): MOV qword ptr [RBP + -0x38],RAX
000110f6(2): XOR EAX,EAX
000110f8(3): MOV RAX,qword ptr [RDI]
000110fb(3): TEST R8B,R8B
000110fe(8): MOV qword ptr [RBP + -0x48],0x2
00011106(8): MOV qword ptr [RBP + -0x40],0x0
0001110e(7): MOV qword ptr [-0x90 + RBP],RAX
00011115(6): JZ 0x000118bd
0001111b(5): MOV EDI,0x60
00011120(5): CALL 0x00001f20
00011125(4): LEA RCX,[RBP + -0x50]
00011129(3): TEST RAX,RAX
0001112c(4): MOV qword ptr [RBP + -0x40],RAX
00011130(7): MOV qword ptr [-0x88 + RBP],RCX
00011137(6): JZ 0x0001185c
0001113d(7): MOV RAX,qword ptr [-0x90 + RBP]
00011144(4): PXOR XMM0,XMM0
00011148(8): MOV qword ptr [RBP + -0x60],0x0
00011150(7): MOV RBX,qword ptr [0x90 + RAX]
00011157(7): MOV RAX,qword ptr [-0x98 + RBP]
0001115e(4): MOVAPS xmmword ptr [RBP + -0x70],XMM0
00011162(4): SHL RAX,0x4
00011166(6): CMP RAX,0xfbf
0001116c(7): MOV qword ptr [-0xb8 + RBP],RAX
00011173(6): JA 0x00011866
00011179(4): ADD RAX,0x10
0001117d(7): MOV byte ptr [-0xc9 + RBP],0x0
00011184(3): SUB RSP,RAX
00011187(5): LEA RAX,[RSP + 0xf]
0001118c(4): AND RAX,-0x10
00011190(7): MOV qword ptr [-0xc0 + RBP],RAX
00011197(7): MOV RDX,qword ptr [-0xb8 + RBP]
0001119e(7): MOV RDI,qword ptr [-0xc0 + RBP]
000111a5(3): MOV RSI,R13
000111a8(5): CALL 0x00001ee0
000111ad(4): LEA RAX,[RBP + -0x70]
000111b1(4): MOV RCX,qword ptr [R13]
000111b5(7): MOV qword ptr [-0xa8 + RBP],RAX
000111bc(4): ADD RAX,0x10
000111c0(4): MOV qword ptr [RBP + -0x78],RCX
000111c4(7): MOV qword ptr [-0xc8 + RBP],RAX
000111cb(4): LEA RAX,[RBP + -0x78]
000111cf(7): MOV qword ptr [-0xb0 + RBP],RAX
000111d6(5): JMP 0x000112b9
000111e0(3): CMP ESI,0x9
000111e3(6): JZ 0x000113d0
000111e9(3): CMP RAX,RCX
000111ec(2): JNZ 0x000111fc
000111ee(8): CMP qword ptr [0xb0 + R12],RBX
000111f6(6): JZ 0x000115d0
000111fc(8): MOV R14,qword ptr [0x98 + R12]
00011204(3): MOV RDI,qword ptr [R14]
00011207(4): LEA RSI,[RDI + R9*0x1]
0001120b(4): MOVZX EAX,byte ptr [RSI + 0x8]
0001120f(2): TEST AL,0x8
00011211(6): JNZ 0x00011320
00011217(4): TEST byte ptr [RSI + 0xa],0x10
0001121b(6): JNZ 0x00011420
00011221(2): CMP AL,0x4
00011223(6): JZ 0x00011460
00011229(4): MOV RCX,qword ptr [RBP + -0x78]
0001122d(3): MOV RDX,RCX
00011230(3): MOV RDI,R12
00011233(7): MOV qword ptr [-0xa0 + RBP],RCX
0001123a(5): CALL 0x0000de20
0001123f(2): TEST AL,AL
00011241(7): MOV RCX,qword ptr [-0xa0 + RBP]
00011248(6): JZ 0x00011698
0001124e(4): MOV RAX,qword ptr [R14 + 0x18]
00011252(4): LEA RDX,[RCX + 0x1]
00011256(4): MOV RBX,qword ptr [RAX + R15*0x8]
0001125a(8): CMP qword ptr [-0x88 + RBP],0x0
00011262(4): MOV qword ptr [RBP + -0x78],RDX
00011266(2): JZ 0x000112a4
00011268(8): CMP RDX,qword ptr [0xa8 + R12]
00011270(6): JG 0x000116a6
00011276(8): MOV RAX,qword ptr [0xb8 + R12]
0001127e(4): MOV RAX,qword ptr [RAX + RDX*0x8]
00011282(3): TEST RAX,RAX
00011285(6): JZ 0x000116a6
0001128b(4): MOV RDI,qword ptr [RAX + 0x10]
0001128f(4): LEA RSI,[RAX + 0x18]
00011293(3): MOV RDX,RBX
00011296(5): CALL 0x0000bf50
0001129b(3): TEST RAX,RAX
0001129e(6): JZ 0x000116a6
000112a4(8): MOV qword ptr [RBP + -0x68],0x0
000112ac(3): TEST RBX,RBX
000112af(6): JS 0x0001168a
000112b5(4): MOV RCX,qword ptr [RBP + -0x78]
000112b9(4): MOV RAX,qword ptr [R13 + 0x8]
000112bd(3): CMP RAX,RCX
000112c0(6): JL 0x000117b0
000112c6(7): MOV RDI,qword ptr [-0x90 + RBP]
000112cd(3): MOV R9,RBX
000112d0(3): MOV R15,RBX
000112d3(4): SHL R9,0x4
000112d7(3): MOV RDX,qword ptr [RDI]
000112da(3): ADD RDX,R9
000112dd(4): MOVZX ESI,byte ptr [RDX + 0x8]
000112e1(3): CMP ESI,0x8
000112e4(6): JNZ 0x000111e0
000112ea(3): MOV RDX,qword ptr [RDX]
000112ed(4): ADD RDX,0x1
000112f1(7): CMP qword ptr [-0x98 + RBP],RDX
000112f8(6): JLE 0x000111e9
000112fe(4): SHL RDX,0x4
00011302(3): ADD RDX,R13
00011305(8): MOV qword ptr [RDX + 0x8],-0x1
0001130d(3): MOV qword ptr [RDX],RCX
00011310(4): MOV RAX,qword ptr [R13 + 0x8]
00011314(5): JMP 0x000111e9
00011320(8): MOV RAX,qword ptr [0xb8 + R12]
00011328(4): MOV RDX,qword ptr [RBP + -0x78]
0001132c(3): MOV RSI,RBX
0001132f(7): MOV RDI,qword ptr [-0xa8 + RBP]
00011336(4): MOV R9,qword ptr [RAX + RDX*0x8]
0001133a(4): MOV RAX,qword ptr [R14 + 0x28]
0001133e(4): LEA RDX,[RBX + RBX*0x2]
00011342(7): MOV qword ptr [-0xa0 + RBP],R9
00011349(4): LEA R15,[RAX + RDX*0x8]
0001134d(5): CALL 0x0000aa10
00011352(2): TEST AL,AL
00011354(7): MOV R9,qword ptr [-0xa0 + RBP]
0001135b(6): JZ 0x00011838
00011361(4): MOV R10,qword ptr [R15 + 0x8]
00011365(3): TEST R10,R10
00011368(6): JLE 0x00011698
0001136e(4): MOV R15,qword ptr [R15 + 0x10]
00011372(4): MOV R11,qword ptr [R9 + 0x10]
00011376(4): LEA R14,[R9 + 0x18]
0001137a(7): MOV RBX,-0x1
00011381(3): XOR R9D,R9D
00011384(7): MOV qword ptr [-0xa0 + RBP],R12
0001138b(5): NOP dword ptr [RAX + RAX*0x1]
00011390(4): MOV R12,qword ptr [R15 + R9*0x8]
00011394(3): MOV RSI,R14
00011397(3): MOV RDI,R11
0001139a(3): MOV RDX,R12
0001139d(5): CALL 0x0000bf50
000113a2(3): TEST RAX,RAX
000113a5(2): JZ 0x000113b4
000113a7(4): CMP RBX,-0x1
000113ab(6): JNZ 0x00011500
000113b1(3): MOV RBX,R12
000113b4(4): ADD R9,0x1
000113b8(3): CMP R10,R9
000113bb(2): JNZ 0x00011390
000113bd(7): MOV R12,qword ptr [-0xa0 + RBP]
000113c4(5): JMP 0x000112ac
000113d0(3): MOV RDI,qword ptr [RDX]
000113d3(4): LEA RSI,[RDI + 0x1]
000113d7(7): CMP qword ptr [-0x98 + RBP],RSI
000113de(6): JLE 0x000111e9
000113e4(4): SHL RSI,0x4
000113e8(5): LEA RAX,[R13 + RSI*0x1]
000113ed(3): CMP qword ptr [RAX],RCX
000113f0(6): JL 0x00011770
000113f6(4): TEST byte ptr [RDX + 0xa],0x8
000113fa(2): JZ 0x0001140e
000113fc(7): MOV RDI,qword ptr [-0xc0 + RBP]
00011403(5): CMP qword ptr [RDI + RSI*0x1],-0x1
00011408(6): JNZ 0x000117fb
0001140e(4): MOV qword ptr [RAX + 0x8],RCX
00011412(4): MOV RAX,qword ptr [R13 + 0x8]
00011416(5): JMP 0x000111e9
00011420(4): MOV R8,qword ptr [RBP + -0x78]
00011424(7): LEA RSI,[0xd8 + R14]
0001142b(3): MOV RCX,R12
0001142e(3): MOV RDX,RBX
00011431(7): MOV qword ptr [-0xa0 + RBP],R9
00011438(5): CALL 0x00010700
0001143d(3): MOVSXD RCX,EAX
00011440(3): TEST RCX,RCX
00011443(6): JNZ 0x00011641
00011449(7): MOV R9,qword ptr [-0xa0 + RBP]
00011450(3): MOV RSI,qword ptr [R14]
00011453(4): MOV RCX,qword ptr [RBP + -0x78]
00011457(3): ADD RSI,R9
0001145a(5): JMP 0x0001122d
00011460(3): MOV RAX,qword ptr [RSI]
00011463(4): ADD RAX,0x1
00011467(4): SHL RAX,0x4
0001146b(3): ADD RAX,R13
0001146e(4): MOV RDX,qword ptr [RAX + 0x8]
00011472(3): MOV RDI,qword ptr [RAX]
00011475(3): MOV RCX,RDX
00011478(3): SUB RCX,RDI
0001147b(8): CMP qword ptr [-0x88 + RBP],0x0
00011483(6): JZ 0x00011638
00011489(4): CMP RDI,-0x1
0001148d(6): JZ 0x000116a6
00011493(4): CMP RDX,-0x1
00011497(6): JZ 0x000116a6
0001149d(3): TEST RCX,RCX
000114a0(6): JZ 0x000116f0
000114a6(4): MOV R15,qword ptr [RBP + -0x78]
000114aa(5): MOV RDX,qword ptr [R12 + 0x30]
000114af(5): MOV RAX,qword ptr [R12 + 0x8]
000114b4(3): SUB RDX,R15
000114b7(3): CMP RCX,RDX
000114ba(6): JG 0x000116a6
000114c0(4): LEA RSI,[RAX + R15*0x1]
000114c4(3): ADD RDI,RAX
000114c7(3): MOV RDX,RCX
000114ca(7): MOV qword ptr [-0xa0 + RBP],RCX
000114d1(5): CALL 0x00001e90
000114d6(2): TEST EAX,EAX
000114d8(7): MOV RCX,qword ptr [-0xa0 + RBP]
000114df(6): JNZ 0x000116a6
000114e5(4): MOV RAX,qword ptr [R14 + 0x18]
000114e9(4): LEA RDX,[R15 + RCX*0x1]
000114ed(4): MOV RBX,qword ptr [RAX + RBX*0x8]
000114f1(5): JMP 0x0001125a
00011500(7): MOV RSI,qword ptr [-0xc8 + RBP]
00011507(4): MOV RDI,qword ptr [RBP + -0x68]
0001150b(3): MOV RDX,RBX
0001150e(3): MOV R14,R12
00011511(7): MOV R12,qword ptr [-0xa0 + RBP]
00011518(5): CALL 0x0000bf50
0001151d(3): TEST RAX,RAX
00011520(6): JNZ 0x000116e0
00011526(7): MOV RCX,qword ptr [-0x88 + RBP]
0001152d(3): TEST RCX,RCX
00011530(6): JZ 0x000112ac
00011536(3): MOV R15,qword ptr [RCX]
00011539(4): MOV RDX,qword ptr [RBP + -0x78]
0001153d(4): LEA RAX,[R15 + 0x1]
00011541(4): CMP RAX,qword ptr [RCX + 0x8]
00011545(3): MOV qword ptr [RCX],RAX
00011548(6): JZ 0x000118cd
0001154e(4): MOV RAX,qword ptr [RCX + 0x10]
00011552(4): LEA R15,[R15 + R15*0x2]
00011556(4): SHL R15,0x4
0001155a(3): ADD R15,RAX
0001155d(4): MOV qword ptr [R15 + 0x8],R14
00011561(7): MOV R14,qword ptr [-0xb8 + RBP]
00011568(3): MOV qword ptr [R15],RDX
0001156b(3): MOV RDI,R14
0001156e(5): CALL 0x00001f20
00011573(3): TEST RAX,RAX
00011576(4): MOV qword ptr [R15 + 0x10],RAX
0001157a(2): JZ 0x000115a2
0001157c(3): MOV RDX,R14
0001157f(3): MOV RSI,R13
00011582(3): MOV RDI,RAX
00011585(5): CALL 0x00001ee0
0001158a(7): MOV RSI,qword ptr [-0xa8 + RBP]
00011591(4): LEA RDI,[R15 + 0x18]
00011595(5): CALL 0x0000d0b0
0001159a(2): TEST EAX,EAX
0001159c(6): JZ 0x000112ac
000115a2(4): MOV RDI,qword ptr [RBP + -0x60]
000115a6(5): CALL 0x00001c60
000115ab(7): CMP byte ptr [-0xc9 + RBP],0x0
000115b2(6): JNZ 0x0001194b
000115b8(7): MOV RDI,qword ptr [-0x88 + RBP]
000115bf(5): CALL 0x0000f610
000115c4(5): MOV EAX,0xc
000115c9(5): JMP 0x000117d9
000115d0(8): CMP qword ptr [-0x88 + RBP],0x0
000115d8(6): JZ 0x0001190c
000115de(7): MOV RCX,qword ptr [-0x98 + RBP]
000115e5(3): TEST RCX,RCX
000115e8(2): JZ 0x0001160a
000115ea(3): MOV RAX,R13
000115ed(2): XOR EDX,EDX
000115ef(1): NOP
000115f0(4): CMP qword ptr [RAX],0x0
000115f4(2): JS 0x000115fd
000115f6(5): CMP qword ptr [RAX + 0x8],-0x1
000115fb(2): JZ 0x00011650
000115fd(4): ADD RDX,0x1
00011601(4): ADD RAX,0x10
00011605(3): CMP RCX,RDX
00011608(2): JNZ 0x000115f0
0001160a(4): MOV RDI,qword ptr [RBP + -0x60]
0001160e(5): CALL 0x00001c60
00011613(7): CMP byte ptr [-0xc9 + RBP],0x0
0001161a(6): JNZ 0x00011994
00011620(7): MOV RDI,qword ptr [-0x88 + RBP]
00011627(5): CALL 0x0000f610
0001162c(2): XOR EAX,EAX
0001162e(5): JMP 0x000117d9
00011638(3): TEST RCX,RCX
0001163b(6): JZ 0x000116f0
00011641(4): MOV R15,qword ptr [RBP + -0x78]
00011645(5): JMP 0x000114e5
00011650(7): MOV RDI,qword ptr [-0x88 + RBP]
00011657(7): MOV R9,qword ptr [-0xa8 + RBP]
0001165e(3): MOV R8,R13
00011661(7): MOV RCX,qword ptr [-0x98 + RBP]
00011668(7): MOV RDX,qword ptr [-0xb0 + RBP]
0001166f(4): LEA RSI,[RDI + 0x10]
00011673(5): CALL 0x0000f660
00011678(3): MOV R9,RAX
0001167b(3): MOV RBX,RAX
0001167e(3): MOV R15,RAX
00011681(4): SHL R9,0x4
00011685(5): JMP 0x000111fc
0001168a(4): CMP RBX,-0x2
0001168e(6): JZ 0x00011838
00011694(4): NOP dword ptr [RAX]
00011698(8): CMP qword ptr [-0x88 + RBP],0x0
000116a0(6): JZ 0x0001195c
000116a6(7): MOV RDI,qword ptr [-0x88 + RBP]
000116ad(7): MOV RCX,qword ptr [-0x98 + RBP]
000116b4(4): LEA RDX,[RBP + -0x78]
000116b8(7): MOV R9,qword ptr [-0xa8 + RBP]
000116bf(3): MOV R8,R13
000116c2(4): LEA RSI,[RDI + 0x10]
000116c6(5): CALL 0x0000f660
000116cb(4): MOV RCX,qword ptr [RBP + -0x78]
000116cf(3): MOV RBX,RAX
000116d2(5): JMP 0x000111cb
000116e0(3): MOV RBX,R14
000116e3(5): JMP 0x000112ac
000116f0(7): MOV RDI,qword ptr [-0xa8 + RBP]
000116f7(3): MOV RSI,RBX
000116fa(7): MOV qword ptr [-0xa0 + RBP],R9
00011701(5): CALL 0x0000aa10
00011706(2): TEST AL,AL
00011708(6): JZ 0x00011838
0001170e(4): MOV RDX,qword ptr [R14 + 0x28]
00011712(4): LEA RAX,[RBX + RBX*0x2]
00011716(4): MOV RCX,qword ptr [RBP + -0x78]
0001171a(4): LEA RAX,[RDX + RAX*0x8]
0001171e(7): MOV qword ptr [-0xd8 + RBP],RCX
00011725(4): MOV RAX,qword ptr [RAX + 0x10]
00011729(3): MOV RBX,qword ptr [RAX]
0001172c(8): MOV RAX,qword ptr [0xb8 + R12]
00011734(4): MOV RAX,qword ptr [RAX + RCX*0x8]
00011738(3): MOV RDX,RBX
0001173b(4): MOV RDI,qword ptr [RAX + 0x10]
0001173f(4): LEA RSI,[RAX + 0x18]
00011743(5): CALL 0x0000bf50
00011748(3): TEST RAX,RAX
0001174b(6): JNZ 0x000112ac
00011751(7): MOV R9,qword ptr [-0xa0 + RBP]
00011758(3): MOV RSI,qword ptr [R14]
0001175b(7): MOV RCX,qword ptr [-0xd8 + RBP]
00011762(3): ADD RSI,R9
00011765(5): JMP 0x0001122d
00011770(7): MOV RDX,qword ptr [-0xb8 + RBP]
00011777(7): MOV RDI,qword ptr [-0xc0 + RBP]
0001177e(3): MOV RSI,R13
00011781(4): MOV qword ptr [RAX + 0x8],RCX
00011785(7): MOV qword ptr [-0xd8 + RBP],R9
0001178c(7): MOV qword ptr [-0xa0 + RBP],RCX
00011793(5): CALL 0x00001ee0
00011798(4): MOV RAX,qword ptr [R13 + 0x8]
0001179c(7): MOV RCX,qword ptr [-0xa0 + RBP]
000117a3(7): MOV R9,qword ptr [-0xd8 + RBP]
000117aa(5): JMP 0x000111e9
000117b0(4): MOV RDI,qword ptr [RBP + -0x60]
000117b4(5): CALL 0x00001c60
000117b9(7): CMP byte ptr [-0xc9 + RBP],0x0
000117c0(6): JNZ 0x0001189c
000117c6(7): MOV RDI,qword ptr [-0x88 + RBP]
000117cd(3): TEST RDI,RDI
000117d0(2): JZ 0x000117d7
000117d2(5): CALL 0x0000f610
000117d7(2): XOR EAX,EAX
000117d9(4): MOV RBX,qword ptr [RBP + -0x38]
000117dd(9): XOR RBX,qword ptr FS:[0x28]
000117e6(6): JNZ 0x000119a5
000117ec(4): LEA RSP,[RBP + -0x28]
000117f0(1): POP RBX
000117f1(2): POP R12
000117f3(2): POP R13
000117f5(2): POP R14
000117f7(2): POP R15
000117f9(1): POP RBP
000117fa(1): RET
000117fb(7): MOV RDX,qword ptr [-0xb8 + RBP]
00011802(3): MOV RSI,RDI
00011805(3): MOV RDI,R13
00011808(7): MOV qword ptr [-0xd8 + RBP],RCX
0001180f(7): MOV qword ptr [-0xa0 + RBP],R9
00011816(5): CALL 0x00001ee0
0001181b(4): MOV RAX,qword ptr [R13 + 0x8]
0001181f(7): MOV R9,qword ptr [-0xa0 + RBP]
00011826(7): MOV RCX,qword ptr [-0xd8 + RBP]
0001182d(5): JMP 0x000111e9
00011838(4): MOV RDI,qword ptr [RBP + -0x60]
0001183c(5): CALL 0x00001c60
00011841(7): CMP byte ptr [-0xc9 + RBP],0x0
00011848(6): JNZ 0x0001194b
0001184e(8): CMP qword ptr [-0x88 + RBP],0x0
00011856(6): JNZ 0x000115b8
0001185c(5): MOV EAX,0xc
00011861(5): JMP 0x000117d9
00011866(7): MOV RDI,qword ptr [-0xb8 + RBP]
0001186d(5): CALL 0x00001f20
00011872(3): TEST RAX,RAX
00011875(7): MOV qword ptr [-0xc0 + RBP],RAX
0001187c(7): MOV byte ptr [-0xc9 + RBP],0x1
00011883(6): JNZ 0x00011197
00011889(7): MOV RDI,qword ptr [-0x88 + RBP]
00011890(3): TEST RDI,RDI
00011893(2): JZ 0x0001185c
00011895(5): CALL 0x0000f610
0001189a(2): JMP 0x0001185c
0001189c(7): MOV RDI,qword ptr [-0xc0 + RBP]
000118a3(5): CALL 0x00001c60
000118a8(7): MOV RDI,qword ptr [-0x88 + RBP]
000118af(3): TEST RDI,RDI
000118b2(6): JNZ 0x000117d2
000118b8(5): JMP 0x000117d7
000118bd(11): MOV qword ptr [-0x88 + RBP],0x0
000118c8(5): JMP 0x0001113d
000118cd(4): LEA RSI,[RAX + RAX*0x2]
000118d1(7): MOV RAX,qword ptr [-0x88 + RBP]
000118d8(7): MOV qword ptr [-0xa0 + RBP],RDX
000118df(4): SHL RSI,0x5
000118e3(4): MOV RDI,qword ptr [RAX + 0x10]
000118e7(5): CALL 0x00001f90
000118ec(3): TEST RAX,RAX
000118ef(2): JZ 0x00011935
000118f1(7): MOV RCX,qword ptr [-0x88 + RBP]
000118f8(7): MOV RDX,qword ptr [-0xa0 + RBP]
000118ff(4): SHL qword ptr [RCX + 0x8],1
00011903(4): MOV qword ptr [RCX + 0x10],RAX
00011907(5): JMP 0x00011552
0001190c(4): MOV RDI,qword ptr [RBP + -0x60]
00011910(5): CALL 0x00001c60
00011915(7): CMP byte ptr [-0xc9 + RBP],0x0
0001191c(6): JZ 0x000117d7
00011922(7): MOV RDI,qword ptr [-0xc0 + RBP]
00011929(5): CALL 0x00001c60
0001192e(2): XOR EAX,EAX
00011930(5): JMP 0x000117d9
00011935(4): MOV RDI,qword ptr [RBP + -0x60]
00011939(5): CALL 0x00001c60
0001193e(7): CMP byte ptr [-0xc9 + RBP],0x0
00011945(6): JZ 0x000115b8
0001194b(7): MOV RDI,qword ptr [-0xc0 + RBP]
00011952(5): CALL 0x00001c60
00011957(5): JMP 0x0001184e
0001195c(4): MOV RDI,qword ptr [RBP + -0x60]
00011960(5): CALL 0x00001c60
00011965(7): CMP byte ptr [-0xc9 + RBP],0x0
0001196c(5): MOV EAX,0x1
00011971(6): JZ 0x000117d9
00011977(7): MOV RDI,qword ptr [-0xc0 + RBP]
0001197e(6): MOV dword ptr [-0x88 + RBP],EAX
00011984(5): CALL 0x00001c60
00011989(6): MOV EAX,dword ptr [-0x88 + RBP]
0001198f(5): JMP 0x000117d9
00011994(7): MOV RDI,qword ptr [-0xc0 + RBP]
0001199b(5): CALL 0x00001c60
000119a0(5): JMP 0x00011620
000119a5(5): CALL 0x00001db0
000119aa(6): NOP word ptr [RAX + RAX*0x1]
000119b0(2): PUSH R15
000119b2(2): PUSH R14
000119b4(3): MOV R14,RCX
000119b7(2): PUSH R13
000119b9(2): PUSH R12
000119bb(3): MOV R13,RSI
000119be(1): PUSH RBP
000119bf(1): PUSH RBX
000119c0(4): LEA RSI,[RDX + 0x10]
000119c4(3): MOV RBP,RDX
000119c7(3): MOV R9,R8
000119ca(3): MOV R12,R8
000119cd(4): SUB RSP,0x20
000119d1(4): MOV RCX,qword ptr [RDX + 0x8]
000119d5(3): MOV R8,R14
000119d8(2): PUSH 0x8
000119da(3): MOV RDX,qword ptr [RDX]
000119dd(3): MOV RBX,RDI
000119e0(5): CALL 0x00010960
000119e5(2): TEST EAX,EAX
000119e7(1): POP RDX
000119e8(1): POP RCX
000119e9(2): JZ 0x00011a00
000119eb(4): ADD RSP,0x18
000119ef(1): POP RBX
000119f0(1): POP RBP
000119f1(2): POP R12
000119f3(2): POP R13
000119f5(2): POP R14
000119f7(2): POP R15
000119f9(1): RET
00011a00(7): MOV RAX,qword ptr [0xc8 + RBX]
00011a07(7): MOV RDX,qword ptr [0xd0 + RBX]
00011a0e(4): MOV R15,qword ptr [RBP + 0x8]
00011a12(4): MOV RCX,qword ptr [R13]
00011a16(7): MOV RDI,qword ptr [0xd8 + RBX]
00011a1d(3): CMP RAX,RDX
00011a20(3): MOV RSI,R15
00011a23(6): JGE 0x00011ac0
00011a29(4): LEA RDX,[RAX + RAX*0x4]
00011a2d(4): SHL RDX,0x3
00011a31(3): TEST RAX,RAX
00011a34(2): JLE 0x00011a41
00011a36(5): LEA R8,[RDI + RDX*0x1 + -0x28]
00011a3b(4): CMP R12,qword ptr [R8 + 0x8]
00011a3f(2): JZ 0x00011ab0
00011a41(3): ADD RDI,RDX
00011a44(2): XOR EDX,EDX
00011a46(3): CMP R15,RCX
00011a49(3): SETZ DL
00011a4c(4): ADD RAX,0x1
00011a50(3): MOV qword ptr [RDI],R14
00011a53(2): NEG EDX
00011a55(4): MOV qword ptr [RDI + 0x8],R12
00011a59(4): MOV qword ptr [RDI + 0x10],RCX
00011a5d(4): MOV word ptr [RDI + 0x22],DX
00011a61(4): MOV qword ptr [RDI + 0x18],R15
00011a65(7): MOV qword ptr [0xc8 + RBX],RAX
00011a6c(4): MOV byte ptr [RDI + 0x20],0x0
00011a70(3): MOV RAX,R15
00011a73(7): MOVSXD RDX,dword ptr [0xe0 + RBX]
00011a7a(3): SUB RAX,RCX
00011a7d(3): CMP RDX,RAX
00011a80(2): JGE 0x00011a8c
00011a82(3): SUB R15D,ECX
00011a85(7): MOV dword ptr [0xe0 + RBX],R15D
00011a8c(3): ADD RSI,R12
00011a8f(4): SUB RSI,qword ptr [R13]
00011a93(4): ADD RSP,0x18
00011a97(3): MOV RDI,RBX
00011a9a(1): POP RBX
00011a9b(1): POP RBP
00011a9c(2): POP R12
00011a9e(2): POP R13
00011aa0(2): POP R14
00011aa2(2): POP R15
00011aa4(5): JMP 0x0000b5e0
00011ab0(5): MOV byte ptr [R8 + 0x20],0x1
00011ab5(2): JMP 0x00011a41
00011ac0(4): LEA RSI,[RDX + RDX*0x4]
00011ac4(5): MOV qword ptr [RSP + 0x8],RCX
00011ac9(4): SHL RSI,0x4
00011acd(5): CALL 0x00001f90
00011ad2(3): TEST RAX,RAX
00011ad5(5): MOV RCX,qword ptr [RSP + 0x8]
00011ada(2): JZ 0x00011b30
00011adc(7): MOV RSI,qword ptr [0xc8 + RBX]
00011ae3(7): MOV RDX,qword ptr [0xd0 + RBX]
00011aea(7): MOV qword ptr [0xd8 + RBX],RAX
00011af1(5): MOV qword ptr [RSP + 0x8],RCX
00011af6(4): LEA RSI,[RSI + RSI*0x4]
00011afa(4): LEA RDX,[RDX + RDX*0x4]
00011afe(4): LEA RDI,[RAX + RSI*0x8]
00011b02(4): SHL RDX,0x3
00011b06(2): XOR ESI,ESI
00011b08(5): CALL 0x00001e40
00011b0d(7): SHL qword ptr [0xd0 + RBX],1
00011b14(7): MOV RAX,qword ptr [0xc8 + RBX]
00011b1b(7): MOV RDI,qword ptr [0xd8 + RBX]
00011b22(4): MOV RSI,qword ptr [RBP + 0x8]
00011b26(5): MOV RCX,qword ptr [RSP + 0x8]
00011b2b(5): JMP 0x00011a29
00011b30(7): MOV RDI,qword ptr [0xd8 + RBX]
00011b37(5): CALL 0x00001c60
00011b3c(5): MOV EAX,0xc
00011b41(5): JMP 0x000119eb
00011b50(2): PUSH R15
00011b52(2): PUSH R14
00011b54(2): PUSH R13
00011b56(2): PUSH R12
00011b58(1): PUSH RBP
00011b59(1): PUSH RBX
00011b5a(7): SUB RSP,0xb8
00011b61(4): MOV R15,qword ptr [RDI + 0x48]
00011b65(9): MOV RAX,qword ptr FS:[0x28]
00011b6e(8): MOV qword ptr [0xa8 + RSP],RAX
00011b76(2): XOR EAX,EAX
00011b78(4): CMP qword ptr [RSI],0x0
00011b7c(7): MOV RAX,qword ptr [0x98 + RDI]
00011b83(5): MOV qword ptr [RSP + 0x48],RSI
00011b88(5): MOV qword ptr [RSP + 0x40],RDX
00011b8d(5): MOV qword ptr [RSP + 0x38],RAX
00011b92(6): JLE 0x00011ec0
00011b98(8): LEA RAX,[R15*0x8]
00011ba0(3): MOV R14,RDI
00011ba3(8): MOV qword ptr [RSP],0x0
00011bab(5): MOV qword ptr [RSP + 0x8],R15
00011bb0(5): MOV qword ptr [RSP + 0x60],RAX
00011bb5(8): LEA RAX,[0x90 + RSP]
00011bbd(5): MOV qword ptr [RSP + 0x68],RAX
00011bc2(8): LEA RAX,[0x8c + RSP]
00011bca(5): MOV qword ptr [RSP + 0x78],RAX
00011bcf(2): JMP 0x00011c17
00011bd8(2): TEST AL,0x1
00011bda(2): JZ 0x00011c00
00011bdc(3): AND EDX,0x8
00011bdf(2): JNZ 0x00011c00
00011be1(3): TEST CL,0x20
00011be4(2): JZ 0x00011bea
00011be6(2): TEST AL,0x2
00011be8(2): JZ 0x00011c00
00011bea(6): AND ECX,0x80
00011bf0(6): JZ 0x00011c90
00011bf6(2): TEST AL,0x8
00011bf8(6): JNZ 0x00011c90
00011bfe(2): NOP
00011c00(5): MOV RDI,qword ptr [RSP + 0x48]
00011c05(5): ADD qword ptr [RSP],0x1
00011c0a(4): MOV RAX,qword ptr [RSP]
00011c0e(3): CMP RAX,qword ptr [RDI]
00011c11(6): JGE 0x00011ec0
00011c17(5): MOV RAX,qword ptr [RSP + 0x40]
00011c1c(4): MOV RDI,qword ptr [RSP]
00011c20(3): MOV RAX,qword ptr [RAX]
00011c23(4): MOV R13,qword ptr [RAX + RDI*0x8]
00011c27(5): MOV RDI,qword ptr [RSP + 0x38]
00011c2c(3): MOV RAX,qword ptr [RDI]
00011c2f(3): MOV RBX,R13
00011c32(4): SHL RBX,0x4
00011c36(3): ADD RAX,RBX
00011c39(4): CMP byte ptr [RAX + 0x8],0x4
00011c3d(2): JNZ 0x00011c00
00011c3f(3): MOV EBP,dword ptr [RAX + 0x8]
00011c42(6): TEST EBP,0x3ff00
00011c48(2): JZ 0x00011c90
00011c4a(7): MOV EDX,dword ptr [0xa0 + R14]
00011c51(5): MOV RSI,qword ptr [RSP + 0x8]
00011c56(3): MOV RDI,R14
00011c59(5): CALL 0x0000dd30
00011c5e(2): MOV EDX,EBP
00011c60(3): SHR EDX,0x8
00011c63(2): MOV ECX,EDX
00011c65(5): AND CX,0x3ff
00011c6a(3): TEST DL,0x4
00011c6d(6): JNZ 0x00011bd8
00011c73(3): AND EDX,0x8
00011c76(6): JZ 0x00011be1
00011c7c(2): TEST AL,0x1
00011c7e(6): JZ 0x00011be1
00011c84(5): JMP 0x00011c00
00011c90(7): MOV RDI,qword ptr [0xc8 + R14]
00011c97(7): MOV RAX,qword ptr [0x98 + R14]
00011c9e(2): XOR ECX,ECX
00011ca0(4): MOV R10,qword ptr [R14 + 0x8]
00011ca4(5): MOV R9,qword ptr [RSP + 0x8]
00011ca9(5): MOV qword ptr [RSP + 0x70],RDI
00011cae(5): MOV qword ptr [RSP + 0x50],RAX
00011cb3(3): CMP RCX,RDI
00011cb6(2): JGE 0x00011d0b
00011cb8(4): LEA RAX,[RCX + RDI*0x1]
00011cbc(7): MOV R11,qword ptr [0xd8 + R14]
00011cc3(3): MOV RSI,RAX
00011cc6(4): SHR RSI,0x3f
00011cca(3): ADD RSI,RAX
00011ccd(3): SAR RSI,1
00011cd0(4): LEA RAX,[RSI + RSI*0x4]
00011cd4(5): CMP R9,qword ptr [R11 + RAX*0x8 + 0x8]
00011cd9(2): JLE 0x00011d06
00011cdb(5): JMP 0x00011ea8
00011ce0(4): LEA RDX,[RSI + RCX*0x1]
00011ce4(3): MOV RAX,RDX
00011ce7(4): SHR RAX,0x3f
00011ceb(3): ADD RAX,RDX
00011cee(3): SAR RAX,1
00011cf1(4): LEA RDX,[RAX + RAX*0x4]
00011cf5(3): MOV R8,RAX
00011cf8(5): CMP R9,qword ptr [R11 + RDX*0x8 + 0x8]
00011cfd(6): JG 0x00011eb0
00011d03(3): MOV RSI,RAX
00011d06(3): CMP RSI,RCX
00011d09(2): JG 0x00011ce0
00011d0b(5): CMP qword ptr [RSP + 0x70],RCX
00011d10(2): JLE 0x00011d36
00011d12(7): MOV RDX,qword ptr [0xd8 + R14]
00011d19(4): LEA RAX,[RCX + RCX*0x4]
00011d1d(5): MOV RDI,qword ptr [RSP + 0x8]
00011d22(4): LEA RAX,[RDX + RAX*0x8]
00011d26(4): CMP qword ptr [RAX + 0x8],RDI
00011d2a(2): JNZ 0x00011d36
00011d2c(4): CMP RCX,-0x1
00011d30(6): JNZ 0x00011f06
00011d36(5): MOV RAX,qword ptr [RSP + 0x50]
00011d3b(8): CMP qword ptr [0xe8 + R14],0x0
00011d43(3): MOV RDX,qword ptr [RAX]
00011d46(4): MOV RAX,qword ptr [RDX + RBX*0x1]
00011d4a(5): MOV qword ptr [RSP + 0x58],RAX
00011d4f(6): JLE 0x00011f0b
00011d55(5): MOV qword ptr [RSP + 0x30],R13
00011d5a(9): MOV qword ptr [RSP + 0x28],0x0
00011d63(3): MOV R13,R10
00011d66(7): MOV RAX,qword ptr [0xf8 + R14]
00011d6d(5): MOV RBX,qword ptr [RSP + 0x28]
00011d72(5): MOV RDI,qword ptr [RSP + 0x58]
00011d77(4): MOV RBX,qword ptr [RAX + RBX*0x8]
00011d7b(4): MOV RAX,qword ptr [RBX + 0x8]
00011d7f(4): SHL RAX,0x4
00011d83(4): CMP RDI,qword ptr [RDX + RAX*0x1]
00011d87(2): JZ 0x00011db0
00011d89(6): ADD qword ptr [RSP + 0x28],0x1
00011d8f(5): MOV RAX,qword ptr [RSP + 0x28]
00011d94(7): CMP RAX,qword ptr [0xe8 + R14]
00011d9b(6): JGE 0x00012411
00011da1(5): MOV RAX,qword ptr [RSP + 0x50]
00011da6(3): MOV RDX,qword ptr [RAX]
00011da9(2): JMP 0x00011d66
00011db0(5): CMP qword ptr [RBX + 0x20],0x0
00011db5(3): MOV R11,qword ptr [RBX]
00011db8(6): JLE 0x00012422
00011dbe(5): MOV RCX,qword ptr [RSP + 0x8]
00011dc3(3): MOV R8,R13
00011dc6(2): XOR EBP,EBP
00011dc8(3): MOV R13,RBX
00011dcb(3): MOV RBX,RCX
00011dce(2): JMP 0x00011e3c
00011dd0(4): LEA RSI,[R8 + R11*0x1]
00011dd4(4): LEA RDI,[R8 + RBX*0x1]
00011dd8(5): MOV qword ptr [RSP + 0x20],R9
00011ddd(5): MOV qword ptr [RSP + 0x18],R11
00011de2(5): MOV qword ptr [RSP + 0x10],R8
00011de7(5): CALL 0x00001e90
00011dec(2): TEST EAX,EAX
00011dee(5): MOV R8,qword ptr [RSP + 0x10]
00011df3(5): MOV R11,qword ptr [RSP + 0x18]
00011df8(5): MOV R9,qword ptr [RSP + 0x20]
00011dfd(6): JNZ 0x000122c8
00011e03(5): MOV R8,qword ptr [RSP + 0x8]
00011e08(5): MOV RCX,qword ptr [RSP + 0x30]
00011e0d(3): MOV RDX,R9
00011e10(3): MOV RSI,R13
00011e13(3): MOV RDI,R14
00011e16(5): CALL 0x000119b0
00011e1b(3): CMP EAX,0x1
00011e1e(4): MOV R8,qword ptr [R14 + 0x8]
00011e22(6): JA 0x00011ec8
00011e28(4): ADD RBP,0x1
00011e2c(4): CMP RBP,qword ptr [R13 + 0x20]
00011e30(3): MOV R11,R15
00011e33(3): MOV RBX,R12
00011e36(6): JGE 0x000120e8
00011e3c(4): MOV RAX,qword ptr [R13 + 0x28]
00011e40(4): MOV R9,qword ptr [RAX + RBP*0x8]
00011e44(4): MOV R15,qword ptr [R9 + 0x8]
00011e48(3): MOV RDX,R15
00011e4b(3): SUB RDX,R11
00011e4e(3): TEST RDX,RDX
00011e51(4): LEA R12,[RDX + RBX*0x1]
00011e55(2): JLE 0x00011e03
00011e57(4): CMP qword ptr [R14 + 0x30],R12
00011e5b(6): JGE 0x00011dd0
00011e61(4): CMP qword ptr [R14 + 0x58],R12
00011e65(5): MOV qword ptr [RSP + 0x18],RDX
00011e6a(5): MOV qword ptr [RSP + 0x10],R9
00011e6f(6): JL 0x000122c8
00011e75(3): MOV RSI,R12
00011e78(3): MOV RDI,R14
00011e7b(5): MOV qword ptr [RSP + 0x20],R11
00011e80(5): CALL 0x0000b5e0
00011e85(2): TEST EAX,EAX
00011e87(2): JNZ 0x00011ec8
00011e89(4): MOV R8,qword ptr [R14 + 0x8]
00011e8d(5): MOV RDX,qword ptr [RSP + 0x18]
00011e92(5): MOV R9,qword ptr [RSP + 0x10]
00011e97(5): MOV R11,qword ptr [RSP + 0x20]
00011e9c(5): JMP 0x00011dd0
00011ea8(3): MOV R8,RSI
00011eab(3): MOV RSI,RDI
00011eae(2): NOP
00011eb0(4): LEA RCX,[R8 + 0x1]
00011eb4(3): MOV RDI,RSI
00011eb7(5): JMP 0x00011cb3
00011ec0(2): XOR EAX,EAX
00011ec2(6): NOP word ptr [RAX + RAX*0x1]
00011ec8(8): MOV RBX,qword ptr [0xa8 + RSP]
00011ed0(9): XOR RBX,qword ptr FS:[0x28]
00011ed9(6): JNZ 0x0001242c
00011edf(7): ADD RSP,0xb8
00011ee6(1): POP RBX
00011ee7(1): POP RBP
00011ee8(2): POP R12
00011eea(2): POP R13
00011eec(2): POP R14
00011eee(2): POP R15
00011ef0(1): RET
00011ef8(4): ADD RAX,0x28
00011efc(4): CMP byte ptr [RAX + -0x8],0x0
00011f00(6): JZ 0x00011d36
00011f06(3): CMP R13,qword ptr [RAX]
00011f09(2): JNZ 0x00011ef8
00011f0b(5): MOV RAX,qword ptr [RSP + 0x70]
00011f10(5): CMP qword ptr [RSP + 0x70],RAX
00011f15(11): MOV dword ptr [0x8c + RSP],0x0
00011f20(6): JGE 0x00011c00
00011f26(8): LEA RAX,[R13*0x8]
00011f2e(5): MOV R12,qword ptr [RSP + 0x70]
00011f33(5): MOV RBP,qword ptr [RSP + 0x38]
00011f38(5): MOV qword ptr [RSP + 0x50],RAX
00011f3d(5): LEA RAX,[R13 + R13*0x2]
00011f42(4): LEA R8,[R12 + R12*0x4]
00011f46(4): SHL RAX,0x3
00011f4a(5): MOV qword ptr [RSP + 0x58],RAX
00011f4f(8): LEA R15,[R8*0x8]
00011f57(5): JMP 0x0001208d
00011f60(4): MOV RCX,qword ptr [RBP + 0x28]
00011f64(5): MOV RDI,qword ptr [RSP + 0x58]
00011f69(5): MOV RCX,qword ptr [RCX + RDI*0x1 + 0x10]
00011f6e(3): MOV RCX,qword ptr [RCX]
00011f71(4): LEA RCX,[RCX + RCX*0x2]
00011f75(4): LEA RCX,[RDX + RCX*0x8]
00011f79(5): MOV qword ptr [RSP + 0x18],RCX
00011f7e(5): ADD RBX,qword ptr [RSP + 0x8]
00011f83(7): MOV EDX,dword ptr [0xa0 + R14]
00011f8a(3): MOV RDI,R14
00011f8d(3): SUB RBX,RAX
00011f90(4): LEA RSI,[RBX + -0x1]
00011f94(5): CALL 0x0000dd30
00011f99(5): MOV RSI,qword ptr [RSP + 0x60]
00011f9e(2): MOV ECX,EAX
00011fa0(7): MOV RAX,qword ptr [0xb8 + R14]
00011fa7(8): LEA R10,[RBX*0x8]
00011faf(9): MOV qword ptr [RSP + 0x10],0x0
00011fb8(4): LEA R11,[RAX + R10*0x1]
00011fbc(4): MOV RAX,qword ptr [RAX + RSI*0x1]
00011fc0(3): MOV RDX,qword ptr [R11]
00011fc3(3): TEST RAX,RAX
00011fc6(2): JZ 0x00011fd1
00011fc8(4): MOV RAX,qword ptr [RAX + 0x10]
00011fcc(5): MOV qword ptr [RSP + 0x10],RAX
00011fd1(3): TEST RDX,RDX
00011fd4(6): JZ 0x000122f0
00011fda(4): MOV RSI,qword ptr [RDX + 0x50]
00011fde(5): MOV RDI,qword ptr [RSP + 0x68]
00011fe3(5): MOV RDX,qword ptr [RSP + 0x18]
00011fe8(5): MOV qword ptr [RSP + 0x30],R10
00011fed(4): MOV dword ptr [RSP + 0x28],ECX
00011ff1(5): CALL 0x0000d140
00011ff6(2): TEST EAX,EAX
00011ff8(7): MOV dword ptr [0x8c + RSP],EAX
00011fff(4): MOV ECX,dword ptr [RSP + 0x28]
00012003(5): MOV R10,qword ptr [RSP + 0x30]
00012008(6): JNZ 0x00012398
0001200e(7): ADD R10,qword ptr [0xb8 + R14]
00012015(5): MOV RDX,qword ptr [RSP + 0x68]
0001201a(3): MOV RSI,RBP
0001201d(5): MOV RDI,qword ptr [RSP + 0x78]
00012022(5): MOV qword ptr [RSP + 0x28],R10
00012027(5): CALL 0x0000d2a0
0001202c(5): MOV R10,qword ptr [RSP + 0x28]
00012031(8): MOV RDI,qword ptr [0xa0 + RSP]
00012039(3): MOV qword ptr [R10],RAX
0001203c(5): CALL 0x00001c60
00012041(7): MOV RDX,qword ptr [0xb8 + R14]
00012048(5): CMP qword ptr [RDX + RBX*0x8],0x0
0001204d(6): JZ 0x00012321
00012053(6): CMP qword ptr [RSP + 0x20],0x0
00012059(2): JNZ 0x00012078
0001205b(5): MOV RAX,qword ptr [RSP + 0x60]
00012060(5): MOV RBX,qword ptr [RSP + 0x10]
00012065(4): MOV RAX,qword ptr [RDX + RAX*0x1]
00012069(4): CMP qword ptr [RAX + 0x10],RBX
0001206d(6): JG 0x00012338
00012073(5): NOP dword ptr [RAX + RAX*0x1]
00012078(4): ADD R12,0x1
0001207c(4): ADD R15,0x28
00012080(7): CMP R12,qword ptr [0xc8 + R14]
00012087(6): JGE 0x00011c00
0001208d(7): MOV RAX,qword ptr [0xd8 + R14]
00012094(3): ADD RAX,R15
00012097(3): CMP R13,qword ptr [RAX]
0001209a(2): JNZ 0x00012078
0001209c(5): MOV RDI,qword ptr [RSP + 0x8]
000120a1(4): CMP RDI,qword ptr [RAX + 0x8]
000120a5(2): JNZ 0x00012078
000120a7(4): MOV RBX,qword ptr [RAX + 0x18]
000120ab(4): MOV RAX,qword ptr [RAX + 0x10]
000120af(4): MOV RDX,qword ptr [RBP + 0x30]
000120b3(3): MOV RCX,RBX
000120b6(3): SUB RCX,RAX
000120b9(5): MOV qword ptr [RSP + 0x20],RCX
000120be(6): JZ 0x00011f60
000120c4(4): MOV RCX,qword ptr [RBP + 0x18]
000120c8(5): MOV RDI,qword ptr [RSP + 0x50]
000120cd(4): MOV RCX,qword ptr [RCX + RDI*0x1]
000120d1(4): LEA RCX,[RCX + RCX*0x2]
000120d5(4): LEA RCX,[RDX + RCX*0x8]
000120d9(5): MOV qword ptr [RSP + 0x18],RCX
000120de(5): JMP 0x00011f7e
000120e8(3): MOV RBX,R13
000120eb(3): MOV R13,R8
000120ee(4): LEA R11,[R15 + 0x1]
000120f2(5): CMP qword ptr [RSP + 0x8],R11
000120f7(6): JL 0x00011d89
000120fd(3): MOV RAX,R12
00012100(8): LEA R15,[R11*0x8]
00012108(3): MOV R12,RBX
0001210b(3): MOV RBX,R11
0001210e(3): MOV R11,R13
00012111(3): MOV R13,RAX
00012114(4): NOP dword ptr [RAX]
00012118(3): MOV RAX,RBX
0001211b(4): SUB RAX,qword ptr [R12]
0001211f(3): TEST RAX,RAX
00012122(2): JLE 0x00012145
00012124(4): CMP qword ptr [R14 + 0x30],R13
00012128(6): JLE 0x000123b1
0001212e(6): MOVZX ECX,byte ptr [R11 + RBX*0x1 + -0x1]
00012134(4): LEA RAX,[R13 + 0x1]
00012138(4): CMP byte ptr [R11 + R13*0x1],CL
0001213c(6): JNZ 0x00012272
00012142(3): MOV R13,RAX
00012145(7): MOV RAX,qword ptr [0xb8 + R14]
0001214c(4): MOV RAX,qword ptr [RAX + R15*0x1]
00012150(3): TEST RAX,RAX
00012153(6): JZ 0x0001225f
00012159(4): MOV RCX,qword ptr [RAX + 0x10]
0001215d(3): TEST RCX,RCX
00012160(6): JLE 0x0001225f
00012166(4): MOV RDI,qword ptr [RAX + 0x18]
0001216a(5): MOV RAX,qword ptr [RSP + 0x50]
0001216f(2): XOR EDX,EDX
00012171(5): MOV R8,qword ptr [RSP + 0x58]
00012176(3): MOV RSI,qword ptr [RAX]
00012179(2): JMP 0x0001218d
00012180(4): ADD RDX,0x1
00012184(3): CMP RCX,RDX
00012187(6): JZ 0x0001225f
0001218d(4): MOV RBP,qword ptr [RDI + RDX*0x8]
00012191(3): MOV RAX,RBP
00012194(4): SHL RAX,0x4
00012198(3): ADD RAX,RSI
0001219b(4): CMP byte ptr [RAX + 0x8],0x9
0001219f(2): JNZ 0x00012180
000121a1(3): CMP R8,qword ptr [RAX]
000121a4(2): JNZ 0x00012180
000121a6(4): CMP RBP,-0x1
000121aa(6): JZ 0x0001225f
000121b0(5): MOV RSI,qword ptr [R12 + 0x10]
000121b5(4): MOV RCX,qword ptr [R12]
000121b9(3): TEST RSI,RSI
000121bc(6): JZ 0x00012280
000121c2(5): MOV qword ptr [RSP + 0x10],R11
000121c7(5): MOV RDX,qword ptr [R12 + 0x8]
000121cc(4): SUB RSP,0x8
000121d0(2): PUSH 0x9
000121d2(3): MOV R9,RBX
000121d5(3): MOV R8,RBP
000121d8(3): MOV RDI,R14
000121db(5): CALL 0x00010960
000121e0(1): POP RDX
000121e1(3): CMP EAX,0x1
000121e4(1): POP RCX
000121e5(5): MOV R11,qword ptr [RSP + 0x10]
000121ea(2): JZ 0x0001225f
000121ec(2): TEST EAX,EAX
000121ee(6): JNZ 0x00011ec8
000121f4(5): MOV RAX,qword ptr [R12 + 0x20]
000121f9(5): CMP RAX,qword ptr [R12 + 0x18]
000121fe(6): JZ 0x000123d8
00012204(5): MOV ESI,0x28
00012209(5): MOV EDI,0x1
0001220e(5): CALL 0x00001ec0
00012213(3): TEST RAX,RAX
00012216(6): JZ 0x000122b9
0001221c(5): MOV RDX,qword ptr [R12 + 0x20]
00012221(5): MOV RCX,qword ptr [R12 + 0x28]
00012226(3): MOV RSI,R12
00012229(5): MOV R8,qword ptr [RSP + 0x8]
0001222e(3): MOV RDI,R14
00012231(4): MOV qword ptr [RCX + RDX*0x8],RAX
00012235(5): MOV RCX,qword ptr [RSP + 0x30]
0001223a(4): ADD RDX,0x1
0001223e(3): MOV qword ptr [RAX],RBP
00012241(4): MOV qword ptr [RAX + 0x8],RBX
00012245(5): MOV qword ptr [R12 + 0x20],RDX
0001224a(3): MOV RDX,RAX
0001224d(5): CALL 0x000119b0
00012252(3): CMP EAX,0x1
00012255(4): MOV R11,qword ptr [R14 + 0x8]
00012259(6): JA 0x00011ec8
0001225f(4): ADD RBX,0x1
00012263(4): ADD R15,0x8
00012267(5): CMP qword ptr [RSP + 0x8],RBX
0001226c(6): JGE 0x00012118
00012272(3): MOV R13,R11
00012275(5): JMP 0x00011d89
00012280(3): MOV RSI,RBX
00012283(5): MOV EDI,0x18
00012288(5): MOV qword ptr [RSP + 0x18],R11
0001228d(3): SUB RSI,RCX
00012290(5): MOV qword ptr [RSP + 0x10],RCX
00012295(4): ADD RSI,0x1
00012299(5): CALL 0x00001ec0
0001229e(3): TEST RAX,RAX
000122a1(3): MOV RSI,RAX
000122a4(5): MOV qword ptr [R12 + 0x10],RAX
000122a9(5): MOV RCX,qword ptr [RSP + 0x10]
000122ae(5): MOV R11,qword ptr [RSP + 0x18]
000122b3(6): JNZ 0x000121c2
000122b9(5): MOV EAX,0xc
000122be(5): JMP 0x00011ec8
000122c8(3): MOV RCX,RBX
000122cb(3): MOV RBX,R13
000122ce(3): MOV R13,R8
000122d1(4): CMP qword ptr [RBX + 0x20],RBP
000122d5(6): JG 0x00011d89
000122db(3): TEST RBP,RBP
000122de(3): MOV R12,RCX
000122e1(6): JZ 0x000120f2
000122e7(3): MOV R15,R11
000122ea(5): JMP 0x000120ee
000122f0(5): MOV RDX,qword ptr [RSP + 0x18]
000122f5(5): MOV RDI,qword ptr [RSP + 0x78]
000122fa(3): MOV RSI,RBP
000122fd(5): MOV qword ptr [RSP + 0x28],R11
00012302(5): CALL 0x0000d2a0
00012307(5): MOV R11,qword ptr [RSP + 0x28]
0001230c(7): MOV RDX,qword ptr [0xb8 + R14]
00012313(3): MOV qword ptr [R11],RAX
00012316(5): CMP qword ptr [RDX + RBX*0x8],0x0
0001231b(6): JNZ 0x00012053
00012321(7): MOV EAX,dword ptr [0x8c + RSP]
00012328(2): TEST EAX,EAX
0001232a(6): JZ 0x00012053
00012330(5): JMP 0x00011ec8
00012338(5): MOV RAX,qword ptr [RSP + 0x18]
0001233d(5): MOV RCX,qword ptr [RSP + 0x8]
00012342(3): MOV RDI,R14
00012345(4): LEA R8,[RAX + 0x10]
00012349(4): LEA RBX,[RAX + 0x8]
0001234d(3): MOV RDX,R8
00012350(3): MOV RSI,RBX
00012353(5): MOV qword ptr [RSP + 0x10],R8
00012358(5): CALL 0x0000dbe0
0001235d(2): TEST EAX,EAX
0001235f(7): MOV dword ptr [0x8c + RSP],EAX
00012366(6): JNZ 0x00011ec8
0001236c(5): MOV R8,qword ptr [RSP + 0x10]
00012371(3): MOV RSI,RBX
00012374(3): MOV RDI,R14
00012377(3): MOV RDX,R8
0001237a(5): CALL 0x00011b50
0001237f(2): TEST EAX,EAX
00012381(7): MOV dword ptr [0x8c + RSP],EAX
00012388(6): JZ 0x00012078
0001238e(5): JMP 0x00011ec8
00012398(8): MOV RDI,qword ptr [0xa0 + RSP]
000123a0(5): CALL 0x00001c60
000123a5(7): MOV EAX,dword ptr [0x8c + RSP]
000123ac(5): JMP 0x00011ec8
000123b1(4): CMP qword ptr [R14 + 0x58],R13
000123b5(6): JLE 0x00012272
000123bb(4): LEA ESI,[R13 + 0x1]
000123bf(3): MOV RDI,R14
000123c2(5): CALL 0x0000b490
000123c7(2): TEST EAX,EAX
000123c9(6): JNZ 0x00011ec8
000123cf(4): MOV R11,qword ptr [R14 + 0x8]
000123d3(5): JMP 0x0001212e
000123d8(5): LEA RDX,[RAX + RAX*0x1 + 0x1]
000123dd(5): MOV RDI,qword ptr [R12 + 0x28]
000123e2(8): LEA RSI,[RDX*0x8]
000123ea(5): MOV qword ptr [RSP + 0x10],RDX
000123ef(5): CALL 0x00001f90
000123f4(3): TEST RAX,RAX
000123f7(6): JZ 0x000122b9
000123fd(5): MOV RDX,qword ptr [RSP + 0x10]
00012402(5): MOV qword ptr [R12 + 0x28],RAX
00012407(5): MOV qword ptr [R12 + 0x18],RDX
0001240c(5): JMP 0x00012204
00012411(5): MOV R13,qword ptr [RSP + 0x30]
00012416(7): MOV RAX,qword ptr [0xc8 + R14]
0001241d(5): JMP 0x00011f10
00012422(5): MOV R12,qword ptr [RSP + 0x8]
00012427(5): JMP 0x000120f2
0001242c(5): CALL 0x00001db0
00012431(5): NOP dword ptr [RAX + RAX*0x1]
00012436(10): NOP word ptr CS:[RAX + RAX*0x1]
00012440(2): PUSH R15
00012442(2): PUSH R14
00012444(2): PUSH R13
00012446(2): PUSH R12
00012448(3): MOV R13,RDI
0001244b(1): PUSH RBP
0001244c(1): PUSH RBX
0001244d(3): MOV RBX,RSI
00012450(4): SUB RSP,0x38
00012454(4): MOV R12,qword ptr [RSI + 0x48]
00012458(7): MOV R14,qword ptr [0xb8 + RSI]
0001245f(9): MOV RAX,qword ptr FS:[0x28]
00012468(5): MOV qword ptr [RSP + 0x28],RAX
0001246d(2): XOR EAX,EAX
0001246f(7): MOV R15,qword ptr [0x98 + RSI]
00012476(8): LEA RBP,[R12*0x8]
0001247e(3): ADD R14,RBP
00012481(7): CMP qword ptr [0xc0 + RSI],R12
00012488(2): JGE 0x000124d0
0001248a(3): MOV qword ptr [R14],RDX
0001248d(3): MOV RBP,RDX
00012490(7): MOV qword ptr [0xc0 + RSI],R12
00012497(8): CMP qword ptr [0x98 + R15],0x0
0001249f(6): JNZ 0x000125c8
000124a5(5): MOV RCX,qword ptr [RSP + 0x28]
000124aa(9): XOR RCX,qword ptr FS:[0x28]
000124b3(3): MOV RAX,RBP
000124b6(6): JNZ 0x00012627
000124bc(4): ADD RSP,0x38
000124c0(1): POP RBX
000124c1(1): POP RBP
000124c2(2): POP R12
000124c4(2): POP R13
000124c6(2): POP R14
000124c8(2): POP R15
000124ca(1): RET
000124d0(3): MOV RAX,qword ptr [R14]
000124d3(3): TEST RAX,RAX
000124d6(6): JZ 0x000125b8
000124dc(3): TEST RDX,RDX
000124df(4): MOV RAX,qword ptr [RAX + 0x50]
000124e3(6): JZ 0x00012570
000124e9(4): MOV R14,qword ptr [RDX + 0x50]
000124ed(5): LEA RDI,[RSP + 0x10]
000124f2(3): MOV RDX,RAX
000124f5(4): MOV qword ptr [RSP],RDI
000124f9(3): MOV RSI,R14
000124fc(5): CALL 0x0000d140
00012501(2): TEST EAX,EAX
00012503(4): MOV dword ptr [R13],EAX
00012507(6): JNZ 0x00012620
0001250d(4): MOV RAX,qword ptr [RBX + 0x48]
00012511(6): MOV EDX,dword ptr [0xa0 + RBX]
00012517(3): MOV RDI,RBX
0001251a(4): LEA RSI,[RAX + -0x1]
0001251e(5): CALL 0x0000dd30
00012523(7): MOV R8,qword ptr [0xb8 + RBX]
0001252a(4): MOV RDX,qword ptr [RSP]
0001252e(2): MOV ECX,EAX
00012530(3): MOV RSI,R15
00012533(3): MOV RDI,R13
00012536(3): ADD R8,RBP
00012539(5): MOV qword ptr [RSP + 0x8],R8
0001253e(5): CALL 0x0000d2a0
00012543(5): MOV R8,qword ptr [RSP + 0x8]
00012548(3): TEST R14,R14
0001254b(3): MOV RBP,RAX
0001254e(3): MOV qword ptr [R8],RAX
00012551(6): JZ 0x00012497
00012557(5): MOV RDI,qword ptr [RSP + 0x20]
0001255c(5): CALL 0x00001c60
00012561(5): JMP 0x00012497
00012570(4): MOVDQU XMM0,xmmword ptr [RAX]
00012574(3): MOV RDI,RBX
00012577(6): MOV EDX,dword ptr [0xa0 + RSI]
0001257d(5): LEA RSI,[R12 + -0x1]
00012582(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00012587(4): MOV RAX,qword ptr [RAX + 0x10]
0001258b(5): MOV qword ptr [RSP + 0x20],RAX
00012590(5): CALL 0x0000dd30
00012595(5): LEA RDX,[RSP + 0x10]
0001259a(2): MOV ECX,EAX
0001259c(3): MOV RSI,R15
0001259f(3): MOV RDI,R13
000125a2(5): CALL 0x0000d2a0
000125a7(3): MOV RBP,RAX
000125aa(3): MOV qword ptr [R14],RAX
000125ad(5): JMP 0x00012497
000125b8(3): MOV qword ptr [R14],RDX
000125bb(3): MOV RBP,RDX
000125be(5): JMP 0x00012497
000125c8(3): TEST RBP,RBP
000125cb(2): JZ 0x00012620
000125cd(4): LEA R14,[RBP + 0x10]
000125d1(4): LEA R15,[RBP + 0x18]
000125d5(3): MOV RCX,R12
000125d8(3): MOV RDI,RBX
000125db(3): MOV RDX,R15
000125de(3): MOV RSI,R14
000125e1(5): CALL 0x0000dbe0
000125e6(2): TEST EAX,EAX
000125e8(4): MOV dword ptr [R13],EAX
000125ec(2): JNZ 0x00012620
000125ee(4): TEST byte ptr [RBP + 0x68],0x40
000125f2(6): JZ 0x000124a5
000125f8(3): MOV RDX,R15
000125fb(3): MOV RSI,R14
000125fe(3): MOV RDI,RBX
00012601(5): CALL 0x00011b50
00012606(2): TEST EAX,EAX
00012608(4): MOV dword ptr [R13],EAX
0001260c(2): JNZ 0x00012620
0001260e(7): MOV RAX,qword ptr [0xb8 + RBX]
00012615(4): MOV RBP,qword ptr [RAX + R12*0x8]
00012619(5): JMP 0x000124a5
00012620(2): XOR EBP,EBP
00012622(5): JMP 0x000124a5
00012627(5): CALL 0x00001db0
0001262c(4): NOP dword ptr [RAX]
00012630(2): PUSH R15
00012632(2): PUSH R14
00012634(3): MOV R14,RDI
00012637(2): PUSH R13
00012639(2): PUSH R12
0001263b(3): MOV R13,RSI
0001263e(1): PUSH RBP
0001263f(1): PUSH RBX
00012640(4): SUB RSP,0x68
00012644(4): MOV R15,qword ptr [RSI + 0x18]
00012648(4): MOV RBX,qword ptr [RSI + 0x10]
0001264c(4): MOV qword ptr [RSP],RDI
00012650(5): MOV EDI,0x8
00012655(9): MOV qword ptr [RSP + 0x40],0x1
0001265e(9): MOV RAX,qword ptr FS:[0x28]
00012667(5): MOV qword ptr [RSP + 0x58],RAX
0001266c(2): XOR EAX,EAX
0001266e(9): MOV qword ptr [RSP + 0x48],0x1
00012677(5): CALL 0x00001f20
0001267c(3): TEST RAX,RAX
0001267f(5): MOV qword ptr [RSP + 0x50],RAX
00012684(6): JZ 0x00012964
0001268a(5): LEA RCX,[RSP + 0x40]
0001268f(3): MOV qword ptr [RAX],RBX
00012692(3): MOV RDX,R15
00012695(3): MOV RSI,R13
00012698(3): MOV RDI,R14
0001269b(5): MOV qword ptr [RSP + 0x10],RCX
000126a0(5): CALL 0x000140a0
000126a5(2): TEST EAX,EAX
000126a7(6): JNZ 0x00012935
000126ad(8): LEA RAX,[R15*0x8]
000126b5(3): TEST R15,R15
000126b8(8): MOV dword ptr [RSP + 0x2c],0x0
000126c0(5): MOV qword ptr [RSP + 0x8],RAX
000126c5(4): LEA RAX,[R13 + 0x30]
000126c9(5): MOV qword ptr [RSP + 0x38],RAX
000126ce(6): JLE 0x000128d7
000126d4(4): MOV RDI,qword ptr [R13]
000126d8(5): MOV RAX,qword ptr [RSP + 0x8]
000126dd(5): CMP qword ptr [RDI + RAX*0x1],0x0
000126e2(6): JZ 0x000128f8
000126e8(4): MOV RAX,qword ptr [RSP]
000126ec(8): MOV dword ptr [RSP + 0x2c],0x0
000126f4(4): MOV ECX,dword ptr [RSP + 0x2c]
000126f8(6): CMP dword ptr [0xe0 + RAX],ECX
000126fe(6): JL 0x00012911
00012704(4): MOV RBX,qword ptr [RSP]
00012708(5): MOV RDI,qword ptr [RSP + 0x8]
0001270d(4): SUB R15,0x1
00012711(9): MOV qword ptr [RSP + 0x48],0x0
0001271a(7): MOV RAX,qword ptr [0xb8 + RBX]
00012721(5): MOV R12,qword ptr [RAX + RDI*0x1 + -0x8]
00012726(3): TEST R12,R12
00012729(6): JZ 0x000128b0
0001272f(6): CMP qword ptr [R12 + 0x28],0x0
00012735(7): MOV R14,qword ptr [0x98 + RBX]
0001273c(6): JLE 0x000128b0
00012742(2): XOR EBX,EBX
00012744(5): JMP 0x000127eb
00012750(4): MOV RDI,qword ptr [RSP]
00012754(3): MOV RDX,R15
00012757(5): CALL 0x0000de20
0001275c(2): TEST AL,AL
0001275e(2): JZ 0x000127dc
00012760(4): MOV RAX,qword ptr [R13]
00012764(5): MOV RCX,qword ptr [RSP + 0x8]
00012769(4): MOV RAX,qword ptr [RAX + RCX*0x1]
0001276d(3): TEST RAX,RAX
00012770(2): JZ 0x000127dc
00012772(4): MOV RDX,qword ptr [R14 + 0x18]
00012776(4): MOV RDI,qword ptr [RAX + 0x10]
0001277a(4): LEA RSI,[RAX + 0x18]
0001277e(4): MOV RDX,qword ptr [RDX + RBP*0x8]
00012782(5): CALL 0x0000bf50
00012787(3): TEST RAX,RAX
0001278a(2): JZ 0x000127dc
0001278c(6): MOV R10D,0x1
00012792(5): CMP qword ptr [R13 + 0x28],0x0
00012797(2): JZ 0x000127c7
00012799(4): MOV RAX,qword ptr [R14 + 0x18]
0001279d(4): SUB RSP,0x8
000127a1(4): LEA RSI,[R13 + 0x28]
000127a5(4): LEA R8,[R10 + R15*0x1]
000127a9(3): MOV R9,RBP
000127ac(4): MOV RCX,qword ptr [RAX + RBP*0x8]
000127b0(2): PUSH R15
000127b2(5): MOV RDX,qword ptr [RSP + 0x48]
000127b7(5): MOV RDI,qword ptr [RSP + 0x10]
000127bc(5): CALL 0x0000c200
000127c1(2): TEST AL,AL
000127c3(1): POP RDX
000127c4(1): POP RCX
000127c5(2): JNZ 0x000127dc
000127c7(5): MOV RDI,qword ptr [RSP + 0x10]
000127cc(3): MOV RSI,RBP
000127cf(5): CALL 0x0000aa10
000127d4(2): TEST AL,AL
000127d6(6): JZ 0x00012930
000127dc(4): ADD RBX,0x1
000127e0(5): CMP RBX,qword ptr [R12 + 0x28]
000127e5(6): JGE 0x000128b0
000127eb(5): MOV RAX,qword ptr [R12 + 0x30]
000127f0(3): MOV RSI,qword ptr [R14]
000127f3(4): MOV RBP,qword ptr [RAX + RBX*0x8]
000127f7(3): MOV R9,RBP
000127fa(4): SHL R9,0x4
000127fe(3): ADD RSI,R9
00012801(4): TEST byte ptr [RSI + 0xa],0x10
00012805(6): JZ 0x00012750
0001280b(4): MOV RCX,qword ptr [RSP]
0001280f(4): MOV RAX,qword ptr [R13 + 0x18]
00012813(3): MOV R8,R15
00012816(3): MOV RDX,RBP
00012819(5): MOV qword ptr [RSP + 0x18],R9
0001281e(7): MOV R11,qword ptr [0x98 + RCX]
00012825(5): MOV qword ptr [RSP + 0x20],RAX
0001282a(3): MOV RDI,qword ptr [R11]
0001282d(7): LEA RSI,[0xd8 + R11]
00012834(5): MOV qword ptr [RSP + 0x30],R11
00012839(5): CALL 0x00010700
0001283e(3): MOVSXD R10,EAX
00012841(5): MOV R9,qword ptr [RSP + 0x18]
00012846(4): CMP R10D,0x0
0001284a(6): JLE 0x000128e0
00012850(3): MOVSXD RAX,R10D
00012853(3): ADD RAX,R15
00012856(5): CMP qword ptr [RSP + 0x20],RAX
0001285b(6): JL 0x00012792
00012861(4): MOV RDX,qword ptr [R13]
00012865(5): MOV R11,qword ptr [RSP + 0x30]
0001286a(4): MOV RAX,qword ptr [RDX + RAX*0x8]
0001286e(3): TEST RAX,RAX
00012871(2): JZ 0x000128e6
00012873(4): MOV RDX,qword ptr [R11 + 0x18]
00012877(4): MOV RDI,qword ptr [RAX + 0x10]
0001287b(4): LEA RSI,[RAX + 0x18]
0001287f(5): MOV qword ptr [RSP + 0x18],R9
00012884(4): MOV RDX,qword ptr [RDX + RBP*0x8]
00012888(5): CALL 0x0000bf50
0001288d(3): TEST RAX,RAX
00012890(6): JNZ 0x00012792
00012896(5): MOV R9,qword ptr [RSP + 0x18]
0001289b(3): MOV RSI,qword ptr [R14]
0001289e(3): ADD RSI,R9
000128a1(5): JMP 0x00012750
000128b0(5): MOV RCX,qword ptr [RSP + 0x10]
000128b5(4): MOV RDI,qword ptr [RSP]
000128b9(3): MOV RDX,R15
000128bc(3): MOV RSI,R13
000128bf(5): CALL 0x000140a0
000128c4(2): TEST EAX,EAX
000128c6(2): JNZ 0x00012935
000128c8(6): SUB qword ptr [RSP + 0x8],0x8
000128ce(3): TEST R15,R15
000128d1(6): JNZ 0x000126d4
000128d7(2): XOR EAX,EAX
000128d9(2): JMP 0x00012935
000128e0(6): JNZ 0x00012792
000128e6(3): MOV RSI,qword ptr [R14]
000128e9(3): ADD RSI,R9
000128ec(5): JMP 0x00012750
000128f8(4): MOV RAX,qword ptr [RSP]
000128fc(5): ADD dword ptr [RSP + 0x2c],0x1
00012901(4): MOV ECX,dword ptr [RSP + 0x2c]
00012905(6): CMP dword ptr [0xe0 + RAX],ECX
0001290b(6): JGE 0x00012704
00012911(5): MOV RDX,qword ptr [RSP + 0x8]
00012916(2): XOR ESI,ESI
00012918(5): CALL 0x00001e40
0001291d(5): MOV RDI,qword ptr [RSP + 0x50]
00012922(5): CALL 0x00001c60
00012927(2): XOR EAX,EAX
00012929(2): JMP 0x00012945
00012930(5): MOV EAX,0xc
00012935(5): MOV RDI,qword ptr [RSP + 0x50]
0001293a(3): MOV dword ptr [RSP],EAX
0001293d(5): CALL 0x00001c60
00012942(3): MOV EAX,dword ptr [RSP]
00012945(5): MOV RDX,qword ptr [RSP + 0x58]
0001294a(9): XOR RDX,qword ptr FS:[0x28]
00012953(2): JNZ 0x0001296b
00012955(4): ADD RSP,0x68
00012959(1): POP RBX
0001295a(1): POP RBP
0001295b(2): POP R12
0001295d(2): POP R13
0001295f(2): POP R14
00012961(2): POP R15
00012963(1): RET
00012964(5): MOV EAX,0xc
00012969(2): JMP 0x00012945
0001296b(5): CALL 0x00001db0
00012970(2): PUSH R15
00012972(2): PUSH R14
00012974(2): PUSH R13
00012976(2): PUSH R12
00012978(3): MOV R13,R9
0001297b(1): PUSH RBP
0001297c(1): PUSH RBX
0001297d(3): MOV RBP,RCX
00012980(5): MOV ECX,0x20
00012985(3): MOV R12,R8
00012988(7): SUB RSP,0x238
0001298f(3): MOV RBX,qword ptr [RDI]
00012992(8): MOV RAX,qword ptr [0x278 + RSP]
0001299a(5): MOV qword ptr [RSP + 0x48],RDI
0001299f(5): MOV qword ptr [RSP + 0x78],RSI
000129a4(3): MOV RSI,RDI
000129a7(8): LEA RDI,[0x120 + RSP]
000129af(8): MOV qword ptr [0x88 + RSP],RDX
000129b7(5): MOV qword ptr [RSP + 0x38],RBX
000129bc(8): MOV qword ptr [0xb8 + RSP],RAX
000129c4(4): MOV qword ptr [RSP],RDI
000129c8(9): MOV RAX,qword ptr FS:[0x28]
000129d1(8): MOV qword ptr [0x228 + RSP],RAX
000129d9(2): XOR EAX,EAX
000129db(3): STOSQ.REP RDI
000129de(4): MOV RDI,qword ptr [RSI + 0x20]
000129e2(8): MOV qword ptr [0x1b8 + RSP],RBX
000129ea(3): TEST RDI,RDI
000129ed(5): MOV qword ptr [RSP + 0x68],RDI
000129f2(2): JZ 0x00012a16
000129f4(4): MOVZX EDX,byte ptr [RSI + 0x38]
000129f8(3): TEST DL,0x8
000129fb(6): JZ 0x00012e90
00012a01(3): CMP RBP,R8
00012a04(6): JZ 0x00012e90
00012a0a(3): AND EDX,0x1
00012a0d(4): CMOVZ RAX,RDI
00012a11(5): MOV qword ptr [RSP + 0x68],RAX
00012a16(5): MOV RAX,qword ptr [RSP + 0x48]
00012a1b(12): MOV qword ptr [0x98 + RSP],0x0
00012a27(4): MOV RAX,qword ptr [RAX + 0x30]
00012a2b(8): CMP RAX,qword ptr [0x270 + RSP]
00012a33(2): JNC 0x00012a54
00012a35(8): MOV RCX,qword ptr [0x270 + RSP]
00012a3d(4): LEA RDX,[RCX + -0x1]
00012a41(3): SUB RDX,RAX
00012a44(8): SUB qword ptr [0x270 + RSP],RDX
00012a4c(8): MOV qword ptr [0x98 + RSP],RDX
00012a54(5): MOV RSI,qword ptr [RSP + 0x48]
00012a59(5): CMP qword ptr [RSI + 0x10],0x0
00012a5e(6): JZ 0x000138f0
00012a64(5): MOV RDI,qword ptr [RSP + 0x38]
00012a69(4): MOV RAX,qword ptr [RDI + 0x48]
00012a6d(3): TEST RAX,RAX
00012a70(6): JZ 0x000138f0
00012a76(4): MOV RDX,qword ptr [RDI + 0x50]
00012a7a(3): TEST RDX,RDX
00012a7d(6): JZ 0x000138f0
00012a83(4): MOV RCX,qword ptr [RDI + 0x58]
00012a87(3): TEST RCX,RCX
00012a8a(6): JZ 0x000138f0
00012a90(5): CMP qword ptr [RDI + 0x60],0x0
00012a95(6): JZ 0x000138f0
00012a9b(5): CMP qword ptr [RAX + 0x10],0x0
00012aa0(2): JNZ 0x00012ad8
00012aa2(5): CMP qword ptr [RDX + 0x10],0x0
00012aa7(2): JNZ 0x00012ad8
00012aa9(5): CMP qword ptr [RCX + 0x10],0x0
00012aae(2): JZ 0x00012ab6
00012ab0(4): CMP byte ptr [RSI + 0x38],0x0
00012ab4(2): JS 0x00012ad8
00012ab6(3): TEST RBP,RBP
00012ab9(2): JZ 0x00012acc
00012abb(3): TEST R12,R12
00012abe(8): MOV dword ptr [RSP + 0x5c],0x1
00012ac6(6): JNZ 0x000134e9
00012acc(3): XOR R12D,R12D
00012acf(2): XOR EBP,EBP
00012ad1(7): NOP dword ptr [RAX]
00012ad8(9): CMP qword ptr [0x270 + RSP],0x0
00012ae1(8): MOV dword ptr [RSP + 0x58],0x1
00012ae9(6): JZ 0x00012e70
00012aef(5): MOV R11,qword ptr [RSP + 0x38]
00012af4(5): MOV RAX,qword ptr [RSP + 0x48]
00012af9(8): MOV RDI,qword ptr [0x88 + RSP]
00012b01(4): MOV RSI,qword ptr [R11 + 0x10]
00012b05(4): MOV RBX,qword ptr [RAX + 0x28]
00012b09(7): MOV EDX,dword ptr [0xb4 + R11]
00012b10(4): MOV RAX,qword ptr [RAX + 0x18]
00012b14(8): MOV qword ptr [0x178 + RSP],RDI
00012b1c(8): MOV qword ptr [0x170 + RSP],RDI
00012b24(5): MOV qword ptr [RSP + 0x8],RSI
00012b29(4): LEA RSI,[RSI + 0x1]
00012b2d(8): MOV qword ptr [0xb0 + RSP],RBX
00012b35(3): MOVSXD RCX,EDX
00012b38(4): SHR RAX,0x16
00012b3c(8): MOV qword ptr [0x198 + RSP],RBX
00012b44(3): AND EAX,0x1
00012b47(3): CMP RSI,RCX
00012b4a(7): MOV dword ptr [0x1b0 + RSP],EDX
00012b51(4): CMOVL RSI,RCX
00012b55(4): LEA RCX,[RDI + 0x1]
00012b59(7): MOV byte ptr [0x1a8 + RSP],AL
00012b60(8): MOV qword ptr [0x188 + RSP],RDI
00012b68(8): MOV qword ptr [0x180 + RSP],RDI
00012b70(3): CMP RSI,RCX
00012b73(4): MOV RDI,qword ptr [RSP]
00012b77(4): CMOVG RSI,RCX
00012b7b(3): TEST RBX,RBX
00012b7e(5): MOV RCX,qword ptr [RSP + 0x78]
00012b83(3): SETNZ BL
00012b86(2): OR EAX,EBX
00012b88(7): MOV byte ptr [0x1ab + RSP],AL
00012b8f(8): MOVZX EAX,byte ptr [0xb0 + R11]
00012b97(8): MOV qword ptr [0x120 + RSP],RCX
00012b9f(2): MOV EDX,EAX
00012ba1(3): SHR AL,0x3
00012ba4(3): SHR DL,0x2
00012ba7(3): AND EAX,0x1
00012baa(3): AND EDX,0x1
00012bad(7): MOV byte ptr [0x1aa + RSP],AL
00012bb4(7): MOV byte ptr [0x1a9 + RSP],DL
00012bbb(5): CALL 0x0000a900
00012bc0(2): TEST EAX,EAX
00012bc2(4): MOV dword ptr [RSP + 0x5c],EAX
00012bc6(6): JNZ 0x000134c0
00012bcc(5): MOV RDI,qword ptr [RSP + 0x38]
00012bd1(7): LEA RAX,[0xb8 + RDI]
00012bd8(8): MOV qword ptr [0x1a0 + RSP],RAX
00012be0(7): MOVZX EAX,byte ptr [0xb0 + RDI]
00012be7(4): MOV byte ptr [RSP + 0x8],AL
00012beb(3): SHR AL,0x4
00012bee(3): AND EAX,0x1
00012bf1(8): CMP byte ptr [0x1ab + RSP],0x0
00012bf9(7): MOV byte ptr [0x1ae + RSP],AL
00012c00(2): JNZ 0x00012c25
00012c02(5): MOV RSI,qword ptr [RSP + 0x38]
00012c07(5): MOV RAX,qword ptr [RSP + 0x78]
00012c0c(7): CMP dword ptr [0xb4 + RSI],0x1
00012c13(8): MOV qword ptr [0x128 + RSP],RAX
00012c1b(8): MOV RAX,qword ptr [0x88 + RSP]
00012c23(2): JLE 0x00012c27
00012c25(2): XOR EAX,EAX
00012c27(8): MOV qword ptr [0x150 + RSP],RAX
00012c2f(8): MOV qword ptr [0x158 + RSP],RAX
00012c37(5): MOV RAX,qword ptr [RSP + 0x48]
00012c3c(8): MOV qword ptr [0x188 + RSP],R13
00012c44(8): MOV qword ptr [0x180 + RSP],R13
00012c4c(4): MOVZX EAX,byte ptr [RAX + 0x38]
00012c50(4): MOV byte ptr [RSP + 0x8],AL
00012c54(3): SHR AL,0x7
00012c57(7): MOV byte ptr [0x1ad + RSP],AL
00012c5e(5): MOV RAX,qword ptr [RSP + 0x38]
00012c63(7): MOV R14,qword ptr [0x98 + RAX]
00012c6a(7): MOV EAX,dword ptr [0x280 + RSP]
00012c71(12): MOV qword ptr [0x1c8 + RSP],-0x1
00012c7d(4): LEA R13,[R14 + R14*0x1]
00012c81(7): MOV dword ptr [0x1c0 + RSP],EAX
00012c88(3): TEST R13,R13
00012c8b(2): JLE 0x00012cdf
00012c8d(10): MOV RAX,0x666666666666666
00012c97(3): CMP R13,RAX
00012c9a(6): JG 0x000139e0
00012ca0(5): LEA RDI,[R13 + R14*0x8]
00012ca5(4): SHL RDI,0x3
00012ca9(5): CALL 0x00001f20
00012cae(3): MOV RDI,R14
00012cb1(3): MOV R15,RAX
00012cb4(8): MOV qword ptr [0x1f8 + RSP],RAX
00012cbc(4): SHL RDI,0x4
00012cc0(5): CALL 0x00001f20
00012cc5(3): TEST RAX,RAX
00012cc8(8): MOV qword ptr [0x218 + RSP],RAX
00012cd0(6): JZ 0x000139e0
00012cd6(3): TEST R15,R15
00012cd9(6): JZ 0x000139e0
00012cdf(9): CMP qword ptr [0x270 + RSP],0x1
00012ce8(8): MOV qword ptr [0x1f0 + RSP],R13
00012cf0(11): MOV dword ptr [0x200 + RSP],0x1
00012cfb(8): MOV qword ptr [0x210 + RSP],R13
00012d03(6): JBE 0x00013e28
00012d09(8): MOV RAX,qword ptr [0x160 + RSP]
00012d11(10): MOV RDX,0x1ffffffffffffffe
00012d1b(3): CMP RAX,RDX
00012d1e(6): JA 0x000139e0
00012d24(8): LEA RDI,[0x8 + RAX*0x8]
00012d2c(5): CALL 0x00001f20
00012d31(3): TEST RAX,RAX
00012d34(3): MOV RDI,RAX
00012d37(8): MOV qword ptr [0x1d8 + RSP],RAX
00012d3f(6): JZ 0x00013a30
00012d45(7): MOV EAX,dword ptr [0x280 + RSP]
00012d4c(8): MOV qword ptr [0xd8 + RSP],RBP
00012d54(3): AND EAX,0x1
00012d57(3): CMP EAX,0x1
00012d5a(2): SBB EAX,EAX
00012d5c(3): AND EAX,0x2
00012d5f(3): ADD EAX,0x4
00012d62(7): MOV dword ptr [0x190 + RSP],EAX
00012d69(2): XOR EAX,EAX
00012d6b(3): CMP RBP,R12
00012d6e(3): SETLE AL
00012d71(4): LEA EAX,[RAX + RAX*0x1 + -0x1]
00012d75(7): MOV dword ptr [0xac + RSP],EAX
00012d7c(3): MOV RAX,R12
00012d7f(4): CMOVLE RAX,RBP
00012d83(8): MOV qword ptr [0x90 + RSP],RAX
00012d8b(3): MOV RAX,R12
00012d8e(4): CMOVGE RAX,RBP
00012d92(6): CMP qword ptr [RSP + 0x68],0x0
00012d98(5): MOV qword ptr [RSP + 0x70],RAX
00012d9d(5): MOV RAX,qword ptr [RSP + 0x38]
00012da2(6): MOV ESI,dword ptr [0xb4 + RAX]
00012da8(5): MOV EAX,0x8
00012dad(7): MOV dword ptr [0xc8 + RSP],ESI
00012db4(2): JZ 0x00012def
00012db6(3): CMP ESI,0x1
00012db9(5): MOV ECX,0x4
00012dbe(2): JZ 0x00012dde
00012dc0(5): MOV RAX,qword ptr [RSP + 0x48]
00012dc5(4): TEST byte ptr [RAX + 0x1a],0x40
00012dc9(6): JNZ 0x00013b4e
00012dcf(9): CMP qword ptr [0xb0 + RSP],0x0
00012dd8(6): JNZ 0x00013b4e
00012dde(2): XOR EDX,EDX
00012de0(3): CMP RBP,R12
00012de3(3): MOVZX EAX,BL
00012de6(3): SETLE DL
00012de9(2): OR EAX,ECX
00012deb(2): ADD EDX,EDX
00012ded(2): OR EAX,EDX
00012def(5): CMP RBP,qword ptr [RSP + 0x70]
00012df4(3): SETG CL
00012df7(8): CMP RBP,qword ptr [0x90 + RSP]
00012dff(3): SETL DL
00012e02(2): OR CL,DL
00012e04(6): JNZ 0x000138d9
00012e0a(8): LEA RCX,[0xd8 + RSP]
00012e12(3): CMP RBP,R12
00012e15(5): MOV EDX,0x0
00012e1a(4): CMOVLE RDX,RCX
00012e1e(3): TEST RDX,RDX
00012e21(8): MOV qword ptr [0xc0 + RSP],RDX
00012e29(8): SETNZ byte ptr [0xcf + RSP]
00012e31(3): SUB EAX,0x4
00012e34(7): MOV dword ptr [0xa8 + RSP],EAX
00012e3b(8): LEA RAX,[0xd0 + RSP]
00012e43(5): MOV qword ptr [RSP + 0x28],RAX
00012e48(7): MOV EAX,dword ptr [0xa8 + RSP]
00012e4f(3): CMP EAX,0x4
00012e52(6): JA 0x00013a3d
00012e58(7): LEA RCX,[0x1c820]
00012e5f(4): MOVSXD RAX,dword ptr [RCX + RAX*0x4]
00012e63(3): ADD RAX,RCX
00012e66(2): JMP RAX
00012e70(5): MOV RAX,qword ptr [RSP + 0x38]
00012e75(8): CMP qword ptr [0x98 + RAX],0x0
00012e7d(3): SETNZ AL
00012e80(3): MOVZX EAX,AL
00012e83(4): MOV dword ptr [RSP + 0x58],EAX
00012e87(5): JMP 0x00012aef
00012e90(9): MOV qword ptr [RSP + 0x68],0x0
00012e99(5): JMP 0x00012a16
00012e9e(5): CMP qword ptr [RSP + 0x70],RBP
00012ea3(2): JLE 0x00012eff
00012ea5(5): MOV RAX,qword ptr [RSP + 0x78]
00012eaa(5): MOV RDI,qword ptr [RSP + 0x68]
00012eaf(4): MOVZX EDX,byte ptr [RAX + RBP*0x1]
00012eb3(4): LEA RAX,[RBP + 0x1]
00012eb7(4): CMP byte ptr [RDI + RDX*0x1],0x0
00012ebb(6): JNZ 0x00012f48
00012ec1(5): MOV RSI,qword ptr [RSP + 0x68]
00012ec6(5): MOV RCX,qword ptr [RSP + 0x70]
00012ecb(5): MOV RDI,qword ptr [RSP + 0x78]
00012ed0(2): JMP 0x00012eea
00012ed8(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
00012edc(4): LEA RAX,[RAX + 0x1]
00012ee0(4): CMP byte ptr [RSI + RDX*0x1],0x0
00012ee4(6): JNZ 0x00014081
00012eea(3): CMP RCX,RAX
00012eed(3): MOV RBP,RAX
00012ef0(2): JNZ 0x00012ed8
00012ef2(5): MOV RAX,qword ptr [RSP + 0x70]
00012ef7(8): MOV qword ptr [0xd8 + RSP],RAX
00012eff(5): CMP qword ptr [RSP + 0x70],RBP
00012f04(2): JNZ 0x00012f48
00012f06(2): XOR EAX,EAX
00012f08(5): MOV RSI,qword ptr [RSP + 0x70]
00012f0d(8): CMP qword ptr [0x88 + RSP],RSI
00012f15(2): JLE 0x00012f20
00012f17(5): MOV RAX,qword ptr [RSP + 0x78]
00012f1c(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
00012f20(8): MOV RSI,qword ptr [0xb0 + RSP]
00012f28(3): TEST RSI,RSI
00012f2b(2): JZ 0x00012f31
00012f2d(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
00012f31(5): MOV RDI,qword ptr [RSP + 0x68]
00012f36(4): CMP byte ptr [RDI + RAX*0x1],0x0
00012f3a(6): JZ 0x000138d9
00012f40(5): MOV RBP,qword ptr [RSP + 0x70]
00012f45(3): NOP dword ptr [RAX]
00012f48(7): MOV EDX,dword ptr [0x280 + RSP]
00012f4f(4): MOV RDI,qword ptr [RSP]
00012f53(3): MOV RSI,RBP
00012f56(5): CALL 0x0000e000
00012f5b(2): TEST EAX,EAX
00012f5d(4): MOV dword ptr [RSP + 0x5c],EAX
00012f61(6): JNZ 0x000134c0
00012f67(8): CMP dword ptr [0xc8 + RSP],0x1
00012f6f(2): JZ 0x00012f8d
00012f71(9): CMP qword ptr [0x150 + RSP],0x0
00012f7a(2): JZ 0x00012f8d
00012f7c(8): MOV RAX,qword ptr [0x130 + RSP]
00012f84(3): CMP dword ptr [RAX],-0x1
00012f87(6): JZ 0x000138b1
00012f8d(8): MOV RBX,qword ptr [0x1b8 + RSP]
00012f95(5): MOVZX EAX,byte ptr [RSP + 0x58]
00012f9a(11): MOV dword ptr [0x200 + RSP],0x0
00012fa5(12): MOV qword ptr [0x1e8 + RSP],0x0
00012fb1(12): MOV qword ptr [0x1e0 + RSP],0x0
00012fbd(11): MOV dword ptr [0xd0 + RSP],0x0
00012fc8(4): MOV R14,qword ptr [RBX + 0x48]
00012fcc(3): AND EAX,0x1
00012fcf(7): MOV byte ptr [0xce + RSP],AL
00012fd6(8): MOV RAX,qword ptr [0x168 + RSP]
00012fde(5): CMP byte ptr [R14 + 0x68],0x0
00012fe3(5): MOV qword ptr [RSP + 0x8],RAX
00012fe8(6): JS 0x00013960
00012fee(8): MOV RAX,qword ptr [0x1d8 + RSP]
00012ff6(3): TEST RAX,RAX
00012ff9(2): JZ 0x00013012
00012ffb(8): CMP qword ptr [0x98 + RBX],0x0
00013003(5): MOV RDI,qword ptr [RSP + 0x8]
00013008(4): MOV qword ptr [RAX + RDI*0x8],R14
0001300c(6): JNZ 0x00013efb
00013012(8): MOVZX EAX,byte ptr [0xcf + RSP]
0001301a(4): MOV byte ptr [RSP + 0x18],AL
0001301e(5): MOVZX EAX,byte ptr [R14 + 0x68]
00013023(2): TEST AL,0x10
00013025(9): MOV qword ptr [RSP + 0x20],-0x1
0001302e(9): MOV qword ptr [RSP + 0x30],0x0
00013037(6): JNZ 0x00013ec0
0001303d(8): MOV RAX,qword ptr [0xc0 + RSP]
00013045(8): MOV R8,qword ptr [0x168 + RSP]
0001304d(5): MOV qword ptr [RSP + 0x50],RAX
00013052(8): LEA RAX,[0xe0 + RSP]
0001305a(5): MOV qword ptr [RSP + 0x60],RAX
0001305f(8): LEA RAX,[0xd4 + RSP]
00013067(8): MOV qword ptr [0x80 + RSP],RAX
0001306f(2): JMP 0x000130cc
00013078(3): CMP R14,R13
0001307b(8): MOV R8,qword ptr [0x168 + RSP]
00013083(3): SETZ AL
00013086(4): AND byte ptr [RSP + 0x18],AL
0001308a(5): MOVZX EAX,byte ptr [R13 + 0x68]
0001308f(6): CMOVZ RBX,qword ptr [RSP + 0x8]
00013095(2): TEST AL,0x10
00013097(5): MOV qword ptr [RSP + 0x8],RBX
0001309c(2): JZ 0x000130c9
0001309e(2): TEST AL,AL
000130a0(6): JS 0x00013560
000130a6(4): MOV EAX,dword ptr [RSP + 0x58]
000130aa(5): MOV qword ptr [RSP + 0x20],R8
000130af(2): TEST EAX,EAX
000130b1(6): JZ 0x000131d6
000130b7(9): MOV qword ptr [RSP + 0x30],0x1
000130c0(9): MOV qword ptr [RSP + 0x50],0x0
000130c9(3): MOV R14,R13
000130cc(8): CMP qword ptr [0x188 + RSP],R8
000130d4(6): JLE 0x000131c4
000130da(8): MOV RAX,qword ptr [0x160 + RSP]
000130e2(4): LEA RBX,[R8 + 0x1]
000130e6(3): CMP RBX,RAX
000130e9(6): JGE 0x00013590
000130ef(8): MOV RAX,qword ptr [0x150 + RSP]
000130f7(3): CMP RBX,RAX
000130fa(6): JGE 0x00013880
00013100(5): TEST byte ptr [R14 + 0x68],0x20
00013105(6): JNZ 0x000135d0
0001310b(4): LEA RAX,[R8 + 0x1]
0001310f(8): MOV qword ptr [0x168 + RSP],RAX
00013117(8): MOV RAX,qword ptr [0x128 + RSP]
0001311f(5): MOVZX R13D,byte ptr [RAX + R8*0x1]
00013124(4): MOV RAX,qword ptr [R14 + 0x58]
00013128(3): TEST RAX,RAX
0001312b(6): JZ 0x00013840
00013131(4): MOV R13,qword ptr [RAX + R13*0x8]
00013135(9): CMP qword ptr [0x1d8 + RSP],0x0
0001313e(2): JZ 0x00013154
00013140(4): MOV RSI,qword ptr [RSP]
00013144(5): MOV RDI,qword ptr [RSP + 0x28]
00013149(3): MOV RDX,R13
0001314c(5): CALL 0x00012440
00013151(3): MOV R13,RAX
00013154(3): TEST R13,R13
00013157(6): JNZ 0x00013078
0001315d(7): MOV ECX,dword ptr [0xd0 + RSP]
00013164(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001316c(2): TEST ECX,ECX
0001316e(6): JNZ 0x00013a30
00013174(3): TEST RDI,RDI
00013177(2): JZ 0x000131c4
00013179(8): MOVZX EAX,byte ptr [0xce + RSP]
00013181(3): XOR EAX,0x1
00013184(4): TEST byte ptr [RSP + 0x30],AL
00013188(2): JNZ 0x000131c4
0001318a(8): MOV RSI,qword ptr [0x1e0 + RSP]
00013192(8): MOV RAX,qword ptr [0x168 + RSP]
0001319a(2): XOR ECX,ECX
0001319c(2): JMP 0x000131b3
000131a0(5): CMP qword ptr [RDI + RDX*0x8],0x0
000131a5(3): MOV RAX,RDX
000131a8(5): MOV ECX,0x1
000131ad(6): JNZ 0x00013520
000131b3(4): LEA RDX,[RAX + 0x1]
000131b7(3): CMP RSI,RDX
000131ba(2): JGE 0x000131a0
000131bc(2): TEST CL,CL
000131be(6): JNZ 0x0001408e
000131c4(5): MOV RAX,qword ptr [RSP + 0x50]
000131c9(3): TEST RAX,RAX
000131cc(2): JZ 0x000131d6
000131ce(5): MOV RDI,qword ptr [RSP + 0x8]
000131d3(3): ADD qword ptr [RAX],RDI
000131d6(5): MOV RAX,qword ptr [RSP + 0x20]
000131db(4): CMP RAX,-0x1
000131df(6): JZ 0x000138a0
000131e5(4): CMP RAX,-0x2
000131e9(6): JZ 0x000139e0
000131ef(5): MOV RAX,qword ptr [RSP + 0x20]
000131f4(8): MOV qword ptr [0x1c8 + RSP],RAX
000131fc(5): MOV RAX,qword ptr [RSP + 0x48]
00013201(4): TEST byte ptr [RAX + 0x38],0x10
00013205(6): JNZ 0x000139c0
0001320b(9): CMP qword ptr [0x270 + RSP],0x1
00013214(6): JBE 0x00013b0c
0001321a(5): MOV RCX,qword ptr [RSP + 0x20]
0001321f(8): MOV RBX,qword ptr [0x1d8 + RSP]
00013227(4): MOV RDI,qword ptr [RSP]
0001322b(4): MOV RAX,qword ptr [RBX + RCX*0x8]
0001322f(4): MOV RSI,qword ptr [RAX + 0x10]
00013233(4): LEA RDX,[RAX + 0x18]
00013237(5): CALL 0x0000df30
0001323c(3): MOV R13,RAX
0001323f(8): MOV qword ptr [0x1d0 + RSP],RAX
00013247(5): MOV RAX,qword ptr [RSP + 0x38]
0001324c(7): TEST byte ptr [0xb0 + RAX],0x1
00013253(2): JNZ 0x00013270
00013255(5): MOV RAX,qword ptr [RSP + 0x38]
0001325a(8): CMP qword ptr [0x98 + RAX],0x0
00013262(6): JZ 0x00013bfc
00013268(8): MOV R13,qword ptr [0x1d0 + RSP]
00013270(10): MOV RSI,0x1ffffffffffffffe
0001327a(5): CMP qword ptr [RSP + 0x20],RSI
0001327f(8): MOV R15,qword ptr [0x1b8 + RSP]
00013287(6): JA 0x00013eeb
0001328d(5): MOV RAX,qword ptr [RSP + 0x20]
00013292(4): ADD RAX,0x1
00013296(8): LEA RBX,[RAX*0x8]
0001329e(5): MOV qword ptr [RSP + 0x8],RAX
000132a3(3): MOV RDI,RBX
000132a6(5): CALL 0x00001f20
000132ab(3): TEST RAX,RAX
000132ae(3): MOV R12,RAX
000132b1(6): JZ 0x000139e0
000132b7(8): CMP qword ptr [0x98 + R15],0x0
000132bf(6): JZ 0x00013b55
000132c5(3): MOV RDI,RBX
000132c8(5): CALL 0x00001f20
000132cd(3): TEST RAX,RAX
000132d0(3): MOV RBP,RAX
000132d3(6): JZ 0x000139d8
000132d9(5): MOV R14,qword ptr [RSP + 0x20]
000132de(8): LEA RBX,[0xe0 + RSP]
000132e6(5): MOV qword ptr [RSP + 0x10],R15
000132eb(5): MOV qword ptr [RSP + 0x18],RAX
000132f0(5): MOV RAX,qword ptr [RSP + 0x8]
000132f5(2): XOR ESI,ESI
000132f7(3): MOV RDI,RBP
000132fa(8): LEA RDX,[RAX*0x8]
00013302(5): CALL 0x00001e40
00013307(4): PXOR XMM0,XMM0
0001330b(8): MOV qword ptr [0xe0 + RSP],R12
00013313(8): MOV qword ptr [0xe8 + RSP],RBP
0001331b(8): MOV qword ptr [0xf0 + RSP],R13
00013323(3): MOV RSI,RBX
00013326(8): MOV qword ptr [0xf8 + RSP],R14
0001332e(4): MOV RDI,qword ptr [RSP]
00013332(4): MOVAPS xmmword ptr [RBX + 0x20],XMM0
00013336(8): MOV qword ptr [RBX + 0x30],0x0
0001333e(5): CALL 0x00012630
00013343(8): MOV RDI,qword ptr [0x110 + RSP]
0001334b(3): MOV R15D,EAX
0001334e(5): CALL 0x00001c60
00013353(3): TEST R15D,R15D
00013356(6): JNZ 0x00013f74
0001335c(5): CMP qword ptr [R12],0x0
00013361(6): JNZ 0x00013fd3
00013367(5): CMP qword ptr [RBP],0x0
0001336c(6): JNZ 0x00013fd3
00013372(8): MOV RDX,qword ptr [0x1d8 + RSP]
0001337a(6): NOP word ptr [RAX + RAX*0x1]
00013380(4): SUB R14,0x1
00013384(4): CMP R14,-0x1
00013388(6): JZ 0x00013e4b
0001338e(4): MOV RAX,qword ptr [RDX + R14*0x8]
00013392(3): TEST RAX,RAX
00013395(2): JZ 0x00013380
00013397(4): TEST byte ptr [RAX + 0x68],0x10
0001339b(2): JZ 0x00013380
0001339d(4): MOV RSI,qword ptr [RAX + 0x10]
000133a1(4): MOV RDI,qword ptr [RSP]
000133a5(4): LEA RDX,[RAX + 0x18]
000133a9(3): MOV RCX,R14
000133ac(5): CALL 0x0000df30
000133b1(3): MOV R13,RAX
000133b4(4): LEA RAX,[R14 + 0x1]
000133b8(5): MOV qword ptr [RSP + 0x8],RAX
000133bd(5): JMP 0x000132f0
000133c2(5): CMP qword ptr [RSP + 0x70],RBP
000133c7(6): JLE 0x00012eff
000133cd(5): MOV RAX,qword ptr [RSP + 0x78]
000133d2(8): MOV RDI,qword ptr [0xb0 + RSP]
000133da(5): MOV RSI,qword ptr [RSP + 0x68]
000133df(4): MOVZX EAX,byte ptr [RAX + RBP*0x1]
000133e3(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
000133e7(4): LEA RAX,[RBP + 0x1]
000133eb(4): CMP byte ptr [RSI + RDX*0x1],0x0
000133ef(6): JNZ 0x00012f48
000133f5(5): MOV RSI,qword ptr [RSP + 0x68]
000133fa(8): MOV RDI,qword ptr [0xb0 + RSP]
00013402(5): MOV RCX,qword ptr [RSP + 0x70]
00013407(5): MOV R8,qword ptr [RSP + 0x78]
0001340c(2): JMP 0x00013427
00013410(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
00013415(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
00013419(4): LEA RAX,[RBP + 0x1]
0001341d(4): CMP byte ptr [RSI + RDX*0x1],0x0
00013421(6): JNZ 0x00014081
00013427(3): CMP RCX,RAX
0001342a(3): MOV RBP,RAX
0001342d(2): JNZ 0x00013410
0001342f(5): JMP 0x00012ef2
00013434(8): CMP qword ptr [0x90 + RSP],RBP
0001343c(6): JG 0x000138d9
00013442(2): XOR ECX,ECX
00013444(3): MOV RAX,RBP
00013447(5): MOV RDI,qword ptr [RSP + 0x68]
0001344c(8): MOV RSI,qword ptr [0xb0 + RSP]
00013454(8): MOV R9,qword ptr [0x90 + RSP]
0001345c(5): MOV R10,qword ptr [RSP + 0x78]
00013461(8): MOV R8,qword ptr [0x88 + RSP]
00013469(2): JMP 0x00013482
00013470(4): SUB RAX,0x1
00013474(5): MOV ECX,0x1
00013479(3): CMP RAX,R9
0001347c(6): JL 0x00013e60
00013482(2): XOR EDX,EDX
00013484(3): CMP R8,RAX
00013487(2): JLE 0x0001348e
00013489(5): MOVZX EDX,byte ptr [R10 + RAX*0x1]
0001348e(3): TEST RSI,RSI
00013491(2): JZ 0x00013497
00013493(4): MOVZX EDX,byte ptr [RSI + RDX*0x1]
00013497(4): CMP byte ptr [RDI + RDX*0x1],0x0
0001349b(2): JZ 0x00013470
0001349d(2): TEST CL,CL
0001349f(6): JZ 0x00012f48
000134a5(8): MOV qword ptr [0xd8 + RSP],RAX
000134ad(3): MOV RBP,RAX
000134b0(5): JMP 0x00012f48
000134b8(4): MOV dword ptr [RSP + 0x5c],EAX
000134bc(4): NOP dword ptr [RAX]
000134c0(8): MOV RDI,qword ptr [0x1d8 + RSP]
000134c8(5): CALL 0x00001c60
000134cd(5): MOV RAX,qword ptr [RSP + 0x38]
000134d2(8): CMP qword ptr [0x98 + RAX],0x0
000134da(6): JNZ 0x00013e00
000134e0(4): MOV RDI,qword ptr [RSP]
000134e4(5): CALL 0x0000bc40
000134e9(8): MOV RSI,qword ptr [0x228 + RSP]
000134f1(9): XOR RSI,qword ptr FS:[0x28]
000134fa(4): MOV EAX,dword ptr [RSP + 0x5c]
000134fe(6): JNZ 0x0001409b
00013504(7): ADD RSP,0x238
0001350b(1): POP RBX
0001350c(1): POP RBP
0001350d(2): POP R12
0001350f(2): POP R13
00013511(2): POP R14
00013513(2): POP R15
00013515(1): RET
00013520(4): MOV RSI,qword ptr [RSP]
00013524(5): MOV RDI,qword ptr [RSP + 0x28]
00013529(8): MOV qword ptr [0x168 + RSP],RDX
00013531(2): XOR EDX,EDX
00013533(5): CALL 0x00012440
00013538(7): MOV EDX,dword ptr [0xd0 + RSP]
0001353f(2): TEST EDX,EDX
00013541(6): JNZ 0x00013e7d
00013547(3): TEST RAX,RAX
0001354a(6): JNZ 0x00013e90
00013550(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013558(5): JMP 0x0001318a
00013560(4): MOV RSI,qword ptr [R13 + 0x10]
00013564(4): MOV RDI,qword ptr [RSP]
00013568(4): LEA RDX,[R13 + 0x18]
0001356c(3): MOV RCX,R8
0001356f(5): MOV qword ptr [RSP + 0x10],R8
00013574(5): CALL 0x0000df30
00013579(3): TEST RAX,RAX
0001357c(5): MOV R8,qword ptr [RSP + 0x10]
00013581(6): JZ 0x000130c9
00013587(5): JMP 0x000130a6
00013590(8): CMP RAX,qword ptr [0x178 + RSP]
00013598(6): JGE 0x000130ef
0001359e(4): MOV RDI,qword ptr [RSP]
000135a2(3): LEA ESI,[RBX + 0x1]
000135a5(5): CALL 0x0000b490
000135aa(2): TEST EAX,EAX
000135ac(7): MOV dword ptr [0xd0 + RSP],EAX
000135b3(6): JNZ 0x00013e98
000135b9(5): TEST byte ptr [R14 + 0x68],0x20
000135be(8): MOV R8,qword ptr [0x168 + RSP]
000135c6(6): JZ 0x0001310b
000135cc(4): NOP dword ptr [RAX]
000135d0(5): CMP qword ptr [R14 + 0x10],0x0
000135d5(8): MOV R13,qword ptr [0x1b8 + RSP]
000135dd(6): JLE 0x0001390b
000135e3(7): LEA RAX,[0xd8 + R13]
000135ea(3): XOR R12D,R12D
000135ed(8): MOV qword ptr [0xa0 + RSP],RBX
000135f5(3): MOV RBX,R12
000135f8(3): MOV R12,R8
000135fb(5): MOV qword ptr [RSP + 0x40],RAX
00013600(5): JMP 0x00013758
00013608(2): TEST AL,0x1
0001360a(6): JZ 0x0001374a
00013610(3): AND ECX,0x8
00013613(6): JNZ 0x0001374a
00013619(3): TEST DL,0x20
0001361c(2): JZ 0x00013626
0001361e(2): TEST AL,0x2
00013620(6): JZ 0x0001374a
00013626(6): AND EDX,0x80
0001362c(2): JZ 0x00013640
0001362e(2): TEST AL,0x8
00013630(6): JZ 0x0001374a
00013636(10): NOP word ptr CS:[RAX + RAX*0x1]
00013640(4): MOV RCX,qword ptr [RSP]
00013644(5): MOV RSI,qword ptr [RSP + 0x40]
00013649(3): MOV R8,R12
0001364c(3): MOV RDX,R15
0001364f(3): MOV RDI,RBP
00013652(5): CALL 0x00010700
00013657(2): TEST EAX,EAX
00013659(6): JZ 0x00013742
0001365f(3): MOVSXD RBP,EAX
00013662(8): ADD RBP,qword ptr [0x168 + RSP]
0001366a(7): CMP dword ptr [0x200 + RSP],EAX
00013671(8): CMOVGE EAX,dword ptr [0x200 + RSP]
00013679(4): MOV RDI,qword ptr [RSP]
0001367d(3): MOV RSI,RBP
00013680(7): MOV dword ptr [0x200 + RSP],EAX
00013687(5): CALL 0x0000b5e0
0001368c(2): TEST EAX,EAX
0001368e(7): MOV dword ptr [0xd4 + RSP],EAX
00013695(6): JNZ 0x00013930
0001369b(4): MOV RAX,qword ptr [R13 + 0x18]
0001369f(8): LEA R12,[RBP*0x8]
000136a7(4): MOV RAX,qword ptr [RAX + R15*0x8]
000136ab(8): MOV R15,qword ptr [0x1d8 + RSP]
000136b3(4): LEA RDX,[RAX + RAX*0x2]
000136b7(4): MOV RAX,qword ptr [R13 + 0x30]
000136bb(3): ADD R15,R12
000136be(4): LEA RDX,[RAX + RDX*0x8]
000136c2(3): MOV RAX,qword ptr [R15]
000136c5(3): TEST RAX,RAX
000136c8(6): JZ 0x000137c8
000136ce(4): MOV RSI,qword ptr [RAX + 0x50]
000136d2(5): MOV RDI,qword ptr [RSP + 0x60]
000136d7(5): CALL 0x0000d140
000136dc(2): TEST EAX,EAX
000136de(7): MOV dword ptr [0xd4 + RSP],EAX
000136e5(6): JNZ 0x00013930
000136eb(7): MOV EDX,dword ptr [0x1c0 + RSP]
000136f2(4): MOV RDI,qword ptr [RSP]
000136f6(4): LEA RSI,[RBP + -0x1]
000136fa(5): CALL 0x0000dd30
000136ff(5): MOV RDX,qword ptr [RSP + 0x60]
00013704(8): MOV RDI,qword ptr [0x80 + RSP]
0001370c(2): MOV ECX,EAX
0001370e(8): ADD R12,qword ptr [0x1d8 + RSP]
00013716(3): MOV RSI,R13
00013719(5): CALL 0x0000d2a0
0001371e(8): MOV RDI,qword ptr [0xf0 + RSP]
00013726(4): MOV qword ptr [R12],RAX
0001372a(5): CALL 0x00001c60
0001372f(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013737(5): CMP qword ptr [RDI + RBP*0x8],0x0
0001373c(6): JZ 0x00013821
00013742(8): MOV R12,qword ptr [0x168 + RSP]
0001374a(4): ADD RBX,0x1
0001374e(4): CMP RBX,qword ptr [R14 + 0x10]
00013752(6): JGE 0x00013900
00013758(4): MOV RAX,qword ptr [R14 + 0x18]
0001375c(4): MOV RBP,qword ptr [R13]
00013760(4): MOV R15,qword ptr [RAX + RBX*0x8]
00013764(3): MOV RAX,R15
00013767(4): SHL RAX,0x4
0001376b(3): ADD RAX,RBP
0001376e(4): TEST byte ptr [RAX + 0xa],0x10
00013772(2): JZ 0x0001374a
00013774(3): MOV ECX,dword ptr [RAX + 0x8]
00013777(6): TEST ECX,0x3ff00
0001377d(4): MOV dword ptr [RSP + 0x10],ECX
00013781(6): JZ 0x00013640
00013787(7): MOV EDX,dword ptr [0x1c0 + RSP]
0001378e(4): MOV RDI,qword ptr [RSP]
00013792(3): MOV RSI,R12
00013795(5): CALL 0x0000dd30
0001379a(4): MOV ECX,dword ptr [RSP + 0x10]
0001379e(3): SHR ECX,0x8
000137a1(2): MOV EDX,ECX
000137a3(5): AND DX,0x3ff
000137a8(3): TEST CL,0x4
000137ab(6): JNZ 0x00013608
000137b1(3): AND ECX,0x8
000137b4(6): JZ 0x00013619
000137ba(2): TEST AL,0x1
000137bc(6): JZ 0x00013619
000137c2(2): JMP 0x0001374a
000137c8(4): MOVDQU XMM0,xmmword ptr [RDX]
000137cc(4): LEA RSI,[RBP + -0x1]
000137d0(4): MOV RDI,qword ptr [RSP]
000137d4(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
000137dc(4): MOV RAX,qword ptr [RDX + 0x10]
000137e0(7): MOV EDX,dword ptr [0x1c0 + RSP]
000137e7(8): MOV qword ptr [0xf0 + RSP],RAX
000137ef(5): CALL 0x0000dd30
000137f4(8): MOV RDI,qword ptr [0x80 + RSP]
000137fc(5): MOV RDX,qword ptr [RSP + 0x60]
00013801(2): MOV ECX,EAX
00013803(3): MOV RSI,R13
00013806(5): CALL 0x0000d2a0
0001380b(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013813(3): MOV qword ptr [R15],RAX
00013816(5): CMP qword ptr [RDI + RBP*0x8],0x0
0001381b(6): JNZ 0x00013742
00013821(7): MOV EAX,dword ptr [0xd4 + RSP]
00013828(2): TEST EAX,EAX
0001382a(6): JZ 0x00013742
00013830(8): MOV RBX,qword ptr [0xa0 + RSP]
00013838(5): JMP 0x00013940
00013840(4): MOV RBP,qword ptr [R14 + 0x60]
00013844(3): TEST RBP,RBP
00013847(6): JZ 0x000139f5
0001384d(8): MOV RAX,qword ptr [0x168 + RSP]
00013855(7): MOV EDX,dword ptr [0x1c0 + RSP]
0001385c(4): MOV RDI,qword ptr [RSP]
00013860(4): LEA RSI,[RAX + -0x1]
00013864(5): CALL 0x0000dd30
00013869(2): TEST AL,0x1
0001386b(6): JZ 0x00013920
00013871(8): MOV R13,qword ptr [0x800 + RBP + R13*0x8]
00013879(5): JMP 0x00013135
00013880(8): CMP RAX,qword ptr [0x178 + RSP]
00013888(6): JGE 0x00013100
0001388e(5): JMP 0x0001359e
00013893(3): MOV RDI,R12
00013896(5): CALL 0x00001c60
0001389b(5): NOP dword ptr [RAX + RAX*0x1]
000138a0(4): MOV RDI,qword ptr [RSP]
000138a4(5): CALL 0x0000bde0
000138a9(8): MOV RBP,qword ptr [0xd8 + RSP]
000138b1(8): MOVSXD RAX,dword ptr [0xac + RSP]
000138b9(3): ADD RBP,RAX
000138bc(8): CMP RBP,qword ptr [0x90 + RSP]
000138c4(8): MOV qword ptr [0xd8 + RSP],RBP
000138cc(2): JL 0x000138d9
000138ce(5): CMP RBP,qword ptr [RSP + 0x70]
000138d3(6): JLE 0x00012e48
000138d9(8): MOV RDI,qword ptr [0x1d8 + RSP]
000138e1(8): MOV dword ptr [RSP + 0x5c],0x1
000138e9(5): JMP 0x000134c8
000138f0(8): MOV dword ptr [RSP + 0x5c],0x1
000138f8(5): JMP 0x000134e9
00013900(8): MOV RBX,qword ptr [0xa0 + RSP]
00013908(3): MOV R8,R12
0001390b(11): MOV dword ptr [0xd0 + RSP],0x0
00013916(5): JMP 0x0001310b
00013920(5): MOV R13,qword ptr [RBP + R13*0x8]
00013925(5): JMP 0x00013135
00013930(8): MOV RBX,qword ptr [0xa0 + RSP]
00013938(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013940(3): TEST RDI,RDI
00013943(7): MOV dword ptr [0xd0 + RSP],EAX
0001394a(6): JZ 0x00013a30
00013950(3): XOR R13D,R13D
00013953(5): JMP 0x00013140
00013960(7): MOV EDX,dword ptr [0x1c0 + RSP]
00013967(4): MOV RDI,qword ptr [RSP]
0001396b(4): LEA RSI,[RAX + -0x1]
0001396f(5): CALL 0x0000dd30
00013974(2): TEST AL,0x1
00013976(6): JZ 0x00013ae5
0001397c(4): MOV R14,qword ptr [RBX + 0x50]
00013980(3): TEST R14,R14
00013983(6): JNZ 0x00012fee
00013989(7): MOV EAX,dword ptr [0xd0 + RSP]
00013990(3): CMP EAX,0xc
00013993(4): MOV dword ptr [RSP + 0x5c],EAX
00013997(6): JZ 0x000134c0
0001399d(7): LEA RCX,[0x1ccb0]
000139a4(7): LEA RSI,[0x1c6d0]
000139ab(7): LEA RDI,[0x1c784]
000139b2(5): MOV EDX,0x435
000139b7(5): CALL 0x00001e30
000139bc(4): NOP dword ptr [RAX]
000139c0(5): MOV RAX,qword ptr [RSP + 0x38]
000139c5(8): CMP qword ptr [0x98 + RAX],0x0
000139cd(6): JZ 0x00013bfc
000139d3(5): JMP 0x00013b1f
000139d8(3): MOV RDI,R12
000139db(5): CALL 0x00001c60
000139e0(8): MOV RDI,qword ptr [0x1d8 + RSP]
000139e8(8): MOV dword ptr [RSP + 0x5c],0xc
000139f0(5): JMP 0x000134c8
000139f5(8): MOV RDI,qword ptr [0x1b8 + RSP]
000139fd(3): MOV RSI,R14
00013a00(5): CALL 0x0000e9e0
00013a05(2): TEST AL,AL
00013a07(6): JNZ 0x00013124
00013a0d(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013a15(11): MOV dword ptr [0xd0 + RSP],0xc
00013a20(3): TEST RDI,RDI
00013a23(6): JNZ 0x00013950
00013a29(7): NOP dword ptr [RAX]
00013a30(8): MOV dword ptr [RSP + 0x5c],0xc
00013a38(5): JMP 0x000134c8
00013a3d(5): MOV RBX,qword ptr [RSP + 0x68]
00013a42(8): MOV R13D,dword ptr [0xac + RSP]
00013a4a(8): MOV R14,qword ptr [0x90 + RSP]
00013a52(5): MOV R15,qword ptr [RSP + 0x70]
00013a57(8): MOV R12,qword ptr [0x88 + RSP]
00013a5f(2): JMP 0x00013aa8
00013a68(3): CMP R12,RBP
00013a6b(3): MOV RAX,RBX
00013a6e(2): JLE 0x00013a7f
00013a70(8): MOV RAX,qword ptr [0x128 + RSP]
00013a78(4): MOVZX EAX,byte ptr [RAX + RDX*0x1]
00013a7c(3): ADD RAX,RBX
00013a7f(3): CMP byte ptr [RAX],0x0
00013a82(6): JNZ 0x00012f48
00013a88(3): MOVSXD RAX,R13D
00013a8b(3): ADD RBP,RAX
00013a8e(3): CMP RBP,R14
00013a91(8): MOV qword ptr [0xd8 + RSP],RBP
00013a99(6): JL 0x000138d9
00013a9f(3): CMP RBP,R15
00013aa2(6): JG 0x000138d9
00013aa8(3): MOV RDX,RBP
00013aab(8): SUB RDX,qword ptr [0x148 + RSP]
00013ab3(8): CMP qword ptr [0x158 + RSP],RDX
00013abb(2): JA 0x00013a68
00013abd(7): MOV EDX,dword ptr [0x280 + RSP]
00013ac4(4): MOV RDI,qword ptr [RSP]
00013ac8(3): MOV RSI,RBP
00013acb(5): CALL 0x0000e000
00013ad0(2): TEST EAX,EAX
00013ad2(6): JNZ 0x000134b8
00013ad8(3): MOV RDX,RBP
00013adb(8): SUB RDX,qword ptr [0x148 + RSP]
00013ae3(2): JMP 0x00013a68
00013ae5(2): TEST EAX,EAX
00013ae7(6): JZ 0x00012fee
00013aed(2): MOV EDX,EAX
00013aef(3): AND EDX,0x6
00013af2(3): CMP EDX,0x6
00013af5(6): JZ 0x00013f5f
00013afb(2): TEST AL,0x2
00013afd(6): JZ 0x00013fb0
00013b03(4): MOV R14,qword ptr [RBX + 0x58]
00013b07(5): JMP 0x00013980
00013b0c(5): MOV RAX,qword ptr [RSP + 0x38]
00013b11(8): CMP qword ptr [0x98 + RAX],0x0
00013b19(6): JZ 0x00013bfc
00013b1f(5): MOV RCX,qword ptr [RSP + 0x20]
00013b24(8): MOV RBX,qword ptr [0x1d8 + RSP]
00013b2c(4): MOV RDI,qword ptr [RSP]
00013b30(4): MOV RAX,qword ptr [RBX + RCX*0x8]
00013b34(4): MOV RSI,qword ptr [RAX + 0x10]
00013b38(4): LEA RDX,[RAX + 0x18]
00013b3c(5): CALL 0x0000df30
00013b41(8): MOV qword ptr [0x1d0 + RSP],RAX
00013b49(5): JMP 0x00013268
00013b4e(2): XOR ECX,ECX
00013b50(5): JMP 0x00012dde
00013b55(4): PXOR XMM0,XMM0
00013b59(8): MOV qword ptr [0xe0 + RSP],RAX
00013b61(4): MOV RDI,qword ptr [RSP]
00013b65(5): MOV RAX,qword ptr [RSP + 0x20]
00013b6a(8): LEA RBX,[0xe0 + RSP]
00013b72(12): MOV qword ptr [0xe8 + RSP],0x0
00013b7e(8): MOV qword ptr [0xf0 + RSP],R13
00013b86(3): MOV RSI,RBX
00013b89(12): MOV qword ptr [0x110 + RSP],0x0
00013b95(8): MOVAPS xmmword ptr [0x100 + RSP],XMM0
00013b9d(8): MOV qword ptr [0xf8 + RSP],RAX
00013ba5(5): CALL 0x00012630
00013baa(8): MOV RDI,qword ptr [0x110 + RSP]
00013bb2(4): MOV dword ptr [RSP + 0x8],EAX
00013bb6(5): CALL 0x00001c60
00013bbb(4): MOV EAX,dword ptr [RSP + 0x8]
00013bbf(2): TEST EAX,EAX
00013bc1(6): JNZ 0x00014008
00013bc7(5): CMP qword ptr [R12],0x0
00013bcc(6): JZ 0x00013893
00013bd2(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013bda(5): CALL 0x00001c60
00013bdf(5): MOV RAX,qword ptr [RSP + 0x20]
00013be4(8): MOV qword ptr [0x1d8 + RSP],R12
00013bec(8): MOV qword ptr [0x1d0 + RSP],R13
00013bf4(8): MOV qword ptr [0x1c8 + RSP],RAX
00013bfc(9): CMP qword ptr [0x270 + RSP],0x0
00013c05(6): JZ 0x000134c0
00013c0b(9): CMP qword ptr [0x270 + RSP],0x1
00013c14(6): JZ 0x00014038
00013c1a(8): MOV RSI,qword ptr [0xb8 + RSP]
00013c22(8): MOV RCX,qword ptr [0x270 + RSP]
00013c2a(7): MOV RDX,-0x1
00013c31(4): SHL RCX,0x4
00013c35(4): LEA RAX,[RSI + 0x10]
00013c39(3): ADD RCX,RSI
00013c3c(4): MOV qword ptr [RAX + 0x8],RDX
00013c40(3): MOV qword ptr [RAX],RDX
00013c43(4): ADD RAX,0x10
00013c47(3): CMP RCX,RAX
00013c4a(2): JNZ 0x00013c3c
00013c4c(8): MOV RDI,qword ptr [0xb8 + RSP]
00013c54(8): MOV RAX,qword ptr [0x1c8 + RSP]
00013c5c(4): MOV qword ptr [RDI + 0x8],RAX
00013c60(5): MOV RAX,qword ptr [RSP + 0x48]
00013c65(7): MOV qword ptr [RDI],0x0
00013c6c(4): TEST byte ptr [RAX + 0x38],0x10
00013c70(6): JNZ 0x00014053
00013c76(9): CMP qword ptr [0x270 + RSP],0x1
00013c7f(6): JZ 0x00014053
00013c85(5): MOV RAX,qword ptr [RSP + 0x38]
00013c8a(3): XOR R8D,R8D
00013c8d(7): TEST byte ptr [0xb0 + RAX],0x1
00013c94(2): JZ 0x00013ca5
00013c96(3): XOR R8D,R8D
00013c99(8): CMP qword ptr [0x98 + RAX],0x0
00013ca1(4): SETG R8B
00013ca5(8): MOV RBX,qword ptr [0xb8 + RSP]
00013cad(8): MOV RDX,qword ptr [0x270 + RSP]
00013cb5(4): MOV RSI,qword ptr [RSP]
00013cb9(5): MOV RDI,qword ptr [RSP + 0x48]
00013cbe(3): MOV RCX,RBX
00013cc1(5): CALL 0x000110c0
00013cc6(2): TEST EAX,EAX
00013cc8(6): JNZ 0x00013f9d
00013cce(3): MOV RAX,qword ptr [RBX]
00013cd1(9): MOVZX R11D,byte ptr [0x1ac + RSP]
00013cda(8): MOV R10,qword ptr [0x150 + RSP]
00013ce2(2): XOR ECX,ECX
00013ce4(8): MOV R9,qword ptr [0x138 + RSP]
00013cec(8): MOV R8,qword ptr [0x158 + RSP]
00013cf4(8): MOV RDI,qword ptr [0xd8 + RSP]
00013cfc(8): MOV RDX,qword ptr [0xb8 + RSP]
00013d04(2): JMP 0x00013d09
00013d06(3): MOV RAX,qword ptr [RDX]
00013d09(4): CMP RAX,-0x1
00013d0d(2): JZ 0x00013d29
00013d0f(3): TEST R11B,R11B
00013d12(4): MOV RSI,qword ptr [RDX + 0x8]
00013d16(6): JNZ 0x0001405a
00013d1c(3): ADD RAX,RDI
00013d1f(3): ADD RSI,RDI
00013d22(3): MOV qword ptr [RDX],RAX
00013d25(4): MOV qword ptr [RDX + 0x8],RSI
00013d29(4): ADD RCX,0x1
00013d2d(4): ADD RDX,0x10
00013d31(8): CMP RCX,qword ptr [0x270 + RSP]
00013d39(2): JNZ 0x00013d06
00013d3b(9): CMP qword ptr [0x98 + RSP],0x0
00013d44(2): JLE 0x00013d85
00013d46(8): MOV RDX,qword ptr [0x98 + RSP]
00013d4e(8): MOV RDI,qword ptr [0xb8 + RSP]
00013d56(3): MOV RAX,RCX
00013d59(4): SHL RAX,0x4
00013d5d(3): ADD RDX,RCX
00013d60(5): LEA RAX,[RDI + RAX*0x1 + 0x8]
00013d65(4): SHL RDX,0x4
00013d69(5): LEA RSI,[RDI + RDX*0x1 + 0x8]
00013d6e(7): MOV RDX,-0x1
00013d75(4): MOV qword ptr [RAX + -0x8],RDX
00013d79(3): MOV qword ptr [RAX],RDX
00013d7c(4): ADD RAX,0x10
00013d80(3): CMP RSI,RAX
00013d83(2): JNZ 0x00013d75
00013d85(5): MOV RAX,qword ptr [RSP + 0x38]
00013d8a(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013d92(7): MOV R9,qword ptr [0xe0 + RAX]
00013d99(3): TEST R9,R9
00013d9c(6): JZ 0x000134c8
00013da2(8): MOV R10,qword ptr [0xb8 + RSP]
00013daa(3): XOR R8D,R8D
00013dad(4): LEA RDX,[R10 + 0x10]
00013db1(2): JMP 0x00013de9
00013db3(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
00013db8(3): CMP RAX,R8
00013dbb(2): JZ 0x00013de2
00013dbd(4): ADD RAX,0x1
00013dc1(4): SHL RAX,0x4
00013dc5(4): MOV RAX,qword ptr [R10 + RAX*0x1]
00013dc9(3): MOV qword ptr [RDX],RAX
00013dcc(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
00013dd1(4): ADD RAX,0x1
00013dd5(4): SHL RAX,0x4
00013dd9(5): MOV RAX,qword ptr [R10 + RAX*0x1 + 0x8]
00013dde(4): MOV qword ptr [RDX + 0x8],RAX
00013de2(4): ADD RDX,0x10
00013de6(3): MOV R8,RSI
00013de9(4): LEA RSI,[R8 + 0x1]
00013ded(3): CMP RSI,RCX
00013df0(2): JNZ 0x00013db3
00013df2(5): JMP 0x000134c8
00013e00(4): MOV RDI,qword ptr [RSP]
00013e04(5): CALL 0x0000bde0
00013e09(8): MOV RDI,qword ptr [0x218 + RSP]
00013e11(5): CALL 0x00001c60
00013e16(8): MOV RDI,qword ptr [0x1f8 + RSP]
00013e1e(5): CALL 0x00001c60
00013e23(5): JMP 0x000134e0
00013e28(5): MOV RAX,qword ptr [RSP + 0x38]
00013e2d(7): TEST byte ptr [0xb0 + RAX],0x2
00013e34(6): JNZ 0x00012d09
00013e3a(12): MOV qword ptr [0x1d8 + RSP],0x0
00013e46(5): JMP 0x00012d45
00013e4b(3): MOV RDI,R12
00013e4e(5): CALL 0x00001c60
00013e53(3): MOV RDI,RBP
00013e56(5): CALL 0x00001c60
00013e5b(5): JMP 0x000138a0
00013e60(8): MOV qword ptr [0xd8 + RSP],RAX
00013e68(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013e70(8): MOV dword ptr [RSP + 0x5c],0x1
00013e78(5): JMP 0x000134c8
00013e7d(3): TEST RAX,RAX
00013e80(3): MOV R13,RAX
00013e83(6): JNZ 0x00013078
00013e89(5): JMP 0x000131c4
00013e90(3): MOV R13,RAX
00013e93(5): JMP 0x00013078
00013e98(3): CMP EAX,0xc
00013e9b(6): JZ 0x000139e0
00013ea1(7): LEA RCX,[0x1ccb0]
00013ea8(7): LEA RSI,[0x1c6d0]
00013eaf(7): LEA RDI,[0x1c784]
00013eb6(5): MOV EDX,0x46c
00013ebb(5): CALL 0x00001e30
00013ec0(5): CMP byte ptr [R14 + 0x68],0x0
00013ec5(2): JS 0x00013f36
00013ec7(4): MOV ESI,dword ptr [RSP + 0x58]
00013ecb(5): MOV RAX,qword ptr [RSP + 0x8]
00013ed0(2): TEST ESI,ESI
00013ed2(5): MOV qword ptr [RSP + 0x20],RAX
00013ed7(6): JZ 0x000131d6
00013edd(9): MOV qword ptr [RSP + 0x30],0x1
00013ee6(5): JMP 0x0001303d
00013eeb(3): MOV RDI,RBX
00013eee(8): MOV dword ptr [RSP + 0x5c],0xc
00013ef6(5): JMP 0x000134c8
00013efb(4): LEA RBX,[R14 + 0x10]
00013eff(4): LEA RBP,[R14 + 0x18]
00013f03(4): MOV RDI,qword ptr [RSP]
00013f07(2): XOR ECX,ECX
00013f09(3): MOV RDX,RBP
00013f0c(3): MOV RSI,RBX
00013f0f(5): CALL 0x0000dbe0
00013f14(2): TEST EAX,EAX
00013f16(7): MOV dword ptr [0xd0 + RSP],EAX
00013f1d(2): JNZ 0x00013f68
00013f1f(5): MOVZX EAX,byte ptr [R14 + 0x68]
00013f24(2): TEST AL,0x40
00013f26(6): JNZ 0x00014010
00013f2c(5): MOV byte ptr [RSP + 0x18],0x0
00013f31(5): JMP 0x00013023
00013f36(4): MOV RSI,qword ptr [R14 + 0x10]
00013f3a(5): MOV RCX,qword ptr [RSP + 0x8]
00013f3f(4): LEA RDX,[R14 + 0x18]
00013f43(4): MOV RDI,qword ptr [RSP]
00013f47(5): CALL 0x0000df30
00013f4c(3): TEST RAX,RAX
00013f4f(5): MOV qword ptr [RSP + 0x30],RAX
00013f54(6): JZ 0x0001303d
00013f5a(5): JMP 0x00013ec7
00013f5f(4): MOV R14,qword ptr [RBX + 0x60]
00013f63(5): JMP 0x00013980
00013f68(2): CDQE
00013f6a(5): MOV qword ptr [RSP + 0x20],RAX
00013f6f(5): JMP 0x000131d6
00013f74(5): MOV R14,qword ptr [RSP + 0x18]
00013f79(3): MOV EAX,R15D
00013f7c(3): MOV RDI,R12
00013f7f(4): MOV dword ptr [RSP + 0x8],EAX
00013f83(5): CALL 0x00001c60
00013f88(3): MOV RDI,R14
00013f8b(5): CALL 0x00001c60
00013f90(4): MOV EAX,dword ptr [RSP + 0x8]
00013f94(3): CMP EAX,0x1
00013f97(6): JZ 0x000138a0
00013f9d(8): MOV RDI,qword ptr [0x1d8 + RSP]
00013fa5(4): MOV dword ptr [RSP + 0x5c],EAX
00013fa9(5): JMP 0x000134c8
00013fb0(2): TEST AL,0x4
00013fb2(6): JZ 0x00012fee
00013fb8(4): MOV RDX,qword ptr [R14 + 0x50]
00013fbc(5): MOV RDI,qword ptr [RSP + 0x28]
00013fc1(2): MOV ECX,EAX
00013fc3(3): MOV RSI,RBX
00013fc6(5): CALL 0x0000d2a0
00013fcb(3): MOV R14,RAX
00013fce(5): JMP 0x00013980
00013fd3(5): MOV R15,qword ptr [RSP + 0x10]
00013fd8(5): MOV RCX,qword ptr [RSP + 0x8]
00013fdd(3): MOV RDX,RBP
00013fe0(3): MOV RSI,R12
00013fe3(5): MOV qword ptr [RSP + 0x20],R14
00013fe8(3): MOV RDI,R15
00013feb(5): CALL 0x0000d760
00013ff0(3): MOV RDI,RBP
00013ff3(4): MOV dword ptr [RSP + 0x8],EAX
00013ff7(5): CALL 0x00001c60
00013ffc(4): MOV EAX,dword ptr [RSP + 0x8]
00014000(2): TEST EAX,EAX
00014002(6): JZ 0x00013bd2
00014008(3): XOR R14D,R14D
0001400b(5): JMP 0x00013f7c
00014010(4): MOV RDI,qword ptr [RSP]
00014014(3): MOV RDX,RBP
00014017(3): MOV RSI,RBX
0001401a(5): CALL 0x00011b50
0001401f(2): TEST EAX,EAX
00014021(7): MOV dword ptr [0xd0 + RSP],EAX
00014028(6): JNZ 0x00013f68
0001402e(5): MOVZX EAX,byte ptr [R14 + 0x68]
00014033(5): JMP 0x00013f2c
00014038(8): MOV RSI,qword ptr [0xb8 + RSP]
00014040(8): MOV RAX,qword ptr [0x1c8 + RSP]
00014048(7): MOV qword ptr [RSI],0x0
0001404f(4): MOV qword ptr [RSI + 0x8],RAX
00014053(2): XOR EAX,EAX
00014055(5): JMP 0x00013cd1
0001405a(3): CMP R10,RAX
0001405d(2): JZ 0x0001407c
0001405f(4): MOV RAX,qword ptr [R9 + RAX*0x8]
00014063(3): CMP R10,RSI
00014066(3): MOV qword ptr [RDX],RAX
00014069(2): JZ 0x00014074
0001406b(4): MOV RSI,qword ptr [R9 + RSI*0x8]
0001406f(5): JMP 0x00013d1c
00014074(3): MOV RSI,R8
00014077(5): JMP 0x00013d1c
0001407c(3): MOV RAX,R8
0001407f(2): JMP 0x00014063
00014081(8): MOV qword ptr [0xd8 + RSP],RBP
00014089(5): JMP 0x00012f48
0001408e(8): MOV qword ptr [0x168 + RSP],RAX
00014096(5): JMP 0x000131c4
0001409b(5): CALL 0x00001db0
000140a0(2): PUSH R15
000140a2(2): PUSH R14
000140a4(3): MOV RAX,RDI
000140a7(2): PUSH R13
000140a9(2): PUSH R12
000140ab(3): MOV R13,RSI
000140ae(1): PUSH RBP
000140af(1): PUSH RBX
000140b0(3): MOV RBP,RDX
000140b3(3): MOV RBX,RCX
000140b6(8): LEA RCX,[RDX*0x8]
000140be(7): SUB RSP,0xa8
000140c5(7): MOV R12,qword ptr [0x98 + RAX]
000140cc(7): MOV RAX,qword ptr [0xb8 + RAX]
000140d3(5): MOV qword ptr [RSP + 0x8],RDI
000140d8(5): MOV qword ptr [RSP + 0x18],RCX
000140dd(9): MOV RDI,qword ptr FS:[0x28]
000140e6(8): MOV qword ptr [0x98 + RSP],RDI
000140ee(2): XOR EDI,EDI
000140f0(4): MOV RDX,qword ptr [RAX + RDX*0x8]
000140f4(8): MOV dword ptr [RSP + 0x5c],0x0
000140fc(4): MOV RCX,qword ptr [RBX + 0x8]
00014100(3): TEST RDX,RDX
00014103(6): JZ 0x00014358
00014109(4): LEA RDI,[RDX + 0x8]
0001410d(3): TEST RCX,RCX
00014110(5): MOV qword ptr [RSP + 0x10],RDI
00014115(2): JNZ 0x00014168
00014117(3): MOV RDX,qword ptr [RSI]
0001411a(8): MOV qword ptr [RDX + RBP*0x8],0x0
00014122(4): MOV RDX,qword ptr [RAX + RBP*0x8]
00014126(2): XOR EAX,EAX
00014128(4): TEST byte ptr [RDX + 0x68],0x40
0001412c(6): JNZ 0x0001420f
00014132(6): NOP word ptr [RAX + RAX*0x1]
00014138(8): MOV RDI,qword ptr [0x98 + RSP]
00014140(9): XOR RDI,qword ptr FS:[0x28]
00014149(6): JNZ 0x000148eb
0001414f(7): ADD RSP,0xa8
00014156(1): POP RBX
00014157(1): POP RBP
00014158(2): POP R12
0001415a(2): POP R13
0001415c(2): POP R14
0001415e(2): POP R15
00014160(1): RET
00014168(5): LEA RDI,[RSP + 0x60]
0001416d(3): MOV RDX,RBX
00014170(3): MOV RSI,R12
00014173(8): MOV dword ptr [RSP + 0x60],0x0
0001417b(5): CALL 0x0000d560
00014180(3): MOV RDX,RAX
00014183(4): MOV EAX,dword ptr [RSP + 0x60]
00014187(2): TEST EAX,EAX
00014189(2): JNZ 0x00014138
0001418b(4): MOV R15,qword ptr [RDX + 0x38]
0001418f(4): LEA R14,[RDX + 0x38]
00014193(3): TEST R15,R15
00014196(6): JZ 0x000143a0
0001419c(5): MOV RSI,qword ptr [RSP + 0x10]
000141a1(3): MOV RDX,R14
000141a4(3): MOV RDI,RBX
000141a7(5): CALL 0x0000ca60
000141ac(2): TEST EAX,EAX
000141ae(4): MOV dword ptr [RSP + 0x5c],EAX
000141b2(2): JNZ 0x00014138
000141b4(5): CMP qword ptr [R13 + 0x28],0x0
000141b9(6): JNZ 0x00014430
000141bf(5): MOV R14,qword ptr [RSP + 0x18]
000141c4(4): ADD R14,qword ptr [R13]
000141c8(5): LEA RDI,[RSP + 0x5c]
000141cd(3): MOV RDX,RBX
000141d0(3): MOV RSI,R12
000141d3(5): CALL 0x0000d560
000141d8(3): MOV qword ptr [R14],RAX
000141db(4): MOV EAX,dword ptr [RSP + 0x5c]
000141df(2): TEST EAX,EAX
000141e1(6): JNZ 0x00014138
000141e7(6): CMP qword ptr [RSP + 0x10],0x0
000141ed(6): JZ 0x00014138
000141f3(5): MOV RAX,qword ptr [RSP + 0x8]
000141f8(7): MOV RAX,qword ptr [0xb8 + RAX]
000141ff(4): MOV RDX,qword ptr [RAX + RBP*0x8]
00014203(2): XOR EAX,EAX
00014205(4): TEST byte ptr [RDX + 0x68],0x40
00014209(6): JZ 0x00014138
0001420f(5): MOV RAX,qword ptr [RSP + 0x8]
00014214(2): XOR EBX,EBX
00014216(7): MOV RSI,qword ptr [0xc8 + RAX]
0001421d(3): MOV RDX,RSI
00014220(3): CMP RBX,RDX
00014223(2): JGE 0x00014283
00014225(4): LEA RAX,[RBX + RDX*0x1]
00014229(3): MOV RCX,RAX
0001422c(4): SHR RCX,0x3f
00014230(3): ADD RCX,RAX
00014233(5): MOV RAX,qword ptr [RSP + 0x8]
00014238(3): SAR RCX,1
0001423b(7): MOV RDI,qword ptr [0xd8 + RAX]
00014242(4): LEA RAX,[RCX + RCX*0x4]
00014246(5): CMP RBP,qword ptr [RDI + RAX*0x8 + 0x8]
0001424b(2): JLE 0x0001427e
0001424d(5): JMP 0x00014387
00014258(4): LEA RDX,[RBX + RCX*0x1]
0001425c(3): MOV RAX,RDX
0001425f(4): SHR RAX,0x3f
00014263(3): ADD RAX,RDX
00014266(3): SAR RAX,1
00014269(4): LEA RDX,[RAX + RAX*0x4]
0001426d(3): MOV R8,RAX
00014270(5): CMP RBP,qword ptr [RDI + RDX*0x8 + 0x8]
00014275(6): JG 0x00014390
0001427b(3): MOV RCX,RAX
0001427e(3): CMP RBX,RCX
00014281(2): JL 0x00014258
00014283(3): CMP RSI,RBX
00014286(6): JLE 0x00014380
0001428c(4): LEA RAX,[RBX + RBX*0x4]
00014290(8): LEA RSI,[RAX*0x8]
00014298(5): MOV RAX,qword ptr [RSP + 0x8]
0001429d(5): MOV qword ptr [RSP + 0x40],RSI
000142a2(7): MOV RAX,qword ptr [0xd8 + RAX]
000142a9(5): CMP RBP,qword ptr [RAX + RSI*0x1 + 0x8]
000142ae(6): JNZ 0x00014380
000142b4(4): CMP RBX,-0x1
000142b8(6): JZ 0x00014380
000142be(5): MOV RAX,qword ptr [RSP + 0x8]
000142c3(9): MOV qword ptr [RSP + 0x60],0x0
000142cc(7): MOV R12,qword ptr [0x98 + RAX]
000142d3(5): MOV RAX,qword ptr [RSP + 0x10]
000142d8(5): CMP qword ptr [RAX + 0x8],0x0
000142dd(6): JLE 0x00014380
000142e3(5): LEA RAX,[RSP + 0x60]
000142e8(9): MOV qword ptr [RSP + 0x20],0x0
000142f1(5): MOV qword ptr [RSP + 0x48],RBX
000142f6(3): MOV R15,R13
000142f9(5): MOV qword ptr [RSP + 0x38],RAX
000142fe(2): JMP 0x00014322
00014300(2): CMP AL,0x4
00014302(6): JZ 0x00014688
00014308(5): MOV RCX,qword ptr [RSP + 0x10]
0001430d(6): ADD qword ptr [RSP + 0x20],0x1
00014313(5): MOV RAX,qword ptr [RSP + 0x20]
00014318(4): CMP RAX,qword ptr [RCX + 0x8]
0001431c(6): JGE 0x000148db
00014322(5): MOV RAX,qword ptr [RSP + 0x10]
00014327(5): MOV RDI,qword ptr [RSP + 0x20]
0001432c(4): MOV RAX,qword ptr [RAX + 0x10]
00014330(4): MOV R14,qword ptr [RAX + RDI*0x8]
00014334(3): MOV RAX,R14
00014337(4): SHL RAX,0x4
0001433b(4): ADD RAX,qword ptr [R12]
0001433f(4): CMP R14,qword ptr [R15 + 0x10]
00014343(4): MOVZX EAX,byte ptr [RAX + 0x8]
00014347(2): JNZ 0x00014300
00014349(4): CMP RBP,qword ptr [R15 + 0x18]
0001434d(2): JNZ 0x00014300
0001434f(2): JMP 0x00014308
00014358(8): LEA R14,[RBP*0x8]
00014360(3): ADD R14,qword ptr [RSI]
00014363(3): TEST RCX,RCX
00014366(6): JNZ 0x00014420
0001436c(7): MOV qword ptr [R14],0x0
00014373(2): XOR EAX,EAX
00014375(5): JMP 0x00014138
00014380(2): XOR EAX,EAX
00014382(5): JMP 0x00014138
00014387(3): MOV R8,RCX
0001438a(3): MOV RCX,RDX
0001438d(3): NOP dword ptr [RAX]
00014390(4): LEA RBX,[R8 + 0x1]
00014394(3): MOV RDX,RCX
00014397(5): JMP 0x00014220
000143a0(4): MOV RDI,qword ptr [RBX + 0x8]
000143a4(8): MOV qword ptr [RDX + 0x40],0x0
000143ac(5): MOV qword ptr [RSP + 0x20],RDX
000143b1(4): MOV qword ptr [RDX + 0x38],RDI
000143b5(4): SHL RDI,0x3
000143b9(5): CALL 0x00001f20
000143be(5): MOV RDX,qword ptr [RSP + 0x20]
000143c3(3): TEST RAX,RAX
000143c6(4): MOV qword ptr [RDX + 0x48],RAX
000143ca(2): JZ 0x00014413
000143cc(5): CMP qword ptr [RBX + 0x8],0x0
000143d1(8): MOV dword ptr [RSP + 0x60],0x0
000143d9(2): JG 0x000143ee
000143db(5): JMP 0x0001419c
000143e0(4): ADD R15,0x1
000143e4(4): CMP R15,qword ptr [RBX + 0x8]
000143e8(6): JGE 0x0001419c
000143ee(4): MOV RAX,qword ptr [RBX + 0x10]
000143f2(3): MOV RDI,R14
000143f5(4): MOV RAX,qword ptr [RAX + R15*0x8]
000143f9(4): LEA RDX,[RAX + RAX*0x2]
000143fd(5): MOV RAX,qword ptr [R12 + 0x38]
00014402(4): LEA RSI,[RAX + RDX*0x8]
00014406(5): CALL 0x0000c470
0001440b(2): TEST EAX,EAX
0001440d(4): MOV dword ptr [RSP + 0x60],EAX
00014411(2): JZ 0x000143e0
00014413(5): MOV EAX,0xc
00014418(5): JMP 0x00014138
00014420(9): MOV qword ptr [RSP + 0x10],0x0
00014429(5): JMP 0x000141c8
00014430(5): MOV RAX,qword ptr [RSP + 0x8]
00014435(7): MOV RAX,qword ptr [0xd8 + RAX]
0001443c(5): MOV qword ptr [RSP + 0x20],RAX
00014441(6): JLE 0x0001451b
00014447(3): XOR R15D,R15D
0001444a(6): NOP word ptr [RAX + RAX*0x1]
00014450(4): MOV RAX,qword ptr [R13 + 0x30]
00014454(5): MOV RDI,qword ptr [RSP + 0x20]
00014459(4): MOV RAX,qword ptr [RAX + R15*0x8]
0001445d(4): LEA RAX,[RAX + RAX*0x4]
00014461(4): LEA RDX,[RDI + RAX*0x8]
00014465(4): CMP RBP,qword ptr [RDX + 0x10]
00014469(6): JLE 0x0001450d
0001446f(4): CMP RBP,qword ptr [RDX + 0x8]
00014473(6): JG 0x0001450d
00014479(3): MOV RCX,qword ptr [RDX]
0001447c(4): MOV RAX,qword ptr [R12]
00014480(4): MOV RSI,qword ptr [RBX + 0x8]
00014484(4): SHL RCX,0x4
00014488(4): CMP RBP,qword ptr [RDX + 0x18]
0001448c(4): MOV R8,qword ptr [RAX + RCX*0x1]
00014490(6): JZ 0x00014530
00014496(3): XOR R14D,R14D
00014499(3): TEST RSI,RSI
0001449c(2): JLE 0x0001450d
0001449e(5): MOV qword ptr [RSP + 0x28],RBP
000144a3(3): MOV RBP,R8
000144a6(2): JMP 0x000144be
000144b0(4): ADD R14,0x1
000144b4(4): CMP R14,qword ptr [RBX + 0x8]
000144b8(2): JGE 0x00014508
000144ba(4): MOV RAX,qword ptr [R12]
000144be(4): MOV RDX,qword ptr [RBX + 0x10]
000144c2(4): MOV RSI,qword ptr [RDX + R14*0x8]
000144c6(3): MOV RDX,RSI
000144c9(4): SHL RDX,0x4
000144cd(3): ADD RAX,RDX
000144d0(4): MOVZX EDX,byte ptr [RAX + 0x8]
000144d4(3): SUB EDX,0x8
000144d7(3): CMP EDX,0x1
000144da(2): JA 0x000144b0
000144dc(3): CMP RBP,qword ptr [RAX]
000144df(2): JNZ 0x000144b0
000144e1(5): MOV RCX,qword ptr [RSP + 0x10]
000144e6(3): MOV RDX,RBX
000144e9(3): MOV RDI,R12
000144ec(5): CALL 0x0000e7a0
000144f1(2): TEST EAX,EAX
000144f3(6): JNZ 0x00014138
000144f9(4): ADD R14,0x1
000144fd(4): CMP R14,qword ptr [RBX + 0x8]
00014501(2): JL 0x000144ba
00014503(5): NOP dword ptr [RAX + RAX*0x1]
00014508(5): MOV RBP,qword ptr [RSP + 0x28]
0001450d(4): ADD R15,0x1
00014511(4): CMP R15,qword ptr [R13 + 0x28]
00014515(6): JL 0x00014450
0001451b(8): MOV dword ptr [RSP + 0x5c],0x0
00014523(5): JMP 0x000141bf
00014530(3): TEST RSI,RSI
00014533(2): JLE 0x0001450d
00014535(4): MOV R10,qword ptr [RBX + 0x10]
00014539(7): MOV R9,-0x1
00014540(4): LEA R11,[R10 + RSI*0x8]
00014544(3): MOV RCX,R10
00014547(3): MOV RSI,R9
0001454a(2): JMP 0x00014566
00014550(4): CMP R14D,0x9
00014554(2): JNZ 0x0001455d
00014556(3): CMP R8,qword ptr [RDX]
00014559(4): CMOVZ R9,RDI
0001455d(4): ADD RCX,0x8
00014561(3): CMP R11,RCX
00014564(2): JZ 0x0001458e
00014566(3): MOV RDI,qword ptr [RCX]
00014569(3): MOV RDX,RDI
0001456c(4): SHL RDX,0x4
00014570(3): ADD RDX,RAX
00014573(5): MOVZX R14D,byte ptr [RDX + 0x8]
00014578(4): CMP R14D,0x8
0001457c(2): JNZ 0x00014550
0001457e(3): CMP R8,qword ptr [RDX]
00014581(4): CMOVZ RSI,RDI
00014585(4): ADD RCX,0x8
00014589(3): CMP R11,RCX
0001458c(2): JNZ 0x00014566
0001458e(3): TEST RSI,RSI
00014591(3): MOV R14,R9
00014594(5): MOV qword ptr [RSP + 0x28],R9
00014599(6): JS 0x00014660
0001459f(5): MOV RCX,qword ptr [RSP + 0x10]
000145a4(3): MOV RDX,RBX
000145a7(3): MOV RDI,R12
000145aa(5): CALL 0x0000e7a0
000145af(2): TEST EAX,EAX
000145b1(6): JNZ 0x00014138
000145b7(3): TEST R14,R14
000145ba(6): JS 0x0001450d
000145c0(5): CMP qword ptr [RBX + 0x8],0x0
000145c5(6): JLE 0x0001450d
000145cb(4): MOV R10,qword ptr [RBX + 0x10]
000145cf(3): XOR R14D,R14D
000145d2(5): MOV qword ptr [RSP + 0x30],RBP
000145d7(3): MOV RBP,R14
000145da(5): MOV R14,qword ptr [RSP + 0x28]
000145df(2): JMP 0x000145fa
000145e8(4): ADD RBP,0x1
000145ec(4): CMP RBP,qword ptr [RBX + 0x8]
000145f0(6): JGE 0x00014678
000145f6(4): MOV R10,qword ptr [RBX + 0x10]
000145fa(4): MOV R10,qword ptr [R10 + RBP*0x8]
000145fe(5): MOV RAX,qword ptr [R12 + 0x38]
00014603(3): MOV RDX,R14
00014606(4): LEA R9,[R10 + R10*0x2]
0001460a(4): SHL R9,0x3
0001460e(3): ADD RAX,R9
00014611(4): MOV RDI,qword ptr [RAX + 0x8]
00014615(4): LEA RSI,[RAX + 0x10]
00014619(5): CALL 0x0000bf50
0001461e(3): TEST RAX,RAX
00014621(2): JNZ 0x000145e8
00014623(5): ADD R9,qword ptr [R12 + 0x30]
00014628(4): MOV RDI,qword ptr [R9 + 0x8]
0001462c(4): LEA RSI,[R9 + 0x10]
00014630(5): CALL 0x0000bf50
00014635(3): TEST RAX,RAX
00014638(2): JNZ 0x000145e8
0001463a(5): MOV RCX,qword ptr [RSP + 0x10]
0001463f(3): MOV RDX,RBX
00014642(3): MOV RSI,R10
00014645(3): MOV RDI,R12
00014648(5): CALL 0x0000e7a0
0001464d(2): TEST EAX,EAX
0001464f(6): JNZ 0x00014138
00014655(4): SUB RBP,0x1
00014659(2): JMP 0x000145e8
00014660(6): CMP qword ptr [RSP + 0x28],0x0
00014666(6): JNS 0x000145cf
0001466c(5): JMP 0x0001450d
00014678(5): MOV RBP,qword ptr [RSP + 0x30]
0001467d(5): JMP 0x0001450d
00014688(5): MOV RAX,qword ptr [RSP + 0x8]
0001468d(5): MOV R13,qword ptr [RSP + 0x40]
00014692(5): MOV RBX,qword ptr [RSP + 0x48]
00014697(7): ADD R13,qword ptr [0xd8 + RAX]
0001469e(4): LEA RAX,[R14 + R14*0x2]
000146a2(4): SHL RAX,0x3
000146a6(5): MOV qword ptr [RSP + 0x30],RAX
000146ab(8): LEA RAX,[R14*0x8]
000146b3(5): MOV qword ptr [RSP + 0x28],RAX
000146b8(3): MOV RAX,R15
000146bb(3): MOV R15,R13
000146be(3): MOV R13,RBX
000146c1(3): MOV RBX,RAX
000146c4(5): JMP 0x0001482e
000146d0(4): MOV RAX,qword ptr [R15 + 0x18]
000146d4(4): SUB RAX,qword ptr [R15 + 0x10]
000146d8(3): TEST RAX,RAX
000146db(5): LEA R9,[RBP + RAX*0x1]
000146e0(6): JZ 0x00014840
000146e6(5): MOV RAX,qword ptr [R12 + 0x18]
000146eb(5): MOV RSI,qword ptr [RSP + 0x28]
000146f0(4): MOV R10,qword ptr [RAX + RSI*0x1]
000146f4(4): CMP R9,qword ptr [RBX + 0x18]
000146f8(6): JG 0x00014837
000146fe(3): MOV RAX,qword ptr [RBX]
00014701(4): MOV RAX,qword ptr [RAX + R9*0x8]
00014705(3): TEST RAX,RAX
00014708(6): JZ 0x00014837
0001470e(4): MOV RDI,qword ptr [RAX + 0x10]
00014712(4): LEA RSI,[RAX + 0x18]
00014716(3): MOV RDX,R10
00014719(5): CALL 0x0000bf50
0001471e(3): TEST RAX,RAX
00014721(6): JZ 0x00014837
00014727(4): SUB RSP,0x8
0001472b(4): LEA RDX,[RBX + 0x30]
0001472f(4): LEA RSI,[RBX + 0x28]
00014733(2): PUSH R9
00014735(5): MOV RDI,qword ptr [RSP + 0x18]
0001473a(3): MOV RCX,R14
0001473d(3): MOV R9,R10
00014740(3): MOV R8,RBP
00014743(5): CALL 0x0000c200
00014748(2): TEST AL,AL
0001474a(1): POP RDX
0001474b(1): POP RCX
0001474c(6): JNZ 0x00014837
00014752(6): CMP qword ptr [RSP + 0x60],0x0
00014758(6): JZ 0x00014868
0001475e(5): MOV RAX,qword ptr [RSP + 0x38]
00014763(3): MOV RSI,R13
00014766(5): MOV qword ptr [RSP + 0x70],R14
0001476b(5): MOV qword ptr [RSP + 0x78],RBP
00014770(4): LEA RDI,[RAX + 0x20]
00014774(5): CALL 0x0000aa10
00014779(2): TEST AL,AL
0001477b(6): JZ 0x000148d4
00014781(5): MOV RDI,qword ptr [RSP + 0x18]
00014786(5): MOV RAX,qword ptr [RSP + 0x60]
0001478b(5): MOV RSI,qword ptr [RSP + 0x38]
00014790(4): MOV R15,qword ptr [RAX + RDI*0x1]
00014794(5): MOV RDI,qword ptr [RSP + 0x8]
00014799(5): CALL 0x00012630
0001479e(2): TEST EAX,EAX
000147a0(6): JNZ 0x000148ae
000147a6(4): MOV RSI,qword ptr [RBX + 0x8]
000147aa(5): MOV RDX,qword ptr [RSP + 0x60]
000147af(3): TEST RSI,RSI
000147b2(2): JZ 0x000147cd
000147b4(4): LEA RCX,[RBP + 0x1]
000147b8(3): MOV RDI,R12
000147bb(5): CALL 0x0000d760
000147c0(2): TEST EAX,EAX
000147c2(6): JNZ 0x000148ae
000147c8(5): MOV RDX,qword ptr [RSP + 0x60]
000147cd(5): MOV R11,qword ptr [RSP + 0x38]
000147d2(5): MOV RAX,qword ptr [RSP + 0x18]
000147d7(8): MOV RDI,qword ptr [0x88 + RSP]
000147df(4): LEA R9,[R11 + 0x30]
000147e3(4): MOV qword ptr [RDX + RAX*0x1],R15
000147e7(3): MOV RDX,R13
000147ea(3): MOV RSI,R9
000147ed(5): CALL 0x0000bf50
000147f2(4): SUB RAX,0x1
000147f6(3): MOV RDX,RAX
000147f9(2): JS 0x00014807
000147fb(4): LEA RDI,[R11 + 0x28]
000147ff(3): MOV RSI,R9
00014802(5): CALL 0x0000c0d0
00014807(5): MOV RCX,qword ptr [RSP + 0x8]
0001480c(5): LEA RAX,[R13 + R13*0x4]
00014811(7): MOV RDX,qword ptr [0xd8 + RCX]
00014818(4): LEA RAX,[RDX + RAX*0x8]
0001481c(4): NOP dword ptr [RAX]
00014820(4): ADD R13,0x1
00014824(4): CMP byte ptr [RAX + 0x20],0x0
00014828(4): LEA R15,[RAX + 0x28]
0001482c(2): JZ 0x00014860
0001482e(3): CMP R14,qword ptr [R15]
00014831(6): JZ 0x000146d0
00014837(3): MOV RAX,R15
0001483a(2): JMP 0x00014820
00014840(5): MOV RAX,qword ptr [R12 + 0x28]
00014845(5): MOV RDI,qword ptr [RSP + 0x30]
0001484a(5): MOV RAX,qword ptr [RAX + RDI*0x1 + 0x10]
0001484f(3): MOV R10,qword ptr [RAX]
00014852(5): JMP 0x000146f4
00014860(3): MOV R15,RBX
00014863(5): JMP 0x00014308
00014868(4): MOV RAX,qword ptr [RBX + 0x30]
0001486c(4): LEA RSI,[RBX + 0x20]
00014870(4): MOVDQA XMM0,xmmword ptr [RBX]
00014874(8): MOV qword ptr [0x90 + RSP],RAX
0001487c(5): MOV RAX,qword ptr [RSP + 0x38]
00014881(5): MOVAPS xmmword ptr [RSP + 0x60],XMM0
00014886(4): LEA RDI,[RAX + 0x20]
0001488a(5): MOVDQA XMM0,xmmword ptr [RBX + 0x10]
0001488f(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
00014894(5): MOVDQA XMM0,xmmword ptr [RBX + 0x20]
00014899(8): MOVAPS xmmword ptr [0x80 + RSP],XMM0
000148a1(5): CALL 0x0000d0b0
000148a6(2): TEST EAX,EAX
000148a8(6): JZ 0x0001475e
000148ae(6): CMP qword ptr [RSP + 0x60],0x0
000148b4(6): JZ 0x00014138
000148ba(8): MOV RDI,qword ptr [0x90 + RSP]
000148c2(4): MOV dword ptr [RSP + 0x8],EAX
000148c6(5): CALL 0x00001c60
000148cb(4): MOV EAX,dword ptr [RSP + 0x8]
000148cf(5): JMP 0x00014138
000148d4(5): MOV EAX,0xc
000148d9(2): JMP 0x000148ae
000148db(6): CMP qword ptr [RSP + 0x60],0x0
000148e1(6): JZ 0x00014380
000148e7(2): XOR EAX,EAX
000148e9(2): JMP 0x000148ba
000148eb(5): CALL 0x00001db0
000148f0(2): PUSH R14
000148f2(2): PUSH R13
000148f4(3): MOV R10,RSI
000148f7(2): PUSH R12
000148f9(1): PUSH RBP
000148fa(3): MOVSXD R11,ECX
000148fd(1): PUSH RBX
000148fe(3): MOV RBP,RDX
00014901(3): MOV RBX,RDI
00014904(4): SUB RSP,0x20
00014908(4): MOV R12,qword ptr [RSI + 0x48]
0001490c(9): MOV RAX,qword ptr FS:[0x28]
00014915(5): MOV qword ptr [RSP + 0x18],RAX
0001491a(2): XOR EAX,EAX
0001491c(7): CMP dword ptr [0x90 + RSI],0x1
00014923(2): JZ 0x00014978
00014925(3): MOV RSI,R12
00014928(3): MOV RDI,R10
0001492b(5): CALL 0x0000bea0
00014930(3): CMP EAX,0x1
00014933(2): JLE 0x00014978
00014935(4): MOV RDX,qword ptr [R10 + 0x10]
00014939(2): CDQE
0001493b(6): MOV dword ptr [RBX],0x1
00014941(3): ADD RAX,R12
00014944(4): MOV EDX,dword ptr [RDX + R12*0x4]
00014948(3): MOV dword ptr [RBX + 0x8],EDX
0001494b(4): MOV qword ptr [R10 + 0x48],RAX
0001494f(2): XOR EAX,EAX
00014951(5): MOV RCX,qword ptr [RSP + 0x18]
00014956(9): XOR RCX,qword ptr FS:[0x28]
0001495f(6): JNZ 0x00014b48
00014965(4): ADD RSP,0x20
00014969(1): POP RBX
0001496a(1): POP RBP
0001496b(2): POP R12
0001496d(2): POP R13
0001496f(2): POP R14
00014971(1): RET
00014978(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001497c(3): ADD R11,R12
0001497f(4): MOV qword ptr [R10 + 0x48],R11
00014983(2): MOV EDX,EAX
00014985(3): AND EDX,0xfffffffb
00014988(3): CMP DL,0x1a
0001498b(2): JZ 0x000149b0
0001498d(2): CMP AL,0x1c
0001498f(2): JZ 0x000149b0
00014991(2): CMP AL,0x16
00014993(2): JNZ 0x0001499e
00014995(3): TEST R9B,R9B
00014998(6): JZ 0x00014ae2
0001499e(4): MOVZX EAX,byte ptr [RBP]
000149a2(6): MOV dword ptr [RBX],0x0
000149a8(3): MOV byte ptr [RBX + 0x8],AL
000149ab(2): XOR EAX,EAX
000149ad(2): JMP 0x00014951
000149b0(4): MOV R12,qword ptr [R10 + 0x68]
000149b4(3): CMP R11,R12
000149b7(6): JGE 0x00014ad8
000149bd(5): MOVZX R13D,byte ptr [RBP]
000149c2(3): XOR R8D,R8D
000149c5(2): JMP 0x000149f2
000149d0(4): MOV RAX,qword ptr [RBX + 0x8]
000149d4(4): MOV byte ptr [RAX + R8*0x1],R9B
000149d8(4): ADD R8,0x1
000149dc(4): CMP R8,0x20
000149e0(6): JZ 0x00014ad8
000149e6(4): MOVZX EAX,byte ptr [RBP + 0x8]
000149ea(4): MOV R11,qword ptr [R10 + 0x48]
000149ee(4): MOV R12,qword ptr [R10 + 0x68]
000149f2(2): CMP AL,0x1e
000149f4(3): MOVSXD R14,R8D
000149f7(2): JZ 0x00014a60
000149f9(4): MOV RDX,qword ptr [R10 + 0x8]
000149fd(4): LEA RAX,[R11 + 0x1]
00014a01(4): MOV qword ptr [R10 + 0x48],RAX
00014a05(5): MOVZX R9D,byte ptr [RDX + R11*0x1]
00014a0a(3): CMP RAX,R12
00014a0d(6): JGE 0x00014ad8
00014a13(3): CMP R13B,R9B
00014a16(2): JNZ 0x000149d0
00014a18(4): MOV RDX,qword ptr [R10 + 0x8]
00014a1c(4): CMP byte ptr [RDX + RAX*0x1],0x5d
00014a20(2): JNZ 0x000149d0
00014a22(4): ADD RAX,0x1
00014a26(4): MOV qword ptr [R10 + 0x48],RAX
00014a2a(4): MOV RAX,qword ptr [RBX + 0x8]
00014a2e(5): MOV byte ptr [RAX + R14*0x1],0x0
00014a33(4): MOVZX EAX,byte ptr [RBP + 0x8]
00014a37(2): CMP AL,0x1c
00014a39(6): JZ 0x00014b3b
00014a3f(2): CMP AL,0x1e
00014a41(6): JZ 0x00014b2e
00014a47(2): CMP AL,0x1a
00014a49(6): JZ 0x00014b21
00014a4f(2): XOR EAX,EAX
00014a51(5): JMP 0x00014951
00014a60(8): CMP byte ptr [0x8b + R10],0x0
00014a68(2): JZ 0x000149f9
00014a6a(8): CMP byte ptr [0x8c + R10],0x0
00014a72(6): JZ 0x00014b08
00014a78(4): CMP R11,qword ptr [R10 + 0x30]
00014a7c(2): JZ 0x00014a8d
00014a7e(4): MOV RAX,qword ptr [R10 + 0x10]
00014a82(5): CMP dword ptr [RAX + R11*0x4],-0x1
00014a87(6): JZ 0x000149f9
00014a8d(4): MOV RAX,qword ptr [R10 + 0x18]
00014a91(4): MOV RAX,qword ptr [RAX + R11*0x8]
00014a95(3): ADD RAX,qword ptr [R10]
00014a98(4): ADD RAX,qword ptr [R10 + 0x28]
00014a9c(4): MOVZX R9D,byte ptr [RAX]
00014aa0(4): TEST R9B,0x80
00014aa4(6): JNZ 0x000149f9
00014aaa(8): CMP dword ptr [0x90 + R10],0x1
00014ab2(5): MOV EAX,0x1
00014ab7(2): JZ 0x00014ac6
00014ab9(3): MOV RSI,R11
00014abc(3): MOV RDI,R10
00014abf(5): CALL 0x0000bea0
00014ac4(2): CDQE
00014ac6(3): ADD RAX,R11
00014ac9(4): MOV qword ptr [R10 + 0x48],RAX
00014acd(5): JMP 0x00014a0a
00014ad8(5): MOV EAX,0x7
00014add(5): JMP 0x00014951
00014ae2(3): MOV RDI,RSP
00014ae5(3): MOV RDX,R8
00014ae8(3): MOV RSI,R10
00014aeb(5): CALL 0x0000a440
00014af0(5): CMP byte ptr [RSP + 0x8],0x15
00014af5(5): MOV EAX,0xb
00014afa(6): JZ 0x0001499e
00014b00(5): JMP 0x00014951
00014b08(4): LEA RAX,[R11 + 0x1]
00014b0c(3): ADD R11,qword ptr [R10]
00014b0f(4): MOV RDX,qword ptr [R10 + 0x28]
00014b13(4): MOV qword ptr [R10 + 0x48],RAX
00014b17(5): MOVZX R9D,byte ptr [R11 + RDX*0x1]
00014b1c(5): JMP 0x00014a0a
00014b21(6): MOV dword ptr [RBX],0x3
00014b27(2): XOR EAX,EAX
00014b29(5): JMP 0x00014951
00014b2e(6): MOV dword ptr [RBX],0x4
00014b34(2): XOR EAX,EAX
00014b36(5): JMP 0x00014951
00014b3b(6): MOV dword ptr [RBX],0x2
00014b41(2): XOR EAX,EAX
00014b43(5): JMP 0x00014951
00014b48(5): CALL 0x00001db0
00014b4d(3): NOP dword ptr [RAX]
00014b50(2): PUSH R15
00014b52(2): PUSH R14
00014b54(2): PUSH R13
00014b56(2): PUSH R12
00014b58(1): PUSH RBP
00014b59(1): PUSH RBX
00014b5a(3): MOV RBP,RDI
00014b5d(4): SUB RSP,0x38
00014b61(4): MOV R14,qword ptr [RSI + 0x48]
00014b65(9): MOV RAX,qword ptr FS:[0x28]
00014b6e(5): MOV qword ptr [RSP + 0x28],RAX
00014b73(2): XOR EAX,EAX
00014b75(4): CMP qword ptr [RSI + 0x68],R14
00014b79(6): JLE 0x00014c10
00014b7f(5): MOVZX R13D,byte ptr [RDI + 0xa]
00014b84(3): MOV R15,RDX
00014b87(4): MOV RDX,qword ptr [RSI + 0x8]
00014b8b(3): MOV RBX,RSI
00014b8e(5): MOVZX R12D,byte ptr [RDX + R14*0x1]
00014b93(4): AND R13D,0xffffff9f
00014b97(4): MOV byte ptr [RDI + 0xa],R13B
00014b9b(6): MOV EAX,dword ptr [0x90 + RSI]
00014ba1(3): MOV byte ptr [RDI],R12B
00014ba4(3): CMP EAX,0x1
00014ba7(6): JLE 0x00014c40
00014bad(4): CMP R14,qword ptr [RSI + 0x30]
00014bb1(6): JZ 0x00014d50
00014bb7(4): MOV RCX,qword ptr [RSI + 0x10]
00014bbb(4): MOV ECX,dword ptr [RCX + R14*0x4]
00014bbf(3): CMP ECX,-0x1
00014bc2(6): JZ 0x00014ca0
00014bc8(4): CMP R12B,0x5c
00014bcc(6): JZ 0x00014cc0
00014bd2(4): MOV byte ptr [RDI + 0x8],0x1
00014bd6(2): MOV EDI,ECX
00014bd8(5): MOV qword ptr [RSP + 0x8],RDX
00014bdd(3): MOV dword ptr [RSP],ECX
00014be0(5): CALL 0x00001f10
00014be5(3): MOV ECX,dword ptr [RSP]
00014be8(2): TEST EAX,EAX
00014bea(3): SETNZ AL
00014bed(3): CMP ECX,0x5f
00014bf0(3): SETZ CL
00014bf3(2): OR EAX,ECX
00014bf5(3): SHL EAX,0x6
00014bf8(3): OR R13D,EAX
00014bfb(4): MOV byte ptr [RBP + 0xa],R13B
00014bff(5): MOV RDX,qword ptr [RSP + 0x8]
00014c04(2): JMP 0x00014c7c
00014c10(4): MOV byte ptr [RDI + 0x8],0x2
00014c14(5): MOV RDI,qword ptr [RSP + 0x28]
00014c19(9): XOR RDI,qword ptr FS:[0x28]
00014c22(6): JNZ 0x00015248
00014c28(4): ADD RSP,0x38
00014c2c(1): POP RBX
00014c2d(1): POP RBP
00014c2e(2): POP R12
00014c30(2): POP R13
00014c32(2): POP R14
00014c34(2): POP R15
00014c36(1): RET
00014c40(4): CMP R12B,0x5c
00014c44(2): JZ 0x00014cc0
00014c46(4): MOV byte ptr [RBP + 0x8],0x1
00014c4a(4): MOV qword ptr [RSP],RDX
00014c4e(5): CALL 0x000020e0
00014c53(3): MOV RSI,qword ptr [RAX]
00014c56(4): MOVZX ECX,R12B
00014c5a(4): MOVZX EAX,word ptr [RSI + RCX*0x2]
00014c5e(4): SHR AX,0x3
00014c62(3): AND EAX,0x1
00014c65(4): CMP R12B,0x5f
00014c69(3): SETZ CL
00014c6c(2): OR EAX,ECX
00014c6e(3): SHL EAX,0x6
00014c71(3): OR R13D,EAX
00014c74(4): MOV byte ptr [RBP + 0xa],R13B
00014c78(4): MOV RDX,qword ptr [RSP]
00014c7c(4): SUB R12D,0xa
00014c80(4): CMP R12B,0x73
00014c84(6): JA 0x00014dbc
00014c8a(7): LEA RCX,[0x1c834]
00014c91(4): MOVZX R12D,R12B
00014c95(4): MOVSXD RAX,dword ptr [RCX + R12*0x4]
00014c99(3): ADD RAX,RCX
00014c9c(2): JMP RAX
00014ca0(4): OR R13D,0x20
00014ca4(4): MOV byte ptr [RDI + 0x8],0x1
00014ca8(5): MOV EAX,0x1
00014cad(4): MOV byte ptr [RDI + 0xa],R13B
00014cb1(5): JMP 0x00014c14
00014cc0(4): LEA RSI,[R14 + 0x1]
00014cc4(4): CMP RSI,qword ptr [RBX + 0x58]
00014cc8(6): JGE 0x00014d70
00014cce(7): CMP byte ptr [0x8b + RBX],0x0
00014cd5(6): JNZ 0x00015160
00014cdb(6): MOVZX EDI,byte ptr [RDX + R14*0x1 + 0x1]
00014ce1(3): MOV R12D,EDI
00014ce4(4): MOV dword ptr [RSP + 0x8],EDI
00014ce8(3): CMP EAX,0x1
00014ceb(4): MOV byte ptr [RBP],R12B
00014cef(4): MOV byte ptr [RBP + 0x8],0x1
00014cf3(6): JLE 0x00015140
00014cf9(4): MOV RAX,qword ptr [RBX + 0x10]
00014cfd(4): MOV R8D,dword ptr [RAX + RSI*0x4]
00014d01(3): MOV EDI,R8D
00014d04(4): MOV dword ptr [RSP],R8D
00014d08(5): CALL 0x00001f10
00014d0d(4): MOV R8D,dword ptr [RSP]
00014d11(2): TEST EAX,EAX
00014d13(3): SETNZ AL
00014d16(4): CMP R8D,0x5f
00014d1a(3): SETZ DL
00014d1d(5): LEA ECX,[R12 + -0x27]
00014d22(2): OR EAX,EDX
00014d24(3): SHL EAX,0x6
00014d27(3): OR R13D,EAX
00014d2a(3): CMP CL,0x56
00014d2d(4): MOV byte ptr [RBP + 0xa],R13B
00014d31(6): JA 0x00015135
00014d37(7): LEA RDX,[0x1ca04]
00014d3e(3): MOVZX ECX,CL
00014d41(4): MOVSXD RAX,dword ptr [RDX + RCX*0x4]
00014d45(3): ADD RAX,RDX
00014d48(2): JMP RAX
00014d50(4): CMP R12B,0x5c
00014d54(6): JZ 0x00014cc0
00014d5a(4): MOV RAX,qword ptr [RBX + 0x10]
00014d5e(4): MOV byte ptr [RBP + 0x8],0x1
00014d62(4): MOV ECX,dword ptr [RAX + R14*0x4]
00014d66(5): JMP 0x00014bd6
00014d70(4): MOV byte ptr [RBP + 0x8],0x24
00014d74(5): MOV EAX,0x1
00014d79(5): JMP 0x00014c14
00014d80(7): AND R15D,0x1200
00014d87(5): MOV EAX,0x1
00014d8c(7): CMP R15,0x1200
00014d93(6): JNZ 0x00014c14
00014d99(4): MOV byte ptr [RBP + 0x8],0x18
00014d9d(5): JMP 0x00014c14
00014da8(7): AND R15D,0x8400
00014daf(7): CMP R15,0x8000
00014db6(6): JZ 0x00014e92
00014dbc(5): MOV EAX,0x1
00014dc1(5): JMP 0x00014c14
00014dd0(7): AND R15D,0x1200
00014dd7(5): MOV EAX,0x1
00014ddc(7): CMP R15,0x1200
00014de3(6): JNZ 0x00014c14
00014de9(4): MOV byte ptr [RBP + 0x8],0x17
00014ded(5): JMP 0x00014c14
00014df8(7): TEST R15D,0x800008
00014dff(2): JNZ 0x00014e0a
00014e01(3): TEST R14,R14
00014e04(6): JNZ 0x000151ca
00014e0a(4): MOV byte ptr [RBP + 0x8],0xc
00014e0e(7): MOV dword ptr [RBP],0x10
00014e15(5): MOV EAX,0x1
00014e1a(5): JMP 0x00014c14
00014e20(4): MOV byte ptr [RBP + 0x8],0x14
00014e24(5): MOV EAX,0x1
00014e29(5): JMP 0x00014c14
00014e30(7): TEST R15D,0x402
00014e37(5): MOV EAX,0x1
00014e3c(6): JNZ 0x00014c14
00014e42(4): MOV byte ptr [RBP + 0x8],0x13
00014e46(5): JMP 0x00014c14
00014e50(4): MOV byte ptr [RBP + 0x8],0x5
00014e54(5): MOV EAX,0x1
00014e59(5): JMP 0x00014c14
00014e60(7): TEST R15D,0x402
00014e67(5): MOV EAX,0x1
00014e6c(6): JNZ 0x00014c14
00014e72(4): MOV byte ptr [RBP + 0x8],0x12
00014e76(5): JMP 0x00014c14
00014e80(7): TEST R15D,0x800
00014e87(5): MOV EAX,0x1
00014e8c(6): JZ 0x00014c14
00014e92(4): MOV byte ptr [RBP + 0x8],0xa
00014e96(5): MOV EAX,0x1
00014e9b(5): JMP 0x00014c14
00014ea0(4): MOV byte ptr [RBP + 0x8],0xb
00014ea4(5): MOV EAX,0x1
00014ea9(5): JMP 0x00014c14
00014eb0(7): TEST R15D,0x2000
00014eb7(5): MOV EAX,0x1
00014ebc(6): JZ 0x00014c14
00014ec2(4): MOV byte ptr [RBP + 0x8],0x9
00014ec6(5): JMP 0x00014c14
00014ed0(7): TEST R15D,0x2000
00014ed7(5): MOV EAX,0x1
00014edc(6): JZ 0x00014c14
00014ee2(4): MOV byte ptr [RBP + 0x8],0x8
00014ee6(5): JMP 0x00014c14
00014ef0(4): TEST R15B,0x8
00014ef4(2): JNZ 0x00014f04
00014ef6(4): ADD R14,0x1
00014efa(4): CMP R14,qword ptr [RBX + 0x58]
00014efe(6): JNZ 0x000151fb
00014f04(4): MOV byte ptr [RBP + 0x8],0xc
00014f08(7): MOV dword ptr [RBP],0x20
00014f0f(5): MOV EAX,0x1
00014f14(5): JMP 0x00014c14
00014f19(7): TEST R15D,0x8400
00014f20(5): MOV EAX,0x2
00014f25(6): JNZ 0x00014c14
00014f2b(4): MOV byte ptr [RBP + 0x8],0xa
00014f2f(5): JMP 0x00014c14
00014f34(7): AND R15D,0x1200
00014f3b(5): MOV EAX,0x2
00014f40(7): CMP R15,0x200
00014f47(6): JNZ 0x00014c14
00014f4d(5): JMP 0x00014de9
00014f52(7): TEST R15D,0x80000
00014f59(5): MOV EAX,0x2
00014f5e(6): JNZ 0x00014c14
00014f64(4): MOV byte ptr [RBP + 0x8],0x20
00014f68(5): JMP 0x00014c14
00014f6d(7): TEST R15D,0x80000
00014f74(5): MOV EAX,0x2
00014f79(6): JNZ 0x00014c14
00014f7f(4): MOV byte ptr [RBP + 0x8],0x22
00014f83(5): JMP 0x00014c14
00014f88(7): AND R15D,0x1200
00014f8f(5): MOV EAX,0x2
00014f94(7): CMP R15,0x200
00014f9b(6): JNZ 0x00014c14
00014fa1(5): JMP 0x00014d99
00014fa6(7): TEST R15D,0x80000
00014fad(5): MOV EAX,0x2
00014fb2(6): JNZ 0x00014c14
00014fb8(4): MOV byte ptr [RBP + 0x8],0xc
00014fbc(7): MOV dword ptr [RBP],0x100
00014fc3(5): JMP 0x00014c14
00014fc8(7): TEST R15D,0x80000
00014fcf(5): MOV EAX,0x2
00014fd4(6): JNZ 0x00014c14
00014fda(4): MOV byte ptr [RBP + 0x8],0xc
00014fde(7): MOV dword ptr [RBP],0x40
00014fe5(5): JMP 0x00014c14
00014fea(7): TEST R15D,0x80000
00014ff1(5): MOV EAX,0x2
00014ff6(6): JNZ 0x00014c14
00014ffc(4): MOV byte ptr [RBP + 0x8],0x21
00015000(5): JMP 0x00014c14
00015005(7): TEST R15D,0x80000
0001500c(5): MOV EAX,0x2
00015011(6): JNZ 0x00014c14
00015017(4): MOV byte ptr [RBP + 0x8],0x23
0001501b(5): JMP 0x00014c14
00015020(7): TEST R15D,0x80000
00015027(5): MOV EAX,0x2
0001502c(6): JNZ 0x00014c14
00015032(4): MOV byte ptr [RBP + 0x8],0xc
00015036(7): MOV dword ptr [RBP],0x200
0001503d(5): JMP 0x00014c14
00015042(7): AND R15D,0x402
00015049(5): MOV EAX,0x2
0001504e(4): CMP R15,0x2
00015052(6): JNZ 0x00014c14
00015058(5): JMP 0x00014e42
0001505d(7): TEST R15D,0x80000
00015064(5): MOV EAX,0x2
00015069(6): JNZ 0x00014c14
0001506f(4): MOV byte ptr [RBP + 0x8],0xc
00015073(7): MOV dword ptr [RBP],0x9
0001507a(5): JMP 0x00014c14
0001507f(7): TEST R15D,0x80000
00015086(5): MOV EAX,0x2
0001508b(6): JNZ 0x00014c14
00015091(4): MOV byte ptr [RBP + 0x8],0xc
00015095(7): MOV dword ptr [RBP],0x6
0001509c(5): JMP 0x00014c14
000150a1(7): TEST R15D,0x4000
000150a8(5): MOV EAX,0x2
000150ad(6): JNZ 0x00014c14
000150b3(4): MOV EDX,dword ptr [RSP + 0x8]
000150b7(4): MOV byte ptr [RBP + 0x8],0x4
000150bb(3): SUB EDX,0x31
000150be(3): MOVSXD RDX,EDX
000150c1(4): MOV qword ptr [RBP],RDX
000150c5(5): JMP 0x00014c14
000150ca(7): AND R15D,0x402
000150d1(5): MOV EAX,0x2
000150d6(4): CMP R15,0x2
000150da(6): JNZ 0x00014c14
000150e0(5): JMP 0x00014e72
000150e5(7): TEST R15D,0x2000
000150ec(5): MOV EAX,0x2
000150f1(6): JNZ 0x00014c14
000150f7(5): JMP 0x00014ec2
000150fc(7): TEST R15D,0x2000
00015103(5): MOV EAX,0x2
00015108(6): JNZ 0x00014c14
0001510e(5): JMP 0x00014ee2
00015113(7): TEST R15D,0x80000
0001511a(5): MOV EAX,0x2
0001511f(6): JNZ 0x00014c14
00015125(4): MOV byte ptr [RBP + 0x8],0xc
00015129(7): MOV dword ptr [RBP],0x80
00015130(5): JMP 0x00014c14
00015135(5): MOV EAX,0x2
0001513a(5): JMP 0x00014c14
00015140(5): CALL 0x000020e0
00015145(3): MOV RSI,qword ptr [RAX]
00015148(4): MOVZX EDX,R12B
0001514c(4): MOVZX EAX,word ptr [RSI + RDX*0x2]
00015150(4): SHR AX,0x3
00015154(3): AND EAX,0x1
00015157(4): CMP R12B,0x5f
0001515b(5): JMP 0x00014d1a
00015160(3): CMP EAX,0x1
00015163(2): JLE 0x00015194
00015165(4): MOV RCX,qword ptr [RBX + 0x10]
00015169(8): LEA RDI,[RSI*0x4]
00015171(4): MOV R8D,dword ptr [RCX + RSI*0x4]
00015175(4): CMP R8D,-0x1
00015179(6): JZ 0x0001522f
0001517f(4): LEA R9,[R14 + 0x2]
00015183(4): CMP qword ptr [RBX + 0x30],R9
00015187(2): JZ 0x00015194
00015189(5): CMP dword ptr [RCX + RDI*0x1 + 0x4],-0x1
0001518e(6): JZ 0x0001522f
00015194(7): CMP byte ptr [0x8c + RBX],0x0
0001519b(3): MOV RCX,qword ptr [RBX]
0001519e(4): MOV RDI,qword ptr [RBX + 0x28]
000151a2(2): JZ 0x000151e8
000151a4(4): MOV R8,qword ptr [RBX + 0x18]
000151a8(3): ADD RCX,RDI
000151ab(4): ADD RCX,qword ptr [R8 + RSI*0x8]
000151af(3): MOVZX EDI,byte ptr [RCX]
000151b2(3): MOV R12D,EDI
000151b5(4): MOV dword ptr [RSP + 0x8],EDI
000151b9(6): AND EDI,0x80
000151bf(6): JNZ 0x00014cdb
000151c5(5): JMP 0x00014ce8
000151ca(6): CMP byte ptr [RDX + R14*0x1 + -0x1],0xa
000151d0(6): JNZ 0x00014dbc
000151d6(7): TEST R15D,0x800
000151dd(6): JZ 0x00014dbc
000151e3(5): JMP 0x00014e0a
000151e8(3): ADD RCX,RSI
000151eb(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
000151ef(3): MOV R12D,EDI
000151f2(4): MOV dword ptr [RSP + 0x8],EDI
000151f6(5): JMP 0x00014ce8
000151fb(5): LEA RDI,[RSP + 0x10]
00015200(3): MOV RDX,R15
00015203(4): MOV qword ptr [RBX + 0x48],R14
00015207(3): MOV RSI,RBX
0001520a(5): CALL 0x00014b50
0001520f(5): MOVZX EAX,byte ptr [RSP + 0x18]
00015214(5): SUB qword ptr [RBX + 0x48],0x1
00015219(3): LEA EDX,[RAX + -0x9]
0001521c(5): MOV EAX,0x1
00015221(3): CMP DL,0x1
00015224(6): JA 0x00014c14
0001522a(5): JMP 0x00014f04
0001522f(6): MOVZX EAX,byte ptr [RDX + R14*0x1 + 0x1]
00015235(4): MOV byte ptr [RBP + 0x8],0x1
00015239(3): MOV R12D,EAX
0001523c(3): MOV byte ptr [RBP],AL
0001523f(4): MOV dword ptr [RSP + 0x8],EAX
00015243(5): JMP 0x00014d01
00015248(5): CALL 0x00001db0
0001524d(3): NOP dword ptr [RAX]
00015250(2): PUSH R14
00015252(3): MOV R14,RDI
00015255(2): PUSH R13
00015257(3): MOV R13,RSI
0001525a(2): PUSH R12
0001525c(7): MOV R12,-0x2
00015263(1): PUSH RBP
00015264(3): MOV RBP,RDX
00015267(1): PUSH RBX
00015268(7): MOV RBX,-0x1
0001526f(1): NOP
00015270(3): MOV RDX,RBP
00015273(3): MOV RSI,R14
00015276(3): MOV RDI,R13
00015279(5): CALL 0x00014b50
0001527e(2): CDQE
00015280(4): ADD qword ptr [R14 + 0x48],RAX
00015284(5): MOVZX EAX,byte ptr [R13 + 0x8]
00015289(5): MOVZX EDX,byte ptr [R13]
0001528e(2): CMP AL,0x2
00015290(2): JZ 0x000152e0
00015292(2): CMP AL,0x18
00015294(2): JZ 0x000152e7
00015296(3): CMP DL,0x2c
00015299(2): JZ 0x000152e7
0001529b(2): CMP AL,0x1
0001529d(2): JZ 0x000152a8
0001529f(3): MOV RBX,R12
000152a2(2): JMP 0x00015270
000152a8(3): LEA EAX,[RDX + -0x30]
000152ab(2): CMP AL,0x9
000152ad(2): JA 0x0001529f
000152af(4): CMP RBX,-0x2
000152b3(2): JZ 0x0001529f
000152b5(4): CMP RBX,-0x1
000152b9(2): JZ 0x000152f8
000152bb(4): LEA RAX,[RBX + RBX*0x4]
000152bf(4): LEA RBX,[RDX + RAX*0x2]
000152c3(5): MOV EAX,0x8030
000152c8(7): CMP RBX,0x8030
000152cf(4): CMOVG RBX,RAX
000152d3(4): SUB RBX,0x30
000152d7(2): JMP 0x00015270
000152e0(7): MOV RBX,-0x2
000152e7(3): MOV RAX,RBX
000152ea(1): POP RBX
000152eb(1): POP RBP
000152ec(2): POP R12
000152ee(2): POP R13
000152f0(2): POP R14
000152f2(1): RET
000152f8(3): MOVZX EBX,DL
000152fb(3): SUB EBX,0x30
000152fe(3): MOVSXD RBX,EBX
00015301(5): JMP 0x00015270
00015310(2): PUSH R15
00015312(2): PUSH R14
00015314(2): PUSH R13
00015316(2): PUSH R12
00015318(1): PUSH RBP
00015319(1): PUSH RBX
0001531a(7): SUB RSP,0x128
00015321(5): MOV qword ptr [RSP + 0x20],RCX
00015326(4): MOVZX ECX,byte ptr [RDX + 0x8]
0001532a(9): MOV RAX,qword ptr FS:[0x28]
00015333(8): MOV qword ptr [0x118 + RSP],RAX
0001533b(2): XOR EAX,EAX
0001533d(3): MOV RAX,qword ptr [RSI]
00015340(5): MOV qword ptr [RSP + 0x18],RDX
00015345(5): MOV qword ptr [RSP + 0x40],R9
0001534a(3): CMP CL,0x24
0001534d(5): MOV qword ptr [RSP + 0x10],RAX
00015352(6): JA 0x00015410
00015358(3): MOV RBP,RSI
0001535b(7): LEA RSI,[0x1cb60]
00015362(3): MOVZX EDX,CL
00015365(3): MOV R14,RDI
00015368(4): MOVSXD RAX,dword ptr [RSI + RDX*0x4]
0001536c(3): ADD RAX,RSI
0001536f(2): JMP RAX
00015371(4): MOV RBX,qword ptr [RBP + 0x30]
00015375(5): MOV R15,qword ptr [RSP + 0x20]
0001537a(3): MOV RSI,RDI
0001537d(5): MOV R13,qword ptr [RSP + 0x18]
00015382(4): MOV qword ptr [RSP],R8
00015386(4): LEA RAX,[RBX + 0x1]
0001538a(3): MOV RDX,R15
0001538d(7): OR RDX,0x800000
00015394(3): MOV RDI,R13
00015397(4): MOV qword ptr [RBP + 0x30],RAX
0001539b(5): CALL 0x00014b50
000153a0(2): CDQE
000153a2(4): ADD qword ptr [R14 + 0x48],RAX
000153a6(2): XOR EAX,EAX
000153a8(5): CMP byte ptr [R13 + 0x8],0x9
000153ad(3): MOV RDX,R13
000153b0(6): JZ 0x00015eb0
000153b6(5): MOV R13,qword ptr [RSP + 0x40]
000153bb(4): MOV R8,qword ptr [RSP]
000153bf(3): MOV RCX,R15
000153c2(3): MOV RSI,RBP
000153c5(3): MOV RDI,R14
000153c8(4): ADD R8,0x1
000153cc(3): MOV R9,R13
000153cf(5): CALL 0x00016980
000153d4(4): MOV R11D,dword ptr [R13]
000153d8(3): TEST R11D,R11D
000153db(2): JNZ 0x00015410
000153dd(5): MOV RDX,qword ptr [RSP + 0x18]
000153e2(4): CMP byte ptr [RDX + 0x8],0x9
000153e6(6): JZ 0x00015eb0
000153ec(3): TEST RAX,RAX
000153ef(2): JZ 0x00015402
000153f1(7): LEA RSI,[0xb6d0]
000153f8(2): XOR EDX,EDX
000153fa(3): MOV RDI,RAX
000153fd(5): CALL 0x0000a830
00015402(5): MOV RAX,qword ptr [RSP + 0x40]
00015407(6): MOV dword ptr [RAX],0x8
0001540d(3): NOP dword ptr [RAX]
00015410(9): MOV qword ptr [RSP + 0x28],0x0
00015419(7): NOP dword ptr [RAX]
00015420(8): MOV RDI,qword ptr [0x118 + RSP]
00015428(9): XOR RDI,qword ptr FS:[0x28]
00015431(5): MOV RAX,qword ptr [RSP + 0x28]
00015436(6): JNZ 0x000167ae
0001543c(7): ADD RSP,0x128
00015443(1): POP RBX
00015444(1): POP RBP
00015445(2): POP R12
00015447(2): POP R13
00015449(2): POP R14
0001544b(2): POP R15
0001544d(1): RET
0001544e(9): TEST qword ptr [RSP + 0x20],0x1000000
00015457(6): JNZ 0x000156ad
0001545d(5): MOV RAX,qword ptr [RSP + 0x20]
00015462(2): TEST AL,0x20
00015464(6): JNZ 0x000156ad
0001546a(2): TEST AL,0x10
0001546c(6): JNZ 0x000162d5
00015472(3): CMP CL,0x9
00015475(6): JZ 0x00015e88
0001547b(5): MOV RAX,qword ptr [RSP + 0x10]
00015480(5): MOV R8,qword ptr [RSP + 0x18]
00015485(2): XOR ECX,ECX
00015487(2): XOR EDX,EDX
00015489(7): LEA RSI,[0x80 + RAX]
00015490(4): LEA RDI,[RAX + 0x70]
00015494(5): MOV byte ptr [R8 + 0x8],0x1
00015499(5): CALL 0x0000cc10
0001549e(3): TEST RAX,RAX
000154a1(5): MOV qword ptr [RSP + 0x28],RAX
000154a6(6): JZ 0x00015e78
000154ac(5): MOV RBX,qword ptr [RSP + 0x18]
000154b1(5): MOV RDX,qword ptr [RSP + 0x20]
000154b6(3): MOV RSI,R14
000154b9(8): LEA R15,[0xc0 + RSP]
000154c1(3): MOV RDI,RBX
000154c4(5): CALL 0x00014b50
000154c9(2): CDQE
000154cb(4): ADD qword ptr [R14 + 0x48],RAX
000154cf(4): MOVZX EAX,byte ptr [RBX + 0x8]
000154d3(5): NOP dword ptr [RAX + RAX*0x1]
000154d8(2): CMP AL,0x17
000154da(6): JA 0x00015420
000154e0(2): CMP AL,0x12
000154e2(5): MOV ECX,0x8c0800
000154e7(3): SETZ BL
000154ea(4): BT RCX,RAX
000154ee(6): JNC 0x00015420
000154f4(5): MOV RCX,qword ptr [RSP + 0x18]
000154f9(2): CMP AL,0x17
000154fb(4): MOV RBP,qword ptr [R14 + 0x48]
000154ff(4): MOVDQA XMM0,xmmword ptr [RCX]
00015503(6): JZ 0x00015828
00015509(2): CMP AL,0x13
0001550b(3): MOVZX EBX,BL
0001550e(6): JZ 0x000157c0
00015514(5): MOV RDX,qword ptr [RSP + 0x20]
00015519(5): MOV RDI,qword ptr [RSP + 0x18]
0001551e(3): MOV RSI,R14
00015521(5): CALL 0x00014b50
00015526(2): CDQE
00015528(4): ADD qword ptr [R14 + 0x48],RAX
0001552c(6): CMP qword ptr [RSP + 0x28],0x0
00015532(6): JZ 0x000158c0
00015538(8): MOV qword ptr [RSP],-0x1
00015540(3): TEST RBX,RBX
00015543(5): MOV RBP,qword ptr [RSP + 0x28]
00015548(9): MOV qword ptr [RSP + 0x30],0x0
00015551(6): JG 0x000156d0
00015557(4): CMP byte ptr [RBP + 0x30],0x11
0001555b(6): JZ 0x000158a0
00015561(5): CMP qword ptr [RSP],-0x1
00015566(3): MOV RDX,RBP
00015569(3): MOV R8,R15
0001556c(3): SETZ AL
0001556f(2): XOR ECX,ECX
00015571(3): ADD EAX,0xa
00015574(7): MOV byte ptr [0xc8 + RSP],AL
0001557b(5): MOV RAX,qword ptr [RSP + 0x10]
00015580(4): LEA R12,[RAX + 0x70]
00015584(7): LEA R13,[0x80 + RAX]
0001558b(3): MOV RDI,R12
0001558e(3): MOV RSI,R13
00015591(5): CALL 0x0000cc10
00015596(3): TEST RAX,RAX
00015599(3): MOV RDX,RAX
0001559c(6): JZ 0x00015790
000155a2(4): ADD RBX,0x2
000155a6(4): CMP RBX,qword ptr [RSP]
000155aa(2): JG 0x0001562b
000155ac(5): MOV qword ptr [RSP + 0x48],R14
000155b1(3): MOV R14,RAX
000155b4(5): MOV RSI,qword ptr [RSP + 0x10]
000155b9(3): MOV RDI,RBP
000155bc(5): CALL 0x0000ccf0
000155c1(3): MOV R8,R15
000155c4(3): MOV RBP,RAX
000155c7(3): MOV RCX,RAX
000155ca(3): MOV RDX,R14
000155cd(3): MOV RSI,R13
000155d0(3): MOV RDI,R12
000155d3(8): MOV byte ptr [0xc8 + RSP],0x10
000155db(5): CALL 0x0000cc10
000155e0(3): TEST RBP,RBP
000155e3(6): JZ 0x00015790
000155e9(3): TEST RAX,RAX
000155ec(6): JZ 0x00015790
000155f2(2): XOR ECX,ECX
000155f4(3): MOV R8,R15
000155f7(3): MOV RDX,RAX
000155fa(3): MOV RSI,R13
000155fd(3): MOV RDI,R12
00015600(8): MOV byte ptr [0xc8 + RSP],0xa
00015608(5): CALL 0x0000cc10
0001560d(3): TEST RAX,RAX
00015610(3): MOV R14,RAX
00015613(6): JZ 0x00015790
00015619(4): ADD RBX,0x1
0001561d(4): CMP RBX,qword ptr [RSP]
00015621(2): JLE 0x000155b4
00015623(5): MOV R14,qword ptr [RSP + 0x48]
00015628(3): MOV RDX,RAX
0001562b(5): MOV RAX,qword ptr [RSP + 0x30]
00015630(3): TEST RAX,RAX
00015633(6): JZ 0x000158e0
00015639(3): MOV RCX,RDX
0001563c(3): MOV R8,R15
0001563f(3): MOV RDX,RAX
00015642(3): MOV RSI,R13
00015645(3): MOV RDI,R12
00015648(8): MOV byte ptr [0xc8 + RSP],0x10
00015650(5): CALL 0x0000cc10
00015655(5): MOV RDI,qword ptr [RSP + 0x40]
0001565a(2): MOV EDX,dword ptr [RDI]
0001565c(2): TEST EDX,EDX
0001565e(2): JZ 0x00015669
00015660(3): TEST RAX,RAX
00015663(6): JZ 0x000159bb
00015669(5): MOV qword ptr [RSP + 0x28],RAX
0001566e(9): TEST qword ptr [RSP + 0x20],0x1000000
00015677(5): MOV RAX,qword ptr [RSP + 0x18]
0001567c(4): MOVZX EAX,byte ptr [RAX + 0x8]
00015680(6): JZ 0x000154d8
00015686(2): CMP AL,0xb
00015688(2): JZ 0x00015692
0001568a(2): CMP AL,0x17
0001568c(6): JNZ 0x000154d8
00015692(5): MOV RAX,qword ptr [RSP + 0x28]
00015697(3): TEST RAX,RAX
0001569a(2): JZ 0x000156ad
0001569c(7): LEA RSI,[0xb6d0]
000156a3(2): XOR EDX,EDX
000156a5(3): MOV RDI,RAX
000156a8(5): CALL 0x0000a830
000156ad(5): MOV RAX,qword ptr [RSP + 0x40]
000156b2(9): MOV qword ptr [RSP + 0x28],0x0
000156bb(6): MOV dword ptr [RAX],0xd
000156c1(5): JMP 0x00015420
000156d0(4): CMP RBX,0x1
000156d4(6): JZ 0x00015f0c
000156da(5): MOV RAX,qword ptr [RSP + 0x10]
000156df(3): MOV R13,RBP
000156e2(5): MOV qword ptr [RSP + 0x48],R14
000156e7(7): LEA R12,[0x80 + RAX]
000156ee(4): LEA RDI,[RAX + 0x70]
000156f2(3): MOV RAX,RBP
000156f5(3): MOV R14,RAX
000156f8(5): MOV EBP,0x2
000156fd(3): MOV RSI,R12
00015700(5): MOV qword ptr [RSP + 0x30],RDI
00015705(3): MOV R12,R13
00015708(3): MOV R13,RBX
0001570b(3): MOV RBX,RSI
0001570e(2): NOP
00015710(5): MOV RSI,qword ptr [RSP + 0x10]
00015715(3): MOV RDI,R12
00015718(5): CALL 0x0000ccf0
0001571d(5): MOV RDI,qword ptr [RSP + 0x30]
00015722(3): MOV R12,RAX
00015725(3): MOV RDX,R14
00015728(3): MOV R8,R15
0001572b(3): MOV RCX,RAX
0001572e(3): MOV RSI,RBX
00015731(8): MOV byte ptr [0xc8 + RSP],0x10
00015739(5): CALL 0x0000cc10
0001573e(3): TEST R12,R12
00015741(3): MOV R14,RAX
00015744(2): JZ 0x00015790
00015746(3): TEST RAX,RAX
00015749(2): JZ 0x00015790
0001574b(4): ADD RBP,0x1
0001574f(3): CMP RBP,R13
00015752(2): JLE 0x00015710
00015754(5): MOV R14,qword ptr [RSP + 0x48]
00015759(3): MOV RBX,R13
0001575c(5): MOV qword ptr [RSP + 0x30],RAX
00015761(3): MOV R13,R12
00015764(4): CMP qword ptr [RSP],RBX
00015768(6): JZ 0x000158d4
0001576e(5): MOV RSI,qword ptr [RSP + 0x10]
00015773(3): MOV RDI,R13
00015776(5): CALL 0x0000ccf0
0001577b(3): TEST RAX,RAX
0001577e(3): MOV RBP,RAX
00015781(6): JNZ 0x00015557
00015787(9): NOP word ptr [RAX + RAX*0x1]
00015790(5): MOV RAX,qword ptr [RSP + 0x40]
00015795(6): MOV dword ptr [RAX],0xc
0001579b(5): MOV RDI,qword ptr [RSP + 0x28]
000157a0(7): LEA RSI,[0xb6d0]
000157a7(2): XOR EDX,EDX
000157a9(5): CALL 0x0000a830
000157ae(9): MOV qword ptr [RSP + 0x28],0x0
000157b7(5): JMP 0x00015420
000157c0(8): MOV qword ptr [RSP],0x1
000157c8(5): MOV RDX,qword ptr [RSP + 0x20]
000157cd(5): MOV RDI,qword ptr [RSP + 0x18]
000157d2(3): MOV RSI,R14
000157d5(5): CALL 0x00014b50
000157da(2): CDQE
000157dc(4): ADD qword ptr [R14 + 0x48],RAX
000157e0(6): CMP qword ptr [RSP + 0x28],0x0
000157e6(6): JZ 0x000158c0
000157ec(4): MOV RAX,qword ptr [RSP]
000157f0(3): OR RAX,RBX
000157f3(6): JNZ 0x00015540
000157f9(5): MOV RDI,qword ptr [RSP + 0x28]
000157fe(7): LEA RSI,[0xb6d0]
00015805(2): XOR EDX,EDX
00015807(5): CALL 0x0000a830
0001580c(5): MOV RAX,qword ptr [RSP + 0x40]
00015811(2): MOV ESI,dword ptr [RAX]
00015813(2): TEST ESI,ESI
00015815(2): JNZ 0x0001579b
00015817(9): MOV qword ptr [RSP + 0x28],0x0
00015820(5): JMP 0x0001566e
00015828(5): MOV RDX,qword ptr [RSP + 0x20]
0001582d(3): MOV RSI,RCX
00015830(3): MOV RDI,R14
00015833(4): MOVAPS xmmword ptr [RSP],XMM0
00015837(5): CALL 0x00015250
0001583c(4): CMP RAX,-0x1
00015840(3): MOV RBX,RAX
00015843(5): MOVDQA XMM0,xmmword ptr [RSP]
00015848(6): JZ 0x000158f0
0001584e(4): CMP RAX,-0x2
00015852(2): JZ 0x0001586d
00015854(5): MOV RAX,qword ptr [RSP + 0x18]
00015859(4): MOVZX EAX,byte ptr [RAX + 0x8]
0001585d(2): CMP AL,0x18
0001585f(6): JZ 0x00015980
00015865(2): CMP AL,0x1
00015867(6): JZ 0x00015993
0001586d(9): TEST qword ptr [RSP + 0x20],0x200000
00015876(6): JZ 0x000167b3
0001587c(5): MOV RAX,qword ptr [RSP + 0x18]
00015881(4): MOV qword ptr [R14 + 0x48],RBP
00015885(3): MOVAPS xmmword ptr [RAX],XMM0
00015888(4): MOV byte ptr [RAX + 0x8],0x1
0001588c(5): MOV RAX,qword ptr [RSP + 0x28]
00015891(5): JMP 0x00015655
000158a0(4): MOV RDX,qword ptr [RBP + 0x28]
000158a4(7): LEA RSI,[0xa570]
000158ab(3): MOV RDI,RBP
000158ae(5): CALL 0x0000a830
000158b3(5): JMP 0x00015561
000158c0(5): MOV RAX,qword ptr [RSP + 0x40]
000158c5(2): MOV ECX,dword ptr [RAX]
000158c7(2): TEST ECX,ECX
000158c9(6): JZ 0x00015817
000158cf(5): JMP 0x00015410
000158d4(5): MOV RDX,qword ptr [RSP + 0x30]
000158d9(7): NOP dword ptr [RAX]
000158e0(5): MOV qword ptr [RSP + 0x28],RDX
000158e5(5): JMP 0x0001566e
000158f0(5): MOV RAX,qword ptr [RSP + 0x18]
000158f5(4): CMP byte ptr [RAX + 0x8],0x1
000158f9(6): JNZ 0x000159b0
000158ff(5): MOV RAX,qword ptr [RSP + 0x18]
00015904(3): CMP byte ptr [RAX],0x2c
00015907(6): JNZ 0x000159b0
0001590d(2): XOR EBX,EBX
0001590f(5): MOV RDX,qword ptr [RSP + 0x20]
00015914(5): MOV RSI,qword ptr [RSP + 0x18]
00015919(3): MOV RDI,R14
0001591c(5): MOVAPS xmmword ptr [RSP + 0x30],XMM0
00015921(5): CALL 0x00015250
00015926(4): CMP RAX,-0x2
0001592a(4): MOV qword ptr [RSP],RAX
0001592e(6): MOVDQA XMM0,xmmword ptr [RSP + 0x30]
00015934(6): JZ 0x0001586d
0001593a(4): MOV RAX,qword ptr [RSP]
0001593e(4): CMP RAX,-0x1
00015942(2): JZ 0x00015949
00015944(3): CMP RAX,RBX
00015947(2): JL 0x000159b0
00015949(5): MOV RAX,qword ptr [RSP + 0x18]
0001594e(4): CMP byte ptr [RAX + 0x8],0x18
00015952(2): JNZ 0x000159b0
00015954(5): CMP qword ptr [RSP],-0x1
00015959(2): JNZ 0x00015984
0001595b(2): XOR EAX,EAX
0001595d(7): CMP RBX,0x7fff
00015964(3): SETG AL
00015967(3): TEST RAX,RAX
0001596a(6): JZ 0x000157c8
00015970(5): MOV RAX,qword ptr [RSP + 0x40]
00015975(6): MOV dword ptr [RAX],0xf
0001597b(2): JMP 0x000159bb
00015980(4): MOV qword ptr [RSP],RBX
00015984(2): XOR EAX,EAX
00015986(8): CMP qword ptr [RSP],0x7fff
0001598e(3): SETG AL
00015991(2): JMP 0x00015967
00015993(5): MOV RAX,qword ptr [RSP + 0x18]
00015998(3): CMP byte ptr [RAX],0x2c
0001599b(6): JZ 0x0001590f
000159a1(9): TEST qword ptr [RSP + 0x20],0x200000
000159aa(6): JNZ 0x0001587c
000159b0(5): MOV RAX,qword ptr [RSP + 0x40]
000159b5(6): MOV dword ptr [RAX],0xa
000159bb(6): CMP qword ptr [RSP + 0x28],0x0
000159c1(6): JNZ 0x0001579b
000159c7(5): JMP 0x00015410
000159d0(5): MOV RAX,qword ptr [RSP + 0x18]
000159d5(2): MOV EBP,dword ptr [RAX]
000159d7(6): TEST EBP,0x30f
000159dd(2): JZ 0x00015a41
000159df(5): MOV RAX,qword ptr [RSP + 0x10]
000159e4(7): MOVZX EAX,byte ptr [0xb0 + RAX]
000159eb(2): TEST AL,0x10
000159ed(2): JNZ 0x00015a41
000159ef(5): MOV RDI,qword ptr [RSP + 0x10]
000159f4(3): OR EAX,0x10
000159f7(2): TEST AL,0x8
000159f9(6): MOV byte ptr [0xb0 + RDI],AL
000159ff(6): JNZ 0x00016603
00015a05(10): MOV RDX,0x3ff000000000000
00015a0f(2): TEST AL,0x4
00015a11(7): MOV qword ptr [0xb8 + RDI],RDX
00015a18(10): MOV RDX,0x7fffffe87fffffe
00015a22(7): MOV qword ptr [0xc0 + RDI],RDX
00015a29(6): JZ 0x00016588
00015a2f(4): PXOR XMM0,XMM0
00015a33(5): MOV RAX,qword ptr [RSP + 0x18]
00015a38(7): MOVUPS xmmword ptr [0xc8 + RDI],XMM0
00015a3f(2): MOV EBP,dword ptr [RAX]
00015a41(5): MOV RAX,qword ptr [RSP + 0x10]
00015a46(4): LEA RBX,[RAX + 0x70]
00015a4a(7): LEA R12,[0x80 + RAX]
00015a51(6): LEA EAX,[-0x100 + RBP]
00015a57(5): TEST EAX,0xfffffeff
00015a5c(6): JNZ 0x000160ca
00015a62(6): CMP EBP,0x100
00015a68(5): MOV R15,qword ptr [RSP + 0x18]
00015a6d(6): JZ 0x000160a2
00015a73(7): MOV dword ptr [R15],0x5
00015a7a(3): MOV R8,R15
00015a7d(2): XOR ECX,ECX
00015a7f(2): XOR EDX,EDX
00015a81(3): MOV RSI,R12
00015a84(3): MOV RDI,RBX
00015a87(5): CALL 0x0000cc10
00015a8c(7): MOV dword ptr [R15],0xa
00015a93(3): MOV RBP,RAX
00015a96(5): MOV R8,qword ptr [RSP + 0x18]
00015a9b(2): XOR ECX,ECX
00015a9d(2): XOR EDX,EDX
00015a9f(3): MOV RSI,R12
00015aa2(3): MOV RDI,RBX
00015aa5(5): CALL 0x0000cc10
00015aaa(8): LEA R8,[0xc0 + RSP]
00015ab2(3): MOV RDX,RBP
00015ab5(3): MOV RDI,RBX
00015ab8(3): MOV RCX,RAX
00015abb(3): MOV RSI,R12
00015abe(3): MOV R13,RAX
00015ac1(8): MOV byte ptr [0xc8 + RSP],0xa
00015ac9(5): CALL 0x0000cc10
00015ace(3): TEST RBP,RBP
00015ad1(3): MOV RDI,RAX
00015ad4(5): MOV qword ptr [RSP + 0x28],RAX
00015ad9(3): SETZ DL
00015adc(3): TEST R13,R13
00015adf(3): SETZ AL
00015ae2(2): OR DL,AL
00015ae4(6): JNZ 0x00015e78
00015aea(3): TEST RDI,RDI
00015aed(6): JZ 0x00015e78
00015af3(5): MOV RDX,qword ptr [RSP + 0x20]
00015af8(5): MOV RDI,qword ptr [RSP + 0x18]
00015afd(3): MOV RSI,R14
00015b00(5): CALL 0x00014b50
00015b05(2): CDQE
00015b07(4): ADD qword ptr [R14 + 0x48],RAX
00015b0b(5): JMP 0x00015420
00015b10(5): MOV ESI,0x1
00015b15(5): MOV EDI,0x20
00015b1a(12): MOV qword ptr [0x98 + RSP],0x0
00015b26(5): CALL 0x00001ec0
00015b2b(5): MOV ESI,0x1
00015b30(3): MOV R12,RAX
00015b33(5): MOV EDI,0x50
00015b38(5): CALL 0x00001ec0
00015b3d(3): TEST R12,R12
00015b40(3): MOV R13,RAX
00015b43(3): SETZ DL
00015b46(3): TEST RAX,RAX
00015b49(3): SETZ AL
00015b4c(2): OR DL,AL
00015b4e(6): JNZ 0x00016329
00015b54(5): MOV R10,qword ptr [RSP + 0x18]
00015b59(5): MOV RDX,qword ptr [RSP + 0x20]
00015b5e(3): MOV RSI,R14
00015b61(3): MOV RDI,R10
00015b64(5): CALL 0x0000a440
00015b69(3): MOVSXD RBX,EAX
00015b6c(5): MOVZX EAX,byte ptr [R10 + 0x8]
00015b71(2): CMP AL,0x2
00015b73(6): JZ 0x00016319
00015b79(2): CMP AL,0x19
00015b7b(5): MOV byte ptr [RSP + 0x57],0x0
00015b80(6): JZ 0x0001604a
00015b86(2): CMP AL,0x15
00015b88(6): JZ 0x00016094
00015b8e(8): LEA RAX,[0xd0 + RSP]
00015b96(5): MOV R15,qword ptr [RSP + 0x18]
00015b9b(7): LEA RBP,[0x1cbf4]
00015ba2(9): MOV qword ptr [RSP + 0x48],0x0
00015bab(6): MOV R9D,0x1
00015bb1(9): MOV qword ptr [RSP + 0x30],0x0
00015bba(5): MOV qword ptr [RSP + 0x28],RAX
00015bbf(8): LEA RAX,[0xa0 + RSP]
00015bc7(4): MOV qword ptr [RSP],RAX
00015bcb(8): LEA RAX,[0x98 + RSP]
00015bd3(5): MOV qword ptr [RSP + 0x58],RAX
00015bd8(8): LEA RAX,[0xc0 + RSP]
00015be0(5): MOV qword ptr [RSP + 0x60],RAX
00015be5(8): LEA RAX,[0xf0 + RSP]
00015bed(5): MOV qword ptr [RSP + 0x68],RAX
00015bf2(5): MOV RAX,qword ptr [RSP + 0x28]
00015bf7(5): MOV R8,qword ptr [RSP + 0x20]
00015bfc(4): AND R9D,0x1
00015c00(4): MOV RDI,qword ptr [RSP]
00015c04(2): MOV ECX,EBX
00015c06(3): MOV RDX,R15
00015c09(3): MOV RSI,R14
00015c0c(11): MOV dword ptr [0xa0 + RSP],0x3
00015c17(8): MOV qword ptr [0xa8 + RSP],RAX
00015c1f(5): CALL 0x000148f0
00015c24(2): TEST EAX,EAX
00015c26(6): JNZ 0x0001610b
00015c2c(5): MOV RDX,qword ptr [RSP + 0x20]
00015c31(3): MOV RSI,R14
00015c34(3): MOV RDI,R15
00015c37(5): CALL 0x0000a440
00015c3c(3): MOVSXD RBX,EAX
00015c3f(7): MOV EAX,dword ptr [0xa0 + RSP]
00015c46(3): LEA EDX,[RAX + -0x2]
00015c49(3): AND EDX,0xfffffffd
00015c4c(2): JZ 0x00015c65
00015c4e(5): MOVZX EDX,byte ptr [R15 + 0x8]
00015c53(3): CMP DL,0x2
00015c56(6): JZ 0x000160f1
00015c5c(3): CMP DL,0x16
00015c5f(6): JZ 0x00016117
00015c65(3): CMP EAX,0x4
00015c68(6): JA 0x0001660a
00015c6e(5): MOVSXD RAX,dword ptr [RBP + RAX*0x4]
00015c73(3): ADD RAX,RBP
00015c76(2): JMP RAX
00015c78(5): MOV RBX,qword ptr [RSP + 0x40]
00015c7d(3): CMP CL,0x23
00015c80(4): MOV RSI,qword ptr [RDI + 0x78]
00015c84(4): SETZ R8B
00015c88(7): LEA RCX,[0x1c27b]
00015c8f(7): LEA RDX,[0x1c75f]
00015c96(4): MOVZX R8D,R8B
00015c9a(3): MOV R9,RBX
00015c9d(5): MOV RDI,qword ptr [RSP + 0x10]
00015ca2(5): CALL 0x0000ff60
00015ca7(2): MOV EDI,dword ptr [RBX]
00015ca9(5): MOV qword ptr [RSP + 0x28],RAX
00015cae(2): TEST EDI,EDI
00015cb0(6): JZ 0x000154ac
00015cb6(3): TEST RAX,RAX
00015cb9(6): JNZ 0x000154ac
00015cbf(5): JMP 0x00015410
00015cc8(5): MOV RBX,qword ptr [RSP + 0x40]
00015ccd(3): CMP CL,0x21
00015cd0(4): MOV RSI,qword ptr [RDI + 0x78]
00015cd4(4): SETZ R8B
00015cd8(7): LEA RCX,[0x1b7e2]
00015cdf(7): LEA RDX,[0x1c753]
00015ce6(4): MOVZX R8D,R8B
00015cea(3): MOV R9,RBX
00015ced(2): JMP 0x00015c9d
00015cef(5): MOV RAX,qword ptr [RSP + 0x18]
00015cf4(5): MOV RDI,qword ptr [RSP + 0x10]
00015cf9(3): MOV RCX,qword ptr [RAX]
00015cfc(5): MOV EAX,0x1
00015d01(2): SHL EAX,CL
00015d03(2): CDQE
00015d05(7): TEST qword ptr [0xa8 + RDI],RAX
00015d0c(6): JZ 0x0001633e
00015d12(5): MOV RBX,qword ptr [RSP + 0x10]
00015d17(5): MOV R8,qword ptr [RSP + 0x18]
00015d1c(2): XOR ECX,ECX
00015d1e(2): XOR EDX,EDX
00015d20(7): OR qword ptr [0xa0 + RBX],RAX
00015d27(7): LEA RSI,[0x80 + RBX]
00015d2e(4): LEA RDI,[RBX + 0x70]
00015d32(5): CALL 0x0000cc10
00015d37(3): TEST RAX,RAX
00015d3a(5): MOV qword ptr [RSP + 0x28],RAX
00015d3f(6): JZ 0x00015e78
00015d45(8): ADD qword ptr [0x98 + RBX],0x1
00015d4d(7): OR byte ptr [0xb0 + RBX],0x2
00015d54(5): JMP 0x000154ac
00015d59(5): MOV RBX,qword ptr [RSP + 0x10]
00015d5e(5): MOV R8,qword ptr [RSP + 0x18]
00015d63(2): XOR ECX,ECX
00015d65(2): XOR EDX,EDX
00015d67(7): LEA RSI,[0x80 + RBX]
00015d6e(4): LEA RDI,[RBX + 0x70]
00015d72(5): CALL 0x0000cc10
00015d77(3): TEST RAX,RAX
00015d7a(5): MOV qword ptr [RSP + 0x28],RAX
00015d7f(6): JZ 0x00015e78
00015d85(7): CMP dword ptr [0xb4 + RBX],0x1
00015d8c(6): JLE 0x000154ac
00015d92(7): OR byte ptr [0xb0 + RBX],0x2
00015d99(5): JMP 0x000154ac
00015d9e(5): MOV RAX,qword ptr [RSP + 0x10]
00015da3(5): MOV R8,qword ptr [RSP + 0x18]
00015da8(2): XOR ECX,ECX
00015daa(2): XOR EDX,EDX
00015dac(4): LEA RBX,[RAX + 0x70]
00015db0(7): LEA RBP,[0x80 + RAX]
00015db7(3): MOV RDI,RBX
00015dba(3): MOV RSI,RBP
00015dbd(5): CALL 0x0000cc10
00015dc2(3): TEST RAX,RAX
00015dc5(5): MOV qword ptr [RSP + 0x28],RAX
00015dca(6): JZ 0x00015e78
00015dd0(5): MOV RAX,qword ptr [RSP + 0x10]
00015dd5(8): LEA R12,[0xc0 + RSP]
00015ddd(5): MOV R15,qword ptr [RSP + 0x28]
00015de2(7): CMP dword ptr [0xb4 + RAX],0x1
00015de9(6): JLE 0x000154ac
00015def(4): MOV RAX,qword ptr [R14 + 0x48]
00015df3(4): CMP qword ptr [R14 + 0x68],RAX
00015df7(6): JLE 0x00016101
00015dfd(4): CMP RAX,qword ptr [R14 + 0x30]
00015e01(6): JZ 0x00016101
00015e07(4): MOV RDX,qword ptr [R14 + 0x10]
00015e0b(4): CMP dword ptr [RDX + RAX*0x4],-0x1
00015e0f(6): JNZ 0x00016101
00015e15(5): MOV R13,qword ptr [RSP + 0x18]
00015e1a(5): MOV RDX,qword ptr [RSP + 0x20]
00015e1f(3): MOV RSI,R14
00015e22(3): MOV RDI,R13
00015e25(5): CALL 0x00014b50
00015e2a(2): CDQE
00015e2c(4): ADD qword ptr [R14 + 0x48],RAX
00015e30(3): MOV R8,R13
00015e33(2): XOR ECX,ECX
00015e35(2): XOR EDX,EDX
00015e37(3): MOV RSI,RBP
00015e3a(3): MOV RDI,RBX
00015e3d(5): CALL 0x0000cc10
00015e42(3): MOV RDX,R15
00015e45(3): MOV R13,RAX
00015e48(3): MOV R8,R12
00015e4b(3): MOV RCX,RAX
00015e4e(3): MOV RSI,RBP
00015e51(3): MOV RDI,RBX
00015e54(8): MOV byte ptr [0xc8 + RSP],0x10
00015e5c(5): CALL 0x0000cc10
00015e61(3): TEST R13,R13
00015e64(3): MOV R15,RAX
00015e67(3): SETZ DL
00015e6a(3): TEST RAX,RAX
00015e6d(3): SETZ AL
00015e70(2): OR DL,AL
00015e72(6): JZ 0x00015def
00015e78(5): MOV RAX,qword ptr [RSP + 0x40]
00015e7d(6): MOV dword ptr [RAX],0xc
00015e83(5): JMP 0x00015410
00015e88(9): TEST qword ptr [RSP + 0x20],0x20000
00015e91(6): JNZ 0x0001547b
00015e97(5): MOV RAX,qword ptr [RSP + 0x40]
00015e9c(9): MOV qword ptr [RSP + 0x28],0x0
00015ea5(6): MOV dword ptr [RAX],0x10
00015eab(5): JMP 0x00015420
00015eb0(4): CMP RBX,0x8
00015eb4(2): JBE 0x00015f1b
00015eb6(5): MOV RDI,qword ptr [RSP + 0x10]
00015ebb(8): LEA R8,[0xc0 + RSP]
00015ec3(2): XOR ECX,ECX
00015ec5(3): MOV RDX,RAX
00015ec8(8): MOV byte ptr [0xc8 + RSP],0x11
00015ed0(7): LEA RSI,[0x80 + RDI]
00015ed7(4): ADD RDI,0x70
00015edb(5): CALL 0x0000cc10
00015ee0(3): TEST RAX,RAX
00015ee3(5): MOV qword ptr [RSP + 0x28],RAX
00015ee8(2): JZ 0x00015e78
00015eea(4): MOV qword ptr [RAX + 0x28],RBX
00015eee(5): JMP 0x000154ac
00015ef3(5): MOV RAX,qword ptr [RSP + 0x40]
00015ef8(9): MOV qword ptr [RSP + 0x28],0x0
00015f01(6): MOV dword ptr [RAX],0x5
00015f07(5): JMP 0x00015420
00015f0c(5): MOV R13,qword ptr [RSP + 0x28]
00015f11(5): MOV qword ptr [RSP + 0x30],R13
00015f16(5): JMP 0x00015764
00015f1b(5): MOV RSI,qword ptr [RSP + 0x10]
00015f20(5): MOV EDX,0x1
00015f25(2): MOV ECX,EBX
00015f27(2): SHL EDX,CL
00015f29(3): MOVSXD RDX,EDX
00015f2c(7): OR qword ptr [0xa8 + RSI],RDX
00015f33(2): JMP 0x00015eb6
00015f35(8): MOV RSI,qword ptr [0xa8 + RSP]
00015f3d(3): MOV RDI,R12
00015f40(5): CALL 0x0000f700
00015f45(5): MOV RDX,qword ptr [RSP + 0x40]
00015f4a(2): TEST EAX,EAX
00015f4c(2): MOV dword ptr [RDX],EAX
00015f4e(2): JNZ 0x00015f88
00015f50(5): MOVZX EAX,byte ptr [R15 + 0x8]
00015f55(2): CMP AL,0x2
00015f57(6): JZ 0x000160f1
00015f5d(2): CMP AL,0x15
00015f5f(6): JZ 0x00016372
00015f65(3): XOR R9D,R9D
00015f68(5): JMP 0x00015bf2
00015f6d(8): MOV RSI,qword ptr [0xa8 + RSP]
00015f75(3): MOV RDI,R12
00015f78(5): CALL 0x0000f700
00015f7d(5): MOV RDX,qword ptr [RSP + 0x40]
00015f82(2): TEST EAX,EAX
00015f84(2): MOV dword ptr [RDX],EAX
00015f86(2): JZ 0x00015f50
00015f88(3): MOV RDI,R12
00015f8b(5): CALL 0x00001c60
00015f90(3): MOV RDI,R13
00015f93(5): CALL 0x0000b670
00015f98(5): MOV RAX,qword ptr [RSP + 0x40]
00015f9d(3): MOV R8D,dword ptr [RAX]
00015fa0(3): TEST R8D,R8D
00015fa3(6): JNZ 0x00015410
00015fa9(9): MOV qword ptr [RSP + 0x28],0x0
00015fb2(5): JMP 0x000154ac
00015fb7(4): MOV RDX,qword ptr [R13 + 0x28]
00015fbb(5): CMP RDX,qword ptr [RSP + 0x30]
00015fc0(4): MOV RAX,qword ptr [R13]
00015fc4(6): JZ 0x000164be
00015fca(4): LEA RCX,[RDX + 0x1]
00015fce(4): MOV qword ptr [R13 + 0x28],RCX
00015fd2(7): MOV ECX,dword ptr [0xa8 + RSP]
00015fd9(3): MOV dword ptr [RAX + RDX*0x4],ECX
00015fdc(5): JMP 0x00015f50
00015fe1(8): MOVZX EDX,byte ptr [0xa8 + RSP]
00015fe9(5): MOV ESI,0x1
00015fee(3): MOV RAX,RDX
00015ff1(3): AND EDX,0x3f
00015ff4(4): SHR RAX,0x3
00015ff8(2): MOV ECX,EDX
00015ffa(3): AND EAX,0x18
00015ffd(3): SHL RSI,CL
00016000(4): OR qword ptr [R12 + RAX*0x1],RSI
00016004(5): JMP 0x00015f50
00016009(4): SUB RSP,0x8
0001600d(4): MOV RDI,qword ptr [R14 + 0x78]
00016011(4): LEA RDX,[R13 + 0x18]
00016015(4): PUSH qword ptr [RSP + 0x28]
00016019(8): MOV R9,qword ptr [0xb8 + RSP]
00016021(4): LEA RCX,[R13 + 0x48]
00016025(5): MOV R8,qword ptr [RSP + 0x68]
0001602a(3): MOV RSI,R12
0001602d(5): CALL 0x0000f750
00016032(5): MOV RDX,qword ptr [RSP + 0x50]
00016037(2): TEST EAX,EAX
00016039(2): MOV dword ptr [RDX],EAX
0001603b(2): POP R9
0001603d(2): POP R10
0001603f(6): JZ 0x00015f50
00016045(5): JMP 0x00015f88
0001604a(5): OR byte ptr [R13 + 0x20],0x1
0001604f(9): TEST qword ptr [RSP + 0x20],0x100
00016058(2): JZ 0x00016062
0001605a(8): OR qword ptr [R12],0x400
00016062(4): ADD qword ptr [R14 + 0x48],RBX
00016066(5): MOV R11,qword ptr [RSP + 0x18]
0001606b(3): MOV RSI,R14
0001606e(5): MOV RDX,qword ptr [RSP + 0x20]
00016073(3): MOV RDI,R11
00016076(5): CALL 0x0000a440
0001607b(2): MOV EBX,EAX
0001607d(5): MOVZX EAX,byte ptr [R11 + 0x8]
00016082(2): CMP AL,0x2
00016084(6): JZ 0x00016319
0001608a(5): MOV byte ptr [RSP + 0x57],0x1
0001608f(5): JMP 0x00015b86
00016094(5): MOV RAX,qword ptr [RSP + 0x18]
00016099(4): MOV byte ptr [RAX + 0x8],0x1
0001609d(5): JMP 0x00015b8e
000160a2(7): MOV dword ptr [R15],0x6
000160a9(3): MOV R8,R15
000160ac(2): XOR ECX,ECX
000160ae(2): XOR EDX,EDX
000160b0(3): MOV RSI,R12
000160b3(3): MOV RDI,RBX
000160b6(5): CALL 0x0000cc10
000160bb(7): MOV dword ptr [R15],0x9
000160c2(3): MOV RBP,RAX
000160c5(5): JMP 0x00015a96
000160ca(5): MOV R8,qword ptr [RSP + 0x18]
000160cf(2): XOR ECX,ECX
000160d1(2): XOR EDX,EDX
000160d3(3): MOV RSI,R12
000160d6(3): MOV RDI,RBX
000160d9(5): CALL 0x0000cc10
000160de(3): TEST RAX,RAX
000160e1(5): MOV qword ptr [RSP + 0x28],RAX
000160e6(6): JNZ 0x00015af3
000160ec(5): JMP 0x00015e78
000160f1(5): MOV RAX,qword ptr [RSP + 0x40]
000160f6(6): MOV dword ptr [RAX],0x7
000160fc(5): JMP 0x00015f88
00016101(5): MOV qword ptr [RSP + 0x28],R15
00016106(5): JMP 0x000154ac
0001610b(5): MOV RDX,qword ptr [RSP + 0x40]
00016110(2): MOV dword ptr [RDX],EAX
00016112(5): JMP 0x00015f88
00016117(3): MOVSXD RAX,EBX
0001611a(5): MOV R11,qword ptr [RSP + 0x20]
0001611f(4): ADD qword ptr [R14 + 0x48],RAX
00016123(5): MOV R10,qword ptr [RSP + 0x60]
00016128(3): MOV RDX,R11
0001612b(3): MOV RDI,R10
0001612e(5): CALL 0x0000a440
00016133(8): MOVZX EDX,byte ptr [0xc8 + RSP]
0001613b(3): CMP DL,0x2
0001613e(2): JZ 0x000160f1
00016140(3): CMP DL,0x15
00016143(6): JZ 0x00016357
00016149(5): MOV RDX,qword ptr [RSP + 0x68]
0001614e(8): LEA RDI,[0xb0 + RSP]
00016156(6): MOV R9D,0x1
0001615c(3): MOV R8,R11
0001615f(2): MOV ECX,EAX
00016161(11): MOV dword ptr [0xb0 + RSP],0x3
0001616c(8): MOV qword ptr [0xb8 + RSP],RDX
00016174(3): MOV RDX,R10
00016177(5): CALL 0x000148f0
0001617c(2): TEST EAX,EAX
0001617e(2): JNZ 0x0001610b
00016180(5): MOV RDX,qword ptr [RSP + 0x20]
00016185(3): MOV RSI,R14
00016188(3): MOV RDI,R15
0001618b(5): CALL 0x0000a440
00016190(3): MOVSXD RBX,EAX
00016193(5): MOV RAX,qword ptr [RSP + 0x10]
00016198(7): MOV ESI,dword ptr [0xa0 + RSP]
0001619f(6): MOV R9D,0x0
000161a5(7): CMP dword ptr [0xb4 + RAX],0x1
000161ac(3): LEA EAX,[RSI + -0x2]
000161af(4): CMOVG R9,R13
000161b3(3): AND EAX,0xfffffffd
000161b6(6): JZ 0x00016629
000161bc(8): MOV R10D,dword ptr [0xb0 + RSP]
000161c4(4): LEA EAX,[R10 + -0x2]
000161c8(3): AND EAX,0xfffffffd
000161cb(6): JZ 0x00016629
000161d1(3): CMP ESI,0x3
000161d4(4): SETZ R11B
000161d8(6): JZ 0x0001666d
000161de(4): CMP R10D,0x3
000161e2(6): JZ 0x00016639
000161e8(2): TEST ESI,ESI
000161ea(6): JNZ 0x00016559
000161f0(8): MOVZX EDX,byte ptr [0xa8 + RSP]
000161f8(3): TEST R10D,R10D
000161fb(6): JNZ 0x0001653d
00016201(9): MOVZX R8D,byte ptr [0xb8 + RSP]
0001620a(2): TEST ESI,ESI
0001620c(6): JZ 0x000164f6
00016212(3): TEST R11B,R11B
00016215(6): JNZ 0x000164f6
0001621b(3): TEST R9,R9
0001621e(7): MOV EDX,dword ptr [0xa8 + RSP]
00016225(2): JZ 0x00016244
00016227(3): MOV EDI,R8D
0001622a(4): MOV dword ptr [RSP + 0x78],EDX
0001622e(5): MOV qword ptr [RSP + 0x70],R9
00016233(5): CALL 0x00001fe0
00016238(5): MOV R9,qword ptr [RSP + 0x70]
0001623d(4): MOV EDX,dword ptr [RSP + 0x78]
00016241(3): MOV R8D,EAX
00016244(3): CMP EDX,-0x1
00016247(6): JZ 0x0001665d
0001624d(4): CMP R8D,-0x1
00016251(6): JZ 0x0001665d
00016257(9): TEST qword ptr [RSP + 0x20],0x10000
00016260(2): JZ 0x0001626b
00016262(3): CMP R8D,EDX
00016265(6): JC 0x00016629
0001626b(3): TEST R9,R9
0001626e(2): JZ 0x00016296
00016270(4): MOV RAX,qword ptr [R9 + 0x40]
00016274(5): CMP RAX,qword ptr [RSP + 0x48]
00016279(4): MOV RCX,qword ptr [R9 + 0x8]
0001627d(6): JZ 0x00016693
00016283(3): MOV dword ptr [RCX + RAX*0x4],EDX
00016286(4): MOV RCX,qword ptr [R9 + 0x10]
0001628a(4): LEA RSI,[RAX + 0x1]
0001628e(4): MOV qword ptr [R9 + 0x40],RSI
00016292(4): MOV dword ptr [RCX + RAX*0x4],R8D
00016296(2): XOR EAX,EAX
00016298(5): MOV EDI,0x1
0001629d(2): CMP EDX,EAX
0001629f(2): MOV ECX,EAX
000162a1(2): JA 0x000162b9
000162a3(3): CMP R8D,EAX
000162a6(2): JC 0x000162b9
000162a8(3): MOV RSI,RAX
000162ab(3): MOV R11,RDI
000162ae(4): SAR RSI,0x6
000162b2(3): SHL R11,CL
000162b5(4): OR qword ptr [R12 + RSI*0x8],R11
000162b9(4): ADD RAX,0x1
000162bd(6): CMP RAX,0x100
000162c3(2): JNZ 0x0001629d
000162c5(5): MOV RAX,qword ptr [RSP + 0x40]
000162ca(6): MOV dword ptr [RAX],0x0
000162d0(5): JMP 0x00015f50
000162d5(5): MOV RBX,qword ptr [RSP + 0x18]
000162da(3): MOV RDX,RAX
000162dd(3): MOV RSI,R14
000162e0(4): MOV qword ptr [RSP],R8
000162e4(3): MOV R15,RAX
000162e7(3): MOV RDI,RBX
000162ea(5): CALL 0x00014b50
000162ef(2): CDQE
000162f1(4): ADD qword ptr [R14 + 0x48],RAX
000162f5(5): MOV R9,qword ptr [RSP + 0x40]
000162fa(4): MOV R8,qword ptr [RSP]
000162fe(3): MOV RCX,R15
00016301(3): MOV RDX,RBX
00016304(3): MOV RSI,RBP
00016307(3): MOV RDI,R14
0001630a(5): CALL 0x00015310
0001630f(5): MOV qword ptr [RSP + 0x28],RAX
00016314(5): JMP 0x00015420
00016319(5): MOV RAX,qword ptr [RSP + 0x40]
0001631e(6): MOV dword ptr [RAX],0x2
00016324(5): JMP 0x00015f88
00016329(3): MOV RDI,R12
0001632c(5): CALL 0x00001c60
00016331(3): MOV RDI,R13
00016334(5): CALL 0x00001c60
00016339(5): JMP 0x00015e78
0001633e(5): MOV RAX,qword ptr [RSP + 0x40]
00016343(9): MOV qword ptr [RSP + 0x28],0x0
0001634c(6): MOV dword ptr [RAX],0x6
00016352(5): JMP 0x00015420
00016357(2): MOV EAX,EBX
00016359(2): NEG EAX
0001635b(2): CDQE
0001635d(4): ADD qword ptr [R14 + 0x48],RAX
00016361(5): MOV byte ptr [R15 + 0x8],0x1
00016366(7): MOV EAX,dword ptr [0xa0 + RSP]
0001636d(5): JMP 0x00015c65
00016372(4): ADD qword ptr [R14 + 0x48],RBX
00016376(5): CMP byte ptr [RSP + 0x57],0x0
0001637b(2): JZ 0x00016391
0001637d(5): LEA RDX,[R12 + 0x20]
00016382(3): MOV RAX,R12
00016385(3): NOT qword ptr [RAX]
00016388(4): ADD RAX,0x8
0001638c(3): CMP RDX,RAX
0001638f(2): JNZ 0x00016385
00016391(5): MOV RAX,qword ptr [RSP + 0x10]
00016396(6): MOV EDX,dword ptr [0xb4 + RAX]
0001639c(3): CMP EDX,0x1
0001639f(2): JLE 0x000163b9
000163a1(4): MOV RCX,qword ptr [RAX + 0x78]
000163a5(2): XOR EAX,EAX
000163a7(4): MOV RSI,qword ptr [RCX + RAX*0x1]
000163ab(4): AND qword ptr [R12 + RAX*0x1],RSI
000163af(4): ADD RAX,0x8
000163b3(4): CMP RAX,0x20
000163b7(2): JNZ 0x000163a7
000163b9(5): CMP qword ptr [R13 + 0x28],0x0
000163be(6): JNZ 0x00016448
000163c4(5): CMP qword ptr [R13 + 0x30],0x0
000163c9(2): JNZ 0x00016448
000163cb(5): CMP qword ptr [R13 + 0x38],0x0
000163d0(2): JNZ 0x00016448
000163d2(5): CMP qword ptr [R13 + 0x40],0x0
000163d7(2): JNZ 0x00016448
000163d9(3): SUB EDX,0x1
000163dc(2): JLE 0x000163ec
000163de(5): CMP qword ptr [R13 + 0x48],0x0
000163e3(2): JNZ 0x00016448
000163e5(5): TEST byte ptr [R13 + 0x20],0x1
000163ea(2): JNZ 0x00016448
000163ec(3): MOV RDI,R13
000163ef(5): CALL 0x0000b670
000163f4(5): MOV RAX,qword ptr [RSP + 0x10]
000163f9(8): LEA R8,[0xb0 + RSP]
00016401(2): XOR ECX,ECX
00016403(2): XOR EDX,EDX
00016405(8): MOV byte ptr [0xb8 + RSP],0x3
0001640d(8): MOV qword ptr [0xb0 + RSP],R12
00016415(7): LEA RSI,[0x80 + RAX]
0001641c(4): LEA RDI,[RAX + 0x70]
00016420(5): CALL 0x0000cc10
00016425(3): TEST RAX,RAX
00016428(5): MOV qword ptr [RSP + 0x28],RAX
0001642d(6): JNZ 0x000154ac
00016433(5): MOV RAX,qword ptr [RSP + 0x40]
00016438(6): MOV dword ptr [RAX],0xc
0001643e(5): JMP 0x00015f88
00016448(5): MOV RAX,qword ptr [RSP + 0x10]
0001644d(8): LEA R15,[0xb0 + RSP]
00016455(2): XOR EDX,EDX
00016457(2): XOR ECX,ECX
00016459(3): MOV R8,R15
0001645c(7): OR byte ptr [0xb0 + RAX],0x2
00016463(4): LEA RBX,[RAX + 0x70]
00016467(7): LEA RBP,[0x80 + RAX]
0001646e(8): MOV byte ptr [0xb8 + RSP],0x6
00016476(8): MOV qword ptr [0xb0 + RSP],R13
0001647e(3): MOV RDI,RBX
00016481(3): MOV RSI,RBP
00016484(5): CALL 0x0000cc10
00016489(3): MOV RDI,RAX
0001648c(5): MOV qword ptr [RSP + 0x28],RAX
00016491(5): LEA RDX,[R12 + 0x20]
00016496(3): TEST RDI,RDI
00016499(3): MOV RAX,R12
0001649c(2): JZ 0x00016433
0001649e(4): CMP qword ptr [RAX],0x0
000164a2(6): JNZ 0x0001674d
000164a8(4): ADD RAX,0x8
000164ac(3): CMP RDX,RAX
000164af(2): JNZ 0x0001649e
000164b1(3): MOV RDI,R12
000164b4(5): CALL 0x00001c60
000164b9(5): JMP 0x000154ac
000164be(5): MOV RDX,qword ptr [RSP + 0x30]
000164c3(5): LEA RDI,[RDX + RDX*0x1 + 0x1]
000164c8(8): LEA RSI,[RDI*0x4]
000164d0(5): MOV qword ptr [RSP + 0x30],RDI
000164d5(3): MOV RDI,RAX
000164d8(5): CALL 0x00001f90
000164dd(3): TEST RAX,RAX
000164e0(6): JZ 0x00016433
000164e6(4): MOV qword ptr [R13],RAX
000164ea(4): MOV RDX,qword ptr [R13 + 0x28]
000164ee(5): JMP 0x00015fca
000164f3(3): XOR R8D,R8D
000164f6(3): TEST R9,R9
000164f9(2): JZ 0x00016574
000164fb(2): MOV EDI,EDX
000164fd(5): MOV dword ptr [RSP + 0x78],R8D
00016502(5): MOV qword ptr [RSP + 0x70],R9
00016507(5): CALL 0x00001fe0
0001650c(2): MOV EDX,EAX
0001650e(7): MOV EAX,dword ptr [0xb0 + RSP]
00016515(5): MOV R9,qword ptr [RSP + 0x70]
0001651a(5): MOV R8D,dword ptr [RSP + 0x78]
0001651f(3): CMP EAX,0x3
00016522(6): JZ 0x00016227
00016528(2): TEST EAX,EAX
0001652a(6): JZ 0x00016227
00016530(8): MOV R8D,dword ptr [0xb8 + RSP]
00016538(5): JMP 0x00016244
0001653d(4): CMP R10D,0x3
00016541(6): JZ 0x000167d2
00016547(2): TEST ESI,ESI
00016549(2): JZ 0x000164f3
0001654b(3): TEST R11B,R11B
0001654e(2): JNZ 0x000164f3
00016550(7): MOV EDX,dword ptr [0xa8 + RSP]
00016557(2): JMP 0x00016530
00016559(2): XOR EDX,EDX
0001655b(3): CMP ESI,0x3
0001655e(6): JNZ 0x000161f8
00016564(8): MOV RAX,qword ptr [0xa8 + RSP]
0001656c(3): MOVZX EDX,byte ptr [RAX]
0001656f(5): JMP 0x000161f8
00016574(3): TEST R10D,R10D
00016577(6): JZ 0x00016257
0001657d(4): CMP R10D,0x3
00016581(2): JNZ 0x00016530
00016583(5): JMP 0x00016257
00016588(5): MOV EBX,0x80
0001658d(6): MOV R12D,0x2
00016593(5): CALL 0x000020e0
00016598(3): MOVSXD RDX,EBX
0001659b(3): MOVSXD R9,R12D
0001659e(6): MOV R8D,0x1
000165a4(3): ADD RDX,RDX
000165a7(3): ADD RDX,qword ptr [RAX]
000165aa(5): MOV RAX,qword ptr [RSP + 0x10]
000165af(4): LEA RDI,[RAX + R9*0x8]
000165b3(2): XOR EAX,EAX
000165b5(2): JMP 0x000165d2
000165c0(3): LEA ESI,[RBX + RAX*0x1]
000165c3(3): CMP ESI,0x5f
000165c6(2): JZ 0x000165da
000165c8(4): ADD RAX,0x1
000165cc(4): CMP RAX,0x40
000165d0(2): JZ 0x000165e9
000165d2(4): TEST byte ptr [RDX + RAX*0x2],0x8
000165d6(2): MOV ECX,EAX
000165d8(2): JZ 0x000165c0
000165da(3): MOV RSI,R8
000165dd(3): SHL RSI,CL
000165e0(7): OR qword ptr [0xb8 + RDI],RSI
000165e7(2): JMP 0x000165c8
000165e9(4): ADD R9,0x1
000165ed(3): ADD EBX,0x40
000165f0(4): SUB RDX,-0x80
000165f4(4): ADD RDI,0x8
000165f8(4): CMP R9D,0x3
000165fc(2): JLE 0x000165b3
000165fe(5): JMP 0x00015a41
00016603(2): XOR EBX,EBX
00016605(3): XOR R12D,R12D
00016608(2): JMP 0x00016593
0001660a(7): LEA RCX,[0x1ccd0]
00016611(7): LEA RSI,[0x1c6f0]
00016618(7): LEA RDI,[0x1bcc8]
0001661f(5): MOV EDX,0xced
00016624(5): CALL 0x00001e30
00016629(5): MOV RAX,qword ptr [RSP + 0x40]
0001662e(6): MOV dword ptr [RAX],0xb
00016634(5): JMP 0x00015f88
00016639(8): MOV RDI,qword ptr [0xb8 + RSP]
00016641(2): XOR EAX,EAX
00016643(4): OR RCX,-0x1
00016647(2): SCASB.REPNE RDI
00016649(3): MOV RAX,RCX
0001664c(3): NOT RAX
0001664f(4): SUB RAX,0x1
00016653(4): CMP RAX,0x1
00016657(6): JBE 0x000161e8
0001665d(5): MOV RAX,qword ptr [RSP + 0x40]
00016662(6): MOV dword ptr [RAX],0x3
00016668(5): JMP 0x00015f88
0001666d(8): MOV RDI,qword ptr [0xa8 + RSP]
00016675(2): XOR EAX,EAX
00016677(4): OR RCX,-0x1
0001667b(2): SCASB.REPNE RDI
0001667d(3): MOV RAX,RCX
00016680(3): NOT RAX
00016683(4): SUB RAX,0x1
00016687(4): CMP RAX,0x1
0001668b(6): JBE 0x000161de
00016691(2): JMP 0x0001665d
00016693(5): MOV RAX,qword ptr [RSP + 0x48]
00016698(3): MOV RDI,RCX
0001669b(8): MOV dword ptr [0x8c + RSP],R8D
000166a3(7): MOV dword ptr [0x88 + RSP],EDX
000166aa(5): MOV qword ptr [RSP + 0x70],R9
000166af(3): ADD RAX,RAX
000166b2(4): ADD RAX,0x1
000166b6(8): LEA R10,[RAX*0x4]
000166be(5): MOV qword ptr [RSP + 0x48],RAX
000166c3(3): MOV RSI,R10
000166c6(8): MOV qword ptr [0x80 + RSP],R10
000166ce(5): CALL 0x00001f90
000166d3(5): MOV R9,qword ptr [RSP + 0x70]
000166d8(8): MOV R10,qword ptr [0x80 + RSP]
000166e0(5): MOV qword ptr [RSP + 0x78],RAX
000166e5(4): MOV RDI,qword ptr [R9 + 0x10]
000166e9(3): MOV RSI,R10
000166ec(5): CALL 0x00001f90
000166f1(5): MOV RCX,qword ptr [RSP + 0x78]
000166f6(3): TEST RCX,RCX
000166f9(2): JZ 0x00016725
000166fb(3): TEST RAX,RAX
000166fe(5): MOV R9,qword ptr [RSP + 0x70]
00016703(7): MOV EDX,dword ptr [0x88 + RSP]
0001670a(8): MOV R8D,dword ptr [0x8c + RSP]
00016712(2): JZ 0x00016725
00016714(4): MOV qword ptr [R9 + 0x10],RAX
00016718(4): MOV qword ptr [R9 + 0x8],RCX
0001671c(4): MOV RAX,qword ptr [R9 + 0x40]
00016720(5): JMP 0x00016283
00016725(3): MOV RDI,RCX
00016728(4): MOV qword ptr [RSP],RAX
0001672c(5): CALL 0x00001c60
00016731(4): MOV RAX,qword ptr [RSP]
00016735(3): MOV RDI,RAX
00016738(5): CALL 0x00001c60
0001673d(5): MOV RAX,qword ptr [RSP + 0x40]
00016742(6): MOV dword ptr [RAX],0xc
00016748(5): JMP 0x00015f88
0001674d(2): XOR ECX,ECX
0001674f(2): XOR EDX,EDX
00016751(3): MOV R8,R15
00016754(3): MOV RSI,RBP
00016757(3): MOV RDI,RBX
0001675a(8): MOV byte ptr [0xb8 + RSP],0x3
00016762(8): MOV qword ptr [0xb0 + RSP],R12
0001676a(5): CALL 0x0000cc10
0001676f(3): TEST RAX,RAX
00016772(6): JZ 0x00016433
00016778(5): MOV RCX,qword ptr [RSP + 0x28]
0001677d(8): LEA R8,[0xc0 + RSP]
00016785(3): MOV RDX,RAX
00016788(3): MOV RSI,RBP
0001678b(3): MOV RDI,RBX
0001678e(8): MOV byte ptr [0xc8 + RSP],0xa
00016796(5): CALL 0x0000cc10
0001679b(3): TEST RAX,RAX
0001679e(5): MOV qword ptr [RSP + 0x28],RAX
000167a3(6): JNZ 0x000154ac
000167a9(5): JMP 0x00016433
000167ae(5): CALL 0x00001db0
000167b3(5): MOV RAX,qword ptr [RSP + 0x18]
000167b8(4): CMP byte ptr [RAX + 0x8],0x2
000167bc(6): JNZ 0x000159b0
000167c2(5): MOV RAX,qword ptr [RSP + 0x40]
000167c7(6): MOV dword ptr [RAX],0x9
000167cd(5): JMP 0x000159bb
000167d2(8): MOV RAX,qword ptr [0xb8 + RSP]
000167da(4): MOVZX R8D,byte ptr [RAX]
000167de(5): JMP 0x0001620a
000167f0(2): PUSH R15
000167f2(2): PUSH R14
000167f4(3): MOV R15,RCX
000167f7(2): PUSH R13
000167f9(2): PUSH R12
000167fb(3): MOV R13,RSI
000167fe(1): PUSH RBP
000167ff(1): PUSH RBX
00016800(3): MOV RBX,R9
00016803(3): MOV RBP,RDX
00016806(3): MOV R12,R8
00016809(4): SUB RSP,0x48
0001680d(9): MOV RAX,qword ptr FS:[0x28]
00016816(5): MOV qword ptr [RSP + 0x38],RAX
0001681b(2): XOR EAX,EAX
0001681d(3): MOV RAX,qword ptr [RSI]
00016820(4): MOV qword ptr [RSP],RDI
00016824(5): MOV qword ptr [RSP + 0x10],RAX
00016829(5): CALL 0x00015310
0001682e(2): MOV EDX,dword ptr [RBX]
00016830(3): MOV R14,RAX
00016833(2): TEST EDX,EDX
00016835(2): JZ 0x00016840
00016837(3): TEST RAX,RAX
0001683a(6): JZ 0x0001693a
00016840(5): LEA RAX,[RSP + 0x20]
00016845(5): MOV qword ptr [RSP + 0x18],RAX
0001684a(6): NOP word ptr [RAX + RAX*0x1]
00016850(4): MOVZX EAX,byte ptr [RBP + 0x8]
00016854(2): MOV EDX,EAX
00016856(3): AND EDX,0xfffffff7
00016859(3): CMP DL,0x2
0001685c(6): JZ 0x000168f0
00016862(2): CMP AL,0x9
00016864(2): JNZ 0x0001686f
00016866(3): TEST R12,R12
00016869(6): JNZ 0x000168f0
0001686f(4): MOV RDI,qword ptr [RSP]
00016873(3): MOV R9,RBX
00016876(3): MOV R8,R12
00016879(3): MOV RCX,R15
0001687c(3): MOV RDX,RBP
0001687f(3): MOV RSI,R13
00016882(5): CALL 0x00015310
00016887(3): MOV R9,RAX
0001688a(2): MOV EAX,dword ptr [RBX]
0001688c(2): TEST EAX,EAX
0001688e(2): JZ 0x00016899
00016890(3): TEST R9,R9
00016893(6): JZ 0x00016924
00016899(3): TEST R14,R14
0001689c(2): JZ 0x00016918
0001689e(3): TEST R9,R9
000168a1(2): JZ 0x00016918
000168a3(5): MOV RAX,qword ptr [RSP + 0x10]
000168a8(5): MOV R8,qword ptr [RSP + 0x18]
000168ad(3): MOV RCX,R9
000168b0(3): MOV RDX,R14
000168b3(5): MOV qword ptr [RSP + 0x8],R9
000168b8(5): MOV byte ptr [RSP + 0x28],0x10
000168bd(7): LEA RSI,[0x80 + RAX]
000168c4(4): LEA RDI,[RAX + 0x70]
000168c8(5): CALL 0x0000cc10
000168cd(3): TEST RAX,RAX
000168d0(5): MOV R9,qword ptr [RSP + 0x8]
000168d5(2): JZ 0x00016940
000168d7(3): MOV R14,RAX
000168da(4): MOVZX EAX,byte ptr [RBP + 0x8]
000168de(2): MOV EDX,EAX
000168e0(3): AND EDX,0xfffffff7
000168e3(3): CMP DL,0x2
000168e6(6): JNZ 0x00016862
000168ec(4): NOP dword ptr [RAX]
000168f0(5): MOV RCX,qword ptr [RSP + 0x38]
000168f5(9): XOR RCX,qword ptr FS:[0x28]
000168fe(3): MOV RAX,R14
00016901(2): JNZ 0x0001696d
00016903(4): ADD RSP,0x48
00016907(1): POP RBX
00016908(1): POP RBP
00016909(2): POP R12
0001690b(2): POP R13
0001690d(2): POP R14
0001690f(2): POP R15
00016911(1): RET
00016918(3): TEST R14,R14
0001691b(4): CMOVZ R14,R9
0001691f(5): JMP 0x00016850
00016924(3): TEST R14,R14
00016927(2): JZ 0x0001693a
00016929(7): LEA RSI,[0xb6d0]
00016930(2): XOR EDX,EDX
00016932(3): MOV RDI,R14
00016935(5): CALL 0x0000a830
0001693a(3): XOR R14D,R14D
0001693d(2): JMP 0x000168f0
00016940(7): LEA RSI,[0xb6d0]
00016947(3): MOV RDI,R9
0001694a(2): XOR EDX,EDX
0001694c(5): CALL 0x0000a830
00016951(7): LEA RSI,[0xb6d0]
00016958(3): MOV RDI,R14
0001695b(2): XOR EDX,EDX
0001695d(3): XOR R14D,R14D
00016960(5): CALL 0x0000a830
00016965(6): MOV dword ptr [RBX],0xc
0001696b(2): JMP 0x000168f0
0001696d(5): CALL 0x00001db0
00016972(4): NOP dword ptr [RAX]
00016976(10): NOP word ptr CS:[RAX + RAX*0x1]
00016980(2): PUSH R15
00016982(2): PUSH R14
00016984(3): MOV R14,RCX
00016987(2): PUSH R13
00016989(2): PUSH R12
0001698b(3): MOV R13,R9
0001698e(1): PUSH RBP
0001698f(1): PUSH RBX
00016990(3): MOV RBP,RDX
00016993(3): MOV R12,RDI
00016996(4): SUB RSP,0x58
0001699a(3): MOV RBX,qword ptr [RSI]
0001699d(9): MOV RAX,qword ptr FS:[0x28]
000169a6(5): MOV qword ptr [RSP + 0x48],RAX
000169ab(2): XOR EAX,EAX
000169ad(5): MOV qword ptr [RSP + 0x28],RSI
000169b2(5): MOV qword ptr [RSP + 0x10],R8
000169b7(7): MOV RAX,qword ptr [0xa8 + RBX]
000169be(5): MOV qword ptr [RSP + 0x20],RAX
000169c3(5): CALL 0x000167f0
000169c8(4): MOV EDX,dword ptr [R13]
000169cc(3): MOV R15,RAX
000169cf(2): TEST EDX,EDX
000169d1(2): JZ 0x000169dc
000169d3(3): TEST RAX,RAX
000169d6(6): JZ 0x00016ac2
000169dc(5): LEA RAX,[RSP + 0x30]
000169e1(5): MOV qword ptr [RSP + 0x8],RAX
000169e6(5): JMP 0x00016a74
000169f0(2): CMP AL,0x9
000169f2(2): JNZ 0x00016a00
000169f4(6): CMP qword ptr [RSP + 0x10],0x0
000169fa(6): JNZ 0x00016aa8
00016a00(7): MOV RAX,qword ptr [0xa8 + RBX]
00016a07(5): MOV R8,qword ptr [RSP + 0x10]
00016a0c(3): MOV RCX,R14
00016a0f(5): MOV RSI,qword ptr [RSP + 0x28]
00016a14(3): MOV R9,R13
00016a17(3): MOV RDX,RBP
00016a1a(3): MOV RDI,R12
00016a1d(5): MOV qword ptr [RSP + 0x18],RAX
00016a22(5): MOV RAX,qword ptr [RSP + 0x20]
00016a27(7): MOV qword ptr [0xa8 + RBX],RAX
00016a2e(5): CALL 0x000167f0
00016a33(3): MOV RCX,RAX
00016a36(4): MOV EAX,dword ptr [R13]
00016a3a(2): TEST EAX,EAX
00016a3c(2): JZ 0x00016a43
00016a3e(3): TEST RCX,RCX
00016a41(2): JZ 0x00016aac
00016a43(5): MOV RAX,qword ptr [RSP + 0x18]
00016a48(7): OR qword ptr [0xa8 + RBX],RAX
00016a4f(5): MOV R8,qword ptr [RSP + 0x8]
00016a54(7): LEA RSI,[0x80 + RBX]
00016a5b(4): LEA RDI,[RBX + 0x70]
00016a5f(3): MOV RDX,R15
00016a62(5): MOV byte ptr [RSP + 0x38],0xa
00016a67(5): CALL 0x0000cc10
00016a6c(3): TEST RAX,RAX
00016a6f(3): MOV R15,RAX
00016a72(2): JZ 0x00016af0
00016a74(4): CMP byte ptr [RBP + 0x8],0xa
00016a78(2): JNZ 0x00016ac8
00016a7a(3): MOV RDX,R14
00016a7d(3): MOV RSI,R12
00016a80(3): MOV RDI,RBP
00016a83(7): OR RDX,0x800000
00016a8a(5): CALL 0x00014b50
00016a8f(2): CDQE
00016a91(5): ADD qword ptr [R12 + 0x48],RAX
00016a96(4): MOVZX EAX,byte ptr [RBP + 0x8]
00016a9a(2): MOV EDX,EAX
00016a9c(3): AND EDX,0xfffffff7
00016a9f(3): CMP DL,0x2
00016aa2(6): JNZ 0x000169f0
00016aa8(2): XOR ECX,ECX
00016aaa(2): JMP 0x00016a4f
00016aac(3): TEST R15,R15
00016aaf(2): JZ 0x00016ac2
00016ab1(7): LEA RSI,[0xb6d0]
00016ab8(2): XOR EDX,EDX
00016aba(3): MOV RDI,R15
00016abd(5): CALL 0x0000a830
00016ac2(3): XOR R15D,R15D
00016ac5(3): NOP dword ptr [RAX]
00016ac8(5): MOV RCX,qword ptr [RSP + 0x48]
00016acd(9): XOR RCX,qword ptr FS:[0x28]
00016ad6(3): MOV RAX,R15
00016ad9(2): JNZ 0x00016afa
00016adb(4): ADD RSP,0x58
00016adf(1): POP RBX
00016ae0(1): POP RBP
00016ae1(2): POP R12
00016ae3(2): POP R13
00016ae5(2): POP R14
00016ae7(2): POP R15
00016ae9(1): RET
00016af0(8): MOV dword ptr [R13],0xc
00016af8(2): JMP 0x00016ac8
00016afa(5): CALL 0x00001db0
00016aff(1): NOP
00016b00(2): PUSH R15
00016b02(2): PUSH R14
00016b04(2): PUSH R13
00016b06(2): PUSH R12
00016b08(1): PUSH RBP
00016b09(1): PUSH RBX
00016b0a(7): SUB RSP,0x128
00016b11(4): MOV qword ptr [RDI + 0x18],RCX
00016b15(8): MOV qword ptr [RDI + 0x10],0x0
00016b1d(9): MOV RAX,qword ptr FS:[0x28]
00016b26(8): MOV qword ptr [0x118 + RSP],RAX
00016b2e(2): XOR EAX,EAX
00016b30(4): MOVZX EAX,byte ptr [RDI + 0x38]
00016b34(5): MOV qword ptr [RSP + 0x8],RDI
00016b39(5): MOV qword ptr [RSP + 0x10],RSI
00016b3e(4): MOV qword ptr [RSP],RDX
00016b42(5): MOV qword ptr [RSP + 0x18],RCX
00016b47(8): MOV dword ptr [RSP + 0x4c],0x0
00016b4f(8): MOV qword ptr [RDI + 0x30],0x0
00016b57(3): MOV RBX,qword ptr [RDI]
00016b5a(4): MOV byte ptr [RSP + 0x20],AL
00016b5e(3): AND EAX,0xffffff90
00016b61(8): CMP qword ptr [RDI + 0x8],0xe7
00016b69(3): MOV byte ptr [RDI + 0x38],AL
00016b6c(6): JBE 0x00017966
00016b72(4): LEA RDI,[RBX + 0x8]
00016b76(5): MOV RAX,qword ptr [RSP + 0x8]
00016b7b(3): MOV RCX,RBX
00016b7e(4): AND RDI,-0x8
00016b82(3): SUB RCX,RDI
00016b85(8): MOV qword ptr [RAX + 0x10],0xe8
00016b8d(2): XOR EAX,EAX
00016b8f(6): ADD ECX,0xe8
00016b95(7): MOV qword ptr [RBX],0x0
00016b9c(11): MOV qword ptr [0xe0 + RBX],0x0
00016ba7(3): SHR ECX,0x3
00016baa(3): STOSQ.REP RDI
00016bad(10): MOV RAX,0x555555555555554
00016bb7(10): MOV dword ptr [0x80 + RBX],0xf
00016bc1(4): CMP qword ptr [RSP],RAX
00016bc5(6): JA 0x00017206
00016bcb(4): MOV R14,qword ptr [RSP]
00016bcf(4): LEA RAX,[R14 + 0x1]
00016bd3(3): MOV RDI,RAX
00016bd6(4): MOV qword ptr [RBX + 0x8],RAX
00016bda(5): MOV qword ptr [RSP + 0x28],RAX
00016bdf(4): SHL RDI,0x4
00016be3(5): CALL 0x00001f20
00016be8(3): TEST R14,R14
00016beb(3): MOV qword ptr [RBX],RAX
00016bee(6): JZ 0x000178d5
00016bf4(5): MOV ESI,0x1
00016bf9(7): NOP dword ptr [RAX]
00016c00(3): ADD RSI,RSI
00016c03(4): CMP qword ptr [RSP],RSI
00016c07(2): JNC 0x00016c00
00016c09(4): LEA RBP,[RSI + -0x1]
00016c0d(5): MOV EDI,0x18
00016c12(5): CALL 0x00001ec0
00016c17(7): MOV qword ptr [0x88 + RBX],RBP
00016c1e(4): MOV qword ptr [RBX + 0x40],RAX
00016c22(5): CALL 0x00001d90
00016c27(5): MOV EDI,0xe
00016c2c(6): MOV dword ptr [0xb4 + RBX],EAX
00016c32(5): CALL 0x00001f50
00016c37(3): MOVZX EDX,byte ptr [RAX]
00016c3a(3): AND EDX,0xffffffdf
00016c3d(3): CMP DL,0x55
00016c40(2): JNZ 0x00016c90
00016c42(4): MOVZX EDX,byte ptr [RAX + 0x1]
00016c46(3): AND EDX,0xffffffdf
00016c49(3): CMP DL,0x54
00016c4c(2): JNZ 0x00016c90
00016c4e(4): MOVZX EDX,byte ptr [RAX + 0x2]
00016c52(3): AND EDX,0xffffffdf
00016c55(3): CMP DL,0x46
00016c58(2): JNZ 0x00016c90
00016c5a(2): XOR EDX,EDX
00016c5c(4): CMP byte ptr [RAX + 0x3],0x2d
00016c60(7): LEA RDI,[0x1bd04]
00016c67(5): MOV ECX,0x2
00016c6c(3): SETZ DL
00016c6f(5): LEA RSI,[RAX + RDX*0x1 + 0x3]
00016c74(2): CMPSB.REPE RDI,RSI
00016c76(3): SETA AL
00016c79(2): SBB AL,0x0
00016c7b(2): TEST AL,AL
00016c7d(2): JNZ 0x00016c90
00016c7f(7): OR byte ptr [0xb0 + RBX],0x4
00016c86(10): NOP word ptr CS:[RAX + RAX*0x1]
00016c90(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00016c97(2): MOV EDX,EAX
00016c99(3): AND EDX,0xfffffff7
00016c9c(7): CMP dword ptr [0xb4 + RBX],0x1
00016ca3(6): MOV byte ptr [0xb0 + RBX],DL
00016ca9(2): JLE 0x00016cbe
00016cab(2): TEST AL,0x4
00016cad(6): JZ 0x00017213
00016cb3(7): LEA RAX,[0x1cd00]
00016cba(4): MOV qword ptr [RBX + 0x78],RAX
00016cbe(4): CMP qword ptr [RBX],0x0
00016cc2(6): JZ 0x00017206
00016cc8(5): CMP qword ptr [RBX + 0x40],0x0
00016ccd(6): JZ 0x00017206
00016cd3(5): MOV RAX,qword ptr [RSP + 0x18]
00016cd8(8): LEA RBP,[0x80 + RSP]
00016ce0(5): MOV ECX,0x12
00016ce5(8): MOV dword ptr [RSP + 0x4c],0x0
00016ced(4): LEA R8,[RBP + 0x8]
00016cf1(5): AND EAX,0x400000
00016cf6(5): MOV qword ptr [RSP + 0x20],RAX
00016cfb(5): MOV RAX,qword ptr [RSP + 0x8]
00016d00(3): SETNZ DL
00016d03(3): MOV RDI,R8
00016d06(4): MOV RSI,qword ptr [RAX + 0x28]
00016d0a(2): XOR EAX,EAX
00016d0c(3): STOSQ.REP RDI
00016d0f(5): MOV RAX,qword ptr [RSP + 0x10]
00016d14(4): MOV RDI,qword ptr [RSP]
00016d18(3): TEST RSI,RSI
00016d1b(7): MOV byte ptr [0x108 + RSP],DL
00016d22(6): MOV ECX,dword ptr [0xb4 + RBX]
00016d28(4): SETNZ R12B
00016d2c(8): MOV qword ptr [0xf8 + RSP],RSI
00016d34(8): MOV qword ptr [0x80 + RSP],RAX
00016d3c(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00016d43(3): OR R12D,EDX
00016d46(8): MOV qword ptr [0xd8 + RSP],RDI
00016d4e(8): MOV qword ptr [0xd0 + RSP],RDI
00016d56(3): MOV ESI,R12D
00016d59(8): MOV byte ptr [0x10b + RSP],R12B
00016d61(7): MOV dword ptr [0x110 + RSP],ECX
00016d68(8): MOV qword ptr [0xe8 + RSP],RDI
00016d70(8): MOV qword ptr [0xe0 + RSP],RDI
00016d78(2): MOV EDX,EAX
00016d7a(3): SHR AL,0x3
00016d7d(3): SHR DL,0x2
00016d80(3): AND EAX,0x1
00016d83(3): AND EDX,0x1
00016d86(3): TEST RDI,RDI
00016d89(7): MOV byte ptr [0x10a + RSP],AL
00016d90(7): MOV byte ptr [0x109 + RSP],DL
00016d97(6): JNZ 0x000171d5
00016d9d(3): TEST SIL,SIL
00016da0(2): JZ 0x00016daf
00016da2(8): MOV RAX,qword ptr [0x88 + RSP]
00016daa(5): MOV qword ptr [RSP + 0x10],RAX
00016daf(6): CMP qword ptr [RSP + 0x20],0x0
00016db5(5): MOV RAX,qword ptr [RSP + 0x10]
00016dba(8): MOV qword ptr [0x88 + RSP],RAX
00016dc2(6): JZ 0x00016ec5
00016dc8(3): CMP ECX,0x1
00016dcb(6): JLE 0x000179bd
00016dd1(3): MOV RDI,RBP
00016dd4(5): CALL 0x0000ae70
00016dd9(2): TEST EAX,EAX
00016ddb(2): JNZ 0x00016e20
00016ddd(4): MOV RAX,qword ptr [RSP]
00016de1(8): CMP RAX,qword ptr [0xb8 + RSP]
00016de9(6): JLE 0x000179a0
00016def(7): MOVSXD RAX,dword ptr [0xb4 + RBX]
00016df6(8): MOV RSI,qword ptr [0xc0 + RSP]
00016dfe(8): ADD RAX,qword ptr [0xb0 + RSP]
00016e06(3): CMP RSI,RAX
00016e09(6): JG 0x000179a0
00016e0f(3): ADD RSI,RSI
00016e12(3): MOV RDI,RBP
00016e15(5): CALL 0x0000a900
00016e1a(2): TEST EAX,EAX
00016e1c(2): JZ 0x00016dd1
00016e1e(2): NOP
00016e20(4): MOV dword ptr [RSP + 0x4c],EAX
00016e24(5): MOV RAX,qword ptr [RSP + 0x8]
00016e29(3): MOV R13,qword ptr [RAX]
00016e2c(4): MOV RDI,qword ptr [R13 + 0x70]
00016e30(3): TEST RDI,RDI
00016e33(2): JZ 0x00016e48
00016e35(3): NOP dword ptr [RAX]
00016e38(3): MOV R12,qword ptr [RDI]
00016e3b(5): CALL 0x00001c60
00016e40(3): TEST R12,R12
00016e43(3): MOV RDI,R12
00016e46(2): JNZ 0x00016e38
00016e48(4): MOV RDI,qword ptr [R13 + 0x20]
00016e4c(8): MOV qword ptr [R13 + 0x70],0x0
00016e54(11): MOV dword ptr [0x80 + R13],0xf
00016e5f(8): MOV qword ptr [R13 + 0x68],0x0
00016e67(5): CALL 0x00001c60
00016e6c(8): MOV qword ptr [R13 + 0x20],0x0
00016e74(3): MOV RDI,RBP
00016e77(5): CALL 0x0000bc40
00016e7c(3): MOV RDI,RBX
00016e7f(5): CALL 0x0000bc80
00016e84(5): MOV RAX,qword ptr [RSP + 0x8]
00016e89(7): MOV qword ptr [RAX],0x0
00016e90(8): MOV qword ptr [RAX + 0x8],0x0
00016e98(4): MOV EAX,dword ptr [RSP + 0x4c]
00016e9c(8): MOV RBX,qword ptr [0x118 + RSP]
00016ea4(9): XOR RBX,qword ptr FS:[0x28]
00016ead(6): JNZ 0x00017bf0
00016eb3(7): ADD RSP,0x128
00016eba(1): POP RBX
00016ebb(1): POP RBP
00016ebc(2): POP R12
00016ebe(2): POP R13
00016ec0(2): POP R14
00016ec2(2): POP R15
00016ec4(1): RET
00016ec5(3): CMP ECX,0x1
00016ec8(6): JG 0x0001787a
00016ece(3): TEST R12B,R12B
00016ed1(8): MOV RSI,qword ptr [0xc0 + RSP]
00016ed9(6): JZ 0x000174f4
00016edf(8): CMP qword ptr [0xd8 + RSP],RSI
00016ee7(8): MOV RAX,qword ptr [0xb0 + RSP]
00016eef(9): CMOVLE RSI,qword ptr [0xd8 + RSP]
00016ef8(3): CMP RSI,RAX
00016efb(2): JG 0x00016f0d
00016efd(2): JMP 0x00016f40
00016f00(8): MOV RDX,qword ptr [0x88 + RSP]
00016f08(5): MOV qword ptr [RSP + 0x10],RDX
00016f0d(8): MOV RDX,qword ptr [0x80 + RSP]
00016f15(8): MOV RCX,qword ptr [0xf8 + RSP]
00016f1d(3): ADD RDX,RAX
00016f20(8): ADD RDX,qword ptr [0xa8 + RSP]
00016f28(3): MOVZX EDX,byte ptr [RDX]
00016f2b(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
00016f2f(5): MOV RCX,qword ptr [RSP + 0x10]
00016f34(3): MOV byte ptr [RCX + RAX*0x1],DL
00016f37(4): ADD RAX,0x1
00016f3b(3): CMP RSI,RAX
00016f3e(2): JNZ 0x00016f00
00016f40(8): MOV qword ptr [0xb0 + RSP],RAX
00016f48(8): MOV qword ptr [0xb8 + RSP],RAX
00016f50(8): MOV dword ptr [RSP + 0x4c],0x0
00016f58(5): MOV R12,qword ptr [RSP + 0x8]
00016f5d(5): MOV R14,qword ptr [RSP + 0x18]
00016f62(5): LEA R13,[RSP + 0x50]
00016f67(3): MOV RSI,RBP
00016f6a(3): MOV RDI,R13
00016f6d(5): MOV qword ptr [RSP + 0x28],R13
00016f72(4): MOV R15,qword ptr [R12]
00016f76(3): MOV RDX,R14
00016f79(9): MOV qword ptr [R12 + 0x30],0x0
00016f82(7): OR RDX,0x800000
00016f89(7): MOV qword ptr [0xd8 + R15],R14
00016f90(5): CALL 0x00014b50
00016f95(5): LEA R9,[RSP + 0x4c]
00016f9a(3): XOR R8D,R8D
00016f9d(3): MOV RCX,R14
00016fa0(3): MOV RDX,R13
00016fa3(3): MOV RSI,R12
00016fa6(3): MOV RDI,RBP
00016fa9(2): CDQE
00016fab(8): ADD qword ptr [0xc8 + RSP],RAX
00016fb3(5): CALL 0x00016980
00016fb8(4): MOV ECX,dword ptr [RSP + 0x4c]
00016fbc(2): TEST ECX,ECX
00016fbe(6): JNZ 0x000179e7
00016fc4(4): LEA R13,[R15 + 0x70]
00016fc8(5): LEA R12,[RSP + 0x60]
00016fcd(4): SUB R15,-0x80
00016fd1(2): XOR EDX,EDX
00016fd3(2): XOR ECX,ECX
00016fd5(3): MOV RSI,R15
00016fd8(3): MOV R8,R12
00016fdb(3): MOV RDI,R13
00016fde(4): MOV qword ptr [RSP],RAX
00016fe2(5): MOV byte ptr [RSP + 0x68],0x2
00016fe7(5): CALL 0x0000cc10
00016fec(4): MOV R9,qword ptr [RSP]
00016ff0(3): MOV R11,RAX
00016ff3(3): MOV RDX,RAX
00016ff6(3): TEST R9,R9
00016ff9(2): JZ 0x00017022
00016ffb(3): MOV RCX,R11
00016ffe(3): MOV RDX,R9
00017001(3): MOV R8,R12
00017004(3): MOV RSI,R15
00017007(3): MOV RDI,R13
0001700a(4): MOV qword ptr [RSP],R11
0001700e(5): MOV byte ptr [RSP + 0x68],0x10
00017013(5): CALL 0x0000cc10
00017018(4): MOV R11,qword ptr [RSP]
0001701c(3): MOV RDX,R11
0001701f(3): MOV R11,RAX
00017022(3): TEST RDX,RDX
00017025(5): MOV RCX,qword ptr [RSP + 0x8]
0001702a(3): SETZ DL
0001702d(3): TEST R11,R11
00017030(3): SETZ AL
00017033(2): OR DL,AL
00017035(3): MOV R13,qword ptr [RCX]
00017038(6): JNZ 0x000179d2
0001703e(4): MOV R15,qword ptr [R13 + 0x8]
00017042(4): MOV qword ptr [RBX + 0x68],R11
00017046(8): LEA RCX,[R15*0x8]
0001704e(4): LEA R15,[R15 + R15*0x2]
00017052(3): MOV RDI,RCX
00017055(4): MOV qword ptr [RSP],RCX
00017059(4): SHL R15,0x3
0001705d(5): CALL 0x00001f20
00017062(4): MOV RCX,qword ptr [RSP]
00017066(4): MOV qword ptr [R13 + 0x18],RAX
0001706a(5): MOV qword ptr [RSP + 0x18],RAX
0001706f(3): MOV RDI,RCX
00017072(5): CALL 0x00001f20
00017077(3): MOV RDI,R15
0001707a(4): MOV qword ptr [R13 + 0x20],RAX
0001707e(5): MOV qword ptr [RSP + 0x10],RAX
00017083(5): CALL 0x00001f20
00017088(3): MOV RDI,R15
0001708b(4): MOV qword ptr [R13 + 0x28],RAX
0001708f(4): MOV qword ptr [RSP],RAX
00017093(5): CALL 0x00001f20
00017098(5): MOV RDX,qword ptr [RSP + 0x18]
0001709d(4): MOV qword ptr [R13 + 0x30],RAX
000170a1(4): MOV RSI,qword ptr [RSP]
000170a5(5): MOV RCX,qword ptr [RSP + 0x10]
000170aa(3): TEST RDX,RDX
000170ad(6): JZ 0x0001786d
000170b3(3): TEST RCX,RCX
000170b6(6): JZ 0x0001786d
000170bc(3): TEST RSI,RSI
000170bf(6): JZ 0x0001786d
000170c5(3): TEST RAX,RAX
000170c8(6): JZ 0x0001786d
000170ce(5): MOV RAX,qword ptr [RSP + 0x8]
000170d3(4): MOV R15,qword ptr [RAX + 0x30]
000170d7(8): LEA RDI,[R15*0x8]
000170df(5): CALL 0x00001f20
000170e4(3): TEST RAX,RAX
000170e7(7): MOV qword ptr [0xe0 + R13],RAX
000170ee(2): JZ 0x0001715d
000170f0(3): TEST R15,R15
000170f3(2): JZ 0x0001710d
000170f5(2): XOR EDX,EDX
000170f7(9): NOP word ptr [RAX + RAX*0x1]
00017100(4): MOV qword ptr [RAX + RDX*0x8],RDX
00017104(4): ADD RDX,0x1
00017108(3): CMP RDX,R15
0001710b(2): JNZ 0x00017100
0001710d(4): MOV RDI,qword ptr [R13 + 0x68]
00017111(7): LEA RSI,[0xc110]
00017118(3): MOV RDX,R13
0001711b(5): CALL 0x0000a8a0
00017120(5): MOV RAX,qword ptr [RSP + 0x8]
00017125(7): MOV RDI,qword ptr [0xe0 + R13]
0001712c(4): MOV RDX,qword ptr [RAX + 0x30]
00017130(3): TEST RDX,RDX
00017133(6): JZ 0x00017a24
00017139(3): MOV RAX,qword ptr [RDI]
0001713c(3): TEST RAX,RAX
0001713f(2): JZ 0x0001714e
00017141(2): JMP 0x0001715d
00017148(4): CMP qword ptr [RDI + RAX*0x8],RAX
0001714c(2): JNZ 0x0001715d
0001714e(4): ADD RAX,0x1
00017152(3): CMP RDX,RAX
00017155(2): JA 0x00017148
00017157(6): JZ 0x00017a24
0001715d(4): MOV RDI,qword ptr [R13 + 0x68]
00017161(5): MOV RDX,qword ptr [RSP + 0x8]
00017166(7): LEA RSI,[0xd010]
0001716d(5): CALL 0x0000a830
00017172(2): TEST EAX,EAX
00017174(6): JNZ 0x00016e20
0001717a(4): MOV RDI,qword ptr [R13 + 0x68]
0001717e(7): LEA RSI,[0xf580]
00017185(3): MOV RDX,R13
00017188(5): CALL 0x0000a830
0001718d(2): TEST EAX,EAX
0001718f(6): JNZ 0x00016e20
00017195(4): MOV RDI,qword ptr [R13 + 0x68]
00017199(7): LEA RSI,[0xc1a0]
000171a0(3): MOV RDX,R13
000171a3(5): CALL 0x0000a8a0
000171a8(4): MOV RDX,qword ptr [R13 + 0x68]
000171ac(7): LEA RSI,[0x1cc08]
000171b3(5): NOP dword ptr [RAX + RAX*0x1]
000171b8(4): MOVZX ECX,byte ptr [RDX + 0x30]
000171bc(4): MOV RDI,qword ptr [RDX + 0x38]
000171c0(3): CMP CL,0x10
000171c3(6): JA 0x00017298
000171c9(3): MOVZX EAX,CL
000171cc(4): MOVSXD RAX,dword ptr [RSI + RAX*0x4]
000171d0(3): ADD RAX,RSI
000171d3(2): JMP RAX
000171d5(5): MOV RSI,qword ptr [RSP + 0x28]
000171da(3): MOV RDI,RBP
000171dd(5): CALL 0x0000a900
000171e2(2): TEST EAX,EAX
000171e4(6): JNZ 0x00016e20
000171ea(8): MOVZX ESI,byte ptr [0x10b + RSP]
000171f2(6): MOV ECX,dword ptr [0xb4 + RBX]
000171f8(3): TEST SIL,SIL
000171fb(6): JZ 0x00016daf
00017201(5): JMP 0x00016da2
00017206(8): MOV dword ptr [RSP + 0x4c],0xc
0001720e(5): JMP 0x00016e7c
00017213(5): MOV ESI,0x1
00017218(5): MOV EDI,0x20
0001721d(5): CALL 0x00001ec0
00017222(3): TEST RAX,RAX
00017225(4): MOV qword ptr [RBX + 0x78],RAX
00017229(2): JZ 0x00017206
0001722b(3): XOR R12D,R12D
0001722e(2): XOR EBP,EBP
00017230(6): MOV R13D,0x1
00017236(3): XOR R15D,R15D
00017239(7): NOP dword ptr [RAX]
00017240(5): LEA R14D,[RBP + R15*0x1]
00017245(3): MOV EDI,R14D
00017248(5): CALL 0x00001fe0
0001724d(3): CMP EAX,-0x1
00017250(2): JZ 0x00017265
00017252(4): MOV RSI,qword ptr [RBX + 0x78]
00017256(3): MOV RDI,R13
00017259(3): MOV ECX,R15D
0001725c(3): SHL RDI,CL
0001725f(3): ADD RSI,R12
00017262(3): OR qword ptr [RSI],RDI
00017265(7): TEST R14D,0xffffff80
0001726c(2): JNZ 0x0001727a
0001726e(3): CMP EAX,R14D
00017271(2): JZ 0x0001727a
00017273(7): OR byte ptr [0xb0 + RBX],0x8
0001727a(4): ADD R15,0x1
0001727e(4): CMP R15,0x40
00017282(2): JNZ 0x00017240
00017284(3): ADD EBP,0x40
00017287(4): ADD R12,0x8
0001728b(6): CMP EBP,0x100
00017291(2): JNZ 0x00017236
00017293(5): JMP 0x00016cbe
00017298(3): AND ECX,0x8
0001729b(6): JNZ 0x00017bb2
000172a1(4): MOV RAX,qword ptr [RDX + 0x20]
000172a5(4): MOV RCX,qword ptr [RAX + 0x38]
000172a9(4): MOV RAX,qword ptr [R13 + 0x18]
000172ad(4): MOV qword ptr [RAX + RDI*0x8],RCX
000172b1(4): MOV R15,qword ptr [RDX + 0x8]
000172b5(2): XOR EDI,EDI
000172b7(3): TEST R15,R15
000172ba(2): JZ 0x000172cb
000172bc(3): MOV RDX,R15
000172bf(5): JMP 0x000171b8
000172c8(3): MOV RDX,RAX
000172cb(4): MOV R15,qword ptr [RDX + 0x10]
000172cf(3): TEST R15,R15
000172d2(3): SETZ CL
000172d5(3): CMP R15,RDI
000172d8(3): SETZ AL
000172db(2): OR CL,AL
000172dd(4): MOV byte ptr [RSP + 0x10],CL
000172e1(2): JZ 0x000172bc
000172e3(3): MOV RAX,qword ptr [RDX]
000172e6(3): MOV RDI,RDX
000172e9(3): TEST RAX,RAX
000172ec(2): JNZ 0x000172c8
000172ee(3): XOR R14D,R14D
000172f1(3): XOR R15D,R15D
000172f4(4): NOP dword ptr [RAX]
000172f8(4): MOV RDX,qword ptr [R13 + 0x10]
000172fc(3): CMP RDX,R15
000172ff(2): JZ 0x00017326
00017301(4): LEA R10,[R15 + R15*0x2]
00017305(4): MOV RAX,qword ptr [R13 + 0x30]
00017309(4): SHL R10,0x3
0001730d(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
00017313(6): JZ 0x00017518
00017319(4): MOV RDX,qword ptr [R13 + 0x10]
0001731d(4): ADD R15,0x1
00017321(3): CMP RDX,R15
00017324(2): JNZ 0x00017301
00017326(3): TEST R14B,R14B
00017329(6): JZ 0x0001756e
0001732f(3): XOR R14D,R14D
00017332(3): XOR R15D,R15D
00017335(2): JMP 0x00017301
00017337(8): OR byte ptr [0xb0 + R13],0x1
0001733f(4): MOV R15,qword ptr [RDX + 0x8]
00017343(3): TEST R15,R15
00017346(6): JZ 0x00017959
0001734c(4): MOV RAX,qword ptr [R15 + 0x18]
00017350(4): MOV RCX,qword ptr [RAX + 0x38]
00017354(4): MOV RAX,qword ptr [RDX + 0x10]
00017358(3): TEST RAX,RAX
0001735b(6): JZ 0x0001794c
00017361(4): MOV RAX,qword ptr [RAX + 0x18]
00017365(4): MOV R9,qword ptr [RAX + 0x38]
00017369(3): TEST RCX,RCX
0001736c(6): JS 0x00017bd1
00017372(3): TEST R9,R9
00017375(6): JS 0x00017b93
0001737b(4): MOV RAX,qword ptr [R13 + 0x28]
0001737f(4): LEA RDI,[RDI + RDI*0x2]
00017383(5): MOV qword ptr [RSP + 0x38],RSI
00017388(5): MOV qword ptr [RSP + 0x30],R9
0001738d(5): MOV qword ptr [RSP + 0x18],RCX
00017392(5): MOV qword ptr [RSP + 0x10],RDX
00017397(4): LEA R10,[RAX + RDI*0x8]
0001739b(5): MOV EDI,0x10
000173a0(7): MOV qword ptr [R10],0x2
000173a7(4): MOV qword ptr [RSP],R10
000173ab(5): CALL 0x00001f20
000173b0(4): MOV R10,qword ptr [RSP]
000173b4(3): TEST RAX,RAX
000173b7(5): MOV RDX,qword ptr [RSP + 0x10]
000173bc(5): MOV RCX,qword ptr [RSP + 0x18]
000173c1(5): MOV R9,qword ptr [RSP + 0x30]
000173c6(5): MOV RSI,qword ptr [RSP + 0x38]
000173cb(4): MOV qword ptr [R10 + 0x10],RAX
000173cf(6): JZ 0x0001766a
000173d5(3): CMP RCX,R9
000173d8(6): JZ 0x000179ad
000173de(8): MOV qword ptr [R10 + 0x8],0x2
000173e6(6): JL 0x00017994
000173ec(3): MOV qword ptr [RAX],R9
000173ef(4): MOV qword ptr [RAX + 0x8],RCX
000173f3(5): JMP 0x000172b5
000173f8(4): MOV RAX,qword ptr [RDX + 0x20]
000173fc(4): LEA RCX,[RDI + RDI*0x2]
00017400(5): MOV EDI,0x8
00017405(5): MOV qword ptr [RSP + 0x10],RSI
0001740a(4): MOV qword ptr [RSP],RDX
0001740e(4): MOV R14,qword ptr [RAX + 0x38]
00017412(4): MOV RAX,qword ptr [R13 + 0x28]
00017416(4): LEA R15,[RAX + RCX*0x8]
0001741a(7): MOV qword ptr [R15],0x1
00017421(8): MOV qword ptr [R15 + 0x8],0x1
00017429(5): CALL 0x00001f20
0001742e(3): TEST RAX,RAX
00017431(4): MOV qword ptr [R15 + 0x10],RAX
00017435(4): MOV RDX,qword ptr [RSP]
00017439(5): MOV RSI,qword ptr [RSP + 0x10]
0001743e(6): JZ 0x00017ae8
00017444(3): MOV qword ptr [RAX],R14
00017447(4): MOV R15,qword ptr [RDX + 0x8]
0001744b(5): JMP 0x000172b5
00017450(5): CMP qword ptr [RDX + 0x20],0x0
00017455(6): JZ 0x000172b1
0001745b(7): LEA RCX,[0x1ccc0]
00017462(7): LEA RSI,[0x1c6f0]
00017469(7): LEA RDI,[0x1c796]
00017470(5): MOV EDX,0x59f
00017475(5): CALL 0x00001e30
00017480(4): MOV RAX,qword ptr [RDX + 0x20]
00017484(4): MOV R15,qword ptr [RAX + 0x38]
00017488(4): MOV RAX,qword ptr [R13 + 0x18]
0001748c(4): MOV qword ptr [RAX + RDI*0x8],R15
00017490(4): CMP byte ptr [RDX + 0x30],0x4
00017494(6): JNZ 0x000172b1
0001749a(4): MOV RAX,qword ptr [R13 + 0x28]
0001749e(4): LEA RCX,[RDI + RDI*0x2]
000174a2(5): MOV EDI,0x8
000174a7(5): MOV qword ptr [RSP + 0x18],RSI
000174ac(5): MOV qword ptr [RSP + 0x10],RDX
000174b1(4): LEA RCX,[RAX + RCX*0x8]
000174b5(7): MOV qword ptr [RCX],0x1
000174bc(8): MOV qword ptr [RCX + 0x8],0x1
000174c4(4): MOV qword ptr [RSP],RCX
000174c8(5): CALL 0x00001f20
000174cd(4): MOV RCX,qword ptr [RSP]
000174d1(3): TEST RAX,RAX
000174d4(5): MOV RDX,qword ptr [RSP + 0x10]
000174d9(5): MOV RSI,qword ptr [RSP + 0x18]
000174de(4): MOV qword ptr [RCX + 0x10],RAX
000174e2(6): JZ 0x00017b30
000174e8(3): MOV qword ptr [RAX],R15
000174eb(4): MOV R15,qword ptr [RDX + 0x8]
000174ef(5): JMP 0x000172b5
000174f4(8): MOV qword ptr [0xb0 + RSP],RSI
000174fc(8): MOV qword ptr [0xb8 + RSP],RSI
00017504(8): MOV dword ptr [RSP + 0x4c],0x0
0001750c(5): JMP 0x00016f58
00017518(5): MOV ECX,0x1
0001751d(3): MOV RDX,R15
00017520(3): MOV RSI,R13
00017523(3): MOV RDI,R12
00017526(4): MOV qword ptr [RSP],R10
0001752a(5): CALL 0x0000c650
0001752f(2): TEST EAX,EAX
00017531(6): JNZ 0x00016e20
00017537(4): MOV RAX,qword ptr [R13 + 0x30]
0001753b(4): MOV R10,qword ptr [RSP]
0001753f(4): ADD R15,0x1
00017543(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
00017549(6): JNZ 0x000172f8
0001754f(5): MOV RDI,qword ptr [RSP + 0x70]
00017554(5): CALL 0x00001c60
00017559(4): CMP qword ptr [R13 + 0x10],R15
0001755d(6): JZ 0x0001732f
00017563(6): MOVZX R14D,byte ptr [RSP + 0x10]
00017569(5): JMP 0x00017301
0001756e(5): MOV RAX,qword ptr [RSP + 0x8]
00017573(4): TEST byte ptr [RAX + 0x38],0x10
00017577(2): JNZ 0x0001758a
00017579(5): CMP qword ptr [RAX + 0x30],0x0
0001757e(2): JZ 0x0001758a
00017580(8): TEST byte ptr [0xb0 + R13],0x1
00017588(2): JNZ 0x00017598
0001758a(8): CMP qword ptr [0x98 + R13],0x0
00017592(6): JZ 0x0001768b
00017598(4): LEA RDI,[RDX + RDX*0x2]
0001759c(4): MOV qword ptr [RSP],RDX
000175a0(4): SHL RDI,0x3
000175a4(5): CALL 0x00001f20
000175a9(3): TEST RAX,RAX
000175ac(4): MOV qword ptr [R13 + 0x38],RAX
000175b0(6): JZ 0x00017afc
000175b6(4): MOV RDX,qword ptr [RSP]
000175ba(2): XOR ESI,ESI
000175bc(2): XOR ECX,ECX
000175be(3): TEST RDX,RDX
000175c1(2): JNZ 0x000175d4
000175c3(5): JMP 0x0001768b
000175d0(4): MOV RAX,qword ptr [R13 + 0x38]
000175d4(4): PXOR XMM0,XMM0
000175d8(3): ADD RAX,RSI
000175db(4): ADD RCX,0x1
000175df(8): MOV qword ptr [RAX + 0x10],0x0
000175e7(4): ADD RSI,0x18
000175eb(3): MOVUPS xmmword ptr [RAX],XMM0
000175ee(4): MOV RAX,qword ptr [R13 + 0x10]
000175f2(3): CMP RCX,RAX
000175f5(2): JC 0x000175d0
000175f7(3): TEST RAX,RAX
000175fa(6): JZ 0x0001768b
00017600(4): MOV RAX,qword ptr [R13 + 0x30]
00017604(9): MOV qword ptr [RSP + 0x18],0x0
0001760d(9): MOV qword ptr [RSP + 0x10],0x0
00017616(5): MOV RCX,qword ptr [RSP + 0x18]
0001761b(4): LEA RDX,[RAX + RCX*0x1]
0001761f(5): CMP qword ptr [RDX + 0x8],0x0
00017624(4): MOV RCX,qword ptr [RDX + 0x10]
00017628(2): JLE 0x00017674
0001762a(3): XOR R15D,R15D
0001762d(2): JMP 0x00017648
00017630(4): MOV RAX,qword ptr [R13 + 0x30]
00017634(5): MOV RDX,qword ptr [RSP + 0x18]
00017639(4): ADD R15,0x1
0001763d(4): MOV RCX,qword ptr [RSP]
00017641(5): CMP R15,qword ptr [RAX + RDX*0x1 + 0x8]
00017646(2): JGE 0x00017674
00017648(4): MOV RAX,qword ptr [RCX + R15*0x8]
0001764c(4): MOV qword ptr [RSP],RCX
00017650(4): LEA RSI,[RAX + RAX*0x2]
00017654(4): MOV RAX,qword ptr [R13 + 0x38]
00017658(4): LEA RDI,[RAX + RSI*0x8]
0001765c(5): MOV RSI,qword ptr [RSP + 0x10]
00017661(5): CALL 0x0000a9a0
00017666(2): TEST AL,AL
00017668(2): JNZ 0x00017630
0001766a(5): MOV EAX,0xc
0001766f(5): JMP 0x00016e20
00017674(6): ADD qword ptr [RSP + 0x10],0x1
0001767a(6): ADD qword ptr [RSP + 0x18],0x18
00017680(5): MOV RDX,qword ptr [RSP + 0x10]
00017685(4): CMP RDX,qword ptr [R13 + 0x10]
00017689(2): JC 0x00017616
0001768b(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00017692(8): MOV dword ptr [RSP + 0x4c],0x0
0001769a(3): SHR AL,0x2
0001769d(6): CMP qword ptr [RSP + 0x20],0x0
000176a3(3): SETZ DL
000176a6(2): AND AL,DL
000176a8(6): JNZ 0x0001788f
000176ae(4): MOV RAX,qword ptr [RBX + 0x68]
000176b2(3): MOV RDI,R12
000176b5(4): MOV RAX,qword ptr [RAX + 0x18]
000176b9(4): MOV RAX,qword ptr [RAX + 0x38]
000176bd(4): LEA RDX,[RAX + RAX*0x2]
000176c1(7): MOV qword ptr [0x90 + RBX],RAX
000176c8(4): MOV RAX,qword ptr [RBX + 0x30]
000176cc(4): LEA RSI,[RAX + RDX*0x8]
000176d0(5): CALL 0x0000d0b0
000176d5(2): TEST EAX,EAX
000176d7(3): MOV R15D,EAX
000176da(4): MOV dword ptr [RSP + 0x50],EAX
000176de(6): JNZ 0x000177ff
000176e4(8): CMP qword ptr [0x98 + RBX],0x0
000176ec(6): JLE 0x000177c0
000176f2(5): MOV R9,qword ptr [RSP + 0x68]
000176f7(3): TEST R9,R9
000176fa(6): JLE 0x000177c0
00017700(3): XOR R10D,R10D
00017703(5): LEA R13,[R12 + 0x10]
00017708(2): JMP 0x0001771d
00017710(4): ADD R10,0x1
00017714(3): CMP R9,R10
00017717(6): JLE 0x000177c0
0001771d(5): MOV RCX,qword ptr [RSP + 0x70]
00017722(3): MOV RSI,qword ptr [RBX]
00017725(4): MOV R8,qword ptr [RCX + R10*0x8]
00017729(3): MOV RDI,R8
0001772c(4): SHL RDI,0x4
00017730(3): ADD RDI,RSI
00017733(4): CMP byte ptr [RDI + 0x8],0x4
00017737(2): JNZ 0x00017710
00017739(2): XOR EDX,EDX
0001773b(2): JMP 0x00017749
00017740(4): ADD RDX,0x1
00017744(3): CMP R9,RDX
00017747(2): JZ 0x00017710
00017749(4): MOV RAX,qword ptr [RCX + RDX*0x8]
0001774d(4): SHL RAX,0x4
00017751(3): ADD RAX,RSI
00017754(4): CMP byte ptr [RAX + 0x8],0x9
00017758(2): JNZ 0x00017740
0001775a(3): MOV R11,qword ptr [RDI]
0001775d(3): CMP qword ptr [RAX],R11
00017760(2): JNZ 0x00017740
00017762(4): MOV RDX,qword ptr [RBX + 0x28]
00017766(4): LEA RAX,[R8 + R8*0x2]
0001776a(3): MOV RSI,R13
0001776d(3): MOV RDI,R9
00017770(4): LEA RAX,[RDX + RAX*0x8]
00017774(4): MOV RAX,qword ptr [RAX + 0x10]
00017778(3): MOV R11,qword ptr [RAX]
0001777b(3): MOV RDX,R11
0001777e(5): CALL 0x0000bf50
00017783(3): TEST RAX,RAX
00017786(2): JNZ 0x00017710
00017788(4): MOV RAX,qword ptr [RBX + 0x30]
0001778c(4): LEA RDX,[R11 + R11*0x2]
00017790(3): MOV RDI,R12
00017793(4): LEA RSI,[RAX + RDX*0x8]
00017797(5): CALL 0x0000c470
0001779c(2): TEST EAX,EAX
0001779e(6): JNZ 0x00017ae0
000177a4(5): MOV R9,qword ptr [RSP + 0x68]
000177a9(6): MOV R10D,0x1
000177af(3): CMP R9,R10
000177b2(6): JG 0x0001771d
000177b8(8): NOP dword ptr [RAX + RAX*0x1]
000177c0(5): MOV RDI,qword ptr [RSP + 0x28]
000177c5(2): XOR ECX,ECX
000177c7(3): MOV RDX,R12
000177ca(3): MOV RSI,RBX
000177cd(5): CALL 0x0000d2a0
000177d2(3): TEST RAX,RAX
000177d5(4): MOV qword ptr [RBX + 0x48],RAX
000177d9(6): JZ 0x00017942
000177df(4): CMP byte ptr [RAX + 0x68],0x0
000177e3(6): JS 0x000178e1
000177e9(4): MOV qword ptr [RBX + 0x60],RAX
000177ed(4): MOV qword ptr [RBX + 0x58],RAX
000177f1(4): MOV qword ptr [RBX + 0x50],RAX
000177f5(5): MOV RDI,qword ptr [RSP + 0x70]
000177fa(5): CALL 0x00001c60
000177ff(5): MOV RAX,qword ptr [RSP + 0x8]
00017804(5): MOV dword ptr [RSP + 0x4c],R15D
00017809(3): MOV R13,qword ptr [RAX]
0001780c(4): MOV RDI,qword ptr [R13 + 0x70]
00017810(3): TEST RDI,RDI
00017813(2): JZ 0x00017828
00017815(3): NOP dword ptr [RAX]
00017818(3): MOV R12,qword ptr [RDI]
0001781b(5): CALL 0x00001c60
00017820(3): TEST R12,R12
00017823(3): MOV RDI,R12
00017826(2): JNZ 0x00017818
00017828(4): MOV RDI,qword ptr [R13 + 0x20]
0001782c(8): MOV qword ptr [R13 + 0x70],0x0
00017834(11): MOV dword ptr [0x80 + R13],0xf
0001783f(8): MOV qword ptr [R13 + 0x68],0x0
00017847(5): CALL 0x00001c60
0001784c(8): MOV qword ptr [R13 + 0x20],0x0
00017854(3): MOV RDI,RBP
00017857(5): CALL 0x0000bc40
0001785c(4): MOV EAX,dword ptr [RSP + 0x4c]
00017860(2): TEST EAX,EAX
00017862(6): JZ 0x00016e9c
00017868(5): JMP 0x00016e7c
0001786d(8): MOV dword ptr [RSP + 0x4c],0xc
00017875(5): JMP 0x00016e2c
0001787a(3): MOV RDI,RBP
0001787d(5): CALL 0x0000aca0
00017882(8): MOV dword ptr [RSP + 0x4c],0x0
0001788a(5): JMP 0x00016f58
0001788f(5): MOV RCX,qword ptr [RSP + 0x8]
00017894(5): CMP qword ptr [RCX + 0x28],0x0
00017899(6): JNZ 0x000176ae
0001789f(4): MOV R10,qword ptr [RBX + 0x10]
000178a3(3): TEST R10,R10
000178a6(6): JZ 0x00017b5a
000178ac(3): MOV RSI,qword ptr [RBX]
000178af(7): LEA R9,[0x1cc4c]
000178b6(3): XOR R8D,R8D
000178b9(2): XOR EDX,EDX
000178bb(3): MOV RCX,RSI
000178be(4): CMP byte ptr [RCX + 0x8],0xc
000178c2(6): JA 0x00017b8e
000178c8(4): MOVZX EDI,byte ptr [RCX + 0x8]
000178cc(4): MOVSXD RDI,dword ptr [R9 + RDI*0x4]
000178d0(3): ADD RDI,R9
000178d3(2): JMP RDI
000178d5(2): XOR EBP,EBP
000178d7(5): MOV ESI,0x1
000178dc(5): JMP 0x00016c0d
000178e1(5): MOV R14,qword ptr [RSP + 0x28]
000178e6(5): MOV ECX,0x1
000178eb(3): MOV RDX,R12
000178ee(3): MOV RSI,RBX
000178f1(3): MOV RDI,R14
000178f4(5): CALL 0x0000d2a0
000178f9(5): MOV ECX,0x2
000178fe(3): MOV RDX,R12
00017901(3): MOV RSI,RBX
00017904(3): MOV RDI,R14
00017907(4): MOV qword ptr [RBX + 0x50],RAX
0001790b(5): CALL 0x0000d2a0
00017910(5): MOV ECX,0x6
00017915(4): MOV qword ptr [RBX + 0x58],RAX
00017919(3): MOV RDX,R12
0001791c(3): MOV RSI,RBX
0001791f(3): MOV RDI,R14
00017922(5): CALL 0x0000d2a0
00017927(5): CMP qword ptr [RBX + 0x50],0x0
0001792c(4): MOV qword ptr [RBX + 0x60],RAX
00017930(2): JZ 0x00017942
00017932(5): CMP qword ptr [RBX + 0x58],0x0
00017937(2): JZ 0x00017942
00017939(3): TEST RAX,RAX
0001793c(6): JNZ 0x000177f5
00017942(5): MOV R15D,dword ptr [RSP + 0x50]
00017947(5): JMP 0x000177ff
0001794c(4): MOV RAX,qword ptr [RDX + 0x20]
00017950(4): MOV R9,qword ptr [RAX + 0x38]
00017954(5): JMP 0x00017369
00017959(4): MOV RAX,qword ptr [RDX + 0x20]
0001795d(4): MOV RCX,qword ptr [RAX + 0x38]
00017961(5): JMP 0x00017354
00017966(3): MOV RDI,RBX
00017969(5): MOV ESI,0xe8
0001796e(5): CALL 0x00001f90
00017973(3): TEST RAX,RAX
00017976(3): MOV RBX,RAX
00017979(6): JZ 0x00017b11
0001797f(5): MOV RAX,qword ptr [RSP + 0x8]
00017984(8): MOV qword ptr [RAX + 0x8],0xe8
0001798c(3): MOV qword ptr [RAX],RBX
0001798f(5): JMP 0x00016b72
00017994(3): MOV qword ptr [RAX],RCX
00017997(4): MOV qword ptr [RAX + 0x8],R9
0001799b(5): JMP 0x000172b5
000179a0(8): MOV dword ptr [RSP + 0x4c],0x0
000179a8(5): JMP 0x00016f58
000179ad(8): MOV qword ptr [R10 + 0x8],0x1
000179b5(3): MOV qword ptr [RAX],RCX
000179b8(5): JMP 0x000172b5
000179bd(3): MOV RDI,RBP
000179c0(5): CALL 0x0000ac30
000179c5(8): MOV dword ptr [RSP + 0x4c],0x0
000179cd(5): JMP 0x00016f58
000179d2(8): MOV dword ptr [RSP + 0x4c],0xc
000179da(8): MOV qword ptr [RBX + 0x68],0x0
000179e2(5): JMP 0x00016e2c
000179e7(3): TEST RAX,RAX
000179ea(6): JZ 0x00017b1b
000179f0(4): LEA R13,[R15 + 0x70]
000179f4(5): LEA R12,[RSP + 0x60]
000179f9(4): SUB R15,-0x80
000179fd(2): XOR ECX,ECX
000179ff(2): XOR EDX,EDX
00017a01(3): MOV RSI,R15
00017a04(3): MOV R8,R12
00017a07(3): MOV RDI,R13
00017a0a(4): MOV qword ptr [RSP],RAX
00017a0e(5): MOV byte ptr [RSP + 0x68],0x2
00017a13(5): CALL 0x0000cc10
00017a18(4): MOV R9,qword ptr [RSP]
00017a1c(3): MOV R11,RAX
00017a1f(5): JMP 0x00016ffb
00017a24(5): CALL 0x00001c60
00017a29(11): MOV qword ptr [0xe0 + R13],0x0
00017a34(5): JMP 0x0001715d
00017a39(3): MOV R8D,EAX
00017a3c(4): ADD RDX,0x1
00017a40(4): ADD RCX,0x10
00017a44(3): CMP RDX,R10
00017a47(6): JNZ 0x000178be
00017a4d(3): OR R14B,R8B
00017a50(6): JZ 0x00017b5a
00017a56(3): MOV RAX,RDX
00017a59(4): SHL RAX,0x4
00017a5d(3): ADD RAX,RSI
00017a60(2): JMP 0x00017a78
00017a62(3): CMP DL,0x5
00017a65(2): JNZ 0x00017a6b
00017a67(4): MOV byte ptr [RSI + 0x8],0x7
00017a6b(4): ADD RSI,0x10
00017a6f(3): CMP RAX,RSI
00017a72(6): JZ 0x00017b57
00017a78(4): MOVZX EDX,byte ptr [RSI + 0x8]
00017a7c(3): CMP DL,0x1
00017a7f(2): JNZ 0x00017a62
00017a81(3): CMP byte ptr [RSI],0x0
00017a84(2): JNS 0x00017a6b
00017a86(4): AND byte ptr [RSI + 0xa],0xdf
00017a8a(2): JMP 0x00017a6b
00017a90(3): CMP byte ptr [RCX],0x0
00017a93(4): CMOVS R14D,EAX
00017a97(2): JMP 0x00017a3c
00017a99(2): MOV EDI,dword ptr [RCX]
00017a9b(3): CMP EDI,0x20
00017a9e(2): JZ 0x00017a3c
00017aa0(6): JBE 0x00017b49
00017aa6(3): CMP EDI,0x40
00017aa9(2): JZ 0x00017a3c
00017aab(3): ADD EDI,-0x80
00017aae(2): JZ 0x00017a3c
00017ab0(5): JMP 0x000176ae
00017ab8(3): MOV RDI,qword ptr [RCX]
00017abb(5): CMP qword ptr [RDI + 0x10],0x0
00017ac0(6): JNZ 0x000176ae
00017ac6(5): CMP qword ptr [RDI + 0x18],0x0
00017acb(6): JZ 0x00017a3c
00017ad1(5): JMP 0x000176ae
00017ae0(3): MOV R15D,EAX
00017ae3(5): JMP 0x000177ff
00017ae8(8): MOV qword ptr [R15 + 0x8],0x0
00017af0(7): MOV qword ptr [R15],0x0
00017af7(5): JMP 0x0001766a
00017afc(5): MOV RAX,qword ptr [RSP + 0x8]
00017b01(8): MOV dword ptr [RSP + 0x4c],0xc
00017b09(3): MOV R13,qword ptr [RAX]
00017b0c(5): JMP 0x00016e2c
00017b11(5): MOV EAX,0xc
00017b16(5): JMP 0x00016e9c
00017b1b(5): MOV RAX,qword ptr [RSP + 0x8]
00017b20(8): MOV qword ptr [RBX + 0x68],0x0
00017b28(3): MOV R13,qword ptr [RAX]
00017b2b(5): JMP 0x00016e2c
00017b30(8): MOV qword ptr [RCX + 0x8],0x0
00017b38(7): MOV qword ptr [RCX],0x0
00017b3f(5): MOV EAX,0xc
00017b44(5): JMP 0x00016e20
00017b49(3): CMP EDI,0x10
00017b4c(6): JZ 0x00017a3c
00017b52(5): JMP 0x000176ae
00017b57(3): MOV R14D,R8D
00017b5a(8): CMP qword ptr [0x98 + RBX],0x0
00017b62(7): MOVZX EDX,byte ptr [0xb0 + RBX]
00017b69(10): MOV dword ptr [0xb4 + RBX],0x1
00017b73(3): SETG AL
00017b76(3): AND EDX,0xfffffff9
00017b79(3): OR EAX,R14D
00017b7c(3): AND EAX,0x1
00017b7f(2): ADD EAX,EAX
00017b81(2): OR EAX,EDX
00017b83(6): MOV byte ptr [0xb0 + RBX],AL
00017b89(5): JMP 0x000176ae
00017b8e(5): CALL 0x00001c70
00017b93(7): LEA RCX,[0x1ccc0]
00017b9a(7): LEA RSI,[0x1c6f0]
00017ba1(7): LEA RDI,[0x1c7b3]
00017ba8(5): MOV EDX,0x5b0
00017bad(5): CALL 0x00001e30
00017bb2(7): LEA RCX,[0x1ccc0]
00017bb9(7): LEA RSI,[0x1c6f0]
00017bc0(7): LEA RDI,[0x1c710]
00017bc7(5): MOV EDX,0x5c2
00017bcc(5): CALL 0x00001e30
00017bd1(7): LEA RCX,[0x1ccc0]
00017bd8(7): LEA RSI,[0x1c6f0]
00017bdf(7): LEA RDI,[0x1c7a9]
00017be6(5): MOV EDX,0x5af
00017beb(5): CALL 0x00001e30
00017bf0(5): CALL 0x00001db0
00017bf5(1): NOP
00017bf6(10): NOP word ptr CS:[RAX + RAX*0x1]
00017c00(4): SUB RSP,0x8
00017c04(7): MOV RCX,qword ptr [0x002219f8]
00017c0b(3): MOV R8,RDI
00017c0e(3): MOV RDI,RDX
00017c11(3): MOV RAX,RCX
00017c14(4): SHR RAX,0x19
00017c18(3): AND EAX,0x1
00017c1b(3): SHL EAX,0x4
00017c1e(2): MOV EDX,EAX
00017c20(4): MOVZX EAX,byte ptr [RDI + 0x38]
00017c24(3): AND EAX,0xffffffef
00017c27(2): OR EAX,EDX
00017c29(3): MOV RDX,RSI
00017c2c(3): MOV RSI,R8
00017c2f(3): OR EAX,0xffffff80
00017c32(3): MOV byte ptr [RDI + 0x38],AL
00017c35(5): CALL 0x00016b00
00017c3a(2): TEST EAX,EAX
00017c3c(2): JZ 0x00017c68
00017c3e(7): LEA RDX,[0x1cd20]
00017c45(2): CDQE
00017c47(7): LEA RSI,[0x1cdc0]
00017c4e(2): XOR EDI,EDI
00017c50(4): ADD RSI,qword ptr [RDX + RAX*0x8]
00017c54(5): MOV EDX,0x5
00017c59(4): ADD RSP,0x8
00017c5d(5): JMP 0x00001d80
00017c68(2): XOR EAX,EAX
00017c6a(4): ADD RSP,0x8
00017c6e(1): RET
00017c70(7): MOV RAX,qword ptr [0x002219f8]
00017c77(7): MOV qword ptr [0x002219f8],RDI
00017c7e(1): RET
00017c80(2): PUSH R12
00017c82(1): PUSH RBP
00017c83(2): XOR EAX,EAX
00017c85(1): PUSH RBX
00017c86(4): MOV RBP,qword ptr [RDI + 0x20]
00017c8a(3): MOV RBX,RDI
00017c8d(3): MOV R12,qword ptr [RDI]
00017c90(4): LEA RDI,[RBP + 0x8]
00017c94(3): MOV RCX,RBP
00017c97(8): MOV qword ptr [RBP],0x0
00017c9f(11): MOV qword ptr [0xf8 + RBP],0x0
00017caa(4): AND RDI,-0x8
00017cae(3): SUB RCX,RDI
00017cb1(6): ADD ECX,0x100
00017cb7(3): SHR ECX,0x3
00017cba(3): STOSQ.REP RDI
00017cbd(3): MOV RCX,RBP
00017cc0(3): MOV RDI,RBX
00017cc3(5): MOV RSI,qword ptr [R12 + 0x48]
00017cc8(4): LEA RDX,[RSI + 0x18]
00017ccc(4): ADD RSI,0x10
00017cd0(5): CALL 0x000101d0
00017cd5(5): MOV RAX,qword ptr [R12 + 0x50]
00017cda(5): CMP qword ptr [R12 + 0x48],RAX
00017cdf(2): JZ 0x00017cf9
00017ce1(4): LEA RDX,[RAX + 0x18]
00017ce5(4): LEA RSI,[RAX + 0x10]
00017ce9(3): MOV RCX,RBP
00017cec(3): MOV RDI,RBX
00017cef(5): CALL 0x000101d0
00017cf4(5): MOV RAX,qword ptr [R12 + 0x48]
00017cf9(5): MOV RSI,qword ptr [R12 + 0x58]
00017cfe(3): CMP RSI,RAX
00017d01(2): JZ 0x00017d1b
00017d03(4): LEA RDX,[RSI + 0x18]
00017d07(3): MOV RCX,RBP
00017d0a(4): ADD RSI,0x10
00017d0e(3): MOV RDI,RBX
00017d11(5): CALL 0x000101d0
00017d16(5): MOV RAX,qword ptr [R12 + 0x48]
00017d1b(5): MOV RSI,qword ptr [R12 + 0x60]
00017d20(3): CMP RSI,RAX
00017d23(2): JZ 0x00017d38
00017d25(4): LEA RDX,[RSI + 0x18]
00017d29(3): MOV RCX,RBP
00017d2c(4): ADD RSI,0x10
00017d30(3): MOV RDI,RBX
00017d33(5): CALL 0x000101d0
00017d38(4): OR byte ptr [RBX + 0x38],0x8
00017d3c(2): XOR EAX,EAX
00017d3e(1): POP RBX
00017d3f(1): POP RBP
00017d40(2): POP R12
00017d42(1): RET
00017d50(2): PUSH R15
00017d52(2): PUSH R14
00017d54(3): MOV RAX,R8
00017d57(2): PUSH R13
00017d59(2): PUSH R12
00017d5b(3): ADD R8,RCX
00017d5e(1): PUSH RBP
00017d5f(1): PUSH RBX
00017d60(4): SUB RSP,0x38
00017d64(3): TEST RCX,RCX
00017d67(4): MOV EBX,dword ptr [RSP + 0x78]
00017d6b(5): MOV R12,qword ptr [RSP + 0x70]
00017d70(4): MOV dword ptr [RSP + 0x28],EBX
00017d74(6): JS 0x000180b0
00017d7a(3): CMP RCX,RDX
00017d7d(6): JG 0x000180b0
00017d83(3): CMP R8,RDX
00017d86(3): MOV RBX,RCX
00017d89(3): MOV R15,RDI
00017d8c(6): JG 0x00018010
00017d92(3): TEST RAX,RAX
00017d95(2): JS 0x00017da0
00017d97(3): CMP RCX,R8
00017d9a(6): JG 0x00018010
00017da0(3): TEST R8,R8
00017da3(6): JS 0x00018088
00017da9(3): TEST RAX,RAX
00017dac(2): JNS 0x00017db7
00017dae(3): CMP RBX,R8
00017db1(6): JLE 0x00018088
00017db7(5): MOVZX EAX,byte ptr [R15 + 0x38]
00017dbc(3): MOV R13D,EAX
00017dbf(4): SHR R13B,0x5
00017dc3(3): MOV EDI,R13D
00017dc6(3): AND EDI,0x3
00017dc9(3): CMP R8,RBX
00017dcc(4): MOV dword ptr [RSP + 0x2c],EDI
00017dd0(2): JLE 0x00017de1
00017dd2(5): CMP qword ptr [R15 + 0x20],0x0
00017dd7(2): JZ 0x00017de1
00017dd9(2): TEST AL,0x8
00017ddb(6): JZ 0x00017fd0
00017de1(2): TEST AL,0x10
00017de3(6): JNZ 0x00017fb0
00017de9(3): TEST R12,R12
00017dec(6): JZ 0x00017fb0
00017df2(3): AND EAX,0x6
00017df5(4): MOV RCX,qword ptr [R15 + 0x30]
00017df9(2): CMP AL,0x4
00017dfb(6): JZ 0x00017f90
00017e01(4): LEA R14,[RCX + 0x1]
00017e05(3): MOV R13,R14
00017e08(3): MOV RDI,R14
00017e0b(4): SHL RDI,0x4
00017e0f(5): MOV qword ptr [RSP + 0x20],R9
00017e14(5): MOV qword ptr [RSP + 0x18],RDX
00017e19(5): MOV qword ptr [RSP + 0x10],RSI
00017e1e(5): MOV qword ptr [RSP + 0x8],R8
00017e23(5): CALL 0x00001f20
00017e28(3): TEST RAX,RAX
00017e2b(3): MOV RBP,RAX
00017e2e(6): JZ 0x000180c0
00017e34(4): SUB RSP,0x8
00017e38(3): MOV RCX,RBX
00017e3b(3): MOV RDI,R15
00017e3e(4): MOV EAX,dword ptr [RSP + 0x34]
00017e42(1): PUSH RAX
00017e43(1): PUSH RBP
00017e44(2): PUSH R14
00017e46(5): MOV R9,qword ptr [RSP + 0x40]
00017e4b(5): MOV R8,qword ptr [RSP + 0x28]
00017e50(5): MOV RDX,qword ptr [RSP + 0x38]
00017e55(5): MOV RSI,qword ptr [RSP + 0x30]
00017e5a(5): CALL 0x00012970
00017e5f(4): ADD RSP,0x20
00017e63(2): TEST EAX,EAX
00017e65(2): JZ 0x00017e98
00017e67(3): CMP EAX,0x1
00017e6a(7): MOV R12,-0x1
00017e71(2): JZ 0x00017e7a
00017e73(7): MOV R12,-0x2
00017e7a(3): MOV RDI,RBP
00017e7d(5): CALL 0x00001c60
00017e82(4): ADD RSP,0x38
00017e86(3): MOV RAX,R12
00017e89(1): POP RBX
00017e8a(1): POP RBP
00017e8b(2): POP R12
00017e8d(2): POP R13
00017e8f(2): POP R14
00017e91(2): POP R15
00017e93(1): RET
00017e98(3): TEST R12,R12
00017e9b(6): JZ 0x00017f68
00017ea1(5): MOVZX EAX,byte ptr [R15 + 0x38]
00017ea6(4): LEA RDX,[R13 + 0x1]
00017eaa(2): SHR AL,1
00017eac(3): AND EAX,0x3
00017eaf(6): JZ 0x00018020
00017eb5(3): CMP EAX,0x1
00017eb8(6): JZ 0x000180d0
00017ebe(3): CMP EAX,0x2
00017ec1(6): JNZ 0x000181b0
00017ec7(4): CMP R14,qword ptr [R12]
00017ecb(6): JA 0x00018191
00017ed1(6): MOV R9D,0x2
00017ed7(3): TEST R13,R13
00017eda(6): JLE 0x00018148
00017ee0(5): MOV R8,qword ptr [R12 + 0x8]
00017ee5(5): MOV RDI,qword ptr [R12 + 0x10]
00017eea(8): LEA RSI,[R13*0x8]
00017ef2(3): MOV RDX,R13
00017ef5(2): XOR EAX,EAX
00017ef7(9): NOP word ptr [RAX + RAX*0x1]
00017f00(5): MOV RCX,qword ptr [RBP + RAX*0x2]
00017f05(4): MOV qword ptr [R8 + RAX*0x1],RCX
00017f09(5): MOV RCX,qword ptr [RBP + RAX*0x2 + 0x8]
00017f0e(4): MOV qword ptr [RDI + RAX*0x1],RCX
00017f12(4): ADD RAX,0x8
00017f16(3): CMP RSI,RAX
00017f19(2): JNZ 0x00017f00
00017f1b(4): CMP qword ptr [R12],RDX
00017f1f(2): JBE 0x00017f4d
00017f21(5): MOV RSI,qword ptr [R12 + 0x10]
00017f26(5): MOV RCX,qword ptr [R12 + 0x8]
00017f2b(7): MOV RAX,-0x1
00017f32(6): NOP word ptr [RAX + RAX*0x1]
00017f38(4): MOV qword ptr [RSI + RDX*0x8],RAX
00017f3c(4): ADD R13,0x1
00017f40(4): MOV qword ptr [RCX + RDX*0x8],RAX
00017f44(4): CMP R13,qword ptr [R12]
00017f48(3): MOV RDX,R13
00017f4b(2): JC 0x00017f38
00017f4d(5): MOVZX EAX,byte ptr [R15 + 0x38]
00017f52(4): LEA R13D,[R9 + R9*0x1]
00017f56(3): AND EAX,0xfffffff9
00017f59(3): OR EAX,R13D
00017f5c(2): TEST AL,0x6
00017f5e(4): MOV byte ptr [R15 + 0x38],AL
00017f62(6): JZ 0x00017e73
00017f68(5): CMP byte ptr [RSP + 0x28],0x0
00017f6d(4): MOV R12,qword ptr [RBP]
00017f71(6): JZ 0x00017e7a
00017f77(3): CMP R12,RBX
00017f7a(6): JNZ 0x00018172
00017f80(4): MOV R12,qword ptr [RBP + 0x8]
00017f84(3): SUB R12,RBX
00017f87(5): JMP 0x00017e7a
00017f90(4): MOV R14,qword ptr [R12]
00017f94(3): CMP R14,RCX
00017f97(6): JA 0x00017e01
00017f9d(3): TEST R14,R14
00017fa0(3): MOV R13,R14
00017fa3(6): JG 0x00017e08
00017fa9(7): NOP dword ptr [RAX]
00017fb0(5): MOV EDI,0x10
00017fb5(6): MOV R14D,0x1
00017fbb(6): MOV R13D,0x1
00017fc1(3): XOR R12D,R12D
00017fc4(5): JMP 0x00017e0f
00017fd0(3): MOV RDI,R15
00017fd3(5): MOV qword ptr [RSP + 0x20],R9
00017fd8(5): MOV qword ptr [RSP + 0x18],RDX
00017fdd(5): MOV qword ptr [RSP + 0x10],RSI
00017fe2(5): MOV qword ptr [RSP + 0x8],R8
00017fe7(5): CALL 0x00017c80
00017fec(5): MOVZX EAX,byte ptr [R15 + 0x38]
00017ff1(5): MOV R9,qword ptr [RSP + 0x20]
00017ff6(5): MOV RDX,qword ptr [RSP + 0x18]
00017ffb(5): MOV RSI,qword ptr [RSP + 0x10]
00018000(5): MOV R8,qword ptr [RSP + 0x8]
00018005(5): JMP 0x00017de1
00018010(3): MOV R8,RDX
00018013(5): JMP 0x00017db7
00018020(8): LEA R14,[RDX*0x8]
00018028(5): MOV qword ptr [RSP + 0x8],RDX
0001802d(3): MOV RDI,R14
00018030(5): CALL 0x00001f20
00018035(3): TEST RAX,RAX
00018038(5): MOV qword ptr [R12 + 0x8],RAX
0001803d(5): MOV RDX,qword ptr [RSP + 0x8]
00018042(6): JZ 0x0001815a
00018048(3): MOV RDI,R14
0001804b(5): MOV qword ptr [RSP + 0x8],RDX
00018050(5): MOV qword ptr [RSP + 0x10],RAX
00018055(5): CALL 0x00001f20
0001805a(3): TEST RAX,RAX
0001805d(5): MOV qword ptr [R12 + 0x10],RAX
00018062(5): MOV RDX,qword ptr [RSP + 0x8]
00018067(5): MOV RCX,qword ptr [RSP + 0x10]
0001806c(6): JZ 0x00018152
00018072(4): MOV qword ptr [R12],RDX
00018076(6): MOV R9D,0x1
0001807c(5): JMP 0x00017ed7
00018088(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001808d(3): XOR R8D,R8D
00018090(3): MOV R13D,EAX
00018093(4): SHR R13B,0x5
00018097(3): MOV EDI,R13D
0001809a(3): AND EDI,0x3
0001809d(4): MOV dword ptr [RSP + 0x2c],EDI
000180a1(5): JMP 0x00017de1
000180b0(7): MOV R12,-0x1
000180b7(5): JMP 0x00017e82
000180c0(7): MOV R12,-0x2
000180c7(5): JMP 0x00017e82
000180d0(4): CMP qword ptr [R12],RDX
000180d4(6): MOV R9D,0x1
000180da(6): JNC 0x00017ed7
000180e0(8): LEA RCX,[RDX*0x8]
000180e8(5): MOV RDI,qword ptr [R12 + 0x8]
000180ed(5): MOV byte ptr [RSP + 0x18],R9B
000180f2(5): MOV qword ptr [RSP + 0x10],RDX
000180f7(3): MOV RSI,RCX
000180fa(5): MOV qword ptr [RSP + 0x8],RCX
000180ff(5): CALL 0x00001f90
00018104(3): TEST RAX,RAX
00018107(3): MOV R14,RAX
0001810a(2): JZ 0x0001815a
0001810c(5): MOV RCX,qword ptr [RSP + 0x8]
00018111(5): MOV RDI,qword ptr [R12 + 0x10]
00018116(3): MOV RSI,RCX
00018119(5): CALL 0x00001f90
0001811e(3): TEST RAX,RAX
00018121(5): MOV RDX,qword ptr [RSP + 0x10]
00018126(6): MOVZX R9D,byte ptr [RSP + 0x18]
0001812c(2): JZ 0x00018162
0001812e(5): MOV qword ptr [R12 + 0x8],R14
00018133(5): MOV qword ptr [R12 + 0x10],RAX
00018138(4): MOV qword ptr [R12],RDX
0001813c(5): JMP 0x00017ed7
00018148(2): XOR EDX,EDX
0001814a(3): XOR R13D,R13D
0001814d(5): JMP 0x00017f1b
00018152(3): MOV RDI,RCX
00018155(5): CALL 0x00001c60
0001815a(3): XOR R9D,R9D
0001815d(5): JMP 0x00017f4d
00018162(3): MOV RDI,R14
00018165(5): CALL 0x00001c60
0001816a(3): XOR R9D,R9D
0001816d(5): JMP 0x00017f4d
00018172(7): LEA RCX,[0x1cc90]
00018179(7): LEA RSI,[0x1c6d0]
00018180(7): LEA RDI,[0x1c7f3]
00018187(5): MOV EDX,0x1be
0001818c(5): CALL 0x00001e30
00018191(7): LEA RCX,[0x1cc80]
00018198(7): LEA RSI,[0x1c6d0]
0001819f(7): LEA RDI,[0x1c7db]
000181a6(5): MOV EDX,0x1fb
000181ab(5): CALL 0x00001e30
000181b0(7): LEA RCX,[0x1cc80]
000181b7(7): LEA RSI,[0x1c6d0]
000181be(7): LEA RDI,[0x1c7be]
000181c5(5): MOV EDX,0x1f9
000181ca(5): CALL 0x00001e30
000181cf(1): NOP
000181d0(2): PUSH R15
000181d2(2): PUSH R14
000181d4(2): PUSH R13
000181d6(2): PUSH R12
000181d8(3): MOV R12,RDI
000181db(1): PUSH RBP
000181dc(1): PUSH RBX
000181dd(3): MOV RBP,R8
000181e0(3): MOV RBX,RDX
000181e3(3): MOV RDX,RBP
000181e6(4): SUB RSP,0x28
000181ea(4): SHR RDX,0x3f
000181ee(5): MOV RAX,qword ptr [RSP + 0x70]
000181f3(2): MOV EDI,EDX
000181f5(5): MOV R8D,dword ptr [RSP + 0x78]
000181fa(4): SHR RAX,0x3f
000181fe(3): OR DIL,AL
00018201(6): JNZ 0x000182d0
00018207(3): TEST RBX,RBX
0001820a(6): JS 0x000182d0
00018210(3): MOV R15,RBX
00018213(3): ADD R15,RBP
00018216(6): JO 0x000182d0
0001821c(3): TEST RBP,RBP
0001821f(3): MOV R14,RCX
00018222(3): MOV RCX,R9
00018225(6): JZ 0x000182e0
0001822b(3): XOR R13D,R13D
0001822e(3): TEST RBX,RBX
00018231(5): MOV qword ptr [RSP + 0x8],RSI
00018236(2): JNZ 0x00018280
00018238(4): MOVZX R8D,R8B
0001823c(3): MOV RDX,R15
0001823f(3): MOV RSI,R14
00018242(2): PUSH R8
00018244(4): PUSH qword ptr [RSP + 0x70]
00018248(3): MOV RDI,R12
0001824b(8): MOV R9,qword ptr [0x80 + RSP]
00018253(5): MOV R8,qword ptr [RSP + 0x70]
00018258(5): CALL 0x00017d50
0001825d(3): MOV RDI,R13
00018260(3): MOV RBX,RAX
00018263(5): CALL 0x00001c60
00018268(1): POP RAX
00018269(1): POP RDX
0001826a(4): ADD RSP,0x28
0001826e(3): MOV RAX,RBX
00018271(1): POP RBX
00018272(1): POP RBP
00018273(2): POP R12
00018275(2): POP R13
00018277(2): POP R14
00018279(2): POP R15
0001827b(1): RET
00018280(3): MOV RDI,R15
00018283(5): MOV dword ptr [RSP + 0x1c],R8D
00018288(5): MOV qword ptr [RSP + 0x10],R9
0001828d(5): CALL 0x00001f20
00018292(3): TEST RAX,RAX
00018295(3): MOV R13,RAX
00018298(2): JZ 0x000182d0
0001829a(5): MOV RSI,qword ptr [RSP + 0x8]
0001829f(3): MOV RDX,RBX
000182a2(3): MOV RDI,RAX
000182a5(5): CALL 0x00001ee0
000182aa(5): LEA RDI,[R13 + RBX*0x1]
000182af(3): MOV RSI,R14
000182b2(3): MOV RDX,RBP
000182b5(3): MOV R14,R13
000182b8(5): CALL 0x00001ee0
000182bd(5): MOV RCX,qword ptr [RSP + 0x10]
000182c2(5): MOV R8D,dword ptr [RSP + 0x1c]
000182c7(5): JMP 0x00018238
000182d0(7): MOV RBX,-0x2
000182d7(2): JMP 0x0001826a
000182e0(3): MOV R14,RSI
000182e3(3): XOR R13D,R13D
000182e6(5): JMP 0x00018238
000182f0(2): MOV EAX,EDX
000182f2(2): PUSH R14
000182f4(2): PUSH R13
000182f6(3): AND EAX,0x1
000182f9(2): PUSH R12
000182fb(1): PUSH RBP
000182fc(3): CMP EAX,0x1
000182ff(1): PUSH RBX
00018300(3): MOV RBX,RDI
00018303(3): SBB R14,R14
00018306(7): MOV qword ptr [RDI],0x0
0001830d(8): MOV qword ptr [RDI + 0x8],0x0
00018315(7): AND R14D,0xfd4fca
0001831c(8): MOV qword ptr [RDI + 0x10],0x0
00018324(5): MOV EDI,0x100
00018329(3): MOV R12,RSI
0001832c(2): MOV EBP,EDX
0001832e(7): ADD R14,0x3b2fc
00018335(5): CALL 0x00001f20
0001833a(3): TEST RAX,RAX
0001833d(4): MOV qword ptr [RBX + 0x20],RAX
00018341(6): JZ 0x000183f0
00018347(3): MOV R13,RBP
0001834a(4): SHL R13,0x15
0001834e(7): AND R13D,0x400000
00018355(3): OR R13,R14
00018358(4): TEST BPL,0x4
0001835c(2): JNZ 0x000183c0
0001835e(4): AND byte ptr [RBX + 0x38],0x7f
00018362(4): MOVZX EDX,byte ptr [RBX + 0x38]
00018366(3): SHR EBP,0x3
00018369(3): MOV RDI,R12
0001836c(3): AND EBP,0x1
0001836f(8): MOV qword ptr [RBX + 0x28],0x0
00018377(3): SHL EBP,0x4
0001837a(3): AND EDX,0xffffffef
0001837d(2): OR EBP,EDX
0001837f(4): MOV byte ptr [RBX + 0x38],BPL
00018383(5): CALL 0x00001da0
00018388(3): MOV RCX,R13
0001838b(3): MOV RDX,RAX
0001838e(3): MOV RSI,R12
00018391(3): MOV RDI,RBX
00018394(5): CALL 0x00016b00
00018399(3): CMP EAX,0x10
0001839c(2): MOV EBP,EAX
0001839e(2): JZ 0x000183d8
000183a0(2): TEST EAX,EAX
000183a2(2): JNZ 0x000183dd
000183a4(3): MOV RDI,RBX
000183a7(5): CALL 0x00017c80
000183ac(1): POP RBX
000183ad(2): MOV EAX,EBP
000183af(1): POP RBP
000183b0(2): POP R12
000183b2(2): POP R13
000183b4(2): POP R14
000183b6(1): RET
000183c0(4): AND R13,-0x41
000183c4(4): OR byte ptr [RBX + 0x38],0x80
000183c8(7): OR R13,0x100
000183cf(2): JMP 0x00018362
000183d8(5): MOV EBP,0x8
000183dd(4): MOV RDI,qword ptr [RBX + 0x20]
000183e1(5): CALL 0x00001c60
000183e6(8): MOV qword ptr [RBX + 0x20],0x0
000183ee(2): JMP 0x000183ac
000183f0(5): MOV EBP,0xc
000183f5(1): POP RBX
000183f6(2): MOV EAX,EBP
000183f8(1): POP RBP
000183f9(2): POP R12
000183fb(2): POP R13
000183fd(2): POP R14
000183ff(1): RET
00018400(2): PUSH R13
00018402(2): PUSH R12
00018404(1): PUSH RBP
00018405(1): PUSH RBX
00018406(4): SUB RSP,0x8
0001840a(3): CMP EDI,0x10
0001840d(2): JA 0x00018470
0001840f(7): LEA RAX,[0x1cd20]
00018416(3): MOVSXD RDI,EDI
00018419(7): LEA RSI,[0x1cdc0]
00018420(3): MOV RBP,RDX
00018423(5): MOV EDX,0x5
00018428(3): MOV R12,RCX
0001842b(4): ADD RSI,qword ptr [RAX + RDI*0x8]
0001842f(2): XOR EDI,EDI
00018431(5): CALL 0x00001d80
00018436(3): MOV RDI,RAX
00018439(3): MOV R13,RAX
0001843c(5): CALL 0x00001da0
00018441(3): TEST R12,R12
00018444(4): LEA RBX,[RAX + 0x1]
00018448(2): JZ 0x0001845d
0001844a(3): CMP RBX,R12
0001844d(3): MOV RDX,RBX
00018450(2): JA 0x00018478
00018452(3): MOV RSI,R13
00018455(3): MOV RDI,RBP
00018458(5): CALL 0x00001ee0
0001845d(4): ADD RSP,0x8
00018461(3): MOV RAX,RBX
00018464(1): POP RBX
00018465(1): POP RBP
00018466(2): POP R12
00018468(2): POP R13
0001846a(1): RET
00018470(5): CALL 0x00001c70
00018475(3): NOP dword ptr [RAX]
00018478(5): LEA RDX,[R12 + -0x1]
0001847d(6): MOV byte ptr [RBP + R12*0x1 + -0x1],0x0
00018483(2): JMP 0x00018452
00018490(1): PUSH RBX
00018491(3): MOV RBX,RDI
00018494(3): MOV RDI,qword ptr [RDI]
00018497(3): TEST RDI,RDI
0001849a(2): JZ 0x000184a1
0001849c(5): CALL 0x0000bc80
000184a1(4): MOV RDI,qword ptr [RBX + 0x20]
000184a5(7): MOV qword ptr [RBX],0x0
000184ac(8): MOV qword ptr [RBX + 0x8],0x0
000184b4(5): CALL 0x00001c60
000184b9(4): MOV RDI,qword ptr [RBX + 0x28]
000184bd(8): MOV qword ptr [RBX + 0x20],0x0
000184c5(5): CALL 0x00001c60
000184ca(8): MOV qword ptr [RBX + 0x28],0x0
000184d2(1): POP RBX
000184d3(1): RET
000184e0(7): TEST R8D,0xfffffff8
000184e7(6): JNZ 0x00018578
000184ed(2): PUSH R13
000184ef(2): PUSH R12
000184f1(3): MOV R13,RDX
000184f4(1): PUSH RBP
000184f5(1): PUSH RBX
000184f6(3): MOV R12,RCX
000184f9(3): MOV EBX,R8D
000184fc(3): MOV RBP,RDI
000184ff(4): SUB RSP,0x18
00018503(4): TEST R8B,0x4
00018507(2): JNZ 0x00018558
00018509(3): MOV RDI,RSI
0001850c(5): MOV qword ptr [RSP + 0x8],RSI
00018511(5): CALL 0x00001da0
00018516(2): XOR ECX,ECX
00018518(4): TEST byte ptr [RBP + 0x38],0x10
0001851c(3): MOV RDX,RAX
0001851f(5): MOV RSI,qword ptr [RSP + 0x8]
00018524(2): JZ 0x00018566
00018526(4): SUB RSP,0x8
0001852a(1): PUSH RBX
0001852b(2): PUSH 0x0
0001852d(2): PUSH 0x0
0001852f(3): MOV RDI,RBP
00018532(3): MOV R9,RDX
00018535(3): MOV R8,RDX
00018538(5): CALL 0x00012970
0001853d(4): ADD RSP,0x20
00018541(2): TEST EAX,EAX
00018543(3): SETNZ AL
00018546(4): ADD RSP,0x18
0001854a(1): POP RBX
0001854b(3): MOVZX EAX,AL
0001854e(1): POP RBP
0001854f(2): POP R12
00018551(2): POP R13
00018553(1): RET
00018558(4): TEST byte ptr [RBP + 0x38],0x10
0001855c(3): MOV RCX,qword ptr [RCX]
0001855f(5): MOV RDX,qword ptr [R12 + 0x8]
00018564(2): JNZ 0x00018526
00018566(4): SUB RSP,0x8
0001856a(1): PUSH RBX
0001856b(2): PUSH R12
0001856d(2): PUSH R13
0001856f(2): JMP 0x0001852f
00018578(5): MOV EAX,0x2
0001857d(1): RET
00018580(4): SUB RSP,0x8
00018584(3): MOV R9,RDX
00018587(2): PUSH 0x1
00018589(2): PUSH R8
0001858b(3): XOR R8D,R8D
0001858e(5): CALL 0x00017d50
00018593(4): ADD RSP,0x18
00018597(1): RET
000185a0(4): SUB RSP,0x8
000185a4(2): PUSH 0x0
000185a6(2): PUSH R9
000185a8(3): MOV R9,RDX
000185ab(5): CALL 0x00017d50
000185b0(4): ADD RSP,0x18
000185b4(1): RET
000185c0(4): SUB RSP,0x8
000185c4(2): PUSH 0x1
000185c6(4): PUSH qword ptr [RSP + 0x20]
000185ca(4): PUSH qword ptr [RSP + 0x20]
000185ce(2): PUSH 0x0
000185d0(5): CALL 0x000181d0
000185d5(4): ADD RSP,0x28
000185d9(1): RET
000185e0(4): SUB RSP,0x8
000185e4(2): PUSH 0x0
000185e6(4): PUSH qword ptr [RSP + 0x28]
000185ea(4): PUSH qword ptr [RSP + 0x28]
000185ee(4): PUSH qword ptr [RSP + 0x28]
000185f2(5): CALL 0x000181d0
000185f7(4): ADD RSP,0x28
000185fb(1): RET
00018600(3): TEST RDX,RDX
00018603(2): JNZ 0x00018628
00018605(4): AND byte ptr [RDI + 0x38],0xf9
00018609(7): MOV qword ptr [RSI],0x0
00018610(8): MOV qword ptr [RSI + 0x10],0x0
00018618(8): MOV qword ptr [RSI + 0x8],0x0
00018620(1): RET
00018628(4): MOVZX EAX,byte ptr [RDI + 0x38]
0001862c(3): AND EAX,0xfffffff9
0001862f(3): OR EAX,0x2
00018632(3): MOV byte ptr [RDI + 0x38],AL
00018635(3): MOV qword ptr [RSI],RDX
00018638(4): MOV qword ptr [RSI + 0x8],RCX
0001863c(4): MOV qword ptr [RSI + 0x10],R8
00018640(1): RET
00018650(2): XOR EAX,EAX
00018652(3): CMP RDI,RSI
00018655(2): JNZ 0x0001866c
00018657(2): JMP 0x0001869c
00018660(4): ADD RDI,0x1
00018664(4): ADD RSI,0x1
00018668(2): CMP AL,DL
0001866a(2): JNZ 0x00018694
0001866c(3): MOVZX EAX,byte ptr [RDI]
0001866f(2): MOV EDX,EAX
00018671(3): LEA ECX,[RAX + 0x20]
00018674(3): SUB EDX,0x41
00018677(3): CMP DL,0x1a
0001867a(3): MOVZX EDX,byte ptr [RSI]
0001867d(3): CMOVC EAX,ECX
00018680(2): MOV ECX,EDX
00018682(4): LEA R9D,[RDX + 0x20]
00018686(3): SUB ECX,0x41
00018689(3): CMP CL,0x1a
0001868c(4): CMOVC EDX,R9D
00018690(2): TEST AL,AL
00018692(2): JNZ 0x00018660
00018694(3): MOVZX EAX,AL
00018697(3): MOVZX EDX,DL
0001869a(2): SUB EAX,EDX
0001869c(2): RET
000186a0(2): PUSH R12
000186a2(1): PUSH RBP
000186a3(3): MOV RBP,RDI
000186a6(1): PUSH RBX
000186a7(5): CALL 0x00001cc0
000186ac(3): MOV EBX,dword ptr [RBP]
000186af(3): MOV RDI,RBP
000186b2(3): MOV R12,RAX
000186b5(5): CALL 0x0000a290
000186ba(3): AND EBX,0x20
000186bd(2): TEST EBX,EBX
000186bf(2): JNZ 0x000186d8
000186c1(2): TEST EAX,EAX
000186c3(2): JZ 0x000186cf
000186c5(3): TEST R12,R12
000186c8(5): MOV EAX,0xffffffff
000186cd(2): JZ 0x00018708
000186cf(1): POP RBX
000186d0(1): POP RBP
000186d1(2): POP R12
000186d3(1): RET
000186d8(2): TEST EAX,EAX
000186da(2): JNZ 0x000186f8
000186dc(5): CALL 0x00001c80
000186e1(6): MOV dword ptr [RAX],0x0
000186e7(5): MOV EAX,0xffffffff
000186ec(1): POP RBX
000186ed(1): POP RBP
000186ee(2): POP R12
000186f0(1): RET
000186f8(1): POP RBX
000186f9(5): MOV EAX,0xffffffff
000186fe(1): POP RBP
000186ff(2): POP R12
00018701(1): RET
00018708(5): CALL 0x00001c80
0001870d(3): CMP dword ptr [RAX],0x9
00018710(1): POP RBX
00018711(1): POP RBP
00018712(2): POP R12
00018714(3): SETNZ AL
00018717(3): MOVZX EAX,AL
0001871a(2): NEG EAX
0001871c(1): RET
00018720(4): SUB RSP,0x8
00018724(2): XOR ESI,ESI
00018726(5): CALL 0x00001fa0
0001872b(3): MOV RDX,RAX
0001872e(5): MOV EAX,0x1
00018733(3): TEST RDX,RDX
00018736(2): JZ 0x00018755
00018738(7): LEA RDI,[0x1cf50]
0001873f(5): MOV ECX,0x2
00018744(3): MOV RSI,RDX
00018747(2): CMPSB.REPE RDI,RSI
00018749(3): SETA CL
0001874c(3): SBB CL,0x0
0001874f(2): XOR EAX,EAX
00018751(2): TEST CL,CL
00018753(2): JNZ 0x00018760
00018755(4): ADD RSP,0x8
00018759(1): RET
00018760(7): LEA RDI,[0x1cf52]
00018767(5): MOV ECX,0x6
0001876c(3): MOV RSI,RDX
0001876f(2): CMPSB.REPE RDI,RSI
00018771(3): SETA AL
00018774(2): SBB AL,0x0
00018776(2): TEST AL,AL
00018778(3): SETNZ AL
0001877b(4): ADD RSP,0x8
0001877f(1): RET
00018780(4): SUB RSP,0x8
00018784(5): MOV EDI,0xe
00018789(5): CALL 0x00001f50
0001878e(3): TEST RAX,RAX
00018791(2): JZ 0x000187b0
00018793(3): CMP byte ptr [RAX],0x0
00018796(7): LEA RDX,[0x1cf58]
0001879d(4): CMOVZ RAX,RDX
000187a1(4): ADD RSP,0x8
000187a5(1): RET
000187b0(7): LEA RAX,[0x1cf58]
000187b7(4): ADD RSP,0x8
000187bb(1): RET
000187c0(1): PUSH RBX
000187c1(2): MOV EBX,EDI
000187c3(5): CALL 0x00001f00
000187c8(2): TEST EAX,EAX
000187ca(2): JS 0x000187d0
000187cc(1): POP RBX
000187cd(1): RET
000187d0(2): MOV EDI,EBX
000187d2(5): CALL 0x00001d10
000187d7(2): TEST EAX,EAX
000187d9(3): SETZ AL
000187dc(3): MOVZX EAX,AL
000187df(1): POP RBX
000187e0(1): RET
000187f0(1): PUSH RBP
000187f1(1): PUSH RBX
000187f2(3): MOV RBX,RSI
000187f5(4): LEA RAX,[RBX + 0x18]
000187f9(3): MOV RBP,RDI
000187fc(4): SUB RSP,0x8
00018800(3): MOV RSI,qword ptr [RSI]
00018803(4): MOV RDX,qword ptr [RBX + 0x8]
00018807(3): CMP RSI,RAX
0001880a(2): JZ 0x00018830
0001880c(3): MOV qword ptr [RDI],RSI
0001880f(4): MOVZX EAX,byte ptr [RBX + 0x10]
00018813(4): MOV qword ptr [RBP + 0x8],RDX
00018817(2): TEST AL,AL
00018819(3): MOV byte ptr [RBP + 0x10],AL
0001881c(2): JZ 0x00018824
0001881e(3): MOV EAX,dword ptr [RBX + 0x14]
00018821(3): MOV dword ptr [RBP + 0x14],EAX
00018824(4): ADD RSP,0x8
00018828(1): POP RBX
00018829(1): POP RBP
0001882a(1): RET
00018830(4): LEA RCX,[RDI + 0x18]
00018834(3): MOV RDI,RCX
00018837(5): CALL 0x00001ee0
0001883c(4): MOV RDX,qword ptr [RBX + 0x8]
00018840(4): MOV qword ptr [RBP],RAX
00018844(2): JMP 0x0001880f
00018850(2): MOV EAX,EDI
00018852(7): LEA RDX,[0x1cf60]
00018859(2): MOV ECX,EDI
0001885b(3): SHR AL,0x5
0001885e(3): AND ECX,0x1f
00018861(3): AND EAX,0x7
00018864(3): MOV EAX,dword ptr [RDX + RAX*0x4]
00018867(2): SHR EAX,CL
00018869(3): AND EAX,0x1
0001886c(1): RET
00018870(1): PUSH RBP
00018871(3): MOV RBP,RSP
00018874(2): PUSH R12
00018876(1): PUSH RBX
00018877(3): MOV R12,RDX
0001887a(5): MOV EDX,0x8
0001887f(3): MOV RBX,RDI
00018882(4): SUB RSP,0x20
00018886(9): MOV RAX,qword ptr FS:[0x28]
0001888f(4): MOV qword ptr [RBP + -0x18],RAX
00018893(2): XOR EAX,EAX
00018895(3): MOV RAX,RDX
00018898(3): MUL R12
0001889b(6): JO 0x00018a0d
000188a1(2): XOR EDI,EDI
000188a3(3): TEST RAX,RAX
000188a6(6): JS 0x00018980
000188ac(3): TEST RDI,RDI
000188af(6): JNZ 0x00018980
000188b5(8): LEA RDI,[R12*0x8]
000188bd(7): CMP RDI,0xfa0
000188c4(6): JA 0x000189e8
000188ca(4): ADD RDI,0x3d
000188ce(4): AND RDI,-0x10
000188d2(3): SUB RSP,RDI
000188d5(5): LEA RDI,[RSP + 0xf]
000188da(4): AND RDI,-0x10
000188de(4): ADD RDI,0x1f
000188e2(4): AND RDI,-0x20
000188e6(3): TEST RDI,RDI
000188e9(6): JZ 0x00018980
000188ef(4): CMP R12,0x2
000188f3(8): MOV qword ptr [RDI + 0x8],0x1
000188fb(2): JBE 0x00018941
000188fd(2): XOR EDX,EDX
000188ff(6): MOV R8D,0x2
00018905(3): NOP dword ptr [RAX]
00018908(6): MOVZX EAX,byte ptr [RSI + R8*0x1 + -0x1]
0001890e(3): CMP AL,byte ptr [RSI + RDX*0x1]
00018911(2): JNZ 0x0001892d
00018913(5): JMP 0x000189d0
00018920(4): SUB RDX,qword ptr [RDI + RDX*0x8]
00018924(3): CMP byte ptr [RSI + RDX*0x1],AL
00018927(6): JZ 0x000189d0
0001892d(3): TEST RDX,RDX
00018930(2): JNZ 0x00018920
00018932(4): MOV qword ptr [RDI + R8*0x8],R8
00018936(2): XOR EDX,EDX
00018938(4): ADD R8,0x1
0001893c(3): CMP R12,R8
0001893f(2): JNZ 0x00018908
00018941(7): MOV qword ptr [RCX],0x0
00018948(3): MOVZX EDX,byte ptr [RBX]
0001894b(3): MOV R8,RBX
0001894e(2): XOR EAX,EAX
00018950(2): TEST DL,DL
00018952(2): JZ 0x0001896c
00018954(3): CMP byte ptr [RSI + RAX*0x1],DL
00018957(2): JZ 0x000189a0
00018959(3): TEST RAX,RAX
0001895c(2): JZ 0x000189c0
0001895e(4): MOV R9,qword ptr [RDI + RAX*0x8]
00018962(3): ADD RBX,R9
00018965(3): SUB RAX,R9
00018968(2): TEST DL,DL
0001896a(2): JNZ 0x00018954
0001896c(5): CALL 0x0001abf0
00018971(5): MOV EAX,0x1
00018976(2): JMP 0x00018982
00018980(2): XOR EAX,EAX
00018982(4): MOV RCX,qword ptr [RBP + -0x18]
00018986(9): XOR RCX,qword ptr FS:[0x28]
0001898f(6): JNZ 0x00018a17
00018995(4): LEA RSP,[RBP + -0x10]
00018999(1): POP RBX
0001899a(2): POP R12
0001899c(1): POP RBP
0001899d(1): RET
000189a0(4): ADD RAX,0x1
000189a4(4): LEA R9,[R8 + 0x1]
000189a8(3): CMP R12,RAX
000189ab(2): JZ 0x00018a05
000189ad(5): MOVZX EDX,byte ptr [R8 + 0x1]
000189b2(3): MOV R8,R9
000189b5(2): JMP 0x00018950
000189c0(5): MOVZX EDX,byte ptr [R8 + 0x1]
000189c5(4): ADD RBX,0x1
000189c9(4): ADD R8,0x1
000189cd(2): JMP 0x00018950
000189d0(4): ADD RDX,0x1
000189d4(3): MOV RAX,R8
000189d7(3): SUB RAX,RDX
000189da(4): MOV qword ptr [RDI + R8*0x8],RAX
000189de(5): JMP 0x00018938
000189e8(4): MOV qword ptr [RBP + -0x30],RCX
000189ec(4): MOV qword ptr [RBP + -0x28],RSI
000189f0(5): CALL 0x0001abb0
000189f5(4): MOV RCX,qword ptr [RBP + -0x30]
000189f9(3): MOV RDI,RAX
000189fc(4): MOV RSI,qword ptr [RBP + -0x28]
00018a00(5): JMP 0x000188e6
00018a05(3): MOV qword ptr [RCX],RBX
00018a08(5): JMP 0x0001896c
00018a0d(5): MOV EDI,0x1
00018a12(5): JMP 0x000188a3
00018a17(5): CALL 0x00001db0
00018a1c(4): NOP dword ptr [RAX]
00018a20(1): PUSH RBP
00018a21(3): MOV RBP,RSP
00018a24(2): PUSH R15
00018a26(2): PUSH R14
00018a28(2): PUSH R13
00018a2a(2): PUSH R12
00018a2c(1): PUSH RBX
00018a2d(3): MOV RBX,RSI
00018a30(7): SUB RSP,0x108
00018a37(7): MOV qword ptr [-0x118 + RBP],RDI
00018a3e(3): MOV RDI,RSI
00018a41(7): MOV qword ptr [-0x128 + RBP],RDX
00018a48(9): MOV RAX,qword ptr FS:[0x28]
00018a51(4): MOV qword ptr [RBP + -0x38],RAX
00018a55(2): XOR EAX,EAX
00018a57(5): CALL 0x0001ac20
00018a5c(5): MOV EDX,0x38
00018a61(3): MOV RSI,RAX
00018a64(7): MOV qword ptr [-0x108 + RBP],RAX
00018a6b(3): MOV RAX,RDX
00018a6e(3): MUL RSI
00018a71(6): JO 0x00019487
00018a77(2): XOR ECX,ECX
00018a79(3): TEST RAX,RAX
00018a7c(6): JS 0x00018ea0
00018a82(3): TEST RCX,RCX
00018a85(6): JNZ 0x00018ea0
00018a8b(7): MOV RAX,qword ptr [-0x108 + RBP]
00018a92(8): LEA RDI,[RAX*0x8]
00018a9a(3): SUB RDI,RAX
00018a9d(4): SHL RDI,0x3
00018aa1(7): CMP RDI,0xfa0
00018aa8(6): JA 0x000193e4
00018aae(4): ADD RDI,0x3d
00018ab2(4): AND RDI,-0x10
00018ab6(3): SUB RSP,RDI
00018ab9(5): LEA R12,[RSP + 0xf]
00018abe(4): AND R12,-0x10
00018ac2(4): ADD R12,0x1f
00018ac6(4): AND R12,-0x20
00018aca(3): TEST R12,R12
00018acd(6): JZ 0x00018ea0
00018ad3(7): MOV RAX,qword ptr [-0x108 + RBP]
00018ada(7): MOV qword ptr [-0xf0 + RBP],RBX
00018ae1(7): LEA RBX,[-0x100 + RBP]
00018ae8(7): MOV byte ptr [-0x100 + RBP],0x0
00018aef(11): MOV qword ptr [-0xfc + RBP],0x0
00018afa(3): MOV R15,R12
00018afd(7): MOV byte ptr [-0xf4 + RBP],0x0
00018b04(6): MOV R14D,0x1
00018b0a(4): LEA R13,[RAX + RAX*0x2]
00018b0e(4): LEA RAX,[RBX + 0x4]
00018b12(4): SHL R13,0x4
00018b16(7): MOV qword ptr [-0x120 + RBP],RAX
00018b1d(3): ADD R13,R12
00018b20(5): JMP 0x00018bd1
00018b28(7): MOV RCX,qword ptr [-0xf0 + RBP]
00018b2f(7): LEA RSI,[0x1cf60]
00018b36(3): MOVZX EDX,byte ptr [RCX]
00018b39(2): MOV EAX,EDX
00018b3b(3): SHR AL,0x5
00018b3e(3): AND EAX,0x7
00018b41(3): MOV EAX,dword ptr [RSI + RAX*0x4]
00018b44(3): BT EAX,EDX
00018b47(6): JNC 0x00018ec8
00018b4d(11): MOV qword ptr [-0xe8 + RBP],0x1
00018b58(3): MOVSX EAX,byte ptr [RCX]
00018b5b(7): MOV byte ptr [-0xe0 + RBP],R14B
00018b62(7): MOV byte ptr [-0xf4 + RBP],R14B
00018b69(6): MOV dword ptr [-0xdc + RBP],EAX
00018b6f(7): MOV R8D,dword ptr [-0xdc + RBP]
00018b76(3): TEST R8D,R8D
00018b79(6): JZ 0x00018ca0
00018b7f(5): MOV EAX,0x1
00018b84(7): MOV RSI,qword ptr [-0xf0 + RBP]
00018b8b(4): LEA RCX,[RBX + 0x28]
00018b8f(7): MOV RDX,qword ptr [-0xe8 + RBP]
00018b96(3): CMP RSI,RCX
00018b99(6): JZ 0x00018ef0
00018b9f(3): MOV qword ptr [R15],RSI
00018ba2(2): TEST AL,AL
00018ba4(4): MOV qword ptr [R15 + 0x8],RDX
00018ba8(4): MOV byte ptr [R15 + 0x10],AL
00018bac(2): JZ 0x00018bb8
00018bae(6): MOV EAX,dword ptr [-0xdc + RBP]
00018bb4(4): MOV dword ptr [R15 + 0x14],EAX
00018bb8(7): MOV RAX,qword ptr [-0xe8 + RBP]
00018bbf(7): ADD qword ptr [-0xf0 + RBP],RAX
00018bc6(4): ADD R15,0x30
00018bca(7): MOV byte ptr [-0xf4 + RBP],0x0
00018bd1(7): CMP byte ptr [-0x100 + RBP],0x0
00018bd8(6): JZ 0x00018b28
00018bde(5): CALL 0x00001d90
00018be3(7): MOV R9,qword ptr [-0xf0 + RBP]
00018bea(3): MOV RSI,RAX
00018bed(3): MOV RDI,R9
00018bf0(7): MOV qword ptr [-0x110 + RBP],R9
00018bf7(5): CALL 0x00008c30
00018bfc(7): MOV R9,qword ptr [-0x110 + RBP]
00018c03(4): LEA RCX,[RBX + 0x4]
00018c07(4): LEA RDI,[RBX + 0x24]
00018c0b(3): MOV RDX,RAX
00018c0e(3): MOV RSI,R9
00018c11(5): CALL 0x0000a3b0
00018c16(4): CMP RAX,-0x1
00018c1a(7): MOV qword ptr [-0xe8 + RBP],RAX
00018c21(6): JZ 0x00018f18
00018c27(4): CMP RAX,-0x2
00018c2b(6): JZ 0x00019399
00018c31(3): TEST RAX,RAX
00018c34(2): JNZ 0x00018c61
00018c36(7): MOV RAX,qword ptr [-0xf0 + RBP]
00018c3d(11): MOV qword ptr [-0xe8 + RBP],0x1
00018c48(3): CMP byte ptr [RAX],0x0
00018c4b(6): JNZ 0x00019463
00018c51(7): MOV R9D,dword ptr [-0xdc + RBP]
00018c58(3): TEST R9D,R9D
00018c5b(6): JNZ 0x00019482
00018c61(4): LEA RDI,[RBX + 0x4]
00018c65(7): MOV byte ptr [-0xe0 + RBP],R14B
00018c6c(5): CALL 0x000020b0
00018c71(2): TEST EAX,EAX
00018c73(6): JZ 0x000193c1
00018c79(7): MOV R8D,dword ptr [-0xdc + RBP]
00018c80(7): MOV byte ptr [-0x100 + RBP],0x0
00018c87(7): MOV byte ptr [-0xf4 + RBP],R14B
00018c8e(3): TEST R8D,R8D
00018c91(6): JNZ 0x00018b7f
00018c97(9): NOP word ptr [RAX + RAX*0x1]
00018ca0(8): CMP qword ptr [-0x108 + RBP],0x2
00018ca8(8): MOV qword ptr [R13 + 0x8],0x1
00018cb0(6): JBE 0x00018d46
00018cb6(5): LEA R14,[R12 + 0x30]
00018cbb(2): XOR EBX,EBX
00018cbd(6): MOV R15D,0x2
00018cc3(5): NOP dword ptr [RAX + RAX*0x1]
00018cc8(5): MOVZX ECX,byte ptr [R14 + 0x10]
00018ccd(2): JMP 0x00018ced
00018cd0(4): CMP byte ptr [RAX + 0x10],0x0
00018cd4(2): JZ 0x00018cfc
00018cd6(3): MOV EAX,dword ptr [RAX + 0x14]
00018cd9(4): CMP dword ptr [R14 + 0x14],EAX
00018cdd(2): JZ 0x00018d22
00018cdf(3): TEST RBX,RBX
00018ce2(6): JZ 0x00019298
00018ce8(5): SUB RBX,qword ptr [R13 + RBX*0x8]
00018ced(4): LEA RAX,[RBX + RBX*0x2]
00018cf1(4): SHL RAX,0x4
00018cf5(3): ADD RAX,R12
00018cf8(2): TEST CL,CL
00018cfa(2): JNZ 0x00018cd0
00018cfc(4): MOV RDX,qword ptr [R14 + 0x8]
00018d00(4): CMP RDX,qword ptr [RAX + 0x8]
00018d04(2): JNZ 0x00018cdf
00018d06(3): MOV RSI,qword ptr [RAX]
00018d09(3): MOV RDI,qword ptr [R14]
00018d0c(6): MOV byte ptr [-0x110 + RBP],CL
00018d12(5): CALL 0x00001e90
00018d17(2): TEST EAX,EAX
00018d19(7): MOVZX ECX,byte ptr [-0x110 + RBP]
00018d20(2): JNZ 0x00018cdf
00018d22(4): ADD RBX,0x1
00018d26(3): MOV RAX,R15
00018d29(3): SUB RAX,RBX
00018d2c(5): MOV qword ptr [R13 + R15*0x8],RAX
00018d31(4): ADD R15,0x1
00018d35(4): ADD R14,0x30
00018d39(7): CMP qword ptr [-0x108 + RBP],R15
00018d40(6): JNZ 0x00018cc8
00018d46(7): MOV RAX,qword ptr [-0x128 + RBP]
00018d4d(4): LEA RBX,[RBP + -0x80]
00018d51(7): MOV byte ptr [-0xc0 + RBP],0x0
00018d58(11): MOV qword ptr [-0xbc + RBP],0x0
00018d63(7): MOV byte ptr [-0xb4 + RBP],0x0
00018d6a(3): XOR R15D,R15D
00018d6d(4): MOV byte ptr [RBP + -0x80],0x0
00018d71(8): MOV qword ptr [RBP + -0x7c],0x0
00018d79(7): MOV qword ptr [RAX],0x0
00018d80(7): MOV RAX,qword ptr [-0x118 + RBP]
00018d87(7): MOV qword ptr [-0x118 + RBP],RBX
00018d8e(4): ADD RBX,0x4
00018d92(4): MOV byte ptr [RBP + -0x74],0x0
00018d96(7): MOV qword ptr [-0x120 + RBP],RBX
00018d9d(7): LEA RBX,[-0xc0 + RBP]
00018da4(7): MOV qword ptr [-0xb0 + RBP],RAX
00018dab(4): MOV qword ptr [RBP + -0x70],RAX
00018daf(2): XOR EAX,EAX
00018db1(7): NOP dword ptr [RAX]
00018db8(2): TEST AL,AL
00018dba(6): JZ 0x00018f9c
00018dc0(4): CMP byte ptr [RBP + -0x60],0x0
00018dc4(6): JNZ 0x00018f56
00018dca(4): LEA RAX,[R15 + R15*0x2]
00018dce(4): SHL RAX,0x4
00018dd2(3): ADD RAX,R12
00018dd5(4): MOV RDX,qword ptr [RAX + 0x8]
00018dd9(4): CMP RDX,qword ptr [RBP + -0x68]
00018ddd(6): JZ 0x00019170
00018de3(3): TEST R15,R15
00018de6(6): JZ 0x000191c0
00018dec(5): MOV R14,qword ptr [R13 + R15*0x8]
00018df1(3): MOV RAX,R15
00018df4(3): SUB RAX,R14
00018df7(3): TEST R14,R14
00018dfa(7): MOV qword ptr [-0x110 + RBP],RAX
00018e01(4): MOVZX EAX,byte ptr [RBP + -0x74]
00018e05(2): JZ 0x00018db8
00018e07(7): CMP byte ptr [-0xb4 + RBP],0x0
00018e0e(2): JZ 0x00018e38
00018e10(7): CMP byte ptr [-0xa0 + RBP],0x0
00018e17(2): JNZ 0x00018e8c
00018e19(7): MOV RAX,qword ptr [-0xa8 + RBP]
00018e20(7): ADD qword ptr [-0xb0 + RBP],RAX
00018e27(4): SUB R14,0x1
00018e2b(7): MOV byte ptr [-0xb4 + RBP],0x0
00018e32(6): JZ 0x00019258
00018e38(7): CMP byte ptr [-0xc0 + RBP],0x0
00018e3f(6): JNZ 0x000190b0
00018e45(7): MOV RCX,qword ptr [-0xb0 + RBP]
00018e4c(7): LEA RSI,[0x1cf60]
00018e53(3): MOVZX EDX,byte ptr [RCX]
00018e56(2): MOV EAX,EDX
00018e58(3): SHR AL,0x5
00018e5b(3): AND EAX,0x7
00018e5e(3): MOV EAX,dword ptr [RSI + RAX*0x4]
00018e61(3): BT EAX,EDX
00018e64(6): JNC 0x00019098
00018e6a(11): MOV qword ptr [-0xa8 + RBP],0x1
00018e75(3): MOVSX EAX,byte ptr [RCX]
00018e78(7): MOV byte ptr [-0xa0 + RBP],0x1
00018e7f(7): MOV byte ptr [-0xb4 + RBP],0x1
00018e86(6): MOV dword ptr [-0x9c + RBP],EAX
00018e8c(6): MOV ESI,dword ptr [-0x9c + RBP]
00018e92(2): TEST ESI,ESI
00018e94(2): JNZ 0x00018e19
00018e96(5): CALL 0x00001c70
00018e9b(5): NOP dword ptr [RAX + RAX*0x1]
00018ea0(2): XOR EAX,EAX
00018ea2(4): MOV RBX,qword ptr [RBP + -0x38]
00018ea6(9): XOR RBX,qword ptr FS:[0x28]
00018eaf(6): JNZ 0x0001945e
00018eb5(4): LEA RSP,[RBP + -0x28]
00018eb9(1): POP RBX
00018eba(2): POP R12
00018ebc(2): POP R13
00018ebe(2): POP R14
00018ec0(2): POP R15
00018ec2(1): POP RBP
00018ec3(1): RET
00018ec8(7): MOV RDI,qword ptr [-0x120 + RBP]
00018ecf(5): CALL 0x000020b0
00018ed4(2): TEST EAX,EAX
00018ed6(6): JZ 0x0001943f
00018edc(7): MOV byte ptr [-0x100 + RBP],R14B
00018ee3(5): JMP 0x00018bde
00018ef0(4): LEA RCX,[R15 + 0x18]
00018ef4(3): MOV RDI,RCX
00018ef7(5): CALL 0x00001ee0
00018efc(7): MOV RDX,qword ptr [-0xe8 + RBP]
00018f03(3): MOV qword ptr [R15],RAX
00018f06(7): MOVZX EAX,byte ptr [-0xe0 + RBP]
00018f0d(5): JMP 0x00018ba2
00018f18(11): MOV qword ptr [-0xe8 + RBP],0x1
00018f23(7): MOV byte ptr [-0xe0 + RBP],0x0
00018f2a(2): XOR EAX,EAX
00018f2c(7): MOV byte ptr [-0xf4 + RBP],R14B
00018f33(5): JMP 0x00018b84
00018f40(8): MOV qword ptr [RBP + -0x68],0x1
00018f48(3): MOVSX EAX,byte ptr [RCX]
00018f4b(4): MOV byte ptr [RBP + -0x60],0x1
00018f4f(4): MOV byte ptr [RBP + -0x74],0x1
00018f53(3): MOV dword ptr [RBP + -0x5c],EAX
00018f56(3): MOV EDX,dword ptr [RBP + -0x5c]
00018f59(2): TEST EDX,EDX
00018f5b(6): JZ 0x00019080
00018f61(4): LEA RAX,[R15 + R15*0x2]
00018f65(4): SHL RAX,0x4
00018f69(3): ADD RAX,R12
00018f6c(4): CMP byte ptr [RAX + 0x10],0x0
00018f70(6): JZ 0x00018dd5
00018f76(3): CMP dword ptr [RAX + 0x14],EDX
00018f79(6): JNZ 0x00018de3
00018f7f(4): ADD R15,0x1
00018f83(4): MOV RAX,qword ptr [RBP + -0x68]
00018f87(4): ADD qword ptr [RBP + -0x70],RAX
00018f8b(7): CMP qword ptr [-0x108 + RBP],R15
00018f92(4): MOV byte ptr [RBP + -0x74],0x0
00018f96(6): JZ 0x0001941c
00018f9c(4): CMP byte ptr [RBP + -0x80],0x0
00018fa0(2): JNZ 0x00018fd8
00018fa2(4): MOV RCX,qword ptr [RBP + -0x70]
00018fa6(7): LEA RSI,[0x1cf60]
00018fad(3): MOVZX EDX,byte ptr [RCX]
00018fb0(2): MOV EAX,EDX
00018fb2(3): SHR AL,0x5
00018fb5(3): AND EAX,0x7
00018fb8(3): MOV EAX,dword ptr [RSI + RAX*0x4]
00018fbb(3): BT EAX,EDX
00018fbe(2): JC 0x00018f40
00018fc0(7): MOV RDI,qword ptr [-0x120 + RBP]
00018fc7(5): CALL 0x000020b0
00018fcc(2): TEST EAX,EAX
00018fce(6): JZ 0x0001943f
00018fd4(4): MOV byte ptr [RBP + -0x80],0x1
00018fd8(5): CALL 0x00001d90
00018fdd(4): MOV R8,qword ptr [RBP + -0x70]
00018fe1(3): MOV RSI,RAX
00018fe4(3): MOV RDI,R8
00018fe7(7): MOV qword ptr [-0x110 + RBP],R8
00018fee(5): CALL 0x00008c30
00018ff3(7): MOV RSI,qword ptr [-0x118 + RBP]
00018ffa(7): MOV R8,qword ptr [-0x110 + RBP]
00019001(3): MOV RDX,RAX
00019004(4): LEA RCX,[RSI + 0x4]
00019008(4): LEA RDI,[RSI + 0x24]
0001900c(3): MOV RSI,R8
0001900f(5): CALL 0x0000a3b0
00019014(4): CMP RAX,-0x1
00019018(4): MOV qword ptr [RBP + -0x68],RAX
0001901c(6): JZ 0x00019270
00019022(4): CMP RAX,-0x2
00019026(6): JZ 0x00019370
0001902c(3): TEST RAX,RAX
0001902f(2): JNZ 0x00019051
00019031(4): MOV RAX,qword ptr [RBP + -0x70]
00019035(8): MOV qword ptr [RBP + -0x68],0x1
0001903d(3): CMP byte ptr [RAX],0x0
00019040(6): JNZ 0x00019463
00019046(3): MOV EAX,dword ptr [RBP + -0x5c]
00019049(2): TEST EAX,EAX
0001904b(6): JNZ 0x00019482
00019051(7): MOV RAX,qword ptr [-0x118 + RBP]
00019058(4): MOV byte ptr [RBP + -0x60],0x1
0001905c(4): LEA RDI,[RAX + 0x4]
00019060(5): CALL 0x000020b0
00019065(2): TEST EAX,EAX
00019067(6): JZ 0x00019390
0001906d(3): MOV EDX,dword ptr [RBP + -0x5c]
00019070(4): MOV byte ptr [RBP + -0x80],0x0
00019074(4): MOV byte ptr [RBP + -0x74],0x1
00019078(2): TEST EDX,EDX
0001907a(6): JNZ 0x00018f61
00019080(3): MOV RDI,R12
00019083(5): CALL 0x0001abf0
00019088(5): MOV EAX,0x1
0001908d(5): JMP 0x00018ea2
00019098(4): LEA RDI,[RBX + 0x4]
0001909c(5): CALL 0x000020b0
000190a1(2): TEST EAX,EAX
000190a3(6): JZ 0x0001943f
000190a9(7): MOV byte ptr [-0xc0 + RBP],0x1
000190b0(5): CALL 0x00001d90
000190b5(7): MOV R15,qword ptr [-0xb0 + RBP]
000190bc(3): MOV RSI,RAX
000190bf(3): MOV RDI,R15
000190c2(5): CALL 0x00008c30
000190c7(4): LEA RCX,[RBX + 0x4]
000190cb(4): LEA RDI,[RBX + 0x24]
000190cf(3): MOV RDX,RAX
000190d2(3): MOV RSI,R15
000190d5(5): CALL 0x0000a3b0
000190da(4): CMP RAX,-0x1
000190de(7): MOV qword ptr [-0xa8 + RBP],RAX
000190e5(2): JZ 0x00019150
000190e7(4): CMP RAX,-0x2
000190eb(6): JZ 0x00019190
000190f1(3): TEST RAX,RAX
000190f4(2): JNZ 0x0001911f
000190f6(7): MOV RAX,qword ptr [-0xb0 + RBP]
000190fd(11): MOV qword ptr [-0xa8 + RBP],0x1
00019108(3): CMP byte ptr [RAX],0x0
0001910b(6): JNZ 0x00019463
00019111(6): MOV EDI,dword ptr [-0x9c + RBP]
00019117(2): TEST EDI,EDI
00019119(6): JNZ 0x00019482
0001911f(4): LEA RDI,[RBX + 0x4]
00019123(7): MOV byte ptr [-0xa0 + RBP],0x1
0001912a(5): CALL 0x000020b0
0001912f(2): TEST EAX,EAX
00019131(2): JZ 0x000191b0
00019133(7): MOV byte ptr [-0xc0 + RBP],0x0
0001913a(7): MOV byte ptr [-0xb4 + RBP],0x1
00019141(5): JMP 0x00018e8c
00019150(11): MOV qword ptr [-0xa8 + RBP],0x1
0001915b(7): MOV byte ptr [-0xa0 + RBP],0x0
00019162(5): JMP 0x00018e19
00019170(4): MOV RSI,qword ptr [RBP + -0x70]
00019174(3): MOV RDI,qword ptr [RAX]
00019177(5): CALL 0x00001e90
0001917c(2): TEST EAX,EAX
0001917e(6): JNZ 0x00018de3
00019184(5): JMP 0x00018f7f
00019190(7): MOV RDI,qword ptr [-0xb0 + RBP]
00019197(5): CALL 0x00001da0
0001919c(7): MOV byte ptr [-0xa0 + RBP],0x0
000191a3(7): MOV qword ptr [-0xa8 + RBP],RAX
000191aa(5): JMP 0x00018e19
000191b0(7): MOV byte ptr [-0xb4 + RBP],0x1
000191b7(5): JMP 0x00018e8c
000191c0(7): CMP byte ptr [-0xb4 + RBP],0x0
000191c7(6): JNZ 0x00019288
000191cd(7): CMP byte ptr [-0xc0 + RBP],0x0
000191d4(6): JNZ 0x000192c0
000191da(7): MOV RCX,qword ptr [-0xb0 + RBP]
000191e1(7): LEA RSI,[0x1cf60]
000191e8(3): MOVZX EDX,byte ptr [RCX]
000191eb(2): MOV EAX,EDX
000191ed(3): SHR AL,0x5
000191f0(3): AND EAX,0x7
000191f3(3): MOV EAX,dword ptr [RSI + RAX*0x4]
000191f6(3): BT EAX,EDX
000191f9(6): JNC 0x000192a8
000191ff(11): MOV qword ptr [-0xa8 + RBP],0x1
0001920a(3): MOVSX EAX,byte ptr [RCX]
0001920d(7): MOV byte ptr [-0xa0 + RBP],0x1
00019214(7): MOV byte ptr [-0xb4 + RBP],0x1
0001921b(6): MOV dword ptr [-0x9c + RBP],EAX
00019221(6): MOV EDX,dword ptr [-0x9c + RBP]
00019227(2): TEST EDX,EDX
00019229(6): JZ 0x00018e96
0001922f(7): MOV RAX,qword ptr [-0xa8 + RBP]
00019236(7): MOV byte ptr [-0xb4 + RBP],0x0
0001923d(7): ADD qword ptr [-0xb0 + RBP],RAX
00019244(4): MOV byte ptr [RBP + -0x74],0x0
00019248(4): MOV RAX,qword ptr [RBP + -0x68]
0001924c(4): ADD qword ptr [RBP + -0x70],RAX
00019250(5): JMP 0x00018f9c
00019258(4): MOVZX EAX,byte ptr [RBP + -0x74]
0001925c(7): MOV R15,qword ptr [-0x110 + RBP]
00019263(5): JMP 0x00018db8
00019270(8): MOV qword ptr [RBP + -0x68],0x1
00019278(4): MOV byte ptr [RBP + -0x60],0x0
0001927c(4): MOV byte ptr [RBP + -0x74],0x1
00019280(5): JMP 0x00018dca
00019288(7): CMP byte ptr [-0xa0 + RBP],0x0
0001928f(2): JZ 0x0001922f
00019291(2): JMP 0x00019221
00019298(5): MOV qword ptr [R13 + R15*0x8],R15
0001929d(5): JMP 0x00018d31
000192a8(4): LEA RDI,[RBX + 0x4]
000192ac(5): CALL 0x000020b0
000192b1(2): TEST EAX,EAX
000192b3(6): JZ 0x0001943f
000192b9(7): MOV byte ptr [-0xc0 + RBP],0x1
000192c0(5): CALL 0x00001d90
000192c5(7): MOV R8,qword ptr [-0xb0 + RBP]
000192cc(3): MOV RSI,RAX
000192cf(3): MOV RDI,R8
000192d2(7): MOV qword ptr [-0x110 + RBP],R8
000192d9(5): CALL 0x00008c30
000192de(7): MOV R8,qword ptr [-0x110 + RBP]
000192e5(4): LEA RCX,[RBX + 0x4]
000192e9(4): LEA RDI,[RBX + 0x24]
000192ed(3): MOV RDX,RAX
000192f0(3): MOV RSI,R8
000192f3(5): CALL 0x0000a3b0
000192f8(4): CMP RAX,-0x1
000192fc(7): MOV qword ptr [-0xa8 + RBP],RAX
00019303(6): JZ 0x000193cd
00019309(4): CMP RAX,-0x2
0001930d(6): JZ 0x000193fd
00019313(3): TEST RAX,RAX
00019316(2): JNZ 0x00019341
00019318(7): MOV RAX,qword ptr [-0xb0 + RBP]
0001931f(11): MOV qword ptr [-0xa8 + RBP],0x1
0001932a(3): CMP byte ptr [RAX],0x0
0001932d(6): JNZ 0x00019463
00019333(6): MOV ECX,dword ptr [-0x9c + RBP]
00019339(2): TEST ECX,ECX
0001933b(6): JNZ 0x00019482
00019341(4): LEA RDI,[RBX + 0x4]
00019345(7): MOV byte ptr [-0xa0 + RBP],0x1
0001934c(5): CALL 0x000020b0
00019351(2): TEST EAX,EAX
00019353(6): JZ 0x000193f1
00019359(7): MOV byte ptr [-0xc0 + RBP],0x0
00019360(7): MOV byte ptr [-0xb4 + RBP],0x1
00019367(5): JMP 0x00019221
00019370(4): MOV RDI,qword ptr [RBP + -0x70]
00019374(5): CALL 0x00001da0
00019379(4): MOV byte ptr [RBP + -0x60],0x0
0001937d(4): MOV qword ptr [RBP + -0x68],RAX
00019381(4): MOV byte ptr [RBP + -0x74],0x1
00019385(5): JMP 0x00018dca
00019390(4): MOV byte ptr [RBP + -0x74],0x1
00019394(5): JMP 0x00018f56
00019399(7): MOV RDI,qword ptr [-0xf0 + RBP]
000193a0(5): CALL 0x00001da0
000193a5(7): MOV byte ptr [-0xe0 + RBP],0x0
000193ac(7): MOV qword ptr [-0xe8 + RBP],RAX
000193b3(2): XOR EAX,EAX
000193b5(7): MOV byte ptr [-0xf4 + RBP],R14B
000193bc(5): JMP 0x00018b84
000193c1(7): MOV byte ptr [-0xf4 + RBP],R14B
000193c8(5): JMP 0x00018b6f
000193cd(11): MOV qword ptr [-0xa8 + RBP],0x1
000193d8(7): MOV byte ptr [-0xa0 + RBP],0x0
000193df(5): JMP 0x0001922f
000193e4(5): CALL 0x0001abb0
000193e9(3): MOV R12,RAX
000193ec(5): JMP 0x00018aca
000193f1(7): MOV byte ptr [-0xb4 + RBP],0x1
000193f8(5): JMP 0x00019221
000193fd(7): MOV RDI,qword ptr [-0xb0 + RBP]
00019404(5): CALL 0x00001da0
00019409(7): MOV byte ptr [-0xa0 + RBP],0x0
00019410(7): MOV qword ptr [-0xa8 + RBP],RAX
00019417(5): JMP 0x0001922f
0001941c(7): MOV RAX,qword ptr [-0xb0 + RBP]
00019423(7): MOV RBX,qword ptr [-0x128 + RBP]
0001942a(3): MOV RDI,R12
0001942d(3): MOV qword ptr [RBX],RAX
00019430(5): CALL 0x0001abf0
00019435(5): MOV EAX,0x1
0001943a(5): JMP 0x00018ea2
0001943f(7): LEA RCX,[0x1cf80]
00019446(7): LEA RSI,[0x1bc98]
0001944d(7): LEA RDI,[0x1bcca]
00019454(5): MOV EDX,0x96
00019459(5): CALL 0x00001e30
0001945e(5): CALL 0x00001db0
00019463(7): LEA RCX,[0x1cf80]
0001946a(7): LEA RSI,[0x1bc98]
00019471(7): LEA RDI,[0x1bce1]
00019478(5): MOV EDX,0xb2
0001947d(5): CALL 0x00001e30
00019482(5): CALL 0x00002166
00019487(5): MOV ECX,0x1
0001948c(5): JMP 0x00018a79
000194a0(2): PUSH R15
000194a2(2): PUSH R14
000194a4(2): PUSH R13
000194a6(2): PUSH R12
000194a8(3): MOV R12,RDI
000194ab(1): PUSH RBP
000194ac(1): PUSH RBX
000194ad(3): MOV RBX,RSI
000194b0(7): SUB RSP,0x198
000194b7(9): MOV RAX,qword ptr FS:[0x28]
000194c0(8): MOV qword ptr [0x188 + RSP],RAX
000194c8(2): XOR EAX,EAX
000194ca(5): MOV qword ptr [RSP + 0x8],RSI
000194cf(5): CALL 0x00001d90
000194d4(4): CMP RAX,0x1
000194d8(6): JA 0x000195c0
000194de(5): MOV RAX,qword ptr [RSP + 0x8]
000194e3(4): MOVZX R15D,byte ptr [RAX]
000194e7(3): MOV RAX,R12
000194ea(3): TEST R15B,R15B
000194ed(6): JZ 0x00019626
000194f3(5): MOVZX ESI,byte ptr [R12]
000194f8(3): TEST SIL,SIL
000194fb(6): JZ 0x00019ca0
00019501(5): LEA RBX,[RSP + 0x38]
00019506(5): MOV RBP,qword ptr [RSP + 0x8]
0001950b(3): XOR R13D,R13D
0001950e(2): XOR EDX,EDX
00019510(3): XOR R8D,R8D
00019513(5): MOV EAX,0x1
00019518(5): MOV qword ptr [RSP + 0x10],RBX
0001951d(3): NOP dword ptr [RAX]
00019520(4): ADD R13,0x1
00019524(3): CMP SIL,R15B
00019527(4): LEA RBX,[RDX + 0x1]
0001952b(5): LEA R14,[R12 + 0x1]
00019530(6): JZ 0x00019e10
00019536(6): CMP byte ptr [R12 + 0x1],0x0
0001953c(6): JZ 0x00019ca0
00019542(4): CMP R13,0x9
00019546(3): SETA DL
00019549(2): AND DL,AL
0001954b(6): JZ 0x00019652
00019551(5): LEA RAX,[R13 + R13*0x4]
00019556(3): CMP RAX,RBX
00019559(6): JA 0x00019650
0001955f(3): TEST RBP,RBP
00019562(3): MOV byte ptr [RSP],DL
00019565(2): JZ 0x00019589
00019567(3): MOV RSI,RBX
0001956a(3): MOV RDI,RBP
0001956d(3): SUB RSI,R8
00019570(5): CALL 0x00001e60
00019575(3): ADD RBP,RAX
00019578(3): MOV R8,RBX
0001957b(4): MOVZX EDX,byte ptr [RSP]
0001957f(4): CMP byte ptr [RBP],0x0
00019583(6): JNZ 0x00019650
00019589(5): MOV RBP,qword ptr [RSP + 0x8]
0001958e(4): MOV qword ptr [RSP],R8
00019592(3): MOV RDI,RBP
00019595(5): CALL 0x00001da0
0001959a(5): MOV RCX,qword ptr [RSP + 0x10]
0001959f(3): MOV RDX,RAX
000195a2(3): MOV RSI,RBP
000195a5(3): MOV RDI,R14
000195a8(5): CALL 0x00018870
000195ad(2): TEST AL,AL
000195af(4): MOV R8,qword ptr [RSP]
000195b3(6): JNZ 0x0001a49f
000195b9(2): XOR EBP,EBP
000195bb(5): JMP 0x00019652
000195c0(3): MOV RAX,RBX
000195c3(7): LEA R13,[0x1cf60]
000195ca(5): MOV qword ptr [RSP + 0x50],RBX
000195cf(3): MOVSX EDX,byte ptr [RAX]
000195d2(5): LEA RBX,[RSP + 0x40]
000195d7(5): MOV byte ptr [RSP + 0x40],0x0
000195dc(9): MOV qword ptr [RSP + 0x44],0x0
000195e5(5): MOV byte ptr [RSP + 0x4c],0x0
000195ea(4): LEA RBP,[RBX + 0x4]
000195ee(2): MOV EAX,EDX
000195f0(3): SHR AL,0x5
000195f3(3): AND EAX,0x7
000195f6(5): MOV EAX,dword ptr [R13 + RAX*0x4]
000195fb(3): BT EAX,EDX
000195fe(6): JNC 0x0001a2a0
00019604(9): MOV qword ptr [RSP + 0x58],0x1
0001960d(4): MOV dword ptr [RSP + 0x64],EDX
00019611(5): MOV byte ptr [RSP + 0x60],0x1
00019616(5): MOV byte ptr [RSP + 0x4c],0x1
0001961b(4): MOV EAX,dword ptr [RSP + 0x64]
0001961f(2): TEST EAX,EAX
00019621(2): JNZ 0x0001967b
00019623(3): MOV RAX,R12
00019626(8): MOV RBX,qword ptr [0x188 + RSP]
0001962e(9): XOR RBX,qword ptr FS:[0x28]
00019637(6): JNZ 0x0001a580
0001963d(7): ADD RSP,0x198
00019644(1): POP RBX
00019645(1): POP RBP
00019646(2): POP R12
00019648(2): POP R13
0001964a(2): POP R14
0001964c(2): POP R15
0001964e(1): RET
00019650(2): MOV EAX,EDX
00019652(4): MOVZX ESI,byte ptr [R14]
00019656(3): MOV R12,R14
00019659(3): MOV RDX,RBX
0001965c(5): JMP 0x00019520
00019668(9): MOV qword ptr [RSP + 0x58],0x1
00019671(5): MOV byte ptr [RSP + 0x60],0x0
00019676(5): MOV byte ptr [RSP + 0x4c],0x1
0001967b(5): MOV RAX,qword ptr [RSP + 0x8]
00019680(8): MOV byte ptr [0xc0 + RSP],0x0
00019688(3): XOR R14D,R14D
0001968b(2): XOR EBX,EBX
0001968d(8): CMP byte ptr [0xc0 + RSP],0x0
00019695(8): MOV byte ptr [0x80 + RSP],0x0
0001969d(12): MOV qword ptr [0x84 + RSP],0x0
000196a9(8): MOV byte ptr [0x8c + RSP],0x0
000196b1(8): LEA RBP,[0x140 + RSP]
000196b9(8): MOV qword ptr [0x90 + RSP],RAX
000196c1(5): LEA RAX,[RSP + 0x38]
000196c6(8): MOV qword ptr [0xd0 + RSP],R12
000196ce(12): MOV qword ptr [0xc4 + RSP],0x0
000196da(8): MOV byte ptr [0xcc + RSP],0x0
000196e2(8): LEA R15,[0x100 + RSP]
000196ea(9): MOV qword ptr [RSP + 0x20],0x0
000196f3(5): MOV byte ptr [RSP + 0x10],0x1
000196f8(5): MOV qword ptr [RSP + 0x28],RAX
000196fd(6): JNZ 0x00019a13
00019703(5): NOP dword ptr [RAX + RAX*0x1]
00019708(8): MOV RCX,qword ptr [0xd0 + RSP]
00019710(3): MOVZX EDX,byte ptr [RCX]
00019713(2): MOV EAX,EDX
00019715(3): SHR AL,0x5
00019718(3): AND EAX,0x7
0001971b(5): MOV EAX,dword ptr [R13 + RAX*0x4]
00019720(3): BT EAX,EDX
00019723(6): JNC 0x00019e80
00019729(12): MOV qword ptr [0xd8 + RSP],0x1
00019735(3): MOVSX EAX,byte ptr [RCX]
00019738(8): MOV byte ptr [0xe0 + RSP],0x1
00019740(8): MOV byte ptr [0xcc + RSP],0x1
00019748(7): MOV dword ptr [0xe4 + RSP],EAX
0001974f(7): MOV EAX,dword ptr [0xe4 + RSP]
00019756(2): TEST EAX,EAX
00019758(6): JZ 0x00019ca0
0001975e(4): CMP R14,0x9
00019762(3): SETA AL
00019765(4): AND AL,byte ptr [RSP + 0x10]
00019769(6): JZ 0x0001a577
0001976f(4): LEA RDX,[R14 + R14*0x4]
00019773(3): CMP RBX,RDX
00019776(6): JNC 0x00019eb0
0001977c(4): ADD RBX,0x1
00019780(4): MOV byte ptr [RSP + 0x10],AL
00019784(5): CMP byte ptr [RSP + 0x60],0x0
00019789(6): JZ 0x00019d01
0001978f(4): MOV EAX,dword ptr [RSP + 0x64]
00019793(7): CMP dword ptr [0xe4 + RSP],EAX
0001979a(6): JNZ 0x000199e9
000197a0(9): MOVDQA XMM0,xmmword ptr [0xc0 + RSP]
000197a9(4): LEA RCX,[RBP + 0x4]
000197ad(8): MOV byte ptr [0x140 + RSP],0x0
000197b5(8): MOV qword ptr [RBP + 0x4],0x0
000197bd(8): MOVAPS xmmword ptr [0x100 + RSP],XMM0
000197c5(8): MOV byte ptr [0x14c + RSP],0x0
000197cd(8): MOV byte ptr [0x10c + RSP],0x0
000197d5(9): MOVDQA XMM0,xmmword ptr [0xd0 + RSP]
000197de(8): MOVAPS xmmword ptr [0x110 + RSP],XMM0
000197e6(8): MOV RAX,qword ptr [0x118 + RSP]
000197ee(8): ADD qword ptr [0x110 + RSP],RAX
000197f6(5): MOV RAX,qword ptr [RSP + 0x8]
000197fb(9): MOVDQA XMM0,xmmword ptr [0xe0 + RSP]
00019804(3): MOVSX EDX,byte ptr [RAX]
00019807(8): MOV qword ptr [0x150 + RSP],RAX
0001980f(8): MOVAPS xmmword ptr [0x120 + RSP],XMM0
00019817(2): MOV EAX,EDX
00019819(3): SHR AL,0x5
0001981c(9): MOVDQA XMM0,xmmword ptr [0xf0 + RSP]
00019825(3): AND EAX,0x7
00019828(5): MOV EAX,dword ptr [R13 + RAX*0x4]
0001982d(8): MOVAPS xmmword ptr [0x130 + RSP],XMM0
00019835(3): BT EAX,EDX
00019838(6): JNC 0x0001a1c8
0001983e(12): MOV qword ptr [0x158 + RSP],0x1
0001984a(7): MOV dword ptr [0x164 + RSP],EDX
00019851(8): MOV byte ptr [0x160 + RSP],0x1
00019859(8): MOV byte ptr [0x14c + RSP],0x1
00019861(7): MOV ESI,dword ptr [0x164 + RSP]
00019868(2): TEST ESI,ESI
0001986a(6): JZ 0x0001a5a4
00019870(8): MOV RAX,qword ptr [0x158 + RSP]
00019878(8): MOV byte ptr [0x14c + RSP],0x0
00019880(4): ADD RBX,0x1
00019884(8): ADD qword ptr [0x150 + RSP],RAX
0001988c(5): JMP 0x00019953
00019898(8): CMP byte ptr [0x100 + RSP],0x0
000198a0(6): JNZ 0x00019be1
000198a6(8): MOV RCX,qword ptr [0x110 + RSP]
000198ae(3): MOVZX EDX,byte ptr [RCX]
000198b1(2): MOV EAX,EDX
000198b3(3): SHR AL,0x5
000198b6(3): AND EAX,0x7
000198b9(5): MOV EAX,dword ptr [R13 + RAX*0x4]
000198be(3): BT EAX,EDX
000198c1(6): JNC 0x00019bc8
000198c7(12): MOV qword ptr [0x118 + RSP],0x1
000198d3(3): MOVSX EAX,byte ptr [RCX]
000198d6(8): MOV byte ptr [0x120 + RSP],0x1
000198de(8): MOV byte ptr [0x10c + RSP],0x1
000198e6(7): MOV dword ptr [0x124 + RSP],EAX
000198ed(7): MOV EAX,dword ptr [0x124 + RSP]
000198f4(2): TEST EAX,EAX
000198f6(6): JZ 0x00019ca0
000198fc(8): CMP byte ptr [0x160 + RSP],0x0
00019904(6): JZ 0x000199d3
0001990a(7): CMP dword ptr [0x164 + RSP],EAX
00019911(3): SETNZ AL
00019914(2): TEST AL,AL
00019916(4): LEA RDX,[RBX + 0x1]
0001991a(6): JNZ 0x000199e9
00019920(8): MOV RAX,qword ptr [0x118 + RSP]
00019928(8): ADD qword ptr [0x110 + RSP],RAX
00019930(3): MOV RBX,RDX
00019933(8): MOV RAX,qword ptr [0x158 + RSP]
0001993b(8): ADD qword ptr [0x150 + RSP],RAX
00019943(8): MOV byte ptr [0x10c + RSP],0x0
0001994b(8): MOV byte ptr [0x14c + RSP],0x0
00019953(8): CMP byte ptr [0x140 + RSP],0x0
0001995b(6): JNZ 0x00019af9
00019961(8): MOV RCX,qword ptr [0x150 + RSP]
00019969(3): MOVZX EDX,byte ptr [RCX]
0001996c(2): MOV EAX,EDX
0001996e(3): SHR AL,0x5
00019971(3): AND EAX,0x7
00019974(5): MOV EAX,dword ptr [R13 + RAX*0x4]
00019979(3): BT EAX,EDX
0001997c(6): JNC 0x00019ae0
00019982(12): MOV qword ptr [0x158 + RSP],0x1
0001998e(3): MOVSX EAX,byte ptr [RCX]
00019991(8): MOV byte ptr [0x160 + RSP],0x1
00019999(8): MOV byte ptr [0x14c + RSP],0x1
000199a1(7): MOV dword ptr [0x164 + RSP],EAX
000199a8(7): MOV EDX,dword ptr [0x164 + RSP]
000199af(2): TEST EDX,EDX
000199b1(6): JZ 0x00019bb8
000199b7(8): CMP byte ptr [0x10c + RSP],0x0
000199bf(6): JZ 0x00019898
000199c5(8): CMP byte ptr [0x120 + RSP],0x0
000199cd(6): JNZ 0x000198ed
000199d3(8): MOV RDX,qword ptr [0x118 + RSP]
000199db(8): CMP RDX,qword ptr [0x158 + RSP]
000199e3(6): JZ 0x00019cb0
000199e9(8): MOV RCX,qword ptr [0xd8 + RSP]
000199f1(8): ADD qword ptr [0xd0 + RSP],RCX
000199f9(4): ADD R14,0x1
000199fd(8): CMP byte ptr [0xc0 + RSP],0x0
00019a05(8): MOV byte ptr [0xcc + RSP],0x0
00019a0d(6): JZ 0x00019708
00019a13(8): LEA RAX,[0xc0 + RSP]
00019a1b(4): MOV qword ptr [RSP],RAX
00019a1f(5): CALL 0x00001d90
00019a24(8): MOV R8,qword ptr [0xd0 + RSP]
00019a2c(3): MOV RSI,RAX
00019a2f(3): MOV RDI,R8
00019a32(5): MOV qword ptr [RSP + 0x18],R8
00019a37(5): CALL 0x00008c30
00019a3c(4): MOV RSI,qword ptr [RSP]
00019a40(5): MOV R8,qword ptr [RSP + 0x18]
00019a45(3): MOV RDX,RAX
00019a48(4): LEA RCX,[RSI + 0x4]
00019a4c(4): LEA RDI,[RSI + 0x24]
00019a50(3): MOV RSI,R8
00019a53(5): CALL 0x0000a3b0
00019a58(4): CMP RAX,-0x1
00019a5c(8): MOV qword ptr [0xd8 + RSP],RAX
00019a64(6): JZ 0x00019cd0
00019a6a(4): CMP RAX,-0x2
00019a6e(6): JZ 0x0001a198
00019a74(3): TEST RAX,RAX
00019a77(2): JNZ 0x00019aa5
00019a79(8): MOV RAX,qword ptr [0xd0 + RSP]
00019a81(12): MOV qword ptr [0xd8 + RSP],0x1
00019a8d(3): CMP byte ptr [RAX],0x0
00019a90(6): JNZ 0x0001a585
00019a96(7): MOV EAX,dword ptr [0xe4 + RSP]
00019a9d(2): TEST EAX,EAX
00019a9f(6): JNZ 0x0001a262
00019aa5(4): MOV RDI,qword ptr [RSP]
00019aa9(8): MOV byte ptr [0xe0 + RSP],0x1
00019ab1(4): ADD RDI,0x4
00019ab5(5): CALL 0x000020b0
00019aba(2): TEST EAX,EAX
00019abc(6): JZ 0x0001a0d0
00019ac2(8): MOV byte ptr [0xc0 + RSP],0x0
00019aca(8): MOV byte ptr [0xcc + RSP],0x1
00019ad2(5): JMP 0x0001974f
00019ae0(4): LEA RDI,[RBP + 0x4]
00019ae4(5): CALL 0x000020b0
00019ae9(2): TEST EAX,EAX
00019aeb(6): JZ 0x0001a558
00019af1(8): MOV byte ptr [0x140 + RSP],0x1
00019af9(5): CALL 0x00001d90
00019afe(8): MOV R8,qword ptr [0x150 + RSP]
00019b06(3): MOV RSI,RAX
00019b09(3): MOV RDI,R8
00019b0c(4): MOV qword ptr [RSP],R8
00019b10(5): CALL 0x00008c30
00019b15(4): MOV R8,qword ptr [RSP]
00019b19(4): LEA RCX,[RBP + 0x4]
00019b1d(4): LEA RDI,[RBP + 0x24]
00019b21(3): MOV RDX,RAX
00019b24(3): MOV RSI,R8
00019b27(5): CALL 0x0000a3b0
00019b2c(4): CMP RAX,-0x1
00019b30(8): MOV qword ptr [0x158 + RSP],RAX
00019b38(6): JZ 0x00019d40
00019b3e(4): CMP RAX,-0x2
00019b42(6): JZ 0x00019d90
00019b48(3): TEST RAX,RAX
00019b4b(2): JNZ 0x00019b79
00019b4d(8): MOV RAX,qword ptr [0x150 + RSP]
00019b55(12): MOV qword ptr [0x158 + RSP],0x1
00019b61(3): CMP byte ptr [RAX],0x0
00019b64(6): JNZ 0x0001a585
00019b6a(7): MOV ECX,dword ptr [0x164 + RSP]
00019b71(2): TEST ECX,ECX
00019b73(6): JNZ 0x0001a262
00019b79(4): LEA RDI,[RBP + 0x4]
00019b7d(8): MOV byte ptr [0x160 + RSP],0x1
00019b85(5): CALL 0x000020b0
00019b8a(2): TEST EAX,EAX
00019b8c(6): JZ 0x00019dc0
00019b92(7): MOV EDX,dword ptr [0x164 + RSP]
00019b99(8): MOV byte ptr [0x140 + RSP],0x0
00019ba1(8): MOV byte ptr [0x14c + RSP],0x1
00019ba9(2): TEST EDX,EDX
00019bab(6): JNZ 0x000199b7
00019bb1(7): NOP dword ptr [RAX]
00019bb8(8): MOV RAX,qword ptr [0xd0 + RSP]
00019bc0(5): JMP 0x00019626
00019bc8(4): LEA RDI,[R15 + 0x4]
00019bcc(5): CALL 0x000020b0
00019bd1(2): TEST EAX,EAX
00019bd3(6): JZ 0x0001a558
00019bd9(8): MOV byte ptr [0x100 + RSP],0x1
00019be1(5): CALL 0x00001d90
00019be6(8): MOV R8,qword ptr [0x110 + RSP]
00019bee(3): MOV RSI,RAX
00019bf1(3): MOV RDI,R8
00019bf4(4): MOV qword ptr [RSP],R8
00019bf8(5): CALL 0x00008c30
00019bfd(4): MOV R8,qword ptr [RSP]
00019c01(4): LEA RCX,[R15 + 0x4]
00019c05(4): LEA RDI,[R15 + 0x24]
00019c09(3): MOV RDX,RAX
00019c0c(3): MOV RSI,R8
00019c0f(5): CALL 0x0000a3b0
00019c14(4): CMP RAX,-0x1
00019c18(8): MOV qword ptr [0x118 + RSP],RAX
00019c20(6): JZ 0x00019d68
00019c26(4): CMP RAX,-0x2
00019c2a(6): JZ 0x00019dd0
00019c30(3): TEST RAX,RAX
00019c33(2): JNZ 0x00019c61
00019c35(8): MOV RAX,qword ptr [0x110 + RSP]
00019c3d(12): MOV qword ptr [0x118 + RSP],0x1
00019c49(3): CMP byte ptr [RAX],0x0
00019c4c(6): JNZ 0x0001a585
00019c52(7): MOV EAX,dword ptr [0x124 + RSP]
00019c59(2): TEST EAX,EAX
00019c5b(6): JNZ 0x0001a262
00019c61(4): LEA RDI,[R15 + 0x4]
00019c65(8): MOV byte ptr [0x120 + RSP],0x1
00019c6d(5): CALL 0x000020b0
00019c72(2): TEST EAX,EAX
00019c74(6): JZ 0x00019e00
00019c7a(7): MOV EAX,dword ptr [0x124 + RSP]
00019c81(8): MOV byte ptr [0x100 + RSP],0x0
00019c89(8): MOV byte ptr [0x10c + RSP],0x1
00019c91(2): TEST EAX,EAX
00019c93(6): JNZ 0x000198fc
00019c99(7): NOP dword ptr [RAX]
00019ca0(2): XOR EAX,EAX
00019ca2(5): JMP 0x00019626
00019cb0(8): MOV RSI,qword ptr [0x150 + RSP]
00019cb8(8): MOV RDI,qword ptr [0x110 + RSP]
00019cc0(5): CALL 0x00001e90
00019cc5(2): TEST EAX,EAX
00019cc7(3): SETNZ AL
00019cca(5): JMP 0x00019914
00019cd0(12): MOV qword ptr [0xd8 + RSP],0x1
00019cdc(8): MOV byte ptr [0xe0 + RSP],0x0
00019ce4(8): MOV byte ptr [0xcc + RSP],0x1
00019cec(4): CMP R14,0x9
00019cf0(3): SETA AL
00019cf3(4): AND AL,byte ptr [RSP + 0x10]
00019cf7(6): JNZ 0x0001a538
00019cfd(4): ADD RBX,0x1
00019d01(8): MOV RCX,qword ptr [0xd8 + RSP]
00019d09(5): CMP RCX,qword ptr [RSP + 0x58]
00019d0e(6): JNZ 0x000199f1
00019d14(5): MOV RSI,qword ptr [RSP + 0x50]
00019d19(8): MOV RDI,qword ptr [0xd0 + RSP]
00019d21(3): MOV RDX,RCX
00019d24(4): MOV qword ptr [RSP],RCX
00019d28(5): CALL 0x00001e90
00019d2d(2): TEST EAX,EAX
00019d2f(4): MOV RCX,qword ptr [RSP]
00019d33(6): JNZ 0x000199f1
00019d39(5): JMP 0x000197a0
00019d40(12): MOV qword ptr [0x158 + RSP],0x1
00019d4c(8): MOV byte ptr [0x160 + RSP],0x0
00019d54(8): MOV byte ptr [0x14c + RSP],0x1
00019d5c(5): JMP 0x000199b7
00019d68(12): MOV qword ptr [0x118 + RSP],0x1
00019d74(8): MOV byte ptr [0x120 + RSP],0x0
00019d7c(8): MOV byte ptr [0x10c + RSP],0x1
00019d84(5): JMP 0x000199d3
00019d90(8): MOV RDI,qword ptr [0x150 + RSP]
00019d98(5): CALL 0x00001da0
00019d9d(8): MOV byte ptr [0x160 + RSP],0x0
00019da5(8): MOV qword ptr [0x158 + RSP],RAX
00019dad(8): MOV byte ptr [0x14c + RSP],0x1
00019db5(5): JMP 0x000199b7
00019dc0(8): MOV byte ptr [0x14c + RSP],0x1
00019dc8(5): JMP 0x000199a8
00019dd0(8): MOV RDI,qword ptr [0x110 + RSP]
00019dd8(5): CALL 0x00001da0
00019ddd(8): MOV byte ptr [0x120 + RSP],0x0
00019de5(8): MOV qword ptr [0x118 + RSP],RAX
00019ded(8): MOV byte ptr [0x10c + RSP],0x1
00019df5(5): JMP 0x000199d3
00019e00(8): MOV byte ptr [0x10c + RSP],0x1
00019e08(5): JMP 0x000198ed
00019e10(5): MOV RCX,qword ptr [RSP + 0x8]
00019e15(4): MOVZX ESI,byte ptr [RCX + 0x1]
00019e19(3): TEST SIL,SIL
00019e1c(6): JZ 0x00019623
00019e22(4): MOVZX EDI,byte ptr [R14]
00019e26(3): TEST DIL,DIL
00019e29(6): JZ 0x00019ca0
00019e2f(3): CMP SIL,DIL
00019e32(4): LEA RBX,[RDX + 0x2]
00019e36(6): JNZ 0x00019542
00019e3c(3): NEG RDX
00019e3f(4): LEA R9,[RCX + RDX*0x1]
00019e43(3): ADD RDX,R12
00019e46(2): JMP 0x00019e6a
00019e50(4): MOVZX EDI,byte ptr [RDX + RBX*0x1]
00019e54(3): TEST DIL,DIL
00019e57(6): JZ 0x00019ca0
00019e5d(4): ADD RBX,0x1
00019e61(3): CMP SIL,DIL
00019e64(6): JNZ 0x00019542
00019e6a(5): MOVZX ESI,byte ptr [R9 + RBX*0x1]
00019e6f(3): TEST SIL,SIL
00019e72(2): JNZ 0x00019e50
00019e74(5): JMP 0x00019623
00019e80(8): LEA RAX,[0xc0 + RSP]
00019e88(8): LEA RDI,[0xc4 + RSP]
00019e90(4): MOV qword ptr [RSP],RAX
00019e94(5): CALL 0x000020b0
00019e99(2): TEST EAX,EAX
00019e9b(6): JZ 0x0001a558
00019ea1(8): MOV byte ptr [0xc0 + RSP],0x1
00019ea9(5): JMP 0x00019a1f
00019eb0(3): MOV RSI,RBX
00019eb3(5): SUB RSI,qword ptr [RSP + 0x20]
00019eb8(8): MOVZX EAX,byte ptr [0x8c + RSP]
00019ec0(4): MOV qword ptr [RSP],RSI
00019ec4(6): JZ 0x0001a517
00019eca(2): TEST AL,AL
00019ecc(2): JZ 0x00019efb
00019ece(8): CMP byte ptr [0xa0 + RSP],0x0
00019ed6(2): JNZ 0x00019f4c
00019ed8(8): MOV RAX,qword ptr [0x98 + RSP]
00019ee0(8): ADD qword ptr [0x90 + RSP],RAX
00019ee8(5): SUB qword ptr [RSP],0x1
00019eed(8): MOV byte ptr [0x8c + RSP],0x0
00019ef5(6): JZ 0x0001a108
00019efb(8): CMP byte ptr [0x80 + RSP],0x0
00019f03(6): JNZ 0x0001a088
00019f09(8): MOV RCX,qword ptr [0x90 + RSP]
00019f11(3): MOVZX EDX,byte ptr [RCX]
00019f14(2): MOV EAX,EDX
00019f16(3): SHR AL,0x5
00019f19(3): AND EAX,0x7
00019f1c(5): MOV EAX,dword ptr [R13 + RAX*0x4]
00019f21(3): BT EAX,EDX
00019f24(2): JNC 0x00019fa0
00019f26(12): MOV qword ptr [0x98 + RSP],0x1
00019f32(3): MOVSX EAX,byte ptr [RCX]
00019f35(8): MOV byte ptr [0xa0 + RSP],0x1
00019f3d(8): MOV byte ptr [0x8c + RSP],0x1
00019f45(7): MOV dword ptr [0xa4 + RSP],EAX
00019f4c(8): MOV R10D,dword ptr [0xa4 + RSP]
00019f54(3): TEST R10D,R10D
00019f57(6): JNZ 0x00019ed8
00019f5d(8): CMP byte ptr [0x8c + RSP],0x0
00019f65(6): JZ 0x0001a108
00019f6b(5): MOV RDX,qword ptr [RSP + 0x28]
00019f70(5): MOV RSI,qword ptr [RSP + 0x8]
00019f75(3): MOV RDI,R12
00019f78(5): CALL 0x00018a20
00019f7d(2): TEST AL,AL
00019f7f(4): MOV byte ptr [RSP + 0x10],AL
00019f83(6): JNZ 0x0001a49f
00019f89(8): MOVZX EDX,byte ptr [0xe0 + RSP]
00019f91(5): JMP 0x0001a17b
00019fa0(8): LEA RAX,[0x80 + RSP]
00019fa8(8): LEA RDI,[0x84 + RSP]
00019fb0(5): MOV qword ptr [RSP + 0x10],RAX
00019fb5(5): CALL 0x000020b0
00019fba(2): TEST EAX,EAX
00019fbc(6): JZ 0x0001a558
00019fc2(8): MOV byte ptr [0x80 + RSP],0x1
00019fca(5): CALL 0x00001d90
00019fcf(8): MOV R8,qword ptr [0x90 + RSP]
00019fd7(3): MOV RSI,RAX
00019fda(3): MOV RDI,R8
00019fdd(5): MOV qword ptr [RSP + 0x18],R8
00019fe2(5): CALL 0x00008c30
00019fe7(5): MOV RSI,qword ptr [RSP + 0x10]
00019fec(5): MOV R8,qword ptr [RSP + 0x18]
00019ff1(3): MOV RDX,RAX
00019ff4(4): LEA RCX,[RSI + 0x4]
00019ff8(4): LEA RDI,[RSI + 0x24]
00019ffc(3): MOV RSI,R8
00019fff(5): CALL 0x0000a3b0
0001a004(4): CMP RAX,-0x1
0001a008(8): MOV qword ptr [0x98 + RSP],RAX
0001a010(6): JZ 0x0001a0a0
0001a016(4): CMP RAX,-0x2
0001a01a(6): JZ 0x0001a0e0
0001a020(3): TEST RAX,RAX
0001a023(2): JNZ 0x0001a053
0001a025(8): MOV RAX,qword ptr [0x90 + RSP]
0001a02d(12): MOV qword ptr [0x98 + RSP],0x1
0001a039(3): CMP byte ptr [RAX],0x0
0001a03c(6): JNZ 0x0001a585
0001a042(8): MOV R11D,dword ptr [0xa4 + RSP]
0001a04a(3): TEST R11D,R11D
0001a04d(6): JNZ 0x0001a262
0001a053(5): MOV RDI,qword ptr [RSP + 0x10]
0001a058(8): MOV byte ptr [0xa0 + RSP],0x1
0001a060(4): ADD RDI,0x4
0001a064(5): CALL 0x000020b0
0001a069(2): TEST EAX,EAX
0001a06b(2): JZ 0x0001a0c0
0001a06d(8): MOV byte ptr [0x80 + RSP],0x0
0001a075(8): MOV byte ptr [0x8c + RSP],0x1
0001a07d(5): JMP 0x00019f4c
0001a088(8): LEA RAX,[0x80 + RSP]
0001a090(5): MOV qword ptr [RSP + 0x10],RAX
0001a095(5): JMP 0x00019fca
0001a0a0(12): MOV qword ptr [0x98 + RSP],0x1
0001a0ac(8): MOV byte ptr [0xa0 + RSP],0x0
0001a0b4(5): JMP 0x00019ed8
0001a0c0(8): MOV byte ptr [0x8c + RSP],0x1
0001a0c8(5): JMP 0x00019f4c
0001a0d0(8): MOV byte ptr [0xcc + RSP],0x1
0001a0d8(5): JMP 0x0001974f
0001a0e0(8): MOV RDI,qword ptr [0x90 + RSP]
0001a0e8(5): CALL 0x00001da0
0001a0ed(8): MOV byte ptr [0xa0 + RSP],0x0
0001a0f5(8): MOV qword ptr [0x98 + RSP],RAX
0001a0fd(5): JMP 0x00019ed8
0001a108(8): CMP byte ptr [0x80 + RSP],0x0
0001a110(6): JNZ 0x0001a368
0001a116(8): MOV RCX,qword ptr [0x90 + RSP]
0001a11e(3): MOVZX EDX,byte ptr [RCX]
0001a121(2): MOV EAX,EDX
0001a123(3): SHR AL,0x5
0001a126(3): AND EAX,0x7
0001a129(5): MOV EAX,dword ptr [R13 + RAX*0x4]
0001a12e(3): BT EAX,EDX
0001a131(6): JNC 0x0001a42f
0001a137(12): MOV qword ptr [0x98 + RSP],0x1
0001a143(3): MOVSX EAX,byte ptr [RCX]
0001a146(8): MOV byte ptr [0xa0 + RSP],0x1
0001a14e(8): MOV byte ptr [0x8c + RSP],0x1
0001a156(7): MOV dword ptr [0xa4 + RSP],EAX
0001a15d(8): MOV R8D,dword ptr [0xa4 + RSP]
0001a165(3): TEST R8D,R8D
0001a168(6): JZ 0x00019f6b
0001a16e(8): MOVZX EDX,byte ptr [0xe0 + RSP]
0001a176(5): MOV byte ptr [RSP + 0x10],0x1
0001a17b(4): LEA RAX,[RBX + 0x1]
0001a17f(2): TEST DL,DL
0001a181(5): MOV qword ptr [RSP + 0x20],RBX
0001a186(3): MOV RBX,RAX
0001a189(6): JNZ 0x00019784
0001a18f(5): JMP 0x00019d01
0001a198(8): MOV RDI,qword ptr [0xd0 + RSP]
0001a1a0(5): CALL 0x00001da0
0001a1a5(8): MOV byte ptr [0xe0 + RSP],0x0
0001a1ad(8): MOV qword ptr [0xd8 + RSP],RAX
0001a1b5(8): MOV byte ptr [0xcc + RSP],0x1
0001a1bd(5): JMP 0x00019cec
0001a1c8(3): MOV RDI,RCX
0001a1cb(5): MOV qword ptr [RSP + 0x18],RCX
0001a1d0(5): CALL 0x000020b0
0001a1d5(2): TEST EAX,EAX
0001a1d7(6): JZ 0x0001a558
0001a1dd(8): MOV byte ptr [0x140 + RSP],0x1
0001a1e5(5): CALL 0x00001d90
0001a1ea(8): MOV R8,qword ptr [0x150 + RSP]
0001a1f2(3): MOV RSI,RAX
0001a1f5(3): MOV RDI,R8
0001a1f8(4): MOV qword ptr [RSP],R8
0001a1fc(5): CALL 0x00008c30
0001a201(4): MOV R8,qword ptr [RSP]
0001a205(5): MOV RCX,qword ptr [RSP + 0x18]
0001a20a(4): LEA RDI,[RBP + 0x24]
0001a20e(3): MOV RDX,RAX
0001a211(3): MOV RSI,R8
0001a214(5): CALL 0x0000a3b0
0001a219(4): CMP RAX,-0x1
0001a21d(8): MOV qword ptr [0x158 + RSP],RAX
0001a225(6): JZ 0x0001a348
0001a22b(4): CMP RAX,-0x2
0001a22f(6): JZ 0x0001a4a9
0001a235(3): TEST RAX,RAX
0001a238(2): JNZ 0x0001a270
0001a23a(8): MOV RAX,qword ptr [0x150 + RSP]
0001a242(12): MOV qword ptr [0x158 + RSP],0x1
0001a24e(3): CMP byte ptr [RAX],0x0
0001a251(6): JNZ 0x0001a585
0001a257(7): MOV EDI,dword ptr [0x164 + RSP]
0001a25e(2): TEST EDI,EDI
0001a260(2): JZ 0x0001a270
0001a262(5): CALL 0x00002166
0001a267(9): NOP word ptr [RAX + RAX*0x1]
0001a270(4): LEA RDI,[RBP + 0x4]
0001a274(8): MOV byte ptr [0x160 + RSP],0x1
0001a27c(5): CALL 0x000020b0
0001a281(2): TEST EAX,EAX
0001a283(6): JZ 0x0001a45e
0001a289(8): MOV byte ptr [0x140 + RSP],0x0
0001a291(8): MOV byte ptr [0x14c + RSP],0x1
0001a299(5): JMP 0x00019861
0001a2a0(3): MOV RDI,RBP
0001a2a3(5): CALL 0x000020b0
0001a2a8(2): TEST EAX,EAX
0001a2aa(6): JZ 0x0001a558
0001a2b0(5): MOV byte ptr [RSP + 0x40],0x1
0001a2b5(5): CALL 0x00001d90
0001a2ba(5): MOV R14,qword ptr [RSP + 0x50]
0001a2bf(3): MOV RSI,RAX
0001a2c2(3): MOV RDI,R14
0001a2c5(5): CALL 0x00008c30
0001a2ca(4): LEA RDI,[RBX + 0x24]
0001a2ce(3): MOV RCX,RBP
0001a2d1(3): MOV RDX,RAX
0001a2d4(3): MOV RSI,R14
0001a2d7(5): CALL 0x0000a3b0
0001a2dc(4): CMP RAX,-0x1
0001a2e0(5): MOV qword ptr [RSP + 0x58],RAX
0001a2e5(6): JZ 0x00019668
0001a2eb(4): CMP RAX,-0x2
0001a2ef(6): JZ 0x0001a4cb
0001a2f5(3): TEST RAX,RAX
0001a2f8(2): JNZ 0x0001a31d
0001a2fa(5): MOV RAX,qword ptr [RSP + 0x50]
0001a2ff(9): MOV qword ptr [RSP + 0x58],0x1
0001a308(3): CMP byte ptr [RAX],0x0
0001a30b(6): JNZ 0x0001a585
0001a311(4): MOV EAX,dword ptr [RSP + 0x64]
0001a315(2): TEST EAX,EAX
0001a317(6): JNZ 0x0001a262
0001a31d(4): LEA RDI,[RBX + 0x4]
0001a321(5): MOV byte ptr [RSP + 0x60],0x1
0001a326(5): CALL 0x000020b0
0001a32b(2): TEST EAX,EAX
0001a32d(6): JZ 0x0001a46b
0001a333(5): MOV byte ptr [RSP + 0x40],0x0
0001a338(5): MOV byte ptr [RSP + 0x4c],0x1
0001a33d(5): JMP 0x0001961b
0001a348(12): MOV qword ptr [0x158 + RSP],0x1
0001a354(8): MOV byte ptr [0x160 + RSP],0x0
0001a35c(5): JMP 0x00019870
0001a368(8): LEA RAX,[0x80 + RSP]
0001a370(5): MOV qword ptr [RSP + 0x10],RAX
0001a375(5): CALL 0x00001d90
0001a37a(8): MOV R8,qword ptr [0x90 + RSP]
0001a382(3): MOV RSI,RAX
0001a385(3): MOV RDI,R8
0001a388(4): MOV qword ptr [RSP],R8
0001a38c(5): CALL 0x00008c30
0001a391(5): MOV RSI,qword ptr [RSP + 0x10]
0001a396(4): MOV R8,qword ptr [RSP]
0001a39a(3): MOV RDX,RAX
0001a39d(4): LEA RCX,[RSI + 0x4]
0001a3a1(4): LEA RDI,[RSI + 0x24]
0001a3a5(3): MOV RSI,R8
0001a3a8(5): CALL 0x0000a3b0
0001a3ad(4): CMP RAX,-0x1
0001a3b1(8): MOV qword ptr [0x98 + RSP],RAX
0001a3b9(6): JZ 0x0001a4e9
0001a3bf(4): CMP RAX,-0x2
0001a3c3(6): JZ 0x0001a475
0001a3c9(3): TEST RAX,RAX
0001a3cc(2): JNZ 0x0001a3fc
0001a3ce(8): MOV RAX,qword ptr [0x90 + RSP]
0001a3d6(12): MOV qword ptr [0x98 + RSP],0x1
0001a3e2(3): CMP byte ptr [RAX],0x0
0001a3e5(6): JNZ 0x0001a585
0001a3eb(8): MOV R9D,dword ptr [0xa4 + RSP]
0001a3f3(3): TEST R9D,R9D
0001a3f6(6): JNZ 0x0001a262
0001a3fc(5): MOV RDI,qword ptr [RSP + 0x10]
0001a401(8): MOV byte ptr [0xa0 + RSP],0x1
0001a409(4): ADD RDI,0x4
0001a40d(5): CALL 0x000020b0
0001a412(2): TEST EAX,EAX
0001a414(6): JZ 0x0001a50a
0001a41a(8): MOV byte ptr [0x80 + RSP],0x0
0001a422(8): MOV byte ptr [0x8c + RSP],0x1
0001a42a(5): JMP 0x0001a15d
0001a42f(8): LEA RAX,[0x80 + RSP]
0001a437(8): LEA RDI,[0x84 + RSP]
0001a43f(5): MOV qword ptr [RSP + 0x10],RAX
0001a444(5): CALL 0x000020b0
0001a449(2): TEST EAX,EAX
0001a44b(6): JZ 0x0001a558
0001a451(8): MOV byte ptr [0x80 + RSP],0x1
0001a459(5): JMP 0x0001a375
0001a45e(8): MOV byte ptr [0x14c + RSP],0x1
0001a466(5): JMP 0x00019861
0001a46b(5): MOV byte ptr [RSP + 0x4c],0x1
0001a470(5): JMP 0x0001961b
0001a475(8): MOV RDI,qword ptr [0x90 + RSP]
0001a47d(5): CALL 0x00001da0
0001a482(8): MOV byte ptr [0xa0 + RSP],0x0
0001a48a(8): MOV qword ptr [0x98 + RSP],RAX
0001a492(8): MOV byte ptr [0x8c + RSP],0x1
0001a49a(5): JMP 0x0001a16e
0001a49f(5): MOV RAX,qword ptr [RSP + 0x38]
0001a4a4(5): JMP 0x00019626
0001a4a9(8): MOV RDI,qword ptr [0x150 + RSP]
0001a4b1(5): CALL 0x00001da0
0001a4b6(8): MOV byte ptr [0x160 + RSP],0x0
0001a4be(8): MOV qword ptr [0x158 + RSP],RAX
0001a4c6(5): JMP 0x00019870
0001a4cb(5): MOV RDI,qword ptr [RSP + 0x50]
0001a4d0(5): CALL 0x00001da0
0001a4d5(5): MOV byte ptr [RSP + 0x60],0x0
0001a4da(5): MOV qword ptr [RSP + 0x58],RAX
0001a4df(5): MOV byte ptr [RSP + 0x4c],0x1
0001a4e4(5): JMP 0x0001967b
0001a4e9(12): MOV qword ptr [0x98 + RSP],0x1
0001a4f5(8): MOV byte ptr [0xa0 + RSP],0x0
0001a4fd(8): MOV byte ptr [0x8c + RSP],0x1
0001a505(5): JMP 0x0001a16e
0001a50a(8): MOV byte ptr [0x8c + RSP],0x1
0001a512(5): JMP 0x0001a15d
0001a517(2): TEST AL,AL
0001a519(6): JZ 0x0001a108
0001a51f(8): CMP byte ptr [0xa0 + RSP],0x0
0001a527(6): JZ 0x0001a16e
0001a52d(5): JMP 0x0001a15d
0001a538(4): LEA RDX,[R14 + R14*0x4]
0001a53c(3): CMP RBX,RDX
0001a53f(6): JNC 0x00019eb0
0001a545(4): ADD RBX,0x1
0001a549(4): MOV byte ptr [RSP + 0x10],AL
0001a54d(5): JMP 0x00019d01
0001a558(7): LEA RCX,[0x1cf80]
0001a55f(7): LEA RSI,[0x1bc98]
0001a566(7): LEA RDI,[0x1bcca]
0001a56d(5): MOV EDX,0x96
0001a572(5): CALL 0x00001e30
0001a577(4): ADD RBX,0x1
0001a57b(5): JMP 0x00019784
0001a580(5): CALL 0x00001db0
0001a585(7): LEA RCX,[0x1cf80]
0001a58c(7): LEA RSI,[0x1bc98]
0001a593(7): LEA RDI,[0x1bce1]
0001a59a(5): MOV EDX,0xb2
0001a59f(5): CALL 0x00001e30
0001a5a4(5): CALL 0x00001c70
0001a5a9(7): NOP dword ptr [RAX]
0001a5b0(2): PUSH R15
0001a5b2(2): PUSH R14
0001a5b4(3): MOV R15,RDI
0001a5b7(2): PUSH R13
0001a5b9(2): PUSH R12
0001a5bb(3): MOV R13,RSI
0001a5be(1): PUSH RBP
0001a5bf(1): PUSH RBX
0001a5c0(3): MOV RBX,RDX
0001a5c3(2): XOR ESI,ESI
0001a5c5(2): XOR EDX,EDX
0001a5c7(7): SUB RSP,0x1068
0001a5ce(5): MOV qword ptr [RSP + 0x28],RDI
0001a5d3(5): MOV qword ptr [RSP + 0x18],RCX
0001a5d8(3): MOV RDI,RBX
0001a5db(5): MOV qword ptr [RSP + 0x10],R8
0001a5e0(2): XOR ECX,ECX
0001a5e2(3): XOR R8D,R8D
0001a5e5(9): MOV RAX,qword ptr FS:[0x28]
0001a5ee(8): MOV qword ptr [0x1058 + RSP],RAX
0001a5f6(2): XOR EAX,EAX
0001a5f8(5): CALL 0x00001cd0
0001a5fd(5): MOV qword ptr [RSP + 0x30],R15
0001a602(3): XOR R15D,R15D
0001a605(3): TEST R13,R13
0001a608(5): MOV qword ptr [RSP + 0x38],R13
0001a60d(5): LEA R14,[RSP + 0x50]
0001a612(5): LEA R12,[RSP + 0x48]
0001a617(5): LEA RBP,[RSP + 0x40]
0001a61c(2): JZ 0x0001a69b
0001a61e(5): LEA RAX,[RSP + 0x38]
0001a623(5): LEA RSI,[RSP + 0x30]
0001a628(5): MOV qword ptr [RSP + 0x20],R13
0001a62d(5): MOV qword ptr [RSP + 0x8],RSI
0001a632(3): MOV R13,RAX
0001a635(2): JMP 0x0001a657
0001a640(5): MOV RAX,qword ptr [RSP + 0x40]
0001a645(3): SUB RAX,R14
0001a648(3): ADD R15,RAX
0001a64b(6): CMP qword ptr [RSP + 0x38],0x0
0001a651(6): JZ 0x0001a7f0
0001a657(5): MOV RSI,qword ptr [RSP + 0x8]
0001a65c(3): MOV R8,R12
0001a65f(3): MOV RCX,RBP
0001a662(3): MOV RDX,R13
0001a665(3): MOV RDI,RBX
0001a668(5): MOV qword ptr [RSP + 0x40],R14
0001a66d(9): MOV qword ptr [RSP + 0x48],0x1000
0001a676(5): CALL 0x00001cd0
0001a67b(4): CMP RAX,-0x1
0001a67f(2): JNZ 0x0001a640
0001a681(5): CALL 0x00001c80
0001a686(2): MOV EAX,dword ptr [RAX]
0001a688(3): CMP EAX,0x7
0001a68b(2): JZ 0x0001a640
0001a68d(3): CMP EAX,0x16
0001a690(5): MOV R13,qword ptr [RSP + 0x20]
0001a695(6): JNZ 0x0001a859
0001a69b(2): XOR EDX,EDX
0001a69d(2): XOR ESI,ESI
0001a69f(3): MOV R8,R12
0001a6a2(3): MOV RCX,RBP
0001a6a5(3): MOV RDI,RBX
0001a6a8(5): MOV qword ptr [RSP + 0x40],R14
0001a6ad(9): MOV qword ptr [RSP + 0x48],0x1000
0001a6b6(5): CALL 0x00001cd0
0001a6bb(4): CMP RAX,-0x1
0001a6bf(6): JZ 0x0001a859
0001a6c5(5): MOV RAX,qword ptr [RSP + 0x40]
0001a6ca(3): SUB RAX,R14
0001a6cd(3): ADD RAX,R15
0001a6d0(5): MOV qword ptr [RSP + 0x8],RAX
0001a6d5(6): JZ 0x0001a800
0001a6db(5): MOV RAX,qword ptr [RSP + 0x18]
0001a6e0(3): MOV RAX,qword ptr [RAX]
0001a6e3(3): TEST RAX,RAX
0001a6e6(5): MOV qword ptr [RSP + 0x20],RAX
0001a6eb(2): JZ 0x0001a6fc
0001a6ed(5): MOV RAX,qword ptr [RSP + 0x10]
0001a6f2(5): MOV RCX,qword ptr [RSP + 0x8]
0001a6f7(3): CMP qword ptr [RAX],RCX
0001a6fa(2): JNC 0x0001a714
0001a6fc(5): MOV RDI,qword ptr [RSP + 0x8]
0001a701(5): CALL 0x00001f20
0001a706(3): TEST RAX,RAX
0001a709(5): MOV qword ptr [RSP + 0x20],RAX
0001a70e(6): JZ 0x0001a84e
0001a714(3): XOR R8D,R8D
0001a717(2): XOR ECX,ECX
0001a719(2): XOR EDX,EDX
0001a71b(2): XOR ESI,ESI
0001a71d(3): MOV RDI,RBX
0001a720(5): LEA R15,[RSP + 0x38]
0001a725(5): CALL 0x00001cd0
0001a72a(5): MOV RAX,qword ptr [RSP + 0x28]
0001a72f(5): MOV qword ptr [RSP + 0x38],R13
0001a734(5): LEA R14,[RSP + 0x30]
0001a739(5): MOV qword ptr [RSP + 0x30],RAX
0001a73e(5): MOV RAX,qword ptr [RSP + 0x20]
0001a743(5): MOV qword ptr [RSP + 0x40],RAX
0001a748(5): MOV RAX,qword ptr [RSP + 0x8]
0001a74d(5): MOV qword ptr [RSP + 0x48],RAX
0001a752(2): JMP 0x0001a77b
0001a758(3): MOV R8,R12
0001a75b(3): MOV RCX,RBP
0001a75e(3): MOV RDX,R15
0001a761(3): MOV RSI,R14
0001a764(3): MOV RDI,RBX
0001a767(5): CALL 0x00001cd0
0001a76c(4): CMP RAX,-0x1
0001a770(6): JZ 0x0001a810
0001a776(5): MOV R13,qword ptr [RSP + 0x38]
0001a77b(3): TEST R13,R13
0001a77e(2): JNZ 0x0001a758
0001a780(2): XOR EDX,EDX
0001a782(2): XOR ESI,ESI
0001a784(3): MOV R8,R12
0001a787(3): MOV RCX,RBP
0001a78a(3): MOV RDI,RBX
0001a78d(5): CALL 0x00001cd0
0001a792(4): CMP RAX,-0x1
0001a796(6): JZ 0x0001a81e
0001a79c(6): CMP qword ptr [RSP + 0x48],0x0
0001a7a2(6): JNZ 0x0001a863
0001a7a8(5): MOV RAX,qword ptr [RSP + 0x18]
0001a7ad(5): MOV RSI,qword ptr [RSP + 0x20]
0001a7b2(2): XOR EBX,EBX
0001a7b4(5): MOV RDI,qword ptr [RSP + 0x8]
0001a7b9(3): MOV qword ptr [RAX],RSI
0001a7bc(5): MOV RAX,qword ptr [RSP + 0x10]
0001a7c1(3): MOV qword ptr [RAX],RDI
0001a7c4(8): MOV RDX,qword ptr [0x1058 + RSP]
0001a7cc(9): XOR RDX,qword ptr FS:[0x28]
0001a7d5(2): MOV EAX,EBX
0001a7d7(6): JNZ 0x0001a868
0001a7dd(7): ADD RSP,0x1068
0001a7e4(1): POP RBX
0001a7e5(1): POP RBP
0001a7e6(2): POP R12
0001a7e8(2): POP R13
0001a7ea(2): POP R14
0001a7ec(2): POP R15
0001a7ee(1): RET
0001a7f0(5): MOV R13,qword ptr [RSP + 0x20]
0001a7f5(5): JMP 0x0001a69b
0001a800(5): MOV RAX,qword ptr [RSP + 0x10]
0001a805(2): XOR EBX,EBX
0001a807(7): MOV qword ptr [RAX],0x0
0001a80e(2): JMP 0x0001a7c4
0001a810(5): CALL 0x00001c80
0001a815(3): CMP dword ptr [RAX],0x16
0001a818(6): JZ 0x0001a780
0001a81e(5): MOV RAX,qword ptr [RSP + 0x18]
0001a823(5): MOV R15,qword ptr [RSP + 0x20]
0001a828(5): MOV EBX,0xffffffff
0001a82d(3): CMP qword ptr [RAX],R15
0001a830(2): JZ 0x0001a7c4
0001a832(5): CALL 0x00001c80
0001a837(3): MOV R12D,dword ptr [RAX]
0001a83a(3): MOV RBP,RAX
0001a83d(3): MOV RDI,R15
0001a840(5): CALL 0x00001c60
0001a845(4): MOV dword ptr [RBP],R12D
0001a849(5): JMP 0x0001a7c4
0001a84e(5): CALL 0x00001c80
0001a853(6): MOV dword ptr [RAX],0xc
0001a859(5): MOV EBX,0xffffffff
0001a85e(5): JMP 0x0001a7c4
0001a863(5): CALL 0x00001c70
0001a868(5): CALL 0x00001db0
0001a86d(3): NOP dword ptr [RAX]
0001a870(2): PUSH R15
0001a872(2): PUSH R14
0001a874(2): PUSH R13
0001a876(2): PUSH R12
0001a878(3): MOV R12,RSI
0001a87b(1): PUSH RBP
0001a87c(1): PUSH RBX
0001a87d(4): SUB RSP,0x58
0001a881(9): MOV RAX,qword ptr FS:[0x28]
0001a88a(5): MOV qword ptr [RSP + 0x48],RAX
0001a88f(2): XOR EAX,EAX
0001a891(5): MOV qword ptr [RSP + 0x28],RDI
0001a896(5): CALL 0x00001da0
0001a89b(3): MOV R13,RAX
0001a89e(5): MOV qword ptr [RSP + 0x30],RAX
0001a8a3(4): SHL R13,0x4
0001a8a7(6): CMP RAX,0x10000000
0001a8ad(4): CMOVNC R13,RAX
0001a8b1(4): LEA RBP,[R13 + 0x1]
0001a8b5(3): MOV RDI,RBP
0001a8b8(5): CALL 0x00001f20
0001a8bd(3): TEST RAX,RAX
0001a8c0(3): MOV RBX,RAX
0001a8c3(6): JZ 0x0001aaa0
0001a8c9(3): XOR R8D,R8D
0001a8cc(2): XOR ECX,ECX
0001a8ce(2): XOR EDX,EDX
0001a8d0(2): XOR ESI,ESI
0001a8d2(3): MOV RDI,R12
0001a8d5(5): CALL 0x00001cd0
0001a8da(5): LEA RAX,[RSP + 0x40]
0001a8df(5): MOV qword ptr [RSP + 0x38],RBX
0001a8e4(5): MOV qword ptr [RSP + 0x40],R13
0001a8e9(5): MOV qword ptr [RSP + 0x8],RAX
0001a8ee(5): LEA RAX,[RSP + 0x38]
0001a8f3(4): MOV qword ptr [RSP],RAX
0001a8f7(5): LEA RAX,[RSP + 0x30]
0001a8fc(5): MOV qword ptr [RSP + 0x18],RAX
0001a901(5): LEA RAX,[RSP + 0x28]
0001a906(5): MOV qword ptr [RSP + 0x10],RAX
0001a90b(2): JMP 0x0001a974
0001a910(5): CALL 0x00001c80
0001a915(3): MOV R15,RAX
0001a918(2): MOV EAX,dword ptr [RAX]
0001a91a(3): CMP EAX,0x16
0001a91d(6): JZ 0x0001aa06
0001a923(3): CMP EAX,0x7
0001a926(6): JNZ 0x0001aa5e
0001a92c(5): MOV R14,qword ptr [RSP + 0x38]
0001a931(5): LEA R13,[RBP + RBP*0x1]
0001a936(3): SUB R14,RBX
0001a939(3): CMP RBP,R13
0001a93c(6): JNC 0x0001aa90
0001a942(3): MOV RSI,R13
0001a945(3): MOV RDI,RBX
0001a948(5): CALL 0x00001f90
0001a94d(3): TEST RAX,RAX
0001a950(6): JZ 0x0001aa90
0001a956(4): LEA RSI,[RAX + R14*0x1]
0001a95a(3): MOV RBX,RAX
0001a95d(3): MOV RBP,R13
0001a960(5): MOV qword ptr [RSP + 0x38],RSI
0001a965(4): LEA RSI,[R13 + -0x1]
0001a969(3): MOV RDX,RSI
0001a96c(3): SUB RDX,R14
0001a96f(5): MOV qword ptr [RSP + 0x40],RDX
0001a974(5): MOV R8,qword ptr [RSP + 0x8]
0001a979(4): MOV RCX,qword ptr [RSP]
0001a97d(3): MOV RDI,R12
0001a980(5): MOV RDX,qword ptr [RSP + 0x18]
0001a985(5): MOV RSI,qword ptr [RSP + 0x10]
0001a98a(5): CALL 0x00001cd0
0001a98f(4): CMP RAX,-0x1
0001a993(6): JZ 0x0001a910
0001a999(2): JMP 0x0001aa06
0001a9a0(5): CALL 0x00001c80
0001a9a5(3): CMP dword ptr [RAX],0x7
0001a9a8(3): MOV RCX,RAX
0001a9ab(6): JNZ 0x0001aa5e
0001a9b1(5): MOV R15,qword ptr [RSP + 0x38]
0001a9b6(5): LEA RDX,[RBP + RBP*0x1]
0001a9bb(3): SUB R15,RBX
0001a9be(3): CMP RBP,RDX
0001a9c1(6): JNC 0x0001aa58
0001a9c7(3): MOV RSI,RDX
0001a9ca(3): MOV RDI,RBX
0001a9cd(5): MOV qword ptr [RSP + 0x10],RDX
0001a9d2(5): MOV qword ptr [RSP + 0x18],RAX
0001a9d7(5): CALL 0x00001f90
0001a9dc(3): TEST RAX,RAX
0001a9df(5): MOV RDX,qword ptr [RSP + 0x10]
0001a9e4(5): MOV RCX,qword ptr [RSP + 0x18]
0001a9e9(2): JZ 0x0001aa58
0001a9eb(4): LEA RCX,[RAX + R15*0x1]
0001a9ef(3): MOV RBP,RDX
0001a9f2(3): MOV RBX,RAX
0001a9f5(5): MOV qword ptr [RSP + 0x38],RCX
0001a9fa(4): LEA RCX,[RDX + -0x1]
0001a9fe(3): SUB RCX,R15
0001aa01(5): MOV qword ptr [RSP + 0x40],RCX
0001aa06(5): MOV R8,qword ptr [RSP + 0x8]
0001aa0b(4): MOV RCX,qword ptr [RSP]
0001aa0f(2): XOR EDX,EDX
0001aa11(2): XOR ESI,ESI
0001aa13(3): MOV RDI,R12
0001aa16(5): CALL 0x00001cd0
0001aa1b(4): CMP RAX,-0x1
0001aa1f(6): JZ 0x0001a9a0
0001aa25(5): MOV RAX,qword ptr [RSP + 0x38]
0001aa2a(4): LEA RDX,[RAX + 0x1]
0001aa2e(5): MOV qword ptr [RSP + 0x38],RDX
0001aa33(3): MOV byte ptr [RAX],0x0
0001aa36(5): MOV RSI,qword ptr [RSP + 0x38]
0001aa3b(3): SUB RSI,RBX
0001aa3e(3): CMP RBP,RSI
0001aa41(2): JBE 0x0001aa68
0001aa43(3): MOV RDI,RBX
0001aa46(5): CALL 0x00001f90
0001aa4b(3): TEST RAX,RAX
0001aa4e(4): CMOVNZ RBX,RAX
0001aa52(2): JMP 0x0001aa68
0001aa58(6): MOV dword ptr [RCX],0xc
0001aa5e(3): MOV RDI,RBX
0001aa61(2): XOR EBX,EBX
0001aa63(5): CALL 0x00001c60
0001aa68(5): MOV RDI,qword ptr [RSP + 0x48]
0001aa6d(9): XOR RDI,qword ptr FS:[0x28]
0001aa76(3): MOV RAX,RBX
0001aa79(2): JNZ 0x0001aaad
0001aa7b(4): ADD RSP,0x58
0001aa7f(1): POP RBX
0001aa80(1): POP RBP
0001aa81(2): POP R12
0001aa83(2): POP R13
0001aa85(2): POP R14
0001aa87(2): POP R15
0001aa89(1): RET
0001aa90(7): MOV dword ptr [R15],0xc
0001aa97(2): JMP 0x0001aa5e
0001aaa0(5): CALL 0x00001c80
0001aaa5(6): MOV dword ptr [RAX],0xc
0001aaab(2): JMP 0x0001aa68
0001aaad(5): CALL 0x00001db0
0001aab2(4): NOP dword ptr [RAX]
0001aab6(10): NOP word ptr CS:[RAX + RAX*0x1]
0001aac0(2): PUSH R13
0001aac2(2): PUSH R12
0001aac4(1): PUSH RBP
0001aac5(1): PUSH RBX
0001aac6(3): MOV RBX,RDI
0001aac9(4): SUB RSP,0x8
0001aacd(3): CMP byte ptr [RDI],0x0
0001aad0(2): JZ 0x0001aae7
0001aad2(3): MOV R12,RSI
0001aad5(3): MOV RSI,RDX
0001aad8(3): MOV RBP,RDX
0001aadb(3): MOV RDI,R12
0001aade(5): CALL 0x00018650
0001aae3(2): TEST EAX,EAX
0001aae5(2): JNZ 0x0001ab08
0001aae7(3): MOV RDI,RBX
0001aaea(5): CALL 0x000020a0
0001aaef(3): TEST RAX,RAX
0001aaf2(3): MOV RBX,RAX
0001aaf5(2): JZ 0x0001ab60
0001aaf7(4): ADD RSP,0x8
0001aafb(3): MOV RAX,RBX
0001aafe(1): POP RBX
0001aaff(1): POP RBP
0001ab00(2): POP R12
0001ab02(2): POP R13
0001ab04(1): RET
0001ab08(3): MOV RDI,RBP
0001ab0b(3): MOV RSI,R12
0001ab0e(5): CALL 0x000020f0
0001ab13(4): CMP RAX,-0x1
0001ab17(3): MOV RBP,RAX
0001ab1a(6): JZ 0x0001aba0
0001ab20(3): MOV RDI,RBX
0001ab23(3): MOV RSI,RAX
0001ab26(5): CALL 0x0001a870
0001ab2b(3): TEST RAX,RAX
0001ab2e(3): MOV RBX,RAX
0001ab31(2): JZ 0x0001ab80
0001ab33(3): MOV RDI,RBP
0001ab36(5): CALL 0x00001fc0
0001ab3b(2): TEST EAX,EAX
0001ab3d(2): JNS 0x0001aaf7
0001ab3f(5): CALL 0x00001c80
0001ab44(3): MOV R12D,dword ptr [RAX]
0001ab47(3): MOV RBP,RAX
0001ab4a(3): MOV RDI,RBX
0001ab4d(5): CALL 0x00001c60
0001ab52(2): XOR EBX,EBX
0001ab54(4): MOV dword ptr [RBP],R12D
0001ab58(2): JMP 0x0001aaf7
0001ab60(5): CALL 0x00001c80
0001ab65(6): MOV dword ptr [RAX],0xc
0001ab6b(4): ADD RSP,0x8
0001ab6f(3): MOV RAX,RBX
0001ab72(1): POP RBX
0001ab73(1): POP RBP
0001ab74(2): POP R12
0001ab76(2): POP R13
0001ab78(1): RET
0001ab80(5): CALL 0x00001c80
0001ab85(3): MOV R13D,dword ptr [RAX]
0001ab88(3): MOV R12,RAX
0001ab8b(3): MOV RDI,RBP
0001ab8e(5): CALL 0x00001fc0
0001ab93(4): MOV dword ptr [R12],R13D
0001ab97(5): JMP 0x0001aaf7
0001aba0(2): XOR EBX,EBX
0001aba2(5): JMP 0x0001aaf7
0001abb0(4): ADD RDI,0x20
0001abb4(2): JC 0x0001abe3
0001abb6(4): SUB RSP,0x8
0001abba(5): CALL 0x00001f20
0001abbf(2): XOR EDX,EDX
0001abc1(3): TEST RAX,RAX
0001abc4(2): JZ 0x0001abdb
0001abc6(4): LEA RDX,[RAX + 0x10]
0001abca(4): AND RDX,-0x20
0001abce(4): ADD RDX,0x10
0001abd2(3): MOV RCX,RDX
0001abd5(3): SUB RCX,RAX
0001abd8(3): MOV byte ptr [RDX + -0x1],CL
0001abdb(3): MOV RAX,RDX
0001abde(4): ADD RSP,0x8
0001abe2(1): RET
0001abe3(2): XOR EDX,EDX
0001abe5(3): MOV RAX,RDX
0001abe8(1): RET
0001abf0(4): TEST DIL,0xf
0001abf4(2): JNZ 0x0001ac0c
0001abf6(4): TEST DIL,0x10
0001abfa(2): JNZ 0x0001ac00
0001abfc(2): RET
0001ac00(4): MOVZX EAX,byte ptr [RDI + -0x1]
0001ac04(3): SUB RDI,RAX
0001ac07(5): JMP 0x00001c60
0001ac0c(4): SUB RSP,0x8
0001ac10(5): CALL 0x00001c70
0001ac15(10): NOP word ptr CS:[RAX + RAX*0x1]
0001ac1f(1): NOP
0001ac20(2): PUSH R14
0001ac22(2): PUSH R13
0001ac24(2): PUSH R12
0001ac26(1): PUSH RBP
0001ac27(1): PUSH RBX
0001ac28(3): MOV RBX,RDI
0001ac2b(4): SUB RSP,0x50
0001ac2f(9): MOV RAX,qword ptr FS:[0x28]
0001ac38(5): MOV qword ptr [RSP + 0x48],RAX
0001ac3d(2): XOR EAX,EAX
0001ac3f(5): CALL 0x00001d90
0001ac44(4): CMP RAX,0x1
0001ac48(2): JA 0x0001ac80
0001ac4a(3): MOV RDI,RBX
0001ac4d(5): CALL 0x00001da0
0001ac52(3): MOV RBX,RAX
0001ac55(5): MOV RSI,qword ptr [RSP + 0x48]
0001ac5a(9): XOR RSI,qword ptr FS:[0x28]
0001ac63(3): MOV RAX,RBX
0001ac66(6): JNZ 0x0001ae09
0001ac6c(4): ADD RSP,0x50
0001ac70(1): POP RBX
0001ac71(1): POP RBP
0001ac72(2): POP R12
0001ac74(2): POP R13
0001ac76(2): POP R14
0001ac78(1): RET
0001ac80(3): MOV RBP,RSP
0001ac83(5): MOV qword ptr [RSP + 0x10],RBX
0001ac88(4): MOV byte ptr [RSP],0x0
0001ac8c(9): MOV qword ptr [RSP + 0x4],0x0
0001ac95(5): MOV byte ptr [RSP + 0xc],0x0
0001ac9a(2): XOR EBX,EBX
0001ac9c(7): LEA R12,[0x1cf60]
0001aca3(4): LEA R13,[RBP + 0x4]
0001aca7(2): JMP 0x0001ad06
0001acb0(5): MOV RCX,qword ptr [RSP + 0x10]
0001acb5(3): MOVZX EDX,byte ptr [RCX]
0001acb8(2): MOV EAX,EDX
0001acba(3): SHR AL,0x5
0001acbd(3): AND EAX,0x7
0001acc0(4): MOV EAX,dword ptr [R12 + RAX*0x4]
0001acc4(3): BT EAX,EDX
0001acc7(6): JNC 0x0001ad90
0001accd(9): MOV qword ptr [RSP + 0x18],0x1
0001acd6(3): MOVSX EAX,byte ptr [RCX]
0001acd9(5): MOV byte ptr [RSP + 0x20],0x1
0001acde(5): MOV byte ptr [RSP + 0xc],0x1
0001ace3(4): MOV dword ptr [RSP + 0x24],EAX
0001ace7(4): MOV EAX,dword ptr [RSP + 0x24]
0001aceb(2): TEST EAX,EAX
0001aced(6): JZ 0x0001ac55
0001acf3(5): MOV RAX,qword ptr [RSP + 0x18]
0001acf8(5): ADD qword ptr [RSP + 0x10],RAX
0001acfd(4): ADD RBX,0x1
0001ad01(5): MOV byte ptr [RSP + 0xc],0x0
0001ad06(4): CMP byte ptr [RSP],0x0
0001ad0a(2): JZ 0x0001acb0
0001ad0c(5): CALL 0x00001d90
0001ad11(5): MOV R14,qword ptr [RSP + 0x10]
0001ad16(3): MOV RSI,RAX
0001ad19(3): MOV RDI,R14
0001ad1c(5): CALL 0x00008c30
0001ad21(4): LEA RCX,[RBP + 0x4]
0001ad25(4): LEA RDI,[RBP + 0x24]
0001ad29(3): MOV RDX,RAX
0001ad2c(3): MOV RSI,R14
0001ad2f(5): CALL 0x0000a3b0
0001ad34(4): CMP RAX,-0x1
0001ad38(5): MOV qword ptr [RSP + 0x18],RAX
0001ad3d(2): JZ 0x0001ada8
0001ad3f(4): CMP RAX,-0x2
0001ad43(2): JZ 0x0001adc0
0001ad45(3): TEST RAX,RAX
0001ad48(2): JNZ 0x0001ad6d
0001ad4a(5): MOV RAX,qword ptr [RSP + 0x10]
0001ad4f(9): MOV qword ptr [RSP + 0x18],0x1
0001ad58(3): CMP byte ptr [RAX],0x0
0001ad5b(6): JNZ 0x0001ae0e
0001ad61(4): MOV EDX,dword ptr [RSP + 0x24]
0001ad65(2): TEST EDX,EDX
0001ad67(6): JNZ 0x0001ae2d
0001ad6d(4): LEA RDI,[RBP + 0x4]
0001ad71(5): MOV byte ptr [RSP + 0x20],0x1
0001ad76(5): CALL 0x000020b0
0001ad7b(2): TEST EAX,EAX
0001ad7d(2): JZ 0x0001ade0
0001ad7f(4): MOV byte ptr [RSP],0x0
0001ad83(5): MOV byte ptr [RSP + 0xc],0x1
0001ad88(5): JMP 0x0001ace7
0001ad90(3): MOV RDI,R13
0001ad93(5): CALL 0x000020b0
0001ad98(2): TEST EAX,EAX
0001ad9a(2): JZ 0x0001adea
0001ad9c(4): MOV byte ptr [RSP],0x1
0001ada0(5): JMP 0x0001ad0c
0001ada8(9): MOV qword ptr [RSP + 0x18],0x1
0001adb1(5): MOV byte ptr [RSP + 0x20],0x0
0001adb6(5): JMP 0x0001acf3
0001adc0(5): MOV RDI,qword ptr [RSP + 0x10]
0001adc5(5): CALL 0x00001da0
0001adca(5): MOV byte ptr [RSP + 0x20],0x0
0001adcf(5): MOV qword ptr [RSP + 0x18],RAX
0001add4(5): JMP 0x0001acf3
0001ade0(5): MOV byte ptr [RSP + 0xc],0x1
0001ade5(5): JMP 0x0001ace7
0001adea(7): LEA RCX,[0x1cfa0]
0001adf1(7): LEA RSI,[0x1bc98]
0001adf8(7): LEA RDI,[0x1bcca]
0001adff(5): MOV EDX,0x96
0001ae04(5): CALL 0x00001e30
0001ae09(5): CALL 0x00001db0
0001ae0e(7): LEA RCX,[0x1cfa0]
0001ae15(7): LEA RSI,[0x1bc98]
0001ae1c(7): LEA RDI,[0x1bce1]
0001ae23(5): MOV EDX,0xb2
0001ae28(5): CALL 0x00001e30
0001ae2d(7): LEA RCX,[0x1cfa0]
0001ae34(7): LEA RSI,[0x1bc98]
0001ae3b(7): LEA RDI,[0x1bcb8]
0001ae42(5): MOV EDX,0xb3
0001ae47(5): CALL 0x00001e30
0001ae4c(4): NOP dword ptr [RAX]
0001ae50(2): PUSH R15
0001ae52(2): PUSH R14
0001ae54(3): MOV R15,RDX
0001ae57(2): PUSH R13
0001ae59(2): PUSH R12
0001ae5b(7): LEA R12,[0x220870]
0001ae62(1): PUSH RBP
0001ae63(7): LEA RBP,[0x220878]
0001ae6a(1): PUSH RBX
0001ae6b(3): MOV R13D,EDI
0001ae6e(3): MOV R14,RSI
0001ae71(3): SUB RBP,R12
0001ae74(4): SUB RSP,0x8
0001ae78(4): SAR RBP,0x3
0001ae7c(5): CALL 0x00001c28
0001ae81(3): TEST RBP,RBP
0001ae84(2): JZ 0x0001aea6
0001ae86(2): XOR EBX,EBX
0001ae88(8): NOP dword ptr [RAX + RAX*0x1]
0001ae90(3): MOV RDX,R15
0001ae93(3): MOV RSI,R14
0001ae96(3): MOV EDI,R13D
0001ae99(4): CALL qword ptr [R12 + RBX*0x8]
0001ae9d(4): ADD RBX,0x1
0001aea1(3): CMP RBP,RBX
0001aea4(2): JNZ 0x0001ae90
0001aea6(4): ADD RSP,0x8
0001aeaa(1): POP RBX
0001aeab(1): POP RBP
0001aeac(2): POP R12
0001aeae(2): POP R13
0001aeb0(2): POP R14
0001aeb2(2): POP R15
0001aeb4(1): RET
0001aec0(2): RET
0001aed0(7): MOV RDX,qword ptr [0x00221008]
0001aed7(2): XOR ESI,ESI
0001aed9(5): JMP 0x00002060
0001aee0(4): SUB RSP,0x8
0001aee4(4): ADD RSP,0x8
0001aee8(1): RET

