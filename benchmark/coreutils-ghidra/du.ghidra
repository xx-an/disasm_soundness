00002390(4): SUB RSP,0x8
00002394(7): MOV RAX,qword ptr [0x00227fe8]
0000239b(3): TEST RAX,RAX
0000239e(2): JZ 0x000023a2
000023a0(2): CALL RAX
000023a2(4): ADD RSP,0x8
000023a6(1): RET
000023b0(6): PUSH qword ptr [0x00227c90]
000023b6(6): JMP qword ptr [0x00227c98]
000023c0(6): JMP qword ptr [0x00227ca0]
000023c6(5): PUSH 0x0
000023cb(5): JMP 0x000023b0
000023d0(6): JMP qword ptr [0x00227ca8]
000023d6(5): PUSH 0x1
000023db(5): JMP 0x000023b0
000023e0(6): JMP qword ptr [0x00227cb0]
000023e6(5): PUSH 0x2
000023eb(5): JMP 0x000023b0
000023f0(6): JMP qword ptr [0x00227cb8]
000023f6(5): PUSH 0x3
000023fb(5): JMP 0x000023b0
00002400(6): JMP qword ptr [0x00227cc0]
00002406(5): PUSH 0x4
0000240b(5): JMP 0x000023b0
00002410(6): JMP qword ptr [0x00227cc8]
00002416(5): PUSH 0x5
0000241b(5): JMP 0x000023b0
00002420(6): JMP qword ptr [0x00227cd0]
00002426(5): PUSH 0x6
0000242b(5): JMP 0x000023b0
00002430(6): JMP qword ptr [0x00227cd8]
00002436(5): PUSH 0x7
0000243b(5): JMP 0x000023b0
00002440(6): JMP qword ptr [0x00227ce0]
00002446(5): PUSH 0x8
0000244b(5): JMP 0x000023b0
00002450(6): JMP qword ptr [0x00227ce8]
00002456(5): PUSH 0x9
0000245b(5): JMP 0x000023b0
00002460(6): JMP qword ptr [0x00227cf0]
00002466(5): PUSH 0xa
0000246b(5): JMP 0x000023b0
00002470(6): JMP qword ptr [0x00227cf8]
00002476(5): PUSH 0xb
0000247b(5): JMP 0x000023b0
00002480(6): JMP qword ptr [0x00227d00]
00002486(5): PUSH 0xc
0000248b(5): JMP 0x000023b0
00002490(6): JMP qword ptr [0x00227d08]
00002496(5): PUSH 0xd
0000249b(5): JMP 0x000023b0
000024a0(6): JMP qword ptr [0x00227d10]
000024a6(5): PUSH 0xe
000024ab(5): JMP 0x000023b0
000024b0(6): JMP qword ptr [0x00227d18]
000024b6(5): PUSH 0xf
000024bb(5): JMP 0x000023b0
000024c0(6): JMP qword ptr [0x00227d20]
000024c6(5): PUSH 0x10
000024cb(5): JMP 0x000023b0
000024d0(6): JMP qword ptr [0x00227d28]
000024d6(5): PUSH 0x11
000024db(5): JMP 0x000023b0
000024e0(6): JMP qword ptr [0x00227d30]
000024e6(5): PUSH 0x12
000024eb(5): JMP 0x000023b0
000024f0(6): JMP qword ptr [0x00227d38]
000024f6(5): PUSH 0x13
000024fb(5): JMP 0x000023b0
00002500(6): JMP qword ptr [0x00227d40]
00002506(5): PUSH 0x14
0000250b(5): JMP 0x000023b0
00002510(6): JMP qword ptr [0x00227d48]
00002516(5): PUSH 0x15
0000251b(5): JMP 0x000023b0
00002520(6): JMP qword ptr [0x00227d50]
00002526(5): PUSH 0x16
0000252b(5): JMP 0x000023b0
00002530(6): JMP qword ptr [0x00227d58]
00002536(5): PUSH 0x17
0000253b(5): JMP 0x000023b0
00002540(6): JMP qword ptr [0x00227d60]
00002546(5): PUSH 0x18
0000254b(5): JMP 0x000023b0
00002550(6): JMP qword ptr [0x00227d68]
00002556(5): PUSH 0x19
0000255b(5): JMP 0x000023b0
00002560(6): JMP qword ptr [0x00227d70]
00002566(5): PUSH 0x1a
0000256b(5): JMP 0x000023b0
00002570(6): JMP qword ptr [0x00227d78]
00002576(5): PUSH 0x1b
0000257b(5): JMP 0x000023b0
00002580(6): JMP qword ptr [0x00227d80]
00002586(5): PUSH 0x1c
0000258b(5): JMP 0x000023b0
00002590(6): JMP qword ptr [0x00227d88]
00002596(5): PUSH 0x1d
0000259b(5): JMP 0x000023b0
000025a0(6): JMP qword ptr [0x00227d90]
000025a6(5): PUSH 0x1e
000025ab(5): JMP 0x000023b0
000025b0(6): JMP qword ptr [0x00227d98]
000025b6(5): PUSH 0x1f
000025bb(5): JMP 0x000023b0
000025c0(6): JMP qword ptr [0x00227da0]
000025c6(5): PUSH 0x20
000025cb(5): JMP 0x000023b0
000025d0(6): JMP qword ptr [0x00227da8]
000025d6(5): PUSH 0x21
000025db(5): JMP 0x000023b0
000025e0(6): JMP qword ptr [0x00227db0]
000025e6(5): PUSH 0x22
000025eb(5): JMP 0x000023b0
000025f0(6): JMP qword ptr [0x00227db8]
000025f6(5): PUSH 0x23
000025fb(5): JMP 0x000023b0
00002600(6): JMP qword ptr [0x00227dc0]
00002606(5): PUSH 0x24
0000260b(5): JMP 0x000023b0
00002610(6): JMP qword ptr [0x00227dc8]
00002616(5): PUSH 0x25
0000261b(5): JMP 0x000023b0
00002620(6): JMP qword ptr [0x00227dd0]
00002626(5): PUSH 0x26
0000262b(5): JMP 0x000023b0
00002630(6): JMP qword ptr [0x00227dd8]
00002636(5): PUSH 0x27
0000263b(5): JMP 0x000023b0
00002640(6): JMP qword ptr [0x00227de0]
00002646(5): PUSH 0x28
0000264b(5): JMP 0x000023b0
00002650(6): JMP qword ptr [0x00227de8]
00002656(5): PUSH 0x29
0000265b(5): JMP 0x000023b0
00002660(6): JMP qword ptr [0x00227df0]
00002666(5): PUSH 0x2a
0000266b(5): JMP 0x000023b0
00002670(6): JMP qword ptr [0x00227df8]
00002676(5): PUSH 0x2b
0000267b(5): JMP 0x000023b0
00002680(6): JMP qword ptr [0x00227e00]
00002686(5): PUSH 0x2c
0000268b(5): JMP 0x000023b0
00002690(6): JMP qword ptr [0x00227e08]
00002696(5): PUSH 0x2d
0000269b(5): JMP 0x000023b0
000026a0(6): JMP qword ptr [0x00227e10]
000026a6(5): PUSH 0x2e
000026ab(5): JMP 0x000023b0
000026b0(6): JMP qword ptr [0x00227e18]
000026b6(5): PUSH 0x2f
000026bb(5): JMP 0x000023b0
000026c0(6): JMP qword ptr [0x00227e20]
000026c6(5): PUSH 0x30
000026cb(5): JMP 0x000023b0
000026d0(6): JMP qword ptr [0x00227e28]
000026d6(5): PUSH 0x31
000026db(5): JMP 0x000023b0
000026e0(6): JMP qword ptr [0x00227e30]
000026e6(5): PUSH 0x32
000026eb(5): JMP 0x000023b0
000026f0(6): JMP qword ptr [0x00227e38]
000026f6(5): PUSH 0x33
000026fb(5): JMP 0x000023b0
00002700(6): JMP qword ptr [0x00227e40]
00002706(5): PUSH 0x34
0000270b(5): JMP 0x000023b0
00002710(6): JMP qword ptr [0x00227e48]
00002716(5): PUSH 0x35
0000271b(5): JMP 0x000023b0
00002720(6): JMP qword ptr [0x00227e50]
00002726(5): PUSH 0x36
0000272b(5): JMP 0x000023b0
00002730(6): JMP qword ptr [0x00227e58]
00002736(5): PUSH 0x37
0000273b(5): JMP 0x000023b0
00002740(6): JMP qword ptr [0x00227e60]
00002746(5): PUSH 0x38
0000274b(5): JMP 0x000023b0
00002750(6): JMP qword ptr [0x00227e68]
00002756(5): PUSH 0x39
0000275b(5): JMP 0x000023b0
00002760(6): JMP qword ptr [0x00227e70]
00002766(5): PUSH 0x3a
0000276b(5): JMP 0x000023b0
00002770(6): JMP qword ptr [0x00227e78]
00002776(5): PUSH 0x3b
0000277b(5): JMP 0x000023b0
00002780(6): JMP qword ptr [0x00227e80]
00002786(5): PUSH 0x3c
0000278b(5): JMP 0x000023b0
00002790(6): JMP qword ptr [0x00227e88]
00002796(5): PUSH 0x3d
0000279b(5): JMP 0x000023b0
000027a0(6): JMP qword ptr [0x00227e90]
000027a6(5): PUSH 0x3e
000027ab(5): JMP 0x000023b0
000027b0(6): JMP qword ptr [0x00227e98]
000027b6(5): PUSH 0x3f
000027bb(5): JMP 0x000023b0
000027c0(6): JMP qword ptr [0x00227ea0]
000027c6(5): PUSH 0x40
000027cb(5): JMP 0x000023b0
000027d0(6): JMP qword ptr [0x00227ea8]
000027d6(5): PUSH 0x41
000027db(5): JMP 0x000023b0
000027e0(6): JMP qword ptr [0x00227eb0]
000027e6(5): PUSH 0x42
000027eb(5): JMP 0x000023b0
000027f0(6): JMP qword ptr [0x00227eb8]
000027f6(5): PUSH 0x43
000027fb(5): JMP 0x000023b0
00002800(6): JMP qword ptr [0x00227ec0]
00002806(5): PUSH 0x44
0000280b(5): JMP 0x000023b0
00002810(6): JMP qword ptr [0x00227ec8]
00002816(5): PUSH 0x45
0000281b(5): JMP 0x000023b0
00002820(6): JMP qword ptr [0x00227ed0]
00002826(5): PUSH 0x46
0000282b(5): JMP 0x000023b0
00002830(6): JMP qword ptr [0x00227ed8]
00002836(5): PUSH 0x47
0000283b(5): JMP 0x000023b0
00002840(6): JMP qword ptr [0x00227ee0]
00002846(5): PUSH 0x48
0000284b(5): JMP 0x000023b0
00002850(6): JMP qword ptr [0x00227ee8]
00002856(5): PUSH 0x49
0000285b(5): JMP 0x000023b0
00002860(6): JMP qword ptr [0x00227ef0]
00002866(5): PUSH 0x4a
0000286b(5): JMP 0x000023b0
00002870(6): JMP qword ptr [0x00227ef8]
00002876(5): PUSH 0x4b
0000287b(5): JMP 0x000023b0
00002880(6): JMP qword ptr [0x00227f00]
00002886(5): PUSH 0x4c
0000288b(5): JMP 0x000023b0
00002890(6): JMP qword ptr [0x00227f08]
00002896(5): PUSH 0x4d
0000289b(5): JMP 0x000023b0
000028a0(6): JMP qword ptr [0x00227f10]
000028a6(5): PUSH 0x4e
000028ab(5): JMP 0x000023b0
000028b0(6): JMP qword ptr [0x00227f18]
000028b6(5): PUSH 0x4f
000028bb(5): JMP 0x000023b0
000028c0(6): JMP qword ptr [0x00227f20]
000028c6(5): PUSH 0x50
000028cb(5): JMP 0x000023b0
000028d0(6): JMP qword ptr [0x00227f28]
000028d6(5): PUSH 0x51
000028db(5): JMP 0x000023b0
000028e0(6): JMP qword ptr [0x00227f30]
000028e6(5): PUSH 0x52
000028eb(5): JMP 0x000023b0
000028f0(6): JMP qword ptr [0x00227f38]
000028f6(5): PUSH 0x53
000028fb(5): JMP 0x000023b0
00002900(6): JMP qword ptr [0x00227f40]
00002906(5): PUSH 0x54
0000290b(5): JMP 0x000023b0
00002910(6): JMP qword ptr [0x00227f48]
00002916(5): PUSH 0x55
0000291b(5): JMP 0x000023b0
00002920(6): JMP qword ptr [0x00227f50]
00002926(5): PUSH 0x56
0000292b(5): JMP 0x000023b0
00002930(6): JMP qword ptr [0x00227f58]
00002936(5): PUSH 0x57
0000293b(5): JMP 0x000023b0
00002940(6): JMP qword ptr [0x00227f60]
00002946(5): PUSH 0x58
0000294b(5): JMP 0x000023b0
00002950(6): JMP qword ptr [0x00227f68]
00002956(5): PUSH 0x59
0000295b(5): JMP 0x000023b0
00002960(6): JMP qword ptr [0x00227f70]
00002966(5): PUSH 0x5a
0000296b(5): JMP 0x000023b0
00002970(6): JMP qword ptr [0x00227f78]
00002976(5): PUSH 0x5b
0000297b(5): JMP 0x000023b0
00002980(6): JMP qword ptr [0x00227f80]
00002986(5): PUSH 0x5c
0000298b(5): JMP 0x000023b0
00002990(6): JMP qword ptr [0x00227f88]
00002996(5): PUSH 0x5d
0000299b(5): JMP 0x000023b0
000029a0(6): JMP qword ptr [0x00227f90]
000029a6(5): PUSH 0x5e
000029ab(5): JMP 0x000023b0
000029b0(6): JMP qword ptr [0x00227f98]
000029b6(5): PUSH 0x5f
000029bb(5): JMP 0x000023b0
000029c0(6): JMP qword ptr [0x00227fa0]
000029c6(5): PUSH 0x60
000029cb(5): JMP 0x000023b0
000029d0(6): JMP qword ptr [0x00227fa8]
000029d6(5): PUSH 0x61
000029db(5): JMP 0x000023b0
000029e0(6): JMP qword ptr [0x00227fb0]
000029e6(5): PUSH 0x62
000029eb(5): JMP 0x000023b0
000029f0(6): JMP qword ptr [0x00227fb8]
000029f6(5): PUSH 0x63
000029fb(5): JMP 0x000023b0
00002a00(6): JMP qword ptr [0x00227fc0]
00002a06(5): PUSH 0x64
00002a0b(5): JMP 0x000023b0
00002a10(6): JMP qword ptr [0x00227fc8]
00002a18(6): JMP qword ptr [0x00227ff8]
00002a20(7): LEA RCX,[0x21a60]
00002a27(7): LEA RSI,[0x214a8]
00002a2e(7): LEA RDI,[0x214f6]
00002a35(4): SUB RSP,0x8
00002a39(5): MOV EDX,0xb3
00002a3e(5): CALL 0x00002600
00002a43(10): NOP word ptr CS:[RAX + RAX*0x1]
00002a4d(3): NOP dword ptr [RAX]
00002a50(2): PUSH R15
00002a52(2): PUSH R14
00002a54(3): XOR R15D,R15D
00002a57(2): PUSH R13
00002a59(2): PUSH R12
00002a5b(3): MOV R12D,EDI
00002a5e(1): PUSH RBP
00002a5f(1): PUSH RBX
00002a60(3): MOV RBP,RSI
00002a63(7): LEA RBX,[0x20fc0]
00002a6a(3): XOR R13D,R13D
00002a6d(7): SUB RSP,0x138
00002a74(3): MOV RDI,qword ptr [RSI]
00002a77(9): MOV RAX,qword ptr FS:[0x28]
00002a80(8): MOV qword ptr [0x128 + RSP],RAX
00002a88(2): XOR EAX,EAX
00002a8a(7): LEA RAX,[0x2269c]
00002a91(12): MOV qword ptr [0x88 + RSP],0x0
00002a9d(5): LEA R14,[RSP + 0x5c]
00002aa2(8): MOV qword ptr [0x80 + RSP],RAX
00002aaa(5): CALL 0x0000a650
00002aaf(7): LEA RSI,[0x21fe1]
00002ab6(5): MOV EDI,0x6
00002abb(5): CALL 0x00002840
00002ac0(7): LEA RSI,[0x1fb3d]
00002ac7(7): LEA RDI,[0x1fb0b]
00002ace(5): CALL 0x00002500
00002ad3(7): LEA RDI,[0x1fb0b]
00002ada(5): CALL 0x000024c0
00002adf(7): LEA RDI,[0x4bf0]
00002ae6(5): CALL 0x0001fa40
00002aeb(5): CALL 0x00005410
00002af0(7): LEA RDI,[0x1fb55]
00002af7(7): MOV qword ptr [0x00228140],RAX
00002afe(5): CALL 0x000023e0
00002b03(7): LEA RDX,[0x228148]
00002b0a(7): LEA RSI,[0x228170]
00002b11(3): MOV RDI,RAX
00002b14(5): CALL 0x00009ab0
00002b19(5): LEA RAX,[RSP + 0x60]
00002b1e(5): MOV byte ptr [RSP + 0x1c],0x0
00002b23(8): MOV dword ptr [RSP + 0x18],0x10
00002b2b(8): MOV dword ptr [RSP + 0x10],0x8
00002b33(5): MOV byte ptr [RSP + 0x8],0x1
00002b38(5): MOV byte ptr [RSP + 0x20],0x0
00002b3d(5): MOV qword ptr [RSP + 0x28],RAX
00002b42(6): NOP word ptr [RAX + RAX*0x1]
00002b48(7): LEA RCX,[0x2276e0]
00002b4f(7): LEA RDX,[0x1fb63]
00002b56(3): MOV R8,R14
00002b59(3): MOV RSI,RBP
00002b5c(3): MOV EDI,R12D
00002b5f(8): MOV dword ptr [RSP + 0x5c],0xffffffff
00002b67(5): CALL 0x00002570
00002b6c(3): CMP EAX,-0x1
00002b6f(6): JZ 0x00002ee6
00002b75(5): ADD EAX,0x83
00002b7a(5): CMP EAX,0x10a
00002b7f(6): JA 0x00002edc
00002b85(4): MOVSXD RAX,dword ptr [RBX + RAX*0x4]
00002b89(3): ADD RAX,RBX
00002b8c(2): JMP RAX
00002b8e(8): MOV dword ptr [RSP + 0x10],0x48
00002b96(2): JMP 0x00002b48
00002b98(7): MOV RDI,qword ptr [0x002280c0]
00002b9f(7): LEA R8,[0x1fb94]
00002ba6(7): LEA RCX,[0x228178]
00002bad(2): XOR EDX,EDX
00002baf(2): XOR ESI,ESI
00002bb1(5): CALL 0x0000ccf0
00002bb6(2): TEST EAX,EAX
00002bb8(6): JNZ 0x00003e54
00002bbe(8): CMP qword ptr [0x00228178],0x0
00002bc6(2): JNZ 0x00002b48
00002bc8(7): MOV RAX,qword ptr [0x002280c0]
00002bcf(3): CMP byte ptr [RAX],0x2d
00002bd2(6): JNZ 0x00002b48
00002bd8(7): LEA RSI,[0x20d50]
00002bdf(5): MOV EDX,0x5
00002be4(2): XOR EDI,EDI
00002be6(5): CALL 0x00002510
00002beb(2): XOR ESI,ESI
00002bed(3): MOV RDX,RAX
00002bf0(5): MOV EDI,0x1
00002bf5(2): XOR EAX,EAX
00002bf7(5): CALL 0x000028a0
00002bfc(5): MOV byte ptr [RSP + 0x1c],0x1
00002c01(5): JMP 0x00002b48
00002c06(7): MOV dword ptr [0x00228170],R15D
00002c0d(11): MOV qword ptr [0x00228148],0x100000
00002c18(5): JMP 0x00002b48
00002c1d(7): MOV byte ptr [0x00228184],0x1
00002c24(5): JMP 0x00002b48
00002c29(7): MOV dword ptr [0x00228170],R15D
00002c30(11): MOV qword ptr [0x00228148],0x400
00002c3b(5): JMP 0x00002b48
00002c40(10): MOV dword ptr [0x00228170],0xb0
00002c4a(11): MOV qword ptr [0x00228148],0x1
00002c55(5): JMP 0x00002b48
00002c5a(5): MOV RCX,qword ptr [RSP + 0x28]
00002c5f(7): MOV RDI,qword ptr [0x002280c0]
00002c66(3): XOR R8D,R8D
00002c69(2): XOR EDX,EDX
00002c6b(2): XOR ESI,ESI
00002c6d(5): CALL 0x0000d3b0
00002c72(2): TEST EAX,EAX
00002c74(6): JNZ 0x00003772
00002c7a(5): MOV RAX,qword ptr [RSP + 0x60]
00002c7f(5): MOV byte ptr [RSP + 0x20],0x1
00002c84(7): MOV qword ptr [0x00228010],RAX
00002c8b(5): JMP 0x00002b48
00002c90(7): MOV byte ptr [0x00228181],0x1
00002c97(5): JMP 0x00002b48
00002c9c(7): MOV byte ptr [0x00228185],0x1
00002ca3(7): MOV dword ptr [0x00228170],R15D
00002caa(11): MOV qword ptr [0x00228148],0x1
00002cb5(5): JMP 0x00002b48
00002cba(7): MOV byte ptr [0x00228186],0x1
00002cc1(5): JMP 0x00002b48
00002cc6(7): MOV RDX,qword ptr [0x002280c0]
00002ccd(7): MOV RSI,qword ptr [0x00228140]
00002cd4(6): MOV R8D,0xa
00002cda(7): LEA RDI,[0x5780]
00002ce1(5): MOV ECX,0x10000000
00002ce6(5): CALL 0x00005d10
00002ceb(2): TEST EAX,EAX
00002ced(6): JZ 0x00002b48
00002cf3(7): MOV RDX,qword ptr [0x002280c0]
00002cfa(5): MOV ESI,0x3
00002cff(2): XOR EDI,EDI
00002d01(5): CALL 0x0000c190
00002d06(5): MOV qword ptr [RSP + 0x8],RAX
00002d0b(5): CALL 0x00002410
00002d10(5): MOV RCX,qword ptr [RSP + 0x8]
00002d15(2): MOV ESI,dword ptr [RAX]
00002d17(7): LEA RDX,[0x21490]
00002d1e(2): XOR EDI,EDI
00002d20(2): XOR EAX,EAX
00002d22(5): CALL 0x000028a0
00002d27(5): MOV byte ptr [RSP + 0x8],0x0
00002d2c(5): JMP 0x00002b48
00002d31(7): MOV byte ptr [0x00228180],0x1
00002d38(5): JMP 0x00002b48
00002d3d(8): MOV dword ptr [RSP + 0x18],0x10
00002d45(5): JMP 0x00002b48
00002d4a(8): MOV dword ptr [RSP + 0x18],0x2
00002d52(5): JMP 0x00002b48
00002d57(8): MOV dword ptr [RSP + 0x18],0x11
00002d5f(5): JMP 0x00002b48
00002d64(7): MOV RDI,qword ptr [0x002280c0]
00002d6b(7): LEA RDX,[0x228148]
00002d72(7): LEA RSI,[0x228170]
00002d79(5): CALL 0x00009ab0
00002d7e(2): TEST EAX,EAX
00002d80(6): JZ 0x00002b48
00002d86(7): MOV R8,qword ptr [0x002280c0]
00002d8d(4): MOV ESI,dword ptr [RSP + 0x5c]
00002d91(7): LEA RCX,[0x2276e0]
00002d98(5): MOV EDX,0x42
00002d9d(2): MOV EDI,EAX
00002d9f(5): CALL 0x0000d7d0
00002da4(7): MOV byte ptr [0x00228182],0x1
00002dab(5): JMP 0x00002b48
00002db0(7): LEA RAX,[0x1fbcc]
00002db7(4): SUB RSP,0x8
00002dbb(7): MOV RDI,qword ptr [0x002280a8]
00002dc2(2): PUSH 0x0
00002dc4(7): MOV RCX,qword ptr [0x00228018]
00002dcb(7): LEA R9,[0x1fbaa]
00002dd2(1): PUSH RAX
00002dd3(7): LEA RAX,[0x1fbd9]
00002dda(7): LEA R8,[0x1fbba]
00002de1(7): LEA RDX,[0x1fb07]
00002de8(7): LEA RSI,[0x1fa8b]
00002def(1): PUSH RAX
00002df0(2): XOR EAX,EAX
00002df2(5): CALL 0x0000c880
00002df7(4): ADD RSP,0x20
00002dfb(2): XOR EDI,EDI
00002dfd(5): CALL 0x00002950
00002e02(7): MOV byte ptr [0x0022816d],0x1
00002e09(5): JMP 0x00002b48
00002e0e(7): MOV RAX,qword ptr [0x002280c0]
00002e15(7): MOV qword ptr [0x00228160],RAX
00002e1c(5): JMP 0x00002b48
00002e21(7): MOV RSI,qword ptr [0x002280c0]
00002e28(2): XOR EAX,EAX
00002e2a(7): MOV byte ptr [0x0022816c],0x1
00002e31(3): TEST RSI,RSI
00002e34(2): JZ 0x00002e67
00002e36(7): MOV R9,qword ptr [0x00228020]
00002e3d(7): LEA RDX,[0x2276a0]
00002e44(7): LEA RCX,[0x21420]
00002e4b(7): LEA RDI,[0x1fba0]
00002e52(6): MOV R8D,0x4
00002e58(5): CALL 0x000049d0
00002e5d(7): LEA RDX,[0x21420]
00002e64(3): MOV EAX,dword ptr [RDX + RAX*0x4]
00002e67(7): LEA RDI,[0x1fba7]
00002e6e(6): MOV dword ptr [0x00228168],EAX
00002e74(5): CALL 0x000023e0
00002e79(3): MOV RDI,RAX
00002e7c(5): CALL 0x0001ee60
00002e81(7): MOV qword ptr [0x00228150],RAX
00002e88(5): JMP 0x00002b48
00002e8d(10): MOV dword ptr [0x00228170],0x90
00002e97(11): MOV qword ptr [0x00228148],0x1
00002ea2(5): JMP 0x00002b48
00002ea7(7): MOV RSI,qword ptr [0x002280c0]
00002eae(7): MOV RDI,qword ptr [0x00228140]
00002eb5(5): MOV EDX,0x10000000
00002eba(5): CALL 0x00005780
00002ebf(5): JMP 0x00002b48
00002ec4(7): MOV byte ptr [0x00228185],0x1
00002ecb(5): JMP 0x00002b48
00002ed0(7): MOV R13,qword ptr [0x002280c0]
00002ed7(5): JMP 0x00002b48
00002edc(5): MOV byte ptr [RSP + 0x8],0x0
00002ee1(5): JMP 0x00002b48
00002ee6(5): CMP byte ptr [RSP + 0x8],0x0
00002eeb(6): JZ 0x00003f2c
00002ef1(7): CMP byte ptr [0x00228186],0x0
00002ef8(6): JZ 0x0000371e
00002efe(5): CMP byte ptr [RSP + 0x1c],0x0
00002f03(6): JNZ 0x00003f0b
00002f09(7): CMP byte ptr [0x0022816d],0x0
00002f10(2): JZ 0x00002f2a
00002f12(7): CMP byte ptr [0x00228185],0x0
00002f19(6): JNZ 0x00003a19
00002f1f(11): MOV qword ptr [0x00228148],0x1
00002f2a(7): CMP byte ptr [0x0022816c],0x0
00002f31(2): JZ 0x00002f5d
00002f33(8): CMP qword ptr [0x00228160],0x0
00002f3b(6): JZ 0x00003be8
00002f41(7): MOV R15,qword ptr [0x00228160]
00002f48(4): CMP byte ptr [R15],0x2b
00002f4c(6): JNZ 0x00003b05
00002f52(4): ADD R15,0x1
00002f56(7): MOV qword ptr [0x00228158],R15
00002f5d(3): TEST R13,R13
00002f60(7): MOVSXD RAX,dword ptr [0x002280b8]
00002f67(6): JZ 0x00003a97
00002f6d(3): CMP R12D,EAX
00002f70(6): JG 0x00003de9
00002f76(7): LEA RSI,[0x2258a]
00002f7d(3): MOV RDI,R13
00002f80(5): CALL 0x000026d0
00002f85(2): TEST EAX,EAX
00002f87(6): JNZ 0x000038bd
00002f8d(7): MOV RDI,qword ptr [0x002280b0]
00002f94(5): CALL 0x00004ac0
00002f99(7): MOV byte ptr [0x00228183],0x1
00002fa0(3): MOV R15,RAX
00002fa3(3): TEST R15,R15
00002fa6(6): JZ 0x00003ddf
00002fac(5): CALL 0x00004e20
00002fb1(3): TEST RAX,RAX
00002fb4(7): MOV qword ptr [0x00228198],RAX
00002fbb(6): JZ 0x00003ddf
00002fc1(7): CMP byte ptr [0x00228184],0x0
00002fc8(6): JNZ 0x0000312f
00002fce(7): CMP byte ptr [0x00228183],0x0
00002fd5(6): JZ 0x0000312f
00002fdb(4): MOV EAX,dword ptr [RSP + 0x10]
00002fdf(4): OR EAX,dword ptr [RSP + 0x18]
00002fe3(3): MOV R12,R14
00002fe6(4): MOV dword ptr [RSP + 0x1c],EAX
00002fea(5): MOVZX EAX,byte ptr [RSP + 0x8]
00002fef(4): MOV byte ptr [RSP + 0x18],AL
00002ff3(8): LEA RAX,[0x90 + RSP]
00002ffb(5): MOV qword ptr [RSP + 0x48],RAX
00003000(3): MOV RSI,R12
00003003(3): MOV RDI,R15
00003006(5): CALL 0x00004b00
0000300b(3): TEST RAX,RAX
0000300e(3): MOV RBX,RAX
00003011(6): JZ 0x00003529
00003017(3): TEST R13,R13
0000301a(6): JZ 0x000034b0
00003020(7): LEA RDX,[0x2258a]
00003027(5): MOV ECX,0x2
0000302c(3): MOV RSI,R13
0000302f(3): MOV RDI,RDX
00003032(2): CMPSB.REPE RDI,RSI
00003034(3): SETA AL
00003037(2): SBB AL,0x0
00003039(2): TEST AL,AL
0000303b(2): JNZ 0x00003057
0000303d(5): MOV ECX,0x2
00003042(3): MOV RSI,RBX
00003045(3): MOV RDI,RDX
00003048(2): CMPSB.REPE RDI,RSI
0000304a(3): SETA AL
0000304d(2): SBB AL,0x0
0000304f(2): TEST AL,AL
00003051(6): JZ 0x00003418
00003057(3): CMP byte ptr [RBX],0x0
0000305a(6): JZ 0x00003458
00003060(7): LEA RAX,[0x228110]
00003067(4): MOV ESI,dword ptr [RSP + 0x1c]
0000306b(2): XOR EDX,EDX
0000306d(3): MOV RDI,RAX
00003070(3): MOV qword ptr [RAX],RBX
00003073(5): CALL 0x0000cc70
00003078(5): MOV qword ptr [RSP + 0x10],RAX
0000307d(5): MOVZX EAX,byte ptr [RSP + 0x8]
00003082(5): MOV qword ptr [RSP + 0x28],R15
00003087(5): MOV qword ptr [RSP + 0x20],R13
0000308c(5): MOV qword ptr [RSP + 0x30],R12
00003091(3): MOV R15D,EAX
00003094(5): MOV RDI,qword ptr [RSP + 0x10]
00003099(5): CALL 0x0000f8e0
0000309e(3): TEST RAX,RAX
000030a1(3): MOV R14,RAX
000030a4(6): JZ 0x000036c6
000030aa(4): MOVZX EBP,word ptr [RAX + 0x70]
000030ae(4): MOV R13,qword ptr [RAX + 0x38]
000030b2(3): CMP EBP,0x4
000030b5(6): JZ 0x00003688
000030bb(3): CMP EBP,0x6
000030be(6): MOVZX R12D,byte ptr [RSP + 0x8]
000030c4(6): JZ 0x000031b0
000030ca(7): MOV RDI,qword ptr [0x00228140]
000030d1(3): MOV RSI,R13
000030d4(5): CALL 0x000055e0
000030d9(2): TEST AL,AL
000030db(2): JNZ 0x0000311b
000030dd(3): CMP EBP,0xb
000030e0(6): JZ 0x00003bb8
000030e6(3): CMP EBP,0xa
000030e9(4): SETZ R8B
000030ed(3): CMP EBP,0xd
000030f0(3): SETZ AL
000030f3(3): OR R8B,AL
000030f6(3): MOV R12D,R8D
000030f9(6): JNZ 0x0000399a
000030ff(5): MOV RAX,qword ptr [RSP + 0x10]
00003104(4): TEST byte ptr [RAX + 0x48],0x40
00003108(2): JZ 0x0000313c
0000310a(5): CMP qword ptr [R14 + 0x58],0x0
0000310f(2): JLE 0x0000313c
00003111(4): MOV RCX,qword ptr [R14 + 0x78]
00003115(4): CMP qword ptr [RAX + 0x18],RCX
00003119(2): JZ 0x0000313c
0000311b(3): SUB EBP,0x1
0000311e(6): JZ 0x00003a3f
00003124(6): MOVZX R12D,byte ptr [RSP + 0x8]
0000312a(5): JMP 0x00003400
0000312f(8): OR dword ptr [RSP + 0x10],0x100
00003137(5): JMP 0x00002fdb
0000313c(7): CMP byte ptr [0x00228184],0x0
00003143(2): JNZ 0x0000318c
00003145(7): CMP byte ptr [0x00228183],0x0
0000314c(2): JNZ 0x0000316b
0000314e(7): MOV EAX,dword ptr [0x90 + R14]
00003155(5): AND EAX,0xf000
0000315a(5): CMP EAX,0x4000
0000315f(2): JZ 0x0000318c
00003161(8): CMP qword ptr [0x88 + R14],0x1
00003169(2): JBE 0x0000318c
0000316b(7): MOV RDX,qword ptr [0x80 + R14]
00003172(4): MOV RSI,qword ptr [R14 + 0x78]
00003176(7): MOV RDI,qword ptr [0x00228198]
0000317d(5): CALL 0x00004ec0
00003182(2): TEST EAX,EAX
00003184(6): JS 0x00003ddf
0000318a(2): JZ 0x0000311b
0000318c(3): CMP EBP,0x2
0000318f(6): JZ 0x00003c8d
00003195(3): CMP EBP,0x7
00003198(6): JZ 0x00003c62
0000319e(3): CMP EBP,0x1
000031a1(2): JZ 0x00003124
000031a3(6): MOVZX R12D,byte ptr [RSP + 0x8]
000031a9(7): NOP dword ptr [RAX]
000031b0(6): MOV EAX,dword ptr [0x00228168]
000031b6(2): TEST EAX,EAX
000031b8(6): JNZ 0x0000350d
000031be(7): MOV RCX,qword ptr [0xd0 + R14]
000031c5(7): MOV R9,qword ptr [0xd8 + R14]
000031cc(7): CMP byte ptr [0x00228185],0x0
000031d3(6): JZ 0x000034fd
000031d9(8): CMP qword ptr [0xa8 + R14],0x0
000031e1(5): MOV EBX,0x0
000031e6(8): CMOVNS RBX,qword ptr [0xa8 + R14]
000031ee(7): MOV RDX,qword ptr [0x00228108]
000031f5(4): MOV R14,qword ptr [R14 + 0x58]
000031f9(5): MOV qword ptr [RSP + 0x60],RBX
000031fe(9): MOV qword ptr [RSP + 0x68],0x1
00003207(5): MOV qword ptr [RSP + 0x70],RCX
0000320c(5): MOV qword ptr [RSP + 0x78],R9
00003211(3): TEST RDX,RDX
00003214(6): JZ 0x00003653
0000321a(7): MOV RAX,qword ptr [0x00228188]
00003221(3): CMP R14,RAX
00003224(6): JZ 0x00003300
0000322a(6): JBE 0x000037b3
00003230(3): CMP R14,RDX
00003233(2): JC 0x0000329a
00003235(5): MOV EDX,0x80
0000323a(2): XOR ESI,ESI
0000323c(7): MOV RDI,qword ptr [0x00228100]
00003243(3): MOV RAX,RDX
00003246(3): MUL R14
00003249(6): JO 0x00003eb9
0000324f(3): TEST RAX,RAX
00003252(5): MOV qword ptr [RSP + 0x40],R9
00003257(5): MOV qword ptr [RSP + 0x38],RCX
0000325c(6): JS 0x00003ddf
00003262(3): TEST RSI,RSI
00003265(6): JNZ 0x00003ddf
0000326b(3): MOV RSI,R14
0000326e(4): SHL RSI,0x7
00003272(5): CALL 0x0000ca40
00003277(7): MOV qword ptr [0x00228100],RAX
0000327e(4): LEA RAX,[R14 + R14*0x1]
00003282(5): MOV R9,qword ptr [RSP + 0x40]
00003287(5): MOV RCX,qword ptr [RSP + 0x38]
0000328c(7): MOV qword ptr [0x00228108],RAX
00003293(7): MOV RAX,qword ptr [0x00228188]
0000329a(4): LEA RDX,[RAX + 0x1]
0000329e(3): CMP R14,RDX
000032a1(2): JC 0x00003300
000032a3(4): SHL RAX,0x6
000032a7(7): ADD RAX,qword ptr [0x00228100]
000032ae(2): NOP
000032b0(10): MOV RSI,-0x8000000000000000
000032ba(4): ADD RDX,0x1
000032be(8): MOV qword ptr [RAX + 0x40],0x0
000032c6(8): MOV qword ptr [RAX + 0x48],0x0
000032ce(4): MOV qword ptr [RAX + 0x50],RSI
000032d2(4): ADD RAX,0x40
000032d6(8): MOV qword ptr [RAX + 0x18],-0x1
000032de(8): MOV qword ptr [RAX + 0x20],0x0
000032e6(8): MOV qword ptr [RAX + 0x28],0x0
000032ee(4): MOV qword ptr [RAX + 0x30],RSI
000032f2(8): MOV qword ptr [RAX + 0x38],-0x1
000032fa(3): CMP R14,RDX
000032fd(2): JNC 0x000032b0
000032ff(1): NOP
00003300(7): CMP byte ptr [0x00228180],0x0
00003307(7): MOV qword ptr [0x00228188],R14
0000330e(2): JZ 0x0000331a
00003310(2): MOV EAX,EBP
00003312(3): AND EAX,0xfffffffd
00003315(3): CMP EAX,0x4
00003318(2): JZ 0x00003360
0000331a(3): MOV RAX,R14
0000331d(2): XOR ESI,ESI
0000331f(3): MOV RDX,RBX
00003322(4): SHL RAX,0x6
00003326(7): ADD RAX,qword ptr [0x00228100]
0000332d(3): ADD RDX,qword ptr [RAX]
00003330(4): SETC SIL
00003334(3): TEST RSI,RSI
00003337(7): MOV RSI,-0x1
0000333e(4): CMOVNZ RDX,RSI
00003342(5): ADD qword ptr [RAX + 0x8],0x1
00003347(4): CMP RCX,qword ptr [RAX + 0x10]
0000334b(3): MOV qword ptr [RAX],RDX
0000334e(6): JG 0x00003646
00003354(2): JL 0x00003360
00003356(4): CMP dword ptr [RAX + 0x18],R9D
0000335a(6): JS 0x00003646
00003360(2): XOR EAX,EAX
00003362(7): ADD RBX,qword ptr [0x00228120]
00003369(3): SETC AL
0000336c(3): TEST RAX,RAX
0000336f(7): MOV RAX,-0x1
00003376(4): CMOVNZ RBX,RAX
0000337a(8): ADD qword ptr [0x00228128],0x1
00003382(7): CMP RCX,qword ptr [0x00228130]
00003389(7): MOV qword ptr [0x00228120],RBX
00003390(2): JG 0x00003408
00003392(2): JL 0x000033a0
00003394(7): CMP dword ptr [0x00228138],R9D
0000339b(2): JS 0x00003408
0000339d(3): NOP dword ptr [RAX]
000033a0(3): AND EBP,0xfffffffd
000033a3(3): CMP EBP,0x4
000033a6(6): JZ 0x000034eb
000033ac(7): CMP byte ptr [0x00228186],0x0
000033b3(6): JNZ 0x000034eb
000033b9(3): TEST R14,R14
000033bc(2): JNZ 0x00003400
000033be(7): MOV RDX,qword ptr [0x00228178]
000033c5(7): CMP byte ptr [0x0022816d],0x0
000033cc(5): MOV RAX,qword ptr [RSP + 0x68]
000033d1(6): CMOVZ RAX,qword ptr [RSP + 0x60]
000033d7(3): TEST RDX,RDX
000033da(6): JS 0x00003710
000033e0(3): CMP RAX,RDX
000033e3(3): SETNC AL
000033e6(2): TEST AL,AL
000033e8(2): JZ 0x00003400
000033ea(5): LEA RDI,[RSP + 0x60]
000033ef(3): MOV RSI,R13
000033f2(5): CALL 0x000040e0
000033f7(9): NOP word ptr [RAX + RAX*0x1]
00003400(3): AND R15D,R12D
00003403(5): JMP 0x00003094
00003408(7): MOV qword ptr [0x00228130],RCX
0000340f(7): MOV qword ptr [0x00228138],R9
00003416(2): JMP 0x000033a0
00003418(3): MOV RSI,RBX
0000341b(5): MOV EDI,0x4
00003420(5): CALL 0x0000c090
00003425(7): LEA RSI,[0x20ec0]
0000342c(2): XOR EDI,EDI
0000342e(3): MOV RBP,RAX
00003431(5): MOV EDX,0x5
00003436(5): CALL 0x00002510
0000343b(2): XOR ESI,ESI
0000343d(3): MOV RDX,RAX
00003440(2): XOR EDI,EDI
00003442(2): XOR EAX,EAX
00003444(3): MOV RCX,RBP
00003447(5): CALL 0x000028a0
0000344c(3): CMP byte ptr [RBX],0x0
0000344f(6): JNZ 0x000034e1
00003455(3): NOP dword ptr [RAX]
00003458(3): MOV RDI,R15
0000345b(5): CALL 0x00004b90
00003460(7): LEA RSI,[0x1fd08]
00003467(5): MOV EDX,0x5
0000346c(2): XOR EDI,EDI
0000346e(3): MOV RBX,RAX
00003471(5): CALL 0x00002510
00003476(3): MOV RDX,R13
00003479(5): MOV ESI,0x3
0000347e(2): XOR EDI,EDI
00003480(3): MOV RBP,RAX
00003483(5): CALL 0x0000c190
00003488(7): LEA RDX,[0x1fd26]
0000348f(3): MOV RCX,RAX
00003492(3): MOV R9,RBP
00003495(3): MOV R8,RBX
00003498(2): XOR ESI,ESI
0000349a(2): XOR EDI,EDI
0000349c(2): XOR EAX,EAX
0000349e(5): CALL 0x000028a0
000034a3(5): MOV byte ptr [RSP + 0x18],0x0
000034a8(5): JMP 0x00003000
000034b0(3): CMP byte ptr [RAX],0x0
000034b3(6): JNZ 0x00003060
000034b9(7): LEA RSI,[0x1fd08]
000034c0(5): MOV EDX,0x5
000034c5(2): XOR EDI,EDI
000034c7(5): CALL 0x00002510
000034cc(7): LEA RDX,[0x21490]
000034d3(3): MOV RCX,RAX
000034d6(2): XOR ESI,ESI
000034d8(2): XOR EDI,EDI
000034da(2): XOR EAX,EAX
000034dc(5): CALL 0x000028a0
000034e1(5): MOV byte ptr [RSP + 0x18],0x0
000034e6(5): JMP 0x00003000
000034eb(7): CMP R14,qword ptr [0x00228010]
000034f2(6): JBE 0x000033be
000034f8(5): JMP 0x000033b9
000034fd(7): MOV RBX,qword ptr [0xb8 + R14]
00003504(4): SHL RBX,0x9
00003508(5): JMP 0x000031ee
0000350d(3): CMP EAX,0x2
00003510(6): JZ 0x00003a84
00003516(7): MOV RCX,qword ptr [0xe0 + R14]
0000351d(7): MOV R9,qword ptr [0xe8 + R14]
00003524(5): JMP 0x000031cc
00003529(4): MOV EAX,dword ptr [RSP + 0x5c]
0000352d(3): CMP EAX,0x3
00003530(6): JZ 0x00003ddf
00003536(3): CMP EAX,0x4
00003539(2): JZ 0x0000355f
0000353b(3): CMP EAX,0x2
0000353e(2): JZ 0x000035a2
00003540(7): LEA RCX,[0x213fd]
00003547(7): LEA RSI,[0x1fc66]
0000354e(7): LEA RDI,[0x20e98]
00003555(5): MOV EDX,0x438
0000355a(5): CALL 0x00002600
0000355f(3): MOV RDX,R13
00003562(5): MOV ESI,0x3
00003567(2): XOR EDI,EDI
00003569(5): CALL 0x0000c190
0000356e(7): LEA RSI,[0x1fc57]
00003575(5): MOV EDX,0x5
0000357a(2): XOR EDI,EDI
0000357c(3): MOV RBP,RAX
0000357f(5): CALL 0x00002510
00003584(3): MOV RBX,RAX
00003587(5): CALL 0x00002410
0000358c(2): MOV ESI,dword ptr [RAX]
0000358e(3): MOV RCX,RBP
00003591(3): MOV RDX,RBX
00003594(2): XOR EDI,EDI
00003596(2): XOR EAX,EAX
00003598(5): CALL 0x000028a0
0000359d(5): MOV byte ptr [RSP + 0x18],0x0
000035a2(3): MOV RDI,R15
000035a5(5): CALL 0x00004bb0
000035aa(7): MOV RDI,qword ptr [0x00228198]
000035b1(5): CALL 0x00004e90
000035b6(7): MOV RDI,qword ptr [0x00228190]
000035bd(3): TEST RDI,RDI
000035c0(2): JZ 0x000035c7
000035c2(5): CALL 0x00004e90
000035c7(3): TEST R13,R13
000035ca(2): JZ 0x000035e7
000035cc(7): MOV RDI,qword ptr [0x002280b0]
000035d3(3): TEST byte ptr [RDI],0x20
000035d6(6): JZ 0x0000391b
000035dc(5): CMP byte ptr [RSP + 0x18],0x0
000035e1(6): JNZ 0x00003e82
000035e7(7): CMP byte ptr [0x00228181],0x0
000035ee(2): JZ 0x00003612
000035f0(7): LEA RSI,[0x1fd02]
000035f7(2): XOR EDI,EDI
000035f9(5): MOV EDX,0x5
000035fe(5): CALL 0x00002510
00003603(7): LEA RDI,[0x228120]
0000360a(3): MOV RSI,RAX
0000360d(5): CALL 0x000040e0
00003612(5): MOVZX EAX,byte ptr [RSP + 0x18]
00003617(3): XOR EAX,0x1
0000361a(8): MOV RCX,qword ptr [0x128 + RSP]
00003622(9): XOR RCX,qword ptr FS:[0x28]
0000362b(3): MOVZX EAX,AL
0000362e(6): JNZ 0x00003de4
00003634(7): ADD RSP,0x138
0000363b(1): POP RBX
0000363c(1): POP RBP
0000363d(2): POP R12
0000363f(2): POP R13
00003641(2): POP R14
00003643(2): POP R15
00003645(1): RET
00003646(4): MOV qword ptr [RAX + 0x10],RCX
0000364a(4): MOV qword ptr [RAX + 0x18],R9
0000364e(5): JMP 0x00003360
00003653(4): LEA RDI,[R14 + 0xa]
00003657(5): MOV ESI,0x40
0000365c(5): MOV qword ptr [RSP + 0x40],R9
00003661(5): MOV qword ptr [RSP + 0x38],RCX
00003666(7): MOV qword ptr [0x00228108],RDI
0000366d(5): CALL 0x0000cbb0
00003672(5): MOV RCX,qword ptr [RSP + 0x38]
00003677(7): MOV qword ptr [0x00228100],RAX
0000367e(5): MOV R9,qword ptr [RSP + 0x40]
00003683(5): JMP 0x00003300
00003688(3): MOV RSI,R13
0000368b(5): MOV EDI,0x4
00003690(3): XOR R12D,R12D
00003693(5): CALL 0x0000c090
00003698(7): LEA RSI,[0x1fc95]
0000369f(5): MOV EDX,0x5
000036a4(2): XOR EDI,EDI
000036a6(3): MOV RBX,RAX
000036a9(5): CALL 0x00002510
000036ae(4): MOV ESI,dword ptr [R14 + 0x40]
000036b2(3): MOV RDX,RAX
000036b5(3): MOV RCX,RBX
000036b8(2): XOR EDI,EDI
000036ba(2): XOR EAX,EAX
000036bc(5): CALL 0x000028a0
000036c1(5): JMP 0x000031b0
000036c6(5): CALL 0x00002410
000036cb(3): CMP dword ptr [RAX],0x0
000036ce(3): MOV R14D,R15D
000036d1(5): MOV R13,qword ptr [RSP + 0x20]
000036d6(5): MOV R15,qword ptr [RSP + 0x28]
000036db(5): MOV R12,qword ptr [RSP + 0x30]
000036e0(3): MOV RBX,RAX
000036e3(6): JNZ 0x00003956
000036e9(5): MOV RDI,qword ptr [RSP + 0x10]
000036ee(11): MOV qword ptr [0x00228188],0x0
000036f9(5): CALL 0x0000f750
000036fe(2): TEST EAX,EAX
00003700(6): JNZ 0x0000392d
00003706(5): AND byte ptr [RSP + 0x18],R14B
0000370b(5): JMP 0x00003000
00003710(3): NEG RDX
00003713(3): CMP RDX,RAX
00003716(3): SETNC AL
00003719(5): JMP 0x000033e6
0000371e(5): CMP byte ptr [RSP + 0x20],0x0
00003723(6): JZ 0x00003e72
00003729(5): CMP byte ptr [RSP + 0x1c],0x0
0000372e(6): JZ 0x00002f09
00003734(7): MOV RBX,qword ptr [0x00228010]
0000373b(3): TEST RBX,RBX
0000373e(6): JZ 0x000039d8
00003744(7): LEA RSI,[0x20de0]
0000374b(5): MOV EDX,0x5
00003750(2): XOR EDI,EDI
00003752(5): CALL 0x00002510
00003757(2): XOR EDI,EDI
00003759(3): MOV RDX,RAX
0000375c(3): MOV RCX,RBX
0000375f(2): XOR ESI,ESI
00003761(2): XOR EAX,EAX
00003763(5): CALL 0x000028a0
00003768(5): MOV EDI,0x1
0000376d(5): CALL 0x00004240
00003772(7): MOV RDI,qword ptr [0x002280c0]
00003779(5): CALL 0x0000c360
0000377e(7): LEA RSI,[0x1fb7b]
00003785(5): MOV EDX,0x5
0000378a(2): XOR EDI,EDI
0000378c(5): MOV qword ptr [RSP + 0x8],RAX
00003791(5): CALL 0x00002510
00003796(5): MOV RCX,qword ptr [RSP + 0x8]
0000379b(3): MOV RDX,RAX
0000379e(2): XOR ESI,ESI
000037a0(2): XOR EDI,EDI
000037a2(2): XOR EAX,EAX
000037a4(5): CALL 0x000028a0
000037a9(5): MOV byte ptr [RSP + 0x8],0x0
000037ae(5): JMP 0x00002b48
000037b3(4): LEA RDX,[RAX + -0x1]
000037b7(3): CMP R14,RDX
000037ba(6): JNZ 0x00003eec
000037c0(7): MOV RDX,qword ptr [0x00228100]
000037c7(4): SHL RAX,0x6
000037cb(2): XOR EDI,EDI
000037cd(3): MOV RSI,RBX
000037d0(3): ADD RAX,RDX
000037d3(3): ADD RSI,qword ptr [RAX]
000037d6(4): SETC DIL
000037da(3): TEST RDI,RDI
000037dd(7): MOV RDI,-0x1
000037e4(4): CMOVNZ RSI,RDI
000037e8(4): MOV RDI,qword ptr [RAX + 0x8]
000037ec(5): MOV qword ptr [RSP + 0x60],RSI
000037f1(4): ADD RDI,0x1
000037f5(5): MOV qword ptr [RSP + 0x68],RDI
000037fa(4): CMP RCX,qword ptr [RAX + 0x10]
000037fe(6): JL 0x00003ae8
00003804(2): JG 0x00003810
00003806(4): CMP R9D,dword ptr [RAX + 0x18]
0000380a(6): JS 0x00003ae8
00003810(7): CMP byte ptr [0x00228180],0x0
00003817(6): JZ 0x00003b64
0000381d(3): MOV RSI,R14
00003820(2): XOR EDI,EDI
00003822(4): SHL RSI,0x6
00003826(3): ADD RDX,RSI
00003829(3): MOV RSI,qword ptr [RAX]
0000382c(4): ADD RSI,qword ptr [RDX + 0x20]
00003830(6): JC 0x00003ec3
00003836(3): TEST RDI,RDI
00003839(7): MOV RDI,-0x1
00003840(4): MOV R10,qword ptr [RDX + 0x30]
00003844(4): CMOVNZ RSI,RDI
00003848(4): MOV RDI,qword ptr [RAX + 0x8]
0000384c(4): ADD RDI,qword ptr [RDX + 0x28]
00003850(4): MOV qword ptr [RDX + 0x20],RSI
00003854(4): MOV qword ptr [RDX + 0x28],RDI
00003858(4): CMP R10,qword ptr [RAX + 0x10]
0000385c(6): JL 0x00003ad5
00003862(2): JG 0x00003872
00003864(4): MOV R11D,dword ptr [RAX + 0x18]
00003868(4): CMP dword ptr [RDX + 0x38],R11D
0000386c(6): JS 0x00003ad5
00003872(3): XOR R11D,R11D
00003875(4): ADD RSI,qword ptr [RAX + 0x20]
00003879(4): SETC R11B
0000387d(3): TEST R11,R11
00003880(7): MOV R11,-0x1
00003887(4): CMOVNZ RSI,R11
0000388b(4): ADD RDI,qword ptr [RAX + 0x28]
0000388f(4): MOV qword ptr [RDX + 0x20],RSI
00003893(4): MOV qword ptr [RDX + 0x28],RDI
00003897(4): CMP R10,qword ptr [RAX + 0x30]
0000389b(2): JL 0x000038af
0000389d(6): JG 0x00003300
000038a3(3): MOV ESI,dword ptr [RAX + 0x38]
000038a6(3): CMP dword ptr [RDX + 0x38],ESI
000038a9(6): JNS 0x00003300
000038af(5): MOVDQU XMM0,xmmword ptr [RAX + 0x30]
000038b4(4): MOVUPS xmmword ptr [RDX + 0x30],XMM0
000038b8(5): JMP 0x00003300
000038bd(7): MOV RDX,qword ptr [0x002280b0]
000038c4(7): LEA RSI,[0x22817]
000038cb(3): MOV RDI,R13
000038ce(5): CALL 0x00007b40
000038d3(3): TEST RAX,RAX
000038d6(6): JNZ 0x00002f8d
000038dc(3): MOV RSI,R13
000038df(5): MOV EDI,0x4
000038e4(5): CALL 0x0000c090
000038e9(7): LEA RSI,[0x1fc3c]
000038f0(5): MOV EDX,0x5
000038f5(2): XOR EDI,EDI
000038f7(3): MOV RBP,RAX
000038fa(5): CALL 0x00002510
000038ff(3): MOV RBX,RAX
00003902(5): CALL 0x00002410
00003907(2): MOV ESI,dword ptr [RAX]
00003909(3): MOV RCX,RBP
0000390c(3): MOV RDX,RBX
0000390f(5): MOV EDI,0x1
00003914(2): XOR EAX,EAX
00003916(5): CALL 0x000028a0
0000391b(5): CALL 0x0000dca0
00003920(2): TEST EAX,EAX
00003922(6): JNZ 0x000035dc
00003928(5): JMP 0x000035e7
0000392d(7): LEA RSI,[0x1fce0]
00003934(5): MOV EDX,0x5
00003939(2): XOR EDI,EDI
0000393b(3): XOR R14D,R14D
0000393e(5): CALL 0x00002510
00003943(2): MOV ESI,dword ptr [RBX]
00003945(3): MOV RDX,RAX
00003948(2): XOR EDI,EDI
0000394a(2): XOR EAX,EAX
0000394c(5): CALL 0x000028a0
00003951(5): JMP 0x00003706
00003956(5): MOV RAX,qword ptr [RSP + 0x10]
0000395b(5): MOV ESI,0x3
00003960(2): XOR EDI,EDI
00003962(3): XOR R14D,R14D
00003965(4): MOV RDX,qword ptr [RAX + 0x20]
00003969(5): CALL 0x0000c190
0000396e(7): LEA RSI,[0x1fc81]
00003975(5): MOV EDX,0x5
0000397a(2): XOR EDI,EDI
0000397c(3): MOV RBP,RAX
0000397f(5): CALL 0x00002510
00003984(2): MOV ESI,dword ptr [RBX]
00003986(3): MOV RDX,RAX
00003989(3): MOV RCX,RBP
0000398c(2): XOR EDI,EDI
0000398e(2): XOR EAX,EAX
00003990(5): CALL 0x000028a0
00003995(5): JMP 0x000036e9
0000399a(3): MOV RSI,R13
0000399d(5): MOV EDI,0x4
000039a2(3): XOR R12D,R12D
000039a5(5): CALL 0x0000c090
000039aa(7): LEA RSI,[0x1fcb7]
000039b1(5): MOV EDX,0x5
000039b6(2): XOR EDI,EDI
000039b8(3): MOV RBX,RAX
000039bb(5): CALL 0x00002510
000039c0(4): MOV ESI,dword ptr [R14 + 0x40]
000039c4(3): MOV RDX,RAX
000039c7(3): MOV RCX,RBX
000039ca(2): XOR EDI,EDI
000039cc(2): XOR EAX,EAX
000039ce(5): CALL 0x000028a0
000039d3(5): JMP 0x00003400
000039d8(7): LEA RSI,[0x20da8]
000039df(2): XOR EDI,EDI
000039e1(5): MOV EDX,0x5
000039e6(5): CALL 0x00002510
000039eb(2): XOR ESI,ESI
000039ed(3): MOV RDX,RAX
000039f0(2): XOR EDI,EDI
000039f2(2): XOR EAX,EAX
000039f4(5): CALL 0x000028a0
000039f9(7): MOV RBX,qword ptr [0x00228010]
00003a00(3): TEST RBX,RBX
00003a03(6): JNZ 0x00003744
00003a09(11): MOV qword ptr [0x00228010],0x0
00003a14(5): JMP 0x00002f09
00003a19(7): LEA RSI,[0x20e18]
00003a20(2): XOR EDI,EDI
00003a22(5): MOV EDX,0x5
00003a27(5): CALL 0x00002510
00003a2c(2): XOR ESI,ESI
00003a2e(3): MOV RDX,RAX
00003a31(2): XOR EDI,EDI
00003a33(2): XOR EAX,EAX
00003a35(5): CALL 0x000028a0
00003a3a(5): JMP 0x00002f1f
00003a3f(5): MOV RBX,qword ptr [RSP + 0x10]
00003a44(5): MOV EDX,0x4
00003a49(3): MOV RSI,R14
00003a4c(3): MOV RDI,RBX
00003a4f(5): CALL 0x00010060
00003a54(3): MOV RDI,RBX
00003a57(5): CALL 0x0000f8e0
00003a5c(3): CMP R14,RAX
00003a5f(6): JZ 0x00003124
00003a65(7): LEA RCX,[0x213f0]
00003a6c(7): LEA RSI,[0x1fc66]
00003a73(7): LEA RDI,[0x1fcae]
00003a7a(5): MOV EDX,0x22f
00003a7f(5): CALL 0x00002600
00003a84(7): MOV RCX,qword ptr [0xc0 + R14]
00003a8b(7): MOV R9,qword ptr [0xc8 + R14]
00003a92(5): JMP 0x000031cc
00003a97(3): CMP R12D,EAX
00003a9a(8): LEA RDI,[0x80 + RSP]
00003aa2(2): JLE 0x00003aa9
00003aa4(5): LEA RDI,[RBP + RAX*0x8]
00003aa9(5): CALL 0x00004a90
00003aae(3): MOV R15,RAX
00003ab1(6): MOV EAX,dword ptr [0x002280b8]
00003ab7(3): ADD EAX,0x1
00003aba(3): CMP EAX,R12D
00003abd(3): SETL AL
00003ac0(5): CMP dword ptr [RSP + 0x18],0x2
00003ac5(3): SETZ DL
00003ac8(2): OR EAX,EDX
00003aca(6): MOV byte ptr [0x00228183],AL
00003ad0(5): JMP 0x00002fa3
00003ad5(5): MOVDQU XMM0,xmmword ptr [RAX + 0x10]
00003ada(5): MOVQ R10,XMM0
00003adf(4): MOVUPS xmmword ptr [RDX + 0x30],XMM0
00003ae3(5): JMP 0x00003872
00003ae8(5): MOVDQU XMM0,xmmword ptr [RAX + 0x10]
00003aed(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
00003af2(5): JMP 0x00003810
00003af7(7): LEA R15,[0x1fb34]
00003afe(7): MOV qword ptr [0x00228160],R15
00003b05(7): MOV R9,qword ptr [0x00228020]
00003b0c(7): LEA RDX,[0x227680]
00003b13(7): LEA RCX,[0x21410]
00003b1a(7): LEA RDI,[0x1fbf0]
00003b21(6): MOV R8D,0x4
00003b27(3): MOV RSI,R15
00003b2a(5): CALL 0x000049d0
00003b2f(7): LEA RDX,[0x21410]
00003b36(3): MOV EAX,dword ptr [RDX + RAX*0x4]
00003b39(3): CMP EAX,0x1
00003b3c(6): JZ 0x00003d38
00003b42(6): JC 0x00003d25
00003b48(3): CMP EAX,0x2
00003b4b(6): JNZ 0x00002f5d
00003b51(7): LEA RAX,[0x1fc22]
00003b58(7): MOV qword ptr [0x00228158],RAX
00003b5f(5): JMP 0x00002f5d
00003b64(3): XOR R10D,R10D
00003b67(4): ADD RSI,qword ptr [RAX + 0x20]
00003b6b(7): MOV R11,-0x1
00003b72(4): SETC R10B
00003b76(3): TEST R10,R10
00003b79(4): CMOVNZ RSI,R11
00003b7d(4): ADD RDI,qword ptr [RAX + 0x28]
00003b81(5): MOV qword ptr [RSP + 0x60],RSI
00003b86(5): MOV qword ptr [RSP + 0x68],RDI
00003b8b(4): MOV RSI,qword ptr [RAX + 0x30]
00003b8f(5): CMP qword ptr [RSP + 0x70],RSI
00003b94(2): JL 0x00003ba9
00003b96(6): JG 0x0000381d
00003b9c(3): MOV ESI,dword ptr [RAX + 0x38]
00003b9f(4): CMP dword ptr [RSP + 0x78],ESI
00003ba3(6): JNS 0x0000381d
00003ba9(5): MOVDQU XMM0,xmmword ptr [RAX + 0x30]
00003bae(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
00003bb3(5): JMP 0x0000381d
00003bb8(5): MOV RBX,qword ptr [RSP + 0x10]
00003bbd(5): MOV EDX,0x1
00003bc2(3): MOV RSI,R14
00003bc5(3): MOV RDI,RBX
00003bc8(5): CALL 0x00010060
00003bcd(3): MOV RDI,RBX
00003bd0(5): CALL 0x0000f8e0
00003bd5(3): CMP R14,RAX
00003bd8(6): JNZ 0x00003ecd
00003bde(5): MOVZX EBP,word ptr [R14 + 0x70]
00003be3(5): JMP 0x000030e6
00003be8(7): LEA RDI,[0x1fbe5]
00003bef(5): CALL 0x000023e0
00003bf4(3): TEST RAX,RAX
00003bf7(3): MOV R15,RAX
00003bfa(7): MOV qword ptr [0x00228160],RAX
00003c01(6): JZ 0x00003af7
00003c07(7): LEA RSI,[0x1fb4e]
00003c0e(3): MOV RDI,RAX
00003c11(5): CALL 0x000026d0
00003c16(2): TEST EAX,EAX
00003c18(6): JZ 0x00003af7
00003c1e(4): CMP byte ptr [R15],0x2b
00003c22(7): LEA RBX,[0x21402]
00003c29(2): JNZ 0x00003c3b
00003c2b(5): JMP 0x00003d4b
00003c30(4): ADD R15,0x6
00003c34(7): MOV qword ptr [0x00228160],R15
00003c3b(7): MOV R15,qword ptr [0x00228160]
00003c42(5): MOV EDX,0x6
00003c47(3): MOV RSI,RBX
00003c4a(3): MOV RDI,R15
00003c4d(5): CALL 0x00002420
00003c52(2): TEST EAX,EAX
00003c54(2): JZ 0x00003c30
00003c56(5): JMP 0x00002f48
00003c5b(2): XOR EDI,EDI
00003c5d(5): CALL 0x00004240
00003c62(3): MOV RDX,R13
00003c65(2): XOR EDI,EDI
00003c67(5): MOV ESI,0x3
00003c6c(5): CALL 0x0000c190
00003c71(4): MOV ESI,dword ptr [R14 + 0x40]
00003c75(7): LEA RDX,[0x21490]
00003c7c(3): MOV RCX,RAX
00003c7f(2): XOR EDI,EDI
00003c81(2): XOR EAX,EAX
00003c83(5): CALL 0x000028a0
00003c88(5): JMP 0x000031b0
00003c8d(5): MOV RDI,qword ptr [RSP + 0x10]
00003c92(3): MOV RSI,R14
00003c95(5): CALL 0x0000ccc0
00003c9a(2): TEST AL,AL
00003c9c(6): JZ 0x00003124
00003ca2(8): CMP qword ptr [0x00228190],0x0
00003caa(3): MOV RBP,qword ptr [R14]
00003cad(2): JNZ 0x00003cd7
00003caf(5): JMP 0x00003d69
00003cb4(7): MOV RDX,qword ptr [0x80 + R14]
00003cbb(4): MOV RSI,qword ptr [R14 + 0x78]
00003cbf(7): MOV RDI,qword ptr [0x00228190]
00003cc6(5): CALL 0x00004f20
00003ccb(2): TEST EAX,EAX
00003ccd(6): JG 0x00003124
00003cd3(4): MOV R14,qword ptr [R14 + 0x8]
00003cd7(3): TEST R14,R14
00003cda(3): SETNZ AL
00003cdd(3): CMP RBP,R14
00003ce0(3): SETNZ DL
00003ce3(2): AND AL,DL
00003ce5(2): JNZ 0x00003cb4
00003ce7(3): MOV RDX,R13
00003cea(2): XOR EDI,EDI
00003cec(5): MOV ESI,0x3
00003cf1(3): MOV R12D,EAX
00003cf4(5): CALL 0x0000c190
00003cf9(7): LEA RSI,[0x20f00]
00003d00(3): MOV RBX,RAX
00003d03(2): XOR EDI,EDI
00003d05(5): MOV EDX,0x5
00003d0a(5): CALL 0x00002510
00003d0f(3): MOV RCX,RBX
00003d12(3): MOV RDX,RAX
00003d15(2): XOR ESI,ESI
00003d17(2): XOR EDI,EDI
00003d19(2): XOR EAX,EAX
00003d1b(5): CALL 0x000028a0
00003d20(5): JMP 0x00003400
00003d25(7): LEA RAX,[0x1fbfb]
00003d2c(7): MOV qword ptr [0x00228158],RAX
00003d33(5): JMP 0x00002f5d
00003d38(7): LEA RAX,[0x1fc13]
00003d3f(7): MOV qword ptr [0x00228158],RAX
00003d46(5): JMP 0x00002f5d
00003d4b(5): MOV ESI,0xa
00003d50(3): MOV RDI,R15
00003d53(5): CALL 0x000025a0
00003d58(3): TEST RAX,RAX
00003d5b(6): JZ 0x00002f52
00003d61(3): MOV byte ptr [RAX],0x0
00003d64(5): JMP 0x00002f48
00003d69(5): CALL 0x00004e20
00003d6e(3): TEST RAX,RAX
00003d71(7): MOV qword ptr [0x00228190],RAX
00003d78(2): JZ 0x00003ddf
00003d7a(2): XOR EDI,EDI
00003d7c(5): CALL 0x00010340
00003d81(3): MOV R12,RAX
00003d84(2): JMP 0x00003d96
00003d86(5): MOV RBX,qword ptr [R12 + 0x30]
00003d8b(3): MOV RDI,R12
00003d8e(5): CALL 0x00010300
00003d93(3): MOV R12,RBX
00003d96(3): TEST R12,R12
00003d99(6): JZ 0x00003cd7
00003d9f(6): TEST byte ptr [R12 + 0x28],0x3
00003da5(2): JNZ 0x00003d86
00003da7(5): MOV RSI,qword ptr [R12 + 0x8]
00003dac(5): MOV RDX,qword ptr [RSP + 0x48]
00003db1(5): MOV EDI,0x1
00003db6(5): CALL 0x00002740
00003dbb(2): TEST EAX,EAX
00003dbd(2): JNZ 0x00003d86
00003dbf(8): MOV RDX,qword ptr [0x98 + RSP]
00003dc7(8): MOV RSI,qword ptr [0x90 + RSP]
00003dcf(7): MOV RDI,qword ptr [0x00228190]
00003dd6(5): CALL 0x00004ec0
00003ddb(2): TEST EAX,EAX
00003ddd(2): JNS 0x00003d86
00003ddf(5): CALL 0x0000cc30
00003de4(5): CALL 0x00002560
00003de9(5): MOV RDI,qword ptr [RBP + RAX*0x8]
00003dee(5): CALL 0x0000c360
00003df3(7): LEA RSI,[0x1fc2b]
00003dfa(3): MOV RBX,RAX
00003dfd(5): MOV EDX,0x5
00003e02(2): XOR EDI,EDI
00003e04(5): CALL 0x00002510
00003e09(3): MOV RCX,RBX
00003e0c(3): MOV RDX,RAX
00003e0f(2): XOR ESI,ESI
00003e11(2): XOR EDI,EDI
00003e13(2): XOR EAX,EAX
00003e15(5): CALL 0x000028a0
00003e1a(7): LEA RSI,[0x20e60]
00003e21(5): MOV EDX,0x5
00003e26(2): XOR EDI,EDI
00003e28(5): CALL 0x00002510
00003e2d(7): MOV RDI,qword ptr [0x002280e0]
00003e34(7): LEA RDX,[0x21f90]
00003e3b(3): MOV RCX,RAX
00003e3e(5): MOV ESI,0x1
00003e43(2): XOR EAX,EAX
00003e45(5): CALL 0x00002970
00003e4a(5): MOV EDI,0x1
00003e4f(5): CALL 0x00004240
00003e54(7): MOV R8,qword ptr [0x002280c0]
00003e5b(4): MOV ESI,dword ptr [RSP + 0x5c]
00003e5f(7): LEA RCX,[0x2276e0]
00003e66(5): MOV EDX,0x74
00003e6b(2): MOV EDI,EAX
00003e6d(5): CALL 0x0000d7d0
00003e72(5): CMP byte ptr [RSP + 0x1c],0x0
00003e77(6): JNZ 0x00003a09
00003e7d(5): JMP 0x00002f09
00003e82(3): MOV RSI,R13
00003e85(5): MOV EDI,0x4
00003e8a(5): CALL 0x0000c090
00003e8f(7): LEA RSI,[0x1fcf1]
00003e96(3): MOV RBX,RAX
00003e99(5): MOV EDX,0x5
00003e9e(2): XOR EDI,EDI
00003ea0(5): CALL 0x00002510
00003ea5(3): MOV RCX,RBX
00003ea8(3): MOV RDX,RAX
00003eab(2): XOR ESI,ESI
00003ead(5): MOV EDI,0x1
00003eb2(2): XOR EAX,EAX
00003eb4(5): CALL 0x000028a0
00003eb9(5): MOV ESI,0x1
00003ebe(5): JMP 0x0000324f
00003ec3(5): MOV EDI,0x1
00003ec8(5): JMP 0x00003836
00003ecd(7): LEA RCX,[0x213f0]
00003ed4(7): LEA RSI,[0x1fc66]
00003edb(7): LEA RDI,[0x1fcae]
00003ee2(5): MOV EDX,0x20e
00003ee7(5): CALL 0x00002600
00003eec(7): LEA RCX,[0x213f0]
00003ef3(7): LEA RSI,[0x1fc66]
00003efa(7): LEA RDI,[0x1fcc8]
00003f01(5): MOV EDX,0x27d
00003f06(5): CALL 0x00002600
00003f0b(7): LEA RSI,[0x20d78]
00003f12(5): MOV EDX,0x5
00003f17(2): XOR EDI,EDI
00003f19(5): CALL 0x00002510
00003f1e(2): XOR ESI,ESI
00003f20(3): MOV RDX,RAX
00003f23(2): XOR EDI,EDI
00003f25(2): XOR EAX,EAX
00003f27(5): CALL 0x000028a0
00003f2c(5): MOV EDI,0x1
00003f31(5): CALL 0x00004240
00003f36(10): NOP word ptr CS:[RAX + RAX*0x1]
00003f40(2): XOR EBP,EBP
00003f42(3): MOV R9,RDX
00003f45(1): POP RSI
00003f46(3): MOV RDX,RSP
00003f49(4): AND RSP,-0x10
00003f4d(1): PUSH RAX
00003f4e(1): PUSH RSP
00003f4f(7): LEA R8,[0x1fa30]
00003f56(7): LEA RCX,[0x1f9c0]
00003f5d(7): LEA RDI,[0x2a50]
00003f64(6): CALL qword ptr [0x00227fe0]
00003f6a(1): HLT
00003f70(7): LEA RDI,[0x2280a0]
00003f77(1): PUSH RBP
00003f78(7): LEA RAX,[0x2280a0]
00003f7f(3): CMP RAX,RDI
00003f82(3): MOV RBP,RSP
00003f85(2): JZ 0x00003fa0
00003f87(7): MOV RAX,qword ptr [0x00227fd0]
00003f8e(3): TEST RAX,RAX
00003f91(2): JZ 0x00003fa0
00003f93(1): POP RBP
00003f94(2): JMP RAX
00003fa0(1): POP RBP
00003fa1(1): RET
00003fb0(7): LEA RDI,[0x2280a0]
00003fb7(7): LEA RSI,[0x2280a0]
00003fbe(1): PUSH RBP
00003fbf(3): SUB RSI,RDI
00003fc2(3): MOV RBP,RSP
00003fc5(4): SAR RSI,0x3
00003fc9(3): MOV RAX,RSI
00003fcc(4): SHR RAX,0x3f
00003fd0(3): ADD RSI,RAX
00003fd3(3): SAR RSI,1
00003fd6(2): JZ 0x00003ff0
00003fd8(7): MOV RAX,qword ptr [0x00227ff0]
00003fdf(3): TEST RAX,RAX
00003fe2(2): JZ 0x00003ff0
00003fe4(1): POP RBP
00003fe5(2): JMP RAX
00003ff0(1): POP RBP
00003ff1(1): RET
00004000(7): CMP byte ptr [0x002280e8],0x0
00004007(2): JNZ 0x00004038
00004009(8): CMP qword ptr [0x00227ff8],0x0
00004011(1): PUSH RBP
00004012(3): MOV RBP,RSP
00004015(2): JZ 0x00004023
00004017(7): MOV RDI,qword ptr [0x00228008]
0000401e(5): CALL 0x00002a18
00004023(5): CALL 0x00003f70
00004028(7): MOV byte ptr [0x002280e8],0x1
0000402f(1): POP RBP
00004030(1): RET
00004038(2): RET
00004040(1): PUSH RBP
00004041(3): MOV RBP,RSP
00004044(1): POP RBP
00004045(5): JMP 0x00003fb0
00004050(1): PUSH RBX
00004051(7): SUB RSP,0x2a0
00004058(7): MOV RBX,qword ptr [0x002280a8]
0000405f(9): MOV RAX,qword ptr FS:[0x28]
00004068(8): MOV qword ptr [0x298 + RSP],RAX
00004070(2): XOR EAX,EAX
00004072(4): CMP RDI,-0x1
00004076(2): JZ 0x000040c0
00004078(7): MOV R8,qword ptr [0x00228148]
0000407f(6): MOV EDX,dword ptr [0x00228170]
00004085(3): MOV RSI,RSP
00004088(5): MOV ECX,0x1
0000408d(5): CALL 0x000090a0
00004092(3): MOV RSI,RBX
00004095(3): MOV RDI,RAX
00004098(5): CALL 0x000026a0
0000409d(8): MOV RAX,qword ptr [0x298 + RSP]
000040a5(9): XOR RAX,qword ptr FS:[0x28]
000040ae(2): JNZ 0x000040d5
000040b0(7): ADD RSP,0x2a0
000040b7(1): POP RBX
000040b8(1): RET
000040c0(7): LEA RSI,[0x1fa64]
000040c7(5): MOV EDX,0x5
000040cc(2): XOR EDI,EDI
000040ce(5): CALL 0x00002510
000040d3(2): JMP 0x00004092
000040d5(5): CALL 0x00002560
000040da(6): NOP word ptr [RAX + RAX*0x1]
000040e0(2): PUSH R13
000040e2(2): PUSH R12
000040e4(1): PUSH RBP
000040e5(1): PUSH RBX
000040e6(3): MOV RBX,RDI
000040e9(3): MOV RBP,RSI
000040ec(4): SUB RSP,0x78
000040f0(4): MOV RDI,qword ptr [RDI + 0x8]
000040f4(9): MOV RAX,qword ptr FS:[0x28]
000040fd(5): MOV qword ptr [RSP + 0x68],RAX
00004102(2): XOR EAX,EAX
00004104(7): CMP byte ptr [0x0022816d],0x0
0000410b(4): CMOVZ RDI,qword ptr [RBX]
0000410f(5): CALL 0x00004050
00004114(7): CMP byte ptr [0x0022816c],0x0
0000411b(2): JZ 0x00004186
0000411d(7): MOV RDI,qword ptr [0x002280a8]
00004124(4): MOV RAX,qword ptr [RDI + 0x28]
00004128(4): CMP RAX,qword ptr [RDI + 0x30]
0000412c(6): JNC 0x000041d0
00004132(4): LEA RDX,[RAX + 0x1]
00004136(4): MOV qword ptr [RDI + 0x28],RDX
0000413a(3): MOV byte ptr [RAX],0x9
0000413d(7): MOV R12,qword ptr [0x00228150]
00004144(3): MOV RSI,RSP
00004147(7): MOV R13,qword ptr [0x00228158]
0000414e(5): MOVDQA XMM0,xmmword ptr [RBX + 0x10]
00004153(5): LEA RBX,[RSP + 0x10]
00004158(3): MOV RDI,R12
0000415b(3): MOV RDX,RBX
0000415e(4): MOVAPS xmmword ptr [RSP],XMM0
00004162(5): CALL 0x0001f120
00004167(3): TEST RAX,RAX
0000416a(2): JZ 0x000041e0
0000416c(5): MOV R8D,dword ptr [RSP + 0x8]
00004171(7): MOV RDI,qword ptr [0x002280a8]
00004178(3): MOV RCX,R12
0000417b(3): MOV RDX,RBX
0000417e(3): MOV RSI,R13
00004181(5): CALL 0x00007aa0
00004186(7): CMP byte ptr [0x00228182],0x1
0000418d(7): LEA RSI,[0x1fa85]
00004194(3): MOV RDX,RBP
00004197(5): MOV EDI,0x1
0000419c(2): SBB ECX,ECX
0000419e(2): XOR EAX,EAX
000041a0(3): AND ECX,0xa
000041a3(5): CALL 0x00002850
000041a8(7): MOV RDI,qword ptr [0x002280a8]
000041af(5): CALL 0x00002980
000041b4(5): MOV RAX,qword ptr [RSP + 0x68]
000041b9(9): XOR RAX,qword ptr FS:[0x28]
000041c2(2): JNZ 0x00004234
000041c4(4): ADD RSP,0x78
000041c8(1): POP RBX
000041c9(1): POP RBP
000041ca(2): POP R12
000041cc(2): POP R13
000041ce(1): RET
000041d0(5): MOV ESI,0x9
000041d5(5): CALL 0x000025c0
000041da(5): JMP 0x0000413d
000041e0(4): MOV RDI,qword ptr [RSP]
000041e4(5): LEA RSI,[RSP + 0x50]
000041e9(5): CALL 0x00009df0
000041ee(3): MOV RDI,RAX
000041f1(3): MOV RBX,RAX
000041f4(5): CALL 0x0000c360
000041f9(7): LEA RSI,[0x1fa6d]
00004200(3): MOV R12,RAX
00004203(2): XOR EDI,EDI
00004205(5): MOV EDX,0x5
0000420a(5): CALL 0x00002510
0000420f(2): XOR ESI,ESI
00004211(3): MOV RDX,RAX
00004214(2): XOR EDI,EDI
00004216(3): MOV RCX,R12
00004219(2): XOR EAX,EAX
0000421b(5): CALL 0x000028a0
00004220(7): MOV RSI,qword ptr [0x002280a8]
00004227(3): MOV RDI,RBX
0000422a(5): CALL 0x000026a0
0000422f(5): JMP 0x00004186
00004234(5): CALL 0x00002560
00004239(7): NOP dword ptr [RAX]
00004240(2): PUSH R13
00004242(2): PUSH R12
00004244(5): MOV EDX,0x5
00004249(1): PUSH RBP
0000424a(1): PUSH RBX
0000424b(2): MOV EBP,EDI
0000424d(7): SUB RSP,0x88
00004254(7): MOV RBX,qword ptr [0x002281b0]
0000425b(9): MOV RAX,qword ptr FS:[0x28]
00004264(5): MOV qword ptr [RSP + 0x78],RAX
00004269(2): XOR EAX,EAX
0000426b(2): TEST EDI,EDI
0000426d(2): JZ 0x0000429d
0000426f(7): LEA RSI,[0x1fe38]
00004276(2): XOR EDI,EDI
00004278(5): CALL 0x00002510
0000427d(7): MOV RDI,qword ptr [0x002280e0]
00004284(3): MOV RDX,RAX
00004287(3): MOV RCX,RBX
0000428a(5): MOV ESI,0x1
0000428f(2): XOR EAX,EAX
00004291(5): CALL 0x00002970
00004296(2): MOV EDI,EBP
00004298(5): CALL 0x00002950
0000429d(7): LEA RSI,[0x1fe60]
000042a4(2): XOR EDI,EDI
000042a6(5): CALL 0x00002510
000042ab(3): MOV RCX,RBX
000042ae(3): MOV RDX,RBX
000042b1(3): MOV RSI,RAX
000042b4(5): MOV EDI,0x1
000042b9(2): XOR EAX,EAX
000042bb(5): CALL 0x00002850
000042c0(7): MOV RBX,qword ptr [0x002280a8]
000042c7(7): LEA RSI,[0x1fea8]
000042ce(5): MOV EDX,0x5
000042d3(2): XOR EDI,EDI
000042d5(5): CALL 0x00002510
000042da(3): MOV RSI,RBX
000042dd(3): MOV RDI,RAX
000042e0(5): CALL 0x000026a0
000042e5(7): MOV RBX,qword ptr [0x002280a8]
000042ec(7): LEA RSI,[0x1fef0]
000042f3(5): MOV EDX,0x5
000042f8(2): XOR EDI,EDI
000042fa(5): CALL 0x00002510
000042ff(3): MOV RSI,RBX
00004302(3): MOV RDI,RAX
00004305(5): CALL 0x000026a0
0000430a(7): MOV RBX,qword ptr [0x002280a8]
00004311(7): LEA RSI,[0x1ff40]
00004318(5): MOV EDX,0x5
0000431d(2): XOR EDI,EDI
0000431f(5): CALL 0x00002510
00004324(3): MOV RSI,RBX
00004327(3): MOV RDI,RAX
0000432a(5): CALL 0x000026a0
0000432f(7): MOV RBX,qword ptr [0x002280a8]
00004336(7): LEA RSI,[0x20100]
0000433d(5): MOV EDX,0x5
00004342(2): XOR EDI,EDI
00004344(5): CALL 0x00002510
00004349(3): MOV RSI,RBX
0000434c(3): MOV RDI,RAX
0000434f(5): CALL 0x000026a0
00004354(7): MOV RBX,qword ptr [0x002280a8]
0000435b(7): LEA RSI,[0x203b8]
00004362(5): MOV EDX,0x5
00004367(2): XOR EDI,EDI
00004369(5): CALL 0x00002510
0000436e(3): MOV RSI,RBX
00004371(3): MOV RDI,RAX
00004374(5): CALL 0x000026a0
00004379(7): MOV RBX,qword ptr [0x002280a8]
00004380(7): LEA RSI,[0x20560]
00004387(5): MOV EDX,0x5
0000438c(2): XOR EDI,EDI
0000438e(5): CALL 0x00002510
00004393(3): MOV RSI,RBX
00004396(3): MOV RDI,RAX
00004399(5): CALL 0x000026a0
0000439e(7): MOV RBX,qword ptr [0x002280a8]
000043a5(7): LEA RSI,[0x20630]
000043ac(5): MOV EDX,0x5
000043b1(2): XOR EDI,EDI
000043b3(5): CALL 0x00002510
000043b8(3): MOV RSI,RBX
000043bb(3): MOV RDI,RAX
000043be(5): CALL 0x000026a0
000043c3(7): MOV RBX,qword ptr [0x002280a8]
000043ca(7): LEA RSI,[0x20750]
000043d1(5): MOV EDX,0x5
000043d6(2): XOR EDI,EDI
000043d8(5): CALL 0x00002510
000043dd(3): MOV RSI,RBX
000043e0(3): MOV RDI,RAX
000043e3(5): CALL 0x000026a0
000043e8(7): MOV RBX,qword ptr [0x002280a8]
000043ef(7): LEA RSI,[0x209b8]
000043f6(5): MOV EDX,0x5
000043fb(2): XOR EDI,EDI
000043fd(5): CALL 0x00002510
00004402(3): MOV RSI,RBX
00004405(3): MOV RDI,RAX
00004408(5): CALL 0x000026a0
0000440d(7): MOV RBX,qword ptr [0x002280a8]
00004414(7): LEA RSI,[0x20a88]
0000441b(5): MOV EDX,0x5
00004420(2): XOR EDI,EDI
00004422(5): CALL 0x00002510
00004427(3): MOV RSI,RBX
0000442a(3): MOV RDI,RAX
0000442d(5): CALL 0x000026a0
00004432(7): MOV RBX,qword ptr [0x002280a8]
00004439(7): LEA RSI,[0x20ab8]
00004440(5): MOV EDX,0x5
00004445(2): XOR EDI,EDI
00004447(5): CALL 0x00002510
0000444c(3): MOV RSI,RBX
0000444f(3): MOV RDI,RAX
00004452(5): CALL 0x000026a0
00004457(7): LEA RSI,[0x20af0]
0000445e(5): MOV EDX,0x5
00004463(2): XOR EDI,EDI
00004465(5): CALL 0x00002510
0000446a(7): LEA RDX,[0x1fa8e]
00004471(3): MOV RSI,RAX
00004474(5): MOV EDI,0x1
00004479(2): XOR EAX,EAX
0000447b(5): CALL 0x00002850
00004480(7): MOV RBX,qword ptr [0x002280a8]
00004487(7): LEA RSI,[0x20bd0]
0000448e(5): MOV EDX,0x5
00004493(2): XOR EDI,EDI
00004495(5): CALL 0x00002510
0000449a(3): MOV RSI,RBX
0000449d(3): MOV RDI,RAX
000044a0(7): LEA RBX,[0x1fa8b]
000044a7(5): CALL 0x000026a0
000044ac(7): LEA RAX,[0x1fa91]
000044b3(7): LEA RCX,[0x1fad2]
000044ba(9): MOV qword ptr [RSP + 0x60],0x0
000044c3(9): MOV qword ptr [RSP + 0x68],0x0
000044cc(3): MOV RDX,RSP
000044cf(4): MOV qword ptr [RSP],RAX
000044d3(7): LEA RAX,[0x1fa93]
000044da(5): MOV qword ptr [RSP + 0x30],RCX
000044df(7): LEA RCX,[0x1fadc]
000044e6(5): MOV qword ptr [RSP + 0x8],RAX
000044eb(7): LEA RAX,[0x1fb0b]
000044f2(5): MOV qword ptr [RSP + 0x40],RCX
000044f7(7): LEA RCX,[0x1fae6]
000044fe(5): MOV qword ptr [RSP + 0x10],RAX
00004503(7): LEA RAX,[0x1faa3]
0000450a(5): MOV qword ptr [RSP + 0x50],RCX
0000450f(5): MOV qword ptr [RSP + 0x18],RAX
00004514(7): LEA RAX,[0x1fab9]
0000451b(5): MOV qword ptr [RSP + 0x20],RAX
00004520(7): LEA RAX,[0x1fac3]
00004527(5): MOV qword ptr [RSP + 0x28],RAX
0000452c(5): MOV qword ptr [RSP + 0x38],RAX
00004531(5): MOV qword ptr [RSP + 0x48],RAX
00004536(5): MOV qword ptr [RSP + 0x58],RAX
0000453b(5): NOP dword ptr [RAX + RAX*0x1]
00004540(4): ADD RDX,0x10
00004544(3): MOV RDI,qword ptr [RDX]
00004547(3): TEST RDI,RDI
0000454a(2): JZ 0x0000455f
0000454c(5): MOV ECX,0x3
00004551(3): MOV RSI,RBX
00004554(2): CMPSB.REPE RDI,RSI
00004556(3): SETA AL
00004559(2): SBB AL,0x0
0000455b(2): TEST AL,AL
0000455d(2): JNZ 0x00004540
0000455f(4): MOV R12,qword ptr [RDX + 0x8]
00004563(2): XOR EDI,EDI
00004565(5): MOV EDX,0x5
0000456a(7): LEA RSI,[0x1faf0]
00004571(3): TEST R12,R12
00004574(6): JZ 0x0000463b
0000457a(5): CALL 0x00002510
0000457f(7): LEA RCX,[0x20ca8]
00004586(7): LEA RDX,[0x1fb07]
0000458d(3): MOV RSI,RAX
00004590(5): MOV EDI,0x1
00004595(2): XOR EAX,EAX
00004597(5): CALL 0x00002850
0000459c(2): XOR ESI,ESI
0000459e(5): MOV EDI,0x5
000045a3(5): CALL 0x00002840
000045a8(3): TEST RAX,RAX
000045ab(2): JZ 0x000045c9
000045ad(7): LEA RSI,[0x1fb15]
000045b4(5): MOV EDX,0x3
000045b9(3): MOV RDI,RAX
000045bc(5): CALL 0x00002420
000045c1(2): TEST EAX,EAX
000045c3(6): JNZ 0x000046d0
000045c9(7): LEA RSI,[0x1fb19]
000045d0(2): XOR EDI,EDI
000045d2(5): MOV EDX,0x5
000045d7(5): CALL 0x00002510
000045dc(7): LEA RCX,[0x1fa8b]
000045e3(7): LEA RDX,[0x20ca8]
000045ea(3): MOV RSI,RAX
000045ed(5): MOV EDI,0x1
000045f2(2): XOR EAX,EAX
000045f4(5): CALL 0x00002850
000045f9(3): CMP R12,RBX
000045fc(7): LEA RCX,[0x1faad]
00004603(7): LEA RBX,[0x21fe1]
0000460a(4): CMOVZ RBX,RCX
0000460e(7): LEA RSI,[0x20d18]
00004615(2): XOR EDI,EDI
00004617(5): MOV EDX,0x5
0000461c(5): CALL 0x00002510
00004621(3): MOV RCX,RBX
00004624(3): MOV RSI,RAX
00004627(3): MOV RDX,R12
0000462a(5): MOV EDI,0x1
0000462f(2): XOR EAX,EAX
00004631(5): CALL 0x00002850
00004636(5): JMP 0x00004296
0000463b(5): CALL 0x00002510
00004640(7): LEA RCX,[0x20ca8]
00004647(7): LEA RDX,[0x1fb07]
0000464e(3): MOV RSI,RAX
00004651(5): MOV EDI,0x1
00004656(2): XOR EAX,EAX
00004658(5): CALL 0x00002850
0000465d(2): XOR ESI,ESI
0000465f(5): MOV EDI,0x5
00004664(5): CALL 0x00002840
00004669(3): TEST RAX,RAX
0000466c(2): JZ 0x00004686
0000466e(7): LEA RSI,[0x1fb15]
00004675(5): MOV EDX,0x3
0000467a(3): MOV RDI,RAX
0000467d(5): CALL 0x00002420
00004682(2): TEST EAX,EAX
00004684(2): JNZ 0x000046c9
00004686(7): LEA RSI,[0x1fb19]
0000468d(5): MOV EDX,0x5
00004692(2): XOR EDI,EDI
00004694(7): LEA R12,[0x1fa8b]
0000469b(7): LEA RBX,[0x1faad]
000046a2(5): CALL 0x00002510
000046a7(7): LEA RCX,[0x1fa8b]
000046ae(7): LEA RDX,[0x20ca8]
000046b5(3): MOV RSI,RAX
000046b8(5): MOV EDI,0x1
000046bd(2): XOR EAX,EAX
000046bf(5): CALL 0x00002850
000046c4(5): JMP 0x0000460e
000046c9(7): LEA R12,[0x1fa8b]
000046d0(7): MOV R13,qword ptr [0x002280a8]
000046d7(7): LEA RSI,[0x20cd0]
000046de(2): XOR EDI,EDI
000046e0(5): MOV EDX,0x5
000046e5(5): CALL 0x00002510
000046ea(3): MOV RSI,R13
000046ed(3): MOV RDI,RAX
000046f0(5): CALL 0x000026a0
000046f5(5): JMP 0x000045c9
00004700(5): MOV EDI,0x1
00004705(5): JMP 0x00004240
00004710(2): PUSH R15
00004712(2): PUSH R14
00004714(3): MOV R15,RSI
00004717(2): PUSH R13
00004719(2): PUSH R12
0000471b(3): MOV R13,RCX
0000471e(1): PUSH RBP
0000471f(1): PUSH RBX
00004720(3): MOV RBP,RDX
00004723(4): SUB RSP,0x28
00004727(5): MOV qword ptr [RSP + 0x8],RDI
0000472c(5): MOV qword ptr [RSP + 0x18],RDX
00004731(5): CALL 0x00002530
00004736(3): MOV R14,qword ptr [R15]
00004739(8): MOV qword ptr [RSP],-0x1
00004741(3): TEST R14,R14
00004744(6): JZ 0x000047fd
0000474a(3): MOV R12,RAX
0000474d(5): MOV byte ptr [RSP + 0x17],0x0
00004752(2): XOR EBX,EBX
00004754(2): JMP 0x000047a7
00004760(5): MOV RAX,qword ptr [RSP + 0x18]
00004765(3): TEST RAX,RAX
00004768(6): JZ 0x00004810
0000476e(4): MOV RDI,qword ptr [RSP]
00004772(3): MOV RDX,R13
00004775(3): MOV RSI,RBP
00004778(4): IMUL RDI,R13
0000477c(3): ADD RDI,RAX
0000477f(5): CALL 0x00002680
00004784(2): TEST EAX,EAX
00004786(5): MOVZX EAX,byte ptr [RSP + 0x17]
0000478b(5): MOV ECX,0x1
00004790(3): CMOVNZ EAX,ECX
00004793(4): MOV byte ptr [RSP + 0x17],AL
00004797(4): ADD RBX,0x1
0000479b(3): ADD RBP,R13
0000479e(4): MOV R14,qword ptr [R15 + RBX*0x8]
000047a2(3): TEST R14,R14
000047a5(2): JZ 0x000047e8
000047a7(5): MOV RSI,qword ptr [RSP + 0x8]
000047ac(3): MOV RDX,R12
000047af(3): MOV RDI,R14
000047b2(5): CALL 0x00002420
000047b7(2): TEST EAX,EAX
000047b9(2): JNZ 0x00004797
000047bb(3): MOV RDI,R14
000047be(5): CALL 0x00002530
000047c3(3): CMP RAX,R12
000047c6(2): JZ 0x00004820
000047c8(5): CMP qword ptr [RSP],-0x1
000047cd(2): JNZ 0x00004760
000047cf(4): MOV qword ptr [RSP],RBX
000047d3(4): ADD RBX,0x1
000047d7(3): ADD RBP,R13
000047da(4): MOV R14,qword ptr [R15 + RBX*0x8]
000047de(3): TEST R14,R14
000047e1(2): JNZ 0x000047a7
000047e3(5): NOP dword ptr [RAX + RAX*0x1]
000047e8(5): CMP byte ptr [RSP + 0x17],0x0
000047ed(7): MOV RAX,-0x2
000047f4(5): CMOVZ RAX,qword ptr [RSP]
000047f9(4): MOV qword ptr [RSP],RAX
000047fd(4): MOV RAX,qword ptr [RSP]
00004801(4): ADD RSP,0x28
00004805(1): POP RBX
00004806(1): POP RBP
00004807(2): POP R12
00004809(2): POP R13
0000480b(2): POP R14
0000480d(2): POP R15
0000480f(1): RET
00004810(5): MOV byte ptr [RSP + 0x17],0x1
00004815(2): JMP 0x00004797
00004820(4): MOV qword ptr [RSP],RBX
00004824(2): JMP 0x000047fd
00004830(4): CMP RDX,-0x1
00004834(2): PUSH R12
00004836(5): MOV EDX,0x5
0000483b(1): PUSH RBP
0000483c(3): MOV R12,RSI
0000483f(1): PUSH RBX
00004840(3): MOV RBP,RDI
00004843(2): JZ 0x00004890
00004845(7): LEA RSI,[0x21454]
0000484c(2): XOR EDI,EDI
0000484e(5): CALL 0x00002510
00004853(3): MOV RBX,RAX
00004856(3): MOV RSI,RBP
00004859(5): MOV EDI,0x1
0000485e(5): CALL 0x0000c340
00004863(3): MOV RDX,R12
00004866(3): MOV RBP,RAX
00004869(5): MOV ESI,0x8
0000486e(2): XOR EDI,EDI
00004870(5): CALL 0x0000bf70
00004875(3): MOV R8,RBP
00004878(3): MOV RDX,RBX
0000487b(3): MOV RCX,RAX
0000487e(1): POP RBX
0000487f(1): POP RBP
00004880(2): POP R12
00004882(2): XOR ESI,ESI
00004884(2): XOR EDI,EDI
00004886(2): XOR EAX,EAX
00004888(5): JMP 0x000028a0
00004890(7): LEA RSI,[0x21439]
00004897(2): XOR EDI,EDI
00004899(5): CALL 0x00002510
0000489e(3): MOV RBX,RAX
000048a1(2): JMP 0x00004856
000048b0(2): PUSH R15
000048b2(2): PUSH R14
000048b4(3): MOV R14,RDI
000048b7(2): PUSH R13
000048b9(2): PUSH R12
000048bb(2): XOR EDI,EDI
000048bd(1): PUSH RBP
000048be(1): PUSH RBX
000048bf(3): MOV RBP,RSI
000048c2(7): LEA RSI,[0x21471]
000048c9(3): MOV R12,RDX
000048cc(5): MOV EDX,0x5
000048d1(4): SUB RSP,0x8
000048d5(7): MOV RBX,qword ptr [0x002280e0]
000048dc(5): CALL 0x00002510
000048e1(3): MOV RDI,RAX
000048e4(3): MOV RSI,RBX
000048e7(5): CALL 0x000026a0
000048ec(3): MOV R15,qword ptr [R14]
000048ef(3): TEST R15,R15
000048f2(6): JZ 0x00004988
000048f8(3): XOR R13D,R13D
000048fb(2): XOR EBX,EBX
000048fd(2): JMP 0x00004938
00004900(3): MOV RDI,R15
00004903(4): ADD RBX,0x1
00004907(3): MOV R13,RBP
0000490a(5): CALL 0x0000c360
0000490f(7): MOV RDI,qword ptr [0x002280e0]
00004916(7): LEA RDX,[0x21486]
0000491d(3): MOV RCX,RAX
00004920(5): MOV ESI,0x1
00004925(2): XOR EAX,EAX
00004927(3): ADD RBP,R12
0000492a(5): CALL 0x00002970
0000492f(4): MOV R15,qword ptr [R14 + RBX*0x8]
00004933(3): TEST R15,R15
00004936(2): JZ 0x00004988
00004938(3): TEST RBX,RBX
0000493b(2): JZ 0x00004900
0000493d(3): MOV RDX,R12
00004940(3): MOV RSI,RBP
00004943(3): MOV RDI,R13
00004946(5): CALL 0x00002680
0000494b(2): TEST EAX,EAX
0000494d(2): JNZ 0x00004900
0000494f(3): MOV RDI,R15
00004952(4): ADD RBX,0x1
00004956(3): ADD RBP,R12
00004959(5): CALL 0x0000c360
0000495e(7): MOV RDI,qword ptr [0x002280e0]
00004965(7): LEA RDX,[0x2148e]
0000496c(3): MOV RCX,RAX
0000496f(5): MOV ESI,0x1
00004974(2): XOR EAX,EAX
00004976(5): CALL 0x00002970
0000497b(4): MOV R15,qword ptr [R14 + RBX*0x8]
0000497f(3): TEST R15,R15
00004982(2): JNZ 0x00004938
00004984(4): NOP dword ptr [RAX]
00004988(7): MOV RDI,qword ptr [0x002280e0]
0000498f(4): MOV RAX,qword ptr [RDI + 0x28]
00004993(4): CMP RAX,qword ptr [RDI + 0x30]
00004997(2): JNC 0x000049b8
00004999(4): LEA RDX,[RAX + 0x1]
0000499d(4): MOV qword ptr [RDI + 0x28],RDX
000049a1(3): MOV byte ptr [RAX],0xa
000049a4(4): ADD RSP,0x8
000049a8(1): POP RBX
000049a9(1): POP RBP
000049aa(2): POP R12
000049ac(2): POP R13
000049ae(2): POP R14
000049b0(2): POP R15
000049b2(1): RET
000049b8(4): ADD RSP,0x8
000049bc(5): MOV ESI,0xa
000049c1(1): POP RBX
000049c2(1): POP RBP
000049c3(2): POP R12
000049c5(2): POP R13
000049c7(2): POP R14
000049c9(2): POP R15
000049cb(5): JMP 0x000025c0
000049d0(2): PUSH R15
000049d2(2): PUSH R14
000049d4(3): MOV R14,RDI
000049d7(2): PUSH R13
000049d9(2): PUSH R12
000049db(3): MOV R12,RSI
000049de(1): PUSH RBP
000049df(1): PUSH RBX
000049e0(3): MOV RBP,RCX
000049e3(3): MOV RBX,RDX
000049e6(3): MOV RCX,R8
000049e9(3): MOV RDX,RBP
000049ec(4): SUB RSP,0x8
000049f0(3): MOV RSI,RBX
000049f3(3): MOV RDI,R12
000049f6(3): MOV R15,R8
000049f9(3): MOV R13,R9
000049fc(5): CALL 0x00004710
00004a01(3): TEST RAX,RAX
00004a04(2): JS 0x00004a15
00004a06(4): ADD RSP,0x8
00004a0a(1): POP RBX
00004a0b(1): POP RBP
00004a0c(2): POP R12
00004a0e(2): POP R13
00004a10(2): POP R14
00004a12(2): POP R15
00004a14(1): RET
00004a15(3): MOV RDX,RAX
00004a18(3): MOV RSI,R12
00004a1b(3): MOV RDI,R14
00004a1e(5): CALL 0x00004830
00004a23(3): MOV RDX,R15
00004a26(3): MOV RSI,RBP
00004a29(3): MOV RDI,RBX
00004a2c(5): CALL 0x000048b0
00004a31(3): CALL R13
00004a34(7): MOV RAX,-0x1
00004a3b(2): JMP 0x00004a06
00004a40(2): PUSH R14
00004a42(2): PUSH R13
00004a44(2): PUSH R12
00004a46(1): PUSH RBP
00004a47(1): PUSH RBX
00004a48(3): MOV R14,qword ptr [RSI]
00004a4b(3): TEST R14,R14
00004a4e(2): JZ 0x00004a81
00004a50(3): MOV R12,RCX
00004a53(3): MOV R13,RDI
00004a56(3): MOV RBP,RDX
00004a59(4): LEA RBX,[RSI + 0x8]
00004a5d(2): JMP 0x00004a6f
00004a60(3): MOV R14,qword ptr [RBX]
00004a63(3): ADD RBP,R12
00004a66(4): ADD RBX,0x8
00004a6a(3): TEST R14,R14
00004a6d(2): JZ 0x00004a81
00004a6f(3): MOV RDX,R12
00004a72(3): MOV RSI,RBP
00004a75(3): MOV RDI,R13
00004a78(5): CALL 0x00002680
00004a7d(2): TEST EAX,EAX
00004a7f(2): JNZ 0x00004a60
00004a81(1): POP RBX
00004a82(3): MOV RAX,R14
00004a85(1): POP RBP
00004a86(2): POP R12
00004a88(2): POP R13
00004a8a(2): POP R14
00004a8c(1): RET
00004a90(1): PUSH RBX
00004a91(3): MOV RBX,RDI
00004a94(5): MOV EDI,0x30
00004a99(5): CALL 0x00002780
00004a9e(3): TEST RAX,RAX
00004aa1(2): JZ 0x00004ab2
00004aa3(7): MOV qword ptr [RAX],0x0
00004aaa(4): MOV qword ptr [RAX + 0x20],RBX
00004aae(4): MOV qword ptr [RAX + 0x28],RBX
00004ab2(1): POP RBX
00004ab3(1): RET
00004ac0(1): PUSH RBX
00004ac1(3): MOV RBX,RDI
00004ac4(5): MOV EDI,0x30
00004ac9(5): CALL 0x00002780
00004ace(3): TEST RAX,RAX
00004ad1(2): JZ 0x00004af6
00004ad3(3): MOV qword ptr [RAX],RBX
00004ad6(8): MOV qword ptr [RAX + 0x10],0x0
00004ade(8): MOV qword ptr [RAX + 0x18],0x0
00004ae6(8): MOV qword ptr [RAX + 0x8],0x0
00004aee(8): MOV qword ptr [RAX + 0x20],0x0
00004af6(1): POP RBX
00004af7(1): RET
00004b00(3): MOV RCX,qword ptr [RDI]
00004b03(3): TEST RCX,RCX
00004b06(2): JZ 0x00004b40
00004b08(1): PUSH RBP
00004b09(1): PUSH RBX
00004b0a(3): MOV RBP,RSI
00004b0d(3): MOV RBX,RDI
00004b10(4): LEA RSI,[RDI + 0x18]
00004b14(4): LEA RDI,[RDI + 0x10]
00004b18(4): SUB RSP,0x8
00004b1c(2): XOR EDX,EDX
00004b1e(5): CALL 0x000029c0
00004b23(3): TEST RAX,RAX
00004b26(2): JS 0x00004b70
00004b28(7): MOV dword ptr [RBP],0x1
00004b2f(5): ADD qword ptr [RBX + 0x8],0x1
00004b34(4): MOV RAX,qword ptr [RBX + 0x10]
00004b38(4): ADD RSP,0x8
00004b3c(1): POP RBX
00004b3d(1): POP RBP
00004b3e(1): RET
00004b40(4): MOV RDX,qword ptr [RDI + 0x28]
00004b44(3): MOV RAX,qword ptr [RDX]
00004b47(3): TEST RAX,RAX
00004b4a(2): JZ 0x00004b60
00004b4c(4): ADD RDX,0x8
00004b50(6): MOV dword ptr [RSI],0x1
00004b56(4): MOV qword ptr [RDI + 0x28],RDX
00004b5a(1): RET
00004b60(6): MOV dword ptr [RSI],0x2
00004b66(1): RET
00004b70(3): MOV RDI,qword ptr [RBX]
00004b73(5): CALL 0x00002700
00004b78(3): CMP EAX,0x1
00004b7b(2): SBB EAX,EAX
00004b7d(3): AND EAX,0x2
00004b80(3): ADD EAX,0x2
00004b83(3): MOV dword ptr [RBP],EAX
00004b86(2): XOR EAX,EAX
00004b88(2): JMP 0x00004b38
00004b90(4): CMP qword ptr [RDI],0x0
00004b94(2): JZ 0x00004ba0
00004b96(4): MOV RAX,qword ptr [RDI + 0x8]
00004b9a(1): RET
00004ba0(4): MOV RAX,qword ptr [RDI + 0x28]
00004ba4(4): SUB RAX,qword ptr [RDI + 0x20]
00004ba8(4): SAR RAX,0x3
00004bac(1): RET
00004bb0(1): PUSH RBX
00004bb1(4): CMP qword ptr [RDI],0x0
00004bb5(3): MOV RBX,RDI
00004bb8(2): JZ 0x00004bc3
00004bba(4): MOV RDI,qword ptr [RDI + 0x10]
00004bbe(5): CALL 0x00002a10
00004bc3(3): MOV RDI,RBX
00004bc6(1): POP RBX
00004bc7(5): JMP 0x00002a10
00004bd0(7): MOV qword ptr [0x002281a8],RDI
00004bd7(1): RET
00004be0(7): MOV byte ptr [0x002281a0],DIL
00004be7(1): RET
00004bf0(1): PUSH RBP
00004bf1(1): PUSH RBX
00004bf2(4): SUB RSP,0x8
00004bf6(7): MOV RDI,qword ptr [0x002280a8]
00004bfd(5): CALL 0x0001f320
00004c02(2): TEST EAX,EAX
00004c04(2): JZ 0x00004c1c
00004c06(5): CALL 0x00002410
00004c0b(7): CMP byte ptr [0x002281a0],0x0
00004c12(3): MOV RBX,RAX
00004c15(2): JZ 0x00004c33
00004c17(3): CMP dword ptr [RAX],0x20
00004c1a(2): JNZ 0x00004c33
00004c1c(7): MOV RDI,qword ptr [0x002280e0]
00004c23(5): CALL 0x0001f320
00004c28(2): TEST EAX,EAX
00004c2a(2): JNZ 0x00004c72
00004c2c(4): ADD RSP,0x8
00004c30(1): POP RBX
00004c31(1): POP RBP
00004c32(1): RET
00004c33(7): LEA RSI,[0x21493]
00004c3a(2): XOR EDI,EDI
00004c3c(5): MOV EDX,0x5
00004c41(5): CALL 0x00002510
00004c46(7): MOV RDI,qword ptr [0x002281a8]
00004c4d(3): MOV RBP,RAX
00004c50(3): TEST RDI,RDI
00004c53(2): JZ 0x00004c7d
00004c55(5): CALL 0x0000c160
00004c5a(2): MOV ESI,dword ptr [RBX]
00004c5c(7): LEA RDX,[0x2149f]
00004c63(3): MOV RCX,RAX
00004c66(3): MOV R8,RBP
00004c69(2): XOR EDI,EDI
00004c6b(2): XOR EAX,EAX
00004c6d(5): CALL 0x000028a0
00004c72(6): MOV EDI,dword ptr [0x00228028]
00004c78(5): CALL 0x00002440
00004c7d(2): MOV ESI,dword ptr [RBX]
00004c7f(7): LEA RDX,[0x21490]
00004c86(3): MOV RCX,RAX
00004c89(2): XOR EDI,EDI
00004c8b(2): XOR EAX,EAX
00004c8d(5): CALL 0x000028a0
00004c92(2): JMP 0x00004c72
00004ca0(3): MOV RAX,qword ptr [RDI]
00004ca3(2): XOR EDX,EDX
00004ca5(3): DIV RSI
00004ca8(3): MOV RAX,RDX
00004cab(1): RET
00004cb0(3): MOV RAX,qword ptr [RSI]
00004cb3(3): CMP qword ptr [RDI],RAX
00004cb6(3): SETZ AL
00004cb9(1): RET
00004cc0(3): MOV RAX,RDI
00004cc3(2): XOR EDX,EDX
00004cc5(3): DIV RSI
00004cc8(3): MOV RAX,RDX
00004ccb(1): RET
00004cd0(1): PUSH RBX
00004cd1(3): MOV RBX,RDI
00004cd4(4): MOV RDI,qword ptr [RDI + 0x8]
00004cd8(5): CALL 0x000087b0
00004cdd(3): MOV RDI,RBX
00004ce0(1): POP RBX
00004ce1(5): JMP 0x00002a10
00004cf0(2): PUSH R12
00004cf2(1): PUSH RBP
00004cf3(3): MOV R12,RDI
00004cf6(1): PUSH RBX
00004cf7(3): MOV RBP,RSI
00004cfa(4): SUB RSP,0x10
00004cfe(3): MOV RBX,qword ptr [RSI]
00004d01(3): TEST RBX,RBX
00004d04(2): JZ 0x00004d48
00004d06(3): CMP qword ptr [RBX],RDX
00004d09(2): JZ 0x00004d38
00004d0b(3): MOV qword ptr [RBX],RDX
00004d0e(3): MOV RSI,RBX
00004d11(3): MOV RDI,R12
00004d14(5): CALL 0x00008d60
00004d19(3): TEST RAX,RAX
00004d1c(2): JZ 0x00004d70
00004d1e(3): CMP RBX,RAX
00004d21(2): JZ 0x00004d78
00004d23(4): MOV RAX,qword ptr [RAX + 0x8]
00004d27(4): MOV qword ptr [RBX + 0x8],RAX
00004d2b(4): ADD RSP,0x10
00004d2f(1): POP RBX
00004d30(1): POP RBP
00004d31(2): POP R12
00004d33(1): RET
00004d38(4): MOV RAX,qword ptr [RBX + 0x8]
00004d3c(4): ADD RSP,0x10
00004d40(1): POP RBX
00004d41(1): POP RBP
00004d42(2): POP R12
00004d44(1): RET
00004d48(5): MOV EDI,0x10
00004d4d(5): MOV qword ptr [RSP + 0x8],RDX
00004d52(5): CALL 0x00002780
00004d57(3): TEST RAX,RAX
00004d5a(3): MOV RBX,RAX
00004d5d(4): MOV qword ptr [RBP],RAX
00004d61(5): MOV RDX,qword ptr [RSP + 0x8]
00004d66(2): JNZ 0x00004d0b
00004d68(8): NOP dword ptr [RAX + RAX*0x1]
00004d70(2): XOR EAX,EAX
00004d72(2): JMP 0x00004d2b
00004d78(7): LEA RDX,[0x4cc0]
00004d7f(8): MOV qword ptr [RBP],0x0
00004d87(3): XOR R8D,R8D
00004d8a(2): XOR ECX,ECX
00004d8c(2): XOR ESI,ESI
00004d8e(5): MOV EDI,0x3fd
00004d93(5): CALL 0x00008560
00004d98(4): MOV qword ptr [RBX + 0x8],RAX
00004d9c(4): ADD RSP,0x10
00004da0(1): POP RBX
00004da1(1): POP RBP
00004da2(2): POP R12
00004da4(1): RET
00004db0(4): LEA RDX,[RSI + -0x1]
00004db4(10): MOV RAX,0x7ffffffffffffffd
00004dbe(3): CMP RDX,RAX
00004dc1(2): JBE 0x00004de0
00004dc3(1): PUSH RBX
00004dc4(3): MOV RBX,RDI
00004dc7(4): SUB RSP,0x10
00004dcb(3): MOV RDI,qword ptr [RDI]
00004dce(3): TEST RDI,RDI
00004dd1(2): JZ 0x00004de8
00004dd3(4): ADD RSP,0x10
00004dd7(1): POP RBX
00004dd8(5): JMP 0x00009d50
00004de0(3): MOV RAX,RSI
00004de3(1): RET
00004de8(10): MOV RDI,0x7fffffffffffffff
00004df2(5): MOV qword ptr [RSP + 0x8],RSI
00004df7(5): CALL 0x00009cc0
00004dfc(3): TEST RAX,RAX
00004dff(3): MOV RDI,RAX
00004e02(3): MOV qword ptr [RBX],RAX
00004e05(5): MOV RSI,qword ptr [RSP + 0x8]
00004e0a(2): JNZ 0x00004dd3
00004e0c(4): ADD RSP,0x10
00004e10(7): MOV RAX,-0x1
00004e17(1): POP RBX
00004e18(1): RET
00004e20(1): PUSH RBX
00004e21(5): MOV EDI,0x18
00004e26(5): CALL 0x00002780
00004e2b(3): TEST RAX,RAX
00004e2e(3): MOV RBX,RAX
00004e31(2): JZ 0x00004e6c
00004e33(7): LEA R8,[0x4cd0]
00004e3a(7): LEA RCX,[0x4cb0]
00004e41(7): LEA RDX,[0x4ca0]
00004e48(2): XOR ESI,ESI
00004e4a(5): MOV EDI,0xb
00004e4f(5): CALL 0x00008560
00004e54(3): TEST RAX,RAX
00004e57(3): MOV qword ptr [RBX],RAX
00004e5a(2): JZ 0x00004e78
00004e5c(8): MOV qword ptr [RBX + 0x8],0x0
00004e64(8): MOV qword ptr [RBX + 0x10],0x0
00004e6c(3): MOV RAX,RBX
00004e6f(1): POP RBX
00004e70(1): RET
00004e78(3): MOV RDI,RBX
00004e7b(2): XOR EBX,EBX
00004e7d(5): CALL 0x00002a10
00004e82(2): JMP 0x00004e6c
00004e90(1): PUSH RBX
00004e91(3): MOV RBX,RDI
00004e94(3): MOV RDI,qword ptr [RDI]
00004e97(5): CALL 0x000087b0
00004e9c(4): MOV RDI,qword ptr [RBX + 0x8]
00004ea0(5): CALL 0x00002a10
00004ea5(4): MOV RDI,qword ptr [RBX + 0x10]
00004ea9(5): CALL 0x00002a10
00004eae(3): MOV RDI,RBX
00004eb1(1): POP RBX
00004eb2(5): JMP 0x00002a10
00004ec0(2): PUSH R12
00004ec2(3): MOV RAX,RSI
00004ec5(1): PUSH RBP
00004ec6(4): LEA RSI,[RDI + 0x10]
00004eca(1): PUSH RBX
00004ecb(3): MOV RBX,RDI
00004ece(3): MOV RDI,qword ptr [RDI]
00004ed1(3): MOV R12,RDX
00004ed4(3): MOV RDX,RAX
00004ed7(5): CALL 0x00004cf0
00004edc(3): TEST RAX,RAX
00004edf(2): JZ 0x00004f10
00004ee1(4): LEA RDI,[RBX + 0x8]
00004ee5(3): MOV RSI,R12
00004ee8(3): MOV RBP,RAX
00004eeb(5): CALL 0x00004db0
00004ef0(4): CMP RAX,-0x1
00004ef4(2): JZ 0x00004f10
00004ef6(1): POP RBX
00004ef7(3): MOV RDI,RBP
00004efa(2): XOR EDX,EDX
00004efc(3): MOV RSI,RAX
00004eff(1): POP RBP
00004f00(2): POP R12
00004f02(5): JMP 0x00008ad0
00004f10(1): POP RBX
00004f11(5): MOV EAX,0xffffffff
00004f16(1): POP RBP
00004f17(2): POP R12
00004f19(1): RET
00004f20(2): PUSH R12
00004f22(3): MOV RAX,RSI
00004f25(1): PUSH RBP
00004f26(4): LEA RSI,[RDI + 0x10]
00004f2a(1): PUSH RBX
00004f2b(3): MOV RBX,RDI
00004f2e(3): MOV RDI,qword ptr [RDI]
00004f31(3): MOV R12,RDX
00004f34(3): MOV RDX,RAX
00004f37(5): CALL 0x00004cf0
00004f3c(3): TEST RAX,RAX
00004f3f(2): JZ 0x00004f70
00004f41(4): LEA RDI,[RBX + 0x8]
00004f45(3): MOV RSI,R12
00004f48(3): MOV RBP,RAX
00004f4b(5): CALL 0x00004db0
00004f50(4): CMP RAX,-0x1
00004f54(2): JZ 0x00004f70
00004f56(3): MOV RSI,RAX
00004f59(3): MOV RDI,RBP
00004f5c(5): CALL 0x000082f0
00004f61(3): TEST RAX,RAX
00004f64(3): SETNZ AL
00004f67(3): MOVZX EAX,AL
00004f6a(1): POP RBX
00004f6b(1): POP RBP
00004f6c(2): POP R12
00004f6e(1): RET
00004f70(5): MOV EAX,0xffffffff
00004f75(2): JMP 0x00004f6a
00004f80(2): JMP qword ptr [RCX]
00004f90(5): JMP 0x00002a10
00004fa0(4): SUB RSP,0x8
00004fa4(5): CALL 0x00009f40
00004fa9(2): TEST EAX,EAX
00004fab(3): SETZ AL
00004fae(4): ADD RSP,0x8
00004fb2(1): RET
00004fc0(4): SUB RSP,0x8
00004fc4(5): CALL 0x000026d0
00004fc9(2): TEST EAX,EAX
00004fcb(3): SETZ AL
00004fce(4): ADD RSP,0x8
00004fd2(1): RET
00004fe0(5): JMP 0x00008500
00004ff0(2): MOV EAX,EDX
00004ff2(3): AND EAX,0x10
00004ff5(3): AND EDX,0x8
00004ff8(2): JNZ 0x00005008
00004ffa(2): TEST EAX,EAX
00004ffc(2): JZ 0x00005050
00004ffe(5): JMP 0x00009f40
00005008(2): PUSH R12
0000500a(1): PUSH RBP
0000500b(3): MOV RBP,RDI
0000500e(1): PUSH RBX
0000500f(3): MOV RBX,RSI
00005012(4): SUB RSP,0x10
00005016(2): TEST EAX,EAX
00005018(2): JNZ 0x00005058
0000501a(5): CALL 0x00002530
0000501f(3): MOV RSI,RBX
00005022(3): MOV RDX,RAX
00005025(3): MOV RDI,RBP
00005028(3): MOV R12,RAX
0000502b(5): CALL 0x00002420
00005030(2): TEST EAX,EAX
00005032(2): JNZ 0x0000503f
00005034(5): MOVSX EDX,byte ptr [RBX + R12*0x1]
00005039(3): CMP EDX,0x2f
0000503c(3): CMOVNZ EAX,EDX
0000503f(4): ADD RSP,0x10
00005043(1): POP RBX
00005044(1): POP RBP
00005045(2): POP R12
00005047(1): RET
00005050(5): JMP 0x000026d0
00005058(3): MOV RDI,RSI
0000505b(5): CALL 0x0000cc10
00005060(3): MOV R12,RAX
00005063(3): MOV RDI,RAX
00005066(2): JMP 0x00005089
00005070(3): MOV byte ptr [RAX],0x0
00005073(3): MOV RSI,R12
00005076(3): MOV RDI,RBP
00005079(5): CALL 0x00009f40
0000507e(2): TEST EAX,EAX
00005080(2): JLE 0x000050a6
00005082(4): LEA RDI,[RBX + 0x1]
00005086(3): MOV byte ptr [RBX],0x2f
00005089(5): MOV ESI,0x2f
0000508e(5): CALL 0x000025a0
00005093(3): TEST RAX,RAX
00005096(3): MOV RBX,RAX
00005099(2): JNZ 0x00005070
0000509b(3): MOV RSI,R12
0000509e(3): MOV RDI,RBP
000050a1(5): CALL 0x00009f40
000050a6(3): MOV RDI,R12
000050a9(4): MOV dword ptr [RSP + 0xc],EAX
000050ad(5): CALL 0x00002a10
000050b2(4): MOV EAX,dword ptr [RSP + 0xc]
000050b6(4): ADD RSP,0x10
000050ba(1): POP RBX
000050bb(1): POP RBP
000050bc(2): POP R12
000050be(1): RET
000050c0(2): PUSH R15
000050c2(2): PUSH R14
000050c4(3): XOR R14D,R14D
000050c7(2): PUSH R13
000050c9(2): PUSH R12
000050cb(7): LEA R12,[0x21a40]
000050d2(1): PUSH RBP
000050d3(1): PUSH RBX
000050d4(3): MOV RBX,RSI
000050d7(4): SUB RSP,0x68
000050db(5): LEA RBP,[RSP + 0x10]
000050e0(5): MOV qword ptr [RSP + 0x20],RDI
000050e5(5): MOV byte ptr [RSP + 0x10],0x0
000050ea(9): MOV RAX,qword ptr FS:[0x28]
000050f3(5): MOV qword ptr [RSP + 0x58],RAX
000050f8(2): XOR EAX,EAX
000050fa(4): LEA RAX,[RBP + 0x4]
000050fe(9): MOV qword ptr [RSP + 0x14],0x0
00005107(5): MOV byte ptr [RSP + 0x1c],0x0
0000510c(5): MOV qword ptr [RSP + 0x8],RAX
00005111(2): JMP 0x00005146
00005118(3): MOV EDI,R13D
0000511b(5): CALL 0x000028e0
00005120(3): MOV RDX,R14
00005123(2): CDQE
00005125(5): ADD R15,qword ptr [RSP + 0x28]
0000512a(4): SHL RDX,0x5
0000512e(5): MOV byte ptr [RSP + 0x1c],0x0
00005133(3): SUB RDX,R14
00005136(3): ADD RAX,RDX
00005139(2): XOR EDX,EDX
0000513b(3): DIV RBX
0000513e(5): MOV qword ptr [RSP + 0x20],R15
00005143(3): MOV R14,RDX
00005146(5): CMP byte ptr [RSP + 0x10],0x0
0000514b(2): JNZ 0x000051b7
0000514d(5): MOV RCX,qword ptr [RSP + 0x20]
00005152(3): MOVZX EDX,byte ptr [RCX]
00005155(2): MOV EAX,EDX
00005157(3): SHR AL,0x5
0000515a(3): AND EAX,0x7
0000515d(4): MOV EAX,dword ptr [R12 + RAX*0x4]
00005161(3): BT EAX,EDX
00005164(2): JNC 0x000051a0
00005166(9): MOV qword ptr [RSP + 0x28],0x1
0000516f(4): MOVSX R13D,byte ptr [RCX]
00005173(5): MOV byte ptr [RSP + 0x30],0x1
00005178(5): MOV byte ptr [RSP + 0x1c],0x1
0000517d(5): MOV dword ptr [RSP + 0x34],R13D
00005182(3): TEST R13D,R13D
00005185(6): JZ 0x00005250
0000518b(5): CMP byte ptr [RSP + 0x30],0x0
00005190(5): MOV R15,qword ptr [RSP + 0x20]
00005195(2): JNZ 0x00005118
00005197(4): MOVSX EAX,byte ptr [R15]
0000519b(2): JMP 0x00005120
000051a0(5): MOV RDI,qword ptr [RSP + 0x8]
000051a5(5): CALL 0x00002990
000051aa(2): TEST EAX,EAX
000051ac(6): JZ 0x000052e2
000051b2(5): MOV byte ptr [RSP + 0x10],0x1
000051b7(5): CALL 0x00002520
000051bc(5): MOV R15,qword ptr [RSP + 0x20]
000051c1(3): MOV RSI,RAX
000051c4(3): MOV RDI,R15
000051c7(5): CALL 0x0000c380
000051cc(4): LEA RCX,[RBP + 0x4]
000051d0(4): LEA RDI,[RBP + 0x24]
000051d4(3): MOV RDX,RAX
000051d7(3): MOV RSI,R15
000051da(5): CALL 0x000101e0
000051df(4): CMP RAX,-0x1
000051e3(5): MOV qword ptr [RSP + 0x28],RAX
000051e8(6): JZ 0x00005280
000051ee(4): CMP RAX,-0x2
000051f2(6): JZ 0x000052a0
000051f8(3): TEST RAX,RAX
000051fb(6): JNZ 0x000052d8
00005201(5): MOV RAX,qword ptr [RSP + 0x20]
00005206(9): MOV qword ptr [RSP + 0x28],0x1
0000520f(3): CMP byte ptr [RAX],0x0
00005212(6): JNZ 0x00005320
00005218(5): MOV R13D,dword ptr [RSP + 0x34]
0000521d(3): TEST R13D,R13D
00005220(6): JNZ 0x00005301
00005226(4): LEA RDI,[RBP + 0x4]
0000522a(5): MOV byte ptr [RSP + 0x30],0x1
0000522f(5): CALL 0x00002990
00005234(2): TEST EAX,EAX
00005236(6): JZ 0x000052c8
0000523c(3): TEST R13D,R13D
0000523f(5): MOV byte ptr [RSP + 0x10],0x0
00005244(5): MOV byte ptr [RSP + 0x1c],0x1
00005249(6): JNZ 0x0000518b
0000524f(1): NOP
00005250(5): MOV RSI,qword ptr [RSP + 0x58]
00005255(9): XOR RSI,qword ptr FS:[0x28]
0000525e(3): MOV RAX,R14
00005261(6): JNZ 0x0000533f
00005267(4): ADD RSP,0x68
0000526b(1): POP RBX
0000526c(1): POP RBP
0000526d(2): POP R12
0000526f(2): POP R13
00005271(2): POP R14
00005273(2): POP R15
00005275(1): RET
00005280(9): MOV qword ptr [RSP + 0x28],0x1
00005289(5): MOV byte ptr [RSP + 0x30],0x0
0000528e(5): MOV R13D,dword ptr [RSP + 0x34]
00005293(5): MOV byte ptr [RSP + 0x1c],0x1
00005298(5): JMP 0x0000518b
000052a0(5): MOV RDI,qword ptr [RSP + 0x20]
000052a5(5): CALL 0x00002530
000052aa(5): MOV byte ptr [RSP + 0x30],0x0
000052af(5): MOV qword ptr [RSP + 0x28],RAX
000052b4(5): MOV R13D,dword ptr [RSP + 0x34]
000052b9(5): MOV byte ptr [RSP + 0x1c],0x1
000052be(5): JMP 0x0000518b
000052c8(5): MOV byte ptr [RSP + 0x1c],0x1
000052cd(5): JMP 0x00005182
000052d8(5): MOV R13D,dword ptr [RSP + 0x34]
000052dd(5): JMP 0x00005226
000052e2(7): LEA RCX,[0x21710]
000052e9(7): LEA RSI,[0x214a8]
000052f0(7): LEA RDI,[0x214c8]
000052f7(5): MOV EDX,0x96
000052fc(5): CALL 0x00002600
00005301(7): LEA RCX,[0x21710]
00005308(7): LEA RSI,[0x214a8]
0000530f(7): LEA RDI,[0x214f6]
00005316(5): MOV EDX,0xb3
0000531b(5): CALL 0x00002600
00005320(7): LEA RCX,[0x21710]
00005327(7): LEA RSI,[0x214a8]
0000532e(7): LEA RDI,[0x214df]
00005335(5): MOV EDX,0xb2
0000533a(5): CALL 0x00002600
0000533f(5): CALL 0x00002560
00005344(2): NOP
00005346(10): NOP word ptr CS:[RAX + RAX*0x1]
00005350(1): PUSH RBP
00005351(1): PUSH RBX
00005352(3): MOV RBX,RDI
00005355(5): MOV EDI,0x10
0000535a(3): MOV RBP,RSI
0000535d(4): SUB RSP,0x8
00005361(5): CALL 0x0000c9e0
00005366(4): MOV RDX,qword ptr [RBX + 0x8]
0000536a(4): MOV qword ptr [RAX + 0x8],RBP
0000536e(4): MOV qword ptr [RBX + 0x8],RAX
00005372(3): MOV qword ptr [RAX],RDX
00005375(4): ADD RSP,0x8
00005379(1): POP RBX
0000537a(1): POP RBP
0000537b(1): RET
00005380(3): MOVZX EAX,byte ptr [RDI]
00005383(3): MOV R9D,ESI
00005386(3): MOV R8D,ESI
00005389(7): LEA RDX,[0x21510]
00005390(4): AND R9D,0x20
00005394(7): AND R8D,0x8000000
0000539b(3): AND ESI,0x2
0000539e(2): CMP AL,0x7d
000053a0(4): LEA RCX,[RDI + 0x1]
000053a4(2): JA 0x000053c8
000053a6(4): MOVSXD RAX,dword ptr [RDX + RAX*0x4]
000053aa(3): ADD RAX,RDX
000053ad(2): JMP RAX
000053b0(2): XOR EAX,EAX
000053b2(1): RET
000053b8(3): TEST R8D,R8D
000053bb(2): JZ 0x000053c8
000053bd(5): MOV EAX,0x1
000053c2(1): RET
000053c8(4): MOVZX EAX,byte ptr [RDI + 0x1]
000053cc(3): MOV RDI,RCX
000053cf(2): JMP 0x0000539e
000053d8(3): TEST R8D,R8D
000053db(2): JNZ 0x000053c8
000053dd(2): TEST ESI,ESI
000053df(4): LEA RAX,[RDI + 0x2]
000053e3(2): JNZ 0x000053ed
000053e5(4): CMP byte ptr [RDI + 0x1],0x0
000053e9(4): CMOVNZ RCX,RAX
000053ed(3): MOVZX EAX,byte ptr [RCX]
000053f0(3): MOV RDI,RCX
000053f3(2): JMP 0x0000539e
000053f8(3): TEST R9D,R9D
000053fb(2): JZ 0x000053c8
000053fd(4): MOVZX EAX,byte ptr [RDI + 0x1]
00005401(2): CMP AL,0x28
00005403(2): JZ 0x000053bd
00005405(3): MOV RDI,RCX
00005408(2): JMP 0x0000539e
00005410(5): MOV EDI,0x10
00005415(5): JMP 0x0000cb90
00005420(2): PUSH R14
00005422(2): PUSH R13
00005424(3): MOV R14,RDI
00005427(2): PUSH R12
00005429(1): PUSH RBP
0000542a(1): PUSH RBX
0000542b(3): MOV RBX,qword ptr [RDI]
0000542e(3): TEST RBX,RBX
00005431(2): JZ 0x000054aa
00005433(5): NOP dword ptr [RAX + RAX*0x1]
00005438(3): MOV EAX,dword ptr [RBX + 0x8]
0000543b(3): MOV R13,qword ptr [RBX]
0000543e(2): TEST EAX,EAX
00005440(6): JZ 0x000054e8
00005446(3): CMP EAX,0x1
00005449(2): JNZ 0x0000549a
0000544b(5): CMP qword ptr [RBX + 0x20],0x0
00005450(4): MOV RDI,qword ptr [RBX + 0x10]
00005454(2): JZ 0x00005495
00005456(3): XOR R12D,R12D
00005459(2): XOR EBP,EBP
0000545b(2): JMP 0x0000546e
00005460(4): ADD RBP,0x1
00005464(4): ADD R12,0x48
00005468(4): CMP RBP,qword ptr [RBX + 0x20]
0000546c(2): JNC 0x00005495
0000546e(4): LEA RAX,[RDI + R12*0x1]
00005472(6): TEST dword ptr [RAX],0x8000000
00005478(2): JZ 0x00005460
0000547a(4): LEA RDI,[RAX + 0x8]
0000547e(4): ADD RBP,0x1
00005482(4): ADD R12,0x48
00005486(5): CALL 0x0001ebe0
0000548b(4): CMP RBP,qword ptr [RBX + 0x20]
0000548f(4): MOV RDI,qword ptr [RBX + 0x10]
00005493(2): JC 0x0000546e
00005495(5): CALL 0x00002a10
0000549a(3): MOV RDI,RBX
0000549d(3): MOV RBX,R13
000054a0(5): CALL 0x00002a10
000054a5(3): TEST R13,R13
000054a8(2): JNZ 0x00005438
000054aa(4): MOV RBX,qword ptr [R14 + 0x8]
000054ae(3): TEST RBX,RBX
000054b1(2): JZ 0x000054d4
000054b3(5): NOP dword ptr [RAX + RAX*0x1]
000054b8(4): MOV RDI,qword ptr [RBX + 0x8]
000054bc(3): MOV RBP,qword ptr [RBX]
000054bf(5): CALL 0x00002a10
000054c4(3): MOV RDI,RBX
000054c7(3): MOV RBX,RBP
000054ca(5): CALL 0x00002a10
000054cf(3): TEST RBP,RBP
000054d2(2): JNZ 0x000054b8
000054d4(1): POP RBX
000054d5(3): MOV RDI,R14
000054d8(1): POP RBP
000054d9(2): POP R12
000054db(2): POP R13
000054dd(2): POP R14
000054df(5): JMP 0x00002a10
000054e8(4): MOV RDI,qword ptr [RBX + 0x10]
000054ec(5): CALL 0x000087b0
000054f1(3): MOV RDI,RBX
000054f4(3): MOV RBX,R13
000054f7(5): CALL 0x00002a10
000054fc(3): TEST R13,R13
000054ff(6): JNZ 0x00005438
00005505(2): JMP 0x000054aa
00005510(2): PUSH R14
00005512(2): PUSH R13
00005514(3): MOV R14,RDI
00005517(2): PUSH R12
00005519(3): MOV R12D,EDX
0000551c(6): AND EDX,0x10000000
00005522(1): PUSH RBP
00005523(7): LEA R13,[0x4ff0]
0000552a(1): PUSH RBX
0000552b(3): MOV RBX,RSI
0000552e(2): JZ 0x00005537
00005530(7): MOV R13,qword ptr [0x00227fd8]
00005537(3): MOV EDX,R12D
0000553a(3): MOV RSI,RBX
0000553d(3): MOV RDI,R14
00005540(3): CALL R13
00005543(2): TEST EAX,EAX
00005545(3): SETZ CL
00005548(7): TEST R12D,0x40000000
0000554f(2): JNZ 0x00005578
00005551(3): MOVZX EDX,byte ptr [RBX]
00005554(2): TEST DL,DL
00005556(2): JZ 0x00005578
00005558(2): TEST EAX,EAX
0000555a(2): JZ 0x000055b7
0000555c(4): NOP dword ptr [RAX]
00005560(3): CMP DL,0x2f
00005563(4): LEA RBP,[RBX + 0x1]
00005567(4): MOVZX EAX,byte ptr [RBX + 0x1]
0000556b(2): JZ 0x00005598
0000556d(2): TEST AL,AL
0000556f(2): MOV EDX,EAX
00005571(3): MOV RBX,RBP
00005574(2): JNZ 0x00005560
00005576(2): XOR ECX,ECX
00005578(1): POP RBX
00005579(2): MOV EAX,ECX
0000557b(1): POP RBP
0000557c(2): POP R12
0000557e(2): POP R13
00005580(2): POP R14
00005582(1): RET
00005588(4): MOVZX EAX,byte ptr [RBP + 0x1]
0000558c(3): MOV RBX,RBP
0000558f(4): ADD RBP,0x1
00005593(5): NOP dword ptr [RAX + RAX*0x1]
00005598(2): CMP AL,0x2f
0000559a(2): JZ 0x00005588
0000559c(3): MOV EDX,R12D
0000559f(3): MOV RSI,RBP
000055a2(3): MOV RDI,R14
000055a5(3): CALL R13
000055a8(4): MOVZX EDX,byte ptr [RBX + 0x1]
000055ac(2): TEST DL,DL
000055ae(2): JZ 0x000055d0
000055b0(2): TEST EAX,EAX
000055b2(3): MOV RBX,RBP
000055b5(2): JNZ 0x00005560
000055b7(5): MOV ECX,0x1
000055bc(1): POP RBX
000055bd(2): MOV EAX,ECX
000055bf(1): POP RBP
000055c0(2): POP R12
000055c2(2): POP R13
000055c4(2): POP R14
000055c6(1): RET
000055d0(2): TEST EAX,EAX
000055d2(3): SETZ CL
000055d5(2): JMP 0x00005578
000055e0(2): PUSH R15
000055e2(2): PUSH R14
000055e4(2): XOR EAX,EAX
000055e6(2): PUSH R13
000055e8(2): PUSH R12
000055ea(1): PUSH RBP
000055eb(1): PUSH RBX
000055ec(4): SUB RSP,0x18
000055f0(3): MOV R14,qword ptr [RDI]
000055f3(3): TEST R14,R14
000055f6(6): JZ 0x0000568b
000055fc(4): MOV EAX,dword ptr [R14 + 0x8]
00005600(2): XOR EBP,EBP
00005602(5): MOV qword ptr [RSP + 0x8],RSI
00005607(2): TEST EAX,EAX
00005609(6): JNZ 0x000056eb
0000560f(1): NOP
00005610(3): TEST RBP,RBP
00005613(6): JZ 0x00005750
00005619(4): MOV R15D,dword ptr [R14 + 0xc]
0000561d(4): MOV R12,qword ptr [R14 + 0x10]
00005621(5): MOV RBX,qword ptr [RSP + 0x8]
00005626(3): MOV R13D,R15D
00005629(4): AND R13D,0x8
0000562d(3): MOV RSI,RBX
00005630(3): MOV RDI,RBP
00005633(5): CALL 0x00002450
00005638(3): MOV RSI,RBP
0000563b(3): MOV RDI,R12
0000563e(5): CALL 0x000082f0
00005643(3): TEST RAX,RAX
00005646(2): JNZ 0x00005672
00005648(3): TEST R13D,R13D
0000564b(2): JZ 0x000056a0
0000564d(5): MOV ESI,0x2f
00005652(3): MOV RDI,RBP
00005655(5): CALL 0x000025d0
0000565a(3): TEST RAX,RAX
0000565d(2): JZ 0x000056a0
0000565f(3): MOV byte ptr [RAX],0x0
00005662(3): MOV RSI,RBP
00005665(3): MOV RDI,R12
00005668(5): CALL 0x000082f0
0000566d(3): TEST RAX,RAX
00005670(2): JZ 0x00005648
00005672(2): XOR EBX,EBX
00005674(3): MOV RDI,RBP
00005677(5): CALL 0x00002a10
0000567c(4): MOV EAX,dword ptr [R14 + 0xc]
00005680(3): SHR EAX,0x1d
00005683(3): XOR EAX,0x1
00005686(3): AND EAX,0x1
00005689(2): XOR EAX,EBX
0000568b(4): ADD RSP,0x18
0000568f(1): POP RBX
00005690(1): POP RBP
00005691(2): POP R12
00005693(2): POP R13
00005695(2): POP R14
00005697(2): POP R15
00005699(1): RET
000056a0(7): TEST R15D,0x40000000
000056a7(2): JNZ 0x000056d0
000056a9(5): MOV ESI,0x2f
000056ae(3): MOV RDI,RBX
000056b1(5): CALL 0x000025a0
000056b6(3): TEST RAX,RAX
000056b9(2): JZ 0x000056d0
000056bb(4): ADD RAX,0x1
000056bf(3): MOV RBX,RAX
000056c2(6): JNZ 0x0000562d
000056c8(8): NOP dword ptr [RAX + RAX*0x1]
000056d0(3): MOV RAX,qword ptr [R14]
000056d3(3): TEST RAX,RAX
000056d6(6): JZ 0x0000576b
000056dc(3): MOV R14,RAX
000056df(4): MOV EAX,dword ptr [R14 + 0x8]
000056e3(2): TEST EAX,EAX
000056e5(6): JZ 0x00005610
000056eb(4): MOV R12,qword ptr [R14 + 0x20]
000056ef(4): MOV RBX,qword ptr [R14 + 0x10]
000056f3(3): TEST R12,R12
000056f6(2): JZ 0x000056d0
000056f8(4): ADD RBX,0x8
000056fc(3): XOR R13D,R13D
000056ff(2): JMP 0x0000572a
00005708(5): MOV RSI,qword ptr [RSP + 0x8]
0000570d(3): MOV RDI,qword ptr [RBX]
00005710(5): CALL 0x00005510
00005715(2): TEST AL,AL
00005717(6): JNZ 0x00005672
0000571d(4): ADD R13,0x1
00005721(4): ADD RBX,0x48
00005725(3): CMP R12,R13
00005728(2): JZ 0x000056d0
0000572a(3): MOV EDX,dword ptr [RBX + -0x8]
0000572d(6): TEST EDX,0x8000000
00005733(2): JZ 0x00005708
00005735(5): MOV RSI,qword ptr [RSP + 0x8]
0000573a(3): XOR R8D,R8D
0000573d(2): XOR ECX,ECX
0000573f(2): XOR EDX,EDX
00005741(3): MOV RDI,RBX
00005744(5): CALL 0x0001ec30
00005749(2): TEST EAX,EAX
0000574b(3): SETZ AL
0000574e(2): JMP 0x00005715
00005750(5): MOV RDI,qword ptr [RSP + 0x8]
00005755(5): CALL 0x00002530
0000575a(4): LEA RDI,[RAX + 0x1]
0000575e(5): CALL 0x0000c9e0
00005763(3): MOV RBP,RAX
00005766(5): JMP 0x00005619
0000576b(5): MOV EBX,0x1
00005770(5): JMP 0x00005674
00005780(2): PUSH R15
00005782(2): PUSH R14
00005784(2): PUSH R13
00005786(2): PUSH R12
00005788(3): MOV R13,RSI
0000578b(1): PUSH RBP
0000578c(1): PUSH RBX
0000578d(2): MOV EBP,EDX
0000578f(3): MOV R12,RDI
00005792(4): SUB RSP,0x8
00005796(6): AND EDX,0x18000000
0000579c(3): MOV RBX,qword ptr [RDI]
0000579f(6): JZ 0x00005880
000057a5(2): MOV ESI,EBP
000057a7(3): MOV RDI,R13
000057aa(5): CALL 0x00005380
000057af(2): TEST AL,AL
000057b1(6): JZ 0x00005880
000057b7(3): TEST RBX,RBX
000057ba(2): JZ 0x000057c6
000057bc(4): CMP dword ptr [RBX + 0x8],0x1
000057c0(6): JZ 0x000059e8
000057c6(5): MOV EDI,0x28
000057cb(5): CALL 0x0000cb90
000057d0(3): MOV RBX,RAX
000057d3(7): MOV dword ptr [RAX + 0x8],0x1
000057da(3): MOV dword ptr [RAX + 0xc],EBP
000057dd(4): MOV RAX,qword ptr [R12]
000057e1(4): MOV qword ptr [R12],RBX
000057e5(3): MOV qword ptr [RBX],RAX
000057e8(4): MOV RCX,qword ptr [RBX + 0x20]
000057ec(4): CMP RCX,qword ptr [RBX + 0x18]
000057f0(4): MOV RDI,qword ptr [RBX + 0x10]
000057f4(6): JZ 0x00005a00
000057fa(4): LEA RAX,[RCX + RCX*0x8]
000057fe(4): LEA R15,[RCX + 0x1]
00005802(6): TEST EBP,0x8000000
00005808(4): LEA R14,[RDI + RAX*0x8]
0000580c(4): MOV qword ptr [RBX + 0x20],R15
00005810(3): MOV dword ptr [R14],EBP
00005813(6): JZ 0x000059a0
00005819(3): MOV R12D,EBP
0000581c(4): SAR R12D,0x3
00005820(4): AND R12D,0x2
00005824(4): OR R12D,0x9
00005828(3): AND EBP,0x8
0000582b(6): JZ 0x00005a70
00005831(3): MOV RDI,R13
00005834(5): CALL 0x00002530
00005839(3): TEST RAX,RAX
0000583c(2): JZ 0x00005868
0000583e(6): CMP byte ptr [R13 + RAX*0x1 + -0x1],0x2f
00005844(4): LEA RBP,[RAX + -0x1]
00005848(2): JZ 0x00005863
0000584a(5): JMP 0x00005a92
00005850(6): CMP byte ptr [R13 + RBP*0x1 + -0x1],0x2f
00005856(4): LEA RAX,[RBP + -0x1]
0000585a(6): JNZ 0x00005a98
00005860(3): MOV RBP,RAX
00005863(3): TEST RBP,RBP
00005866(2): JNZ 0x00005850
00005868(4): LEA RAX,[R15 + -0x1]
0000586c(4): MOV qword ptr [RBX + 0x20],RAX
00005870(4): ADD RSP,0x8
00005874(1): POP RBX
00005875(1): POP RBP
00005876(2): POP R12
00005878(2): POP R13
0000587a(2): POP R14
0000587c(2): POP R15
0000587e(1): RET
00005880(3): TEST RBX,RBX
00005883(2): JZ 0x00005890
00005885(3): MOV EDX,dword ptr [RBX + 0x8]
00005888(2): TEST EDX,EDX
0000588a(6): JZ 0x00005938
00005890(5): MOV EDI,0x28
00005895(5): CALL 0x0000cb90
0000589a(7): LEA RDX,[0x4fa0]
000058a1(3): MOV RBX,RAX
000058a4(7): MOV dword ptr [RAX + 0x8],0x0
000058ab(3): MOV dword ptr [RAX + 0xc],EBP
000058ae(7): LEA RCX,[0x4fc0]
000058b5(2): MOV EAX,EBP
000058b7(3): AND EAX,0x10
000058ba(7): LEA RAX,[0x50c0]
000058c1(7): LEA R8,[0x4f90]
000058c8(4): CMOVNZ RCX,RDX
000058cc(7): LEA RDX,[0x4fe0]
000058d3(4): CMOVNZ RDX,RAX
000058d7(2): XOR ESI,ESI
000058d9(2): XOR EDI,EDI
000058db(5): CALL 0x00008560
000058e0(4): MOV qword ptr [RBX + 0x10],RAX
000058e4(4): MOV RAX,qword ptr [R12]
000058e8(4): MOV qword ptr [R12],RBX
000058ec(3): MOV qword ptr [RBX],RAX
000058ef(3): MOV RDI,R13
000058f2(6): AND EBP,0x10000002
000058f8(5): CALL 0x0000cc10
000058fd(6): CMP EBP,0x10000000
00005903(3): MOV R12,RAX
00005906(2): JZ 0x00005950
00005908(4): MOV RDI,qword ptr [RBX + 0x10]
0000590c(3): MOV RSI,R12
0000590f(5): CALL 0x00008d60
00005914(3): CMP R12,RAX
00005917(6): JZ 0x00005870
0000591d(4): ADD RSP,0x8
00005921(3): MOV RDI,R12
00005924(1): POP RBX
00005925(1): POP RBP
00005926(2): POP R12
00005928(2): POP R13
0000592a(2): POP R14
0000592c(2): POP R15
0000592e(5): JMP 0x00002a10
00005938(3): MOV EAX,dword ptr [RBX + 0xc]
0000593b(2): XOR EAX,EBP
0000593d(5): TEST EAX,0x60000018
00005942(2): JZ 0x000058ef
00005944(5): JMP 0x00005890
00005950(3): MOV RDX,RAX
00005953(3): MOV RCX,RAX
00005956(2): JMP 0x0000596e
00005960(4): ADD RCX,0x1
00005964(2): TEST AL,AL
00005966(3): MOV byte ptr [RCX + -0x1],AL
00005969(2): JZ 0x00005908
0000596b(3): MOV RDX,RSI
0000596e(3): MOVZX EAX,byte ptr [RDX]
00005971(4): LEA RSI,[RDX + 0x1]
00005975(2): CMP AL,0x5c
00005977(2): JNZ 0x00005960
00005979(4): CMP byte ptr [RDX + 0x1],0x0
0000597d(2): JZ 0x00005990
0000597f(4): MOVZX EAX,byte ptr [RDX + 0x1]
00005983(4): LEA RSI,[RDX + 0x2]
00005987(2): JMP 0x00005960
00005990(4): ADD RCX,0x1
00005994(4): MOV byte ptr [RCX + -0x1],0x5c
00005998(2): JMP 0x0000596b
000059a0(6): AND EBP,0x4000000
000059a6(2): JZ 0x000059ce
000059a8(3): MOV RDI,R13
000059ab(5): CALL 0x0000cc10
000059b0(5): MOV EDI,0x10
000059b5(3): MOV R13,RAX
000059b8(5): CALL 0x0000c9e0
000059bd(5): MOV RDX,qword ptr [R12 + 0x8]
000059c2(4): MOV qword ptr [RAX + 0x8],R13
000059c6(5): MOV qword ptr [R12 + 0x8],RAX
000059cb(3): MOV qword ptr [RAX],RDX
000059ce(4): MOV qword ptr [R14 + 0x8],R13
000059d2(4): ADD RSP,0x8
000059d6(1): POP RBX
000059d7(1): POP RBP
000059d8(2): POP R12
000059da(2): POP R13
000059dc(2): POP R14
000059de(2): POP R15
000059e0(1): RET
000059e8(3): MOV EAX,dword ptr [RBX + 0xc]
000059eb(2): XOR EAX,EBP
000059ed(5): TEST EAX,0x20000000
000059f2(6): JZ 0x000057e8
000059f8(5): JMP 0x000057c6
00005a00(3): TEST RDI,RDI
00005a03(2): JZ 0x00005a40
00005a05(10): MOV RAX,0x12f684bda12f683
00005a0f(3): CMP RCX,RAX
00005a12(2): JA 0x00005a69
00005a14(3): MOV RAX,RCX
00005a17(3): SHR RAX,1
00005a1a(5): LEA RCX,[RCX + RAX*0x1 + 0x1]
00005a1f(4): LEA RSI,[RCX + RCX*0x8]
00005a23(4): MOV qword ptr [RBX + 0x18],RCX
00005a27(4): SHL RSI,0x3
00005a2b(5): CALL 0x0000ca40
00005a30(4): MOV RCX,qword ptr [RBX + 0x20]
00005a34(3): MOV RDI,RAX
00005a37(4): MOV qword ptr [RBX + 0x10],RAX
00005a3b(5): JMP 0x000057fa
00005a40(3): TEST RCX,RCX
00005a43(5): MOV EAX,0x1
00005a48(5): MOV EDX,0x48
00005a4d(4): CMOVZ RCX,RAX
00005a51(3): MOV RAX,RDX
00005a54(2): XOR ESI,ESI
00005a56(3): MUL RCX
00005a59(6): JO 0x00005ae4
00005a5f(3): TEST RAX,RAX
00005a62(2): JS 0x00005a69
00005a64(3): TEST RSI,RSI
00005a67(2): JZ 0x00005a1f
00005a69(5): CALL 0x0000cc30
00005a6e(2): NOP
00005a70(4): LEA RDI,[R14 + 0x8]
00005a74(3): MOV EDX,R12D
00005a77(3): MOV RSI,R13
00005a7a(5): CALL 0x0001ea40
00005a7f(2): MOV EBP,EAX
00005a81(2): TEST EBP,EBP
00005a83(6): JZ 0x00005870
00005a89(4): MOV R15,qword ptr [RBX + 0x20]
00005a8d(5): JMP 0x00005868
00005a92(3): MOV RBP,RAX
00005a95(3): NOP dword ptr [RAX]
00005a98(4): LEA RDI,[RBP + 0x7]
00005a9c(5): CALL 0x0000c9e0
00005aa1(3): MOV RDX,RBP
00005aa4(3): MOV R15,RAX
00005aa7(3): MOV RSI,R13
00005aaa(3): MOV RDI,RAX
00005aad(3): ADD RBP,R15
00005ab0(5): CALL 0x00002710
00005ab5(4): LEA RDI,[R14 + 0x8]
00005ab9(5): MOV EAX,0x3f29
00005abe(7): MOV dword ptr [RBP],0x2a2e2f28
00005ac5(4): MOV word ptr [RBP + 0x4],AX
00005ac9(4): MOV byte ptr [RBP + 0x6],0x0
00005acd(3): MOV EDX,R12D
00005ad0(3): MOV RSI,R15
00005ad3(5): CALL 0x0001ea40
00005ad8(3): MOV RDI,R15
00005adb(2): MOV EBP,EAX
00005add(5): CALL 0x00002a10
00005ae2(2): JMP 0x00005a81
00005ae4(5): MOV ESI,0x1
00005ae9(5): JMP 0x00005a5f
00005af0(2): PUSH R15
00005af2(2): PUSH R14
00005af4(3): MOV R15,RDX
00005af7(2): PUSH R13
00005af9(2): PUSH R12
00005afb(3): MOV R13,RSI
00005afe(1): PUSH RBP
00005aff(1): PUSH RBX
00005b00(3): MOV EBP,R8D
00005b03(3): XOR R14D,R14D
00005b06(2): XOR EBX,EBX
00005b08(4): SUB RSP,0x48
00005b0c(9): MOV RAX,qword ptr FS:[0x28]
00005b15(5): MOV qword ptr [RSP + 0x38],RAX
00005b1a(2): XOR EAX,EAX
00005b1c(5): LEA RAX,[RSP + 0x30]
00005b21(5): MOV qword ptr [RSP + 0x8],RDI
00005b26(4): MOV dword ptr [RSP + 0x18],ECX
00005b2a(5): MOV dword ptr [RSP + 0x20],R8D
00005b2f(5): MOV qword ptr [RSP + 0x10],R9
00005b34(9): MOV qword ptr [RSP + 0x30],0x0
00005b3d(4): MOV qword ptr [RSP],RAX
00005b41(2): JMP 0x00005b50
00005b48(4): MOV byte ptr [RBX + R14*0x1],R12B
00005b4c(4): ADD R14,0x1
00005b50(4): MOV RAX,qword ptr [R15 + 0x8]
00005b54(4): CMP RAX,qword ptr [R15 + 0x10]
00005b58(2): JNC 0x00005b80
00005b5a(4): LEA RDX,[RAX + 0x1]
00005b5e(4): MOV qword ptr [R15 + 0x8],RDX
00005b62(4): MOVZX R12D,byte ptr [RAX]
00005b66(5): CMP qword ptr [RSP + 0x30],R14
00005b6b(2): JNZ 0x00005b48
00005b6d(4): MOV RSI,qword ptr [RSP]
00005b71(3): MOV RDI,RBX
00005b74(5): CALL 0x0000cb40
00005b79(3): MOV RBX,RAX
00005b7c(2): JMP 0x00005b48
00005b80(3): MOV RDI,R15
00005b83(5): CALL 0x000023d0
00005b88(3): CMP EAX,-0x1
00005b8b(3): MOV R12D,EAX
00005b8e(2): JNZ 0x00005b66
00005b90(3): MOV R12D,dword ptr [R15]
00005b93(5): CALL 0x00002410
00005b98(8): MOV dword ptr [RSP + 0x1c],0x0
00005ba0(5): MOV qword ptr [RSP + 0x28],RAX
00005ba5(4): AND R12D,0x20
00005ba9(3): TEST R12D,R12D
00005bac(2): JZ 0x00005bbf
00005bae(3): MOV R12D,dword ptr [RAX]
00005bb1(2): XOR EAX,EAX
00005bb3(3): TEST R12D,R12D
00005bb6(3): SETNZ AL
00005bb9(2): NEG EAX
00005bbb(4): MOV dword ptr [RSP + 0x1c],EAX
00005bbf(4): LEA RSI,[R14 + 0x1]
00005bc3(3): MOV RDI,RBX
00005bc6(5): CALL 0x0000ca40
00005bcb(3): MOV R15,RAX
00005bce(4): MOV EAX,dword ptr [RSP + 0x20]
00005bd2(3): TEST R14,R14
00005bd5(4): MOV byte ptr [R15 + R14*0x1],AL
00005bd9(6): JZ 0x00005ca0
00005bdf(2): XOR EBX,EBX
00005be1(5): CMP byte ptr [R15 + R14*0x1 + -0x1],AL
00005be6(5): MOV EDI,0x10
00005beb(3): SETNZ BL
00005bee(3): ADD RBX,R14
00005bf1(5): CALL 0x0000c9e0
00005bf6(4): MOV RCX,qword ptr [R13 + 0x8]
00005bfa(3): ADD RBX,R15
00005bfd(4): MOV qword ptr [RAX + 0x8],R15
00005c01(3): CMP R15,RBX
00005c04(4): MOV qword ptr [R13 + 0x8],RAX
00005c08(3): MOV qword ptr [RAX],RCX
00005c0b(2): JNC 0x00005c6f
00005c0d(4): MOVZX EAX,BPL
00005c11(3): MOV RSI,R15
00005c14(5): MOV qword ptr [RSP + 0x20],RAX
00005c19(2): JMP 0x00005c28
00005c20(3): CMP RBX,R14
00005c23(3): MOV R15,R14
00005c26(2): JZ 0x00005c6f
00005c28(3): CMP byte ptr [R15],BPL
00005c2b(4): LEA R14,[R15 + 0x1]
00005c2f(2): JNZ 0x00005c20
00005c31(4): MOV qword ptr [RSP],RSI
00005c35(5): CALL 0x000029f0
00005c3a(5): MOV RCX,qword ptr [RSP + 0x20]
00005c3f(3): MOV RAX,qword ptr [RAX]
00005c42(4): MOV RSI,qword ptr [RSP]
00005c46(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x20
00005c4b(2): JNZ 0x00005cc0
00005c4d(4): MOV byte ptr [R15],0x0
00005c51(5): MOV RCX,qword ptr [RSP + 0x10]
00005c56(3): MOV RDI,R13
00005c59(4): MOV EDX,dword ptr [RSP + 0x18]
00005c5d(5): MOV RAX,qword ptr [RSP + 0x8]
00005c62(2): CALL RAX
00005c64(3): CMP RBX,R14
00005c67(3): MOV RSI,R14
00005c6a(3): MOV R15,R14
00005c6d(2): JNZ 0x00005c28
00005c6f(5): MOV RAX,qword ptr [RSP + 0x28]
00005c74(5): MOV RDI,qword ptr [RSP + 0x38]
00005c79(9): XOR RDI,qword ptr FS:[0x28]
00005c82(3): MOV dword ptr [RAX],R12D
00005c85(4): MOV EAX,dword ptr [RSP + 0x1c]
00005c89(2): JNZ 0x00005cfe
00005c8b(4): ADD RSP,0x48
00005c8f(1): POP RBX
00005c90(1): POP RBP
00005c91(2): POP R12
00005c93(2): POP R13
00005c95(2): POP R14
00005c97(2): POP R15
00005c99(1): RET
00005ca0(5): MOV EDI,0x10
00005ca5(5): CALL 0x0000c9e0
00005caa(4): MOV RDX,qword ptr [R13 + 0x8]
00005cae(4): MOV qword ptr [RAX + 0x8],R15
00005cb2(4): MOV qword ptr [R13 + 0x8],RAX
00005cb6(3): MOV qword ptr [RAX],RDX
00005cb9(2): JMP 0x00005c6f
00005cc0(3): CMP R15,RSI
00005cc3(2): JZ 0x00005c64
00005cc5(5): MOVZX ECX,byte ptr [R14 + -0x2]
00005cca(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x20
00005ccf(2): JNZ 0x00005cf0
00005cd1(5): JMP 0x00005c4d
00005ce0(5): MOVZX ECX,byte ptr [R15 + -0x1]
00005ce5(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x20
00005cea(6): JZ 0x00005c4d
00005cf0(4): SUB R15,0x1
00005cf4(3): CMP R15,RSI
00005cf7(2): JNZ 0x00005ce0
00005cf9(5): JMP 0x00005c64
00005cfe(5): CALL 0x00002560
00005d03(3): NOP dword ptr [RAX]
00005d06(10): NOP word ptr CS:[RAX + RAX*0x1]
00005d10(2): PUSH R12
00005d12(1): PUSH RBP
00005d13(3): MOV R12D,R8D
00005d16(1): PUSH RBX
00005d17(3): MOV RBP,RSI
00005d1a(4): SUB RSP,0x10
00005d1e(3): CMP byte ptr [RDX],0x2d
00005d21(5): MOV qword ptr [RSP + 0x8],RDI
00005d26(2): JZ 0x00005d80
00005d28(7): LEA RSI,[0x22817]
00005d2f(3): MOV RDI,RDX
00005d32(4): MOV dword ptr [RSP + 0x4],ECX
00005d36(5): CALL 0x000028d0
00005d3b(3): TEST RAX,RAX
00005d3e(3): MOV RBX,RAX
00005d41(4): MOV ECX,dword ptr [RSP + 0x4]
00005d45(2): JZ 0x00005db0
00005d47(5): LEA R9,[RSP + 0x8]
00005d4c(7): LEA RDI,[0x4f80]
00005d53(3): MOV RSI,RBP
00005d56(4): MOVSX R8D,R12B
00005d5a(3): MOV RDX,RAX
00005d5d(5): CALL 0x00005af0
00005d62(3): MOV RDI,RBX
00005d65(2): MOV EBP,EAX
00005d67(5): CALL 0x0000dca0
00005d6c(2): TEST EAX,EAX
00005d6e(2): JNZ 0x00005db0
00005d70(4): ADD RSP,0x10
00005d74(2): MOV EAX,EBP
00005d76(1): POP RBX
00005d77(1): POP RBP
00005d78(2): POP R12
00005d7a(1): RET
00005d80(4): CMP byte ptr [RDX + 0x1],0x0
00005d84(2): JNZ 0x00005d28
00005d86(7): MOV RDX,qword ptr [0x002280b0]
00005d8d(5): LEA R9,[RSP + 0x8]
00005d92(7): LEA RDI,[0x4f80]
00005d99(4): MOVSX R8D,R8B
00005d9d(5): CALL 0x00005af0
00005da2(4): ADD RSP,0x10
00005da6(2): MOV EBP,EAX
00005da8(2): MOV EAX,EBP
00005daa(1): POP RBX
00005dab(1): POP RBP
00005dac(2): POP R12
00005dae(1): RET
00005db0(5): MOV EBP,0xffffffff
00005db5(2): JMP 0x00005d70
00005dc0(3): TEST RDX,RDX
00005dc3(2): JZ 0x00005e10
00005dc5(2): PUSH R13
00005dc7(2): PUSH R12
00005dc9(3): MOV R12,RDI
00005dcc(1): PUSH RBP
00005dcd(1): PUSH RBX
00005dce(3): MOV RBP,RDX
00005dd1(3): MOV RBX,RSI
00005dd4(4): SUB RSP,0x8
00005dd8(3): ADD RBP,RBX
00005ddb(5): CALL 0x000029e0
00005de0(3): MOV R13,RAX
00005de3(5): NOP dword ptr [RAX + RAX*0x1]
00005de8(3): MOVZX ECX,byte ptr [RBX]
00005deb(4): MOV RAX,qword ptr [R13]
00005def(3): MOV RSI,R12
00005df2(4): ADD RBX,0x1
00005df6(3): MOV EDI,dword ptr [RAX + RCX*0x4]
00005df9(5): CALL 0x00002660
00005dfe(3): CMP RBX,RBP
00005e01(2): JNZ 0x00005de8
00005e03(4): ADD RSP,0x8
00005e07(1): POP RBX
00005e08(1): POP RBP
00005e09(2): POP R12
00005e0b(2): POP R13
00005e0d(1): RET
00005e10(2): RET
00005e20(3): TEST RDX,RDX
00005e23(2): JZ 0x00005e70
00005e25(2): PUSH R13
00005e27(2): PUSH R12
00005e29(3): MOV R12,RDI
00005e2c(1): PUSH RBP
00005e2d(1): PUSH RBX
00005e2e(3): MOV RBP,RDX
00005e31(3): MOV RBX,RSI
00005e34(4): SUB RSP,0x8
00005e38(3): ADD RBP,RBX
00005e3b(5): CALL 0x000023c0
00005e40(3): MOV R13,RAX
00005e43(5): NOP dword ptr [RAX + RAX*0x1]
00005e48(3): MOVZX ECX,byte ptr [RBX]
00005e4b(4): MOV RAX,qword ptr [R13]
00005e4f(3): MOV RSI,R12
00005e52(4): ADD RBX,0x1
00005e56(3): MOV EDI,dword ptr [RAX + RCX*0x4]
00005e59(5): CALL 0x00002660
00005e5e(3): CMP RBX,RBP
00005e61(2): JNZ 0x00005e48
00005e63(4): ADD RSP,0x8
00005e67(1): POP RBX
00005e68(1): POP RBP
00005e69(2): POP R12
00005e6b(2): POP R13
00005e6d(1): RET
00005e70(2): RET
00005e80(2): PUSH R15
00005e82(2): PUSH R14
00005e84(3): MOV R10,RSI
00005e87(2): PUSH R13
00005e89(2): PUSH R12
00005e8b(3): MOV R12,RDI
00005e8e(1): PUSH RBP
00005e8f(1): PUSH RBX
00005e90(3): MOV EBP,R9D
00005e93(7): SUB RSP,0x4b8
00005e9a(4): MOV R13,qword ptr [RDX + 0x30]
00005e9e(4): MOV R14D,dword ptr [RDX + 0x8]
00005ea2(8): MOV RAX,qword ptr [0x4f0 + RSP]
00005eaa(4): MOV qword ptr [RSP],RDX
00005eae(5): MOV dword ptr [RSP + 0x24],R8D
00005eb3(4): MOV byte ptr [RSP + 0x23],CL
00005eb7(5): MOV qword ptr [RSP + 0x18],RAX
00005ebc(8): MOV RAX,qword ptr [0x4f8 + RSP]
00005ec4(5): MOV qword ptr [RSP + 0x10],RAX
00005ec9(9): MOV RAX,qword ptr FS:[0x28]
00005ed2(8): MOV qword ptr [0x4a8 + RSP],RAX
00005eda(2): XOR EAX,EAX
00005edc(7): LEA RAX,[0x21fe1]
00005ee3(3): TEST R13,R13
00005ee6(4): CMOVZ R13,RAX
00005eea(4): CMP R14D,0xc
00005eee(6): JLE 0x00006048
00005ef4(4): SUB R14D,0xc
00005ef8(4): MOVZX EAX,byte ptr [R10]
00005efc(3): XOR R15D,R15D
00005eff(2): TEST AL,AL
00005f01(2): JZ 0x00005f42
00005f03(2): CMP AL,0x25
00005f05(3): MOV RBX,R10
00005f08(5): MOV dword ptr [RSP + 0x30],R14D
00005f0d(5): MOV qword ptr [RSP + 0x28],R13
00005f12(3): MOVSXD R10,EBP
00005f15(6): JZ 0x00005fab
00005f1b(3): TEST R10D,R10D
00005f1e(6): MOV R14D,0x0
00005f24(5): MOV EAX,0x1
00005f29(4): CMOVNS R14,R10
00005f2d(3): TEST R14,R14
00005f30(4): CMOVZ R14,RAX
00005f34(3): MOV RAX,R15
00005f37(3): NOT RAX
00005f3a(3): CMP RAX,R14
00005f3d(2): JA 0x00005f70
00005f3f(3): XOR R15D,R15D
00005f42(8): MOV RDI,qword ptr [0x4a8 + RSP]
00005f4a(9): XOR RDI,qword ptr FS:[0x28]
00005f53(3): MOV RAX,R15
00005f56(6): JNZ 0x00007a78
00005f5c(7): ADD RSP,0x4b8
00005f63(1): POP RBX
00005f64(1): POP RBP
00005f65(2): POP R12
00005f67(2): POP R13
00005f69(2): POP R14
00005f6b(2): POP R15
00005f6d(1): RET
00005f70(3): TEST R12,R12
00005f73(2): JZ 0x00005f8a
00005f75(4): CMP R10D,0x1
00005f79(6): JG 0x00006160
00005f7f(3): MOVSX EDI,byte ptr [RBX]
00005f82(3): MOV RSI,R12
00005f85(5): CALL 0x00002660
00005f8a(3): ADD R15,R14
00005f8d(3): MOV RBP,RBX
00005f90(4): MOVZX EAX,byte ptr [RBP + 0x1]
00005f94(4): LEA RBX,[RBP + 0x1]
00005f98(7): MOV R10,-0x1
00005f9f(2): TEST AL,AL
00005fa1(2): JZ 0x00005f42
00005fa3(2): CMP AL,0x25
00005fa5(6): JNZ 0x00005f1b
00005fab(5): MOVZX EAX,byte ptr [RSP + 0x23]
00005fb0(3): XOR R14D,R14D
00005fb3(8): MOV dword ptr [RSP + 0x8],0x0
00005fbb(4): MOV byte ptr [RSP + 0x34],AL
00005fbf(5): MOV EAX,0x1
00005fc4(4): ADD RBX,0x1
00005fc8(4): MOVSX R11D,byte ptr [RBX]
00005fcc(4): LEA ECX,[R11 + -0x23]
00005fd0(3): MOV R13D,R11D
00005fd3(3): MOV EDI,R11D
00005fd6(3): CMP CL,0x3c
00005fd9(2): JA 0x0000600f
00005fdb(3): MOV RDX,RAX
00005fde(10): MOV RSI,0x1000000000002500
00005fe8(3): SHL RDX,CL
00005feb(3): TEST RDX,RSI
00005fee(6): JNZ 0x00006070
00005ff4(2): TEST CL,CL
00005ff6(6): JZ 0x00006080
00005ffc(10): MOV RSI,0x800000000000000
00006006(3): TEST RDX,RSI
00006009(6): JNZ 0x00006190
0000600f(4): LEA EAX,[R11 + -0x30]
00006013(3): CMP EAX,0x9
00006016(6): JBE 0x000061a0
0000601c(4): CMP R13B,0x45
00006020(2): JZ 0x00006060
00006022(4): CMP R13B,0x4f
00006026(2): JZ 0x00006060
00006028(3): XOR R11D,R11D
0000602b(4): CMP R13B,0x7a
0000602f(2): JA 0x00006090
00006031(7): LEA RSI,[0x21738]
00006038(4): MOVZX EAX,R13B
0000603c(4): MOVSXD RAX,dword ptr [RSI + RAX*0x4]
00006040(3): ADD RAX,RSI
00006043(2): JMP RAX
00006048(3): TEST R14D,R14D
0000604b(5): MOV EAX,0xc
00006050(4): CMOVZ R14D,EAX
00006054(5): JMP 0x00005ef8
00006060(4): MOVSX EDI,byte ptr [RBX + 0x1]
00006064(4): ADD RBX,0x1
00006068(3): MOV R13D,EDI
0000606b(2): JMP 0x0000602b
00006070(5): MOV dword ptr [RSP + 0x8],R11D
00006075(5): JMP 0x00005fc4
00006080(6): MOV R14D,0x1
00006086(5): JMP 0x00005fc4
0000608b(5): MOV RBX,qword ptr [RSP + 0x38]
00006090(4): LEA RAX,[RBX + -0x1]
00006094(6): MOV R13D,0x1
0000609a(3): MOV RDX,RAX
0000609d(4): LEA RAX,[RAX + -0x1]
000060a1(4): ADD R13D,0x1
000060a5(4): CMP byte ptr [RAX + 0x1],0x25
000060a9(2): JNZ 0x0000609a
000060ab(3): TEST R10D,R10D
000060ae(5): MOV EAX,0x0
000060b3(3): MOVSXD R13,R13D
000060b6(4): CMOVNS EAX,R10D
000060ba(5): MOV qword ptr [RSP + 0x38],RDX
000060bf(3): MOV R14,R13
000060c2(2): CDQE
000060c4(3): MOV RDX,R15
000060c7(3): MOV RBP,RBX
000060ca(3): CMP RAX,R13
000060cd(3): NOT RDX
000060d0(4): CMOVNC R14,RAX
000060d4(3): CMP RDX,R14
000060d7(6): JBE 0x00005f3f
000060dd(3): TEST R12,R12
000060e0(2): JZ 0x0000614e
000060e2(3): CMP R13,RAX
000060e5(2): JNC 0x00006133
000060e7(4): MOV EAX,dword ptr [RSP + 0x8]
000060eb(3): MOVSXD RBX,R10D
000060ee(3): SUB RBX,R13
000060f1(3): CMP EAX,0x30
000060f4(6): JZ 0x00007323
000060fa(3): CMP EAX,0x2b
000060fd(6): JZ 0x00007323
00006103(2): XOR EDX,EDX
00006105(3): TEST RBX,RBX
00006108(2): JZ 0x00006133
0000610a(5): MOV qword ptr [RSP + 0x8],RBP
0000610f(3): MOV RBP,RDX
00006112(6): NOP word ptr [RAX + RAX*0x1]
00006118(3): MOV RSI,R12
0000611b(5): MOV EDI,0x20
00006120(4): ADD RBP,0x1
00006124(5): CALL 0x00002660
00006129(3): CMP RBX,RBP
0000612c(2): JNZ 0x00006118
0000612e(5): MOV RBP,qword ptr [RSP + 0x8]
00006133(5): CMP byte ptr [RSP + 0x34],0x0
00006138(6): JZ 0x00007268
0000613e(5): MOV RSI,qword ptr [RSP + 0x38]
00006143(3): MOV RDX,R13
00006146(3): MOV RDI,R12
00006149(5): CALL 0x00005e20
0000614e(3): ADD R15,R14
00006151(5): JMP 0x00005f90
00006160(4): LEA R13,[R10 + -0x1]
00006164(2): XOR EBP,EBP
00006166(10): NOP word ptr CS:[RAX + RAX*0x1]
00006170(3): MOV RSI,R12
00006173(5): MOV EDI,0x20
00006178(4): ADD RBP,0x1
0000617c(5): CALL 0x00002660
00006181(3): CMP R13,RBP
00006184(2): JNZ 0x00006170
00006186(5): JMP 0x00005f7f
00006190(5): MOV byte ptr [RSP + 0x34],0x1
00006195(5): JMP 0x00005fc4
000061a0(3): XOR R10D,R10D
000061a3(5): MOVSX R11D,byte ptr [RBX + 0x1]
000061a8(7): CMP R10D,0xccccccc
000061af(4): LEA RCX,[RBX + 0x1]
000061b3(3): MOV R13D,R11D
000061b6(4): LEA EAX,[R11 + -0x30]
000061ba(2): JG 0x000061e5
000061bc(3): MOVSX EDX,byte ptr [RBX]
000061bf(2): JZ 0x000061e0
000061c1(4): LEA ESI,[R10 + R10*0x4]
000061c5(3): MOV RBX,RCX
000061c8(5): LEA R10D,[RDX + RSI*0x2 + -0x30]
000061cd(3): CMP EAX,0x9
000061d0(2): JBE 0x000061a3
000061d2(3): MOV EDI,R11D
000061d5(5): JMP 0x0000601c
000061e0(3): CMP DL,0x37
000061e3(2): JLE 0x000061c1
000061e5(3): CMP EAX,0x9
000061e8(2): JA 0x00006208
000061ea(5): MOVSX R11D,byte ptr [RBX + 0x2]
000061ef(6): MOV R10D,0x7fffffff
000061f5(4): ADD RBX,0x2
000061f9(3): MOV R13D,R11D
000061fc(4): LEA EAX,[R11 + -0x30]
00006200(2): JMP 0x000061cd
00006208(3): MOV EDI,R11D
0000620b(3): MOV RBX,RCX
0000620e(6): MOV R10D,0x7fffffff
00006214(5): JMP 0x0000601c
00006220(4): CMP R11D,0x4f
00006224(6): JZ 0x00006090
0000622a(3): XOR R14D,R14D
0000622d(5): MOV EBP,0x2520
00006232(3): TEST R11D,R11D
00006235(8): MOV word ptr [0x9b + RSP],BP
0000623d(6): JNZ 0x00007a90
00006243(8): LEA RDX,[0x9b + RSP]
0000624b(3): MOV RBP,RBX
0000624e(4): LEA RAX,[RDX + 0x2]
00006252(3): MOV byte ptr [RAX],R13B
00006255(4): MOV byte ptr [RAX + 0x1],0x0
00006259(8): LEA RAX,[0xa0 + RSP]
00006261(4): MOV RCX,qword ptr [RSP]
00006265(5): MOV ESI,0x400
0000626a(5): MOV dword ptr [RSP + 0x40],R10D
0000626f(3): MOV RDI,RAX
00006272(5): MOV dword ptr [RSP + 0x58],R11D
00006277(5): MOV qword ptr [RSP + 0x38],RAX
0000627c(5): CALL 0x00002870
00006281(3): TEST RAX,RAX
00006284(6): JZ 0x00005f90
0000628a(5): MOVSXD R10,dword ptr [RSP + 0x40]
0000628f(4): LEA R13,[RAX + -0x1]
00006293(5): MOV EAX,0x0
00006298(3): MOV RDX,R15
0000629b(3): NOT RDX
0000629e(3): TEST R10D,R10D
000062a1(4): CMOVNS RAX,R10
000062a5(3): CMP R13,RAX
000062a8(3): MOV RDI,RAX
000062ab(4): CMOVNC RDI,R13
000062af(3): CMP RDX,RDI
000062b2(5): MOV qword ptr [RSP + 0x40],RDI
000062b7(6): JBE 0x00005f3f
000062bd(3): TEST R12,R12
000062c0(6): JZ 0x00006343
000062c6(5): MOV R11D,dword ptr [RSP + 0x58]
000062cb(3): TEST R11D,R11D
000062ce(2): JNZ 0x0000631b
000062d0(3): CMP R13,RAX
000062d3(2): JNC 0x0000631b
000062d5(4): MOV EAX,dword ptr [RSP + 0x8]
000062d9(3): MOVSXD RBX,R10D
000062dc(3): SUB RBX,R13
000062df(3): CMP EAX,0x30
000062e2(6): JZ 0x000072f0
000062e8(3): CMP EAX,0x2b
000062eb(6): JZ 0x000072f0
000062f1(2): XOR EDX,EDX
000062f3(3): TEST RBX,RBX
000062f6(2): JZ 0x0000631b
000062f8(5): MOV qword ptr [RSP + 0x8],RBP
000062fd(3): MOV RBP,RDX
00006300(3): MOV RSI,R12
00006303(5): MOV EDI,0x20
00006308(4): ADD RBP,0x1
0000630c(5): CALL 0x00002660
00006311(3): CMP RBX,RBP
00006314(2): JNZ 0x00006300
00006316(5): MOV RBP,qword ptr [RSP + 0x8]
0000631b(3): TEST R14B,R14B
0000631e(6): JNZ 0x000072b0
00006324(5): CMP byte ptr [RSP + 0x34],0x0
00006329(6): JZ 0x00007288
0000632f(5): MOV RSI,qword ptr [RSP + 0x38]
00006334(3): MOV RDX,R13
00006337(3): MOV RDI,R12
0000633a(4): ADD RSI,0x1
0000633e(5): CALL 0x00005e20
00006343(5): ADD R15,qword ptr [RSP + 0x40]
00006348(5): JMP 0x00005f90
00006350(3): TEST R11D,R11D
00006353(6): JNZ 0x00006090
00006359(5): MOVZX EAX,byte ptr [RSP + 0x34]
0000635e(3): TEST R14B,R14B
00006361(8): LEA RDX,[0x9b + RSP]
00006369(3): MOV RBP,RBX
0000636c(4): CMOVNZ EAX,R14D
00006370(3): XOR R14D,R14D
00006373(3): XOR R11D,R11D
00006376(4): MOV byte ptr [RSP + 0x34],AL
0000637a(5): MOV EAX,0x2520
0000637f(8): MOV word ptr [0x9b + RSP],AX
00006387(4): LEA RAX,[RDX + 0x2]
0000638b(5): JMP 0x00006252
00006390(3): TEST R10D,R10D
00006393(6): MOV R13D,0x0
00006399(5): MOV EAX,0x1
0000639e(4): CMOVNS R13D,R10D
000063a2(3): MOVSXD R13,R13D
000063a5(3): TEST R13,R13
000063a8(4): CMOVZ R13,RAX
000063ac(3): MOV RAX,R15
000063af(3): NOT RAX
000063b2(3): CMP RAX,R13
000063b5(6): JBE 0x00005f3f
000063bb(3): TEST R12,R12
000063be(6): JZ 0x0000655f
000063c4(4): CMP R10D,0x1
000063c8(2): JLE 0x000063ff
000063ca(4): MOV EAX,dword ptr [RSP + 0x8]
000063ce(3): MOVSXD R10,R10D
000063d1(4): LEA R14,[R10 + -0x1]
000063d5(3): CMP EAX,0x30
000063d8(6): JZ 0x000078af
000063de(2): XOR EBP,EBP
000063e0(3): CMP EAX,0x2b
000063e3(6): JZ 0x000078af
000063e9(3): MOV RSI,R12
000063ec(5): MOV EDI,0x20
000063f1(4): ADD RBP,0x1
000063f5(5): CALL 0x00002660
000063fa(3): CMP R14,RBP
000063fd(2): JNZ 0x000063e9
000063ff(3): MOV RSI,R12
00006402(5): MOV EDI,0x9
00006407(5): CALL 0x00002660
0000640c(5): JMP 0x0000655f
00006411(4): MOV RAX,qword ptr [RSP]
00006415(5): MOV EDX,0x92492493
0000641a(5): MOV ESI,0x1
0000641f(3): MOV EAX,dword ptr [RAX + 0x18]
00006422(3): LEA ECX,[RAX + 0x6]
00006425(4): MOV dword ptr [RSP + 0x38],EAX
00006429(2): MOV EAX,ECX
0000642b(2): IMUL EDX
0000642d(3): LEA EAX,[RDX + RCX*0x1]
00006430(2): MOV EDX,ECX
00006432(3): SAR EDX,0x1f
00006435(3): SAR EAX,0x2
00006438(2): SUB EAX,EDX
0000643a(7): LEA EDX,[RAX*0x8]
00006441(2): SUB EDX,EAX
00006443(2): SUB ECX,EDX
00006445(3): ADD ECX,0x1
00006448(8): NOP dword ptr [RAX + RAX*0x1]
00006450(2): MOV EAX,ECX
00006452(3): XOR R8D,R8D
00006455(3): XOR R9D,R9D
00006458(3): SHR EAX,0x1f
0000645b(3): MOV R13D,EAX
0000645e(2): MOV EAX,ECX
00006460(2): NOT EAX
00006462(3): SHR EAX,0x1f
00006465(4): CMP R11D,0x4f
00006469(6): JNZ 0x00007180
0000646f(2): TEST AL,AL
00006471(6): JZ 0x00007180
00006477(3): MOV R13D,EDI
0000647a(5): MOV EDX,0x2520
0000647f(3): XOR R14D,R14D
00006482(8): MOV word ptr [0x9b + RSP],DX
0000648a(8): LEA RDX,[0x9b + RSP]
00006492(8): MOV byte ptr [0x9d + RSP],R11B
0000649a(3): MOV RBP,RBX
0000649d(3): MOV R11D,ESI
000064a0(4): LEA RAX,[RDX + 0x3]
000064a4(5): JMP 0x00006252
000064a9(4): CMP R11D,0x45
000064ad(6): JZ 0x00006090
000064b3(4): MOV RAX,qword ptr [RSP]
000064b7(5): MOV ESI,0x1
000064bc(3): MOV ECX,dword ptr [RAX + 0x18]
000064bf(2): JMP 0x00006450
000064c1(5): MOV EAX,0x1
000064c6(3): TEST R14B,R14B
000064c9(6): JNZ 0x0000742a
000064cf(3): MOV R14D,EAX
000064d2(6): MOV R13D,0x70
000064d8(5): JMP 0x0000622d
000064dd(7): LEA RAX,[0x1fc1c]
000064e4(6): MOV R14D,0xffffffff
000064ea(5): MOV qword ptr [RSP + 0x38],RAX
000064ef(5): MOVZX EBP,byte ptr [RSP + 0x34]
000064f4(5): MOV dword ptr [RSP + 0x40],R10D
000064f9(4): SUB RSP,0x8
000064fd(7): MOV EAX,dword ptr [0x508 + RSP]
00006504(2): XOR EDI,EDI
00006506(3): MOV R9D,R14D
00006509(1): PUSH RAX
0000650a(4): PUSH qword ptr [RSP + 0x20]
0000650e(2): MOV ECX,EBP
00006510(4): PUSH qword ptr [RSP + 0x30]
00006514(5): MOV RDX,qword ptr [RSP + 0x20]
00006519(5): MOV R8D,dword ptr [RSP + 0x28]
0000651e(5): MOV RSI,qword ptr [RSP + 0x58]
00006523(5): CALL 0x00005e80
00006528(4): ADD RSP,0x20
0000652c(5): MOVSXD R10,dword ptr [RSP + 0x40]
00006531(5): MOV EDX,0x0
00006536(3): MOV RCX,R15
00006539(3): NOT RCX
0000653c(3): TEST R10D,R10D
0000653f(4): CMOVNS RDX,R10
00006543(3): CMP RAX,RDX
00006546(3): MOV R13,RDX
00006549(4): CMOVNC R13,RAX
0000654d(3): CMP RCX,R13
00006550(6): JBE 0x00005f3f
00006556(3): TEST R12,R12
00006559(6): JNZ 0x0000735b
0000655f(3): ADD R15,R13
00006562(3): MOV RBP,RBX
00006565(5): JMP 0x00005f90
0000656a(4): CMP R11D,0x45
0000656e(6): JZ 0x00006090
00006574(4): MOV RAX,qword ptr [RSP]
00006578(5): MOV ESI,0x2
0000657d(2): MOV ECX,dword ptr [RAX]
0000657f(5): JMP 0x00006450
00006584(4): MOV RAX,qword ptr [RSP]
00006588(5): MOV RDI,qword ptr [RSP + 0x10]
0000658d(5): LEA RSI,[RSP + 0x60]
00006592(5): MOV dword ptr [RSP + 0x40],R10D
00006597(8): LEA R14,[0xb7 + RSP]
0000659f(4): MOVDQU XMM0,xmmword ptr [RAX]
000065a3(5): MOVAPS xmmword ptr [RSP + 0x60],XMM0
000065a8(5): MOVDQU XMM0,xmmword ptr [RAX + 0x10]
000065ad(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
000065b2(5): MOVDQU XMM0,xmmword ptr [RAX + 0x20]
000065b7(4): MOV RAX,qword ptr [RAX + 0x30]
000065bb(8): MOVAPS xmmword ptr [0x80 + RSP],XMM0
000065c3(8): MOV qword ptr [0x90 + RSP],RAX
000065cb(5): CALL 0x0001f1d0
000065d0(5): MOV R10D,dword ptr [RSP + 0x40]
000065d5(3): MOV RSI,RAX
000065d8(3): MOV RCX,RAX
000065db(8): LEA RAX,[0xa0 + RSP]
000065e3(10): MOV R8,0x6666666666666667
000065ed(5): MOV EDI,0x30
000065f2(5): MOV qword ptr [RSP + 0x38],RAX
000065f7(9): NOP word ptr [RAX + RAX*0x1]
00006600(3): MOV RAX,RCX
00006603(3): IMUL R8
00006606(3): MOV RAX,RCX
00006609(4): SAR RAX,0x3f
0000660d(4): SAR RDX,0x2
00006611(3): SUB RDX,RAX
00006614(3): MOV RAX,RDX
00006617(4): LEA RDX,[RDX + RDX*0x4]
0000661b(3): ADD RDX,RDX
0000661e(3): SUB RCX,RDX
00006621(3): MOV RDX,RCX
00006624(3): MOV RCX,RAX
00006627(2): MOV EAX,EDI
00006629(2): SUB EAX,EDX
0000662b(3): ADD EDX,0x30
0000662e(3): TEST RSI,RSI
00006631(3): CMOVS EDX,EAX
00006634(4): SUB R14,0x1
00006638(3): TEST RCX,RCX
0000663b(3): MOV byte ptr [R14],DL
0000663e(2): JNZ 0x00006600
00006640(3): TEST R10D,R10D
00006643(5): MOV EAX,0x1
00006648(4): CMOVG EAX,R10D
0000664c(3): TEST RSI,RSI
0000664f(4): MOV dword ptr [RSP + 0x58],EAX
00006653(6): JS 0x00007190
00006659(5): MOV RAX,qword ptr [RSP + 0x38]
0000665e(3): MOV RDX,R15
00006661(3): NOT RDX
00006664(4): ADD RAX,0x17
00006668(3): SUB RAX,R14
0000666b(5): CMP dword ptr [RSP + 0x8],0x2d
00006670(5): MOV qword ptr [RSP + 0x40],RAX
00006675(2): JZ 0x0000668a
00006677(5): MOV R13D,dword ptr [RSP + 0x58]
0000667c(5): SUB R13D,dword ptr [RSP + 0x40]
00006681(3): TEST R13D,R13D
00006684(6): JG 0x000077be
0000668a(3): TEST R10D,R10D
0000668d(5): MOV ECX,0x0
00006692(3): MOV RBP,RBX
00006695(4): CMOVNS ECX,R10D
00006699(3): MOVSXD R13,ECX
0000669c(5): MOV RAX,qword ptr [RSP + 0x40]
000066a1(3): CMP RAX,R13
000066a4(3): MOV RBX,RAX
000066a7(4): CMOVC RBX,R13
000066ab(3): CMP RBX,RDX
000066ae(6): JNC 0x00005f3f
000066b4(3): TEST R12,R12
000066b7(2): JZ 0x0000672e
000066b9(4): MOV EDX,dword ptr [RSP + 0x58]
000066bd(2): TEST EDX,EDX
000066bf(2): JNZ 0x00006713
000066c1(3): CMP RAX,R13
000066c4(2): JNC 0x00006713
000066c6(3): MOVSXD R13,R10D
000066c9(3): SUB R13,RAX
000066cc(4): MOV EAX,dword ptr [RSP + 0x8]
000066d0(3): CMP EAX,0x30
000066d3(6): JZ 0x000073f0
000066d9(3): CMP EAX,0x2b
000066dc(6): JZ 0x000073f0
000066e2(2): XOR EDX,EDX
000066e4(3): TEST R13,R13
000066e7(2): JZ 0x00006713
000066e9(5): MOV qword ptr [RSP + 0x8],RBX
000066ee(3): MOV RBX,RDX
000066f1(7): NOP dword ptr [RAX]
000066f8(3): MOV RSI,R12
000066fb(5): MOV EDI,0x20
00006700(4): ADD RBX,0x1
00006704(5): CALL 0x00002660
00006709(3): CMP R13,RBX
0000670c(2): JNZ 0x000066f8
0000670e(5): MOV RBX,qword ptr [RSP + 0x8]
00006713(5): CMP byte ptr [RSP + 0x34],0x0
00006718(6): JZ 0x000072d0
0000671e(5): MOV RDX,qword ptr [RSP + 0x40]
00006723(3): MOV RSI,R14
00006726(3): MOV RDI,R12
00006729(5): CALL 0x00005e20
0000672e(3): ADD R15,RBX
00006731(5): JMP 0x00005f90
00006736(4): MOV RAX,qword ptr [RSP]
0000673a(4): CMP R11D,0x4f
0000673e(5): MOV ESI,0x1
00006743(3): MOV EAX,dword ptr [RAX + 0x10]
00006746(6): JZ 0x0000647a
0000674c(3): LEA EDX,[RAX + RAX*0x4]
0000674f(3): XOR R9D,R9D
00006752(3): XOR R13D,R13D
00006755(3): XOR R8D,R8D
00006758(3): LEA ECX,[RAX + RDX*0x2]
0000675b(3): SAR ECX,0x5
0000675e(3): ADD ECX,0x1
00006761(7): NOP dword ptr [RAX]
00006768(8): LEA RAX,[0xa0 + RSP]
00006770(8): LEA RDI,[0xb7 + RSP]
00006778(6): MOV R11D,0xcccccccd
0000677e(5): MOV qword ptr [RSP + 0x38],RAX
00006783(5): NOP dword ptr [RAX + RAX*0x1]
00006788(4): TEST R8B,0x1
0000678c(4): LEA R14,[RDI + -0x1]
00006790(2): JZ 0x000067a0
00006792(4): LEA RAX,[RDI + -0x2]
00006796(4): MOV byte ptr [RDI + -0x1],0x3a
0000679a(3): MOV RDI,R14
0000679d(3): MOV R14,RAX
000067a0(2): MOV EAX,ECX
000067a2(3): SAR R8D,1
000067a5(3): MUL R11D
000067a8(3): SHR EDX,0x3
000067ab(3): LEA EAX,[RDX + RDX*0x4]
000067ae(2): ADD EAX,EAX
000067b0(2): SUB ECX,EAX
000067b2(3): MOV EAX,R8D
000067b5(3): ADD ECX,0x30
000067b8(2): OR EAX,EDX
000067ba(3): MOV byte ptr [RDI + -0x1],CL
000067bd(2): MOV ECX,EDX
000067bf(3): MOV RDI,R14
000067c2(2): JNZ 0x00006788
000067c4(3): CMP R10D,ESI
000067c7(4): CMOVGE ESI,R10D
000067cb(3): TEST R13B,R13B
000067ce(4): MOV dword ptr [RSP + 0x58],ESI
000067d2(6): JNZ 0x00007190
000067d8(3): TEST R9B,R9B
000067db(6): JZ 0x00006659
000067e1(5): CMP dword ptr [RSP + 0x8],0x2d
000067e6(5): MOV EBP,0x2b
000067eb(6): JZ 0x0000759d
000067f1(5): MOV RAX,qword ptr [RSP + 0x38]
000067f6(3): MOV RDX,R15
000067f9(3): NOT RDX
000067fc(4): ADD RAX,0x17
00006800(3): SUB RAX,R14
00006803(3): MOV RDI,RAX
00006806(5): MOV qword ptr [RSP + 0x40],RAX
0000680b(4): MOV EAX,dword ptr [RSP + 0x58]
0000680f(3): SUB EAX,0x1
00006812(2): SUB EAX,EDI
00006814(2): TEST EAX,EAX
00006816(3): MOV R13D,EAX
00006819(6): JLE 0x000074e0
0000681f(5): CMP dword ptr [RSP + 0x8],0x5f
00006824(6): JZ 0x0000743c
0000682a(5): MOVSXD RAX,dword ptr [RSP + 0x58]
0000682f(3): CMP RAX,RDX
00006832(3): MOV RDI,RAX
00006835(6): JNC 0x00005f3f
0000683b(3): TEST R10D,R10D
0000683e(5): MOV EAX,0x0
00006843(5): MOV ECX,0x1
00006848(4): CMOVNS EAX,R10D
0000684c(2): CDQE
0000684e(3): TEST RAX,RAX
00006851(4): CMOVNZ RCX,RAX
00006855(3): CMP RCX,RDX
00006858(5): MOV qword ptr [RSP + 0x48],RCX
0000685d(6): JNC 0x00005f3f
00006863(3): TEST R12,R12
00006866(2): JZ 0x000068cc
00006868(2): TEST EDI,EDI
0000686a(2): JNZ 0x000068c0
0000686c(4): CMP RAX,0x1
00006870(2): JBE 0x000068c0
00006872(4): MOV EDI,dword ptr [RSP + 0x8]
00006876(3): MOVSXD R10,R10D
00006879(4): LEA RAX,[R10 + -0x1]
0000687d(3): CMP EDI,0x30
00006880(5): MOV qword ptr [RSP + 0x38],RAX
00006885(6): JZ 0x00007990
0000688b(3): CMP EDI,0x2b
0000688e(6): JZ 0x00007990
00006894(2): XOR EDX,EDX
00006896(3): TEST RAX,RAX
00006899(2): JZ 0x000068c0
0000689b(5): MOV qword ptr [RSP + 0x50],RBX
000068a0(3): MOV RBX,RDX
000068a3(3): MOV RSI,R12
000068a6(5): MOV EDI,0x20
000068ab(4): ADD RBX,0x1
000068af(5): CALL 0x00002660
000068b4(5): CMP qword ptr [RSP + 0x38],RBX
000068b9(2): JNZ 0x000068a3
000068bb(5): MOV RBX,qword ptr [RSP + 0x50]
000068c0(4): MOVSX EDI,BPL
000068c4(3): MOV RSI,R12
000068c7(5): CALL 0x00002660
000068cc(5): ADD R15,qword ptr [RSP + 0x48]
000068d1(3): MOV RBP,RBX
000068d4(3): MOVSXD RBX,R13D
000068d7(3): XOR R13D,R13D
000068da(3): TEST R12,R12
000068dd(2): JZ 0x000068f6
000068df(1): NOP
000068e0(3): MOV RSI,R12
000068e3(5): MOV EDI,0x30
000068e8(4): ADD R13,0x1
000068ec(5): CALL 0x00002660
000068f1(3): CMP R13,RBX
000068f4(2): JNZ 0x000068e0
000068f6(3): ADD R15,RBX
000068f9(3): XOR R13D,R13D
000068fc(3): XOR R10D,R10D
000068ff(3): MOV RDX,R15
00006902(3): NOT RDX
00006905(5): JMP 0x0000669c
0000690a(7): LEA RAX,[0x21723]
00006911(6): MOV R14D,0xffffffff
00006917(5): MOV qword ptr [RSP + 0x38],RAX
0000691c(5): JMP 0x000064ef
00006921(4): CMP R11D,0x45
00006925(6): JZ 0x00006090
0000692b(4): MOV RAX,qword ptr [RSP]
0000692f(5): MOV EDX,0x92492493
00006934(3): MOV ESI,dword ptr [RAX + 0x1c]
00006937(3): SUB ESI,dword ptr [RAX + 0x18]
0000693a(3): ADD ESI,0x7
0000693d(2): MOV EAX,ESI
0000693f(2): IMUL EDX
00006941(3): LEA ECX,[RDX + RSI*0x1]
00006944(3): SAR ESI,0x1f
00006947(3): SAR ECX,0x2
0000694a(2): SUB ECX,ESI
0000694c(5): MOV ESI,0x2
00006951(5): JMP 0x00006450
00006956(4): CMP R11D,0x45
0000695a(6): JZ 0x00006090
00006960(4): MOV RCX,qword ptr [RSP]
00006964(5): MOV EDX,0x92492493
00006969(3): MOV ESI,dword ptr [RCX + 0x14]
0000696c(4): MOV R8D,dword ptr [RCX + 0x1c]
00006970(4): MOV R14D,dword ptr [RCX + 0x18]
00006974(2): MOV EAX,ESI
00006976(3): MOV ECX,R8D
00006979(3): SAR EAX,0x1f
0000697c(3): SUB ECX,R14D
0000697f(6): ADD ECX,0x17e
00006985(5): AND EAX,0x190
0000698a(5): LEA R9D,[RSI + RAX*0x1 + -0x64]
0000698f(2): MOV EAX,ECX
00006991(2): IMUL EDX
00006993(3): LEA EAX,[RDX + RCX*0x1]
00006996(2): MOV EDX,ECX
00006998(3): SAR EDX,0x1f
0000699b(3): SAR EAX,0x2
0000699e(2): SUB EAX,EDX
000069a0(7): LEA EDX,[RAX*0x8]
000069a7(2): SUB EDX,EAX
000069a9(3): MOV EAX,R8D
000069ac(2): SUB EAX,ECX
000069ae(4): LEA EBP,[RAX + RDX*0x1 + 0x3]
000069b2(2): TEST EBP,EBP
000069b4(6): JS 0x000077e0
000069ba(4): TEST R9B,0x3
000069be(5): MOV EAX,0x16d
000069c3(2): JNZ 0x00006a0a
000069c5(3): MOV EAX,R9D
000069c8(5): MOV EDX,0x51eb851f
000069cd(3): MOV ECX,R9D
000069d0(2): IMUL EDX
000069d2(3): SAR ECX,0x1f
000069d5(5): MOV EAX,0x16e
000069da(4): MOV dword ptr [RSP + 0x38],EDX
000069de(3): SAR EDX,0x5
000069e1(2): SUB EDX,ECX
000069e3(3): IMUL EDX,EDX,0x64
000069e6(3): CMP R9D,EDX
000069e9(2): JNZ 0x00006a0a
000069eb(4): MOV EDX,dword ptr [RSP + 0x38]
000069ef(3): SAR EDX,0x7
000069f2(2): MOV EAX,EDX
000069f4(2): SUB EAX,ECX
000069f6(6): IMUL EAX,EAX,0x190
000069fc(3): CMP R9D,EAX
000069ff(3): SETZ AL
00006a02(3): MOVZX EAX,AL
00006a05(5): ADD EAX,0x16d
00006a0a(3): SUB R8D,EAX
00006a0d(5): MOV EDX,0x92492493
00006a12(3): MOV ECX,R8D
00006a15(3): SUB ECX,R14D
00006a18(6): ADD ECX,0x17e
00006a1e(2): MOV EAX,ECX
00006a20(3): SUB R8D,ECX
00006a23(2): IMUL EDX
00006a25(3): LEA EAX,[RDX + RCX*0x1]
00006a28(2): MOV EDX,ECX
00006a2a(3): SAR EDX,0x1f
00006a2d(3): SAR EAX,0x2
00006a30(2): SUB EAX,EDX
00006a32(7): LEA EDX,[RAX*0x8]
00006a39(2): SUB EDX,EAX
00006a3b(5): LEA ECX,[R8 + RDX*0x1 + 0x3]
00006a40(6): MOV R8D,0x1
00006a46(2): TEST ECX,ECX
00006a48(2): JNS 0x00006a4f
00006a4a(2): MOV ECX,EBP
00006a4c(3): XOR R8D,R8D
00006a4f(4): CMP R13B,0x47
00006a53(6): JZ 0x000076e7
00006a59(4): CMP R13B,0x67
00006a5d(6): JNZ 0x0000786a
00006a63(5): MOV ECX,0x51eb851f
00006a68(2): MOV EAX,ESI
00006a6a(3): MOV R9D,ESI
00006a6d(2): IMUL ECX
00006a6f(2): MOV EAX,EDX
00006a71(2): MOV EDX,ESI
00006a73(3): SAR EDX,0x1f
00006a76(3): SAR EAX,0x5
00006a79(2): SUB EAX,EDX
00006a7b(3): IMUL EAX,EAX,0x64
00006a7e(3): SUB R9D,EAX
00006a81(3): ADD R9D,R8D
00006a84(3): MOV EAX,R9D
00006a87(2): IMUL ECX
00006a89(3): MOV EAX,R9D
00006a8c(3): SAR EAX,0x1f
00006a8f(2): MOV ECX,EDX
00006a91(3): SAR ECX,0x5
00006a94(2): SUB ECX,EAX
00006a96(3): IMUL ECX,ECX,0x64
00006a99(3): SUB R9D,ECX
00006a9c(3): MOV ECX,R9D
00006a9f(6): JS 0x000076a4
00006aa5(4): MOV ESI,dword ptr [RSP + 0x8]
00006aa9(2): TEST ESI,ESI
00006aab(6): JZ 0x000076c1
00006ab1(5): MOV EAX,0x1
00006ab6(3): XOR R13D,R13D
00006ab9(5): CMP dword ptr [RSP + 0x8],0x2b
00006abe(6): JZ 0x00007a5d
00006ac4(3): XOR R9D,R9D
00006ac7(5): MOV ESI,0x2
00006acc(3): XOR R8D,R8D
00006acf(5): JMP 0x00006465
00006ad4(4): CMP R11D,0x45
00006ad8(6): JZ 0x00006090
00006ade(4): MOV RAX,qword ptr [RSP]
00006ae2(5): MOV ESI,0x2
00006ae7(3): MOV ECX,dword ptr [RAX + 0x8]
00006aea(5): JMP 0x00006450
00006aef(4): CMP R11D,0x45
00006af3(6): JZ 0x00006090
00006af9(4): MOV RAX,qword ptr [RSP]
00006afd(5): MOV ESI,0x2
00006b02(3): MOV ECX,dword ptr [RAX + 0x4]
00006b05(5): JMP 0x00006450
00006b0a(4): CMP R11D,0x45
00006b0e(6): JZ 0x00006090
00006b14(4): CMP R10D,-0x1
00006b18(6): JZ 0x00007730
00006b1e(4): CMP R10D,0x8
00006b22(6): JG 0x00007a6c
00006b28(7): MOV ECX,dword ptr [0x500 + RSP]
00006b2f(3): MOV ESI,R10D
00006b32(6): MOV R8D,0x66666667
00006b38(8): NOP dword ptr [RAX + RAX*0x1]
00006b40(2): MOV EAX,ECX
00006b42(3): ADD ESI,0x1
00006b45(3): SAR ECX,0x1f
00006b48(3): IMUL R8D
00006b4b(3): SAR EDX,0x2
00006b4e(2): SUB EDX,ECX
00006b50(3): CMP ESI,0x9
00006b53(2): MOV ECX,EDX
00006b55(2): JNZ 0x00006b40
00006b57(3): MOV ESI,R10D
00006b5a(5): JMP 0x00006450
00006b5f(4): CMP R11D,0x45
00006b63(6): JZ 0x00006090
00006b69(4): MOV ECX,dword ptr [RSP + 0x30]
00006b6d(5): MOV ESI,0x2
00006b72(5): JMP 0x00006450
00006b77(4): CMP R11D,0x45
00006b7b(6): JZ 0x00007423
00006b81(4): MOV RAX,qword ptr [RSP]
00006b85(5): MOV EDX,0x51eb851f
00006b8a(5): MOV R9D,dword ptr [RSP + 0x8]
00006b8f(3): MOV ESI,dword ptr [RAX + 0x14]
00006b92(2): MOV EAX,ESI
00006b94(2): IMUL EDX
00006b96(2): MOV EAX,EDX
00006b98(2): MOV EDX,ESI
00006b9a(3): SAR EDX,0x1f
00006b9d(3): SAR EAX,0x5
00006ba0(2): SUB EAX,EDX
00006ba2(2): MOV EDX,ESI
00006ba4(3): LEA ECX,[RAX + 0x13]
00006ba7(3): IMUL EAX,EAX,0x64
00006baa(2): SUB EDX,EAX
00006bac(2): MOV EAX,EDX
00006bae(3): SHR EAX,0x1f
00006bb1(2): TEST ECX,ECX
00006bb3(3): SETG DL
00006bb6(2): AND EAX,EDX
00006bb8(6): CMP ESI,0xfffff894
00006bbe(4): SETL R13B
00006bc2(2): SUB ECX,EAX
00006bc4(6): CMP ESI,0xfffff894
00006bca(3): SETGE AL
00006bcd(3): TEST R9D,R9D
00006bd0(6): JNZ 0x00006ab9
00006bd6(5): CMP dword ptr [RSP + 0x24],0x2b
00006bdb(6): JZ 0x00007a5d
00006be1(4): MOV ESI,dword ptr [RSP + 0x24]
00006be5(4): MOV dword ptr [RSP + 0x8],ESI
00006be9(5): JMP 0x00006ac4
00006bee(3): TEST R11D,R11D
00006bf1(6): JNZ 0x00006090
00006bf7(7): LEA RAX,[0x2172c]
00006bfe(6): MOV R14D,0xffffffff
00006c04(5): MOV qword ptr [RSP + 0x38],RAX
00006c09(5): JMP 0x000064ef
00006c0e(3): TEST R11D,R11D
00006c11(6): JNZ 0x00006090
00006c17(5): MOV R11D,dword ptr [RSP + 0x8]
00006c1c(3): TEST R11D,R11D
00006c1f(6): JNZ 0x0000796f
00006c25(3): TEST R10D,R10D
00006c28(6): JNS 0x0000796f
00006c2e(7): LEA RAX,[0x1fc22]
00006c35(6): MOV R14D,0x4
00006c3b(8): MOV dword ptr [RSP + 0x8],0x2b
00006c43(5): MOV qword ptr [RSP + 0x38],RAX
00006c48(5): JMP 0x000064ef
00006c4d(4): MOVZX ECX,byte ptr [RBX + -0x1]
00006c51(4): LEA RAX,[RBX + -0x1]
00006c55(5): MOV qword ptr [RSP + 0x38],RAX
00006c5a(3): TEST R10D,R10D
00006c5d(5): MOV EAX,0x0
00006c62(3): MOV RDX,R15
00006c65(4): CMOVNS EAX,R10D
00006c69(3): CMP CL,0x25
00006c6c(3): NOT RDX
00006c6f(2): CDQE
00006c71(6): JNZ 0x0000608b
00006c77(3): TEST RAX,RAX
00006c7a(6): MOV R14D,0x1
00006c80(5): MOV RBP,qword ptr [RSP + 0x38]
00006c85(4): CMOVNZ R14,RAX
00006c89(6): MOV R13D,0x1
00006c8f(5): JMP 0x000060d4
00006c94(4): CMP R11D,0x45
00006c98(6): JZ 0x00006090
00006c9e(3): TEST R14B,R14B
00006ca1(6): JZ 0x0000622d
00006ca7(5): MOV byte ptr [RSP + 0x34],R14B
00006cac(5): JMP 0x0000622a
00006cb1(3): TEST R10D,R10D
00006cb4(5): MOV EAX,0x0
00006cb9(6): MOV R14D,0x1
00006cbf(4): CMOVNS EAX,R10D
00006cc3(3): MOV RDX,R15
00006cc6(2): CDQE
00006cc8(3): NOT RDX
00006ccb(3): TEST RAX,RAX
00006cce(4): CMOVNZ R14,RAX
00006cd2(3): TEST R11D,R11D
00006cd5(6): JNZ 0x00007747
00006cdb(3): CMP RDX,R14
00006cde(6): JBE 0x00005f3f
00006ce4(3): TEST R12,R12
00006ce7(6): JZ 0x00005f8a
00006ced(4): CMP R10D,0x1
00006cf1(6): JLE 0x00005f82
00006cf7(4): MOV EAX,dword ptr [RSP + 0x8]
00006cfb(3): MOVSXD R10,R10D
00006cfe(4): LEA R13,[R10 + -0x1]
00006d02(3): CMP EAX,0x30
00006d05(6): JZ 0x00007a2e
00006d0b(2): XOR EBP,EBP
00006d0d(3): CMP EAX,0x2b
00006d10(6): JZ 0x00007a2e
00006d16(3): MOV RSI,R12
00006d19(5): MOV EDI,0x20
00006d1e(4): ADD RBP,0x1
00006d22(5): CALL 0x00002660
00006d27(3): CMP R13,RBP
00006d2a(2): JNZ 0x00006d16
00006d2c(5): JMP 0x00005f7f
00006d31(4): MOVZX EAX,byte ptr [RBX + 0x1]
00006d35(4): LEA RDX,[RBX + 0x1]
00006d39(2): CMP AL,0x3a
00006d3b(6): JZ 0x00007921
00006d41(6): MOV R14D,0x1
00006d47(2): CMP AL,0x7a
00006d49(6): JNZ 0x00006090
00006d4f(3): MOV RBX,RDX
00006d52(4): MOV RAX,qword ptr [RSP]
00006d56(3): MOV ECX,dword ptr [RAX + 0x20]
00006d59(2): TEST ECX,ECX
00006d5b(6): JS 0x000075db
00006d61(4): MOV RCX,qword ptr [RAX + 0x28]
00006d65(6): MOV R13D,0x1
00006d6b(2): TEST ECX,ECX
00006d6d(2): JS 0x00006d83
00006d6f(6): MOV R13D,0x0
00006d75(2): JNZ 0x00006d83
00006d77(5): MOV RAX,qword ptr [RSP + 0x28]
00006d7c(3): CMP byte ptr [RAX],0x2d
00006d7f(4): SETZ R13B
00006d83(2): MOV EAX,ECX
00006d85(5): MOV EDX,0x91a2b3c5
00006d8a(3): MOV R9D,ECX
00006d8d(2): IMUL EDX
00006d8f(4): SAR R9D,0x1f
00006d93(6): MOV R8D,0x88888889
00006d99(2): MOV EAX,ECX
00006d9b(2): ADD EDX,ECX
00006d9d(3): SAR EDX,0xb
00006da0(3): SUB EDX,R9D
00006da3(2): MOV EBP,EDX
00006da5(3): IMUL R8D
00006da8(3): LEA ESI,[RDX + RCX*0x1]
00006dab(3): SAR ESI,0x5
00006dae(3): SUB ESI,R9D
00006db1(2): MOV EAX,ESI
00006db3(3): IMUL R8D
00006db6(2): MOV EAX,ESI
00006db8(3): SAR EAX,0x1f
00006dbb(4): LEA R8D,[RDX + RSI*0x1]
00006dbf(4): SAR R8D,0x5
00006dc3(3): SUB R8D,EAX
00006dc6(2): MOV EAX,ESI
00006dc8(4): IMUL R8D,R8D,0x3c
00006dcc(3): IMUL ESI,ESI,0x3c
00006dcf(3): SUB EAX,R8D
00006dd2(2): SUB ECX,ESI
00006dd4(4): CMP R14,0x1
00006dd8(3): MOV R8D,EAX
00006ddb(6): JZ 0x0000788d
00006de1(6): JC 0x00007951
00006de7(4): CMP R14,0x2
00006deb(6): JZ 0x00007793
00006df1(4): CMP R14,0x3
00006df5(6): JNZ 0x00007944
00006dfb(2): TEST ECX,ECX
00006dfd(6): JNZ 0x00007793
00006e03(2): TEST EAX,EAX
00006e05(6): JNZ 0x0000788d
00006e0b(3): MOV EAX,R13D
00006e0e(2): MOV ECX,EBP
00006e10(6): MOV R9D,0x1
00006e16(3): XOR EAX,0x1
00006e19(5): MOV ESI,0x3
00006e1e(5): JMP 0x00006465
00006e28(4): CMP R11D,0x45
00006e2c(6): JZ 0x00006090
00006e32(4): MOV R9,qword ptr [RSP]
00006e36(5): MOV ECX,0x92492493
00006e3b(4): MOV EAX,dword ptr [R9 + 0x18]
00006e3f(3): LEA ESI,[RAX + 0x6]
00006e42(4): MOV dword ptr [RSP + 0x38],EAX
00006e46(2): MOV EAX,ESI
00006e48(2): IMUL ECX
00006e4a(3): LEA EAX,[RDX + RSI*0x1]
00006e4d(2): MOV EDX,ESI
00006e4f(3): SAR EDX,0x1f
00006e52(3): SAR EAX,0x2
00006e55(2): SUB EAX,EDX
00006e57(7): LEA EDX,[RAX*0x8]
00006e5e(2): SUB EDX,EAX
00006e60(2): MOV EAX,EDX
00006e62(4): MOV EDX,dword ptr [R9 + 0x1c]
00006e66(2): SUB EAX,ESI
00006e68(4): LEA ESI,[RAX + RDX*0x1 + 0x7]
00006e6c(2): MOV EAX,ESI
00006e6e(2): IMUL ECX
00006e70(5): JMP 0x00006941
00006e75(4): CMP R11D,0x45
00006e79(6): JZ 0x00007423
00006e7f(4): CMP R11D,0x4f
00006e83(6): JZ 0x00006090
00006e89(4): MOV RAX,qword ptr [RSP]
00006e8d(5): MOV R8D,dword ptr [RSP + 0x8]
00006e92(3): MOV EAX,dword ptr [RAX + 0x14]
00006e95(5): CMP EAX,0xfffff894
00006e9a(6): LEA ECX,[0x76c + RAX]
00006ea0(4): SETL R13B
00006ea4(5): CMP EAX,0xfffff894
00006ea9(3): SETGE AL
00006eac(3): TEST R8D,R8D
00006eaf(6): JNZ 0x0000770e
00006eb5(4): MOV ESI,dword ptr [RSP + 0x24]
00006eb9(3): CMP ESI,0x2b
00006ebc(6): JZ 0x000075a7
00006ec2(4): MOV dword ptr [RSP + 0x8],ESI
00006ec6(3): XOR R9D,R9D
00006ec9(5): MOV ESI,0x4
00006ece(5): JMP 0x00006acc
00006ed3(5): MOVZX EDI,byte ptr [RSP + 0x34]
00006ed8(3): TEST R14B,R14B
00006edb(5): MOV EAX,0x0
00006ee0(5): MOV dword ptr [RSP + 0x38],R10D
00006ee5(3): CMOVNZ EDI,EAX
00006ee8(5): MOV byte ptr [RSP + 0x34],DIL
00006eed(5): MOV RDI,qword ptr [RSP + 0x28]
00006ef2(5): CALL 0x00002530
00006ef7(5): MOVSXD R10,dword ptr [RSP + 0x38]
00006efc(3): MOV R13,RAX
00006eff(5): MOV EAX,0x0
00006f04(3): MOV RDX,R15
00006f07(3): NOT RDX
00006f0a(3): TEST R10D,R10D
00006f0d(4): CMOVNS RAX,R10
00006f11(3): CMP R13,RAX
00006f14(3): MOV RBP,RAX
00006f17(4): CMOVNC RBP,R13
00006f1b(3): CMP RDX,RBP
00006f1e(6): JBE 0x00005f3f
00006f24(3): TEST R12,R12
00006f27(2): JZ 0x00006f9f
00006f29(3): CMP R13,RAX
00006f2c(2): JNC 0x00006f7b
00006f2e(4): MOV EDI,dword ptr [RSP + 0x8]
00006f32(3): MOV RAX,R10
00006f35(3): SUB RAX,R13
00006f38(5): MOV qword ptr [RSP + 0x38],RAX
00006f3d(3): CMP EDI,0x30
00006f40(6): JZ 0x000079c3
00006f46(3): CMP EDI,0x2b
00006f49(6): JZ 0x000079c3
00006f4f(2): XOR EDX,EDX
00006f51(3): TEST RAX,RAX
00006f54(2): JZ 0x00006f7b
00006f56(5): MOV qword ptr [RSP + 0x8],RBX
00006f5b(3): MOV RBX,RDX
00006f5e(3): MOV RSI,R12
00006f61(5): MOV EDI,0x20
00006f66(4): ADD RBX,0x1
00006f6a(5): CALL 0x00002660
00006f6f(5): CMP qword ptr [RSP + 0x38],RBX
00006f74(2): JNZ 0x00006f5e
00006f76(5): MOV RBX,qword ptr [RSP + 0x8]
00006f7b(3): TEST R14B,R14B
00006f7e(6): JNZ 0x00007903
00006f84(5): CMP byte ptr [RSP + 0x34],0x0
00006f89(6): JZ 0x000078e9
00006f8f(5): MOV RSI,qword ptr [RSP + 0x28]
00006f94(3): MOV RDX,R13
00006f97(3): MOV RDI,R12
00006f9a(5): CALL 0x00005e20
00006f9f(3): ADD R15,RBP
00006fa2(3): MOV RBP,RBX
00006fa5(5): JMP 0x00005f90
00006faa(4): CMP R11D,0x45
00006fae(6): JZ 0x00007423
00006fb4(4): MOV RAX,qword ptr [RSP]
00006fb8(5): MOV EDX,0x51eb851f
00006fbd(3): MOV ESI,dword ptr [RAX + 0x14]
00006fc0(2): MOV EAX,ESI
00006fc2(2): IMUL EDX
00006fc4(2): MOV EAX,ESI
00006fc6(3): SAR EAX,0x1f
00006fc9(2): MOV ECX,EDX
00006fcb(3): SAR ECX,0x5
00006fce(2): SUB ECX,EAX
00006fd0(2): MOV EAX,ESI
00006fd2(3): IMUL ECX,ECX,0x64
00006fd5(2): SUB EAX,ECX
00006fd7(2): MOV ECX,EAX
00006fd9(6): JNS 0x00006aa5
00006fdf(2): NEG EAX
00006fe1(3): ADD ECX,0x64
00006fe4(6): CMP ESI,0xfffff893
00006fea(3): CMOVLE ECX,EAX
00006fed(5): JMP 0x00006aa5
00006ff2(4): CMP R11D,0x45
00006ff6(6): JZ 0x00006090
00006ffc(4): MOV RAX,qword ptr [RSP]
00007000(5): MOV ESI,0x2
00007005(3): MOV ECX,dword ptr [RAX + 0xc]
00007008(5): JMP 0x00006450
0000700d(4): CMP R11D,0x45
00007011(6): JZ 0x00006090
00007017(4): MOV RAX,qword ptr [RSP]
0000701b(3): MOV ECX,dword ptr [RAX + 0xc]
0000701e(5): MOV R8D,dword ptr [RSP + 0x8]
00007023(5): MOV ESI,0x2
00007028(3): TEST R8D,R8D
0000702b(6): JNZ 0x00006450
00007031(8): MOV dword ptr [RSP + 0x8],0x5f
00007039(5): JMP 0x00006450
0000703e(4): CMP R11D,0x45
00007042(6): JZ 0x00006090
00007048(4): MOV RAX,qword ptr [RSP]
0000704c(5): MOV ESI,0x3
00007051(3): MOV EAX,dword ptr [RAX + 0x1c]
00007054(3): CMP EAX,-0x1
00007057(3): LEA ECX,[RAX + 0x1]
0000705a(4): SETL R13B
0000705e(3): CMP EAX,-0x1
00007061(3): SETGE AL
00007064(3): XOR R8D,R8D
00007067(3): XOR R9D,R9D
0000706a(5): JMP 0x00006465
0000706f(4): CMP R11D,0x45
00007073(6): JZ 0x00006090
00007079(4): MOV RAX,qword ptr [RSP]
0000707d(3): MOV ECX,dword ptr [RAX + 0x8]
00007080(2): JMP 0x0000701e
00007082(4): CMP R11D,0x45
00007086(6): JZ 0x00006090
0000708c(4): MOV ECX,dword ptr [RSP + 0x30]
00007090(2): JMP 0x0000701e
00007092(4): CMP R11D,0x45
00007096(6): JZ 0x00006090
0000709c(4): MOV RAX,qword ptr [RSP]
000070a0(5): MOV ESI,0x2
000070a5(3): MOV EAX,dword ptr [RAX + 0x10]
000070a8(3): CMP EAX,-0x1
000070ab(3): LEA ECX,[RAX + 0x1]
000070ae(4): SETL R13B
000070b2(3): CMP EAX,-0x1
000070b5(3): SETGE AL
000070b8(3): XOR R8D,R8D
000070bb(3): XOR R9D,R9D
000070be(5): JMP 0x00006465
000070c3(3): TEST R10D,R10D
000070c6(6): MOV R13D,0x0
000070cc(5): MOV EAX,0x1
000070d1(4): CMOVNS R13D,R10D
000070d5(3): MOVSXD R13,R13D
000070d8(3): TEST R13,R13
000070db(4): CMOVZ R13,RAX
000070df(3): MOV RAX,R15
000070e2(3): NOT RAX
000070e5(3): CMP RAX,R13
000070e8(6): JBE 0x00005f3f
000070ee(3): TEST R12,R12
000070f1(6): JZ 0x0000655f
000070f7(4): CMP R10D,0x1
000070fb(2): JLE 0x00007132
000070fd(4): MOV EAX,dword ptr [RSP + 0x8]
00007101(3): MOVSXD R10,R10D
00007104(4): LEA R14,[R10 + -0x1]
00007108(3): CMP EAX,0x30
0000710b(6): JZ 0x000078cc
00007111(2): XOR EBP,EBP
00007113(3): CMP EAX,0x2b
00007116(6): JZ 0x000078cc
0000711c(3): MOV RSI,R12
0000711f(5): MOV EDI,0x20
00007124(4): ADD RBP,0x1
00007128(5): CALL 0x00002660
0000712d(3): CMP R14,RBP
00007130(2): JNZ 0x0000711c
00007132(3): MOV RSI,R12
00007135(5): MOV EDI,0xa
0000713a(5): CALL 0x00002660
0000713f(5): JMP 0x0000655f
00007144(2): XOR EAX,EAX
00007146(5): JMP 0x000064c6
0000714b(5): MOVZX EAX,byte ptr [RSP + 0x34]
00007150(3): TEST R14B,R14B
00007153(4): CMOVNZ EAX,R14D
00007157(4): CMP R11D,0x45
0000715b(6): JZ 0x00007918
00007161(3): MOV R13D,EDI
00007164(4): MOV byte ptr [RSP + 0x34],AL
00007168(3): XOR R14D,R14D
0000716b(5): JMP 0x0000622d
00007170(3): XOR R14D,R14D
00007173(5): JMP 0x00006d52
00007180(2): MOV EAX,ECX
00007182(2): NEG EAX
00007184(3): TEST R13B,R13B
00007187(3): CMOVNZ ECX,EAX
0000718a(5): JMP 0x00006768
00007190(5): CMP dword ptr [RSP + 0x8],0x2d
00007195(5): MOV EBP,0x2d
0000719a(6): JNZ 0x000067f1
000071a0(5): MOV byte ptr [RSP + 0x40],0x2d
000071a5(3): TEST R10D,R10D
000071a8(5): MOV ECX,0x0
000071ad(5): MOV EAX,0x1
000071b2(4): CMOVNS ECX,R10D
000071b6(3): MOVSXD R13,ECX
000071b9(3): TEST R13,R13
000071bc(4): CMOVNZ RAX,R13
000071c0(3): MOV RDI,RAX
000071c3(5): MOV qword ptr [RSP + 0x8],RAX
000071c8(3): MOV RAX,R15
000071cb(3): NOT RAX
000071ce(3): CMP RAX,RDI
000071d1(6): JBE 0x00005f3f
000071d7(3): TEST R12,R12
000071da(2): JZ 0x00007239
000071dc(4): MOV EDI,dword ptr [RSP + 0x58]
000071e0(2): TEST EDI,EDI
000071e2(2): JNZ 0x00007222
000071e4(4): CMP R13,0x1
000071e8(2): JBE 0x00007222
000071ea(3): MOVSXD RAX,R10D
000071ed(4): SUB RAX,0x1
000071f1(2): JZ 0x00007222
000071f3(5): MOV qword ptr [RSP + 0x48],RBX
000071f8(2): XOR EBP,EBP
000071fa(3): MOV RBX,RAX
000071fd(5): MOV dword ptr [RSP + 0x50],R10D
00007202(3): MOV RSI,R12
00007205(5): MOV EDI,0x20
0000720a(4): ADD RBP,0x1
0000720e(5): CALL 0x00002660
00007213(3): CMP RBX,RBP
00007216(2): JNZ 0x00007202
00007218(5): MOV RBX,qword ptr [RSP + 0x48]
0000721d(5): MOV R10D,dword ptr [RSP + 0x50]
00007222(5): MOVSX EDI,byte ptr [RSP + 0x40]
00007227(3): MOV RSI,R12
0000722a(5): MOV dword ptr [RSP + 0x48],R10D
0000722f(5): CALL 0x00002660
00007234(5): MOV R10D,dword ptr [RSP + 0x48]
00007239(5): ADD R15,qword ptr [RSP + 0x8]
0000723e(5): MOV RAX,qword ptr [RSP + 0x38]
00007243(3): MOV RBP,RBX
00007246(8): MOV dword ptr [RSP + 0x8],0x2d
0000724e(4): ADD RAX,0x17
00007252(3): SUB RAX,R14
00007255(3): MOV RDX,R15
00007258(5): MOV qword ptr [RSP + 0x40],RAX
0000725d(3): NOT RDX
00007260(5): JMP 0x0000669c
00007268(5): MOV RDI,qword ptr [RSP + 0x38]
0000726d(3): MOV RCX,R12
00007270(5): MOV EDX,0x1
00007275(3): MOV RSI,R13
00007278(5): CALL 0x00002960
0000727d(5): JMP 0x0000614e
00007288(5): MOV RDI,qword ptr [RSP + 0x38]
0000728d(3): MOV RCX,R12
00007290(5): MOV EDX,0x1
00007295(3): MOV RSI,R13
00007298(4): ADD RDI,0x1
0000729c(5): CALL 0x00002960
000072a1(5): JMP 0x00006343
000072b0(5): MOV RSI,qword ptr [RSP + 0x38]
000072b5(3): MOV RDX,R13
000072b8(3): MOV RDI,R12
000072bb(4): ADD RSI,0x1
000072bf(5): CALL 0x00005dc0
000072c4(5): JMP 0x00006343
000072d0(5): MOV RSI,qword ptr [RSP + 0x40]
000072d5(3): MOV RCX,R12
000072d8(5): MOV EDX,0x1
000072dd(3): MOV RDI,R14
000072e0(5): CALL 0x00002960
000072e5(5): JMP 0x0000672e
000072f0(3): TEST RBX,RBX
000072f3(6): JZ 0x0000631b
000072f9(2): XOR EDX,EDX
000072fb(5): MOV qword ptr [RSP + 0x8],RBP
00007300(3): MOV RBP,RDX
00007303(5): NOP dword ptr [RAX + RAX*0x1]
00007308(3): MOV RSI,R12
0000730b(5): MOV EDI,0x30
00007310(4): ADD RBP,0x1
00007314(5): CALL 0x00002660
00007319(3): CMP RBX,RBP
0000731c(2): JNZ 0x00007308
0000731e(5): JMP 0x00006316
00007323(3): TEST RBX,RBX
00007326(6): JZ 0x00006133
0000732c(2): XOR EDX,EDX
0000732e(5): MOV qword ptr [RSP + 0x8],RBP
00007333(3): MOV RBP,RDX
00007336(10): NOP word ptr CS:[RAX + RAX*0x1]
00007340(3): MOV RSI,R12
00007343(5): MOV EDI,0x30
00007348(4): ADD RBP,0x1
0000734c(5): CALL 0x00002660
00007351(3): CMP RBX,RBP
00007354(2): JNZ 0x00007340
00007356(5): JMP 0x0000612e
0000735b(3): CMP RAX,RDX
0000735e(2): JNC 0x000073b7
00007360(3): MOVSXD RDX,R10D
00007363(3): MOV RDI,RDX
00007366(3): SUB RDI,RAX
00007369(4): MOV EAX,dword ptr [RSP + 0x8]
0000736d(3): CMP EAX,0x30
00007370(6): JZ 0x0000775a
00007376(3): CMP EAX,0x2b
00007379(6): JZ 0x0000775a
0000737f(2): XOR EDX,EDX
00007381(3): TEST RDI,RDI
00007384(2): JZ 0x000073b7
00007386(4): MOV dword ptr [RSP + 0x34],EBP
0000738a(5): MOV qword ptr [RSP + 0x40],RBX
0000738f(3): MOV RBP,RDI
00007392(3): MOV RBX,RDX
00007395(3): NOP dword ptr [RAX]
00007398(3): MOV RSI,R12
0000739b(5): MOV EDI,0x20
000073a0(4): ADD RBX,0x1
000073a4(5): CALL 0x00002660
000073a9(3): CMP RBP,RBX
000073ac(2): JNZ 0x00007398
000073ae(4): MOV EBP,dword ptr [RSP + 0x34]
000073b2(5): MOV RBX,qword ptr [RSP + 0x40]
000073b7(4): SUB RSP,0x8
000073bb(3): MOV R9D,R14D
000073be(2): MOV ECX,EBP
000073c0(7): MOV EAX,dword ptr [0x508 + RSP]
000073c7(3): MOV RDI,R12
000073ca(1): PUSH RAX
000073cb(4): PUSH qword ptr [RSP + 0x20]
000073cf(4): PUSH qword ptr [RSP + 0x30]
000073d3(5): MOV R8D,dword ptr [RSP + 0x28]
000073d8(5): MOV RDX,qword ptr [RSP + 0x20]
000073dd(5): MOV RSI,qword ptr [RSP + 0x58]
000073e2(5): CALL 0x00005e80
000073e7(4): ADD RSP,0x20
000073eb(5): JMP 0x0000655f
000073f0(3): TEST R13,R13
000073f3(6): JZ 0x00006713
000073f9(2): XOR EDX,EDX
000073fb(5): MOV qword ptr [RSP + 0x8],RBX
00007400(3): MOV RBX,RDX
00007403(5): NOP dword ptr [RAX + RAX*0x1]
00007408(3): MOV RSI,R12
0000740b(5): MOV EDI,0x30
00007410(4): ADD RBX,0x1
00007414(5): CALL 0x00002660
00007419(3): CMP R13,RBX
0000741c(2): JNZ 0x00007408
0000741e(5): JMP 0x0000670e
00007423(2): XOR ESI,ESI
00007425(5): JMP 0x0000647a
0000742a(6): MOV R13D,0x70
00007430(5): MOV byte ptr [RSP + 0x34],0x0
00007435(5): JMP 0x0000622d
0000743a(2): XOR EBP,EBP
0000743c(3): MOVSXD RAX,R13D
0000743f(3): CMP RAX,RDX
00007442(5): MOV qword ptr [RSP + 0x8],RAX
00007447(6): JNC 0x00005f3f
0000744d(3): TEST R12,R12
00007450(2): JZ 0x00007495
00007452(2): XOR EDX,EDX
00007454(5): MOV byte ptr [RSP + 0x40],BPL
00007459(5): MOV qword ptr [RSP + 0x48],RBX
0000745e(3): MOV RBP,RDX
00007461(3): MOV RBX,RAX
00007464(5): MOV dword ptr [RSP + 0x50],R10D
00007469(7): NOP dword ptr [RAX]
00007470(3): MOV RSI,R12
00007473(5): MOV EDI,0x20
00007478(4): ADD RBP,0x1
0000747c(5): CALL 0x00002660
00007481(3): CMP RBX,RBP
00007484(2): JA 0x00007470
00007486(5): MOVZX EBP,byte ptr [RSP + 0x40]
0000748b(5): MOV RBX,qword ptr [RSP + 0x48]
00007490(5): MOV R10D,dword ptr [RSP + 0x50]
00007495(5): ADD R15,qword ptr [RSP + 0x8]
0000749a(3): MOV EAX,R10D
0000749d(3): SUB EAX,R13D
000074a0(3): CMP R10D,R13D
000074a3(6): MOV R10D,0x0
000074a9(4): CMOVG R10D,EAX
000074ad(3): TEST BPL,BPL
000074b0(3): MOV RDX,R15
000074b3(3): NOT RDX
000074b6(6): JNZ 0x000075e3
000074bc(5): MOV RAX,qword ptr [RSP + 0x38]
000074c1(3): MOVSXD R13,R10D
000074c4(3): MOV RBP,RBX
000074c7(8): MOV dword ptr [RSP + 0x8],0x5f
000074cf(4): ADD RAX,0x17
000074d3(3): SUB RAX,R14
000074d6(5): MOV qword ptr [RSP + 0x40],RAX
000074db(5): JMP 0x0000669c
000074e0(3): TEST R10D,R10D
000074e3(5): MOV ECX,0x0
000074e8(5): MOV EAX,0x1
000074ed(4): CMOVNS ECX,R10D
000074f1(3): MOVSXD R13,ECX
000074f4(3): TEST R13,R13
000074f7(4): CMOVNZ RAX,R13
000074fb(3): CMP RAX,RDX
000074fe(5): MOV qword ptr [RSP + 0x48],RAX
00007503(6): JNC 0x00005f3f
00007509(3): TEST R12,R12
0000750c(2): JZ 0x0000758a
0000750e(4): MOV ECX,dword ptr [RSP + 0x58]
00007512(2): TEST ECX,ECX
00007514(2): JNZ 0x00007574
00007516(4): CMP R13,0x1
0000751a(2): JBE 0x00007574
0000751c(4): MOV EDI,dword ptr [RSP + 0x8]
00007520(3): MOVSXD RAX,R10D
00007523(4): SUB RAX,0x1
00007527(5): MOV qword ptr [RSP + 0x38],RAX
0000752c(3): CMP EDI,0x30
0000752f(6): JZ 0x000079f6
00007535(3): CMP EDI,0x2b
00007538(6): JZ 0x000079f6
0000753e(2): XOR EDX,EDX
00007540(3): TEST RAX,RAX
00007543(2): JZ 0x00007574
00007545(5): MOV qword ptr [RSP + 0x50],RBX
0000754a(5): MOV dword ptr [RSP + 0x5c],R10D
0000754f(3): MOV RBX,RDX
00007552(3): MOV RSI,R12
00007555(5): MOV EDI,0x20
0000755a(4): ADD RBX,0x1
0000755e(5): CALL 0x00002660
00007563(5): CMP qword ptr [RSP + 0x38],RBX
00007568(2): JNZ 0x00007552
0000756a(5): MOV RBX,qword ptr [RSP + 0x50]
0000756f(5): MOV R10D,dword ptr [RSP + 0x5c]
00007574(4): MOVSX EDI,BPL
00007578(3): MOV RSI,R12
0000757b(5): MOV dword ptr [RSP + 0x38],R10D
00007580(5): CALL 0x00002660
00007585(5): MOV R10D,dword ptr [RSP + 0x38]
0000758a(5): ADD R15,qword ptr [RSP + 0x48]
0000758f(3): MOV RBP,RBX
00007592(3): MOV RDX,R15
00007595(3): NOT RDX
00007598(5): JMP 0x0000669c
0000759d(5): MOV byte ptr [RSP + 0x40],0x2b
000075a2(5): JMP 0x000071a5
000075a7(5): MOV ESI,0x4
000075ac(5): MOV EDX,0x270f
000075b1(2): CMP EDX,ECX
000075b3(6): MOV R9D,0x1
000075b9(8): MOV dword ptr [RSP + 0x8],0x2b
000075c1(6): JC 0x00006acc
000075c7(3): CMP R10D,ESI
000075ca(8): MOV dword ptr [RSP + 0x8],0x2b
000075d2(4): SETG R9B
000075d6(5): JMP 0x00006acc
000075db(3): MOV RBP,RBX
000075de(5): JMP 0x00005f90
000075e3(3): MOVSXD RCX,R10D
000075e6(6): MOV R13D,0x1
000075ec(3): TEST RCX,RCX
000075ef(4): CMOVNZ R13,RCX
000075f3(3): CMP R13,RDX
000075f6(5): MOV qword ptr [RSP + 0x8],R13
000075fb(6): JNC 0x00005f3f
00007601(3): TEST R12,R12
00007604(2): JZ 0x00007675
00007606(4): MOV ESI,dword ptr [RSP + 0x58]
0000760a(2): TEST ESI,ESI
0000760c(2): JNZ 0x00007655
0000760e(4): CMP R10D,0x1
00007612(2): JBE 0x00007655
00007614(4): LEA RAX,[RCX + -0x1]
00007618(3): XOR R13D,R13D
0000761b(5): MOV qword ptr [RSP + 0x48],RBX
00007620(5): MOV dword ptr [RSP + 0x50],R10D
00007625(3): MOV RBX,R13
00007628(3): MOV R13,RCX
0000762b(5): MOV qword ptr [RSP + 0x40],RAX
00007630(3): MOV RSI,R12
00007633(5): MOV EDI,0x20
00007638(4): ADD RBX,0x1
0000763c(5): CALL 0x00002660
00007641(5): CMP qword ptr [RSP + 0x40],RBX
00007646(2): JNZ 0x00007630
00007648(5): MOV RBX,qword ptr [RSP + 0x48]
0000764d(5): MOV R10D,dword ptr [RSP + 0x50]
00007652(3): MOV RCX,R13
00007655(4): MOVSX EDI,BPL
00007659(3): MOV RSI,R12
0000765c(5): MOV dword ptr [RSP + 0x48],R10D
00007661(5): MOV qword ptr [RSP + 0x40],RCX
00007666(5): CALL 0x00002660
0000766b(5): MOV R10D,dword ptr [RSP + 0x48]
00007670(5): MOV RCX,qword ptr [RSP + 0x40]
00007675(5): ADD R15,qword ptr [RSP + 0x8]
0000767a(5): MOV RAX,qword ptr [RSP + 0x38]
0000767f(3): MOV R13,RCX
00007682(3): MOV RBP,RBX
00007685(8): MOV dword ptr [RSP + 0x8],0x5f
0000768d(4): ADD RAX,0x17
00007691(3): SUB RAX,R14
00007694(3): MOV RDX,R15
00007697(5): MOV qword ptr [RSP + 0x40],RAX
0000769c(3): NOT RDX
0000769f(5): JMP 0x0000669c
000076a4(5): MOV EAX,0xfffff894
000076a9(3): SUB EAX,R8D
000076ac(2): CMP ESI,EAX
000076ae(6): JGE 0x00007a7d
000076b4(2): NEG ECX
000076b6(5): CMP dword ptr [RSP + 0x8],0x0
000076bb(6): JNZ 0x00006ab1
000076c1(4): MOV EAX,dword ptr [RSP + 0x24]
000076c5(3): CMP EAX,0x2b
000076c8(6): JZ 0x00007a4b
000076ce(4): MOV dword ptr [RSP + 0x8],EAX
000076d2(3): XOR R9D,R9D
000076d5(5): MOV EAX,0x1
000076da(3): XOR R13D,R13D
000076dd(5): MOV ESI,0x2
000076e2(5): JMP 0x00006acc
000076e7(5): MOV EAX,0xfffff894
000076ec(5): MOV R9D,dword ptr [RSP + 0x8]
000076f1(8): LEA ECX,[0x76c + RSI + R8*0x1]
000076f9(3): SUB EAX,R8D
000076fc(2): CMP ESI,EAX
000076fe(4): SETL R13B
00007702(3): SETGE AL
00007705(3): TEST R9D,R9D
00007708(6): JZ 0x00006eb5
0000770e(5): CMP dword ptr [RSP + 0x8],0x2b
00007713(6): JZ 0x000075a7
00007719(3): XOR R9D,R9D
0000771c(5): MOV ESI,0x4
00007721(5): JMP 0x00006acc
00007730(7): MOV ECX,dword ptr [0x500 + RSP]
00007737(5): MOV ESI,0x9
0000773c(6): MOV R10D,0x9
00007742(5): JMP 0x00006450
00007747(3): MOV RBP,RBX
0000774a(5): MOV qword ptr [RSP + 0x38],RBX
0000774f(6): MOV R13D,0x1
00007755(5): JMP 0x000060d4
0000775a(3): TEST RDI,RDI
0000775d(6): JZ 0x000073b7
00007763(2): XOR EDX,EDX
00007765(4): MOV dword ptr [RSP + 0x34],EBP
00007769(5): MOV qword ptr [RSP + 0x40],RBX
0000776e(3): MOV RBP,RDI
00007771(3): MOV RBX,RDX
00007774(4): NOP dword ptr [RAX]
00007778(3): MOV RSI,R12
0000777b(5): MOV EDI,0x30
00007780(4): ADD RBX,0x1
00007784(5): CALL 0x00002660
00007789(3): CMP RBP,RBX
0000778c(2): JNZ 0x00007778
0000778e(5): JMP 0x000073ae
00007793(4): IMUL R8D,R8D,0x64
00007797(6): MOV R9D,0x1
0000779d(5): MOV ESI,0x9
000077a2(6): IMUL EAX,EBP,0x2710
000077a8(3): ADD EAX,R8D
000077ab(6): MOV R8D,0x14
000077b1(2): ADD ECX,EAX
000077b3(3): MOV EAX,R13D
000077b6(3): XOR EAX,0x1
000077b9(5): JMP 0x00006465
000077be(5): CMP dword ptr [RSP + 0x8],0x5f
000077c3(6): JZ 0x0000743a
000077c9(5): MOVSXD RAX,dword ptr [RSP + 0x58]
000077ce(3): CMP RAX,RDX
000077d1(6): JC 0x000068d1
000077d7(5): JMP 0x00005f3f
000077e0(4): SUB R9D,0x1
000077e4(5): MOV EDX,0x16d
000077e9(4): TEST R9B,0x3
000077ed(2): JNZ 0x00007829
000077ef(3): MOV EAX,R9D
000077f2(5): MOV EDX,0x51eb851f
000077f7(2): IMUL EDX
000077f9(3): MOV EAX,R9D
000077fc(3): SAR EAX,0x1f
000077ff(3): SAR EDX,0x5
00007802(2): SUB EDX,EAX
00007804(3): IMUL EAX,EDX,0x64
00007807(5): MOV EDX,0x16e
0000780c(3): CMP R9D,EAX
0000780f(2): JNZ 0x00007829
00007811(3): MOV EAX,R9D
00007814(5): MOV ECX,0x190
00007819(1): CDQ
0000781a(2): IDIV ECX
0000781c(3): CMP EDX,0x1
0000781f(2): SBB EDX,EDX
00007821(2): NOT EDX
00007823(6): ADD EDX,0x16e
00007829(3): ADD R8D,EDX
0000782c(5): MOV EDX,0x92492493
00007831(3): MOV ECX,R8D
00007834(3): SUB ECX,R14D
00007837(6): ADD ECX,0x17e
0000783d(2): MOV EAX,ECX
0000783f(3): SUB R8D,ECX
00007842(2): IMUL EDX
00007844(3): LEA EAX,[RDX + RCX*0x1]
00007847(2): MOV EDX,ECX
00007849(3): SAR EDX,0x1f
0000784c(3): SAR EAX,0x2
0000784f(2): SUB EAX,EDX
00007851(7): LEA EDX,[RAX*0x8]
00007858(2): SUB EDX,EAX
0000785a(5): LEA ECX,[R8 + RDX*0x1 + 0x3]
0000785f(6): MOV R8D,0xffffffff
00007865(5): JMP 0x00006a4f
0000786a(2): MOV EAX,ECX
0000786c(5): MOV EDX,0x92492493
00007871(5): MOV ESI,0x2
00007876(2): IMUL EDX
00007878(3): LEA EAX,[RDX + RCX*0x1]
0000787b(3): SAR ECX,0x1f
0000787e(3): SAR EAX,0x2
00007881(2): SUB EAX,ECX
00007883(2): MOV ECX,EAX
00007885(3): ADD ECX,0x1
00007888(5): JMP 0x00006450
0000788d(3): IMUL ECX,EBP,0x64
00007890(3): MOV EAX,R13D
00007893(6): MOV R9D,0x1
00007899(3): XOR EAX,0x1
0000789c(5): MOV ESI,0x6
000078a1(3): ADD ECX,R8D
000078a4(6): MOV R8D,0x4
000078aa(5): JMP 0x00006465
000078af(2): XOR EBP,EBP
000078b1(3): MOV RSI,R12
000078b4(5): MOV EDI,0x30
000078b9(4): ADD RBP,0x1
000078bd(5): CALL 0x00002660
000078c2(3): CMP R14,RBP
000078c5(2): JNZ 0x000078b1
000078c7(5): JMP 0x000063ff
000078cc(2): XOR EBP,EBP
000078ce(3): MOV RSI,R12
000078d1(5): MOV EDI,0x30
000078d6(4): ADD RBP,0x1
000078da(5): CALL 0x00002660
000078df(3): CMP R14,RBP
000078e2(2): JNZ 0x000078ce
000078e4(5): JMP 0x00007132
000078e9(5): MOV RDI,qword ptr [RSP + 0x28]
000078ee(3): MOV RCX,R12
000078f1(5): MOV EDX,0x1
000078f6(3): MOV RSI,R13
000078f9(5): CALL 0x00002960
000078fe(5): JMP 0x00006f9f
00007903(5): MOV RSI,qword ptr [RSP + 0x28]
00007908(3): MOV RDX,R13
0000790b(3): MOV RDI,R12
0000790e(5): CALL 0x00005dc0
00007913(5): JMP 0x00006f9f
00007918(4): MOV byte ptr [RSP + 0x34],AL
0000791c(5): JMP 0x00006090
00007921(4): LEA RCX,[RBX + 0x2]
00007925(6): MOV R14D,0x1
0000792b(3): MOV RDX,RCX
0000792e(4): ADD RCX,0x1
00007932(4): MOVZX EAX,byte ptr [RCX + -0x1]
00007936(4): ADD R14,0x1
0000793a(2): CMP AL,0x3a
0000793c(6): JNZ 0x00006d47
00007942(2): JMP 0x0000792b
00007944(3): MOVZX ECX,byte ptr [RBX]
00007947(5): MOV qword ptr [RSP + 0x38],RBX
0000794c(5): JMP 0x00006c5a
00007951(3): IMUL ECX,EBP,0x64
00007954(3): XOR R8D,R8D
00007957(6): MOV R9D,0x1
0000795d(5): MOV ESI,0x5
00007962(2): ADD ECX,EAX
00007964(3): MOV EAX,R13D
00007967(3): XOR EAX,0x1
0000796a(5): JMP 0x00006465
0000796f(3): MOV R14D,R10D
00007972(5): MOV EAX,0x0
00007977(4): SUB R14D,0x6
0000797b(4): CMOVS R14D,EAX
0000797f(7): LEA RAX,[0x1fc22]
00007986(5): MOV qword ptr [RSP + 0x38],RAX
0000798b(5): JMP 0x000064ef
00007990(6): CMP qword ptr [RSP + 0x38],0x0
00007996(6): JZ 0x000068c0
0000799c(2): XOR EDX,EDX
0000799e(5): MOV qword ptr [RSP + 0x50],RBX
000079a3(3): MOV RBX,RDX
000079a6(3): MOV RSI,R12
000079a9(5): MOV EDI,0x30
000079ae(4): ADD RBX,0x1
000079b2(5): CALL 0x00002660
000079b7(5): CMP qword ptr [RSP + 0x38],RBX
000079bc(2): JNZ 0x000079a6
000079be(5): JMP 0x000068bb
000079c3(6): CMP qword ptr [RSP + 0x38],0x0
000079c9(6): JZ 0x00006f7b
000079cf(2): XOR EDX,EDX
000079d1(5): MOV qword ptr [RSP + 0x8],RBX
000079d6(3): MOV RBX,RDX
000079d9(3): MOV RSI,R12
000079dc(5): MOV EDI,0x30
000079e1(4): ADD RBX,0x1
000079e5(5): CALL 0x00002660
000079ea(5): CMP qword ptr [RSP + 0x38],RBX
000079ef(2): JNZ 0x000079d9
000079f1(5): JMP 0x00006f76
000079f6(6): CMP qword ptr [RSP + 0x38],0x0
000079fc(6): JZ 0x00007574
00007a02(2): XOR EDX,EDX
00007a04(5): MOV qword ptr [RSP + 0x50],RBX
00007a09(5): MOV dword ptr [RSP + 0x5c],R10D
00007a0e(3): MOV RBX,RDX
00007a11(3): MOV RSI,R12
00007a14(5): MOV EDI,0x30
00007a19(4): ADD RBX,0x1
00007a1d(5): CALL 0x00002660
00007a22(5): CMP qword ptr [RSP + 0x38],RBX
00007a27(2): JNZ 0x00007a11
00007a29(5): JMP 0x0000756a
00007a2e(2): XOR EBP,EBP
00007a30(3): MOV RSI,R12
00007a33(5): MOV EDI,0x30
00007a38(4): ADD RBP,0x1
00007a3c(5): CALL 0x00002660
00007a41(3): CMP R13,RBP
00007a44(2): JNZ 0x00007a30
00007a46(5): JMP 0x00005f7f
00007a4b(5): MOV EAX,0x1
00007a50(3): XOR R13D,R13D
00007a53(5): MOV ESI,0x2
00007a58(5): JMP 0x000075c7
00007a5d(5): MOV ESI,0x2
00007a62(5): MOV EDX,0x63
00007a67(5): JMP 0x000075b1
00007a6c(7): MOV ECX,dword ptr [0x500 + RSP]
00007a73(5): JMP 0x00006b57
00007a78(5): CALL 0x00002560
00007a7d(3): ADD ECX,0x64
00007a80(5): CMP dword ptr [RSP + 0x8],0x0
00007a85(6): JZ 0x000076c1
00007a8b(5): JMP 0x00006ab1
00007a90(2): XOR ESI,ESI
00007a92(5): JMP 0x0000648a
00007aa0(4): SUB RSP,0x20
00007aa4(6): MOV R9D,0xffffffff
00007aaa(9): MOV RAX,qword ptr FS:[0x28]
00007ab3(5): MOV qword ptr [RSP + 0x10],RAX
00007ab8(2): XOR EAX,EAX
00007aba(5): MOV byte ptr [RSP + 0xf],0x0
00007abf(2): PUSH R8
00007ac1(3): XOR R8D,R8D
00007ac4(1): PUSH RCX
00007ac5(2): XOR ECX,ECX
00007ac7(5): LEA RAX,[RSP + 0x1f]
00007acc(1): PUSH RAX
00007acd(5): CALL 0x00005e80
00007ad2(4): ADD RSP,0x20
00007ad6(5): MOV RDX,qword ptr [RSP + 0x8]
00007adb(9): XOR RDX,qword ptr FS:[0x28]
00007ae4(2): JNZ 0x00007aeb
00007ae6(4): ADD RSP,0x18
00007aea(1): RET
00007aeb(5): CALL 0x00002560
00007af0(1): PUSH RBP
00007af1(1): PUSH RBX
00007af2(2): MOV EBP,EDI
00007af4(7): LEA RDI,[0x21924]
00007afb(2): XOR ESI,ESI
00007afd(2): XOR EAX,EAX
00007aff(4): SUB RSP,0x8
00007b03(5): MOV EBX,0x1
00007b08(5): CALL 0x000028b0
00007b0d(2): CMP EBP,EAX
00007b0f(2): JZ 0x00007b29
00007b11(2): XOR EBX,EBX
00007b13(2): TEST EAX,EAX
00007b15(2): JS 0x00007b29
00007b17(2): MOV EDI,EAX
00007b19(5): CALL 0x00002640
00007b1e(5): CALL 0x00002410
00007b23(6): MOV dword ptr [RAX],0x9
00007b29(4): ADD RSP,0x8
00007b2d(2): MOV EAX,EBX
00007b2f(1): POP RBX
00007b30(1): POP RBP
00007b31(1): RET
00007b40(2): PUSH R15
00007b42(2): PUSH R14
00007b44(3): MOV R15,RSI
00007b47(2): PUSH R13
00007b49(2): PUSH R12
00007b4b(3): MOV R12,RDX
00007b4e(1): PUSH RBP
00007b4f(1): PUSH RBX
00007b50(4): SUB RSP,0x18
00007b54(5): MOV qword ptr [RSP + 0x8],RDI
00007b59(3): MOV RDI,RDX
00007b5c(5): CALL 0x00002730
00007b61(2): MOV EBX,EAX
00007b63(5): CALL 0x00002410
00007b68(3): CMP EBX,0x1
00007b6b(3): MOV R14,RAX
00007b6e(6): JZ 0x00007cd0
00007b74(3): CMP EBX,0x2
00007b77(6): JZ 0x00007cc0
00007b7d(2): TEST EBX,EBX
00007b7f(6): JZ 0x00007c38
00007b85(5): MOV ESI,0x2
00007b8a(5): MOV EDI,0x2
00007b8f(5): CALL 0x00002590
00007b94(3): CMP EAX,0x2
00007b97(3): SETNZ BL
00007b9a(5): MOV ESI,0x1
00007b9f(5): MOV EDI,0x1
00007ba4(5): CALL 0x00002590
00007ba9(3): CMP EAX,0x1
00007bac(4): SETNZ BPL
00007bb0(2): XOR ESI,ESI
00007bb2(2): XOR EDI,EDI
00007bb4(5): CALL 0x00002590
00007bb9(2): TEST EAX,EAX
00007bbb(6): JZ 0x00007c48
00007bc1(2): XOR EDI,EDI
00007bc3(5): CALL 0x00007af0
00007bc8(2): TEST AL,AL
00007bca(3): MOV R13D,EAX
00007bcd(6): JZ 0x00007ce0
00007bd3(3): TEST BPL,BPL
00007bd6(2): JNZ 0x00007c50
00007bd8(2): TEST BL,BL
00007bda(2): JZ 0x00007bf0
00007bdc(5): MOV EDI,0x2
00007be1(5): CALL 0x00007af0
00007be6(2): TEST AL,AL
00007be8(2): MOV EBX,EAX
00007bea(6): JZ 0x00007ca0
00007bf0(5): MOV RDI,qword ptr [RSP + 0x8]
00007bf5(3): MOV RDX,R12
00007bf8(3): MOV RSI,R15
00007bfb(5): CALL 0x00002630
00007c00(3): MOV R12,RAX
00007c03(2): TEST BL,BL
00007c05(3): MOV R15D,dword ptr [R14]
00007c08(6): JNZ 0x00007cb0
00007c0e(3): TEST BPL,BPL
00007c11(2): JNZ 0x00007c80
00007c13(3): TEST R13B,R13B
00007c16(2): JNZ 0x00007c8f
00007c18(3): TEST R12,R12
00007c1b(2): JNZ 0x00007c20
00007c1d(3): MOV dword ptr [R14],R15D
00007c20(4): ADD RSP,0x18
00007c24(3): MOV RAX,R12
00007c27(1): POP RBX
00007c28(1): POP RBP
00007c29(2): POP R12
00007c2b(2): POP R13
00007c2d(2): POP R14
00007c2f(2): POP R15
00007c31(1): RET
00007c38(2): XOR EBX,EBX
00007c3a(2): XOR EBP,EBP
00007c3c(3): XOR R13D,R13D
00007c3f(2): JMP 0x00007bf0
00007c48(3): XOR R13D,R13D
00007c4b(3): TEST BPL,BPL
00007c4e(2): JZ 0x00007bd8
00007c50(5): MOV EDI,0x1
00007c55(5): CALL 0x00007af0
00007c5a(2): TEST AL,AL
00007c5c(2): MOV EBP,EAX
00007c5e(6): JNZ 0x00007bd8
00007c64(3): XOR R12D,R12D
00007c67(2): TEST BL,BL
00007c69(3): MOV R15D,dword ptr [R14]
00007c6c(2): JZ 0x00007c80
00007c6e(5): MOV EDI,0x2
00007c73(5): CALL 0x00002640
00007c78(8): NOP dword ptr [RAX + RAX*0x1]
00007c80(5): MOV EDI,0x1
00007c85(5): CALL 0x00002640
00007c8a(3): TEST R13B,R13B
00007c8d(2): JZ 0x00007c18
00007c8f(2): XOR EDI,EDI
00007c91(5): CALL 0x00002640
00007c96(2): JMP 0x00007c18
00007ca0(3): MOV R15D,dword ptr [R14]
00007ca3(3): XOR R12D,R12D
00007ca6(10): NOP word ptr CS:[RAX + RAX*0x1]
00007cb0(5): MOV EDI,0x2
00007cb5(5): CALL 0x00002640
00007cba(5): JMP 0x00007c0e
00007cc0(2): XOR EBX,EBX
00007cc2(5): JMP 0x00007b9a
00007cd0(2): XOR EBX,EBX
00007cd2(2): XOR EBP,EBP
00007cd4(5): JMP 0x00007bb0
00007ce0(6): MOV R13D,0x1
00007ce6(3): XOR R12D,R12D
00007ce9(5): JMP 0x00007c03
00007cf0(4): CMP RDI,0xa
00007cf4(5): MOV EAX,0xa
00007cf9(10): MOV R9,-0x5555555555555555
00007d03(4): CMOVC RDI,RAX
00007d07(4): OR RDI,0x1
00007d0b(4): CMP RDI,-0x1
00007d0f(2): JZ 0x00007d7f
00007d11(7): NOP dword ptr [RAX]
00007d18(3): MOV RAX,RDI
00007d1b(3): MOV RCX,RDI
00007d1e(3): MUL R9
00007d21(3): MOV RAX,RDX
00007d24(3): SHR RAX,1
00007d27(4): LEA RAX,[RAX + RAX*0x2]
00007d2b(3): SUB RCX,RAX
00007d2e(4): CMP RDI,0x9
00007d32(3): MOV RAX,RCX
00007d35(2): JBE 0x00007d70
00007d37(3): TEST RCX,RCX
00007d3a(2): JZ 0x00007d75
00007d3c(6): MOV R8D,0x10
00007d42(5): MOV ESI,0x9
00007d47(5): MOV ECX,0x3
00007d4c(2): JMP 0x00007d59
00007d50(4): ADD R8,0x8
00007d54(3): TEST RDX,RDX
00007d57(2): JZ 0x00007d75
00007d59(4): ADD RCX,0x2
00007d5d(2): XOR EDX,EDX
00007d5f(3): MOV RAX,RDI
00007d62(3): DIV RCX
00007d65(3): ADD RSI,R8
00007d68(3): CMP RSI,RDI
00007d6b(3): MOV RAX,RDX
00007d6e(2): JC 0x00007d50
00007d70(3): TEST RAX,RAX
00007d73(2): JNZ 0x00007d7f
00007d75(4): ADD RDI,0x2
00007d79(4): CMP RDI,-0x1
00007d7d(2): JNZ 0x00007d18
00007d7f(3): MOV RAX,RDI
00007d82(1): RET
00007d90(3): MOV RAX,RDI
00007d93(2): XOR EDX,EDX
00007d95(4): ROR RAX,0x3
00007d99(3): DIV RSI
00007d9c(3): MOV RAX,RDX
00007d9f(1): RET
00007da0(3): CMP RDI,RSI
00007da3(3): SETZ AL
00007da6(1): RET
00007db0(1): PUSH RBX
00007db1(3): MOV RBX,RDI
00007db4(3): MOV RDI,RSI
00007db7(4): MOV RSI,qword ptr [RBX + 0x10]
00007dbb(3): CALL qword ptr [RBX + 0x30]
00007dbe(4): CMP qword ptr [RBX + 0x10],RAX
00007dc2(2): JBE 0x00007dcd
00007dc4(4): SHL RAX,0x4
00007dc8(3): ADD RAX,qword ptr [RBX]
00007dcb(1): POP RBX
00007dcc(1): RET
00007dcd(5): CALL 0x00002400
00007dd2(4): NOP dword ptr [RAX]
00007dd6(10): NOP word ptr CS:[RAX + RAX*0x1]
00007de0(2): PUSH R14
00007de2(2): PUSH R13
00007de4(3): MOV R14,RDX
00007de7(2): PUSH R12
00007de9(1): PUSH RBP
00007dea(3): MOV R12,RDI
00007ded(1): PUSH RBX
00007dee(3): MOV RBP,RSI
00007df1(3): MOV R13D,ECX
00007df4(5): CALL 0x00007db0
00007df9(3): MOV qword ptr [R14],RAX
00007dfc(3): MOV RSI,qword ptr [RAX]
00007dff(3): TEST RSI,RSI
00007e02(6): JZ 0x00007ef0
00007e08(3): CMP RSI,RBP
00007e0b(3): MOV RBX,RAX
00007e0e(6): JZ 0x00007ea3
00007e14(3): MOV RDI,RBP
00007e17(5): CALL qword ptr [R12 + 0x38]
00007e1c(2): TEST AL,AL
00007e1e(6): JNZ 0x00007ea0
00007e24(4): MOV RAX,qword ptr [RBX + 0x8]
00007e28(3): TEST RAX,RAX
00007e2b(6): JZ 0x00007ef0
00007e31(3): MOV RSI,qword ptr [RAX]
00007e34(3): CMP RBP,RSI
00007e37(2): JNZ 0x00007e59
00007e39(2): JMP 0x00007e6c
00007e40(4): MOV RBX,qword ptr [RBX + 0x8]
00007e44(4): MOV RAX,qword ptr [RBX + 0x8]
00007e48(3): TEST RAX,RAX
00007e4b(6): JZ 0x00007ef0
00007e51(3): MOV RSI,qword ptr [RAX]
00007e54(3): CMP RSI,RBP
00007e57(2): JZ 0x00007e6c
00007e59(3): MOV RDI,RBP
00007e5c(5): CALL qword ptr [R12 + 0x38]
00007e61(2): TEST AL,AL
00007e63(2): JZ 0x00007e40
00007e65(4): MOV RAX,qword ptr [RBX + 0x8]
00007e69(3): MOV RSI,qword ptr [RAX]
00007e6c(3): TEST R13B,R13B
00007e6f(2): JZ 0x00007e8e
00007e71(4): MOV RDX,qword ptr [RAX + 0x8]
00007e75(4): MOV qword ptr [RBX + 0x8],RDX
00007e79(7): MOV qword ptr [RAX],0x0
00007e80(5): MOV RDX,qword ptr [R12 + 0x48]
00007e85(4): MOV qword ptr [RAX + 0x8],RDX
00007e89(5): MOV qword ptr [R12 + 0x48],RAX
00007e8e(1): POP RBX
00007e8f(3): MOV RAX,RSI
00007e92(1): POP RBP
00007e93(2): POP R12
00007e95(2): POP R13
00007e97(2): POP R14
00007e99(1): RET
00007ea0(3): MOV RSI,qword ptr [RBX]
00007ea3(3): TEST R13B,R13B
00007ea6(2): JZ 0x00007e8e
00007ea8(4): MOV RAX,qword ptr [RBX + 0x8]
00007eac(3): TEST RAX,RAX
00007eaf(2): JZ 0x00007ee0
00007eb1(4): MOVDQU XMM0,xmmword ptr [RAX]
00007eb5(3): MOVUPS xmmword ptr [RBX],XMM0
00007eb8(7): MOV qword ptr [RAX],0x0
00007ebf(5): MOV RDX,qword ptr [R12 + 0x48]
00007ec4(4): MOV qword ptr [RAX + 0x8],RDX
00007ec8(5): MOV qword ptr [R12 + 0x48],RAX
00007ecd(3): MOV RAX,RSI
00007ed0(1): POP RBX
00007ed1(1): POP RBP
00007ed2(2): POP R12
00007ed4(2): POP R13
00007ed6(2): POP R14
00007ed8(1): RET
00007ee0(7): MOV qword ptr [RBX],0x0
00007ee7(2): JMP 0x00007e8e
00007ef0(2): XOR ESI,ESI
00007ef2(1): POP RBX
00007ef3(3): MOV RAX,RSI
00007ef6(1): POP RBP
00007ef7(2): POP R12
00007ef9(2): POP R13
00007efb(2): POP R14
00007efd(1): RET
00007f00(3): MOV RDX,qword ptr [RDI]
00007f03(7): LEA RCX,[0x219a0]
00007f0a(5): MOV EAX,0x1
00007f0f(3): CMP RDX,RCX
00007f12(2): JZ 0x00007f75
00007f14(5): MOVSS XMM0,dword ptr [RDX + 0x8]
00007f19(7): UCOMISS XMM0,dword ptr [0x000219b4]
00007f20(2): JBE 0x00007f70
00007f22(8): MOVSS XMM1,dword ptr [0x000219b8]
00007f2a(3): UCOMISS XMM1,XMM0
00007f2d(2): JBE 0x00007f70
00007f2f(5): MOVSS XMM1,dword ptr [RDX + 0xc]
00007f34(7): UCOMISS XMM1,dword ptr [0x000219bc]
00007f3b(2): JBE 0x00007f70
00007f3d(4): MOVSS XMM1,dword ptr [RDX]
00007f41(7): UCOMISS XMM1,dword ptr [0x000219c0]
00007f48(2): JC 0x00007f70
00007f4a(8): ADDSS XMM1,dword ptr [0x000219b4]
00007f52(5): MOVSS XMM2,dword ptr [RDX + 0x4]
00007f57(3): UCOMISS XMM2,XMM1
00007f5a(2): JBE 0x00007f70
00007f5c(8): MOVSS XMM3,dword ptr [0x000219c4]
00007f64(3): UCOMISS XMM3,XMM2
00007f67(2): JC 0x00007f70
00007f69(3): UCOMISS XMM0,XMM1
00007f6c(2): JA 0x00007f75
00007f6e(2): NOP
00007f70(3): MOV qword ptr [RDI],RCX
00007f73(2): XOR EAX,EAX
00007f75(2): RET
00007f80(2): PUSH R15
00007f82(2): PUSH R14
00007f84(2): PUSH R13
00007f86(2): PUSH R12
00007f88(1): PUSH RBP
00007f89(1): PUSH RBX
00007f8a(4): SUB RSP,0x8
00007f8e(3): MOV R12,qword ptr [RSI]
00007f91(4): CMP R12,qword ptr [RSI + 0x8]
00007f95(6): JNC 0x00008078
00007f9b(3): MOV RBP,RDI
00007f9e(3): MOV R13,RSI
00007fa1(3): MOV R14D,EDX
00007fa4(4): NOP dword ptr [RAX]
00007fa8(4): MOV R15,qword ptr [R12]
00007fac(3): TEST R15,R15
00007faf(6): JZ 0x0000806a
00007fb5(5): MOV RBX,qword ptr [R12 + 0x8]
00007fba(3): TEST RBX,RBX
00007fbd(2): JNZ 0x00007fdc
00007fbf(2): JMP 0x0000801b
00007fc8(4): MOV RCX,qword ptr [RAX + 0x8]
00007fcc(3): TEST RDX,RDX
00007fcf(4): MOV qword ptr [RBX + 0x8],RCX
00007fd3(4): MOV qword ptr [RAX + 0x8],RBX
00007fd7(3): MOV RBX,RDX
00007fda(2): JZ 0x00008017
00007fdc(3): MOV R15,qword ptr [RBX]
00007fdf(3): MOV RDI,RBP
00007fe2(3): MOV RSI,R15
00007fe5(5): CALL 0x00007db0
00007fea(4): CMP qword ptr [RAX],0x0
00007fee(4): MOV RDX,qword ptr [RBX + 0x8]
00007ff2(2): JNZ 0x00007fc8
00007ff4(3): MOV qword ptr [RAX],R15
00007ff7(5): ADD qword ptr [RBP + 0x18],0x1
00007ffc(3): TEST RDX,RDX
00007fff(7): MOV qword ptr [RBX],0x0
00008006(4): MOV RAX,qword ptr [RBP + 0x48]
0000800a(4): MOV qword ptr [RBX + 0x8],RAX
0000800e(4): MOV qword ptr [RBP + 0x48],RBX
00008012(3): MOV RBX,RDX
00008015(2): JNZ 0x00007fdc
00008017(4): MOV R15,qword ptr [R12]
0000801b(3): TEST R14B,R14B
0000801e(9): MOV qword ptr [R12 + 0x8],0x0
00008027(2): JNZ 0x0000806a
00008029(3): MOV RSI,R15
0000802c(3): MOV RDI,RBP
0000802f(5): CALL 0x00007db0
00008034(4): CMP qword ptr [RAX],0x0
00008038(3): MOV RBX,RAX
0000803b(2): JZ 0x00008090
0000803d(4): MOV RAX,qword ptr [RBP + 0x48]
00008041(3): TEST RAX,RAX
00008044(2): JZ 0x000080a0
00008046(4): MOV RDX,qword ptr [RAX + 0x8]
0000804a(4): MOV qword ptr [RBP + 0x48],RDX
0000804e(4): MOV RDX,qword ptr [RBX + 0x8]
00008052(3): MOV qword ptr [RAX],R15
00008055(4): MOV qword ptr [RAX + 0x8],RDX
00008059(4): MOV qword ptr [RBX + 0x8],RAX
0000805d(8): MOV qword ptr [R12],0x0
00008065(5): SUB qword ptr [R13 + 0x18],0x1
0000806a(4): ADD R12,0x10
0000806e(4): CMP qword ptr [R13 + 0x8],R12
00008072(6): JA 0x00007fa8
00008078(4): ADD RSP,0x8
0000807c(5): MOV EAX,0x1
00008081(1): POP RBX
00008082(1): POP RBP
00008083(2): POP R12
00008085(2): POP R13
00008087(2): POP R14
00008089(2): POP R15
0000808b(1): RET
00008090(3): MOV qword ptr [RAX],R15
00008093(5): ADD qword ptr [RBP + 0x18],0x1
00008098(2): JMP 0x0000805d
000080a0(5): MOV EDI,0x10
000080a5(5): CALL 0x00002780
000080aa(3): TEST RAX,RAX
000080ad(2): JNZ 0x0000804e
000080af(4): ADD RSP,0x8
000080b3(2): XOR EAX,EAX
000080b5(1): POP RBX
000080b6(1): POP RBP
000080b7(2): POP R12
000080b9(2): POP R13
000080bb(2): POP R14
000080bd(2): POP R15
000080bf(1): RET
000080c0(4): MOV RAX,qword ptr [RDI + 0x10]
000080c4(1): RET
000080d0(4): MOV RAX,qword ptr [RDI + 0x18]
000080d4(1): RET
000080e0(4): MOV RAX,qword ptr [RDI + 0x20]
000080e4(1): RET
000080f0(3): MOV RSI,qword ptr [RDI]
000080f3(4): MOV RDI,qword ptr [RDI + 0x8]
000080f7(2): XOR EAX,EAX
000080f9(3): CMP RSI,RDI
000080fc(2): JNC 0x00008137
000080fe(2): NOP
00008100(4): CMP qword ptr [RSI],0x0
00008104(2): JZ 0x0000812c
00008106(4): MOV RDX,qword ptr [RSI + 0x8]
0000810a(5): MOV ECX,0x1
0000810f(3): TEST RDX,RDX
00008112(2): JZ 0x00008125
00008114(4): NOP dword ptr [RAX]
00008118(4): MOV RDX,qword ptr [RDX + 0x8]
0000811c(4): ADD RCX,0x1
00008120(3): TEST RDX,RDX
00008123(2): JNZ 0x00008118
00008125(3): CMP RAX,RCX
00008128(4): CMOVC RAX,RCX
0000812c(4): ADD RSI,0x10
00008130(3): CMP RSI,RDI
00008133(2): JC 0x00008100
00008135(2): RET
00008137(2): RET
00008140(3): MOV RCX,qword ptr [RDI]
00008143(4): MOV R8,qword ptr [RDI + 0x8]
00008147(2): XOR EDX,EDX
00008149(2): XOR ESI,ESI
0000814b(3): CMP RCX,R8
0000814e(2): JNC 0x00008186
00008150(4): CMP qword ptr [RCX],0x0
00008154(2): JZ 0x0000817d
00008156(4): MOV RAX,qword ptr [RCX + 0x8]
0000815a(4): ADD RSI,0x1
0000815e(4): ADD RDX,0x1
00008162(3): TEST RAX,RAX
00008165(2): JZ 0x0000817d
00008167(9): NOP word ptr [RAX + RAX*0x1]
00008170(4): MOV RAX,qword ptr [RAX + 0x8]
00008174(4): ADD RDX,0x1
00008178(3): TEST RAX,RAX
0000817b(2): JNZ 0x00008170
0000817d(4): ADD RCX,0x10
00008181(3): CMP RCX,R8
00008184(2): JC 0x00008150
00008186(2): XOR EAX,EAX
00008188(4): CMP qword ptr [RDI + 0x18],RSI
0000818c(2): JZ 0x00008190
0000818e(2): RET
00008190(4): CMP qword ptr [RDI + 0x20],RDX
00008194(3): SETZ AL
00008197(1): RET
000081a0(2): PUSH R13
000081a2(2): PUSH R12
000081a4(3): MOV R12,RSI
000081a7(1): PUSH RBP
000081a8(1): PUSH RBX
000081a9(2): XOR EBX,EBX
000081ab(4): SUB RSP,0x8
000081af(3): MOV RSI,qword ptr [RDI]
000081b2(4): MOV RCX,qword ptr [RDI + 0x20]
000081b6(4): MOV RBP,qword ptr [RDI + 0x10]
000081ba(4): MOV R13,qword ptr [RDI + 0x18]
000081be(4): MOV RDI,qword ptr [RDI + 0x8]
000081c2(3): CMP RSI,RDI
000081c5(2): JNC 0x00008205
000081c7(9): NOP word ptr [RAX + RAX*0x1]
000081d0(4): CMP qword ptr [RSI],0x0
000081d4(2): JZ 0x000081fc
000081d6(4): MOV RAX,qword ptr [RSI + 0x8]
000081da(5): MOV EDX,0x1
000081df(3): TEST RAX,RAX
000081e2(2): JZ 0x000081f5
000081e4(4): NOP dword ptr [RAX]
000081e8(4): MOV RAX,qword ptr [RAX + 0x8]
000081ec(4): ADD RDX,0x1
000081f0(3): TEST RAX,RAX
000081f3(2): JNZ 0x000081e8
000081f5(3): CMP RBX,RDX
000081f8(4): CMOVC RBX,RDX
000081fc(4): ADD RSI,0x10
00008200(3): CMP RSI,RDI
00008203(2): JC 0x000081d0
00008205(7): LEA RDX,[0x2192e]
0000820c(5): MOV ESI,0x1
00008211(3): MOV RDI,R12
00008214(2): XOR EAX,EAX
00008216(5): CALL 0x00002970
0000821b(7): LEA RDX,[0x21946]
00008222(2): XOR EAX,EAX
00008224(3): MOV RCX,RBP
00008227(5): MOV ESI,0x1
0000822c(3): MOV RDI,R12
0000822f(5): CALL 0x00002970
00008234(3): TEST R13,R13
00008237(2): JS 0x000082a0
00008239(4): PXOR XMM0,XMM0
0000823d(3): TEST RBP,RBP
00008240(5): CVTSI2SD XMM0,R13
00008245(8): MULSD XMM0,qword ptr [0x000219d8]
0000824d(2): JS 0x000082c9
0000824f(4): PXOR XMM1,XMM1
00008253(5): CVTSI2SD XMM1,RBP
00008258(4): DIVSD XMM0,XMM1
0000825c(7): LEA RDX,[0x21978]
00008263(3): MOV RCX,R13
00008266(3): MOV RDI,R12
00008269(5): MOV ESI,0x1
0000826e(5): MOV EAX,0x1
00008273(5): CALL 0x00002970
00008278(4): ADD RSP,0x8
0000827c(3): MOV RCX,RBX
0000827f(3): MOV RDI,R12
00008282(1): POP RBX
00008283(1): POP RBP
00008284(2): POP R12
00008286(2): POP R13
00008288(7): LEA RDX,[0x2195e]
0000828f(5): MOV ESI,0x1
00008294(2): XOR EAX,EAX
00008296(5): JMP 0x00002970
000082a0(3): MOV RAX,R13
000082a3(3): MOV RDX,R13
000082a6(4): PXOR XMM0,XMM0
000082aa(3): SHR RAX,1
000082ad(3): AND EDX,0x1
000082b0(3): OR RAX,RDX
000082b3(3): TEST RBP,RBP
000082b6(5): CVTSI2SD XMM0,RAX
000082bb(4): ADDSD XMM0,XMM0
000082bf(8): MULSD XMM0,qword ptr [0x000219d8]
000082c7(2): JNS 0x0000824f
000082c9(3): MOV RAX,RBP
000082cc(4): PXOR XMM1,XMM1
000082d0(3): SHR RAX,1
000082d3(3): AND EBP,0x1
000082d6(3): OR RAX,RBP
000082d9(5): CVTSI2SD XMM1,RAX
000082de(4): ADDSD XMM1,XMM1
000082e2(5): JMP 0x00008258
000082f0(2): PUSH R12
000082f2(1): PUSH RBP
000082f3(3): MOV R12,RDI
000082f6(1): PUSH RBX
000082f7(3): MOV RBP,RSI
000082fa(5): CALL 0x00007db0
000082ff(3): MOV RSI,qword ptr [RAX]
00008302(3): TEST RSI,RSI
00008305(2): JZ 0x0000832d
00008307(3): MOV RBX,RAX
0000830a(2): JMP 0x00008313
00008310(3): MOV RSI,qword ptr [RBX]
00008313(3): CMP RSI,RBP
00008316(2): JZ 0x0000832f
00008318(3): MOV RDI,RBP
0000831b(5): CALL qword ptr [R12 + 0x38]
00008320(2): TEST AL,AL
00008322(2): JNZ 0x00008340
00008324(4): MOV RBX,qword ptr [RBX + 0x8]
00008328(3): TEST RBX,RBX
0000832b(2): JNZ 0x00008310
0000832d(2): XOR ESI,ESI
0000832f(1): POP RBX
00008330(3): MOV RAX,RSI
00008333(1): POP RBP
00008334(2): POP R12
00008336(1): RET
00008340(3): MOV RSI,qword ptr [RBX]
00008343(1): POP RBX
00008344(1): POP RBP
00008345(3): MOV RAX,RSI
00008348(2): POP R12
0000834a(1): RET
00008350(5): CMP qword ptr [RDI + 0x20],0x0
00008355(2): JZ 0x00008383
00008357(3): MOV RDX,qword ptr [RDI]
0000835a(4): MOV RCX,qword ptr [RDI + 0x8]
0000835e(3): CMP RDX,RCX
00008361(2): JNC 0x00008388
00008363(3): MOV RAX,qword ptr [RDX]
00008366(3): TEST RAX,RAX
00008369(2): JNZ 0x00008386
0000836b(5): NOP dword ptr [RAX + RAX*0x1]
00008370(4): ADD RDX,0x10
00008374(3): CMP RDX,RCX
00008377(2): JNC 0x00008388
00008379(3): MOV RAX,qword ptr [RDX]
0000837c(3): TEST RAX,RAX
0000837f(2): JZ 0x00008370
00008381(2): RET
00008383(2): XOR EAX,EAX
00008385(1): RET
00008386(2): RET
00008388(4): SUB RSP,0x8
0000838c(5): CALL 0x00002400
00008391(5): NOP dword ptr [RAX + RAX*0x1]
00008396(10): NOP word ptr CS:[RAX + RAX*0x1]
000083a0(1): PUSH RBP
000083a1(1): PUSH RBX
000083a2(3): MOV RBP,RDI
000083a5(3): MOV RBX,RSI
000083a8(4): SUB RSP,0x8
000083ac(5): CALL 0x00007db0
000083b1(3): MOV RDX,RAX
000083b4(3): MOV RCX,RAX
000083b7(3): MOV RAX,qword ptr [RDX]
000083ba(4): MOV RDX,qword ptr [RDX + 0x8]
000083be(3): CMP RAX,RBX
000083c1(2): JZ 0x000083d9
000083c3(5): NOP dword ptr [RAX + RAX*0x1]
000083c8(3): TEST RDX,RDX
000083cb(2): JZ 0x000083de
000083cd(3): MOV RAX,qword ptr [RDX]
000083d0(4): MOV RDX,qword ptr [RDX + 0x8]
000083d4(3): CMP RAX,RBX
000083d7(2): JNZ 0x000083c8
000083d9(3): TEST RDX,RDX
000083dc(2): JNZ 0x00008408
000083de(4): MOV RDX,qword ptr [RBP + 0x8]
000083e2(2): JMP 0x000083f0
000083e8(3): MOV RAX,qword ptr [RCX]
000083eb(3): TEST RAX,RAX
000083ee(2): JNZ 0x000083fb
000083f0(4): ADD RCX,0x10
000083f4(3): CMP RDX,RCX
000083f7(2): JA 0x000083e8
000083f9(2): XOR EAX,EAX
000083fb(4): ADD RSP,0x8
000083ff(1): POP RBX
00008400(1): POP RBP
00008401(1): RET
00008408(3): MOV RAX,qword ptr [RDX]
0000840b(4): ADD RSP,0x8
0000840f(1): POP RBX
00008410(1): POP RBP
00008411(1): RET
00008420(3): MOV R9,qword ptr [RDI]
00008423(4): CMP qword ptr [RDI + 0x8],R9
00008427(2): JBE 0x00008482
00008429(3): XOR R8D,R8D
0000842c(3): MOV RCX,qword ptr [R9]
0000842f(3): TEST RCX,RCX
00008432(2): JZ 0x0000846d
00008434(3): CMP RDX,R8
00008437(2): JBE 0x00008477
00008439(4): MOV qword ptr [RSI + R8*0x8],RCX
0000843d(4): MOV RCX,qword ptr [R9 + 0x8]
00008441(4): LEA RAX,[R8 + 0x1]
00008445(3): TEST RCX,RCX
00008448(2): JZ 0x0000846a
0000844a(6): NOP word ptr [RAX + RAX*0x1]
00008450(3): CMP RDX,RAX
00008453(2): JZ 0x00008480
00008455(3): MOV R8,qword ptr [RCX]
00008458(4): ADD RAX,0x1
0000845c(5): MOV qword ptr [RSI + RAX*0x8 + -0x8],R8
00008461(4): MOV RCX,qword ptr [RCX + 0x8]
00008465(3): TEST RCX,RCX
00008468(2): JNZ 0x00008450
0000846a(3): MOV R8,RAX
0000846d(4): ADD R9,0x10
00008471(4): CMP qword ptr [RDI + 0x8],R9
00008475(2): JA 0x0000842c
00008477(3): MOV RAX,R8
0000847a(1): RET
00008480(2): RET
00008482(2): XOR EAX,EAX
00008484(1): RET
00008490(2): PUSH R15
00008492(2): PUSH R14
00008494(2): PUSH R13
00008496(2): PUSH R12
00008498(1): PUSH RBP
00008499(1): PUSH RBX
0000849a(4): SUB RSP,0x8
0000849e(3): MOV R14,qword ptr [RDI]
000084a1(4): CMP qword ptr [RDI + 0x8],R14
000084a5(2): JBE 0x000084f6
000084a7(3): MOV R13,RDX
000084aa(3): MOV R12,RSI
000084ad(3): MOV R15,RDI
000084b0(2): XOR EBP,EBP
000084b2(3): MOV RDI,qword ptr [R14]
000084b5(3): TEST RDI,RDI
000084b8(2): JZ 0x000084da
000084ba(3): MOV RBX,R14
000084bd(2): JMP 0x000084c3
000084c0(3): MOV RDI,qword ptr [RBX]
000084c3(3): MOV RSI,R13
000084c6(3): CALL R12
000084c9(2): TEST AL,AL
000084cb(2): JZ 0x000084e4
000084cd(4): MOV RBX,qword ptr [RBX + 0x8]
000084d1(4): ADD RBP,0x1
000084d5(3): TEST RBX,RBX
000084d8(2): JNZ 0x000084c0
000084da(4): ADD R14,0x10
000084de(4): CMP qword ptr [R15 + 0x8],R14
000084e2(2): JA 0x000084b2
000084e4(4): ADD RSP,0x8
000084e8(3): MOV RAX,RBP
000084eb(1): POP RBX
000084ec(1): POP RBP
000084ed(2): POP R12
000084ef(2): POP R13
000084f1(2): POP R14
000084f3(2): POP R15
000084f5(1): RET
000084f6(2): XOR EBP,EBP
000084f8(2): JMP 0x000084e4
00008500(3): MOVZX ECX,byte ptr [RDI]
00008503(2): XOR EDX,EDX
00008505(2): TEST CL,CL
00008507(2): JZ 0x0000852d
00008509(7): NOP dword ptr [RAX]
00008510(3): MOV RAX,RDX
00008513(4): ADD RDI,0x1
00008517(4): SHL RAX,0x5
0000851b(3): SUB RAX,RDX
0000851e(2): XOR EDX,EDX
00008520(3): ADD RAX,RCX
00008523(3): MOVZX ECX,byte ptr [RDI]
00008526(3): DIV RSI
00008529(2): TEST CL,CL
0000852b(2): JNZ 0x00008510
0000852d(3): MOV RAX,RDX
00008530(1): RET
00008540(10): MOV RAX,0x3f80000000000000
0000854a(4): MOV byte ptr [RDI + 0x10],0x0
0000854e(3): MOV qword ptr [RDI],RAX
00008551(10): MOV RAX,0x3fb4fdf43f4ccccd
0000855b(4): MOV qword ptr [RDI + 0x8],RAX
0000855f(1): RET
00008560(2): PUSH R15
00008562(2): PUSH R14
00008564(7): LEA RAX,[0x7d90]
0000856b(2): PUSH R13
0000856d(2): PUSH R12
0000856f(3): MOV R12,RDX
00008572(1): PUSH RBP
00008573(1): PUSH RBX
00008574(3): MOV R13,RCX
00008577(3): MOV RBP,RDI
0000857a(5): MOV EDI,0x50
0000857f(3): MOV R15,RSI
00008582(4): SUB RSP,0x8
00008586(3): TEST RDX,RDX
00008589(3): MOV R14,R8
0000858c(4): CMOVZ R12,RAX
00008590(7): LEA RAX,[0x7da0]
00008597(3): TEST RCX,RCX
0000859a(4): CMOVZ R13,RAX
0000859e(5): CALL 0x00002780
000085a3(3): TEST RAX,RAX
000085a6(3): MOV RBX,RAX
000085a9(6): JZ 0x0000865a
000085af(3): TEST R15,R15
000085b2(4): LEA RDI,[RAX + 0x28]
000085b6(6): JZ 0x00008670
000085bc(4): MOV qword ptr [RAX + 0x28],R15
000085c0(5): CALL 0x00007f00
000085c5(2): TEST AL,AL
000085c7(6): JZ 0x00008650
000085cd(5): CMP byte ptr [R15 + 0x10],0x0
000085d2(6): JZ 0x000086d0
000085d8(3): MOV RDI,RBP
000085db(5): CALL 0x00007cf0
000085e0(5): MOV EDX,0x8
000085e5(3): MOV RBP,RAX
000085e8(2): XOR ECX,ECX
000085ea(3): MOV RAX,RDX
000085ed(3): MUL RBP
000085f0(6): JO 0x0000870a
000085f6(3): TEST RAX,RAX
000085f9(2): JS 0x00008650
000085fb(3): TEST RCX,RCX
000085fe(2): JNZ 0x00008650
00008600(3): TEST RBP,RBP
00008603(4): MOV qword ptr [RBX + 0x10],RBP
00008607(2): JZ 0x00008650
00008609(5): MOV ESI,0x10
0000860e(3): MOV RDI,RBP
00008611(5): CALL 0x000026b0
00008616(3): TEST RAX,RAX
00008619(3): MOV qword ptr [RBX],RAX
0000861c(2): JZ 0x00008650
0000861e(4): SHL RBP,0x4
00008622(8): MOV qword ptr [RBX + 0x18],0x0
0000862a(8): MOV qword ptr [RBX + 0x20],0x0
00008632(3): ADD RBP,RAX
00008635(4): MOV qword ptr [RBX + 0x30],R12
00008639(4): MOV qword ptr [RBX + 0x38],R13
0000863d(4): MOV qword ptr [RBX + 0x8],RBP
00008641(4): MOV qword ptr [RBX + 0x40],R14
00008645(8): MOV qword ptr [RBX + 0x48],0x0
0000864d(2): JMP 0x0000865a
00008650(3): MOV RDI,RBX
00008653(2): XOR EBX,EBX
00008655(5): CALL 0x00002a10
0000865a(4): ADD RSP,0x8
0000865e(3): MOV RAX,RBX
00008661(1): POP RBX
00008662(1): POP RBP
00008663(2): POP R12
00008665(2): POP R13
00008667(2): POP R14
00008669(2): POP R15
0000866b(1): RET
00008670(7): LEA RAX,[0x219a0]
00008677(4): MOV qword ptr [RBX + 0x28],RAX
0000867b(5): CALL 0x00007f00
00008680(2): TEST AL,AL
00008682(8): MOVSS XMM1,dword ptr [0x000219c8]
0000868a(2): JZ 0x00008650
0000868c(3): TEST RBP,RBP
0000868f(2): JS 0x000086db
00008691(4): PXOR XMM0,XMM0
00008695(5): CVTSI2SS XMM0,RBP
0000869a(4): DIVSS XMM0,XMM1
0000869e(7): UCOMISS XMM0,dword ptr [0x000219cc]
000086a5(2): JNC 0x00008650
000086a7(7): UCOMISS XMM0,dword ptr [0x000219d0]
000086ae(2): JC 0x00008700
000086b0(8): SUBSS XMM0,dword ptr [0x000219d0]
000086b8(10): MOV RAX,-0x8000000000000000
000086c2(5): CVTTSS2SI RBP,XMM0
000086c7(3): XOR RBP,RAX
000086ca(5): JMP 0x000085d8
000086d0(3): TEST RBP,RBP
000086d3(6): MOVSS XMM1,dword ptr [R15 + 0x8]
000086d9(2): JNS 0x00008691
000086db(3): MOV RAX,RBP
000086de(4): PXOR XMM0,XMM0
000086e2(3): SHR RAX,1
000086e5(3): AND EBP,0x1
000086e8(3): OR RAX,RBP
000086eb(5): CVTSI2SS XMM0,RAX
000086f0(4): ADDSS XMM0,XMM0
000086f4(2): JMP 0x0000869a
00008700(5): CVTTSS2SI RBP,XMM0
00008705(5): JMP 0x000085d8
0000870a(5): MOV ECX,0x1
0000870f(5): JMP 0x000085f6
00008720(2): PUSH R12
00008722(1): PUSH RBP
00008723(3): MOV RBP,RDI
00008726(1): PUSH RBX
00008727(3): MOV R12,qword ptr [RDI]
0000872a(4): CMP R12,qword ptr [RDI + 0x8]
0000872e(2): JNC 0x0000879b
00008730(5): CMP qword ptr [R12],0x0
00008735(2): JZ 0x00008791
00008737(5): MOV RBX,qword ptr [R12 + 0x8]
0000873c(4): MOV RAX,qword ptr [RBP + 0x40]
00008740(3): TEST RBX,RBX
00008743(2): JZ 0x00008775
00008745(3): NOP dword ptr [RAX]
00008748(3): TEST RAX,RAX
0000874b(2): JZ 0x00008756
0000874d(3): MOV RDI,qword ptr [RBX]
00008750(2): CALL RAX
00008752(4): MOV RAX,qword ptr [RBP + 0x40]
00008756(4): MOV RDX,qword ptr [RBX + 0x8]
0000875a(4): MOV RCX,qword ptr [RBP + 0x48]
0000875e(7): MOV qword ptr [RBX],0x0
00008765(3): TEST RDX,RDX
00008768(4): MOV qword ptr [RBX + 0x8],RCX
0000876c(4): MOV qword ptr [RBP + 0x48],RBX
00008770(3): MOV RBX,RDX
00008773(2): JNZ 0x00008748
00008775(3): TEST RAX,RAX
00008778(2): JZ 0x00008780
0000877a(4): MOV RDI,qword ptr [R12]
0000877e(2): CALL RAX
00008780(8): MOV qword ptr [R12],0x0
00008788(9): MOV qword ptr [R12 + 0x8],0x0
00008791(4): ADD R12,0x10
00008795(4): CMP qword ptr [RBP + 0x8],R12
00008799(2): JA 0x00008730
0000879b(8): MOV qword ptr [RBP + 0x18],0x0
000087a3(8): MOV qword ptr [RBP + 0x20],0x0
000087ab(1): POP RBX
000087ac(1): POP RBP
000087ad(2): POP R12
000087af(1): RET
000087b0(2): PUSH R12
000087b2(1): PUSH RBP
000087b3(3): MOV R12,RDI
000087b6(1): PUSH RBX
000087b7(5): CMP qword ptr [RDI + 0x40],0x0
000087bc(3): MOV RBP,qword ptr [RDI]
000087bf(4): MOV RAX,qword ptr [RDI + 0x8]
000087c3(2): JZ 0x00008813
000087c5(5): CMP qword ptr [RDI + 0x20],0x0
000087ca(2): JZ 0x00008813
000087cc(3): CMP RBP,RAX
000087cf(2): JNC 0x0000884c
000087d1(7): NOP dword ptr [RAX]
000087d8(4): MOV RDI,qword ptr [RBP]
000087dc(3): TEST RDI,RDI
000087df(2): JZ 0x00008806
000087e1(3): MOV RBX,RBP
000087e4(2): JMP 0x000087f3
000087f0(3): MOV RDI,qword ptr [RBX]
000087f3(5): CALL qword ptr [R12 + 0x40]
000087f8(4): MOV RBX,qword ptr [RBX + 0x8]
000087fc(3): TEST RBX,RBX
000087ff(2): JNZ 0x000087f0
00008801(5): MOV RAX,qword ptr [R12 + 0x8]
00008806(4): ADD RBP,0x10
0000880a(3): CMP RAX,RBP
0000880d(2): JA 0x000087d8
0000880f(4): MOV RBP,qword ptr [R12]
00008813(3): CMP RBP,RAX
00008816(2): JNC 0x0000884c
00008818(8): NOP dword ptr [RAX + RAX*0x1]
00008820(4): MOV RDI,qword ptr [RBP + 0x8]
00008824(3): TEST RDI,RDI
00008827(2): JZ 0x00008841
00008829(7): NOP dword ptr [RAX]
00008830(4): MOV RBX,qword ptr [RDI + 0x8]
00008834(5): CALL 0x00002a10
00008839(3): TEST RBX,RBX
0000883c(3): MOV RDI,RBX
0000883f(2): JNZ 0x00008830
00008841(4): ADD RBP,0x10
00008845(5): CMP qword ptr [R12 + 0x8],RBP
0000884a(2): JA 0x00008820
0000884c(5): MOV RDI,qword ptr [R12 + 0x48]
00008851(3): TEST RDI,RDI
00008854(2): JZ 0x00008871
00008856(10): NOP word ptr CS:[RAX + RAX*0x1]
00008860(4): MOV RBX,qword ptr [RDI + 0x8]
00008864(5): CALL 0x00002a10
00008869(3): TEST RBX,RBX
0000886c(3): MOV RDI,RBX
0000886f(2): JNZ 0x00008860
00008871(4): MOV RDI,qword ptr [R12]
00008875(5): CALL 0x00002a10
0000887a(1): POP RBX
0000887b(3): MOV RDI,R12
0000887e(1): POP RBP
0000887f(2): POP R12
00008881(5): JMP 0x00002a10
00008890(2): PUSH R12
00008892(1): PUSH RBP
00008893(3): MOV RBP,RDI
00008896(1): PUSH RBX
00008897(4): SUB RSP,0x60
0000889b(4): MOV R12,qword ptr [RDI + 0x28]
0000889f(9): MOV RAX,qword ptr FS:[0x28]
000088a8(5): MOV qword ptr [RSP + 0x58],RAX
000088ad(2): XOR EAX,EAX
000088af(6): CMP byte ptr [R12 + 0x10],0x0
000088b5(2): JNZ 0x00008908
000088b7(3): TEST RSI,RSI
000088ba(6): JS 0x00008a38
000088c0(4): PXOR XMM0,XMM0
000088c4(5): CVTSI2SS XMM0,RSI
000088c9(7): DIVSS XMM0,dword ptr [R12 + 0x8]
000088d0(7): UCOMISS XMM0,dword ptr [0x000219cc]
000088d7(6): JNC 0x00008a10
000088dd(7): UCOMISS XMM0,dword ptr [0x000219d0]
000088e4(6): JC 0x00008a60
000088ea(8): SUBSS XMM0,dword ptr [0x000219d0]
000088f2(10): MOV RAX,-0x8000000000000000
000088fc(5): CVTTSS2SI RSI,XMM0
00008901(3): XOR RSI,RAX
00008904(4): NOP dword ptr [RAX]
00008908(3): MOV RDI,RSI
0000890b(5): CALL 0x00007cf0
00008910(5): MOV EDX,0x8
00008915(3): MOV RBX,RAX
00008918(2): XOR ECX,ECX
0000891a(3): MOV RAX,RDX
0000891d(3): MUL RBX
00008920(6): JO 0x00008abf
00008926(3): TEST RAX,RAX
00008929(5): MOV EAX,0x1
0000892e(4): CMOVS RCX,RAX
00008932(3): TEST RBX,RBX
00008935(6): JZ 0x00008a10
0000893b(3): AND ECX,0x1
0000893e(6): JNZ 0x00008a10
00008944(4): CMP qword ptr [RBP + 0x10],RBX
00008948(6): JZ 0x00008a70
0000894e(5): MOV ESI,0x10
00008953(3): MOV RDI,RBX
00008956(5): CALL 0x000026b0
0000895b(3): TEST RAX,RAX
0000895e(4): MOV qword ptr [RSP],RAX
00008962(6): JZ 0x00008a10
00008968(5): MOV qword ptr [RSP + 0x10],RBX
0000896d(4): SHL RBX,0x4
00008971(5): MOV qword ptr [RSP + 0x28],R12
00008976(3): ADD RBX,RAX
00008979(4): MOV RAX,qword ptr [RBP + 0x30]
0000897d(3): MOV R12,RSP
00008980(2): XOR EDX,EDX
00008982(3): MOV RSI,RBP
00008985(3): MOV RDI,R12
00008988(5): MOV qword ptr [RSP + 0x8],RBX
0000898d(9): MOV qword ptr [RSP + 0x18],0x0
00008996(5): MOV qword ptr [RSP + 0x30],RAX
0000899b(4): MOV RAX,qword ptr [RBP + 0x38]
0000899f(9): MOV qword ptr [RSP + 0x20],0x0
000089a8(5): MOV qword ptr [RSP + 0x38],RAX
000089ad(4): MOV RAX,qword ptr [RBP + 0x40]
000089b1(5): MOV qword ptr [RSP + 0x40],RAX
000089b6(4): MOV RAX,qword ptr [RBP + 0x48]
000089ba(5): MOV qword ptr [RSP + 0x48],RAX
000089bf(5): CALL 0x00007f80
000089c4(2): TEST AL,AL
000089c6(2): MOV EBX,EAX
000089c8(6): JNZ 0x00008a80
000089ce(5): MOV RAX,qword ptr [RSP + 0x48]
000089d3(5): MOV EDX,0x1
000089d8(3): MOV RSI,R12
000089db(3): MOV RDI,RBP
000089de(4): MOV qword ptr [RBP + 0x48],RAX
000089e2(5): CALL 0x00007f80
000089e7(2): TEST AL,AL
000089e9(6): JZ 0x00008ac9
000089ef(2): XOR EDX,EDX
000089f1(3): MOV RSI,R12
000089f4(3): MOV RDI,RBP
000089f7(5): CALL 0x00007f80
000089fc(2): TEST AL,AL
000089fe(6): JZ 0x00008ac9
00008a04(4): MOV RDI,qword ptr [RSP]
00008a08(5): CALL 0x00002a10
00008a0d(2): JMP 0x00008a12
00008a10(2): XOR EBX,EBX
00008a12(5): MOV RCX,qword ptr [RSP + 0x58]
00008a17(9): XOR RCX,qword ptr FS:[0x28]
00008a20(2): MOV EAX,EBX
00008a22(6): JNZ 0x00008aba
00008a28(4): ADD RSP,0x60
00008a2c(1): POP RBX
00008a2d(1): POP RBP
00008a2e(2): POP R12
00008a30(1): RET
00008a38(3): MOV RAX,RSI
00008a3b(4): PXOR XMM0,XMM0
00008a3f(3): SHR RAX,1
00008a42(3): AND ESI,0x1
00008a45(3): OR RAX,RSI
00008a48(5): CVTSI2SS XMM0,RAX
00008a4d(4): ADDSS XMM0,XMM0
00008a51(5): JMP 0x000088c9
00008a60(5): CVTTSS2SI RSI,XMM0
00008a65(5): JMP 0x00008908
00008a70(5): MOV EBX,0x1
00008a75(2): JMP 0x00008a12
00008a80(4): MOV RDI,qword ptr [RBP]
00008a84(5): CALL 0x00002a10
00008a89(4): MOV RAX,qword ptr [RSP]
00008a8d(4): MOV qword ptr [RBP],RAX
00008a91(5): MOV RAX,qword ptr [RSP + 0x8]
00008a96(4): MOV qword ptr [RBP + 0x8],RAX
00008a9a(5): MOV RAX,qword ptr [RSP + 0x10]
00008a9f(4): MOV qword ptr [RBP + 0x10],RAX
00008aa3(5): MOV RAX,qword ptr [RSP + 0x18]
00008aa8(4): MOV qword ptr [RBP + 0x18],RAX
00008aac(5): MOV RAX,qword ptr [RSP + 0x48]
00008ab1(4): MOV qword ptr [RBP + 0x48],RAX
00008ab5(5): JMP 0x00008a12
00008aba(5): CALL 0x00002560
00008abf(5): MOV ECX,0x1
00008ac4(5): JMP 0x00008926
00008ac9(5): CALL 0x00002400
00008ace(2): NOP
00008ad0(2): PUSH R13
00008ad2(2): PUSH R12
00008ad4(1): PUSH RBP
00008ad5(1): PUSH RBX
00008ad6(4): SUB RSP,0x18
00008ada(9): MOV RAX,qword ptr FS:[0x28]
00008ae3(5): MOV qword ptr [RSP + 0x8],RAX
00008ae8(2): XOR EAX,EAX
00008aea(3): TEST RSI,RSI
00008aed(6): JZ 0x00008cad
00008af3(3): MOV R12,RSP
00008af6(2): XOR ECX,ECX
00008af8(3): MOV R13,RDX
00008afb(3): MOV RDX,R12
00008afe(3): MOV RBX,RDI
00008b01(3): MOV RBP,RSI
00008b04(5): CALL 0x00007de0
00008b09(3): TEST RAX,RAX
00008b0c(3): MOV RDX,RAX
00008b0f(2): JZ 0x00008b40
00008b11(2): XOR EAX,EAX
00008b13(3): TEST R13,R13
00008b16(2): JZ 0x00008b1c
00008b18(4): MOV qword ptr [R13],RDX
00008b1c(5): MOV RCX,qword ptr [RSP + 0x8]
00008b21(9): XOR RCX,qword ptr FS:[0x28]
00008b2a(6): JNZ 0x00008d4f
00008b30(4): ADD RSP,0x18
00008b34(1): POP RBX
00008b35(1): POP RBP
00008b36(2): POP R12
00008b38(2): POP R13
00008b3a(1): RET
00008b40(4): MOV RAX,qword ptr [RBX + 0x18]
00008b44(3): TEST RAX,RAX
00008b47(2): JS 0x00008bc0
00008b49(4): PXOR XMM1,XMM1
00008b4d(4): MOV RDX,qword ptr [RBX + 0x28]
00008b51(5): CVTSI2SS XMM1,RAX
00008b56(4): MOV RAX,qword ptr [RBX + 0x10]
00008b5a(3): TEST RAX,RAX
00008b5d(6): JS 0x00008bea
00008b63(4): PXOR XMM0,XMM0
00008b67(5): CVTSI2SS XMM0,RAX
00008b6c(5): MULSS XMM0,dword ptr [RDX + 0x8]
00008b71(3): UCOMISS XMM1,XMM0
00008b74(6): JA 0x00008c10
00008b7a(4): MOV R12,qword ptr [RSP]
00008b7e(5): CMP qword ptr [R12],0x0
00008b83(6): JZ 0x00008cb8
00008b89(4): MOV RAX,qword ptr [RBX + 0x48]
00008b8d(3): TEST RAX,RAX
00008b90(6): JZ 0x00008cd0
00008b96(4): MOV RDX,qword ptr [RAX + 0x8]
00008b9a(4): MOV qword ptr [RBX + 0x48],RDX
00008b9e(5): MOV RDX,qword ptr [R12 + 0x8]
00008ba3(3): MOV qword ptr [RAX],RBP
00008ba6(4): MOV qword ptr [RAX + 0x8],RDX
00008baa(5): MOV qword ptr [R12 + 0x8],RAX
00008baf(5): MOV EAX,0x1
00008bb4(5): ADD qword ptr [RBX + 0x20],0x1
00008bb9(5): JMP 0x00008b1c
00008bc0(3): MOV RDX,RAX
00008bc3(4): PXOR XMM1,XMM1
00008bc7(3): AND EAX,0x1
00008bca(3): SHR RDX,1
00008bcd(3): OR RDX,RAX
00008bd0(4): MOV RAX,qword ptr [RBX + 0x10]
00008bd4(5): CVTSI2SS XMM1,RDX
00008bd9(4): MOV RDX,qword ptr [RBX + 0x28]
00008bdd(3): TEST RAX,RAX
00008be0(4): ADDSS XMM1,XMM1
00008be4(6): JNS 0x00008b63
00008bea(3): MOV RCX,RAX
00008bed(4): PXOR XMM0,XMM0
00008bf1(3): SHR RCX,1
00008bf4(3): AND EAX,0x1
00008bf7(3): OR RCX,RAX
00008bfa(5): CVTSI2SS XMM0,RCX
00008bff(4): ADDSS XMM0,XMM0
00008c03(5): JMP 0x00008b6c
00008c10(4): LEA RDI,[RBX + 0x28]
00008c14(5): CALL 0x00007f00
00008c19(4): MOV RAX,qword ptr [RBX + 0x10]
00008c1d(4): MOV RDX,qword ptr [RBX + 0x28]
00008c21(3): TEST RAX,RAX
00008c24(5): MOVSS XMM2,dword ptr [RDX + 0x8]
00008c29(6): JS 0x00008cf0
00008c2f(4): PXOR XMM0,XMM0
00008c33(5): CVTSI2SS XMM0,RAX
00008c38(4): MOV RAX,qword ptr [RBX + 0x18]
00008c3c(3): TEST RAX,RAX
00008c3f(6): JS 0x00008d10
00008c45(4): PXOR XMM1,XMM1
00008c49(5): CVTSI2SS XMM1,RAX
00008c4e(3): MOVAPS XMM3,XMM2
00008c51(4): MULSS XMM3,XMM0
00008c55(3): UCOMISS XMM1,XMM3
00008c58(6): JBE 0x00008b7a
00008c5e(4): CMP byte ptr [RDX + 0x10],0x0
00008c62(5): MULSS XMM0,dword ptr [RDX + 0xc]
00008c67(2): JNZ 0x00008c6d
00008c69(4): MULSS XMM0,XMM2
00008c6d(7): UCOMISS XMM0,dword ptr [0x000219cc]
00008c74(2): JNC 0x00008ce3
00008c76(7): UCOMISS XMM0,dword ptr [0x000219d0]
00008c7d(6): JNC 0x00008d30
00008c83(5): CVTTSS2SI RSI,XMM0
00008c88(3): MOV RDI,RBX
00008c8b(5): CALL 0x00008890
00008c90(2): TEST AL,AL
00008c92(2): JZ 0x00008ce3
00008c94(2): XOR ECX,ECX
00008c96(3): MOV RDX,R12
00008c99(3): MOV RSI,RBP
00008c9c(3): MOV RDI,RBX
00008c9f(5): CALL 0x00007de0
00008ca4(3): TEST RAX,RAX
00008ca7(6): JZ 0x00008b7a
00008cad(5): CALL 0x00002400
00008cb2(6): NOP word ptr [RAX + RAX*0x1]
00008cb8(4): MOV qword ptr [R12],RBP
00008cbc(5): MOV EAX,0x1
00008cc1(5): ADD qword ptr [RBX + 0x20],0x1
00008cc6(5): ADD qword ptr [RBX + 0x18],0x1
00008ccb(5): JMP 0x00008b1c
00008cd0(5): MOV EDI,0x10
00008cd5(5): CALL 0x00002780
00008cda(3): TEST RAX,RAX
00008cdd(6): JNZ 0x00008b9e
00008ce3(5): MOV EAX,0xffffffff
00008ce8(5): JMP 0x00008b1c
00008cf0(3): MOV RCX,RAX
00008cf3(4): PXOR XMM0,XMM0
00008cf7(3): SHR RCX,1
00008cfa(3): AND EAX,0x1
00008cfd(3): OR RCX,RAX
00008d00(5): CVTSI2SS XMM0,RCX
00008d05(4): ADDSS XMM0,XMM0
00008d09(5): JMP 0x00008c38
00008d10(3): MOV RCX,RAX
00008d13(4): PXOR XMM1,XMM1
00008d17(3): SHR RCX,1
00008d1a(3): AND EAX,0x1
00008d1d(3): OR RCX,RAX
00008d20(5): CVTSI2SS XMM1,RCX
00008d25(4): ADDSS XMM1,XMM1
00008d29(5): JMP 0x00008c4e
00008d30(8): SUBSS XMM0,dword ptr [0x000219d0]
00008d38(10): MOV RAX,-0x8000000000000000
00008d42(5): CVTTSS2SI RSI,XMM0
00008d47(3): XOR RSI,RAX
00008d4a(5): JMP 0x00008c88
00008d4f(5): CALL 0x00002560
00008d54(2): NOP
00008d56(10): NOP word ptr CS:[RAX + RAX*0x1]
00008d60(1): PUSH RBX
00008d61(3): MOV RBX,RSI
00008d64(4): SUB RSP,0x10
00008d68(3): MOV RDX,RSP
00008d6b(9): MOV RAX,qword ptr FS:[0x28]
00008d74(5): MOV qword ptr [RSP + 0x8],RAX
00008d79(2): XOR EAX,EAX
00008d7b(5): CALL 0x00008ad0
00008d80(3): CMP EAX,-0x1
00008d83(2): JZ 0x00008db0
00008d85(2): TEST EAX,EAX
00008d87(2): JNZ 0x00008d8d
00008d89(4): MOV RBX,qword ptr [RSP]
00008d8d(5): MOV RCX,qword ptr [RSP + 0x8]
00008d92(9): XOR RCX,qword ptr FS:[0x28]
00008d9b(3): MOV RAX,RBX
00008d9e(2): JNZ 0x00008db4
00008da0(4): ADD RSP,0x10
00008da4(1): POP RBX
00008da5(1): RET
00008db0(2): XOR EBX,EBX
00008db2(2): JMP 0x00008d8d
00008db4(5): CALL 0x00002560
00008db9(7): NOP dword ptr [RAX]
00008dc0(2): PUSH R12
00008dc2(1): PUSH RBP
00008dc3(5): MOV ECX,0x1
00008dc8(1): PUSH RBX
00008dc9(3): MOV RBX,RDI
00008dcc(4): SUB RSP,0x10
00008dd0(3): MOV RDX,RSP
00008dd3(9): MOV RAX,qword ptr FS:[0x28]
00008ddc(5): MOV qword ptr [RSP + 0x8],RAX
00008de1(2): XOR EAX,EAX
00008de3(5): CALL 0x00007de0
00008de8(3): TEST RAX,RAX
00008deb(3): MOV RBP,RAX
00008dee(2): JZ 0x00008dff
00008df0(4): MOV RAX,qword ptr [RSP]
00008df4(5): SUB qword ptr [RBX + 0x20],0x1
00008df9(4): CMP qword ptr [RAX],0x0
00008dfd(2): JZ 0x00008e20
00008dff(5): MOV RCX,qword ptr [RSP + 0x8]
00008e04(9): XOR RCX,qword ptr FS:[0x28]
00008e0d(3): MOV RAX,RBP
00008e10(6): JNZ 0x00008fbe
00008e16(4): ADD RSP,0x10
00008e1a(1): POP RBX
00008e1b(1): POP RBP
00008e1c(2): POP R12
00008e1e(1): RET
00008e20(4): MOV RAX,qword ptr [RBX + 0x18]
00008e24(4): SUB RAX,0x1
00008e28(3): TEST RAX,RAX
00008e2b(4): MOV qword ptr [RBX + 0x18],RAX
00008e2f(6): JS 0x00008f30
00008e35(4): PXOR XMM0,XMM0
00008e39(5): CVTSI2SS XMM0,RAX
00008e3e(4): MOV RAX,qword ptr [RBX + 0x10]
00008e42(4): MOV RDX,qword ptr [RBX + 0x28]
00008e46(3): TEST RAX,RAX
00008e49(6): JS 0x00008f10
00008e4f(4): PXOR XMM1,XMM1
00008e53(5): CVTSI2SS XMM1,RAX
00008e58(4): MULSS XMM1,dword ptr [RDX]
00008e5c(3): UCOMISS XMM1,XMM0
00008e5f(2): JBE 0x00008dff
00008e61(4): LEA RDI,[RBX + 0x28]
00008e65(5): CALL 0x00007f00
00008e6a(4): MOV RAX,qword ptr [RBX + 0x10]
00008e6e(4): MOV RDX,qword ptr [RBX + 0x28]
00008e72(3): TEST RAX,RAX
00008e75(6): JS 0x00008fa0
00008e7b(4): PXOR XMM0,XMM0
00008e7f(5): CVTSI2SS XMM0,RAX
00008e84(4): MOV RAX,qword ptr [RBX + 0x18]
00008e88(3): TEST RAX,RAX
00008e8b(6): JS 0x00008f80
00008e91(4): PXOR XMM1,XMM1
00008e95(5): CVTSI2SS XMM1,RAX
00008e9a(4): MOVSS XMM2,dword ptr [RDX]
00008e9e(4): MULSS XMM2,XMM0
00008ea2(3): UCOMISS XMM2,XMM1
00008ea5(6): JBE 0x00008dff
00008eab(4): CMP byte ptr [RDX + 0x10],0x0
00008eaf(5): MULSS XMM0,dword ptr [RDX + 0x4]
00008eb4(6): JZ 0x00008f70
00008eba(7): UCOMISS XMM0,dword ptr [0x000219d0]
00008ec1(6): JNC 0x00008f50
00008ec7(5): CVTTSS2SI RSI,XMM0
00008ecc(3): MOV RDI,RBX
00008ecf(5): CALL 0x00008890
00008ed4(2): TEST AL,AL
00008ed6(6): JNZ 0x00008dff
00008edc(4): MOV RDI,qword ptr [RBX + 0x48]
00008ee0(3): TEST RDI,RDI
00008ee3(2): JZ 0x00008ef9
00008ee5(3): NOP dword ptr [RAX]
00008ee8(4): MOV R12,qword ptr [RDI + 0x8]
00008eec(5): CALL 0x00002a10
00008ef1(3): TEST R12,R12
00008ef4(3): MOV RDI,R12
00008ef7(2): JNZ 0x00008ee8
00008ef9(8): MOV qword ptr [RBX + 0x48],0x0
00008f01(5): JMP 0x00008dff
00008f10(3): MOV RCX,RAX
00008f13(4): PXOR XMM1,XMM1
00008f17(3): SHR RCX,1
00008f1a(3): AND EAX,0x1
00008f1d(3): OR RCX,RAX
00008f20(5): CVTSI2SS XMM1,RCX
00008f25(4): ADDSS XMM1,XMM1
00008f29(5): JMP 0x00008e58
00008f30(3): MOV RDX,RAX
00008f33(4): PXOR XMM0,XMM0
00008f37(3): SHR RDX,1
00008f3a(3): AND EAX,0x1
00008f3d(3): OR RDX,RAX
00008f40(5): CVTSI2SS XMM0,RDX
00008f45(4): ADDSS XMM0,XMM0
00008f49(5): JMP 0x00008e3e
00008f50(8): SUBSS XMM0,dword ptr [0x000219d0]
00008f58(10): MOV RAX,-0x8000000000000000
00008f62(5): CVTTSS2SI RSI,XMM0
00008f67(3): XOR RSI,RAX
00008f6a(5): JMP 0x00008ecc
00008f70(5): MULSS XMM0,dword ptr [RDX + 0x8]
00008f75(5): JMP 0x00008eba
00008f80(3): MOV RCX,RAX
00008f83(4): PXOR XMM1,XMM1
00008f87(3): SHR RCX,1
00008f8a(3): AND EAX,0x1
00008f8d(3): OR RCX,RAX
00008f90(5): CVTSI2SS XMM1,RCX
00008f95(4): ADDSS XMM1,XMM1
00008f99(5): JMP 0x00008e9a
00008fa0(3): MOV RCX,RAX
00008fa3(4): PXOR XMM0,XMM0
00008fa7(3): SHR RCX,1
00008faa(3): AND EAX,0x1
00008fad(3): OR RCX,RAX
00008fb0(5): CVTSI2SS XMM0,RCX
00008fb5(4): ADDSS XMM0,XMM0
00008fb9(5): JMP 0x00008e84
00008fbe(5): CALL 0x00002560
00008fc3(10): NOP word ptr CS:[RAX + RAX*0x1]
00008fcd(3): NOP dword ptr [RAX]
00008fd0(6): FLD dword ptr [0x000219d0]
00008fd6(4): FLD tword ptr [RSP + 0x8]
00008fda(2): FUCOMI ST0,ST1
00008fdc(2): JNC 0x00009050
00008fde(2): FSTP ST1
00008fe0(4): FNSTCW word ptr [RSP + -0xa]
00008fe4(5): MOVZX EAX,word ptr [RSP + -0xa]
00008fe9(3): OR AH,0xc
00008fec(5): MOV word ptr [RSP + -0xc],AX
00008ff1(2): FLD ST0
00008ff3(4): FLDCW word ptr [RSP + -0xc]
00008ff7(4): FISTP qword ptr [RSP + -0x18]
00008ffb(4): FLDCW word ptr [RSP + -0xa]
00008fff(5): MOV RAX,qword ptr [RSP + -0x18]
00009004(5): MOV qword ptr [RSP + -0x20],RAX
00009009(3): TEST RAX,RAX
0000900c(4): FILD qword ptr [RSP + -0x20]
00009010(2): JNS 0x00009018
00009012(6): FADD dword ptr [0x000219cc]
00009018(2): TEST EDI,EDI
0000901a(2): JNZ 0x00009048
0000901c(2): FXCH
0000901e(2): FUCOMIP ST0,ST1
00009020(2): JP 0x00009028
00009022(2): JZ 0x0000904a
00009024(2): FSTP ST0
00009026(2): JMP 0x00009030
00009028(2): FSTP ST0
0000902a(6): NOP word ptr [RAX + RAX*0x1]
00009030(4): ADD RAX,0x1
00009034(5): MOV qword ptr [RSP + -0x20],RAX
00009039(3): TEST RAX,RAX
0000903c(4): FILD qword ptr [RSP + -0x20]
00009040(2): JS 0x00009090
00009042(2): JMP 0x0000904a
00009048(2): FSTP ST1
0000904a(2): RET
00009050(4): FNSTCW word ptr [RSP + -0xa]
00009054(5): MOVZX EAX,word ptr [RSP + -0xa]
00009059(2): FSUBR ST1,ST0
0000905b(2): FXCH
0000905d(10): MOV RDX,-0x8000000000000000
00009067(3): OR AH,0xc
0000906a(5): MOV word ptr [RSP + -0xc],AX
0000906f(4): FLDCW word ptr [RSP + -0xc]
00009073(4): FISTP qword ptr [RSP + -0x18]
00009077(4): FLDCW word ptr [RSP + -0xa]
0000907b(5): MOV RAX,qword ptr [RSP + -0x18]
00009080(3): XOR RAX,RDX
00009083(5): JMP 0x00009004
00009090(6): FADD dword ptr [0x000219cc]
00009096(1): RET
000090a0(2): PUSH R15
000090a2(2): PUSH R14
000090a4(2): MOV EAX,EDX
000090a6(2): PUSH R13
000090a8(2): PUSH R12
000090aa(3): MOV R15D,EDX
000090ad(1): PUSH RBP
000090ae(1): PUSH RBX
000090af(3): AND EAX,0x20
000090b2(4): AND R15D,0x3
000090b6(3): MOV R12D,EDX
000090b9(3): MOV RBX,RDI
000090bc(7): SUB RSP,0x98
000090c3(5): MOV qword ptr [RSP + 0x18],RCX
000090c8(4): MOV dword ptr [RSP + 0x30],EAX
000090cc(9): MOV RCX,qword ptr FS:[0x28]
000090d5(8): MOV qword ptr [0x88 + RSP],RCX
000090dd(2): XOR ECX,ECX
000090df(3): CMP EAX,0x1
000090e2(4): MOV qword ptr [RSP],RSI
000090e6(5): MOV qword ptr [RSP + 0x10],R8
000090eb(2): SBB EAX,EAX
000090ed(3): AND EAX,0xffffffe8
000090f0(5): ADD EAX,0x400
000090f5(4): MOV dword ptr [RSP + 0x34],EAX
000090f9(5): CALL 0x00002490
000090fe(3): MOV R14,qword ptr [RAX]
00009101(3): MOV R13,RAX
00009104(3): MOV RDI,R14
00009107(5): CALL 0x00002530
0000910c(4): MOV RCX,qword ptr [R13 + 0x10]
00009110(4): MOV R13,qword ptr [R13 + 0x8]
00009114(3): MOV RBP,RAX
00009117(4): SUB RAX,0x1
0000911b(5): MOV EDX,0x1
00009120(4): CMP RAX,0x10
00009124(7): LEA RAX,[0x2269c]
0000912b(3): MOV RDI,R13
0000912e(4): CMOVNC RBP,RDX
00009132(5): MOV qword ptr [RSP + 0x38],RCX
00009137(4): CMOVNC R14,RAX
0000913b(5): CALL 0x00002530
00009140(4): CMP RAX,0x11
00009144(7): LEA RAX,[0x21fe1]
0000914b(5): MOV RDI,qword ptr [RSP + 0x10]
00009150(5): MOV RCX,qword ptr [RSP + 0x18]
00009155(4): CMOVNC R13,RAX
00009159(4): MOV RAX,qword ptr [RSP]
0000915d(6): ADD RAX,0x287
00009163(3): CMP RDI,RCX
00009166(5): MOV qword ptr [RSP + 0x8],RAX
0000916b(6): JA 0x000092b8
00009171(2): XOR EDX,EDX
00009173(3): MOV RAX,RCX
00009176(3): DIV RDI
00009179(3): TEST RDX,RDX
0000917c(3): MOV RDI,RAX
0000917f(6): JZ 0x000094e0
00009185(5): MOV qword ptr [RSP + 0x18],RCX
0000918a(3): TEST RCX,RCX
0000918d(4): FILD qword ptr [RSP + 0x18]
00009191(2): JNS 0x00009199
00009193(6): FADD dword ptr [0x000219cc]
00009199(5): MOV RAX,qword ptr [RSP + 0x10]
0000919e(5): MOV qword ptr [RSP + 0x18],RAX
000091a3(3): TEST RAX,RAX
000091a6(4): FILD qword ptr [RSP + 0x18]
000091aa(2): JNS 0x000091b2
000091ac(6): FADD dword ptr [0x000219cc]
000091b2(2): FDIVP
000091b4(5): MOV qword ptr [RSP + 0x18],RBX
000091b9(3): TEST RBX,RBX
000091bc(4): FILD qword ptr [RSP + 0x18]
000091c0(2): JNS 0x000091c8
000091c2(6): FADD dword ptr [0x000219cc]
000091c8(4): TEST R12B,0x10
000091cc(2): FMULP
000091ce(6): JZ 0x00009398
000091d4(4): FILD dword ptr [RSP + 0x34]
000091d8(2): XOR EBX,EBX
000091da(2): FLD ST0
000091dc(2): JMP 0x000091e4
000091e0(2): FSTP ST1
000091e2(2): FXCH ST2
000091e4(2): FLD ST0
000091e6(3): ADD EBX,0x1
000091e9(2): FMUL ST2
000091eb(2): FXCH ST3
000091ed(2): FUCOMI ST0,ST3
000091ef(2): JC 0x00009200
000091f1(3): CMP EBX,0x8
000091f4(2): JNZ 0x000091e0
000091f6(2): FSTP ST2
000091f8(2): FSTP ST2
000091fa(2): JMP 0x00009204
00009200(2): FSTP ST2
00009202(2): FSTP ST2
00009204(4): MOV ECX,dword ptr [RSP + 0x30]
00009208(4): ADD RBP,0x1
0000920c(2): XOR EAX,EAX
0000920e(2): FDIVRP
00009210(2): TEST ECX,ECX
00009212(3): SETZ AL
00009215(4): CMP R15D,0x1
00009219(5): LEA RAX,[RBP + RAX*0x1 + 0x1]
0000921e(5): MOV qword ptr [RSP + 0x18],RAX
00009223(6): JZ 0x00009790
00009229(6): FLD tword ptr [0x00021a30]
0000922f(2): FUCOMIP ST0,ST1
00009231(6): JA 0x00009608
00009237(2): FLD ST0
00009239(4): FSTP tword ptr [RSP + 0x20]
0000923d(4): SUB RSP,0x10
00009241(7): LEA RCX,[0x219e6]
00009248(5): MOV ESI,0x1
0000924d(7): MOV RDX,-0x1
00009254(2): XOR EAX,EAX
00009256(5): MOV R14,qword ptr [RSP + 0x10]
0000925b(3): MOV RDI,R14
0000925e(3): FSTP tword ptr [RSP]
00009261(5): CALL 0x00002a00
00009266(3): MOV RDI,R14
00009269(5): CALL 0x00002530
0000926e(1): POP RCX
0000926f(1): POP RSI
00009270(5): CMP RAX,qword ptr [RSP + 0x18]
00009275(3): MOV R14,RAX
00009278(4): FLD tword ptr [RSP + 0x20]
0000927c(6): JA 0x00009828
00009282(4): TEST R12B,0x8
00009286(6): JZ 0x000093f0
0000928c(4): MOV RAX,qword ptr [RSP]
00009290(6): CMP byte ptr [RAX + R14*0x1 + -0x1],0x30
00009296(6): JNZ 0x000093f8
0000929c(6): FLD dword ptr [0x00021a2c]
000092a2(4): CMP R15D,0x1
000092a6(2): FMUL ST1
000092a8(6): JNZ 0x00009830
000092ae(5): JMP 0x000097e3
000092b8(3): TEST RCX,RCX
000092bb(6): JZ 0x00009185
000092c1(5): MOV RAX,qword ptr [RSP + 0x10]
000092c6(2): XOR EDX,EDX
000092c8(3): DIV RCX
000092cb(3): TEST RDX,RDX
000092ce(3): MOV R8,RAX
000092d1(6): JNZ 0x00009185
000092d7(3): MOV RAX,RBX
000092da(2): XOR EDX,EDX
000092dc(3): DIV R8
000092df(3): MOV RBX,RAX
000092e2(4): LEA RAX,[RDX + RDX*0x4]
000092e6(2): XOR EDX,EDX
000092e8(3): MOV RSI,RBX
000092eb(3): ADD RAX,RAX
000092ee(3): DIV R8
000092f1(3): ADD RDX,RDX
000092f4(3): MOV R9D,EAX
000092f7(3): CMP R8,RDX
000092fa(6): JBE 0x00009888
00009300(2): XOR EDI,EDI
00009302(3): TEST RDX,RDX
00009305(4): SETNZ DIL
00009309(3): MOV ECX,R12D
0000930c(5): MOV R8,qword ptr [RSP + 0x8]
00009311(5): MOV EBX,0xffffffff
00009316(3): AND ECX,0x10
00009319(6): JZ 0x000096e0
0000931f(5): MOV R8D,dword ptr [RSP + 0x34]
00009324(3): CMP R8,RSI
00009327(3): MOV R11,R8
0000932a(6): JA 0x000098a0
00009330(2): XOR EBX,EBX
00009332(2): JMP 0x00009357
00009338(2): TEST EDI,EDI
0000933a(4): SETNZ DIL
0000933e(4): MOVZX EDI,DIL
00009342(3): ADD EBX,0x1
00009345(3): CMP R8,R10
00009348(6): JA 0x0000965d
0000934e(3): CMP EBX,0x8
00009351(6): JZ 0x000098f8
00009357(3): MOV RAX,RSI
0000935a(2): XOR EDX,EDX
0000935c(2): MOV ESI,EDI
0000935e(3): DIV R8
00009361(2): SAR ESI,1
00009363(3): MOV R10,RAX
00009366(3): LEA EAX,[RDX + RDX*0x4]
00009369(2): XOR EDX,EDX
0000936b(4): LEA EAX,[R9 + RAX*0x2]
0000936f(3): DIV R11D
00009372(3): LEA EDX,[RSI + RDX*0x2]
00009375(3): MOV R9D,EAX
00009378(3): MOV RSI,R10
0000937b(2): ADD EDI,EDX
0000937d(3): CMP R11D,EDX
00009380(2): JA 0x00009338
00009382(3): CMP R11D,EDI
00009385(4): SETC DIL
00009389(4): MOVZX EDI,DIL
0000938d(3): ADD EDI,0x2
00009390(2): JMP 0x00009342
00009398(4): CMP R15D,0x1
0000939c(2): JZ 0x000093ac
0000939e(6): FLD tword ptr [0x00021a30]
000093a4(2): FUCOMIP ST0,ST1
000093a6(6): JA 0x00009630
000093ac(4): SUB RSP,0x10
000093b0(7): LEA RCX,[0x219e0]
000093b7(5): MOV ESI,0x1
000093bc(5): MOV RBX,qword ptr [RSP + 0x10]
000093c1(7): MOV RDX,-0x1
000093c8(2): XOR EAX,EAX
000093ca(3): FSTP tword ptr [RSP]
000093cd(2): XOR EBP,EBP
000093cf(3): MOV RDI,RBX
000093d2(5): CALL 0x00002a00
000093d7(3): MOV RDI,RBX
000093da(5): MOV EBX,0xffffffff
000093df(5): CALL 0x00002530
000093e4(1): POP RSI
000093e5(1): POP RDI
000093e6(3): MOV R14,RAX
000093e9(2): JMP 0x00009400
000093f0(2): FSTP ST0
000093f2(2): JMP 0x00009400
000093f8(2): FSTP ST0
000093fa(6): NOP word ptr [RAX + RAX*0x1]
00009400(5): MOV R15,qword ptr [RSP + 0x8]
00009405(4): MOV RSI,qword ptr [RSP]
00009409(3): MOV RDX,R14
0000940c(3): SUB R15,R14
0000940f(3): SUB R14,RBP
00009412(3): MOV RDI,R15
00009415(5): CALL 0x00002890
0000941a(3): MOV R8,R14
0000941d(3): ADD R8,R15
00009420(4): TEST R12B,0x4
00009424(6): JNZ 0x00009508
0000942a(4): TEST R12B,0x80
0000942e(2): JZ 0x000094a7
00009430(3): CMP EBX,-0x1
00009433(6): JZ 0x00009750
00009439(3): MOV EAX,R12D
0000943c(5): AND EAX,0x100
00009441(2): MOV ECX,EAX
00009443(2): OR ECX,EBX
00009445(2): JZ 0x000094a7
00009447(4): AND R12D,0x40
0000944b(6): JNZ 0x000095e8
00009451(2): TEST EBX,EBX
00009453(6): JZ 0x00009a86
00009459(3): CMP EBX,0x1
0000945c(2): JNZ 0x0000946c
0000945e(5): MOV R9D,dword ptr [RSP + 0x30]
00009463(3): TEST R9D,R9D
00009466(6): JZ 0x000098b0
0000946c(7): LEA RCX,[0x21a20]
00009473(3): MOVSXD RBX,EBX
00009476(5): MOV RDI,qword ptr [RSP + 0x8]
0000947b(2): TEST EAX,EAX
0000947d(4): MOVZX ECX,byte ptr [RCX + RBX*0x1]
00009481(4): LEA RDX,[RDI + 0x1]
00009485(2): MOV byte ptr [RDI],CL
00009487(6): JZ 0x000098c4
0000948d(5): MOV R8D,dword ptr [RSP + 0x30]
00009492(3): TEST R8D,R8D
00009495(6): JNZ 0x00009650
0000949b(4): LEA RAX,[RDX + 0x1]
0000949f(3): MOV byte ptr [RDX],0x42
000094a2(5): MOV qword ptr [RSP + 0x8],RAX
000094a7(5): MOV RAX,qword ptr [RSP + 0x8]
000094ac(8): MOV RCX,qword ptr [0x88 + RSP]
000094b4(9): XOR RCX,qword ptr FS:[0x28]
000094bd(3): MOV byte ptr [RAX],0x0
000094c0(3): MOV RAX,R15
000094c3(6): JNZ 0x00009a5b
000094c9(7): ADD RSP,0x98
000094d0(1): POP RBX
000094d1(1): POP RBP
000094d2(2): POP R12
000094d4(2): POP R13
000094d6(2): POP R14
000094d8(2): POP R15
000094da(1): RET
000094e0(3): MOV RSI,RBX
000094e3(2): XOR EDX,EDX
000094e5(4): IMUL RSI,RAX
000094e9(3): MOV RAX,RSI
000094ec(3): DIV RDI
000094ef(3): CMP RAX,RBX
000094f2(6): JNZ 0x00009185
000094f8(2): XOR EDI,EDI
000094fa(3): XOR R9D,R9D
000094fd(5): JMP 0x00009309
00009508(3): MOV R14,R8
0000950b(3): MOV RDI,R13
0000950e(5): MOV qword ptr [RSP + 0x48],R8
00009513(3): SUB R14,R15
00009516(7): MOV RBP,-0x1
0000951d(5): CALL 0x00002530
00009522(5): LEA RDI,[RSP + 0x50]
00009527(5): MOV ECX,0x29
0000952c(3): MOV RDX,R14
0000952f(3): MOV RSI,R15
00009532(5): MOV qword ptr [RSP + 0x40],RAX
00009537(5): MOV qword ptr [RSP + 0x18],RDI
0000953c(5): CALL 0x000026f0
00009541(3): MOV ECX,R12D
00009544(4): MOV dword ptr [RSP + 0x20],EBX
00009548(3): MOV R12,R14
0000954b(3): MOV RBX,R13
0000954e(5): MOV R8,qword ptr [RSP + 0x48]
00009553(5): MOV R15,qword ptr [RSP + 0x38]
00009558(5): MOV R13,qword ptr [RSP + 0x40]
0000955d(3): MOV R14D,ECX
00009560(2): JMP 0x000095a2
00009568(5): MOV RAX,qword ptr [RSP + 0x18]
0000956d(3): SUB R12,RBP
00009570(3): SUB R8,RBP
00009573(3): MOV RDI,R8
00009576(3): MOV RDX,RBP
00009579(4): LEA RSI,[RAX + R12*0x1]
0000957d(5): CALL 0x00002710
00009582(3): TEST R12,R12
00009585(3): MOV R8,RAX
00009588(6): JZ 0x00009a98
0000958e(3): SUB R8,R13
00009591(3): MOV RDX,R13
00009594(3): MOV RSI,RBX
00009597(3): MOV RDI,R8
0000959a(5): CALL 0x00002710
0000959f(3): MOV R8,RAX
000095a2(4): MOVZX EAX,byte ptr [R15]
000095a6(2): TEST AL,AL
000095a8(2): JZ 0x000095b7
000095aa(2): CMP AL,0x7f
000095ac(3): MOVZX EBP,AL
000095af(4): CMOVNC RBP,R12
000095b3(4): ADD R15,0x1
000095b7(3): CMP RBP,R12
000095ba(2): JBE 0x00009568
000095bc(3): MOV EAX,R14D
000095bf(3): MOV R15,R8
000095c2(3): MOV R14,R12
000095c5(5): MOV RSI,qword ptr [RSP + 0x18]
000095ca(3): SUB R15,R14
000095cd(3): MOV RDX,R14
000095d0(3): MOV RDI,R15
000095d3(4): MOV EBX,dword ptr [RSP + 0x20]
000095d7(3): MOV R12D,EAX
000095da(5): CALL 0x00002710
000095df(5): JMP 0x0000942a
000095e8(4): MOV RCX,qword ptr [RSP]
000095ec(7): LEA RDI,[0x288 + RCX]
000095f3(7): MOV byte ptr [0x287 + RCX],0x20
000095fa(5): MOV qword ptr [RSP + 0x8],RDI
000095ff(5): JMP 0x00009451
00009608(4): SUB RSP,0x10
0000960c(3): MOV EDI,R15D
0000960f(2): FLD ST0
00009611(3): FSTP tword ptr [RSP]
00009614(4): FSTP tword ptr [RSP + 0x30]
00009618(5): CALL 0x00008fd0
0000961d(1): POP RAX
0000961e(1): POP RDX
0000961f(4): FLD tword ptr [RSP + 0x20]
00009623(5): JMP 0x00009239
00009630(4): SUB RSP,0x10
00009634(3): MOV EDI,R15D
00009637(3): FSTP tword ptr [RSP]
0000963a(5): CALL 0x00008fd0
0000963f(2): POP R8
00009641(2): POP R9
00009643(5): JMP 0x000093ac
00009650(4): LEA RDX,[RDI + 0x2]
00009654(4): MOV byte ptr [RDI + 0x1],0x69
00009658(5): JMP 0x0000949b
0000965d(4): CMP R10,0x9
00009661(6): JA 0x000098f8
00009667(4): CMP R15D,0x1
0000966b(6): JZ 0x00009922
00009671(3): TEST R15D,R15D
00009674(3): SETZ DL
00009677(2): TEST EDI,EDI
00009679(4): SETG R8B
0000967d(3): AND EDX,R8D
00009680(2): TEST DL,DL
00009682(6): JZ 0x00009909
00009688(4): LEA R9D,[RAX + 0x1]
0000968c(4): CMP R9D,0xa
00009690(6): JZ 0x00009991
00009696(4): ADD R9D,0x30
0000969a(4): MOV RAX,qword ptr [RSP]
0000969e(7): LEA R8,[0x286 + RAX]
000096a5(7): MOV byte ptr [0x286 + RAX],R9B
000096ac(2): MOV EAX,EBP
000096ae(3): SUB R8,RBP
000096b1(3): CMP EBP,0x8
000096b4(6): JNC 0x00009941
000096ba(4): TEST BPL,0x4
000096be(6): JNZ 0x00009a46
000096c4(2): TEST EAX,EAX
000096c6(2): JZ 0x000096d7
000096c8(4): MOVZX EDX,byte ptr [R14]
000096cc(2): TEST AL,0x2
000096ce(3): MOV byte ptr [R8],DL
000096d1(6): JNZ 0x00009a60
000096d7(2): XOR EDI,EDI
000096d9(3): XOR R9D,R9D
000096dc(4): NOP dword ptr [RAX]
000096e0(4): CMP R15D,0x1
000096e4(6): JZ 0x00009860
000096ea(3): TEST R15D,R15D
000096ed(2): JNZ 0x00009710
000096ef(3): ADD EDI,R9D
000096f2(2): TEST EDI,EDI
000096f4(2): JLE 0x00009710
000096f6(4): ADD RSI,0x1
000096fa(2): TEST ECX,ECX
000096fc(2): JZ 0x00009710
000096fe(4): MOV EAX,dword ptr [RSP + 0x34]
00009702(3): CMP RAX,RSI
00009705(6): JZ 0x000098d0
0000970b(5): NOP dword ptr [RAX + RAX*0x1]
00009710(3): MOV R15,R8
00009713(10): MOV RCX,-0x3333333333333333
0000971d(3): NOP dword ptr [RAX]
00009720(3): MOV RAX,RSI
00009723(4): SUB R15,0x1
00009727(3): MUL RCX
0000972a(4): SHR RDX,0x3
0000972e(4): LEA RAX,[RDX + RDX*0x4]
00009732(3): ADD RAX,RAX
00009735(3): SUB RSI,RAX
00009738(3): ADD ESI,0x30
0000973b(3): TEST RDX,RDX
0000973e(3): MOV byte ptr [R15],SIL
00009741(3): MOV RSI,RDX
00009744(2): JNZ 0x00009720
00009746(5): JMP 0x00009420
00009750(5): MOV RCX,qword ptr [RSP + 0x10]
00009755(4): CMP RCX,0x1
00009759(6): JBE 0x00009902
0000975f(4): MOV EDX,dword ptr [RSP + 0x34]
00009763(5): MOV EBX,0x1
00009768(5): MOV EAX,0x1
0000976d(4): IMUL RAX,RDX
00009771(3): CMP RCX,RAX
00009774(6): JBE 0x00009439
0000977a(3): ADD EBX,0x1
0000977d(3): CMP EBX,0x8
00009780(2): JNZ 0x0000976d
00009782(5): JMP 0x00009439
00009790(4): SUB RSP,0x10
00009794(7): LEA RCX,[0x219e6]
0000979b(7): MOV RDX,-0x1
000097a2(2): FLD ST0
000097a4(3): FSTP tword ptr [RSP]
000097a7(5): MOV R14,qword ptr [RSP + 0x10]
000097ac(5): MOV ESI,0x1
000097b1(2): XOR EAX,EAX
000097b3(3): MOV RDI,R14
000097b6(4): FSTP tword ptr [RSP + 0x30]
000097ba(5): CALL 0x00002a00
000097bf(3): MOV RDI,R14
000097c2(5): CALL 0x00002530
000097c7(3): MOV R14,RAX
000097ca(1): POP RAX
000097cb(1): POP RDX
000097cc(5): CMP R14,qword ptr [RSP + 0x18]
000097d1(4): FLD tword ptr [RSP + 0x20]
000097d5(6): JBE 0x00009282
000097db(6): FLD dword ptr [0x00021a2c]
000097e1(2): FMUL ST1
000097e3(2): FDIVP
000097e5(4): SUB RSP,0x10
000097e9(7): LEA RCX,[0x219e0]
000097f0(5): MOV R14,qword ptr [RSP + 0x10]
000097f5(7): MOV RDX,-0x1
000097fc(5): MOV ESI,0x1
00009801(2): XOR EAX,EAX
00009803(2): XOR EBP,EBP
00009805(3): MOV RDI,R14
00009808(3): FSTP tword ptr [RSP]
0000980b(5): CALL 0x00002a00
00009810(3): MOV RDI,R14
00009813(5): CALL 0x00002530
00009818(2): POP R10
0000981a(3): MOV R14,RAX
0000981d(2): POP R11
0000981f(5): JMP 0x00009400
00009828(6): FLD dword ptr [0x00021a2c]
0000982e(2): FMUL ST1
00009830(6): FLD tword ptr [0x00021a30]
00009836(2): FUCOMIP ST0,ST2
00009838(2): JBE 0x000097e3
0000983a(4): FSTP dword ptr [RSP + 0x18]
0000983e(4): SUB RSP,0x10
00009842(3): MOV EDI,R15D
00009845(3): FSTP tword ptr [RSP]
00009848(5): CALL 0x00008fd0
0000984d(1): POP RBP
0000984e(2): POP R14
00009850(4): FLD dword ptr [RSP + 0x18]
00009854(2): JMP 0x000097e3
00009860(3): MOV RAX,RSI
00009863(3): MOVSXD RDI,EDI
00009866(3): AND EAX,0x1
00009869(3): ADD RAX,RDI
0000986c(3): SETNZ AL
0000986f(3): MOVZX EAX,AL
00009872(3): ADD R9D,EAX
00009875(4): CMP R9D,0x5
00009879(6): JG 0x000096f6
0000987f(5): JMP 0x00009710
00009888(4): SETC DIL
0000988c(4): MOVZX EDI,DIL
00009890(3): ADD EDI,0x2
00009893(5): JMP 0x00009309
000098a0(5): MOV R8,qword ptr [RSP + 0x8]
000098a5(2): XOR EBX,EBX
000098a7(5): JMP 0x000096e0
000098b0(5): MOV RBX,qword ptr [RSP + 0x8]
000098b5(2): TEST EAX,EAX
000098b7(4): LEA RDX,[RBX + 0x1]
000098bb(3): MOV byte ptr [RBX],0x6b
000098be(6): JNZ 0x0000949b
000098c4(5): MOV qword ptr [RSP + 0x8],RDX
000098c9(5): JMP 0x000094a7
000098d0(3): CMP EBX,0x8
000098d3(6): JZ 0x00009710
000098d9(3): ADD EBX,0x1
000098dc(4): TEST R12B,0x8
000098e0(6): JZ 0x000099a2
000098e6(4): LEA R15,[R8 + -0x1]
000098ea(5): MOV byte ptr [R8 + -0x1],0x31
000098ef(5): JMP 0x00009420
000098f8(5): MOV R8,qword ptr [RSP + 0x8]
000098fd(5): JMP 0x000096e0
00009902(2): XOR EBX,EBX
00009904(5): JMP 0x00009439
00009909(2): TEST EAX,EAX
0000990b(6): JNZ 0x00009696
00009911(4): TEST R12B,0x8
00009915(2): JNZ 0x00009934
00009917(6): MOV R9D,0x30
0000991d(5): JMP 0x0000969a
00009922(2): MOV EDX,EAX
00009924(3): AND EDX,0x1
00009927(2): ADD EDX,EDI
00009929(3): CMP EDX,0x2
0000992c(3): SETG DL
0000992f(5): JMP 0x00009680
00009934(5): MOV R8,qword ptr [RSP + 0x8]
00009939(3): XOR R9D,R9D
0000993c(5): JMP 0x000096e0
00009941(3): MOV RAX,qword ptr [R14]
00009944(3): MOV R9,R14
00009947(3): MOV qword ptr [R8],RAX
0000994a(2): MOV EAX,EBP
0000994c(5): MOV RDX,qword ptr [R14 + RAX*0x1 + -0x8]
00009951(5): MOV qword ptr [R8 + RAX*0x1 + -0x8],RDX
00009956(4): LEA RDX,[R8 + 0x8]
0000995a(3): MOV RAX,R8
0000995d(4): AND RDX,-0x8
00009961(3): SUB RAX,RDX
00009964(3): SUB R9,RAX
00009967(2): ADD EAX,EBP
00009969(3): AND EAX,0xfffffff8
0000996c(3): CMP EAX,0x8
0000996f(6): JC 0x000096d7
00009975(3): AND EAX,0xfffffff8
00009978(2): XOR EDI,EDI
0000997a(3): MOV R10D,EDI
0000997d(3): ADD EDI,0x8
00009980(4): MOV R11,qword ptr [R9 + R10*0x1]
00009984(2): CMP EDI,EAX
00009986(4): MOV qword ptr [RDX + R10*0x1],R11
0000998a(2): JC 0x0000997a
0000998c(5): JMP 0x000096d7
00009991(4): LEA RSI,[R10 + 0x1]
00009995(4): CMP RSI,0xa
00009999(2): JZ 0x000099f0
0000999b(2): XOR EDI,EDI
0000999d(5): JMP 0x00009911
000099a2(3): MOV RAX,RBP
000099a5(5): MOV byte ptr [R8 + -0x1],0x30
000099aa(3): NOT RAX
000099ad(3): ADD R8,RAX
000099b0(3): CMP EBP,0x8
000099b3(2): MOV EAX,EBP
000099b5(2): JNC 0x000099fa
000099b7(3): AND EBP,0x4
000099ba(6): JNZ 0x00009a71
000099c0(2): TEST EAX,EAX
000099c2(6): JZ 0x000098e6
000099c8(4): MOVZX EDX,byte ptr [R14]
000099cc(2): TEST AL,0x2
000099ce(3): MOV byte ptr [R8],DL
000099d1(6): JZ 0x000098e6
000099d7(6): MOVZX EDX,word ptr [R14 + RAX*0x1 + -0x2]
000099dd(6): MOV word ptr [R8 + RAX*0x1 + -0x2],DX
000099e3(5): JMP 0x000098e6
000099f0(5): MOV R8,qword ptr [RSP + 0x8]
000099f5(5): JMP 0x000096d7
000099fa(3): MOV RAX,qword ptr [R14]
000099fd(4): LEA RCX,[R8 + 0x8]
00009a01(4): AND RCX,-0x8
00009a05(3): MOV qword ptr [R8],RAX
00009a08(2): MOV EAX,EBP
00009a0a(5): MOV RDX,qword ptr [R14 + RAX*0x1 + -0x8]
00009a0f(5): MOV qword ptr [R8 + RAX*0x1 + -0x8],RDX
00009a14(3): MOV RAX,R8
00009a17(3): SUB RAX,RCX
00009a1a(3): SUB R14,RAX
00009a1d(2): ADD EAX,EBP
00009a1f(3): AND EAX,0xfffffff8
00009a22(3): CMP EAX,0x8
00009a25(6): JC 0x000098e6
00009a2b(3): AND EAX,0xfffffff8
00009a2e(2): XOR EDX,EDX
00009a30(2): MOV ESI,EDX
00009a32(3): ADD EDX,0x8
00009a35(4): MOV RDI,qword ptr [R14 + RSI*0x1]
00009a39(2): CMP EDX,EAX
00009a3b(4): MOV qword ptr [RCX + RSI*0x1],RDI
00009a3f(2): JC 0x00009a30
00009a41(5): JMP 0x000098e6
00009a46(3): MOV EDX,dword ptr [R14]
00009a49(3): MOV dword ptr [R8],EDX
00009a4c(5): MOV EDX,dword ptr [R14 + RAX*0x1 + -0x4]
00009a51(5): MOV dword ptr [R8 + RAX*0x1 + -0x4],EDX
00009a56(5): JMP 0x000096d7
00009a5b(5): CALL 0x00002560
00009a60(6): MOVZX EDX,word ptr [R14 + RAX*0x1 + -0x2]
00009a66(6): MOV word ptr [R8 + RAX*0x1 + -0x2],DX
00009a6c(5): JMP 0x000096d7
00009a71(3): MOV EDX,dword ptr [R14]
00009a74(3): MOV dword ptr [R8],EDX
00009a77(5): MOV EDX,dword ptr [R14 + RAX*0x1 + -0x4]
00009a7c(5): MOV dword ptr [R8 + RAX*0x1 + -0x4],EDX
00009a81(5): JMP 0x000098e6
00009a86(2): TEST EAX,EAX
00009a88(5): MOV RDX,qword ptr [RSP + 0x8]
00009a8d(6): JNZ 0x0000949b
00009a93(5): JMP 0x000094a7
00009a98(4): MOV EBX,dword ptr [RSP + 0x20]
00009a9c(3): MOV R15,RAX
00009a9f(3): MOV R12D,R14D
00009aa2(5): JMP 0x0000942a
00009ab0(2): PUSH R13
00009ab2(2): PUSH R12
00009ab4(3): MOV R13,RSI
00009ab7(1): PUSH RBP
00009ab8(1): PUSH RBX
00009ab9(3): MOV R12,RDX
00009abc(3): MOV RBX,RDI
00009abf(4): SUB RSP,0x18
00009ac3(9): MOV RAX,qword ptr FS:[0x28]
00009acc(5): MOV qword ptr [RSP + 0x8],RAX
00009ad1(2): XOR EAX,EAX
00009ad3(3): TEST RDI,RDI
00009ad6(6): JZ 0x00009bf0
00009adc(2): XOR EBP,EBP
00009ade(3): CMP byte ptr [RBX],0x27
00009ae1(2): JNZ 0x00009aec
00009ae3(4): ADD RBX,0x1
00009ae7(5): MOV EBP,0x4
00009aec(7): LEA RDX,[0x21a18]
00009af3(7): LEA RSI,[0x227a20]
00009afa(5): MOV ECX,0x4
00009aff(3): MOV RDI,RBX
00009b02(5): CALL 0x00004710
00009b07(2): TEST EAX,EAX
00009b09(2): JS 0x00009b48
00009b0b(7): LEA RDX,[0x21a18]
00009b12(2): CDQE
00009b14(8): MOV qword ptr [R12],0x1
00009b1c(3): OR EBP,dword ptr [RDX + RAX*0x4]
00009b1f(2): XOR EAX,EAX
00009b21(4): MOV dword ptr [R13],EBP
00009b25(5): MOV RCX,qword ptr [RSP + 0x8]
00009b2a(9): XOR RCX,qword ptr FS:[0x28]
00009b33(6): JNZ 0x00009c91
00009b39(4): ADD RSP,0x18
00009b3d(1): POP RBX
00009b3e(1): POP RBP
00009b3f(2): POP R12
00009b41(2): POP R13
00009b43(1): RET
00009b48(7): LEA R8,[0x21a06]
00009b4f(2): XOR EDX,EDX
00009b51(3): MOV RSI,RSP
00009b54(3): MOV RCX,R12
00009b57(3): MOV RDI,RBX
00009b5a(5): CALL 0x0000d880
00009b5f(2): TEST EAX,EAX
00009b61(2): JNZ 0x00009ba8
00009b63(3): MOVZX ESI,byte ptr [RBX]
00009b66(3): LEA EDX,[RSI + -0x30]
00009b69(3): CMP DL,0x9
00009b6c(2): JBE 0x00009b98
00009b6e(4): MOV RCX,qword ptr [RSP]
00009b72(3): CMP RBX,RCX
00009b75(2): JNZ 0x00009b89
00009b77(5): JMP 0x00009c50
00009b80(3): CMP RBX,RCX
00009b83(6): JZ 0x00009c50
00009b89(4): ADD RBX,0x1
00009b8d(3): MOVZX EDI,byte ptr [RBX]
00009b90(3): LEA EDX,[RDI + -0x30]
00009b93(3): CMP DL,0x9
00009b96(2): JA 0x00009b80
00009b98(4): MOV RDX,qword ptr [R12]
00009b9c(4): MOV dword ptr [R13],EBP
00009ba0(2): JMP 0x00009bb4
00009ba8(4): MOV RDX,qword ptr [R12]
00009bac(8): MOV dword ptr [R13],0x0
00009bb4(3): TEST RDX,RDX
00009bb7(6): JNZ 0x00009b25
00009bbd(7): LEA RDI,[0x219f6]
00009bc4(5): CALL 0x000023e0
00009bc9(4): CMP RAX,0x1
00009bcd(3): SBB RAX,RAX
00009bd0(5): AND EAX,0x200
00009bd5(6): ADD RAX,0x200
00009bdb(4): MOV qword ptr [R12],RAX
00009bdf(5): MOV EAX,0x4
00009be4(5): JMP 0x00009b25
00009bf0(7): LEA RDI,[0x1fb58]
00009bf7(5): CALL 0x000023e0
00009bfc(3): TEST RAX,RAX
00009bff(3): MOV RBX,RAX
00009c02(6): JNZ 0x00009adc
00009c08(7): LEA RDI,[0x219ec]
00009c0f(5): CALL 0x000023e0
00009c14(3): TEST RAX,RAX
00009c17(3): MOV RBX,RAX
00009c1a(6): JNZ 0x00009adc
00009c20(7): LEA RDI,[0x219f6]
00009c27(5): CALL 0x000023e0
00009c2c(3): TEST RAX,RAX
00009c2f(2): JZ 0x00009c7a
00009c31(8): MOV qword ptr [R12],0x200
00009c39(2): XOR EAX,EAX
00009c3b(8): MOV dword ptr [R13],0x0
00009c43(5): JMP 0x00009b25
00009c50(4): CMP byte ptr [RCX + -0x1],0x42
00009c54(2): JZ 0x00009c68
00009c56(4): OR BPL,0x80
00009c5a(3): OR EBP,0x20
00009c5d(5): JMP 0x00009b98
00009c68(6): OR EBP,0x180
00009c6e(4): CMP byte ptr [RCX + -0x2],0x69
00009c72(6): JNZ 0x00009b98
00009c78(2): JMP 0x00009c5a
00009c7a(8): MOV qword ptr [R12],0x400
00009c82(2): XOR EAX,EAX
00009c84(8): MOV dword ptr [R13],0x0
00009c8c(5): JMP 0x00009b25
00009c91(5): CALL 0x00002560
00009c96(10): NOP word ptr CS:[RAX + RAX*0x1]
00009ca0(3): MOV RAX,qword ptr [RDI]
00009ca3(2): XOR EDX,EDX
00009ca5(3): DIV RSI
00009ca8(3): MOV RAX,RDX
00009cab(1): RET
00009cb0(3): MOV RAX,qword ptr [RSI]
00009cb3(3): CMP qword ptr [RDI],RAX
00009cb6(3): SETZ AL
00009cb9(1): RET
00009cc0(1): PUSH RBP
00009cc1(1): PUSH RBX
00009cc2(3): MOV RBP,RDI
00009cc5(5): MOV EDI,0x18
00009cca(4): SUB RSP,0x8
00009cce(5): CALL 0x00002780
00009cd3(3): TEST RAX,RAX
00009cd6(3): MOV RBX,RAX
00009cd9(2): JZ 0x00009d10
00009cdb(7): MOV R8,qword ptr [0x00227fc8]
00009ce2(7): LEA RCX,[0x9cb0]
00009ce9(7): LEA RDX,[0x9ca0]
00009cf0(2): XOR ESI,ESI
00009cf2(5): MOV EDI,0x3fd
00009cf7(5): CALL 0x00008560
00009cfc(3): TEST RAX,RAX
00009cff(3): MOV qword ptr [RBX],RAX
00009d02(2): JZ 0x00009d20
00009d04(4): MOV qword ptr [RBX + 0x8],RBP
00009d08(8): MOV qword ptr [RBX + 0x10],0x0
00009d10(4): ADD RSP,0x8
00009d14(3): MOV RAX,RBX
00009d17(1): POP RBX
00009d18(1): POP RBP
00009d19(1): RET
00009d20(3): MOV RDI,RBX
00009d23(2): XOR EBX,EBX
00009d25(5): CALL 0x00002a10
00009d2a(2): JMP 0x00009d10
00009d30(1): PUSH RBX
00009d31(3): MOV RBX,RDI
00009d34(3): MOV RDI,qword ptr [RDI]
00009d37(5): CALL 0x000087b0
00009d3c(4): MOV RDI,qword ptr [RBX + 0x10]
00009d40(5): CALL 0x00002a10
00009d45(3): MOV RDI,RBX
00009d48(1): POP RBX
00009d49(5): JMP 0x00002a10
00009d50(1): PUSH RBP
00009d51(1): PUSH RBX
00009d52(3): MOV RBP,RDI
00009d55(4): SUB RSP,0x18
00009d59(4): MOV RBX,qword ptr [RDI + 0x10]
00009d5d(3): TEST RBX,RBX
00009d60(2): JZ 0x00009dc0
00009d62(3): CMP qword ptr [RBX],RSI
00009d65(2): JZ 0x00009d90
00009d67(4): MOV RDI,qword ptr [RBP]
00009d6b(3): MOV qword ptr [RBX],RSI
00009d6e(3): MOV RSI,RBX
00009d71(5): CALL 0x00008d60
00009d76(3): TEST RAX,RAX
00009d79(2): JZ 0x00009de0
00009d7b(3): CMP RBX,RAX
00009d7e(2): JZ 0x00009da0
00009d80(4): MOV RAX,qword ptr [RAX + 0x8]
00009d84(4): MOV qword ptr [RBX + 0x8],RAX
00009d88(4): ADD RSP,0x18
00009d8c(1): POP RBX
00009d8d(1): POP RBP
00009d8e(1): RET
00009d90(4): MOV RAX,qword ptr [RBX + 0x8]
00009d94(4): ADD RSP,0x18
00009d98(1): POP RBX
00009d99(1): POP RBP
00009d9a(1): RET
00009da0(4): MOV RAX,qword ptr [RBP + 0x8]
00009da4(8): MOV qword ptr [RBP + 0x10],0x0
00009dac(4): LEA RDX,[RAX + 0x1]
00009db0(4): MOV qword ptr [RBP + 0x8],RDX
00009db4(4): MOV qword ptr [RBX + 0x8],RAX
00009db8(4): ADD RSP,0x18
00009dbc(1): POP RBX
00009dbd(1): POP RBP
00009dbe(1): RET
00009dc0(5): MOV EDI,0x10
00009dc5(5): MOV qword ptr [RSP + 0x8],RSI
00009dca(5): CALL 0x00002780
00009dcf(3): TEST RAX,RAX
00009dd2(3): MOV RBX,RAX
00009dd5(4): MOV qword ptr [RBP + 0x10],RAX
00009dd9(5): MOV RSI,qword ptr [RSP + 0x8]
00009dde(2): JNZ 0x00009d67
00009de0(4): ADD RSP,0x18
00009de4(7): MOV RAX,-0x1
00009deb(1): POP RBX
00009dec(1): POP RBP
00009ded(1): RET
00009df0(3): TEST RDI,RDI
00009df3(4): LEA RCX,[RSI + 0x14]
00009df7(4): MOV byte ptr [RSI + 0x14],0x0
00009dfb(10): MOV R9,0x6666666666666667
00009e05(10): MOV RSI,-0x3333333333333333
00009e0f(6): MOV R8D,0x30
00009e15(2): JS 0x00009e53
00009e17(9): NOP word ptr [RAX + RAX*0x1]
00009e20(3): MOV RAX,RDI
00009e23(4): SUB RCX,0x1
00009e27(3): MUL RSI
00009e2a(4): SHR RDX,0x3
00009e2e(4): LEA RAX,[RDX + RDX*0x4]
00009e32(3): ADD RAX,RAX
00009e35(3): SUB RDI,RAX
00009e38(3): ADD EDI,0x30
00009e3b(3): TEST RDX,RDX
00009e3e(3): MOV byte ptr [RCX],DIL
00009e41(3): MOV RDI,RDX
00009e44(2): JNZ 0x00009e20
00009e46(3): MOV RAX,RCX
00009e49(1): RET
00009e50(3): MOV RCX,RSI
00009e53(3): MOV RAX,RDI
00009e56(4): LEA RSI,[RCX + -0x1]
00009e5a(3): IMUL R9
00009e5d(3): MOV RAX,RDI
00009e60(4): SAR RAX,0x3f
00009e64(4): SAR RDX,0x2
00009e68(3): SUB RDX,RAX
00009e6b(4): LEA RAX,[RDX + RDX*0x4]
00009e6f(4): LEA EAX,[R8 + RAX*0x2]
00009e73(2): SUB EAX,EDI
00009e75(3): TEST RDX,RDX
00009e78(3): MOV RDI,RDX
00009e7b(3): MOV byte ptr [RCX + -0x1],AL
00009e7e(2): JNZ 0x00009e50
00009e80(4): SUB RCX,0x2
00009e84(4): MOV byte ptr [RSI + -0x1],0x2d
00009e88(3): MOV RAX,RCX
00009e8b(1): RET
00009e90(1): PUSH RBX
00009e91(2): MOV EBX,EDI
00009e93(5): CALL 0x00002760
00009e98(2): TEST EAX,EAX
00009e9a(2): JS 0x00009ea0
00009e9c(1): POP RBX
00009e9d(1): RET
00009ea0(2): MOV EDI,EBX
00009ea2(5): CALL 0x00002480
00009ea7(2): TEST EAX,EAX
00009ea9(3): SETZ AL
00009eac(3): MOVZX EAX,AL
00009eaf(1): POP RBX
00009eb0(1): RET
00009ec0(1): PUSH RBP
00009ec1(1): PUSH RBX
00009ec2(3): MOV RBX,RSI
00009ec5(4): LEA RAX,[RBX + 0x18]
00009ec9(3): MOV RBP,RDI
00009ecc(4): SUB RSP,0x8
00009ed0(3): MOV RSI,qword ptr [RSI]
00009ed3(4): MOV RDX,qword ptr [RBX + 0x8]
00009ed7(3): CMP RSI,RAX
00009eda(2): JZ 0x00009f00
00009edc(3): MOV qword ptr [RDI],RSI
00009edf(4): MOVZX EAX,byte ptr [RBX + 0x10]
00009ee3(4): MOV qword ptr [RBP + 0x8],RDX
00009ee7(2): TEST AL,AL
00009ee9(3): MOV byte ptr [RBP + 0x10],AL
00009eec(2): JZ 0x00009ef4
00009eee(3): MOV EAX,dword ptr [RBX + 0x14]
00009ef1(3): MOV dword ptr [RBP + 0x14],EAX
00009ef4(4): ADD RSP,0x8
00009ef8(1): POP RBX
00009ef9(1): POP RBP
00009efa(1): RET
00009f00(4): LEA RCX,[RDI + 0x18]
00009f04(3): MOV RDI,RCX
00009f07(5): CALL 0x00002710
00009f0c(4): MOV RDX,qword ptr [RBX + 0x8]
00009f10(4): MOV qword ptr [RBP],RAX
00009f14(2): JMP 0x00009edf
00009f20(2): MOV EAX,EDI
00009f22(7): LEA RDX,[0x21a40]
00009f29(2): MOV ECX,EDI
00009f2b(3): SHR AL,0x5
00009f2e(3): AND ECX,0x1f
00009f31(3): AND EAX,0x7
00009f34(3): MOV EAX,dword ptr [RDX + RAX*0x4]
00009f37(2): SHR EAX,CL
00009f39(3): AND EAX,0x1
00009f3c(1): RET
00009f40(2): PUSH R15
00009f42(2): PUSH R14
00009f44(2): PUSH R13
00009f46(2): PUSH R12
00009f48(1): PUSH RBP
00009f49(1): PUSH RBX
00009f4a(7): SUB RSP,0x98
00009f51(9): MOV RAX,qword ptr FS:[0x28]
00009f5a(8): MOV qword ptr [0x88 + RSP],RAX
00009f62(2): XOR EAX,EAX
00009f64(3): CMP RDI,RSI
00009f67(6): JZ 0x0000a2f0
00009f6d(3): MOV RBP,RDI
00009f70(3): MOV R12,RSI
00009f73(5): CALL 0x00002520
00009f78(4): CMP RAX,0x1
00009f7c(6): JA 0x0000a018
00009f82(5): CALL 0x000029f0
00009f87(3): MOV R14,qword ptr [RAX]
00009f8a(2): JMP 0x00009fa0
00009f90(4): ADD RBP,0x1
00009f94(4): ADD R12,0x1
00009f98(2): CMP BL,DL
00009f9a(6): JNZ 0x0000a3a0
00009fa0(5): MOVZX R13D,byte ptr [RBP]
00009fa5(6): TEST byte ptr [R14 + R13*0x2 + 0x1],0x1
00009fab(3): MOV RBX,R13
00009fae(2): JZ 0x00009fbd
00009fb0(5): CALL 0x000029e0
00009fb5(3): MOV RAX,qword ptr [RAX]
00009fb8(5): MOVZX EBX,byte ptr [RAX + R13*0x4]
00009fbd(5): MOVZX R13D,byte ptr [R12]
00009fc2(6): TEST byte ptr [R14 + R13*0x2 + 0x1],0x1
00009fc8(3): MOV RDX,R13
00009fcb(2): JZ 0x00009fda
00009fcd(5): CALL 0x000029e0
00009fd2(3): MOV RAX,qword ptr [RAX]
00009fd5(5): MOVZX EDX,byte ptr [RAX + R13*0x4]
00009fda(2): TEST BL,BL
00009fdc(2): JNZ 0x00009f90
00009fde(2): XOR EAX,EAX
00009fe0(2): SUB EAX,EDX
00009fe2(6): NOP word ptr [RAX + RAX*0x1]
00009fe8(8): MOV RSI,qword ptr [0x88 + RSP]
00009ff0(9): XOR RSI,qword ptr FS:[0x28]
00009ff9(6): JNZ 0x0000a61f
00009fff(7): ADD RSP,0x98
0000a006(1): POP RBX
0000a007(1): POP RBP
0000a008(2): POP R12
0000a00a(2): POP R13
0000a00c(2): POP R14
0000a00e(2): POP R15
0000a010(1): RET
0000a018(5): MOV qword ptr [RSP + 0x50],R12
0000a01d(3): MOV R12,RSP
0000a020(5): MOV qword ptr [RSP + 0x10],RBP
0000a025(4): MOV byte ptr [RSP],0x0
0000a029(9): MOV qword ptr [RSP + 0x4],0x0
0000a032(7): LEA R13,[0x21a40]
0000a039(5): MOV byte ptr [RSP + 0xc],0x0
0000a03e(5): MOV byte ptr [RSP + 0x40],0x0
0000a043(5): LEA R14,[R12 + 0x4]
0000a048(9): MOV qword ptr [RSP + 0x44],0x0
0000a051(5): MOV byte ptr [RSP + 0x4c],0x0
0000a056(5): LEA RBP,[RSP + 0x40]
0000a05b(5): JMP 0x0000a0f9
0000a060(5): CMP byte ptr [RSP + 0x40],0x0
0000a065(6): JNZ 0x0000a256
0000a06b(5): MOV RCX,qword ptr [RSP + 0x50]
0000a070(3): MOVZX EDX,byte ptr [RCX]
0000a073(2): MOV EAX,EDX
0000a075(3): SHR AL,0x5
0000a078(3): AND EAX,0x7
0000a07b(5): MOV EAX,dword ptr [R13 + RAX*0x4]
0000a080(3): BT EAX,EDX
0000a083(6): JNC 0x0000a240
0000a089(9): MOV qword ptr [RSP + 0x58],0x1
0000a092(3): MOVSX EAX,byte ptr [RCX]
0000a095(5): MOV byte ptr [RSP + 0x60],0x1
0000a09a(5): MOV byte ptr [RSP + 0x4c],0x1
0000a09f(4): MOV dword ptr [RSP + 0x64],EAX
0000a0a3(5): MOV R15D,dword ptr [RSP + 0x64]
0000a0a8(3): TEST R15D,R15D
0000a0ab(6): JZ 0x0000a3b0
0000a0b1(5): CMP byte ptr [RSP + 0x20],0x0
0000a0b6(6): JZ 0x0000a3c0
0000a0bc(4): MOV EDI,dword ptr [RSP + 0x24]
0000a0c0(5): CALL 0x000028e0
0000a0c5(3): MOV EDI,R15D
0000a0c8(2): MOV EBX,EAX
0000a0ca(5): CALL 0x000028e0
0000a0cf(2): SUB EBX,EAX
0000a0d1(2): MOV EAX,EBX
0000a0d3(2): TEST EAX,EAX
0000a0d5(6): JNZ 0x00009fe8
0000a0db(5): MOV RAX,qword ptr [RSP + 0x18]
0000a0e0(5): ADD qword ptr [RSP + 0x10],RAX
0000a0e5(5): MOV RAX,qword ptr [RSP + 0x58]
0000a0ea(5): ADD qword ptr [RSP + 0x50],RAX
0000a0ef(5): MOV byte ptr [RSP + 0xc],0x0
0000a0f4(5): MOV byte ptr [RSP + 0x4c],0x0
0000a0f9(4): CMP byte ptr [RSP],0x0
0000a0fd(6): JNZ 0x0000a1a4
0000a103(5): MOV RCX,qword ptr [RSP + 0x10]
0000a108(3): MOVZX EDX,byte ptr [RCX]
0000a10b(2): MOV EAX,EDX
0000a10d(3): SHR AL,0x5
0000a110(3): AND EAX,0x7
0000a113(5): MOV EAX,dword ptr [R13 + RAX*0x4]
0000a118(3): BT EAX,EDX
0000a11b(2): JNC 0x0000a190
0000a11d(9): MOV qword ptr [RSP + 0x18],0x1
0000a126(3): MOVSX EAX,byte ptr [RCX]
0000a129(5): MOV byte ptr [RSP + 0x20],0x1
0000a12e(5): MOV byte ptr [RSP + 0xc],0x1
0000a133(4): MOV dword ptr [RSP + 0x24],EAX
0000a137(5): MOV R9D,dword ptr [RSP + 0x24]
0000a13c(3): TEST R9D,R9D
0000a13f(6): JZ 0x0000a3e8
0000a145(5): CMP byte ptr [RSP + 0x4c],0x0
0000a14a(6): JZ 0x0000a060
0000a150(5): CMP byte ptr [RSP + 0x60],0x0
0000a155(6): JNZ 0x0000a0a3
0000a15b(5): CMP byte ptr [RSP + 0x20],0x0
0000a160(6): JNZ 0x0000a3d8
0000a166(5): MOV RDX,qword ptr [RSP + 0x18]
0000a16b(5): MOV RAX,qword ptr [RSP + 0x58]
0000a170(5): MOV RDI,qword ptr [RSP + 0x10]
0000a175(5): MOV RSI,qword ptr [RSP + 0x50]
0000a17a(3): CMP RDX,RAX
0000a17d(6): JNZ 0x0000a4a8
0000a183(5): CALL 0x00002680
0000a188(5): JMP 0x0000a0d3
0000a190(3): MOV RDI,R14
0000a193(5): CALL 0x00002990
0000a198(2): TEST EAX,EAX
0000a19a(6): JZ 0x0000a600
0000a1a0(4): MOV byte ptr [RSP],0x1
0000a1a4(5): CALL 0x00002520
0000a1a9(5): MOV RBX,qword ptr [RSP + 0x10]
0000a1ae(3): MOV RSI,RAX
0000a1b1(3): MOV RDI,RBX
0000a1b4(5): CALL 0x0000c380
0000a1b9(5): LEA RCX,[R12 + 0x4]
0000a1be(5): LEA RDI,[R12 + 0x24]
0000a1c3(3): MOV RDX,RAX
0000a1c6(3): MOV RSI,RBX
0000a1c9(5): CALL 0x000101e0
0000a1ce(4): CMP RAX,-0x1
0000a1d2(5): MOV qword ptr [RSP + 0x18],RAX
0000a1d7(6): JZ 0x0000a300
0000a1dd(4): CMP RAX,-0x2
0000a1e1(6): JZ 0x0000a340
0000a1e7(3): TEST RAX,RAX
0000a1ea(2): JNZ 0x0000a211
0000a1ec(5): MOV RAX,qword ptr [RSP + 0x10]
0000a1f1(9): MOV qword ptr [RSP + 0x18],0x1
0000a1fa(3): CMP byte ptr [RAX],0x0
0000a1fd(6): JNZ 0x0000a624
0000a203(5): MOV R10D,dword ptr [RSP + 0x24]
0000a208(3): TEST R10D,R10D
0000a20b(6): JNZ 0x0000a5fb
0000a211(5): LEA RDI,[R12 + 0x4]
0000a216(5): MOV byte ptr [RSP + 0x20],0x1
0000a21b(5): CALL 0x00002990
0000a220(2): TEST EAX,EAX
0000a222(6): JZ 0x0000a380
0000a228(4): MOV byte ptr [RSP],0x0
0000a22c(5): MOV byte ptr [RSP + 0xc],0x1
0000a231(5): JMP 0x0000a137
0000a240(4): LEA RDI,[RBP + 0x4]
0000a244(5): CALL 0x00002990
0000a249(2): TEST EAX,EAX
0000a24b(6): JZ 0x0000a600
0000a251(5): MOV byte ptr [RSP + 0x40],0x1
0000a256(5): CALL 0x00002520
0000a25b(5): MOV RBX,qword ptr [RSP + 0x50]
0000a260(3): MOV RSI,RAX
0000a263(3): MOV RDI,RBX
0000a266(5): CALL 0x0000c380
0000a26b(4): LEA RCX,[RBP + 0x4]
0000a26f(4): LEA RDI,[RBP + 0x24]
0000a273(3): MOV RDX,RAX
0000a276(3): MOV RSI,RBX
0000a279(5): CALL 0x000101e0
0000a27e(4): CMP RAX,-0x1
0000a282(5): MOV qword ptr [RSP + 0x58],RAX
0000a287(6): JZ 0x0000a320
0000a28d(4): CMP RAX,-0x2
0000a291(6): JZ 0x0000a360
0000a297(3): TEST RAX,RAX
0000a29a(2): JNZ 0x0000a2c1
0000a29c(5): MOV RAX,qword ptr [RSP + 0x50]
0000a2a1(9): MOV qword ptr [RSP + 0x58],0x1
0000a2aa(3): CMP byte ptr [RAX],0x0
0000a2ad(6): JNZ 0x0000a624
0000a2b3(5): MOV R8D,dword ptr [RSP + 0x64]
0000a2b8(3): TEST R8D,R8D
0000a2bb(6): JNZ 0x0000a5fb
0000a2c1(4): LEA RDI,[RBP + 0x4]
0000a2c5(5): MOV byte ptr [RSP + 0x60],0x1
0000a2ca(5): CALL 0x00002990
0000a2cf(2): TEST EAX,EAX
0000a2d1(6): JZ 0x0000a390
0000a2d7(5): MOV byte ptr [RSP + 0x40],0x0
0000a2dc(5): MOV byte ptr [RSP + 0x4c],0x1
0000a2e1(5): JMP 0x0000a0a3
0000a2f0(2): XOR EAX,EAX
0000a2f2(5): JMP 0x00009fe8
0000a300(9): MOV qword ptr [RSP + 0x18],0x1
0000a309(5): MOV byte ptr [RSP + 0x20],0x0
0000a30e(5): MOV byte ptr [RSP + 0xc],0x1
0000a313(5): JMP 0x0000a145
0000a320(9): MOV qword ptr [RSP + 0x58],0x1
0000a329(5): MOV byte ptr [RSP + 0x60],0x0
0000a32e(5): MOV byte ptr [RSP + 0x4c],0x1
0000a333(5): JMP 0x0000a15b
0000a340(5): MOV RDI,qword ptr [RSP + 0x10]
0000a345(5): CALL 0x00002530
0000a34a(5): MOV byte ptr [RSP + 0x20],0x0
0000a34f(5): MOV qword ptr [RSP + 0x18],RAX
0000a354(5): MOV byte ptr [RSP + 0xc],0x1
0000a359(5): JMP 0x0000a145
0000a360(5): MOV RDI,qword ptr [RSP + 0x50]
0000a365(5): CALL 0x00002530
0000a36a(5): MOV byte ptr [RSP + 0x60],0x0
0000a36f(5): MOV qword ptr [RSP + 0x58],RAX
0000a374(5): MOV byte ptr [RSP + 0x4c],0x1
0000a379(5): JMP 0x0000a15b
0000a380(5): MOV byte ptr [RSP + 0xc],0x1
0000a385(5): JMP 0x0000a137
0000a390(5): MOV byte ptr [RSP + 0x4c],0x1
0000a395(5): JMP 0x0000a0a3
0000a3a0(3): MOVZX EAX,BL
0000a3a3(2): SUB EAX,EDX
0000a3a5(5): JMP 0x00009fe8
0000a3b0(5): CMP byte ptr [RSP + 0xc],0x0
0000a3b5(2): JZ 0x0000a3ef
0000a3b7(5): CMP byte ptr [RSP + 0x20],0x0
0000a3bc(2): JNZ 0x0000a439
0000a3be(2): NOP
0000a3c0(5): MOV EAX,0x1
0000a3c5(5): JMP 0x00009fe8
0000a3ca(5): CMP byte ptr [RSP + 0x60],0x0
0000a3cf(6): JNZ 0x0000a493
0000a3d5(3): NOP dword ptr [RAX]
0000a3d8(5): MOV EAX,0xffffffff
0000a3dd(5): JMP 0x00009fe8
0000a3e8(5): CMP byte ptr [RSP + 0xc],0x0
0000a3ed(2): JNZ 0x0000a445
0000a3ef(4): CMP byte ptr [RSP],0x0
0000a3f3(3): MOV RBX,RSP
0000a3f6(6): JNZ 0x0000a4d8
0000a3fc(5): MOV RCX,qword ptr [RSP + 0x10]
0000a401(7): LEA RSI,[0x21a40]
0000a408(3): MOVZX EDX,byte ptr [RCX]
0000a40b(2): MOV EAX,EDX
0000a40d(3): SHR AL,0x5
0000a410(3): AND EAX,0x7
0000a413(3): MOV EAX,dword ptr [RSI + RAX*0x4]
0000a416(3): BT EAX,EDX
0000a419(6): JNC 0x0000a4c0
0000a41f(9): MOV qword ptr [RSP + 0x18],0x1
0000a428(3): MOVSX EAX,byte ptr [RCX]
0000a42b(5): MOV byte ptr [RSP + 0x20],0x1
0000a430(5): MOV byte ptr [RSP + 0xc],0x1
0000a435(4): MOV dword ptr [RSP + 0x24],EAX
0000a439(4): MOV ESI,dword ptr [RSP + 0x24]
0000a43d(2): TEST ESI,ESI
0000a43f(6): JNZ 0x0000a3c0
0000a445(5): CMP byte ptr [RSP + 0x4c],0x0
0000a44a(6): JNZ 0x0000a3ca
0000a450(5): CMP byte ptr [RSP + 0x40],0x0
0000a455(5): LEA RBX,[RSP + 0x40]
0000a45a(6): JNZ 0x0000a598
0000a460(5): MOV RCX,qword ptr [RSP + 0x50]
0000a465(7): LEA RSI,[0x21a40]
0000a46c(3): MOVZX EDX,byte ptr [RCX]
0000a46f(2): MOV EAX,EDX
0000a471(3): SHR AL,0x5
0000a474(3): AND EAX,0x7
0000a477(3): MOV EAX,dword ptr [RSI + RAX*0x4]
0000a47a(3): BT EAX,EDX
0000a47d(6): JNC 0x0000a580
0000a483(9): MOV qword ptr [RSP + 0x58],0x1
0000a48c(3): MOVSX EAX,byte ptr [RCX]
0000a48f(4): MOV dword ptr [RSP + 0x64],EAX
0000a493(4): MOV EDX,dword ptr [RSP + 0x64]
0000a497(2): XOR EAX,EAX
0000a499(2): TEST EDX,EDX
0000a49b(3): SETNZ AL
0000a49e(2): NEG EAX
0000a4a0(5): JMP 0x00009fe8
0000a4a8(6): JNC 0x0000a561
0000a4ae(5): CALL 0x00002680
0000a4b3(2): TEST EAX,EAX
0000a4b5(6): JG 0x0000a3c0
0000a4bb(5): JMP 0x0000a3d8
0000a4c0(3): MOV RBX,RSP
0000a4c3(4): LEA RDI,[RBX + 0x4]
0000a4c7(5): CALL 0x00002990
0000a4cc(2): TEST EAX,EAX
0000a4ce(6): JZ 0x0000a600
0000a4d4(4): MOV byte ptr [RSP],0x1
0000a4d8(5): CALL 0x00002520
0000a4dd(5): MOV RBP,qword ptr [RSP + 0x10]
0000a4e2(3): MOV RSI,RAX
0000a4e5(3): MOV RDI,RBP
0000a4e8(5): CALL 0x0000c380
0000a4ed(4): LEA RCX,[RBX + 0x4]
0000a4f1(4): LEA RDI,[RBX + 0x24]
0000a4f5(3): MOV RDX,RAX
0000a4f8(3): MOV RSI,RBP
0000a4fb(5): CALL 0x000101e0
0000a500(4): CMP RAX,-0x1
0000a504(5): MOV qword ptr [RSP + 0x18],RAX
0000a509(6): JZ 0x0000a3c0
0000a50f(4): CMP RAX,-0x2
0000a513(6): JZ 0x0000a3c0
0000a519(3): TEST RAX,RAX
0000a51c(2): JNZ 0x0000a541
0000a51e(5): MOV RAX,qword ptr [RSP + 0x10]
0000a523(9): MOV qword ptr [RSP + 0x18],0x1
0000a52c(3): CMP byte ptr [RAX],0x0
0000a52f(6): JNZ 0x0000a624
0000a535(4): MOV EDI,dword ptr [RSP + 0x24]
0000a539(2): TEST EDI,EDI
0000a53b(6): JNZ 0x0000a5fb
0000a541(4): LEA RDI,[RBX + 0x4]
0000a545(5): MOV byte ptr [RSP + 0x20],0x1
0000a54a(5): CALL 0x00002990
0000a54f(2): TEST EAX,EAX
0000a551(2): JZ 0x0000a576
0000a553(4): MOV byte ptr [RSP],0x0
0000a557(5): MOV byte ptr [RSP + 0xc],0x1
0000a55c(5): JMP 0x0000a439
0000a561(3): MOV RDX,RAX
0000a564(5): CALL 0x00002680
0000a569(2): TEST EAX,EAX
0000a56b(6): JNS 0x0000a3c0
0000a571(5): JMP 0x0000a3d8
0000a576(5): MOV byte ptr [RSP + 0xc],0x1
0000a57b(5): JMP 0x0000a439
0000a580(5): LEA RDI,[RSP + 0x44]
0000a585(5): LEA RBX,[RSP + 0x40]
0000a58a(5): CALL 0x00002990
0000a58f(2): TEST EAX,EAX
0000a591(2): JZ 0x0000a600
0000a593(5): MOV byte ptr [RSP + 0x40],0x1
0000a598(5): CALL 0x00002520
0000a59d(5): MOV RBP,qword ptr [RSP + 0x50]
0000a5a2(3): MOV RSI,RAX
0000a5a5(3): MOV RDI,RBP
0000a5a8(5): CALL 0x0000c380
0000a5ad(4): LEA RCX,[RBX + 0x4]
0000a5b1(4): LEA RDI,[RBX + 0x24]
0000a5b5(3): MOV RDX,RAX
0000a5b8(3): MOV RSI,RBP
0000a5bb(5): CALL 0x000101e0
0000a5c0(4): LEA RDX,[RAX + 0x2]
0000a5c4(5): MOV qword ptr [RSP + 0x58],RAX
0000a5c9(4): CMP RDX,0x1
0000a5cd(6): JBE 0x0000a3d8
0000a5d3(3): TEST RAX,RAX
0000a5d6(6): JNZ 0x0000a493
0000a5dc(5): MOV RAX,qword ptr [RSP + 0x50]
0000a5e1(9): MOV qword ptr [RSP + 0x58],0x1
0000a5ea(3): CMP byte ptr [RAX],0x0
0000a5ed(2): JNZ 0x0000a624
0000a5ef(4): MOV ECX,dword ptr [RSP + 0x64]
0000a5f3(2): TEST ECX,ECX
0000a5f5(6): JZ 0x0000a493
0000a5fb(5): CALL 0x00002a20
0000a600(7): LEA RCX,[0x21a60]
0000a607(7): LEA RSI,[0x214a8]
0000a60e(7): LEA RDI,[0x214c8]
0000a615(5): MOV EDX,0x96
0000a61a(5): CALL 0x00002600
0000a61f(5): CALL 0x00002560
0000a624(7): LEA RCX,[0x21a60]
0000a62b(7): LEA RSI,[0x214a8]
0000a632(7): LEA RDI,[0x214df]
0000a639(5): MOV EDX,0xb2
0000a63e(5): CALL 0x00002600
0000a643(10): NOP word ptr CS:[RAX + RAX*0x1]
0000a64d(3): NOP dword ptr [RAX]
0000a650(3): TEST RDI,RDI
0000a653(1): PUSH RBX
0000a654(2): JZ 0x0000a6cd
0000a656(5): MOV ESI,0x2f
0000a65b(3): MOV RBX,RDI
0000a65e(5): CALL 0x000025d0
0000a663(3): TEST RAX,RAX
0000a666(2): JZ 0x0000a6bd
0000a668(4): LEA R8,[RAX + 0x1]
0000a66c(3): MOV RDX,R8
0000a66f(3): SUB RDX,RBX
0000a672(4): CMP RDX,0x6
0000a676(2): JLE 0x0000a6bd
0000a678(4): LEA RSI,[RAX + -0x6]
0000a67c(7): LEA RDI,[0x21ab0]
0000a683(5): MOV ECX,0x7
0000a688(2): CMPSB.REPE RDI,RSI
0000a68a(3): SETA DL
0000a68d(3): SBB DL,0x0
0000a690(2): TEST DL,DL
0000a692(2): JNZ 0x0000a6bd
0000a694(7): LEA RDI,[0x21ab8]
0000a69b(5): MOV ECX,0x3
0000a6a0(3): MOV RSI,R8
0000a6a3(3): MOV RBX,R8
0000a6a6(2): CMPSB.REPE RDI,RSI
0000a6a8(3): SETA DL
0000a6ab(3): SBB DL,0x0
0000a6ae(2): TEST DL,DL
0000a6b0(2): JNZ 0x0000a6bd
0000a6b2(4): LEA RBX,[RAX + 0x4]
0000a6b6(7): MOV qword ptr [0x002280a0],RBX
0000a6bd(7): MOV qword ptr [0x002281b0],RBX
0000a6c4(7): MOV qword ptr [0x002280c8],RBX
0000a6cb(1): POP RBX
0000a6cc(1): RET
0000a6cd(7): MOV RCX,qword ptr [0x002280e0]
0000a6d4(7): LEA RDI,[0x21a78]
0000a6db(5): MOV EDX,0x37
0000a6e0(5): MOV ESI,0x1
0000a6e5(5): CALL 0x00002960
0000a6ea(5): CALL 0x00002400
0000a6ef(1): NOP
0000a6f0(1): PUSH RBP
0000a6f1(1): PUSH RBX
0000a6f2(3): MOV RBP,RDI
0000a6f5(2): MOV EBX,ESI
0000a6f7(4): SUB RSP,0x8
0000a6fb(5): CALL 0x0001f5c0
0000a700(3): MOVZX EDX,byte ptr [RAX]
0000a703(3): AND EDX,0xffffffdf
0000a706(3): CMP DL,0x55
0000a709(2): JZ 0x0000a780
0000a70b(3): CMP DL,0x47
0000a70e(2): JZ 0x0000a730
0000a710(7): LEA RAX,[0x21acb]
0000a717(7): LEA RDX,[0x214f4]
0000a71e(3): CMP EBX,0x9
0000a721(4): CMOVNZ RAX,RDX
0000a725(4): ADD RSP,0x8
0000a729(1): POP RBX
0000a72a(1): POP RBP
0000a72b(1): RET
0000a730(4): MOVZX EDX,byte ptr [RAX + 0x1]
0000a734(3): AND EDX,0xffffffdf
0000a737(3): CMP DL,0x42
0000a73a(2): JNZ 0x0000a710
0000a73c(4): CMP byte ptr [RAX + 0x2],0x31
0000a740(2): JNZ 0x0000a710
0000a742(4): CMP byte ptr [RAX + 0x3],0x38
0000a746(2): JNZ 0x0000a710
0000a748(4): CMP byte ptr [RAX + 0x4],0x30
0000a74c(2): JNZ 0x0000a710
0000a74e(4): CMP byte ptr [RAX + 0x5],0x33
0000a752(2): JNZ 0x0000a710
0000a754(4): CMP byte ptr [RAX + 0x6],0x30
0000a758(2): JNZ 0x0000a710
0000a75a(4): CMP byte ptr [RAX + 0x7],0x0
0000a75e(2): JNZ 0x0000a710
0000a760(4): CMP byte ptr [RBP],0x60
0000a764(7): LEA RAX,[0x21ac4]
0000a76b(7): LEA RDX,[0x21ac8]
0000a772(4): CMOVNZ RAX,RDX
0000a776(4): ADD RSP,0x8
0000a77a(1): POP RBX
0000a77b(1): POP RBP
0000a77c(1): RET
0000a780(4): MOVZX EDX,byte ptr [RAX + 0x1]
0000a784(3): AND EDX,0xffffffdf
0000a787(3): CMP DL,0x54
0000a78a(2): JNZ 0x0000a710
0000a78c(4): MOVZX EDX,byte ptr [RAX + 0x2]
0000a790(3): AND EDX,0xffffffdf
0000a793(3): CMP DL,0x46
0000a796(6): JNZ 0x0000a710
0000a79c(4): CMP byte ptr [RAX + 0x3],0x2d
0000a7a0(6): JNZ 0x0000a710
0000a7a6(4): CMP byte ptr [RAX + 0x4],0x38
0000a7aa(6): JNZ 0x0000a710
0000a7b0(4): CMP byte ptr [RAX + 0x5],0x0
0000a7b4(6): JNZ 0x0000a710
0000a7ba(4): CMP byte ptr [RBP],0x60
0000a7be(7): LEA RAX,[0x21abc]
0000a7c5(7): LEA RDX,[0x21ac0]
0000a7cc(4): CMOVNZ RAX,RDX
0000a7d0(4): ADD RSP,0x8
0000a7d4(1): POP RBX
0000a7d5(1): POP RBP
0000a7d6(1): RET
0000a7e0(2): PUSH R15
0000a7e2(2): PUSH R14
0000a7e4(3): MOV R15D,R8D
0000a7e7(2): PUSH R13
0000a7e9(2): PUSH R12
0000a7eb(3): MOV R14,RDI
0000a7ee(1): PUSH RBP
0000a7ef(1): PUSH RBX
0000a7f0(3): MOV EBX,R9D
0000a7f3(3): MOV R13,RSI
0000a7f6(3): MOV RBP,RCX
0000a7f9(3): AND EBX,0x2
0000a7fc(7): SUB RSP,0xb8
0000a803(8): MOV RAX,qword ptr [0xf0 + RSP]
0000a80b(5): MOV qword ptr [RSP + 0x10],RDX
0000a810(5): MOV dword ptr [RSP + 0x8],R8D
0000a815(5): MOV dword ptr [RSP + 0x78],R9D
0000a81a(5): MOV qword ptr [RSP + 0x20],RAX
0000a81f(8): MOV RAX,qword ptr [0xf8 + RSP]
0000a827(5): MOV qword ptr [RSP + 0x68],RAX
0000a82c(8): MOV RAX,qword ptr [0x100 + RSP]
0000a834(5): MOV qword ptr [RSP + 0x60],RAX
0000a839(9): MOV RAX,qword ptr FS:[0x28]
0000a842(8): MOV qword ptr [0xa8 + RSP],RAX
0000a84a(2): XOR EAX,EAX
0000a84c(5): CALL 0x00002520
0000a851(4): CMP R15D,0xa
0000a855(5): MOV qword ptr [RSP + 0x58],RAX
0000a85a(6): JA 0x0000ba0f
0000a860(7): LEA RCX,[0x21b20]
0000a867(3): MOV EDX,R15D
0000a86a(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
0000a86e(3): ADD RAX,RCX
0000a871(2): JMP RAX
0000a873(5): MOV byte ptr [RSP + 0xe],0x1
0000a878(5): MOV byte ptr [RSP + 0x7c],0x0
0000a87d(3): XOR R12D,R12D
0000a880(9): MOV qword ptr [RSP + 0x50],0x0
0000a889(5): MOV byte ptr [RSP + 0xf],0x1
0000a88e(5): MOV byte ptr [RSP + 0xd],0x0
0000a893(7): LEA RAX,[0x214f4]
0000a89a(9): MOV qword ptr [RSP + 0x18],0x1
0000a8a3(3): XOR R15D,R15D
0000a8a6(8): MOV dword ptr [RSP + 0x8],0x2
0000a8ae(5): MOV qword ptr [RSP + 0x48],RAX
0000a8b3(3): XOR R11D,R11D
0000a8b6(3): MOV RAX,RBP
0000a8b9(3): MOV R8D,R12D
0000a8bc(3): MOV RBP,R11
0000a8bf(3): MOV R11,RAX
0000a8c2(6): NOP word ptr [RAX + RAX*0x1]
0000a8c8(3): CMP R11,RBP
0000a8cb(4): SETNZ R12B
0000a8cf(4): CMP R11,-0x1
0000a8d3(2): JNZ 0x0000a8e2
0000a8d5(5): MOV RAX,qword ptr [RSP + 0x10]
0000a8da(4): CMP byte ptr [RAX + RBP*0x1],0x0
0000a8de(4): SETNZ R12B
0000a8e2(3): TEST R12B,R12B
0000a8e5(6): JZ 0x0000af40
0000a8eb(5): CMP dword ptr [RSP + 0x8],0x2
0000a8f0(5): MOV RDI,qword ptr [RSP + 0x10]
0000a8f5(4): LEA R9,[RDI + RBP*0x1]
0000a8f9(3): SETNZ AL
0000a8fc(4): AND AL,byte ptr [RSP + 0xd]
0000a900(3): MOV R10D,EAX
0000a903(6): JZ 0x0000a9b0
0000a909(5): MOV RAX,qword ptr [RSP + 0x18]
0000a90e(3): TEST RAX,RAX
0000a911(6): JZ 0x0000ad40
0000a917(4): CMP R11,-0x1
0000a91b(5): LEA RBX,[RBP + RAX*0x1]
0000a920(2): JNZ 0x0000a950
0000a922(4): CMP RAX,0x1
0000a926(2): JBE 0x0000a950
0000a928(5): MOV byte ptr [RSP + 0x38],R8B
0000a92d(5): MOV byte ptr [RSP + 0x30],R10B
0000a932(5): MOV qword ptr [RSP + 0x28],R9
0000a937(5): CALL 0x00002530
0000a93c(6): MOVZX R8D,byte ptr [RSP + 0x38]
0000a942(6): MOVZX R10D,byte ptr [RSP + 0x30]
0000a948(3): MOV R11,RAX
0000a94b(5): MOV R9,qword ptr [RSP + 0x28]
0000a950(3): CMP RBX,R11
0000a953(5): MOV byte ptr [RSP + 0x28],R10B
0000a958(6): JA 0x0000af10
0000a95e(5): MOV RDX,qword ptr [RSP + 0x18]
0000a963(5): MOV RSI,qword ptr [RSP + 0x48]
0000a968(3): MOV RDI,R9
0000a96b(5): MOV qword ptr [RSP + 0x40],R11
0000a970(5): MOV byte ptr [RSP + 0x38],R8B
0000a975(5): MOV qword ptr [RSP + 0x30],R9
0000a97a(5): CALL 0x00002680
0000a97f(2): TEST EAX,EAX
0000a981(5): MOV R9,qword ptr [RSP + 0x30]
0000a986(6): MOVZX R8D,byte ptr [RSP + 0x38]
0000a98c(5): MOV R11,qword ptr [RSP + 0x40]
0000a991(6): JNZ 0x0000af10
0000a997(5): CMP byte ptr [RSP + 0xf],0x0
0000a99c(6): MOVZX R10D,byte ptr [RSP + 0x28]
0000a9a2(6): JNZ 0x0000b925
0000a9a8(8): NOP dword ptr [RAX + RAX*0x1]
0000a9b0(4): MOVZX EBX,byte ptr [R9]
0000a9b4(3): CMP BL,0x7e
0000a9b7(6): JA 0x0000acd8
0000a9bd(7): LEA RCX,[0x21b4c]
0000a9c4(3): MOVZX EDX,BL
0000a9c7(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
0000a9cb(3): ADD RAX,RCX
0000a9ce(2): JMP RAX
0000a9d0(3): XOR R10D,R10D
0000a9d3(4): CMP R11,0x1
0000a9d7(3): SETNZ AL
0000a9da(4): CMP R11,-0x1
0000a9de(2): JNZ 0x0000a9ec
0000a9e0(5): MOV RAX,qword ptr [RSP + 0x10]
0000a9e5(4): CMP byte ptr [RAX + 0x1],0x0
0000a9e9(3): SETNZ AL
0000a9ec(5): CMP dword ptr [RSP + 0x8],0x2
0000a9f1(3): SETZ DL
0000a9f4(2): TEST AL,AL
0000a9f6(6): JZ 0x0000ac48
0000a9fc(3): XOR R12D,R12D
0000a9ff(2): XOR EAX,EAX
0000aa01(7): NOP dword ptr [RAX]
0000aa08(5): CMP byte ptr [RSP + 0xd],0x1
0000aa0d(6): JNZ 0x0000ab22
0000aa13(2): TEST DL,DL
0000aa15(6): JNZ 0x0000ab22
0000aa1b(5): MOV RSI,qword ptr [RSP + 0x20]
0000aa20(3): TEST RSI,RSI
0000aa23(2): JZ 0x0000aa39
0000aa25(2): MOV EDX,EBX
0000aa27(3): SHR DL,0x5
0000aa2a(3): MOVZX EDX,DL
0000aa2d(3): MOV EDX,dword ptr [RSI + RDX*0x4]
0000aa30(3): BT EDX,EBX
0000aa33(6): JC 0x0000ab83
0000aa39(3): TEST R10B,R10B
0000aa3c(6): JNZ 0x0000ab83
0000aa42(3): XOR EAX,0x1
0000aa45(4): ADD RBP,0x1
0000aa49(3): AND EAX,R8D
0000aa4c(2): TEST AL,AL
0000aa4e(2): JZ 0x0000aa70
0000aa50(3): CMP R13,R15
0000aa53(2): JBE 0x0000aa5a
0000aa55(5): MOV byte ptr [R14 + R15*0x1],0x27
0000aa5a(4): LEA RAX,[R15 + 0x1]
0000aa5e(3): CMP R13,RAX
0000aa61(2): JBE 0x0000aa69
0000aa63(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
0000aa69(4): ADD R15,0x2
0000aa6d(3): XOR R8D,R8D
0000aa70(3): CMP R15,R13
0000aa73(2): JNC 0x0000aa79
0000aa75(4): MOV byte ptr [R14 + R15*0x1],BL
0000aa79(5): MOVZX EDI,byte ptr [RSP + 0xe]
0000aa7e(4): ADD R15,0x1
0000aa82(5): MOV EAX,0x0
0000aa87(3): TEST R12B,R12B
0000aa8a(3): CMOVZ EDI,EAX
0000aa8d(5): MOV byte ptr [RSP + 0xe],DIL
0000aa92(5): JMP 0x0000a8c8
0000aaa0(3): XOR R10D,R10D
0000aaa3(4): MOV EAX,dword ptr [RSP + 0x8]
0000aaa7(3): CMP EAX,0x2
0000aaaa(6): JZ 0x0000b068
0000aab0(3): CMP EAX,0x5
0000aab3(6): JZ 0x0000b028
0000aab9(3): CMP EAX,0x2
0000aabc(5): MOV EBX,0x3f
0000aac1(3): SETZ DL
0000aac4(3): XOR R12D,R12D
0000aac7(2): XOR EAX,EAX
0000aac9(5): JMP 0x0000aa08
0000aad0(3): XOR R10D,R10D
0000aad3(5): CMP dword ptr [RSP + 0x8],0x2
0000aad8(6): JZ 0x0000afe0
0000aade(5): MOV byte ptr [RSP + 0x7c],R12B
0000aae3(2): XOR EDX,EDX
0000aae5(2): XOR EAX,EAX
0000aae7(5): MOV EBX,0x27
0000aaec(5): JMP 0x0000aa08
0000aaf8(5): MOV EDX,0x9
0000aafd(5): MOV EBX,0x74
0000ab02(5): CMP dword ptr [RSP + 0x8],0x2
0000ab07(3): SETZ AL
0000ab0a(4): AND AL,byte ptr [RSP + 0xf]
0000ab0e(6): JNZ 0x0000ac5e
0000ab14(5): CMP byte ptr [RSP + 0xd],0x0
0000ab19(2): JNZ 0x0000ab80
0000ab1b(2): MOV EBX,EDX
0000ab1d(3): XOR R12D,R12D
0000ab20(2): XOR EAX,EAX
0000ab22(5): CMP byte ptr [RSP + 0xf],0x0
0000ab27(6): JNZ 0x0000aa1b
0000ab2d(5): JMP 0x0000aa39
0000ab38(5): MOV EDX,0x8
0000ab3d(5): MOV EBX,0x62
0000ab42(2): JMP 0x0000ab14
0000ab48(5): CMP dword ptr [RSP + 0x8],0x2
0000ab4d(6): JZ 0x0000af20
0000ab53(5): CMP byte ptr [RSP + 0xd],0x0
0000ab58(6): JZ 0x0000ad70
0000ab5e(5): CMP byte ptr [RSP + 0xf],0x0
0000ab63(6): JZ 0x0000ad70
0000ab69(6): CMP qword ptr [RSP + 0x18],0x0
0000ab6f(6): JNZ 0x0000af2b
0000ab75(5): MOV EBX,0x5c
0000ab7a(6): NOP word ptr [RAX + RAX*0x1]
0000ab80(3): XOR R12D,R12D
0000ab83(5): CMP dword ptr [RSP + 0x8],0x2
0000ab88(3): SETZ DL
0000ab8b(5): CMP byte ptr [RSP + 0xf],0x0
0000ab90(2): MOV EAX,EDX
0000ab92(6): JNZ 0x0000b3e8
0000ab98(3): MOV EAX,R8D
0000ab9b(3): XOR EAX,0x1
0000ab9e(2): AND AL,DL
0000aba0(2): JZ 0x0000abd1
0000aba2(3): CMP R13,R15
0000aba5(2): JBE 0x0000abac
0000aba7(5): MOV byte ptr [R14 + R15*0x1],0x27
0000abac(4): LEA RDX,[R15 + 0x1]
0000abb0(3): CMP R13,RDX
0000abb3(2): JBE 0x0000abbb
0000abb5(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
0000abbb(4): LEA RDX,[R15 + 0x2]
0000abbf(3): CMP R13,RDX
0000abc2(2): JBE 0x0000abca
0000abc4(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000abca(4): ADD R15,0x3
0000abce(3): MOV R8D,EAX
0000abd1(3): CMP R13,R15
0000abd4(2): JBE 0x0000abdb
0000abd6(5): MOV byte ptr [R14 + R15*0x1],0x5c
0000abdb(4): ADD R15,0x1
0000abdf(4): ADD RBP,0x1
0000abe3(5): JMP 0x0000aa70
0000abf0(5): CMP byte ptr [RSP + 0xd],0x0
0000abf5(6): JNZ 0x0000adc3
0000abfb(2): XOR EDX,EDX
0000abfd(5): TEST byte ptr [RSP + 0x78],0x1
0000ac02(6): JZ 0x0000ab1b
0000ac08(4): ADD RBP,0x1
0000ac0c(5): JMP 0x0000a8c8
0000ac18(5): CMP dword ptr [RSP + 0x8],0x2
0000ac1d(3): SETZ DL
0000ac20(2): XOR EAX,EAX
0000ac22(5): JMP 0x0000aa08
0000ac30(5): MOV EDX,0x7
0000ac35(5): MOV EBX,0x61
0000ac3a(5): JMP 0x0000ab14
0000ac40(5): CMP dword ptr [RSP + 0x8],0x2
0000ac45(3): SETZ DL
0000ac48(3): TEST RBP,RBP
0000ac4b(6): JNZ 0x0000a9fc
0000ac51(5): MOVZX EAX,byte ptr [RSP + 0xf]
0000ac56(2): AND AL,DL
0000ac58(6): JZ 0x0000aa08
0000ac5e(3): MOV RBP,R11
0000ac61(8): MOV dword ptr [RSP + 0x8],0x2
0000ac69(5): JMP 0x0000b369
0000ac70(5): CMP dword ptr [RSP + 0x8],0x2
0000ac75(3): SETZ DL
0000ac78(3): XOR R12D,R12D
0000ac7b(2): JMP 0x0000ac51
0000ac80(5): CMP dword ptr [RSP + 0x8],0x2
0000ac85(5): MOV EBX,0x20
0000ac8a(3): SETZ DL
0000ac8d(2): JMP 0x0000ac51
0000ac90(5): MOV EDX,0xd
0000ac95(5): MOV EBX,0x72
0000ac9a(5): JMP 0x0000ab02
0000aca0(5): MOV EDX,0xc
0000aca5(5): MOV EBX,0x66
0000acaa(5): JMP 0x0000ab14
0000acb0(5): MOV EDX,0xb
0000acb5(5): MOV EBX,0x76
0000acba(5): JMP 0x0000ab14
0000acc0(5): MOV EDX,0xa
0000acc5(5): MOV EBX,0x6e
0000acca(5): JMP 0x0000ab02
0000acd0(3): XOR R10D,R10D
0000acd3(5): NOP dword ptr [RAX + RAX*0x1]
0000acd8(6): CMP qword ptr [RSP + 0x58],0x1
0000acde(6): JNZ 0x0000b088
0000ace4(5): MOV qword ptr [RSP + 0x38],R11
0000ace9(5): MOV byte ptr [RSP + 0x30],R8B
0000acee(5): MOV byte ptr [RSP + 0x28],R10B
0000acf3(5): CALL 0x000029f0
0000acf8(3): MOV RCX,qword ptr [RAX]
0000acfb(3): MOVZX EDX,BL
0000acfe(6): MOVZX R10D,byte ptr [RSP + 0x28]
0000ad04(6): MOVZX R8D,byte ptr [RSP + 0x30]
0000ad0a(5): MOV R11,qword ptr [RSP + 0x38]
0000ad0f(5): MOV EDI,0x1
0000ad14(4): MOVZX EAX,word ptr [RCX + RDX*0x2]
0000ad18(4): AND AX,0x4000
0000ad1c(4): SETNZ R12B
0000ad20(3): SETZ AL
0000ad23(4): AND AL,byte ptr [RSP + 0xd]
0000ad27(2): TEST AL,AL
0000ad29(6): JNZ 0x0000b6c1
0000ad2f(5): CMP dword ptr [RSP + 0x8],0x2
0000ad34(3): SETZ DL
0000ad37(5): JMP 0x0000aa08
0000ad40(4): MOVZX EBX,byte ptr [R9]
0000ad44(3): CMP BL,0x7e
0000ad47(2): JA 0x0000acd0
0000ad49(7): LEA RCX,[0x21d48]
0000ad50(3): MOVZX EDX,BL
0000ad53(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
0000ad57(3): ADD RAX,RCX
0000ad5a(2): JMP RAX
0000ad60(3): XOR R10D,R10D
0000ad63(5): CMP byte ptr [RSP + 0xd],0x0
0000ad68(6): JNZ 0x0000ab5e
0000ad6e(2): NOP
0000ad70(5): MOV EDX,0x5c
0000ad75(5): MOV EBX,0x5c
0000ad7a(5): JMP 0x0000ab14
0000ad80(5): MOV EDX,0xc
0000ad85(3): XOR R10D,R10D
0000ad88(5): MOV EBX,0x66
0000ad8d(5): JMP 0x0000ab14
0000ad98(5): MOV EDX,0xa
0000ad9d(3): XOR R10D,R10D
0000ada0(5): MOV EBX,0x6e
0000ada5(5): JMP 0x0000ab02
0000adb0(5): MOV EBX,0x61
0000adb5(5): JMP 0x0000ab80
0000adc0(3): XOR R10D,R10D
0000adc3(5): CMP dword ptr [RSP + 0x8],0x2
0000adc8(3): SETZ DL
0000adcb(5): CMP byte ptr [RSP + 0xf],0x0
0000add0(6): JNZ 0x0000b96a
0000add6(3): MOV EAX,R8D
0000add9(3): MOV RCX,R15
0000addc(3): XOR EAX,0x1
0000addf(2): AND AL,DL
0000ade1(2): JZ 0x0000ae10
0000ade3(3): CMP R13,R15
0000ade6(2): JBE 0x0000aded
0000ade8(5): MOV byte ptr [R14 + R15*0x1],0x27
0000aded(4): LEA RCX,[R15 + 0x1]
0000adf1(3): CMP R13,RCX
0000adf4(2): JBE 0x0000adfc
0000adf6(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
0000adfc(4): LEA RCX,[R15 + 0x2]
0000ae00(3): CMP R13,RCX
0000ae03(6): JA 0x0000b439
0000ae09(4): LEA RCX,[R15 + 0x3]
0000ae0d(3): MOV R8D,EAX
0000ae10(3): CMP R13,RCX
0000ae13(2): JBE 0x0000ae1a
0000ae15(5): MOV byte ptr [R14 + RCX*0x1],0x5c
0000ae1a(5): CMP dword ptr [RSP + 0x8],0x2
0000ae1f(4): LEA R15,[RCX + 0x1]
0000ae23(6): JZ 0x0000b429
0000ae29(4): LEA RAX,[RBP + 0x1]
0000ae2d(3): CMP RAX,R11
0000ae30(2): JNC 0x0000ae4b
0000ae32(5): MOV RAX,qword ptr [RSP + 0x10]
0000ae37(5): MOVZX EAX,byte ptr [RAX + RBP*0x1 + 0x1]
0000ae3c(4): MOV byte ptr [RSP + 0x28],AL
0000ae40(3): SUB EAX,0x30
0000ae43(2): CMP AL,0x9
0000ae45(6): JBE 0x0000b679
0000ae4b(3): MOV EAX,R12D
0000ae4e(5): MOV EBX,0x30
0000ae53(3): XOR R12D,R12D
0000ae56(5): JMP 0x0000aa08
0000ae60(5): CMP dword ptr [RSP + 0x8],0x2
0000ae65(3): MOV R12D,R10D
0000ae68(3): SETZ DL
0000ae6b(3): XOR R10D,R10D
0000ae6e(2): XOR EAX,EAX
0000ae70(5): JMP 0x0000aa08
0000ae78(5): CMP dword ptr [RSP + 0x8],0x2
0000ae7d(3): SETZ DL
0000ae80(3): XOR R10D,R10D
0000ae83(5): JMP 0x0000ac48
0000ae90(5): CMP dword ptr [RSP + 0x8],0x2
0000ae95(3): SETZ DL
0000ae98(3): XOR R10D,R10D
0000ae9b(3): XOR R12D,R12D
0000ae9e(5): JMP 0x0000ac51
0000aea8(5): CMP dword ptr [RSP + 0x8],0x2
0000aead(3): MOV R12D,R10D
0000aeb0(5): MOV EBX,0x20
0000aeb5(3): SETZ DL
0000aeb8(3): XOR R10D,R10D
0000aebb(5): JMP 0x0000ac51
0000aec0(5): MOV EDX,0xd
0000aec5(3): XOR R10D,R10D
0000aec8(5): MOV EBX,0x72
0000aecd(5): JMP 0x0000ab02
0000aed8(5): MOV EBX,0x76
0000aedd(5): JMP 0x0000ab80
0000aee8(5): MOV EDX,0x9
0000aeed(3): XOR R10D,R10D
0000aef0(5): MOV EBX,0x74
0000aef5(5): JMP 0x0000ab02
0000af00(5): MOV EBX,0x62
0000af05(5): JMP 0x0000ab80
0000af10(3): XOR R10D,R10D
0000af13(5): JMP 0x0000a9b0
0000af20(5): CMP byte ptr [RSP + 0xf],0x0
0000af25(6): JNZ 0x0000b890
0000af2b(4): ADD RBP,0x1
0000af2f(3): MOV EAX,R8D
0000af32(3): XOR R12D,R12D
0000af35(5): MOV EBX,0x5c
0000af3a(5): JMP 0x0000aa4c
0000af40(5): CMP dword ptr [RSP + 0x8],0x2
0000af45(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000af4a(3): MOV R12D,R8D
0000af4d(3): MOV RBP,R11
0000af50(3): SETZ DL
0000af53(2): MOV EAX,EBX
0000af55(3): TEST R15,R15
0000af58(3): SETZ CL
0000af5b(2): AND EAX,EDX
0000af5d(2): AND AL,CL
0000af5f(6): JNZ 0x0000b9c6
0000af65(2): MOV EAX,EBX
0000af67(3): XOR EAX,0x1
0000af6a(2): AND DL,AL
0000af6c(6): JZ 0x0000b8dc
0000af72(5): CMP byte ptr [RSP + 0x7c],0x0
0000af77(6): JZ 0x0000b8da
0000af7d(5): CMP byte ptr [RSP + 0xe],0x0
0000af82(6): JNZ 0x0000b97d
0000af88(3): TEST R13,R13
0000af8b(3): SETZ AL
0000af8e(6): CMP qword ptr [RSP + 0x50],0x0
0000af94(3): SETNZ DL
0000af97(2): AND AL,DL
0000af99(6): JZ 0x0000b9bc
0000af9f(5): MOV R13,qword ptr [RSP + 0x50]
0000afa4(7): LEA RBX,[0x214f4]
0000afab(4): MOV byte ptr [R14],0x27
0000afaf(8): MOV dword ptr [RSP + 0x8],0x2
0000afb7(6): MOV R15D,0x1
0000afbd(9): MOV qword ptr [RSP + 0x18],0x1
0000afc6(5): MOV byte ptr [RSP + 0xf],0x0
0000afcb(5): MOV qword ptr [RSP + 0x48],RBX
0000afd0(4): MOV byte ptr [RSP + 0x7c],AL
0000afd4(5): JMP 0x0000a8b3
0000afe0(5): CMP byte ptr [RSP + 0xf],0x0
0000afe5(6): JNZ 0x0000b890
0000afeb(3): TEST R13,R13
0000afee(6): JZ 0x0000b3f0
0000aff4(2): XOR EDX,EDX
0000aff6(6): CMP qword ptr [RSP + 0x50],0x0
0000affc(6): JNZ 0x0000b3f0
0000b002(5): MOV qword ptr [RSP + 0x50],R13
0000b007(4): ADD R15,0x3
0000b00b(2): XOR EAX,EAX
0000b00d(5): MOV byte ptr [RSP + 0x7c],R12B
0000b012(3): XOR R8D,R8D
0000b015(3): MOV R13,RDX
0000b018(5): MOV EBX,0x27
0000b01d(5): JMP 0x0000aa39
0000b028(5): TEST byte ptr [RSP + 0x78],0x4
0000b02d(2): JZ 0x0000b050
0000b02f(4): LEA RCX,[RBP + 0x2]
0000b033(3): CMP RCX,R11
0000b036(2): JNC 0x0000b050
0000b038(5): MOV RAX,qword ptr [RSP + 0x10]
0000b03d(5): CMP byte ptr [RAX + RBP*0x1 + 0x1],0x3f
0000b042(6): JZ 0x0000b7d2
0000b048(8): NOP dword ptr [RAX + RAX*0x1]
0000b050(2): XOR EDX,EDX
0000b052(3): XOR R12D,R12D
0000b055(2): XOR EAX,EAX
0000b057(5): MOV EBX,0x3f
0000b05c(5): JMP 0x0000aa08
0000b068(5): CMP byte ptr [RSP + 0xf],0x0
0000b06d(6): JNZ 0x0000b890
0000b073(3): XOR R12D,R12D
0000b076(2): XOR EAX,EAX
0000b078(5): MOV EBX,0x3f
0000b07d(5): JMP 0x0000aa39
0000b088(8): LEA RAX,[0xa0 + RSP]
0000b090(4): CMP R11,-0x1
0000b094(12): MOV qword ptr [0xa0 + RSP],0x0
0000b0a0(5): MOV qword ptr [RSP + 0x28],RAX
0000b0a5(2): JNZ 0x0000b0d4
0000b0a7(5): MOV RDI,qword ptr [RSP + 0x10]
0000b0ac(5): MOV byte ptr [RSP + 0x40],R8B
0000b0b1(5): MOV byte ptr [RSP + 0x38],R10B
0000b0b6(5): MOV qword ptr [RSP + 0x30],R9
0000b0bb(5): CALL 0x00002530
0000b0c0(6): MOVZX R8D,byte ptr [RSP + 0x40]
0000b0c6(6): MOVZX R10D,byte ptr [RSP + 0x38]
0000b0cc(3): MOV R11,RAX
0000b0cf(5): MOV R9,qword ptr [RSP + 0x30]
0000b0d4(8): LEA RAX,[0x9c + RSP]
0000b0dc(2): XOR ECX,ECX
0000b0de(4): MOV byte ptr [RSP + 0x7e],BL
0000b0e2(5): MOV byte ptr [RSP + 0x7d],R8B
0000b0e7(3): MOV RBX,RCX
0000b0ea(8): MOV qword ptr [0x88 + RSP],R9
0000b0f2(5): MOV qword ptr [RSP + 0x38],RAX
0000b0f7(5): MOV byte ptr [RSP + 0x7f],R10B
0000b0fc(8): MOV qword ptr [0x80 + RSP],R15
0000b104(5): MOV qword ptr [RSP + 0x40],R14
0000b109(5): MOV qword ptr [RSP + 0x70],R13
0000b10e(5): MOV qword ptr [RSP + 0x30],R11
0000b113(5): MOV RAX,qword ptr [RSP + 0x10]
0000b118(5): LEA R14,[RBP + RBX*0x1]
0000b11d(5): MOV RDX,qword ptr [RSP + 0x30]
0000b122(5): MOV RCX,qword ptr [RSP + 0x28]
0000b127(5): MOV RDI,qword ptr [RSP + 0x38]
0000b12c(4): LEA R13,[RAX + R14*0x1]
0000b130(3): SUB RDX,R14
0000b133(3): MOV RSI,R13
0000b136(5): CALL 0x000101e0
0000b13b(3): TEST RAX,RAX
0000b13e(3): MOV R15,RAX
0000b141(2): JZ 0x0000b191
0000b143(4): CMP RAX,-0x1
0000b147(6): JZ 0x0000b765
0000b14d(4): CMP RAX,-0x2
0000b151(6): JZ 0x0000b6f1
0000b157(5): CMP dword ptr [RSP + 0x8],0x2
0000b15c(3): SETZ AL
0000b15f(4): AND AL,byte ptr [RSP + 0xf]
0000b163(6): JNZ 0x0000b300
0000b169(7): MOV EDI,dword ptr [0x9c + RSP]
0000b170(5): CALL 0x000029a0
0000b175(5): MOV RDI,qword ptr [RSP + 0x28]
0000b17a(2): TEST EAX,EAX
0000b17c(5): MOV EAX,0x0
0000b181(4): CMOVZ R12D,EAX
0000b185(3): ADD RBX,R15
0000b188(5): CALL 0x00002990
0000b18d(2): TEST EAX,EAX
0000b18f(2): JZ 0x0000b113
0000b191(3): MOV EDX,R12D
0000b194(3): MOV RDI,RBX
0000b197(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000b19d(3): XOR EDX,0x1
0000b1a0(5): MOVZX EBX,byte ptr [RSP + 0x7e]
0000b1a5(6): MOVZX R10D,byte ptr [RSP + 0x7f]
0000b1ab(4): AND DL,byte ptr [RSP + 0xd]
0000b1af(8): MOV R15,qword ptr [0x80 + RSP]
0000b1b7(5): MOV R14,qword ptr [RSP + 0x40]
0000b1bc(5): MOV R13,qword ptr [RSP + 0x70]
0000b1c1(5): MOV R11,qword ptr [RSP + 0x30]
0000b1c6(4): CMP RDI,0x1
0000b1ca(6): JBE 0x0000b7cb
0000b1d0(3): MOV RCX,RDI
0000b1d3(2): XOR ESI,ESI
0000b1d5(6): MOVZX R9D,byte ptr [RSP + 0xf]
0000b1db(3): ADD RCX,RBP
0000b1de(5): MOV RDI,qword ptr [RSP + 0x10]
0000b1e3(5): JMP 0x0000b29e
0000b1f0(5): CMP dword ptr [RSP + 0x8],0x2
0000b1f5(3): SETZ AL
0000b1f8(3): TEST R9B,R9B
0000b1fb(6): JNZ 0x0000b6b0
0000b201(3): MOV ESI,R8D
0000b204(3): XOR ESI,0x1
0000b207(3): AND AL,SIL
0000b20a(2): JZ 0x0000b23b
0000b20c(3): CMP R13,R15
0000b20f(2): JBE 0x0000b216
0000b211(5): MOV byte ptr [R14 + R15*0x1],0x27
0000b216(4): LEA RSI,[R15 + 0x1]
0000b21a(3): CMP R13,RSI
0000b21d(2): JBE 0x0000b225
0000b21f(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
0000b225(4): LEA RSI,[R15 + 0x2]
0000b229(3): CMP R13,RSI
0000b22c(2): JBE 0x0000b234
0000b22e(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000b234(4): ADD R15,0x3
0000b238(3): MOV R8D,EAX
0000b23b(3): CMP R13,R15
0000b23e(2): JBE 0x0000b245
0000b240(5): MOV byte ptr [R14 + R15*0x1],0x5c
0000b245(4): LEA RAX,[R15 + 0x1]
0000b249(3): CMP R13,RAX
0000b24c(2): JBE 0x0000b25b
0000b24e(2): MOV EAX,EBX
0000b250(3): SHR AL,0x6
0000b253(3): ADD EAX,0x30
0000b256(5): MOV byte ptr [R14 + R15*0x1 + 0x1],AL
0000b25b(4): LEA RAX,[R15 + 0x2]
0000b25f(3): CMP R13,RAX
0000b262(2): JBE 0x0000b274
0000b264(2): MOV EAX,EBX
0000b266(3): SHR AL,0x3
0000b269(3): AND EAX,0x7
0000b26c(3): ADD EAX,0x30
0000b26f(5): MOV byte ptr [R14 + R15*0x1 + 0x2],AL
0000b274(3): AND EBX,0x7
0000b277(4): ADD RBP,0x1
0000b27b(4): ADD R15,0x3
0000b27f(3): ADD EBX,0x30
0000b282(3): CMP RBP,RCX
0000b285(6): JNC 0x0000aa70
0000b28b(2): MOV ESI,EDX
0000b28d(3): CMP R13,R15
0000b290(2): JBE 0x0000b296
0000b292(4): MOV byte ptr [R14 + R15*0x1],BL
0000b296(4): MOVZX EBX,byte ptr [RDI + RBP*0x1]
0000b29a(4): ADD R15,0x1
0000b29e(2): TEST DL,DL
0000b2a0(6): JNZ 0x0000b1f0
0000b2a6(2): MOV EAX,ESI
0000b2a8(3): XOR EAX,0x1
0000b2ab(3): AND EAX,R8D
0000b2ae(3): TEST R10B,R10B
0000b2b1(2): JZ 0x0000b2c1
0000b2b3(3): CMP R13,R15
0000b2b6(2): JBE 0x0000b2bd
0000b2b8(5): MOV byte ptr [R14 + R15*0x1],0x5c
0000b2bd(4): ADD R15,0x1
0000b2c1(4): ADD RBP,0x1
0000b2c5(3): CMP RBP,RCX
0000b2c8(6): JNC 0x0000aa4c
0000b2ce(2): TEST AL,AL
0000b2d0(6): JZ 0x0000b6ce
0000b2d6(3): CMP R13,R15
0000b2d9(2): JBE 0x0000b2e0
0000b2db(5): MOV byte ptr [R14 + R15*0x1],0x27
0000b2e0(4): LEA RAX,[R15 + 0x1]
0000b2e4(3): CMP R13,RAX
0000b2e7(2): JBE 0x0000b2ef
0000b2e9(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
0000b2ef(4): ADD R15,0x2
0000b2f3(3): XOR R10D,R10D
0000b2f6(3): XOR R8D,R8D
0000b2f9(2): JMP 0x0000b28d
0000b300(4): CMP R15,0x1
0000b304(6): JZ 0x0000b169
0000b30a(5): MOV RDI,qword ptr [RSP + 0x10]
0000b30f(4): LEA RCX,[RDI + R15*0x1]
0000b313(5): LEA RDX,[RDI + R14*0x1 + 0x1]
0000b318(4): LEA R8,[RCX + R14*0x1]
0000b31c(2): JMP 0x0000b32d
0000b320(4): ADD RDX,0x1
0000b324(3): CMP R8,RDX
0000b327(6): JZ 0x0000b169
0000b32d(3): MOVZX ECX,byte ptr [RDX]
0000b330(3): SUB ECX,0x5b
0000b333(3): CMP CL,0x21
0000b336(2): JA 0x0000b320
0000b338(5): MOV ESI,0x1
0000b33d(3): SHL RSI,CL
0000b340(3): MOV RCX,RSI
0000b343(10): MOV RSI,0x20000002b
0000b34d(3): TEST RCX,RSI
0000b350(2): JZ 0x0000b320
0000b352(5): MOV R14,qword ptr [RSP + 0x40]
0000b357(5): MOV R13,qword ptr [RSP + 0x70]
0000b35c(5): MOV RBP,qword ptr [RSP + 0x30]
0000b361(8): MOV dword ptr [RSP + 0x8],0x2
0000b369(5): CMP byte ptr [RSP + 0xd],0x0
0000b36e(2): JZ 0x0000b380
0000b370(2): TEST AL,AL
0000b372(5): MOV EAX,0x4
0000b377(5): CMOVZ EAX,dword ptr [RSP + 0x8]
0000b37c(4): MOV dword ptr [RSP + 0x8],EAX
0000b380(4): SUB RSP,0x8
0000b384(3): MOV RCX,RBP
0000b387(3): MOV RSI,R13
0000b38a(4): PUSH qword ptr [RSP + 0x68]
0000b38e(4): PUSH qword ptr [RSP + 0x78]
0000b392(3): MOV RDI,R14
0000b395(2): PUSH 0x0
0000b397(8): MOV R9D,dword ptr [0x98 + RSP]
0000b39f(5): MOV R8D,dword ptr [RSP + 0x28]
0000b3a4(5): MOV RDX,qword ptr [RSP + 0x30]
0000b3a9(4): AND R9D,0xfffffffd
0000b3ad(5): CALL 0x0000a7e0
0000b3b2(4): ADD RSP,0x20
0000b3b6(3): MOV R15,RAX
0000b3b9(8): MOV RBX,qword ptr [0xa8 + RSP]
0000b3c1(9): XOR RBX,qword ptr FS:[0x28]
0000b3ca(3): MOV RAX,R15
0000b3cd(6): JNZ 0x0000b9d3
0000b3d3(7): ADD RSP,0xb8
0000b3da(1): POP RBX
0000b3db(1): POP RBP
0000b3dc(2): POP R12
0000b3de(2): POP R13
0000b3e0(2): POP R14
0000b3e2(2): POP R15
0000b3e4(1): RET
0000b3e8(3): MOV RBP,R11
0000b3eb(5): JMP 0x0000b369
0000b3f0(3): CMP R13,R15
0000b3f3(2): JBE 0x0000b3fa
0000b3f5(5): MOV byte ptr [R14 + R15*0x1],0x27
0000b3fa(4): LEA RAX,[R15 + 0x1]
0000b3fe(3): CMP R13,RAX
0000b401(2): JBE 0x0000b409
0000b403(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x5c
0000b409(4): LEA RAX,[R15 + 0x2]
0000b40d(3): CMP R13,RAX
0000b410(6): JBE 0x0000ba02
0000b416(3): MOV RDX,R13
0000b419(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000b41f(5): MOV R13,qword ptr [RSP + 0x50]
0000b424(5): JMP 0x0000b002
0000b429(3): MOV EAX,R12D
0000b42c(5): MOV EBX,0x30
0000b431(3): XOR R12D,R12D
0000b434(5): JMP 0x0000aa39
0000b439(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000b43f(5): JMP 0x0000ae09
0000b444(2): TEST EBX,EBX
0000b446(6): JNZ 0x0000a873
0000b44c(5): MOV byte ptr [RSP + 0xd],0x1
0000b451(3): TEST R13,R13
0000b454(6): JNZ 0x0000b9ea
0000b45a(7): LEA RAX,[0x214f4]
0000b461(9): MOV qword ptr [RSP + 0x50],0x0
0000b46a(5): MOV byte ptr [RSP + 0xe],0x1
0000b46f(5): MOV byte ptr [RSP + 0x7c],0x0
0000b474(3): XOR R12D,R12D
0000b477(5): MOV byte ptr [RSP + 0xf],0x0
0000b47c(9): MOV qword ptr [RSP + 0x18],0x1
0000b485(5): MOV qword ptr [RSP + 0x48],RAX
0000b48a(6): MOV R15D,0x1
0000b490(8): MOV dword ptr [RSP + 0x8],0x2
0000b498(5): JMP 0x0000a8b3
0000b4a0(2): TEST EBX,EBX
0000b4a2(6): JNZ 0x0000b89d
0000b4a8(3): TEST R13,R13
0000b4ab(6): JZ 0x0000b6d6
0000b4b1(4): MOV byte ptr [R14],0x22
0000b4b5(5): MOV byte ptr [RSP + 0xe],0x1
0000b4ba(3): XOR R12D,R12D
0000b4bd(5): MOV byte ptr [RSP + 0x7c],0x0
0000b4c2(9): MOV qword ptr [RSP + 0x50],0x0
0000b4cb(7): LEA RAX,[0x21acb]
0000b4d2(5): MOV byte ptr [RSP + 0xf],0x0
0000b4d7(5): MOV byte ptr [RSP + 0xd],0x1
0000b4dc(9): MOV qword ptr [RSP + 0x18],0x1
0000b4e5(6): MOV R15D,0x1
0000b4eb(5): MOV qword ptr [RSP + 0x48],RAX
0000b4f0(5): JMP 0x0000a8b3
0000b4f5(7): LEA RAX,[0x21acb]
0000b4fc(5): MOV byte ptr [RSP + 0xe],0x1
0000b501(5): MOV byte ptr [RSP + 0x7c],0x0
0000b506(3): XOR R12D,R12D
0000b509(9): MOV qword ptr [RSP + 0x50],0x0
0000b512(5): MOV byte ptr [RSP + 0xf],0x1
0000b517(5): MOV byte ptr [RSP + 0xd],0x1
0000b51c(9): MOV qword ptr [RSP + 0x18],0x1
0000b525(3): XOR R15D,R15D
0000b528(5): MOV qword ptr [RSP + 0x48],RAX
0000b52d(8): MOV dword ptr [RSP + 0x8],0x5
0000b535(5): JMP 0x0000a8b3
0000b53a(5): MOV byte ptr [RSP + 0xe],0x1
0000b53f(5): MOV byte ptr [RSP + 0x7c],0x0
0000b544(3): XOR R12D,R12D
0000b547(9): MOV qword ptr [RSP + 0x50],0x0
0000b550(5): MOV byte ptr [RSP + 0xf],0x0
0000b555(3): XOR R15D,R15D
0000b558(5): MOV byte ptr [RSP + 0xd],0x1
0000b55d(9): MOV qword ptr [RSP + 0x18],0x0
0000b566(9): MOV qword ptr [RSP + 0x48],0x0
0000b56f(5): JMP 0x0000a8b3
0000b574(5): CMP dword ptr [RSP + 0x8],0xa
0000b579(2): JZ 0x0000b5d1
0000b57b(7): LEA RSI,[0x21acd]
0000b582(2): XOR EDI,EDI
0000b584(5): MOV EDX,0x5
0000b589(5): CALL 0x00002510
0000b58e(3): MOV RCX,RAX
0000b591(5): MOV qword ptr [RSP + 0x68],RAX
0000b596(7): LEA RAX,[0x21acd]
0000b59d(3): CMP RCX,RAX
0000b5a0(6): JZ 0x0000b93e
0000b5a6(7): LEA RSI,[0x214f4]
0000b5ad(2): XOR EDI,EDI
0000b5af(5): MOV EDX,0x5
0000b5b4(5): CALL 0x00002510
0000b5b9(3): MOV RCX,RAX
0000b5bc(5): MOV qword ptr [RSP + 0x60],RAX
0000b5c1(7): LEA RAX,[0x214f4]
0000b5c8(3): CMP RCX,RAX
0000b5cb(6): JZ 0x0000b954
0000b5d1(3): XOR R15D,R15D
0000b5d4(2): TEST EBX,EBX
0000b5d6(6): JZ 0x0000b79d
0000b5dc(2): TEST EBX,EBX
0000b5de(5): MOV RBX,qword ptr [RSP + 0x60]
0000b5e3(5): SETNZ byte ptr [RSP + 0xf]
0000b5e8(3): XOR R12D,R12D
0000b5eb(3): MOV RDI,RBX
0000b5ee(5): CALL 0x00002530
0000b5f3(5): MOV qword ptr [RSP + 0x48],RBX
0000b5f8(5): MOV qword ptr [RSP + 0x18],RAX
0000b5fd(5): MOV byte ptr [RSP + 0xe],0x1
0000b602(5): MOV byte ptr [RSP + 0x7c],0x0
0000b607(9): MOV qword ptr [RSP + 0x50],0x0
0000b610(5): MOV byte ptr [RSP + 0xd],0x1
0000b615(5): JMP 0x0000a8b3
0000b61a(5): MOV byte ptr [RSP + 0xe],0x1
0000b61f(5): MOV byte ptr [RSP + 0x7c],0x0
0000b624(3): XOR R12D,R12D
0000b627(9): MOV qword ptr [RSP + 0x50],0x0
0000b630(5): MOV byte ptr [RSP + 0xf],0x0
0000b635(3): XOR R15D,R15D
0000b638(5): MOV byte ptr [RSP + 0xd],0x0
0000b63d(9): MOV qword ptr [RSP + 0x18],0x0
0000b646(9): MOV qword ptr [RSP + 0x48],0x0
0000b64f(5): JMP 0x0000a8b3
0000b654(5): MOV byte ptr [RSP + 0xe],0x1
0000b659(5): MOV byte ptr [RSP + 0x7c],0x0
0000b65e(3): XOR R12D,R12D
0000b661(9): MOV qword ptr [RSP + 0x50],0x0
0000b66a(5): MOV byte ptr [RSP + 0xf],0x1
0000b66f(5): MOV byte ptr [RSP + 0xd],0x1
0000b674(5): JMP 0x0000a893
0000b679(3): CMP R13,R15
0000b67c(2): JBE 0x0000b683
0000b67e(5): MOV byte ptr [R14 + R15*0x1],0x30
0000b683(4): LEA RAX,[RCX + 0x2]
0000b687(3): CMP R13,RAX
0000b68a(2): JBE 0x0000b692
0000b68c(6): MOV byte ptr [R14 + RCX*0x1 + 0x2],0x30
0000b692(3): MOV EAX,R12D
0000b695(4): LEA R15,[RCX + 0x3]
0000b699(3): XOR R12D,R12D
0000b69c(5): MOV EBX,0x30
0000b6a1(5): JMP 0x0000aa08
0000b6b0(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000b6b5(3): MOV RBP,R11
0000b6b8(4): MOV byte ptr [RSP + 0xd],BL
0000b6bc(5): JMP 0x0000b369
0000b6c1(5): MOVZX EDX,byte ptr [RSP + 0xd]
0000b6c6(3): XOR R12D,R12D
0000b6c9(5): JMP 0x0000b1d0
0000b6ce(3): XOR R10D,R10D
0000b6d1(5): JMP 0x0000b28d
0000b6d6(9): MOV qword ptr [RSP + 0x50],0x0
0000b6df(5): MOV byte ptr [RSP + 0xe],0x1
0000b6e4(3): XOR R12D,R12D
0000b6e7(5): MOV byte ptr [RSP + 0x7c],0x0
0000b6ec(5): JMP 0x0000b4cb
0000b6f1(5): MOV R11,qword ptr [RSP + 0x30]
0000b6f6(3): MOV RSI,R14
0000b6f9(3): MOV RCX,R13
0000b6fc(3): MOV RAX,RBX
0000b6ff(3): MOV RDI,RBX
0000b702(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000b708(5): MOVZX EBX,byte ptr [RSP + 0x7e]
0000b70d(8): MOV R9,qword ptr [0x88 + RSP]
0000b715(3): CMP RSI,R11
0000b718(6): MOVZX R10D,byte ptr [RSP + 0x7f]
0000b71e(8): MOV R15,qword ptr [0x80 + RSP]
0000b726(5): MOV R14,qword ptr [RSP + 0x40]
0000b72b(5): MOV R13,qword ptr [RSP + 0x70]
0000b730(2): JNC 0x0000b758
0000b732(3): CMP byte ptr [RCX],0x0
0000b735(2): JNZ 0x0000b747
0000b737(2): JMP 0x0000b758
0000b740(5): CMP byte ptr [R9 + RAX*0x1],0x0
0000b745(2): JZ 0x0000b755
0000b747(4): ADD RAX,0x1
0000b74b(5): LEA RDX,[RBP + RAX*0x1]
0000b750(3): CMP R11,RDX
0000b753(2): JA 0x0000b740
0000b755(3): MOV RDI,RAX
0000b758(5): MOVZX EDX,byte ptr [RSP + 0xd]
0000b75d(3): XOR R12D,R12D
0000b760(5): JMP 0x0000b1c6
0000b765(3): MOV RDI,RBX
0000b768(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000b76e(5): MOVZX EBX,byte ptr [RSP + 0x7e]
0000b773(6): MOVZX R10D,byte ptr [RSP + 0x7f]
0000b779(8): MOV R15,qword ptr [0x80 + RSP]
0000b781(3): XOR R12D,R12D
0000b784(5): MOV R14,qword ptr [RSP + 0x40]
0000b789(5): MOV R13,qword ptr [RSP + 0x70]
0000b78e(5): MOV R11,qword ptr [RSP + 0x30]
0000b793(5): MOVZX EDX,byte ptr [RSP + 0xd]
0000b798(5): JMP 0x0000b1c6
0000b79d(5): MOV RDX,qword ptr [RSP + 0x68]
0000b7a2(3): MOVZX EAX,byte ptr [RDX]
0000b7a5(2): TEST AL,AL
0000b7a7(6): JZ 0x0000b5dc
0000b7ad(3): NOP dword ptr [RAX]
0000b7b0(3): CMP R13,R15
0000b7b3(2): JBE 0x0000b7b9
0000b7b5(4): MOV byte ptr [R14 + R15*0x1],AL
0000b7b9(4): ADD R15,0x1
0000b7bd(5): MOVZX EAX,byte ptr [RDX + R15*0x1]
0000b7c2(2): TEST AL,AL
0000b7c4(2): JNZ 0x0000b7b0
0000b7c6(5): JMP 0x0000b5dc
0000b7cb(2): MOV EAX,EDX
0000b7cd(5): JMP 0x0000ad27
0000b7d2(4): MOVZX EBX,byte ptr [RAX + RCX*0x1]
0000b7d6(3): CMP BL,0x3e
0000b7d9(6): JA 0x0000b050
0000b7df(10): MOV RAX,0x7000a38200000000
0000b7e9(4): BT RAX,RBX
0000b7ed(6): JNC 0x0000b050
0000b7f3(5): CMP byte ptr [RSP + 0xf],0x0
0000b7f8(6): JNZ 0x0000b9e2
0000b7fe(3): CMP R13,R15
0000b801(2): JBE 0x0000b808
0000b803(5): MOV byte ptr [R14 + R15*0x1],0x3f
0000b808(4): LEA RAX,[R15 + 0x1]
0000b80c(3): CMP R13,RAX
0000b80f(2): JBE 0x0000b817
0000b811(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x22
0000b817(4): LEA RAX,[R15 + 0x2]
0000b81b(3): CMP R13,RAX
0000b81e(2): JBE 0x0000b826
0000b820(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x22
0000b826(4): LEA RAX,[R15 + 0x3]
0000b82a(3): CMP R13,RAX
0000b82d(2): JBE 0x0000b835
0000b82f(6): MOV byte ptr [R14 + R15*0x1 + 0x3],0x3f
0000b835(4): ADD R15,0x4
0000b839(2): XOR EDX,EDX
0000b83b(3): XOR R12D,R12D
0000b83e(2): XOR EAX,EAX
0000b840(3): MOV RBP,RCX
0000b843(5): JMP 0x0000aa08
0000b848(2): TEST EBX,EBX
0000b84a(6): JZ 0x0000b9d8
0000b850(7): LEA RAX,[0x214f4]
0000b857(5): MOV byte ptr [RSP + 0xe],0x1
0000b85c(5): MOV byte ptr [RSP + 0x7c],0x0
0000b861(3): XOR R12D,R12D
0000b864(9): MOV qword ptr [RSP + 0x50],0x0
0000b86d(5): MOV byte ptr [RSP + 0xf],0x1
0000b872(5): MOV byte ptr [RSP + 0xd],0x0
0000b877(9): MOV qword ptr [RSP + 0x18],0x1
0000b880(3): XOR R15D,R15D
0000b883(5): MOV qword ptr [RSP + 0x48],RAX
0000b888(5): JMP 0x0000a8b3
0000b890(3): MOV RBP,R11
0000b893(5): MOVZX EAX,byte ptr [RSP + 0xf]
0000b898(5): JMP 0x0000b369
0000b89d(7): LEA RAX,[0x21acb]
0000b8a4(5): MOV byte ptr [RSP + 0xe],0x1
0000b8a9(5): MOV byte ptr [RSP + 0x7c],0x0
0000b8ae(3): XOR R12D,R12D
0000b8b1(9): MOV qword ptr [RSP + 0x50],0x0
0000b8ba(5): MOV byte ptr [RSP + 0xf],0x1
0000b8bf(5): MOV byte ptr [RSP + 0xd],0x1
0000b8c4(9): MOV qword ptr [RSP + 0x18],0x1
0000b8cd(3): XOR R15D,R15D
0000b8d0(5): MOV qword ptr [RSP + 0x48],RAX
0000b8d5(5): JMP 0x0000a8b3
0000b8da(2): MOV EAX,EDX
0000b8dc(5): MOV RBX,qword ptr [RSP + 0x48]
0000b8e1(3): TEST RBX,RBX
0000b8e4(2): JZ 0x0000b912
0000b8e6(2): TEST AL,AL
0000b8e8(2): JZ 0x0000b912
0000b8ea(3): MOVZX ECX,byte ptr [RBX]
0000b8ed(3): MOV RAX,RBX
0000b8f0(2): TEST CL,CL
0000b8f2(2): JZ 0x0000b912
0000b8f4(3): MOV RDX,R15
0000b8f7(3): SUB RAX,R15
0000b8fa(3): CMP R13,RDX
0000b8fd(2): JBE 0x0000b903
0000b8ff(4): MOV byte ptr [R14 + RDX*0x1],CL
0000b903(4): ADD RDX,0x1
0000b907(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
0000b90b(2): TEST CL,CL
0000b90d(2): JNZ 0x0000b8fa
0000b90f(3): MOV R15,RDX
0000b912(3): CMP R13,R15
0000b915(6): JBE 0x0000b3b9
0000b91b(5): MOV byte ptr [R14 + R15*0x1],0x0
0000b920(5): JMP 0x0000b3b9
0000b925(5): CMP dword ptr [RSP + 0x8],0x2
0000b92a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000b92f(3): MOV RBP,R11
0000b932(3): SETZ AL
0000b935(4): MOV byte ptr [RSP + 0xd],BL
0000b939(5): JMP 0x0000b369
0000b93e(4): MOV ESI,dword ptr [RSP + 0x8]
0000b942(3): MOV RDI,RCX
0000b945(5): CALL 0x0000a6f0
0000b94a(5): MOV qword ptr [RSP + 0x68],RAX
0000b94f(5): JMP 0x0000b5a6
0000b954(4): MOV ESI,dword ptr [RSP + 0x8]
0000b958(3): MOV RDI,RCX
0000b95b(5): CALL 0x0000a6f0
0000b960(5): MOV qword ptr [RSP + 0x60],RAX
0000b965(5): JMP 0x0000b5d1
0000b96a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000b96f(3): MOV RBP,R11
0000b972(2): MOV EAX,EDX
0000b974(4): MOV byte ptr [RSP + 0xd],BL
0000b978(5): JMP 0x0000b369
0000b97d(4): SUB RSP,0x8
0000b981(6): MOV R8D,0x5
0000b987(3): MOV RCX,R11
0000b98a(4): PUSH qword ptr [RSP + 0x68]
0000b98e(4): PUSH qword ptr [RSP + 0x78]
0000b992(3): MOV RDI,R14
0000b995(4): PUSH qword ptr [RSP + 0x38]
0000b999(8): MOV R9D,dword ptr [0x98 + RSP]
0000b9a1(5): MOV RDX,qword ptr [RSP + 0x30]
0000b9a6(5): MOV RSI,qword ptr [RSP + 0x70]
0000b9ab(5): CALL 0x0000a7e0
0000b9b0(4): ADD RSP,0x20
0000b9b4(3): MOV R15,RAX
0000b9b7(5): JMP 0x0000b3b9
0000b9bc(5): MOVZX EAX,byte ptr [RSP + 0x7c]
0000b9c1(5): JMP 0x0000b8dc
0000b9c6(8): MOV dword ptr [RSP + 0x8],0x2
0000b9ce(5): JMP 0x0000b369
0000b9d3(5): CALL 0x00002560
0000b9d8(5): MOV byte ptr [RSP + 0xd],0x0
0000b9dd(5): JMP 0x0000b451
0000b9e2(3): MOV RBP,R11
0000b9e5(5): JMP 0x0000b380
0000b9ea(5): MOV byte ptr [RSP + 0xe],0x1
0000b9ef(2): XOR EAX,EAX
0000b9f1(3): XOR R12D,R12D
0000b9f4(9): MOV qword ptr [RSP + 0x50],0x0
0000b9fd(5): JMP 0x0000afa4
0000ba02(3): MOV RDX,R13
0000ba05(5): MOV R13,qword ptr [RSP + 0x50]
0000ba0a(5): JMP 0x0000b002
0000ba0f(5): CALL 0x00002400
0000ba14(2): NOP
0000ba16(10): NOP word ptr CS:[RAX + RAX*0x1]
0000ba20(2): PUSH R15
0000ba22(2): PUSH R14
0000ba24(3): MOVSXD R15,EDI
0000ba27(2): PUSH R13
0000ba29(2): PUSH R12
0000ba2b(3): MOV R14,RDX
0000ba2e(1): PUSH RBP
0000ba2f(1): PUSH RBX
0000ba30(3): MOV RBP,RCX
0000ba33(4): SUB RSP,0x28
0000ba37(5): MOV qword ptr [RSP + 0x8],RSI
0000ba3c(5): CALL 0x00002410
0000ba41(3): MOV R13,RAX
0000ba44(2): MOV EAX,dword ptr [RAX]
0000ba46(3): TEST R15D,R15D
0000ba49(7): MOV RBX,qword ptr [0x00228080]
0000ba50(4): MOV dword ptr [RSP + 0x18],EAX
0000ba54(6): JS 0x0000bbc1
0000ba5a(7): CMP dword ptr [0x00228078],R15D
0000ba61(2): JG 0x0000bac5
0000ba63(7): CMP R15D,0x7fffffff
0000ba6a(6): JZ 0x0000bbc6
0000ba70(4): LEA R12D,[R15 + 0x1]
0000ba74(7): LEA RAX,[0x228090]
0000ba7b(3): MOVSXD RSI,R12D
0000ba7e(4): SHL RSI,0x4
0000ba82(3): CMP RBX,RAX
0000ba85(6): JZ 0x0000bba0
0000ba8b(3): MOV RDI,RBX
0000ba8e(5): CALL 0x0000ca40
0000ba93(3): MOV RBX,RAX
0000ba96(7): MOV qword ptr [0x00228080],RAX
0000ba9d(7): MOVSXD RDI,dword ptr [0x00228078]
0000baa4(3): MOV EDX,R12D
0000baa7(2): XOR ESI,ESI
0000baa9(2): SUB EDX,EDI
0000baab(4): SHL RDI,0x4
0000baaf(3): MOVSXD RDX,EDX
0000bab2(3): ADD RDI,RBX
0000bab5(4): SHL RDX,0x4
0000bab9(5): CALL 0x00002620
0000babe(7): MOV dword ptr [0x00228078],R12D
0000bac5(3): MOV EAX,dword ptr [RBP + 0x4]
0000bac8(4): SHL R15,0x4
0000bacc(4): SUB RSP,0x8
0000bad0(3): ADD RBX,R15
0000bad3(4): LEA R15,[RBP + 0x8]
0000bad7(4): MOV R8D,dword ptr [RBP]
0000badb(3): MOV R11,qword ptr [RBX]
0000bade(4): MOV R12,qword ptr [RBX + 0x8]
0000bae2(3): MOV RCX,R14
0000bae5(3): OR EAX,0x1
0000bae8(4): MOV dword ptr [RSP + 0x24],EAX
0000baec(3): PUSH qword ptr [RBP + 0x30]
0000baef(3): MOV R9D,EAX
0000baf2(3): PUSH qword ptr [RBP + 0x28]
0000baf5(2): PUSH R15
0000baf7(3): MOV RSI,R11
0000bafa(5): MOV RDX,qword ptr [RSP + 0x28]
0000baff(3): MOV RDI,R12
0000bb02(5): MOV qword ptr [RSP + 0x30],R11
0000bb07(5): CALL 0x0000a7e0
0000bb0c(4): ADD RSP,0x20
0000bb10(5): MOV R11,qword ptr [RSP + 0x10]
0000bb15(3): CMP R11,RAX
0000bb18(2): JA 0x0000bb81
0000bb1a(4): LEA RSI,[RAX + 0x1]
0000bb1e(7): LEA RAX,[0x2281c0]
0000bb25(3): CMP R12,RAX
0000bb28(3): MOV qword ptr [RBX],RSI
0000bb2b(2): JZ 0x0000bb3f
0000bb2d(3): MOV RDI,R12
0000bb30(5): MOV qword ptr [RSP + 0x10],RSI
0000bb35(5): CALL 0x00002a10
0000bb3a(5): MOV RSI,qword ptr [RSP + 0x10]
0000bb3f(3): MOV RDI,RSI
0000bb42(5): MOV qword ptr [RSP + 0x10],RSI
0000bb47(5): CALL 0x0000c9e0
0000bb4c(4): SUB RSP,0x8
0000bb50(4): MOV qword ptr [RBX + 0x8],RAX
0000bb54(4): MOV R8D,dword ptr [RBP]
0000bb58(3): PUSH qword ptr [RBP + 0x30]
0000bb5b(3): PUSH qword ptr [RBP + 0x28]
0000bb5e(3): MOV RCX,R14
0000bb61(2): PUSH R15
0000bb63(5): MOV R9D,dword ptr [RSP + 0x3c]
0000bb68(3): MOV RDI,RAX
0000bb6b(5): MOV RDX,qword ptr [RSP + 0x28]
0000bb70(5): MOV RSI,qword ptr [RSP + 0x30]
0000bb75(3): MOV R12,RAX
0000bb78(5): CALL 0x0000a7e0
0000bb7d(4): ADD RSP,0x20
0000bb81(4): MOV EAX,dword ptr [RSP + 0x18]
0000bb85(4): MOV dword ptr [R13],EAX
0000bb89(4): ADD RSP,0x28
0000bb8d(3): MOV RAX,R12
0000bb90(1): POP RBX
0000bb91(1): POP RBP
0000bb92(2): POP R12
0000bb94(2): POP R13
0000bb96(2): POP R14
0000bb98(2): POP R15
0000bb9a(1): RET
0000bba0(2): XOR EDI,EDI
0000bba2(5): CALL 0x0000ca40
0000bba7(8): MOVDQA XMM0,xmmword ptr [0x00228090]
0000bbaf(3): MOV RBX,RAX
0000bbb2(7): MOV qword ptr [0x00228080],RAX
0000bbb9(3): MOVUPS xmmword ptr [RAX],XMM0
0000bbbc(5): JMP 0x0000ba9d
0000bbc1(5): CALL 0x00002400
0000bbc6(5): CALL 0x0000cc30
0000bbcb(5): NOP dword ptr [RAX + RAX*0x1]
0000bbd0(2): PUSH R12
0000bbd2(1): PUSH RBP
0000bbd3(1): PUSH RBX
0000bbd4(3): MOV RBX,RDI
0000bbd7(5): CALL 0x00002410
0000bbdc(3): MOV R12D,dword ptr [RAX]
0000bbdf(3): MOV RBP,RAX
0000bbe2(7): LEA RAX,[0x2282c0]
0000bbe9(3): TEST RBX,RBX
0000bbec(5): MOV ESI,0x38
0000bbf1(4): CMOVZ RBX,RAX
0000bbf5(3): MOV RDI,RBX
0000bbf8(5): CALL 0x0000cbe0
0000bbfd(4): MOV dword ptr [RBP],R12D
0000bc01(1): POP RBX
0000bc02(1): POP RBP
0000bc03(2): POP R12
0000bc05(1): RET
0000bc10(7): LEA RAX,[0x2282c0]
0000bc17(3): TEST RDI,RDI
0000bc1a(4): CMOVZ RDI,RAX
0000bc1e(2): MOV EAX,dword ptr [RDI]
0000bc20(1): RET
0000bc30(7): LEA RAX,[0x2282c0]
0000bc37(3): TEST RDI,RDI
0000bc3a(4): CMOVZ RDI,RAX
0000bc3e(2): MOV dword ptr [RDI],ESI
0000bc40(1): RET
0000bc50(7): LEA RAX,[0x2282c0]
0000bc57(3): TEST RDI,RDI
0000bc5a(2): MOV ECX,ESI
0000bc5c(4): CMOVZ RDI,RAX
0000bc60(2): MOV EAX,ESI
0000bc62(3): AND ECX,0x1f
0000bc65(3): SHR AL,0x5
0000bc68(3): MOVZX EAX,AL
0000bc6b(5): LEA RDI,[RDI + RAX*0x4 + 0x8]
0000bc70(2): MOV ESI,dword ptr [RDI]
0000bc72(2): MOV EAX,ESI
0000bc74(2): SHR EAX,CL
0000bc76(2): XOR EDX,EAX
0000bc78(3): AND EAX,0x1
0000bc7b(3): AND EDX,0x1
0000bc7e(2): SHL EDX,CL
0000bc80(2): XOR EDX,ESI
0000bc82(2): MOV dword ptr [RDI],EDX
0000bc84(1): RET
0000bc90(7): LEA RAX,[0x2282c0]
0000bc97(3): TEST RDI,RDI
0000bc9a(4): CMOVZ RDI,RAX
0000bc9e(3): MOV EAX,dword ptr [RDI + 0x4]
0000bca1(3): MOV dword ptr [RDI + 0x4],ESI
0000bca4(1): RET
0000bcb0(7): LEA RAX,[0x2282c0]
0000bcb7(3): TEST RDI,RDI
0000bcba(4): CMOVZ RDI,RAX
0000bcbe(3): TEST RSI,RSI
0000bcc1(6): MOV dword ptr [RDI],0xa
0000bcc7(2): JZ 0x0000bcd7
0000bcc9(3): TEST RDX,RDX
0000bccc(2): JZ 0x0000bcd7
0000bcce(4): MOV qword ptr [RDI + 0x28],RSI
0000bcd2(4): MOV qword ptr [RDI + 0x30],RDX
0000bcd6(1): RET
0000bcd7(4): SUB RSP,0x8
0000bcdb(5): CALL 0x00002400
0000bce0(2): PUSH R15
0000bce2(2): PUSH R14
0000bce4(7): LEA RAX,[0x2282c0]
0000bceb(2): PUSH R13
0000bced(2): PUSH R12
0000bcef(3): MOV R13,RDI
0000bcf2(1): PUSH RBP
0000bcf3(1): PUSH RBX
0000bcf4(3): MOV RBX,R8
0000bcf7(3): MOV R14,RSI
0000bcfa(3): MOV R15,RDX
0000bcfd(4): SUB RSP,0x18
0000bd01(3): TEST R8,R8
0000bd04(4): CMOVZ RBX,RAX
0000bd08(5): MOV qword ptr [RSP + 0x8],RCX
0000bd0d(5): CALL 0x00002410
0000bd12(3): MOV R12D,dword ptr [RAX]
0000bd15(3): MOV RBP,RAX
0000bd18(4): LEA RAX,[RBX + 0x8]
0000bd1c(4): SUB RSP,0x8
0000bd20(4): MOV R9D,dword ptr [RBX + 0x4]
0000bd24(3): PUSH qword ptr [RBX + 0x30]
0000bd27(3): MOV R8D,dword ptr [RBX]
0000bd2a(3): PUSH qword ptr [RBX + 0x28]
0000bd2d(3): MOV RDX,R15
0000bd30(1): PUSH RAX
0000bd31(5): MOV RCX,qword ptr [RSP + 0x28]
0000bd36(3): MOV RSI,R14
0000bd39(3): MOV RDI,R13
0000bd3c(5): CALL 0x0000a7e0
0000bd41(4): MOV dword ptr [RBP],R12D
0000bd45(4): ADD RSP,0x38
0000bd49(1): POP RBX
0000bd4a(1): POP RBP
0000bd4b(2): POP R12
0000bd4d(2): POP R13
0000bd4f(2): POP R14
0000bd51(2): POP R15
0000bd53(1): RET
0000bd60(2): PUSH R15
0000bd62(2): PUSH R14
0000bd64(7): LEA RAX,[0x2282c0]
0000bd6b(2): PUSH R13
0000bd6d(2): PUSH R12
0000bd6f(3): MOV R12,RDX
0000bd72(1): PUSH RBP
0000bd73(1): PUSH RBX
0000bd74(3): MOV RBX,RCX
0000bd77(3): MOV R14,RDI
0000bd7a(3): MOV R15,RSI
0000bd7d(4): SUB RSP,0x38
0000bd81(3): TEST RCX,RCX
0000bd84(4): CMOVZ RBX,RAX
0000bd88(2): XOR EBP,EBP
0000bd8a(5): CALL 0x00002410
0000bd8f(3): TEST R12,R12
0000bd92(3): MOV R13,RAX
0000bd95(2): MOV EAX,dword ptr [RAX]
0000bd97(4): SETZ BPL
0000bd9b(3): OR EBP,dword ptr [RBX + 0x4]
0000bd9e(4): LEA R10,[RBX + 0x8]
0000bda2(4): SUB RSP,0x8
0000bda6(3): MOV R8D,dword ptr [RBX]
0000bda9(3): MOV RCX,R15
0000bdac(4): MOV dword ptr [RSP + 0x14],EAX
0000bdb0(3): PUSH qword ptr [RBX + 0x30]
0000bdb3(3): MOV RDX,R14
0000bdb6(3): PUSH qword ptr [RBX + 0x28]
0000bdb9(2): PUSH R10
0000bdbb(2): XOR ESI,ESI
0000bdbd(3): MOV R9D,EBP
0000bdc0(2): XOR EDI,EDI
0000bdc2(5): MOV qword ptr [RSP + 0x40],R10
0000bdc7(5): CALL 0x0000a7e0
0000bdcc(4): LEA RSI,[RAX + 0x1]
0000bdd0(5): MOV qword ptr [RSP + 0x48],RAX
0000bdd5(4): ADD RSP,0x20
0000bdd9(3): MOV RDI,RSI
0000bddc(5): MOV qword ptr [RSP + 0x18],RSI
0000bde1(5): CALL 0x0000c9e0
0000bde6(5): MOV qword ptr [RSP + 0x10],RAX
0000bdeb(4): SUB RSP,0x8
0000bdef(3): PUSH qword ptr [RBX + 0x30]
0000bdf2(3): PUSH qword ptr [RBX + 0x28]
0000bdf5(5): MOV R10,qword ptr [RSP + 0x38]
0000bdfa(3): MOV R9D,EBP
0000bdfd(3): MOV R8D,dword ptr [RBX]
0000be00(3): MOV RCX,R15
0000be03(3): MOV RDX,R14
0000be06(3): MOV RDI,RAX
0000be09(2): PUSH R10
0000be0b(5): MOV RSI,qword ptr [RSP + 0x38]
0000be10(5): CALL 0x0000a7e0
0000be15(4): MOV EAX,dword ptr [RSP + 0x2c]
0000be19(4): ADD RSP,0x20
0000be1d(3): TEST R12,R12
0000be20(4): MOV dword ptr [R13],EAX
0000be24(2): JZ 0x0000be2f
0000be26(5): MOV R11,qword ptr [RSP + 0x28]
0000be2b(4): MOV qword ptr [R12],R11
0000be2f(5): MOV RAX,qword ptr [RSP + 0x10]
0000be34(4): ADD RSP,0x38
0000be38(1): POP RBX
0000be39(1): POP RBP
0000be3a(2): POP R12
0000be3c(2): POP R13
0000be3e(2): POP R14
0000be40(2): POP R15
0000be42(1): RET
0000be50(3): MOV RCX,RDX
0000be53(2): XOR EDX,EDX
0000be55(5): JMP 0x0000bd60
0000be60(6): MOV EAX,dword ptr [0x00228078]
0000be66(2): PUSH R12
0000be68(7): MOV R12,qword ptr [0x00228080]
0000be6f(1): PUSH RBP
0000be70(1): PUSH RBX
0000be71(3): CMP EAX,0x1
0000be74(2): JLE 0x0000bea1
0000be76(3): SUB EAX,0x2
0000be79(5): LEA RBX,[R12 + 0x18]
0000be7e(4): SHL RAX,0x4
0000be82(5): LEA RBP,[R12 + RAX*0x1 + 0x28]
0000be87(9): NOP word ptr [RAX + RAX*0x1]
0000be90(3): MOV RDI,qword ptr [RBX]
0000be93(4): ADD RBX,0x10
0000be97(5): CALL 0x00002a10
0000be9c(3): CMP RBX,RBP
0000be9f(2): JNZ 0x0000be90
0000bea1(5): MOV RDI,qword ptr [R12 + 0x8]
0000bea6(7): LEA RBX,[0x2281c0]
0000bead(3): CMP RDI,RBX
0000beb0(2): JZ 0x0000bec9
0000beb2(5): CALL 0x00002a10
0000beb7(11): MOV qword ptr [0x00228090],0x100
0000bec2(7): MOV qword ptr [0x00228098],RBX
0000bec9(7): LEA RBX,[0x228090]
0000bed0(3): CMP R12,RBX
0000bed3(2): JZ 0x0000bee4
0000bed5(3): MOV RDI,R12
0000bed8(5): CALL 0x00002a10
0000bedd(7): MOV qword ptr [0x00228080],RBX
0000bee4(1): POP RBX
0000bee5(10): MOV dword ptr [0x00228078],0x1
0000beef(1): POP RBP
0000bef0(2): POP R12
0000bef2(1): RET
0000bf00(7): LEA RCX,[0x2282c0]
0000bf07(7): MOV RDX,-0x1
0000bf0e(5): JMP 0x0000ba20
0000bf20(7): LEA RCX,[0x2282c0]
0000bf27(5): JMP 0x0000ba20
0000bf30(7): LEA RCX,[0x2282c0]
0000bf37(3): MOV RSI,RDI
0000bf3a(7): MOV RDX,-0x1
0000bf41(2): XOR EDI,EDI
0000bf43(5): JMP 0x0000ba20
0000bf50(7): LEA RCX,[0x2282c0]
0000bf57(3): MOV RDX,RSI
0000bf5a(3): MOV RSI,RDI
0000bf5d(2): XOR EDI,EDI
0000bf5f(5): JMP 0x0000ba20
0000bf70(4): SUB RSP,0x48
0000bf74(3): MOV RAX,RDX
0000bf77(9): MOV RDX,qword ptr FS:[0x28]
0000bf80(5): MOV qword ptr [RSP + 0x38],RDX
0000bf85(2): XOR EDX,EDX
0000bf87(3): CMP ESI,0xa
0000bf8a(2): JZ 0x0000bff4
0000bf8c(3): MOV dword ptr [RSP],ESI
0000bf8f(3): MOV RCX,RSP
0000bf92(7): MOV RDX,-0x1
0000bf99(3): MOV RSI,RAX
0000bf9c(9): MOV qword ptr [RSP + 0x4],0x0
0000bfa5(9): MOV qword ptr [RSP + 0xc],0x0
0000bfae(9): MOV qword ptr [RSP + 0x14],0x0
0000bfb7(9): MOV qword ptr [RSP + 0x1c],0x0
0000bfc0(9): MOV qword ptr [RSP + 0x24],0x0
0000bfc9(9): MOV qword ptr [RSP + 0x2c],0x0
0000bfd2(8): MOV dword ptr [RSP + 0x34],0x0
0000bfda(5): CALL 0x0000ba20
0000bfdf(5): MOV RCX,qword ptr [RSP + 0x38]
0000bfe4(9): XOR RCX,qword ptr FS:[0x28]
0000bfed(2): JNZ 0x0000bff9
0000bfef(4): ADD RSP,0x48
0000bff3(1): RET
0000bff4(5): CALL 0x00002400
0000bff9(5): CALL 0x00002560
0000bffe(2): NOP
0000c000(4): SUB RSP,0x48
0000c004(3): MOV RAX,RDX
0000c007(3): MOV RDX,RCX
0000c00a(9): MOV RCX,qword ptr FS:[0x28]
0000c013(5): MOV qword ptr [RSP + 0x38],RCX
0000c018(2): XOR ECX,ECX
0000c01a(3): CMP ESI,0xa
0000c01d(2): JZ 0x0000c080
0000c01f(3): MOV dword ptr [RSP],ESI
0000c022(3): MOV RCX,RSP
0000c025(3): MOV RSI,RAX
0000c028(9): MOV qword ptr [RSP + 0x4],0x0
0000c031(9): MOV qword ptr [RSP + 0xc],0x0
0000c03a(9): MOV qword ptr [RSP + 0x14],0x0
0000c043(9): MOV qword ptr [RSP + 0x1c],0x0
0000c04c(9): MOV qword ptr [RSP + 0x24],0x0
0000c055(9): MOV qword ptr [RSP + 0x2c],0x0
0000c05e(8): MOV dword ptr [RSP + 0x34],0x0
0000c066(5): CALL 0x0000ba20
0000c06b(5): MOV RDX,qword ptr [RSP + 0x38]
0000c070(9): XOR RDX,qword ptr FS:[0x28]
0000c079(2): JNZ 0x0000c085
0000c07b(4): ADD RSP,0x48
0000c07f(1): RET
0000c080(5): CALL 0x00002400
0000c085(5): CALL 0x00002560
0000c08a(6): NOP word ptr [RAX + RAX*0x1]
0000c090(3): MOV RDX,RSI
0000c093(2): MOV ESI,EDI
0000c095(2): XOR EDI,EDI
0000c097(5): JMP 0x0000bf70
0000c0a0(3): MOV RCX,RDX
0000c0a3(3): MOV RDX,RSI
0000c0a6(2): MOV ESI,EDI
0000c0a8(2): XOR EDI,EDI
0000c0aa(5): JMP 0x0000c000
0000c0b0(4): SUB RSP,0x48
0000c0b4(2): MOV ECX,EDX
0000c0b6(9): MOV RAX,qword ptr FS:[0x28]
0000c0bf(5): MOV qword ptr [RSP + 0x38],RAX
0000c0c4(2): XOR EAX,EAX
0000c0c6(7): MOV RAX,qword ptr [0x002282f0]
0000c0cd(3): MOV R8,RSP
0000c0d0(3): AND ECX,0x1f
0000c0d3(8): MOVDQA XMM0,xmmword ptr [0x002282c0]
0000c0db(5): MOV qword ptr [RSP + 0x30],RAX
0000c0e0(2): MOV EAX,EDX
0000c0e2(4): MOVAPS xmmword ptr [RSP],XMM0
0000c0e6(3): SHR AL,0x5
0000c0e9(3): MOVZX EAX,AL
0000c0ec(5): LEA R9,[R8 + RAX*0x4 + 0x8]
0000c0f1(8): MOVDQA XMM0,xmmword ptr [0x002282d0]
0000c0f9(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
0000c0fe(8): MOVDQA XMM0,xmmword ptr [0x002282e0]
0000c106(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000c10b(3): MOV EDX,dword ptr [R9]
0000c10e(2): MOV EAX,EDX
0000c110(2): SHR EAX,CL
0000c112(2): NOT EAX
0000c114(3): AND EAX,0x1
0000c117(2): SHL EAX,CL
0000c119(3): MOV RCX,R8
0000c11c(2): XOR EAX,EDX
0000c11e(3): MOV RDX,RSI
0000c121(3): MOV RSI,RDI
0000c124(3): MOV dword ptr [R9],EAX
0000c127(2): XOR EDI,EDI
0000c129(5): CALL 0x0000ba20
0000c12e(5): MOV RSI,qword ptr [RSP + 0x38]
0000c133(9): XOR RSI,qword ptr FS:[0x28]
0000c13c(2): JNZ 0x0000c143
0000c13e(4): ADD RSP,0x48
0000c142(1): RET
0000c143(5): CALL 0x00002560
0000c148(8): NOP dword ptr [RAX + RAX*0x1]
0000c150(4): MOVSX EDX,SIL
0000c154(7): MOV RSI,-0x1
0000c15b(5): JMP 0x0000c0b0
0000c160(5): MOV EDX,0x3a
0000c165(7): MOV RSI,-0x1
0000c16c(5): JMP 0x0000c0b0
0000c180(5): MOV EDX,0x3a
0000c185(5): JMP 0x0000c0b0
0000c190(4): SUB RSP,0x48
0000c194(3): MOV RAX,RDX
0000c197(9): MOV RDX,qword ptr FS:[0x28]
0000c1a0(5): MOV qword ptr [RSP + 0x38],RDX
0000c1a5(2): XOR EDX,EDX
0000c1a7(3): CMP ESI,0xa
0000c1aa(2): JZ 0x0000c214
0000c1ac(3): MOV dword ptr [RSP],ESI
0000c1af(3): MOV RCX,RSP
0000c1b2(7): MOV RDX,-0x1
0000c1b9(3): MOV RSI,RAX
0000c1bc(9): MOV qword ptr [RSP + 0x4],0x0
0000c1c5(9): MOV qword ptr [RSP + 0xc],0x4000000
0000c1ce(9): MOV qword ptr [RSP + 0x14],0x0
0000c1d7(9): MOV qword ptr [RSP + 0x1c],0x0
0000c1e0(9): MOV qword ptr [RSP + 0x24],0x0
0000c1e9(9): MOV qword ptr [RSP + 0x2c],0x0
0000c1f2(8): MOV dword ptr [RSP + 0x34],0x0
0000c1fa(5): CALL 0x0000ba20
0000c1ff(5): MOV RCX,qword ptr [RSP + 0x38]
0000c204(9): XOR RCX,qword ptr FS:[0x28]
0000c20d(2): JNZ 0x0000c219
0000c20f(4): ADD RSP,0x48
0000c213(1): RET
0000c214(5): CALL 0x00002400
0000c219(5): CALL 0x00002560
0000c21e(2): NOP
0000c220(4): SUB RSP,0x48
0000c224(3): MOV R9,RCX
0000c227(7): MOV RCX,qword ptr [0x002282f0]
0000c22e(8): MOVDQA XMM0,xmmword ptr [0x002282c0]
0000c236(9): MOV RAX,qword ptr FS:[0x28]
0000c23f(5): MOV qword ptr [RSP + 0x38],RAX
0000c244(2): XOR EAX,EAX
0000c246(4): MOVAPS xmmword ptr [RSP],XMM0
0000c24a(3): TEST RSI,RSI
0000c24d(5): MOV qword ptr [RSP + 0x30],RCX
0000c252(7): MOV dword ptr [RSP],0xa
0000c259(8): MOVDQA XMM0,xmmword ptr [0x002282d0]
0000c261(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
0000c266(8): MOVDQA XMM0,xmmword ptr [0x002282e0]
0000c26e(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000c273(2): JZ 0x0000c2a7
0000c275(3): TEST RDX,RDX
0000c278(2): JZ 0x0000c2a7
0000c27a(5): MOV qword ptr [RSP + 0x28],RSI
0000c27f(5): MOV qword ptr [RSP + 0x30],RDX
0000c284(3): MOV RCX,RSP
0000c287(3): MOV RDX,R8
0000c28a(3): MOV RSI,R9
0000c28d(5): CALL 0x0000ba20
0000c292(5): MOV RDI,qword ptr [RSP + 0x38]
0000c297(9): XOR RDI,qword ptr FS:[0x28]
0000c2a0(2): JNZ 0x0000c2ac
0000c2a2(4): ADD RSP,0x48
0000c2a6(1): RET
0000c2a7(5): CALL 0x00002400
0000c2ac(5): CALL 0x00002560
0000c2b1(5): NOP dword ptr [RAX + RAX*0x1]
0000c2b6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000c2c0(7): MOV R8,-0x1
0000c2c7(5): JMP 0x0000c220
0000c2d0(3): MOV RCX,RDX
0000c2d3(7): MOV R8,-0x1
0000c2da(3): MOV RDX,RSI
0000c2dd(3): MOV RSI,RDI
0000c2e0(2): XOR EDI,EDI
0000c2e2(5): JMP 0x0000c220
0000c2f0(3): MOV R8,RCX
0000c2f3(3): MOV RCX,RDX
0000c2f6(3): MOV RDX,RSI
0000c2f9(3): MOV RSI,RDI
0000c2fc(2): XOR EDI,EDI
0000c2fe(5): JMP 0x0000c220
0000c310(7): LEA RCX,[0x228040]
0000c317(5): JMP 0x0000ba20
0000c320(7): LEA RCX,[0x228040]
0000c327(3): MOV RDX,RSI
0000c32a(3): MOV RSI,RDI
0000c32d(2): XOR EDI,EDI
0000c32f(5): JMP 0x0000ba20
0000c340(7): LEA RCX,[0x228040]
0000c347(7): MOV RDX,-0x1
0000c34e(5): JMP 0x0000ba20
0000c360(7): LEA RCX,[0x228040]
0000c367(3): MOV RSI,RDI
0000c36a(7): MOV RDX,-0x1
0000c371(2): XOR EDI,EDI
0000c373(5): JMP 0x0000ba20
0000c380(1): PUSH RBP
0000c381(1): PUSH RBX
0000c382(3): MOV RDX,RSI
0000c385(3): MOV RBX,RSI
0000c388(2): XOR ESI,ESI
0000c38a(3): MOV RBP,RDI
0000c38d(4): SUB RSP,0x8
0000c391(5): CALL 0x00002670
0000c396(3): MOV RDX,RAX
0000c399(3): SUB RDX,RBP
0000c39c(4): ADD RDX,0x1
0000c3a0(3): TEST RAX,RAX
0000c3a3(3): MOV RAX,RBX
0000c3a6(4): CMOVNZ RAX,RDX
0000c3aa(4): ADD RSP,0x8
0000c3ae(1): POP RBX
0000c3af(1): POP RBP
0000c3b0(1): RET
0000c3c0(2): PUSH R15
0000c3c2(2): PUSH R14
0000c3c4(2): PUSH R13
0000c3c6(2): PUSH R12
0000c3c8(3): MOV R12,R9
0000c3cb(1): PUSH RBP
0000c3cc(1): PUSH RBX
0000c3cd(3): MOV RBP,RDI
0000c3d0(3): MOV RBX,R8
0000c3d3(4): SUB RSP,0x28
0000c3d7(3): TEST RSI,RSI
0000c3da(6): JZ 0x0000c4f8
0000c3e0(3): MOV R8,RDX
0000c3e3(7): LEA RDX,[0x21f88]
0000c3ea(3): MOV R9,RCX
0000c3ed(2): XOR EAX,EAX
0000c3ef(3): MOV RCX,RSI
0000c3f2(5): MOV ESI,0x1
0000c3f7(5): CALL 0x00002970
0000c3fc(7): LEA RSI,[0x21f9b]
0000c403(2): XOR EDI,EDI
0000c405(5): MOV EDX,0x5
0000c40a(5): CALL 0x00002510
0000c40f(7): LEA RDX,[0x222c0]
0000c416(3): MOV RCX,RAX
0000c419(6): MOV R8D,0x7e3
0000c41f(5): MOV ESI,0x1
0000c424(3): MOV RDI,RBP
0000c427(2): XOR EAX,EAX
0000c429(5): CALL 0x00002970
0000c42e(7): LEA RSI,[0x22028]
0000c435(2): XOR EDI,EDI
0000c437(5): MOV EDX,0x5
0000c43c(5): CALL 0x00002510
0000c441(3): MOV RSI,RBP
0000c444(3): MOV RDI,RAX
0000c447(5): CALL 0x000026a0
0000c44c(4): CMP R12,0x9
0000c450(6): JA 0x0000c790
0000c456(7): LEA RDX,[0x22284]
0000c45d(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
0000c461(3): ADD RAX,RDX
0000c464(2): JMP RAX
0000c470(4): MOV R9,qword ptr [RBX + 0x38]
0000c474(4): MOV RAX,qword ptr [RBX + 0x10]
0000c478(7): LEA RSI,[0x22198]
0000c47f(4): MOV R8,qword ptr [RBX + 0x8]
0000c483(5): MOV EDX,0x5
0000c488(2): XOR EDI,EDI
0000c48a(4): MOV R13,qword ptr [RBX + 0x30]
0000c48e(4): MOV R12,qword ptr [RBX + 0x28]
0000c492(5): MOV qword ptr [RSP + 0x10],R9
0000c497(4): MOV R15,qword ptr [RBX + 0x20]
0000c49b(4): MOV R14,qword ptr [RBX + 0x18]
0000c49f(4): MOV qword ptr [RSP],RAX
0000c4a3(5): MOV qword ptr [RSP + 0x8],R8
0000c4a8(3): MOV RBX,qword ptr [RBX]
0000c4ab(5): CALL 0x00002510
0000c4b0(4): SUB RSP,0x8
0000c4b4(5): MOV R9,qword ptr [RSP + 0x18]
0000c4b9(3): MOV RDX,RAX
0000c4bc(3): MOV RCX,RBX
0000c4bf(5): MOV ESI,0x1
0000c4c4(3): MOV RDI,RBP
0000c4c7(2): XOR EAX,EAX
0000c4c9(2): PUSH R9
0000c4cb(2): PUSH R13
0000c4cd(2): PUSH R12
0000c4cf(2): PUSH R15
0000c4d1(2): PUSH R14
0000c4d3(5): MOV R9,qword ptr [RSP + 0x30]
0000c4d8(5): MOV R8,qword ptr [RSP + 0x38]
0000c4dd(5): CALL 0x00002970
0000c4e2(4): ADD RSP,0x30
0000c4e6(4): ADD RSP,0x28
0000c4ea(1): POP RBX
0000c4eb(1): POP RBP
0000c4ec(2): POP R12
0000c4ee(2): POP R13
0000c4f0(2): POP R14
0000c4f2(2): POP R15
0000c4f4(1): RET
0000c4f8(3): MOV R8,RCX
0000c4fb(3): MOV RCX,RDX
0000c4fe(7): LEA RDX,[0x21f94]
0000c505(5): MOV ESI,0x1
0000c50a(2): XOR EAX,EAX
0000c50c(5): CALL 0x00002970
0000c511(5): JMP 0x0000c3fc
0000c520(4): MOV R10,qword ptr [RBX + 0x40]
0000c524(4): MOV R9,qword ptr [RBX + 0x38]
0000c528(7): LEA RSI,[0x221c8]
0000c52f(4): MOV RAX,qword ptr [RBX + 0x10]
0000c533(4): MOV R8,qword ptr [RBX + 0x8]
0000c537(5): MOV EDX,0x5
0000c53c(4): MOV R13,qword ptr [RBX + 0x30]
0000c540(4): MOV R12,qword ptr [RBX + 0x28]
0000c544(4): MOV R15,qword ptr [RBX + 0x20]
0000c548(4): MOV R14,qword ptr [RBX + 0x18]
0000c54c(3): MOV RBX,qword ptr [RBX]
0000c54f(5): MOV qword ptr [RSP + 0x18],R10
0000c554(5): MOV qword ptr [RSP + 0x10],R9
0000c559(4): MOV qword ptr [RSP],RAX
0000c55d(5): MOV qword ptr [RSP + 0x8],R8
0000c562(2): XOR EDI,EDI
0000c564(5): CALL 0x00002510
0000c569(5): MOV R10,qword ptr [RSP + 0x18]
0000c56e(2): PUSH R10
0000c570(5): JMP 0x0000c4b4
0000c578(3): MOV RBX,qword ptr [RBX]
0000c57b(7): LEA RSI,[0x21f9f]
0000c582(5): MOV EDX,0x5
0000c587(2): XOR EDI,EDI
0000c589(5): CALL 0x00002510
0000c58e(4): ADD RSP,0x28
0000c592(3): MOV RCX,RBX
0000c595(3): MOV RDI,RBP
0000c598(1): POP RBX
0000c599(1): POP RBP
0000c59a(2): POP R12
0000c59c(2): POP R13
0000c59e(2): POP R14
0000c5a0(2): POP R15
0000c5a2(3): MOV RDX,RAX
0000c5a5(5): MOV ESI,0x1
0000c5aa(2): XOR EAX,EAX
0000c5ac(5): JMP 0x00002970
0000c5b8(4): MOV R12,qword ptr [RBX + 0x8]
0000c5bc(7): LEA RSI,[0x21faf]
0000c5c3(3): MOV RBX,qword ptr [RBX]
0000c5c6(5): MOV EDX,0x5
0000c5cb(2): XOR EDI,EDI
0000c5cd(5): CALL 0x00002510
0000c5d2(4): ADD RSP,0x28
0000c5d6(3): MOV R8,R12
0000c5d9(3): MOV RCX,RBX
0000c5dc(3): MOV RDI,RBP
0000c5df(3): MOV RDX,RAX
0000c5e2(5): MOV ESI,0x1
0000c5e7(1): POP RBX
0000c5e8(1): POP RBP
0000c5e9(2): POP R12
0000c5eb(2): POP R13
0000c5ed(2): POP R14
0000c5ef(2): POP R15
0000c5f1(2): XOR EAX,EAX
0000c5f3(5): JMP 0x00002970
0000c600(4): MOV R13,qword ptr [RBX + 0x10]
0000c604(4): MOV R12,qword ptr [RBX + 0x8]
0000c608(7): LEA RSI,[0x21fc6]
0000c60f(3): MOV RBX,qword ptr [RBX]
0000c612(5): MOV EDX,0x5
0000c617(2): XOR EDI,EDI
0000c619(5): CALL 0x00002510
0000c61e(4): ADD RSP,0x28
0000c622(3): MOV R9,R13
0000c625(3): MOV R8,R12
0000c628(3): MOV RCX,RBX
0000c62b(3): MOV RDI,RBP
0000c62e(3): MOV RDX,RAX
0000c631(1): POP RBX
0000c632(1): POP RBP
0000c633(2): POP R12
0000c635(2): POP R13
0000c637(2): POP R14
0000c639(2): POP R15
0000c63b(5): MOV ESI,0x1
0000c640(2): XOR EAX,EAX
0000c642(5): JMP 0x00002970
0000c650(7): LEA RSI,[0x220f8]
0000c657(5): MOV EDX,0x5
0000c65c(2): XOR EDI,EDI
0000c65e(4): MOV R14,qword ptr [RBX + 0x18]
0000c662(4): MOV R13,qword ptr [RBX + 0x10]
0000c666(4): MOV R12,qword ptr [RBX + 0x8]
0000c66a(3): MOV RBX,qword ptr [RBX]
0000c66d(5): CALL 0x00002510
0000c672(4): SUB RSP,0x8
0000c676(2): PUSH R14
0000c678(3): MOV RDX,RAX
0000c67b(3): MOV R9,R13
0000c67e(3): MOV R8,R12
0000c681(3): MOV RCX,RBX
0000c684(3): MOV RDI,RBP
0000c687(5): MOV ESI,0x1
0000c68c(2): XOR EAX,EAX
0000c68e(5): CALL 0x00002970
0000c693(1): POP RAX
0000c694(1): POP RDX
0000c695(4): ADD RSP,0x28
0000c699(1): POP RBX
0000c69a(1): POP RBP
0000c69b(2): POP R12
0000c69d(2): POP R13
0000c69f(2): POP R14
0000c6a1(2): POP R15
0000c6a3(1): RET
0000c6a8(4): MOV R15,qword ptr [RBX + 0x20]
0000c6ac(7): LEA RSI,[0x22118]
0000c6b3(5): MOV EDX,0x5
0000c6b8(2): XOR EDI,EDI
0000c6ba(4): MOV R14,qword ptr [RBX + 0x18]
0000c6be(4): MOV R13,qword ptr [RBX + 0x10]
0000c6c2(4): MOV R12,qword ptr [RBX + 0x8]
0000c6c6(3): MOV RBX,qword ptr [RBX]
0000c6c9(5): CALL 0x00002510
0000c6ce(2): PUSH R15
0000c6d0(2): JMP 0x0000c676
0000c6d8(4): MOV R8,qword ptr [RBX + 0x8]
0000c6dc(4): MOV R12,qword ptr [RBX + 0x28]
0000c6e0(7): LEA RSI,[0x22140]
0000c6e7(4): MOV R15,qword ptr [RBX + 0x20]
0000c6eb(4): MOV R14,qword ptr [RBX + 0x18]
0000c6ef(5): MOV EDX,0x5
0000c6f4(4): MOV R13,qword ptr [RBX + 0x10]
0000c6f8(2): XOR EDI,EDI
0000c6fa(3): MOV RBX,qword ptr [RBX]
0000c6fd(4): MOV qword ptr [RSP],R8
0000c701(5): CALL 0x00002510
0000c706(4): SUB RSP,0x8
0000c70a(3): MOV R9,R13
0000c70d(2): PUSH R12
0000c70f(2): PUSH R15
0000c711(2): PUSH R14
0000c713(5): MOV R8,qword ptr [RSP + 0x20]
0000c718(3): MOV RCX,RBX
0000c71b(3): MOV RDX,RAX
0000c71e(3): MOV RDI,RBP
0000c721(5): MOV ESI,0x1
0000c726(2): XOR EAX,EAX
0000c728(5): CALL 0x00002970
0000c72d(4): ADD RSP,0x20
0000c731(4): ADD RSP,0x28
0000c735(1): POP RBX
0000c736(1): POP RBP
0000c737(2): POP R12
0000c739(2): POP R13
0000c73b(2): POP R14
0000c73d(2): POP R15
0000c73f(1): RET
0000c740(4): MOV R9,qword ptr [RBX + 0x10]
0000c744(4): MOV R13,qword ptr [RBX + 0x30]
0000c748(7): LEA RSI,[0x22168]
0000c74f(4): MOV R12,qword ptr [RBX + 0x28]
0000c753(4): MOV R15,qword ptr [RBX + 0x20]
0000c757(5): MOV EDX,0x5
0000c75c(4): MOV R14,qword ptr [RBX + 0x18]
0000c760(4): MOV R8,qword ptr [RBX + 0x8]
0000c764(2): XOR EDI,EDI
0000c766(5): MOV qword ptr [RSP + 0x8],R9
0000c76b(3): MOV RBX,qword ptr [RBX]
0000c76e(4): MOV qword ptr [RSP],R8
0000c772(5): CALL 0x00002510
0000c777(2): PUSH R13
0000c779(2): PUSH R12
0000c77b(2): PUSH R15
0000c77d(2): PUSH R14
0000c77f(5): MOV R9,qword ptr [RSP + 0x28]
0000c784(2): JMP 0x0000c713
0000c790(4): MOV R10,qword ptr [RBX + 0x40]
0000c794(4): MOV R9,qword ptr [RBX + 0x38]
0000c798(5): MOV EDX,0x5
0000c79d(4): MOV RAX,qword ptr [RBX + 0x10]
0000c7a1(4): MOV R8,qword ptr [RBX + 0x8]
0000c7a5(7): LEA RSI,[0x22200]
0000c7ac(4): MOV R13,qword ptr [RBX + 0x30]
0000c7b0(4): MOV R12,qword ptr [RBX + 0x28]
0000c7b4(4): MOV R15,qword ptr [RBX + 0x20]
0000c7b8(4): MOV R14,qword ptr [RBX + 0x18]
0000c7bc(5): MOV qword ptr [RSP + 0x18],R10
0000c7c1(5): MOV qword ptr [RSP + 0x10],R9
0000c7c6(4): MOV qword ptr [RSP],RAX
0000c7ca(5): MOV qword ptr [RSP + 0x8],R8
0000c7cf(3): MOV RBX,qword ptr [RBX]
0000c7d2(5): JMP 0x0000c562
0000c7e0(3): XOR R9D,R9D
0000c7e3(4): CMP qword ptr [R8],0x0
0000c7e7(2): JZ 0x0000c7fb
0000c7e9(7): NOP dword ptr [RAX]
0000c7f0(4): ADD R9,0x1
0000c7f4(5): CMP qword ptr [R8 + R9*0x8],0x0
0000c7f9(2): JNZ 0x0000c7f0
0000c7fb(5): JMP 0x0000c3c0
0000c800(4): SUB RSP,0x68
0000c804(3): MOV R10,R8
0000c807(3): XOR R9D,R9D
0000c80a(9): MOV RAX,qword ptr FS:[0x28]
0000c813(5): MOV qword ptr [RSP + 0x58],RAX
0000c818(2): XOR EAX,EAX
0000c81a(3): MOV R8,RSP
0000c81d(3): NOP dword ptr [RAX]
0000c820(3): MOV EAX,dword ptr [R10]
0000c823(3): CMP EAX,0x2f
0000c826(2): JA 0x0000c86a
0000c828(3): MOV R11D,EAX
0000c82b(4): ADD R11,qword ptr [R10 + 0x10]
0000c82f(3): ADD EAX,0x8
0000c832(3): MOV dword ptr [R10],EAX
0000c835(3): MOV RAX,qword ptr [R11]
0000c838(3): TEST RAX,RAX
0000c83b(4): MOV qword ptr [R8 + R9*0x8],RAX
0000c83f(2): JZ 0x0000c84b
0000c841(4): ADD R9,0x1
0000c845(4): CMP R9,0xa
0000c849(2): JNZ 0x0000c820
0000c84b(5): CALL 0x0000c3c0
0000c850(5): MOV RAX,qword ptr [RSP + 0x58]
0000c855(9): XOR RAX,qword ptr FS:[0x28]
0000c85e(2): JNZ 0x0000c865
0000c860(4): ADD RSP,0x68
0000c864(1): RET
0000c865(5): CALL 0x00002560
0000c86a(4): MOV R11,qword ptr [R10 + 0x8]
0000c86e(4): LEA RAX,[R11 + 0x8]
0000c872(4): MOV qword ptr [R10 + 0x8],RAX
0000c876(2): JMP 0x0000c835
0000c880(1): PUSH RBP
0000c881(1): PUSH RBX
0000c882(6): MOV R10D,0x20
0000c888(3): XOR R11D,R11D
0000c88b(7): SUB RSP,0xb8
0000c892(9): MOV RAX,qword ptr FS:[0x28]
0000c89b(5): MOV qword ptr [RSP + 0x78],RAX
0000c8a0(2): XOR EAX,EAX
0000c8a2(8): LEA RAX,[0xd0 + RSP]
0000c8aa(8): MOV qword ptr [0xa0 + RSP],R8
0000c8b2(8): LEA RBX,[0xd0 + RSP]
0000c8ba(5): LEA R8,[RSP + 0x20]
0000c8bf(8): MOV qword ptr [0xa8 + RSP],R9
0000c8c7(8): MOV dword ptr [RSP + 0x8],0x20
0000c8cf(5): MOV qword ptr [RSP + 0x10],RAX
0000c8d4(8): LEA RAX,[0x80 + RSP]
0000c8dc(3): XOR R9D,R9D
0000c8df(5): MOV qword ptr [RSP + 0x18],RAX
0000c8e4(3): MOV RBP,RAX
0000c8e7(9): NOP word ptr [RAX + RAX*0x1]
0000c8f0(4): CMP R10D,0x2f
0000c8f4(2): JA 0x0000c94c
0000c8f6(3): MOV EAX,R10D
0000c8f9(6): MOV R11D,0x1
0000c8ff(4): ADD R10D,0x8
0000c903(3): ADD RAX,RBP
0000c906(3): MOV RAX,qword ptr [RAX]
0000c909(3): TEST RAX,RAX
0000c90c(4): MOV qword ptr [R8 + R9*0x8],RAX
0000c910(2): JZ 0x0000c91c
0000c912(4): ADD R9,0x1
0000c916(4): CMP R9,0xa
0000c91a(2): JNZ 0x0000c8f0
0000c91c(3): TEST R11B,R11B
0000c91f(2): JNZ 0x0000c945
0000c921(5): CALL 0x0000c3c0
0000c926(5): MOV RAX,qword ptr [RSP + 0x78]
0000c92b(9): XOR RAX,qword ptr FS:[0x28]
0000c934(2): JNZ 0x0000c940
0000c936(7): ADD RSP,0xb8
0000c93d(1): POP RBX
0000c93e(1): POP RBP
0000c93f(1): RET
0000c940(5): CALL 0x00002560
0000c945(5): MOV dword ptr [RSP + 0x8],R10D
0000c94a(2): JMP 0x0000c921
0000c94c(3): MOV RAX,RBX
0000c94f(4): ADD RBX,0x8
0000c953(2): JMP 0x0000c906
0000c960(1): PUSH RBX
0000c961(7): LEA RSI,[0x21fe2]
0000c968(5): MOV EDX,0x5
0000c96d(2): XOR EDI,EDI
0000c96f(5): CALL 0x00002510
0000c974(7): LEA RDX,[0x21ff7]
0000c97b(3): MOV RSI,RAX
0000c97e(5): MOV EDI,0x1
0000c983(2): XOR EAX,EAX
0000c985(5): CALL 0x00002850
0000c98a(7): LEA RSI,[0x2200d]
0000c991(5): MOV EDX,0x5
0000c996(2): XOR EDI,EDI
0000c998(5): CALL 0x00002510
0000c99d(7): LEA RCX,[0x20ca8]
0000c9a4(7): LEA RDX,[0x1fb07]
0000c9ab(3): MOV RSI,RAX
0000c9ae(5): MOV EDI,0x1
0000c9b3(2): XOR EAX,EAX
0000c9b5(5): CALL 0x00002850
0000c9ba(7): MOV RBX,qword ptr [0x002280a8]
0000c9c1(7): LEA RSI,[0x22240]
0000c9c8(2): XOR EDI,EDI
0000c9ca(5): MOV EDX,0x5
0000c9cf(5): CALL 0x00002510
0000c9d4(3): MOV RSI,RBX
0000c9d7(3): MOV RDI,RAX
0000c9da(1): POP RBX
0000c9db(5): JMP 0x000026a0
0000c9e0(1): PUSH RBX
0000c9e1(3): MOV RBX,RDI
0000c9e4(5): CALL 0x00002780
0000c9e9(3): TEST RAX,RAX
0000c9ec(2): JNZ 0x0000c9f3
0000c9ee(3): TEST RBX,RBX
0000c9f1(2): JNZ 0x0000c9f5
0000c9f3(1): POP RBX
0000c9f4(1): RET
0000c9f5(5): CALL 0x0000cc30
0000c9fa(6): NOP word ptr [RAX + RAX*0x1]
0000ca00(3): MOV RAX,RDI
0000ca03(3): MUL RSI
0000ca06(3): MOV RDI,RAX
0000ca09(3): SETO AL
0000ca0c(3): TEST RDI,RDI
0000ca0f(2): JS 0x0000ca1b
0000ca11(3): MOVZX EAX,AL
0000ca14(3): TEST RAX,RAX
0000ca17(2): JNZ 0x0000ca1b
0000ca19(2): JMP 0x0000c9e0
0000ca1b(4): SUB RSP,0x8
0000ca1f(5): CALL 0x0000cc30
0000ca24(2): NOP
0000ca26(10): NOP word ptr CS:[RAX + RAX*0x1]
0000ca30(2): JMP 0x0000c9e0
0000ca40(3): TEST RSI,RSI
0000ca43(1): PUSH RBX
0000ca44(3): MOV RBX,RSI
0000ca47(2): JNZ 0x0000ca4e
0000ca49(3): TEST RDI,RDI
0000ca4c(2): JNZ 0x0000ca68
0000ca4e(3): MOV RSI,RBX
0000ca51(5): CALL 0x00002830
0000ca56(3): TEST RAX,RAX
0000ca59(2): JNZ 0x0000ca60
0000ca5b(3): TEST RBX,RBX
0000ca5e(2): JNZ 0x0000ca71
0000ca60(1): POP RBX
0000ca61(1): RET
0000ca68(5): CALL 0x00002a10
0000ca6d(2): XOR EAX,EAX
0000ca6f(1): POP RBX
0000ca70(1): RET
0000ca71(5): CALL 0x0000cc30
0000ca76(10): NOP word ptr CS:[RAX + RAX*0x1]
0000ca80(3): MOV RAX,RSI
0000ca83(3): MUL RDX
0000ca86(3): MOV RSI,RAX
0000ca89(3): SETO AL
0000ca8c(3): TEST RSI,RSI
0000ca8f(2): JS 0x0000ca9b
0000ca91(3): MOVZX EAX,AL
0000ca94(3): TEST RAX,RAX
0000ca97(2): JNZ 0x0000ca9b
0000ca99(2): JMP 0x0000ca40
0000ca9b(4): SUB RSP,0x8
0000ca9f(5): CALL 0x0000cc30
0000caa4(2): NOP
0000caa6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000cab0(3): TEST RDI,RDI
0000cab3(3): MOV R9,RDX
0000cab6(3): MOV RCX,qword ptr [RSI]
0000cab9(2): JZ 0x0000caf0
0000cabb(2): XOR EDX,EDX
0000cabd(10): MOV RAX,0x5555555555555554
0000cac7(3): DIV R9
0000caca(3): CMP RAX,RCX
0000cacd(2): JBE 0x0000cb0b
0000cacf(3): MOV RAX,RCX
0000cad2(3): SHR RAX,1
0000cad5(5): LEA RCX,[RAX + RCX*0x1 + 0x1]
0000cada(3): MOV qword ptr [RSI],RCX
0000cadd(4): IMUL RCX,R9
0000cae1(3): MOV RSI,RCX
0000cae4(5): JMP 0x0000ca40
0000caf0(3): TEST RCX,RCX
0000caf3(2): JZ 0x0000cb18
0000caf5(3): MOV RAX,RCX
0000caf8(3): MUL R9
0000cafb(3): SETO DL
0000cafe(3): TEST RAX,RAX
0000cb01(3): MOVZX EDX,DL
0000cb04(2): JS 0x0000cb0b
0000cb06(3): TEST RDX,RDX
0000cb09(2): JZ 0x0000cada
0000cb0b(4): SUB RSP,0x8
0000cb0f(5): CALL 0x0000cc30
0000cb14(4): NOP dword ptr [RAX]
0000cb18(2): XOR EDX,EDX
0000cb1a(5): MOV EAX,0x80
0000cb1f(3): XOR R8D,R8D
0000cb22(3): DIV R9
0000cb25(3): TEST RAX,RAX
0000cb28(4): SETZ R8B
0000cb2c(4): LEA RCX,[R8 + RAX*0x1]
0000cb30(2): JMP 0x0000caf5
0000cb40(3): TEST RDI,RDI
0000cb43(3): MOV RAX,qword ptr [RSI]
0000cb46(2): JZ 0x0000cb70
0000cb48(10): MOV RDX,0x5555555555555553
0000cb52(3): CMP RAX,RDX
0000cb55(2): JA 0x0000cb81
0000cb57(3): MOV RDX,RAX
0000cb5a(3): SHR RDX,1
0000cb5d(5): LEA RAX,[RDX + RAX*0x1 + 0x1]
0000cb62(3): MOV qword ptr [RSI],RAX
0000cb65(3): MOV RSI,RAX
0000cb68(5): JMP 0x0000ca40
0000cb70(3): TEST RAX,RAX
0000cb73(5): MOV EDX,0x80
0000cb78(4): CMOVZ RAX,RDX
0000cb7c(3): TEST RAX,RAX
0000cb7f(2): JNS 0x0000cb62
0000cb81(4): SUB RSP,0x8
0000cb85(5): CALL 0x0000cc30
0000cb8a(6): NOP word ptr [RAX + RAX*0x1]
0000cb90(1): PUSH RBX
0000cb91(3): MOV RBX,RDI
0000cb94(5): CALL 0x0000c9e0
0000cb99(3): MOV RDX,RBX
0000cb9c(2): XOR ESI,ESI
0000cb9e(3): MOV RDI,RAX
0000cba1(1): POP RBX
0000cba2(5): JMP 0x00002620
0000cbb0(3): MOV RAX,RDI
0000cbb3(4): SUB RSP,0x8
0000cbb7(3): MUL RSI
0000cbba(3): SETO DL
0000cbbd(3): TEST RAX,RAX
0000cbc0(2): JS 0x0000cbd9
0000cbc2(3): MOVZX EDX,DL
0000cbc5(3): TEST RDX,RDX
0000cbc8(2): JNZ 0x0000cbd9
0000cbca(5): CALL 0x000026b0
0000cbcf(3): TEST RAX,RAX
0000cbd2(2): JZ 0x0000cbd9
0000cbd4(4): ADD RSP,0x8
0000cbd8(1): RET
0000cbd9(5): CALL 0x0000cc30
0000cbde(2): NOP
0000cbe0(1): PUSH RBP
0000cbe1(1): PUSH RBX
0000cbe2(3): MOV RBP,RDI
0000cbe5(3): MOV RDI,RSI
0000cbe8(3): MOV RBX,RSI
0000cbeb(4): SUB RSP,0x8
0000cbef(5): CALL 0x0000c9e0
0000cbf4(4): ADD RSP,0x8
0000cbf8(3): MOV RDX,RBX
0000cbfb(3): MOV RSI,RBP
0000cbfe(1): POP RBX
0000cbff(1): POP RBP
0000cc00(3): MOV RDI,RAX
0000cc03(5): JMP 0x00002710
0000cc10(1): PUSH RBX
0000cc11(3): MOV RBX,RDI
0000cc14(5): CALL 0x00002530
0000cc19(3): MOV RDI,RBX
0000cc1c(4): LEA RSI,[RAX + 0x1]
0000cc20(1): POP RBX
0000cc21(2): JMP 0x0000cbe0
0000cc30(7): LEA RSI,[0x222ef]
0000cc37(4): SUB RSP,0x8
0000cc3b(5): MOV EDX,0x5
0000cc40(2): XOR EDI,EDI
0000cc42(5): CALL 0x00002510
0000cc47(6): MOV EDI,dword ptr [0x00228028]
0000cc4d(7): LEA RDX,[0x21490]
0000cc54(3): MOV RCX,RAX
0000cc57(2): XOR ESI,ESI
0000cc59(2): XOR EAX,EAX
0000cc5b(5): CALL 0x000028a0
0000cc60(5): CALL 0x00002400
0000cc65(10): NOP word ptr CS:[RAX + RAX*0x1]
0000cc6f(1): NOP
0000cc70(4): SUB RSP,0x8
0000cc74(6): OR ESI,0x200
0000cc7a(5): CALL 0x0000f3a0
0000cc7f(3): TEST RAX,RAX
0000cc82(2): JZ 0x0000cc90
0000cc84(4): ADD RSP,0x8
0000cc88(1): RET
0000cc90(5): CALL 0x00002410
0000cc95(3): CMP dword ptr [RAX],0x16
0000cc98(2): JZ 0x0000cca0
0000cc9a(5): CALL 0x0000cc30
0000cc9f(1): NOP
0000cca0(7): LEA RCX,[0x22330]
0000cca7(7): LEA RSI,[0x22300]
0000ccae(7): LEA RDI,[0x2231d]
0000ccb5(5): MOV EDX,0x29
0000ccba(5): CALL 0x00002600
0000ccbf(1): NOP
0000ccc0(3): MOV EDX,dword ptr [RDI + 0x48]
0000ccc3(5): MOV EAX,0x1
0000ccc8(3): AND EDX,0x11
0000cccb(3): CMP EDX,0x10
0000ccce(2): JZ 0x0000ccd7
0000ccd0(2): XOR EAX,EAX
0000ccd2(3): CMP EDX,0x11
0000ccd5(2): JZ 0x0000cce0
0000ccd7(2): RET
0000cce0(5): CMP qword ptr [RSI + 0x58],0x0
0000cce5(3): SETNZ AL
0000cce8(1): RET
0000ccf0(2): PUSH R15
0000ccf2(2): PUSH R14
0000ccf4(2): PUSH R13
0000ccf6(2): PUSH R12
0000ccf8(1): PUSH RBP
0000ccf9(1): PUSH RBX
0000ccfa(4): SUB RSP,0x28
0000ccfe(9): MOV RAX,qword ptr FS:[0x28]
0000cd07(5): MOV qword ptr [RSP + 0x18],RAX
0000cd0c(2): XOR EAX,EAX
0000cd0e(3): CMP EDX,0x24
0000cd11(6): JA 0x0000d37f
0000cd17(5): LEA RAX,[RSP + 0x10]
0000cd1c(3): TEST RSI,RSI
0000cd1f(3): MOV RBX,RSI
0000cd22(3): MOV R12,RDI
0000cd25(2): MOV EBP,EDX
0000cd27(3): MOV R14,RCX
0000cd2a(4): CMOVZ RBX,RAX
0000cd2e(3): MOV R15,R8
0000cd31(5): CALL 0x00002410
0000cd36(2): XOR ECX,ECX
0000cd38(2): MOV EDX,EBP
0000cd3a(6): MOV dword ptr [RAX],0x0
0000cd40(3): MOV RSI,RBX
0000cd43(3): MOV RDI,R12
0000cd46(3): MOV R13,RAX
0000cd49(5): CALL 0x000024d0
0000cd4e(3): MOV RCX,qword ptr [RBX]
0000cd51(3): MOV RBP,RAX
0000cd54(3): CMP RCX,R12
0000cd57(2): JZ 0x0000cdb8
0000cd59(4): MOV EAX,dword ptr [R13]
0000cd5d(2): TEST EAX,EAX
0000cd5f(2): JNZ 0x0000cda0
0000cd61(3): XOR R12D,R12D
0000cd64(3): TEST R15,R15
0000cd67(2): JZ 0x0000cd76
0000cd69(4): MOVZX R13D,byte ptr [RCX]
0000cd6d(3): TEST R13B,R13B
0000cd70(6): JNZ 0x0000cdf3
0000cd76(3): MOV qword ptr [R14],RBP
0000cd79(5): MOV RDI,qword ptr [RSP + 0x18]
0000cd7e(9): XOR RDI,qword ptr FS:[0x28]
0000cd87(3): MOV EAX,R12D
0000cd8a(6): JNZ 0x0000d39e
0000cd90(4): ADD RSP,0x28
0000cd94(1): POP RBX
0000cd95(1): POP RBP
0000cd96(2): POP R12
0000cd98(2): POP R13
0000cd9a(2): POP R14
0000cd9c(2): POP R15
0000cd9e(1): RET
0000cda0(3): CMP EAX,0x22
0000cda3(6): MOV R12D,0x4
0000cda9(2): JNZ 0x0000cd79
0000cdab(6): MOV R12D,0x1
0000cdb1(2): JMP 0x0000cd64
0000cdb8(3): TEST R15,R15
0000cdbb(6): JZ 0x0000d250
0000cdc1(4): MOVZX R13D,byte ptr [RCX]
0000cdc5(5): MOV qword ptr [RSP + 0x8],RCX
0000cdca(6): MOV R12D,0x4
0000cdd0(3): TEST R13B,R13B
0000cdd3(2): JZ 0x0000cd79
0000cdd5(4): MOVSX ESI,R13B
0000cdd9(3): MOV RDI,R15
0000cddc(5): CALL 0x000025a0
0000cde1(3): TEST RAX,RAX
0000cde4(5): MOV RCX,qword ptr [RSP + 0x8]
0000cde9(2): JZ 0x0000cd79
0000cdeb(5): MOV EBP,0x1
0000cdf0(3): XOR R12D,R12D
0000cdf3(4): MOVSX ESI,R13B
0000cdf7(3): MOV RDI,R15
0000cdfa(5): MOV qword ptr [RSP + 0x8],RCX
0000cdff(5): CALL 0x000025a0
0000ce04(3): TEST RAX,RAX
0000ce07(5): MOV RCX,qword ptr [RSP + 0x8]
0000ce0c(2): JZ 0x0000ce68
0000ce0e(4): LEA EAX,[R13 + -0x45]
0000ce12(2): CMP AL,0x2f
0000ce14(2): JA 0x0000ce78
0000ce16(10): MOV RDX,0x814400308945
0000ce20(4): BT RDX,RAX
0000ce24(2): JNC 0x0000ce78
0000ce26(5): MOV ESI,0x30
0000ce2b(3): MOV RDI,R15
0000ce2e(5): MOV qword ptr [RSP + 0x8],RCX
0000ce33(5): CALL 0x000025a0
0000ce38(3): TEST RAX,RAX
0000ce3b(5): MOV RCX,qword ptr [RSP + 0x8]
0000ce40(2): JZ 0x0000ce78
0000ce42(4): MOVZX EAX,byte ptr [RCX + 0x1]
0000ce46(2): CMP AL,0x44
0000ce48(2): JZ 0x0000ce56
0000ce4a(2): CMP AL,0x69
0000ce4c(6): JZ 0x0000d338
0000ce52(2): CMP AL,0x42
0000ce54(2): JNZ 0x0000ce78
0000ce56(5): MOV EDI,0x2
0000ce5b(5): MOV EAX,0x3e8
0000ce60(2): JMP 0x0000ce82
0000ce68(3): MOV qword ptr [R14],RBP
0000ce6b(4): OR R12D,0x2
0000ce6f(5): JMP 0x0000cd79
0000ce78(5): MOV EDI,0x1
0000ce7d(5): MOV EAX,0x400
0000ce82(4): SUB R13D,0x42
0000ce86(4): CMP R13B,0x35
0000ce8a(2): JA 0x0000ce68
0000ce8c(7): LEA RSI,[0x22388]
0000ce93(4): MOVZX R13D,R13B
0000ce97(4): MOVSXD RDX,dword ptr [RSI + R13*0x4]
0000ce9b(3): ADD RDX,RSI
0000ce9e(2): JMP RDX
0000cea0(10): MOV R8,-0x8000000000000000
0000ceaa(3): MOVSXD RSI,EAX
0000cead(3): MOV RAX,R8
0000ceb0(2): CQO
0000ceb2(3): IDIV RSI
0000ceb5(3): CMP RBP,RAX
0000ceb8(3): MOV R9,RAX
0000cebb(6): JL 0x0000d365
0000cec1(10): MOV R10,0x7fffffffffffffff
0000cecb(3): MOV RAX,R10
0000cece(2): CQO
0000ced0(3): IDIV RSI
0000ced3(3): CMP RBP,RAX
0000ced6(6): JG 0x0000d372
0000cedc(4): IMUL RBP,RSI
0000cee0(3): CMP R9,RBP
0000cee3(6): JG 0x0000d365
0000cee9(3): CMP RAX,RBP
0000ceec(6): JL 0x0000d372
0000cef2(4): IMUL RBP,RSI
0000cef6(2): XOR EAX,EAX
0000cef8(3): OR R12D,EAX
0000cefb(5): NOP dword ptr [RAX + RAX*0x1]
0000cf00(3): MOVSXD RAX,EDI
0000cf03(3): ADD RCX,RAX
0000cf06(3): MOV EAX,R12D
0000cf09(3): OR EAX,0x2
0000cf0c(3): MOV qword ptr [RBX],RCX
0000cf0f(3): CMP byte ptr [RCX],0x0
0000cf12(4): CMOVNZ R12D,EAX
0000cf16(5): JMP 0x0000cd76
0000cf20(10): MOV RAX,-0x4000000000000000
0000cf2a(3): CMP RBP,RAX
0000cf2d(6): JL 0x0000d260
0000cf33(10): MOV RAX,0x3fffffffffffffff
0000cf3d(3): CMP RBP,RAX
0000cf40(6): JG 0x0000d320
0000cf46(3): ADD RBP,RBP
0000cf49(2): JMP 0x0000cf00
0000cf50(10): MOV RAX,-0x40000000000000
0000cf5a(3): CMP RBP,RAX
0000cf5d(6): JL 0x0000d260
0000cf63(10): MOV RAX,0x3fffffffffffff
0000cf6d(3): CMP RBP,RAX
0000cf70(6): JG 0x0000d320
0000cf76(4): SHL RBP,0x9
0000cf7a(2): JMP 0x0000cf00
0000cf80(3): MOVSXD RSI,EAX
0000cf83(10): MOV RAX,-0x8000000000000000
0000cf8d(6): MOV R8D,0x7
0000cf93(2): CQO
0000cf95(3): XOR R11D,R11D
0000cf98(10): MOV R9,0x7fffffffffffffff
0000cfa2(3): IDIV RSI
0000cfa5(3): MOV R10,RAX
0000cfa8(2): JMP 0x0000cfcf
0000cfb0(3): MOV RAX,R9
0000cfb3(2): CQO
0000cfb5(3): IDIV RSI
0000cfb8(3): CMP RAX,RBP
0000cfbb(6): JL 0x0000d2a8
0000cfc1(4): IMUL RBP,RSI
0000cfc5(4): SUB R8D,0x1
0000cfc9(6): JZ 0x0000d0f0
0000cfcf(3): CMP R10,RBP
0000cfd2(2): JLE 0x0000cfb0
0000cfd4(6): MOV R11D,0x1
0000cfda(10): MOV RBP,-0x8000000000000000
0000cfe4(2): JMP 0x0000cfc5
0000cff0(3): MOVSXD RSI,EAX
0000cff3(10): MOV RAX,-0x8000000000000000
0000cffd(6): MOV R8D,0x8
0000d003(2): CQO
0000d005(3): XOR R11D,R11D
0000d008(10): MOV R9,0x7fffffffffffffff
0000d012(3): IDIV RSI
0000d015(3): MOV R10,RAX
0000d018(2): JMP 0x0000d03f
0000d020(3): MOV RAX,R9
0000d023(2): CQO
0000d025(3): IDIV RSI
0000d028(3): CMP RAX,RBP
0000d02b(6): JL 0x0000d278
0000d031(4): IMUL RBP,RSI
0000d035(4): SUB R8D,0x1
0000d039(6): JZ 0x0000d0f0
0000d03f(3): CMP R10,RBP
0000d042(2): JLE 0x0000d020
0000d044(6): MOV R11D,0x1
0000d04a(10): MOV RBP,-0x8000000000000000
0000d054(2): JMP 0x0000d035
0000d060(10): MOV R8,-0x8000000000000000
0000d06a(3): MOVSXD RSI,EAX
0000d06d(3): MOV RAX,R8
0000d070(2): CQO
0000d072(3): IDIV RSI
0000d075(3): CMP RBP,RAX
0000d078(6): JL 0x0000d260
0000d07e(4): SUB R8,0x1
0000d082(3): MOV RAX,R8
0000d085(2): CQO
0000d087(3): IDIV RSI
0000d08a(3): CMP RBP,RAX
0000d08d(6): JG 0x0000d320
0000d093(4): IMUL RBP,RSI
0000d097(5): JMP 0x0000cf00
0000d0a0(3): MOVSXD RSI,EAX
0000d0a3(10): MOV RAX,-0x8000000000000000
0000d0ad(6): MOV R8D,0x3
0000d0b3(2): CQO
0000d0b5(3): XOR R11D,R11D
0000d0b8(10): MOV R9,0x7fffffffffffffff
0000d0c2(3): IDIV RSI
0000d0c5(3): MOV R10,RAX
0000d0c8(3): CMP R10,RBP
0000d0cb(6): JG 0x0000d2c0
0000d0d1(3): MOV RAX,R9
0000d0d4(2): CQO
0000d0d6(3): IDIV RSI
0000d0d9(3): CMP RAX,RBP
0000d0dc(6): JL 0x0000d350
0000d0e2(4): IMUL RBP,RSI
0000d0e6(4): SUB R8D,0x1
0000d0ea(2): JNZ 0x0000d0c8
0000d0ec(4): NOP dword ptr [RAX]
0000d0f0(3): OR R12D,R11D
0000d0f3(5): JMP 0x0000cf00
0000d100(3): MOVSXD RSI,EAX
0000d103(10): MOV RAX,-0x8000000000000000
0000d10d(6): MOV R8D,0x6
0000d113(2): CQO
0000d115(3): XOR R11D,R11D
0000d118(10): MOV R9,0x7fffffffffffffff
0000d122(3): IDIV RSI
0000d125(3): MOV R10,RAX
0000d128(2): JMP 0x0000d14b
0000d130(3): MOV RAX,R9
0000d133(2): CQO
0000d135(3): IDIV RSI
0000d138(3): CMP RAX,RBP
0000d13b(6): JL 0x0000d2d8
0000d141(4): IMUL RBP,RSI
0000d145(4): SUB R8D,0x1
0000d149(2): JZ 0x0000d0f0
0000d14b(3): CMP R10,RBP
0000d14e(2): JLE 0x0000d130
0000d150(6): MOV R11D,0x1
0000d156(10): MOV RBP,-0x8000000000000000
0000d160(2): JMP 0x0000d145
0000d168(3): MOVSXD RSI,EAX
0000d16b(10): MOV RAX,-0x8000000000000000
0000d175(6): MOV R8D,0x5
0000d17b(2): CQO
0000d17d(3): XOR R11D,R11D
0000d180(10): MOV R9,0x7fffffffffffffff
0000d18a(3): IDIV RSI
0000d18d(3): MOV R10,RAX
0000d190(2): JMP 0x0000d1b7
0000d198(3): MOV RAX,R9
0000d19b(2): CQO
0000d19d(3): IDIV RSI
0000d1a0(3): CMP RAX,RBP
0000d1a3(6): JL 0x0000d2f0
0000d1a9(4): IMUL RBP,RSI
0000d1ad(4): SUB R8D,0x1
0000d1b1(6): JZ 0x0000d0f0
0000d1b7(3): CMP R10,RBP
0000d1ba(2): JLE 0x0000d198
0000d1bc(6): MOV R11D,0x1
0000d1c2(10): MOV RBP,-0x8000000000000000
0000d1cc(2): JMP 0x0000d1ad
0000d1d0(10): MOV RAX,-0x20000000000000
0000d1da(3): CMP RBP,RAX
0000d1dd(6): JL 0x0000d260
0000d1e3(10): MOV RAX,0x1fffffffffffff
0000d1ed(3): CMP RBP,RAX
0000d1f0(6): JG 0x0000d320
0000d1f6(4): SHL RBP,0xa
0000d1fa(5): JMP 0x0000cf00
0000d200(3): MOVSXD RSI,EAX
0000d203(10): MOV RAX,-0x8000000000000000
0000d20d(6): MOV R8D,0x4
0000d213(2): CQO
0000d215(3): XOR R11D,R11D
0000d218(10): MOV R9,0x7fffffffffffffff
0000d222(3): IDIV RSI
0000d225(3): MOV R10,RAX
0000d228(3): CMP R10,RBP
0000d22b(2): JG 0x0000d290
0000d22d(3): MOV RAX,R9
0000d230(2): CQO
0000d232(3): IDIV RSI
0000d235(3): CMP RAX,RBP
0000d238(6): JL 0x0000d308
0000d23e(4): IMUL RBP,RSI
0000d242(4): SUB R8D,0x1
0000d246(2): JNZ 0x0000d228
0000d248(5): JMP 0x0000d0f0
0000d250(6): MOV R12D,0x4
0000d256(5): JMP 0x0000cd79
0000d260(6): MOV R12D,0x1
0000d266(10): MOV RBP,-0x8000000000000000
0000d270(5): JMP 0x0000cf00
0000d278(6): MOV R11D,0x1
0000d27e(10): MOV RBP,0x7fffffffffffffff
0000d288(5): JMP 0x0000d035
0000d290(6): MOV R11D,0x1
0000d296(10): MOV RBP,-0x8000000000000000
0000d2a0(2): JMP 0x0000d242
0000d2a8(6): MOV R11D,0x1
0000d2ae(10): MOV RBP,0x7fffffffffffffff
0000d2b8(5): JMP 0x0000cfc5
0000d2c0(6): MOV R11D,0x1
0000d2c6(10): MOV RBP,-0x8000000000000000
0000d2d0(5): JMP 0x0000d0e6
0000d2d8(6): MOV R11D,0x1
0000d2de(10): MOV RBP,0x7fffffffffffffff
0000d2e8(5): JMP 0x0000d145
0000d2f0(6): MOV R11D,0x1
0000d2f6(10): MOV RBP,0x7fffffffffffffff
0000d300(5): JMP 0x0000d1ad
0000d308(6): MOV R11D,0x1
0000d30e(10): MOV RBP,0x7fffffffffffffff
0000d318(5): JMP 0x0000d242
0000d320(6): MOV R12D,0x1
0000d326(10): MOV RBP,0x7fffffffffffffff
0000d330(5): JMP 0x0000cf00
0000d338(2): XOR EDI,EDI
0000d33a(4): CMP byte ptr [RCX + 0x2],0x42
0000d33e(5): MOV EAX,0x400
0000d343(4): SETZ DIL
0000d347(4): LEA EDI,[RDI + RDI*0x1 + 0x1]
0000d34b(5): JMP 0x0000ce82
0000d350(6): MOV R11D,0x1
0000d356(10): MOV RBP,0x7fffffffffffffff
0000d360(5): JMP 0x0000d0e6
0000d365(5): MOV EAX,0x1
0000d36a(3): MOV RBP,R8
0000d36d(5): JMP 0x0000cef8
0000d372(5): MOV EAX,0x1
0000d377(3): MOV RBP,R10
0000d37a(5): JMP 0x0000cef8
0000d37f(7): LEA RCX,[0x22460]
0000d386(7): LEA RSI,[0x22340]
0000d38d(7): LEA RDI,[0x22360]
0000d394(5): MOV EDX,0x54
0000d399(5): CALL 0x00002600
0000d39e(5): CALL 0x00002560
0000d3a3(10): NOP word ptr CS:[RAX + RAX*0x1]
0000d3ad(3): NOP dword ptr [RAX]
0000d3b0(2): PUSH R15
0000d3b2(2): PUSH R14
0000d3b4(2): PUSH R13
0000d3b6(2): PUSH R12
0000d3b8(1): PUSH RBP
0000d3b9(1): PUSH RBX
0000d3ba(4): SUB RSP,0x28
0000d3be(9): MOV RAX,qword ptr FS:[0x28]
0000d3c7(5): MOV qword ptr [RSP + 0x18],RAX
0000d3cc(2): XOR EAX,EAX
0000d3ce(3): CMP EDX,0x24
0000d3d1(6): JA 0x0000d735
0000d3d7(5): LEA RAX,[RSP + 0x10]
0000d3dc(3): MOV R15,RSI
0000d3df(3): TEST RSI,RSI
0000d3e2(3): MOV RBP,RDI
0000d3e5(4): MOV dword ptr [RSP + 0x8],EDX
0000d3e9(3): MOV R14,RCX
0000d3ec(3): MOV R13,R8
0000d3ef(4): CMOVZ R15,RAX
0000d3f3(5): CALL 0x00002410
0000d3f8(6): MOV dword ptr [RAX],0x0
0000d3fe(3): MOV R12,RAX
0000d401(4): MOVZX EBX,byte ptr [RBP]
0000d405(5): CALL 0x000029f0
0000d40a(4): MOV EDX,dword ptr [RSP + 0x8]
0000d40e(3): MOV RSI,qword ptr [RAX]
0000d411(3): MOV RAX,RBP
0000d414(2): JMP 0x0000d427
0000d420(4): ADD RAX,0x1
0000d424(3): MOVZX EBX,byte ptr [RAX]
0000d427(3): MOVZX ECX,BL
0000d42a(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x20
0000d42f(2): JNZ 0x0000d420
0000d431(3): CMP BL,0x2d
0000d434(2): JZ 0x0000d488
0000d436(3): MOV RSI,R15
0000d439(3): MOV RDI,RBP
0000d43c(5): CALL 0x00002920
0000d441(3): MOV RCX,qword ptr [R15]
0000d444(3): MOV RBX,RAX
0000d447(3): CMP RCX,RBP
0000d44a(2): JZ 0x0000d478
0000d44c(4): MOV EAX,dword ptr [R12]
0000d450(2): TEST EAX,EAX
0000d452(2): JZ 0x0000d4b8
0000d454(3): CMP EAX,0x22
0000d457(5): MOV EBP,0x1
0000d45c(2): JNZ 0x0000d488
0000d45e(3): TEST R13,R13
0000d461(2): JZ 0x0000d46c
0000d463(4): MOVZX R12D,byte ptr [RCX]
0000d467(3): TEST R12B,R12B
0000d46a(2): JNZ 0x0000d4e7
0000d46c(3): MOV qword ptr [R14],RBX
0000d46f(2): JMP 0x0000d48d
0000d478(3): TEST R13,R13
0000d47b(5): MOV qword ptr [RSP + 0x8],RCX
0000d480(2): JNZ 0x0000d4c0
0000d482(6): NOP word ptr [RAX + RAX*0x1]
0000d488(5): MOV EBP,0x4
0000d48d(5): MOV RDI,qword ptr [RSP + 0x18]
0000d492(9): XOR RDI,qword ptr FS:[0x28]
0000d49b(2): MOV EAX,EBP
0000d49d(6): JNZ 0x0000d730
0000d4a3(4): ADD RSP,0x28
0000d4a7(1): POP RBX
0000d4a8(1): POP RBP
0000d4a9(2): POP R12
0000d4ab(2): POP R13
0000d4ad(2): POP R14
0000d4af(2): POP R15
0000d4b1(1): RET
0000d4b8(2): XOR EBP,EBP
0000d4ba(2): JMP 0x0000d45e
0000d4c0(5): MOVZX R12D,byte ptr [RBP]
0000d4c5(3): TEST R12B,R12B
0000d4c8(2): JZ 0x0000d488
0000d4ca(4): MOVSX ESI,R12B
0000d4ce(3): MOV RDI,R13
0000d4d1(2): XOR EBP,EBP
0000d4d3(5): CALL 0x000025a0
0000d4d8(3): TEST RAX,RAX
0000d4db(5): MOV EBX,0x1
0000d4e0(5): MOV RCX,qword ptr [RSP + 0x8]
0000d4e5(2): JZ 0x0000d488
0000d4e7(4): MOVSX ESI,R12B
0000d4eb(3): MOV RDI,R13
0000d4ee(5): MOV qword ptr [RSP + 0x8],RCX
0000d4f3(5): CALL 0x000025a0
0000d4f8(3): TEST RAX,RAX
0000d4fb(5): MOV RCX,qword ptr [RSP + 0x8]
0000d500(6): JZ 0x0000d5cc
0000d506(5): LEA EAX,[R12 + -0x45]
0000d50b(2): CMP AL,0x2f
0000d50d(2): JA 0x0000d560
0000d50f(10): MOV RDX,0x814400308945
0000d519(4): BT RDX,RAX
0000d51d(2): JNC 0x0000d560
0000d51f(5): MOV ESI,0x30
0000d524(3): MOV RDI,R13
0000d527(5): MOV qword ptr [RSP + 0x8],RCX
0000d52c(5): CALL 0x000025a0
0000d531(3): TEST RAX,RAX
0000d534(5): MOV RCX,qword ptr [RSP + 0x8]
0000d539(2): JZ 0x0000d560
0000d53b(4): MOVZX EAX,byte ptr [RCX + 0x1]
0000d53f(2): CMP AL,0x44
0000d541(2): JZ 0x0000d54f
0000d543(2): CMP AL,0x69
0000d545(6): JZ 0x0000d718
0000d54b(2): CMP AL,0x42
0000d54d(2): JNZ 0x0000d560
0000d54f(5): MOV EDI,0x2
0000d554(5): MOV ESI,0x3e8
0000d559(2): JMP 0x0000d56a
0000d560(5): MOV EDI,0x1
0000d565(5): MOV ESI,0x400
0000d56a(4): SUB R12D,0x42
0000d56e(4): CMP R12B,0x35
0000d572(2): JA 0x0000d5cc
0000d574(7): LEA RDX,[0x22470]
0000d57b(4): MOVZX R12D,R12B
0000d57f(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
0000d583(3): ADD RAX,RDX
0000d586(2): JMP RAX
0000d588(3): MOV RAX,RBX
0000d58b(3): MUL RSI
0000d58e(6): JO 0x0000d781
0000d594(3): XOR R8D,R8D
0000d597(3): MUL RSI
0000d59a(6): JO 0x0000d772
0000d5a0(3): MOV RBX,RAX
0000d5a3(3): OR EBP,R8D
0000d5a6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000d5b0(3): MOVSXD RDI,EDI
0000d5b3(2): MOV EAX,EBP
0000d5b5(3): ADD RCX,RDI
0000d5b8(3): OR EAX,0x2
0000d5bb(3): MOV qword ptr [R15],RCX
0000d5be(3): CMP byte ptr [RCX],0x0
0000d5c1(3): MOV qword ptr [R14],RBX
0000d5c4(3): CMOVNZ EBP,EAX
0000d5c7(5): JMP 0x0000d48d
0000d5cc(3): MOV qword ptr [R14],RBX
0000d5cf(3): OR EBP,0x2
0000d5d2(5): JMP 0x0000d48d
0000d5d7(5): MOV EDX,0x2
0000d5dc(3): MOV RAX,RDX
0000d5df(3): MUL RBX
0000d5e2(6): JO 0x0000d67e
0000d5e8(3): ADD RBX,RBX
0000d5eb(2): JMP 0x0000d5b0
0000d5ed(5): MOV EDX,0x200
0000d5f2(3): MOV RAX,RDX
0000d5f5(3): MUL RBX
0000d5f8(6): JO 0x0000d67e
0000d5fe(4): SHL RBX,0x9
0000d602(2): JMP 0x0000d5b0
0000d604(6): MOV R8D,0x7
0000d60a(3): XOR R9D,R9D
0000d60d(3): NOP dword ptr [RAX]
0000d610(3): MOV RAX,RBX
0000d613(3): MUL RSI
0000d616(3): MOV RBX,RAX
0000d619(6): JO 0x0000d7ae
0000d61f(4): SUB R8D,0x1
0000d623(2): JNZ 0x0000d610
0000d625(3): OR EBP,R9D
0000d628(2): JMP 0x0000d5b0
0000d62a(6): MOV R8D,0x8
0000d630(3): XOR R9D,R9D
0000d633(5): NOP dword ptr [RAX + RAX*0x1]
0000d638(3): MOV RAX,RBX
0000d63b(3): MUL RSI
0000d63e(3): MOV RBX,RAX
0000d641(6): JO 0x0000d790
0000d647(4): SUB R8D,0x1
0000d64b(2): JNZ 0x0000d638
0000d64d(2): JMP 0x0000d625
0000d64f(6): MOV R8D,0x4
0000d655(3): XOR R9D,R9D
0000d658(3): MOV RAX,RBX
0000d65b(3): MUL RSI
0000d65e(3): MOV RBX,RAX
0000d661(6): JO 0x0000d763
0000d667(4): SUB R8D,0x1
0000d66b(2): JNZ 0x0000d658
0000d66d(2): JMP 0x0000d625
0000d66f(3): MOV RAX,RBX
0000d672(3): MUL RSI
0000d675(3): MOV RBX,RAX
0000d678(6): JNO 0x0000d5b0
0000d67e(5): MOV EBP,0x1
0000d683(4): OR RBX,-0x1
0000d687(5): JMP 0x0000d5b0
0000d690(6): MOV R8D,0x5
0000d696(3): XOR R9D,R9D
0000d699(3): MOV RAX,RBX
0000d69c(3): MUL RSI
0000d69f(3): MOV RBX,RAX
0000d6a2(6): JO 0x0000d79f
0000d6a8(4): SUB R8D,0x1
0000d6ac(2): JNZ 0x0000d699
0000d6ae(5): JMP 0x0000d625
0000d6b3(6): MOV R8D,0x6
0000d6b9(3): XOR R9D,R9D
0000d6bc(3): MOV RAX,RBX
0000d6bf(3): MUL RSI
0000d6c2(3): MOV RBX,RAX
0000d6c5(6): JO 0x0000d754
0000d6cb(4): SUB R8D,0x1
0000d6cf(2): JNZ 0x0000d6bc
0000d6d1(5): JMP 0x0000d625
0000d6d6(5): MOV EDX,0x400
0000d6db(3): MOV RAX,RDX
0000d6de(3): MUL RBX
0000d6e1(2): JO 0x0000d67e
0000d6e3(4): SHL RBX,0xa
0000d6e7(5): JMP 0x0000d5b0
0000d6ec(3): MOV RAX,RBX
0000d6ef(3): MUL RSI
0000d6f2(6): JO 0x0000d7bd
0000d6f8(3): XOR R8D,R8D
0000d6fb(3): MUL RSI
0000d6fe(6): JNO 0x0000d597
0000d704(6): MOV R8D,0x1
0000d70a(4): OR RAX,-0x1
0000d70e(5): JMP 0x0000d597
0000d718(2): XOR EDI,EDI
0000d71a(4): CMP byte ptr [RCX + 0x2],0x42
0000d71e(5): MOV ESI,0x400
0000d723(4): SETZ DIL
0000d727(4): LEA EDI,[RDI + RDI*0x1 + 0x1]
0000d72b(5): JMP 0x0000d56a
0000d730(5): CALL 0x00002560
0000d735(7): LEA RCX,[0x22548]
0000d73c(7): LEA RSI,[0x22340]
0000d743(7): LEA RDI,[0x22360]
0000d74a(5): MOV EDX,0x54
0000d74f(5): CALL 0x00002600
0000d754(6): MOV R9D,0x1
0000d75a(4): OR RBX,-0x1
0000d75e(5): JMP 0x0000d6cb
0000d763(6): MOV R9D,0x1
0000d769(4): OR RBX,-0x1
0000d76d(5): JMP 0x0000d667
0000d772(6): MOV R8D,0x1
0000d778(4): OR RBX,-0x1
0000d77c(5): JMP 0x0000d5a3
0000d781(4): OR RAX,-0x1
0000d785(6): MOV R8D,0x1
0000d78b(5): JMP 0x0000d597
0000d790(6): MOV R9D,0x1
0000d796(4): OR RBX,-0x1
0000d79a(5): JMP 0x0000d647
0000d79f(6): MOV R9D,0x1
0000d7a5(4): OR RBX,-0x1
0000d7a9(5): JMP 0x0000d6a8
0000d7ae(6): MOV R9D,0x1
0000d7b4(4): OR RBX,-0x1
0000d7b8(5): JMP 0x0000d61f
0000d7bd(6): MOV R8D,0x1
0000d7c3(4): OR RAX,-0x1
0000d7c7(5): JMP 0x0000d6fb
0000d7d0(2): PUSH R13
0000d7d2(2): PUSH R12
0000d7d4(3): MOV R10D,ESI
0000d7d7(1): PUSH RBP
0000d7d8(1): PUSH RBX
0000d7d9(3): MOV R12,R8
0000d7dc(4): SUB RSP,0x18
0000d7e0(9): MOV RAX,qword ptr FS:[0x28]
0000d7e9(5): MOV qword ptr [RSP + 0x8],RAX
0000d7ee(2): XOR EAX,EAX
0000d7f0(3): CMP EDI,0x3
0000d7f3(6): MOV EBP,dword ptr [0x00228028]
0000d7f9(2): JA 0x0000d854
0000d7fb(3): CMP EDI,0x2
0000d7fe(2): JNC 0x0000d84b
0000d800(3): SUB EDI,0x1
0000d803(7): LEA RSI,[0x2256c]
0000d80a(2): JNZ 0x0000d846
0000d80c(3): TEST R10D,R10D
0000d80f(3): MOVSXD RAX,R10D
0000d812(2): JS 0x0000d862
0000d814(4): SHL RAX,0x5
0000d818(7): LEA RBX,[0x22589]
0000d81f(4): MOV R13,qword ptr [RCX + RAX*0x1]
0000d823(5): MOV EDX,0x5
0000d828(2): XOR EDI,EDI
0000d82a(5): CALL 0x00002510
0000d82f(3): MOV R9,R12
0000d832(3): MOV RDX,RAX
0000d835(3): MOV R8,R13
0000d838(3): MOV RCX,RBX
0000d83b(2): XOR ESI,ESI
0000d83d(2): MOV EDI,EBP
0000d83f(2): XOR EAX,EAX
0000d841(5): CALL 0x000028a0
0000d846(5): CALL 0x00002400
0000d84b(7): LEA RSI,[0x22590]
0000d852(2): JMP 0x0000d80c
0000d854(3): CMP EDI,0x4
0000d857(7): LEA RSI,[0x22551]
0000d85e(2): JZ 0x0000d80c
0000d860(2): JMP 0x0000d846
0000d862(7): LEA RBX,[0x22589]
0000d869(4): MOV byte ptr [RSP + 0x6],DL
0000d86d(5): MOV byte ptr [RSP + 0x7],0x0
0000d872(5): LEA R13,[RSP + 0x6]
0000d877(3): SUB RBX,RAX
0000d87a(2): JMP 0x0000d823
0000d880(2): PUSH R15
0000d882(2): PUSH R14
0000d884(2): PUSH R13
0000d886(2): PUSH R12
0000d888(1): PUSH RBP
0000d889(1): PUSH RBX
0000d88a(4): SUB RSP,0x28
0000d88e(9): MOV RAX,qword ptr FS:[0x28]
0000d897(5): MOV qword ptr [RSP + 0x18],RAX
0000d89c(2): XOR EAX,EAX
0000d89e(3): CMP EDX,0x24
0000d8a1(6): JA 0x0000dc05
0000d8a7(5): LEA RAX,[RSP + 0x10]
0000d8ac(3): MOV R15,RSI
0000d8af(3): TEST RSI,RSI
0000d8b2(3): MOV RBP,RDI
0000d8b5(4): MOV dword ptr [RSP + 0x8],EDX
0000d8b9(3): MOV R14,RCX
0000d8bc(3): MOV R13,R8
0000d8bf(4): CMOVZ R15,RAX
0000d8c3(5): CALL 0x00002410
0000d8c8(6): MOV dword ptr [RAX],0x0
0000d8ce(3): MOV R12,RAX
0000d8d1(4): MOVZX EBX,byte ptr [RBP]
0000d8d5(5): CALL 0x000029f0
0000d8da(4): MOV EDX,dword ptr [RSP + 0x8]
0000d8de(3): MOV RSI,qword ptr [RAX]
0000d8e1(3): MOV RAX,RBP
0000d8e4(2): JMP 0x0000d8f7
0000d8f0(4): ADD RAX,0x1
0000d8f4(3): MOVZX EBX,byte ptr [RAX]
0000d8f7(3): MOVZX ECX,BL
0000d8fa(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x20
0000d8ff(2): JNZ 0x0000d8f0
0000d901(3): CMP BL,0x2d
0000d904(2): JZ 0x0000d958
0000d906(2): XOR ECX,ECX
0000d908(3): MOV RSI,R15
0000d90b(3): MOV RDI,RBP
0000d90e(5): CALL 0x00002610
0000d913(3): MOV RCX,qword ptr [R15]
0000d916(3): MOV RBX,RAX
0000d919(3): CMP RCX,RBP
0000d91c(2): JZ 0x0000d948
0000d91e(4): MOV EAX,dword ptr [R12]
0000d922(2): TEST EAX,EAX
0000d924(2): JZ 0x0000d988
0000d926(3): CMP EAX,0x22
0000d929(5): MOV EBP,0x1
0000d92e(2): JNZ 0x0000d958
0000d930(3): TEST R13,R13
0000d933(2): JZ 0x0000d93e
0000d935(4): MOVZX R12D,byte ptr [RCX]
0000d939(3): TEST R12B,R12B
0000d93c(2): JNZ 0x0000d9b7
0000d93e(3): MOV qword ptr [R14],RBX
0000d941(2): JMP 0x0000d95d
0000d948(3): TEST R13,R13
0000d94b(5): MOV qword ptr [RSP + 0x8],RCX
0000d950(2): JNZ 0x0000d990
0000d952(6): NOP word ptr [RAX + RAX*0x1]
0000d958(5): MOV EBP,0x4
0000d95d(5): MOV RDI,qword ptr [RSP + 0x18]
0000d962(9): XOR RDI,qword ptr FS:[0x28]
0000d96b(2): MOV EAX,EBP
0000d96d(6): JNZ 0x0000dc00
0000d973(4): ADD RSP,0x28
0000d977(1): POP RBX
0000d978(1): POP RBP
0000d979(2): POP R12
0000d97b(2): POP R13
0000d97d(2): POP R14
0000d97f(2): POP R15
0000d981(1): RET
0000d988(2): XOR EBP,EBP
0000d98a(2): JMP 0x0000d930
0000d990(5): MOVZX R12D,byte ptr [RBP]
0000d995(3): TEST R12B,R12B
0000d998(2): JZ 0x0000d958
0000d99a(4): MOVSX ESI,R12B
0000d99e(3): MOV RDI,R13
0000d9a1(2): XOR EBP,EBP
0000d9a3(5): CALL 0x000025a0
0000d9a8(3): TEST RAX,RAX
0000d9ab(5): MOV EBX,0x1
0000d9b0(5): MOV RCX,qword ptr [RSP + 0x8]
0000d9b5(2): JZ 0x0000d958
0000d9b7(4): MOVSX ESI,R12B
0000d9bb(3): MOV RDI,R13
0000d9be(5): MOV qword ptr [RSP + 0x8],RCX
0000d9c3(5): CALL 0x000025a0
0000d9c8(3): TEST RAX,RAX
0000d9cb(5): MOV RCX,qword ptr [RSP + 0x8]
0000d9d0(6): JZ 0x0000da9c
0000d9d6(5): LEA EAX,[R12 + -0x45]
0000d9db(2): CMP AL,0x2f
0000d9dd(2): JA 0x0000da30
0000d9df(10): MOV RDX,0x814400308945
0000d9e9(4): BT RDX,RAX
0000d9ed(2): JNC 0x0000da30
0000d9ef(5): MOV ESI,0x30
0000d9f4(3): MOV RDI,R13
0000d9f7(5): MOV qword ptr [RSP + 0x8],RCX
0000d9fc(5): CALL 0x000025a0
0000da01(3): TEST RAX,RAX
0000da04(5): MOV RCX,qword ptr [RSP + 0x8]
0000da09(2): JZ 0x0000da30
0000da0b(4): MOVZX EAX,byte ptr [RCX + 0x1]
0000da0f(2): CMP AL,0x44
0000da11(2): JZ 0x0000da1f
0000da13(2): CMP AL,0x69
0000da15(6): JZ 0x0000dbe8
0000da1b(2): CMP AL,0x42
0000da1d(2): JNZ 0x0000da30
0000da1f(5): MOV EDI,0x2
0000da24(5): MOV ESI,0x3e8
0000da29(2): JMP 0x0000da3a
0000da30(5): MOV EDI,0x1
0000da35(5): MOV ESI,0x400
0000da3a(4): SUB R12D,0x42
0000da3e(4): CMP R12B,0x35
0000da42(2): JA 0x0000da9c
0000da44(7): LEA RDX,[0x225b8]
0000da4b(4): MOVZX R12D,R12B
0000da4f(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
0000da53(3): ADD RAX,RDX
0000da56(2): JMP RAX
0000da58(3): MOV RAX,RBX
0000da5b(3): MUL RSI
0000da5e(6): JO 0x0000dc51
0000da64(3): XOR R8D,R8D
0000da67(3): MUL RSI
0000da6a(6): JO 0x0000dc42
0000da70(3): MOV RBX,RAX
0000da73(3): OR EBP,R8D
0000da76(10): NOP word ptr CS:[RAX + RAX*0x1]
0000da80(3): MOVSXD RDI,EDI
0000da83(2): MOV EAX,EBP
0000da85(3): ADD RCX,RDI
0000da88(3): OR EAX,0x2
0000da8b(3): MOV qword ptr [R15],RCX
0000da8e(3): CMP byte ptr [RCX],0x0
0000da91(3): MOV qword ptr [R14],RBX
0000da94(3): CMOVNZ EBP,EAX
0000da97(5): JMP 0x0000d95d
0000da9c(3): MOV qword ptr [R14],RBX
0000da9f(3): OR EBP,0x2
0000daa2(5): JMP 0x0000d95d
0000daa7(5): MOV EDX,0x2
0000daac(3): MOV RAX,RDX
0000daaf(3): MUL RBX
0000dab2(6): JO 0x0000db4e
0000dab8(3): ADD RBX,RBX
0000dabb(2): JMP 0x0000da80
0000dabd(5): MOV EDX,0x200
0000dac2(3): MOV RAX,RDX
0000dac5(3): MUL RBX
0000dac8(6): JO 0x0000db4e
0000dace(4): SHL RBX,0x9
0000dad2(2): JMP 0x0000da80
0000dad4(6): MOV R8D,0x7
0000dada(3): XOR R9D,R9D
0000dadd(3): NOP dword ptr [RAX]
0000dae0(3): MOV RAX,RBX
0000dae3(3): MUL RSI
0000dae6(3): MOV RBX,RAX
0000dae9(6): JO 0x0000dc7e
0000daef(4): SUB R8D,0x1
0000daf3(2): JNZ 0x0000dae0
0000daf5(3): OR EBP,R9D
0000daf8(2): JMP 0x0000da80
0000dafa(6): MOV R8D,0x8
0000db00(3): XOR R9D,R9D
0000db03(5): NOP dword ptr [RAX + RAX*0x1]
0000db08(3): MOV RAX,RBX
0000db0b(3): MUL RSI
0000db0e(3): MOV RBX,RAX
0000db11(6): JO 0x0000dc60
0000db17(4): SUB R8D,0x1
0000db1b(2): JNZ 0x0000db08
0000db1d(2): JMP 0x0000daf5
0000db1f(6): MOV R8D,0x4
0000db25(3): XOR R9D,R9D
0000db28(3): MOV RAX,RBX
0000db2b(3): MUL RSI
0000db2e(3): MOV RBX,RAX
0000db31(6): JO 0x0000dc33
0000db37(4): SUB R8D,0x1
0000db3b(2): JNZ 0x0000db28
0000db3d(2): JMP 0x0000daf5
0000db3f(3): MOV RAX,RBX
0000db42(3): MUL RSI
0000db45(3): MOV RBX,RAX
0000db48(6): JNO 0x0000da80
0000db4e(5): MOV EBP,0x1
0000db53(4): OR RBX,-0x1
0000db57(5): JMP 0x0000da80
0000db60(6): MOV R8D,0x5
0000db66(3): XOR R9D,R9D
0000db69(3): MOV RAX,RBX
0000db6c(3): MUL RSI
0000db6f(3): MOV RBX,RAX
0000db72(6): JO 0x0000dc6f
0000db78(4): SUB R8D,0x1
0000db7c(2): JNZ 0x0000db69
0000db7e(5): JMP 0x0000daf5
0000db83(6): MOV R8D,0x6
0000db89(3): XOR R9D,R9D
0000db8c(3): MOV RAX,RBX
0000db8f(3): MUL RSI
0000db92(3): MOV RBX,RAX
0000db95(6): JO 0x0000dc24
0000db9b(4): SUB R8D,0x1
0000db9f(2): JNZ 0x0000db8c
0000dba1(5): JMP 0x0000daf5
0000dba6(5): MOV EDX,0x400
0000dbab(3): MOV RAX,RDX
0000dbae(3): MUL RBX
0000dbb1(2): JO 0x0000db4e
0000dbb3(4): SHL RBX,0xa
0000dbb7(5): JMP 0x0000da80
0000dbbc(3): MOV RAX,RBX
0000dbbf(3): MUL RSI
0000dbc2(6): JO 0x0000dc8d
0000dbc8(3): XOR R8D,R8D
0000dbcb(3): MUL RSI
0000dbce(6): JNO 0x0000da67
0000dbd4(6): MOV R8D,0x1
0000dbda(4): OR RAX,-0x1
0000dbde(5): JMP 0x0000da67
0000dbe8(2): XOR EDI,EDI
0000dbea(4): CMP byte ptr [RCX + 0x2],0x42
0000dbee(5): MOV ESI,0x400
0000dbf3(4): SETZ DIL
0000dbf7(4): LEA EDI,[RDI + RDI*0x1 + 0x1]
0000dbfb(5): JMP 0x0000da3a
0000dc00(5): CALL 0x00002560
0000dc05(7): LEA RCX,[0x22690]
0000dc0c(7): LEA RSI,[0x22340]
0000dc13(7): LEA RDI,[0x22360]
0000dc1a(5): MOV EDX,0x54
0000dc1f(5): CALL 0x00002600
0000dc24(6): MOV R9D,0x1
0000dc2a(4): OR RBX,-0x1
0000dc2e(5): JMP 0x0000db9b
0000dc33(6): MOV R9D,0x1
0000dc39(4): OR RBX,-0x1
0000dc3d(5): JMP 0x0000db37
0000dc42(6): MOV R8D,0x1
0000dc48(4): OR RBX,-0x1
0000dc4c(5): JMP 0x0000da73
0000dc51(4): OR RAX,-0x1
0000dc55(6): MOV R8D,0x1
0000dc5b(5): JMP 0x0000da67
0000dc60(6): MOV R9D,0x1
0000dc66(4): OR RBX,-0x1
0000dc6a(5): JMP 0x0000db17
0000dc6f(6): MOV R9D,0x1
0000dc75(4): OR RBX,-0x1
0000dc79(5): JMP 0x0000db78
0000dc7e(6): MOV R9D,0x1
0000dc84(4): OR RBX,-0x1
0000dc88(5): JMP 0x0000daef
0000dc8d(6): MOV R8D,0x1
0000dc93(4): OR RAX,-0x1
0000dc97(5): JMP 0x0000dbcb
0000dca0(2): PUSH R12
0000dca2(1): PUSH RBP
0000dca3(1): PUSH RBX
0000dca4(3): MOV RBX,RDI
0000dca7(5): CALL 0x00002730
0000dcac(2): TEST EAX,EAX
0000dcae(3): MOV RDI,RBX
0000dcb1(2): JS 0x0000dd07
0000dcb3(5): CALL 0x00002810
0000dcb8(2): TEST EAX,EAX
0000dcba(2): JNZ 0x0000dce8
0000dcbc(3): MOV RDI,RBX
0000dcbf(5): CALL 0x0000dd20
0000dcc4(2): TEST EAX,EAX
0000dcc6(2): JZ 0x0000dd04
0000dcc8(5): CALL 0x00002410
0000dccd(3): MOV R12D,dword ptr [RAX]
0000dcd0(3): MOV RDI,RBX
0000dcd3(3): MOV RBP,RAX
0000dcd6(5): CALL 0x000024f0
0000dcdb(3): TEST R12D,R12D
0000dcde(2): JNZ 0x0000dd10
0000dce0(1): POP RBX
0000dce1(1): POP RBP
0000dce2(2): POP R12
0000dce4(1): RET
0000dce8(3): MOV RDI,RBX
0000dceb(5): CALL 0x00002730
0000dcf0(2): XOR ESI,ESI
0000dcf2(5): MOV EDX,0x1
0000dcf7(2): MOV EDI,EAX
0000dcf9(5): CALL 0x000025f0
0000dcfe(4): CMP RAX,-0x1
0000dd02(2): JNZ 0x0000dcbc
0000dd04(3): MOV RDI,RBX
0000dd07(1): POP RBX
0000dd08(1): POP RBP
0000dd09(2): POP R12
0000dd0b(5): JMP 0x000024f0
0000dd10(4): MOV dword ptr [RBP],R12D
0000dd14(5): MOV EAX,0xffffffff
0000dd19(2): JMP 0x0000dce0
0000dd20(3): TEST RDI,RDI
0000dd23(1): PUSH RBX
0000dd24(3): MOV RBX,RDI
0000dd27(2): JZ 0x0000dd3a
0000dd29(5): CALL 0x00002810
0000dd2e(2): TEST EAX,EAX
0000dd30(2): JZ 0x0000dd3a
0000dd32(6): TEST dword ptr [RBX],0x100
0000dd38(2): JNZ 0x0000dd48
0000dd3a(3): MOV RDI,RBX
0000dd3d(1): POP RBX
0000dd3e(5): JMP 0x000027a0
0000dd48(3): MOV RDI,RBX
0000dd4b(5): MOV EDX,0x1
0000dd50(2): XOR ESI,ESI
0000dd52(5): CALL 0x0000dd60
0000dd57(3): MOV RDI,RBX
0000dd5a(1): POP RBX
0000dd5b(5): JMP 0x000027a0
0000dd60(4): MOV RAX,qword ptr [RDI + 0x8]
0000dd64(4): CMP qword ptr [RDI + 0x10],RAX
0000dd68(2): JZ 0x0000dd70
0000dd6a(5): JMP 0x000028c0
0000dd70(4): MOV RAX,qword ptr [RDI + 0x20]
0000dd74(4): CMP qword ptr [RDI + 0x28],RAX
0000dd78(2): JNZ 0x0000dd6a
0000dd7a(5): CMP qword ptr [RDI + 0x48],0x0
0000dd7f(2): JNZ 0x0000dd6a
0000dd81(2): PUSH R12
0000dd83(1): PUSH RBP
0000dd84(3): MOV R12D,EDX
0000dd87(1): PUSH RBX
0000dd88(3): MOV RBP,RSI
0000dd8b(3): MOV RBX,RDI
0000dd8e(5): CALL 0x00002730
0000dd93(3): MOV EDX,R12D
0000dd96(3): MOV RSI,RBP
0000dd99(2): MOV EDI,EAX
0000dd9b(5): CALL 0x000025f0
0000dda0(4): CMP RAX,-0x1
0000dda4(2): JZ 0x0000ddb2
0000dda6(3): AND dword ptr [RBX],0xffffffef
0000dda9(7): MOV qword ptr [0x90 + RBX],RAX
0000ddb0(2): XOR EAX,EAX
0000ddb2(1): POP RBX
0000ddb3(1): POP RBP
0000ddb4(2): POP R12
0000ddb6(1): RET
0000ddc0(2): XOR EAX,EAX
0000ddc2(4): MOV RDX,qword ptr [RSI + 0x8]
0000ddc6(4): CMP qword ptr [RDI + 0x8],RDX
0000ddca(2): JZ 0x0000ddd0
0000ddcc(2): RET
0000ddd0(3): MOV RAX,qword ptr [RSI]
0000ddd3(3): CMP qword ptr [RDI],RAX
0000ddd6(3): SETZ AL
0000ddd9(1): RET
0000dde0(4): MOV RAX,qword ptr [RDI + 0x8]
0000dde4(2): XOR EDX,EDX
0000dde6(3): DIV RSI
0000dde9(3): MOV RAX,RDX
0000ddec(1): RET
0000ddf0(3): MOV RAX,qword ptr [RDI]
0000ddf3(2): XOR EDX,EDX
0000ddf5(3): DIV RSI
0000ddf8(3): MOV RAX,RDX
0000ddfb(1): RET
0000de00(3): MOV RAX,qword ptr [RSI]
0000de03(3): CMP qword ptr [RDI],RAX
0000de06(3): SETZ AL
0000de09(1): RET
0000de10(3): MOV RDX,qword ptr [RDI]
0000de13(3): MOV RAX,qword ptr [RSI]
0000de16(7): MOV RAX,qword ptr [0x80 + RAX]
0000de1d(7): CMP qword ptr [0x80 + RDX],RAX
0000de24(2): JC 0x0000de30
0000de26(3): SETA AL
0000de29(3): MOVZX EAX,AL
0000de2c(1): RET
0000de30(5): MOV EAX,0xffffffff
0000de35(1): RET
0000de40(2): PUSH R12
0000de42(1): PUSH RBP
0000de43(3): MOV RBP,RSI
0000de46(1): PUSH RBX
0000de47(5): CMP qword ptr [RBP + 0x58],0x0
0000de4c(4): LEA RBX,[RSI + 0x78]
0000de50(3): MOV R12,RDI
0000de53(3): MOV EAX,dword ptr [RDI + 0x48]
0000de56(4): MOV RSI,qword ptr [RSI + 0x30]
0000de5a(2): JNZ 0x0000dec0
0000de5c(2): TEST AL,0x1
0000de5e(2): JZ 0x0000dec0
0000de60(3): MOV RDX,RBX
0000de63(5): MOV EDI,0x1
0000de68(5): CALL 0x00002740
0000de6d(2): TEST EAX,EAX
0000de6f(2): JZ 0x0000deeb
0000de71(5): CALL 0x00002410
0000de76(3): MOV R12,RAX
0000de79(2): MOV EAX,dword ptr [RAX]
0000de7b(3): CMP EAX,0x2
0000de7e(6): JZ 0x0000df90
0000de84(4): LEA RDI,[RBX + 0x8]
0000de88(3): MOV dword ptr [RBP + 0x40],EAX
0000de8b(8): MOV qword ptr [RBP + 0x78],0x0
0000de93(11): MOV qword ptr [0x88 + RBX],0x0
0000de9e(2): XOR EAX,EAX
0000dea0(4): AND RDI,-0x8
0000dea4(3): SUB RBX,RDI
0000dea7(6): LEA ECX,[0x90 + RBX]
0000dead(3): SHR ECX,0x3
0000deb0(3): STOSQ.REP RDI
0000deb3(5): MOV EAX,0xa
0000deb8(1): POP RBX
0000deb9(1): POP RBP
0000deba(2): POP R12
0000debc(1): RET
0000dec0(2): TEST AL,0x2
0000dec2(2): JNZ 0x0000de60
0000dec4(2): TEST DL,DL
0000dec6(2): JNZ 0x0000de60
0000dec8(3): MOV RDX,RSI
0000decb(5): MOV ESI,dword ptr [R12 + 0x2c]
0000ded0(6): MOV R8D,0x100
0000ded6(3): MOV RCX,RBX
0000ded9(5): MOV EDI,0x1
0000dede(5): CALL 0x000025b0
0000dee3(2): TEST EAX,EAX
0000dee5(6): JNZ 0x0000df80
0000deeb(6): MOV EAX,dword ptr [0x90 + RBP]
0000def1(5): AND EAX,0xf000
0000def6(5): CMP EAX,0x4000
0000defb(2): JZ 0x0000df20
0000defd(5): CMP EAX,0xa000
0000df02(6): JZ 0x0000dfd8
0000df08(5): CMP EAX,0x8000
0000df0d(3): SETZ AL
0000df10(3): MOVZX EAX,AL
0000df13(1): POP RBX
0000df14(4): LEA EAX,[RAX + RAX*0x4 + 0x3]
0000df18(1): POP RBP
0000df19(2): POP R12
0000df1b(1): RET
0000df20(7): MOV RAX,qword ptr [0x88 + RBP]
0000df27(4): CMP RAX,0x1
0000df2b(6): JBE 0x0000dfb0
0000df31(5): CMP qword ptr [RBP + 0x58],0x0
0000df36(2): JLE 0x0000dfb0
0000df38(6): TEST byte ptr [R12 + 0x48],0x20
0000df3e(4): LEA RDX,[RAX + -0x2]
0000df42(4): CMOVZ RAX,RDX
0000df46(7): CMP byte ptr [0x108 + RBP],0x2e
0000df4d(4): MOV qword ptr [RBP + 0x68],RAX
0000df51(5): MOV EAX,0x1
0000df56(6): JNZ 0x0000deb8
0000df5c(7): CMP byte ptr [0x109 + RBP],0x0
0000df63(6): JNZ 0x0000dfe8
0000df69(5): CMP qword ptr [RBP + 0x58],0x1
0000df6e(2): SBB EAX,EAX
0000df70(3): AND EAX,0xfffffffc
0000df73(3): ADD EAX,0x5
0000df76(5): JMP 0x0000deb8
0000df80(5): CALL 0x00002410
0000df85(2): MOV EAX,dword ptr [RAX]
0000df87(5): JMP 0x0000de84
0000df90(4): MOV RSI,qword ptr [RBP + 0x30]
0000df94(3): MOV RDX,RBX
0000df97(5): MOV EDI,0x1
0000df9c(5): CALL 0x00002540
0000dfa1(2): TEST EAX,EAX
0000dfa3(2): JZ 0x0000dfc0
0000dfa5(4): MOV EAX,dword ptr [R12]
0000dfa9(5): JMP 0x0000de84
0000dfb0(7): MOV RAX,-0x1
0000dfb7(2): JMP 0x0000df46
0000dfc0(8): MOV dword ptr [R12],0x0
0000dfc8(5): MOV EAX,0xd
0000dfcd(5): JMP 0x0000deb8
0000dfd8(5): MOV EAX,0xc
0000dfdd(5): JMP 0x0000deb8
0000dfe8(6): MOV EDX,dword ptr [0x108 + RBP]
0000dfee(6): AND EDX,0xffff00
0000dff4(6): CMP EDX,0x2e00
0000dffa(6): JNZ 0x0000deb8
0000e000(5): JMP 0x0000df69
0000e010(2): PUSH R13
0000e012(2): PUSH R12
0000e014(3): MOV R12,RDX
0000e017(1): PUSH RBP
0000e018(1): PUSH RBX
0000e019(3): MOV RBP,RDI
0000e01c(3): MOV RBX,RSI
0000e01f(4): SUB RSP,0x8
0000e023(4): CMP qword ptr [RBP + 0x38],RDX
0000e027(4): MOV R13,qword ptr [RDI + 0x40]
0000e02b(4): MOV RDI,qword ptr [RDI + 0x10]
0000e02f(2): JNC 0x0000e065
0000e031(4): LEA RSI,[RDX + 0x28]
0000e035(10): MOV RAX,0x1fffffffffffffff
0000e03f(3): CMP RSI,RAX
0000e042(4): MOV qword ptr [RBP + 0x38],RSI
0000e046(6): JA 0x0000e0e4
0000e04c(4): SHL RSI,0x3
0000e050(5): CALL 0x00002830
0000e055(3): TEST RAX,RAX
0000e058(3): MOV RDI,RAX
0000e05b(6): JZ 0x0000e0e0
0000e061(4): MOV qword ptr [RBP + 0x10],RAX
0000e065(3): TEST RBX,RBX
0000e068(2): JZ 0x0000e081
0000e06a(3): MOV RDX,RDI
0000e06d(3): NOP dword ptr [RAX]
0000e070(4): ADD RDX,0x8
0000e074(4): MOV qword ptr [RDX + -0x8],RBX
0000e078(4): MOV RBX,qword ptr [RBX + 0x10]
0000e07c(3): TEST RBX,RBX
0000e07f(2): JNZ 0x0000e070
0000e081(3): MOV RCX,R13
0000e084(5): MOV EDX,0x8
0000e089(3): MOV RSI,R12
0000e08c(5): CALL 0x00002470
0000e091(4): MOV R8,qword ptr [RBP + 0x10]
0000e095(3): MOV RCX,R12
0000e098(4): SUB RCX,0x1
0000e09c(3): MOV RAX,qword ptr [R8]
0000e09f(2): JZ 0x0000e110
0000e0a1(3): MOV RDI,RAX
0000e0a4(3): MOV RDX,R8
0000e0a7(2): JMP 0x0000e0b3
0000e0b0(3): MOV RDI,qword ptr [RDX]
0000e0b3(4): MOV RSI,qword ptr [RDX + 0x8]
0000e0b7(4): ADD RDX,0x8
0000e0bb(4): SUB RCX,0x1
0000e0bf(4): MOV qword ptr [RDI + 0x10],RSI
0000e0c3(2): JNZ 0x0000e0b0
0000e0c5(5): MOV RDX,qword ptr [R8 + R12*0x8 + -0x8]
0000e0ca(8): MOV qword ptr [RDX + 0x10],0x0
0000e0d2(4): ADD RSP,0x8
0000e0d6(1): POP RBX
0000e0d7(1): POP RBP
0000e0d8(2): POP R12
0000e0da(2): POP R13
0000e0dc(1): RET
0000e0e0(4): MOV RDI,qword ptr [RBP + 0x10]
0000e0e4(5): CALL 0x00002a10
0000e0e9(8): MOV qword ptr [RBP + 0x10],0x0
0000e0f1(8): MOV qword ptr [RBP + 0x38],0x0
0000e0f9(4): ADD RSP,0x8
0000e0fd(3): MOV RAX,RBX
0000e100(1): POP RBX
0000e101(1): POP RBP
0000e102(2): POP R12
0000e104(2): POP R13
0000e106(1): RET
0000e110(3): MOV RDX,RAX
0000e113(2): JMP 0x0000e0ca
0000e120(2): PUSH R13
0000e122(2): PUSH R12
0000e124(3): MOV R12,RDI
0000e127(1): PUSH RBP
0000e128(7): LEA RDI,[0x110 + RDX]
0000e12f(1): PUSH RBX
0000e130(3): MOV R13,RSI
0000e133(3): MOV RBP,RDX
0000e136(4): SUB RSP,0x8
0000e13a(4): AND RDI,-0x8
0000e13e(5): CALL 0x00002780
0000e143(3): TEST RAX,RAX
0000e146(3): MOV RBX,RAX
0000e149(2): JZ 0x0000e19c
0000e14b(7): LEA RDI,[0x108 + RAX]
0000e152(3): MOV RDX,RBP
0000e155(3): MOV RSI,R13
0000e158(5): CALL 0x00002710
0000e15d(5): MOV RAX,qword ptr [R12 + 0x20]
0000e162(8): MOV byte ptr [0x108 + RBX + RBP*0x1],0x0
0000e16a(4): MOV qword ptr [RBX + 0x60],RBP
0000e16e(4): MOV qword ptr [RBX + 0x50],R12
0000e172(7): MOV dword ptr [RBX + 0x40],0x0
0000e179(8): MOV qword ptr [RBX + 0x18],0x0
0000e181(4): MOV qword ptr [RBX + 0x38],RAX
0000e185(7): MOV dword ptr [RBX + 0x72],0x30000
0000e18c(8): MOV qword ptr [RBX + 0x20],0x0
0000e194(8): MOV qword ptr [RBX + 0x28],0x0
0000e19c(4): ADD RSP,0x8
0000e1a0(3): MOV RAX,RBX
0000e1a3(1): POP RBX
0000e1a4(1): POP RBP
0000e1a5(2): POP R12
0000e1a7(2): POP R13
0000e1a9(1): RET
0000e1b0(3): TEST RDI,RDI
0000e1b3(2): JZ 0x0000e1f0
0000e1b5(1): PUSH RBP
0000e1b6(1): PUSH RBX
0000e1b7(3): MOV RBX,RDI
0000e1ba(4): SUB RSP,0x8
0000e1be(2): NOP
0000e1c0(4): MOV RDI,qword ptr [RBX + 0x18]
0000e1c4(4): MOV RBP,qword ptr [RBX + 0x10]
0000e1c8(3): TEST RDI,RDI
0000e1cb(2): JZ 0x0000e1d2
0000e1cd(5): CALL 0x00002650
0000e1d2(3): MOV RDI,RBX
0000e1d5(3): MOV RBX,RBP
0000e1d8(5): CALL 0x00002a10
0000e1dd(3): TEST RBP,RBP
0000e1e0(2): JNZ 0x0000e1c0
0000e1e2(4): ADD RSP,0x8
0000e1e6(1): POP RBX
0000e1e7(1): POP RBP
0000e1e8(1): RET
0000e1f0(2): RET
0000e200(1): PUSH RBX
0000e201(3): MOV RBX,RDI
0000e204(2): JMP 0x0000e21c
0000e210(3): MOV RDI,RBX
0000e213(5): CALL 0x0001f580
0000e218(2): TEST EAX,EAX
0000e21a(2): JNS 0x0000e230
0000e21c(3): MOV RDI,RBX
0000e21f(5): CALL 0x0001f530
0000e224(2): TEST AL,AL
0000e226(2): JZ 0x0000e210
0000e228(1): POP RBX
0000e229(1): RET
0000e230(2): MOV EDI,EAX
0000e232(5): CALL 0x00002640
0000e237(2): JMP 0x0000e21c
0000e240(2): PUSH R13
0000e242(2): PUSH R12
0000e244(1): PUSH RBP
0000e245(1): PUSH RBX
0000e246(7): SUB RSP,0x98
0000e24d(4): MOV RBX,qword ptr [RDI + 0x50]
0000e251(9): MOV RAX,qword ptr FS:[0x28]
0000e25a(8): MOV qword ptr [0x88 + RSP],RAX
0000e262(2): XOR EAX,EAX
0000e264(4): TEST byte ptr [RBX + 0x49],0x2
0000e268(2): JZ 0x0000e2d2
0000e26a(4): MOV R12,qword ptr [RBX + 0x50]
0000e26e(3): MOV RBP,RDI
0000e271(3): MOV R13D,ESI
0000e274(3): TEST R12,R12
0000e277(2): JZ 0x0000e2a0
0000e279(4): MOV RAX,qword ptr [RBP + 0x78]
0000e27d(3): MOV RSI,RSP
0000e280(3): MOV RDI,R12
0000e283(4): MOV qword ptr [RSP],RAX
0000e287(5): CALL 0x000082f0
0000e28c(3): TEST RAX,RAX
0000e28f(2): JZ 0x0000e2cd
0000e291(4): MOV RBX,qword ptr [RAX + 0x8]
0000e295(2): JMP 0x0000e2d4
0000e2a0(7): MOV R8,qword ptr [0x00227fc8]
0000e2a7(7): LEA RCX,[0xde00]
0000e2ae(7): LEA RDX,[0xddf0]
0000e2b5(2): XOR ESI,ESI
0000e2b7(5): MOV EDI,0xd
0000e2bc(5): CALL 0x00008560
0000e2c1(3): TEST RAX,RAX
0000e2c4(3): MOV R12,RAX
0000e2c7(4): MOV qword ptr [RBX + 0x50],RAX
0000e2cb(2): JNZ 0x0000e279
0000e2cd(3): TEST R13D,R13D
0000e2d0(2): JNS 0x0000e300
0000e2d2(2): XOR EBX,EBX
0000e2d4(8): MOV RDX,qword ptr [0x88 + RSP]
0000e2dc(9): XOR RDX,qword ptr FS:[0x28]
0000e2e5(3): MOV RAX,RBX
0000e2e8(2): JNZ 0x0000e362
0000e2ea(7): ADD RSP,0x98
0000e2f1(1): POP RBX
0000e2f2(1): POP RBP
0000e2f3(2): POP R12
0000e2f5(2): POP R13
0000e2f7(1): RET
0000e300(5): LEA RSI,[RSP + 0x10]
0000e305(3): MOV EDI,R13D
0000e308(5): CALL 0x00002930
0000e30d(2): TEST EAX,EAX
0000e30f(2): JNZ 0x0000e2d2
0000e311(3): TEST R12,R12
0000e314(5): MOV RBX,qword ptr [RSP + 0x10]
0000e319(2): JZ 0x0000e2d4
0000e31b(5): MOV EDI,0x10
0000e320(5): CALL 0x00002780
0000e325(3): TEST RAX,RAX
0000e328(3): MOV R13,RAX
0000e32b(2): JZ 0x0000e2d4
0000e32d(4): MOV RAX,qword ptr [RBP + 0x78]
0000e331(4): MOV qword ptr [R13 + 0x8],RBX
0000e335(3): MOV RSI,R13
0000e338(3): MOV RDI,R12
0000e33b(4): MOV qword ptr [R13],RAX
0000e33f(5): CALL 0x00008d60
0000e344(3): TEST RAX,RAX
0000e347(2): JZ 0x0000e358
0000e349(3): CMP R13,RAX
0000e34c(2): JNZ 0x0000e367
0000e34e(5): MOV RBX,qword ptr [RSP + 0x10]
0000e353(5): JMP 0x0000e2d4
0000e358(3): MOV RDI,R13
0000e35b(5): CALL 0x00002a10
0000e360(2): JMP 0x0000e34e
0000e362(5): CALL 0x00002560
0000e367(5): CALL 0x00002400
0000e36c(4): NOP dword ptr [RAX]
0000e370(4): SUB RSP,0x8
0000e374(5): CALL 0x0000e240
0000e379(6): CMP RAX,0x52654973
0000e37f(2): JZ 0x0000e3d0
0000e381(2): JLE 0x0000e3b0
0000e383(6): CMP RAX,0x58465342
0000e389(2): JZ 0x0000e3d0
0000e38b(5): MOV EDX,0xff534d42
0000e390(3): CMP RAX,RDX
0000e393(2): JZ 0x0000e3c5
0000e395(6): CMP RAX,0x5346414f
0000e39b(2): JZ 0x0000e3c5
0000e39d(5): MOV EAX,0x1
0000e3a2(4): ADD RSP,0x8
0000e3a6(1): RET
0000e3b0(6): CMP RAX,0x6969
0000e3b6(2): JZ 0x0000e3c5
0000e3b8(6): CMP RAX,0x9fa0
0000e3be(2): JZ 0x0000e3c5
0000e3c0(3): TEST RAX,RAX
0000e3c3(2): JNZ 0x0000e39d
0000e3c5(2): XOR EAX,EAX
0000e3c7(4): ADD RSP,0x8
0000e3cb(1): RET
0000e3d0(5): MOV EAX,0x2
0000e3d5(4): ADD RSP,0x8
0000e3d9(1): RET
0000e3e0(1): PUSH RBP
0000e3e1(1): PUSH RBX
0000e3e2(2): MOV EBP,ESI
0000e3e4(3): MOV RBX,RDI
0000e3e7(4): SUB RSP,0x8
0000e3eb(3): MOV ESI,dword ptr [RDI + 0x2c]
0000e3ee(2): CMP ESI,EBP
0000e3f0(2): JNZ 0x0000e3f7
0000e3f2(3): CMP ESI,-0x64
0000e3f5(2): JNZ 0x0000e441
0000e3f7(2): TEST DL,DL
0000e3f9(2): JNZ 0x0000e410
0000e3fb(4): TEST byte ptr [RBX + 0x48],0x4
0000e3ff(2): JNZ 0x0000e405
0000e401(2): TEST ESI,ESI
0000e403(2): JNS 0x0000e430
0000e405(3): MOV dword ptr [RBX + 0x2c],EBP
0000e408(4): ADD RSP,0x8
0000e40c(1): POP RBX
0000e40d(1): POP RBP
0000e40e(1): RET
0000e410(4): LEA RDI,[RBX + 0x60]
0000e414(5): CALL 0x0001f540
0000e419(2): TEST EAX,EAX
0000e41b(2): JS 0x0000e405
0000e41d(2): MOV EDI,EAX
0000e41f(5): CALL 0x00002640
0000e424(3): MOV dword ptr [RBX + 0x2c],EBP
0000e427(4): ADD RSP,0x8
0000e42b(1): POP RBX
0000e42c(1): POP RBP
0000e42d(1): RET
0000e430(2): MOV EDI,ESI
0000e432(5): CALL 0x00002640
0000e437(3): MOV dword ptr [RBX + 0x2c],EBP
0000e43a(4): ADD RSP,0x8
0000e43e(1): POP RBX
0000e43f(1): POP RBP
0000e440(1): RET
0000e441(5): CALL 0x00002400
0000e446(10): NOP word ptr CS:[RAX + RAX*0x1]
0000e450(1): PUSH RBP
0000e451(1): PUSH RBX
0000e452(3): MOV RBX,RDI
0000e455(4): SUB RSP,0x8
0000e459(3): MOV EDX,dword ptr [RDI + 0x48]
0000e45c(2): MOV EBP,EDX
0000e45e(3): AND EBP,0x4
0000e461(2): JNZ 0x0000e4a8
0000e463(3): AND DH,0x2
0000e466(2): JNZ 0x0000e490
0000e468(3): MOV EDI,dword ptr [RDI + 0x28]
0000e46b(2): XOR EBP,EBP
0000e46d(5): CALL 0x00002820
0000e472(2): TEST EAX,EAX
0000e474(4): SETNZ BPL
0000e478(4): LEA RDI,[RBX + 0x60]
0000e47c(5): CALL 0x0000e200
0000e481(4): ADD RSP,0x8
0000e485(2): MOV EAX,EBP
0000e487(1): POP RBX
0000e488(1): POP RBP
0000e489(1): RET
0000e490(5): MOV EDX,0x1
0000e495(5): MOV ESI,0xffffff9c
0000e49a(5): CALL 0x0000e3e0
0000e49f(2): JMP 0x0000e478
0000e4a8(2): XOR EBP,EBP
0000e4aa(2): JMP 0x0000e478
0000e4b0(1): PUSH RBX
0000e4b1(3): MOV RCX,qword ptr [RSI]
0000e4b4(3): MOV RBX,RDI
0000e4b7(3): MOV RDI,qword ptr [RDI]
0000e4ba(8): LEA RAX,[0x100 + RCX + RDX*0x1]
0000e4c2(3): CMP RCX,RAX
0000e4c5(2): JA 0x0000e4e8
0000e4c7(3): MOV qword ptr [RSI],RAX
0000e4ca(3): MOV RSI,RAX
0000e4cd(5): CALL 0x00002830
0000e4d2(3): TEST RAX,RAX
0000e4d5(2): JZ 0x0000e508
0000e4d7(3): MOV qword ptr [RBX],RAX
0000e4da(5): MOV EAX,0x1
0000e4df(1): POP RBX
0000e4e0(1): RET
0000e4e8(5): CALL 0x00002a10
0000e4ed(7): MOV qword ptr [RBX],0x0
0000e4f4(5): CALL 0x00002410
0000e4f9(6): MOV dword ptr [RAX],0x24
0000e4ff(2): XOR EAX,EAX
0000e501(1): POP RBX
0000e502(1): RET
0000e508(3): MOV RDI,qword ptr [RBX]
0000e50b(5): CALL 0x00002a10
0000e510(7): MOV qword ptr [RBX],0x0
0000e517(2): XOR EAX,EAX
0000e519(1): POP RBX
0000e51a(1): RET
0000e520(6): AND EDI,0x102
0000e526(1): PUSH RBX
0000e527(3): MOV RBX,RSI
0000e52a(2): JZ 0x0000e560
0000e52c(7): MOV R8,qword ptr [0x00227fc8]
0000e533(7): LEA RCX,[0xddc0]
0000e53a(7): LEA RDX,[0xdde0]
0000e541(2): XOR ESI,ESI
0000e543(5): MOV EDI,0x1f
0000e548(5): CALL 0x00008560
0000e54d(3): TEST RAX,RAX
0000e550(3): MOV qword ptr [RBX],RAX
0000e553(3): SETNZ AL
0000e556(1): POP RBX
0000e557(1): RET
0000e560(5): MOV EDI,0x20
0000e565(5): CALL 0x00002780
0000e56a(3): MOV RDI,RAX
0000e56d(3): MOV qword ptr [RBX],RAX
0000e570(2): XOR EAX,EAX
0000e572(3): TEST RDI,RDI
0000e575(2): JZ 0x0000e556
0000e577(5): CALL 0x0001f3a0
0000e57c(5): MOV EAX,0x1
0000e581(1): POP RBX
0000e582(1): RET
0000e590(3): MOV RAX,RDX
0000e593(2): MOV EDX,ESI
0000e595(3): SHL EDX,0xd
0000e598(6): AND EDX,0x20000
0000e59e(6): OR EDX,0x90900
0000e5a4(6): AND ESI,0x200
0000e5aa(2): JNZ 0x0000e5c0
0000e5ac(3): MOV RDI,RAX
0000e5af(2): MOV ESI,EDX
0000e5b1(2): XOR EAX,EAX
0000e5b3(5): JMP 0x0001f440
0000e5c0(3): MOV RSI,RAX
0000e5c3(2): XOR EAX,EAX
0000e5c5(5): JMP 0x0001f600
0000e5d0(2): PUSH R15
0000e5d2(2): PUSH R14
0000e5d4(3): MOV R14,RSI
0000e5d7(2): PUSH R13
0000e5d9(2): PUSH R12
0000e5db(3): MOV R13,RDI
0000e5de(1): PUSH RBP
0000e5df(1): PUSH RBX
0000e5e0(3): MOV R12D,EDX
0000e5e3(3): MOV RBP,RCX
0000e5e6(7): SUB RSP,0xb8
0000e5ed(3): MOV EBX,dword ptr [RDI + 0x48]
0000e5f0(9): MOV RAX,qword ptr FS:[0x28]
0000e5f9(8): MOV qword ptr [0xa8 + RSP],RAX
0000e601(2): XOR EAX,EAX
0000e603(3): MOV R9D,EBX
0000e606(4): AND R9D,0x4
0000e60a(3): TEST RCX,RCX
0000e60d(6): JZ 0x0000e6c0
0000e613(7): LEA RDX,[0x2269b]
0000e61a(5): MOV ECX,0x3
0000e61f(3): MOV RSI,RBP
0000e622(3): MOV RDI,RDX
0000e625(2): CMPSB.REPE RDI,RSI
0000e627(3): SETA AL
0000e62a(2): SBB AL,0x0
0000e62c(2): TEST AL,AL
0000e62e(6): JNZ 0x0000e6c0
0000e634(3): TEST R9D,R9D
0000e637(6): JNZ 0x0000e6c5
0000e63d(3): TEST R12D,R12D
0000e640(6): JNS 0x0000e82a
0000e646(3): TEST BH,0x2
0000e649(6): JNZ 0x0000e790
0000e64f(5): MOV byte ptr [RSP + 0xf],0x1
0000e654(4): MOV EDI,dword ptr [R13 + 0x2c]
0000e658(3): MOV RDX,RBP
0000e65b(2): MOV ESI,EBX
0000e65d(5): CALL 0x0000e590
0000e662(2): TEST EAX,EAX
0000e664(3): MOV R15D,EAX
0000e667(6): JS 0x0000e81b
0000e66d(4): MOV EBX,dword ptr [R13 + 0x48]
0000e671(3): TEST BL,0x2
0000e674(6): JZ 0x0000e71a
0000e67a(6): NOP word ptr [RAX + RAX*0x1]
0000e680(5): LEA RDX,[RSP + 0x10]
0000e685(3): MOV ESI,R15D
0000e688(5): MOV EDI,0x1
0000e68d(5): CALL 0x000027e0
0000e692(2): TEST EAX,EAX
0000e694(6): JZ 0x0000e760
0000e69a(5): MOV EBX,0xffffffff
0000e69f(3): TEST R12D,R12D
0000e6a2(2): JNS 0x0000e6d5
0000e6a4(5): CALL 0x00002410
0000e6a9(3): MOV R12D,dword ptr [RAX]
0000e6ac(3): MOV RBP,RAX
0000e6af(3): MOV EDI,R15D
0000e6b2(5): CALL 0x00002640
0000e6b7(4): MOV dword ptr [RBP],R12D
0000e6bb(2): JMP 0x0000e6d5
0000e6c0(3): TEST R9D,R9D
0000e6c3(2): JZ 0x0000e700
0000e6c5(3): AND BH,0x2
0000e6c8(2): JZ 0x0000e6d3
0000e6ca(3): TEST R12D,R12D
0000e6cd(6): JNS 0x0000e780
0000e6d3(2): XOR EBX,EBX
0000e6d5(8): MOV RCX,qword ptr [0xa8 + RSP]
0000e6dd(9): XOR RCX,qword ptr FS:[0x28]
0000e6e6(2): MOV EAX,EBX
0000e6e8(6): JNZ 0x0000e825
0000e6ee(7): ADD RSP,0xb8
0000e6f5(1): POP RBX
0000e6f6(1): POP RBP
0000e6f7(2): POP R12
0000e6f9(2): POP R13
0000e6fb(2): POP R14
0000e6fd(2): POP R15
0000e6ff(1): RET
0000e700(3): TEST R12D,R12D
0000e703(6): JS 0x0000e840
0000e709(3): TEST BL,0x2
0000e70c(3): MOV R15D,R12D
0000e70f(5): MOV byte ptr [RSP + 0xf],0x0
0000e714(6): JNZ 0x0000e680
0000e71a(3): TEST RBP,RBP
0000e71d(2): JZ 0x0000e740
0000e71f(7): LEA RDX,[0x2269b]
0000e726(5): MOV ECX,0x3
0000e72b(3): MOV RSI,RBP
0000e72e(3): MOV RDI,RDX
0000e731(2): CMPSB.REPE RDI,RSI
0000e733(3): SETA AL
0000e736(2): SBB AL,0x0
0000e738(2): TEST AL,AL
0000e73a(6): JZ 0x0000e680
0000e740(3): AND BH,0x2
0000e743(6): JNZ 0x0000e7d8
0000e749(3): MOV EDI,R15D
0000e74c(5): CALL 0x00002820
0000e751(2): MOV EBX,EAX
0000e753(5): JMP 0x0000e69f
0000e760(5): MOV RAX,qword ptr [RSP + 0x10]
0000e765(4): CMP qword ptr [R14 + 0x78],RAX
0000e769(6): JZ 0x0000e800
0000e76f(5): CALL 0x00002410
0000e774(6): MOV dword ptr [RAX],0x2
0000e77a(5): JMP 0x0000e69a
0000e780(3): MOV EDI,R12D
0000e783(2): XOR EBX,EBX
0000e785(5): CALL 0x00002640
0000e78a(5): JMP 0x0000e6d5
0000e790(4): LEA R15,[R13 + 0x60]
0000e794(3): MOV RDI,R15
0000e797(5): CALL 0x0001f530
0000e79c(2): TEST AL,AL
0000e79e(4): MOV byte ptr [RSP + 0xf],AL
0000e7a2(6): JNZ 0x0000e654
0000e7a8(3): MOV RDI,R15
0000e7ab(5): CALL 0x0001f580
0000e7b0(2): TEST EAX,EAX
0000e7b2(3): MOV R15D,EAX
0000e7b5(4): MOV EBX,dword ptr [R13 + 0x48]
0000e7b9(6): JS 0x0000e64f
0000e7bf(3): TEST BL,0x2
0000e7c2(3): MOV R12D,EAX
0000e7c5(5): MOV byte ptr [RSP + 0xf],0x1
0000e7ca(6): JZ 0x0000e740
0000e7d0(5): JMP 0x0000e680
0000e7d8(6): MOVZX R14D,byte ptr [RSP + 0xf]
0000e7de(3): MOV ESI,R15D
0000e7e1(3): MOV RDI,R13
0000e7e4(2): XOR EBX,EBX
0000e7e6(4): XOR R14D,0x1
0000e7ea(4): MOVZX EDX,R14B
0000e7ee(5): CALL 0x0000e3e0
0000e7f3(5): JMP 0x0000e6d5
0000e800(5): MOV RAX,qword ptr [RSP + 0x18]
0000e805(7): CMP qword ptr [0x80 + R14],RAX
0000e80c(6): JNZ 0x0000e76f
0000e812(4): MOV EBX,dword ptr [R13 + 0x48]
0000e816(5): JMP 0x0000e740
0000e81b(5): MOV EBX,0xffffffff
0000e820(5): JMP 0x0000e6d5
0000e825(5): CALL 0x00002560
0000e82a(3): TEST BL,0x2
0000e82d(3): MOV R15D,R12D
0000e830(5): MOV byte ptr [RSP + 0xf],0x1
0000e835(6): JZ 0x0000e726
0000e83b(5): JMP 0x0000e680
0000e840(5): MOV byte ptr [RSP + 0xf],0x0
0000e845(5): JMP 0x0000e654
0000e850(6): AND EDI,0x102
0000e856(2): PUSH R12
0000e858(3): MOV R12,RSI
0000e85b(1): PUSH RBP
0000e85c(1): PUSH RBX
0000e85d(3): MOV RBX,RDX
0000e860(2): JZ 0x0000e8d0
0000e862(5): MOV EDI,0x18
0000e867(5): CALL 0x00002780
0000e86c(3): TEST RAX,RAX
0000e86f(3): MOV RBP,RAX
0000e872(6): JZ 0x0000e8f8
0000e878(4): MOV RAX,qword ptr [RBX + 0x78]
0000e87c(4): MOV RDI,qword ptr [R12]
0000e880(3): MOV RSI,RBP
0000e883(4): MOV qword ptr [RBP + 0x10],RBX
0000e887(4): MOV qword ptr [RBP],RAX
0000e88b(7): MOV RAX,qword ptr [0x80 + RBX]
0000e892(4): MOV qword ptr [RBP + 0x8],RAX
0000e896(5): CALL 0x00008d60
0000e89b(3): CMP RBP,RAX
0000e89e(3): MOV R12,RAX
0000e8a1(2): JZ 0x0000e8c1
0000e8a3(3): MOV RDI,RBP
0000e8a6(5): CALL 0x00002a10
0000e8ab(3): TEST R12,R12
0000e8ae(2): JZ 0x0000e8f8
0000e8b0(5): MOV RAX,qword ptr [R12 + 0x10]
0000e8b5(5): MOV ECX,0x2
0000e8ba(4): MOV word ptr [RBX + 0x70],CX
0000e8be(3): MOV qword ptr [RBX],RAX
0000e8c1(1): POP RBX
0000e8c2(5): MOV EAX,0x1
0000e8c7(1): POP RBP
0000e8c8(2): POP R12
0000e8ca(1): RET
0000e8d0(4): MOV RDI,qword ptr [R12]
0000e8d4(4): LEA RSI,[RDX + 0x78]
0000e8d8(5): CALL 0x0001f3b0
0000e8dd(2): TEST AL,AL
0000e8df(2): JZ 0x0000e8c1
0000e8e1(5): MOV EDX,0x2
0000e8e6(3): MOV qword ptr [RBX],RBX
0000e8e9(4): MOV word ptr [RBX + 0x70],DX
0000e8ed(1): POP RBX
0000e8ee(1): POP RBP
0000e8ef(2): POP R12
0000e8f1(1): RET
0000e8f8(1): POP RBX
0000e8f9(2): XOR EAX,EAX
0000e8fb(1): POP RBP
0000e8fc(2): POP R12
0000e8fe(1): RET
0000e900(4): SUB RSP,0x28
0000e904(3): MOV RCX,RSI
0000e907(9): MOV RAX,qword ptr FS:[0x28]
0000e910(5): MOV qword ptr [RSP + 0x18],RAX
0000e915(2): XOR EAX,EAX
0000e917(6): AND EDI,0x102
0000e91d(2): JNZ 0x0000e960
0000e91f(4): MOV RAX,qword ptr [RDX + 0x8]
0000e923(3): TEST RAX,RAX
0000e926(2): JZ 0x0000e945
0000e928(5): CMP qword ptr [RAX + 0x58],0x0
0000e92d(2): JS 0x0000e945
0000e92f(3): MOV RCX,qword ptr [RSI]
0000e932(5): CMP qword ptr [RCX + 0x10],0x0
0000e937(2): JZ 0x0000e9b3
0000e939(7): MOV RSI,qword ptr [0x80 + RDX]
0000e940(3): CMP qword ptr [RCX],RSI
0000e943(2): JZ 0x0000e990
0000e945(5): MOV RAX,qword ptr [RSP + 0x18]
0000e94a(9): XOR RAX,qword ptr FS:[0x28]
0000e953(2): JNZ 0x0000e9ae
0000e955(4): ADD RSP,0x28
0000e959(1): RET
0000e960(4): MOV RAX,qword ptr [RDX + 0x78]
0000e964(3): MOV RDI,qword ptr [RCX]
0000e967(3): MOV RSI,RSP
0000e96a(4): MOV qword ptr [RSP],RAX
0000e96e(7): MOV RAX,qword ptr [0x80 + RDX]
0000e975(5): MOV qword ptr [RSP + 0x8],RAX
0000e97a(5): CALL 0x00008dc0
0000e97f(3): TEST RAX,RAX
0000e982(2): JZ 0x0000e9b3
0000e984(3): MOV RDI,RAX
0000e987(5): CALL 0x00002a10
0000e98c(2): JMP 0x0000e945
0000e990(4): MOV RSI,qword ptr [RDX + 0x78]
0000e994(4): CMP qword ptr [RCX + 0x8],RSI
0000e998(2): JNZ 0x0000e945
0000e99a(4): MOV RDX,qword ptr [RAX + 0x78]
0000e99e(7): MOV RAX,qword ptr [0x80 + RAX]
0000e9a5(4): MOV qword ptr [RCX + 0x8],RDX
0000e9a9(3): MOV qword ptr [RCX],RAX
0000e9ac(2): JMP 0x0000e945
0000e9ae(5): CALL 0x00002560
0000e9b3(5): CALL 0x00002400
0000e9b8(8): NOP dword ptr [RAX + RAX*0x1]
0000e9c0(2): PUSH R15
0000e9c2(2): PUSH R14
0000e9c4(3): MOV R15,RDI
0000e9c7(2): PUSH R13
0000e9c9(2): PUSH R12
0000e9cb(1): PUSH RBP
0000e9cc(1): PUSH RBX
0000e9cd(4): SUB RSP,0x78
0000e9d1(3): MOV RBP,qword ptr [RDI]
0000e9d4(9): MOV RAX,qword ptr FS:[0x28]
0000e9dd(5): MOV qword ptr [RSP + 0x68],RAX
0000e9e2(2): XOR EAX,EAX
0000e9e4(4): MOV dword ptr [RSP + 0x58],ESI
0000e9e8(4): MOV RAX,qword ptr [RBP + 0x18]
0000e9ec(3): TEST RAX,RAX
0000e9ef(5): MOV qword ptr [RSP + 0x50],RAX
0000e9f4(6): JZ 0x0000ee30
0000e9fa(3): MOV RDI,RAX
0000e9fd(5): CALL 0x000026e0
0000ea02(2): TEST EAX,EAX
0000ea04(4): MOV dword ptr [RSP + 0x64],EAX
0000ea08(6): JS 0x0000ef60
0000ea0e(5): CMP qword ptr [R15 + 0x40],0x0
0000ea13(6): JZ 0x0000f1e8
0000ea19(9): MOV qword ptr [RSP + 0x38],-0x1
0000ea22(4): MOV EDI,dword ptr [R15 + 0x48]
0000ea26(5): MOV byte ptr [RSP + 0x5f],0x1
0000ea2b(4): MOV RCX,qword ptr [RBP + 0x48]
0000ea2f(4): MOV RDX,qword ptr [RBP + 0x38]
0000ea33(9): MOV qword ptr [RSP + 0x40],0x0
0000ea3c(5): CMP byte ptr [RDX + RCX*0x1 + -0x1],0x2f
0000ea41(4): LEA RAX,[RCX + -0x1]
0000ea45(4): CMOVNZ RAX,RCX
0000ea49(3): AND EDI,0x4
0000ea4c(5): MOV qword ptr [RSP + 0x48],RAX
0000ea51(2): JZ 0x0000ea63
0000ea53(4): ADD RAX,qword ptr [R15 + 0x20]
0000ea57(4): LEA RBX,[RAX + 0x1]
0000ea5b(3): MOV byte ptr [RAX],0x2f
0000ea5e(5): MOV qword ptr [RSP + 0x40],RBX
0000ea63(5): MOV RAX,qword ptr [RSP + 0x48]
0000ea68(4): MOV RBX,qword ptr [R15 + 0x30]
0000ea6c(5): MOV byte ptr [RSP + 0x5e],0x0
0000ea71(5): MOV byte ptr [RSP + 0x5d],0x0
0000ea76(9): MOV qword ptr [RSP + 0x8],0x0
0000ea7f(9): MOV qword ptr [RSP + 0x10],0x0
0000ea88(4): ADD RAX,0x1
0000ea8c(5): MOV qword ptr [RSP + 0x20],RBP
0000ea91(3): SUB RBX,RAX
0000ea94(5): MOV qword ptr [RSP + 0x18],RAX
0000ea99(4): MOV RAX,qword ptr [RBP + 0x58]
0000ea9d(5): MOV qword ptr [RSP + 0x28],RBX
0000eaa2(2): XOR EBX,EBX
0000eaa4(4): ADD RAX,0x1
0000eaa8(5): MOV qword ptr [RSP + 0x30],RAX
0000eaad(5): JMP 0x0000eb8f
0000eab8(3): MOV R9,R14
0000eabb(5): ADD R9,qword ptr [RSP + 0x18]
0000eac0(6): JC 0x0000f320
0000eac6(5): MOV RAX,qword ptr [RSP + 0x30]
0000eacb(7): LEA RSI,[0x108 + R13]
0000ead2(4): MOV qword ptr [R13 + 0x58],RAX
0000ead6(3): MOV RAX,qword ptr [R15]
0000ead9(4): MOV qword ptr [R13 + 0x48],R9
0000eadd(4): MOV qword ptr [R13 + 0x8],RAX
0000eae1(4): MOV RAX,qword ptr [RBP]
0000eae5(7): MOV qword ptr [0x80 + R13],RAX
0000eaec(4): MOV EAX,dword ptr [R15 + 0x48]
0000eaf0(2): TEST AL,0x4
0000eaf2(6): JNZ 0x0000ed60
0000eaf8(4): MOV qword ptr [R13 + 0x30],RSI
0000eafc(5): CMP qword ptr [R15 + 0x40],0x0
0000eb01(2): JZ 0x0000eb0c
0000eb03(3): TEST AH,0x4
0000eb06(6): JZ 0x0000ee08
0000eb0c(4): MOVZX EDX,byte ptr [RBP + 0x12]
0000eb10(3): AND EAX,0x18
0000eb13(2): MOV ESI,EDX
0000eb15(3): SUB EDX,0x1
0000eb18(3): CMP EAX,0x18
0000eb1b(6): JZ 0x0000edd0
0000eb21(5): MOV ECX,0xb
0000eb26(3): CMP EDX,0xb
0000eb29(5): MOV word ptr [R13 + 0x70],CX
0000eb2e(6): JA 0x0000ed98
0000eb34(7): LEA RAX,[0x226a0]
0000eb3b(3): MOV EAX,dword ptr [RAX + RDX*0x4]
0000eb3e(7): MOV dword ptr [0x90 + R13],EAX
0000eb45(5): MOV EAX,0x2
0000eb4a(7): MOV qword ptr [0xa8 + R13],RAX
0000eb51(6): CMP qword ptr [RSP + 0x10],0x0
0000eb57(8): MOV qword ptr [R13 + 0x10],0x0
0000eb5f(6): JZ 0x0000ed88
0000eb65(5): MOV RAX,qword ptr [RSP + 0x8]
0000eb6a(4): MOV qword ptr [RAX + 0x10],R13
0000eb6e(7): CMP RBX,0x2710
0000eb75(6): JZ 0x0000ec70
0000eb7b(4): ADD RBX,0x1
0000eb7f(5): CMP RBX,qword ptr [RSP + 0x38]
0000eb84(6): JNC 0x0000ecc8
0000eb8a(5): MOV qword ptr [RSP + 0x8],R13
0000eb8f(5): MOV RAX,qword ptr [RSP + 0x20]
0000eb94(4): MOV R13,qword ptr [RAX + 0x18]
0000eb98(3): TEST R13,R13
0000eb9b(6): JZ 0x0000f068
0000eba1(5): CALL 0x00002410
0000eba6(3): MOV RDI,R13
0000eba9(6): MOV dword ptr [RAX],0x0
0000ebaf(3): MOV R12,RAX
0000ebb2(5): CALL 0x00002750
0000ebb7(3): TEST RAX,RAX
0000ebba(3): MOV RBP,RAX
0000ebbd(6): JZ 0x0000f140
0000ebc3(5): TEST byte ptr [R15 + 0x48],0x20
0000ebc8(2): JNZ 0x0000ebd4
0000ebca(4): CMP byte ptr [RAX + 0x13],0x2e
0000ebce(6): JZ 0x0000edb0
0000ebd4(4): LEA R13,[RBP + 0x13]
0000ebd8(3): MOV RDI,R13
0000ebdb(5): CALL 0x00002530
0000ebe0(3): MOV RSI,R13
0000ebe3(3): MOV RDX,RAX
0000ebe6(3): MOV RDI,R15
0000ebe9(3): MOV R14,RAX
0000ebec(5): CALL 0x0000e120
0000ebf1(3): TEST RAX,RAX
0000ebf4(3): MOV R13,RAX
0000ebf7(6): JZ 0x0000f010
0000ebfd(5): CMP qword ptr [RSP + 0x28],R14
0000ec02(6): JA 0x0000eab8
0000ec08(4): MOV RAX,qword ptr [R15 + 0x20]
0000ec0c(4): LEA RSI,[R15 + 0x30]
0000ec10(4): LEA RDI,[R15 + 0x20]
0000ec14(5): MOV qword ptr [RSP + 0x28],RAX
0000ec19(5): MOV RAX,qword ptr [RSP + 0x48]
0000ec1e(5): LEA RDX,[RAX + R14*0x1 + 0x2]
0000ec23(5): CALL 0x0000e4b0
0000ec28(2): TEST AL,AL
0000ec2a(6): JZ 0x0000f010
0000ec30(4): MOV RDX,qword ptr [R15 + 0x20]
0000ec34(5): CMP RDX,qword ptr [RSP + 0x28]
0000ec39(6): JZ 0x0000ee20
0000ec3f(5): ADD RDX,qword ptr [RSP + 0x18]
0000ec44(5): TEST byte ptr [R15 + 0x48],0x4
0000ec49(6): CMOVZ RDX,qword ptr [RSP + 0x40]
0000ec4f(5): MOV qword ptr [RSP + 0x40],RDX
0000ec54(4): MOV RCX,qword ptr [R15 + 0x30]
0000ec58(5): SUB RCX,qword ptr [RSP + 0x18]
0000ec5d(4): MOV byte ptr [RSP + 0x5d],AL
0000ec61(5): MOV qword ptr [RSP + 0x28],RCX
0000ec66(5): JMP 0x0000eab8
0000ec70(5): CMP qword ptr [R15 + 0x40],0x0
0000ec75(6): JNZ 0x0000eb7b
0000ec7b(4): MOV ESI,dword ptr [RSP + 0x64]
0000ec7f(5): MOV RDI,qword ptr [RSP + 0x20]
0000ec84(5): CALL 0x0000e240
0000ec89(6): CMP RAX,0x1021994
0000ec8f(6): JZ 0x0000f000
0000ec95(5): MOV ECX,0xff534d42
0000ec9a(3): CMP RAX,RCX
0000ec9d(6): JZ 0x0000f000
0000eca3(6): CMP RAX,0x6969
0000eca9(6): JZ 0x0000f000
0000ecaf(4): ADD RBX,0x1
0000ecb3(5): CMP RBX,qword ptr [RSP + 0x38]
0000ecb8(5): MOV byte ptr [RSP + 0x5e],0x1
0000ecbd(6): JC 0x0000eb8a
0000ecc3(5): NOP dword ptr [RAX + RAX*0x1]
0000ecc8(5): CMP byte ptr [RSP + 0x5d],0x0
0000eccd(5): MOV RBP,qword ptr [RSP + 0x20]
0000ecd2(6): JZ 0x0000f076
0000ecd8(4): MOV RAX,qword ptr [R15 + 0x8]
0000ecdc(4): MOV RCX,qword ptr [R15 + 0x20]
0000ece0(3): TEST RAX,RAX
0000ece3(2): JZ 0x0000ed10
0000ece5(3): NOP dword ptr [RAX]
0000ece8(4): MOV RDX,qword ptr [RAX + 0x30]
0000ecec(7): LEA RSI,[0x108 + RAX]
0000ecf3(3): CMP RDX,RSI
0000ecf6(2): JZ 0x0000ed03
0000ecf8(4): SUB RDX,qword ptr [RAX + 0x38]
0000ecfc(3): ADD RDX,RCX
0000ecff(4): MOV qword ptr [RAX + 0x30],RDX
0000ed03(4): MOV qword ptr [RAX + 0x38],RCX
0000ed07(4): MOV RAX,qword ptr [RAX + 0x10]
0000ed0b(3): TEST RAX,RAX
0000ed0e(2): JNZ 0x0000ece8
0000ed10(5): MOV RAX,qword ptr [RSP + 0x10]
0000ed15(2): JMP 0x0000ed23
0000ed20(3): MOV RAX,RDX
0000ed23(5): CMP qword ptr [RAX + 0x58],0x0
0000ed28(6): JS 0x0000f076
0000ed2e(4): MOV RDX,qword ptr [RAX + 0x30]
0000ed32(7): LEA RSI,[0x108 + RAX]
0000ed39(3): CMP RDX,RSI
0000ed3c(2): JZ 0x0000ed49
0000ed3e(4): SUB RDX,qword ptr [RAX + 0x38]
0000ed42(3): ADD RDX,RCX
0000ed45(4): MOV qword ptr [RAX + 0x30],RDX
0000ed49(4): MOV RDX,qword ptr [RAX + 0x10]
0000ed4d(4): MOV qword ptr [RAX + 0x38],RCX
0000ed51(3): TEST RDX,RDX
0000ed54(2): JNZ 0x0000ed20
0000ed56(4): MOV RDX,qword ptr [RAX + 0x8]
0000ed5a(2): JMP 0x0000ed20
0000ed60(4): MOV RAX,qword ptr [R13 + 0x38]
0000ed64(5): MOV RDI,qword ptr [RSP + 0x40]
0000ed69(4): MOV qword ptr [R13 + 0x30],RAX
0000ed6d(4): MOV RAX,qword ptr [R13 + 0x60]
0000ed71(4): LEA RDX,[RAX + 0x1]
0000ed75(5): CALL 0x00002890
0000ed7a(4): MOV EAX,dword ptr [R15 + 0x48]
0000ed7e(5): JMP 0x0000eafc
0000ed88(5): MOV qword ptr [RSP + 0x10],R13
0000ed8d(5): JMP 0x0000eb6e
0000ed98(11): MOV dword ptr [0x90 + R13],0x0
0000eda3(5): MOV EAX,0x2
0000eda8(5): JMP 0x0000eb4a
0000edb0(4): CMP byte ptr [RAX + 0x14],0x0
0000edb4(2): JZ 0x0000edc1
0000edb6(5): CMP word ptr [RAX + 0x14],0x2e
0000edbb(6): JNZ 0x0000ebd4
0000edc1(5): MOV R13,qword ptr [RSP + 0x8]
0000edc6(5): JMP 0x0000eb8a
0000edd0(6): AND ESI,0xfb
0000edd6(6): JZ 0x0000eb21
0000eddc(5): MOV EAX,0xb
0000ede1(3): CMP EDX,0xb
0000ede4(5): MOV word ptr [R13 + 0x70],AX
0000ede9(6): JBE 0x0000f376
0000edef(11): MOV dword ptr [0x90 + R13],0x0
0000edfa(5): MOV EAX,0x1
0000edff(5): JMP 0x0000eb4a
0000ee08(2): XOR EDX,EDX
0000ee0a(3): MOV RSI,R13
0000ee0d(3): MOV RDI,R15
0000ee10(5): CALL 0x0000de40
0000ee15(5): MOV word ptr [R13 + 0x70],AX
0000ee1a(5): JMP 0x0000eb51
0000ee20(5): MOVZX EAX,byte ptr [RSP + 0x5d]
0000ee25(5): JMP 0x0000ec54
0000ee30(3): MOV EAX,dword ptr [RDI + 0x48]
0000ee33(2): MOV EDX,EAX
0000ee35(3): AND EDX,0x10
0000ee38(2): JZ 0x0000ee47
0000ee3a(2): TEST AL,0x1
0000ee3c(5): MOV EDX,0x20000
0000ee41(6): JNZ 0x0000ef48
0000ee47(5): AND EAX,0x204
0000ee4c(4): MOV RSI,qword ptr [RBP + 0x30]
0000ee50(5): MOV EDI,0xffffff9c
0000ee55(5): CMP EAX,0x200
0000ee5a(2): JNZ 0x0000ee60
0000ee5c(4): MOV EDI,dword ptr [R15 + 0x2c]
0000ee60(5): LEA RCX,[RSP + 0x64]
0000ee65(5): CALL 0x0001f670
0000ee6a(3): TEST RAX,RAX
0000ee6d(4): MOV qword ptr [RBP + 0x18],RAX
0000ee71(6): JZ 0x0000f190
0000ee77(5): CMP word ptr [RBP + 0x70],0xb
0000ee7c(6): JZ 0x0000f210
0000ee82(4): MOV EDI,dword ptr [R15 + 0x48]
0000ee86(6): TEST EDI,0x100
0000ee8c(6): JNZ 0x0000efb0
0000ee92(5): CMP qword ptr [R15 + 0x40],0x1
0000ee97(3): SBB RAX,RAX
0000ee9a(5): AND EAX,0x186a1
0000ee9f(4): SUB RAX,0x1
0000eea3(5): CMP dword ptr [RSP + 0x58],0x2
0000eea8(5): MOV qword ptr [RSP + 0x38],RAX
0000eead(6): JZ 0x0000f200
0000eeb3(4): MOV EDX,dword ptr [R15 + 0x48]
0000eeb7(4): MOV EAX,dword ptr [RSP + 0x64]
0000eebb(3): AND EDX,0x38
0000eebe(3): CMP EDX,0x18
0000eec1(6): JZ 0x0000f264
0000eec7(5): CMP dword ptr [RSP + 0x58],0x3
0000eecc(6): MOV R12D,0x1
0000eed2(3): SETZ BL
0000eed5(5): TEST byte ptr [R15 + 0x49],0x2
0000eeda(6): JNZ 0x0000f2bc
0000eee0(2): TEST EAX,EAX
0000eee2(6): JNS 0x0000f248
0000eee8(2): TEST BL,BL
0000eeea(2): JZ 0x0000eefb
0000eeec(3): TEST R12B,R12B
0000eeef(2): JZ 0x0000eefb
0000eef1(5): CALL 0x00002410
0000eef6(2): MOV EAX,dword ptr [RAX]
0000eef8(3): MOV dword ptr [RBP + 0x40],EAX
0000eefb(5): OR word ptr [RBP + 0x72],0x1
0000ef00(4): MOV RDI,qword ptr [RBP + 0x18]
0000ef04(5): CALL 0x00002650
0000ef09(4): MOV EDI,dword ptr [R15 + 0x48]
0000ef0d(8): MOV qword ptr [RBP + 0x18],0x0
0000ef15(6): TEST EDI,0x200
0000ef1b(2): JZ 0x0000ef30
0000ef1d(4): MOV EAX,dword ptr [RSP + 0x64]
0000ef21(2): TEST EAX,EAX
0000ef23(2): JS 0x0000ef30
0000ef25(2): MOV EDI,EAX
0000ef27(5): CALL 0x00002640
0000ef2c(4): MOV EDI,dword ptr [R15 + 0x48]
0000ef30(8): MOV qword ptr [RBP + 0x18],0x0
0000ef38(5): MOV byte ptr [RSP + 0x5f],0x0
0000ef3d(5): JMP 0x0000ea2b
0000ef48(2): XOR EDX,EDX
0000ef4a(5): CMP qword ptr [RBP + 0x58],0x0
0000ef4f(3): SETNZ DL
0000ef52(3): SHL EDX,0x11
0000ef55(5): JMP 0x0000ee47
0000ef60(4): MOV RDI,qword ptr [RBP + 0x18]
0000ef64(5): CALL 0x00002650
0000ef69(5): CMP dword ptr [RSP + 0x58],0x3
0000ef6e(8): MOV qword ptr [RBP + 0x18],0x0
0000ef76(6): JZ 0x0000f19b
0000ef7c(9): MOV qword ptr [RSP + 0x10],0x0
0000ef85(5): MOV RBX,qword ptr [RSP + 0x68]
0000ef8a(9): XOR RBX,qword ptr FS:[0x28]
0000ef93(5): MOV RAX,qword ptr [RSP + 0x10]
0000ef98(6): JNZ 0x0000f371
0000ef9e(4): ADD RSP,0x78
0000efa2(1): POP RBX
0000efa3(1): POP RBP
0000efa4(2): POP R12
0000efa6(2): POP R13
0000efa8(2): POP R14
0000efaa(2): POP R15
0000efac(1): RET
0000efb0(4): LEA RBX,[R15 + 0x58]
0000efb4(3): MOV RDX,RBP
0000efb7(3): MOV RSI,RBX
0000efba(5): CALL 0x0000e900
0000efbf(2): XOR EDX,EDX
0000efc1(3): MOV RSI,RBP
0000efc4(3): MOV RDI,R15
0000efc7(5): CALL 0x0000de40
0000efcc(4): MOV EDI,dword ptr [R15 + 0x48]
0000efd0(3): MOV RDX,RBP
0000efd3(3): MOV RSI,RBX
0000efd6(5): CALL 0x0000e850
0000efdb(2): TEST AL,AL
0000efdd(6): JNZ 0x0000ee92
0000efe3(5): CALL 0x00002410
0000efe8(9): MOV qword ptr [RSP + 0x10],0x0
0000eff1(6): MOV dword ptr [RAX],0xc
0000eff7(2): JMP 0x0000ef85
0000f000(5): MOV byte ptr [RSP + 0x5e],0x0
0000f005(5): JMP 0x0000eb7b
0000f010(3): MOV RDI,R13
0000f013(5): MOV RBP,qword ptr [RSP + 0x20]
0000f018(4): MOV EBX,dword ptr [R12]
0000f01c(5): CALL 0x00002a10
0000f021(5): MOV RDI,qword ptr [RSP + 0x10]
0000f026(5): CALL 0x0000e1b0
0000f02b(4): MOV RDI,qword ptr [RBP + 0x18]
0000f02f(5): CALL 0x00002650
0000f034(6): MOV R9D,0x7
0000f03a(8): MOV qword ptr [RBP + 0x18],0x0
0000f042(9): MOV qword ptr [RSP + 0x10],0x0
0000f04b(5): MOV word ptr [RBP + 0x70],R9W
0000f050(8): OR dword ptr [R15 + 0x48],0x2000
0000f058(4): MOV dword ptr [R12],EBX
0000f05c(5): JMP 0x0000ef85
0000f068(3): MOV RBP,RAX
0000f06b(5): CMP byte ptr [RSP + 0x5d],0x0
0000f070(6): JNZ 0x0000ecd8
0000f076(5): TEST byte ptr [R15 + 0x48],0x4
0000f07b(2): JZ 0x0000f09b
0000f07d(5): MOV RAX,qword ptr [RSP + 0x18]
0000f082(4): CMP qword ptr [R15 + 0x30],RAX
0000f086(2): JZ 0x0000f08d
0000f088(3): TEST RBX,RBX
0000f08b(2): JNZ 0x0000f093
0000f08d(6): SUB qword ptr [RSP + 0x40],0x1
0000f093(5): MOV RAX,qword ptr [RSP + 0x40]
0000f098(3): MOV byte ptr [RAX],0x0
0000f09b(6): CMP qword ptr [RSP + 0x50],0x0
0000f0a1(2): JNZ 0x0000f110
0000f0a3(5): CMP byte ptr [RSP + 0x5f],0x0
0000f0a8(2): JZ 0x0000f110
0000f0aa(5): CMP dword ptr [RSP + 0x58],0x1
0000f0af(2): JZ 0x0000f0f0
0000f0b1(3): TEST RBX,RBX
0000f0b4(2): JZ 0x0000f0f0
0000f0b6(5): CMP byte ptr [RSP + 0x5e],0x0
0000f0bb(6): JNZ 0x0000f1b8
0000f0c1(5): CMP qword ptr [R15 + 0x40],0x0
0000f0c6(6): JZ 0x0000ef85
0000f0cc(4): CMP RBX,0x1
0000f0d0(6): JZ 0x0000ef85
0000f0d6(5): MOV RSI,qword ptr [RSP + 0x10]
0000f0db(3): MOV RDX,RBX
0000f0de(3): MOV RDI,R15
0000f0e1(5): CALL 0x0000e010
0000f0e6(5): MOV qword ptr [RSP + 0x10],RAX
0000f0eb(5): JMP 0x0000ef85
0000f0f0(5): CMP qword ptr [RBP + 0x58],0x0
0000f0f5(6): JNZ 0x0000f226
0000f0fb(3): MOV RDI,R15
0000f0fe(5): CALL 0x0000e450
0000f103(2): TEST EAX,EAX
0000f105(3): SETNZ AL
0000f108(2): TEST AL,AL
0000f10a(6): JNZ 0x0000f293
0000f110(3): TEST RBX,RBX
0000f113(2): JNZ 0x0000f0b6
0000f115(5): CMP dword ptr [RSP + 0x58],0x3
0000f11a(6): JZ 0x0000f2d8
0000f120(5): MOV RDI,qword ptr [RSP + 0x10]
0000f125(5): CALL 0x0000e1b0
0000f12a(9): MOV qword ptr [RSP + 0x10],0x0
0000f133(5): JMP 0x0000ef85
0000f140(4): MOV EAX,dword ptr [R12]
0000f144(5): MOV RBP,qword ptr [RSP + 0x20]
0000f149(2): TEST EAX,EAX
0000f14b(2): JZ 0x0000f16e
0000f14d(3): TEST RBX,RBX
0000f150(3): MOV dword ptr [RBP + 0x40],EAX
0000f153(6): JNZ 0x0000f289
0000f159(6): CMP qword ptr [RSP + 0x50],0x0
0000f15f(5): MOV EAX,0x4
0000f164(6): JNZ 0x0000f289
0000f16a(4): MOV word ptr [RBP + 0x70],AX
0000f16e(4): MOV RDI,qword ptr [RBP + 0x18]
0000f172(3): TEST RDI,RDI
0000f175(6): JZ 0x0000f06b
0000f17b(5): CALL 0x00002650
0000f180(8): MOV qword ptr [RBP + 0x18],0x0
0000f188(5): JMP 0x0000f06b
0000f190(5): CMP dword ptr [RSP + 0x58],0x3
0000f195(6): JNZ 0x0000ef7c
0000f19b(6): MOV R10D,0x4
0000f1a1(5): MOV word ptr [RBP + 0x70],R10W
0000f1a6(5): CALL 0x00002410
0000f1ab(2): MOV EAX,dword ptr [RAX]
0000f1ad(3): MOV dword ptr [RBP + 0x40],EAX
0000f1b0(5): JMP 0x0000ef7c
0000f1b8(7): LEA RAX,[0xde10]
0000f1bf(5): MOV RSI,qword ptr [RSP + 0x10]
0000f1c4(3): MOV RDX,RBX
0000f1c7(3): MOV RDI,R15
0000f1ca(4): MOV qword ptr [R15 + 0x40],RAX
0000f1ce(5): CALL 0x0000e010
0000f1d3(8): MOV qword ptr [R15 + 0x40],0x0
0000f1db(5): MOV qword ptr [RSP + 0x10],RAX
0000f1e0(5): JMP 0x0000ef85
0000f1e8(9): MOV qword ptr [RSP + 0x38],0x186a0
0000f1f1(5): MOV byte ptr [RSP + 0x5f],0x1
0000f1f6(4): MOV EDI,dword ptr [R15 + 0x48]
0000f1fa(5): JMP 0x0000ea2b
0000f200(5): MOV byte ptr [RSP + 0x5f],0x0
0000f205(4): MOV EDI,dword ptr [R15 + 0x48]
0000f209(5): JMP 0x0000ea2b
0000f210(2): XOR EDX,EDX
0000f212(3): MOV RSI,RBP
0000f215(3): MOV RDI,R15
0000f218(5): CALL 0x0000de40
0000f21d(4): MOV word ptr [RBP + 0x70],AX
0000f221(5): JMP 0x0000ee92
0000f226(4): MOV RSI,qword ptr [RBP + 0x8]
0000f22a(7): LEA RCX,[0x2269b]
0000f231(5): MOV EDX,0xffffffff
0000f236(3): MOV RDI,R15
0000f239(5): CALL 0x0000e5d0
0000f23e(2): TEST EAX,EAX
0000f240(3): SETNZ AL
0000f243(5): JMP 0x0000f108
0000f248(2): XOR ECX,ECX
0000f24a(2): MOV EDX,EAX
0000f24c(3): MOV RSI,RBP
0000f24f(3): MOV RDI,R15
0000f252(5): CALL 0x0000e5d0
0000f257(2): TEST EAX,EAX
0000f259(6): JNZ 0x0000eee8
0000f25f(5): JMP 0x0000ea22
0000f264(8): CMP qword ptr [0x88 + RBP],0x2
0000f26c(6): JNZ 0x0000eec7
0000f272(2): MOV ESI,EAX
0000f274(3): MOV RDI,RBP
0000f277(5): CALL 0x0000e370
0000f27c(2): TEST EAX,EAX
0000f27e(2): JNZ 0x0000f2fe
0000f280(4): MOV EAX,dword ptr [RSP + 0x64]
0000f284(5): JMP 0x0000eec7
0000f289(5): MOV EAX,0x7
0000f28e(5): JMP 0x0000f16a
0000f293(5): MOV EDI,0x7
0000f298(4): MOV word ptr [RBP + 0x70],DI
0000f29c(8): OR dword ptr [R15 + 0x48],0x2000
0000f2a4(5): MOV RDI,qword ptr [RSP + 0x10]
0000f2a9(5): CALL 0x0000e1b0
0000f2ae(9): MOV qword ptr [RSP + 0x10],0x0
0000f2b7(5): JMP 0x0000ef85
0000f2bc(2): MOV EDI,EAX
0000f2be(5): MOV EDX,0x3
0000f2c3(5): MOV ESI,0x406
0000f2c8(2): XOR EAX,EAX
0000f2ca(5): CALL 0x0001f730
0000f2cf(4): MOV dword ptr [RSP + 0x64],EAX
0000f2d3(5): JMP 0x0000eee0
0000f2d8(4): MOVZX EAX,word ptr [RBP + 0x70]
0000f2dc(4): CMP AX,0x7
0000f2e0(6): JZ 0x0000f120
0000f2e6(4): CMP AX,0x4
0000f2ea(6): JZ 0x0000f120
0000f2f0(5): MOV ESI,0x6
0000f2f5(4): MOV word ptr [RBP + 0x70],SI
0000f2f9(5): JMP 0x0000f120
0000f2fe(5): CMP dword ptr [RSP + 0x58],0x3
0000f303(6): JNZ 0x0000f200
0000f309(4): MOV EAX,dword ptr [RSP + 0x64]
0000f30d(3): XOR R12D,R12D
0000f310(5): MOV EBX,0x1
0000f315(5): JMP 0x0000eed5
0000f320(3): MOV RDI,R13
0000f323(5): MOV RBP,qword ptr [RSP + 0x20]
0000f328(5): CALL 0x00002a10
0000f32d(5): MOV RDI,qword ptr [RSP + 0x10]
0000f332(5): CALL 0x0000e1b0
0000f337(4): MOV RDI,qword ptr [RBP + 0x18]
0000f33b(5): CALL 0x00002650
0000f340(6): MOV R8D,0x7
0000f346(8): MOV qword ptr [RBP + 0x18],0x0
0000f34e(9): MOV qword ptr [RSP + 0x10],0x0
0000f357(5): MOV word ptr [RBP + 0x70],R8W
0000f35c(8): OR dword ptr [R15 + 0x48],0x2000
0000f364(8): MOV dword ptr [R12],0x24
0000f36c(5): JMP 0x0000ef85
0000f371(5): CALL 0x00002560
0000f376(7): LEA RAX,[0x226a0]
0000f37d(3): MOV EAX,dword ptr [RAX + RDX*0x4]
0000f380(7): MOV dword ptr [0x90 + R13],EAX
0000f387(5): MOV EAX,0x1
0000f38c(5): JMP 0x0000eb4a
0000f3a0(2): PUSH R15
0000f3a2(2): PUSH R14
0000f3a4(2): PUSH R13
0000f3a6(2): PUSH R12
0000f3a8(1): PUSH RBP
0000f3a9(1): PUSH RBX
0000f3aa(4): SUB RSP,0x28
0000f3ae(6): TEST ESI,0xfffff000
0000f3b4(6): JNZ 0x0000f738
0000f3ba(2): MOV EAX,ESI
0000f3bc(2): MOV EBP,ESI
0000f3be(5): AND EAX,0x204
0000f3c3(5): CMP EAX,0x204
0000f3c8(6): JZ 0x0000f738
0000f3ce(4): TEST SIL,0x12
0000f3d2(6): JZ 0x0000f738
0000f3d8(3): MOV R13,RDI
0000f3db(5): MOV ESI,0x1
0000f3e0(5): MOV EDI,0x80
0000f3e5(3): MOV R14,RDX
0000f3e8(5): CALL 0x000026b0
0000f3ed(3): TEST RAX,RAX
0000f3f0(3): MOV RBX,RAX
0000f3f3(6): JZ 0x0000f64e
0000f3f9(4): TEST BPL,0x2
0000f3fd(4): MOV qword ptr [RAX + 0x40],R14
0000f401(6): JNZ 0x0000f660
0000f407(4): MOV RDI,qword ptr [R13]
0000f40b(3): MOV dword ptr [RAX + 0x48],EBP
0000f40e(7): MOV dword ptr [RBX + 0x2c],0xffffff9c
0000f415(3): TEST RDI,RDI
0000f418(6): JZ 0x0000f67f
0000f41e(3): MOV R15,R13
0000f421(3): XOR R12D,R12D
0000f424(4): NOP dword ptr [RAX]
0000f428(5): CALL 0x00002530
0000f42d(3): CMP R12,RAX
0000f430(4): CMOVC R12,RAX
0000f434(4): ADD R15,0x8
0000f438(3): MOV RDI,qword ptr [R15]
0000f43b(3): TEST RDI,RDI
0000f43e(2): JNZ 0x0000f428
0000f440(5): LEA RDX,[R12 + 0x1]
0000f445(5): MOV EAX,0x1000
0000f44a(7): CMP RDX,0x1000
0000f451(4): CMOVC RDX,RAX
0000f455(4): LEA RSI,[RBX + 0x30]
0000f459(4): LEA RDI,[RBX + 0x20]
0000f45d(5): CALL 0x0000e4b0
0000f462(2): TEST AL,AL
0000f464(4): MOV byte ptr [RSP + 0x16],AL
0000f468(6): JZ 0x0000f709
0000f46e(4): MOV RSI,qword ptr [R13]
0000f472(3): TEST RSI,RSI
0000f475(6): JZ 0x0000f720
0000f47b(7): LEA RSI,[0x21fe1]
0000f482(2): XOR EDX,EDX
0000f484(3): MOV RDI,RBX
0000f487(5): CALL 0x0000e120
0000f48c(3): TEST RAX,RAX
0000f48f(3): MOV R15,RAX
0000f492(6): JZ 0x0000f700
0000f498(7): MOV RAX,-0x1
0000f49f(3): TEST R14,R14
0000f4a2(4): MOV RSI,qword ptr [R13]
0000f4a6(4): MOV qword ptr [R15 + 0x58],RAX
0000f4aa(4): MOV qword ptr [R15 + 0x68],RAX
0000f4ae(2): JZ 0x0000f4bd
0000f4b0(3): MOV EAX,dword ptr [RBX + 0x48]
0000f4b3(3): SHR EAX,0xa
0000f4b6(3): AND EAX,0x1
0000f4b9(4): MOV byte ptr [RSP + 0x16],AL
0000f4bd(3): TEST RSI,RSI
0000f4c0(6): JZ 0x0000f72c
0000f4c6(3): SHR EBP,0xb
0000f4c9(9): MOV qword ptr [RSP + 0x18],0x0
0000f4d2(3): XOR R12D,R12D
0000f4d5(3): XOR EBP,0x1
0000f4d8(2): MOV EAX,EBP
0000f4da(2): XOR EBP,EBP
0000f4dc(3): AND EAX,0x1
0000f4df(4): MOV byte ptr [RSP + 0x17],AL
0000f4e3(2): JMP 0x0000f55c
0000f4e8(3): MOV RDX,RAX
0000f4eb(3): MOV RDI,RBX
0000f4ee(5): CALL 0x0000e120
0000f4f3(3): TEST RAX,RAX
0000f4f6(3): MOV RCX,RAX
0000f4f9(6): JZ 0x0000f6f0
0000f4ff(8): MOV qword ptr [RAX + 0x58],0x0
0000f507(4): MOV qword ptr [RAX + 0x8],R15
0000f50b(7): LEA RAX,[0x108 + RAX]
0000f512(3): TEST R12,R12
0000f515(4): MOV qword ptr [RCX + 0x30],RAX
0000f519(6): JZ 0x0000f690
0000f51f(5): CMP byte ptr [RSP + 0x16],0x0
0000f524(6): JZ 0x0000f690
0000f52a(5): MOV ESI,0xb
0000f52f(3): TEST R14,R14
0000f532(11): MOV qword ptr [0xa8 + RCX],0x2
0000f53d(4): MOV word ptr [RCX + 0x70],SI
0000f541(6): JZ 0x0000f6d0
0000f547(4): MOV qword ptr [RCX + 0x10],R12
0000f54b(3): MOV R12,RCX
0000f54e(4): ADD RBP,0x1
0000f552(5): MOV RSI,qword ptr [R13 + RBP*0x8]
0000f557(3): TEST RSI,RSI
0000f55a(2): JZ 0x0000f5b0
0000f55c(3): MOV RDI,RSI
0000f55f(5): MOV qword ptr [RSP + 0x8],RSI
0000f564(5): CALL 0x00002530
0000f569(4): CMP RAX,0x2
0000f56d(5): MOV RSI,qword ptr [RSP + 0x8]
0000f572(6): JBE 0x0000f4e8
0000f578(5): CMP byte ptr [RSP + 0x17],0x0
0000f57d(6): JZ 0x0000f4e8
0000f583(5): CMP byte ptr [RSI + RAX*0x1 + -0x1],0x2f
0000f588(6): JNZ 0x0000f4e8
0000f58e(2): NOP
0000f590(5): CMP byte ptr [RSI + RAX*0x1 + -0x2],0x2f
0000f595(6): JNZ 0x0000f4e8
0000f59b(4): SUB RAX,0x1
0000f59f(4): CMP RAX,0x1
0000f5a3(2): JNZ 0x0000f590
0000f5a5(5): JMP 0x0000f4e8
0000f5b0(3): TEST R14,R14
0000f5b3(2): JZ 0x0000f5cc
0000f5b5(4): CMP RBP,0x1
0000f5b9(2): JBE 0x0000f5cc
0000f5bb(3): MOV RSI,R12
0000f5be(3): MOV RDX,RBP
0000f5c1(3): MOV RDI,RBX
0000f5c4(5): CALL 0x0000e010
0000f5c9(3): MOV R12,RAX
0000f5cc(7): LEA RSI,[0x21fe1]
0000f5d3(2): XOR EDX,EDX
0000f5d5(3): MOV RDI,RBX
0000f5d8(5): CALL 0x0000e120
0000f5dd(3): TEST RAX,RAX
0000f5e0(3): MOV qword ptr [RBX],RAX
0000f5e3(6): JZ 0x0000f6f0
0000f5e9(3): MOV EDI,dword ptr [RBX + 0x48]
0000f5ec(5): MOV EDX,0x9
0000f5f1(4): LEA RSI,[RBX + 0x58]
0000f5f5(4): MOV qword ptr [RAX + 0x10],R12
0000f5f9(4): MOV word ptr [RAX + 0x70],DX
0000f5fd(8): MOV qword ptr [RAX + 0x58],0x1
0000f605(5): CALL 0x0000e520
0000f60a(2): TEST AL,AL
0000f60c(6): JZ 0x0000f6f0
0000f612(3): MOV ESI,dword ptr [RBX + 0x48]
0000f615(6): TEST ESI,0x204
0000f61b(2): JNZ 0x0000f640
0000f61d(3): MOV EDI,dword ptr [RBX + 0x2c]
0000f620(7): LEA RDX,[0x2269c]
0000f627(5): CALL 0x0000e590
0000f62c(2): TEST EAX,EAX
0000f62e(3): MOV dword ptr [RBX + 0x28],EAX
0000f631(2): JNS 0x0000f640
0000f633(4): OR dword ptr [RBX + 0x48],0x4
0000f637(9): NOP word ptr [RAX + RAX*0x1]
0000f640(4): LEA RDI,[RBX + 0x60]
0000f644(5): MOV ESI,0xffffffff
0000f649(5): CALL 0x0001f510
0000f64e(4): ADD RSP,0x28
0000f652(3): MOV RAX,RBX
0000f655(1): POP RBX
0000f656(1): POP RBP
0000f657(2): POP R12
0000f659(2): POP R13
0000f65b(2): POP R14
0000f65d(2): POP R15
0000f65f(1): RET
0000f660(4): MOV RDI,qword ptr [R13]
0000f664(2): MOV EAX,EBP
0000f666(7): MOV dword ptr [RBX + 0x2c],0xffffff9c
0000f66d(3): AND AH,0xfd
0000f670(3): OR EAX,0x4
0000f673(3): TEST RDI,RDI
0000f676(3): MOV dword ptr [RBX + 0x48],EAX
0000f679(6): JNZ 0x0000f41e
0000f67f(5): MOV EDX,0x1000
0000f684(5): JMP 0x0000f455
0000f690(2): XOR EDX,EDX
0000f692(3): MOV RSI,RCX
0000f695(3): MOV RDI,RBX
0000f698(5): MOV qword ptr [RSP + 0x8],RCX
0000f69d(5): CALL 0x0000de40
0000f6a2(5): MOV RCX,qword ptr [RSP + 0x8]
0000f6a7(3): TEST R14,R14
0000f6aa(4): MOV word ptr [RCX + 0x70],AX
0000f6ae(6): JNZ 0x0000f547
0000f6b4(3): TEST R12,R12
0000f6b7(8): MOV qword ptr [RCX + 0x10],0x0
0000f6bf(2): JNZ 0x0000f6d8
0000f6c1(5): MOV qword ptr [RSP + 0x18],RCX
0000f6c6(3): MOV R12,RCX
0000f6c9(5): JMP 0x0000f54e
0000f6d0(8): MOV qword ptr [RCX + 0x10],0x0
0000f6d8(5): MOV RAX,qword ptr [RSP + 0x18]
0000f6dd(5): MOV qword ptr [RSP + 0x18],RCX
0000f6e2(4): MOV qword ptr [RAX + 0x10],RCX
0000f6e6(5): JMP 0x0000f54e
0000f6f0(3): MOV RDI,R12
0000f6f3(5): CALL 0x0000e1b0
0000f6f8(3): MOV RDI,R15
0000f6fb(5): CALL 0x00002a10
0000f700(4): MOV RDI,qword ptr [RBX + 0x20]
0000f704(5): CALL 0x00002a10
0000f709(3): MOV RDI,RBX
0000f70c(2): XOR EBX,EBX
0000f70e(5): CALL 0x00002a10
0000f713(5): JMP 0x0000f64e
0000f720(3): XOR R15D,R15D
0000f723(3): TEST R14,R14
0000f726(6): JNZ 0x0000f4b0
0000f72c(3): XOR R12D,R12D
0000f72f(5): JMP 0x0000f5cc
0000f738(5): CALL 0x00002410
0000f73d(2): XOR EBX,EBX
0000f73f(6): MOV dword ptr [RAX],0x16
0000f745(5): JMP 0x0000f64e
0000f750(2): PUSH R12
0000f752(1): PUSH RBP
0000f753(3): MOV RBP,RDI
0000f756(1): PUSH RBX
0000f757(3): MOV RDI,qword ptr [RDI]
0000f75a(3): TEST RDI,RDI
0000f75d(2): JZ 0x0000f7a3
0000f75f(5): CMP qword ptr [RDI + 0x58],0x0
0000f764(2): JNS 0x0000f77f
0000f766(5): JMP 0x0000f880
0000f770(5): CALL 0x00002a10
0000f775(5): CMP qword ptr [RBX + 0x58],0x0
0000f77a(3): MOV RDI,RBX
0000f77d(2): JS 0x0000f79b
0000f77f(4): MOV RBX,qword ptr [RDI + 0x10]
0000f783(3): TEST RBX,RBX
0000f786(2): JNZ 0x0000f770
0000f788(4): MOV RBX,qword ptr [RDI + 0x8]
0000f78c(5): CALL 0x00002a10
0000f791(5): CMP qword ptr [RBX + 0x58],0x0
0000f796(3): MOV RDI,RBX
0000f799(2): JNS 0x0000f77f
0000f79b(3): MOV RDI,RBX
0000f79e(5): CALL 0x00002a10
0000f7a3(4): MOV RDI,qword ptr [RBP + 0x8]
0000f7a7(3): TEST RDI,RDI
0000f7aa(2): JZ 0x0000f7b1
0000f7ac(5): CALL 0x0000e1b0
0000f7b1(4): MOV RDI,qword ptr [RBP + 0x10]
0000f7b5(5): CALL 0x00002a10
0000f7ba(4): MOV RDI,qword ptr [RBP + 0x20]
0000f7be(5): CALL 0x00002a10
0000f7c3(3): MOV EAX,dword ptr [RBP + 0x48]
0000f7c6(3): TEST AH,0x2
0000f7c9(2): JZ 0x0000f830
0000f7cb(3): MOV EDI,dword ptr [RBP + 0x2c]
0000f7ce(2): TEST EDI,EDI
0000f7d0(6): JNS 0x0000f860
0000f7d6(2): XOR EBX,EBX
0000f7d8(4): LEA RDI,[RBP + 0x60]
0000f7dc(5): CALL 0x0000e200
0000f7e1(4): MOV RDI,qword ptr [RBP + 0x50]
0000f7e5(3): TEST RDI,RDI
0000f7e8(2): JZ 0x0000f7ef
0000f7ea(5): CALL 0x000087b0
0000f7ef(7): TEST dword ptr [RBP + 0x48],0x102
0000f7f6(4): MOV RDI,qword ptr [RBP + 0x58]
0000f7fa(2): JZ 0x0000f820
0000f7fc(3): TEST RDI,RDI
0000f7ff(2): JZ 0x0000f806
0000f801(5): CALL 0x000087b0
0000f806(3): MOV RDI,RBP
0000f809(5): CALL 0x00002a10
0000f80e(2): TEST EBX,EBX
0000f810(6): JNZ 0x0000f8c1
0000f816(2): MOV EAX,EBX
0000f818(1): POP RBX
0000f819(1): POP RBP
0000f81a(2): POP R12
0000f81c(1): RET
0000f820(5): CALL 0x00002a10
0000f825(2): JMP 0x0000f806
0000f830(2): TEST AL,0x4
0000f832(2): JNZ 0x0000f7d6
0000f834(3): MOV EDI,dword ptr [RBP + 0x28]
0000f837(5): CALL 0x00002820
0000f83c(2): TEST EAX,EAX
0000f83e(2): JNZ 0x0000f890
0000f840(3): MOV EDI,dword ptr [RBP + 0x28]
0000f843(5): CALL 0x00002640
0000f848(2): TEST EAX,EAX
0000f84a(2): JZ 0x0000f7d6
0000f84c(5): CALL 0x00002410
0000f851(3): MOV R12,RAX
0000f854(2): JMP 0x0000f8b8
0000f860(5): CALL 0x00002640
0000f865(2): TEST EAX,EAX
0000f867(6): JZ 0x0000f7d6
0000f86d(5): CALL 0x00002410
0000f872(2): MOV EBX,dword ptr [RAX]
0000f874(5): JMP 0x0000f7d8
0000f880(3): MOV RBX,RDI
0000f883(3): MOV RDI,RBX
0000f886(5): CALL 0x00002a10
0000f88b(5): JMP 0x0000f7a3
0000f890(5): CALL 0x00002410
0000f895(3): MOV EDI,dword ptr [RBP + 0x28]
0000f898(3): MOV R12,RAX
0000f89b(2): MOV EBX,dword ptr [RAX]
0000f89d(5): CALL 0x00002640
0000f8a2(2): TEST EAX,EAX
0000f8a4(6): JZ 0x0000f7d8
0000f8aa(2): TEST EBX,EBX
0000f8ac(6): JNZ 0x0000f7d8
0000f8b2(6): NOP word ptr [RAX + RAX*0x1]
0000f8b8(4): MOV EBX,dword ptr [R12]
0000f8bc(5): JMP 0x0000f7d8
0000f8c1(5): CALL 0x00002410
0000f8c6(2): MOV dword ptr [RAX],EBX
0000f8c8(5): MOV EBX,0xffffffff
0000f8cd(5): JMP 0x0000f816
0000f8e0(2): PUSH R14
0000f8e2(2): PUSH R13
0000f8e4(2): PUSH R12
0000f8e6(1): PUSH RBP
0000f8e7(1): PUSH RBX
0000f8e8(3): MOV RBP,qword ptr [RDI]
0000f8eb(3): TEST RBP,RBP
0000f8ee(6): JZ 0x0000f9fe
0000f8f4(3): MOV EDX,dword ptr [RDI + 0x48]
0000f8f7(3): TEST DH,0x20
0000f8fa(6): JNZ 0x0000f9fe
0000f900(4): MOVZX EAX,word ptr [RBP + 0x74]
0000f904(5): MOV EBX,0x3
0000f909(3): MOV R12,RDI
0000f90c(4): MOV word ptr [RBP + 0x74],BX
0000f910(4): CMP AX,0x1
0000f914(6): JZ 0x0000fb60
0000f91a(4): CMP AX,0x2
0000f91e(4): MOVZX ECX,word ptr [RBP + 0x70]
0000f922(6): JZ 0x0000fa10
0000f928(4): CMP CX,0x1
0000f92c(2): JNZ 0x0000f960
0000f92e(5): JMP 0x0000fb50
0000f938(4): MOV qword ptr [R12],RBX
0000f93c(3): MOV RDI,RBP
0000f93f(5): CALL 0x00002a10
0000f944(5): CMP qword ptr [RBX + 0x58],0x0
0000f949(6): JZ 0x0000fb80
0000f94f(4): MOVZX EAX,word ptr [RBX + 0x74]
0000f953(3): MOV RBP,RBX
0000f956(4): CMP AX,0x4
0000f95a(6): JNZ 0x0000fc88
0000f960(4): MOV RBX,qword ptr [RBP + 0x10]
0000f964(3): TEST RBX,RBX
0000f967(2): JNZ 0x0000f938
0000f969(4): MOV RBX,qword ptr [RBP + 0x8]
0000f96d(5): CMP qword ptr [RBX + 0x18],0x0
0000f972(6): JNZ 0x0000fee0
0000f978(4): MOV qword ptr [R12],RBX
0000f97c(3): MOV RDI,RBP
0000f97f(5): CALL 0x00002a10
0000f984(5): CMP qword ptr [RBX + 0x58],-0x1
0000f989(6): JZ 0x0000fe42
0000f98f(5): CMP word ptr [RBX + 0x70],0xb
0000f994(6): JZ 0x0000facf
0000f99a(5): MOV RDX,qword ptr [R12 + 0x20]
0000f99f(4): MOV RAX,qword ptr [RBX + 0x48]
0000f9a3(4): MOV byte ptr [RDX + RAX*0x1],0x0
0000f9a7(5): CMP qword ptr [RBX + 0x58],0x0
0000f9ac(6): JZ 0x0000fd70
0000f9b2(4): MOVZX EAX,word ptr [RBX + 0x72]
0000f9b6(2): TEST AL,0x2
0000f9b8(6): JZ 0x0000fd28
0000f9be(5): MOV EAX,dword ptr [R12 + 0x48]
0000f9c3(3): MOV EDI,dword ptr [RBX + 0x44]
0000f9c6(2): TEST AL,0x4
0000f9c8(6): JZ 0x0000fdcc
0000f9ce(5): CALL 0x00002640
0000f9d3(5): MOV EDI,dword ptr [R12 + 0x48]
0000f9d8(5): CMP word ptr [RBX + 0x70],0x2
0000f9dd(2): JZ 0x0000f9f3
0000f9df(3): MOV ECX,dword ptr [RBX + 0x40]
0000f9e2(2): TEST ECX,ECX
0000f9e4(6): JZ 0x0000fd88
0000f9ea(5): MOV EDX,0x7
0000f9ef(4): MOV word ptr [RBX + 0x70],DX
0000f9f3(6): AND EDI,0x2000
0000f9f9(3): MOV RBP,RBX
0000f9fc(2): JZ 0x0000fa7a
0000f9fe(2): XOR EBP,EBP
0000fa00(1): POP RBX
0000fa01(3): MOV RAX,RBP
0000fa04(1): POP RBP
0000fa05(2): POP R12
0000fa07(2): POP R13
0000fa09(2): POP R14
0000fa0b(1): RET
0000fa10(3): LEA EAX,[RCX + -0xc]
0000fa13(4): CMP AX,0x1
0000fa17(2): JBE 0x0000fa90
0000fa19(4): CMP CX,0x1
0000fa1d(6): JNZ 0x0000f960
0000fa23(3): TEST DL,0x40
0000fa26(6): JZ 0x0000fad8
0000fa2c(5): MOV RAX,qword ptr [R12 + 0x18]
0000fa31(4): CMP qword ptr [RBP + 0x78],RAX
0000fa35(6): JZ 0x0000fad8
0000fa3b(4): TEST byte ptr [RBP + 0x72],0x2
0000fa3f(6): JNZ 0x0000ff20
0000fa45(5): MOV RDI,qword ptr [R12 + 0x8]
0000fa4a(3): TEST RDI,RDI
0000fa4d(2): JZ 0x0000fa5d
0000fa4f(5): CALL 0x0000e1b0
0000fa54(9): MOV qword ptr [R12 + 0x8],0x0
0000fa5d(5): MOV EDI,dword ptr [R12 + 0x48]
0000fa62(6): MOV R10D,0x6
0000fa68(5): LEA RSI,[R12 + 0x58]
0000fa6d(5): MOV word ptr [RBP + 0x70],R10W
0000fa72(3): MOV RDX,RBP
0000fa75(5): CALL 0x0000e900
0000fa7a(1): POP RBX
0000fa7b(3): MOV RAX,RBP
0000fa7e(1): POP RBP
0000fa7f(2): POP R12
0000fa81(2): POP R13
0000fa83(2): POP R14
0000fa85(1): RET
0000fa90(5): MOV EDX,0x1
0000fa95(3): MOV RSI,RBP
0000fa98(5): CALL 0x0000de40
0000fa9d(4): CMP AX,0x1
0000faa1(4): MOV word ptr [RBP + 0x70],AX
0000faa5(6): JZ 0x0000fdec
0000faab(4): CMP AX,0xb
0000faaf(4): MOV qword ptr [R12],RBP
0000fab3(2): JNZ 0x0000fa7a
0000fab5(3): NOP dword ptr [RAX]
0000fab8(7): MOV RAX,qword ptr [0xa8 + RBP]
0000fabf(4): CMP RAX,0x2
0000fac3(6): JZ 0x0000fe68
0000fac9(4): CMP RAX,0x1
0000facd(2): JZ 0x0000fa7a
0000facf(5): CALL 0x00002400
0000fad4(4): NOP dword ptr [RAX]
0000fad8(5): MOV RDI,qword ptr [R12 + 0x8]
0000fadd(3): TEST RDI,RDI
0000fae0(6): JZ 0x0000fcf8
0000fae6(3): TEST DH,0x10
0000fae9(6): JNZ 0x0000fce2
0000faef(4): MOV RCX,qword ptr [RBP + 0x30]
0000faf3(5): MOV EDX,0xffffffff
0000faf8(3): MOV RSI,RBP
0000fafb(3): MOV RDI,R12
0000fafe(5): CALL 0x0000e5d0
0000fb03(2): TEST EAX,EAX
0000fb05(6): JZ 0x0000fdc2
0000fb0b(5): CALL 0x00002410
0000fb10(2): MOV EAX,dword ptr [RAX]
0000fb12(5): OR word ptr [RBP + 0x72],0x1
0000fb17(3): MOV dword ptr [RBP + 0x40],EAX
0000fb1a(5): MOV RBP,qword ptr [R12 + 0x8]
0000fb1f(3): TEST RBP,RBP
0000fb22(6): JZ 0x0000fd16
0000fb28(3): MOV RAX,RBP
0000fb2b(5): NOP dword ptr [RAX + RAX*0x1]
0000fb30(4): MOV RDX,qword ptr [RAX + 0x8]
0000fb34(4): MOV RDX,qword ptr [RDX + 0x30]
0000fb38(4): MOV qword ptr [RAX + 0x30],RDX
0000fb3c(4): MOV RAX,qword ptr [RAX + 0x10]
0000fb40(3): TEST RAX,RAX
0000fb43(2): JNZ 0x0000fb30
0000fb45(5): JMP 0x0000fd16
0000fb50(4): CMP AX,0x4
0000fb54(6): JNZ 0x0000fa23
0000fb5a(5): JMP 0x0000fa3b
0000fb60(3): MOV RSI,RBP
0000fb63(2): XOR EDX,EDX
0000fb65(5): CALL 0x0000de40
0000fb6a(4): MOV word ptr [RBP + 0x70],AX
0000fb6e(3): MOV RAX,RBP
0000fb71(1): POP RBX
0000fb72(1): POP RBP
0000fb73(2): POP R12
0000fb75(2): POP R13
0000fb77(2): POP R14
0000fb79(1): RET
0000fb80(3): MOV RDI,R12
0000fb83(5): CALL 0x0000e450
0000fb88(2): TEST EAX,EAX
0000fb8a(6): JNZ 0x0000ff91
0000fb90(9): TEST dword ptr [R12 + 0x48],0x102
0000fb99(5): MOV RDI,qword ptr [R12 + 0x58]
0000fb9e(6): JZ 0x0000fcd8
0000fba4(3): TEST RDI,RDI
0000fba7(2): JZ 0x0000fbae
0000fba9(5): CALL 0x000087b0
0000fbae(4): MOV RDX,qword ptr [RBX + 0x60]
0000fbb2(7): LEA RBP,[0x108 + RBX]
0000fbb9(5): MOV RDI,qword ptr [R12 + 0x20]
0000fbbe(3): MOV RSI,RBP
0000fbc1(4): MOV qword ptr [RBX + 0x48],RDX
0000fbc5(4): ADD RDX,0x1
0000fbc9(5): CALL 0x00002890
0000fbce(5): MOV ESI,0x2f
0000fbd3(3): MOV RDI,RBP
0000fbd6(5): CALL 0x000025d0
0000fbdb(3): TEST RAX,RAX
0000fbde(2): JZ 0x0000fc0b
0000fbe0(3): CMP RBP,RAX
0000fbe3(6): JZ 0x0000fdb0
0000fbe9(4): LEA R13,[RAX + 0x1]
0000fbed(3): MOV RDI,R13
0000fbf0(5): CALL 0x00002530
0000fbf5(4): LEA RDX,[RAX + 0x1]
0000fbf9(3): MOV R14,RAX
0000fbfc(3): MOV RSI,R13
0000fbff(3): MOV RDI,RBP
0000fc02(5): CALL 0x00002890
0000fc07(4): MOV qword ptr [RBX + 0x60],R14
0000fc0b(5): MOV RAX,qword ptr [R12 + 0x20]
0000fc10(5): MOV EDI,dword ptr [R12 + 0x48]
0000fc15(5): LEA RSI,[R12 + 0x58]
0000fc1a(3): MOV RBP,RBX
0000fc1d(4): MOV qword ptr [RBX + 0x38],RAX
0000fc21(4): MOV qword ptr [RBX + 0x30],RAX
0000fc25(5): CALL 0x0000e520
0000fc2a(4): MOVZX EAX,word ptr [RBX + 0x70]
0000fc2e(4): CMP AX,0xb
0000fc32(4): MOV qword ptr [R12],RBP
0000fc36(6): JZ 0x0000fab8
0000fc3c(4): CMP AX,0x1
0000fc40(6): JNZ 0x0000fa7a
0000fc46(5): CMP qword ptr [RBP + 0x58],0x0
0000fc4b(2): JNZ 0x0000fc56
0000fc4d(4): MOV RAX,qword ptr [RBP + 0x78]
0000fc51(5): MOV qword ptr [R12 + 0x18],RAX
0000fc56(5): MOV EDI,dword ptr [R12 + 0x48]
0000fc5b(5): LEA RSI,[R12 + 0x58]
0000fc60(3): MOV RDX,RBP
0000fc63(5): CALL 0x0000e850
0000fc68(2): TEST AL,AL
0000fc6a(6): JNZ 0x0000fa7a
0000fc70(5): CALL 0x00002410
0000fc75(2): XOR EBP,EBP
0000fc77(6): MOV dword ptr [RAX],0xc
0000fc7d(5): JMP 0x0000fa7a
0000fc88(4): CMP AX,0x2
0000fc8c(6): JZ 0x0000ff2d
0000fc92(4): MOV RAX,qword ptr [RBP + 0x8]
0000fc96(7): LEA RSI,[0x108 + RBP]
0000fc9d(4): MOV RDI,qword ptr [RAX + 0x48]
0000fca1(4): MOV RAX,qword ptr [RAX + 0x38]
0000fca5(5): CMP byte ptr [RAX + RDI*0x1 + -0x1],0x2f
0000fcaa(4): LEA RDX,[RDI + -0x1]
0000fcae(4): CMOVZ RDI,RDX
0000fcb2(5): ADD RDI,qword ptr [R12 + 0x20]
0000fcb7(3): MOV byte ptr [RDI],0x2f
0000fcba(4): MOV RAX,qword ptr [RBP + 0x60]
0000fcbe(4): ADD RDI,0x1
0000fcc2(4): LEA RDX,[RAX + 0x1]
0000fcc6(5): CALL 0x00002890
0000fccb(4): MOVZX EAX,word ptr [RBP + 0x70]
0000fccf(5): JMP 0x0000fc2e
0000fcd8(5): CALL 0x00002a10
0000fcdd(5): JMP 0x0000fbae
0000fce2(3): AND DH,0xef
0000fce5(5): MOV dword ptr [R12 + 0x48],EDX
0000fcea(5): CALL 0x0000e1b0
0000fcef(9): MOV qword ptr [R12 + 0x8],0x0
0000fcf8(5): MOV ESI,0x3
0000fcfd(3): MOV RDI,R12
0000fd00(5): CALL 0x0000e9c0
0000fd05(3): TEST RAX,RAX
0000fd08(5): MOV qword ptr [R12 + 0x8],RAX
0000fd0d(6): JZ 0x0000fe04
0000fd13(3): MOV RBP,RAX
0000fd16(9): MOV qword ptr [R12 + 0x8],0x0
0000fd1f(5): JMP 0x0000fc92
0000fd28(2): TEST AL,0x1
0000fd2a(6): JNZ 0x0000f9d3
0000fd30(4): MOV RSI,qword ptr [RBX + 0x8]
0000fd34(7): LEA RCX,[0x2269b]
0000fd3b(5): MOV EDX,0xffffffff
0000fd40(3): MOV RDI,R12
0000fd43(5): CALL 0x0000e5d0
0000fd48(2): TEST EAX,EAX
0000fd4a(6): JZ 0x0000f9d3
0000fd50(5): CALL 0x00002410
0000fd55(5): MOV EDI,dword ptr [R12 + 0x48]
0000fd5a(2): MOV EAX,dword ptr [RAX]
0000fd5c(6): OR EDI,0x2000
0000fd62(3): MOV dword ptr [RBX + 0x40],EAX
0000fd65(5): MOV dword ptr [R12 + 0x48],EDI
0000fd6a(5): JMP 0x0000f9d8
0000fd70(3): MOV RDI,R12
0000fd73(5): CALL 0x0000e450
0000fd78(2): TEST EAX,EAX
0000fd7a(2): JNZ 0x0000fd50
0000fd7c(5): JMP 0x0000f9d3
0000fd88(5): MOV EAX,0x6
0000fd8d(5): LEA RSI,[R12 + 0x58]
0000fd92(3): MOV RDX,RBX
0000fd95(4): MOV word ptr [RBX + 0x70],AX
0000fd99(5): CALL 0x0000e900
0000fd9e(5): MOV EDI,dword ptr [R12 + 0x48]
0000fda3(5): JMP 0x0000f9f3
0000fdb0(7): CMP byte ptr [0x109 + RBX],0x0
0000fdb7(6): JNZ 0x0000fbe9
0000fdbd(5): JMP 0x0000fc0b
0000fdc2(5): MOV RBP,qword ptr [R12 + 0x8]
0000fdc7(5): JMP 0x0000fd16
0000fdcc(3): TEST AH,0x2
0000fdcf(6): JZ 0x0000ff6d
0000fdd5(2): MOV ESI,EDI
0000fdd7(5): MOV EDX,0x1
0000fddc(3): MOV RDI,R12
0000fddf(5): CALL 0x0000e3e0
0000fde4(3): MOV EDI,dword ptr [RBX + 0x44]
0000fde7(5): JMP 0x0000f9ce
0000fdec(5): MOV ESI,dword ptr [R12 + 0x48]
0000fdf1(4): TEST SIL,0x4
0000fdf5(6): JZ 0x0000fffc
0000fdfb(4): MOV qword ptr [R12],RBP
0000fdff(5): JMP 0x0000fc46
0000fe04(5): MOV EDI,dword ptr [R12 + 0x48]
0000fe09(6): TEST EDI,0x2000
0000fe0f(6): JNZ 0x0000f9fe
0000fe15(4): MOV R9D,dword ptr [RBP + 0x40]
0000fe19(3): TEST R9D,R9D
0000fe1c(2): JZ 0x0000fe30
0000fe1e(5): CMP word ptr [RBP + 0x70],0x4
0000fe23(2): JZ 0x0000fe30
0000fe25(6): MOV R8D,0x7
0000fe2b(5): MOV word ptr [RBP + 0x70],R8W
0000fe30(5): LEA RSI,[R12 + 0x58]
0000fe35(3): MOV RDX,RBP
0000fe38(5): CALL 0x0000e900
0000fe3d(5): JMP 0x0000fa7a
0000fe42(3): MOV RDI,RBX
0000fe45(2): XOR EBP,EBP
0000fe47(5): CALL 0x00002a10
0000fe4c(5): CALL 0x00002410
0000fe51(6): MOV dword ptr [RAX],0x0
0000fe57(8): MOV qword ptr [R12],0x0
0000fe5f(5): JMP 0x0000fa7a
0000fe68(4): MOV RBX,qword ptr [RBP + 0x8]
0000fe6c(5): CMP qword ptr [RBX + 0x68],0x0
0000fe71(2): JNZ 0x0000fe84
0000fe73(5): MOV EAX,dword ptr [R12 + 0x48]
0000fe78(3): AND EAX,0x18
0000fe7b(3): CMP EAX,0x18
0000fe7e(6): JZ 0x0000ffdd
0000fe84(2): XOR EDX,EDX
0000fe86(3): MOV RSI,RBP
0000fe89(3): MOV RDI,R12
0000fe8c(5): CALL 0x0000de40
0000fe91(6): MOV EDX,dword ptr [0x90 + RBP]
0000fe97(4): MOV word ptr [RBP + 0x70],AX
0000fe9b(6): AND EDX,0xf000
0000fea1(6): CMP EDX,0x4000
0000fea7(6): JNZ 0x0000fc3c
0000fead(5): CMP qword ptr [RBP + 0x58],0x0
0000feb2(6): JZ 0x0000ffce
0000feb8(4): MOV RCX,qword ptr [RBX + 0x68]
0000febc(4): LEA RDX,[RCX + -0x1]
0000fec0(4): CMP RDX,-0x3
0000fec4(2): JA 0x0000feca
0000fec6(4): MOV qword ptr [RBX + 0x68],RDX
0000feca(4): CMP AX,0x1
0000fece(6): JNZ 0x0000fa7a
0000fed4(5): JMP 0x0000fc56
0000fee0(4): MOV RAX,qword ptr [RBX + 0x48]
0000fee4(5): MOV RDX,qword ptr [R12 + 0x20]
0000fee9(5): MOV ESI,0x3
0000feee(4): MOV qword ptr [R12],RBX
0000fef2(3): MOV RDI,R12
0000fef5(4): MOV byte ptr [RDX + RAX*0x1],0x0
0000fef9(5): CALL 0x0000e9c0
0000fefe(3): TEST RAX,RAX
0000ff01(3): MOV RBX,RAX
0000ff04(2): JZ 0x0000ff58
0000ff06(3): MOV RDI,RBP
0000ff09(3): MOV RBP,RBX
0000ff0c(5): CALL 0x00002a10
0000ff11(5): JMP 0x0000fc92
0000ff20(3): MOV EDI,dword ptr [RBP + 0x44]
0000ff23(5): CALL 0x00002640
0000ff28(5): JMP 0x0000fa45
0000ff2d(5): MOV EDX,0x1
0000ff32(3): MOV RSI,RBX
0000ff35(3): MOV RDI,R12
0000ff38(5): CALL 0x0000de40
0000ff3d(4): CMP AX,0x1
0000ff41(4): MOV word ptr [RBX + 0x70],AX
0000ff45(2): JZ 0x0000ffa1
0000ff47(5): MOV ESI,0x3
0000ff4c(3): MOV RBP,RBX
0000ff4f(4): MOV word ptr [RBX + 0x74],SI
0000ff53(5): JMP 0x0000fc92
0000ff58(6): TEST byte ptr [R12 + 0x49],0x20
0000ff5e(6): JNZ 0x0000f9fe
0000ff64(4): MOV RBX,qword ptr [RBP + 0x8]
0000ff68(5): JMP 0x0000f978
0000ff6d(5): CALL 0x00002820
0000ff72(2): TEST EAX,EAX
0000ff74(2): JZ 0x0000ff89
0000ff76(5): CALL 0x00002410
0000ff7b(2): MOV EAX,dword ptr [RAX]
0000ff7d(3): MOV dword ptr [RBX + 0x40],EAX
0000ff80(9): OR dword ptr [R12 + 0x48],0x2000
0000ff89(3): MOV EDI,dword ptr [RBX + 0x44]
0000ff8c(5): JMP 0x0000f9ce
0000ff91(9): OR dword ptr [R12 + 0x48],0x2000
0000ff9a(2): XOR EBP,EBP
0000ff9c(5): JMP 0x0000fa7a
0000ffa1(5): MOV ESI,dword ptr [R12 + 0x48]
0000ffa6(4): TEST SIL,0x4
0000ffaa(2): JNZ 0x0000ff47
0000ffac(5): MOV EDI,dword ptr [R12 + 0x2c]
0000ffb1(7): LEA RDX,[0x2269c]
0000ffb8(5): CALL 0x0000e590
0000ffbd(2): TEST EAX,EAX
0000ffbf(3): MOV dword ptr [RBX + 0x44],EAX
0000ffc2(2): JS 0x00010040
0000ffc4(5): OR word ptr [RBX + 0x72],0x2
0000ffc9(5): JMP 0x0000ff47
0000ffce(4): CMP AX,0x1
0000ffd2(6): JNZ 0x0000fa7a
0000ffd8(5): JMP 0x0000fc4d
0000ffdd(5): MOV ESI,dword ptr [R12 + 0x2c]
0000ffe2(3): MOV RDI,RBX
0000ffe5(5): CALL 0x0000e370
0000ffea(3): CMP EAX,0x2
0000ffed(6): JNZ 0x0000fe84
0000fff3(4): MOVZX EAX,word ptr [RBP + 0x70]
0000fff7(5): JMP 0x0000fc3c
0000fffc(5): MOV EDI,dword ptr [R12 + 0x2c]
00010001(7): LEA RDX,[0x2269c]
00010008(5): CALL 0x0000e590
0001000d(2): TEST EAX,EAX
0001000f(3): MOV dword ptr [RBP + 0x44],EAX
00010012(2): JS 0x00010022
00010014(5): OR word ptr [RBP + 0x72],0x2
00010019(4): MOVZX EAX,word ptr [RBP + 0x70]
0001001d(5): JMP 0x0000fc2e
00010022(5): CALL 0x00002410
00010027(2): MOV EAX,dword ptr [RAX]
00010029(6): MOV R11D,0x7
0001002f(5): MOV word ptr [RBP + 0x70],R11W
00010034(3): MOV dword ptr [RBP + 0x40],EAX
00010037(4): MOV qword ptr [R12],RBP
0001003b(5): JMP 0x0000fa7a
00010040(5): CALL 0x00002410
00010045(2): MOV EAX,dword ptr [RAX]
00010047(5): MOV EDI,0x7
0001004c(4): MOV word ptr [RBX + 0x70],DI
00010050(3): MOV dword ptr [RBX + 0x40],EAX
00010053(5): JMP 0x0000ff47
00010060(3): CMP EDX,0x4
00010063(2): JA 0x00010070
00010065(4): MOV word ptr [RSI + 0x74],DX
00010069(2): XOR EAX,EAX
0001006b(1): RET
00010070(4): SUB RSP,0x8
00010074(5): CALL 0x00002410
00010079(6): MOV dword ptr [RAX],0x16
0001007f(5): MOV EAX,0x1
00010084(4): ADD RSP,0x8
00010088(1): RET
00010090(2): PUSH R14
00010092(2): PUSH R13
00010094(2): PUSH R12
00010096(1): PUSH RBP
00010097(3): MOV R12D,ESI
0001009a(1): PUSH RBX
0001009b(3): MOV RBX,RDI
0001009e(5): CALL 0x00002410
000100a3(7): TEST R12D,0xffffefff
000100aa(3): MOV R13,RAX
000100ad(6): JNZ 0x00010198
000100b3(3): MOV RBP,qword ptr [RBX]
000100b6(6): MOV dword ptr [RAX],0x0
000100bc(4): TEST byte ptr [RBX + 0x49],0x20
000100c0(2): JNZ 0x00010140
000100c2(4): MOVZX EAX,word ptr [RBP + 0x70]
000100c6(4): CMP AX,0x9
000100ca(2): JZ 0x00010130
000100cc(4): CMP AX,0x1
000100d0(2): JNZ 0x00010140
000100d2(4): MOV RDI,qword ptr [RBX + 0x8]
000100d6(3): TEST RDI,RDI
000100d9(2): JZ 0x000100e0
000100db(5): CALL 0x0000e1b0
000100e0(7): CMP R12D,0x1000
000100e7(6): MOV R14D,0x1
000100ed(2): JNZ 0x000100fc
000100ef(7): OR dword ptr [RBX + 0x48],0x1000
000100f6(6): MOV R14D,0x2
000100fc(5): CMP qword ptr [RBP + 0x58],0x0
00010101(2): JNZ 0x00010115
00010103(4): MOV RAX,qword ptr [RBP + 0x30]
00010107(3): CMP byte ptr [RAX],0x2f
0001010a(2): JZ 0x00010115
0001010c(3): MOV ESI,dword ptr [RBX + 0x48]
0001010f(4): TEST SIL,0x4
00010113(2): JZ 0x00010150
00010115(3): MOV ESI,R14D
00010118(3): MOV RDI,RBX
0001011b(5): CALL 0x0000e9c0
00010120(4): MOV qword ptr [RBX + 0x8],RAX
00010124(1): POP RBX
00010125(1): POP RBP
00010126(2): POP R12
00010128(2): POP R13
0001012a(2): POP R14
0001012c(1): RET
00010130(1): POP RBX
00010131(4): MOV RAX,qword ptr [RBP + 0x10]
00010135(1): POP RBP
00010136(2): POP R12
00010138(2): POP R13
0001013a(2): POP R14
0001013c(1): RET
00010140(1): POP RBX
00010141(2): XOR EAX,EAX
00010143(1): POP RBP
00010144(2): POP R12
00010146(2): POP R13
00010148(2): POP R14
0001014a(1): RET
00010150(3): MOV EDI,dword ptr [RBX + 0x2c]
00010153(7): LEA RDX,[0x2269c]
0001015a(5): CALL 0x0000e590
0001015f(2): TEST EAX,EAX
00010161(2): MOV EBP,EAX
00010163(2): JS 0x000101b9
00010165(3): MOV ESI,R14D
00010168(3): MOV RDI,RBX
0001016b(5): CALL 0x0000e9c0
00010170(4): TEST byte ptr [RBX + 0x49],0x2
00010174(4): MOV qword ptr [RBX + 0x8],RAX
00010178(2): JNZ 0x000101a8
0001017a(2): MOV EDI,EBP
0001017c(5): CALL 0x00002820
00010181(2): TEST EAX,EAX
00010183(2): JNZ 0x000101c8
00010185(2): MOV EDI,EBP
00010187(5): CALL 0x00002640
0001018c(4): MOV RAX,qword ptr [RBX + 0x8]
00010190(2): JMP 0x00010124
00010198(6): MOV dword ptr [RAX],0x16
0001019e(2): XOR EAX,EAX
000101a0(5): JMP 0x00010124
000101a8(5): MOV EDX,0x1
000101ad(2): MOV ESI,EBP
000101af(3): MOV RDI,RBX
000101b2(5): CALL 0x0000e3e0
000101b7(2): JMP 0x0001018c
000101b9(8): MOV qword ptr [RBX + 0x8],0x0
000101c1(2): XOR EAX,EAX
000101c3(5): JMP 0x00010124
000101c8(4): MOV EBX,dword ptr [R13]
000101cc(2): MOV EDI,EBP
000101ce(5): CALL 0x00002640
000101d3(2): XOR EAX,EAX
000101d5(4): MOV dword ptr [R13],EBX
000101d9(5): JMP 0x00010124
000101e0(2): PUSH R13
000101e2(2): PUSH R12
000101e4(3): MOV R13,RSI
000101e7(1): PUSH RBP
000101e8(1): PUSH RBX
000101e9(3): MOV RBX,RDI
000101ec(3): MOV R12,RDX
000101ef(4): SUB RSP,0x18
000101f3(9): MOV RAX,qword ptr FS:[0x28]
000101fc(5): MOV qword ptr [RSP + 0x8],RAX
00010201(2): XOR EAX,EAX
00010203(5): LEA RAX,[RSP + 0x4]
00010208(3): TEST RDI,RDI
0001020b(4): CMOVZ RBX,RAX
0001020f(3): MOV RDI,RBX
00010212(5): CALL 0x00002580
00010217(4): CMP RAX,-0x3
0001021b(3): MOV RBP,RAX
0001021e(2): JBE 0x00010240
00010220(3): TEST R12,R12
00010223(2): JZ 0x00010240
00010225(2): XOR EDI,EDI
00010227(5): CALL 0x0001f4b0
0001022c(2): TEST AL,AL
0001022e(2): JNZ 0x00010240
00010230(5): MOVZX EAX,byte ptr [R13]
00010235(5): MOV EBP,0x1
0001023a(2): MOV dword ptr [RBX],EAX
0001023c(4): NOP dword ptr [RAX]
00010240(5): MOV RDX,qword ptr [RSP + 0x8]
00010245(9): XOR RDX,qword ptr FS:[0x28]
0001024e(3): MOV RAX,RBP
00010251(2): JNZ 0x0001025e
00010253(4): ADD RSP,0x18
00010257(1): POP RBX
00010258(1): POP RBP
00010259(2): POP R12
0001025b(2): POP R13
0001025d(1): RET
0001025e(5): CALL 0x00002560
00010263(10): NOP word ptr CS:[RAX + RAX*0x1]
0001026d(3): NOP dword ptr [RAX]
00010270(1): PUSH RBX
00010271(3): MOV RBX,RDI
00010274(5): CALL 0x00002530
00010279(3): MOV RCX,RBX
0001027c(4): ADD RAX,0x1
00010280(2): XOR EDX,EDX
00010282(2): JMP 0x00010297
00010288(3): MOV byte ptr [RCX],SIL
0001028b(3): MOV RDX,RDI
0001028e(4): ADD RCX,0x1
00010292(3): CMP RAX,RDX
00010295(2): JBE 0x000102f0
00010297(4): MOVZX ESI,byte ptr [RBX + RDX*0x1]
0001029b(4): LEA RDI,[RDX + 0x1]
0001029f(4): CMP SIL,0x5c
000102a3(2): JNZ 0x00010288
000102a5(4): LEA R8,[RDX + 0x4]
000102a9(3): CMP R8,RAX
000102ac(2): JNC 0x00010288
000102ae(5): MOVZX R9D,byte ptr [RBX + RDI*0x1]
000102b3(4): LEA R10D,[R9 + -0x30]
000102b7(4): CMP R10B,0x3
000102bb(2): JA 0x00010288
000102bd(6): MOVZX R10D,byte ptr [RBX + RDX*0x1 + 0x2]
000102c3(4): LEA R11D,[R10 + -0x30]
000102c7(4): CMP R11B,0x7
000102cb(2): JA 0x00010288
000102cd(5): MOVZX EDX,byte ptr [RBX + RDX*0x1 + 0x3]
000102d2(4): LEA R11D,[RDX + -0x30]
000102d6(4): CMP R11B,0x7
000102da(2): JA 0x00010288
000102dc(4): LEA EDX,[R10 + R9*0x8]
000102e0(5): LEA EDX,[R11 + RDX*0x8 + -0x80]
000102e5(2): MOV byte ptr [RCX],DL
000102e7(3): MOV RDX,R8
000102ea(2): JMP 0x0001028e
000102f0(1): POP RBX
000102f1(1): RET
00010300(1): PUSH RBX
00010301(3): MOV RBX,RDI
00010304(3): MOV RDI,qword ptr [RDI]
00010307(5): CALL 0x00002a10
0001030c(4): MOV RDI,qword ptr [RBX + 0x8]
00010310(5): CALL 0x00002a10
00010315(4): MOV RDI,qword ptr [RBX + 0x10]
00010319(5): CALL 0x00002a10
0001031e(4): TEST byte ptr [RBX + 0x28],0x4
00010322(2): JZ 0x0001032d
00010324(4): MOV RDI,qword ptr [RBX + 0x18]
00010328(5): CALL 0x00002a10
0001032d(3): MOV RDI,RBX
00010330(1): POP RBX
00010331(5): JMP 0x00002a10
00010340(2): PUSH R15
00010342(2): PUSH R14
00010344(7): LEA RSI,[0x22817]
0001034b(2): PUSH R13
0001034d(2): PUSH R12
0001034f(7): LEA RDI,[0x226d0]
00010356(1): PUSH RBP
00010357(1): PUSH RBX
00010358(4): SUB RSP,0x68
0001035c(9): MOV RAX,qword ptr FS:[0x28]
00010365(5): MOV qword ptr [RSP + 0x58],RAX
0001036a(2): XOR EAX,EAX
0001036c(5): CALL 0x000028d0
00010371(3): TEST RAX,RAX
00010374(6): JZ 0x000107c0
0001037a(5): LEA R14,[RSP + 0x40]
0001037f(5): LEA R13,[RSP + 0x50]
00010384(5): LEA R12,[RSP + 0x48]
00010389(3): MOV RBP,RAX
0001038c(9): MOV qword ptr [RSP + 0x48],0x0
00010395(9): MOV qword ptr [RSP + 0x50],0x0
0001039e(2): NOP
000103a0(3): MOV RCX,RBP
000103a3(5): MOV EDX,0xa
000103a8(3): MOV RSI,R13
000103ab(3): MOV RDI,R12
000103ae(5): CALL 0x000026c0
000103b3(4): CMP RAX,-0x1
000103b7(6): JZ 0x000105f0
000103bd(5): LEA RCX,[RSP + 0x1c]
000103c2(5): LEA RDX,[RSP + 0x18]
000103c7(4): SUB RSP,0x8
000103cb(5): LEA RBX,[RSP + 0x1f]
000103d0(7): LEA RSI,[0x22780]
000103d7(1): PUSH RBX
000103d8(5): LEA RAX,[RSP + 0x34]
000103dd(1): PUSH RAX
000103de(5): LEA RAX,[RSP + 0x38]
000103e3(1): PUSH RAX
000103e4(5): MOV RDI,qword ptr [RSP + 0x68]
000103e9(2): XOR EAX,EAX
000103eb(5): LEA R9,[RSP + 0x5c]
000103f0(5): LEA R8,[RSP + 0x58]
000103f5(5): CALL 0x000027f0
000103fa(3): AND EAX,0xfffffffb
000103fd(4): ADD RSP,0x20
00010401(3): CMP EAX,0x3
00010404(2): JNZ 0x000103a0
00010406(5): MOVSXD RDI,dword ptr [RSP + 0x24]
0001040b(7): LEA RSI,[0x226e5]
00010412(5): ADD RDI,qword ptr [RSP + 0x48]
00010417(5): CALL 0x000029d0
0001041c(3): TEST RAX,RAX
0001041f(3): MOV R15,RAX
00010422(6): JZ 0x000103a0
00010428(5): LEA RCX,[RSP + 0x2c]
0001042d(5): LEA RDX,[RSP + 0x28]
00010432(4): SUB RSP,0x8
00010436(1): PUSH RBX
00010437(7): LEA RSI,[0x226e9]
0001043e(3): MOV RDI,RAX
00010441(2): XOR EAX,EAX
00010443(5): LEA R9,[RSP + 0x44]
00010448(5): LEA R8,[RSP + 0x40]
0001044d(5): CALL 0x000027f0
00010452(3): AND EAX,0xfffffffb
00010455(3): CMP EAX,0x1
00010458(1): POP RDX
00010459(1): POP RCX
0001045a(6): JNZ 0x000103a0
00010460(5): MOVSXD RAX,dword ptr [RSP + 0x3c]
00010465(5): MOV RDX,qword ptr [RSP + 0x48]
0001046a(4): MOV byte ptr [RDX + RAX*0x1],0x0
0001046e(5): MOVSXD RAX,dword ptr [RSP + 0x24]
00010473(5): MOV RDX,qword ptr [RSP + 0x48]
00010478(4): MOV byte ptr [RDX + RAX*0x1],0x0
0001047c(5): MOVSXD RAX,dword ptr [RSP + 0x2c]
00010481(5): MOV byte ptr [R15 + RAX*0x1],0x0
00010486(5): MOVSXD RAX,dword ptr [RSP + 0x34]
0001048b(5): MOV byte ptr [R15 + RAX*0x1],0x0
00010490(5): MOVSXD RDI,dword ptr [RSP + 0x30]
00010495(3): ADD RDI,R15
00010498(5): CALL 0x00010270
0001049d(5): MOVSXD RDI,dword ptr [RSP + 0x20]
000104a2(5): ADD RDI,qword ptr [RSP + 0x48]
000104a7(5): CALL 0x00010270
000104ac(5): MOVSXD RDI,dword ptr [RSP + 0x38]
000104b1(5): ADD RDI,qword ptr [RSP + 0x48]
000104b6(5): CALL 0x00010270
000104bb(5): MOV EDI,0x38
000104c0(5): CALL 0x0000c9e0
000104c5(5): MOVSXD RDI,dword ptr [RSP + 0x30]
000104ca(3): MOV RBX,RAX
000104cd(3): ADD RDI,R15
000104d0(5): CALL 0x0000cc10
000104d5(5): MOVSXD RDI,dword ptr [RSP + 0x20]
000104da(3): MOV qword ptr [RBX],RAX
000104dd(5): ADD RDI,qword ptr [RSP + 0x48]
000104e2(5): CALL 0x0000cc10
000104e7(5): MOVSXD RDI,dword ptr [RSP + 0x38]
000104ec(4): MOV qword ptr [RBX + 0x8],RAX
000104f0(5): ADD RDI,qword ptr [RSP + 0x48]
000104f5(5): CALL 0x0000cc10
000104fa(5): MOVSXD RDI,dword ptr [RSP + 0x28]
000104ff(4): MOV qword ptr [RBX + 0x10],RAX
00010503(3): ADD RDI,R15
00010506(5): CALL 0x0000cc10
0001050b(4): MOV EDX,dword ptr [RSP + 0x18]
0001050f(3): MOV R15,RAX
00010512(4): MOV qword ptr [RBX + 0x18],RAX
00010516(4): MOV EAX,dword ptr [RSP + 0x1c]
0001051a(10): MOV RSI,-0x100000000000
00010524(7): LEA RDI,[0x226ff]
0001052b(4): OR byte ptr [RBX + 0x28],0x4
0001052f(3): MOV RCX,RDX
00010532(4): SHL RDX,0x20
00010536(4): SHL RCX,0x8
0001053a(3): AND RDX,RSI
0001053d(10): MOV RSI,0xffffff00000
00010547(6): AND ECX,0xfff00
0001054d(3): OR RDX,RCX
00010550(3): MOVZX ECX,AL
00010553(4): SHL RAX,0xc
00010557(3): OR RDX,RCX
0001055a(3): AND RAX,RSI
0001055d(5): MOV ECX,0x7
00010562(3): MOV RSI,R15
00010565(3): OR RAX,RDX
00010568(5): MOV EDX,0x1
0001056d(2): CMPSB.REPE RDI,RSI
0001056f(4): MOV qword ptr [RBX + 0x20],RAX
00010573(3): SETA AL
00010576(2): SBB AL,0x0
00010578(2): TEST AL,AL
0001057a(2): JZ 0x0001059a
0001057c(7): LEA RDI,[0x22706]
00010583(5): MOV ECX,0x5
00010588(3): MOV RSI,R15
0001058b(2): CMPSB.REPE RDI,RSI
0001058d(3): SETA AL
00010590(2): SBB AL,0x0
00010592(2): TEST AL,AL
00010594(6): JNZ 0x00010648
0001059a(4): MOVZX EAX,byte ptr [RBX + 0x28]
0001059e(3): MOV R8,qword ptr [RBX]
000105a1(5): MOV ESI,0x3a
000105a6(3): MOV RDI,R8
000105a9(5): MOV qword ptr [RSP + 0x8],R8
000105ae(3): AND EAX,0xfffffffe
000105b1(2): OR EAX,EDX
000105b3(3): MOV byte ptr [RBX + 0x28],AL
000105b6(5): CALL 0x000025a0
000105bb(3): TEST RAX,RAX
000105be(5): MOV EDX,0x1
000105c3(5): MOV R8,qword ptr [RSP + 0x8]
000105c8(6): JZ 0x00010790
000105ce(4): MOVZX EAX,byte ptr [RBX + 0x28]
000105d2(2): ADD EDX,EDX
000105d4(3): AND EAX,0xfffffffd
000105d7(2): OR EAX,EDX
000105d9(3): MOV byte ptr [RBX + 0x28],AL
000105dc(3): MOV qword ptr [R14],RBX
000105df(4): LEA R14,[RBX + 0x30]
000105e3(5): JMP 0x000103a0
000105f0(5): MOV RDI,qword ptr [RSP + 0x48]
000105f5(5): CALL 0x00002a10
000105fa(4): TEST byte ptr [RBP],0x20
000105fe(6): JNZ 0x00010b60
00010604(3): MOV RDI,RBP
00010607(5): CALL 0x0000dca0
0001060c(3): CMP EAX,-0x1
0001060f(6): JZ 0x00010a4e
00010615(7): MOV qword ptr [R14],0x0
0001061c(5): MOV RAX,qword ptr [RSP + 0x40]
00010621(5): MOV RBX,qword ptr [RSP + 0x58]
00010626(9): XOR RBX,qword ptr FS:[0x28]
0001062f(6): JNZ 0x00010b83
00010635(4): ADD RSP,0x68
00010639(1): POP RBX
0001063a(1): POP RBP
0001063b(2): POP R12
0001063d(2): POP R13
0001063f(2): POP R14
00010641(2): POP R15
00010643(1): RET
00010648(7): LEA RDI,[0x2270b]
0001064f(5): MOV ECX,0x6
00010654(3): MOV RSI,R15
00010657(2): CMPSB.REPE RDI,RSI
00010659(3): SETA AL
0001065c(2): SBB AL,0x0
0001065e(2): TEST AL,AL
00010660(6): JZ 0x0001059a
00010666(7): LEA RDI,[0x22711]
0001066d(5): MOV ECX,0x8
00010672(3): MOV RSI,R15
00010675(2): CMPSB.REPE RDI,RSI
00010677(3): SETA AL
0001067a(2): SBB AL,0x0
0001067c(2): TEST AL,AL
0001067e(6): JZ 0x0001059a
00010684(7): LEA RDI,[0x22719]
0001068b(5): MOV ECX,0x7
00010690(3): MOV RSI,R15
00010693(2): CMPSB.REPE RDI,RSI
00010695(3): SETA AL
00010698(2): SBB AL,0x0
0001069a(2): TEST AL,AL
0001069c(6): JZ 0x0001059a
000106a2(7): LEA RDI,[0x22720]
000106a9(5): MOV ECX,0x8
000106ae(3): MOV RSI,R15
000106b1(2): CMPSB.REPE RDI,RSI
000106b3(3): SETA AL
000106b6(2): SBB AL,0x0
000106b8(2): TEST AL,AL
000106ba(6): JZ 0x0001059a
000106c0(7): LEA RDI,[0x22728]
000106c7(5): MOV ECX,0x7
000106cc(3): MOV RSI,R15
000106cf(2): CMPSB.REPE RDI,RSI
000106d1(3): SETA AL
000106d4(2): SBB AL,0x0
000106d6(2): TEST AL,AL
000106d8(6): JZ 0x0001059a
000106de(7): LEA RDI,[0x2272f]
000106e5(5): MOV ECX,0xb
000106ea(3): MOV RSI,R15
000106ed(2): CMPSB.REPE RDI,RSI
000106ef(3): SETA AL
000106f2(2): SBB AL,0x0
000106f4(2): TEST AL,AL
000106f6(6): JZ 0x0001059a
000106fc(7): LEA RDI,[0x2273a]
00010703(5): MOV ECX,0x6
00010708(3): MOV RSI,R15
0001070b(2): CMPSB.REPE RDI,RSI
0001070d(3): SETA AL
00010710(2): SBB AL,0x0
00010712(2): TEST AL,AL
00010714(6): JZ 0x0001059a
0001071a(7): LEA RDI,[0x22740]
00010721(5): MOV ECX,0x6
00010726(3): MOV RSI,R15
00010729(2): CMPSB.REPE RDI,RSI
0001072b(3): SETA AL
0001072e(2): SBB AL,0x0
00010730(2): TEST AL,AL
00010732(6): JZ 0x0001059a
00010738(7): LEA RDI,[0x22746]
0001073f(5): MOV ECX,0x7
00010744(3): MOV RSI,R15
00010747(2): CMPSB.REPE RDI,RSI
00010749(3): SETA AL
0001074c(2): SBB AL,0x0
0001074e(2): TEST AL,AL
00010750(6): JZ 0x0001059a
00010756(7): LEA RSI,[0x2274d]
0001075d(3): MOV RDI,R15
00010760(4): MOV byte ptr [RSP + 0x8],DL
00010764(5): CALL 0x000026d0
00010769(2): TEST EAX,EAX
0001076b(5): MOVZX EDX,byte ptr [RSP + 0x8]
00010770(6): JZ 0x0001059a
00010776(7): LEA RSI,[0x22754]
0001077d(3): MOV RDI,R15
00010780(5): CALL 0x000026d0
00010785(2): TEST EAX,EAX
00010787(3): SETZ DL
0001078a(5): JMP 0x0001059a
00010790(4): CMP byte ptr [R8],0x2f
00010794(6): JZ 0x00010ac0
0001079a(7): LEA RSI,[0x22764]
000107a1(5): MOV ECX,0x7
000107a6(3): MOV RDI,R8
000107a9(2): CMPSB.REPE RDI,RSI
000107ab(3): SETA AL
000107ae(2): SBB AL,0x0
000107b0(2): TEST AL,AL
000107b2(3): SETZ DL
000107b5(5): JMP 0x000105ce
000107c0(7): LEA RSI,[0x22817]
000107c7(7): LEA RDI,[0x2276b]
000107ce(5): CALL 0x000027c0
000107d3(3): TEST RAX,RAX
000107d6(3): MOV RBX,RAX
000107d9(6): JZ 0x00010b7c
000107df(3): MOV RDI,RBX
000107e2(5): LEA R14,[RSP + 0x40]
000107e7(7): LEA RBP,[0x226ff]
000107ee(5): CALL 0x000027b0
000107f3(3): TEST RAX,RAX
000107f6(3): MOV R13,RAX
000107f9(6): JZ 0x00010a3e
000107ff(1): NOP
00010800(7): LEA RSI,[0x22775]
00010807(3): MOV RDI,R13
0001080a(5): CALL 0x000029b0
0001080f(5): MOV EDI,0x38
00010814(3): MOV R15,RAX
00010817(5): CALL 0x0000c9e0
0001081c(4): MOV RDI,qword ptr [R13]
00010820(3): MOV R12,RAX
00010823(5): CALL 0x0000cc10
00010828(4): MOV RDI,qword ptr [R13 + 0x8]
0001082c(4): MOV qword ptr [R12],RAX
00010830(5): CALL 0x0000cc10
00010835(4): MOV RDI,qword ptr [R13 + 0x10]
00010839(5): MOV qword ptr [R12 + 0x8],RAX
0001083e(9): MOV qword ptr [R12 + 0x10],0x0
00010847(5): CALL 0x0000cc10
0001084c(5): MOV ECX,0x7
00010851(3): MOV RSI,RAX
00010854(3): MOV RDI,RBP
00010857(6): OR byte ptr [R12 + 0x28],0x4
0001085d(3): MOV R13,RAX
00010860(5): MOV qword ptr [R12 + 0x18],RAX
00010865(2): CMPSB.REPE RDI,RSI
00010867(5): MOV EDX,0x1
0001086c(3): SETA AL
0001086f(2): SBB AL,0x0
00010871(2): TEST AL,AL
00010873(6): JZ 0x000109d8
00010879(7): LEA RDI,[0x22706]
00010880(5): MOV ECX,0x5
00010885(3): MOV RSI,R13
00010888(2): CMPSB.REPE RDI,RSI
0001088a(3): SETA AL
0001088d(2): SBB AL,0x0
0001088f(2): TEST AL,AL
00010891(6): JZ 0x000109d8
00010897(7): LEA RDI,[0x2270b]
0001089e(5): MOV ECX,0x6
000108a3(3): MOV RSI,R13
000108a6(2): CMPSB.REPE RDI,RSI
000108a8(3): SETA AL
000108ab(2): SBB AL,0x0
000108ad(2): TEST AL,AL
000108af(6): JZ 0x000109d8
000108b5(7): LEA RDI,[0x22711]
000108bc(5): MOV ECX,0x8
000108c1(3): MOV RSI,R13
000108c4(2): CMPSB.REPE RDI,RSI
000108c6(3): SETA AL
000108c9(2): SBB AL,0x0
000108cb(2): TEST AL,AL
000108cd(6): JZ 0x000109d8
000108d3(7): LEA RDI,[0x22719]
000108da(5): MOV ECX,0x7
000108df(3): MOV RSI,R13
000108e2(2): CMPSB.REPE RDI,RSI
000108e4(3): SETA AL
000108e7(2): SBB AL,0x0
000108e9(2): TEST AL,AL
000108eb(6): JZ 0x000109d8
000108f1(7): LEA RDI,[0x22720]
000108f8(5): MOV ECX,0x8
000108fd(3): MOV RSI,R13
00010900(2): CMPSB.REPE RDI,RSI
00010902(3): SETA AL
00010905(2): SBB AL,0x0
00010907(2): TEST AL,AL
00010909(6): JZ 0x000109d8
0001090f(7): LEA RDI,[0x22728]
00010916(5): MOV ECX,0x7
0001091b(3): MOV RSI,R13
0001091e(2): CMPSB.REPE RDI,RSI
00010920(3): SETA AL
00010923(2): SBB AL,0x0
00010925(2): TEST AL,AL
00010927(6): JZ 0x000109d8
0001092d(7): LEA RDI,[0x2272f]
00010934(5): MOV ECX,0xb
00010939(3): MOV RSI,R13
0001093c(2): CMPSB.REPE RDI,RSI
0001093e(3): SETA AL
00010941(2): SBB AL,0x0
00010943(2): TEST AL,AL
00010945(6): JZ 0x000109d8
0001094b(7): LEA RDI,[0x2273a]
00010952(5): MOV ECX,0x6
00010957(3): MOV RSI,R13
0001095a(2): CMPSB.REPE RDI,RSI
0001095c(3): SETA AL
0001095f(2): SBB AL,0x0
00010961(2): TEST AL,AL
00010963(2): JZ 0x000109d8
00010965(7): LEA RDI,[0x22740]
0001096c(5): MOV ECX,0x6
00010971(3): MOV RSI,R13
00010974(2): CMPSB.REPE RDI,RSI
00010976(3): SETA AL
00010979(2): SBB AL,0x0
0001097b(2): TEST AL,AL
0001097d(2): JZ 0x000109d8
0001097f(7): LEA RDI,[0x22746]
00010986(5): MOV ECX,0x7
0001098b(3): MOV RSI,R13
0001098e(2): CMPSB.REPE RDI,RSI
00010990(3): SETA AL
00010993(2): SBB AL,0x0
00010995(2): TEST AL,AL
00010997(2): JZ 0x000109d8
00010999(7): LEA RSI,[0x2274d]
000109a0(3): MOV RDI,R13
000109a3(4): MOV byte ptr [RSP + 0x8],DL
000109a7(5): CALL 0x000026d0
000109ac(2): TEST EAX,EAX
000109ae(5): MOVZX EDX,byte ptr [RSP + 0x8]
000109b3(2): JZ 0x000109d8
000109b5(7): LEA RSI,[0x22754]
000109bc(3): MOV RDI,R13
000109bf(5): CALL 0x000026d0
000109c4(3): TEST R15,R15
000109c7(3): SETZ DL
000109ca(2): TEST EAX,EAX
000109cc(3): SETZ AL
000109cf(2): AND EDX,EAX
000109d1(7): NOP dword ptr [RAX]
000109d8(6): MOVZX EAX,byte ptr [R12 + 0x28]
000109de(4): MOV R15,qword ptr [R12]
000109e2(5): MOV ESI,0x3a
000109e7(3): MOV RDI,R15
000109ea(3): AND EAX,0xfffffffe
000109ed(2): OR EAX,EDX
000109ef(5): MOV byte ptr [R12 + 0x28],AL
000109f4(5): CALL 0x000025a0
000109f9(3): TEST RAX,RAX
000109fc(5): MOV EDX,0x1
00010a01(6): JZ 0x00010a98
00010a07(6): MOVZX EAX,byte ptr [R12 + 0x28]
00010a0d(2): ADD EDX,EDX
00010a0f(9): MOV qword ptr [R12 + 0x20],-0x1
00010a18(3): MOV RDI,RBX
00010a1b(3): AND EAX,0xfffffffd
00010a1e(2): OR EAX,EDX
00010a20(5): MOV byte ptr [R12 + 0x28],AL
00010a25(3): MOV qword ptr [R14],R12
00010a28(5): LEA R14,[R12 + 0x30]
00010a2d(5): CALL 0x000027b0
00010a32(3): TEST RAX,RAX
00010a35(3): MOV R13,RAX
00010a38(6): JNZ 0x00010800
00010a3e(3): MOV RDI,RBX
00010a41(5): CALL 0x000023f0
00010a46(2): TEST EAX,EAX
00010a48(6): JNZ 0x00010615
00010a4e(5): CALL 0x00002410
00010a53(3): MOV R13D,dword ptr [RAX]
00010a56(3): MOV R12,RAX
00010a59(7): MOV qword ptr [R14],0x0
00010a60(5): MOV RDI,qword ptr [RSP + 0x40]
00010a65(3): TEST RDI,RDI
00010a68(2): JZ 0x00010a86
00010a6a(6): NOP word ptr [RAX + RAX*0x1]
00010a70(4): MOV RBX,qword ptr [RDI + 0x30]
00010a74(5): CALL 0x00010300
00010a79(3): TEST RBX,RBX
00010a7c(5): MOV qword ptr [RSP + 0x40],RBX
00010a81(3): MOV RDI,RBX
00010a84(2): JNZ 0x00010a70
00010a86(4): MOV dword ptr [R12],R13D
00010a8a(2): XOR EAX,EAX
00010a8c(5): JMP 0x00010621
00010a98(4): CMP byte ptr [R15],0x2f
00010a9c(2): JZ 0x00010b10
00010a9e(7): LEA RSI,[0x22764]
00010aa5(5): MOV ECX,0x7
00010aaa(3): MOV RDI,R15
00010aad(2): CMPSB.REPE RDI,RSI
00010aaf(3): SETA AL
00010ab2(2): SBB AL,0x0
00010ab4(2): TEST AL,AL
00010ab6(3): SETZ DL
00010ab9(5): JMP 0x00010a07
00010ac0(5): CMP byte ptr [R8 + 0x1],0x2f
00010ac5(6): JNZ 0x0001079a
00010acb(7): LEA RDI,[0x22759]
00010ad2(5): MOV ECX,0x6
00010ad7(3): MOV RSI,R15
00010ada(2): CMPSB.REPE RDI,RSI
00010adc(3): SETA AL
00010adf(2): SBB AL,0x0
00010ae1(2): TEST AL,AL
00010ae3(6): JZ 0x000105ce
00010ae9(7): LEA RDI,[0x2275f]
00010af0(5): MOV ECX,0x5
00010af5(3): MOV RSI,R15
00010af8(2): CMPSB.REPE RDI,RSI
00010afa(3): SETA AL
00010afd(2): SBB AL,0x0
00010aff(2): TEST AL,AL
00010b01(6): JZ 0x000105ce
00010b07(5): JMP 0x0001079a
00010b10(5): CMP byte ptr [R15 + 0x1],0x2f
00010b15(2): JNZ 0x00010a9e
00010b17(7): LEA RDI,[0x22759]
00010b1e(5): MOV ECX,0x6
00010b23(3): MOV RSI,R13
00010b26(2): CMPSB.REPE RDI,RSI
00010b28(3): SETA AL
00010b2b(2): SBB AL,0x0
00010b2d(2): TEST AL,AL
00010b2f(6): JZ 0x00010a07
00010b35(7): LEA RDI,[0x2275f]
00010b3c(5): MOV ECX,0x5
00010b41(3): MOV RSI,R13
00010b44(2): CMPSB.REPE RDI,RSI
00010b46(3): SETA AL
00010b49(2): SBB AL,0x0
00010b4b(2): TEST AL,AL
00010b4d(6): JZ 0x00010a07
00010b53(5): JMP 0x00010a9e
00010b60(5): CALL 0x00002410
00010b65(3): MOV R13D,dword ptr [RAX]
00010b68(3): MOV R12,RAX
00010b6b(3): MOV RDI,RBP
00010b6e(5): CALL 0x0000dca0
00010b73(4): MOV dword ptr [R12],R13D
00010b77(5): JMP 0x00010a59
00010b7c(2): XOR EAX,EAX
00010b7e(5): JMP 0x00010621
00010b83(5): CALL 0x00002560
00010b88(8): NOP dword ptr [RAX + RAX*0x1]
00010b90(4): MOV RAX,qword ptr [RSI + 0x48]
00010b94(4): CMP qword ptr [RSI + 0x68],RAX
00010b98(2): JLE 0x00010bf0
00010b9a(4): MOV R8,qword ptr [RSI + 0x8]
00010b9e(7): CMP dword ptr [0x90 + RSI],0x1
00010ba5(5): MOVZX ECX,byte ptr [R8 + RAX*0x1]
00010baa(2): MOV byte ptr [RDI],CL
00010bac(2): JLE 0x00010bc3
00010bae(4): CMP RAX,qword ptr [RSI + 0x30]
00010bb2(2): JZ 0x00010bc3
00010bb4(4): MOV R9,qword ptr [RSI + 0x10]
00010bb8(5): CMP dword ptr [R9 + RAX*0x4],-0x1
00010bbd(6): JZ 0x00010c3f
00010bc3(3): CMP CL,0x5c
00010bc6(2): JZ 0x00010c30
00010bc8(3): CMP CL,0x5b
00010bcb(2): JZ 0x00010c00
00010bcd(3): CMP CL,0x5d
00010bd0(6): JZ 0x00010c70
00010bd6(3): CMP CL,0x5e
00010bd9(6): JZ 0x00010c60
00010bdf(3): CMP CL,0x2d
00010be2(2): JNZ 0x00010c3f
00010be4(4): MOV byte ptr [RDI + 0x8],0x16
00010be8(5): MOV EAX,0x1
00010bed(1): RET
00010bf0(4): MOV byte ptr [RDI + 0x8],0x2
00010bf4(2): XOR EAX,EAX
00010bf6(1): RET
00010c00(4): LEA RCX,[RAX + 0x1]
00010c04(4): CMP RCX,qword ptr [RSI + 0x58]
00010c08(2): JGE 0x00010c50
00010c0a(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
00010c10(2): CMP AL,0x3a
00010c12(2): MOV byte ptr [RDI],AL
00010c14(6): JZ 0x00010cb0
00010c1a(2): CMP AL,0x3d
00010c1c(6): JZ 0x00010ca0
00010c22(2): CMP AL,0x2e
00010c24(2): JNZ 0x00010c50
00010c26(4): MOV byte ptr [RDI + 0x8],0x1a
00010c2a(5): MOV EAX,0x2
00010c2f(1): RET
00010c30(3): AND EDX,0x1
00010c33(2): JZ 0x00010c3f
00010c35(4): LEA RDX,[RAX + 0x1]
00010c39(4): CMP RDX,qword ptr [RSI + 0x58]
00010c3d(2): JL 0x00010c80
00010c3f(4): MOV byte ptr [RDI + 0x8],0x1
00010c43(5): MOV EAX,0x1
00010c48(1): RET
00010c50(4): MOV byte ptr [RDI + 0x8],0x1
00010c54(3): MOV byte ptr [RDI],0x5b
00010c57(5): MOV EAX,0x1
00010c5c(1): RET
00010c60(4): MOV byte ptr [RDI + 0x8],0x19
00010c64(5): MOV EAX,0x1
00010c69(1): RET
00010c70(4): MOV byte ptr [RDI + 0x8],0x15
00010c74(5): MOV EAX,0x1
00010c79(1): RET
00010c80(4): MOV qword ptr [RSI + 0x48],RDX
00010c84(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
00010c8a(4): MOV byte ptr [RDI + 0x8],0x1
00010c8e(2): MOV byte ptr [RDI],AL
00010c90(5): MOV EAX,0x1
00010c95(1): RET
00010ca0(4): MOV byte ptr [RDI + 0x8],0x1c
00010ca4(5): MOV EAX,0x2
00010ca9(1): RET
00010cb0(3): AND EDX,0x4
00010cb3(2): JZ 0x00010c50
00010cb5(4): MOV byte ptr [RDI + 0x8],0x1e
00010cb9(5): MOV EAX,0x2
00010cbe(1): RET
00010cc0(4): CMP byte ptr [RSI + 0x30],0x11
00010cc4(2): JZ 0x00010cd0
00010cc6(2): XOR EAX,EAX
00010cc8(1): RET
00010cd0(4): CMP RDI,qword ptr [RSI + 0x28]
00010cd4(2): JNZ 0x00010cc6
00010cd6(4): OR byte ptr [RSI + 0x32],0x8
00010cda(2): XOR EAX,EAX
00010cdc(1): RET
00010ce0(2): PUSH R15
00010ce2(2): PUSH R14
00010ce4(3): MOV R9,RDX
00010ce7(2): PUSH R13
00010ce9(2): PUSH R12
00010ceb(4): LEA RDX,[RCX + RCX*0x2]
00010cef(1): PUSH RBP
00010cf0(1): PUSH RBX
00010cf1(3): MOV R15D,ESI
00010cf4(4): SUB RSP,0x48
00010cf8(7): MOV R14,qword ptr [0x98 + RDI]
00010cff(4): MOV qword ptr [RSP],RDI
00010d03(4): MOV RAX,qword ptr [R14 + 0x30]
00010d07(4): LEA R12,[RAX + RDX*0x8]
00010d0b(6): CMP qword ptr [R12 + 0x8],0x0
00010d11(6): JLE 0x00010ea5
00010d17(4): LEA RAX,[R8 + R8*0x4]
00010d1b(3): MOV R11,RCX
00010d1e(3): MOV ECX,R9D
00010d21(3): MOV R10,R8
00010d24(2): XOR EBX,EBX
00010d26(4): MOV dword ptr [RSP + 0x20],ESI
00010d2a(4): SHL RAX,0x3
00010d2e(3): MOV R15,R9
00010d31(5): MOV qword ptr [RSP + 0x10],R11
00010d36(5): MOV qword ptr [RSP + 0x28],RAX
00010d3b(5): MOV EAX,0x1
00010d40(3): SHL RAX,CL
00010d43(5): MOV qword ptr [RSP + 0x18],RAX
00010d48(2): NOT EAX
00010d4a(5): MOV word ptr [RSP + 0x26],AX
00010d4f(2): MOV EAX,ESI
00010d51(3): AND EAX,0x1
00010d54(4): MOV dword ptr [RSP + 0xc],EAX
00010d58(2): MOV EAX,ESI
00010d5a(3): AND EAX,0x2
00010d5d(4): MOV dword ptr [RSP + 0x8],EAX
00010d61(2): JMP 0x00010d85
00010d68(3): CMP DL,0x9
00010d6b(6): JZ 0x00010ec0
00010d71(3): CMP DL,0x4
00010d74(2): JZ 0x00010dc8
00010d76(4): ADD RBX,0x1
00010d7a(5): CMP qword ptr [R12 + 0x8],RBX
00010d7f(6): JLE 0x00010ea0
00010d85(5): MOV RAX,qword ptr [R12 + 0x10]
00010d8a(4): MOV RBP,qword ptr [RAX + RBX*0x8]
00010d8e(3): MOV RAX,RBP
00010d91(4): SHL RAX,0x4
00010d95(3): ADD RAX,qword ptr [R14]
00010d98(4): MOVZX EDX,byte ptr [RAX + 0x8]
00010d9c(3): CMP DL,0x8
00010d9f(2): JNZ 0x00010d68
00010da1(4): MOV ECX,dword ptr [RSP + 0xc]
00010da5(2): TEST ECX,ECX
00010da7(2): JZ 0x00010d76
00010da9(3): CMP qword ptr [RAX],R15
00010dac(2): JNZ 0x00010d76
00010dae(4): ADD RSP,0x48
00010db2(5): MOV EAX,0xffffffff
00010db7(1): POP RBX
00010db8(1): POP RBP
00010db9(2): POP R12
00010dbb(2): POP R13
00010dbd(2): POP R14
00010dbf(2): POP R15
00010dc1(1): RET
00010dc8(4): CMP R10,-0x1
00010dcc(2): JZ 0x00010d76
00010dce(4): MOV RAX,qword ptr [RSP]
00010dd2(5): MOV R13,qword ptr [RSP + 0x28]
00010dd7(3): MOV RDI,RBP
00010dda(5): MOV qword ptr [RSP + 0x30],R12
00010ddf(5): MOV qword ptr [RSP + 0x38],RBX
00010de4(3): MOV R12,R10
00010de7(7): ADD R13,qword ptr [0xd8 + RAX]
00010dee(5): LEA RAX,[RBP + RBP*0x2]
00010df3(3): MOV RBP,R14
00010df6(3): MOV R14,RDI
00010df9(4): SHL RAX,0x3
00010dfd(3): MOV RBX,RAX
00010e00(4): CMP qword ptr [R13],R14
00010e04(2): JNZ 0x00010e70
00010e06(4): CMP R15,0x3f
00010e0a(2): JG 0x00010e18
00010e0c(5): MOVZX EAX,word ptr [R13 + 0x22]
00010e11(5): TEST qword ptr [RSP + 0x18],RAX
00010e16(2): JZ 0x00010e70
00010e18(4): MOV RAX,qword ptr [RBP + 0x28]
00010e1c(5): MOV RAX,qword ptr [RAX + RBX*0x1 + 0x10]
00010e21(3): MOV RCX,qword ptr [RAX]
00010e24(5): CMP qword ptr [RSP + 0x10],RCX
00010e29(6): JZ 0x00010ef0
00010e2f(4): MOV ESI,dword ptr [RSP + 0x20]
00010e33(4): MOV RDI,qword ptr [RSP]
00010e37(3): MOV R8,R12
00010e3a(3): MOV RDX,R15
00010e3d(5): CALL 0x00010ce0
00010e42(3): CMP EAX,-0x1
00010e45(6): JZ 0x00010dae
00010e4b(2): TEST EAX,EAX
00010e4d(2): JNZ 0x00010e57
00010e4f(4): MOV ESI,dword ptr [RSP + 0x8]
00010e53(2): TEST ESI,ESI
00010e55(2): JNZ 0x00010ed5
00010e57(4): CMP R15,0x3f
00010e5b(2): JG 0x00010e70
00010e5d(5): MOVZX EAX,word ptr [RSP + 0x26]
00010e62(5): AND word ptr [R13 + 0x22],AX
00010e67(9): NOP word ptr [RAX + RAX*0x1]
00010e70(4): ADD R13,0x28
00010e74(5): CMP byte ptr [R13 + -0x8],0x0
00010e79(2): JNZ 0x00010e00
00010e7b(5): MOV RBX,qword ptr [RSP + 0x38]
00010e80(3): MOV R10,R12
00010e83(5): MOV R12,qword ptr [RSP + 0x30]
00010e88(3): MOV R14,RBP
00010e8b(4): ADD RBX,0x1
00010e8f(5): CMP qword ptr [R12 + 0x8],RBX
00010e94(6): JG 0x00010d85
00010e9a(6): NOP word ptr [RAX + RAX*0x1]
00010ea0(5): MOV R15D,dword ptr [RSP + 0x20]
00010ea5(4): ADD RSP,0x48
00010ea9(3): MOV EAX,R15D
00010eac(1): POP RBX
00010ead(2): SAR EAX,1
00010eaf(1): POP RBP
00010eb0(2): POP R12
00010eb2(2): POP R13
00010eb4(2): POP R14
00010eb6(2): POP R15
00010eb8(1): RET
00010ec0(4): MOV EDX,dword ptr [RSP + 0x8]
00010ec4(2): TEST EDX,EDX
00010ec6(6): JZ 0x00010d76
00010ecc(3): CMP qword ptr [RAX],R15
00010ecf(6): JNZ 0x00010d76
00010ed5(4): ADD RSP,0x48
00010ed9(2): XOR EAX,EAX
00010edb(1): POP RBX
00010edc(1): POP RBP
00010edd(2): POP R12
00010edf(2): POP R13
00010ee1(2): POP R14
00010ee3(2): POP R15
00010ee5(1): RET
00010ef0(5): MOV R15D,dword ptr [RSP + 0x20]
00010ef5(4): ADD RSP,0x48
00010ef9(1): POP RBX
00010efa(1): POP RBP
00010efb(3): MOV EAX,R15D
00010efe(3): AND EAX,0x1
00010f01(2): POP R12
00010f03(2): NEG EAX
00010f05(2): POP R13
00010f07(2): POP R14
00010f09(2): POP R15
00010f0b(1): RET
00010f10(7): MOV RAX,qword ptr [0xd8 + RDI]
00010f17(4): LEA RSI,[RSI + RSI*0x4]
00010f1b(4): LEA RAX,[RAX + RSI*0x8]
00010f1f(4): MOV R10,qword ptr [RAX + 0x10]
00010f23(3): CMP R10,R8
00010f26(2): JG 0x00010f70
00010f28(4): MOV RAX,qword ptr [RAX + 0x18]
00010f2c(3): CMP RAX,R8
00010f2f(2): JL 0x00010f50
00010f31(2): XOR ESI,ESI
00010f33(3): CMP R10,R8
00010f36(4): SETZ SIL
00010f3a(3): OR ESI,0x2
00010f3d(3): CMP RAX,R8
00010f40(2): JZ 0x00010f65
00010f42(2): XOR EAX,EAX
00010f44(3): CMP R10,R8
00010f47(2): JZ 0x00010f60
00010f49(2): RET
00010f50(5): MOV EAX,0x1
00010f55(1): RET
00010f60(5): MOV ESI,0x1
00010f65(3): MOV R8,R9
00010f68(5): JMP 0x00010ce0
00010f70(5): MOV EAX,0xffffffff
00010f75(1): RET
00010f80(2): PUSH R12
00010f82(3): MOV R12,RSI
00010f85(1): PUSH RBP
00010f86(3): MOV RBP,RDX
00010f89(1): PUSH RBX
00010f8a(3): MOV RBX,RDI
00010f8d(2): JMP 0x00010f93
00010f90(3): MOV RBX,RAX
00010f93(4): MOV RAX,qword ptr [RBX + 0x8]
00010f97(3): TEST RAX,RAX
00010f9a(2): JNZ 0x00010f90
00010f9c(4): MOV RAX,qword ptr [RBX + 0x10]
00010fa0(3): TEST RAX,RAX
00010fa3(2): JNZ 0x00010f90
00010fa5(3): MOV RSI,RBX
00010fa8(3): MOV RDI,RBP
00010fab(3): CALL R12
00010fae(2): TEST EAX,EAX
00010fb0(2): JNZ 0x00010fe6
00010fb2(6): NOP word ptr [RAX + RAX*0x1]
00010fb8(3): MOV RDX,qword ptr [RBX]
00010fbb(3): TEST RDX,RDX
00010fbe(2): JZ 0x00010fe6
00010fc0(4): MOV RAX,qword ptr [RDX + 0x10]
00010fc4(3): CMP RAX,RBX
00010fc7(3): MOV RBX,RDX
00010fca(4): SETZ SIL
00010fce(3): TEST RAX,RAX
00010fd1(3): SETZ CL
00010fd4(3): OR SIL,CL
00010fd7(2): JZ 0x00010f90
00010fd9(3): MOV RSI,RBX
00010fdc(3): MOV RDI,RBP
00010fdf(3): CALL R12
00010fe2(2): TEST EAX,EAX
00010fe4(2): JZ 0x00010fb8
00010fe6(1): POP RBX
00010fe7(1): POP RBP
00010fe8(2): POP R12
00010fea(1): RET
00010ff0(2): PUSH R12
00010ff2(3): MOV R12,RSI
00010ff5(1): PUSH RBP
00010ff6(3): MOV RBP,RDX
00010ff9(1): PUSH RBX
00010ffa(3): MOV RBX,RDI
00010ffd(2): JMP 0x00011003
00011000(3): MOV RBX,RDX
00011003(3): MOV RSI,RBX
00011006(3): MOV RDI,RBP
00011009(3): CALL R12
0001100c(2): TEST EAX,EAX
0001100e(2): JNZ 0x0001103c
00011010(4): MOV RDX,qword ptr [RBX + 0x8]
00011014(2): XOR ECX,ECX
00011016(3): TEST RDX,RDX
00011019(2): JNZ 0x00011000
0001101b(2): JMP 0x00011023
00011020(3): MOV RBX,RDX
00011023(4): MOV RDX,qword ptr [RBX + 0x10]
00011027(3): CMP RDX,RCX
0001102a(2): JZ 0x00011031
0001102c(3): TEST RDX,RDX
0001102f(2): JNZ 0x00011000
00011031(3): MOV RDX,qword ptr [RBX]
00011034(3): MOV RCX,RBX
00011037(3): TEST RDX,RDX
0001103a(2): JNZ 0x00011020
0001103c(1): POP RBX
0001103d(1): POP RBP
0001103e(2): POP R12
00011040(1): RET
00011050(1): PUSH RBP
00011051(1): PUSH RBX
00011052(3): MOV RBP,RSI
00011055(3): MOV RBX,RDI
00011058(4): SUB RSP,0x8
0001105c(7): CMP dword ptr [0x90 + RDI],0x1
00011063(2): JLE 0x000110ad
00011065(10): MOV RAX,0x1fffffffffffffff
0001106f(3): CMP RSI,RAX
00011072(2): JA 0x000110e0
00011074(4): MOV RDI,qword ptr [RDI + 0x10]
00011078(8): LEA RSI,[RSI*0x4]
00011080(5): CALL 0x00002830
00011085(3): TEST RAX,RAX
00011088(2): JZ 0x000110e0
0001108a(4): MOV RDI,qword ptr [RBX + 0x18]
0001108e(4): MOV qword ptr [RBX + 0x10],RAX
00011092(3): TEST RDI,RDI
00011095(2): JZ 0x000110ad
00011097(8): LEA RSI,[RBP*0x8]
0001109f(5): CALL 0x00002830
000110a4(3): TEST RAX,RAX
000110a7(2): JZ 0x000110e0
000110a9(4): MOV qword ptr [RBX + 0x18],RAX
000110ad(7): CMP byte ptr [0x8b + RBX],0x0
000110b4(2): JNZ 0x000110c8
000110b6(4): MOV qword ptr [RBX + 0x40],RBP
000110ba(4): ADD RSP,0x8
000110be(2): XOR EAX,EAX
000110c0(1): POP RBX
000110c1(1): POP RBP
000110c2(1): RET
000110c8(4): MOV RDI,qword ptr [RBX + 0x8]
000110cc(3): MOV RSI,RBP
000110cf(5): CALL 0x00002830
000110d4(3): TEST RAX,RAX
000110d7(2): JZ 0x000110e0
000110d9(4): MOV qword ptr [RBX + 0x8],RAX
000110dd(2): JMP 0x000110b6
000110e0(4): ADD RSP,0x8
000110e4(5): MOV EAX,0xc
000110e9(1): POP RBX
000110ea(1): POP RBP
000110eb(1): RET
000110f0(1): PUSH RBP
000110f1(1): PUSH RBX
000110f2(3): MOV RBP,RSI
000110f5(3): MOV RBX,RDI
000110f8(4): SUB RSP,0x8
000110fc(4): MOV RSI,qword ptr [RDI + 0x8]
00011100(3): CMP qword ptr [RDI],RSI
00011103(4): MOV RAX,qword ptr [RDI + 0x10]
00011107(2): JZ 0x00011128
00011109(4): LEA RDX,[RSI + 0x1]
0001110d(4): MOV qword ptr [RBX + 0x8],RDX
00011111(4): MOV qword ptr [RAX + RSI*0x8],RBP
00011115(5): MOV EAX,0x1
0001111a(4): ADD RSP,0x8
0001111e(1): POP RBX
0001111f(1): POP RBP
00011120(1): RET
00011128(4): ADD RSI,0x1
0001112c(4): LEA RDX,[RSI + RSI*0x1]
00011130(4): SHL RSI,0x4
00011134(3): MOV qword ptr [RDI],RDX
00011137(3): MOV RDI,RAX
0001113a(5): CALL 0x00002830
0001113f(3): TEST RAX,RAX
00011142(2): JZ 0x00011150
00011144(4): MOV qword ptr [RBX + 0x10],RAX
00011148(4): MOV RSI,qword ptr [RBX + 0x8]
0001114c(2): JMP 0x00011109
00011150(2): XOR EAX,EAX
00011152(2): JMP 0x0001111a
00011160(1): PUSH RBP
00011161(1): PUSH RBX
00011162(3): MOV RBP,RSI
00011165(3): MOV RBX,RDI
00011168(4): SUB RSP,0x8
0001116c(3): MOV RDX,qword ptr [RDI]
0001116f(3): TEST RDX,RDX
00011172(2): JZ 0x00011198
00011174(4): MOV RSI,qword ptr [RDI + 0x8]
00011178(4): MOV RAX,qword ptr [RDI + 0x10]
0001117c(3): TEST RSI,RSI
0001117f(2): JNZ 0x000111d0
00011181(3): MOV qword ptr [RAX],RBP
00011184(5): ADD qword ptr [RDI + 0x8],0x1
00011189(5): MOV EAX,0x1
0001118e(4): ADD RSP,0x8
00011192(1): POP RBX
00011193(1): POP RBP
00011194(1): RET
00011198(7): MOV qword ptr [RDI],0x1
0001119f(8): MOV qword ptr [RDI + 0x8],0x1
000111a7(5): MOV EDI,0x8
000111ac(5): CALL 0x00002780
000111b1(3): TEST RAX,RAX
000111b4(4): MOV qword ptr [RBX + 0x10],RAX
000111b8(6): JZ 0x00011248
000111be(3): MOV qword ptr [RAX],RBP
000111c1(4): ADD RSP,0x8
000111c5(5): MOV EAX,0x1
000111ca(1): POP RBX
000111cb(1): POP RBP
000111cc(1): RET
000111d0(3): CMP RDX,RSI
000111d3(6): JZ 0x00011260
000111d9(3): CMP qword ptr [RAX],RBP
000111dc(8): LEA RDX,[RSI*0x8]
000111e4(2): JLE 0x00011220
000111e6(3): TEST RSI,RSI
000111e9(2): JLE 0x00011203
000111eb(3): ADD RDX,RAX
000111ee(2): NOP
000111f0(4): MOV RCX,qword ptr [RDX + -0x8]
000111f4(4): SUB RDX,0x8
000111f8(4): MOV qword ptr [RDX + 0x8],RCX
000111fc(3): CMP RAX,RDX
000111ff(2): JNZ 0x000111f0
00011201(2): XOR EDX,EDX
00011203(4): MOV qword ptr [RAX + RDX*0x1],RBP
00011207(5): MOV EAX,0x1
0001120c(5): ADD qword ptr [RBX + 0x8],0x1
00011211(5): JMP 0x0001118e
00011220(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
00011225(3): CMP RBP,RCX
00011228(2): JGE 0x00011203
0001122a(6): NOP word ptr [RAX + RAX*0x1]
00011230(4): MOV qword ptr [RAX + RDX*0x1],RCX
00011234(4): SUB RDX,0x8
00011238(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
0001123d(3): CMP RCX,RBP
00011240(2): JG 0x00011230
00011242(2): JMP 0x00011203
00011248(8): MOV qword ptr [RBX + 0x8],0x0
00011250(7): MOV qword ptr [RBX],0x0
00011257(5): JMP 0x0001118e
00011260(4): LEA RDX,[RSI + RSI*0x1]
00011264(4): SHL RSI,0x4
00011268(3): MOV qword ptr [RDI],RDX
0001126b(3): MOV RDI,RAX
0001126e(5): CALL 0x00002830
00011273(3): TEST RAX,RAX
00011276(2): JZ 0x00011285
00011278(4): MOV qword ptr [RBX + 0x10],RAX
0001127c(4): MOV RSI,qword ptr [RBX + 0x8]
00011280(5): JMP 0x000111d9
00011285(2): XOR EAX,EAX
00011287(5): JMP 0x0001118e
00011290(2): PUSH R14
00011292(2): PUSH R13
00011294(3): MOV R14,RDI
00011297(2): PUSH R12
00011299(1): PUSH RBP
0001129a(3): MOV R12,RDX
0001129d(1): PUSH RBX
0001129e(4): MOV RBX,qword ptr [RSI + 0x10]
000112a2(3): MOV RBP,RSI
000112a5(3): MOV qword ptr [RSI],RDX
000112a8(8): MOV qword ptr [RSI + 0x28],0x0
000112b0(4): LEA R13,[RSI + 0x20]
000112b4(8): LEA RDI,[RBX*0x8]
000112bc(4): MOV qword ptr [RSI + 0x20],RBX
000112c0(5): CALL 0x00002780
000112c5(3): TEST RAX,RAX
000112c8(4): MOV qword ptr [RBP + 0x30],RAX
000112cc(2): JZ 0x0001130e
000112ce(3): TEST RBX,RBX
000112d1(2): JLE 0x00011320
000112d3(2): XOR EBX,EBX
000112d5(2): JMP 0x000112ea
000112e0(4): ADD RBX,0x1
000112e4(4): CMP qword ptr [RBP + 0x10],RBX
000112e8(2): JLE 0x00011320
000112ea(4): MOV RAX,qword ptr [RBP + 0x18]
000112ee(4): MOV RSI,qword ptr [RAX + RBX*0x8]
000112f2(3): MOV RAX,RSI
000112f5(4): SHL RAX,0x4
000112f9(3): ADD RAX,qword ptr [R14]
000112fc(4): TEST byte ptr [RAX + 0x8],0x8
00011300(2): JNZ 0x000112e0
00011302(3): MOV RDI,R13
00011305(5): CALL 0x000110f0
0001130a(2): TEST AL,AL
0001130c(2): JNZ 0x000112e0
0001130e(1): POP RBX
0001130f(5): MOV EAX,0xc
00011314(1): POP RBP
00011315(2): POP R12
00011317(2): POP R13
00011319(2): POP R14
0001131b(1): RET
00011320(7): AND R12,qword ptr [0x88 + R14]
00011327(4): MOV RAX,qword ptr [R14 + 0x40]
0001132b(4): LEA RDX,[R12 + R12*0x2]
0001132f(4): LEA RBX,[RAX + RDX*0x8]
00011333(3): MOV RDX,qword ptr [RBX]
00011336(4): CMP qword ptr [RBX + 0x8],RDX
0001133a(4): MOV RAX,qword ptr [RBX + 0x10]
0001133e(4): LEA RSI,[RDX + 0x1]
00011342(2): JLE 0x00011356
00011344(3): MOV qword ptr [RBX],RSI
00011347(4): MOV qword ptr [RAX + RDX*0x8],RBP
0001134b(2): XOR EAX,EAX
0001134d(1): POP RBX
0001134e(1): POP RBP
0001134f(2): POP R12
00011351(2): POP R13
00011353(2): POP R14
00011355(1): RET
00011356(4): LEA R12,[RSI + RSI*0x1]
0001135a(3): MOV RDI,RAX
0001135d(4): SHL RSI,0x4
00011361(5): CALL 0x00002830
00011366(3): TEST RAX,RAX
00011369(2): JZ 0x0001130e
0001136b(3): MOV RDX,qword ptr [RBX]
0001136e(4): MOV qword ptr [RBX + 0x10],RAX
00011372(4): MOV qword ptr [RBX + 0x8],R12
00011376(4): LEA RSI,[RDX + 0x1]
0001137a(2): JMP 0x00011344
00011380(2): PUSH R12
00011382(4): MOV R12,qword ptr [RDI + 0x58]
00011386(4): CMP qword ptr [RDI + 0x40],R12
0001138a(1): PUSH RBP
0001138b(3): MOV RBP,RDI
0001138e(5): CMOVLE R12,qword ptr [RDI + 0x40]
00011393(1): PUSH RBX
00011394(4): MOV RBX,qword ptr [RDI + 0x30]
00011398(3): CMP R12,RBX
0001139b(2): JLE 0x000113d5
0001139d(5): CALL 0x000023c0
000113a2(6): NOP word ptr [RAX + RAX*0x1]
000113a8(4): MOV RDX,qword ptr [RBP]
000113ac(4): MOV RCX,qword ptr [RBP + 0x78]
000113b0(3): ADD RDX,RBX
000113b3(4): ADD RDX,qword ptr [RBP + 0x28]
000113b7(3): TEST RCX,RCX
000113ba(3): MOVZX EDX,byte ptr [RDX]
000113bd(2): JNZ 0x000113e8
000113bf(3): MOV RSI,qword ptr [RAX]
000113c2(4): MOV RCX,qword ptr [RBP + 0x8]
000113c6(3): MOV EDX,dword ptr [RSI + RDX*0x4]
000113c9(3): MOV byte ptr [RCX + RBX*0x1],DL
000113cc(4): ADD RBX,0x1
000113d0(3): CMP R12,RBX
000113d3(2): JNZ 0x000113a8
000113d5(4): MOV qword ptr [RBP + 0x30],RBX
000113d9(4): MOV qword ptr [RBP + 0x38],RBX
000113dd(1): POP RBX
000113de(1): POP RBP
000113df(2): POP R12
000113e1(1): RET
000113e8(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
000113ec(2): JMP 0x000113bf
000113f0(2): PUSH R15
000113f2(2): PUSH R14
000113f4(2): PUSH R13
000113f6(2): PUSH R12
000113f8(1): PUSH RBP
000113f9(1): PUSH RBX
000113fa(3): MOV RBX,RDI
000113fd(4): SUB RSP,0x68
00011401(4): MOV R12,qword ptr [RDI + 0x58]
00011405(4): MOV RBP,qword ptr [RDI + 0x30]
00011409(9): MOV RAX,qword ptr FS:[0x28]
00011412(5): MOV qword ptr [RSP + 0x58],RAX
00011417(2): XOR EAX,EAX
00011419(4): CMP qword ptr [RDI + 0x40],R12
0001141d(5): CMOVLE R12,qword ptr [RDI + 0x40]
00011422(3): CMP R12,RBP
00011425(6): JLE 0x000114b4
0001142b(4): LEA R14,[RDI + 0x20]
0001142f(5): LEA R13,[RSP + 0xc]
00011434(4): NOP dword ptr [RAX]
00011438(4): MOV RDI,qword ptr [RBX + 0x78]
0001143c(3): MOV RDX,R12
0001143f(4): MOV R15,qword ptr [RBX + 0x20]
00011443(3): SUB RDX,RBP
00011446(3): TEST RDI,RDI
00011449(6): JNZ 0x00011530
0001144f(4): MOV RSI,qword ptr [RBX + 0x28]
00011453(3): ADD RSI,RBP
00011456(3): ADD RSI,qword ptr [RBX]
00011459(3): MOV RCX,R14
0001145c(3): MOV RDI,R13
0001145f(5): CALL 0x000101e0
00011464(4): LEA RDX,[RAX + -0x1]
00011468(4): CMP RDX,-0x3
0001146c(6): JA 0x00011500
00011472(4): CMP RAX,-0x2
00011476(4): MOV EDX,dword ptr [RSP + 0xc]
0001147a(2): JZ 0x000114f0
0001147c(4): MOV RCX,qword ptr [RBX + 0x10]
00011480(4): LEA RSI,[RBP + 0x1]
00011484(8): LEA RDI,[RBP*0x4]
0001148c(3): MOV dword ptr [RCX + RBP*0x4],EDX
0001148f(3): ADD RBP,RAX
00011492(3): CMP RSI,RBP
00011495(2): JGE 0x000114e0
00011497(5): LEA RDX,[RCX + RDI*0x1 + 0x4]
0001149c(4): LEA RAX,[RCX + RBP*0x4]
000114a0(6): MOV dword ptr [RDX],0xffffffff
000114a6(4): ADD RDX,0x4
000114aa(3): CMP RAX,RDX
000114ad(2): JNZ 0x000114a0
000114af(3): CMP RBP,R12
000114b2(2): JL 0x00011438
000114b4(5): MOV RAX,qword ptr [RSP + 0x58]
000114b9(9): XOR RAX,qword ptr FS:[0x28]
000114c2(4): MOV qword ptr [RBX + 0x30],RBP
000114c6(4): MOV qword ptr [RBX + 0x38],RBP
000114ca(6): JNZ 0x000115ae
000114d0(4): ADD RSP,0x68
000114d4(1): POP RBX
000114d5(1): POP RBP
000114d6(2): POP R12
000114d8(2): POP R13
000114da(2): POP R14
000114dc(2): POP R15
000114de(1): RET
000114e0(3): MOV RBP,RSI
000114e3(3): CMP RBP,R12
000114e6(6): JL 0x00011438
000114ec(2): JMP 0x000114b4
000114f0(4): MOV RAX,qword ptr [RBX + 0x58]
000114f4(4): CMP qword ptr [RBX + 0x40],RAX
000114f8(6): JL 0x00011598
000114fe(2): NOP
00011500(3): MOV RAX,qword ptr [RBX]
00011503(4): MOV RCX,qword ptr [RBX + 0x78]
00011507(3): ADD RAX,RBP
0001150a(4): ADD RAX,qword ptr [RBX + 0x28]
0001150e(3): TEST RCX,RCX
00011511(3): MOVZX EDX,byte ptr [RAX]
00011514(4): MOV dword ptr [RSP + 0xc],EDX
00011518(6): JNZ 0x000115a1
0001151e(4): MOV qword ptr [RBX + 0x20],R15
00011522(5): MOV EAX,0x1
00011527(5): JMP 0x0001147c
00011530(6): MOV ECX,dword ptr [0x90 + RBX]
00011536(2): XOR EAX,EAX
00011538(5): LEA RSI,[RSP + 0x10]
0001153d(2): TEST ECX,ECX
0001153f(2): JG 0x00011561
00011541(5): JMP 0x00011459
00011550(4): ADD RAX,0x1
00011554(3): CMP RDX,RAX
00011557(6): JZ 0x00011459
0001155d(4): MOV RDI,qword ptr [RBX + 0x78]
00011561(3): MOV RCX,qword ptr [RBX]
00011564(3): ADD RCX,RBP
00011567(3): ADD RCX,RAX
0001156a(4): ADD RCX,qword ptr [RBX + 0x28]
0001156e(3): MOVZX ECX,byte ptr [RCX]
00011571(4): MOVZX ECX,byte ptr [RDI + RCX*0x1]
00011575(4): MOV RDI,qword ptr [RBX + 0x8]
00011579(3): ADD RDI,RBP
0001157c(3): MOV byte ptr [RDI + RAX*0x1],CL
0001157f(3): MOV byte ptr [RSI + RAX*0x1],CL
00011582(3): LEA ECX,[RAX + 0x1]
00011585(6): CMP ECX,dword ptr [0x90 + RBX]
0001158b(2): JL 0x00011550
0001158d(5): JMP 0x00011459
00011598(4): MOV qword ptr [RBX + 0x20],R15
0001159c(5): JMP 0x000114b4
000115a1(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
000115a5(4): MOV dword ptr [RSP + 0xc],EDX
000115a9(5): JMP 0x0001151e
000115ae(5): CALL 0x00002560
000115b3(3): NOP dword ptr [RAX]
000115b6(10): NOP word ptr CS:[RAX + RAX*0x1]
000115c0(2): PUSH R15
000115c2(2): PUSH R14
000115c4(3): MOV R14,RDI
000115c7(2): PUSH R13
000115c9(2): PUSH R12
000115cb(1): PUSH RBP
000115cc(1): PUSH RBX
000115cd(7): SUB RSP,0xa8
000115d4(4): MOV RBX,qword ptr [RDI + 0x58]
000115d8(4): MOV R15,qword ptr [RDI + 0x30]
000115dc(9): MOV RAX,qword ptr FS:[0x28]
000115e5(8): MOV qword ptr [0x98 + RSP],RAX
000115ed(2): XOR EAX,EAX
000115ef(4): CMP qword ptr [RDI + 0x40],RBX
000115f3(5): CMOVLE RBX,qword ptr [RDI + 0x40]
000115f8(7): CMP byte ptr [0x8a + RDI],0x0
000115ff(2): JNZ 0x0001160c
00011601(5): CMP qword ptr [RDI + 0x78],0x0
00011606(6): JZ 0x00011790
0001160c(4): MOV R13,qword ptr [R14 + 0x38]
00011610(3): CMP R15,RBX
00011613(2): JL 0x00011650
00011615(4): MOV qword ptr [R14 + 0x30],R15
00011619(4): MOV qword ptr [R14 + 0x38],R13
0001161d(2): XOR EAX,EAX
0001161f(8): MOV RCX,qword ptr [0x98 + RSP]
00011627(9): XOR RCX,qword ptr FS:[0x28]
00011630(6): JNZ 0x00011bba
00011636(7): ADD RSP,0xa8
0001163d(1): POP RBX
0001163e(1): POP RBP
0001163f(2): POP R12
00011641(2): POP R13
00011643(2): POP R14
00011645(2): POP R15
00011647(1): RET
00011650(4): LEA RAX,[R14 + 0x20]
00011654(5): MOV qword ptr [RSP + 0x8],RAX
00011659(3): MOV RAX,RBX
0001165c(3): SUB RAX,R15
0001165f(5): MOV qword ptr [RSP + 0x10],RAX
00011664(5): LEA RAX,[RSP + 0x44]
00011669(5): MOV qword ptr [RSP + 0x20],RAX
0001166e(4): MOV RDX,qword ptr [R14 + 0x78]
00011672(4): MOV RAX,qword ptr [R14 + 0x20]
00011676(3): TEST RDX,RDX
00011679(5): MOV qword ptr [RSP + 0x48],RAX
0001167e(6): JNZ 0x00011989
00011684(4): MOV RBP,qword ptr [R14 + 0x28]
00011688(3): ADD RBP,R13
0001168b(3): ADD RBP,qword ptr [R14]
0001168e(5): MOV qword ptr [RSP + 0x18],RBP
00011693(5): MOV RCX,qword ptr [RSP + 0x8]
00011698(5): MOV RDX,qword ptr [RSP + 0x10]
0001169d(5): MOV RSI,qword ptr [RSP + 0x18]
000116a2(5): MOV RDI,qword ptr [RSP + 0x20]
000116a7(5): CALL 0x000101e0
000116ac(3): MOV RBP,RAX
000116af(4): LEA RAX,[RAX + -0x1]
000116b3(4): CMP RAX,-0x4
000116b7(5): MOV qword ptr [RSP + 0x20],RAX
000116bc(6): JA 0x000119f9
000116c2(4): MOV EDX,dword ptr [RSP + 0x44]
000116c6(2): MOV EDI,EDX
000116c8(4): MOV dword ptr [RSP + 0x10],EDX
000116cc(5): CALL 0x00002910
000116d1(4): MOV EDX,dword ptr [RSP + 0x10]
000116d5(3): MOV R12D,EAX
000116d8(5): MOV qword ptr [RSP + 0x8],R15
000116dd(2): CMP EDX,EAX
000116df(6): JZ 0x000119e0
000116e5(5): LEA RCX,[RSP + 0x50]
000116ea(5): LEA RDX,[RSP + 0x48]
000116ef(2): MOV ESI,EAX
000116f1(3): MOV RDI,RCX
000116f4(5): MOV qword ptr [RSP + 0x10],RCX
000116f9(5): CALL 0x00002790
000116fe(3): CMP RBP,RAX
00011701(3): MOV R11,RAX
00011704(5): MOV RCX,qword ptr [RSP + 0x10]
00011709(6): JNZ 0x00011a96
0001170f(4): MOV RDI,qword ptr [R14 + 0x8]
00011713(3): MOV RDX,RBP
00011716(3): MOV RSI,RCX
00011719(3): ADD RDI,R15
0001171c(5): CALL 0x00002710
00011721(8): CMP byte ptr [0x8c + R14],0x0
00011729(5): LEA RAX,[RBP + R13*0x1]
0001172e(6): JNZ 0x00011a65
00011734(4): ADD R15,0x1
00011738(5): MOV RSI,qword ptr [RSP + 0x8]
0001173d(4): MOV RDX,qword ptr [R14 + 0x10]
00011741(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
00011746(3): MOV R13,RAX
00011749(3): CMP R15,RCX
0001174c(8): LEA RAX,[RSI*0x4]
00011754(4): MOV dword ptr [RDX + RSI*0x4],R12D
00011758(6): JGE 0x00011610
0001175e(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
00011763(4): LEA RDX,[RDX + RCX*0x4]
00011767(9): NOP word ptr [RAX + RAX*0x1]
00011770(6): MOV dword ptr [RAX],0xffffffff
00011776(4): ADD RAX,0x4
0001177a(3): CMP RDX,RAX
0001177d(2): JNZ 0x00011770
0001177f(3): MOV R15,RCX
00011782(5): JMP 0x00011610
00011790(7): CMP byte ptr [0x8c + RDI],0x0
00011797(6): JNZ 0x0001160c
0001179d(3): CMP R15,RBX
000117a0(6): JGE 0x00011938
000117a6(4): LEA RAX,[RDI + 0x20]
000117aa(5): MOV qword ptr [RSP + 0x8],RAX
000117af(5): LEA RAX,[RSP + 0x44]
000117b4(5): MOV qword ptr [RSP + 0x30],RAX
000117b9(5): LEA RAX,[RSP + 0x48]
000117be(5): MOV qword ptr [RSP + 0x38],RAX
000117c3(5): LEA RAX,[RSP + 0x50]
000117c8(5): MOV qword ptr [RSP + 0x28],RAX
000117cd(3): NOP dword ptr [RAX]
000117d0(4): MOV RBP,qword ptr [R14 + 0x28]
000117d4(3): MOV R13,R15
000117d7(3): ADD RBP,R15
000117da(3): ADD RBP,qword ptr [R14]
000117dd(5): MOVZX R12D,byte ptr [RBP]
000117e2(4): TEST R12B,0x80
000117e6(2): JNZ 0x000117fa
000117e8(5): MOV RDI,qword ptr [RSP + 0x8]
000117ed(5): CALL 0x00002990
000117f2(2): TEST EAX,EAX
000117f4(6): JNZ 0x000118e8
000117fa(4): MOV RAX,qword ptr [R14 + 0x20]
000117fe(5): MOV RDI,qword ptr [RSP + 0x30]
00011803(3): MOV RDX,RBX
00011806(5): MOV RCX,qword ptr [RSP + 0x8]
0001180b(3): SUB RDX,R15
0001180e(3): MOV RSI,RBP
00011811(5): MOV qword ptr [RSP + 0x10],RDX
00011816(5): MOV qword ptr [RSP + 0x48],RAX
0001181b(5): MOV qword ptr [RSP + 0x20],RDI
00011820(5): CALL 0x000101e0
00011825(3): MOV RBP,RAX
00011828(4): LEA RAX,[RAX + -0x1]
0001182c(4): CMP RAX,-0x4
00011830(6): JA 0x00011918
00011836(4): MOV EDX,dword ptr [RSP + 0x44]
0001183a(2): MOV EDI,EDX
0001183c(4): MOV dword ptr [RSP + 0x18],EDX
00011840(5): CALL 0x00002910
00011845(4): MOV EDX,dword ptr [RSP + 0x18]
00011849(3): MOV R12D,EAX
0001184c(2): CMP EDX,EAX
0001184e(2): JZ 0x000118c8
00011850(5): MOV RDX,qword ptr [RSP + 0x38]
00011855(5): MOV RDI,qword ptr [RSP + 0x28]
0001185a(2): MOV ESI,EAX
0001185c(5): CALL 0x00002790
00011861(3): CMP RBP,RAX
00011864(6): JNZ 0x000119d8
0001186a(4): MOV RDI,qword ptr [R14 + 0x8]
0001186e(5): MOV RSI,qword ptr [RSP + 0x28]
00011873(3): MOV RDX,RBP
00011876(3): ADD RDI,R15
00011879(5): CALL 0x00002710
0001187e(4): ADD R15,0x1
00011882(4): MOV RDX,qword ptr [R14 + 0x10]
00011886(8): LEA RAX,[R13*0x4]
0001188e(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
00011893(3): CMP R15,RCX
00011896(4): MOV dword ptr [RDX + R13*0x4],R12D
0001189a(2): JGE 0x000118ba
0001189c(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
000118a1(4): LEA RDX,[RDX + RCX*0x4]
000118a5(3): NOP dword ptr [RAX]
000118a8(6): MOV dword ptr [RAX],0xffffffff
000118ae(4): ADD RAX,0x4
000118b2(3): CMP RDX,RAX
000118b5(2): JNZ 0x000118a8
000118b7(3): MOV R15,RCX
000118ba(3): CMP RBX,R15
000118bd(6): JG 0x000117d0
000118c3(2): JMP 0x00011938
000118c8(4): MOV RSI,qword ptr [R14 + 0x28]
000118cc(4): MOV RDI,qword ptr [R14 + 0x8]
000118d0(3): MOV RDX,RBP
000118d3(3): ADD RSI,R15
000118d6(3): ADD RSI,qword ptr [R14]
000118d9(3): ADD RDI,R15
000118dc(5): CALL 0x00002710
000118e1(2): JMP 0x0001187e
000118e8(5): CALL 0x000023c0
000118ed(3): MOV RAX,qword ptr [RAX]
000118f0(4): MOV RDX,qword ptr [R14 + 0x8]
000118f4(4): MOV EAX,dword ptr [RAX + R12*0x4]
000118f8(4): MOV byte ptr [RDX + R15*0x1],AL
000118fc(4): MOV RDX,qword ptr [R14 + 0x8]
00011900(4): MOV RAX,qword ptr [R14 + 0x10]
00011904(5): MOVZX EDX,byte ptr [RDX + R15*0x1]
00011909(4): MOV dword ptr [RAX + R15*0x4],EDX
0001190d(4): ADD R15,0x1
00011911(2): JMP 0x000118ba
00011918(4): CMP RAX,-0x3
0001191c(2): JNZ 0x00011950
0001191e(4): MOV RAX,qword ptr [R14 + 0x58]
00011922(4): CMP qword ptr [R14 + 0x40],RAX
00011926(2): JGE 0x00011950
00011928(5): MOV RAX,qword ptr [RSP + 0x48]
0001192d(4): MOV qword ptr [R14 + 0x20],RAX
00011931(7): NOP dword ptr [RAX]
00011938(4): MOV qword ptr [R14 + 0x30],R15
0001193c(4): MOV qword ptr [R14 + 0x38],R15
00011940(2): XOR EAX,EAX
00011942(5): JMP 0x0001161f
00011950(3): MOV RAX,qword ptr [R14]
00011953(4): MOV RDX,qword ptr [R14 + 0x8]
00011957(3): ADD RAX,R15
0001195a(4): ADD RAX,qword ptr [R14 + 0x28]
0001195e(3): MOVZX EAX,byte ptr [RAX]
00011961(4): MOV byte ptr [RDX + R15*0x1],AL
00011965(4): MOV RDX,qword ptr [R14 + 0x10]
00011969(4): ADD R15,0x1
0001196d(4): CMP RBP,-0x1
00011971(4): MOV dword ptr [RDX + R13*0x4],EAX
00011975(6): JNZ 0x000118ba
0001197b(5): MOV RAX,qword ptr [RSP + 0x48]
00011980(4): MOV qword ptr [R14 + 0x20],RAX
00011984(5): JMP 0x000118ba
00011989(7): MOV EAX,dword ptr [0x90 + R14]
00011990(2): TEST EAX,EAX
00011992(6): JLE 0x00011bb0
00011998(4): MOV RDI,qword ptr [R14 + 0x28]
0001199c(4): LEA R11D,[RAX + -0x1]
000119a0(5): LEA RCX,[RSP + 0x50]
000119a5(2): XOR EAX,EAX
000119a7(3): ADD RDI,R13
000119aa(3): ADD RDI,qword ptr [R14]
000119ad(2): JMP 0x000119ba
000119af(4): ADD RAX,0x1
000119b3(5): CMP qword ptr [RSP + 0x10],RAX
000119b8(2): JZ 0x000119cb
000119ba(4): MOVZX ESI,byte ptr [RDI + RAX*0x1]
000119be(3): CMP R11,RAX
000119c1(4): MOVZX ESI,byte ptr [RDX + RSI*0x1]
000119c5(4): MOV byte ptr [RCX + RAX*0x1],SIL
000119c9(2): JNZ 0x000119af
000119cb(5): MOV qword ptr [RSP + 0x18],RCX
000119d0(5): JMP 0x00011693
000119d8(3): MOV R13,R15
000119db(5): JMP 0x0001166e
000119e0(4): MOV RDI,qword ptr [R14 + 0x8]
000119e4(5): MOV RSI,qword ptr [RSP + 0x18]
000119e9(3): MOV RDX,RBP
000119ec(3): ADD RDI,R15
000119ef(5): CALL 0x00002710
000119f4(5): JMP 0x00011721
000119f9(6): CMP qword ptr [RSP + 0x20],-0x3
000119ff(2): JNZ 0x00011a0b
00011a01(4): MOV RAX,qword ptr [R14 + 0x58]
00011a05(4): CMP qword ptr [R14 + 0x40],RAX
00011a09(2): JL 0x00011a88
00011a0b(3): MOV RAX,qword ptr [R14]
00011a0e(4): MOV RDX,qword ptr [R14 + 0x78]
00011a12(3): ADD RAX,R13
00011a15(4): ADD RAX,qword ptr [R14 + 0x28]
00011a19(3): TEST RDX,RDX
00011a1c(3): MOVZX EAX,byte ptr [RAX]
00011a1f(6): JNZ 0x00011bcc
00011a25(4): MOV RDX,qword ptr [R14 + 0x8]
00011a29(3): MOV RCX,R15
00011a2c(4): MOV byte ptr [RDX + R15*0x1],AL
00011a30(8): CMP byte ptr [0x8c + R14],0x0
00011a38(6): JNZ 0x00011bbf
00011a3e(4): MOV RDX,qword ptr [R14 + 0x10]
00011a42(4): ADD R13,0x1
00011a46(4): ADD R15,0x1
00011a4a(4): CMP RBP,-0x1
00011a4e(3): MOV dword ptr [RDX + RCX*0x4],EAX
00011a51(6): JNZ 0x00011610
00011a57(5): MOV RAX,qword ptr [RSP + 0x48]
00011a5c(4): MOV qword ptr [R14 + 0x20],RAX
00011a60(5): JMP 0x00011610
00011a65(4): MOV RDX,qword ptr [R14 + 0x18]
00011a69(3): MOV RCX,R15
00011a6c(3): MOV R10,R13
00011a6f(3): SUB RCX,R13
00011a72(4): LEA RDX,[RDX + RCX*0x8]
00011a76(4): MOV qword ptr [RDX + R10*0x8],R10
00011a7a(4): ADD R10,0x1
00011a7e(3): CMP RAX,R10
00011a81(2): JNZ 0x00011a76
00011a83(5): JMP 0x00011734
00011a88(5): MOV RAX,qword ptr [RSP + 0x48]
00011a8d(4): MOV qword ptr [R14 + 0x20],RAX
00011a91(5): JMP 0x00011615
00011a96(4): CMP RAX,-0x1
00011a9a(6): JZ 0x000119e0
00011aa0(4): LEA RAX,[RAX + R15*0x1]
00011aa4(3): MOV RSI,RAX
00011aa7(5): MOV qword ptr [RSP + 0x8],RAX
00011aac(4): MOV RAX,qword ptr [R14 + 0x40]
00011ab0(3): CMP RSI,RAX
00011ab3(2): JA 0x00011a88
00011ab5(5): CMP qword ptr [R14 + 0x18],0x0
00011aba(6): JZ 0x00011b78
00011ac0(8): CMP byte ptr [0x8c + R14],0x0
00011ac8(2): JNZ 0x00011aea
00011aca(3): TEST R15,R15
00011acd(2): JZ 0x00011ae2
00011acf(4): MOV RDX,qword ptr [R14 + 0x18]
00011ad3(2): XOR EAX,EAX
00011ad5(4): MOV qword ptr [RDX + RAX*0x8],RAX
00011ad9(4): ADD RAX,0x1
00011add(3): CMP RAX,R15
00011ae0(2): JNZ 0x00011ad5
00011ae2(8): MOV byte ptr [0x8c + R14],0x1
00011aea(4): MOV RDI,qword ptr [R14 + 0x8]
00011aee(3): MOV RSI,RCX
00011af1(3): MOV RDX,R11
00011af4(5): MOV qword ptr [RSP + 0x10],R11
00011af9(3): ADD RDI,R15
00011afc(5): CALL 0x00002710
00011b01(4): MOV RAX,qword ptr [R14 + 0x10]
00011b05(5): MOV R11,qword ptr [RSP + 0x10]
00011b0a(4): LEA RCX,[RAX + R15*0x4]
00011b0e(4): MOV RAX,qword ptr [R14 + 0x18]
00011b12(4): CMP R11,0x1
00011b16(3): MOV dword ptr [RCX],R12D
00011b19(4): LEA RSI,[RAX + R15*0x8]
00011b1d(3): MOV qword ptr [RSI],R13
00011b20(2): JBE 0x00011b4a
00011b22(5): MOV EAX,0x1
00011b27(5): MOV RDX,qword ptr [RSP + 0x20]
00011b2c(3): CMP RAX,RBP
00011b2f(4): CMOVC RDX,RAX
00011b33(3): ADD RDX,R13
00011b36(4): MOV qword ptr [RSI + RAX*0x8],RDX
00011b3a(7): MOV dword ptr [RCX + RAX*0x4],0xffffffff
00011b41(4): ADD RAX,0x1
00011b45(3): CMP RAX,R11
00011b48(2): JNZ 0x00011b27
00011b4a(4): MOV RBX,qword ptr [R14 + 0x58]
00011b4e(3): SUB R11,RBP
00011b51(3): ADD RBX,R11
00011b54(4): CMP R13,qword ptr [R14 + 0x60]
00011b58(4): MOV qword ptr [R14 + 0x58],RBX
00011b5c(2): JGE 0x00011b62
00011b5e(4): ADD qword ptr [R14 + 0x68],R11
00011b62(4): CMP qword ptr [R14 + 0x40],RBX
00011b66(5): MOV R15,qword ptr [RSP + 0x8]
00011b6b(5): CMOVLE RBX,qword ptr [R14 + 0x40]
00011b70(3): ADD R13,RBP
00011b73(5): JMP 0x00011610
00011b78(8): LEA RDI,[RAX*0x8]
00011b80(5): MOV qword ptr [RSP + 0x18],RCX
00011b85(5): MOV qword ptr [RSP + 0x10],R11
00011b8a(5): CALL 0x00002780
00011b8f(3): TEST RAX,RAX
00011b92(4): MOV qword ptr [R14 + 0x18],RAX
00011b96(5): MOV R11,qword ptr [RSP + 0x10]
00011b9b(5): MOV RCX,qword ptr [RSP + 0x18]
00011ba0(6): JNZ 0x00011ac0
00011ba6(5): MOV EAX,0xc
00011bab(5): JMP 0x0001161f
00011bb0(5): LEA RCX,[RSP + 0x50]
00011bb5(5): JMP 0x000119cb
00011bba(5): CALL 0x00002560
00011bbf(4): MOV RDX,qword ptr [R14 + 0x18]
00011bc3(4): MOV qword ptr [RDX + R15*0x8],R13
00011bc7(5): JMP 0x00011a3e
00011bcc(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
00011bd0(5): JMP 0x00011a25
00011be0(1): PUSH RBP
00011be1(1): PUSH RBX
00011be2(10): MOV RDX,0xffffffffffffffe
00011bec(4): SUB RSP,0x8
00011bf0(4): MOV RAX,qword ptr [RDI + 0x40]
00011bf4(3): CMP RAX,RDX
00011bf7(6): JA 0x00011d08
00011bfd(4): MOV RDX,qword ptr [RDI + 0x58]
00011c01(3): ADD RAX,RAX
00011c04(3): MOVSXD RSI,ESI
00011c07(3): MOV RBX,RDI
00011c0a(3): CMP RAX,RDX
00011c0d(4): CMOVG RAX,RDX
00011c11(3): CMP RAX,RSI
00011c14(4): CMOVGE RSI,RAX
00011c18(5): CALL 0x00011050
00011c1d(2): TEST EAX,EAX
00011c1f(2): MOV EBP,EAX
00011c21(6): JNZ 0x00011cdd
00011c27(7): MOV RDI,qword ptr [0xb8 + RBX]
00011c2e(3): TEST RDI,RDI
00011c31(2): JZ 0x00011c54
00011c33(4): MOV RAX,qword ptr [RBX + 0x40]
00011c37(8): LEA RSI,[0x8 + RAX*0x8]
00011c3f(5): CALL 0x00002830
00011c44(3): TEST RAX,RAX
00011c47(6): JZ 0x00011d08
00011c4d(7): MOV qword ptr [0xb8 + RBX],RAX
00011c54(7): CMP byte ptr [0x88 + RBX],0x0
00011c5b(6): MOV EAX,dword ptr [0x90 + RBX]
00011c61(2): JZ 0x00011c80
00011c63(3): CMP EAX,0x1
00011c66(3): MOV RDI,RBX
00011c69(6): JLE 0x00011d20
00011c6f(4): ADD RSP,0x8
00011c73(1): POP RBX
00011c74(1): POP RBP
00011c75(5): JMP 0x000115c0
00011c80(3): CMP EAX,0x1
00011c83(2): JG 0x00011cf0
00011c85(4): MOV RCX,qword ptr [RBX + 0x78]
00011c89(3): TEST RCX,RCX
00011c8c(2): JZ 0x00011cdd
00011c8e(4): MOV RSI,qword ptr [RBX + 0x58]
00011c92(4): CMP qword ptr [RBX + 0x40],RSI
00011c96(5): CMOVLE RSI,qword ptr [RBX + 0x40]
00011c9b(4): MOV RAX,qword ptr [RBX + 0x30]
00011c9f(3): CMP RSI,RAX
00011ca2(2): JG 0x00011cb4
00011ca4(2): JMP 0x00011cd5
00011cb0(4): MOV RCX,qword ptr [RBX + 0x78]
00011cb4(3): MOV RDX,qword ptr [RBX]
00011cb7(3): ADD RDX,RAX
00011cba(4): ADD RDX,qword ptr [RBX + 0x28]
00011cbe(3): MOVZX EDX,byte ptr [RDX]
00011cc1(4): MOVZX ECX,byte ptr [RCX + RDX*0x1]
00011cc5(4): MOV RDX,qword ptr [RBX + 0x8]
00011cc9(3): MOV byte ptr [RDX + RAX*0x1],CL
00011ccc(4): ADD RAX,0x1
00011cd0(3): CMP RSI,RAX
00011cd3(2): JNZ 0x00011cb0
00011cd5(4): MOV qword ptr [RBX + 0x30],RAX
00011cd9(4): MOV qword ptr [RBX + 0x38],RAX
00011cdd(4): ADD RSP,0x8
00011ce1(2): MOV EAX,EBP
00011ce3(1): POP RBX
00011ce4(1): POP RBP
00011ce5(1): RET
00011cf0(3): MOV RDI,RBX
00011cf3(5): CALL 0x000113f0
00011cf8(4): ADD RSP,0x8
00011cfc(2): MOV EAX,EBP
00011cfe(1): POP RBX
00011cff(1): POP RBP
00011d00(1): RET
00011d08(5): MOV EBP,0xc
00011d0d(4): ADD RSP,0x8
00011d11(2): MOV EAX,EBP
00011d13(1): POP RBX
00011d14(1): POP RBP
00011d15(1): RET
00011d20(5): CALL 0x00011380
00011d25(4): ADD RSP,0x8
00011d29(2): MOV EAX,EBP
00011d2b(1): POP RBX
00011d2c(1): POP RBP
00011d2d(1): RET
00011d30(2): PUSH R12
00011d32(1): PUSH RBP
00011d33(3): MOV RBP,RSI
00011d36(1): PUSH RBX
00011d37(4): MOV RAX,qword ptr [RDI + 0x40]
00011d3b(3): MOV RBX,RDI
00011d3e(7): MOV R12,qword ptr [0xc0 + RDI]
00011d45(3): CMP RAX,RSI
00011d48(2): JG 0x00011d70
00011d4a(4): CMP RAX,qword ptr [RDI + 0x58]
00011d4e(2): JGE 0x00011d70
00011d50(3): LEA ESI,[RBP + 0x1]
00011d53(3): MOV RDI,RBX
00011d56(5): CALL 0x00011be0
00011d5b(2): TEST EAX,EAX
00011d5d(2): JNZ 0x00011d66
00011d5f(3): CMP R12,RBP
00011d62(2): JL 0x00011d90
00011d64(2): XOR EAX,EAX
00011d66(1): POP RBX
00011d67(1): POP RBP
00011d68(2): POP R12
00011d6a(1): RET
00011d70(4): MOV RAX,qword ptr [RBX + 0x30]
00011d74(3): CMP RAX,RBP
00011d77(2): JG 0x00011d5f
00011d79(4): CMP RAX,qword ptr [RBX + 0x58]
00011d7d(2): JGE 0x00011d5f
00011d7f(3): LEA ESI,[RBP + 0x1]
00011d82(3): MOV RDI,RBX
00011d85(5): CALL 0x00011be0
00011d8a(2): TEST EAX,EAX
00011d8c(2): JZ 0x00011d5f
00011d8e(2): JMP 0x00011d66
00011d90(7): MOV RAX,qword ptr [0xb8 + RBX]
00011d97(3): MOV RDX,RBP
00011d9a(2): XOR ESI,ESI
00011d9c(3): SUB RDX,R12
00011d9f(4): SHL RDX,0x3
00011da3(5): LEA RDI,[RAX + R12*0x8 + 0x8]
00011da8(5): CALL 0x00002620
00011dad(7): MOV qword ptr [0xc0 + RBX],RBP
00011db4(2): JMP 0x00011d64
00011dc0(1): PUSH RBX
00011dc1(3): MOV RBX,RDI
00011dc4(3): MOV RDI,qword ptr [RDI]
00011dc7(5): CALL 0x00002a10
00011dcc(4): MOV RDI,qword ptr [RBX + 0x8]
00011dd0(5): CALL 0x00002a10
00011dd5(4): MOV RDI,qword ptr [RBX + 0x10]
00011dd9(5): CALL 0x00002a10
00011dde(4): MOV RDI,qword ptr [RBX + 0x18]
00011de2(5): CALL 0x00002a10
00011de7(3): MOV RDI,RBX
00011dea(1): POP RBX
00011deb(5): JMP 0x00002a10
00011df0(3): MOV EAX,dword ptr [RDI + 0x8]
00011df3(5): AND EAX,0x400ff
00011df8(3): CMP EAX,0x6
00011dfb(2): JZ 0x00011e10
00011dfd(3): CMP EAX,0x3
00011e00(2): JZ 0x00011e08
00011e02(2): RET
00011e08(3): MOV RDI,qword ptr [RDI]
00011e0b(5): JMP 0x00002a10
00011e10(3): MOV RDI,qword ptr [RDI]
00011e13(2): JMP 0x00011dc0
00011e20(4): LEA RDI,[RSI + 0x28]
00011e24(4): SUB RSP,0x8
00011e28(5): CALL 0x00011df0
00011e2d(2): XOR EAX,EAX
00011e2f(4): ADD RSP,0x8
00011e33(1): RET
00011e40(2): PUSH R15
00011e42(2): PUSH R14
00011e44(3): MOV R14,RSI
00011e47(2): PUSH R13
00011e49(2): PUSH R12
00011e4b(1): PUSH RBP
00011e4c(1): PUSH RBX
00011e4d(3): MOV RBX,RDI
00011e50(4): SUB RSP,0x18
00011e54(4): MOV RSI,qword ptr [RDI + 0x10]
00011e58(4): MOV RBP,qword ptr [RDI + 0x8]
00011e5c(3): CMP RSI,RBP
00011e5f(6): JNC 0x00011f10
00011e65(4): MOV R12,qword ptr [RDI + 0x18]
00011e69(4): MOV RBP,qword ptr [RDI + 0x28]
00011e6d(3): MOV RAX,RSI
00011e70(2): MOV ECX,EDX
00011e72(4): SHL RAX,0x4
00011e76(3): ADD RAX,qword ptr [RBX]
00011e79(6): AND ECX,0xfffc00ff
00011e7f(4): MOV qword ptr [RAX + 0x8],RDX
00011e83(3): MOV dword ptr [RAX + 0x8],ECX
00011e86(2): XOR ECX,ECX
00011e88(3): CMP DL,0x6
00011e8b(3): MOV qword ptr [RAX],R14
00011e8e(3): SETZ CL
00011e91(3): CMP DL,0x5
00011e94(2): JNZ 0x00011ea2
00011e96(2): XOR ECX,ECX
00011e98(7): CMP dword ptr [0xb4 + RBX],0x1
00011e9f(3): SETG CL
00011ea2(4): MOVZX EDX,byte ptr [RAX + 0xa]
00011ea6(3): SHL ECX,0x4
00011ea9(4): PXOR XMM0,XMM0
00011ead(3): AND EDX,0xffffffef
00011eb0(2): OR EDX,ECX
00011eb2(3): MOV byte ptr [RAX + 0xa],DL
00011eb5(8): MOV qword ptr [R12 + RSI*0x8],-0x1
00011ebd(4): MOV RAX,qword ptr [RBX + 0x10]
00011ec1(4): LEA RAX,[RAX + RAX*0x2]
00011ec5(5): LEA RAX,[RBP + RAX*0x8]
00011eca(3): MOVUPS xmmword ptr [RAX],XMM0
00011ecd(8): MOV qword ptr [RAX + 0x10],0x0
00011ed5(4): MOV RAX,qword ptr [RBX + 0x10]
00011ed9(4): LEA RDX,[RAX + RAX*0x2]
00011edd(4): MOV RAX,qword ptr [RBX + 0x30]
00011ee1(4): LEA RAX,[RAX + RDX*0x8]
00011ee5(3): MOVUPS xmmword ptr [RAX],XMM0
00011ee8(8): MOV qword ptr [RAX + 0x10],0x0
00011ef0(4): MOV RAX,qword ptr [RBX + 0x10]
00011ef4(4): LEA RDX,[RAX + 0x1]
00011ef8(4): MOV qword ptr [RBX + 0x10],RDX
00011efc(4): ADD RSP,0x18
00011f00(1): POP RBX
00011f01(1): POP RBP
00011f02(2): POP R12
00011f04(2): POP R13
00011f06(2): POP R14
00011f08(2): POP R15
00011f0a(1): RET
00011f10(5): LEA R13,[RBP + RBP*0x1]
00011f15(10): MOV RAX,0xaaaaaaaaaaaaaaa
00011f1f(3): CMP R13,RAX
00011f22(6): JA 0x00012002
00011f28(3): MOV RDI,qword ptr [RDI]
00011f2b(3): MOV RSI,RBP
00011f2e(5): MOV qword ptr [RSP + 0x8],RDX
00011f33(4): SHL RSI,0x5
00011f37(5): CALL 0x00002830
00011f3c(3): TEST RAX,RAX
00011f3f(6): JZ 0x00012002
00011f45(3): MOV R15,RBP
00011f48(4): MOV RDI,qword ptr [RBX + 0x18]
00011f4c(3): MOV qword ptr [RBX],RAX
00011f4f(4): SHL R15,0x4
00011f53(3): MOV RSI,R15
00011f56(5): CALL 0x00002830
00011f5b(4): MOV RDI,qword ptr [RBX + 0x20]
00011f5f(3): MOV RSI,R15
00011f62(5): LEA R15,[R13 + RBP*0x4]
00011f67(3): MOV R12,RAX
00011f6a(4): SHL R15,0x3
00011f6e(5): CALL 0x00002830
00011f73(4): MOV RDI,qword ptr [RBX + 0x28]
00011f77(3): MOV RSI,R15
00011f7a(4): MOV qword ptr [RSP],RAX
00011f7e(5): CALL 0x00002830
00011f83(4): MOV RDI,qword ptr [RBX + 0x30]
00011f87(3): MOV RSI,R15
00011f8a(3): MOV RBP,RAX
00011f8d(5): CALL 0x00002830
00011f92(3): TEST R12,R12
00011f95(4): MOV RCX,qword ptr [RSP]
00011f99(2): JZ 0x00011fd0
00011f9b(3): TEST RCX,RCX
00011f9e(2): JZ 0x00011fd0
00011fa0(3): TEST RBP,RBP
00011fa3(2): JZ 0x00011fd0
00011fa5(3): TEST RAX,RAX
00011fa8(5): MOV RDX,qword ptr [RSP + 0x8]
00011fad(2): JZ 0x00011fd0
00011faf(4): MOV qword ptr [RBX + 0x18],R12
00011fb3(4): MOV qword ptr [RBX + 0x20],RCX
00011fb7(4): MOV qword ptr [RBX + 0x28],RBP
00011fbb(4): MOV qword ptr [RBX + 0x30],RAX
00011fbf(4): MOV qword ptr [RBX + 0x8],R13
00011fc3(4): MOV RSI,qword ptr [RBX + 0x10]
00011fc7(5): JMP 0x00011e6d
00011fd0(3): MOV RDI,R12
00011fd3(5): MOV qword ptr [RSP + 0x8],RAX
00011fd8(4): MOV qword ptr [RSP],RCX
00011fdc(5): CALL 0x00002a10
00011fe1(4): MOV RCX,qword ptr [RSP]
00011fe5(3): MOV RDI,RCX
00011fe8(5): CALL 0x00002a10
00011fed(3): MOV RDI,RBP
00011ff0(5): CALL 0x00002a10
00011ff5(5): MOV RAX,qword ptr [RSP + 0x8]
00011ffa(3): MOV RDI,RAX
00011ffd(5): CALL 0x00002a10
00012002(7): MOV RAX,-0x1
00012009(5): JMP 0x00011efc
00012010(2): PUSH R13
00012012(2): PUSH R12
00012014(3): MOV R13,RSI
00012017(1): PUSH RBP
00012018(1): PUSH RBX
00012019(4): SHL R13,0x4
0001201d(3): MOV RBP,RSI
00012020(3): MOV R12D,EDX
00012023(3): MOV RBX,RDI
00012026(4): SUB RSP,0x8
0001202a(3): MOV RAX,qword ptr [RDI]
0001202d(4): MOV RSI,qword ptr [RAX + R13*0x1]
00012031(5): MOV RDX,qword ptr [RAX + R13*0x1 + 0x8]
00012036(5): CALL 0x00011e40
0001203b(4): CMP RAX,-0x1
0001203f(2): JZ 0x000120a4
00012041(3): MOV EDI,R12D
00012044(3): MOV R8,qword ptr [RBX]
00012047(3): MOV RSI,RAX
0001204a(5): AND DI,0x3ff
0001204f(4): SHL RSI,0x4
00012053(2): MOV ECX,EDI
00012055(6): AND ECX,0x3ff
0001205b(3): ADD RSI,R8
0001205e(3): SHL ECX,0x8
00012061(2): MOV EDX,ECX
00012063(3): MOV ECX,dword ptr [RSI + 0x8]
00012066(6): AND ECX,0xfffc00ff
0001206c(2): OR ECX,EDX
0001206e(3): MOV dword ptr [RSI + 0x8],ECX
00012071(5): MOV EDX,dword ptr [R8 + R13*0x1 + 0x8]
00012076(6): AND ECX,0xfffc00ff
0001207c(3): SHR EDX,0x8
0001207f(2): OR EDX,EDI
00012081(6): AND EDX,0x3ff
00012087(3): SHL EDX,0x8
0001208a(2): OR EDX,ECX
0001208c(2): MOV ECX,EDX
0001208e(3): MOV dword ptr [RSI + 0x8],EDX
00012091(3): SHR ECX,0x10
00012094(2): MOV EDX,ECX
00012096(3): OR EDX,0x4
00012099(3): MOV byte ptr [RSI + 0xa],DL
0001209c(4): MOV RDX,qword ptr [RBX + 0x20]
000120a0(4): MOV qword ptr [RDX + RAX*0x8],RBP
000120a4(4): ADD RSP,0x8
000120a8(1): POP RBX
000120a9(1): POP RBP
000120aa(2): POP R12
000120ac(2): POP R13
000120ae(1): RET
000120b0(2): PUSH R15
000120b2(2): PUSH R14
000120b4(3): MOV R9,RSI
000120b7(2): PUSH R13
000120b9(2): PUSH R12
000120bb(3): MOV R14,RDI
000120be(1): PUSH RBP
000120bf(1): PUSH RBX
000120c0(3): MOV R13,RDX
000120c3(3): MOV EBP,R8D
000120c6(4): SUB RSP,0x18
000120ca(5): MOV qword ptr [RSP + 0x8],RCX
000120cf(3): MOV R8,qword ptr [R14]
000120d2(3): MOV RAX,R9
000120d5(4): MOV RDI,qword ptr [R14 + 0x28]
000120d9(4): SHL RAX,0x4
000120dd(3): MOV R12,R13
000120e0(3): ADD RAX,R8
000120e3(4): CMP byte ptr [RAX + 0x8],0x4
000120e7(6): JZ 0x000122a0
000120ed(4): LEA R12,[R9 + R9*0x2]
000120f1(4): SHL R12,0x3
000120f5(4): LEA RSI,[RDI + R12*0x1]
000120f9(4): MOV RCX,qword ptr [RSI + 0x8]
000120fd(3): TEST RCX,RCX
00012100(6): JZ 0x000122f9
00012106(5): LEA RBX,[R13 + R13*0x2]
0001210b(4): MOV RSI,qword ptr [RSI + 0x10]
0001210f(4): SHL RBX,0x3
00012113(3): ADD RDI,RBX
00012116(4): CMP RCX,0x1
0001211a(3): MOV R15,qword ptr [RSI]
0001211d(8): MOV qword ptr [RDI + 0x8],0x0
00012125(6): JZ 0x00012240
0001212b(4): MOV RDX,qword ptr [R14 + 0x10]
0001212f(4): LEA RSI,[RDX + -0x1]
00012133(3): MOV RAX,RSI
00012136(4): SHL RAX,0x4
0001213a(3): ADD RAX,R8
0001213d(4): TEST byte ptr [RAX + 0xa],0x4
00012141(6): JZ 0x000121f0
00012147(3): TEST RSI,RSI
0001214a(6): JLE 0x000121f0
00012150(4): SHL RDX,0x4
00012154(3): SUB R8,RAX
00012157(4): MOV RCX,qword ptr [R14 + 0x20]
0001215b(5): LEA R8,[R8 + RDX*0x1 + -0x20]
00012160(2): JMP 0x0001217a
00012168(3): ADD RAX,R8
0001216b(4): SUB RSI,0x1
0001216f(4): TEST byte ptr [RAX + 0xa],0x4
00012173(2): JZ 0x000121f0
00012175(3): TEST RSI,RSI
00012178(2): JLE 0x000121f0
0001217a(4): CMP qword ptr [RCX + RSI*0x8],R15
0001217e(2): JNZ 0x00012168
00012180(3): MOV EDX,dword ptr [RAX + 0x8]
00012183(3): SHR EDX,0x8
00012186(6): AND EDX,0x3ff
0001218c(2): CMP EBP,EDX
0001218e(2): JNZ 0x00012168
00012190(5): CALL 0x00011160
00012195(2): TEST AL,AL
00012197(2): JZ 0x000121db
00012199(4): MOV RAX,qword ptr [R14 + 0x28]
0001219d(2): MOV EDX,EBP
0001219f(3): MOV RDI,R14
000121a2(5): MOV RAX,qword ptr [RAX + R12*0x1 + 0x10]
000121a7(4): MOV R9,qword ptr [RAX + 0x8]
000121ab(3): MOV RSI,R9
000121ae(4): MOV qword ptr [RSP],R9
000121b2(5): CALL 0x00012010
000121b7(4): CMP RAX,-0x1
000121bb(3): MOV R13,RAX
000121be(2): JZ 0x000121db
000121c0(4): ADD RBX,qword ptr [R14 + 0x28]
000121c4(3): MOV RSI,R13
000121c7(3): MOV RDI,RBX
000121ca(5): CALL 0x00011160
000121cf(2): TEST AL,AL
000121d1(4): MOV R9,qword ptr [RSP]
000121d5(6): JNZ 0x000120cf
000121db(5): MOV EAX,0xc
000121e0(4): ADD RSP,0x18
000121e4(1): POP RBX
000121e5(1): POP RBP
000121e6(2): POP R12
000121e8(2): POP R13
000121ea(2): POP R14
000121ec(2): POP R15
000121ee(1): RET
000121f0(2): MOV EDX,EBP
000121f2(3): MOV RSI,R15
000121f5(3): MOV RDI,R14
000121f8(5): CALL 0x00012010
000121fd(4): CMP RAX,-0x1
00012201(3): MOV R13,RAX
00012204(2): JZ 0x000121db
00012206(4): MOV RDI,qword ptr [R14 + 0x28]
0001220a(3): MOV RSI,R13
0001220d(3): ADD RDI,RBX
00012210(5): CALL 0x00011160
00012215(2): TEST AL,AL
00012217(2): JZ 0x000121db
00012219(5): MOV RCX,qword ptr [RSP + 0x8]
0001221e(3): MOV R8D,EBP
00012221(3): MOV RDX,R13
00012224(3): MOV RSI,R15
00012227(3): MOV RDI,R14
0001222a(5): CALL 0x000120b0
0001222f(2): TEST EAX,EAX
00012231(6): JZ 0x00012199
00012237(2): JMP 0x000121e0
00012240(5): CMP R9,qword ptr [RSP + 0x8]
00012245(2): JNZ 0x00012250
00012247(3): CMP R9,R13
0001224a(6): JNZ 0x0001230c
00012250(3): MOV EAX,dword ptr [RAX + 0x8]
00012253(3): MOV RSI,R15
00012256(3): MOV RDI,R14
00012259(3): SHR EAX,0x8
0001225c(5): AND EAX,0x3ff
00012261(2): OR EBP,EAX
00012263(2): MOV EDX,EBP
00012265(5): CALL 0x00012010
0001226a(4): CMP RAX,-0x1
0001226e(3): MOV R13,RAX
00012271(6): JZ 0x000121db
00012277(4): ADD RBX,qword ptr [R14 + 0x28]
0001227b(3): MOV RSI,RAX
0001227e(3): MOV RDI,RBX
00012281(5): CALL 0x00011160
00012286(2): TEST AL,AL
00012288(6): JZ 0x000121db
0001228e(3): MOV R9,R15
00012291(5): JMP 0x000120cf
000122a0(4): MOV RAX,qword ptr [R14 + 0x18]
000122a4(5): LEA RBX,[R13 + R13*0x2]
000122a9(8): LEA R15,[R9*0x8]
000122b1(2): MOV EDX,EBP
000122b3(4): SHL RBX,0x3
000122b7(4): MOV R9,qword ptr [RAX + R9*0x8]
000122bb(9): MOV qword ptr [RDI + RBX*0x1 + 0x8],0x0
000122c4(3): MOV RDI,R14
000122c7(3): MOV RSI,R9
000122ca(4): MOV qword ptr [RSP],R9
000122ce(5): CALL 0x00012010
000122d3(4): CMP RAX,-0x1
000122d7(3): MOV R13,RAX
000122da(4): MOV R9,qword ptr [RSP]
000122de(6): JZ 0x000121db
000122e4(4): MOV RAX,qword ptr [R14 + 0x18]
000122e8(4): MOV qword ptr [RSP],R9
000122ec(4): MOV RCX,qword ptr [RAX + R15*0x1]
000122f0(4): MOV qword ptr [RAX + R12*0x8],RCX
000122f4(5): JMP 0x000121c0
000122f9(4): MOV RAX,qword ptr [R14 + 0x18]
000122fd(4): MOV RCX,qword ptr [RAX + R9*0x8]
00012301(4): MOV qword ptr [RAX + R13*0x8],RCX
00012305(2): XOR EAX,EAX
00012307(5): JMP 0x000121e0
0001230c(3): MOV RSI,R15
0001230f(5): CALL 0x00011160
00012314(2): MOV EDX,EAX
00012316(2): XOR EAX,EAX
00012318(2): TEST DL,DL
0001231a(6): JNZ 0x000121e0
00012320(5): JMP 0x000121db
00012330(1): PUSH RBX
00012331(3): MOV RBX,RDI
00012334(4): MOV RDI,qword ptr [RDI + 0x30]
00012338(5): CALL 0x00002a10
0001233d(4): MOV RDI,qword ptr [RBX + 0x48]
00012341(5): CALL 0x00002a10
00012346(4): MOV RAX,qword ptr [RBX + 0x50]
0001234a(4): LEA RDX,[RBX + 0x8]
0001234e(3): CMP RAX,RDX
00012351(2): JZ 0x00012365
00012353(4): MOV RDI,qword ptr [RAX + 0x10]
00012357(5): CALL 0x00002a10
0001235c(4): MOV RDI,qword ptr [RBX + 0x50]
00012360(5): CALL 0x00002a10
00012365(4): MOV RDI,qword ptr [RBX + 0x18]
00012369(5): CALL 0x00002a10
0001236e(4): MOV RDI,qword ptr [RBX + 0x60]
00012372(5): CALL 0x00002a10
00012377(4): MOV RDI,qword ptr [RBX + 0x58]
0001237b(5): CALL 0x00002a10
00012380(3): MOV RDI,RBX
00012383(1): POP RBX
00012384(5): JMP 0x00002a10
00012390(1): PUSH RBX
00012391(3): MOV RBX,RDI
00012394(4): MOV RDI,qword ptr [RDI + 0x10]
00012398(5): CALL 0x00002a10
0001239d(4): MOV RDI,qword ptr [RBX + 0x18]
000123a1(5): CALL 0x00002a10
000123a6(7): CMP byte ptr [0x8b + RBX],0x0
000123ad(2): JNZ 0x000123b8
000123af(1): POP RBX
000123b0(1): RET
000123b8(4): MOV RDI,qword ptr [RBX + 0x8]
000123bc(1): POP RBX
000123bd(5): JMP 0x00002a10
000123d0(2): PUSH R14
000123d2(2): PUSH R13
000123d4(2): PUSH R12
000123d6(3): MOV R12,RDI
000123d9(1): PUSH RBP
000123da(1): PUSH RBX
000123db(3): MOV RDI,qword ptr [RDI]
000123de(3): TEST RDI,RDI
000123e1(2): JZ 0x0001240e
000123e3(6): CMP qword ptr [R12 + 0x10],0x0
000123e9(2): JZ 0x0001240e
000123eb(2): XOR EBX,EBX
000123ed(2): JMP 0x000123f4
000123f0(4): MOV RDI,qword ptr [R12]
000123f4(3): MOV RAX,RBX
000123f7(4): ADD RBX,0x1
000123fb(4): SHL RAX,0x4
000123ff(3): ADD RDI,RAX
00012402(5): CALL 0x00011df0
00012407(5): CMP qword ptr [R12 + 0x10],RBX
0001240c(2): JA 0x000123f0
0001240e(5): MOV RDI,qword ptr [R12 + 0x18]
00012413(5): CALL 0x00002a10
00012418(6): CMP qword ptr [R12 + 0x10],0x0
0001241e(2): JZ 0x00012473
00012420(2): XOR EBX,EBX
00012422(2): XOR EBP,EBP
00012424(4): NOP dword ptr [RAX]
00012428(5): MOV RAX,qword ptr [R12 + 0x30]
0001242d(3): TEST RAX,RAX
00012430(2): JZ 0x0001243c
00012432(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
00012437(5): CALL 0x00002a10
0001243c(5): MOV RAX,qword ptr [R12 + 0x38]
00012441(3): TEST RAX,RAX
00012444(2): JZ 0x00012450
00012446(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0001244b(5): CALL 0x00002a10
00012450(5): MOV RAX,qword ptr [R12 + 0x28]
00012455(3): TEST RAX,RAX
00012458(2): JZ 0x00012464
0001245a(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0001245f(5): CALL 0x00002a10
00012464(4): ADD RBP,0x1
00012468(4): ADD RBX,0x18
0001246c(5): CMP qword ptr [R12 + 0x10],RBP
00012471(2): JA 0x00012428
00012473(5): MOV RDI,qword ptr [R12 + 0x28]
00012478(5): CALL 0x00002a10
0001247d(5): MOV RDI,qword ptr [R12 + 0x30]
00012482(5): CALL 0x00002a10
00012487(5): MOV RDI,qword ptr [R12 + 0x38]
0001248c(5): CALL 0x00002a10
00012491(4): MOV RDI,qword ptr [R12]
00012495(5): CALL 0x00002a10
0001249a(5): MOV RDI,qword ptr [R12 + 0x40]
0001249f(3): TEST RDI,RDI
000124a2(2): JZ 0x000124f7
000124a4(3): XOR R14D,R14D
000124a7(3): XOR R13D,R13D
000124aa(6): NOP word ptr [RAX + RAX*0x1]
000124b0(4): LEA RBP,[RDI + R14*0x1]
000124b4(5): CMP qword ptr [RBP],0x0
000124b9(2): JLE 0x000124d7
000124bb(2): XOR EBX,EBX
000124bd(3): NOP dword ptr [RAX]
000124c0(4): MOV RAX,qword ptr [RBP + 0x10]
000124c4(4): MOV RDI,qword ptr [RAX + RBX*0x8]
000124c8(4): ADD RBX,0x1
000124cc(5): CALL 0x00012330
000124d1(4): CMP qword ptr [RBP],RBX
000124d5(2): JG 0x000124c0
000124d7(4): MOV RDI,qword ptr [RBP + 0x10]
000124db(4): ADD R13,0x1
000124df(4): ADD R14,0x18
000124e3(5): CALL 0x00002a10
000124e8(8): CMP qword ptr [0x88 + R12],R13
000124f0(5): MOV RDI,qword ptr [R12 + 0x40]
000124f5(2): JNC 0x000124b0
000124f7(5): CALL 0x00002a10
000124fc(5): MOV RDI,qword ptr [R12 + 0x78]
00012501(7): LEA RAX,[0x22dc0]
00012508(3): CMP RDI,RAX
0001250b(2): JZ 0x00012512
0001250d(5): CALL 0x00002a10
00012512(8): MOV RDI,qword ptr [0xe0 + R12]
0001251a(5): CALL 0x00002a10
0001251f(1): POP RBX
00012520(3): MOV RDI,R12
00012523(1): POP RBP
00012524(2): POP R12
00012526(2): POP R13
00012528(2): POP R14
0001252a(5): JMP 0x00002a10
00012530(2): PUSH R14
00012532(2): PUSH R13
00012534(3): MOV R14,RDI
00012537(2): PUSH R12
00012539(1): PUSH RBP
0001253a(1): PUSH RBX
0001253b(8): CMP qword ptr [0xe8 + RDI],0x0
00012543(6): JLE 0x000125c9
00012549(3): XOR R13D,R13D
0001254c(4): NOP dword ptr [RAX]
00012550(7): MOV RAX,qword ptr [0xf8 + R14]
00012557(4): MOV R12,qword ptr [RAX + R13*0x8]
0001255b(6): CMP qword ptr [R12 + 0x20],0x0
00012561(2): JLE 0x0001258d
00012563(2): XOR EBX,EBX
00012565(3): NOP dword ptr [RAX]
00012568(5): MOV RAX,qword ptr [R12 + 0x28]
0001256d(4): MOV RBP,qword ptr [RAX + RBX*0x8]
00012571(4): ADD RBX,0x1
00012575(4): MOV RDI,qword ptr [RBP + 0x20]
00012579(5): CALL 0x00002a10
0001257e(3): MOV RDI,RBP
00012581(5): CALL 0x00002a10
00012586(5): CMP qword ptr [R12 + 0x20],RBX
0001258b(2): JG 0x00012568
0001258d(5): MOV RDI,qword ptr [R12 + 0x28]
00012592(5): CALL 0x00002a10
00012597(5): MOV RAX,qword ptr [R12 + 0x10]
0001259c(3): TEST RAX,RAX
0001259f(2): JZ 0x000125b4
000125a1(4): MOV RDI,qword ptr [RAX + 0x10]
000125a5(5): CALL 0x00002a10
000125aa(5): MOV RDI,qword ptr [R12 + 0x10]
000125af(5): CALL 0x00002a10
000125b4(3): MOV RDI,R12
000125b7(4): ADD R13,0x1
000125bb(5): CALL 0x00002a10
000125c0(7): CMP qword ptr [0xe8 + R14],R13
000125c7(2): JG 0x00012550
000125c9(1): POP RBX
000125ca(11): MOV qword ptr [0xe8 + R14],0x0
000125d5(11): MOV qword ptr [0xc8 + R14],0x0
000125e0(1): POP RBP
000125e1(2): POP R12
000125e3(2): POP R13
000125e5(2): POP R14
000125e7(1): RET
000125f0(4): MOV RCX,qword ptr [RDI + 0x30]
000125f4(4): LEA RAX,[RSI + 0x1]
000125f8(3): CMP RAX,RCX
000125fb(2): JGE 0x00012638
000125fd(4): MOV RDX,qword ptr [RDI + 0x10]
00012601(8): LEA RDI,[RAX*0x4]
00012609(4): CMP dword ptr [RDX + RAX*0x4],-0x1
0001260d(2): JNZ 0x00012638
0001260f(3): SUB RCX,RSI
00012612(5): LEA RSI,[RDX + RDI*0x1 + -0x4]
00012617(5): MOV EDX,0x2
0001261c(2): JMP 0x0001262b
00012620(4): ADD RDX,0x1
00012624(5): CMP dword ptr [RSI + RDX*0x4 + -0x4],-0x1
00012629(2): JNZ 0x0001263d
0001262b(3): CMP RDX,RCX
0001262e(2): MOV EAX,EDX
00012630(2): JNZ 0x00012620
00012632(2): RET
00012638(5): MOV EAX,0x1
0001263d(2): RET
00012640(4): MOV RDX,qword ptr [RDI + 0x8]
00012644(2): XOR EAX,EAX
00012646(4): CMP RDX,qword ptr [RSI + 0x8]
0001264a(2): JZ 0x00012650
0001264c(2): RET
00012650(4): LEA RAX,[RDX + -0x1]
00012654(8): LEA RDX,[RAX*0x8]
0001265c(2): JMP 0x0001267d
00012660(4): MOV RCX,qword ptr [RDI + 0x10]
00012664(4): MOV R8,qword ptr [RCX + RDX*0x1]
00012668(4): MOV RCX,qword ptr [RSI + 0x10]
0001266c(4): MOV RCX,qword ptr [RCX + RDX*0x1]
00012670(4): SUB RDX,0x8
00012674(3): CMP R8,RCX
00012677(2): JNZ 0x00012690
00012679(4): SUB RAX,0x1
0001267d(3): TEST RAX,RAX
00012680(2): JNS 0x00012660
00012682(5): MOV EAX,0x1
00012687(1): RET
00012690(2): XOR EAX,EAX
00012692(1): RET
000126a0(2): XOR EAX,EAX
000126a2(3): TEST RDI,RDI
000126a5(2): JLE 0x000126e5
000126a7(3): MOV R8,qword ptr [RSI]
000126aa(4): SUB RDI,0x1
000126ae(2): XOR ESI,ESI
000126b0(3): CMP RSI,RDI
000126b3(2): JNC 0x000126dd
000126b5(4): LEA RCX,[RSI + RDI*0x1]
000126b9(3): SHR RCX,1
000126bc(4): CMP RDX,qword ptr [R8 + RCX*0x8]
000126c0(2): JLE 0x000126d8
000126c2(2): JMP 0x000126f0
000126c8(4): LEA RAX,[RSI + RCX*0x1]
000126cc(3): SHR RAX,1
000126cf(4): CMP qword ptr [R8 + RAX*0x8],RDX
000126d3(2): JL 0x00012700
000126d5(3): MOV RCX,RAX
000126d8(3): CMP RSI,RCX
000126db(2): JC 0x000126c8
000126dd(2): XOR EAX,EAX
000126df(4): CMP RDX,qword ptr [R8 + RSI*0x8]
000126e3(2): JZ 0x00012710
000126e5(2): RET
000126f0(3): MOV RAX,RCX
000126f3(3): MOV RCX,RDI
000126f6(10): NOP word ptr CS:[RAX + RAX*0x1]
00012700(4): LEA RSI,[RAX + 0x1]
00012704(3): MOV RDI,RCX
00012707(2): JMP 0x000126b0
00012710(4): LEA RAX,[RSI + 0x1]
00012714(1): RET
00012720(2): PUSH R15
00012722(2): PUSH R14
00012724(4): LEA R14,[RSI + 0x10]
00012728(2): PUSH R13
0001272a(2): PUSH R12
0001272c(3): MOV R15,RCX
0001272f(1): PUSH RBP
00012730(1): PUSH RBX
00012731(3): MOV R12,RDI
00012734(3): MOV RBP,RSI
00012737(3): MOV RBX,RDX
0001273a(3): MOV R13D,R8D
0001273d(4): SUB RSP,0x8
00012741(4): MOV RDI,qword ptr [RBP + 0x8]
00012745(3): MOV RDX,RBX
00012748(3): MOV RSI,R14
0001274b(5): CALL 0x000126a0
00012750(3): TEST RAX,RAX
00012753(2): JNZ 0x000127c0
00012755(3): MOV RAX,RBX
00012758(4): SHL RAX,0x4
0001275c(4): ADD RAX,qword ptr [R12]
00012760(4): MOVZX EDX,byte ptr [RAX + 0x8]
00012764(3): CMP EDX,R13D
00012767(2): JNZ 0x0001276e
00012769(3): CMP qword ptr [RAX],R15
0001276c(2): JZ 0x000127a8
0001276e(3): MOV RSI,RBX
00012771(3): MOV RDI,RBP
00012774(5): CALL 0x00011160
00012779(2): TEST AL,AL
0001277b(2): JZ 0x000127d8
0001277d(4): LEA RBX,[RBX + RBX*0x2]
00012781(5): MOV RDX,qword ptr [R12 + 0x28]
00012786(4): SHL RBX,0x3
0001278a(3): ADD RDX,RBX
0001278d(4): MOV RAX,qword ptr [RDX + 0x8]
00012791(3): TEST RAX,RAX
00012794(2): JZ 0x000127c0
00012796(4): CMP RAX,0x2
0001279a(4): MOV RDX,qword ptr [RDX + 0x10]
0001279e(2): JZ 0x000127f0
000127a0(3): MOV RBX,qword ptr [RDX]
000127a3(2): JMP 0x00012741
000127a8(4): CMP R13D,0x9
000127ac(2): JNZ 0x000127c0
000127ae(3): MOV RSI,RBX
000127b1(3): MOV RDI,RBP
000127b4(5): CALL 0x00011160
000127b9(2): TEST AL,AL
000127bb(2): JZ 0x000127d8
000127bd(3): NOP dword ptr [RAX]
000127c0(2): XOR EAX,EAX
000127c2(4): ADD RSP,0x8
000127c6(1): POP RBX
000127c7(1): POP RBP
000127c8(2): POP R12
000127ca(2): POP R13
000127cc(2): POP R14
000127ce(2): POP R15
000127d0(1): RET
000127d8(4): ADD RSP,0x8
000127dc(5): MOV EAX,0xc
000127e1(1): POP RBX
000127e2(1): POP RBP
000127e3(2): POP R12
000127e5(2): POP R13
000127e7(2): POP R14
000127e9(2): POP R15
000127eb(1): RET
000127f0(4): MOV RDX,qword ptr [RDX + 0x8]
000127f4(3): MOV R8D,R13D
000127f7(3): MOV RCX,R15
000127fa(3): MOV RSI,RBP
000127fd(3): MOV RDI,R12
00012800(5): CALL 0x00012720
00012805(2): TEST EAX,EAX
00012807(2): JNZ 0x000127c2
00012809(5): MOV RAX,qword ptr [R12 + 0x28]
0001280e(5): MOV RDX,qword ptr [RAX + RBX*0x1 + 0x10]
00012813(2): JMP 0x000127a0
00012820(3): MOV RAX,qword ptr [RDI]
00012823(3): CMP RAX,RDX
00012826(2): JLE 0x00012852
00012828(4): SUB RAX,0x1
0001282c(3): CMP RDX,RAX
0001282f(3): MOV qword ptr [RDI],RAX
00012832(2): JGE 0x00012852
00012834(3): MOV RAX,qword ptr [RSI]
00012837(9): NOP word ptr [RAX + RAX*0x1]
00012840(5): MOV RCX,qword ptr [RAX + RDX*0x8 + 0x8]
00012845(4): MOV qword ptr [RAX + RDX*0x8],RCX
00012849(4): ADD RDX,0x1
0001284d(3): CMP RDX,qword ptr [RDI]
00012850(2): JL 0x00012840
00012852(2): RET
00012860(4): MOVZX EAX,byte ptr [RSI + 0x30]
00012864(2): CMP AL,0x4
00012866(2): JZ 0x000128c0
00012868(2): CMP AL,0x11
0001286a(2): JZ 0x00012870
0001286c(2): XOR EAX,EAX
0001286e(1): RET
00012870(4): MOV RAX,qword ptr [RSI + 0x8]
00012874(3): TEST RAX,RAX
00012877(2): JZ 0x0001286c
00012879(4): CMP byte ptr [RAX + 0x30],0x11
0001287d(2): JNZ 0x0001286c
0001287f(4): MOV RCX,qword ptr [RAX + 0x28]
00012883(4): MOV RAX,qword ptr [RAX + 0x8]
00012887(3): TEST RAX,RAX
0001288a(4): MOV qword ptr [RSI + 0x8],RAX
0001288e(2): JZ 0x00012893
00012890(3): MOV qword ptr [RAX],RSI
00012893(7): MOV RAX,qword ptr [0xe0 + RDI]
0001289a(4): MOV RDX,qword ptr [RSI + 0x28]
0001289e(4): CMP RCX,0x3f
000128a2(4): MOV RDX,qword ptr [RAX + RDX*0x8]
000128a6(4): MOV qword ptr [RAX + RCX*0x8],RDX
000128aa(2): JG 0x0001286c
000128ac(7): MOV RAX,-0x2
000128b3(3): ROL RAX,CL
000128b6(7): AND qword ptr [0xa0 + RDI],RAX
000128bd(2): JMP 0x0001286c
000128c0(7): MOV RAX,qword ptr [0xe0 + RDI]
000128c7(3): TEST RAX,RAX
000128ca(2): JZ 0x0001286c
000128cc(4): MOVSXD RDX,dword ptr [RSI + 0x28]
000128d0(4): MOV RCX,qword ptr [RAX + RDX*0x8]
000128d4(5): MOV EAX,0x1
000128d9(2): SHL EAX,CL
000128db(4): MOV qword ptr [RSI + 0x28],RCX
000128df(2): CDQE
000128e1(7): OR qword ptr [0xa0 + RDI],RAX
000128e8(2): XOR EAX,EAX
000128ea(1): RET
000128f0(4): MOVZX EAX,byte ptr [RSI + 0x30]
000128f4(4): MOV RDX,qword ptr [RSI + 0x8]
000128f8(2): CMP AL,0xb
000128fa(2): JZ 0x00012940
000128fc(2): CMP AL,0x10
000128fe(2): JZ 0x00012928
00012900(3): TEST RDX,RDX
00012903(2): JZ 0x0001290d
00012905(4): MOV RAX,qword ptr [RSI + 0x20]
00012909(4): MOV qword ptr [RDX + 0x20],RAX
0001290d(4): MOV RAX,qword ptr [RSI + 0x10]
00012911(3): TEST RAX,RAX
00012914(2): JZ 0x0001291e
00012916(4): MOV RDX,qword ptr [RSI + 0x20]
0001291a(4): MOV qword ptr [RAX + 0x20],RDX
0001291e(2): XOR EAX,EAX
00012920(1): RET
00012928(4): MOV RAX,qword ptr [RSI + 0x10]
0001292c(4): MOV RCX,qword ptr [RAX + 0x18]
00012930(4): MOV qword ptr [RDX + 0x20],RCX
00012934(4): MOV RDX,qword ptr [RSI + 0x20]
00012938(4): MOV qword ptr [RAX + 0x20],RDX
0001293c(2): XOR EAX,EAX
0001293e(1): RET
00012940(4): MOV qword ptr [RDX + 0x20],RSI
00012944(2): XOR EAX,EAX
00012946(1): RET
00012950(2): PUSH R15
00012952(2): PUSH R14
00012954(2): PUSH R13
00012956(2): PUSH R12
00012958(1): PUSH RBP
00012959(1): PUSH RBX
0001295a(2): XOR EBX,EBX
0001295c(4): SUB RSP,0x48
00012960(7): MOV RAX,qword ptr [0x98 + RDI]
00012967(7): MOV R15,qword ptr [0xc8 + RDI]
0001296e(8): MOV R12,qword ptr [0x80 + RSP]
00012976(5): MOV qword ptr [RSP + 0x8],RAX
0001297b(3): MOV RBP,R15
0001297e(3): CMP RBX,RBP
00012981(2): JGE 0x000129db
00012983(4): LEA RAX,[RBX + RBP*0x1]
00012987(7): MOV R13,qword ptr [0xd8 + RDI]
0001298e(3): MOV R10,RAX
00012991(4): SHR R10,0x3f
00012995(3): ADD R10,RAX
00012998(3): SAR R10,1
0001299b(4): LEA RAX,[R10 + R10*0x4]
0001299f(5): CMP R8,qword ptr [R13 + RAX*0x8 + 0x8]
000129a4(2): JLE 0x000129d6
000129a6(5): JMP 0x00012b40
000129b0(4): LEA R11,[RBX + R10*0x1]
000129b4(3): MOV RAX,R11
000129b7(4): SHR RAX,0x3f
000129bb(3): ADD RAX,R11
000129be(3): SAR RAX,1
000129c1(4): LEA R11,[RAX + RAX*0x4]
000129c5(3): MOV R14,RAX
000129c8(5): CMP qword ptr [R13 + R11*0x8 + 0x8],R8
000129cd(6): JL 0x00012b50
000129d3(3): MOV R10,RAX
000129d6(3): CMP RBX,R10
000129d9(2): JL 0x000129b0
000129db(3): CMP R15,RBX
000129de(6): JLE 0x00012b80
000129e4(7): MOV R11,qword ptr [0xd8 + RDI]
000129eb(4): LEA RAX,[RBX + RBX*0x4]
000129ef(4): LEA RAX,[R11 + RAX*0x8]
000129f3(4): CMP R8,qword ptr [RAX + 0x8]
000129f7(7): MOV RAX,-0x1
000129fe(4): CMOVNZ RBX,RAX
00012a02(3): MOV RAX,R15
00012a05(2): XOR EBP,EBP
00012a07(3): CMP RBP,RAX
00012a0a(2): JGE 0x00012a64
00012a0c(5): LEA R11,[RBP + RAX*0x1]
00012a11(3): MOV R10,R11
00012a14(4): SHR R10,0x3f
00012a18(3): ADD R10,R11
00012a1b(7): MOV R11,qword ptr [0xd8 + RDI]
00012a22(3): SAR R10,1
00012a25(4): LEA R13,[R10 + R10*0x4]
00012a29(5): CMP R12,qword ptr [R11 + R13*0x8 + 0x8]
00012a2e(2): JLE 0x00012a5f
00012a30(5): JMP 0x00012b60
00012a38(5): LEA R13,[RBP + R10*0x1]
00012a3d(3): MOV RAX,R13
00012a40(4): SHR RAX,0x3f
00012a44(3): ADD RAX,R13
00012a47(3): SAR RAX,1
00012a4a(4): LEA R13,[RAX + RAX*0x4]
00012a4e(3): MOV R14,RAX
00012a51(5): CMP qword ptr [R11 + R13*0x8 + 0x8],R12
00012a56(6): JL 0x00012b70
00012a5c(3): MOV R10,RAX
00012a5f(3): CMP RBP,R10
00012a62(2): JL 0x00012a38
00012a64(3): CMP R15,RBP
00012a67(6): JLE 0x00012b90
00012a6d(7): MOV R10,qword ptr [0xd8 + RDI]
00012a74(5): LEA RAX,[RBP + RBP*0x4]
00012a79(4): LEA RAX,[R10 + RAX*0x8]
00012a7d(4): CMP R12,qword ptr [RAX + 0x8]
00012a81(7): MOV RAX,-0x1
00012a88(4): CMOVNZ RBP,RAX
00012a8c(4): CMP qword ptr [RSI],0x0
00012a90(6): JLE 0x00012bb2
00012a96(5): MOV qword ptr [RSP + 0x30],RBP
00012a9b(5): MOV qword ptr [RSP + 0x20],R9
00012aa0(3): MOV R13,RDI
00012aa3(5): MOV qword ptr [RSP + 0x18],R8
00012aa8(5): MOV qword ptr [RSP + 0x10],RCX
00012aad(3): XOR R14D,R14D
00012ab0(5): MOV qword ptr [RSP + 0x38],RSI
00012ab5(5): MOV qword ptr [RSP + 0x28],RBX
00012aba(3): MOV RBP,RDX
00012abd(3): MOV R15,R12
00012ac0(4): MOV RAX,qword ptr [RBP]
00012ac4(7): MOV RDX,qword ptr [0xd8 + R13]
00012acb(3): MOV RDI,R13
00012ace(5): MOV R9,qword ptr [RSP + 0x28]
00012ad3(5): MOV R8,qword ptr [RSP + 0x18]
00012ad8(5): MOV RCX,qword ptr [RSP + 0x10]
00012add(4): MOV RSI,qword ptr [RAX + R14*0x8]
00012ae1(4): LEA RAX,[RSI + RSI*0x4]
00012ae5(4): LEA RAX,[RDX + RAX*0x8]
00012ae9(5): MOV RDX,qword ptr [RSP + 0x8]
00012aee(3): MOV RAX,qword ptr [RAX]
00012af1(4): SHL RAX,0x4
00012af5(3): ADD RAX,qword ptr [RDX]
00012af8(3): MOV R12,qword ptr [RAX]
00012afb(3): MOV RDX,R12
00012afe(5): CALL 0x00010f10
00012b03(2): MOV EBX,EAX
00012b05(4): MOV RAX,qword ptr [RBP]
00012b09(5): MOV R9,qword ptr [RSP + 0x30]
00012b0e(5): MOV RCX,qword ptr [RSP + 0x20]
00012b13(3): MOV R8,R15
00012b16(3): MOV RDX,R12
00012b19(3): MOV RDI,R13
00012b1c(4): MOV RSI,qword ptr [RAX + R14*0x8]
00012b20(5): CALL 0x00010f10
00012b25(2): CMP EBX,EAX
00012b27(2): JZ 0x00012ba0
00012b29(5): MOV EAX,0x1
00012b2e(4): ADD RSP,0x48
00012b32(1): POP RBX
00012b33(1): POP RBP
00012b34(2): POP R12
00012b36(2): POP R13
00012b38(2): POP R14
00012b3a(2): POP R15
00012b3c(1): RET
00012b40(3): MOV R14,R10
00012b43(3): MOV R10,RBP
00012b46(10): NOP word ptr CS:[RAX + RAX*0x1]
00012b50(4): LEA RBX,[R14 + 0x1]
00012b54(3): MOV RBP,R10
00012b57(5): JMP 0x0001297e
00012b60(3): MOV R14,R10
00012b63(3): MOV R10,RAX
00012b66(10): NOP word ptr CS:[RAX + RAX*0x1]
00012b70(4): LEA RBP,[R14 + 0x1]
00012b74(3): MOV RAX,R10
00012b77(5): JMP 0x00012a07
00012b80(7): MOV RBX,-0x1
00012b87(5): JMP 0x00012a02
00012b90(7): MOV RBP,-0x1
00012b97(5): JMP 0x00012a8c
00012ba0(5): MOV RAX,qword ptr [RSP + 0x38]
00012ba5(4): ADD R14,0x1
00012ba9(3): CMP R14,qword ptr [RAX]
00012bac(6): JL 0x00012ac0
00012bb2(2): XOR EAX,EAX
00012bb4(5): JMP 0x00012b2e
00012bc0(3): TEST RSI,RSI
00012bc3(6): JZ 0x00012cb8
00012bc9(4): MOV RDX,qword ptr [RSI + 0x8]
00012bcd(3): TEST RDX,RDX
00012bd0(6): JZ 0x00012cb8
00012bd6(2): PUSH R12
00012bd8(1): PUSH RBP
00012bd9(3): MOV R12,RSI
00012bdc(1): PUSH RBX
00012bdd(4): MOV RAX,qword ptr [RDI + 0x8]
00012be1(3): MOV RBX,RDI
00012be4(3): MOV RSI,qword ptr [RDI]
00012be7(4): LEA RCX,[RAX + RDX*0x2]
00012beb(3): CMP RSI,RCX
00012bee(6): JL 0x00012d38
00012bf4(3): TEST RAX,RAX
00012bf7(6): JZ 0x00012d70
00012bfd(4): LEA RBP,[RAX + RDX*0x2]
00012c01(4): SUB RDX,0x1
00012c05(4): SUB RAX,0x1
00012c09(3): MOV RDI,RDX
00012c0c(3): NOT RDI
00012c0f(3): TEST RDI,RDI
00012c12(2): JNS 0x00012c50
00012c14(3): TEST RAX,RAX
00012c17(2): JS 0x00012c50
00012c19(4): MOV RCX,qword ptr [RBX + 0x10]
00012c1d(5): MOV RSI,qword ptr [R12 + 0x10]
00012c22(4): MOV RSI,qword ptr [RSI + RDX*0x8]
00012c26(4): CMP qword ptr [RCX + RAX*0x8],RSI
00012c2a(6): JZ 0x00012cc0
00012c30(6): JGE 0x00012cd8
00012c36(4): SUB RDX,0x1
00012c3a(4): SUB RBP,0x1
00012c3e(3): MOV RDI,RDX
00012c41(4): MOV qword ptr [RCX + RBP*0x8],RSI
00012c45(3): NOT RDI
00012c48(3): TEST RDI,RDI
00012c4b(2): JS 0x00012c14
00012c4d(3): NOP dword ptr [RAX]
00012c50(3): TEST RDX,RDX
00012c53(6): JNS 0x00012ce8
00012c59(4): MOV RCX,qword ptr [RBX + 0x8]
00012c5d(5): MOV RAX,qword ptr [R12 + 0x8]
00012c62(5): LEA R8,[RCX + RAX*0x2 + -0x1]
00012c67(3): MOV RDX,R8
00012c6a(3): SUB RDX,RBP
00012c6d(4): ADD RDX,0x1
00012c71(2): JZ 0x00012caa
00012c73(4): MOV RDI,qword ptr [RBX + 0x10]
00012c77(4): LEA RAX,[RCX + -0x1]
00012c7b(3): ADD RCX,RDX
00012c7e(4): MOV qword ptr [RBX + 0x8],RCX
00012c82(6): NOP word ptr [RAX + RAX*0x1]
00012c88(4): MOV RSI,qword ptr [RDI + R8*0x8]
00012c8c(4): MOV RCX,qword ptr [RDI + RAX*0x8]
00012c90(4): LEA R9,[RAX + RDX*0x1]
00012c94(4): LEA R9,[RDI + R9*0x8]
00012c98(3): CMP RSI,RCX
00012c9b(2): JLE 0x00012d10
00012c9d(4): SUB R8,0x1
00012ca1(4): SUB RDX,0x1
00012ca5(3): MOV qword ptr [R9],RSI
00012ca8(2): JNZ 0x00012c88
00012caa(2): XOR EAX,EAX
00012cac(1): POP RBX
00012cad(1): POP RBP
00012cae(2): POP R12
00012cb0(1): RET
00012cb8(2): XOR EAX,EAX
00012cba(1): RET
00012cc0(4): SUB RDX,0x1
00012cc4(4): SUB RAX,0x1
00012cc8(3): MOV RDI,RDX
00012ccb(3): NOT RDI
00012cce(5): JMP 0x00012c0f
00012cd8(4): SUB RAX,0x1
00012cdc(5): JMP 0x00012c0f
00012ce8(4): MOV RAX,qword ptr [RBX + 0x10]
00012cec(4): ADD RDX,0x1
00012cf0(5): MOV RSI,qword ptr [R12 + 0x10]
00012cf5(3): SUB RBP,RDX
00012cf8(4): SHL RDX,0x3
00012cfc(4): LEA RDI,[RAX + RBP*0x8]
00012d00(5): CALL 0x00002710
00012d05(5): JMP 0x00012c59
00012d10(4): SUB RAX,0x1
00012d14(3): MOV qword ptr [R9],RCX
00012d17(6): JNS 0x00012c88
00012d1d(4): LEA RSI,[RDI + RBP*0x8]
00012d21(4): SHL RDX,0x3
00012d25(5): CALL 0x00002710
00012d2a(2): XOR EAX,EAX
00012d2c(5): JMP 0x00012cac
00012d38(3): ADD RDX,RSI
00012d3b(4): MOV RDI,qword ptr [RDI + 0x10]
00012d3f(4): LEA RBP,[RDX + RDX*0x1]
00012d43(4): SHL RDX,0x4
00012d47(3): MOV RSI,RDX
00012d4a(5): CALL 0x00002830
00012d4f(3): TEST RAX,RAX
00012d52(2): JZ 0x00012d94
00012d54(4): MOV qword ptr [RBX + 0x10],RAX
00012d58(3): MOV qword ptr [RBX],RBP
00012d5b(4): MOV RAX,qword ptr [RBX + 0x8]
00012d5f(5): MOV RDX,qword ptr [R12 + 0x8]
00012d64(5): JMP 0x00012bf4
00012d70(4): MOV qword ptr [RBX + 0x8],RDX
00012d74(5): MOV RAX,qword ptr [R12 + 0x8]
00012d79(4): MOV RDI,qword ptr [RBX + 0x10]
00012d7d(5): MOV RSI,qword ptr [R12 + 0x10]
00012d82(8): LEA RDX,[RAX*0x8]
00012d8a(5): CALL 0x00002710
00012d8f(5): JMP 0x00012caa
00012d94(5): MOV EAX,0xc
00012d99(5): JMP 0x00012cac
00012da0(2): PUSH R15
00012da2(2): PUSH R14
00012da4(3): MOV R15,RSI
00012da7(2): PUSH R13
00012da9(2): PUSH R12
00012dab(1): PUSH RBP
00012dac(1): PUSH RBX
00012dad(4): LEA RBX,[RDX + RDX*0x2]
00012db1(3): MOV RBP,RDX
00012db4(4): SUB RSP,0x68
00012db8(4): MOV R12,qword ptr [RSI + 0x28]
00012dbc(4): SHL RBX,0x3
00012dc0(9): MOV RAX,qword ptr FS:[0x28]
00012dc9(5): MOV qword ptr [RSP + 0x58],RAX
00012dce(2): XOR EAX,EAX
00012dd0(5): MOV qword ptr [RSP + 0x10],RDI
00012dd5(4): MOV dword ptr [RSP + 0x1c],ECX
00012dd9(3): ADD R12,RBX
00012ddc(5): MOV RAX,qword ptr [R12 + 0x8]
00012de1(9): MOV qword ptr [RSP + 0x28],0x0
00012dea(4): LEA RDI,[RAX + 0x1]
00012dee(5): MOV qword ptr [RSP + 0x20],RDI
00012df3(4): SHL RDI,0x3
00012df7(5): CALL 0x00002780
00012dfc(3): TEST RAX,RAX
00012dff(5): MOV qword ptr [RSP + 0x30],RAX
00012e04(6): JZ 0x00013040
00012e0a(4): MOV RAX,qword ptr [R15 + 0x30]
00012e0e(3): MOV RDX,qword ptr [R15]
00012e11(3): MOV R13,RBP
00012e14(4): SHL R13,0x4
00012e18(9): MOV qword ptr [RAX + RBX*0x1 + 0x8],-0x1
00012e21(4): LEA RAX,[RDX + R13*0x1]
00012e25(4): MOV R8D,dword ptr [RAX + 0x8]
00012e29(7): TEST R8D,0x3ff00
00012e30(6): JNZ 0x00012fd0
00012e36(4): TEST byte ptr [RAX + 0x8],0x8
00012e3a(6): JZ 0x00012f00
00012e40(4): MOV RSI,qword ptr [R15 + 0x28]
00012e44(4): LEA RAX,[RSI + RBX*0x1]
00012e48(5): CMP qword ptr [RAX + 0x8],0x0
00012e4d(6): JLE 0x00012f00
00012e53(5): LEA RDX,[RSP + 0x20]
00012e58(5): MOV byte ptr [RSP + 0x1b],0x0
00012e5d(3): XOR R14D,R14D
00012e60(5): LEA R12,[RSP + 0x40]
00012e65(5): MOV qword ptr [RSP + 0x8],RDX
00012e6a(2): JMP 0x00012e86
00012e70(4): MOV RSI,qword ptr [R15 + 0x28]
00012e74(4): ADD R14,0x1
00012e78(4): LEA RAX,[RSI + RBX*0x1]
00012e7c(4): CMP qword ptr [RAX + 0x8],R14
00012e80(6): JLE 0x00012f87
00012e86(4): MOV RAX,qword ptr [RAX + 0x10]
00012e8a(4): MOV RDX,qword ptr [RAX + R14*0x8]
00012e8e(4): MOV RAX,qword ptr [R15 + 0x30]
00012e92(4): LEA R8,[RDX + RDX*0x2]
00012e96(8): LEA R13,[R8*0x8]
00012e9e(3): ADD RAX,R13
00012ea1(4): MOV RCX,qword ptr [RAX + 0x8]
00012ea5(4): CMP RCX,-0x1
00012ea9(6): JZ 0x00012f70
00012eaf(3): TEST RCX,RCX
00012eb2(6): JZ 0x00013028
00012eb8(4): MOVDQU XMM0,xmmword ptr [RAX]
00012ebc(5): MOVAPS xmmword ptr [RSP + 0x40],XMM0
00012ec1(4): MOV RAX,qword ptr [RAX + 0x10]
00012ec5(5): MOV qword ptr [RSP + 0x50],RAX
00012eca(5): MOV RDI,qword ptr [RSP + 0x8]
00012ecf(3): MOV RSI,R12
00012ed2(5): CALL 0x00012bc0
00012ed7(2): TEST EAX,EAX
00012ed9(2): JNZ 0x00012f46
00012edb(4): MOV RAX,qword ptr [R15 + 0x30]
00012edf(6): CMP qword ptr [RAX + R13*0x1 + 0x8],0x0
00012ee5(2): JNZ 0x00012e70
00012ee7(5): MOV RDI,qword ptr [RSP + 0x50]
00012eec(5): CALL 0x00002a10
00012ef1(5): MOV byte ptr [RSP + 0x1b],0x1
00012ef6(5): JMP 0x00012e70
00012f00(5): LEA RDI,[RSP + 0x20]
00012f05(3): MOV RSI,RBP
00012f08(5): CALL 0x00011160
00012f0d(2): TEST AL,AL
00012f0f(6): JZ 0x00013040
00012f15(4): MOV RAX,qword ptr [R15 + 0x30]
00012f19(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
00012f1f(4): MOVUPS xmmword ptr [RAX + RBX*0x1],XMM0
00012f23(5): MOV RDX,qword ptr [RSP + 0x30]
00012f28(5): MOV qword ptr [RAX + RBX*0x1 + 0x10],RDX
00012f2d(5): MOV RBX,qword ptr [RSP + 0x10]
00012f32(5): MOV RAX,qword ptr [RSP + 0x30]
00012f37(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
00012f3d(3): MOVAPS xmmword ptr [RBX],XMM0
00012f40(4): MOV qword ptr [RBX + 0x10],RAX
00012f44(2): XOR EAX,EAX
00012f46(5): MOV RSI,qword ptr [RSP + 0x58]
00012f4b(9): XOR RSI,qword ptr FS:[0x28]
00012f54(6): JNZ 0x0001304a
00012f5a(4): ADD RSP,0x68
00012f5e(1): POP RBX
00012f5f(1): POP RBP
00012f60(2): POP R12
00012f62(2): POP R13
00012f64(2): POP R14
00012f66(2): POP R15
00012f68(1): RET
00012f70(4): LEA RAX,[RSI + RBX*0x1]
00012f74(4): ADD R14,0x1
00012f78(5): MOV byte ptr [RSP + 0x1b],0x1
00012f7d(4): CMP qword ptr [RAX + 0x8],R14
00012f81(6): JG 0x00012e86
00012f87(5): LEA RDI,[RSP + 0x20]
00012f8c(3): MOV RSI,RBP
00012f8f(5): CALL 0x00011160
00012f94(2): TEST AL,AL
00012f96(6): JZ 0x00013040
00012f9c(5): CMP byte ptr [RSP + 0x1c],0x1
00012fa1(4): MOV RAX,qword ptr [R15 + 0x30]
00012fa5(4): LEA RDX,[RAX + RBX*0x1]
00012fa9(6): JZ 0x00012f19
00012faf(5): CMP byte ptr [RSP + 0x1b],0x0
00012fb4(6): JZ 0x00012f19
00012fba(8): MOV qword ptr [RDX + 0x8],0x0
00012fc2(5): JMP 0x00012f2d
00012fd0(6): CMP qword ptr [R12 + 0x8],0x0
00012fd6(6): JZ 0x00012f00
00012fdc(5): MOV RCX,qword ptr [R12 + 0x10]
00012fe1(3): MOV RCX,qword ptr [RCX]
00012fe4(4): SHL RCX,0x4
00012fe8(5): TEST byte ptr [RDX + RCX*0x1 + 0xa],0x4
00012fed(6): JNZ 0x00012e36
00012ff3(4): SHR R8D,0x8
00012ff7(3): MOV RCX,RBP
00012ffa(3): MOV RDX,RBP
00012ffd(7): AND R8D,0x3ff
00013004(3): MOV RSI,RBP
00013007(3): MOV RDI,R15
0001300a(5): CALL 0x000120b0
0001300f(2): TEST EAX,EAX
00013011(6): JNZ 0x00012f46
00013017(3): MOV RAX,qword ptr [R15]
0001301a(3): ADD RAX,R13
0001301d(5): JMP 0x00012e36
00013028(3): MOV RSI,R15
0001302b(3): MOV RDI,R12
0001302e(5): CALL 0x00012da0
00013033(2): TEST EAX,EAX
00013035(6): JZ 0x00012eca
0001303b(5): JMP 0x00012f46
00013040(5): MOV EAX,0xc
00013045(5): JMP 0x00012f46
0001304a(5): CALL 0x00002560
0001304f(1): NOP
00013050(2): PUSH R15
00013052(2): PUSH R14
00013054(3): MOV R14,RDI
00013057(2): PUSH R13
00013059(2): PUSH R12
0001305b(3): MOV R15,RSI
0001305e(1): PUSH RBP
0001305f(1): PUSH RBX
00013060(3): MOV RBP,RDX
00013063(2): MOV EBX,ECX
00013065(4): SUB RSP,0x38
00013069(4): MOV R12,qword ptr [RSI + 0x8]
0001306d(9): MOV RAX,qword ptr FS:[0x28]
00013076(5): MOV qword ptr [RSP + 0x28],RAX
0001307b(2): XOR EAX,EAX
0001307d(9): MOV qword ptr [RSP + 0x18],0x0
00013086(8): LEA RDI,[R12*0x8]
0001308e(5): MOV qword ptr [RSP + 0x10],R12
00013093(5): CALL 0x00002780
00013098(3): TEST RAX,RAX
0001309b(5): MOV qword ptr [RSP + 0x20],RAX
000130a0(6): JZ 0x0001319d
000130a6(3): TEST R12,R12
000130a9(6): JLE 0x0001313b
000130af(5): LEA R12,[RSP + 0x10]
000130b4(3): XOR R13D,R13D
000130b7(9): NOP word ptr [RAX + RAX*0x1]
000130c0(4): MOV RAX,qword ptr [R15 + 0x10]
000130c4(4): MOV RDX,qword ptr [RAX + R13*0x8]
000130c8(4): MOV RAX,qword ptr [R14 + 0x30]
000130cc(4): LEA RCX,[RDX + RDX*0x2]
000130d0(4): LEA RSI,[RAX + RCX*0x8]
000130d4(4): MOV R8,qword ptr [RSI + 0x8]
000130d8(3): TEST R8,R8
000130db(6): JLE 0x00013160
000130e1(4): MOV R10,qword ptr [RSI + 0x10]
000130e5(3): MOV R9,qword ptr [R14]
000130e8(2): XOR ECX,ECX
000130ea(2): JMP 0x000130f9
000130f0(4): ADD RCX,0x1
000130f4(3): CMP R8,RCX
000130f7(2): JZ 0x00013160
000130f9(4): MOV RDI,qword ptr [R10 + RCX*0x8]
000130fd(3): MOV RAX,RDI
00013100(4): SHL RAX,0x4
00013104(3): ADD RAX,R9
00013107(5): MOVZX R11D,byte ptr [RAX + 0x8]
0001310c(3): CMP EBX,R11D
0001310f(2): JNZ 0x000130f0
00013111(3): CMP RBP,qword ptr [RAX]
00013114(2): JNZ 0x000130f0
00013116(4): CMP RDI,-0x1
0001311a(2): JZ 0x00013160
0001311c(3): MOV R8D,EBX
0001311f(3): MOV RCX,RBP
00013122(3): MOV RSI,R12
00013125(3): MOV RDI,R14
00013128(5): CALL 0x00012720
0001312d(2): TEST EAX,EAX
0001312f(2): JNZ 0x0001316c
00013131(4): ADD R13,0x1
00013135(4): CMP qword ptr [R15 + 0x8],R13
00013139(2): JG 0x000130c0
0001313b(4): MOV RDI,qword ptr [R15 + 0x10]
0001313f(5): CALL 0x00002a10
00013144(5): MOV RAX,qword ptr [RSP + 0x20]
00013149(6): MOVDQA XMM0,xmmword ptr [RSP + 0x10]
0001314f(4): MOV qword ptr [R15 + 0x10],RAX
00013153(2): XOR EAX,EAX
00013155(4): MOVAPS xmmword ptr [R15],XMM0
00013159(2): JMP 0x0001317e
00013160(3): MOV RDI,R12
00013163(5): CALL 0x00012bc0
00013168(2): TEST EAX,EAX
0001316a(2): JZ 0x00013131
0001316c(5): MOV RDI,qword ptr [RSP + 0x20]
00013171(4): MOV dword ptr [RSP + 0xc],EAX
00013175(5): CALL 0x00002a10
0001317a(4): MOV EAX,dword ptr [RSP + 0xc]
0001317e(5): MOV RDX,qword ptr [RSP + 0x28]
00013183(9): XOR RDX,qword ptr FS:[0x28]
0001318c(2): JNZ 0x000131a4
0001318e(4): ADD RSP,0x38
00013192(1): POP RBX
00013193(1): POP RBP
00013194(2): POP R12
00013196(2): POP R13
00013198(2): POP R14
0001319a(2): POP R15
0001319c(1): RET
0001319d(5): MOV EAX,0xc
000131a2(2): JMP 0x0001317e
000131a4(5): CALL 0x00002560
000131a9(7): NOP dword ptr [RAX]
000131b0(4): MOV R9,qword ptr [RSI + 0x8]
000131b4(2): XOR EAX,EAX
000131b6(3): TEST R9,R9
000131b9(6): JZ 0x00013278
000131bf(4): MOV R11,qword ptr [RDX + 0x8]
000131c3(3): TEST R11,R11
000131c6(6): JZ 0x00013278
000131cc(2): PUSH R13
000131ce(2): PUSH R12
000131d0(4): LEA RAX,[R9 + R11*0x1]
000131d4(1): PUSH RBP
000131d5(1): PUSH RBX
000131d6(3): MOV R12,RDX
000131d9(3): MOV RBX,RDI
000131dc(3): MOV RBP,RSI
000131df(4): SUB RSP,0x8
000131e3(4): MOV RCX,qword ptr [RDI + 0x8]
000131e7(3): MOV R13,qword ptr [RDI]
000131ea(4): MOV RDI,qword ptr [RDI + 0x10]
000131ee(4): LEA RDX,[RAX + RCX*0x1]
000131f2(3): CMP RDX,R13
000131f5(6): JG 0x00013320
000131fb(4): LEA RSI,[RCX + R9*0x1]
000131ff(4): MOV R13,qword ptr [RBP + 0x10]
00013203(5): MOV RDX,qword ptr [R12 + 0x10]
00013208(4): SUB R9,0x1
0001320c(4): SUB RCX,0x1
00013210(3): ADD RSI,R11
00013213(4): SUB R11,0x1
00013217(5): MOV RAX,qword ptr [R13 + R9*0x8]
0001321c(4): MOV R8,qword ptr [RDX + R11*0x8]
00013220(3): CMP RAX,R8
00013223(2): JZ 0x00013236
00013225(2): JGE 0x00013280
00013227(4): SUB R11,0x1
0001322b(2): JS 0x00013290
0001322d(4): MOV R8,qword ptr [RDX + R11*0x8]
00013231(3): CMP RAX,R8
00013234(2): JNZ 0x00013225
00013236(3): TEST RCX,RCX
00013239(2): JNS 0x0001324a
0001323b(2): JMP 0x00013258
00013240(4): SUB RCX,0x1
00013244(4): CMP RCX,-0x1
00013248(2): JZ 0x00013258
0001324a(4): MOV R10,qword ptr [RDI + RCX*0x8]
0001324e(3): CMP R10,R8
00013251(2): JG 0x00013240
00013253(3): CMP R10,R8
00013256(2): JZ 0x00013260
00013258(4): SUB RSI,0x1
0001325c(4): MOV qword ptr [RDI + RSI*0x8],R8
00013260(4): SUB R9,0x1
00013264(2): JS 0x00013290
00013266(4): SUB R11,0x1
0001326a(2): JS 0x00013290
0001326c(5): MOV RAX,qword ptr [R13 + R9*0x8]
00013271(2): JMP 0x0001322d
00013278(2): RET
00013280(4): SUB R9,0x1
00013284(2): JS 0x00013290
00013286(5): MOV RAX,qword ptr [R13 + R9*0x8]
0001328b(2): JMP 0x00013220
00013290(4): MOV RCX,qword ptr [RBX + 0x8]
00013294(4): MOV RDX,qword ptr [RBP + 0x8]
00013298(3): ADD RDX,RCX
0001329b(5): ADD RDX,qword ptr [R12 + 0x8]
000132a0(4): LEA RAX,[RCX + -0x1]
000132a4(4): LEA R9,[RDX + -0x1]
000132a8(3): SUB RDX,RSI
000132ab(3): ADD RCX,RDX
000132ae(3): TEST RDX,RDX
000132b1(4): MOV qword ptr [RBX + 0x8],RCX
000132b5(2): JLE 0x000132fd
000132b7(3): TEST RAX,RAX
000132ba(2): JS 0x000132fd
000132bc(4): NOP dword ptr [RAX]
000132c0(4): MOV R8,qword ptr [RDI + R9*0x8]
000132c4(4): MOV RCX,qword ptr [RDI + RAX*0x8]
000132c8(4): LEA R10,[RAX + RDX*0x1]
000132cc(4): LEA R10,[RDI + R10*0x8]
000132d0(3): CMP R8,RCX
000132d3(2): JLE 0x000132f0
000132d5(4): SUB R9,0x1
000132d9(4): SUB RDX,0x1
000132dd(3): MOV qword ptr [R10],R8
000132e0(2): JNZ 0x000132c0
000132e2(2): XOR EDX,EDX
000132e4(2): JMP 0x00013301
000132f0(4): SUB RAX,0x1
000132f4(3): MOV qword ptr [R10],RCX
000132f7(4): CMP RAX,-0x1
000132fb(2): JNZ 0x000132c0
000132fd(4): SHL RDX,0x3
00013301(4): LEA RSI,[RDI + RSI*0x8]
00013305(5): CALL 0x00002710
0001330a(2): XOR EAX,EAX
0001330c(4): ADD RSP,0x8
00013310(1): POP RBX
00013311(1): POP RBP
00013312(2): POP R12
00013314(2): POP R13
00013316(1): RET
00013320(3): ADD R13,RAX
00013323(8): LEA RSI,[R13*0x8]
0001332b(5): CALL 0x00002830
00013330(3): TEST RAX,RAX
00013333(3): MOV RDI,RAX
00013336(2): JZ 0x00013351
00013338(4): MOV qword ptr [RBX + 0x10],RAX
0001333c(3): MOV qword ptr [RBX],R13
0001333f(4): MOV RCX,qword ptr [RBX + 0x8]
00013343(4): MOV R9,qword ptr [RBP + 0x8]
00013347(5): MOV R11,qword ptr [R12 + 0x8]
0001334c(5): JMP 0x000131fb
00013351(5): MOV EAX,0xc
00013356(2): JMP 0x0001330c
00013360(1): PUSH RBX
00013361(3): MOV RBX,RDI
00013364(4): SUB RSP,0x20
00013368(2): MOV EAX,dword ptr [RSI]
0001336a(3): CMP EAX,0xf
0001336d(2): JZ 0x000133e8
0001336f(3): MOVSXD R9,EAX
00013372(4): LEA R10D,[RAX + 0x1]
00013376(3): MOV RDI,qword ptr [RDI]
00013379(3): MOV RAX,R9
0001337c(4): SHL RAX,0x6
00013380(4): ADD RAX,0x8
00013384(4): SHL R9,0x6
00013388(3): MOV dword ptr [RSI],R10D
0001338b(3): ADD RAX,RDI
0001338e(4): LEA RSI,[RDI + R9*0x1]
00013392(8): MOV qword ptr [RSI + 0x8],0x0
0001339a(4): MOV qword ptr [RSI + 0x10],RDX
0001339e(4): LEA RDI,[RSI + 0x20]
000133a2(4): MOV qword ptr [RSI + 0x18],RCX
000133a6(5): MOVDQU XMM0,xmmword ptr [R8]
000133ab(4): MOVUPS xmmword ptr [RSI + 0x30],XMM0
000133af(4): AND byte ptr [RDI + 0x1a],0xf3
000133b3(3): TEST RDX,RDX
000133b6(8): MOV qword ptr [RSI + 0x20],0x0
000133be(8): MOV qword ptr [RSI + 0x28],0x0
000133c6(8): MOV qword ptr [RSI + 0x40],-0x1
000133ce(2): JZ 0x000133d3
000133d0(3): MOV qword ptr [RDX],RAX
000133d3(3): TEST RCX,RCX
000133d6(2): JZ 0x000133db
000133d8(3): MOV qword ptr [RCX],RAX
000133db(4): ADD RSP,0x20
000133df(1): POP RBX
000133e0(1): RET
000133e8(5): MOV EDI,0x3c8
000133ed(5): MOV qword ptr [RSP + 0x18],R8
000133f2(5): MOV qword ptr [RSP + 0x10],RCX
000133f7(5): MOV qword ptr [RSP + 0x8],RDX
000133fc(4): MOV qword ptr [RSP],RSI
00013400(5): CALL 0x00002780
00013405(3): TEST RAX,RAX
00013408(3): MOV RDI,RAX
0001340b(2): JZ 0x0001343c
0001340d(3): MOV RAX,qword ptr [RBX]
00013410(6): MOV R10D,0x1
00013416(3): MOV qword ptr [RBX],RDI
00013419(3): XOR R9D,R9D
0001341c(5): MOV R8,qword ptr [RSP + 0x18]
00013421(5): MOV RCX,qword ptr [RSP + 0x10]
00013426(5): MOV RDX,qword ptr [RSP + 0x8]
0001342b(4): MOV RSI,qword ptr [RSP]
0001342f(3): MOV qword ptr [RDI],RAX
00013432(5): MOV EAX,0x8
00013437(5): JMP 0x00013384
0001343c(2): XOR EAX,EAX
0001343e(2): JMP 0x000133db
00013440(2): PUSH R14
00013442(2): PUSH R13
00013444(4): LEA R13,[RSI + 0x70]
00013448(2): PUSH R12
0001344a(1): PUSH RBP
0001344b(7): LEA R12,[0x80 + RSI]
00013452(1): PUSH RBX
00013453(3): MOV RBX,RDI
00013456(4): SUB RSP,0x10
0001345a(3): MOV RBP,qword ptr [RDI]
0001345d(9): MOV RAX,qword ptr FS:[0x28]
00013466(5): MOV qword ptr [RSP + 0x8],RAX
0001346b(2): XOR EAX,EAX
0001346d(3): MOV R14,RSP
00013470(4): LEA R8,[RBX + 0x28]
00013474(2): XOR ECX,ECX
00013476(2): XOR EDX,EDX
00013478(3): MOV RSI,R12
0001347b(3): MOV RDI,R13
0001347e(5): CALL 0x00013360
00013483(3): TEST RAX,RAX
00013486(3): MOV qword ptr [R14],RAX
00013489(2): JZ 0x000134dc
0001348b(3): MOV qword ptr [RAX],RBP
0001348e(3): MOV RBP,qword ptr [R14]
00013491(4): OR byte ptr [RBP + 0x32],0x4
00013495(4): MOV RAX,qword ptr [RBX + 0x8]
00013499(3): TEST RAX,RAX
0001349c(2): JZ 0x000134b0
0001349e(4): LEA R14,[RBP + 0x8]
000134a2(3): MOV RBX,RAX
000134a5(2): JMP 0x00013470
000134b0(2): XOR EDX,EDX
000134b2(2): JMP 0x000134bb
000134b8(3): MOV RBX,RAX
000134bb(4): MOV RAX,qword ptr [RBX + 0x10]
000134bf(3): TEST RAX,RAX
000134c2(2): JZ 0x000134c9
000134c4(3): CMP RAX,RDX
000134c7(2): JNZ 0x00013500
000134c9(3): MOV RAX,qword ptr [RBX]
000134cc(4): MOV RBP,qword ptr [RBP]
000134d0(3): MOV RDX,RBX
000134d3(3): TEST RAX,RAX
000134d6(2): JNZ 0x000134b8
000134d8(4): MOV RAX,qword ptr [RSP]
000134dc(5): MOV RCX,qword ptr [RSP + 0x8]
000134e1(9): XOR RCX,qword ptr FS:[0x28]
000134ea(2): JNZ 0x0001350c
000134ec(4): ADD RSP,0x10
000134f0(1): POP RBX
000134f1(1): POP RBP
000134f2(2): POP R12
000134f4(2): POP R13
000134f6(2): POP R14
000134f8(1): RET
00013500(4): LEA R14,[RBP + 0x10]
00013504(3): MOV RBX,RAX
00013507(5): JMP 0x00013470
0001350c(5): CALL 0x00002560
00013511(5): NOP dword ptr [RAX + RAX*0x1]
00013516(10): NOP word ptr CS:[RAX + RAX*0x1]
00013520(2): PUSH R15
00013522(2): PUSH R14
00013524(2): PUSH R13
00013526(2): PUSH R12
00013528(3): MOV R13,RDX
0001352b(1): PUSH RBP
0001352c(1): PUSH RBX
0001352d(4): SUB RSP,0x48
00013531(3): MOV RBX,qword ptr [RSI]
00013534(4): MOV RBP,qword ptr [RDX + 0x8]
00013538(9): MOV RAX,qword ptr FS:[0x28]
00013541(5): MOV qword ptr [RSP + 0x38],RAX
00013546(2): XOR EAX,EAX
00013548(4): TEST byte ptr [RSI + 0x38],0x10
0001354c(5): MOV qword ptr [RSP + 0x18],RDI
00013551(6): JZ 0x000136c8
00013557(3): TEST RBP,RBP
0001355a(2): JZ 0x000135d0
0001355c(4): MOV RAX,qword ptr [RDX + 0x28]
00013560(4): CMP RAX,0x3f
00013564(6): JG 0x0001369d
0001356a(7): MOV RDX,qword ptr [0xa0 + RBX]
00013571(4): BT RDX,RAX
00013575(6): JNC 0x0001369d
0001357b(4): LEA RAX,[RBX + 0x70]
0001357f(5): LEA R14,[RSP + 0x20]
00013584(4): SUB RBX,-0x80
00013588(2): XOR ECX,ECX
0001358a(2): XOR EDX,EDX
0001358c(3): MOV RSI,RBX
0001358f(3): MOV R15,RAX
00013592(3): MOV R8,R14
00013595(3): MOV RDI,RAX
00013598(5): MOV byte ptr [RSP + 0x28],0x8
0001359d(5): MOV qword ptr [RSP + 0x8],RAX
000135a2(5): CALL 0x00013360
000135a7(3): MOV RDI,R15
000135aa(3): MOV R8,R14
000135ad(2): XOR ECX,ECX
000135af(2): XOR EDX,EDX
000135b1(3): MOV RSI,RBX
000135b4(3): MOV R12,RAX
000135b7(5): MOV byte ptr [RSP + 0x28],0x9
000135bc(5): CALL 0x00013360
000135c1(3): MOV R15,RAX
000135c4(5): JMP 0x0001371d
000135d0(4): LEA RAX,[RBX + 0x70]
000135d4(5): LEA R14,[RSP + 0x20]
000135d9(4): SUB RBX,-0x80
000135dd(2): XOR ECX,ECX
000135df(2): XOR EDX,EDX
000135e1(3): MOV RSI,RBX
000135e4(3): MOV R15,RAX
000135e7(3): MOV R8,R14
000135ea(3): MOV RDI,RAX
000135ed(5): MOV byte ptr [RSP + 0x28],0x8
000135f2(5): MOV qword ptr [RSP + 0x8],RAX
000135f7(5): CALL 0x00013360
000135fc(3): MOV RDI,R15
000135ff(3): MOV R8,R14
00013602(2): XOR ECX,ECX
00013604(2): XOR EDX,EDX
00013606(3): MOV RSI,RBX
00013609(3): MOV R12,RAX
0001360c(5): MOV byte ptr [RSP + 0x28],0x9
00013611(5): CALL 0x00013360
00013616(3): MOV R11,RAX
00013619(3): MOV R15,RAX
0001361c(5): MOV RDI,qword ptr [RSP + 0x8]
00013621(3): MOV R8,R14
00013624(3): MOV RCX,R11
00013627(3): MOV RDX,R12
0001362a(3): MOV RSI,RBX
0001362d(5): MOV byte ptr [RSP + 0x28],0x10
00013632(5): MOV qword ptr [RSP + 0x10],R11
00013637(5): CALL 0x00013360
0001363c(3): TEST RAX,RAX
0001363f(3): MOV RBP,RAX
00013642(6): JZ 0x00013740
00013648(5): MOV R11,qword ptr [RSP + 0x10]
0001364d(3): TEST R11,R11
00013650(6): JZ 0x00013740
00013656(3): TEST R12,R12
00013659(6): JZ 0x00013740
0001365f(3): TEST R15,R15
00013662(6): JZ 0x00013740
00013668(4): MOV RAX,qword ptr [R13 + 0x28]
0001366c(4): MOV qword ptr [R15 + 0x28],RAX
00013670(5): MOV qword ptr [R12 + 0x28],RAX
00013675(5): MOVZX EAX,byte ptr [R13 + 0x32]
0001367a(5): MOVZX EDX,byte ptr [R15 + 0x32]
0001367f(3): AND EAX,0x8
00013682(3): AND EDX,0xfffffff7
00013685(2): MOV ECX,EAX
00013687(2): OR EDX,ECX
00013689(4): MOV byte ptr [R15 + 0x32],DL
0001368d(6): MOVZX EAX,byte ptr [R12 + 0x32]
00013693(3): AND EAX,0xfffffff7
00013696(2): OR EAX,ECX
00013698(5): MOV byte ptr [R12 + 0x32],AL
0001369d(5): MOV RDI,qword ptr [RSP + 0x38]
000136a2(9): XOR RDI,qword ptr FS:[0x28]
000136ab(3): MOV RAX,RBP
000136ae(6): JNZ 0x00013752
000136b4(4): ADD RSP,0x48
000136b8(1): POP RBX
000136b9(1): POP RBP
000136ba(2): POP R12
000136bc(2): POP R13
000136be(2): POP R14
000136c0(2): POP R15
000136c2(1): RET
000136c8(4): LEA RAX,[RBX + 0x70]
000136cc(5): LEA R14,[RSP + 0x20]
000136d1(4): SUB RBX,-0x80
000136d5(2): XOR ECX,ECX
000136d7(2): XOR EDX,EDX
000136d9(3): MOV RSI,RBX
000136dc(3): MOV R15,RAX
000136df(3): MOV R8,R14
000136e2(3): MOV RDI,RAX
000136e5(5): MOV byte ptr [RSP + 0x28],0x8
000136ea(5): MOV qword ptr [RSP + 0x8],RAX
000136ef(5): CALL 0x00013360
000136f4(2): XOR ECX,ECX
000136f6(2): XOR EDX,EDX
000136f8(3): MOV RDI,R15
000136fb(3): MOV R8,R14
000136fe(3): MOV RSI,RBX
00013701(3): MOV R12,RAX
00013704(5): MOV byte ptr [RSP + 0x28],0x9
00013709(5): CALL 0x00013360
0001370e(3): TEST RBP,RBP
00013711(3): MOV R15,RAX
00013714(3): MOV R11,RAX
00013717(6): JZ 0x0001361c
0001371d(5): MOV RDI,qword ptr [RSP + 0x8]
00013722(3): MOV R8,R14
00013725(3): MOV RCX,R15
00013728(3): MOV RDX,RBP
0001372b(3): MOV RSI,RBX
0001372e(5): MOV byte ptr [RSP + 0x28],0x10
00013733(5): CALL 0x00013360
00013738(3): MOV R11,RAX
0001373b(5): JMP 0x0001361c
00013740(5): MOV RAX,qword ptr [RSP + 0x18]
00013745(2): XOR EBP,EBP
00013747(6): MOV dword ptr [RAX],0xc
0001374d(5): JMP 0x0001369d
00013752(5): CALL 0x00002560
00013757(9): NOP word ptr [RAX + RAX*0x1]
00013760(1): PUSH RBP
00013761(1): PUSH RBX
00013762(3): MOV RBP,RDI
00013765(3): MOV RBX,RSI
00013768(4): SUB RSP,0x18
0001376c(4): MOV RDX,qword ptr [RSI + 0x8]
00013770(9): MOV RAX,qword ptr FS:[0x28]
00013779(5): MOV qword ptr [RSP + 0x8],RAX
0001377e(2): XOR EAX,EAX
00013780(8): MOV dword ptr [RSP + 0x4],0x0
00013788(3): TEST RDX,RDX
0001378b(2): JZ 0x00013793
0001378d(4): CMP byte ptr [RDX + 0x30],0x11
00013791(2): JZ 0x000137e0
00013793(4): MOV RDX,qword ptr [RBX + 0x10]
00013797(3): TEST RDX,RDX
0001379a(2): JZ 0x000137a2
0001379c(4): CMP byte ptr [RDX + 0x30],0x11
000137a0(2): JZ 0x000137c0
000137a2(5): MOV RCX,qword ptr [RSP + 0x8]
000137a7(9): XOR RCX,qword ptr FS:[0x28]
000137b0(4): MOV EAX,dword ptr [RSP + 0x4]
000137b4(2): JNZ 0x000137fb
000137b6(4): ADD RSP,0x18
000137ba(1): POP RBX
000137bb(1): POP RBP
000137bc(1): RET
000137c0(5): LEA RDI,[RSP + 0x4]
000137c5(3): MOV RSI,RBP
000137c8(5): CALL 0x00013520
000137cd(3): TEST RAX,RAX
000137d0(4): MOV qword ptr [RBX + 0x10],RAX
000137d4(2): JZ 0x000137a2
000137d6(3): MOV qword ptr [RAX],RBX
000137d9(2): JMP 0x000137a2
000137e0(5): LEA RDI,[RSP + 0x4]
000137e5(3): MOV RSI,RBP
000137e8(5): CALL 0x00013520
000137ed(3): TEST RAX,RAX
000137f0(4): MOV qword ptr [RBX + 0x8],RAX
000137f4(2): JZ 0x00013793
000137f6(3): MOV qword ptr [RAX],RBX
000137f9(2): JMP 0x00013793
000137fb(5): CALL 0x00002560
00013800(2): PUSH R12
00013802(1): PUSH RBP
00013803(1): PUSH RBX
00013804(4): MOV RAX,qword ptr [RSI + 0x8]
00013808(4): MOV qword ptr [RDI + 0x8],RAX
0001380c(4): MOV R12,qword ptr [RSI + 0x8]
00013810(3): TEST R12,R12
00013813(2): JLE 0x00013850
00013815(3): MOV RBX,RDI
00013818(3): MOV qword ptr [RDI],RAX
0001381b(8): LEA RDI,[RAX*0x8]
00013823(3): MOV RBP,RSI
00013826(5): CALL 0x00002780
0001382b(3): TEST RAX,RAX
0001382e(4): MOV qword ptr [RBX + 0x10],RAX
00013832(2): JZ 0x00013870
00013834(4): MOV RSI,qword ptr [RBP + 0x10]
00013838(8): LEA RDX,[R12*0x8]
00013840(3): MOV RDI,RAX
00013843(5): CALL 0x00002710
00013848(2): XOR EAX,EAX
0001384a(1): POP RBX
0001384b(1): POP RBP
0001384c(2): POP R12
0001384e(1): RET
00013850(4): PXOR XMM0,XMM0
00013854(8): MOV qword ptr [RDI + 0x10],0x0
0001385c(2): XOR EAX,EAX
0001385e(3): MOVUPS xmmword ptr [RDI],XMM0
00013861(1): POP RBX
00013862(1): POP RBP
00013863(2): POP R12
00013865(1): RET
00013870(8): MOV qword ptr [RBX + 0x8],0x0
00013878(7): MOV qword ptr [RBX],0x0
0001387f(5): MOV EAX,0xc
00013884(2): JMP 0x0001384a
00013890(3): TEST RSI,RSI
00013893(2): PUSH R14
00013895(2): PUSH R13
00013897(2): PUSH R12
00013899(1): PUSH RBP
0001389a(1): PUSH RBX
0001389b(6): JZ 0x00013945
000138a1(3): TEST RDX,RDX
000138a4(4): MOV R13,qword ptr [RSI + 0x8]
000138a8(6): JZ 0x00013940
000138ae(3): TEST R13,R13
000138b1(6): JLE 0x00013940
000138b7(4): MOV R14,qword ptr [RDX + 0x8]
000138bb(3): TEST R14,R14
000138be(6): JLE 0x00013973
000138c4(3): MOV R12,RDI
000138c7(5): LEA RDI,[R13 + R14*0x1]
000138cc(3): MOV RBX,RDX
000138cf(3): MOV RBP,RSI
000138d2(4): MOV qword ptr [R12],RDI
000138d6(4): SHL RDI,0x3
000138da(5): CALL 0x00002780
000138df(3): TEST RAX,RAX
000138e2(5): MOV qword ptr [R12 + 0x10],RAX
000138e7(6): JZ 0x000139d8
000138ed(4): MOV R9,qword ptr [RBX + 0x10]
000138f1(4): MOV R8,qword ptr [RBP + 0x10]
000138f5(2): XOR EBX,EBX
000138f7(2): XOR ECX,ECX
000138f9(2): XOR ESI,ESI
000138fb(2): JMP 0x0001391e
00013900(4): SETZ DIL
00013904(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDX
00013909(4): ADD RSI,0x1
0001390d(4): MOVZX EDI,DIL
00013911(3): ADD RCX,RDI
00013914(3): CMP R13,RSI
00013917(2): JLE 0x00013980
00013919(3): CMP R14,RCX
0001391c(2): JLE 0x00013998
0001391e(4): MOV RDX,qword ptr [R8 + RSI*0x8]
00013922(4): MOV RDI,qword ptr [R9 + RCX*0x8]
00013926(4): ADD RBX,0x1
0001392a(3): CMP RDX,RDI
0001392d(2): JLE 0x00013900
0001392f(4): ADD RCX,0x1
00013933(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDI
00013938(2): JMP 0x00013914
00013940(3): TEST R13,R13
00013943(2): JG 0x00013973
00013945(3): TEST RDX,RDX
00013948(2): JZ 0x00013951
0001394a(5): CMP qword ptr [RDX + 0x8],0x0
0001394f(2): JG 0x00013970
00013951(4): PXOR XMM0,XMM0
00013955(8): MOV qword ptr [RDI + 0x10],0x0
0001395d(2): XOR EAX,EAX
0001395f(3): MOVAPS xmmword ptr [RDI],XMM0
00013962(1): POP RBX
00013963(1): POP RBP
00013964(2): POP R12
00013966(2): POP R13
00013968(2): POP R14
0001396a(1): RET
00013970(3): MOV RSI,RDX
00013973(1): POP RBX
00013974(1): POP RBP
00013975(2): POP R12
00013977(2): POP R13
00013979(2): POP R14
0001397b(5): JMP 0x00013800
00013980(3): CMP R14,RCX
00013983(2): JG 0x000139b8
00013985(5): MOV qword ptr [R12 + 0x8],RBX
0001398a(2): XOR EAX,EAX
0001398c(1): POP RBX
0001398d(1): POP RBP
0001398e(2): POP R12
00013990(2): POP R13
00013992(2): POP R14
00013994(1): RET
00013998(3): SUB R13,RSI
0001399b(4): LEA RDI,[RAX + RBX*0x8]
0001399f(4): LEA RSI,[R8 + RSI*0x8]
000139a3(8): LEA RDX,[R13*0x8]
000139ab(3): ADD RBX,R13
000139ae(5): CALL 0x00002710
000139b3(2): JMP 0x00013985
000139b8(3): SUB R14,RCX
000139bb(4): LEA RDI,[RAX + RBX*0x8]
000139bf(4): LEA RSI,[R9 + RCX*0x8]
000139c3(8): LEA RDX,[R14*0x8]
000139cb(3): ADD RBX,R14
000139ce(5): CALL 0x00002710
000139d3(2): JMP 0x00013985
000139d8(5): MOV EAX,0xc
000139dd(5): JMP 0x00013962
000139f0(2): PUSH R15
000139f2(2): PUSH R14
000139f4(2): PUSH R13
000139f6(2): PUSH R12
000139f8(1): PUSH RBP
000139f9(1): PUSH RBX
000139fa(4): SUB RSP,0x28
000139fe(4): MOV R10,qword ptr [RDX + 0x8]
00013a02(3): TEST R10,R10
00013a05(6): JZ 0x00013c8f
00013a0b(3): MOV R8D,ECX
00013a0e(3): TEST R10,R10
00013a11(4): LEA R12,[R8 + R10*0x1]
00013a15(2): JLE 0x00013a2c
00013a17(4): MOV RAX,qword ptr [RDX + 0x10]
00013a1b(4): LEA R10,[RAX + R10*0x8]
00013a1f(1): NOP
00013a20(3): ADD R12,qword ptr [RAX]
00013a23(4): ADD RAX,0x8
00013a27(3): CMP R10,RAX
00013a2a(2): JNZ 0x00013a20
00013a2c(7): MOV RAX,qword ptr [0x88 + RSI]
00013a33(3): MOV RBP,RDX
00013a36(4): MOV dword ptr [RSP + 0x4],ECX
00013a3a(3): MOV R13,RSI
00013a3d(5): MOV qword ptr [RSP + 0x18],RDI
00013a42(3): AND RAX,R12
00013a45(4): LEA RDX,[RAX + RAX*0x2]
00013a49(4): MOV RAX,qword ptr [RSI + 0x40]
00013a4d(4): LEA RAX,[RAX + RDX*0x8]
00013a51(3): MOV R11,qword ptr [RAX]
00013a54(3): TEST R11,R11
00013a57(2): JLE 0x00013ab0
00013a59(4): MOV RBX,qword ptr [RAX + 0x10]
00013a5d(3): XOR R10D,R10D
00013a60(3): MOV R9D,ECX
00013a63(2): JMP 0x00013a71
00013a68(4): ADD R10,0x1
00013a6c(3): CMP R10,R11
00013a6f(2): JZ 0x00013ab0
00013a71(4): MOV R14,qword ptr [RBX + R10*0x8]
00013a75(3): CMP qword ptr [R14],R12
00013a78(2): JNZ 0x00013a68
00013a7a(5): MOVZX EAX,byte ptr [R14 + 0x68]
00013a7f(3): AND EAX,0xf
00013a82(3): CMP EAX,R9D
00013a85(2): JNZ 0x00013a68
00013a87(4): MOV RDI,qword ptr [R14 + 0x50]
00013a8b(3): TEST RDI,RDI
00013a8e(2): JZ 0x00013a68
00013a90(3): MOV RSI,RBP
00013a93(5): CALL 0x00012640
00013a98(2): TEST AL,AL
00013a9a(2): JZ 0x00013a68
00013a9c(4): ADD RSP,0x28
00013aa0(3): MOV RAX,R14
00013aa3(1): POP RBX
00013aa4(1): POP RBP
00013aa5(2): POP R12
00013aa7(2): POP R13
00013aa9(2): POP R14
00013aab(2): POP R15
00013aad(1): RET
00013ab0(5): MOV ESI,0x1
00013ab5(5): MOV EDI,0x70
00013aba(5): CALL 0x000026b0
00013abf(3): TEST RAX,RAX
00013ac2(3): MOV R14,RAX
00013ac5(6): JZ 0x00013c06
00013acb(4): LEA RAX,[RAX + 0x8]
00013acf(3): MOV RSI,RBP
00013ad2(3): MOV RDI,RAX
00013ad5(3): MOV RBX,RAX
00013ad8(5): CALL 0x00013800
00013add(2): TEST EAX,EAX
00013adf(6): JNZ 0x00013c9d
00013ae5(5): MOVZX EAX,byte ptr [R14 + 0x68]
00013aea(5): MOVZX EDX,byte ptr [RSP + 0x4]
00013aef(4): MOV qword ptr [R14 + 0x50],RBX
00013af3(3): AND EDX,0xf
00013af6(3): AND EAX,0xfffffff0
00013af9(2): OR EAX,EDX
00013afb(5): CMP qword ptr [RBP + 0x8],0x0
00013b00(4): MOV byte ptr [R14 + 0x68],AL
00013b04(6): JLE 0x00013be8
00013b0a(4): LEA RCX,[R14 + 0x18]
00013b0e(3): XOR R15D,R15D
00013b11(5): MOV qword ptr [RSP + 0x10],R12
00013b16(3): XOR R10D,R10D
00013b19(3): MOV R12,R13
00013b1c(3): MOV R13,R15
00013b1f(5): MOV qword ptr [RSP + 0x8],RCX
00013b24(3): MOV R15,RBX
00013b27(9): NOP word ptr [RAX + RAX*0x1]
00013b30(4): MOV RAX,qword ptr [RBP + 0x10]
00013b34(4): MOV RAX,qword ptr [RAX + R13*0x8]
00013b38(4): SHL RAX,0x4
00013b3c(4): ADD RAX,qword ptr [R12]
00013b40(4): MOVZX ESI,byte ptr [RAX + 0x8]
00013b44(3): MOV EBX,dword ptr [RAX + 0x8]
00013b47(3): SHR EBX,0x8
00013b4a(5): AND BX,0x3ff
00013b4f(3): CMP ESI,0x1
00013b52(3): MOVZX EDI,BX
00013b55(2): JNZ 0x00013b5b
00013b57(2): TEST EDI,EDI
00013b59(2): JZ 0x00013bd2
00013b5b(5): MOVZX EDX,byte ptr [R14 + 0x68]
00013b60(4): MOVZX EAX,byte ptr [RAX + 0xa]
00013b64(3): MOV R9D,EDX
00013b67(3): SHR AL,0x4
00013b6a(3): AND EDX,0xffffffdf
00013b6d(4): SHR R9B,0x5
00013b71(3): OR EAX,R9D
00013b74(3): AND EAX,0x1
00013b77(3): SHL EAX,0x5
00013b7a(2): OR EAX,EDX
00013b7c(3): CMP ESI,0x2
00013b7f(4): MOV byte ptr [R14 + 0x68],AL
00013b83(6): JZ 0x00013c50
00013b89(3): CMP ESI,0x4
00013b8c(2): JNZ 0x00013b95
00013b8e(3): OR EAX,0x40
00013b91(4): MOV byte ptr [R14 + 0x68],AL
00013b95(2): TEST EDI,EDI
00013b97(2): JZ 0x00013bd2
00013b99(4): CMP R15,qword ptr [R14 + 0x50]
00013b9d(6): JZ 0x00013c60
00013ba3(3): TEST BL,0x1
00013ba6(2): JZ 0x00013c20
00013ba8(5): TEST byte ptr [RSP + 0x4],0x1
00013bad(2): JZ 0x00013bb8
00013baf(3): TEST BL,0x2
00013bb2(2): JZ 0x00013c2c
00013bb4(4): NOP dword ptr [RAX]
00013bb8(3): MOV RDX,R13
00013bbb(3): SUB RDX,R10
00013bbe(2): JS 0x00013bce
00013bc0(5): MOV RSI,qword ptr [RSP + 0x8]
00013bc5(4): LEA RDI,[R14 + 0x10]
00013bc9(5): CALL 0x00012820
00013bce(4): ADD R10,0x1
00013bd2(4): ADD R13,0x1
00013bd6(4): CMP R13,qword ptr [RBP + 0x8]
00013bda(6): JL 0x00013b30
00013be0(3): MOV R13,R12
00013be3(5): MOV R12,qword ptr [RSP + 0x10]
00013be8(3): MOV RDX,R12
00013beb(3): MOV RSI,R14
00013bee(3): MOV RDI,R13
00013bf1(5): CALL 0x00011290
00013bf6(2): TEST EAX,EAX
00013bf8(6): JZ 0x00013a9c
00013bfe(3): MOV RDI,R14
00013c01(5): CALL 0x00012330
00013c06(5): MOV RAX,qword ptr [RSP + 0x18]
00013c0b(3): XOR R14D,R14D
00013c0e(6): MOV dword ptr [RAX],0xc
00013c14(5): JMP 0x00013a9c
00013c20(3): TEST BL,0x2
00013c23(2): JZ 0x00013c2c
00013c25(5): TEST byte ptr [RSP + 0x4],0x1
00013c2a(2): JNZ 0x00013bb8
00013c2c(3): TEST BL,0x10
00013c2f(2): JZ 0x00013c38
00013c31(5): TEST byte ptr [RSP + 0x4],0x2
00013c36(2): JZ 0x00013bb8
00013c38(3): AND EBX,0x40
00013c3b(2): JZ 0x00013bd2
00013c3d(5): TEST byte ptr [RSP + 0x4],0x4
00013c42(2): JNZ 0x00013bd2
00013c44(5): JMP 0x00013bb8
00013c50(3): OR EAX,0x10
00013c53(4): MOV byte ptr [R14 + 0x68],AL
00013c57(5): JMP 0x00013b95
00013c60(5): MOV EDI,0x18
00013c65(5): CALL 0x00002780
00013c6a(3): TEST RAX,RAX
00013c6d(4): MOV qword ptr [R14 + 0x50],RAX
00013c71(2): JZ 0x00013bfe
00013c73(3): MOV RSI,RBP
00013c76(3): MOV RDI,RAX
00013c79(5): CALL 0x00013800
00013c7e(2): TEST EAX,EAX
00013c80(2): JNZ 0x00013c06
00013c82(5): OR byte ptr [R14 + 0x68],0x80
00013c87(3): XOR R10D,R10D
00013c8a(5): JMP 0x00013ba3
00013c8f(6): MOV dword ptr [RDI],0x0
00013c95(3): XOR R14D,R14D
00013c98(5): JMP 0x00013a9c
00013c9d(3): MOV RDI,R14
00013ca0(5): CALL 0x00002a10
00013ca5(5): JMP 0x00013c06
00013cb0(2): PUSH R15
00013cb2(2): PUSH R14
00013cb4(2): PUSH R13
00013cb6(2): PUSH R12
00013cb8(1): PUSH RBP
00013cb9(1): PUSH RBX
00013cba(4): SUB RSP,0x8
00013cbe(4): MOV RBP,qword ptr [RDX + 0x8]
00013cc2(3): TEST RBP,RBP
00013cc5(6): JZ 0x00013ea0
00013ccb(3): TEST RBP,RBP
00013cce(2): JLE 0x00013cec
00013cd0(4): MOV RAX,qword ptr [RDX + 0x10]
00013cd4(4): LEA RCX,[RAX + RBP*0x8]
00013cd8(8): NOP dword ptr [RAX + RAX*0x1]
00013ce0(3): ADD RBP,qword ptr [RAX]
00013ce3(4): ADD RAX,0x8
00013ce7(3): CMP RCX,RAX
00013cea(2): JNZ 0x00013ce0
00013cec(7): MOV RAX,qword ptr [0x88 + RSI]
00013cf3(3): MOV R14,RDX
00013cf6(3): MOV R12,RSI
00013cf9(3): MOV R13,RDI
00013cfc(3): AND RAX,RBP
00013cff(4): LEA RDX,[RAX + RAX*0x2]
00013d03(4): MOV RAX,qword ptr [RSI + 0x40]
00013d07(4): LEA RAX,[RAX + RDX*0x8]
00013d0b(3): MOV R10,qword ptr [RAX]
00013d0e(3): TEST R10,R10
00013d11(2): JLE 0x00013d46
00013d13(4): MOV R11,qword ptr [RAX + 0x10]
00013d17(3): XOR R9D,R9D
00013d1a(6): NOP word ptr [RAX + RAX*0x1]
00013d20(4): MOV RBX,qword ptr [R11 + R9*0x8]
00013d24(3): CMP qword ptr [RBX],RBP
00013d27(2): JNZ 0x00013d3d
00013d29(4): LEA RDI,[RBX + 0x8]
00013d2d(3): MOV RSI,R14
00013d30(5): CALL 0x00012640
00013d35(2): TEST AL,AL
00013d37(6): JNZ 0x00013e3f
00013d3d(4): ADD R9,0x1
00013d41(3): CMP R10,R9
00013d44(2): JNZ 0x00013d20
00013d46(5): MOV ESI,0x1
00013d4b(5): MOV EDI,0x70
00013d50(5): CALL 0x000026b0
00013d55(3): TEST RAX,RAX
00013d58(3): MOV RBX,RAX
00013d5b(6): JZ 0x00013e88
00013d61(4): LEA R15,[RAX + 0x8]
00013d65(3): MOV RSI,R14
00013d68(3): MOV RDI,R15
00013d6b(5): CALL 0x00013800
00013d70(2): TEST EAX,EAX
00013d72(6): JNZ 0x00013e80
00013d78(4): MOV RAX,qword ptr [R14 + 0x8]
00013d7c(4): MOV qword ptr [RBX + 0x50],R15
00013d80(3): TEST RAX,RAX
00013d83(6): JLE 0x00013e2d
00013d89(4): MOV RSI,qword ptr [R14 + 0x10]
00013d8d(4): MOV R8,qword ptr [R12]
00013d91(4): LEA R9,[RSI + RAX*0x8]
00013d95(2): JMP 0x00013de4
00013da0(4): MOVZX ECX,byte ptr [RBX + 0x68]
00013da4(4): MOVZX EDX,byte ptr [RAX + 0xa]
00013da8(3): MOV R10D,ECX
00013dab(3): SHR DL,0x4
00013dae(3): AND ECX,0xffffffdf
00013db1(4): SHR R10B,0x5
00013db5(3): OR EDX,R10D
00013db8(3): AND EDX,0x1
00013dbb(3): SHL EDX,0x5
00013dbe(2): OR EDX,ECX
00013dc0(3): CMP EDI,0x2
00013dc3(3): MOV byte ptr [RBX + 0x68],DL
00013dc6(6): JZ 0x00013e58
00013dcc(3): CMP EDI,0x4
00013dcf(6): JNZ 0x00013e68
00013dd5(3): OR EDX,0x40
00013dd8(3): MOV byte ptr [RBX + 0x68],DL
00013ddb(4): ADD RSI,0x8
00013ddf(3): CMP R9,RSI
00013de2(2): JZ 0x00013e2d
00013de4(3): MOV RAX,qword ptr [RSI]
00013de7(4): SHL RAX,0x4
00013deb(3): ADD RAX,R8
00013dee(4): MOVZX EDI,byte ptr [RAX + 0x8]
00013df2(3): CMP EDI,0x1
00013df5(2): JNZ 0x00013da0
00013df7(7): TEST dword ptr [RAX + 0x8],0x3ff00
00013dfe(2): JZ 0x00013ddb
00013e00(4): MOVZX EDX,byte ptr [RBX + 0x68]
00013e04(4): MOVZX EAX,byte ptr [RAX + 0xa]
00013e08(2): MOV ECX,EDX
00013e0a(3): SHR AL,0x4
00013e0d(3): AND EDX,0xffffffdf
00013e10(3): SHR CL,0x5
00013e13(2): OR EAX,ECX
00013e15(3): AND EAX,0x1
00013e18(3): SHL EAX,0x5
00013e1b(2): OR EAX,EDX
00013e1d(3): MOV byte ptr [RBX + 0x68],AL
00013e20(4): ADD RSI,0x8
00013e24(4): OR byte ptr [RBX + 0x68],0x80
00013e28(3): CMP R9,RSI
00013e2b(2): JNZ 0x00013de4
00013e2d(3): MOV RDX,RBP
00013e30(3): MOV RSI,RBX
00013e33(3): MOV RDI,R12
00013e36(5): CALL 0x00011290
00013e3b(2): TEST EAX,EAX
00013e3d(2): JNZ 0x00013e94
00013e3f(4): ADD RSP,0x8
00013e43(3): MOV RAX,RBX
00013e46(1): POP RBX
00013e47(1): POP RBP
00013e48(2): POP R12
00013e4a(2): POP R13
00013e4c(2): POP R14
00013e4e(2): POP R15
00013e50(1): RET
00013e58(3): OR EDX,0x10
00013e5b(3): MOV byte ptr [RBX + 0x68],DL
00013e5e(5): JMP 0x00013ddb
00013e68(3): CMP EDI,0xc
00013e6b(2): JZ 0x00013e20
00013e6d(7): TEST dword ptr [RAX + 0x8],0x3ff00
00013e74(6): JZ 0x00013ddb
00013e7a(2): JMP 0x00013e20
00013e80(3): MOV RDI,RBX
00013e83(5): CALL 0x00002a10
00013e88(8): MOV dword ptr [R13],0xc
00013e90(2): XOR EBX,EBX
00013e92(2): JMP 0x00013e3f
00013e94(3): MOV RDI,RBX
00013e97(5): CALL 0x00012330
00013e9c(2): JMP 0x00013e88
00013ea0(6): MOV dword ptr [RDI],0x0
00013ea6(2): XOR EBX,EBX
00013ea8(2): JMP 0x00013e3f
00013eb0(2): PUSH R15
00013eb2(2): PUSH R14
00013eb4(2): PUSH R13
00013eb6(2): PUSH R12
00013eb8(1): PUSH RBP
00013eb9(1): PUSH RBX
00013eba(4): SUB RSP,0x48
00013ebe(9): MOV RAX,qword ptr FS:[0x28]
00013ec7(5): MOV qword ptr [RSP + 0x38],RAX
00013ecc(2): XOR EAX,EAX
00013ece(3): TEST RCX,RCX
00013ed1(6): JLE 0x00013f66
00013ed7(5): LEA RAX,[RSP + 0x1c]
00013edc(3): MOV R14,RDI
00013edf(3): MOV RBX,RSI
00013ee2(3): MOV R12,RDX
00013ee5(3): MOV RBP,RCX
00013ee8(3): XOR R15D,R15D
00013eeb(5): LEA R13,[RSP + 0x20]
00013ef0(5): MOV qword ptr [RSP + 0x8],RAX
00013ef5(2): JMP 0x00013f4c
00013f00(3): TEST RDX,RDX
00013f03(2): JZ 0x00013f43
00013f05(4): ADD RDX,0x8
00013f09(4): ADD RSI,0x8
00013f0d(3): MOV RDI,R13
00013f10(5): CALL 0x00013890
00013f15(2): TEST EAX,EAX
00013f17(4): MOV dword ptr [RSP + 0x1c],EAX
00013f1b(2): JNZ 0x00013f68
00013f1d(5): MOV RDI,qword ptr [RSP + 0x8]
00013f22(3): MOV RDX,R13
00013f25(3): MOV RSI,R14
00013f28(5): CALL 0x00013cb0
00013f2d(5): MOV RDI,qword ptr [RSP + 0x30]
00013f32(4): MOV qword ptr [RBX + R15*0x8],RAX
00013f36(5): CALL 0x00002a10
00013f3b(4): MOV EAX,dword ptr [RSP + 0x1c]
00013f3f(2): TEST EAX,EAX
00013f41(2): JNZ 0x00013f68
00013f43(4): ADD R15,0x1
00013f47(3): CMP RBP,R15
00013f4a(2): JZ 0x00013f66
00013f4c(4): MOV RSI,qword ptr [RBX + R15*0x8]
00013f50(4): MOV RDX,qword ptr [R12 + R15*0x8]
00013f54(3): TEST RSI,RSI
00013f57(2): JNZ 0x00013f00
00013f59(4): MOV qword ptr [RBX + R15*0x8],RDX
00013f5d(4): ADD R15,0x1
00013f61(3): CMP RBP,R15
00013f64(2): JNZ 0x00013f4c
00013f66(2): XOR EAX,EAX
00013f68(5): MOV RCX,qword ptr [RSP + 0x38]
00013f6d(9): XOR RCX,qword ptr FS:[0x28]
00013f76(2): JNZ 0x00013f87
00013f78(4): ADD RSP,0x48
00013f7c(1): POP RBX
00013f7d(1): POP RBP
00013f7e(2): POP R12
00013f80(2): POP R13
00013f82(2): POP R14
00013f84(2): POP R15
00013f86(1): RET
00013f87(5): CALL 0x00002560
00013f8c(4): NOP dword ptr [RAX]
00013f90(2): PUSH R15
00013f92(2): PUSH R14
00013f94(2): PUSH R13
00013f96(2): PUSH R12
00013f98(3): MOV R12,RDX
00013f9b(1): PUSH RBP
00013f9c(1): PUSH RBX
00013f9d(3): MOV RBX,RDI
00013fa0(3): MOV RBP,RSI
00013fa3(2): XOR ESI,ESI
00013fa5(4): SUB RSP,0x78
00013fa9(7): MOV RDI,qword ptr [0xc8 + RDI]
00013fb0(9): MOV RAX,qword ptr FS:[0x28]
00013fb9(5): MOV qword ptr [RSP + 0x68],RAX
00013fbe(2): XOR EAX,EAX
00013fc0(5): MOV qword ptr [RSP + 0x20],RCX
00013fc5(5): MOV dword ptr [RSP + 0x2c],R8D
00013fca(3): MOV RDX,RDI
00013fcd(3): CMP RSI,RDX
00013fd0(2): JGE 0x00014027
00013fd2(4): LEA RAX,[RSI + RDX*0x1]
00013fd6(7): MOV R8,qword ptr [0xd8 + RBX]
00013fdd(3): MOV RCX,RAX
00013fe0(4): SHR RCX,0x3f
00013fe4(3): ADD RCX,RAX
00013fe7(3): SAR RCX,1
00013fea(4): LEA RAX,[RCX + RCX*0x4]
00013fee(5): CMP R12,qword ptr [R8 + RAX*0x8 + 0x8]
00013ff3(2): JLE 0x00014022
00013ff5(5): JMP 0x00014078
00014000(4): LEA RDX,[RSI + RCX*0x1]
00014004(3): MOV RAX,RDX
00014007(4): SHR RAX,0x3f
0001400b(3): ADD RAX,RDX
0001400e(3): SAR RAX,1
00014011(4): LEA RDX,[RAX + RAX*0x4]
00014015(3): MOV R9,RAX
00014018(5): CMP R12,qword ptr [R8 + RDX*0x8 + 0x8]
0001401d(2): JG 0x00014080
0001401f(3): MOV RCX,RAX
00014022(3): CMP RSI,RCX
00014025(2): JL 0x00014000
00014027(3): CMP RDI,RSI
0001402a(2): JLE 0x0001404d
0001402c(7): MOV RCX,qword ptr [0xd8 + RBX]
00014033(4): LEA RAX,[RSI + RSI*0x4]
00014037(4): SHL RAX,0x3
0001403b(5): CMP qword ptr [RCX + RAX*0x1 + 0x8],R12
00014040(5): MOV qword ptr [RSP + 0x30],RAX
00014045(2): JNZ 0x0001404d
00014047(4): CMP RSI,-0x1
0001404b(2): JNZ 0x00014090
0001404d(2): XOR EAX,EAX
0001404f(5): MOV RBX,qword ptr [RSP + 0x68]
00014054(9): XOR RBX,qword ptr FS:[0x28]
0001405d(6): JNZ 0x00014329
00014063(4): ADD RSP,0x78
00014067(1): POP RBX
00014068(1): POP RBP
00014069(2): POP R12
0001406b(2): POP R13
0001406d(2): POP R14
0001406f(2): POP R15
00014071(1): RET
00014078(3): MOV R9,RCX
0001407b(3): MOV RCX,RDX
0001407e(2): NOP
00014080(4): LEA RSI,[R9 + 0x1]
00014084(3): MOV RDX,RCX
00014087(5): JMP 0x00013fcd
00014090(4): LEA RAX,[RBP + 0x10]
00014094(7): MOV R13,qword ptr [0x98 + RBX]
0001409b(4): MOV qword ptr [RSP],RAX
0001409f(5): LEA RAX,[RSP + 0x4c]
000140a4(5): MOV qword ptr [RSP + 0x38],RAX
000140a9(5): LEA RAX,[RSP + 0x50]
000140ae(5): MOV qword ptr [RSP + 0x10],RAX
000140b3(5): MOV RAX,qword ptr [RSP + 0x30]
000140b8(4): LEA R15,[RCX + RAX*0x1]
000140bc(5): JMP 0x00014198
000140c8(4): MOV RAX,qword ptr [R13 + 0x18]
000140cc(4): MOV RCX,qword ptr [RAX + R10*0x8]
000140d0(7): MOV R10,qword ptr [0xb8 + RBX]
000140d7(8): LEA RAX,[R14*0x8]
000140df(5): MOV qword ptr [RSP + 0x18],RAX
000140e4(3): ADD R10,RAX
000140e7(5): MOV qword ptr [RSP + 0x8],RCX
000140ec(3): MOV R9,qword ptr [R10]
000140ef(3): TEST R9,R9
000140f2(6): JZ 0x00014280
000140f8(4): MOV RDI,qword ptr [R9 + 0x10]
000140fc(4): LEA RSI,[R9 + 0x18]
00014100(3): MOV RDX,RCX
00014103(5): CALL 0x000126a0
00014108(3): TEST RAX,RAX
0001410b(2): JNZ 0x00014189
0001410d(5): MOV RDI,qword ptr [RSP + 0x10]
00014112(4): LEA RSI,[R9 + 0x8]
00014116(5): CALL 0x00013800
0001411b(5): MOV RSI,qword ptr [RSP + 0x8]
00014120(5): MOV RDI,qword ptr [RSP + 0x10]
00014125(4): MOV dword ptr [RSP + 0x4c],EAX
00014129(5): CALL 0x00011160
0001412e(4): MOV EDX,dword ptr [RSP + 0x4c]
00014132(2): TEST EDX,EDX
00014134(6): JNZ 0x000142d6
0001413a(2): CMP AL,0x1
0001413c(6): JNZ 0x000142d6
00014142(5): MOV R10,qword ptr [RSP + 0x18]
00014147(7): ADD R10,qword ptr [0xb8 + RBX]
0001414e(5): MOV RDX,qword ptr [RSP + 0x10]
00014153(5): MOV RDI,qword ptr [RSP + 0x38]
00014158(3): MOV RSI,R13
0001415b(5): MOV qword ptr [RSP + 0x8],R10
00014160(5): CALL 0x00013cb0
00014165(5): MOV R10,qword ptr [RSP + 0x8]
0001416a(5): MOV RDI,qword ptr [RSP + 0x60]
0001416f(3): MOV qword ptr [R10],RAX
00014172(5): CALL 0x00002a10
00014177(7): MOV RAX,qword ptr [0xb8 + RBX]
0001417e(5): CMP qword ptr [RAX + R14*0x8],0x0
00014183(6): JZ 0x000142c5
00014189(4): ADD R15,0x28
0001418d(5): CMP byte ptr [R15 + -0x8],0x0
00014192(6): JZ 0x0001404d
00014198(3): MOV R10,qword ptr [R15]
0001419b(4): MOV R9,qword ptr [RBP + 0x8]
0001419f(4): MOV RSI,qword ptr [RSP]
000141a3(3): MOV RDX,R10
000141a6(3): MOV RDI,R9
000141a9(5): CALL 0x000126a0
000141ae(3): TEST RAX,RAX
000141b1(2): JZ 0x00014189
000141b3(4): MOV R8,qword ptr [R15 + 0x18]
000141b7(3): ADD R8,R12
000141ba(3): MOV R14,R8
000141bd(4): SUB R14,qword ptr [R15 + 0x10]
000141c1(3): CMP R12,R14
000141c4(6): JNZ 0x000140c8
000141ca(4): MOV RCX,qword ptr [R13 + 0x28]
000141ce(4): LEA RAX,[R10 + R10*0x2]
000141d2(4): MOV RSI,qword ptr [RSP]
000141d6(3): MOV RDI,R9
000141d9(4): LEA RAX,[RCX + RAX*0x8]
000141dd(4): MOV RAX,qword ptr [RAX + 0x10]
000141e1(3): MOV R14,qword ptr [RAX]
000141e4(3): MOV RDX,R14
000141e7(5): CALL 0x000126a0
000141ec(3): TEST RAX,RAX
000141ef(2): JNZ 0x00014189
000141f1(5): MOV EDI,0x8
000141f6(9): MOV qword ptr [RSP + 0x50],0x1
000141ff(9): MOV qword ptr [RSP + 0x58],0x1
00014208(5): CALL 0x00002780
0001420d(3): TEST RAX,RAX
00014210(5): MOV qword ptr [RSP + 0x60],RAX
00014215(6): JZ 0x0001430d
0001421b(3): MOV qword ptr [RAX],R14
0001421e(2): XOR EAX,EAX
00014220(5): MOV R15,qword ptr [RSP + 0x10]
00014225(5): MOV RDX,qword ptr [RSP + 0x20]
0001422a(3): MOV RDI,R13
0001422d(4): MOV ECX,dword ptr [RSP + 0x2c]
00014231(4): MOV dword ptr [RSP + 0x4c],EAX
00014235(3): MOV RSI,R15
00014238(5): CALL 0x00013050
0001423d(3): MOV RSI,R15
00014240(3): MOV RDI,RBP
00014243(3): MOV R14D,EAX
00014246(5): CALL 0x00012bc0
0001424b(5): MOV RDI,qword ptr [RSP + 0x60]
00014250(3): MOV R15D,EAX
00014253(5): CALL 0x00002a10
00014258(4): MOV EAX,dword ptr [RSP + 0x4c]
0001425c(3): MOV EDX,R14D
0001425f(3): OR EDX,R15D
00014262(2): OR EDX,EAX
00014264(6): JNZ 0x000142f6
0001426a(7): MOV RCX,qword ptr [0xd8 + RBX]
00014271(5): JMP 0x000140b3
00014280(5): MOV EDI,0x8
00014285(5): MOV qword ptr [RSP + 0x18],R10
0001428a(9): MOV qword ptr [RSP + 0x50],0x1
00014293(9): MOV qword ptr [RSP + 0x58],0x1
0001429c(5): CALL 0x00002780
000142a1(3): TEST RAX,RAX
000142a4(5): MOV qword ptr [RSP + 0x60],RAX
000142a9(2): JZ 0x000142ec
000142ab(5): MOV RDI,qword ptr [RSP + 0x8]
000142b0(8): MOV dword ptr [RSP + 0x4c],0x0
000142b8(5): MOV R10,qword ptr [RSP + 0x18]
000142bd(3): MOV qword ptr [RAX],RDI
000142c0(5): JMP 0x0001414e
000142c5(4): MOV EAX,dword ptr [RSP + 0x4c]
000142c9(2): TEST EAX,EAX
000142cb(6): JZ 0x00014189
000142d1(5): JMP 0x0001404f
000142d6(5): MOV RDI,qword ptr [RSP + 0x60]
000142db(5): CALL 0x00002a10
000142e0(4): MOV EAX,dword ptr [RSP + 0x4c]
000142e4(2): TEST EAX,EAX
000142e6(6): JNZ 0x0001404f
000142ec(5): MOV EAX,0xc
000142f1(5): JMP 0x0001404f
000142f6(2): TEST EAX,EAX
000142f8(6): JNZ 0x0001404f
000142fe(3): TEST R14D,R14D
00014301(3): MOV EAX,R14D
00014304(4): CMOVZ EAX,R15D
00014308(5): JMP 0x0001404f
0001430d(9): MOV qword ptr [RSP + 0x58],0x0
00014316(9): MOV qword ptr [RSP + 0x50],0x0
0001431f(5): MOV EAX,0xc
00014324(5): JMP 0x00014220
00014329(5): CALL 0x00002560
0001432e(2): NOP
00014330(2): PUSH R15
00014332(2): PUSH R14
00014334(2): PUSH R13
00014336(2): PUSH R12
00014338(1): PUSH RBP
00014339(1): PUSH RBX
0001433a(4): SUB RSP,0x28
0001433e(4): CMP qword ptr [RSI],0x0
00014342(7): MOV R13,qword ptr [0x98 + RDI]
00014349(6): JLE 0x00014410
0001434f(3): MOV R14,RDX
00014352(3): MOV R12,RSI
00014355(3): MOV R15,RDI
00014358(2): XOR EBX,EBX
0001435a(2): JMP 0x0001436e
00014360(4): ADD RBX,0x1
00014364(4): CMP RBX,qword ptr [R12]
00014368(6): JGE 0x00014410
0001436e(3): MOV RAX,qword ptr [R14]
00014371(4): MOV RBP,qword ptr [RAX + RBX*0x8]
00014375(3): MOV RAX,RBP
00014378(4): SHL RAX,0x4
0001437c(4): ADD RAX,qword ptr [R13]
00014380(4): CMP byte ptr [RAX + 0x8],0x8
00014384(2): JNZ 0x00014360
00014386(3): MOV RAX,qword ptr [RAX]
00014389(4): CMP RAX,0x3f
0001438d(2): JG 0x00014360
0001438f(7): MOV RSI,qword ptr [0xa0 + R13]
00014396(4): BT RSI,RAX
0001439a(2): JNC 0x00014360
0001439c(7): MOV R8,qword ptr [0xe8 + R15]
000143a3(7): CMP R8,qword ptr [0xf0 + R15]
000143aa(7): MOV R9,qword ptr [0xf8 + R15]
000143b1(2): JZ 0x00014428
000143b3(5): MOV ESI,0x30
000143b8(5): MOV EDI,0x1
000143bd(5): MOV qword ptr [RSP + 0x10],R9
000143c2(5): MOV qword ptr [RSP + 0x8],R8
000143c7(5): MOV qword ptr [RSP + 0x18],RCX
000143cc(5): CALL 0x000026b0
000143d1(5): MOV R8,qword ptr [RSP + 0x8]
000143d6(5): MOV R9,qword ptr [RSP + 0x10]
000143db(3): TEST RAX,RAX
000143de(4): MOV qword ptr [R9 + R8*0x8],RAX
000143e2(2): JZ 0x00014421
000143e4(4): ADD R8,0x1
000143e8(4): ADD RBX,0x1
000143ec(5): MOV RCX,qword ptr [RSP + 0x18]
000143f1(7): MOV qword ptr [0xe8 + R15],R8
000143f8(4): CMP RBX,qword ptr [R12]
000143fc(4): MOV qword ptr [RAX + 0x8],RBP
00014400(3): MOV qword ptr [RAX],RCX
00014403(6): JL 0x0001436e
00014409(7): NOP dword ptr [RAX]
00014410(2): XOR EAX,EAX
00014412(4): ADD RSP,0x28
00014416(1): POP RBX
00014417(1): POP RBP
00014418(2): POP R12
0001441a(2): POP R13
0001441c(2): POP R14
0001441e(2): POP R15
00014420(1): RET
00014421(5): MOV EAX,0xc
00014426(2): JMP 0x00014412
00014428(4): LEA RAX,[R8 + R8*0x1]
0001442c(3): MOV RSI,R8
0001442f(3): MOV RDI,R9
00014432(4): SHL RSI,0x4
00014436(5): MOV qword ptr [RSP + 0x8],RCX
0001443b(5): MOV qword ptr [RSP + 0x10],RAX
00014440(5): CALL 0x00002830
00014445(3): TEST RAX,RAX
00014448(3): MOV R9,RAX
0001444b(5): MOV RCX,qword ptr [RSP + 0x8]
00014450(2): JZ 0x00014421
00014452(7): MOV qword ptr [0xf8 + R15],RAX
00014459(5): MOV RAX,qword ptr [RSP + 0x10]
0001445e(7): MOV R8,qword ptr [0xe8 + R15]
00014465(7): MOV qword ptr [0xf0 + R15],RAX
0001446c(5): JMP 0x000143b3
00014480(1): PUSH RBP
00014481(1): PUSH RBX
00014482(3): MOV RBP,RDI
00014485(4): SUB RSP,0x8
00014489(3): TEST RSI,RSI
0001448c(2): JS 0x000144e0
0001448e(4): CMP qword ptr [RDI + 0x58],RSI
00014492(6): JZ 0x00014538
00014498(7): CMP dword ptr [0x90 + RDI],0x1
0001449f(2): JLE 0x000144f0
000144a1(4): MOV RAX,qword ptr [RDI + 0x10]
000144a5(2): JMP 0x000144ba
000144b0(4): SUB RSI,0x1
000144b4(4): CMP RSI,-0x1
000144b8(2): JZ 0x000144e0
000144ba(3): MOV EBX,dword ptr [RAX + RSI*0x4]
000144bd(3): CMP EBX,-0x1
000144c0(2): JZ 0x000144b0
000144c2(7): CMP byte ptr [0x8e + RBP],0x0
000144c9(2): JNZ 0x00014548
000144cb(2): XOR EAX,EAX
000144cd(3): CMP EBX,0xa
000144d0(2): JZ 0x0001451c
000144d2(4): ADD RSP,0x8
000144d6(1): POP RBX
000144d7(1): POP RBP
000144d8(1): RET
000144e0(3): MOV EAX,dword ptr [RBP + 0x70]
000144e3(4): ADD RSP,0x8
000144e7(1): POP RBX
000144e8(1): POP RBP
000144e9(1): RET
000144f0(4): MOV RAX,qword ptr [RDI + 0x8]
000144f4(7): MOV RCX,qword ptr [0x80 + RDI]
000144fb(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
000144ff(3): MOV RDX,RAX
00014502(4): SAR RAX,0x6
00014506(4): MOV RCX,qword ptr [RCX + RAX*0x8]
0001450a(5): MOV EAX,0x1
0001450f(4): BT RCX,RDX
00014513(2): JC 0x000144d2
00014515(2): XOR EAX,EAX
00014517(3): CMP DL,0xa
0001451a(2): JNZ 0x000144d2
0001451c(2): XOR EAX,EAX
0001451e(7): CMP byte ptr [0x8d + RBP],0x0
00014525(3): SETNZ AL
00014528(4): ADD RSP,0x8
0001452c(2): ADD EAX,EAX
0001452e(1): POP RBX
0001452f(1): POP RBP
00014530(1): RET
00014538(3): AND EDX,0x2
0001453b(3): CMP EDX,0x1
0001453e(2): SBB EAX,EAX
00014540(3): AND EAX,0x2
00014543(3): ADD EAX,0x8
00014546(2): JMP 0x000144d2
00014548(2): MOV EDI,EBX
0001454a(5): CALL 0x00002770
0001454f(2): TEST EAX,EAX
00014551(2): JNZ 0x0001455c
00014553(3): CMP EBX,0x5f
00014556(6): JNZ 0x000144cb
0001455c(5): MOV EAX,0x1
00014561(5): JMP 0x000144d2
00014570(4): MOV RAX,qword ptr [RDI + 0x8]
00014574(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
00014578(4): MOVZX EAX,byte ptr [RSI + 0x8]
0001457c(2): CMP AL,0x3
0001457e(6): JZ 0x00014638
00014584(6): JBE 0x00014620
0001458a(2): CMP AL,0x5
0001458c(2): JZ 0x000145a0
0001458e(2): CMP AL,0x7
00014590(6): JNZ 0x00014630
00014596(2): XOR EAX,EAX
00014598(2): TEST CL,CL
0001459a(6): JS 0x0001462a
000145a0(3): CMP CL,0xa
000145a3(6): JZ 0x00014668
000145a9(2): TEST CL,CL
000145ab(2): JNZ 0x000145c0
000145ad(7): MOV RCX,qword ptr [0x98 + RDI]
000145b4(2): XOR EAX,EAX
000145b6(7): TEST byte ptr [0xd8 + RCX],0x80
000145bd(2): JNZ 0x0001462a
000145bf(1): NOP
000145c0(1): PUSH RBX
000145c1(3): MOV EBX,dword ptr [RSI + 0x8]
000145c4(5): MOV EAX,0x1
000145c9(6): TEST EBX,0x3ff00
000145cf(2): JZ 0x0001461c
000145d1(3): MOV RSI,RDX
000145d4(6): MOV EDX,dword ptr [0xa0 + RDI]
000145da(3): SHR EBX,0x8
000145dd(5): CALL 0x00014480
000145e2(2): MOV ECX,EBX
000145e4(2): MOV EDX,EAX
000145e6(5): AND CX,0x3ff
000145eb(3): TEST BL,0x4
000145ee(2): JZ 0x00014658
000145f0(2): XOR EAX,EAX
000145f2(3): TEST DL,0x1
000145f5(2): JZ 0x0001461c
000145f7(3): AND EBX,0x8
000145fa(2): JNZ 0x0001461c
000145fc(3): TEST CL,0x20
000145ff(2): JZ 0x00014608
00014601(2): XOR EAX,EAX
00014603(3): TEST DL,0x2
00014606(2): JZ 0x0001461c
00014608(3): SHR EDX,0x3
0001460b(5): MOV EAX,0x1
00014610(3): AND EDX,0x1
00014613(6): AND ECX,0x80
00014619(3): CMOVNZ EAX,EDX
0001461c(1): POP RBX
0001461d(1): RET
00014620(2): CMP AL,0x1
00014622(2): JNZ 0x00014630
00014624(2): XOR EAX,EAX
00014626(2): CMP byte ptr [RSI],CL
00014628(2): JZ 0x000145c0
0001462a(2): RET
00014630(2): XOR EAX,EAX
00014632(1): RET
00014638(3): MOV R8,qword ptr [RSI]
0001463b(3): MOVZX EAX,CL
0001463e(4): SAR RAX,0x6
00014642(4): MOV R8,qword ptr [R8 + RAX*0x8]
00014646(2): XOR EAX,EAX
00014648(4): BT RAX,RCX
0001464c(6): JC 0x000145c0
00014652(2): RET
00014658(3): AND EBX,0x8
0001465b(2): JZ 0x000145fc
0001465d(2): TEST AL,0x1
0001465f(2): JZ 0x000145fc
00014661(2): XOR EAX,EAX
00014663(1): POP RBX
00014664(1): RET
00014668(7): MOV RCX,qword ptr [0x98 + RDI]
0001466f(2): XOR EAX,EAX
00014671(7): TEST byte ptr [0xd8 + RCX],0x40
00014678(6): JNZ 0x000145c0
0001467e(2): RET
00014680(2): PUSH R12
00014682(3): MOV R12,RDX
00014685(1): PUSH RBP
00014686(1): PUSH RBX
00014687(6): MOV EDX,dword ptr [0xa0 + RDI]
0001468d(3): MOV RBX,RSI
00014690(3): MOV RSI,RCX
00014693(3): MOV RBP,RDI
00014696(5): CALL 0x00014480
0001469b(3): TEST RBX,RBX
0001469e(6): JLE 0x00014748
000146a4(7): MOV RDX,qword ptr [0x98 + RBP]
000146ab(3): MOV R11D,EAX
000146ae(2): MOV EBP,EAX
000146b0(3): AND EAX,0x1
000146b3(4): MOV R9,qword ptr [R12]
000146b7(2): XOR ESI,ESI
000146b9(3): AND EBP,0x8
000146bc(4): AND R11D,0x2
000146c0(3): MOV R10D,EAX
000146c3(3): MOV R8,qword ptr [RDX]
000146c6(2): JMP 0x000146d9
000146d0(4): ADD RSI,0x1
000146d4(3): CMP RSI,RBX
000146d7(2): JZ 0x00014748
000146d9(4): MOV RAX,qword ptr [R9 + RSI*0x8]
000146dd(3): MOV RDX,RAX
000146e0(4): SHL RDX,0x4
000146e4(3): ADD RDX,R8
000146e7(3): MOV ECX,dword ptr [RDX + 0x8]
000146ea(3): SHR ECX,0x8
000146ed(2): MOV EDI,ECX
000146ef(5): AND DI,0x3ff
000146f4(4): CMP byte ptr [RDX + 0x8],0x2
000146f8(2): JNZ 0x000146d0
000146fa(3): TEST DI,DI
000146fd(2): JZ 0x00014725
000146ff(3): TEST CL,0x4
00014702(2): JZ 0x00014730
00014704(3): TEST R10D,R10D
00014707(2): JZ 0x000146d0
00014709(3): AND ECX,0x8
0001470c(2): JNZ 0x000146d0
0001470e(4): TEST DIL,0x20
00014712(2): JZ 0x00014719
00014714(3): TEST R11D,R11D
00014717(2): JZ 0x000146d0
00014719(6): AND EDI,0x80
0001471f(2): JZ 0x00014725
00014721(2): TEST EBP,EBP
00014723(2): JZ 0x000146d0
00014725(1): POP RBX
00014726(1): POP RBP
00014727(2): POP R12
00014729(1): RET
00014730(3): AND ECX,0x8
00014733(2): JZ 0x0001470e
00014735(3): TEST R10D,R10D
00014738(2): JNZ 0x000146d0
0001473a(4): TEST DIL,0x20
0001473e(2): JZ 0x00014719
00014740(2): JMP 0x00014714
00014748(1): POP RBX
00014749(2): XOR EAX,EAX
0001474b(1): POP RBP
0001474c(2): POP R12
0001474e(1): RET
00014750(2): PUSH R15
00014752(2): PUSH R14
00014754(3): MOV R15,RSI
00014757(2): PUSH R13
00014759(2): PUSH R12
0001475b(3): MOV R10D,EDX
0001475e(1): PUSH RBP
0001475f(1): PUSH RBX
00014760(3): MOV RBP,RSI
00014763(3): MOV RBX,RDI
00014766(4): SUB RSP,0x48
0001476a(9): MOV RAX,qword ptr FS:[0x28]
00014773(5): MOV qword ptr [RSP + 0x38],RAX
00014778(2): XOR EAX,EAX
0001477a(4): MOV RAX,qword ptr [RDI + 0x28]
0001477e(3): SUB RBP,RAX
00014781(3): CMP RAX,RSI
00014784(2): JLE 0x000147e6
00014786(7): CMP dword ptr [0x90 + RDI],0x1
0001478d(6): JG 0x000148c0
00014793(4): MOV RAX,qword ptr [RBX + 0x50]
00014797(8): MOV qword ptr [RBX + 0x30],0x0
0001479f(3): MOV RBP,R15
000147a2(8): MOV qword ptr [RBX + 0x28],0x0
000147aa(8): MOV qword ptr [RBX + 0x38],0x0
000147b2(7): MOV byte ptr [0x8c + RBX],0x0
000147b9(4): MOV qword ptr [RBX + 0x58],RAX
000147bd(4): MOV RAX,qword ptr [RBX + 0x60]
000147c1(4): MOV qword ptr [RBX + 0x68],RAX
000147c5(3): MOV EAX,R10D
000147c8(3): AND EAX,0x1
000147cb(3): CMP EAX,0x1
000147ce(2): SBB EAX,EAX
000147d0(3): AND EAX,0x2
000147d3(3): ADD EAX,0x4
000147d6(7): CMP byte ptr [0x8b + RBX],0x0
000147dd(3): MOV dword ptr [RBX + 0x70],EAX
000147e0(6): JZ 0x000148b0
000147e6(3): TEST RBP,RBP
000147e9(2): JZ 0x0001484e
000147eb(4): MOV RAX,qword ptr [RBX + 0x38]
000147ef(7): MOVZX EDX,byte ptr [0x8c + RBX]
000147f6(4): MOV R8,qword ptr [RBX + 0x30]
000147fa(3): CMP RAX,RBP
000147fd(6): JLE 0x00014920
00014803(2): TEST DL,DL
00014805(6): JNZ 0x00014a18
0001480b(4): LEA RSI,[RBP + -0x1]
0001480f(3): MOV EDX,R10D
00014812(3): MOV RDI,RBX
00014815(4): MOV qword ptr [RSP],R8
00014819(5): CALL 0x00014480
0001481e(4): MOV R8,qword ptr [RSP]
00014822(3): MOV dword ptr [RBX + 0x70],EAX
00014825(3): SUB R8,RBP
00014828(7): CMP dword ptr [0x90 + RBX],0x1
0001482f(6): JG 0x000148d0
00014835(7): CMP byte ptr [0x8b + RBX],0x0
0001483c(6): JNZ 0x00014be0
00014842(4): SUB qword ptr [RBX + 0x38],RBP
00014846(4): MOV qword ptr [RBX + 0x30],R8
0001484a(4): ADD qword ptr [RBX + 0x8],RBP
0001484e(4): MOV RAX,qword ptr [RBX + 0x58]
00014852(4): SUB qword ptr [RBX + 0x68],RBP
00014856(4): MOV qword ptr [RBX + 0x28],R15
0001485a(3): SUB RAX,RBP
0001485d(7): CMP dword ptr [0x90 + RBX],0x1
00014864(4): MOV qword ptr [RBX + 0x58],RAX
00014868(6): JLE 0x00014908
0001486e(7): CMP byte ptr [0x88 + RBX],0x0
00014875(3): MOV RDI,RBX
00014878(2): JZ 0x000148f8
0001487a(5): CALL 0x000115c0
0001487f(2): TEST EAX,EAX
00014881(2): JNZ 0x0001488d
00014883(8): MOV qword ptr [RBX + 0x48],0x0
0001488b(2): XOR EAX,EAX
0001488d(5): MOV RCX,qword ptr [RSP + 0x38]
00014892(9): XOR RCX,qword ptr FS:[0x28]
0001489b(6): JNZ 0x00014eea
000148a1(4): ADD RSP,0x48
000148a5(1): POP RBX
000148a6(1): POP RBP
000148a7(2): POP R12
000148a9(2): POP R13
000148ab(2): POP R14
000148ad(2): POP R15
000148af(1): RET
000148b0(3): MOV RAX,qword ptr [RBX]
000148b3(4): MOV qword ptr [RBX + 0x8],RAX
000148b7(5): JMP 0x000147e6
000148c0(8): MOV qword ptr [RDI + 0x20],0x0
000148c8(5): JMP 0x00014793
000148d0(4): MOV RDI,qword ptr [RBX + 0x10]
000148d4(8): LEA RDX,[R8*0x4]
000148dc(4): LEA RSI,[RDI + RBP*0x4]
000148e0(5): CALL 0x00002890
000148e5(4): MOV R8,qword ptr [RBX + 0x30]
000148e9(3): SUB R8,RBP
000148ec(5): JMP 0x00014835
000148f8(5): CALL 0x000113f0
000148fd(5): JMP 0x00014883
00014908(7): CMP byte ptr [0x8b + RBX],0x0
0001490f(6): JNZ 0x00014cc0
00014915(4): MOV qword ptr [RBX + 0x30],RAX
00014919(5): JMP 0x00014883
00014920(2): TEST DL,DL
00014922(6): JNZ 0x00014dcd
00014928(7): MOVSXD RDX,dword ptr [0x90 + RBX]
0001492f(8): MOV qword ptr [RBX + 0x30],0x0
00014937(4): MOV R11,qword ptr [RBX + 0x28]
0001493b(3): CMP EDX,0x1
0001493e(6): JLE 0x00014d28
00014944(7): CMP byte ptr [0x89 + RBX],0x0
0001494b(6): JNZ 0x00014c08
00014951(4): LEA R14,[R11 + RAX*0x1]
00014955(3): CMP R15,R14
00014958(6): JLE 0x00014d9f
0001495e(4): LEA RAX,[RBX + 0x20]
00014962(5): LEA R13,[RSP + 0x24]
00014967(5): MOV qword ptr [RSP + 0x10],RAX
0001496c(4): NOP dword ptr [RAX]
00014970(4): MOV R12,qword ptr [RBX + 0x50]
00014974(3): MOV RSI,qword ptr [RBX]
00014977(3): MOV RDI,R13
0001497a(4): MOV RAX,qword ptr [RBX + 0x20]
0001497e(5): MOV RCX,qword ptr [RSP + 0x10]
00014983(5): MOV dword ptr [RSP + 0xc],R10D
00014988(4): MOV qword ptr [RSP],R8
0001498c(3): SUB R12,R14
0001498f(3): ADD RSI,R14
00014992(3): MOV RDX,R12
00014995(5): MOV qword ptr [RSP + 0x18],RAX
0001499a(5): CALL 0x000101e0
0001499f(4): LEA RCX,[RAX + -0x1]
000149a3(4): MOV EDX,dword ptr [RSP + 0x24]
000149a7(4): MOV R8,qword ptr [RSP]
000149ab(5): MOV R10D,dword ptr [RSP + 0xc]
000149b0(4): CMP RCX,-0x4
000149b4(6): JA 0x00014df5
000149ba(3): ADD R14,RAX
000149bd(3): CMP R15,R14
000149c0(2): JG 0x00014970
000149c2(3): SUB R14,R15
000149c5(3): CMP EDX,-0x1
000149c8(3): MOV R12,R14
000149cb(4): MOV qword ptr [RBX + 0x30],R14
000149cf(6): JZ 0x00014da9
000149d5(7): CMP byte ptr [0x8e + RBX],0x0
000149dc(6): JNZ 0x00014e49
000149e2(2): XOR EAX,EAX
000149e4(3): CMP EDX,0xa
000149e7(2): JNZ 0x000149f7
000149e9(2): XOR EAX,EAX
000149eb(7): CMP byte ptr [0x8d + RBX],0x0
000149f2(3): SETNZ AL
000149f5(2): ADD EAX,EAX
000149f7(3): MOV dword ptr [RBX + 0x70],EAX
000149fa(4): CMP R12,0x0
000149fe(6): JNZ 0x00014e1a
00014a04(7): MOVZX EAX,byte ptr [0x8b + RBX]
00014a0b(4): MOV qword ptr [RBX + 0x38],R12
00014a0f(5): JMP 0x00014bcc
00014a18(4): MOV R14,qword ptr [RBX + 0x18]
00014a1c(3): MOV RCX,R8
00014a1f(2): XOR ESI,ESI
00014a21(2): JMP 0x00014a33
00014a28(2): JGE 0x00014a63
00014a2a(4): LEA RSI,[RAX + 0x1]
00014a2e(3): CMP RSI,RCX
00014a31(2): JGE 0x00014a58
00014a33(4): LEA RDX,[RSI + RCX*0x1]
00014a37(3): MOV RAX,RDX
00014a3a(4): SHR RAX,0x3f
00014a3e(3): ADD RAX,RDX
00014a41(3): SAR RAX,1
00014a44(4): MOV RDX,qword ptr [R14 + RAX*0x8]
00014a48(3): MOV R12,RAX
00014a4b(3): CMP RDX,RBP
00014a4e(2): JLE 0x00014a28
00014a50(3): MOV RCX,RAX
00014a53(2): JMP 0x00014a2e
00014a58(4): LEA R12,[RAX + 0x1]
00014a5c(3): CMP RDX,RBP
00014a5f(4): CMOVGE R12,RAX
00014a63(5): LEA R13,[R12 + -0x1]
00014a68(3): MOV EDX,R10D
00014a6b(3): MOV RDI,RBX
00014a6e(4): MOV qword ptr [RSP],R8
00014a72(3): MOV RSI,R13
00014a75(5): CALL 0x00014480
00014a7a(3): CMP RBP,R12
00014a7d(3): MOV dword ptr [RBX + 0x70],EAX
00014a80(4): MOV R8,qword ptr [RSP]
00014a84(6): JNZ 0x00014b08
00014a8a(3): CMP RBP,R8
00014a8d(2): JGE 0x00014b08
00014a8f(4): CMP qword ptr [R14 + R12*0x8],RBP
00014a93(2): JNZ 0x00014b08
00014a95(4): MOV RDI,qword ptr [RBX + 0x10]
00014a99(3): SUB R8,RBP
00014a9c(8): LEA RDX,[R8*0x4]
00014aa4(4): LEA RSI,[RDI + RBP*0x4]
00014aa8(5): CALL 0x00002890
00014aad(4): MOV RDI,qword ptr [RBX + 0x8]
00014ab1(4): MOV RDX,qword ptr [RBX + 0x30]
00014ab5(4): LEA RSI,[RDI + RBP*0x1]
00014ab9(3): SUB RDX,RBP
00014abc(5): CALL 0x00002890
00014ac1(4): MOV RAX,qword ptr [RBX + 0x30]
00014ac5(4): SUB qword ptr [RBX + 0x38],RBP
00014ac9(3): SUB RAX,RBP
00014acc(3): TEST RAX,RAX
00014acf(4): MOV qword ptr [RBX + 0x30],RAX
00014ad3(2): JLE 0x00014af8
00014ad5(4): MOV RCX,qword ptr [RBX + 0x18]
00014ad9(2): XOR EAX,EAX
00014adb(4): LEA RSI,[RCX + RBP*0x8]
00014adf(1): NOP
00014ae0(4): MOV RDX,qword ptr [RSI + RAX*0x8]
00014ae4(3): SUB RDX,RBP
00014ae7(4): MOV qword ptr [RCX + RAX*0x8],RDX
00014aeb(4): ADD RAX,0x1
00014aef(4): CMP qword ptr [RBX + 0x30],RAX
00014af3(2): JG 0x00014ae0
00014af5(3): NOP dword ptr [RAX]
00014af8(7): MOVZX EAX,byte ptr [0x8b + RBX]
00014aff(5): JMP 0x00014bcc
00014b08(4): MOV RAX,qword ptr [RBX + 0x50]
00014b0c(7): MOV byte ptr [0x8c + RBX],0x0
00014b13(3): ADD RAX,RBP
00014b16(3): SUB RAX,R15
00014b19(4): MOV qword ptr [RBX + 0x58],RAX
00014b1d(4): MOV RAX,qword ptr [RBX + 0x60]
00014b21(3): ADD RAX,RBP
00014b24(3): SUB RAX,R15
00014b27(3): TEST R12,R12
00014b2a(4): MOV qword ptr [RBX + 0x68],RAX
00014b2e(2): JLE 0x00014b53
00014b30(5): CMP qword ptr [R14 + R12*0x8 + -0x8],RBP
00014b35(2): JZ 0x00014b4b
00014b37(2): JMP 0x00014b53
00014b40(5): CMP qword ptr [R14 + R13*0x8 + -0x8],RBP
00014b45(2): JNZ 0x00014b53
00014b47(4): SUB R13,0x1
00014b4b(3): TEST R13,R13
00014b4e(3): MOV R12,R13
00014b51(2): JNZ 0x00014b40
00014b53(3): CMP R12,R8
00014b56(6): JGE 0x00014d88
00014b5c(4): MOV RAX,qword ptr [RBX + 0x10]
00014b60(2): JMP 0x00014b75
00014b68(4): ADD R12,0x1
00014b6c(3): CMP R12,R8
00014b6f(6): JZ 0x00014d90
00014b75(5): CMP dword ptr [RAX + R12*0x4],-0x1
00014b7a(2): JZ 0x00014b68
00014b7c(4): MOV RDX,qword ptr [R14 + R12*0x8]
00014b80(3): SUB RDX,RBP
00014b83(4): CMP RDX,0x0
00014b87(4): MOV qword ptr [RBX + 0x30],RDX
00014b8b(2): JZ 0x00014bc1
00014b8d(2): JLE 0x00014baf
00014b8f(4): MOV RAX,qword ptr [RBX + 0x10]
00014b93(4): LEA RCX,[RAX + RDX*0x4]
00014b97(9): NOP word ptr [RAX + RAX*0x1]
00014ba0(6): MOV dword ptr [RAX],0xffffffff
00014ba6(4): ADD RAX,0x4
00014baa(3): CMP RCX,RAX
00014bad(2): JNZ 0x00014ba0
00014baf(4): MOV RDI,qword ptr [RBX + 0x8]
00014bb3(5): MOV ESI,0xff
00014bb8(5): CALL 0x00002620
00014bbd(4): MOV RDX,qword ptr [RBX + 0x30]
00014bc1(7): MOVZX EAX,byte ptr [0x8b + RBX]
00014bc8(4): MOV qword ptr [RBX + 0x38],RDX
00014bcc(2): TEST AL,AL
00014bce(6): JZ 0x0001484a
00014bd4(5): JMP 0x0001484e
00014be0(4): MOV RDI,qword ptr [RBX + 0x8]
00014be4(3): MOV RDX,R8
00014be7(4): LEA RSI,[RDI + RBP*0x1]
00014beb(5): CALL 0x00002890
00014bf0(7): MOVZX EAX,byte ptr [0x8b + RBX]
00014bf7(4): SUB qword ptr [RBX + 0x30],RBP
00014bfb(4): SUB qword ptr [RBX + 0x38],RBP
00014bff(2): JMP 0x00014bcc
00014c08(3): MOV RCX,qword ptr [RBX]
00014c0b(3): MOV RDI,RBP
00014c0e(3): SUB RDI,RDX
00014c11(3): MOV RDX,RDI
00014c14(4): LEA R12,[RCX + R11*0x1]
00014c18(3): ADD RDX,R12
00014c1b(5): LEA RSI,[R12 + RBP*0x1 + -0x1]
00014c20(3): CMP RCX,RDX
00014c23(4): CMOVC RCX,RDX
00014c27(3): CMP RCX,RSI
00014c2a(2): JBE 0x00014c45
00014c2c(5): JMP 0x00014951
00014c38(4): SUB RSI,0x1
00014c3c(3): CMP RCX,RSI
00014c3f(6): JA 0x00014951
00014c45(3): MOVZX EDX,byte ptr [RSI]
00014c48(3): AND EDX,0xffffffc0
00014c4b(3): CMP DL,0x80
00014c4e(2): JZ 0x00014c38
00014c50(4): MOV RDX,qword ptr [RBX + 0x58]
00014c54(4): MOV RCX,qword ptr [RBX + 0x78]
00014c58(3): MOV R14,RSI
00014c5b(3): ADD RDX,R12
00014c5e(3): SUB RDX,RSI
00014c61(3): TEST RCX,RCX
00014c64(6): JNZ 0x00014eb2
00014c6a(5): LEA R13,[RSP + 0x24]
00014c6f(3): ADD R12,RBP
00014c72(5): LEA RCX,[RSP + 0x28]
00014c77(3): SUB R12,R14
00014c7a(5): MOV dword ptr [RSP + 0xc],R10D
00014c7f(4): MOV qword ptr [RSP],R8
00014c83(3): MOV RDI,R13
00014c86(9): MOV qword ptr [RSP + 0x28],0x0
00014c8f(5): CALL 0x000101e0
00014c94(3): CMP R12,RAX
00014c97(4): MOV R8,qword ptr [RSP]
00014c9b(5): MOV R10D,dword ptr [RSP + 0xc]
00014ca0(2): JA 0x00014cac
00014ca2(4): CMP RAX,-0x3
00014ca6(6): JBE 0x00014e71
00014cac(4): MOV R11,qword ptr [RBX + 0x28]
00014cb0(4): MOV RAX,qword ptr [RBX + 0x38]
00014cb4(5): JMP 0x00014951
00014cc0(7): CMP byte ptr [0x88 + RBX],0x0
00014cc7(6): JNZ 0x00014dc0
00014ccd(4): MOV RCX,qword ptr [RBX + 0x78]
00014cd1(3): TEST RCX,RCX
00014cd4(6): JZ 0x00014883
00014cda(4): CMP qword ptr [RBX + 0x40],RAX
00014cde(4): MOV RDX,qword ptr [RBX + 0x30]
00014ce2(5): CMOVLE RAX,qword ptr [RBX + 0x40]
00014ce7(3): CMP RAX,RDX
00014cea(2): JG 0x00014cf8
00014cec(2): JMP 0x00014d18
00014cf0(4): MOV R15,qword ptr [RBX + 0x28]
00014cf4(4): MOV RCX,qword ptr [RBX + 0x78]
00014cf8(3): MOV RSI,qword ptr [RBX]
00014cfb(3): ADD RSI,RDX
00014cfe(5): MOVZX ESI,byte ptr [RSI + R15*0x1]
00014d03(4): MOVZX ESI,byte ptr [RCX + RSI*0x1]
00014d07(4): MOV RCX,qword ptr [RBX + 0x8]
00014d0b(4): MOV byte ptr [RCX + RDX*0x1],SIL
00014d0f(4): ADD RDX,0x1
00014d13(3): CMP RAX,RDX
00014d16(2): JNZ 0x00014cf0
00014d18(4): MOV qword ptr [RBX + 0x30],RDX
00014d1c(4): MOV qword ptr [RBX + 0x38],RDX
00014d20(5): JMP 0x00014883
00014d28(3): MOV RAX,qword ptr [RBX]
00014d2b(4): MOV RDX,qword ptr [RBX + 0x78]
00014d2f(3): ADD RAX,RBP
00014d32(3): TEST RDX,RDX
00014d35(6): MOVZX EAX,byte ptr [R11 + RAX*0x1 + -0x1]
00014d3b(8): MOV qword ptr [RBX + 0x38],0x0
00014d43(2): JZ 0x00014d49
00014d45(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
00014d49(7): MOV RCX,qword ptr [0x80 + RBX]
00014d50(3): MOVZX EDX,AL
00014d53(4): SAR RDX,0x6
00014d57(4): MOV RCX,qword ptr [RCX + RDX*0x8]
00014d5b(5): MOV EDX,0x1
00014d60(4): BT RCX,RAX
00014d64(2): JC 0x00014d80
00014d66(2): XOR EDX,EDX
00014d68(2): CMP AL,0xa
00014d6a(2): JNZ 0x00014d80
00014d6c(2): XOR EDX,EDX
00014d6e(7): CMP byte ptr [0x8d + RBX],0x0
00014d75(3): SETNZ DL
00014d78(2): ADD EDX,EDX
00014d7a(6): NOP word ptr [RAX + RAX*0x1]
00014d80(3): MOV dword ptr [RBX + 0x70],EDX
00014d83(5): JMP 0x00014af8
00014d88(6): JNZ 0x00014b7c
00014d8e(2): NOP
00014d90(8): MOV qword ptr [RBX + 0x30],0x0
00014d98(2): XOR EDX,EDX
00014d9a(5): JMP 0x00014bc1
00014d9f(3): SUB R14,R15
00014da2(3): MOV R12,R14
00014da5(4): MOV qword ptr [RBX + 0x30],R14
00014da9(4): LEA RSI,[R8 + -0x1]
00014dad(3): MOV EDX,R10D
00014db0(3): MOV RDI,RBX
00014db3(5): CALL 0x00014480
00014db8(3): MOV dword ptr [RBX + 0x70],EAX
00014dbb(5): JMP 0x000149fa
00014dc0(3): MOV RDI,RBX
00014dc3(5): CALL 0x00011380
00014dc8(5): JMP 0x00014883
00014dcd(4): MOV RDX,qword ptr [RBX + 0x50]
00014dd1(7): MOV byte ptr [0x8c + RBX],0x0
00014dd8(3): ADD RDX,RBP
00014ddb(3): SUB RDX,R15
00014dde(4): MOV qword ptr [RBX + 0x58],RDX
00014de2(4): MOV RDX,qword ptr [RBX + 0x60]
00014de6(3): ADD RDX,RBP
00014de9(3): SUB RDX,R15
00014dec(4): MOV qword ptr [RBX + 0x68],RDX
00014df0(5): JMP 0x00014928
00014df5(3): TEST RAX,RAX
00014df8(2): JZ 0x00014e6d
00014dfa(3): TEST R12,R12
00014dfd(2): JZ 0x00014e6d
00014dff(3): MOV RAX,qword ptr [RBX]
00014e02(5): MOVZX EDX,byte ptr [RAX + R14*0x1]
00014e07(5): MOV RAX,qword ptr [RSP + 0x18]
00014e0c(4): MOV qword ptr [RBX + 0x20],RAX
00014e10(5): MOV EAX,0x1
00014e15(5): JMP 0x000149ba
00014e1a(2): JLE 0x00014e37
00014e1c(4): MOV RAX,qword ptr [RBX + 0x10]
00014e20(4): LEA RDX,[RAX + R12*0x4]
00014e24(4): NOP dword ptr [RAX]
00014e28(6): MOV dword ptr [RAX],0xffffffff
00014e2e(4): ADD RAX,0x4
00014e32(3): CMP RDX,RAX
00014e35(2): JNZ 0x00014e28
00014e37(7): CMP byte ptr [0x8b + RBX],0x0
00014e3e(2): JNZ 0x00014e98
00014e40(4): MOV qword ptr [RBX + 0x38],R12
00014e44(5): JMP 0x0001484a
00014e49(2): MOV EDI,EDX
00014e4b(3): MOV dword ptr [RSP],EDX
00014e4e(5): CALL 0x00002770
00014e53(2): TEST EAX,EAX
00014e55(2): JNZ 0x00014e63
00014e57(3): MOV EDX,dword ptr [RSP]
00014e5a(3): CMP EDX,0x5f
00014e5d(6): JNZ 0x000149e2
00014e63(5): MOV EAX,0x1
00014e68(5): JMP 0x000149f7
00014e6d(2): XOR EDX,EDX
00014e6f(2): JMP 0x00014e07
00014e71(4): MOV EDX,dword ptr [RSP + 0x24]
00014e75(3): SUB RAX,R12
00014e78(8): MOV qword ptr [RBX + 0x20],0x0
00014e80(3): MOV R12,RAX
00014e83(4): MOV qword ptr [RBX + 0x30],RAX
00014e87(3): CMP EDX,-0x1
00014e8a(6): JNZ 0x000149d5
00014e90(5): JMP 0x00014cac
00014e98(4): MOV RDI,qword ptr [RBX + 0x8]
00014e9c(3): MOV RDX,R12
00014e9f(5): MOV ESI,0xff
00014ea4(5): CALL 0x00002620
00014ea9(4): MOV R12,qword ptr [RBX + 0x30]
00014ead(5): JMP 0x00014a04
00014eb2(4): CMP RDX,0x6
00014eb6(5): MOV EDI,0x6
00014ebb(5): LEA R11,[RSP + 0x32]
00014ec0(4): CMOVLE RDI,RDX
00014ec4(3): SUB EDI,0x1
00014ec7(2): TEST EDI,EDI
00014ec9(3): MOVSXD RAX,EDI
00014ecc(2): JS 0x00014ee2
00014ece(4): MOVZX EDI,byte ptr [RSI + RAX*0x1]
00014ed2(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
00014ed6(4): MOV byte ptr [R11 + RAX*0x1],DIL
00014eda(4): SUB RAX,0x1
00014ede(2): TEST EAX,EAX
00014ee0(2): JNS 0x00014ece
00014ee2(3): MOV RSI,R11
00014ee5(5): JMP 0x00014c6a
00014eea(5): CALL 0x00002560
00014eef(1): NOP
00014ef0(2): PUSH R15
00014ef2(2): PUSH R14
00014ef4(3): MOV R14,RDX
00014ef7(2): PUSH R13
00014ef9(2): PUSH R12
00014efb(4): LEA RDX,[RSI + RSI*0x2]
00014eff(1): PUSH RBP
00014f00(1): PUSH RBX
00014f01(4): PXOR XMM0,XMM0
00014f05(4): SUB RSP,0x48
00014f09(9): MOV RAX,qword ptr FS:[0x28]
00014f12(5): MOV qword ptr [RSP + 0x38],RAX
00014f17(2): XOR EAX,EAX
00014f19(4): MOV RAX,qword ptr [RDI + 0x38]
00014f1d(9): MOV qword ptr [RSP + 0x30],0x0
00014f26(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00014f2b(5): MOV qword ptr [RSP + 0x10],RCX
00014f30(4): LEA RBP,[RAX + RDX*0x8]
00014f34(4): MOV R10,qword ptr [RBP + 0x8]
00014f38(3): TEST R10,R10
00014f3b(6): JLE 0x00015122
00014f41(5): LEA RAX,[RSP + 0x20]
00014f46(3): MOV R12,RDI
00014f49(3): MOV R13,RSI
00014f4c(2): XOR EBX,EBX
00014f4e(5): MOV qword ptr [RSP + 0x18],RAX
00014f53(2): JMP 0x00014fad
00014f58(3): TEST RAX,RAX
00014f5b(6): JNZ 0x00015038
00014f61(4): MOV RDI,qword ptr [R14 + 0x8]
00014f65(4): LEA RSI,[R14 + 0x10]
00014f69(3): MOV RDX,R8
00014f6c(5): CALL 0x000126a0
00014f71(3): TEST RAX,RAX
00014f74(6): JZ 0x00015038
00014f7a(5): MOV RDX,qword ptr [R12 + 0x38]
00014f7f(5): MOV RSI,qword ptr [RSP + 0x10]
00014f84(5): MOV RDI,qword ptr [RSP + 0x18]
00014f89(3): ADD RDX,R9
00014f8c(5): CALL 0x000131b0
00014f91(2): TEST EAX,EAX
00014f93(6): JNZ 0x00015110
00014f99(4): MOV R10,qword ptr [RBP + 0x8]
00014f9d(3): NOP dword ptr [RAX]
00014fa0(4): ADD RBX,0x1
00014fa4(3): CMP R10,RBX
00014fa7(6): JLE 0x00015080
00014fad(4): MOV RAX,qword ptr [RBP + 0x10]
00014fb1(4): MOV RAX,qword ptr [RAX + RBX*0x8]
00014fb5(3): CMP R13,RAX
00014fb8(2): JZ 0x00014fa0
00014fba(3): MOV RDX,RAX
00014fbd(4): SHL RDX,0x4
00014fc1(4): ADD RDX,qword ptr [R12]
00014fc5(4): TEST byte ptr [RDX + 0x8],0x8
00014fc9(2): JZ 0x00014fa0
00014fcb(4): LEA R9,[RAX + RAX*0x2]
00014fcf(5): MOV RCX,qword ptr [R12 + 0x28]
00014fd4(4): LEA R11,[RBP + 0x10]
00014fd8(3): MOV RDI,R10
00014fdb(4): SHL R9,0x3
00014fdf(3): MOV RSI,R11
00014fe2(3): ADD RCX,R9
00014fe5(4): MOV R15,qword ptr [RCX + 0x10]
00014fe9(5): MOV qword ptr [RSP + 0x8],RCX
00014fee(3): MOV R8,qword ptr [R15]
00014ff1(3): MOV RDX,R8
00014ff4(4): MOV qword ptr [RSP],R8
00014ff8(5): CALL 0x000126a0
00014ffd(5): MOV RCX,qword ptr [RSP + 0x8]
00015002(4): MOV R8,qword ptr [RSP]
00015006(5): CMP qword ptr [RCX + 0x8],0x1
0001500b(6): JG 0x00014f58
00015011(3): TEST RAX,RAX
00015014(2): JNZ 0x00014fa0
00015016(4): MOV RDI,qword ptr [R14 + 0x8]
0001501a(4): LEA RSI,[R14 + 0x10]
0001501e(3): MOV RDX,R8
00015021(5): CALL 0x000126a0
00015026(3): TEST RAX,RAX
00015029(6): JNZ 0x00014f7a
0001502f(5): JMP 0x00014fa0
00015038(4): MOV R15,qword ptr [R15 + 0x8]
0001503c(3): TEST R15,R15
0001503f(6): JLE 0x00014fa0
00015045(3): MOV RDX,R15
00015048(3): MOV RSI,R11
0001504b(3): MOV RDI,R10
0001504e(5): CALL 0x000126a0
00015053(3): TEST RAX,RAX
00015056(6): JNZ 0x00014fa0
0001505c(4): MOV RDI,qword ptr [R14 + 0x8]
00015060(4): LEA RSI,[R14 + 0x10]
00015064(5): CALL 0x000126a0
00015069(3): TEST RAX,RAX
0001506c(6): JZ 0x00014fa0
00015072(5): JMP 0x00014f7a
00015080(3): XOR R9D,R9D
00015083(3): TEST R10,R10
00015086(5): LEA R11,[RSP + 0x30]
0001508b(2): JLE 0x000150dc
0001508d(3): NOP dword ptr [RAX]
00015090(4): MOV RAX,qword ptr [RBP + 0x10]
00015094(5): MOV RDI,qword ptr [RSP + 0x28]
00015099(3): MOV RSI,R11
0001509c(4): MOV R10,qword ptr [RAX + R9*0x8]
000150a0(3): MOV RDX,R10
000150a3(5): CALL 0x000126a0
000150a8(3): TEST RAX,RAX
000150ab(2): JNZ 0x000150d2
000150ad(4): LEA RBX,[R14 + 0x10]
000150b1(4): MOV RDI,qword ptr [R14 + 0x8]
000150b5(3): MOV RSI,RBX
000150b8(5): CALL 0x000126a0
000150bd(4): SUB RAX,0x1
000150c1(3): MOV RDX,RAX
000150c4(2): JS 0x000150d2
000150c6(4): LEA RDI,[R14 + 0x8]
000150ca(3): MOV RSI,RBX
000150cd(5): CALL 0x00012820
000150d2(4): ADD R9,0x1
000150d6(4): CMP qword ptr [RBP + 0x8],R9
000150da(2): JG 0x00015090
000150dc(5): MOV RDI,qword ptr [RSP + 0x30]
000150e1(5): CALL 0x00002a10
000150e6(2): XOR EAX,EAX
000150e8(5): MOV RSI,qword ptr [RSP + 0x38]
000150ed(9): XOR RSI,qword ptr FS:[0x28]
000150f6(2): JNZ 0x00015126
000150f8(4): ADD RSP,0x48
000150fc(1): POP RBX
000150fd(1): POP RBP
000150fe(2): POP R12
00015100(2): POP R13
00015102(2): POP R14
00015104(2): POP R15
00015106(1): RET
00015110(5): MOV RDI,qword ptr [RSP + 0x30]
00015115(3): MOV dword ptr [RSP],EAX
00015118(5): CALL 0x00002a10
0001511d(3): MOV EAX,dword ptr [RSP]
00015120(2): JMP 0x000150e8
00015122(2): XOR EDI,EDI
00015124(2): JMP 0x000150e1
00015126(5): CALL 0x00002560
0001512b(5): NOP dword ptr [RAX + RAX*0x1]
00015130(2): PUSH R15
00015132(2): PUSH R14
00015134(3): MOV R15,RDI
00015137(2): PUSH R13
00015139(2): PUSH R12
0001513b(5): MOV EDI,0x3800
00015140(1): PUSH RBP
00015141(1): PUSH RBX
00015142(7): SUB RSP,0x108
00015149(9): MOV RAX,qword ptr FS:[0x28]
00015152(8): MOV qword ptr [0xf8 + RSP],RAX
0001515a(2): XOR EAX,EAX
0001515c(5): MOV qword ptr [RSP + 0x8],RSI
00015161(5): CALL 0x00002780
00015166(3): TEST RAX,RAX
00015169(5): MOV qword ptr [RSP + 0x18],RAX
0001516e(6): JZ 0x00015540
00015174(5): MOV RAX,qword ptr [RSP + 0x18]
00015179(4): PXOR XMM0,XMM0
0001517d(7): LEA RBX,[0x1800 + RAX]
00015184(5): MOV RAX,qword ptr [RSP + 0x8]
00015189(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
00015191(5): MOV qword ptr [RSP + 0x40],RBX
00015196(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0001519e(5): CMP qword ptr [RAX + 0x10],0x0
000151a3(8): MOV qword ptr [RAX + 0x58],0x0
000151ab(8): MOV qword ptr [RAX + 0x60],0x0
000151b3(6): JLE 0x00015c2a
000151b9(5): MOV qword ptr [RSP + 0x30],R15
000151be(2): XOR EBP,EBP
000151c0(9): MOV qword ptr [RSP + 0x10],0x0
000151c9(3): MOV R15,RBX
000151cc(5): MOV RBX,qword ptr [RSP + 0x10]
000151d1(8): LEA RAX,[RBX*0x8]
000151d9(5): MOV qword ptr [RSP + 0x20],RAX
000151de(5): MOV RAX,qword ptr [RSP + 0x8]
000151e3(4): MOV RAX,qword ptr [RAX + 0x18]
000151e7(4): MOV R13,qword ptr [RAX + RBX*0x8]
000151eb(5): MOV RAX,qword ptr [RSP + 0x30]
000151f0(4): SHL R13,0x4
000151f4(3): ADD R13,qword ptr [RAX]
000151f7(5): MOVZX R14D,byte ptr [R13 + 0x8]
000151fc(4): MOV EAX,dword ptr [R13 + 0x8]
00015200(3): SHR EAX,0x8
00015203(4): AND AX,0x3ff
00015207(4): CMP R14D,0x1
0001520b(6): JZ 0x00015570
00015211(4): CMP R14D,0x3
00015215(6): JZ 0x000159e0
0001521b(4): CMP R14D,0x5
0001521f(6): JZ 0x000158a0
00015225(4): CMP R14D,0x7
00015229(6): JZ 0x00015a09
0001522f(5): MOV RBX,qword ptr [RSP + 0x8]
00015234(6): ADD qword ptr [RSP + 0x10],0x1
0001523a(5): MOV RAX,qword ptr [RSP + 0x10]
0001523f(4): CMP RAX,qword ptr [RBX + 0x10]
00015243(2): JL 0x000151cc
00015245(3): TEST RBP,RBP
00015248(5): MOV R15,qword ptr [RSP + 0x30]
0001524d(6): JLE 0x00015ca9
00015253(4): LEA RBX,[RBP + 0x1]
00015257(9): MOV qword ptr [RSP + 0x78],0x0
00015260(5): MOV qword ptr [RSP + 0x70],RBX
00015265(4): SHL RBX,0x3
00015269(3): MOV RDI,RBX
0001526c(5): CALL 0x00002780
00015271(3): TEST RAX,RAX
00015274(3): MOV R12,RAX
00015277(8): MOV qword ptr [0x80 + RSP],RAX
0001527f(6): JZ 0x00015a7f
00015285(10): MOV RAX,0xaaaaaaaaaaaa855
0001528f(8): MOV dword ptr [RSP + 0x6c],0x0
00015297(3): CMP RBP,RAX
0001529a(6): JG 0x00015a7f
000152a0(5): LEA RAX,[RBP + RBP*0x2]
000152a5(4): SHL RAX,0x3
000152a9(3): MOV RDI,RAX
000152ac(5): MOV qword ptr [RSP + 0x58],RAX
000152b1(5): CALL 0x00002780
000152b6(3): TEST RAX,RAX
000152b9(5): MOV qword ptr [RSP + 0x10],RAX
000152be(6): JZ 0x00015a7f
000152c4(5): MOV RAX,qword ptr [RSP + 0x10]
000152c9(4): SUB RBX,0x8
000152cd(5): MOV R12,qword ptr [RSP + 0x40]
000152d2(4): PXOR XMM0,XMM0
000152d6(5): LEA R14,[RSP + 0x70]
000152db(5): MOV qword ptr [RSP + 0x20],RBP
000152e0(5): MOV byte ptr [RSP + 0x4f],0x0
000152e5(3): MOV RBP,R15
000152e8(3): ADD RAX,RBX
000152eb(5): MOV qword ptr [RSP + 0x50],R12
000152f0(3): ADD RBX,RAX
000152f3(5): MOV qword ptr [RSP + 0x30],RAX
000152f8(5): MOV RAX,qword ptr [RSP + 0x18]
000152fd(8): MOVAPS xmmword ptr [0xd0 + RSP],XMM0
00015305(5): MOV qword ptr [RSP + 0x38],RBX
0001530a(2): XOR EBX,EBX
0001530c(4): LEA R13,[RAX + 0x8]
00015310(5): LEA RAX,[RSP + 0x6c]
00015315(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0001531d(5): MOV qword ptr [RSP + 0x28],RAX
00015322(9): MOV qword ptr [RSP + 0x78],0x0
0001532b(5): CMP qword ptr [R13],0x0
00015330(2): JLE 0x00015378
00015332(3): XOR R15D,R15D
00015335(3): NOP dword ptr [RAX]
00015338(4): MOV RAX,qword ptr [R13 + 0x8]
0001533c(4): MOV RDX,qword ptr [RAX + R15*0x8]
00015340(4): MOV RAX,qword ptr [RBP + 0x18]
00015344(4): MOV RAX,qword ptr [RAX + RDX*0x8]
00015348(4): CMP RAX,-0x1
0001534c(2): JZ 0x0001536e
0001534e(4): LEA RDX,[RAX + RAX*0x2]
00015352(4): MOV RAX,qword ptr [RBP + 0x30]
00015356(3): MOV RDI,R14
00015359(4): LEA RSI,[RAX + RDX*0x8]
0001535d(5): CALL 0x00012bc0
00015362(2): TEST EAX,EAX
00015364(4): MOV dword ptr [RSP + 0x6c],EAX
00015368(6): JNZ 0x00015a68
0001536e(4): ADD R15,0x1
00015372(4): CMP qword ptr [R13],R15
00015376(2): JG 0x00015338
00015378(5): MOV RDI,qword ptr [RSP + 0x28]
0001537d(2): XOR ECX,ECX
0001537f(3): MOV RSI,RBP
00015382(3): MOV RDX,R14
00015385(5): CALL 0x000139f0
0001538a(5): MOV RSI,qword ptr [RSP + 0x10]
0001538f(3): TEST RAX,RAX
00015392(4): MOV qword ptr [RSI + RBX*0x8],RAX
00015396(6): JZ 0x00015b48
0001539c(4): CMP byte ptr [RAX + 0x68],0x0
000153a0(6): JS 0x00015ac0
000153a6(5): MOV RDI,qword ptr [RSP + 0x30]
000153ab(5): MOV RSI,qword ptr [RSP + 0x38]
000153b0(4): MOV qword ptr [RDI + RBX*0x8],RAX
000153b4(5): MOV RAX,qword ptr [RSP + 0x10]
000153b9(4): MOV RAX,qword ptr [RAX + RBX*0x8]
000153bd(4): MOV qword ptr [RSI + RBX*0x8],RAX
000153c1(8): LEA RDX,[0xd0 + RSP]
000153c9(2): XOR EAX,EAX
000153cb(4): MOV RCX,qword ptr [RDX + RAX*0x1]
000153cf(4): OR RCX,qword ptr [R12 + RAX*0x1]
000153d3(4): MOV qword ptr [RDX + RAX*0x1],RCX
000153d7(4): ADD RAX,0x8
000153db(4): CMP RAX,0x20
000153df(2): JNZ 0x000153cb
000153e1(4): ADD RBX,0x1
000153e5(4): ADD R13,0x18
000153e9(4): ADD R12,0x20
000153ed(5): CMP RBX,qword ptr [RSP + 0x20]
000153f2(6): JNZ 0x00015322
000153f8(5): CMP byte ptr [RSP + 0x4f],0x0
000153fd(3): MOV R15,RBP
00015400(5): MOV RBP,qword ptr [RSP + 0x20]
00015405(5): MOV qword ptr [RSP + 0x20],RDX
0001540a(6): JNZ 0x00015b59
00015410(5): MOV ESI,0x100
00015415(5): MOV EDI,0x8
0001541a(5): CALL 0x000026b0
0001541f(3): MOV R11,RAX
00015422(5): MOV RAX,qword ptr [RSP + 0x8]
00015427(3): TEST R11,R11
0001542a(4): MOV qword ptr [RAX + 0x58],R11
0001542e(6): JZ 0x00015a6d
00015434(5): MOV RBX,qword ptr [RSP + 0x40]
00015439(5): MOV R12,qword ptr [RSP + 0x10]
0001543e(3): XOR R9D,R9D
00015441(5): MOV R13,qword ptr [RSP + 0x30]
00015446(5): MOV RDX,qword ptr [RSP + 0x20]
0001544b(4): ADD RBX,0x20
0001544f(4): MOV RAX,qword ptr [RDX + R9*0x1]
00015453(3): TEST RAX,RAX
00015456(2): JZ 0x00015484
00015458(3): MOV RSI,R9
0001545b(5): MOV ECX,0x1
00015460(4): SHL RSI,0x6
00015464(3): ADD RSI,R11
00015467(9): NOP word ptr [RAX + RAX*0x1]
00015470(2): TEST AL,0x1
00015472(6): JNZ 0x00015bd8
00015478(3): ADD RCX,RCX
0001547b(4): ADD RSI,0x8
0001547f(3): SHR RAX,1
00015482(2): JNZ 0x00015470
00015484(4): ADD R9,0x8
00015488(4): CMP R9,0x20
0001548c(2): JNZ 0x0001544f
0001548e(8): TEST byte ptr [0xd1 + RSP],0x4
00015496(2): JZ 0x000154d2
00015498(2): XOR EAX,EAX
0001549a(5): MOV RDX,qword ptr [RSP + 0x50]
0001549f(2): JMP 0x000154ae
000154a1(4): ADD RAX,0x1
000154a5(4): ADD RDX,0x20
000154a9(3): CMP RAX,RBP
000154ac(2): JZ 0x000154d2
000154ae(7): TEST qword ptr [RDX],0x400
000154b5(2): JZ 0x000154a1
000154b7(5): MOV RBX,qword ptr [RSP + 0x38]
000154bc(5): CMP byte ptr [RSP + 0x4f],0x0
000154c1(4): MOV RAX,qword ptr [RBX + RAX*0x8]
000154c5(4): MOV qword ptr [R11 + 0x50],RAX
000154c9(2): JZ 0x000154d2
000154cb(7): MOV qword ptr [0x850 + R11],RAX
000154d2(5): MOV RDI,qword ptr [RSP + 0x10]
000154d7(5): CALL 0x00002a10
000154dc(8): MOV RDI,qword ptr [0x80 + RSP]
000154e4(5): CALL 0x00002a10
000154e9(5): MOV RAX,qword ptr [RSP + 0x18]
000154ee(5): MOV RBX,qword ptr [RSP + 0x58]
000154f3(4): LEA RBP,[RAX + 0x10]
000154f7(3): ADD RBX,RBP
000154fa(4): MOV RDI,qword ptr [RBP]
000154fe(4): ADD RBP,0x18
00015502(5): CALL 0x00002a10
00015507(3): CMP RBX,RBP
0001550a(2): JNZ 0x000154fa
0001550c(5): MOV RDI,qword ptr [RSP + 0x18]
00015511(5): CALL 0x00002a10
00015516(5): MOV EAX,0x1
0001551b(2): JMP 0x00015542
0001551d(3): TEST RBP,RBP
00015520(8): MOV qword ptr [RBX + 0x8],0x0
00015528(7): MOV qword ptr [RBX],0x0
0001552f(6): JNZ 0x00015860
00015535(5): MOV RDI,qword ptr [RSP + 0x18]
0001553a(5): CALL 0x00002a10
0001553f(1): NOP
00015540(2): XOR EAX,EAX
00015542(8): MOV RBX,qword ptr [0xf8 + RSP]
0001554a(9): XOR RBX,qword ptr FS:[0x28]
00015553(6): JNZ 0x00015ca4
00015559(7): ADD RSP,0x108
00015560(1): POP RBX
00015561(1): POP RBP
00015562(2): POP R12
00015564(2): POP R13
00015566(2): POP R14
00015568(2): POP R15
0001556a(1): RET
00015570(5): MOVZX ECX,byte ptr [R13]
00015575(8): LEA R12,[0x90 + RSP]
0001557d(5): MOV EDI,0x1
00015582(3): MOV RDX,RCX
00015585(3): AND ECX,0x3f
00015588(4): SHR RDX,0x3
0001558c(3): SHL RDI,CL
0001558f(3): AND EDX,0x18
00015592(4): OR qword ptr [R12 + RDX*0x1],RDI
00015596(3): TEST AX,AX
00015599(6): JZ 0x00015660
0001559f(2): TEST AL,0x20
000155a1(6): JNZ 0x00015910
000155a7(2): TEST AL,0x80
000155a9(6): JNZ 0x00015844
000155af(2): TEST AL,0x4
000155b1(2): JZ 0x00015605
000155b3(4): CMP R14D,0x1
000155b7(6): JZ 0x00015995
000155bd(5): MOV R8,qword ptr [RSP + 0x30]
000155c2(8): CMP dword ptr [0xb4 + R8],0x1
000155ca(6): JLE 0x00015a22
000155d0(4): MOV RDI,qword ptr [R8 + 0x78]
000155d4(2): XOR ESI,ESI
000155d6(2): XOR ECX,ECX
000155d8(4): MOV RDX,qword ptr [RDI + RCX*0x8]
000155dc(3): NOT RDX
000155df(8): OR RDX,qword ptr [0xb8 + R8 + RCX*0x8]
000155e7(4): AND RDX,qword ptr [R12 + RCX*0x8]
000155eb(4): MOV qword ptr [R12 + RCX*0x8],RDX
000155ef(4): ADD RCX,0x1
000155f3(3): OR RSI,RDX
000155f6(4): CMP RCX,0x4
000155fa(2): JNZ 0x000155d8
000155fc(3): TEST RSI,RSI
000155ff(6): JZ 0x0001522f
00015605(2): TEST AL,0x8
00015607(2): JZ 0x00015660
00015609(4): CMP R14D,0x1
0001560d(6): JZ 0x00015941
00015613(5): MOV RDI,qword ptr [RSP + 0x30]
00015618(7): CMP dword ptr [0xb4 + RDI],0x1
0001561f(6): JLE 0x0001595e
00015625(4): MOV RSI,qword ptr [RDI + 0x78]
00015629(2): XOR ECX,ECX
0001562b(2): XOR EDX,EDX
0001562d(8): MOV RAX,qword ptr [0xb8 + RDI + RDX*0x8]
00015635(4): AND RAX,qword ptr [RSI + RDX*0x8]
00015639(3): NOT RAX
0001563c(4): AND RAX,qword ptr [R12 + RDX*0x8]
00015640(4): MOV qword ptr [R12 + RDX*0x8],RAX
00015644(4): ADD RDX,0x1
00015648(3): OR RCX,RAX
0001564b(4): CMP RDX,0x4
0001564f(2): JNZ 0x0001562d
00015651(3): TEST RCX,RCX
00015654(6): JZ 0x0001522f
0001565a(6): NOP word ptr [RAX + RAX*0x1]
00015660(2): XOR EBX,EBX
00015662(3): TEST RBP,RBP
00015665(6): JLE 0x000157cb
0001566b(5): MOV qword ptr [RSP + 0x28],R13
00015670(3): MOV R13,R15
00015673(5): NOP dword ptr [RAX + RAX*0x1]
00015678(3): MOV R10,RBX
0001567b(4): SHL R10,0x5
0001567f(4): CMP R14D,0x1
00015683(2): JNZ 0x000156a8
00015685(5): MOV RAX,qword ptr [RSP + 0x28]
0001568a(3): MOVZX EDX,byte ptr [RAX]
0001568d(3): MOV RAX,RDX
00015690(4): SHR RAX,0x3
00015694(3): AND EAX,0x18
00015697(3): ADD RAX,R13
0001569a(4): MOV RAX,qword ptr [RAX + R10*0x1]
0001569e(4): BT RAX,RDX
000156a2(6): JNC 0x000157bb
000156a8(5): LEA RDI,[R13 + R10*0x1]
000156ad(8): LEA RSI,[0xb0 + RSP]
000156b5(2): XOR ECX,ECX
000156b7(2): XOR EAX,EAX
000156b9(4): MOV RDX,qword ptr [R12 + RAX*0x8]
000156bd(4): AND RDX,qword ptr [RDI + RAX*0x8]
000156c1(4): MOV qword ptr [RSI + RAX*0x8],RDX
000156c5(4): ADD RAX,0x1
000156c9(3): OR RCX,RDX
000156cc(4): CMP RAX,0x4
000156d0(2): JNZ 0x000156b9
000156d2(3): TEST RCX,RCX
000156d5(6): JZ 0x000157bb
000156db(8): LEA R11,[0xd0 + RSP]
000156e3(3): XOR R15D,R15D
000156e6(3): XOR R9D,R9D
000156e9(2): XOR ECX,ECX
000156eb(4): MOV RSI,qword ptr [R12 + RCX*0x8]
000156ef(4): MOV RAX,qword ptr [RDI + RCX*0x8]
000156f3(3): MOV RDX,RSI
000156f6(3): NOT RDX
000156f9(3): AND RDX,RAX
000156fc(3): NOT RAX
000156ff(3): AND RAX,RSI
00015702(4): MOV qword ptr [R11 + RCX*0x8],RDX
00015706(3): OR R9,RDX
00015709(4): MOV qword ptr [R12 + RCX*0x8],RAX
0001570d(4): ADD RCX,0x1
00015711(3): OR R15,RAX
00015714(4): CMP RCX,0x4
00015718(2): JNZ 0x000156eb
0001571a(5): MOV RDI,qword ptr [RSP + 0x18]
0001571f(4): LEA RAX,[RBX + RBX*0x2]
00015723(3): TEST R9,R9
00015726(4): LEA RDX,[RDI + RAX*0x8]
0001572a(2): JZ 0x00015794
0001572c(3): MOV RAX,RBP
0001572f(9): MOVDQA XMM0,xmmword ptr [0xd0 + RSP]
00015738(4): SHL RAX,0x5
0001573c(3): MOV RSI,RDX
0001573f(5): MOV qword ptr [RSP + 0x38],RDX
00015744(3): ADD RAX,R13
00015747(3): MOVUPS xmmword ptr [RAX],XMM0
0001574a(9): MOVDQA XMM0,xmmword ptr [0xe0 + RSP]
00015753(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
00015757(5): LEA RAX,[RBP + RBP*0x2]
0001575c(4): LEA RDI,[RDI + RAX*0x8]
00015760(9): MOVDQA XMM0,xmmword ptr [0xb0 + RSP]
00015769(6): MOVUPS xmmword ptr [R13 + R10*0x1],XMM0
0001576f(9): MOVDQA XMM0,xmmword ptr [0xc0 + RSP]
00015778(6): MOVUPS xmmword ptr [R13 + R10*0x1 + 0x10],XMM0
0001577e(5): CALL 0x00013800
00015783(2): TEST EAX,EAX
00015785(6): JNZ 0x00015860
0001578b(5): MOV RDX,qword ptr [RSP + 0x38]
00015790(4): ADD RBP,0x1
00015794(5): MOV RAX,qword ptr [RSP + 0x8]
00015799(5): MOV RSI,qword ptr [RSP + 0x20]
0001579e(3): MOV RDI,RDX
000157a1(4): MOV RAX,qword ptr [RAX + 0x18]
000157a5(4): MOV RSI,qword ptr [RAX + RSI*0x1]
000157a9(5): CALL 0x00011160
000157ae(2): TEST AL,AL
000157b0(6): JZ 0x00015860
000157b6(3): TEST R15,R15
000157b9(2): JZ 0x000157c8
000157bb(4): ADD RBX,0x1
000157bf(3): CMP RBX,RBP
000157c2(6): JL 0x00015678
000157c8(3): MOV R15,R13
000157cb(3): CMP RBP,RBX
000157ce(6): JNZ 0x0001522f
000157d4(3): MOV RAX,RBP
000157d7(9): MOVDQA XMM0,xmmword ptr [0x90 + RSP]
000157e0(4): SHL RAX,0x5
000157e4(5): MOV RBX,qword ptr [RSP + 0x20]
000157e9(5): MOV EDI,0x8
000157ee(3): ADD RAX,R15
000157f1(3): MOVUPS xmmword ptr [RAX],XMM0
000157f4(9): MOVDQA XMM0,xmmword ptr [0xa0 + RSP]
000157fd(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
00015801(5): MOV RAX,qword ptr [RSP + 0x8]
00015806(4): MOV RAX,qword ptr [RAX + 0x18]
0001580a(4): MOV R13,qword ptr [RAX + RBX*0x1]
0001580e(5): MOV RBX,qword ptr [RSP + 0x18]
00015813(5): LEA RAX,[RBP + RBP*0x2]
00015818(4): LEA RBX,[RBX + RAX*0x8]
0001581c(7): MOV qword ptr [RBX],0x1
00015823(8): MOV qword ptr [RBX + 0x8],0x1
0001582b(5): CALL 0x00002780
00015830(3): TEST RAX,RAX
00015833(4): MOV qword ptr [RBX + 0x10],RAX
00015837(6): JZ 0x0001551d
0001583d(3): MOV qword ptr [RAX],R13
00015840(4): ADD RBP,0x1
00015844(4): PXOR XMM0,XMM0
00015848(5): MOVAPS xmmword ptr [R12],XMM0
0001584d(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
00015853(5): JMP 0x0001522f
00015860(5): MOV RAX,qword ptr [RSP + 0x18]
00015865(4): LEA RBX,[RAX + 0x10]
00015869(5): LEA RAX,[RBP + RBP*0x2]
0001586e(4): LEA RBP,[RBX + RAX*0x8]
00015872(6): NOP word ptr [RAX + RAX*0x1]
00015878(3): MOV RDI,qword ptr [RBX]
0001587b(4): ADD RBX,0x18
0001587f(5): CALL 0x00002a10
00015884(3): CMP RBP,RBX
00015887(2): JNZ 0x00015878
00015889(5): MOV RDI,qword ptr [RSP + 0x18]
0001588e(5): CALL 0x00002a10
00015893(5): JMP 0x00015540
000158a0(5): MOV RSI,qword ptr [RSP + 0x30]
000158a5(7): CMP dword ptr [0xb4 + RSI],0x1
000158ac(6): JLE 0x000159b5
000158b2(4): MOV RSI,qword ptr [RSI + 0x78]
000158b6(8): LEA R12,[0x90 + RSP]
000158be(2): XOR EDX,EDX
000158c0(4): MOV RCX,qword ptr [R12 + RDX*0x1]
000158c4(4): OR RCX,qword ptr [RSI + RDX*0x1]
000158c8(4): MOV qword ptr [R12 + RDX*0x1],RCX
000158cc(4): ADD RDX,0x8
000158d0(4): CMP RDX,0x20
000158d4(2): JNZ 0x000158c0
000158d6(5): MOV RBX,qword ptr [RSP + 0x30]
000158db(7): MOV RDX,qword ptr [0xd8 + RBX]
000158e2(3): TEST DL,0x40
000158e5(2): JNZ 0x000158f3
000158e7(12): AND qword ptr [0x90 + RSP],0xfffffbff
000158f3(6): AND EDX,0x80
000158f9(6): JZ 0x00015596
000158ff(9): AND qword ptr [0x90 + RSP],-0x2
00015908(5): JMP 0x00015596
00015910(8): MOV RDX,qword ptr [0x90 + RSP]
00015918(4): PXOR XMM0,XMM0
0001591c(3): AND DH,0x4
0001591f(5): MOVAPS xmmword ptr [R12],XMM0
00015924(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0001592a(6): JZ 0x0001522f
00015930(12): MOV qword ptr [0x90 + RSP],0x400
0001593c(5): JMP 0x000155a7
00015941(5): TEST byte ptr [R13 + 0xa],0x40
00015946(6): JNZ 0x00015844
0001594c(5): MOV RDI,qword ptr [RSP + 0x30]
00015951(7): CMP dword ptr [0xb4 + RDI],0x1
00015958(6): JG 0x00015625
0001595e(5): MOV RSI,qword ptr [RSP + 0x30]
00015963(2): XOR ECX,ECX
00015965(2): XOR EDX,EDX
00015967(8): MOV RAX,qword ptr [0xb8 + RSI + RDX*0x8]
0001596f(3): NOT RAX
00015972(4): AND RAX,qword ptr [R12 + RDX*0x8]
00015976(4): MOV qword ptr [R12 + RDX*0x8],RAX
0001597a(4): ADD RDX,0x1
0001597e(3): OR RCX,RAX
00015981(4): CMP RDX,0x4
00015985(2): JNZ 0x00015967
00015987(3): TEST RCX,RCX
0001598a(6): JNZ 0x00015660
00015990(5): JMP 0x0001522f
00015995(5): TEST byte ptr [R13 + 0xa],0x40
0001599a(6): JZ 0x00015844
000159a0(5): MOV R8,qword ptr [RSP + 0x30]
000159a5(8): CMP dword ptr [0xb4 + R8],0x1
000159ad(6): JG 0x000155d0
000159b3(2): JMP 0x00015a22
000159b5(4): PCMPEQD XMM0,XMM0
000159b9(8): LEA R12,[0x90 + RSP]
000159c1(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
000159c9(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
000159d1(5): JMP 0x000158d6
000159e0(4): MOV RSI,qword ptr [R13]
000159e4(8): LEA R12,[0x90 + RSP]
000159ec(2): XOR EDX,EDX
000159ee(4): MOV RCX,qword ptr [R12 + RDX*0x1]
000159f2(4): OR RCX,qword ptr [RSI + RDX*0x1]
000159f6(4): MOV qword ptr [R12 + RDX*0x1],RCX
000159fa(4): ADD RDX,0x8
000159fe(4): CMP RDX,0x20
00015a02(2): JNZ 0x000159ee
00015a04(5): JMP 0x00015596
00015a09(4): PCMPEQD XMM0,XMM0
00015a0d(8): LEA R12,[0x90 + RSP]
00015a15(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
00015a1d(5): JMP 0x000158d6
00015a22(5): MOV RDI,qword ptr [RSP + 0x30]
00015a27(2): XOR ESI,ESI
00015a29(2): XOR EDX,EDX
00015a2b(4): MOV RCX,qword ptr [R12 + RDX*0x8]
00015a2f(8): AND RCX,qword ptr [0xb8 + RDI + RDX*0x8]
00015a37(4): MOV qword ptr [R12 + RDX*0x8],RCX
00015a3b(4): ADD RDX,0x1
00015a3f(3): OR RSI,RCX
00015a42(4): CMP RDX,0x4
00015a46(2): JNZ 0x00015a2b
00015a48(3): TEST RSI,RSI
00015a4b(6): JNZ 0x00015605
00015a51(5): JMP 0x0001522f
00015a56(4): MOV EDX,dword ptr [RSP + 0x6c]
00015a5a(2): TEST EDX,EDX
00015a5c(6): JZ 0x00015ae7
00015a62(6): NOP word ptr [RAX + RAX*0x1]
00015a68(5): MOV RBP,qword ptr [RSP + 0x20]
00015a6d(5): MOV RDI,qword ptr [RSP + 0x10]
00015a72(5): CALL 0x00002a10
00015a77(8): MOV R12,qword ptr [0x80 + RSP]
00015a7f(3): MOV RDI,R12
00015a82(5): CALL 0x00002a10
00015a87(5): MOV RAX,qword ptr [RSP + 0x18]
00015a8c(4): LEA RBX,[RAX + 0x10]
00015a90(5): LEA RAX,[RBP + RBP*0x2]
00015a95(4): LEA RBP,[RBX + RAX*0x8]
00015a99(7): NOP dword ptr [RAX]
00015aa0(3): MOV RDI,qword ptr [RBX]
00015aa3(4): ADD RBX,0x18
00015aa7(5): CALL 0x00002a10
00015aac(3): CMP RBP,RBX
00015aaf(2): JNZ 0x00015aa0
00015ab1(5): MOV RDI,qword ptr [RSP + 0x18]
00015ab6(5): CALL 0x00002a10
00015abb(5): JMP 0x00015540
00015ac0(5): MOV RDI,qword ptr [RSP + 0x28]
00015ac5(5): MOV ECX,0x1
00015aca(3): MOV RDX,R14
00015acd(3): MOV RSI,RBP
00015ad0(5): CALL 0x000139f0
00015ad5(5): MOV RDI,qword ptr [RSP + 0x30]
00015ada(3): TEST RAX,RAX
00015add(4): MOV qword ptr [RDI + RBX*0x8],RAX
00015ae1(6): JZ 0x00015a56
00015ae7(5): MOV RDI,qword ptr [RSP + 0x10]
00015aec(4): CMP RAX,qword ptr [RDI + RBX*0x8]
00015af0(2): JZ 0x00015b0b
00015af2(5): MOVZX EDI,byte ptr [RSP + 0x4f]
00015af7(7): CMP dword ptr [0xb4 + RBP],0x2
00015afe(5): MOV EAX,0x1
00015b03(3): CMOVGE EDI,EAX
00015b06(5): MOV byte ptr [RSP + 0x4f],DIL
00015b0b(5): MOV RDI,qword ptr [RSP + 0x28]
00015b10(3): MOV RSI,RBP
00015b13(5): MOV ECX,0x2
00015b18(3): MOV RDX,R14
00015b1b(5): CALL 0x000139f0
00015b20(5): MOV RSI,qword ptr [RSP + 0x38]
00015b25(3): TEST RAX,RAX
00015b28(4): MOV qword ptr [RSI + RBX*0x8],RAX
00015b2c(6): JNZ 0x000153c1
00015b32(4): MOV EAX,dword ptr [RSP + 0x6c]
00015b36(2): TEST EAX,EAX
00015b38(6): JZ 0x000153c1
00015b3e(5): JMP 0x00015a68
00015b48(4): MOV ECX,dword ptr [RSP + 0x6c]
00015b4c(2): TEST ECX,ECX
00015b4e(6): JZ 0x0001539c
00015b54(5): JMP 0x00015a68
00015b59(5): MOV ESI,0x200
00015b5e(5): MOV EDI,0x8
00015b63(5): CALL 0x000026b0
00015b68(3): MOV R11,RAX
00015b6b(5): MOV RAX,qword ptr [RSP + 0x8]
00015b70(3): TEST R11,R11
00015b73(4): MOV qword ptr [RAX + 0x60],R11
00015b77(6): JZ 0x00015a6d
00015b7d(5): MOV R13,qword ptr [RSP + 0x40]
00015b82(5): MOV R10,qword ptr [RSP + 0x10]
00015b87(3): MOV R12,R11
00015b8a(5): MOV R14,qword ptr [RSP + 0x30]
00015b8f(5): MOV RDX,qword ptr [RSP + 0x20]
00015b94(2): XOR EBX,EBX
00015b96(4): ADD R13,0x20
00015b9a(4): MOV RAX,qword ptr [RDX + RBX*0x1]
00015b9e(3): TEST RAX,RAX
00015ba1(2): JZ 0x00015bbf
00015ba3(3): MOV RSI,R12
00015ba6(5): MOV ECX,0x1
00015bab(2): TEST AL,0x1
00015bad(6): JNZ 0x00015c5c
00015bb3(3): ADD RCX,RCX
00015bb6(4): ADD RSI,0x8
00015bba(3): SHR RAX,1
00015bbd(2): JNZ 0x00015bab
00015bbf(4): ADD RBX,0x8
00015bc3(7): ADD R12,0x200
00015bca(4): CMP RBX,0x20
00015bce(2): JNZ 0x00015b9a
00015bd0(5): JMP 0x0001548e
00015bd8(5): MOV RDI,qword ptr [RSP + 0x18]
00015bdd(8): TEST qword ptr [0x1800 + RDI + R9*0x1],RCX
00015be5(2): JNZ 0x00015c57
00015be7(4): LEA RDI,[RBX + R9*0x1]
00015beb(3): XOR R8D,R8D
00015bee(2): NOP
00015bf0(3): MOV R10,qword ptr [RDI]
00015bf3(4): ADD R8,0x1
00015bf7(4): ADD RDI,0x20
00015bfb(3): AND R10,RCX
00015bfe(3): TEST R10,R10
00015c01(2): JZ 0x00015bf0
00015c03(4): SHL R8,0x3
00015c07(8): TEST qword ptr [0xb8 + R15 + R9*0x1],RCX
00015c0f(2): JZ 0x00015c1e
00015c11(5): MOV RDI,qword ptr [R13 + R8*0x1]
00015c16(3): MOV qword ptr [RSI],RDI
00015c19(5): JMP 0x00015478
00015c1e(4): MOV RDI,qword ptr [R12 + R8*0x1]
00015c22(3): MOV qword ptr [RSI],RDI
00015c25(5): JMP 0x00015478
00015c2a(5): MOV RDI,qword ptr [RSP + 0x18]
00015c2f(5): CALL 0x00002a10
00015c34(5): MOV ESI,0x100
00015c39(5): MOV EDI,0x8
00015c3e(5): CALL 0x000026b0
00015c43(5): MOV RBX,qword ptr [RSP + 0x8]
00015c48(3): TEST RAX,RAX
00015c4b(4): MOV qword ptr [RBX + 0x58],RAX
00015c4f(3): SETNZ AL
00015c52(5): JMP 0x00015542
00015c57(3): XOR R8D,R8D
00015c5a(2): JMP 0x00015c07
00015c5c(5): MOV RDI,qword ptr [RSP + 0x18]
00015c61(8): TEST qword ptr [0x1800 + RDI + RBX*0x1],RCX
00015c69(2): JNZ 0x00015ca0
00015c6b(5): LEA R9,[R13 + RBX*0x1]
00015c70(3): XOR R8D,R8D
00015c73(3): MOV R15,qword ptr [R9]
00015c76(4): ADD R8,0x1
00015c7a(4): ADD R9,0x20
00015c7e(3): MOV RDI,R8
00015c81(3): AND R15,RCX
00015c84(3): TEST R15,R15
00015c87(2): JZ 0x00015c73
00015c89(4): MOV R8,qword ptr [R10 + RDI*0x8]
00015c8d(3): MOV qword ptr [RSI],R8
00015c90(4): MOV RDI,qword ptr [R14 + RDI*0x8]
00015c94(7): MOV qword ptr [0x800 + RSI],RDI
00015c9b(5): JMP 0x00015bb3
00015ca0(2): XOR EDI,EDI
00015ca2(2): JMP 0x00015c89
00015ca4(5): CALL 0x00002560
00015ca9(5): MOV RDI,qword ptr [RSP + 0x18]
00015cae(5): CALL 0x00002a10
00015cb3(3): TEST RBP,RBP
00015cb6(6): JNZ 0x00015540
00015cbc(5): JMP 0x00015c34
00015cd0(4): CMP byte ptr [RSI + 0x30],0x10
00015cd4(2): JZ 0x00015d38
00015cd6(1): PUSH RBP
00015cd7(1): PUSH RBX
00015cd8(3): MOV RBX,RSI
00015cdb(3): MOV RBP,RDI
00015cde(4): SUB RSP,0x8
00015ce2(4): MOV qword ptr [RBX + 0x18],RSI
00015ce6(4): MOV RDX,qword ptr [RBX + 0x30]
00015cea(4): MOV RSI,qword ptr [RSI + 0x28]
00015cee(5): CALL 0x00011e40
00015cf3(4): CMP RAX,-0x1
00015cf7(3): MOV RDX,RAX
00015cfa(4): MOV qword ptr [RBX + 0x38],RAX
00015cfe(2): JZ 0x00015d50
00015d00(2): XOR EAX,EAX
00015d02(4): CMP byte ptr [RBX + 0x30],0xc
00015d06(2): JNZ 0x00015d2c
00015d08(3): MOV ECX,dword ptr [RBX + 0x28]
00015d0b(4): SHL RDX,0x4
00015d0f(4): ADD RDX,qword ptr [RBP]
00015d13(6): AND ECX,0x3ff
00015d19(3): SHL ECX,0x8
00015d1c(2): MOV ESI,ECX
00015d1e(3): MOV ECX,dword ptr [RDX + 0x8]
00015d21(6): AND ECX,0xfffc00ff
00015d27(2): OR ECX,ESI
00015d29(3): MOV dword ptr [RDX + 0x8],ECX
00015d2c(4): ADD RSP,0x8
00015d30(1): POP RBX
00015d31(1): POP RBP
00015d32(1): RET
00015d38(4): MOV RAX,qword ptr [RSI + 0x8]
00015d3c(4): MOV RDX,qword ptr [RAX + 0x18]
00015d40(4): MOV RAX,qword ptr [RAX + 0x38]
00015d44(4): MOV qword ptr [RSI + 0x18],RDX
00015d48(4): MOV qword ptr [RSI + 0x38],RAX
00015d4c(2): XOR EAX,EAX
00015d4e(1): RET
00015d50(5): MOV EAX,0xc
00015d55(2): JMP 0x00015d2c
00015d60(2): PUSH R12
00015d62(1): PUSH RBP
00015d63(3): MOV RBP,RDI
00015d66(1): PUSH RBX
00015d67(4): CMP qword ptr [RDI],0x0
00015d6b(2): JLE 0x00015da2
00015d6d(2): XOR EBX,EBX
00015d6f(3): XOR R12D,R12D
00015d72(6): NOP word ptr [RAX + RAX*0x1]
00015d78(4): MOV RAX,qword ptr [RBP + 0x10]
00015d7c(4): ADD R12,0x1
00015d80(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x28]
00015d85(5): CALL 0x00002a10
00015d8a(4): MOV RAX,qword ptr [RBP + 0x10]
00015d8e(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
00015d93(4): ADD RBX,0x30
00015d97(5): CALL 0x00002a10
00015d9c(4): CMP R12,qword ptr [RBP]
00015da0(2): JL 0x00015d78
00015da2(1): POP RBX
00015da3(4): MOV RDI,qword ptr [RBP + 0x10]
00015da7(1): POP RBP
00015da8(2): POP R12
00015daa(5): JMP 0x00002a10
00015db0(2): PUSH R12
00015db2(1): PUSH RBP
00015db3(1): PUSH RBX
00015db4(3): MOV RAX,qword ptr [RDI]
00015db7(4): SUB RAX,0x1
00015dbb(3): TEST RAX,RAX
00015dbe(3): MOV qword ptr [RDI],RAX
00015dc1(2): JS 0x00015e25
00015dc3(4): LEA RBX,[RAX + RAX*0x2]
00015dc7(3): MOV RAX,qword ptr [RSI]
00015dca(3): MOV R12,RSI
00015dcd(4): SHL RCX,0x4
00015dd1(3): MOV RBP,R9
00015dd4(3): MOV RDI,R8
00015dd7(4): SHL RBX,0x4
00015ddb(3): ADD RAX,RBX
00015dde(3): MOV RSI,qword ptr [RAX]
00015de1(3): MOV qword ptr [RDX],RSI
00015de4(4): MOV RSI,qword ptr [RAX + 0x10]
00015de8(3): MOV RDX,RCX
00015deb(5): CALL 0x00002710
00015df0(4): MOV RDI,qword ptr [RBP + 0x10]
00015df4(5): CALL 0x00002a10
00015df9(4): MOV RAX,qword ptr [R12]
00015dfd(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
00015e02(5): CALL 0x00002a10
00015e07(4): ADD RBX,qword ptr [R12]
00015e0b(5): MOVDQU XMM0,xmmword ptr [RBX + 0x18]
00015e10(4): MOVAPS xmmword ptr [RBP],XMM0
00015e14(4): MOV RAX,qword ptr [RBX + 0x28]
00015e18(4): MOV qword ptr [RBP + 0x10],RAX
00015e1c(4): MOV RAX,qword ptr [RBX + 0x8]
00015e20(1): POP RBX
00015e21(1): POP RBP
00015e22(2): POP R12
00015e24(1): RET
00015e25(7): LEA RCX,[0x22d60]
00015e2c(7): LEA RSI,[0x227a0]
00015e33(7): LEA RDI,[0x22804]
00015e3a(5): MOV EDX,0x555
00015e3f(5): CALL 0x00002600
00015e44(2): NOP
00015e46(10): NOP word ptr CS:[RAX + RAX*0x1]
00015e50(1): PUSH RBP
00015e51(1): PUSH RBX
00015e52(3): MOV RBP,RDI
00015e55(3): MOV RDI,RSI
00015e58(3): MOV RBX,RSI
00015e5b(4): SUB RSP,0x8
00015e5f(5): CALL 0x00002530
00015e64(4): CMP RAX,0x1
00015e68(2): JNZ 0x00015e90
00015e6a(3): MOVZX ECX,byte ptr [RBX]
00015e6d(3): MOV RDX,RCX
00015e70(3): AND ECX,0x3f
00015e73(4): SHR RDX,0x3
00015e77(3): SHL RAX,CL
00015e7a(3): AND EDX,0x18
00015e7d(5): OR qword ptr [RBP + RDX*0x1],RAX
00015e82(4): ADD RSP,0x8
00015e86(2): XOR EAX,EAX
00015e88(1): POP RBX
00015e89(1): POP RBP
00015e8a(1): RET
00015e90(4): ADD RSP,0x8
00015e94(5): MOV EAX,0x3
00015e99(1): POP RBX
00015e9a(1): POP RBP
00015e9b(1): RET
00015ea0(2): PUSH R14
00015ea2(2): PUSH R13
00015ea4(3): MOV R13,RCX
00015ea7(2): PUSH R12
00015ea9(1): PUSH RBP
00015eaa(3): MOV R12,R9
00015ead(1): PUSH RBX
00015eae(3): MOV RBP,RDI
00015eb1(3): MOV RBX,RSI
00015eb4(4): SUB RSP,0x10
00015eb8(9): TEST qword ptr [RSP + 0x40],0x400000
00015ec1(2): JZ 0x00015ee8
00015ec3(7): LEA RDI,[0x22813]
00015eca(5): MOV ECX,0x6
00015ecf(3): MOV RSI,R9
00015ed2(2): CMPSB.REPE RDI,RSI
00015ed4(3): SETA AL
00015ed7(2): SBB AL,0x0
00015ed9(2): TEST AL,AL
00015edb(6): JNZ 0x00015fd6
00015ee1(7): LEA R12,[0x2280d]
00015ee8(4): MOV RCX,qword ptr [R13]
00015eec(3): CMP qword ptr [R8],RCX
00015eef(3): MOV RAX,qword ptr [RDX]
00015ef2(6): JZ 0x00016009
00015ef8(4): LEA RDX,[RCX + 0x1]
00015efc(3): MOV RDI,R12
00015eff(4): MOV qword ptr [R13],RDX
00015f03(4): LEA R13,[RAX + RCX*0x8]
00015f07(5): CALL 0x00002690
00015f0c(7): LEA RDI,[0x2281f]
00015f13(4): MOV qword ptr [R13],RAX
00015f17(5): MOV ECX,0x6
00015f1c(3): MOV RSI,R12
00015f1f(2): CMPSB.REPE RDI,RSI
00015f21(3): SETA AL
00015f24(2): SBB AL,0x0
00015f26(2): TEST AL,AL
00015f28(2): JZ 0x00015f98
00015f2a(7): LEA RDI,[0x22825]
00015f31(5): MOV ECX,0x6
00015f36(3): MOV RSI,R12
00015f39(2): CMPSB.REPE RDI,RSI
00015f3b(3): SETA AL
00015f3e(2): SBB AL,0x0
00015f40(2): TEST AL,AL
00015f42(6): JNZ 0x00016048
00015f48(5): CALL 0x000029f0
00015f4d(2): XOR ECX,ECX
00015f4f(3): TEST RBP,RBP
00015f52(3): MOV RDX,qword ptr [RAX]
00015f55(5): MOV EDI,0x1
00015f5a(6): JNZ 0x0001621a
00015f60(4): TEST byte ptr [RDX + RCX*0x2],0x2
00015f64(2): JZ 0x00015f77
00015f66(3): MOV RAX,RCX
00015f69(3): MOV RSI,RDI
00015f6c(4): SAR RAX,0x6
00015f70(3): SHL RSI,CL
00015f73(4): OR qword ptr [RBX + RAX*0x8],RSI
00015f77(4): ADD RCX,0x1
00015f7b(7): CMP RCX,0x100
00015f82(2): JNZ 0x00015f60
00015f84(2): XOR EAX,EAX
00015f86(4): ADD RSP,0x10
00015f8a(1): POP RBX
00015f8b(1): POP RBP
00015f8c(2): POP R12
00015f8e(2): POP R13
00015f90(2): POP R14
00015f92(1): RET
00015f98(5): CALL 0x000029f0
00015f9d(2): XOR ECX,ECX
00015f9f(3): TEST RBP,RBP
00015fa2(3): MOV RDX,qword ptr [RAX]
00015fa5(5): MOV EDI,0x1
00015faa(6): JNZ 0x0001619a
00015fb0(4): TEST byte ptr [RDX + RCX*0x2],0x8
00015fb4(2): JZ 0x00015fc7
00015fb6(3): MOV RAX,RCX
00015fb9(3): MOV RSI,RDI
00015fbc(4): SAR RAX,0x6
00015fc0(3): SHL RSI,CL
00015fc3(4): OR qword ptr [RBX + RAX*0x8],RSI
00015fc7(4): ADD RCX,0x1
00015fcb(7): CMP RCX,0x100
00015fd2(2): JNZ 0x00015fb0
00015fd4(2): JMP 0x00015f84
00015fd6(7): LEA RDI,[0x22819]
00015fdd(5): MOV ECX,0x6
00015fe2(3): MOV RSI,R9
00015fe5(2): CMPSB.REPE RDI,RSI
00015fe7(4): MOV RCX,qword ptr [R13]
00015feb(3): SETA AL
00015fee(2): SBB AL,0x0
00015ff0(2): TEST AL,AL
00015ff2(7): LEA RAX,[0x2280d]
00015ff9(4): CMOVZ R12,RAX
00015ffd(3): CMP qword ptr [R8],RCX
00016000(3): MOV RAX,qword ptr [RDX]
00016003(6): JNZ 0x00015ef8
00016009(5): LEA R14,[RCX + RCX*0x1 + 0x1]
0001600e(3): MOV RDI,RAX
00016011(5): MOV qword ptr [RSP + 0x8],R8
00016016(4): MOV qword ptr [RSP],RDX
0001601a(8): LEA RSI,[R14*0x8]
00016022(5): CALL 0x00002830
00016027(3): TEST RAX,RAX
0001602a(6): JZ 0x00016348
00016030(4): MOV RDX,qword ptr [RSP]
00016034(5): MOV R8,qword ptr [RSP + 0x8]
00016039(3): MOV qword ptr [RDX],RAX
0001603c(3): MOV qword ptr [R8],R14
0001603f(4): MOV RCX,qword ptr [R13]
00016043(5): JMP 0x00015ef8
00016048(7): LEA RDI,[0x22819]
0001604f(5): MOV ECX,0x6
00016054(3): MOV RSI,R12
00016057(2): CMPSB.REPE RDI,RSI
00016059(3): SETA AL
0001605c(2): SBB AL,0x0
0001605e(2): TEST AL,AL
00016060(2): JZ 0x000160ca
00016062(7): LEA RDI,[0x2282b]
00016069(5): MOV ECX,0x6
0001606e(3): MOV RSI,R12
00016071(2): CMPSB.REPE RDI,RSI
00016073(3): SETA AL
00016076(2): SBB AL,0x0
00016078(2): TEST AL,AL
0001607a(6): JNZ 0x00016112
00016080(5): CALL 0x000029f0
00016085(2): XOR ECX,ECX
00016087(3): TEST RBP,RBP
0001608a(3): MOV RDX,qword ptr [RAX]
0001608d(5): MOV EDI,0x1
00016092(6): JNZ 0x000163ee
00016098(8): NOP dword ptr [RAX + RAX*0x1]
000160a0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x20
000160a5(2): JZ 0x000160b8
000160a7(3): MOV RAX,RCX
000160aa(3): MOV RSI,RDI
000160ad(4): SAR RAX,0x6
000160b1(3): SHL RSI,CL
000160b4(4): OR qword ptr [RBX + RAX*0x8],RSI
000160b8(4): ADD RCX,0x1
000160bc(7): CMP RCX,0x100
000160c3(2): JNZ 0x000160a0
000160c5(5): JMP 0x00015f84
000160ca(5): CALL 0x000029f0
000160cf(2): XOR ECX,ECX
000160d1(3): TEST RBP,RBP
000160d4(3): MOV RDX,qword ptr [RAX]
000160d7(5): MOV EDI,0x1
000160dc(6): JNZ 0x000162b2
000160e2(6): NOP word ptr [RAX + RAX*0x1]
000160e8(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x2
000160ed(2): JZ 0x00016100
000160ef(3): MOV RAX,RCX
000160f2(3): MOV RSI,RDI
000160f5(4): SAR RAX,0x6
000160f9(3): SHL RSI,CL
000160fc(4): OR qword ptr [RBX + RAX*0x8],RSI
00016100(4): ADD RCX,0x1
00016104(7): CMP RCX,0x100
0001610b(2): JNZ 0x000160e8
0001610d(5): JMP 0x00015f84
00016112(7): LEA RDI,[0x2280d]
00016119(5): MOV ECX,0x6
0001611e(3): MOV RSI,R12
00016121(2): CMPSB.REPE RDI,RSI
00016123(3): SETA AL
00016126(2): SBB AL,0x0
00016128(2): TEST AL,AL
0001612a(6): JZ 0x000161d3
00016130(7): LEA RDI,[0x2284a]
00016137(5): MOV ECX,0x6
0001613c(3): MOV RSI,R12
0001613f(2): CMPSB.REPE RDI,RSI
00016141(3): SETA AL
00016144(2): SBB AL,0x0
00016146(2): TEST AL,AL
00016148(6): JNZ 0x00016253
0001614e(5): CALL 0x000029f0
00016153(2): XOR ECX,ECX
00016155(3): TEST RBP,RBP
00016158(3): MOV RDX,qword ptr [RAX]
0001615b(5): MOV EDI,0x1
00016160(6): JNZ 0x0001660a
00016166(10): NOP word ptr CS:[RAX + RAX*0x1]
00016170(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x8
00016175(2): JZ 0x00016188
00016177(3): MOV RAX,RCX
0001617a(3): MOV RSI,RDI
0001617d(4): SAR RAX,0x6
00016181(3): SHL RSI,CL
00016184(4): OR qword ptr [RBX + RAX*0x8],RSI
00016188(4): ADD RCX,0x1
0001618c(7): CMP RCX,0x100
00016193(2): JNZ 0x00016170
00016195(5): JMP 0x00015f84
0001619a(2): XOR EAX,EAX
0001619c(4): NOP dword ptr [RAX]
000161a0(4): TEST byte ptr [RDX + RAX*0x2],0x8
000161a4(2): JZ 0x000161c2
000161a6(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
000161ab(3): MOV R10,RDI
000161ae(3): MOV RSI,RCX
000161b1(3): AND ECX,0x3f
000161b4(4): SHR RSI,0x3
000161b8(3): SHL R10,CL
000161bb(3): AND ESI,0x18
000161be(4): OR qword ptr [RBX + RSI*0x1],R10
000161c2(4): ADD RAX,0x1
000161c6(6): CMP RAX,0x100
000161cc(2): JNZ 0x000161a0
000161ce(5): JMP 0x00015f84
000161d3(5): CALL 0x000029f0
000161d8(2): XOR ECX,ECX
000161da(3): TEST RBP,RBP
000161dd(3): MOV RDX,qword ptr [RAX]
000161e0(5): MOV EDI,0x1
000161e5(6): JNZ 0x000163b8
000161eb(5): NOP dword ptr [RAX + RAX*0x1]
000161f0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x4
000161f5(2): JZ 0x00016208
000161f7(3): MOV RAX,RCX
000161fa(3): MOV RSI,RDI
000161fd(4): SAR RAX,0x6
00016201(3): SHL RSI,CL
00016204(4): OR qword ptr [RBX + RAX*0x8],RSI
00016208(4): ADD RCX,0x1
0001620c(7): CMP RCX,0x100
00016213(2): JNZ 0x000161f0
00016215(5): JMP 0x00015f84
0001621a(2): XOR EAX,EAX
0001621c(4): NOP dword ptr [RAX]
00016220(4): TEST byte ptr [RDX + RAX*0x2],0x2
00016224(2): JZ 0x00016242
00016226(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0001622b(3): MOV R11,RDI
0001622e(3): MOV RSI,RCX
00016231(3): AND ECX,0x3f
00016234(4): SHR RSI,0x3
00016238(3): SHL R11,CL
0001623b(3): AND ESI,0x18
0001623e(4): OR qword ptr [RBX + RSI*0x1],R11
00016242(4): ADD RAX,0x1
00016246(6): CMP RAX,0x100
0001624c(2): JNZ 0x00016220
0001624e(5): JMP 0x00015f84
00016253(7): LEA RDI,[0x22831]
0001625a(5): MOV ECX,0x6
0001625f(3): MOV RSI,R12
00016262(2): CMPSB.REPE RDI,RSI
00016264(3): SETA AL
00016267(2): SBB AL,0x0
00016269(2): TEST AL,AL
0001626b(2): JNZ 0x000162ec
0001626d(5): CALL 0x000029f0
00016272(2): XOR ECX,ECX
00016274(3): TEST RBP,RBP
00016277(3): MOV RDX,qword ptr [RAX]
0001627a(5): MOV EDI,0x1
0001627f(6): JNZ 0x00016677
00016285(3): NOP dword ptr [RAX]
00016288(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x40
0001628d(2): JZ 0x000162a0
0001628f(3): MOV RAX,RCX
00016292(3): MOV RSI,RDI
00016295(4): SAR RAX,0x6
00016299(3): SHL RSI,CL
0001629c(4): OR qword ptr [RBX + RAX*0x8],RSI
000162a0(4): ADD RCX,0x1
000162a4(7): CMP RCX,0x100
000162ab(2): JNZ 0x00016288
000162ad(5): JMP 0x00015f84
000162b2(2): XOR EAX,EAX
000162b4(4): NOP dword ptr [RAX]
000162b8(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x2
000162bd(2): JZ 0x000162db
000162bf(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
000162c4(3): MOV R14,RDI
000162c7(3): MOV RSI,RCX
000162ca(3): AND ECX,0x3f
000162cd(4): SHR RSI,0x3
000162d1(3): SHL R14,CL
000162d4(3): AND ESI,0x18
000162d7(4): OR qword ptr [RBX + RSI*0x1],R14
000162db(4): ADD RAX,0x1
000162df(6): CMP RAX,0x100
000162e5(2): JNZ 0x000162b8
000162e7(5): JMP 0x00015f84
000162ec(7): LEA RDI,[0x22813]
000162f3(5): MOV ECX,0x6
000162f8(3): MOV RSI,R12
000162fb(2): CMPSB.REPE RDI,RSI
000162fd(3): SETA AL
00016300(2): SBB AL,0x0
00016302(2): TEST AL,AL
00016304(2): JNZ 0x00016352
00016306(5): CALL 0x000029f0
0001630b(2): XOR ECX,ECX
0001630d(3): TEST RBP,RBP
00016310(3): MOV RAX,qword ptr [RAX]
00016313(5): MOV EDI,0x1
00016318(6): JNZ 0x00016640
0001631e(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x1
00016323(2): JZ 0x00016336
00016325(3): MOV RDX,RCX
00016328(3): MOV RSI,RDI
0001632b(4): SAR RDX,0x6
0001632f(3): SHL RSI,CL
00016332(4): OR qword ptr [RBX + RDX*0x8],RSI
00016336(4): ADD RCX,0x1
0001633a(7): CMP RCX,0x100
00016341(2): JNZ 0x0001631e
00016343(5): JMP 0x00015f84
00016348(5): MOV EAX,0xc
0001634d(5): JMP 0x00015f86
00016352(7): LEA RDI,[0x22837]
00016359(5): MOV ECX,0x6
0001635e(3): MOV RSI,R12
00016361(2): CMPSB.REPE RDI,RSI
00016363(3): SETA AL
00016366(2): SBB AL,0x0
00016368(2): TEST AL,AL
0001636a(6): JNZ 0x0001645e
00016370(5): CALL 0x000029f0
00016375(2): XOR ECX,ECX
00016377(3): TEST RBP,RBP
0001637a(3): MOV RDX,qword ptr [RAX]
0001637d(5): MOV ESI,0x1
00016382(6): JNZ 0x00016424
00016388(4): TEST byte ptr [RDX + RCX*0x2],0x1
0001638c(2): JZ 0x0001639f
0001638e(3): MOV RAX,RCX
00016391(3): MOV RDI,RSI
00016394(4): SAR RAX,0x6
00016398(3): SHL RDI,CL
0001639b(4): OR qword ptr [RBX + RAX*0x8],RDI
0001639f(4): ADD RCX,0x1
000163a3(7): CMP RCX,0x100
000163aa(2): JNZ 0x00016388
000163ac(5): JMP 0x00015f84
000163b8(2): XOR EAX,EAX
000163ba(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x4
000163bf(2): JZ 0x000163dd
000163c1(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
000163c6(3): MOV R9,RDI
000163c9(3): MOV RSI,RCX
000163cc(3): AND ECX,0x3f
000163cf(4): SHR RSI,0x3
000163d3(3): SHL R9,CL
000163d6(3): AND ESI,0x18
000163d9(4): OR qword ptr [RBX + RSI*0x1],R9
000163dd(4): ADD RAX,0x1
000163e1(6): CMP RAX,0x100
000163e7(2): JNZ 0x000163ba
000163e9(5): JMP 0x00015f84
000163ee(2): XOR EAX,EAX
000163f0(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x20
000163f5(2): JZ 0x00016413
000163f7(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
000163fc(3): MOV R9,RDI
000163ff(3): MOV RSI,RCX
00016402(3): AND ECX,0x3f
00016405(4): SHR RSI,0x3
00016409(3): SHL R9,CL
0001640c(3): AND ESI,0x18
0001640f(4): OR qword ptr [RBX + RSI*0x1],R9
00016413(4): ADD RAX,0x1
00016417(6): CMP RAX,0x100
0001641d(2): JNZ 0x000163f0
0001641f(5): JMP 0x00015f84
00016424(2): XOR EAX,EAX
00016426(5): MOV EDI,0x1
0001642b(4): TEST byte ptr [RDX + RAX*0x2],0x1
0001642f(2): JZ 0x0001644d
00016431(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
00016436(3): MOV R14,RDI
00016439(3): MOV RSI,RCX
0001643c(3): AND ECX,0x3f
0001643f(4): SHR RSI,0x3
00016443(3): SHL R14,CL
00016446(3): AND ESI,0x18
00016449(4): OR qword ptr [RBX + RSI*0x1],R14
0001644d(4): ADD RAX,0x1
00016451(6): CMP RAX,0x100
00016457(2): JNZ 0x0001642b
00016459(5): JMP 0x00015f84
0001645e(7): LEA RSI,[0x2283d]
00016465(3): MOV RDI,R12
00016468(5): CALL 0x000026d0
0001646d(2): TEST EAX,EAX
0001646f(2): JNZ 0x000164ea
00016471(5): CALL 0x000029f0
00016476(2): XOR ECX,ECX
00016478(3): TEST RBP,RBP
0001647b(3): MOV RSI,qword ptr [RAX]
0001647e(5): MOV EDX,0x1
00016483(2): JNZ 0x000164af
00016485(5): CMP word ptr [RSI + RCX*0x2],0x0
0001648a(2): JNS 0x0001649d
0001648c(3): MOV RAX,RCX
0001648f(3): MOV RDI,RDX
00016492(4): SAR RAX,0x6
00016496(3): SHL RDI,CL
00016499(4): OR qword ptr [RBX + RAX*0x8],RDI
0001649d(4): ADD RCX,0x1
000164a1(7): CMP RCX,0x100
000164a8(2): JNZ 0x00016485
000164aa(5): JMP 0x00015f84
000164af(2): XOR EAX,EAX
000164b1(5): MOV EDI,0x1
000164b6(5): CMP word ptr [RSI + RAX*0x2],0x0
000164bb(2): JNS 0x000164d9
000164bd(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
000164c2(3): MOV R9,RDI
000164c5(3): MOV RDX,RCX
000164c8(3): AND ECX,0x3f
000164cb(4): SHR RDX,0x3
000164cf(3): SHL R9,CL
000164d2(3): AND EDX,0x18
000164d5(4): OR qword ptr [RBX + RDX*0x1],R9
000164d9(4): ADD RAX,0x1
000164dd(6): CMP RAX,0x100
000164e3(2): JNZ 0x000164b6
000164e5(5): JMP 0x00015f84
000164ea(7): LEA RSI,[0x22843]
000164f1(3): MOV RDI,R12
000164f4(5): CALL 0x000026d0
000164f9(2): TEST EAX,EAX
000164fb(2): JNZ 0x00016574
000164fd(5): CALL 0x000029f0
00016502(2): XOR ECX,ECX
00016504(3): TEST RBP,RBP
00016507(3): MOV RSI,qword ptr [RAX]
0001650a(5): MOV EDX,0x1
0001650f(2): JNZ 0x0001653a
00016511(4): TEST byte ptr [RSI + RCX*0x2],0x4
00016515(2): JZ 0x00016528
00016517(3): MOV RAX,RCX
0001651a(3): MOV RDI,RDX
0001651d(4): SAR RAX,0x6
00016521(3): SHL RDI,CL
00016524(4): OR qword ptr [RBX + RAX*0x8],RDI
00016528(4): ADD RCX,0x1
0001652c(7): CMP RCX,0x100
00016533(2): JNZ 0x00016511
00016535(5): JMP 0x00015f84
0001653a(2): XOR EAX,EAX
0001653c(5): MOV EDI,0x1
00016541(4): TEST byte ptr [RSI + RAX*0x2],0x4
00016545(2): JZ 0x00016563
00016547(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0001654c(3): MOV R14,RDI
0001654f(3): MOV RDX,RCX
00016552(3): AND ECX,0x3f
00016555(4): SHR RDX,0x3
00016559(3): SHL R14,CL
0001655c(3): AND EDX,0x18
0001655f(4): OR qword ptr [RBX + RDX*0x1],R14
00016563(4): ADD RAX,0x1
00016567(6): CMP RAX,0x100
0001656d(2): JNZ 0x00016541
0001656f(5): JMP 0x00015f84
00016574(7): LEA RSI,[0x22849]
0001657b(3): MOV RDI,R12
0001657e(5): CALL 0x000026d0
00016583(2): TEST EAX,EAX
00016585(2): JNZ 0x00016600
00016587(5): CALL 0x000029f0
0001658c(2): XOR ECX,ECX
0001658e(3): TEST RBP,RBP
00016591(3): MOV RSI,qword ptr [RAX]
00016594(5): MOV EDX,0x1
00016599(2): JNZ 0x000165c5
0001659b(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x10
000165a0(2): JZ 0x000165b3
000165a2(3): MOV RAX,RCX
000165a5(3): MOV RDI,RDX
000165a8(4): SAR RAX,0x6
000165ac(3): SHL RDI,CL
000165af(4): OR qword ptr [RBX + RAX*0x8],RDI
000165b3(4): ADD RCX,0x1
000165b7(7): CMP RCX,0x100
000165be(2): JNZ 0x0001659b
000165c0(5): JMP 0x00015f84
000165c5(2): XOR EAX,EAX
000165c7(5): MOV EDI,0x1
000165cc(5): TEST byte ptr [RSI + RAX*0x2 + 0x1],0x10
000165d1(2): JZ 0x000165ef
000165d3(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
000165d8(3): MOV R9,RDI
000165db(3): MOV RDX,RCX
000165de(3): AND ECX,0x3f
000165e1(4): SHR RDX,0x3
000165e5(3): SHL R9,CL
000165e8(3): AND EDX,0x18
000165eb(4): OR qword ptr [RBX + RDX*0x1],R9
000165ef(4): ADD RAX,0x1
000165f3(6): CMP RAX,0x100
000165f9(2): JNZ 0x000165cc
000165fb(5): JMP 0x00015f84
00016600(5): MOV EAX,0x4
00016605(5): JMP 0x00015f86
0001660a(2): XOR EAX,EAX
0001660c(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x8
00016611(2): JZ 0x0001662f
00016613(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
00016618(3): MOV R14,RDI
0001661b(3): MOV RSI,RCX
0001661e(3): AND ECX,0x3f
00016621(4): SHR RSI,0x3
00016625(3): SHL R14,CL
00016628(3): AND ESI,0x18
0001662b(4): OR qword ptr [RBX + RSI*0x1],R14
0001662f(4): ADD RAX,0x1
00016633(6): CMP RAX,0x100
00016639(2): JNZ 0x0001660c
0001663b(5): JMP 0x00015f84
00016640(2): XOR EDX,EDX
00016642(5): TEST byte ptr [RAX + RDX*0x2 + 0x1],0x1
00016647(2): JZ 0x00016665
00016649(5): MOVZX ECX,byte ptr [RBP + RDX*0x1]
0001664e(3): MOV R9,RDI
00016651(3): MOV RSI,RCX
00016654(3): AND ECX,0x3f
00016657(4): SHR RSI,0x3
0001665b(3): SHL R9,CL
0001665e(3): AND ESI,0x18
00016661(4): OR qword ptr [RBX + RSI*0x1],R9
00016665(4): ADD RDX,0x1
00016669(7): CMP RDX,0x100
00016670(2): JNZ 0x00016642
00016672(5): JMP 0x00015f84
00016677(2): XOR EAX,EAX
00016679(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x40
0001667e(2): JZ 0x0001669c
00016680(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
00016685(3): MOV R14,RDI
00016688(3): MOV RSI,RCX
0001668b(3): AND ECX,0x3f
0001668e(4): SHR RSI,0x3
00016692(3): SHL R14,CL
00016695(3): AND ESI,0x18
00016698(4): OR qword ptr [RBX + RSI*0x1],R14
0001669c(4): ADD RAX,0x1
000166a0(6): CMP RAX,0x100
000166a6(2): JNZ 0x00016679
000166a8(5): JMP 0x00015f84
000166b0(2): PUSH R15
000166b2(2): PUSH R14
000166b4(3): MOV R14,RDX
000166b7(2): PUSH R13
000166b9(2): PUSH R12
000166bb(3): MOV R13,RCX
000166be(1): PUSH RBP
000166bf(1): PUSH RBX
000166c0(3): MOV RBP,RDI
000166c3(5): MOV EDI,0x20
000166c8(3): MOV R12D,R8D
000166cb(4): SUB RSP,0x58
000166cf(4): MOV qword ptr [RSP],RSI
000166d3(5): MOV ESI,0x1
000166d8(5): MOV qword ptr [RSP + 0x8],R9
000166dd(9): MOV RAX,qword ptr FS:[0x28]
000166e6(5): MOV qword ptr [RSP + 0x48],RAX
000166eb(2): XOR EAX,EAX
000166ed(9): MOV qword ptr [RSP + 0x18],0x0
000166f6(5): CALL 0x000026b0
000166fb(3): TEST RAX,RAX
000166fe(6): JZ 0x000168c0
00016704(5): MOV ESI,0x1
00016709(5): MOV EDI,0x50
0001670e(3): MOV RBX,RAX
00016711(5): CALL 0x000026b0
00016716(3): TEST RAX,RAX
00016719(3): MOV R15,RAX
0001671c(6): JZ 0x000168d0
00016722(4): MOVZX EAX,byte ptr [RAX + 0x20]
00016726(4): SUB RSP,0x8
0001672a(3): MOV EDX,R12D
0001672d(2): PUSH 0x0
0001672f(3): AND EDX,0x1
00016732(5): MOV RDI,qword ptr [RSP + 0x10]
00016737(4): LEA RCX,[R15 + 0x48]
0001673b(3): MOV R9,R14
0001673e(3): MOV RSI,RBX
00016741(5): LEA R8,[RSP + 0x28]
00016746(3): AND EAX,0xfffffffe
00016749(2): OR EAX,EDX
0001674b(4): LEA RDX,[R15 + 0x18]
0001674f(4): MOV byte ptr [R15 + 0x20],AL
00016753(5): CALL 0x00015ea0
00016758(2): TEST EAX,EAX
0001675a(1): POP RDX
0001675b(1): POP RCX
0001675c(6): JNZ 0x000168f0
00016762(5): MOVSX RCX,byte ptr [R13]
00016767(5): MOV ESI,0x1
0001676c(2): TEST CL,CL
0001676e(2): JZ 0x000167aa
00016770(4): LEA RAX,[RCX + 0x3f]
00016774(3): TEST RCX,RCX
00016777(3): MOV RDX,RCX
0001677a(4): CMOVNS RAX,RCX
0001677e(4): SAR RDX,0x3f
00016782(4): ADD R13,0x1
00016786(4): SHR RDX,0x3a
0001678a(4): SAR RAX,0x6
0001678e(3): ADD RCX,RDX
00016791(3): AND ECX,0x3f
00016794(3): SUB RCX,RDX
00016797(3): MOV RDX,RSI
0001679a(3): SHL RDX,CL
0001679d(5): MOVSX RCX,byte ptr [R13]
000167a2(4): OR qword ptr [RBX + RAX*0x8],RDX
000167a6(2): TEST CL,CL
000167a8(2): JNZ 0x00016770
000167aa(3): TEST R12B,R12B
000167ad(2): JZ 0x000167c2
000167af(4): LEA RDX,[RBX + 0x20]
000167b3(3): MOV RAX,RBX
000167b6(3): NOT qword ptr [RAX]
000167b9(4): ADD RAX,0x8
000167bd(3): CMP RDX,RAX
000167c0(2): JNZ 0x000167b6
000167c2(7): CMP dword ptr [0xb4 + RBP],0x1
000167c9(2): JLE 0x000167e3
000167cb(4): MOV RCX,qword ptr [RBP + 0x78]
000167cf(2): XOR EAX,EAX
000167d1(4): MOV RDX,qword ptr [RCX + RAX*0x1]
000167d5(4): AND qword ptr [RBX + RAX*0x1],RDX
000167d9(4): ADD RAX,0x8
000167dd(4): CMP RAX,0x20
000167e1(2): JNZ 0x000167d1
000167e3(5): LEA R9,[RSP + 0x20]
000167e8(4): LEA R12,[RBP + 0x70]
000167ec(7): LEA R13,[0x80 + RBP]
000167f3(2): XOR ECX,ECX
000167f5(2): XOR EDX,EDX
000167f7(5): MOV byte ptr [RSP + 0x28],0x3
000167fc(3): MOV R8,R9
000167ff(3): MOV RSI,R13
00016802(3): MOV RDI,R12
00016805(5): MOV qword ptr [RSP + 0x20],RBX
0001680a(4): MOV qword ptr [RSP],R9
0001680e(5): CALL 0x00013360
00016813(3): TEST RAX,RAX
00016816(3): MOV R14,RAX
00016819(6): JZ 0x000168b0
0001681f(7): CMP dword ptr [0xb4 + RBP],0x1
00016826(2): JLE 0x000168a0
00016828(7): OR byte ptr [0xb0 + RBP],0x2
0001682f(4): MOV R9,qword ptr [RSP]
00016833(2): XOR ECX,ECX
00016835(2): XOR EDX,EDX
00016837(3): MOV RSI,R13
0001683a(3): MOV RDI,R12
0001683d(5): MOV byte ptr [RSP + 0x28],0x6
00016842(5): MOV qword ptr [RSP + 0x20],R15
00016847(3): MOV R8,R9
0001684a(5): CALL 0x00013360
0001684f(3): TEST RAX,RAX
00016852(2): JZ 0x000168b0
00016854(5): LEA R8,[RSP + 0x30]
00016859(3): MOV RDX,R14
0001685c(3): MOV RCX,RAX
0001685f(3): MOV RSI,R13
00016862(3): MOV RDI,R12
00016865(5): MOV byte ptr [RSP + 0x38],0xa
0001686a(5): CALL 0x00013360
0001686f(3): MOV R14,RAX
00016872(5): MOV RDI,qword ptr [RSP + 0x48]
00016877(9): XOR RDI,qword ptr FS:[0x28]
00016880(3): MOV RAX,R14
00016883(6): JNZ 0x00016915
00016889(4): ADD RSP,0x58
0001688d(1): POP RBX
0001688e(1): POP RBP
0001688f(2): POP R12
00016891(2): POP R13
00016893(2): POP R14
00016895(2): POP R15
00016897(1): RET
000168a0(3): MOV RDI,R15
000168a3(5): CALL 0x00011dc0
000168a8(2): JMP 0x00016872
000168b0(3): MOV RDI,RBX
000168b3(5): CALL 0x00002a10
000168b8(3): MOV RDI,R15
000168bb(5): CALL 0x00011dc0
000168c0(5): MOV RAX,qword ptr [RSP + 0x8]
000168c5(3): XOR R14D,R14D
000168c8(6): MOV dword ptr [RAX],0xc
000168ce(2): JMP 0x00016872
000168d0(3): MOV RDI,RBX
000168d3(3): XOR R14D,R14D
000168d6(5): CALL 0x00002a10
000168db(5): MOV RAX,qword ptr [RSP + 0x8]
000168e0(6): MOV dword ptr [RAX],0xc
000168e6(2): JMP 0x00016872
000168f0(3): MOV RDI,RBX
000168f3(3): MOV dword ptr [RSP],EAX
000168f6(3): XOR R14D,R14D
000168f9(5): CALL 0x00002a10
000168fe(3): MOV RDI,R15
00016901(5): CALL 0x00011dc0
00016906(5): MOV RDI,qword ptr [RSP + 0x8]
0001690b(3): MOV EAX,dword ptr [RSP]
0001690e(2): MOV dword ptr [RDI],EAX
00016910(5): JMP 0x00016872
00016915(5): CALL 0x00002560
0001691a(6): NOP word ptr [RAX + RAX*0x1]
00016920(2): PUSH R15
00016922(2): PUSH R14
00016924(3): MOV RAX,RDI
00016927(2): PUSH R13
00016929(2): PUSH R12
0001692b(1): PUSH RBP
0001692c(1): PUSH RBX
0001692d(2): XOR EBX,EBX
0001692f(3): MOV RBP,RCX
00016932(7): SUB RSP,0x178
00016939(3): MOV RAX,qword ptr [RAX]
0001693c(5): MOV qword ptr [RSP + 0x30],RDI
00016941(5): MOV qword ptr [RSP + 0x20],RSI
00016946(9): MOV RDI,qword ptr FS:[0x28]
0001694f(8): MOV qword ptr [0x168 + RSP],RDI
00016957(2): XOR EDI,EDI
00016959(7): CMP dword ptr [0xb4 + RAX],0x1
00016960(5): MOV qword ptr [RSP + 0x28],RDX
00016965(5): MOV qword ptr [RSP + 0x8],RAX
0001696a(2): JNZ 0x00016983
0001696c(5): MOV RAX,qword ptr [RSP + 0x30]
00016971(4): MOV RAX,qword ptr [RAX + 0x18]
00016975(3): MOV RBX,RAX
00016978(4): MOV qword ptr [RSP],RAX
0001697c(4): SHR RBX,0x16
00016980(3): AND EBX,0x1
00016983(5): MOV RAX,qword ptr [RSP + 0x20]
00016988(4): CMP qword ptr [RAX],0x0
0001698c(6): JLE 0x00016d9d
00016992(5): LEA RAX,[RSP + 0x58]
00016997(8): MOV qword ptr [RSP],0x0
0001699f(5): MOV qword ptr [RSP + 0x40],RAX
000169a4(5): LEA RAX,[RSP + 0x54]
000169a9(5): MOV qword ptr [RSP + 0x48],RAX
000169ae(5): LEA RAX,[RSP + 0x60]
000169b3(5): MOV qword ptr [RSP + 0x38],RAX
000169b8(2): JMP 0x000169fe
000169c0(3): CMP EAX,0x3
000169c3(6): JZ 0x00016cb6
000169c9(3): CMP EAX,0x6
000169cc(6): JZ 0x00016b58
000169d2(3): AND EDX,0xfffffffd
000169d5(3): CMP DL,0x5
000169d8(6): JZ 0x00016dd4
000169de(3): CMP EAX,0x2
000169e1(6): JZ 0x00016d34
000169e7(5): MOV RDI,qword ptr [RSP + 0x20]
000169ec(5): ADD qword ptr [RSP],0x1
000169f1(4): MOV RAX,qword ptr [RSP]
000169f5(3): CMP RAX,qword ptr [RDI]
000169f8(6): JGE 0x00016d9d
000169fe(5): MOV RAX,qword ptr [RSP + 0x28]
00016a03(4): MOV RDI,qword ptr [RSP]
00016a07(3): MOV RAX,qword ptr [RAX]
00016a0a(4): MOV R12,qword ptr [RAX + RDI*0x8]
00016a0e(5): MOV RAX,qword ptr [RSP + 0x8]
00016a13(3): MOV RCX,qword ptr [RAX]
00016a16(3): MOV RAX,R12
00016a19(4): SHL RAX,0x4
00016a1d(5): MOV qword ptr [RSP + 0x10],RAX
00016a22(4): LEA RSI,[RCX + RAX*0x1]
00016a26(4): MOVZX EAX,byte ptr [RSI + 0x8]
00016a2a(3): CMP EAX,0x1
00016a2d(2): MOV EDX,EAX
00016a2f(2): JNZ 0x000169c0
00016a31(4): MOVZX R13D,byte ptr [RSI]
00016a35(2): TEST EBX,EBX
00016a37(6): MOV byte ptr [RBP + R13*0x1],0x1
00016a3d(2): JZ 0x00016a50
00016a3f(5): CALL 0x000029e0
00016a44(3): MOV RAX,qword ptr [RAX]
00016a47(4): MOVSXD RAX,dword ptr [RAX + R13*0x4]
00016a4b(5): MOV byte ptr [RBP + RAX*0x1],0x1
00016a50(5): MOV RAX,qword ptr [RSP + 0x30]
00016a55(4): TEST byte ptr [RAX + 0x1a],0x40
00016a59(2): JZ 0x000169e7
00016a5b(5): MOV RSI,qword ptr [RSP + 0x8]
00016a60(7): CMP dword ptr [0xb4 + RSI],0x1
00016a67(6): JLE 0x000169e7
00016a6d(3): MOV RAX,qword ptr [RSI]
00016a70(5): MOV RDI,qword ptr [RSP + 0x10]
00016a75(4): MOVZX EDX,byte ptr [RAX + RDI*0x1]
00016a79(4): MOV byte ptr [RSP + 0x60],DL
00016a7d(5): LEA RDX,[R12 + 0x1]
00016a82(4): CMP qword ptr [RSI + 0x10],RDX
00016a86(6): JBE 0x00016dc6
00016a8c(5): LEA RCX,[RAX + RDI*0x1 + 0x10]
00016a91(3): MOV EAX,dword ptr [RCX + 0x8]
00016a94(5): AND EAX,0x2000ff
00016a99(5): CMP EAX,0x200001
00016a9e(6): JNZ 0x00016dc6
00016aa4(4): ADD RDI,0x20
00016aa8(3): MOV R13,RDI
00016aab(5): MOV RDI,qword ptr [RSP + 0x38]
00016ab0(4): LEA RAX,[RDI + 0x1]
00016ab4(2): JMP 0x00016adb
00016ac0(3): MOV RCX,qword ptr [RSI]
00016ac3(3): ADD RCX,R13
00016ac6(4): ADD R13,0x10
00016aca(3): MOV EDX,dword ptr [RCX + 0x8]
00016acd(6): AND EDX,0x2000ff
00016ad3(6): CMP EDX,0x200001
00016ad9(2): JNZ 0x00016af4
00016adb(3): MOVZX EDX,byte ptr [RCX]
00016ade(4): ADD RAX,0x1
00016ae2(3): MOV byte ptr [RAX + -0x1],DL
00016ae5(3): MOV RDX,RAX
00016ae8(3): SUB RDX,RDI
00016aeb(3): ADD RDX,R12
00016aee(4): CMP qword ptr [RSI + 0x10],RDX
00016af2(2): JA 0x00016ac0
00016af4(5): MOV RSI,qword ptr [RSP + 0x38]
00016af9(5): MOV RCX,qword ptr [RSP + 0x40]
00016afe(5): MOV RDI,qword ptr [RSP + 0x48]
00016b03(3): SUB RAX,RSI
00016b06(7): MOV qword ptr [RCX],0x0
00016b0d(3): MOV R12,RAX
00016b10(3): MOV RDX,RAX
00016b13(5): CALL 0x000101e0
00016b18(3): CMP R12,RAX
00016b1b(6): JNZ 0x000169e7
00016b21(4): MOV EDI,dword ptr [RSP + 0x54]
00016b25(5): CALL 0x000028e0
00016b2a(5): MOV RDX,qword ptr [RSP + 0x40]
00016b2f(5): MOV RDI,qword ptr [RSP + 0x38]
00016b34(2): MOV ESI,EAX
00016b36(5): CALL 0x00002790
00016b3b(4): CMP RAX,-0x1
00016b3f(6): JZ 0x000169e7
00016b45(5): MOVZX EAX,byte ptr [RSP + 0x60]
00016b4a(5): MOV byte ptr [RBP + RAX*0x1],0x1
00016b4f(5): JMP 0x000169e7
00016b58(5): MOV RAX,qword ptr [RSP + 0x8]
00016b5d(3): MOV R12,qword ptr [RSI]
00016b60(7): CMP dword ptr [0xb4 + RAX],0x1
00016b67(2): JLE 0x00016b8d
00016b69(6): CMP qword ptr [R12 + 0x48],0x0
00016b6f(6): JNZ 0x00016c6f
00016b75(6): TEST byte ptr [R12 + 0x20],0x1
00016b7b(6): JNZ 0x00016c6f
00016b81(6): CMP qword ptr [R12 + 0x40],0x0
00016b87(6): JNZ 0x00016c6f
00016b8d(3): XOR R13D,R13D
00016b90(6): CMP qword ptr [R12 + 0x28],0x0
00016b96(6): JLE 0x000169e7
00016b9c(3): MOV R15,R12
00016b9f(5): MOV R14,qword ptr [RSP + 0x40]
00016ba4(3): MOV R12,RBP
00016ba7(3): MOV RBP,R13
00016baa(3): MOV R13D,EBX
00016bad(2): JMP 0x00016bbd
00016baf(4): ADD RBP,0x1
00016bb3(4): CMP RBP,qword ptr [R15 + 0x28]
00016bb7(6): JGE 0x00016c64
00016bbd(7): MOV qword ptr [R14],0x0
00016bc4(3): MOV RAX,qword ptr [R15]
00016bc7(3): MOV RDX,R14
00016bca(5): MOV RDI,qword ptr [RSP + 0x38]
00016bcf(8): LEA RBX,[RBP*0x4]
00016bd7(3): MOV ESI,dword ptr [RAX + RBP*0x4]
00016bda(5): CALL 0x00002790
00016bdf(4): CMP RAX,-0x1
00016be3(2): JZ 0x00016c0f
00016be5(5): MOVZX EDX,byte ptr [RSP + 0x60]
00016bea(3): TEST R13D,R13D
00016bed(5): MOV byte ptr [R12 + RDX*0x1],0x1
00016bf2(5): MOV qword ptr [RSP + 0x10],RDX
00016bf7(2): JZ 0x00016c0f
00016bf9(5): CALL 0x000029e0
00016bfe(5): MOV RDX,qword ptr [RSP + 0x10]
00016c03(3): MOV RAX,qword ptr [RAX]
00016c06(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
00016c0a(5): MOV byte ptr [R12 + RAX*0x1],0x1
00016c0f(5): MOV RAX,qword ptr [RSP + 0x30]
00016c14(4): TEST byte ptr [RAX + 0x1a],0x40
00016c18(2): JZ 0x00016baf
00016c1a(5): MOV RAX,qword ptr [RSP + 0x8]
00016c1f(7): CMP dword ptr [0xb4 + RAX],0x1
00016c26(2): JLE 0x00016baf
00016c28(3): MOV RAX,qword ptr [R15]
00016c2b(3): MOV EDI,dword ptr [RAX + RBX*0x1]
00016c2e(5): CALL 0x000028e0
00016c33(5): MOV RDI,qword ptr [RSP + 0x38]
00016c38(3): MOV RDX,R14
00016c3b(2): MOV ESI,EAX
00016c3d(5): CALL 0x00002790
00016c42(4): CMP RAX,-0x1
00016c46(6): JZ 0x00016baf
00016c4c(5): MOVZX EAX,byte ptr [RSP + 0x60]
00016c51(4): ADD RBP,0x1
00016c55(5): MOV byte ptr [R12 + RAX*0x1],0x1
00016c5a(4): CMP RBP,qword ptr [R15 + 0x28]
00016c5e(6): JL 0x00016bbd
00016c64(3): MOV EBX,R13D
00016c67(3): MOV RBP,R12
00016c6a(5): JMP 0x000169e7
00016c6f(5): MOV R12,qword ptr [RSP + 0x40]
00016c74(5): MOV R13,qword ptr [RSP + 0x48]
00016c79(5): MOV byte ptr [RSP + 0x54],0x0
00016c7e(2): NOP
00016c80(2): XOR EDI,EDI
00016c82(8): MOV qword ptr [R12],0x0
00016c8a(3): MOV RCX,R12
00016c8d(5): MOV EDX,0x1
00016c92(3): MOV RSI,R13
00016c95(5): CALL 0x000101e0
00016c9a(4): CMP RAX,-0x2
00016c9e(2): JNZ 0x00016caa
00016ca0(5): MOVZX EAX,byte ptr [RSP + 0x54]
00016ca5(5): MOV byte ptr [RBP + RAX*0x1],0x1
00016caa(5): ADD byte ptr [RSP + 0x54],0x1
00016caf(2): JNZ 0x00016c80
00016cb1(5): JMP 0x000169e7
00016cb6(3): MOV R13,RBP
00016cb9(3): XOR R12D,R12D
00016cbc(9): MOV qword ptr [RSP + 0x18],0x0
00016cc5(5): MOV RAX,qword ptr [RSP + 0x10]
00016cca(5): MOV RSI,qword ptr [RSP + 0x18]
00016ccf(3): XOR R14D,R14D
00016cd2(4): MOV RAX,qword ptr [RCX + RAX*0x1]
00016cd6(4): MOV R15,qword ptr [RAX + RSI*0x1]
00016cda(6): NOP word ptr [RAX + RAX*0x1]
00016ce0(4): BT RDI,R14
00016ce4(2): JNC 0x00016d05
00016ce6(2): TEST EBX,EBX
00016ce8(6): MOV byte ptr [R13 + R14*0x1],0x1
00016cee(2): JZ 0x00016d05
00016cf0(5): CALL 0x000029e0
00016cf5(3): MOV RAX,qword ptr [RAX]
00016cf8(4): LEA RDX,[R12 + R14*0x1]
00016cfc(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
00016d00(5): MOV byte ptr [RBP + RAX*0x1],0x1
00016d05(4): ADD R14,0x1
00016d09(4): CMP R14,0x40
00016d0d(2): JNZ 0x00016ce0
00016d0f(4): ADD R12,0x40
00016d13(6): ADD qword ptr [RSP + 0x18],0x8
00016d19(4): ADD R13,0x40
00016d1d(7): CMP R12,0x100
00016d24(6): JZ 0x000169e7
00016d2a(5): MOV RAX,qword ptr [RSP + 0x8]
00016d2f(3): MOV RCX,qword ptr [RAX]
00016d32(2): JMP 0x00016cc5
00016d34(8): MOVDQA XMM0,xmmword ptr [0x00023000]
00016d3c(4): MOVUPS xmmword ptr [RBP],XMM0
00016d40(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
00016d44(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
00016d48(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
00016d4c(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
00016d50(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
00016d54(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
00016d58(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
00016d5c(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
00016d63(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
00016d6a(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
00016d71(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
00016d78(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
00016d7f(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
00016d86(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
00016d8d(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
00016d94(5): MOV RAX,qword ptr [RSP + 0x30]
00016d99(4): OR byte ptr [RAX + 0x38],0x1
00016d9d(8): MOV RAX,qword ptr [0x168 + RSP]
00016da5(9): XOR RAX,qword ptr FS:[0x28]
00016dae(6): JNZ 0x00016e42
00016db4(7): ADD RSP,0x178
00016dbb(1): POP RBX
00016dbc(1): POP RBP
00016dbd(2): POP R12
00016dbf(2): POP R13
00016dc1(2): POP R14
00016dc3(2): POP R15
00016dc5(1): RET
00016dc6(5): MOV RAX,qword ptr [RSP + 0x38]
00016dcb(4): ADD RAX,0x1
00016dcf(5): JMP 0x00016af4
00016dd4(8): MOVDQA XMM0,xmmword ptr [0x00023000]
00016ddc(3): CMP EAX,0x2
00016ddf(4): MOVUPS xmmword ptr [RBP],XMM0
00016de3(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
00016de7(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
00016deb(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
00016def(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
00016df3(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
00016df7(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
00016dfb(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
00016dff(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
00016e06(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
00016e0d(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
00016e14(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
00016e1b(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
00016e22(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
00016e29(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
00016e30(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
00016e37(6): JNZ 0x00016d9d
00016e3d(5): JMP 0x00016d94
00016e42(5): CALL 0x00002560
00016e47(9): NOP word ptr [RAX + RAX*0x1]
00016e50(4): SHL RDX,0x4
00016e54(2): PUSH R13
00016e56(2): PUSH R12
00016e58(4): LEA R9,[RDI + RDX*0x1]
00016e5c(1): PUSH RBP
00016e5d(1): PUSH RBX
00016e5e(4): SUB RSP,0x8
00016e62(5): MOVZX R11D,byte ptr [R9 + 0x8]
00016e67(4): CMP R11B,0x7
00016e6b(6): JZ 0x00016f80
00016e71(7): CMP dword ptr [0x90 + RCX],0x1
00016e78(6): JZ 0x00016f40
00016e7e(3): MOV RBX,RSI
00016e81(3): MOV RDI,RCX
00016e84(3): MOV RSI,R8
00016e87(3): MOV R10,RCX
00016e8a(5): CALL 0x000125f0
00016e8f(4): CMP R11B,0x5
00016e93(2): MOV EBP,EAX
00016e95(6): JZ 0x00016f50
00016e9b(4): CMP R11B,0x6
00016e9f(6): JNZ 0x00016f40
00016ea5(3): CMP EAX,0x1
00016ea8(6): JLE 0x00016f40
00016eae(3): MOV R13,qword ptr [R9]
00016eb1(4): MOV RSI,qword ptr [R13 + 0x40]
00016eb5(4): MOV RDX,qword ptr [R13 + 0x28]
00016eb9(3): TEST RSI,RSI
00016ebc(2): JNZ 0x00016ec9
00016ebe(5): CMP qword ptr [R13 + 0x48],0x0
00016ec3(6): JZ 0x00016fb8
00016ec9(4): MOV RAX,qword ptr [R10 + 0x10]
00016ecd(3): TEST RDX,RDX
00016ed0(4): MOV R12D,dword ptr [RAX + R8*0x4]
00016ed4(2): JLE 0x00016ef7
00016ed6(4): MOV RCX,qword ptr [R13]
00016eda(3): CMP R12D,dword ptr [RCX]
00016edd(2): JZ 0x00016f32
00016edf(2): XOR EAX,EAX
00016ee1(2): JMP 0x00016eee
00016ee8(4): CMP R12D,dword ptr [RCX + RAX*0x4]
00016eec(2): JZ 0x00016f32
00016eee(4): ADD RAX,0x1
00016ef2(3): CMP RAX,RDX
00016ef5(2): JNZ 0x00016ee8
00016ef7(4): MOV RAX,qword ptr [R13 + 0x48]
00016efb(3): TEST RAX,RAX
00016efe(6): JLE 0x00016fdc
00016f04(2): XOR EBX,EBX
00016f06(2): JMP 0x00016f1e
00016f10(4): ADD RBX,0x1
00016f14(4): CMP RBX,qword ptr [R13 + 0x48]
00016f18(6): JGE 0x00016fd8
00016f1e(4): MOV RAX,qword ptr [R13 + 0x18]
00016f22(3): MOV EDI,R12D
00016f25(4): MOV RSI,qword ptr [RAX + RBX*0x8]
00016f29(5): CALL 0x000024e0
00016f2e(2): TEST EAX,EAX
00016f30(2): JZ 0x00016f10
00016f32(5): TEST byte ptr [R13 + 0x20],0x1
00016f37(2): JZ 0x00016f42
00016f39(7): NOP dword ptr [RAX]
00016f40(2): XOR EBP,EBP
00016f42(4): ADD RSP,0x8
00016f46(2): MOV EAX,EBP
00016f48(1): POP RBX
00016f49(1): POP RBP
00016f4a(2): POP R12
00016f4c(2): POP R13
00016f4e(1): RET
00016f50(3): CMP EAX,0x1
00016f53(2): JLE 0x00016f40
00016f55(3): MOV RAX,qword ptr [RBX]
00016f58(2): TEST AL,0x40
00016f5a(2): JZ 0x00016f70
00016f5c(2): TEST AL,0x80
00016f5e(2): JZ 0x00016f42
00016f60(4): MOV RAX,qword ptr [R10 + 0x8]
00016f64(5): CMP byte ptr [RAX + R8*0x1],0x0
00016f69(2): JZ 0x00016f40
00016f6b(2): JMP 0x00016f42
00016f70(4): MOV RDX,qword ptr [R10 + 0x8]
00016f74(5): CMP byte ptr [RDX + R8*0x1],0xa
00016f79(2): JNZ 0x00016f5c
00016f7b(2): JMP 0x00016f40
00016f80(4): MOV RDX,qword ptr [RCX + 0x8]
00016f84(4): LEA RSI,[RDX + R8*0x1]
00016f88(3): MOVZX EAX,byte ptr [RSI]
00016f8b(2): CMP AL,0xc1
00016f8d(2): JBE 0x00016f40
00016f8f(4): MOV RCX,qword ptr [RCX + 0x58]
00016f93(4): LEA RDI,[R8 + 0x1]
00016f97(3): CMP RDI,RCX
00016f9a(2): JGE 0x00016f40
00016f9c(2): CMP AL,0xdf
00016f9e(6): MOVZX EDX,byte ptr [RDX + R8*0x1 + 0x1]
00016fa4(2): JA 0x0001700e
00016fa6(3): ADD EDX,-0x80
00016fa9(5): MOV EBP,0x2
00016fae(3): CMP DL,0x3f
00016fb1(2): JA 0x00016f40
00016fb3(2): JMP 0x00016f42
00016fb8(3): TEST RDX,RDX
00016fbb(6): JNZ 0x00016ec9
00016fc1(5): TEST byte ptr [R13 + 0x20],0x1
00016fc6(6): JNZ 0x00016f42
00016fcc(5): JMP 0x00016f40
00016fd8(4): MOV RSI,qword ptr [R13 + 0x40]
00016fdc(3): TEST RSI,RSI
00016fdf(2): JLE 0x00016fc1
00016fe1(4): MOV RDX,qword ptr [R13 + 0x8]
00016fe5(2): XOR EAX,EAX
00016fe7(2): JMP 0x00016ff9
00016ff0(4): ADD RAX,0x1
00016ff4(3): CMP RAX,RSI
00016ff7(2): JZ 0x00016fc1
00016ff9(4): CMP R12D,dword ptr [RDX + RAX*0x4]
00016ffd(2): JL 0x00016ff0
00016fff(4): MOV RCX,qword ptr [R13 + 0x10]
00017003(4): CMP R12D,dword ptr [RCX + RAX*0x4]
00017007(2): JG 0x00016ff0
00017009(5): JMP 0x00016f32
0001700e(2): CMP AL,0xef
00017010(2): JA 0x00017058
00017012(2): CMP AL,0xe0
00017014(2): JNZ 0x0001701f
00017016(3): CMP DL,0x9f
00017019(6): JBE 0x00016f40
0001701f(5): MOV EBP,0x3
00017024(3): MOVSXD RDI,EBP
00017027(3): ADD R8,RDI
0001702a(3): CMP RCX,R8
0001702d(6): JL 0x00016f40
00017033(5): MOV EAX,0x1
00017038(2): JMP 0x00017047
0001703a(4): ADD RAX,0x1
0001703e(3): CMP RDI,RAX
00017041(6): JLE 0x00016f42
00017047(4): MOVZX EBX,byte ptr [RSI + RAX*0x1]
0001704b(3): LEA EDX,[RBX + -0x80]
0001704e(3): CMP DL,0x3f
00017051(2): JBE 0x0001703a
00017053(5): JMP 0x00016f40
00017058(2): CMP AL,0xf7
0001705a(2): JA 0x00017070
0001705c(2): CMP AL,0xf0
0001705e(2): JNZ 0x00017069
00017060(3): CMP DL,0x8f
00017063(6): JBE 0x00016f40
00017069(5): MOV EBP,0x4
0001706e(2): JMP 0x00017024
00017070(2): CMP AL,0xfb
00017072(2): JA 0x00017088
00017074(2): CMP AL,0xf8
00017076(2): JNZ 0x00017081
00017078(3): CMP DL,0x87
0001707b(6): JBE 0x00016f40
00017081(5): MOV EBP,0x5
00017086(2): JMP 0x00017024
00017088(2): CMP AL,0xfd
0001708a(6): JA 0x00016f40
00017090(2): CMP AL,0xfc
00017092(2): JNZ 0x0001709d
00017094(3): CMP DL,0x83
00017097(6): JBE 0x00016f40
0001709d(5): MOV EBP,0x6
000170a2(2): JMP 0x00017024
000170b0(2): PUSH R15
000170b2(2): PUSH R14
000170b4(3): MOV R15,RDI
000170b7(2): PUSH R13
000170b9(2): PUSH R12
000170bb(1): PUSH RBP
000170bc(1): PUSH RBX
000170bd(3): MOV RBP,RCX
000170c0(3): MOV RBX,RDX
000170c3(7): SUB RSP,0xd8
000170ca(7): MOV RCX,qword ptr [0x98 + RDI]
000170d1(4): MOV R13,qword ptr [RSI + 0x8]
000170d5(9): MOV RAX,qword ptr FS:[0x28]
000170de(8): MOV qword ptr [0xc8 + RSP],RAX
000170e6(2): XOR EAX,EAX
000170e8(3): MOV RAX,RDX
000170eb(5): MOV qword ptr [RSP + 0x60],RSI
000170f0(5): MOV qword ptr [RSP + 0x78],R8
000170f5(4): SHL RAX,0x4
000170f9(3): ADD RAX,qword ptr [RCX]
000170fc(5): MOV qword ptr [RSP + 0x40],R9
00017101(5): MOV qword ptr [RSP + 0x30],RCX
00017106(11): MOV dword ptr [0x88 + RSP],0x0
00017111(3): MOV RAX,qword ptr [RAX]
00017114(5): MOV qword ptr [RSP + 0x48],RAX
00017119(7): MOVSXD RAX,dword ptr [0xe0 + RDI]
00017120(3): ADD RAX,R9
00017123(3): CMP RAX,R13
00017126(6): JGE 0x00017746
0001712c(5): MOV RAX,qword ptr [RSP + 0x60]
00017131(7): MOV RDX,qword ptr [0xb8 + R15]
00017138(4): MOV RCX,qword ptr [R15 + 0x48]
0001713c(3): MOV R12,qword ptr [RAX]
0001713f(4): MOV R14,qword ptr [RAX + 0x10]
00017143(5): MOV qword ptr [RSP + 0x68],RDX
00017148(5): MOV qword ptr [RSP + 0x70],RCX
0001714d(7): MOV EDX,dword ptr [0xa0 + R15]
00017154(3): TEST R12,R12
00017157(7): MOV qword ptr [0xb8 + R15],R14
0001715e(6): JZ 0x00017540
00017164(5): LEA RSI,[R12 + -0x1]
00017169(4): MOV qword ptr [R15 + 0x48],R12
0001716d(3): MOV RDI,R15
00017170(5): CALL 0x00014480
00017175(3): CMP R12,RBP
00017178(3): MOV R13D,EAX
0001717b(6): JZ 0x00017553
00017181(4): MOV RBP,qword ptr [R14 + R12*0x8]
00017185(3): TEST RBP,RBP
00017188(2): JZ 0x00017194
0001718a(4): TEST byte ptr [RBP + 0x68],0x40
0001718e(6): JNZ 0x000176b0
00017194(4): PXOR XMM0,XMM0
00017198(12): MOV qword ptr [0xa0 + RSP],0x0
000171a4(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
000171ac(5): CMP R12,qword ptr [RSP + 0x40]
000171b1(6): JGE 0x000174d8
000171b7(7): MOV ECX,dword ptr [0xe0 + R15]
000171be(2): TEST ECX,ECX
000171c0(6): JS 0x000174d8
000171c6(8): LEA RBX,[0x90 + RSP]
000171ce(8): LEA RAX,[0x8 + R12*0x8]
000171d6(4): MOV qword ptr [RSP],R12
000171da(9): MOV qword ptr [RSP + 0x20],0x0
000171e3(5): MOV qword ptr [RSP + 0x8],RBX
000171e8(8): LEA RBX,[0xb0 + RSP]
000171f0(5): MOV qword ptr [RSP + 0x10],RAX
000171f5(7): MOV RAX,qword ptr [0xb8 + R15]
000171fc(5): MOV qword ptr [RSP + 0x18],RBX
00017201(8): LEA RBX,[0x8c + RSP]
00017209(5): MOV qword ptr [RSP + 0x58],RBX
0001720e(5): MOV RCX,qword ptr [RSP + 0x10]
00017213(12): MOV qword ptr [0x98 + RSP],0x0
0001721f(4): MOV RSI,qword ptr [RAX + RCX*0x1]
00017223(3): TEST RSI,RSI
00017226(6): JZ 0x000175e8
0001722c(5): MOV RDI,qword ptr [RSP + 0x8]
00017231(4): ADD RSI,0x8
00017235(5): CALL 0x00012bc0
0001723a(2): TEST EAX,EAX
0001723c(7): MOV dword ptr [0x88 + RSP],EAX
00017243(6): JNZ 0x00017620
00017249(3): TEST RBP,RBP
0001724c(6): JZ 0x000173f8
00017252(5): CMP qword ptr [RBP + 0x28],0x0
00017257(5): MOV RAX,qword ptr [RSP + 0x18]
0001725c(4): PXOR XMM0,XMM0
00017260(7): MOV R12,qword ptr [0x98 + R15]
00017267(11): MOV dword ptr [0x8c + RSP],0x0
00017272(8): MOV qword ptr [RAX + 0x10],0x0
0001727a(3): MOVAPS xmmword ptr [RAX],XMM0
0001727d(6): JLE 0x000177b0
00017283(8): LEA RAX,[0xd8 + R12]
0001728b(2): XOR EBX,EBX
0001728d(5): MOV qword ptr [RSP + 0x28],RAX
00017292(2): JMP 0x000172d9
00017298(4): MOV RDX,qword ptr [RSP]
0001729c(3): MOV RDI,R15
0001729f(5): CALL 0x00014570
000172a4(2): TEST AL,AL
000172a6(2): JZ 0x000172cb
000172a8(8): LEA R13,[R14*0x8]
000172b0(5): MOV RAX,qword ptr [R12 + 0x18]
000172b5(5): MOV RDI,qword ptr [RSP + 0x8]
000172ba(4): MOV RSI,qword ptr [RAX + R13*0x1]
000172be(5): CALL 0x00011160
000172c3(2): TEST AL,AL
000172c5(6): JZ 0x00017608
000172cb(4): ADD RBX,0x1
000172cf(4): CMP RBX,qword ptr [RBP + 0x28]
000172d3(6): JGE 0x00017660
000172d9(4): MOV RAX,qword ptr [RBP + 0x30]
000172dd(4): MOV RDI,qword ptr [R12]
000172e1(4): MOV R14,qword ptr [RAX + RBX*0x8]
000172e5(3): MOV R13,R14
000172e8(4): SHL R13,0x4
000172ec(4): LEA RSI,[RDI + R13*0x1]
000172f0(4): TEST byte ptr [RSI + 0xa],0x10
000172f4(2): JZ 0x00017298
000172f6(4): MOV R8,qword ptr [RSP]
000172fa(5): MOV RSI,qword ptr [RSP + 0x28]
000172ff(3): MOV RCX,R15
00017302(3): MOV RDX,R14
00017305(5): CALL 0x00016e50
0001730a(3): CMP EAX,0x1
0001730d(6): JLE 0x000175d0
00017313(2): CDQE
00017315(4): ADD RAX,qword ptr [RSP]
00017319(5): MOV RDX,qword ptr [R12 + 0x18]
0001731e(8): LEA R13,[R14*0x8]
00017326(4): MOV RDX,qword ptr [RDX + R14*0x8]
0001732a(3): MOV RCX,RAX
0001732d(5): MOV qword ptr [RSP + 0x38],RAX
00017332(8): LEA R14,[RAX*0x8]
0001733a(7): MOV RAX,qword ptr [0xb8 + R15]
00017341(4): MOV RSI,qword ptr [RAX + RCX*0x8]
00017345(12): MOV qword ptr [0xb8 + RSP],0x0
00017351(3): TEST RSI,RSI
00017354(2): JZ 0x00017379
00017356(5): MOV RDI,qword ptr [RSP + 0x18]
0001735b(4): ADD RSI,0x8
0001735f(5): MOV qword ptr [RSP + 0x50],RDX
00017364(5): CALL 0x00012bc0
00017369(2): TEST EAX,EAX
0001736b(7): MOV dword ptr [0x8c + RSP],EAX
00017372(5): MOV RDX,qword ptr [RSP + 0x50]
00017377(2): JNZ 0x000173d0
00017379(5): MOV RDI,qword ptr [RSP + 0x18]
0001737e(3): MOV RSI,RDX
00017381(5): CALL 0x00011160
00017386(2): TEST AL,AL
00017388(6): JZ 0x00017608
0001738e(7): ADD R14,qword ptr [0xb8 + R15]
00017395(5): MOV RDX,qword ptr [RSP + 0x18]
0001739a(3): MOV RSI,R12
0001739d(5): MOV RDI,qword ptr [RSP + 0x58]
000173a2(5): CALL 0x00013cb0
000173a7(5): MOV RDX,qword ptr [RSP + 0x38]
000173ac(3): MOV qword ptr [R14],RAX
000173af(7): MOV RAX,qword ptr [0xb8 + R15]
000173b6(5): CMP qword ptr [RAX + RDX*0x8],0x0
000173bb(6): JNZ 0x000172b0
000173c1(7): MOV EDX,dword ptr [0x8c + RSP]
000173c8(2): TEST EDX,EDX
000173ca(6): JZ 0x000172b0
000173d0(8): MOV RDI,qword ptr [0xc0 + RSP]
000173d8(5): CALL 0x00002a10
000173dd(7): MOV EAX,dword ptr [0x8c + RSP]
000173e4(2): TEST EAX,EAX
000173e6(7): MOV dword ptr [0x88 + RSP],EAX
000173ed(6): JNZ 0x00017620
000173f3(5): NOP dword ptr [RAX + RAX*0x1]
000173f8(4): MOV RAX,qword ptr [RSP]
000173fc(9): CMP qword ptr [0x98 + RSP],0x0
00017405(4): LEA RBX,[RAX + 0x1]
00017409(3): MOV R12,RBX
0001740c(2): JZ 0x00017464
0001740e(7): MOV ECX,dword ptr [0x110 + RSP]
00017415(5): MOV RDX,qword ptr [RSP + 0x48]
0001741a(5): MOV RSI,qword ptr [RSP + 0x8]
0001741f(5): MOV RDI,qword ptr [RSP + 0x30]
00017424(5): CALL 0x00013050
00017429(2): TEST EAX,EAX
0001742b(7): MOV dword ptr [0x88 + RSP],EAX
00017432(6): JNZ 0x00017620
00017438(8): MOV R8D,dword ptr [0x110 + RSP]
00017440(5): MOV RCX,qword ptr [RSP + 0x48]
00017445(3): MOV RDX,RBX
00017448(5): MOV RSI,qword ptr [RSP + 0x8]
0001744d(3): MOV RDI,R15
00017450(5): CALL 0x00013f90
00017455(2): TEST EAX,EAX
00017457(7): MOV dword ptr [0x88 + RSP],EAX
0001745e(6): JNZ 0x00017620
00017464(7): MOV EDX,dword ptr [0xa0 + R15]
0001746b(4): MOV RSI,qword ptr [RSP]
0001746f(3): MOV RDI,R15
00017472(5): CALL 0x00014480
00017477(5): MOV RDX,qword ptr [RSP + 0x8]
0001747c(5): MOV RSI,qword ptr [RSP + 0x30]
00017481(8): LEA RDI,[0x88 + RSP]
00017489(2): MOV ECX,EAX
0001748b(5): CALL 0x000139f0
00017490(3): TEST RAX,RAX
00017493(3): MOV RBP,RAX
00017496(6): JZ 0x00017680
0001749c(7): MOV RAX,qword ptr [0xb8 + R15]
000174a3(5): MOV RDX,qword ptr [RSP + 0x10]
000174a8(9): MOV qword ptr [RSP + 0x20],0x0
000174b1(4): MOV qword ptr [RAX + RDX*0x1],RBP
000174b5(5): CMP qword ptr [RSP + 0x40],RBX
000174ba(2): JLE 0x000174d8
000174bc(7): MOVSXD RDX,dword ptr [0xe0 + R15]
000174c3(6): ADD qword ptr [RSP + 0x10],0x8
000174c9(5): CMP RDX,qword ptr [RSP + 0x20]
000174ce(4): MOV qword ptr [RSP],RBX
000174d2(6): JGE 0x0001720e
000174d8(8): MOV RDI,qword ptr [0xa0 + RSP]
000174e0(5): CALL 0x00002a10
000174e5(7): MOV RAX,qword ptr [0xb8 + R15]
000174ec(5): MOV RBX,qword ptr [RSP + 0x40]
000174f1(4): MOV RAX,qword ptr [RAX + RBX*0x8]
000174f5(3): TEST RAX,RAX
000174f8(6): JZ 0x000177d5
000174fe(5): MOV RBX,qword ptr [RSP + 0x60]
00017503(5): MOV RDX,qword ptr [RSP + 0x78]
00017508(4): LEA RSI,[RAX + 0x18]
0001750c(3): MOV qword ptr [RBX],R12
0001750f(5): MOV RBX,qword ptr [RSP + 0x68]
00017514(7): MOV qword ptr [0xb8 + R15],RBX
0001751b(5): MOV RBX,qword ptr [RSP + 0x70]
00017520(4): MOV qword ptr [R15 + 0x48],RBX
00017524(4): MOV RDI,qword ptr [RAX + 0x10]
00017528(5): CALL 0x000126a0
0001752d(3): TEST RAX,RAX
00017530(3): SETZ AL
00017533(3): MOVZX EAX,AL
00017536(5): JMP 0x00017634
00017540(4): LEA RSI,[RBP + -0x1]
00017544(4): MOV qword ptr [R15 + 0x48],RBP
00017548(3): MOV RDI,R15
0001754b(5): CALL 0x00014480
00017550(3): MOV R13D,EAX
00017553(5): MOV EDI,0x8
00017558(12): MOV qword ptr [0x90 + RSP],0x1
00017564(12): MOV qword ptr [0x98 + RSP],0x1
00017570(5): CALL 0x00002780
00017575(3): TEST RAX,RAX
00017578(8): MOV qword ptr [0xa0 + RSP],RAX
00017580(6): JZ 0x000177cb
00017586(3): MOV qword ptr [RAX],RBX
00017589(7): MOV ECX,dword ptr [0x110 + RSP]
00017590(8): LEA RBX,[0x90 + RSP]
00017598(5): MOV RDX,qword ptr [RSP + 0x48]
0001759d(5): MOV RDI,qword ptr [RSP + 0x30]
000175a2(3): MOV R12,RBP
000175a5(3): MOV RSI,RBX
000175a8(11): MOV dword ptr [0x88 + RSP],0x0
000175b3(5): CALL 0x00013050
000175b8(2): TEST EAX,EAX
000175ba(7): MOV dword ptr [0x88 + RSP],EAX
000175c1(6): JZ 0x000176dd
000175c7(2): JMP 0x00017620
000175d0(2): TEST EAX,EAX
000175d2(6): JNZ 0x000172a8
000175d8(4): MOV RSI,qword ptr [R12]
000175dc(3): ADD RSI,R13
000175df(5): JMP 0x00017298
000175e8(3): TEST RBP,RBP
000175eb(6): JNZ 0x00017252
000175f1(4): MOV RAX,qword ptr [RSP]
000175f5(4): LEA RBX,[RAX + 0x1]
000175f9(3): MOV R12,RBX
000175fc(5): JMP 0x00017464
00017608(8): MOV RDI,qword ptr [0xc0 + RSP]
00017610(5): CALL 0x00002a10
00017615(11): MOV dword ptr [0x88 + RSP],0xc
00017620(8): MOV RDI,qword ptr [0xa0 + RSP]
00017628(5): CALL 0x00002a10
0001762d(7): MOV EAX,dword ptr [0x88 + RSP]
00017634(8): MOV RBX,qword ptr [0xc8 + RSP]
0001763c(9): XOR RBX,qword ptr FS:[0x28]
00017645(6): JNZ 0x000177fc
0001764b(7): ADD RSP,0xd8
00017652(1): POP RBX
00017653(1): POP RBP
00017654(2): POP R12
00017656(2): POP R13
00017658(2): POP R14
0001765a(2): POP R15
0001765c(1): RET
00017660(8): MOV RDI,qword ptr [0xc0 + RSP]
00017668(5): CALL 0x00002a10
0001766d(11): MOV dword ptr [0x88 + RSP],0x0
00017678(5): JMP 0x000173f8
00017680(7): MOV EAX,dword ptr [0x88 + RSP]
00017687(2): TEST EAX,EAX
00017689(2): JNZ 0x00017620
0001768b(7): MOV RAX,qword ptr [0xb8 + R15]
00017692(5): MOV RDX,qword ptr [RSP + 0x10]
00017697(6): ADD qword ptr [RSP + 0x20],0x1
0001769d(8): MOV qword ptr [RAX + RDX*0x1],0x0
000176a5(5): JMP 0x000174b5
000176b0(8): LEA RBX,[0x90 + RSP]
000176b8(4): LEA RSI,[RBP + 0x8]
000176bc(3): MOV RDI,RBX
000176bf(5): CALL 0x00013800
000176c4(2): TEST EAX,EAX
000176c6(7): MOV dword ptr [0x88 + RSP],EAX
000176cd(6): JNZ 0x00017634
000176d3(4): TEST byte ptr [RBP + 0x68],0x40
000176d7(6): JZ 0x000171ac
000176dd(9): CMP qword ptr [0x98 + RSP],0x0
000176e6(2): JZ 0x00017712
000176e8(8): MOV R8D,dword ptr [0x110 + RSP]
000176f0(5): MOV RCX,qword ptr [RSP + 0x48]
000176f5(3): MOV RDX,R12
000176f8(3): MOV RSI,RBX
000176fb(3): MOV RDI,R15
000176fe(5): CALL 0x00013f90
00017703(2): TEST EAX,EAX
00017705(7): MOV dword ptr [0x88 + RSP],EAX
0001770c(6): JNZ 0x00017620
00017712(5): MOV RSI,qword ptr [RSP + 0x30]
00017717(8): LEA RDI,[0x88 + RSP]
0001771f(3): MOV ECX,R13D
00017722(3): MOV RDX,RBX
00017725(5): CALL 0x000139f0
0001772a(3): TEST RAX,RAX
0001772d(3): MOV RBP,RAX
00017730(6): JZ 0x000177b7
00017736(7): MOV RAX,qword ptr [0xb8 + R15]
0001773d(4): MOV qword ptr [RAX + R12*0x8],RBP
00017741(5): JMP 0x000171ac
00017746(4): LEA R12,[RAX + 0x1]
0001774a(10): MOV RAX,0x7fffffffffffffff
00017754(3): SUB RAX,R13
00017757(3): CMP RAX,R12
0001775a(2): JL 0x000177cb
0001775c(5): LEA R14,[R13 + R12*0x1]
00017761(10): MOV RAX,0x1fffffffffffffff
0001776b(3): CMP R14,RAX
0001776e(2): JA 0x000177cb
00017770(5): MOV RAX,qword ptr [RSP + 0x60]
00017775(8): LEA RSI,[R14*0x8]
0001777d(4): MOV RDI,qword ptr [RAX + 0x10]
00017781(5): CALL 0x00002830
00017786(3): TEST RAX,RAX
00017789(2): JZ 0x000177cb
0001778b(5): MOV RCX,qword ptr [RSP + 0x60]
00017790(8): LEA RDX,[R12*0x8]
00017798(4): LEA RDI,[RAX + R13*0x8]
0001779c(2): XOR ESI,ESI
0001779e(4): MOV qword ptr [RCX + 0x10],RAX
000177a2(4): MOV qword ptr [RCX + 0x8],R14
000177a6(5): CALL 0x00002620
000177ab(5): JMP 0x0001712c
000177b0(2): XOR EDI,EDI
000177b2(5): JMP 0x00017668
000177b7(7): MOV ESI,dword ptr [0x88 + RSP]
000177be(2): TEST ESI,ESI
000177c0(6): JZ 0x00017736
000177c6(5): JMP 0x00017620
000177cb(5): MOV EAX,0xc
000177d0(5): JMP 0x00017634
000177d5(5): MOV RAX,qword ptr [RSP + 0x60]
000177da(3): MOV qword ptr [RAX],R12
000177dd(5): MOV RAX,qword ptr [RSP + 0x68]
000177e2(7): MOV qword ptr [0xb8 + R15],RAX
000177e9(5): MOV RAX,qword ptr [RSP + 0x70]
000177ee(4): MOV qword ptr [R15 + 0x48],RAX
000177f2(5): MOV EAX,0x1
000177f7(5): JMP 0x00017634
000177fc(5): CALL 0x00002560
00017801(5): NOP dword ptr [RAX + RAX*0x1]
00017806(10): NOP word ptr CS:[RAX + RAX*0x1]
00017810(1): PUSH RBP
00017811(3): MOV RBP,RSP
00017814(2): PUSH R15
00017816(2): PUSH R14
00017818(2): PUSH R13
0001781a(2): PUSH R12
0001781c(3): MOV R13,RCX
0001781f(1): PUSH RBX
00017820(3): MOV R12,RSI
00017823(7): SUB RSP,0xb8
0001782a(7): MOV qword ptr [-0x98 + RBP],RDX
00017831(8): MOV qword ptr [RBP + -0x50],0x0
00017839(9): MOV RAX,qword ptr FS:[0x28]
00017842(4): MOV qword ptr [RBP + -0x38],RAX
00017846(2): XOR EAX,EAX
00017848(3): MOV RAX,qword ptr [RDI]
0001784b(3): TEST R8B,R8B
0001784e(8): MOV qword ptr [RBP + -0x48],0x2
00017856(8): MOV qword ptr [RBP + -0x40],0x0
0001785e(7): MOV qword ptr [-0x90 + RBP],RAX
00017865(6): JZ 0x0001800d
0001786b(5): MOV EDI,0x60
00017870(5): CALL 0x00002780
00017875(4): LEA RCX,[RBP + -0x50]
00017879(3): TEST RAX,RAX
0001787c(4): MOV qword ptr [RBP + -0x40],RAX
00017880(7): MOV qword ptr [-0x88 + RBP],RCX
00017887(6): JZ 0x00017fac
0001788d(7): MOV RAX,qword ptr [-0x90 + RBP]
00017894(4): PXOR XMM0,XMM0
00017898(8): MOV qword ptr [RBP + -0x60],0x0
000178a0(7): MOV RBX,qword ptr [0x90 + RAX]
000178a7(7): MOV RAX,qword ptr [-0x98 + RBP]
000178ae(4): MOVAPS xmmword ptr [RBP + -0x70],XMM0
000178b2(4): SHL RAX,0x4
000178b6(6): CMP RAX,0xfbf
000178bc(7): MOV qword ptr [-0xb8 + RBP],RAX
000178c3(6): JA 0x00017fb6
000178c9(4): ADD RAX,0x10
000178cd(7): MOV byte ptr [-0xc9 + RBP],0x0
000178d4(3): SUB RSP,RAX
000178d7(5): LEA RAX,[RSP + 0xf]
000178dc(4): AND RAX,-0x10
000178e0(7): MOV qword ptr [-0xc0 + RBP],RAX
000178e7(7): MOV RDX,qword ptr [-0xb8 + RBP]
000178ee(7): MOV RDI,qword ptr [-0xc0 + RBP]
000178f5(3): MOV RSI,R13
000178f8(5): CALL 0x00002710
000178fd(4): LEA RAX,[RBP + -0x70]
00017901(4): MOV RCX,qword ptr [R13]
00017905(7): MOV qword ptr [-0xa8 + RBP],RAX
0001790c(4): ADD RAX,0x10
00017910(4): MOV qword ptr [RBP + -0x78],RCX
00017914(7): MOV qword ptr [-0xc8 + RBP],RAX
0001791b(4): LEA RAX,[RBP + -0x78]
0001791f(7): MOV qword ptr [-0xb0 + RBP],RAX
00017926(5): JMP 0x00017a09
00017930(3): CMP ESI,0x9
00017933(6): JZ 0x00017b20
00017939(3): CMP RAX,RCX
0001793c(2): JNZ 0x0001794c
0001793e(8): CMP qword ptr [0xb0 + R12],RBX
00017946(6): JZ 0x00017d20
0001794c(8): MOV R14,qword ptr [0x98 + R12]
00017954(3): MOV RDI,qword ptr [R14]
00017957(4): LEA RSI,[RDI + R9*0x1]
0001795b(4): MOVZX EAX,byte ptr [RSI + 0x8]
0001795f(2): TEST AL,0x8
00017961(6): JNZ 0x00017a70
00017967(4): TEST byte ptr [RSI + 0xa],0x10
0001796b(6): JNZ 0x00017b70
00017971(2): CMP AL,0x4
00017973(6): JZ 0x00017bb0
00017979(4): MOV RCX,qword ptr [RBP + -0x78]
0001797d(3): MOV RDX,RCX
00017980(3): MOV RDI,R12
00017983(7): MOV qword ptr [-0xa0 + RBP],RCX
0001798a(5): CALL 0x00014570
0001798f(2): TEST AL,AL
00017991(7): MOV RCX,qword ptr [-0xa0 + RBP]
00017998(6): JZ 0x00017de8
0001799e(4): MOV RAX,qword ptr [R14 + 0x18]
000179a2(4): LEA RDX,[RCX + 0x1]
000179a6(4): MOV RBX,qword ptr [RAX + R15*0x8]
000179aa(8): CMP qword ptr [-0x88 + RBP],0x0
000179b2(4): MOV qword ptr [RBP + -0x78],RDX
000179b6(2): JZ 0x000179f4
000179b8(8): CMP RDX,qword ptr [0xa8 + R12]
000179c0(6): JG 0x00017df6
000179c6(8): MOV RAX,qword ptr [0xb8 + R12]
000179ce(4): MOV RAX,qword ptr [RAX + RDX*0x8]
000179d2(3): TEST RAX,RAX
000179d5(6): JZ 0x00017df6
000179db(4): MOV RDI,qword ptr [RAX + 0x10]
000179df(4): LEA RSI,[RAX + 0x18]
000179e3(3): MOV RDX,RBX
000179e6(5): CALL 0x000126a0
000179eb(3): TEST RAX,RAX
000179ee(6): JZ 0x00017df6
000179f4(8): MOV qword ptr [RBP + -0x68],0x0
000179fc(3): TEST RBX,RBX
000179ff(6): JS 0x00017dda
00017a05(4): MOV RCX,qword ptr [RBP + -0x78]
00017a09(4): MOV RAX,qword ptr [R13 + 0x8]
00017a0d(3): CMP RAX,RCX
00017a10(6): JL 0x00017f00
00017a16(7): MOV RDI,qword ptr [-0x90 + RBP]
00017a1d(3): MOV R9,RBX
00017a20(3): MOV R15,RBX
00017a23(4): SHL R9,0x4
00017a27(3): MOV RDX,qword ptr [RDI]
00017a2a(3): ADD RDX,R9
00017a2d(4): MOVZX ESI,byte ptr [RDX + 0x8]
00017a31(3): CMP ESI,0x8
00017a34(6): JNZ 0x00017930
00017a3a(3): MOV RDX,qword ptr [RDX]
00017a3d(4): ADD RDX,0x1
00017a41(7): CMP qword ptr [-0x98 + RBP],RDX
00017a48(6): JLE 0x00017939
00017a4e(4): SHL RDX,0x4
00017a52(3): ADD RDX,R13
00017a55(8): MOV qword ptr [RDX + 0x8],-0x1
00017a5d(3): MOV qword ptr [RDX],RCX
00017a60(4): MOV RAX,qword ptr [R13 + 0x8]
00017a64(5): JMP 0x00017939
00017a70(8): MOV RAX,qword ptr [0xb8 + R12]
00017a78(4): MOV RDX,qword ptr [RBP + -0x78]
00017a7c(3): MOV RSI,RBX
00017a7f(7): MOV RDI,qword ptr [-0xa8 + RBP]
00017a86(4): MOV R9,qword ptr [RAX + RDX*0x8]
00017a8a(4): MOV RAX,qword ptr [R14 + 0x28]
00017a8e(4): LEA RDX,[RBX + RBX*0x2]
00017a92(7): MOV qword ptr [-0xa0 + RBP],R9
00017a99(4): LEA R15,[RAX + RDX*0x8]
00017a9d(5): CALL 0x00011160
00017aa2(2): TEST AL,AL
00017aa4(7): MOV R9,qword ptr [-0xa0 + RBP]
00017aab(6): JZ 0x00017f88
00017ab1(4): MOV R10,qword ptr [R15 + 0x8]
00017ab5(3): TEST R10,R10
00017ab8(6): JLE 0x00017de8
00017abe(4): MOV R15,qword ptr [R15 + 0x10]
00017ac2(4): MOV R11,qword ptr [R9 + 0x10]
00017ac6(4): LEA R14,[R9 + 0x18]
00017aca(7): MOV RBX,-0x1
00017ad1(3): XOR R9D,R9D
00017ad4(7): MOV qword ptr [-0xa0 + RBP],R12
00017adb(5): NOP dword ptr [RAX + RAX*0x1]
00017ae0(4): MOV R12,qword ptr [R15 + R9*0x8]
00017ae4(3): MOV RSI,R14
00017ae7(3): MOV RDI,R11
00017aea(3): MOV RDX,R12
00017aed(5): CALL 0x000126a0
00017af2(3): TEST RAX,RAX
00017af5(2): JZ 0x00017b04
00017af7(4): CMP RBX,-0x1
00017afb(6): JNZ 0x00017c50
00017b01(3): MOV RBX,R12
00017b04(4): ADD R9,0x1
00017b08(3): CMP R10,R9
00017b0b(2): JNZ 0x00017ae0
00017b0d(7): MOV R12,qword ptr [-0xa0 + RBP]
00017b14(5): JMP 0x000179fc
00017b20(3): MOV RDI,qword ptr [RDX]
00017b23(4): LEA RSI,[RDI + 0x1]
00017b27(7): CMP qword ptr [-0x98 + RBP],RSI
00017b2e(6): JLE 0x00017939
00017b34(4): SHL RSI,0x4
00017b38(5): LEA RAX,[R13 + RSI*0x1]
00017b3d(3): CMP qword ptr [RAX],RCX
00017b40(6): JL 0x00017ec0
00017b46(4): TEST byte ptr [RDX + 0xa],0x8
00017b4a(2): JZ 0x00017b5e
00017b4c(7): MOV RDI,qword ptr [-0xc0 + RBP]
00017b53(5): CMP qword ptr [RDI + RSI*0x1],-0x1
00017b58(6): JNZ 0x00017f4b
00017b5e(4): MOV qword ptr [RAX + 0x8],RCX
00017b62(4): MOV RAX,qword ptr [R13 + 0x8]
00017b66(5): JMP 0x00017939
00017b70(4): MOV R8,qword ptr [RBP + -0x78]
00017b74(7): LEA RSI,[0xd8 + R14]
00017b7b(3): MOV RCX,R12
00017b7e(3): MOV RDX,RBX
00017b81(7): MOV qword ptr [-0xa0 + RBP],R9
00017b88(5): CALL 0x00016e50
00017b8d(3): MOVSXD RCX,EAX
00017b90(3): TEST RCX,RCX
00017b93(6): JNZ 0x00017d91
00017b99(7): MOV R9,qword ptr [-0xa0 + RBP]
00017ba0(3): MOV RSI,qword ptr [R14]
00017ba3(4): MOV RCX,qword ptr [RBP + -0x78]
00017ba7(3): ADD RSI,R9
00017baa(5): JMP 0x0001797d
00017bb0(3): MOV RAX,qword ptr [RSI]
00017bb3(4): ADD RAX,0x1
00017bb7(4): SHL RAX,0x4
00017bbb(3): ADD RAX,R13
00017bbe(4): MOV RDX,qword ptr [RAX + 0x8]
00017bc2(3): MOV RDI,qword ptr [RAX]
00017bc5(3): MOV RCX,RDX
00017bc8(3): SUB RCX,RDI
00017bcb(8): CMP qword ptr [-0x88 + RBP],0x0
00017bd3(6): JZ 0x00017d88
00017bd9(4): CMP RDI,-0x1
00017bdd(6): JZ 0x00017df6
00017be3(4): CMP RDX,-0x1
00017be7(6): JZ 0x00017df6
00017bed(3): TEST RCX,RCX
00017bf0(6): JZ 0x00017e40
00017bf6(4): MOV R15,qword ptr [RBP + -0x78]
00017bfa(5): MOV RDX,qword ptr [R12 + 0x30]
00017bff(5): MOV RAX,qword ptr [R12 + 0x8]
00017c04(3): SUB RDX,R15
00017c07(3): CMP RCX,RDX
00017c0a(6): JG 0x00017df6
00017c10(4): LEA RSI,[RAX + R15*0x1]
00017c14(3): ADD RDI,RAX
00017c17(3): MOV RDX,RCX
00017c1a(7): MOV qword ptr [-0xa0 + RBP],RCX
00017c21(5): CALL 0x00002680
00017c26(2): TEST EAX,EAX
00017c28(7): MOV RCX,qword ptr [-0xa0 + RBP]
00017c2f(6): JNZ 0x00017df6
00017c35(4): MOV RAX,qword ptr [R14 + 0x18]
00017c39(4): LEA RDX,[R15 + RCX*0x1]
00017c3d(4): MOV RBX,qword ptr [RAX + RBX*0x8]
00017c41(5): JMP 0x000179aa
00017c50(7): MOV RSI,qword ptr [-0xc8 + RBP]
00017c57(4): MOV RDI,qword ptr [RBP + -0x68]
00017c5b(3): MOV RDX,RBX
00017c5e(3): MOV R14,R12
00017c61(7): MOV R12,qword ptr [-0xa0 + RBP]
00017c68(5): CALL 0x000126a0
00017c6d(3): TEST RAX,RAX
00017c70(6): JNZ 0x00017e30
00017c76(7): MOV RCX,qword ptr [-0x88 + RBP]
00017c7d(3): TEST RCX,RCX
00017c80(6): JZ 0x000179fc
00017c86(3): MOV R15,qword ptr [RCX]
00017c89(4): MOV RDX,qword ptr [RBP + -0x78]
00017c8d(4): LEA RAX,[R15 + 0x1]
00017c91(4): CMP RAX,qword ptr [RCX + 0x8]
00017c95(3): MOV qword ptr [RCX],RAX
00017c98(6): JZ 0x0001801d
00017c9e(4): MOV RAX,qword ptr [RCX + 0x10]
00017ca2(4): LEA R15,[R15 + R15*0x2]
00017ca6(4): SHL R15,0x4
00017caa(3): ADD R15,RAX
00017cad(4): MOV qword ptr [R15 + 0x8],R14
00017cb1(7): MOV R14,qword ptr [-0xb8 + RBP]
00017cb8(3): MOV qword ptr [R15],RDX
00017cbb(3): MOV RDI,R14
00017cbe(5): CALL 0x00002780
00017cc3(3): TEST RAX,RAX
00017cc6(4): MOV qword ptr [R15 + 0x10],RAX
00017cca(2): JZ 0x00017cf2
00017ccc(3): MOV RDX,R14
00017ccf(3): MOV RSI,R13
00017cd2(3): MOV RDI,RAX
00017cd5(5): CALL 0x00002710
00017cda(7): MOV RSI,qword ptr [-0xa8 + RBP]
00017ce1(4): LEA RDI,[R15 + 0x18]
00017ce5(5): CALL 0x00013800
00017cea(2): TEST EAX,EAX
00017cec(6): JZ 0x000179fc
00017cf2(4): MOV RDI,qword ptr [RBP + -0x60]
00017cf6(5): CALL 0x00002a10
00017cfb(7): CMP byte ptr [-0xc9 + RBP],0x0
00017d02(6): JNZ 0x0001809b
00017d08(7): MOV RDI,qword ptr [-0x88 + RBP]
00017d0f(5): CALL 0x00015d60
00017d14(5): MOV EAX,0xc
00017d19(5): JMP 0x00017f29
00017d20(8): CMP qword ptr [-0x88 + RBP],0x0
00017d28(6): JZ 0x0001805c
00017d2e(7): MOV RCX,qword ptr [-0x98 + RBP]
00017d35(3): TEST RCX,RCX
00017d38(2): JZ 0x00017d5a
00017d3a(3): MOV RAX,R13
00017d3d(2): XOR EDX,EDX
00017d3f(1): NOP
00017d40(4): CMP qword ptr [RAX],0x0
00017d44(2): JS 0x00017d4d
00017d46(5): CMP qword ptr [RAX + 0x8],-0x1
00017d4b(2): JZ 0x00017da0
00017d4d(4): ADD RDX,0x1
00017d51(4): ADD RAX,0x10
00017d55(3): CMP RCX,RDX
00017d58(2): JNZ 0x00017d40
00017d5a(4): MOV RDI,qword ptr [RBP + -0x60]
00017d5e(5): CALL 0x00002a10
00017d63(7): CMP byte ptr [-0xc9 + RBP],0x0
00017d6a(6): JNZ 0x000180e4
00017d70(7): MOV RDI,qword ptr [-0x88 + RBP]
00017d77(5): CALL 0x00015d60
00017d7c(2): XOR EAX,EAX
00017d7e(5): JMP 0x00017f29
00017d88(3): TEST RCX,RCX
00017d8b(6): JZ 0x00017e40
00017d91(4): MOV R15,qword ptr [RBP + -0x78]
00017d95(5): JMP 0x00017c35
00017da0(7): MOV RDI,qword ptr [-0x88 + RBP]
00017da7(7): MOV R9,qword ptr [-0xa8 + RBP]
00017dae(3): MOV R8,R13
00017db1(7): MOV RCX,qword ptr [-0x98 + RBP]
00017db8(7): MOV RDX,qword ptr [-0xb0 + RBP]
00017dbf(4): LEA RSI,[RDI + 0x10]
00017dc3(5): CALL 0x00015db0
00017dc8(3): MOV R9,RAX
00017dcb(3): MOV RBX,RAX
00017dce(3): MOV R15,RAX
00017dd1(4): SHL R9,0x4
00017dd5(5): JMP 0x0001794c
00017dda(4): CMP RBX,-0x2
00017dde(6): JZ 0x00017f88
00017de4(4): NOP dword ptr [RAX]
00017de8(8): CMP qword ptr [-0x88 + RBP],0x0
00017df0(6): JZ 0x000180ac
00017df6(7): MOV RDI,qword ptr [-0x88 + RBP]
00017dfd(7): MOV RCX,qword ptr [-0x98 + RBP]
00017e04(4): LEA RDX,[RBP + -0x78]
00017e08(7): MOV R9,qword ptr [-0xa8 + RBP]
00017e0f(3): MOV R8,R13
00017e12(4): LEA RSI,[RDI + 0x10]
00017e16(5): CALL 0x00015db0
00017e1b(4): MOV RCX,qword ptr [RBP + -0x78]
00017e1f(3): MOV RBX,RAX
00017e22(5): JMP 0x0001791b
00017e30(3): MOV RBX,R14
00017e33(5): JMP 0x000179fc
00017e40(7): MOV RDI,qword ptr [-0xa8 + RBP]
00017e47(3): MOV RSI,RBX
00017e4a(7): MOV qword ptr [-0xa0 + RBP],R9
00017e51(5): CALL 0x00011160
00017e56(2): TEST AL,AL
00017e58(6): JZ 0x00017f88
00017e5e(4): MOV RDX,qword ptr [R14 + 0x28]
00017e62(4): LEA RAX,[RBX + RBX*0x2]
00017e66(4): MOV RCX,qword ptr [RBP + -0x78]
00017e6a(4): LEA RAX,[RDX + RAX*0x8]
00017e6e(7): MOV qword ptr [-0xd8 + RBP],RCX
00017e75(4): MOV RAX,qword ptr [RAX + 0x10]
00017e79(3): MOV RBX,qword ptr [RAX]
00017e7c(8): MOV RAX,qword ptr [0xb8 + R12]
00017e84(4): MOV RAX,qword ptr [RAX + RCX*0x8]
00017e88(3): MOV RDX,RBX
00017e8b(4): MOV RDI,qword ptr [RAX + 0x10]
00017e8f(4): LEA RSI,[RAX + 0x18]
00017e93(5): CALL 0x000126a0
00017e98(3): TEST RAX,RAX
00017e9b(6): JNZ 0x000179fc
00017ea1(7): MOV R9,qword ptr [-0xa0 + RBP]
00017ea8(3): MOV RSI,qword ptr [R14]
00017eab(7): MOV RCX,qword ptr [-0xd8 + RBP]
00017eb2(3): ADD RSI,R9
00017eb5(5): JMP 0x0001797d
00017ec0(7): MOV RDX,qword ptr [-0xb8 + RBP]
00017ec7(7): MOV RDI,qword ptr [-0xc0 + RBP]
00017ece(3): MOV RSI,R13
00017ed1(4): MOV qword ptr [RAX + 0x8],RCX
00017ed5(7): MOV qword ptr [-0xd8 + RBP],R9
00017edc(7): MOV qword ptr [-0xa0 + RBP],RCX
00017ee3(5): CALL 0x00002710
00017ee8(4): MOV RAX,qword ptr [R13 + 0x8]
00017eec(7): MOV RCX,qword ptr [-0xa0 + RBP]
00017ef3(7): MOV R9,qword ptr [-0xd8 + RBP]
00017efa(5): JMP 0x00017939
00017f00(4): MOV RDI,qword ptr [RBP + -0x60]
00017f04(5): CALL 0x00002a10
00017f09(7): CMP byte ptr [-0xc9 + RBP],0x0
00017f10(6): JNZ 0x00017fec
00017f16(7): MOV RDI,qword ptr [-0x88 + RBP]
00017f1d(3): TEST RDI,RDI
00017f20(2): JZ 0x00017f27
00017f22(5): CALL 0x00015d60
00017f27(2): XOR EAX,EAX
00017f29(4): MOV RBX,qword ptr [RBP + -0x38]
00017f2d(9): XOR RBX,qword ptr FS:[0x28]
00017f36(6): JNZ 0x000180f5
00017f3c(4): LEA RSP,[RBP + -0x28]
00017f40(1): POP RBX
00017f41(2): POP R12
00017f43(2): POP R13
00017f45(2): POP R14
00017f47(2): POP R15
00017f49(1): POP RBP
00017f4a(1): RET
00017f4b(7): MOV RDX,qword ptr [-0xb8 + RBP]
00017f52(3): MOV RSI,RDI
00017f55(3): MOV RDI,R13
00017f58(7): MOV qword ptr [-0xd8 + RBP],RCX
00017f5f(7): MOV qword ptr [-0xa0 + RBP],R9
00017f66(5): CALL 0x00002710
00017f6b(4): MOV RAX,qword ptr [R13 + 0x8]
00017f6f(7): MOV R9,qword ptr [-0xa0 + RBP]
00017f76(7): MOV RCX,qword ptr [-0xd8 + RBP]
00017f7d(5): JMP 0x00017939
00017f88(4): MOV RDI,qword ptr [RBP + -0x60]
00017f8c(5): CALL 0x00002a10
00017f91(7): CMP byte ptr [-0xc9 + RBP],0x0
00017f98(6): JNZ 0x0001809b
00017f9e(8): CMP qword ptr [-0x88 + RBP],0x0
00017fa6(6): JNZ 0x00017d08
00017fac(5): MOV EAX,0xc
00017fb1(5): JMP 0x00017f29
00017fb6(7): MOV RDI,qword ptr [-0xb8 + RBP]
00017fbd(5): CALL 0x00002780
00017fc2(3): TEST RAX,RAX
00017fc5(7): MOV qword ptr [-0xc0 + RBP],RAX
00017fcc(7): MOV byte ptr [-0xc9 + RBP],0x1
00017fd3(6): JNZ 0x000178e7
00017fd9(7): MOV RDI,qword ptr [-0x88 + RBP]
00017fe0(3): TEST RDI,RDI
00017fe3(2): JZ 0x00017fac
00017fe5(5): CALL 0x00015d60
00017fea(2): JMP 0x00017fac
00017fec(7): MOV RDI,qword ptr [-0xc0 + RBP]
00017ff3(5): CALL 0x00002a10
00017ff8(7): MOV RDI,qword ptr [-0x88 + RBP]
00017fff(3): TEST RDI,RDI
00018002(6): JNZ 0x00017f22
00018008(5): JMP 0x00017f27
0001800d(11): MOV qword ptr [-0x88 + RBP],0x0
00018018(5): JMP 0x0001788d
0001801d(4): LEA RSI,[RAX + RAX*0x2]
00018021(7): MOV RAX,qword ptr [-0x88 + RBP]
00018028(7): MOV qword ptr [-0xa0 + RBP],RDX
0001802f(4): SHL RSI,0x5
00018033(4): MOV RDI,qword ptr [RAX + 0x10]
00018037(5): CALL 0x00002830
0001803c(3): TEST RAX,RAX
0001803f(2): JZ 0x00018085
00018041(7): MOV RCX,qword ptr [-0x88 + RBP]
00018048(7): MOV RDX,qword ptr [-0xa0 + RBP]
0001804f(4): SHL qword ptr [RCX + 0x8],1
00018053(4): MOV qword ptr [RCX + 0x10],RAX
00018057(5): JMP 0x00017ca2
0001805c(4): MOV RDI,qword ptr [RBP + -0x60]
00018060(5): CALL 0x00002a10
00018065(7): CMP byte ptr [-0xc9 + RBP],0x0
0001806c(6): JZ 0x00017f27
00018072(7): MOV RDI,qword ptr [-0xc0 + RBP]
00018079(5): CALL 0x00002a10
0001807e(2): XOR EAX,EAX
00018080(5): JMP 0x00017f29
00018085(4): MOV RDI,qword ptr [RBP + -0x60]
00018089(5): CALL 0x00002a10
0001808e(7): CMP byte ptr [-0xc9 + RBP],0x0
00018095(6): JZ 0x00017d08
0001809b(7): MOV RDI,qword ptr [-0xc0 + RBP]
000180a2(5): CALL 0x00002a10
000180a7(5): JMP 0x00017f9e
000180ac(4): MOV RDI,qword ptr [RBP + -0x60]
000180b0(5): CALL 0x00002a10
000180b5(7): CMP byte ptr [-0xc9 + RBP],0x0
000180bc(5): MOV EAX,0x1
000180c1(6): JZ 0x00017f29
000180c7(7): MOV RDI,qword ptr [-0xc0 + RBP]
000180ce(6): MOV dword ptr [-0x88 + RBP],EAX
000180d4(5): CALL 0x00002a10
000180d9(6): MOV EAX,dword ptr [-0x88 + RBP]
000180df(5): JMP 0x00017f29
000180e4(7): MOV RDI,qword ptr [-0xc0 + RBP]
000180eb(5): CALL 0x00002a10
000180f0(5): JMP 0x00017d70
000180f5(5): CALL 0x00002560
000180fa(6): NOP word ptr [RAX + RAX*0x1]
00018100(2): PUSH R15
00018102(2): PUSH R14
00018104(3): MOV R14,RCX
00018107(2): PUSH R13
00018109(2): PUSH R12
0001810b(3): MOV R13,RSI
0001810e(1): PUSH RBP
0001810f(1): PUSH RBX
00018110(4): LEA RSI,[RDX + 0x10]
00018114(3): MOV RBP,RDX
00018117(3): MOV R9,R8
0001811a(3): MOV R12,R8
0001811d(4): SUB RSP,0x20
00018121(4): MOV RCX,qword ptr [RDX + 0x8]
00018125(3): MOV R8,R14
00018128(2): PUSH 0x8
0001812a(3): MOV RDX,qword ptr [RDX]
0001812d(3): MOV RBX,RDI
00018130(5): CALL 0x000170b0
00018135(2): TEST EAX,EAX
00018137(1): POP RDX
00018138(1): POP RCX
00018139(2): JZ 0x00018150
0001813b(4): ADD RSP,0x18
0001813f(1): POP RBX
00018140(1): POP RBP
00018141(2): POP R12
00018143(2): POP R13
00018145(2): POP R14
00018147(2): POP R15
00018149(1): RET
00018150(7): MOV RAX,qword ptr [0xc8 + RBX]
00018157(7): MOV RDX,qword ptr [0xd0 + RBX]
0001815e(4): MOV R15,qword ptr [RBP + 0x8]
00018162(4): MOV RCX,qword ptr [R13]
00018166(7): MOV RDI,qword ptr [0xd8 + RBX]
0001816d(3): CMP RAX,RDX
00018170(3): MOV RSI,R15
00018173(6): JGE 0x00018210
00018179(4): LEA RDX,[RAX + RAX*0x4]
0001817d(4): SHL RDX,0x3
00018181(3): TEST RAX,RAX
00018184(2): JLE 0x00018191
00018186(5): LEA R8,[RDI + RDX*0x1 + -0x28]
0001818b(4): CMP R12,qword ptr [R8 + 0x8]
0001818f(2): JZ 0x00018200
00018191(3): ADD RDI,RDX
00018194(2): XOR EDX,EDX
00018196(3): CMP R15,RCX
00018199(3): SETZ DL
0001819c(4): ADD RAX,0x1
000181a0(3): MOV qword ptr [RDI],R14
000181a3(2): NEG EDX
000181a5(4): MOV qword ptr [RDI + 0x8],R12
000181a9(4): MOV qword ptr [RDI + 0x10],RCX
000181ad(4): MOV word ptr [RDI + 0x22],DX
000181b1(4): MOV qword ptr [RDI + 0x18],R15
000181b5(7): MOV qword ptr [0xc8 + RBX],RAX
000181bc(4): MOV byte ptr [RDI + 0x20],0x0
000181c0(3): MOV RAX,R15
000181c3(7): MOVSXD RDX,dword ptr [0xe0 + RBX]
000181ca(3): SUB RAX,RCX
000181cd(3): CMP RDX,RAX
000181d0(2): JGE 0x000181dc
000181d2(3): SUB R15D,ECX
000181d5(7): MOV dword ptr [0xe0 + RBX],R15D
000181dc(3): ADD RSI,R12
000181df(4): SUB RSI,qword ptr [R13]
000181e3(4): ADD RSP,0x18
000181e7(3): MOV RDI,RBX
000181ea(1): POP RBX
000181eb(1): POP RBP
000181ec(2): POP R12
000181ee(2): POP R13
000181f0(2): POP R14
000181f2(2): POP R15
000181f4(5): JMP 0x00011d30
00018200(5): MOV byte ptr [R8 + 0x20],0x1
00018205(2): JMP 0x00018191
00018210(4): LEA RSI,[RDX + RDX*0x4]
00018214(5): MOV qword ptr [RSP + 0x8],RCX
00018219(4): SHL RSI,0x4
0001821d(5): CALL 0x00002830
00018222(3): TEST RAX,RAX
00018225(5): MOV RCX,qword ptr [RSP + 0x8]
0001822a(2): JZ 0x00018280
0001822c(7): MOV RSI,qword ptr [0xc8 + RBX]
00018233(7): MOV RDX,qword ptr [0xd0 + RBX]
0001823a(7): MOV qword ptr [0xd8 + RBX],RAX
00018241(5): MOV qword ptr [RSP + 0x8],RCX
00018246(4): LEA RSI,[RSI + RSI*0x4]
0001824a(4): LEA RDX,[RDX + RDX*0x4]
0001824e(4): LEA RDI,[RAX + RSI*0x8]
00018252(4): SHL RDX,0x3
00018256(2): XOR ESI,ESI
00018258(5): CALL 0x00002620
0001825d(7): SHL qword ptr [0xd0 + RBX],1
00018264(7): MOV RAX,qword ptr [0xc8 + RBX]
0001826b(7): MOV RDI,qword ptr [0xd8 + RBX]
00018272(4): MOV RSI,qword ptr [RBP + 0x8]
00018276(5): MOV RCX,qword ptr [RSP + 0x8]
0001827b(5): JMP 0x00018179
00018280(7): MOV RDI,qword ptr [0xd8 + RBX]
00018287(5): CALL 0x00002a10
0001828c(5): MOV EAX,0xc
00018291(5): JMP 0x0001813b
000182a0(2): PUSH R15
000182a2(2): PUSH R14
000182a4(2): PUSH R13
000182a6(2): PUSH R12
000182a8(1): PUSH RBP
000182a9(1): PUSH RBX
000182aa(7): SUB RSP,0xb8
000182b1(4): MOV R15,qword ptr [RDI + 0x48]
000182b5(9): MOV RAX,qword ptr FS:[0x28]
000182be(8): MOV qword ptr [0xa8 + RSP],RAX
000182c6(2): XOR EAX,EAX
000182c8(4): CMP qword ptr [RSI],0x0
000182cc(7): MOV RAX,qword ptr [0x98 + RDI]
000182d3(5): MOV qword ptr [RSP + 0x48],RSI
000182d8(5): MOV qword ptr [RSP + 0x40],RDX
000182dd(5): MOV qword ptr [RSP + 0x38],RAX
000182e2(6): JLE 0x00018610
000182e8(8): LEA RAX,[R15*0x8]
000182f0(3): MOV R14,RDI
000182f3(8): MOV qword ptr [RSP],0x0
000182fb(5): MOV qword ptr [RSP + 0x8],R15
00018300(5): MOV qword ptr [RSP + 0x60],RAX
00018305(8): LEA RAX,[0x90 + RSP]
0001830d(5): MOV qword ptr [RSP + 0x68],RAX
00018312(8): LEA RAX,[0x8c + RSP]
0001831a(5): MOV qword ptr [RSP + 0x78],RAX
0001831f(2): JMP 0x00018367
00018328(2): TEST AL,0x1
0001832a(2): JZ 0x00018350
0001832c(3): AND EDX,0x8
0001832f(2): JNZ 0x00018350
00018331(3): TEST CL,0x20
00018334(2): JZ 0x0001833a
00018336(2): TEST AL,0x2
00018338(2): JZ 0x00018350
0001833a(6): AND ECX,0x80
00018340(6): JZ 0x000183e0
00018346(2): TEST AL,0x8
00018348(6): JNZ 0x000183e0
0001834e(2): NOP
00018350(5): MOV RDI,qword ptr [RSP + 0x48]
00018355(5): ADD qword ptr [RSP],0x1
0001835a(4): MOV RAX,qword ptr [RSP]
0001835e(3): CMP RAX,qword ptr [RDI]
00018361(6): JGE 0x00018610
00018367(5): MOV RAX,qword ptr [RSP + 0x40]
0001836c(4): MOV RDI,qword ptr [RSP]
00018370(3): MOV RAX,qword ptr [RAX]
00018373(4): MOV R13,qword ptr [RAX + RDI*0x8]
00018377(5): MOV RDI,qword ptr [RSP + 0x38]
0001837c(3): MOV RAX,qword ptr [RDI]
0001837f(3): MOV RBX,R13
00018382(4): SHL RBX,0x4
00018386(3): ADD RAX,RBX
00018389(4): CMP byte ptr [RAX + 0x8],0x4
0001838d(2): JNZ 0x00018350
0001838f(3): MOV EBP,dword ptr [RAX + 0x8]
00018392(6): TEST EBP,0x3ff00
00018398(2): JZ 0x000183e0
0001839a(7): MOV EDX,dword ptr [0xa0 + R14]
000183a1(5): MOV RSI,qword ptr [RSP + 0x8]
000183a6(3): MOV RDI,R14
000183a9(5): CALL 0x00014480
000183ae(2): MOV EDX,EBP
000183b0(3): SHR EDX,0x8
000183b3(2): MOV ECX,EDX
000183b5(5): AND CX,0x3ff
000183ba(3): TEST DL,0x4
000183bd(6): JNZ 0x00018328
000183c3(3): AND EDX,0x8
000183c6(6): JZ 0x00018331
000183cc(2): TEST AL,0x1
000183ce(6): JZ 0x00018331
000183d4(5): JMP 0x00018350
000183e0(7): MOV RDI,qword ptr [0xc8 + R14]
000183e7(7): MOV RAX,qword ptr [0x98 + R14]
000183ee(2): XOR ECX,ECX
000183f0(4): MOV R10,qword ptr [R14 + 0x8]
000183f4(5): MOV R9,qword ptr [RSP + 0x8]
000183f9(5): MOV qword ptr [RSP + 0x70],RDI
000183fe(5): MOV qword ptr [RSP + 0x50],RAX
00018403(3): CMP RCX,RDI
00018406(2): JGE 0x0001845b
00018408(4): LEA RAX,[RCX + RDI*0x1]
0001840c(7): MOV R11,qword ptr [0xd8 + R14]
00018413(3): MOV RSI,RAX
00018416(4): SHR RSI,0x3f
0001841a(3): ADD RSI,RAX
0001841d(3): SAR RSI,1
00018420(4): LEA RAX,[RSI + RSI*0x4]
00018424(5): CMP R9,qword ptr [R11 + RAX*0x8 + 0x8]
00018429(2): JLE 0x00018456
0001842b(5): JMP 0x000185f8
00018430(4): LEA RDX,[RSI + RCX*0x1]
00018434(3): MOV RAX,RDX
00018437(4): SHR RAX,0x3f
0001843b(3): ADD RAX,RDX
0001843e(3): SAR RAX,1
00018441(4): LEA RDX,[RAX + RAX*0x4]
00018445(3): MOV R8,RAX
00018448(5): CMP R9,qword ptr [R11 + RDX*0x8 + 0x8]
0001844d(6): JG 0x00018600
00018453(3): MOV RSI,RAX
00018456(3): CMP RSI,RCX
00018459(2): JG 0x00018430
0001845b(5): CMP qword ptr [RSP + 0x70],RCX
00018460(2): JLE 0x00018486
00018462(7): MOV RDX,qword ptr [0xd8 + R14]
00018469(4): LEA RAX,[RCX + RCX*0x4]
0001846d(5): MOV RDI,qword ptr [RSP + 0x8]
00018472(4): LEA RAX,[RDX + RAX*0x8]
00018476(4): CMP qword ptr [RAX + 0x8],RDI
0001847a(2): JNZ 0x00018486
0001847c(4): CMP RCX,-0x1
00018480(6): JNZ 0x00018656
00018486(5): MOV RAX,qword ptr [RSP + 0x50]
0001848b(8): CMP qword ptr [0xe8 + R14],0x0
00018493(3): MOV RDX,qword ptr [RAX]
00018496(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0001849a(5): MOV qword ptr [RSP + 0x58],RAX
0001849f(6): JLE 0x0001865b
000184a5(5): MOV qword ptr [RSP + 0x30],R13
000184aa(9): MOV qword ptr [RSP + 0x28],0x0
000184b3(3): MOV R13,R10
000184b6(7): MOV RAX,qword ptr [0xf8 + R14]
000184bd(5): MOV RBX,qword ptr [RSP + 0x28]
000184c2(5): MOV RDI,qword ptr [RSP + 0x58]
000184c7(4): MOV RBX,qword ptr [RAX + RBX*0x8]
000184cb(4): MOV RAX,qword ptr [RBX + 0x8]
000184cf(4): SHL RAX,0x4
000184d3(4): CMP RDI,qword ptr [RDX + RAX*0x1]
000184d7(2): JZ 0x00018500
000184d9(6): ADD qword ptr [RSP + 0x28],0x1
000184df(5): MOV RAX,qword ptr [RSP + 0x28]
000184e4(7): CMP RAX,qword ptr [0xe8 + R14]
000184eb(6): JGE 0x00018b61
000184f1(5): MOV RAX,qword ptr [RSP + 0x50]
000184f6(3): MOV RDX,qword ptr [RAX]
000184f9(2): JMP 0x000184b6
00018500(5): CMP qword ptr [RBX + 0x20],0x0
00018505(3): MOV R11,qword ptr [RBX]
00018508(6): JLE 0x00018b72
0001850e(5): MOV RCX,qword ptr [RSP + 0x8]
00018513(3): MOV R8,R13
00018516(2): XOR EBP,EBP
00018518(3): MOV R13,RBX
0001851b(3): MOV RBX,RCX
0001851e(2): JMP 0x0001858c
00018520(4): LEA RSI,[R8 + R11*0x1]
00018524(4): LEA RDI,[R8 + RBX*0x1]
00018528(5): MOV qword ptr [RSP + 0x20],R9
0001852d(5): MOV qword ptr [RSP + 0x18],R11
00018532(5): MOV qword ptr [RSP + 0x10],R8
00018537(5): CALL 0x00002680
0001853c(2): TEST EAX,EAX
0001853e(5): MOV R8,qword ptr [RSP + 0x10]
00018543(5): MOV R11,qword ptr [RSP + 0x18]
00018548(5): MOV R9,qword ptr [RSP + 0x20]
0001854d(6): JNZ 0x00018a18
00018553(5): MOV R8,qword ptr [RSP + 0x8]
00018558(5): MOV RCX,qword ptr [RSP + 0x30]
0001855d(3): MOV RDX,R9
00018560(3): MOV RSI,R13
00018563(3): MOV RDI,R14
00018566(5): CALL 0x00018100
0001856b(3): CMP EAX,0x1
0001856e(4): MOV R8,qword ptr [R14 + 0x8]
00018572(6): JA 0x00018618
00018578(4): ADD RBP,0x1
0001857c(4): CMP RBP,qword ptr [R13 + 0x20]
00018580(3): MOV R11,R15
00018583(3): MOV RBX,R12
00018586(6): JGE 0x00018838
0001858c(4): MOV RAX,qword ptr [R13 + 0x28]
00018590(4): MOV R9,qword ptr [RAX + RBP*0x8]
00018594(4): MOV R15,qword ptr [R9 + 0x8]
00018598(3): MOV RDX,R15
0001859b(3): SUB RDX,R11
0001859e(3): TEST RDX,RDX
000185a1(4): LEA R12,[RDX + RBX*0x1]
000185a5(2): JLE 0x00018553
000185a7(4): CMP qword ptr [R14 + 0x30],R12
000185ab(6): JGE 0x00018520
000185b1(4): CMP qword ptr [R14 + 0x58],R12
000185b5(5): MOV qword ptr [RSP + 0x18],RDX
000185ba(5): MOV qword ptr [RSP + 0x10],R9
000185bf(6): JL 0x00018a18
000185c5(3): MOV RSI,R12
000185c8(3): MOV RDI,R14
000185cb(5): MOV qword ptr [RSP + 0x20],R11
000185d0(5): CALL 0x00011d30
000185d5(2): TEST EAX,EAX
000185d7(2): JNZ 0x00018618
000185d9(4): MOV R8,qword ptr [R14 + 0x8]
000185dd(5): MOV RDX,qword ptr [RSP + 0x18]
000185e2(5): MOV R9,qword ptr [RSP + 0x10]
000185e7(5): MOV R11,qword ptr [RSP + 0x20]
000185ec(5): JMP 0x00018520
000185f8(3): MOV R8,RSI
000185fb(3): MOV RSI,RDI
000185fe(2): NOP
00018600(4): LEA RCX,[R8 + 0x1]
00018604(3): MOV RDI,RSI
00018607(5): JMP 0x00018403
00018610(2): XOR EAX,EAX
00018612(6): NOP word ptr [RAX + RAX*0x1]
00018618(8): MOV RBX,qword ptr [0xa8 + RSP]
00018620(9): XOR RBX,qword ptr FS:[0x28]
00018629(6): JNZ 0x00018b7c
0001862f(7): ADD RSP,0xb8
00018636(1): POP RBX
00018637(1): POP RBP
00018638(2): POP R12
0001863a(2): POP R13
0001863c(2): POP R14
0001863e(2): POP R15
00018640(1): RET
00018648(4): ADD RAX,0x28
0001864c(4): CMP byte ptr [RAX + -0x8],0x0
00018650(6): JZ 0x00018486
00018656(3): CMP R13,qword ptr [RAX]
00018659(2): JNZ 0x00018648
0001865b(5): MOV RAX,qword ptr [RSP + 0x70]
00018660(5): CMP qword ptr [RSP + 0x70],RAX
00018665(11): MOV dword ptr [0x8c + RSP],0x0
00018670(6): JGE 0x00018350
00018676(8): LEA RAX,[R13*0x8]
0001867e(5): MOV R12,qword ptr [RSP + 0x70]
00018683(5): MOV RBP,qword ptr [RSP + 0x38]
00018688(5): MOV qword ptr [RSP + 0x50],RAX
0001868d(5): LEA RAX,[R13 + R13*0x2]
00018692(4): LEA R8,[R12 + R12*0x4]
00018696(4): SHL RAX,0x3
0001869a(5): MOV qword ptr [RSP + 0x58],RAX
0001869f(8): LEA R15,[R8*0x8]
000186a7(5): JMP 0x000187dd
000186b0(4): MOV RCX,qword ptr [RBP + 0x28]
000186b4(5): MOV RDI,qword ptr [RSP + 0x58]
000186b9(5): MOV RCX,qword ptr [RCX + RDI*0x1 + 0x10]
000186be(3): MOV RCX,qword ptr [RCX]
000186c1(4): LEA RCX,[RCX + RCX*0x2]
000186c5(4): LEA RCX,[RDX + RCX*0x8]
000186c9(5): MOV qword ptr [RSP + 0x18],RCX
000186ce(5): ADD RBX,qword ptr [RSP + 0x8]
000186d3(7): MOV EDX,dword ptr [0xa0 + R14]
000186da(3): MOV RDI,R14
000186dd(3): SUB RBX,RAX
000186e0(4): LEA RSI,[RBX + -0x1]
000186e4(5): CALL 0x00014480
000186e9(5): MOV RSI,qword ptr [RSP + 0x60]
000186ee(2): MOV ECX,EAX
000186f0(7): MOV RAX,qword ptr [0xb8 + R14]
000186f7(8): LEA R10,[RBX*0x8]
000186ff(9): MOV qword ptr [RSP + 0x10],0x0
00018708(4): LEA R11,[RAX + R10*0x1]
0001870c(4): MOV RAX,qword ptr [RAX + RSI*0x1]
00018710(3): MOV RDX,qword ptr [R11]
00018713(3): TEST RAX,RAX
00018716(2): JZ 0x00018721
00018718(4): MOV RAX,qword ptr [RAX + 0x10]
0001871c(5): MOV qword ptr [RSP + 0x10],RAX
00018721(3): TEST RDX,RDX
00018724(6): JZ 0x00018a40
0001872a(4): MOV RSI,qword ptr [RDX + 0x50]
0001872e(5): MOV RDI,qword ptr [RSP + 0x68]
00018733(5): MOV RDX,qword ptr [RSP + 0x18]
00018738(5): MOV qword ptr [RSP + 0x30],R10
0001873d(4): MOV dword ptr [RSP + 0x28],ECX
00018741(5): CALL 0x00013890
00018746(2): TEST EAX,EAX
00018748(7): MOV dword ptr [0x8c + RSP],EAX
0001874f(4): MOV ECX,dword ptr [RSP + 0x28]
00018753(5): MOV R10,qword ptr [RSP + 0x30]
00018758(6): JNZ 0x00018ae8
0001875e(7): ADD R10,qword ptr [0xb8 + R14]
00018765(5): MOV RDX,qword ptr [RSP + 0x68]
0001876a(3): MOV RSI,RBP
0001876d(5): MOV RDI,qword ptr [RSP + 0x78]
00018772(5): MOV qword ptr [RSP + 0x28],R10
00018777(5): CALL 0x000139f0
0001877c(5): MOV R10,qword ptr [RSP + 0x28]
00018781(8): MOV RDI,qword ptr [0xa0 + RSP]
00018789(3): MOV qword ptr [R10],RAX
0001878c(5): CALL 0x00002a10
00018791(7): MOV RDX,qword ptr [0xb8 + R14]
00018798(5): CMP qword ptr [RDX + RBX*0x8],0x0
0001879d(6): JZ 0x00018a71
000187a3(6): CMP qword ptr [RSP + 0x20],0x0
000187a9(2): JNZ 0x000187c8
000187ab(5): MOV RAX,qword ptr [RSP + 0x60]
000187b0(5): MOV RBX,qword ptr [RSP + 0x10]
000187b5(4): MOV RAX,qword ptr [RDX + RAX*0x1]
000187b9(4): CMP qword ptr [RAX + 0x10],RBX
000187bd(6): JG 0x00018a88
000187c3(5): NOP dword ptr [RAX + RAX*0x1]
000187c8(4): ADD R12,0x1
000187cc(4): ADD R15,0x28
000187d0(7): CMP R12,qword ptr [0xc8 + R14]
000187d7(6): JGE 0x00018350
000187dd(7): MOV RAX,qword ptr [0xd8 + R14]
000187e4(3): ADD RAX,R15
000187e7(3): CMP R13,qword ptr [RAX]
000187ea(2): JNZ 0x000187c8
000187ec(5): MOV RDI,qword ptr [RSP + 0x8]
000187f1(4): CMP RDI,qword ptr [RAX + 0x8]
000187f5(2): JNZ 0x000187c8
000187f7(4): MOV RBX,qword ptr [RAX + 0x18]
000187fb(4): MOV RAX,qword ptr [RAX + 0x10]
000187ff(4): MOV RDX,qword ptr [RBP + 0x30]
00018803(3): MOV RCX,RBX
00018806(3): SUB RCX,RAX
00018809(5): MOV qword ptr [RSP + 0x20],RCX
0001880e(6): JZ 0x000186b0
00018814(4): MOV RCX,qword ptr [RBP + 0x18]
00018818(5): MOV RDI,qword ptr [RSP + 0x50]
0001881d(4): MOV RCX,qword ptr [RCX + RDI*0x1]
00018821(4): LEA RCX,[RCX + RCX*0x2]
00018825(4): LEA RCX,[RDX + RCX*0x8]
00018829(5): MOV qword ptr [RSP + 0x18],RCX
0001882e(5): JMP 0x000186ce
00018838(3): MOV RBX,R13
0001883b(3): MOV R13,R8
0001883e(4): LEA R11,[R15 + 0x1]
00018842(5): CMP qword ptr [RSP + 0x8],R11
00018847(6): JL 0x000184d9
0001884d(3): MOV RAX,R12
00018850(8): LEA R15,[R11*0x8]
00018858(3): MOV R12,RBX
0001885b(3): MOV RBX,R11
0001885e(3): MOV R11,R13
00018861(3): MOV R13,RAX
00018864(4): NOP dword ptr [RAX]
00018868(3): MOV RAX,RBX
0001886b(4): SUB RAX,qword ptr [R12]
0001886f(3): TEST RAX,RAX
00018872(2): JLE 0x00018895
00018874(4): CMP qword ptr [R14 + 0x30],R13
00018878(6): JLE 0x00018b01
0001887e(6): MOVZX ECX,byte ptr [R11 + RBX*0x1 + -0x1]
00018884(4): LEA RAX,[R13 + 0x1]
00018888(4): CMP byte ptr [R11 + R13*0x1],CL
0001888c(6): JNZ 0x000189c2
00018892(3): MOV R13,RAX
00018895(7): MOV RAX,qword ptr [0xb8 + R14]
0001889c(4): MOV RAX,qword ptr [RAX + R15*0x1]
000188a0(3): TEST RAX,RAX
000188a3(6): JZ 0x000189af
000188a9(4): MOV RCX,qword ptr [RAX + 0x10]
000188ad(3): TEST RCX,RCX
000188b0(6): JLE 0x000189af
000188b6(4): MOV RDI,qword ptr [RAX + 0x18]
000188ba(5): MOV RAX,qword ptr [RSP + 0x50]
000188bf(2): XOR EDX,EDX
000188c1(5): MOV R8,qword ptr [RSP + 0x58]
000188c6(3): MOV RSI,qword ptr [RAX]
000188c9(2): JMP 0x000188dd
000188d0(4): ADD RDX,0x1
000188d4(3): CMP RCX,RDX
000188d7(6): JZ 0x000189af
000188dd(4): MOV RBP,qword ptr [RDI + RDX*0x8]
000188e1(3): MOV RAX,RBP
000188e4(4): SHL RAX,0x4
000188e8(3): ADD RAX,RSI
000188eb(4): CMP byte ptr [RAX + 0x8],0x9
000188ef(2): JNZ 0x000188d0
000188f1(3): CMP R8,qword ptr [RAX]
000188f4(2): JNZ 0x000188d0
000188f6(4): CMP RBP,-0x1
000188fa(6): JZ 0x000189af
00018900(5): MOV RSI,qword ptr [R12 + 0x10]
00018905(4): MOV RCX,qword ptr [R12]
00018909(3): TEST RSI,RSI
0001890c(6): JZ 0x000189d0
00018912(5): MOV qword ptr [RSP + 0x10],R11
00018917(5): MOV RDX,qword ptr [R12 + 0x8]
0001891c(4): SUB RSP,0x8
00018920(2): PUSH 0x9
00018922(3): MOV R9,RBX
00018925(3): MOV R8,RBP
00018928(3): MOV RDI,R14
0001892b(5): CALL 0x000170b0
00018930(1): POP RDX
00018931(3): CMP EAX,0x1
00018934(1): POP RCX
00018935(5): MOV R11,qword ptr [RSP + 0x10]
0001893a(2): JZ 0x000189af
0001893c(2): TEST EAX,EAX
0001893e(6): JNZ 0x00018618
00018944(5): MOV RAX,qword ptr [R12 + 0x20]
00018949(5): CMP RAX,qword ptr [R12 + 0x18]
0001894e(6): JZ 0x00018b28
00018954(5): MOV ESI,0x28
00018959(5): MOV EDI,0x1
0001895e(5): CALL 0x000026b0
00018963(3): TEST RAX,RAX
00018966(6): JZ 0x00018a09
0001896c(5): MOV RDX,qword ptr [R12 + 0x20]
00018971(5): MOV RCX,qword ptr [R12 + 0x28]
00018976(3): MOV RSI,R12
00018979(5): MOV R8,qword ptr [RSP + 0x8]
0001897e(3): MOV RDI,R14
00018981(4): MOV qword ptr [RCX + RDX*0x8],RAX
00018985(5): MOV RCX,qword ptr [RSP + 0x30]
0001898a(4): ADD RDX,0x1
0001898e(3): MOV qword ptr [RAX],RBP
00018991(4): MOV qword ptr [RAX + 0x8],RBX
00018995(5): MOV qword ptr [R12 + 0x20],RDX
0001899a(3): MOV RDX,RAX
0001899d(5): CALL 0x00018100
000189a2(3): CMP EAX,0x1
000189a5(4): MOV R11,qword ptr [R14 + 0x8]
000189a9(6): JA 0x00018618
000189af(4): ADD RBX,0x1
000189b3(4): ADD R15,0x8
000189b7(5): CMP qword ptr [RSP + 0x8],RBX
000189bc(6): JGE 0x00018868
000189c2(3): MOV R13,R11
000189c5(5): JMP 0x000184d9
000189d0(3): MOV RSI,RBX
000189d3(5): MOV EDI,0x18
000189d8(5): MOV qword ptr [RSP + 0x18],R11
000189dd(3): SUB RSI,RCX
000189e0(5): MOV qword ptr [RSP + 0x10],RCX
000189e5(4): ADD RSI,0x1
000189e9(5): CALL 0x000026b0
000189ee(3): TEST RAX,RAX
000189f1(3): MOV RSI,RAX
000189f4(5): MOV qword ptr [R12 + 0x10],RAX
000189f9(5): MOV RCX,qword ptr [RSP + 0x10]
000189fe(5): MOV R11,qword ptr [RSP + 0x18]
00018a03(6): JNZ 0x00018912
00018a09(5): MOV EAX,0xc
00018a0e(5): JMP 0x00018618
00018a18(3): MOV RCX,RBX
00018a1b(3): MOV RBX,R13
00018a1e(3): MOV R13,R8
00018a21(4): CMP qword ptr [RBX + 0x20],RBP
00018a25(6): JG 0x000184d9
00018a2b(3): TEST RBP,RBP
00018a2e(3): MOV R12,RCX
00018a31(6): JZ 0x00018842
00018a37(3): MOV R15,R11
00018a3a(5): JMP 0x0001883e
00018a40(5): MOV RDX,qword ptr [RSP + 0x18]
00018a45(5): MOV RDI,qword ptr [RSP + 0x78]
00018a4a(3): MOV RSI,RBP
00018a4d(5): MOV qword ptr [RSP + 0x28],R11
00018a52(5): CALL 0x000139f0
00018a57(5): MOV R11,qword ptr [RSP + 0x28]
00018a5c(7): MOV RDX,qword ptr [0xb8 + R14]
00018a63(3): MOV qword ptr [R11],RAX
00018a66(5): CMP qword ptr [RDX + RBX*0x8],0x0
00018a6b(6): JNZ 0x000187a3
00018a71(7): MOV EAX,dword ptr [0x8c + RSP]
00018a78(2): TEST EAX,EAX
00018a7a(6): JZ 0x000187a3
00018a80(5): JMP 0x00018618
00018a88(5): MOV RAX,qword ptr [RSP + 0x18]
00018a8d(5): MOV RCX,qword ptr [RSP + 0x8]
00018a92(3): MOV RDI,R14
00018a95(4): LEA R8,[RAX + 0x10]
00018a99(4): LEA RBX,[RAX + 0x8]
00018a9d(3): MOV RDX,R8
00018aa0(3): MOV RSI,RBX
00018aa3(5): MOV qword ptr [RSP + 0x10],R8
00018aa8(5): CALL 0x00014330
00018aad(2): TEST EAX,EAX
00018aaf(7): MOV dword ptr [0x8c + RSP],EAX
00018ab6(6): JNZ 0x00018618
00018abc(5): MOV R8,qword ptr [RSP + 0x10]
00018ac1(3): MOV RSI,RBX
00018ac4(3): MOV RDI,R14
00018ac7(3): MOV RDX,R8
00018aca(5): CALL 0x000182a0
00018acf(2): TEST EAX,EAX
00018ad1(7): MOV dword ptr [0x8c + RSP],EAX
00018ad8(6): JZ 0x000187c8
00018ade(5): JMP 0x00018618
00018ae8(8): MOV RDI,qword ptr [0xa0 + RSP]
00018af0(5): CALL 0x00002a10
00018af5(7): MOV EAX,dword ptr [0x8c + RSP]
00018afc(5): JMP 0x00018618
00018b01(4): CMP qword ptr [R14 + 0x58],R13
00018b05(6): JLE 0x000189c2
00018b0b(4): LEA ESI,[R13 + 0x1]
00018b0f(3): MOV RDI,R14
00018b12(5): CALL 0x00011be0
00018b17(2): TEST EAX,EAX
00018b19(6): JNZ 0x00018618
00018b1f(4): MOV R11,qword ptr [R14 + 0x8]
00018b23(5): JMP 0x0001887e
00018b28(5): LEA RDX,[RAX + RAX*0x1 + 0x1]
00018b2d(5): MOV RDI,qword ptr [R12 + 0x28]
00018b32(8): LEA RSI,[RDX*0x8]
00018b3a(5): MOV qword ptr [RSP + 0x10],RDX
00018b3f(5): CALL 0x00002830
00018b44(3): TEST RAX,RAX
00018b47(6): JZ 0x00018a09
00018b4d(5): MOV RDX,qword ptr [RSP + 0x10]
00018b52(5): MOV qword ptr [R12 + 0x28],RAX
00018b57(5): MOV qword ptr [R12 + 0x18],RDX
00018b5c(5): JMP 0x00018954
00018b61(5): MOV R13,qword ptr [RSP + 0x30]
00018b66(7): MOV RAX,qword ptr [0xc8 + R14]
00018b6d(5): JMP 0x00018660
00018b72(5): MOV R12,qword ptr [RSP + 0x8]
00018b77(5): JMP 0x00018842
00018b7c(5): CALL 0x00002560
00018b81(5): NOP dword ptr [RAX + RAX*0x1]
00018b86(10): NOP word ptr CS:[RAX + RAX*0x1]
00018b90(2): PUSH R15
00018b92(2): PUSH R14
00018b94(2): PUSH R13
00018b96(2): PUSH R12
00018b98(3): MOV R13,RDI
00018b9b(1): PUSH RBP
00018b9c(1): PUSH RBX
00018b9d(3): MOV RBX,RSI
00018ba0(4): SUB RSP,0x38
00018ba4(4): MOV R12,qword ptr [RSI + 0x48]
00018ba8(7): MOV R14,qword ptr [0xb8 + RSI]
00018baf(9): MOV RAX,qword ptr FS:[0x28]
00018bb8(5): MOV qword ptr [RSP + 0x28],RAX
00018bbd(2): XOR EAX,EAX
00018bbf(7): MOV R15,qword ptr [0x98 + RSI]
00018bc6(8): LEA RBP,[R12*0x8]
00018bce(3): ADD R14,RBP
00018bd1(7): CMP qword ptr [0xc0 + RSI],R12
00018bd8(2): JGE 0x00018c20
00018bda(3): MOV qword ptr [R14],RDX
00018bdd(3): MOV RBP,RDX
00018be0(7): MOV qword ptr [0xc0 + RSI],R12
00018be7(8): CMP qword ptr [0x98 + R15],0x0
00018bef(6): JNZ 0x00018d18
00018bf5(5): MOV RCX,qword ptr [RSP + 0x28]
00018bfa(9): XOR RCX,qword ptr FS:[0x28]
00018c03(3): MOV RAX,RBP
00018c06(6): JNZ 0x00018d77
00018c0c(4): ADD RSP,0x38
00018c10(1): POP RBX
00018c11(1): POP RBP
00018c12(2): POP R12
00018c14(2): POP R13
00018c16(2): POP R14
00018c18(2): POP R15
00018c1a(1): RET
00018c20(3): MOV RAX,qword ptr [R14]
00018c23(3): TEST RAX,RAX
00018c26(6): JZ 0x00018d08
00018c2c(3): TEST RDX,RDX
00018c2f(4): MOV RAX,qword ptr [RAX + 0x50]
00018c33(6): JZ 0x00018cc0
00018c39(4): MOV R14,qword ptr [RDX + 0x50]
00018c3d(5): LEA RDI,[RSP + 0x10]
00018c42(3): MOV RDX,RAX
00018c45(4): MOV qword ptr [RSP],RDI
00018c49(3): MOV RSI,R14
00018c4c(5): CALL 0x00013890
00018c51(2): TEST EAX,EAX
00018c53(4): MOV dword ptr [R13],EAX
00018c57(6): JNZ 0x00018d70
00018c5d(4): MOV RAX,qword ptr [RBX + 0x48]
00018c61(6): MOV EDX,dword ptr [0xa0 + RBX]
00018c67(3): MOV RDI,RBX
00018c6a(4): LEA RSI,[RAX + -0x1]
00018c6e(5): CALL 0x00014480
00018c73(7): MOV R8,qword ptr [0xb8 + RBX]
00018c7a(4): MOV RDX,qword ptr [RSP]
00018c7e(2): MOV ECX,EAX
00018c80(3): MOV RSI,R15
00018c83(3): MOV RDI,R13
00018c86(3): ADD R8,RBP
00018c89(5): MOV qword ptr [RSP + 0x8],R8
00018c8e(5): CALL 0x000139f0
00018c93(5): MOV R8,qword ptr [RSP + 0x8]
00018c98(3): TEST R14,R14
00018c9b(3): MOV RBP,RAX
00018c9e(3): MOV qword ptr [R8],RAX
00018ca1(6): JZ 0x00018be7
00018ca7(5): MOV RDI,qword ptr [RSP + 0x20]
00018cac(5): CALL 0x00002a10
00018cb1(5): JMP 0x00018be7
00018cc0(4): MOVDQU XMM0,xmmword ptr [RAX]
00018cc4(3): MOV RDI,RBX
00018cc7(6): MOV EDX,dword ptr [0xa0 + RSI]
00018ccd(5): LEA RSI,[R12 + -0x1]
00018cd2(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00018cd7(4): MOV RAX,qword ptr [RAX + 0x10]
00018cdb(5): MOV qword ptr [RSP + 0x20],RAX
00018ce0(5): CALL 0x00014480
00018ce5(5): LEA RDX,[RSP + 0x10]
00018cea(2): MOV ECX,EAX
00018cec(3): MOV RSI,R15
00018cef(3): MOV RDI,R13
00018cf2(5): CALL 0x000139f0
00018cf7(3): MOV RBP,RAX
00018cfa(3): MOV qword ptr [R14],RAX
00018cfd(5): JMP 0x00018be7
00018d08(3): MOV qword ptr [R14],RDX
00018d0b(3): MOV RBP,RDX
00018d0e(5): JMP 0x00018be7
00018d18(3): TEST RBP,RBP
00018d1b(2): JZ 0x00018d70
00018d1d(4): LEA R14,[RBP + 0x10]
00018d21(4): LEA R15,[RBP + 0x18]
00018d25(3): MOV RCX,R12
00018d28(3): MOV RDI,RBX
00018d2b(3): MOV RDX,R15
00018d2e(3): MOV RSI,R14
00018d31(5): CALL 0x00014330
00018d36(2): TEST EAX,EAX
00018d38(4): MOV dword ptr [R13],EAX
00018d3c(2): JNZ 0x00018d70
00018d3e(4): TEST byte ptr [RBP + 0x68],0x40
00018d42(6): JZ 0x00018bf5
00018d48(3): MOV RDX,R15
00018d4b(3): MOV RSI,R14
00018d4e(3): MOV RDI,RBX
00018d51(5): CALL 0x000182a0
00018d56(2): TEST EAX,EAX
00018d58(4): MOV dword ptr [R13],EAX
00018d5c(2): JNZ 0x00018d70
00018d5e(7): MOV RAX,qword ptr [0xb8 + RBX]
00018d65(4): MOV RBP,qword ptr [RAX + R12*0x8]
00018d69(5): JMP 0x00018bf5
00018d70(2): XOR EBP,EBP
00018d72(5): JMP 0x00018bf5
00018d77(5): CALL 0x00002560
00018d7c(4): NOP dword ptr [RAX]
00018d80(2): PUSH R15
00018d82(2): PUSH R14
00018d84(3): MOV R14,RDI
00018d87(2): PUSH R13
00018d89(2): PUSH R12
00018d8b(3): MOV R13,RSI
00018d8e(1): PUSH RBP
00018d8f(1): PUSH RBX
00018d90(4): SUB RSP,0x68
00018d94(4): MOV R15,qword ptr [RSI + 0x18]
00018d98(4): MOV RBX,qword ptr [RSI + 0x10]
00018d9c(4): MOV qword ptr [RSP],RDI
00018da0(5): MOV EDI,0x8
00018da5(9): MOV qword ptr [RSP + 0x40],0x1
00018dae(9): MOV RAX,qword ptr FS:[0x28]
00018db7(5): MOV qword ptr [RSP + 0x58],RAX
00018dbc(2): XOR EAX,EAX
00018dbe(9): MOV qword ptr [RSP + 0x48],0x1
00018dc7(5): CALL 0x00002780
00018dcc(3): TEST RAX,RAX
00018dcf(5): MOV qword ptr [RSP + 0x50],RAX
00018dd4(6): JZ 0x000190b4
00018dda(5): LEA RCX,[RSP + 0x40]
00018ddf(3): MOV qword ptr [RAX],RBX
00018de2(3): MOV RDX,R15
00018de5(3): MOV RSI,R13
00018de8(3): MOV RDI,R14
00018deb(5): MOV qword ptr [RSP + 0x10],RCX
00018df0(5): CALL 0x0001a7f0
00018df5(2): TEST EAX,EAX
00018df7(6): JNZ 0x00019085
00018dfd(8): LEA RAX,[R15*0x8]
00018e05(3): TEST R15,R15
00018e08(8): MOV dword ptr [RSP + 0x2c],0x0
00018e10(5): MOV qword ptr [RSP + 0x8],RAX
00018e15(4): LEA RAX,[R13 + 0x30]
00018e19(5): MOV qword ptr [RSP + 0x38],RAX
00018e1e(6): JLE 0x00019027
00018e24(4): MOV RDI,qword ptr [R13]
00018e28(5): MOV RAX,qword ptr [RSP + 0x8]
00018e2d(5): CMP qword ptr [RDI + RAX*0x1],0x0
00018e32(6): JZ 0x00019048
00018e38(4): MOV RAX,qword ptr [RSP]
00018e3c(8): MOV dword ptr [RSP + 0x2c],0x0
00018e44(4): MOV ECX,dword ptr [RSP + 0x2c]
00018e48(6): CMP dword ptr [0xe0 + RAX],ECX
00018e4e(6): JL 0x00019061
00018e54(4): MOV RBX,qword ptr [RSP]
00018e58(5): MOV RDI,qword ptr [RSP + 0x8]
00018e5d(4): SUB R15,0x1
00018e61(9): MOV qword ptr [RSP + 0x48],0x0
00018e6a(7): MOV RAX,qword ptr [0xb8 + RBX]
00018e71(5): MOV R12,qword ptr [RAX + RDI*0x1 + -0x8]
00018e76(3): TEST R12,R12
00018e79(6): JZ 0x00019000
00018e7f(6): CMP qword ptr [R12 + 0x28],0x0
00018e85(7): MOV R14,qword ptr [0x98 + RBX]
00018e8c(6): JLE 0x00019000
00018e92(2): XOR EBX,EBX
00018e94(5): JMP 0x00018f3b
00018ea0(4): MOV RDI,qword ptr [RSP]
00018ea4(3): MOV RDX,R15
00018ea7(5): CALL 0x00014570
00018eac(2): TEST AL,AL
00018eae(2): JZ 0x00018f2c
00018eb0(4): MOV RAX,qword ptr [R13]
00018eb4(5): MOV RCX,qword ptr [RSP + 0x8]
00018eb9(4): MOV RAX,qword ptr [RAX + RCX*0x1]
00018ebd(3): TEST RAX,RAX
00018ec0(2): JZ 0x00018f2c
00018ec2(4): MOV RDX,qword ptr [R14 + 0x18]
00018ec6(4): MOV RDI,qword ptr [RAX + 0x10]
00018eca(4): LEA RSI,[RAX + 0x18]
00018ece(4): MOV RDX,qword ptr [RDX + RBP*0x8]
00018ed2(5): CALL 0x000126a0
00018ed7(3): TEST RAX,RAX
00018eda(2): JZ 0x00018f2c
00018edc(6): MOV R10D,0x1
00018ee2(5): CMP qword ptr [R13 + 0x28],0x0
00018ee7(2): JZ 0x00018f17
00018ee9(4): MOV RAX,qword ptr [R14 + 0x18]
00018eed(4): SUB RSP,0x8
00018ef1(4): LEA RSI,[R13 + 0x28]
00018ef5(4): LEA R8,[R10 + R15*0x1]
00018ef9(3): MOV R9,RBP
00018efc(4): MOV RCX,qword ptr [RAX + RBP*0x8]
00018f00(2): PUSH R15
00018f02(5): MOV RDX,qword ptr [RSP + 0x48]
00018f07(5): MOV RDI,qword ptr [RSP + 0x10]
00018f0c(5): CALL 0x00012950
00018f11(2): TEST AL,AL
00018f13(1): POP RDX
00018f14(1): POP RCX
00018f15(2): JNZ 0x00018f2c
00018f17(5): MOV RDI,qword ptr [RSP + 0x10]
00018f1c(3): MOV RSI,RBP
00018f1f(5): CALL 0x00011160
00018f24(2): TEST AL,AL
00018f26(6): JZ 0x00019080
00018f2c(4): ADD RBX,0x1
00018f30(5): CMP RBX,qword ptr [R12 + 0x28]
00018f35(6): JGE 0x00019000
00018f3b(5): MOV RAX,qword ptr [R12 + 0x30]
00018f40(3): MOV RSI,qword ptr [R14]
00018f43(4): MOV RBP,qword ptr [RAX + RBX*0x8]
00018f47(3): MOV R9,RBP
00018f4a(4): SHL R9,0x4
00018f4e(3): ADD RSI,R9
00018f51(4): TEST byte ptr [RSI + 0xa],0x10
00018f55(6): JZ 0x00018ea0
00018f5b(4): MOV RCX,qword ptr [RSP]
00018f5f(4): MOV RAX,qword ptr [R13 + 0x18]
00018f63(3): MOV R8,R15
00018f66(3): MOV RDX,RBP
00018f69(5): MOV qword ptr [RSP + 0x18],R9
00018f6e(7): MOV R11,qword ptr [0x98 + RCX]
00018f75(5): MOV qword ptr [RSP + 0x20],RAX
00018f7a(3): MOV RDI,qword ptr [R11]
00018f7d(7): LEA RSI,[0xd8 + R11]
00018f84(5): MOV qword ptr [RSP + 0x30],R11
00018f89(5): CALL 0x00016e50
00018f8e(3): MOVSXD R10,EAX
00018f91(5): MOV R9,qword ptr [RSP + 0x18]
00018f96(4): CMP R10D,0x0
00018f9a(6): JLE 0x00019030
00018fa0(3): MOVSXD RAX,R10D
00018fa3(3): ADD RAX,R15
00018fa6(5): CMP qword ptr [RSP + 0x20],RAX
00018fab(6): JL 0x00018ee2
00018fb1(4): MOV RDX,qword ptr [R13]
00018fb5(5): MOV R11,qword ptr [RSP + 0x30]
00018fba(4): MOV RAX,qword ptr [RDX + RAX*0x8]
00018fbe(3): TEST RAX,RAX
00018fc1(2): JZ 0x00019036
00018fc3(4): MOV RDX,qword ptr [R11 + 0x18]
00018fc7(4): MOV RDI,qword ptr [RAX + 0x10]
00018fcb(4): LEA RSI,[RAX + 0x18]
00018fcf(5): MOV qword ptr [RSP + 0x18],R9
00018fd4(4): MOV RDX,qword ptr [RDX + RBP*0x8]
00018fd8(5): CALL 0x000126a0
00018fdd(3): TEST RAX,RAX
00018fe0(6): JNZ 0x00018ee2
00018fe6(5): MOV R9,qword ptr [RSP + 0x18]
00018feb(3): MOV RSI,qword ptr [R14]
00018fee(3): ADD RSI,R9
00018ff1(5): JMP 0x00018ea0
00019000(5): MOV RCX,qword ptr [RSP + 0x10]
00019005(4): MOV RDI,qword ptr [RSP]
00019009(3): MOV RDX,R15
0001900c(3): MOV RSI,R13
0001900f(5): CALL 0x0001a7f0
00019014(2): TEST EAX,EAX
00019016(2): JNZ 0x00019085
00019018(6): SUB qword ptr [RSP + 0x8],0x8
0001901e(3): TEST R15,R15
00019021(6): JNZ 0x00018e24
00019027(2): XOR EAX,EAX
00019029(2): JMP 0x00019085
00019030(6): JNZ 0x00018ee2
00019036(3): MOV RSI,qword ptr [R14]
00019039(3): ADD RSI,R9
0001903c(5): JMP 0x00018ea0
00019048(4): MOV RAX,qword ptr [RSP]
0001904c(5): ADD dword ptr [RSP + 0x2c],0x1
00019051(4): MOV ECX,dword ptr [RSP + 0x2c]
00019055(6): CMP dword ptr [0xe0 + RAX],ECX
0001905b(6): JGE 0x00018e54
00019061(5): MOV RDX,qword ptr [RSP + 0x8]
00019066(2): XOR ESI,ESI
00019068(5): CALL 0x00002620
0001906d(5): MOV RDI,qword ptr [RSP + 0x50]
00019072(5): CALL 0x00002a10
00019077(2): XOR EAX,EAX
00019079(2): JMP 0x00019095
00019080(5): MOV EAX,0xc
00019085(5): MOV RDI,qword ptr [RSP + 0x50]
0001908a(3): MOV dword ptr [RSP],EAX
0001908d(5): CALL 0x00002a10
00019092(3): MOV EAX,dword ptr [RSP]
00019095(5): MOV RDX,qword ptr [RSP + 0x58]
0001909a(9): XOR RDX,qword ptr FS:[0x28]
000190a3(2): JNZ 0x000190bb
000190a5(4): ADD RSP,0x68
000190a9(1): POP RBX
000190aa(1): POP RBP
000190ab(2): POP R12
000190ad(2): POP R13
000190af(2): POP R14
000190b1(2): POP R15
000190b3(1): RET
000190b4(5): MOV EAX,0xc
000190b9(2): JMP 0x00019095
000190bb(5): CALL 0x00002560
000190c0(2): PUSH R15
000190c2(2): PUSH R14
000190c4(2): PUSH R13
000190c6(2): PUSH R12
000190c8(3): MOV R13,R9
000190cb(1): PUSH RBP
000190cc(1): PUSH RBX
000190cd(3): MOV RBP,RCX
000190d0(5): MOV ECX,0x20
000190d5(3): MOV R12,R8
000190d8(7): SUB RSP,0x238
000190df(3): MOV RBX,qword ptr [RDI]
000190e2(8): MOV RAX,qword ptr [0x278 + RSP]
000190ea(5): MOV qword ptr [RSP + 0x48],RDI
000190ef(5): MOV qword ptr [RSP + 0x78],RSI
000190f4(3): MOV RSI,RDI
000190f7(8): LEA RDI,[0x120 + RSP]
000190ff(8): MOV qword ptr [0x88 + RSP],RDX
00019107(5): MOV qword ptr [RSP + 0x38],RBX
0001910c(8): MOV qword ptr [0xb8 + RSP],RAX
00019114(4): MOV qword ptr [RSP],RDI
00019118(9): MOV RAX,qword ptr FS:[0x28]
00019121(8): MOV qword ptr [0x228 + RSP],RAX
00019129(2): XOR EAX,EAX
0001912b(3): STOSQ.REP RDI
0001912e(4): MOV RDI,qword ptr [RSI + 0x20]
00019132(8): MOV qword ptr [0x1b8 + RSP],RBX
0001913a(3): TEST RDI,RDI
0001913d(5): MOV qword ptr [RSP + 0x68],RDI
00019142(2): JZ 0x00019166
00019144(4): MOVZX EDX,byte ptr [RSI + 0x38]
00019148(3): TEST DL,0x8
0001914b(6): JZ 0x000195e0
00019151(3): CMP RBP,R8
00019154(6): JZ 0x000195e0
0001915a(3): AND EDX,0x1
0001915d(4): CMOVZ RAX,RDI
00019161(5): MOV qword ptr [RSP + 0x68],RAX
00019166(5): MOV RAX,qword ptr [RSP + 0x48]
0001916b(12): MOV qword ptr [0x98 + RSP],0x0
00019177(4): MOV RAX,qword ptr [RAX + 0x30]
0001917b(8): CMP RAX,qword ptr [0x270 + RSP]
00019183(2): JNC 0x000191a4
00019185(8): MOV RCX,qword ptr [0x270 + RSP]
0001918d(4): LEA RDX,[RCX + -0x1]
00019191(3): SUB RDX,RAX
00019194(8): SUB qword ptr [0x270 + RSP],RDX
0001919c(8): MOV qword ptr [0x98 + RSP],RDX
000191a4(5): MOV RSI,qword ptr [RSP + 0x48]
000191a9(5): CMP qword ptr [RSI + 0x10],0x0
000191ae(6): JZ 0x0001a040
000191b4(5): MOV RDI,qword ptr [RSP + 0x38]
000191b9(4): MOV RAX,qword ptr [RDI + 0x48]
000191bd(3): TEST RAX,RAX
000191c0(6): JZ 0x0001a040
000191c6(4): MOV RDX,qword ptr [RDI + 0x50]
000191ca(3): TEST RDX,RDX
000191cd(6): JZ 0x0001a040
000191d3(4): MOV RCX,qword ptr [RDI + 0x58]
000191d7(3): TEST RCX,RCX
000191da(6): JZ 0x0001a040
000191e0(5): CMP qword ptr [RDI + 0x60],0x0
000191e5(6): JZ 0x0001a040
000191eb(5): CMP qword ptr [RAX + 0x10],0x0
000191f0(2): JNZ 0x00019228
000191f2(5): CMP qword ptr [RDX + 0x10],0x0
000191f7(2): JNZ 0x00019228
000191f9(5): CMP qword ptr [RCX + 0x10],0x0
000191fe(2): JZ 0x00019206
00019200(4): CMP byte ptr [RSI + 0x38],0x0
00019204(2): JS 0x00019228
00019206(3): TEST RBP,RBP
00019209(2): JZ 0x0001921c
0001920b(3): TEST R12,R12
0001920e(8): MOV dword ptr [RSP + 0x5c],0x1
00019216(6): JNZ 0x00019c39
0001921c(3): XOR R12D,R12D
0001921f(2): XOR EBP,EBP
00019221(7): NOP dword ptr [RAX]
00019228(9): CMP qword ptr [0x270 + RSP],0x0
00019231(8): MOV dword ptr [RSP + 0x58],0x1
00019239(6): JZ 0x000195c0
0001923f(5): MOV R11,qword ptr [RSP + 0x38]
00019244(5): MOV RAX,qword ptr [RSP + 0x48]
00019249(8): MOV RDI,qword ptr [0x88 + RSP]
00019251(4): MOV RSI,qword ptr [R11 + 0x10]
00019255(4): MOV RBX,qword ptr [RAX + 0x28]
00019259(7): MOV EDX,dword ptr [0xb4 + R11]
00019260(4): MOV RAX,qword ptr [RAX + 0x18]
00019264(8): MOV qword ptr [0x178 + RSP],RDI
0001926c(8): MOV qword ptr [0x170 + RSP],RDI
00019274(5): MOV qword ptr [RSP + 0x8],RSI
00019279(4): LEA RSI,[RSI + 0x1]
0001927d(8): MOV qword ptr [0xb0 + RSP],RBX
00019285(3): MOVSXD RCX,EDX
00019288(4): SHR RAX,0x16
0001928c(8): MOV qword ptr [0x198 + RSP],RBX
00019294(3): AND EAX,0x1
00019297(3): CMP RSI,RCX
0001929a(7): MOV dword ptr [0x1b0 + RSP],EDX
000192a1(4): CMOVL RSI,RCX
000192a5(4): LEA RCX,[RDI + 0x1]
000192a9(7): MOV byte ptr [0x1a8 + RSP],AL
000192b0(8): MOV qword ptr [0x188 + RSP],RDI
000192b8(8): MOV qword ptr [0x180 + RSP],RDI
000192c0(3): CMP RSI,RCX
000192c3(4): MOV RDI,qword ptr [RSP]
000192c7(4): CMOVG RSI,RCX
000192cb(3): TEST RBX,RBX
000192ce(5): MOV RCX,qword ptr [RSP + 0x78]
000192d3(3): SETNZ BL
000192d6(2): OR EAX,EBX
000192d8(7): MOV byte ptr [0x1ab + RSP],AL
000192df(8): MOVZX EAX,byte ptr [0xb0 + R11]
000192e7(8): MOV qword ptr [0x120 + RSP],RCX
000192ef(2): MOV EDX,EAX
000192f1(3): SHR AL,0x3
000192f4(3): SHR DL,0x2
000192f7(3): AND EAX,0x1
000192fa(3): AND EDX,0x1
000192fd(7): MOV byte ptr [0x1aa + RSP],AL
00019304(7): MOV byte ptr [0x1a9 + RSP],DL
0001930b(5): CALL 0x00011050
00019310(2): TEST EAX,EAX
00019312(4): MOV dword ptr [RSP + 0x5c],EAX
00019316(6): JNZ 0x00019c10
0001931c(5): MOV RDI,qword ptr [RSP + 0x38]
00019321(7): LEA RAX,[0xb8 + RDI]
00019328(8): MOV qword ptr [0x1a0 + RSP],RAX
00019330(7): MOVZX EAX,byte ptr [0xb0 + RDI]
00019337(4): MOV byte ptr [RSP + 0x8],AL
0001933b(3): SHR AL,0x4
0001933e(3): AND EAX,0x1
00019341(8): CMP byte ptr [0x1ab + RSP],0x0
00019349(7): MOV byte ptr [0x1ae + RSP],AL
00019350(2): JNZ 0x00019375
00019352(5): MOV RSI,qword ptr [RSP + 0x38]
00019357(5): MOV RAX,qword ptr [RSP + 0x78]
0001935c(7): CMP dword ptr [0xb4 + RSI],0x1
00019363(8): MOV qword ptr [0x128 + RSP],RAX
0001936b(8): MOV RAX,qword ptr [0x88 + RSP]
00019373(2): JLE 0x00019377
00019375(2): XOR EAX,EAX
00019377(8): MOV qword ptr [0x150 + RSP],RAX
0001937f(8): MOV qword ptr [0x158 + RSP],RAX
00019387(5): MOV RAX,qword ptr [RSP + 0x48]
0001938c(8): MOV qword ptr [0x188 + RSP],R13
00019394(8): MOV qword ptr [0x180 + RSP],R13
0001939c(4): MOVZX EAX,byte ptr [RAX + 0x38]
000193a0(4): MOV byte ptr [RSP + 0x8],AL
000193a4(3): SHR AL,0x7
000193a7(7): MOV byte ptr [0x1ad + RSP],AL
000193ae(5): MOV RAX,qword ptr [RSP + 0x38]
000193b3(7): MOV R14,qword ptr [0x98 + RAX]
000193ba(7): MOV EAX,dword ptr [0x280 + RSP]
000193c1(12): MOV qword ptr [0x1c8 + RSP],-0x1
000193cd(4): LEA R13,[R14 + R14*0x1]
000193d1(7): MOV dword ptr [0x1c0 + RSP],EAX
000193d8(3): TEST R13,R13
000193db(2): JLE 0x0001942f
000193dd(10): MOV RAX,0x666666666666666
000193e7(3): CMP R13,RAX
000193ea(6): JG 0x0001a130
000193f0(5): LEA RDI,[R13 + R14*0x8]
000193f5(4): SHL RDI,0x3
000193f9(5): CALL 0x00002780
000193fe(3): MOV RDI,R14
00019401(3): MOV R15,RAX
00019404(8): MOV qword ptr [0x1f8 + RSP],RAX
0001940c(4): SHL RDI,0x4
00019410(5): CALL 0x00002780
00019415(3): TEST RAX,RAX
00019418(8): MOV qword ptr [0x218 + RSP],RAX
00019420(6): JZ 0x0001a130
00019426(3): TEST R15,R15
00019429(6): JZ 0x0001a130
0001942f(9): CMP qword ptr [0x270 + RSP],0x1
00019438(8): MOV qword ptr [0x1f0 + RSP],R13
00019440(11): MOV dword ptr [0x200 + RSP],0x1
0001944b(8): MOV qword ptr [0x210 + RSP],R13
00019453(6): JBE 0x0001a578
00019459(8): MOV RAX,qword ptr [0x160 + RSP]
00019461(10): MOV RDX,0x1ffffffffffffffe
0001946b(3): CMP RAX,RDX
0001946e(6): JA 0x0001a130
00019474(8): LEA RDI,[0x8 + RAX*0x8]
0001947c(5): CALL 0x00002780
00019481(3): TEST RAX,RAX
00019484(3): MOV RDI,RAX
00019487(8): MOV qword ptr [0x1d8 + RSP],RAX
0001948f(6): JZ 0x0001a180
00019495(7): MOV EAX,dword ptr [0x280 + RSP]
0001949c(8): MOV qword ptr [0xd8 + RSP],RBP
000194a4(3): AND EAX,0x1
000194a7(3): CMP EAX,0x1
000194aa(2): SBB EAX,EAX
000194ac(3): AND EAX,0x2
000194af(3): ADD EAX,0x4
000194b2(7): MOV dword ptr [0x190 + RSP],EAX
000194b9(2): XOR EAX,EAX
000194bb(3): CMP RBP,R12
000194be(3): SETLE AL
000194c1(4): LEA EAX,[RAX + RAX*0x1 + -0x1]
000194c5(7): MOV dword ptr [0xac + RSP],EAX
000194cc(3): MOV RAX,R12
000194cf(4): CMOVLE RAX,RBP
000194d3(8): MOV qword ptr [0x90 + RSP],RAX
000194db(3): MOV RAX,R12
000194de(4): CMOVGE RAX,RBP
000194e2(6): CMP qword ptr [RSP + 0x68],0x0
000194e8(5): MOV qword ptr [RSP + 0x70],RAX
000194ed(5): MOV RAX,qword ptr [RSP + 0x38]
000194f2(6): MOV ESI,dword ptr [0xb4 + RAX]
000194f8(5): MOV EAX,0x8
000194fd(7): MOV dword ptr [0xc8 + RSP],ESI
00019504(2): JZ 0x0001953f
00019506(3): CMP ESI,0x1
00019509(5): MOV ECX,0x4
0001950e(2): JZ 0x0001952e
00019510(5): MOV RAX,qword ptr [RSP + 0x48]
00019515(4): TEST byte ptr [RAX + 0x1a],0x40
00019519(6): JNZ 0x0001a29e
0001951f(9): CMP qword ptr [0xb0 + RSP],0x0
00019528(6): JNZ 0x0001a29e
0001952e(2): XOR EDX,EDX
00019530(3): CMP RBP,R12
00019533(3): MOVZX EAX,BL
00019536(3): SETLE DL
00019539(2): OR EAX,ECX
0001953b(2): ADD EDX,EDX
0001953d(2): OR EAX,EDX
0001953f(5): CMP RBP,qword ptr [RSP + 0x70]
00019544(3): SETG CL
00019547(8): CMP RBP,qword ptr [0x90 + RSP]
0001954f(3): SETL DL
00019552(2): OR CL,DL
00019554(6): JNZ 0x0001a029
0001955a(8): LEA RCX,[0xd8 + RSP]
00019562(3): CMP RBP,R12
00019565(5): MOV EDX,0x0
0001956a(4): CMOVLE RDX,RCX
0001956e(3): TEST RDX,RDX
00019571(8): MOV qword ptr [0xc0 + RSP],RDX
00019579(8): SETNZ byte ptr [0xcf + RSP]
00019581(3): SUB EAX,0x4
00019584(7): MOV dword ptr [0xa8 + RSP],EAX
0001958b(8): LEA RAX,[0xd0 + RSP]
00019593(5): MOV qword ptr [RSP + 0x28],RAX
00019598(7): MOV EAX,dword ptr [0xa8 + RSP]
0001959f(3): CMP EAX,0x4
000195a2(6): JA 0x0001a18d
000195a8(7): LEA RCX,[0x228e0]
000195af(4): MOVSXD RAX,dword ptr [RCX + RAX*0x4]
000195b3(3): ADD RAX,RCX
000195b6(2): JMP RAX
000195c0(5): MOV RAX,qword ptr [RSP + 0x38]
000195c5(8): CMP qword ptr [0x98 + RAX],0x0
000195cd(3): SETNZ AL
000195d0(3): MOVZX EAX,AL
000195d3(4): MOV dword ptr [RSP + 0x58],EAX
000195d7(5): JMP 0x0001923f
000195e0(9): MOV qword ptr [RSP + 0x68],0x0
000195e9(5): JMP 0x00019166
000195ee(5): CMP qword ptr [RSP + 0x70],RBP
000195f3(2): JLE 0x0001964f
000195f5(5): MOV RAX,qword ptr [RSP + 0x78]
000195fa(5): MOV RDI,qword ptr [RSP + 0x68]
000195ff(4): MOVZX EDX,byte ptr [RAX + RBP*0x1]
00019603(4): LEA RAX,[RBP + 0x1]
00019607(4): CMP byte ptr [RDI + RDX*0x1],0x0
0001960b(6): JNZ 0x00019698
00019611(5): MOV RSI,qword ptr [RSP + 0x68]
00019616(5): MOV RCX,qword ptr [RSP + 0x70]
0001961b(5): MOV RDI,qword ptr [RSP + 0x78]
00019620(2): JMP 0x0001963a
00019628(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0001962c(4): LEA RAX,[RAX + 0x1]
00019630(4): CMP byte ptr [RSI + RDX*0x1],0x0
00019634(6): JNZ 0x0001a7d1
0001963a(3): CMP RCX,RAX
0001963d(3): MOV RBP,RAX
00019640(2): JNZ 0x00019628
00019642(5): MOV RAX,qword ptr [RSP + 0x70]
00019647(8): MOV qword ptr [0xd8 + RSP],RAX
0001964f(5): CMP qword ptr [RSP + 0x70],RBP
00019654(2): JNZ 0x00019698
00019656(2): XOR EAX,EAX
00019658(5): MOV RSI,qword ptr [RSP + 0x70]
0001965d(8): CMP qword ptr [0x88 + RSP],RSI
00019665(2): JLE 0x00019670
00019667(5): MOV RAX,qword ptr [RSP + 0x78]
0001966c(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
00019670(8): MOV RSI,qword ptr [0xb0 + RSP]
00019678(3): TEST RSI,RSI
0001967b(2): JZ 0x00019681
0001967d(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
00019681(5): MOV RDI,qword ptr [RSP + 0x68]
00019686(4): CMP byte ptr [RDI + RAX*0x1],0x0
0001968a(6): JZ 0x0001a029
00019690(5): MOV RBP,qword ptr [RSP + 0x70]
00019695(3): NOP dword ptr [RAX]
00019698(7): MOV EDX,dword ptr [0x280 + RSP]
0001969f(4): MOV RDI,qword ptr [RSP]
000196a3(3): MOV RSI,RBP
000196a6(5): CALL 0x00014750
000196ab(2): TEST EAX,EAX
000196ad(4): MOV dword ptr [RSP + 0x5c],EAX
000196b1(6): JNZ 0x00019c10
000196b7(8): CMP dword ptr [0xc8 + RSP],0x1
000196bf(2): JZ 0x000196dd
000196c1(9): CMP qword ptr [0x150 + RSP],0x0
000196ca(2): JZ 0x000196dd
000196cc(8): MOV RAX,qword ptr [0x130 + RSP]
000196d4(3): CMP dword ptr [RAX],-0x1
000196d7(6): JZ 0x0001a001
000196dd(8): MOV RBX,qword ptr [0x1b8 + RSP]
000196e5(5): MOVZX EAX,byte ptr [RSP + 0x58]
000196ea(11): MOV dword ptr [0x200 + RSP],0x0
000196f5(12): MOV qword ptr [0x1e8 + RSP],0x0
00019701(12): MOV qword ptr [0x1e0 + RSP],0x0
0001970d(11): MOV dword ptr [0xd0 + RSP],0x0
00019718(4): MOV R14,qword ptr [RBX + 0x48]
0001971c(3): AND EAX,0x1
0001971f(7): MOV byte ptr [0xce + RSP],AL
00019726(8): MOV RAX,qword ptr [0x168 + RSP]
0001972e(5): CMP byte ptr [R14 + 0x68],0x0
00019733(5): MOV qword ptr [RSP + 0x8],RAX
00019738(6): JS 0x0001a0b0
0001973e(8): MOV RAX,qword ptr [0x1d8 + RSP]
00019746(3): TEST RAX,RAX
00019749(2): JZ 0x00019762
0001974b(8): CMP qword ptr [0x98 + RBX],0x0
00019753(5): MOV RDI,qword ptr [RSP + 0x8]
00019758(4): MOV qword ptr [RAX + RDI*0x8],R14
0001975c(6): JNZ 0x0001a64b
00019762(8): MOVZX EAX,byte ptr [0xcf + RSP]
0001976a(4): MOV byte ptr [RSP + 0x18],AL
0001976e(5): MOVZX EAX,byte ptr [R14 + 0x68]
00019773(2): TEST AL,0x10
00019775(9): MOV qword ptr [RSP + 0x20],-0x1
0001977e(9): MOV qword ptr [RSP + 0x30],0x0
00019787(6): JNZ 0x0001a610
0001978d(8): MOV RAX,qword ptr [0xc0 + RSP]
00019795(8): MOV R8,qword ptr [0x168 + RSP]
0001979d(5): MOV qword ptr [RSP + 0x50],RAX
000197a2(8): LEA RAX,[0xe0 + RSP]
000197aa(5): MOV qword ptr [RSP + 0x60],RAX
000197af(8): LEA RAX,[0xd4 + RSP]
000197b7(8): MOV qword ptr [0x80 + RSP],RAX
000197bf(2): JMP 0x0001981c
000197c8(3): CMP R14,R13
000197cb(8): MOV R8,qword ptr [0x168 + RSP]
000197d3(3): SETZ AL
000197d6(4): AND byte ptr [RSP + 0x18],AL
000197da(5): MOVZX EAX,byte ptr [R13 + 0x68]
000197df(6): CMOVZ RBX,qword ptr [RSP + 0x8]
000197e5(2): TEST AL,0x10
000197e7(5): MOV qword ptr [RSP + 0x8],RBX
000197ec(2): JZ 0x00019819
000197ee(2): TEST AL,AL
000197f0(6): JS 0x00019cb0
000197f6(4): MOV EAX,dword ptr [RSP + 0x58]
000197fa(5): MOV qword ptr [RSP + 0x20],R8
000197ff(2): TEST EAX,EAX
00019801(6): JZ 0x00019926
00019807(9): MOV qword ptr [RSP + 0x30],0x1
00019810(9): MOV qword ptr [RSP + 0x50],0x0
00019819(3): MOV R14,R13
0001981c(8): CMP qword ptr [0x188 + RSP],R8
00019824(6): JLE 0x00019914
0001982a(8): MOV RAX,qword ptr [0x160 + RSP]
00019832(4): LEA RBX,[R8 + 0x1]
00019836(3): CMP RBX,RAX
00019839(6): JGE 0x00019ce0
0001983f(8): MOV RAX,qword ptr [0x150 + RSP]
00019847(3): CMP RBX,RAX
0001984a(6): JGE 0x00019fd0
00019850(5): TEST byte ptr [R14 + 0x68],0x20
00019855(6): JNZ 0x00019d20
0001985b(4): LEA RAX,[R8 + 0x1]
0001985f(8): MOV qword ptr [0x168 + RSP],RAX
00019867(8): MOV RAX,qword ptr [0x128 + RSP]
0001986f(5): MOVZX R13D,byte ptr [RAX + R8*0x1]
00019874(4): MOV RAX,qword ptr [R14 + 0x58]
00019878(3): TEST RAX,RAX
0001987b(6): JZ 0x00019f90
00019881(4): MOV R13,qword ptr [RAX + R13*0x8]
00019885(9): CMP qword ptr [0x1d8 + RSP],0x0
0001988e(2): JZ 0x000198a4
00019890(4): MOV RSI,qword ptr [RSP]
00019894(5): MOV RDI,qword ptr [RSP + 0x28]
00019899(3): MOV RDX,R13
0001989c(5): CALL 0x00018b90
000198a1(3): MOV R13,RAX
000198a4(3): TEST R13,R13
000198a7(6): JNZ 0x000197c8
000198ad(7): MOV ECX,dword ptr [0xd0 + RSP]
000198b4(8): MOV RDI,qword ptr [0x1d8 + RSP]
000198bc(2): TEST ECX,ECX
000198be(6): JNZ 0x0001a180
000198c4(3): TEST RDI,RDI
000198c7(2): JZ 0x00019914
000198c9(8): MOVZX EAX,byte ptr [0xce + RSP]
000198d1(3): XOR EAX,0x1
000198d4(4): TEST byte ptr [RSP + 0x30],AL
000198d8(2): JNZ 0x00019914
000198da(8): MOV RSI,qword ptr [0x1e0 + RSP]
000198e2(8): MOV RAX,qword ptr [0x168 + RSP]
000198ea(2): XOR ECX,ECX
000198ec(2): JMP 0x00019903
000198f0(5): CMP qword ptr [RDI + RDX*0x8],0x0
000198f5(3): MOV RAX,RDX
000198f8(5): MOV ECX,0x1
000198fd(6): JNZ 0x00019c70
00019903(4): LEA RDX,[RAX + 0x1]
00019907(3): CMP RSI,RDX
0001990a(2): JGE 0x000198f0
0001990c(2): TEST CL,CL
0001990e(6): JNZ 0x0001a7de
00019914(5): MOV RAX,qword ptr [RSP + 0x50]
00019919(3): TEST RAX,RAX
0001991c(2): JZ 0x00019926
0001991e(5): MOV RDI,qword ptr [RSP + 0x8]
00019923(3): ADD qword ptr [RAX],RDI
00019926(5): MOV RAX,qword ptr [RSP + 0x20]
0001992b(4): CMP RAX,-0x1
0001992f(6): JZ 0x00019ff0
00019935(4): CMP RAX,-0x2
00019939(6): JZ 0x0001a130
0001993f(5): MOV RAX,qword ptr [RSP + 0x20]
00019944(8): MOV qword ptr [0x1c8 + RSP],RAX
0001994c(5): MOV RAX,qword ptr [RSP + 0x48]
00019951(4): TEST byte ptr [RAX + 0x38],0x10
00019955(6): JNZ 0x0001a110
0001995b(9): CMP qword ptr [0x270 + RSP],0x1
00019964(6): JBE 0x0001a25c
0001996a(5): MOV RCX,qword ptr [RSP + 0x20]
0001996f(8): MOV RBX,qword ptr [0x1d8 + RSP]
00019977(4): MOV RDI,qword ptr [RSP]
0001997b(4): MOV RAX,qword ptr [RBX + RCX*0x8]
0001997f(4): MOV RSI,qword ptr [RAX + 0x10]
00019983(4): LEA RDX,[RAX + 0x18]
00019987(5): CALL 0x00014680
0001998c(3): MOV R13,RAX
0001998f(8): MOV qword ptr [0x1d0 + RSP],RAX
00019997(5): MOV RAX,qword ptr [RSP + 0x38]
0001999c(7): TEST byte ptr [0xb0 + RAX],0x1
000199a3(2): JNZ 0x000199c0
000199a5(5): MOV RAX,qword ptr [RSP + 0x38]
000199aa(8): CMP qword ptr [0x98 + RAX],0x0
000199b2(6): JZ 0x0001a34c
000199b8(8): MOV R13,qword ptr [0x1d0 + RSP]
000199c0(10): MOV RSI,0x1ffffffffffffffe
000199ca(5): CMP qword ptr [RSP + 0x20],RSI
000199cf(8): MOV R15,qword ptr [0x1b8 + RSP]
000199d7(6): JA 0x0001a63b
000199dd(5): MOV RAX,qword ptr [RSP + 0x20]
000199e2(4): ADD RAX,0x1
000199e6(8): LEA RBX,[RAX*0x8]
000199ee(5): MOV qword ptr [RSP + 0x8],RAX
000199f3(3): MOV RDI,RBX
000199f6(5): CALL 0x00002780
000199fb(3): TEST RAX,RAX
000199fe(3): MOV R12,RAX
00019a01(6): JZ 0x0001a130
00019a07(8): CMP qword ptr [0x98 + R15],0x0
00019a0f(6): JZ 0x0001a2a5
00019a15(3): MOV RDI,RBX
00019a18(5): CALL 0x00002780
00019a1d(3): TEST RAX,RAX
00019a20(3): MOV RBP,RAX
00019a23(6): JZ 0x0001a128
00019a29(5): MOV R14,qword ptr [RSP + 0x20]
00019a2e(8): LEA RBX,[0xe0 + RSP]
00019a36(5): MOV qword ptr [RSP + 0x10],R15
00019a3b(5): MOV qword ptr [RSP + 0x18],RAX
00019a40(5): MOV RAX,qword ptr [RSP + 0x8]
00019a45(2): XOR ESI,ESI
00019a47(3): MOV RDI,RBP
00019a4a(8): LEA RDX,[RAX*0x8]
00019a52(5): CALL 0x00002620
00019a57(4): PXOR XMM0,XMM0
00019a5b(8): MOV qword ptr [0xe0 + RSP],R12
00019a63(8): MOV qword ptr [0xe8 + RSP],RBP
00019a6b(8): MOV qword ptr [0xf0 + RSP],R13
00019a73(3): MOV RSI,RBX
00019a76(8): MOV qword ptr [0xf8 + RSP],R14
00019a7e(4): MOV RDI,qword ptr [RSP]
00019a82(4): MOVAPS xmmword ptr [RBX + 0x20],XMM0
00019a86(8): MOV qword ptr [RBX + 0x30],0x0
00019a8e(5): CALL 0x00018d80
00019a93(8): MOV RDI,qword ptr [0x110 + RSP]
00019a9b(3): MOV R15D,EAX
00019a9e(5): CALL 0x00002a10
00019aa3(3): TEST R15D,R15D
00019aa6(6): JNZ 0x0001a6c4
00019aac(5): CMP qword ptr [R12],0x0
00019ab1(6): JNZ 0x0001a723
00019ab7(5): CMP qword ptr [RBP],0x0
00019abc(6): JNZ 0x0001a723
00019ac2(8): MOV RDX,qword ptr [0x1d8 + RSP]
00019aca(6): NOP word ptr [RAX + RAX*0x1]
00019ad0(4): SUB R14,0x1
00019ad4(4): CMP R14,-0x1
00019ad8(6): JZ 0x0001a59b
00019ade(4): MOV RAX,qword ptr [RDX + R14*0x8]
00019ae2(3): TEST RAX,RAX
00019ae5(2): JZ 0x00019ad0
00019ae7(4): TEST byte ptr [RAX + 0x68],0x10
00019aeb(2): JZ 0x00019ad0
00019aed(4): MOV RSI,qword ptr [RAX + 0x10]
00019af1(4): MOV RDI,qword ptr [RSP]
00019af5(4): LEA RDX,[RAX + 0x18]
00019af9(3): MOV RCX,R14
00019afc(5): CALL 0x00014680
00019b01(3): MOV R13,RAX
00019b04(4): LEA RAX,[R14 + 0x1]
00019b08(5): MOV qword ptr [RSP + 0x8],RAX
00019b0d(5): JMP 0x00019a40
00019b12(5): CMP qword ptr [RSP + 0x70],RBP
00019b17(6): JLE 0x0001964f
00019b1d(5): MOV RAX,qword ptr [RSP + 0x78]
00019b22(8): MOV RDI,qword ptr [0xb0 + RSP]
00019b2a(5): MOV RSI,qword ptr [RSP + 0x68]
00019b2f(4): MOVZX EAX,byte ptr [RAX + RBP*0x1]
00019b33(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
00019b37(4): LEA RAX,[RBP + 0x1]
00019b3b(4): CMP byte ptr [RSI + RDX*0x1],0x0
00019b3f(6): JNZ 0x00019698
00019b45(5): MOV RSI,qword ptr [RSP + 0x68]
00019b4a(8): MOV RDI,qword ptr [0xb0 + RSP]
00019b52(5): MOV RCX,qword ptr [RSP + 0x70]
00019b57(5): MOV R8,qword ptr [RSP + 0x78]
00019b5c(2): JMP 0x00019b77
00019b60(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
00019b65(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
00019b69(4): LEA RAX,[RBP + 0x1]
00019b6d(4): CMP byte ptr [RSI + RDX*0x1],0x0
00019b71(6): JNZ 0x0001a7d1
00019b77(3): CMP RCX,RAX
00019b7a(3): MOV RBP,RAX
00019b7d(2): JNZ 0x00019b60
00019b7f(5): JMP 0x00019642
00019b84(8): CMP qword ptr [0x90 + RSP],RBP
00019b8c(6): JG 0x0001a029
00019b92(2): XOR ECX,ECX
00019b94(3): MOV RAX,RBP
00019b97(5): MOV RDI,qword ptr [RSP + 0x68]
00019b9c(8): MOV RSI,qword ptr [0xb0 + RSP]
00019ba4(8): MOV R9,qword ptr [0x90 + RSP]
00019bac(5): MOV R10,qword ptr [RSP + 0x78]
00019bb1(8): MOV R8,qword ptr [0x88 + RSP]
00019bb9(2): JMP 0x00019bd2
00019bc0(4): SUB RAX,0x1
00019bc4(5): MOV ECX,0x1
00019bc9(3): CMP RAX,R9
00019bcc(6): JL 0x0001a5b0
00019bd2(2): XOR EDX,EDX
00019bd4(3): CMP R8,RAX
00019bd7(2): JLE 0x00019bde
00019bd9(5): MOVZX EDX,byte ptr [R10 + RAX*0x1]
00019bde(3): TEST RSI,RSI
00019be1(2): JZ 0x00019be7
00019be3(4): MOVZX EDX,byte ptr [RSI + RDX*0x1]
00019be7(4): CMP byte ptr [RDI + RDX*0x1],0x0
00019beb(2): JZ 0x00019bc0
00019bed(2): TEST CL,CL
00019bef(6): JZ 0x00019698
00019bf5(8): MOV qword ptr [0xd8 + RSP],RAX
00019bfd(3): MOV RBP,RAX
00019c00(5): JMP 0x00019698
00019c08(4): MOV dword ptr [RSP + 0x5c],EAX
00019c0c(4): NOP dword ptr [RAX]
00019c10(8): MOV RDI,qword ptr [0x1d8 + RSP]
00019c18(5): CALL 0x00002a10
00019c1d(5): MOV RAX,qword ptr [RSP + 0x38]
00019c22(8): CMP qword ptr [0x98 + RAX],0x0
00019c2a(6): JNZ 0x0001a550
00019c30(4): MOV RDI,qword ptr [RSP]
00019c34(5): CALL 0x00012390
00019c39(8): MOV RSI,qword ptr [0x228 + RSP]
00019c41(9): XOR RSI,qword ptr FS:[0x28]
00019c4a(4): MOV EAX,dword ptr [RSP + 0x5c]
00019c4e(6): JNZ 0x0001a7eb
00019c54(7): ADD RSP,0x238
00019c5b(1): POP RBX
00019c5c(1): POP RBP
00019c5d(2): POP R12
00019c5f(2): POP R13
00019c61(2): POP R14
00019c63(2): POP R15
00019c65(1): RET
00019c70(4): MOV RSI,qword ptr [RSP]
00019c74(5): MOV RDI,qword ptr [RSP + 0x28]
00019c79(8): MOV qword ptr [0x168 + RSP],RDX
00019c81(2): XOR EDX,EDX
00019c83(5): CALL 0x00018b90
00019c88(7): MOV EDX,dword ptr [0xd0 + RSP]
00019c8f(2): TEST EDX,EDX
00019c91(6): JNZ 0x0001a5cd
00019c97(3): TEST RAX,RAX
00019c9a(6): JNZ 0x0001a5e0
00019ca0(8): MOV RDI,qword ptr [0x1d8 + RSP]
00019ca8(5): JMP 0x000198da
00019cb0(4): MOV RSI,qword ptr [R13 + 0x10]
00019cb4(4): MOV RDI,qword ptr [RSP]
00019cb8(4): LEA RDX,[R13 + 0x18]
00019cbc(3): MOV RCX,R8
00019cbf(5): MOV qword ptr [RSP + 0x10],R8
00019cc4(5): CALL 0x00014680
00019cc9(3): TEST RAX,RAX
00019ccc(5): MOV R8,qword ptr [RSP + 0x10]
00019cd1(6): JZ 0x00019819
00019cd7(5): JMP 0x000197f6
00019ce0(8): CMP RAX,qword ptr [0x178 + RSP]
00019ce8(6): JGE 0x0001983f
00019cee(4): MOV RDI,qword ptr [RSP]
00019cf2(3): LEA ESI,[RBX + 0x1]
00019cf5(5): CALL 0x00011be0
00019cfa(2): TEST EAX,EAX
00019cfc(7): MOV dword ptr [0xd0 + RSP],EAX
00019d03(6): JNZ 0x0001a5e8
00019d09(5): TEST byte ptr [R14 + 0x68],0x20
00019d0e(8): MOV R8,qword ptr [0x168 + RSP]
00019d16(6): JZ 0x0001985b
00019d1c(4): NOP dword ptr [RAX]
00019d20(5): CMP qword ptr [R14 + 0x10],0x0
00019d25(8): MOV R13,qword ptr [0x1b8 + RSP]
00019d2d(6): JLE 0x0001a05b
00019d33(7): LEA RAX,[0xd8 + R13]
00019d3a(3): XOR R12D,R12D
00019d3d(8): MOV qword ptr [0xa0 + RSP],RBX
00019d45(3): MOV RBX,R12
00019d48(3): MOV R12,R8
00019d4b(5): MOV qword ptr [RSP + 0x40],RAX
00019d50(5): JMP 0x00019ea8
00019d58(2): TEST AL,0x1
00019d5a(6): JZ 0x00019e9a
00019d60(3): AND ECX,0x8
00019d63(6): JNZ 0x00019e9a
00019d69(3): TEST DL,0x20
00019d6c(2): JZ 0x00019d76
00019d6e(2): TEST AL,0x2
00019d70(6): JZ 0x00019e9a
00019d76(6): AND EDX,0x80
00019d7c(2): JZ 0x00019d90
00019d7e(2): TEST AL,0x8
00019d80(6): JZ 0x00019e9a
00019d86(10): NOP word ptr CS:[RAX + RAX*0x1]
00019d90(4): MOV RCX,qword ptr [RSP]
00019d94(5): MOV RSI,qword ptr [RSP + 0x40]
00019d99(3): MOV R8,R12
00019d9c(3): MOV RDX,R15
00019d9f(3): MOV RDI,RBP
00019da2(5): CALL 0x00016e50
00019da7(2): TEST EAX,EAX
00019da9(6): JZ 0x00019e92
00019daf(3): MOVSXD RBP,EAX
00019db2(8): ADD RBP,qword ptr [0x168 + RSP]
00019dba(7): CMP dword ptr [0x200 + RSP],EAX
00019dc1(8): CMOVGE EAX,dword ptr [0x200 + RSP]
00019dc9(4): MOV RDI,qword ptr [RSP]
00019dcd(3): MOV RSI,RBP
00019dd0(7): MOV dword ptr [0x200 + RSP],EAX
00019dd7(5): CALL 0x00011d30
00019ddc(2): TEST EAX,EAX
00019dde(7): MOV dword ptr [0xd4 + RSP],EAX
00019de5(6): JNZ 0x0001a080
00019deb(4): MOV RAX,qword ptr [R13 + 0x18]
00019def(8): LEA R12,[RBP*0x8]
00019df7(4): MOV RAX,qword ptr [RAX + R15*0x8]
00019dfb(8): MOV R15,qword ptr [0x1d8 + RSP]
00019e03(4): LEA RDX,[RAX + RAX*0x2]
00019e07(4): MOV RAX,qword ptr [R13 + 0x30]
00019e0b(3): ADD R15,R12
00019e0e(4): LEA RDX,[RAX + RDX*0x8]
00019e12(3): MOV RAX,qword ptr [R15]
00019e15(3): TEST RAX,RAX
00019e18(6): JZ 0x00019f18
00019e1e(4): MOV RSI,qword ptr [RAX + 0x50]
00019e22(5): MOV RDI,qword ptr [RSP + 0x60]
00019e27(5): CALL 0x00013890
00019e2c(2): TEST EAX,EAX
00019e2e(7): MOV dword ptr [0xd4 + RSP],EAX
00019e35(6): JNZ 0x0001a080
00019e3b(7): MOV EDX,dword ptr [0x1c0 + RSP]
00019e42(4): MOV RDI,qword ptr [RSP]
00019e46(4): LEA RSI,[RBP + -0x1]
00019e4a(5): CALL 0x00014480
00019e4f(5): MOV RDX,qword ptr [RSP + 0x60]
00019e54(8): MOV RDI,qword ptr [0x80 + RSP]
00019e5c(2): MOV ECX,EAX
00019e5e(8): ADD R12,qword ptr [0x1d8 + RSP]
00019e66(3): MOV RSI,R13
00019e69(5): CALL 0x000139f0
00019e6e(8): MOV RDI,qword ptr [0xf0 + RSP]
00019e76(4): MOV qword ptr [R12],RAX
00019e7a(5): CALL 0x00002a10
00019e7f(8): MOV RDI,qword ptr [0x1d8 + RSP]
00019e87(5): CMP qword ptr [RDI + RBP*0x8],0x0
00019e8c(6): JZ 0x00019f71
00019e92(8): MOV R12,qword ptr [0x168 + RSP]
00019e9a(4): ADD RBX,0x1
00019e9e(4): CMP RBX,qword ptr [R14 + 0x10]
00019ea2(6): JGE 0x0001a050
00019ea8(4): MOV RAX,qword ptr [R14 + 0x18]
00019eac(4): MOV RBP,qword ptr [R13]
00019eb0(4): MOV R15,qword ptr [RAX + RBX*0x8]
00019eb4(3): MOV RAX,R15
00019eb7(4): SHL RAX,0x4
00019ebb(3): ADD RAX,RBP
00019ebe(4): TEST byte ptr [RAX + 0xa],0x10
00019ec2(2): JZ 0x00019e9a
00019ec4(3): MOV ECX,dword ptr [RAX + 0x8]
00019ec7(6): TEST ECX,0x3ff00
00019ecd(4): MOV dword ptr [RSP + 0x10],ECX
00019ed1(6): JZ 0x00019d90
00019ed7(7): MOV EDX,dword ptr [0x1c0 + RSP]
00019ede(4): MOV RDI,qword ptr [RSP]
00019ee2(3): MOV RSI,R12
00019ee5(5): CALL 0x00014480
00019eea(4): MOV ECX,dword ptr [RSP + 0x10]
00019eee(3): SHR ECX,0x8
00019ef1(2): MOV EDX,ECX
00019ef3(5): AND DX,0x3ff
00019ef8(3): TEST CL,0x4
00019efb(6): JNZ 0x00019d58
00019f01(3): AND ECX,0x8
00019f04(6): JZ 0x00019d69
00019f0a(2): TEST AL,0x1
00019f0c(6): JZ 0x00019d69
00019f12(2): JMP 0x00019e9a
00019f18(4): MOVDQU XMM0,xmmword ptr [RDX]
00019f1c(4): LEA RSI,[RBP + -0x1]
00019f20(4): MOV RDI,qword ptr [RSP]
00019f24(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
00019f2c(4): MOV RAX,qword ptr [RDX + 0x10]
00019f30(7): MOV EDX,dword ptr [0x1c0 + RSP]
00019f37(8): MOV qword ptr [0xf0 + RSP],RAX
00019f3f(5): CALL 0x00014480
00019f44(8): MOV RDI,qword ptr [0x80 + RSP]
00019f4c(5): MOV RDX,qword ptr [RSP + 0x60]
00019f51(2): MOV ECX,EAX
00019f53(3): MOV RSI,R13
00019f56(5): CALL 0x000139f0
00019f5b(8): MOV RDI,qword ptr [0x1d8 + RSP]
00019f63(3): MOV qword ptr [R15],RAX
00019f66(5): CMP qword ptr [RDI + RBP*0x8],0x0
00019f6b(6): JNZ 0x00019e92
00019f71(7): MOV EAX,dword ptr [0xd4 + RSP]
00019f78(2): TEST EAX,EAX
00019f7a(6): JZ 0x00019e92
00019f80(8): MOV RBX,qword ptr [0xa0 + RSP]
00019f88(5): JMP 0x0001a090
00019f90(4): MOV RBP,qword ptr [R14 + 0x60]
00019f94(3): TEST RBP,RBP
00019f97(6): JZ 0x0001a145
00019f9d(8): MOV RAX,qword ptr [0x168 + RSP]
00019fa5(7): MOV EDX,dword ptr [0x1c0 + RSP]
00019fac(4): MOV RDI,qword ptr [RSP]
00019fb0(4): LEA RSI,[RAX + -0x1]
00019fb4(5): CALL 0x00014480
00019fb9(2): TEST AL,0x1
00019fbb(6): JZ 0x0001a070
00019fc1(8): MOV R13,qword ptr [0x800 + RBP + R13*0x8]
00019fc9(5): JMP 0x00019885
00019fd0(8): CMP RAX,qword ptr [0x178 + RSP]
00019fd8(6): JGE 0x00019850
00019fde(5): JMP 0x00019cee
00019fe3(3): MOV RDI,R12
00019fe6(5): CALL 0x00002a10
00019feb(5): NOP dword ptr [RAX + RAX*0x1]
00019ff0(4): MOV RDI,qword ptr [RSP]
00019ff4(5): CALL 0x00012530
00019ff9(8): MOV RBP,qword ptr [0xd8 + RSP]
0001a001(8): MOVSXD RAX,dword ptr [0xac + RSP]
0001a009(3): ADD RBP,RAX
0001a00c(8): CMP RBP,qword ptr [0x90 + RSP]
0001a014(8): MOV qword ptr [0xd8 + RSP],RBP
0001a01c(2): JL 0x0001a029
0001a01e(5): CMP RBP,qword ptr [RSP + 0x70]
0001a023(6): JLE 0x00019598
0001a029(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001a031(8): MOV dword ptr [RSP + 0x5c],0x1
0001a039(5): JMP 0x00019c18
0001a040(8): MOV dword ptr [RSP + 0x5c],0x1
0001a048(5): JMP 0x00019c39
0001a050(8): MOV RBX,qword ptr [0xa0 + RSP]
0001a058(3): MOV R8,R12
0001a05b(11): MOV dword ptr [0xd0 + RSP],0x0
0001a066(5): JMP 0x0001985b
0001a070(5): MOV R13,qword ptr [RBP + R13*0x8]
0001a075(5): JMP 0x00019885
0001a080(8): MOV RBX,qword ptr [0xa0 + RSP]
0001a088(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001a090(3): TEST RDI,RDI
0001a093(7): MOV dword ptr [0xd0 + RSP],EAX
0001a09a(6): JZ 0x0001a180
0001a0a0(3): XOR R13D,R13D
0001a0a3(5): JMP 0x00019890
0001a0b0(7): MOV EDX,dword ptr [0x1c0 + RSP]
0001a0b7(4): MOV RDI,qword ptr [RSP]
0001a0bb(4): LEA RSI,[RAX + -0x1]
0001a0bf(5): CALL 0x00014480
0001a0c4(2): TEST AL,0x1
0001a0c6(6): JZ 0x0001a235
0001a0cc(4): MOV R14,qword ptr [RBX + 0x50]
0001a0d0(3): TEST R14,R14
0001a0d3(6): JNZ 0x0001973e
0001a0d9(7): MOV EAX,dword ptr [0xd0 + RSP]
0001a0e0(3): CMP EAX,0xc
0001a0e3(4): MOV dword ptr [RSP + 0x5c],EAX
0001a0e7(6): JZ 0x00019c10
0001a0ed(7): LEA RCX,[0x22d70]
0001a0f4(7): LEA RSI,[0x227a0]
0001a0fb(7): LEA RDI,[0x22850]
0001a102(5): MOV EDX,0x435
0001a107(5): CALL 0x00002600
0001a10c(4): NOP dword ptr [RAX]
0001a110(5): MOV RAX,qword ptr [RSP + 0x38]
0001a115(8): CMP qword ptr [0x98 + RAX],0x0
0001a11d(6): JZ 0x0001a34c
0001a123(5): JMP 0x0001a26f
0001a128(3): MOV RDI,R12
0001a12b(5): CALL 0x00002a10
0001a130(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001a138(8): MOV dword ptr [RSP + 0x5c],0xc
0001a140(5): JMP 0x00019c18
0001a145(8): MOV RDI,qword ptr [0x1b8 + RSP]
0001a14d(3): MOV RSI,R14
0001a150(5): CALL 0x00015130
0001a155(2): TEST AL,AL
0001a157(6): JNZ 0x00019874
0001a15d(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001a165(11): MOV dword ptr [0xd0 + RSP],0xc
0001a170(3): TEST RDI,RDI
0001a173(6): JNZ 0x0001a0a0
0001a179(7): NOP dword ptr [RAX]
0001a180(8): MOV dword ptr [RSP + 0x5c],0xc
0001a188(5): JMP 0x00019c18
0001a18d(5): MOV RBX,qword ptr [RSP + 0x68]
0001a192(8): MOV R13D,dword ptr [0xac + RSP]
0001a19a(8): MOV R14,qword ptr [0x90 + RSP]
0001a1a2(5): MOV R15,qword ptr [RSP + 0x70]
0001a1a7(8): MOV R12,qword ptr [0x88 + RSP]
0001a1af(2): JMP 0x0001a1f8
0001a1b8(3): CMP R12,RBP
0001a1bb(3): MOV RAX,RBX
0001a1be(2): JLE 0x0001a1cf
0001a1c0(8): MOV RAX,qword ptr [0x128 + RSP]
0001a1c8(4): MOVZX EAX,byte ptr [RAX + RDX*0x1]
0001a1cc(3): ADD RAX,RBX
0001a1cf(3): CMP byte ptr [RAX],0x0
0001a1d2(6): JNZ 0x00019698
0001a1d8(3): MOVSXD RAX,R13D
0001a1db(3): ADD RBP,RAX
0001a1de(3): CMP RBP,R14
0001a1e1(8): MOV qword ptr [0xd8 + RSP],RBP
0001a1e9(6): JL 0x0001a029
0001a1ef(3): CMP RBP,R15
0001a1f2(6): JG 0x0001a029
0001a1f8(3): MOV RDX,RBP
0001a1fb(8): SUB RDX,qword ptr [0x148 + RSP]
0001a203(8): CMP qword ptr [0x158 + RSP],RDX
0001a20b(2): JA 0x0001a1b8
0001a20d(7): MOV EDX,dword ptr [0x280 + RSP]
0001a214(4): MOV RDI,qword ptr [RSP]
0001a218(3): MOV RSI,RBP
0001a21b(5): CALL 0x00014750
0001a220(2): TEST EAX,EAX
0001a222(6): JNZ 0x00019c08
0001a228(3): MOV RDX,RBP
0001a22b(8): SUB RDX,qword ptr [0x148 + RSP]
0001a233(2): JMP 0x0001a1b8
0001a235(2): TEST EAX,EAX
0001a237(6): JZ 0x0001973e
0001a23d(2): MOV EDX,EAX
0001a23f(3): AND EDX,0x6
0001a242(3): CMP EDX,0x6
0001a245(6): JZ 0x0001a6af
0001a24b(2): TEST AL,0x2
0001a24d(6): JZ 0x0001a700
0001a253(4): MOV R14,qword ptr [RBX + 0x58]
0001a257(5): JMP 0x0001a0d0
0001a25c(5): MOV RAX,qword ptr [RSP + 0x38]
0001a261(8): CMP qword ptr [0x98 + RAX],0x0
0001a269(6): JZ 0x0001a34c
0001a26f(5): MOV RCX,qword ptr [RSP + 0x20]
0001a274(8): MOV RBX,qword ptr [0x1d8 + RSP]
0001a27c(4): MOV RDI,qword ptr [RSP]
0001a280(4): MOV RAX,qword ptr [RBX + RCX*0x8]
0001a284(4): MOV RSI,qword ptr [RAX + 0x10]
0001a288(4): LEA RDX,[RAX + 0x18]
0001a28c(5): CALL 0x00014680
0001a291(8): MOV qword ptr [0x1d0 + RSP],RAX
0001a299(5): JMP 0x000199b8
0001a29e(2): XOR ECX,ECX
0001a2a0(5): JMP 0x0001952e
0001a2a5(4): PXOR XMM0,XMM0
0001a2a9(8): MOV qword ptr [0xe0 + RSP],RAX
0001a2b1(4): MOV RDI,qword ptr [RSP]
0001a2b5(5): MOV RAX,qword ptr [RSP + 0x20]
0001a2ba(8): LEA RBX,[0xe0 + RSP]
0001a2c2(12): MOV qword ptr [0xe8 + RSP],0x0
0001a2ce(8): MOV qword ptr [0xf0 + RSP],R13
0001a2d6(3): MOV RSI,RBX
0001a2d9(12): MOV qword ptr [0x110 + RSP],0x0
0001a2e5(8): MOVAPS xmmword ptr [0x100 + RSP],XMM0
0001a2ed(8): MOV qword ptr [0xf8 + RSP],RAX
0001a2f5(5): CALL 0x00018d80
0001a2fa(8): MOV RDI,qword ptr [0x110 + RSP]
0001a302(4): MOV dword ptr [RSP + 0x8],EAX
0001a306(5): CALL 0x00002a10
0001a30b(4): MOV EAX,dword ptr [RSP + 0x8]
0001a30f(2): TEST EAX,EAX
0001a311(6): JNZ 0x0001a758
0001a317(5): CMP qword ptr [R12],0x0
0001a31c(6): JZ 0x00019fe3
0001a322(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001a32a(5): CALL 0x00002a10
0001a32f(5): MOV RAX,qword ptr [RSP + 0x20]
0001a334(8): MOV qword ptr [0x1d8 + RSP],R12
0001a33c(8): MOV qword ptr [0x1d0 + RSP],R13
0001a344(8): MOV qword ptr [0x1c8 + RSP],RAX
0001a34c(9): CMP qword ptr [0x270 + RSP],0x0
0001a355(6): JZ 0x00019c10
0001a35b(9): CMP qword ptr [0x270 + RSP],0x1
0001a364(6): JZ 0x0001a788
0001a36a(8): MOV RSI,qword ptr [0xb8 + RSP]
0001a372(8): MOV RCX,qword ptr [0x270 + RSP]
0001a37a(7): MOV RDX,-0x1
0001a381(4): SHL RCX,0x4
0001a385(4): LEA RAX,[RSI + 0x10]
0001a389(3): ADD RCX,RSI
0001a38c(4): MOV qword ptr [RAX + 0x8],RDX
0001a390(3): MOV qword ptr [RAX],RDX
0001a393(4): ADD RAX,0x10
0001a397(3): CMP RCX,RAX
0001a39a(2): JNZ 0x0001a38c
0001a39c(8): MOV RDI,qword ptr [0xb8 + RSP]
0001a3a4(8): MOV RAX,qword ptr [0x1c8 + RSP]
0001a3ac(4): MOV qword ptr [RDI + 0x8],RAX
0001a3b0(5): MOV RAX,qword ptr [RSP + 0x48]
0001a3b5(7): MOV qword ptr [RDI],0x0
0001a3bc(4): TEST byte ptr [RAX + 0x38],0x10
0001a3c0(6): JNZ 0x0001a7a3
0001a3c6(9): CMP qword ptr [0x270 + RSP],0x1
0001a3cf(6): JZ 0x0001a7a3
0001a3d5(5): MOV RAX,qword ptr [RSP + 0x38]
0001a3da(3): XOR R8D,R8D
0001a3dd(7): TEST byte ptr [0xb0 + RAX],0x1
0001a3e4(2): JZ 0x0001a3f5
0001a3e6(3): XOR R8D,R8D
0001a3e9(8): CMP qword ptr [0x98 + RAX],0x0
0001a3f1(4): SETG R8B
0001a3f5(8): MOV RBX,qword ptr [0xb8 + RSP]
0001a3fd(8): MOV RDX,qword ptr [0x270 + RSP]
0001a405(4): MOV RSI,qword ptr [RSP]
0001a409(5): MOV RDI,qword ptr [RSP + 0x48]
0001a40e(3): MOV RCX,RBX
0001a411(5): CALL 0x00017810
0001a416(2): TEST EAX,EAX
0001a418(6): JNZ 0x0001a6ed
0001a41e(3): MOV RAX,qword ptr [RBX]
0001a421(9): MOVZX R11D,byte ptr [0x1ac + RSP]
0001a42a(8): MOV R10,qword ptr [0x150 + RSP]
0001a432(2): XOR ECX,ECX
0001a434(8): MOV R9,qword ptr [0x138 + RSP]
0001a43c(8): MOV R8,qword ptr [0x158 + RSP]
0001a444(8): MOV RDI,qword ptr [0xd8 + RSP]
0001a44c(8): MOV RDX,qword ptr [0xb8 + RSP]
0001a454(2): JMP 0x0001a459
0001a456(3): MOV RAX,qword ptr [RDX]
0001a459(4): CMP RAX,-0x1
0001a45d(2): JZ 0x0001a479
0001a45f(3): TEST R11B,R11B
0001a462(4): MOV RSI,qword ptr [RDX + 0x8]
0001a466(6): JNZ 0x0001a7aa
0001a46c(3): ADD RAX,RDI
0001a46f(3): ADD RSI,RDI
0001a472(3): MOV qword ptr [RDX],RAX
0001a475(4): MOV qword ptr [RDX + 0x8],RSI
0001a479(4): ADD RCX,0x1
0001a47d(4): ADD RDX,0x10
0001a481(8): CMP RCX,qword ptr [0x270 + RSP]
0001a489(2): JNZ 0x0001a456
0001a48b(9): CMP qword ptr [0x98 + RSP],0x0
0001a494(2): JLE 0x0001a4d5
0001a496(8): MOV RDX,qword ptr [0x98 + RSP]
0001a49e(8): MOV RDI,qword ptr [0xb8 + RSP]
0001a4a6(3): MOV RAX,RCX
0001a4a9(4): SHL RAX,0x4
0001a4ad(3): ADD RDX,RCX
0001a4b0(5): LEA RAX,[RDI + RAX*0x1 + 0x8]
0001a4b5(4): SHL RDX,0x4
0001a4b9(5): LEA RSI,[RDI + RDX*0x1 + 0x8]
0001a4be(7): MOV RDX,-0x1
0001a4c5(4): MOV qword ptr [RAX + -0x8],RDX
0001a4c9(3): MOV qword ptr [RAX],RDX
0001a4cc(4): ADD RAX,0x10
0001a4d0(3): CMP RSI,RAX
0001a4d3(2): JNZ 0x0001a4c5
0001a4d5(5): MOV RAX,qword ptr [RSP + 0x38]
0001a4da(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001a4e2(7): MOV R9,qword ptr [0xe0 + RAX]
0001a4e9(3): TEST R9,R9
0001a4ec(6): JZ 0x00019c18
0001a4f2(8): MOV R10,qword ptr [0xb8 + RSP]
0001a4fa(3): XOR R8D,R8D
0001a4fd(4): LEA RDX,[R10 + 0x10]
0001a501(2): JMP 0x0001a539
0001a503(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
0001a508(3): CMP RAX,R8
0001a50b(2): JZ 0x0001a532
0001a50d(4): ADD RAX,0x1
0001a511(4): SHL RAX,0x4
0001a515(4): MOV RAX,qword ptr [R10 + RAX*0x1]
0001a519(3): MOV qword ptr [RDX],RAX
0001a51c(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
0001a521(4): ADD RAX,0x1
0001a525(4): SHL RAX,0x4
0001a529(5): MOV RAX,qword ptr [R10 + RAX*0x1 + 0x8]
0001a52e(4): MOV qword ptr [RDX + 0x8],RAX
0001a532(4): ADD RDX,0x10
0001a536(3): MOV R8,RSI
0001a539(4): LEA RSI,[R8 + 0x1]
0001a53d(3): CMP RSI,RCX
0001a540(2): JNZ 0x0001a503
0001a542(5): JMP 0x00019c18
0001a550(4): MOV RDI,qword ptr [RSP]
0001a554(5): CALL 0x00012530
0001a559(8): MOV RDI,qword ptr [0x218 + RSP]
0001a561(5): CALL 0x00002a10
0001a566(8): MOV RDI,qword ptr [0x1f8 + RSP]
0001a56e(5): CALL 0x00002a10
0001a573(5): JMP 0x00019c30
0001a578(5): MOV RAX,qword ptr [RSP + 0x38]
0001a57d(7): TEST byte ptr [0xb0 + RAX],0x2
0001a584(6): JNZ 0x00019459
0001a58a(12): MOV qword ptr [0x1d8 + RSP],0x0
0001a596(5): JMP 0x00019495
0001a59b(3): MOV RDI,R12
0001a59e(5): CALL 0x00002a10
0001a5a3(3): MOV RDI,RBP
0001a5a6(5): CALL 0x00002a10
0001a5ab(5): JMP 0x00019ff0
0001a5b0(8): MOV qword ptr [0xd8 + RSP],RAX
0001a5b8(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001a5c0(8): MOV dword ptr [RSP + 0x5c],0x1
0001a5c8(5): JMP 0x00019c18
0001a5cd(3): TEST RAX,RAX
0001a5d0(3): MOV R13,RAX
0001a5d3(6): JNZ 0x000197c8
0001a5d9(5): JMP 0x00019914
0001a5e0(3): MOV R13,RAX
0001a5e3(5): JMP 0x000197c8
0001a5e8(3): CMP EAX,0xc
0001a5eb(6): JZ 0x0001a130
0001a5f1(7): LEA RCX,[0x22d70]
0001a5f8(7): LEA RSI,[0x227a0]
0001a5ff(7): LEA RDI,[0x22850]
0001a606(5): MOV EDX,0x46c
0001a60b(5): CALL 0x00002600
0001a610(5): CMP byte ptr [R14 + 0x68],0x0
0001a615(2): JS 0x0001a686
0001a617(4): MOV ESI,dword ptr [RSP + 0x58]
0001a61b(5): MOV RAX,qword ptr [RSP + 0x8]
0001a620(2): TEST ESI,ESI
0001a622(5): MOV qword ptr [RSP + 0x20],RAX
0001a627(6): JZ 0x00019926
0001a62d(9): MOV qword ptr [RSP + 0x30],0x1
0001a636(5): JMP 0x0001978d
0001a63b(3): MOV RDI,RBX
0001a63e(8): MOV dword ptr [RSP + 0x5c],0xc
0001a646(5): JMP 0x00019c18
0001a64b(4): LEA RBX,[R14 + 0x10]
0001a64f(4): LEA RBP,[R14 + 0x18]
0001a653(4): MOV RDI,qword ptr [RSP]
0001a657(2): XOR ECX,ECX
0001a659(3): MOV RDX,RBP
0001a65c(3): MOV RSI,RBX
0001a65f(5): CALL 0x00014330
0001a664(2): TEST EAX,EAX
0001a666(7): MOV dword ptr [0xd0 + RSP],EAX
0001a66d(2): JNZ 0x0001a6b8
0001a66f(5): MOVZX EAX,byte ptr [R14 + 0x68]
0001a674(2): TEST AL,0x40
0001a676(6): JNZ 0x0001a760
0001a67c(5): MOV byte ptr [RSP + 0x18],0x0
0001a681(5): JMP 0x00019773
0001a686(4): MOV RSI,qword ptr [R14 + 0x10]
0001a68a(5): MOV RCX,qword ptr [RSP + 0x8]
0001a68f(4): LEA RDX,[R14 + 0x18]
0001a693(4): MOV RDI,qword ptr [RSP]
0001a697(5): CALL 0x00014680
0001a69c(3): TEST RAX,RAX
0001a69f(5): MOV qword ptr [RSP + 0x30],RAX
0001a6a4(6): JZ 0x0001978d
0001a6aa(5): JMP 0x0001a617
0001a6af(4): MOV R14,qword ptr [RBX + 0x60]
0001a6b3(5): JMP 0x0001a0d0
0001a6b8(2): CDQE
0001a6ba(5): MOV qword ptr [RSP + 0x20],RAX
0001a6bf(5): JMP 0x00019926
0001a6c4(5): MOV R14,qword ptr [RSP + 0x18]
0001a6c9(3): MOV EAX,R15D
0001a6cc(3): MOV RDI,R12
0001a6cf(4): MOV dword ptr [RSP + 0x8],EAX
0001a6d3(5): CALL 0x00002a10
0001a6d8(3): MOV RDI,R14
0001a6db(5): CALL 0x00002a10
0001a6e0(4): MOV EAX,dword ptr [RSP + 0x8]
0001a6e4(3): CMP EAX,0x1
0001a6e7(6): JZ 0x00019ff0
0001a6ed(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001a6f5(4): MOV dword ptr [RSP + 0x5c],EAX
0001a6f9(5): JMP 0x00019c18
0001a700(2): TEST AL,0x4
0001a702(6): JZ 0x0001973e
0001a708(4): MOV RDX,qword ptr [R14 + 0x50]
0001a70c(5): MOV RDI,qword ptr [RSP + 0x28]
0001a711(2): MOV ECX,EAX
0001a713(3): MOV RSI,RBX
0001a716(5): CALL 0x000139f0
0001a71b(3): MOV R14,RAX
0001a71e(5): JMP 0x0001a0d0
0001a723(5): MOV R15,qword ptr [RSP + 0x10]
0001a728(5): MOV RCX,qword ptr [RSP + 0x8]
0001a72d(3): MOV RDX,RBP
0001a730(3): MOV RSI,R12
0001a733(5): MOV qword ptr [RSP + 0x20],R14
0001a738(3): MOV RDI,R15
0001a73b(5): CALL 0x00013eb0
0001a740(3): MOV RDI,RBP
0001a743(4): MOV dword ptr [RSP + 0x8],EAX
0001a747(5): CALL 0x00002a10
0001a74c(4): MOV EAX,dword ptr [RSP + 0x8]
0001a750(2): TEST EAX,EAX
0001a752(6): JZ 0x0001a322
0001a758(3): XOR R14D,R14D
0001a75b(5): JMP 0x0001a6cc
0001a760(4): MOV RDI,qword ptr [RSP]
0001a764(3): MOV RDX,RBP
0001a767(3): MOV RSI,RBX
0001a76a(5): CALL 0x000182a0
0001a76f(2): TEST EAX,EAX
0001a771(7): MOV dword ptr [0xd0 + RSP],EAX
0001a778(6): JNZ 0x0001a6b8
0001a77e(5): MOVZX EAX,byte ptr [R14 + 0x68]
0001a783(5): JMP 0x0001a67c
0001a788(8): MOV RSI,qword ptr [0xb8 + RSP]
0001a790(8): MOV RAX,qword ptr [0x1c8 + RSP]
0001a798(7): MOV qword ptr [RSI],0x0
0001a79f(4): MOV qword ptr [RSI + 0x8],RAX
0001a7a3(2): XOR EAX,EAX
0001a7a5(5): JMP 0x0001a421
0001a7aa(3): CMP R10,RAX
0001a7ad(2): JZ 0x0001a7cc
0001a7af(4): MOV RAX,qword ptr [R9 + RAX*0x8]
0001a7b3(3): CMP R10,RSI
0001a7b6(3): MOV qword ptr [RDX],RAX
0001a7b9(2): JZ 0x0001a7c4
0001a7bb(4): MOV RSI,qword ptr [R9 + RSI*0x8]
0001a7bf(5): JMP 0x0001a46c
0001a7c4(3): MOV RSI,R8
0001a7c7(5): JMP 0x0001a46c
0001a7cc(3): MOV RAX,R8
0001a7cf(2): JMP 0x0001a7b3
0001a7d1(8): MOV qword ptr [0xd8 + RSP],RBP
0001a7d9(5): JMP 0x00019698
0001a7de(8): MOV qword ptr [0x168 + RSP],RAX
0001a7e6(5): JMP 0x00019914
0001a7eb(5): CALL 0x00002560
0001a7f0(2): PUSH R15
0001a7f2(2): PUSH R14
0001a7f4(3): MOV RAX,RDI
0001a7f7(2): PUSH R13
0001a7f9(2): PUSH R12
0001a7fb(3): MOV R13,RSI
0001a7fe(1): PUSH RBP
0001a7ff(1): PUSH RBX
0001a800(3): MOV RBP,RDX
0001a803(3): MOV RBX,RCX
0001a806(8): LEA RCX,[RDX*0x8]
0001a80e(7): SUB RSP,0xa8
0001a815(7): MOV R12,qword ptr [0x98 + RAX]
0001a81c(7): MOV RAX,qword ptr [0xb8 + RAX]
0001a823(5): MOV qword ptr [RSP + 0x8],RDI
0001a828(5): MOV qword ptr [RSP + 0x18],RCX
0001a82d(9): MOV RDI,qword ptr FS:[0x28]
0001a836(8): MOV qword ptr [0x98 + RSP],RDI
0001a83e(2): XOR EDI,EDI
0001a840(4): MOV RDX,qword ptr [RAX + RDX*0x8]
0001a844(8): MOV dword ptr [RSP + 0x5c],0x0
0001a84c(4): MOV RCX,qword ptr [RBX + 0x8]
0001a850(3): TEST RDX,RDX
0001a853(6): JZ 0x0001aaa8
0001a859(4): LEA RDI,[RDX + 0x8]
0001a85d(3): TEST RCX,RCX
0001a860(5): MOV qword ptr [RSP + 0x10],RDI
0001a865(2): JNZ 0x0001a8b8
0001a867(3): MOV RDX,qword ptr [RSI]
0001a86a(8): MOV qword ptr [RDX + RBP*0x8],0x0
0001a872(4): MOV RDX,qword ptr [RAX + RBP*0x8]
0001a876(2): XOR EAX,EAX
0001a878(4): TEST byte ptr [RDX + 0x68],0x40
0001a87c(6): JNZ 0x0001a95f
0001a882(6): NOP word ptr [RAX + RAX*0x1]
0001a888(8): MOV RDI,qword ptr [0x98 + RSP]
0001a890(9): XOR RDI,qword ptr FS:[0x28]
0001a899(6): JNZ 0x0001b03b
0001a89f(7): ADD RSP,0xa8
0001a8a6(1): POP RBX
0001a8a7(1): POP RBP
0001a8a8(2): POP R12
0001a8aa(2): POP R13
0001a8ac(2): POP R14
0001a8ae(2): POP R15
0001a8b0(1): RET
0001a8b8(5): LEA RDI,[RSP + 0x60]
0001a8bd(3): MOV RDX,RBX
0001a8c0(3): MOV RSI,R12
0001a8c3(8): MOV dword ptr [RSP + 0x60],0x0
0001a8cb(5): CALL 0x00013cb0
0001a8d0(3): MOV RDX,RAX
0001a8d3(4): MOV EAX,dword ptr [RSP + 0x60]
0001a8d7(2): TEST EAX,EAX
0001a8d9(2): JNZ 0x0001a888
0001a8db(4): MOV R15,qword ptr [RDX + 0x38]
0001a8df(4): LEA R14,[RDX + 0x38]
0001a8e3(3): TEST R15,R15
0001a8e6(6): JZ 0x0001aaf0
0001a8ec(5): MOV RSI,qword ptr [RSP + 0x10]
0001a8f1(3): MOV RDX,R14
0001a8f4(3): MOV RDI,RBX
0001a8f7(5): CALL 0x000131b0
0001a8fc(2): TEST EAX,EAX
0001a8fe(4): MOV dword ptr [RSP + 0x5c],EAX
0001a902(2): JNZ 0x0001a888
0001a904(5): CMP qword ptr [R13 + 0x28],0x0
0001a909(6): JNZ 0x0001ab80
0001a90f(5): MOV R14,qword ptr [RSP + 0x18]
0001a914(4): ADD R14,qword ptr [R13]
0001a918(5): LEA RDI,[RSP + 0x5c]
0001a91d(3): MOV RDX,RBX
0001a920(3): MOV RSI,R12
0001a923(5): CALL 0x00013cb0
0001a928(3): MOV qword ptr [R14],RAX
0001a92b(4): MOV EAX,dword ptr [RSP + 0x5c]
0001a92f(2): TEST EAX,EAX
0001a931(6): JNZ 0x0001a888
0001a937(6): CMP qword ptr [RSP + 0x10],0x0
0001a93d(6): JZ 0x0001a888
0001a943(5): MOV RAX,qword ptr [RSP + 0x8]
0001a948(7): MOV RAX,qword ptr [0xb8 + RAX]
0001a94f(4): MOV RDX,qword ptr [RAX + RBP*0x8]
0001a953(2): XOR EAX,EAX
0001a955(4): TEST byte ptr [RDX + 0x68],0x40
0001a959(6): JZ 0x0001a888
0001a95f(5): MOV RAX,qword ptr [RSP + 0x8]
0001a964(2): XOR EBX,EBX
0001a966(7): MOV RSI,qword ptr [0xc8 + RAX]
0001a96d(3): MOV RDX,RSI
0001a970(3): CMP RBX,RDX
0001a973(2): JGE 0x0001a9d3
0001a975(4): LEA RAX,[RBX + RDX*0x1]
0001a979(3): MOV RCX,RAX
0001a97c(4): SHR RCX,0x3f
0001a980(3): ADD RCX,RAX
0001a983(5): MOV RAX,qword ptr [RSP + 0x8]
0001a988(3): SAR RCX,1
0001a98b(7): MOV RDI,qword ptr [0xd8 + RAX]
0001a992(4): LEA RAX,[RCX + RCX*0x4]
0001a996(5): CMP RBP,qword ptr [RDI + RAX*0x8 + 0x8]
0001a99b(2): JLE 0x0001a9ce
0001a99d(5): JMP 0x0001aad7
0001a9a8(4): LEA RDX,[RBX + RCX*0x1]
0001a9ac(3): MOV RAX,RDX
0001a9af(4): SHR RAX,0x3f
0001a9b3(3): ADD RAX,RDX
0001a9b6(3): SAR RAX,1
0001a9b9(4): LEA RDX,[RAX + RAX*0x4]
0001a9bd(3): MOV R8,RAX
0001a9c0(5): CMP RBP,qword ptr [RDI + RDX*0x8 + 0x8]
0001a9c5(6): JG 0x0001aae0
0001a9cb(3): MOV RCX,RAX
0001a9ce(3): CMP RBX,RCX
0001a9d1(2): JL 0x0001a9a8
0001a9d3(3): CMP RSI,RBX
0001a9d6(6): JLE 0x0001aad0
0001a9dc(4): LEA RAX,[RBX + RBX*0x4]
0001a9e0(8): LEA RSI,[RAX*0x8]
0001a9e8(5): MOV RAX,qword ptr [RSP + 0x8]
0001a9ed(5): MOV qword ptr [RSP + 0x40],RSI
0001a9f2(7): MOV RAX,qword ptr [0xd8 + RAX]
0001a9f9(5): CMP RBP,qword ptr [RAX + RSI*0x1 + 0x8]
0001a9fe(6): JNZ 0x0001aad0
0001aa04(4): CMP RBX,-0x1
0001aa08(6): JZ 0x0001aad0
0001aa0e(5): MOV RAX,qword ptr [RSP + 0x8]
0001aa13(9): MOV qword ptr [RSP + 0x60],0x0
0001aa1c(7): MOV R12,qword ptr [0x98 + RAX]
0001aa23(5): MOV RAX,qword ptr [RSP + 0x10]
0001aa28(5): CMP qword ptr [RAX + 0x8],0x0
0001aa2d(6): JLE 0x0001aad0
0001aa33(5): LEA RAX,[RSP + 0x60]
0001aa38(9): MOV qword ptr [RSP + 0x20],0x0
0001aa41(5): MOV qword ptr [RSP + 0x48],RBX
0001aa46(3): MOV R15,R13
0001aa49(5): MOV qword ptr [RSP + 0x38],RAX
0001aa4e(2): JMP 0x0001aa72
0001aa50(2): CMP AL,0x4
0001aa52(6): JZ 0x0001add8
0001aa58(5): MOV RCX,qword ptr [RSP + 0x10]
0001aa5d(6): ADD qword ptr [RSP + 0x20],0x1
0001aa63(5): MOV RAX,qword ptr [RSP + 0x20]
0001aa68(4): CMP RAX,qword ptr [RCX + 0x8]
0001aa6c(6): JGE 0x0001b02b
0001aa72(5): MOV RAX,qword ptr [RSP + 0x10]
0001aa77(5): MOV RDI,qword ptr [RSP + 0x20]
0001aa7c(4): MOV RAX,qword ptr [RAX + 0x10]
0001aa80(4): MOV R14,qword ptr [RAX + RDI*0x8]
0001aa84(3): MOV RAX,R14
0001aa87(4): SHL RAX,0x4
0001aa8b(4): ADD RAX,qword ptr [R12]
0001aa8f(4): CMP R14,qword ptr [R15 + 0x10]
0001aa93(4): MOVZX EAX,byte ptr [RAX + 0x8]
0001aa97(2): JNZ 0x0001aa50
0001aa99(4): CMP RBP,qword ptr [R15 + 0x18]
0001aa9d(2): JNZ 0x0001aa50
0001aa9f(2): JMP 0x0001aa58
0001aaa8(8): LEA R14,[RBP*0x8]
0001aab0(3): ADD R14,qword ptr [RSI]
0001aab3(3): TEST RCX,RCX
0001aab6(6): JNZ 0x0001ab70
0001aabc(7): MOV qword ptr [R14],0x0
0001aac3(2): XOR EAX,EAX
0001aac5(5): JMP 0x0001a888
0001aad0(2): XOR EAX,EAX
0001aad2(5): JMP 0x0001a888
0001aad7(3): MOV R8,RCX
0001aada(3): MOV RCX,RDX
0001aadd(3): NOP dword ptr [RAX]
0001aae0(4): LEA RBX,[R8 + 0x1]
0001aae4(3): MOV RDX,RCX
0001aae7(5): JMP 0x0001a970
0001aaf0(4): MOV RDI,qword ptr [RBX + 0x8]
0001aaf4(8): MOV qword ptr [RDX + 0x40],0x0
0001aafc(5): MOV qword ptr [RSP + 0x20],RDX
0001ab01(4): MOV qword ptr [RDX + 0x38],RDI
0001ab05(4): SHL RDI,0x3
0001ab09(5): CALL 0x00002780
0001ab0e(5): MOV RDX,qword ptr [RSP + 0x20]
0001ab13(3): TEST RAX,RAX
0001ab16(4): MOV qword ptr [RDX + 0x48],RAX
0001ab1a(2): JZ 0x0001ab63
0001ab1c(5): CMP qword ptr [RBX + 0x8],0x0
0001ab21(8): MOV dword ptr [RSP + 0x60],0x0
0001ab29(2): JG 0x0001ab3e
0001ab2b(5): JMP 0x0001a8ec
0001ab30(4): ADD R15,0x1
0001ab34(4): CMP R15,qword ptr [RBX + 0x8]
0001ab38(6): JGE 0x0001a8ec
0001ab3e(4): MOV RAX,qword ptr [RBX + 0x10]
0001ab42(3): MOV RDI,R14
0001ab45(4): MOV RAX,qword ptr [RAX + R15*0x8]
0001ab49(4): LEA RDX,[RAX + RAX*0x2]
0001ab4d(5): MOV RAX,qword ptr [R12 + 0x38]
0001ab52(4): LEA RSI,[RAX + RDX*0x8]
0001ab56(5): CALL 0x00012bc0
0001ab5b(2): TEST EAX,EAX
0001ab5d(4): MOV dword ptr [RSP + 0x60],EAX
0001ab61(2): JZ 0x0001ab30
0001ab63(5): MOV EAX,0xc
0001ab68(5): JMP 0x0001a888
0001ab70(9): MOV qword ptr [RSP + 0x10],0x0
0001ab79(5): JMP 0x0001a918
0001ab80(5): MOV RAX,qword ptr [RSP + 0x8]
0001ab85(7): MOV RAX,qword ptr [0xd8 + RAX]
0001ab8c(5): MOV qword ptr [RSP + 0x20],RAX
0001ab91(6): JLE 0x0001ac6b
0001ab97(3): XOR R15D,R15D
0001ab9a(6): NOP word ptr [RAX + RAX*0x1]
0001aba0(4): MOV RAX,qword ptr [R13 + 0x30]
0001aba4(5): MOV RDI,qword ptr [RSP + 0x20]
0001aba9(4): MOV RAX,qword ptr [RAX + R15*0x8]
0001abad(4): LEA RAX,[RAX + RAX*0x4]
0001abb1(4): LEA RDX,[RDI + RAX*0x8]
0001abb5(4): CMP RBP,qword ptr [RDX + 0x10]
0001abb9(6): JLE 0x0001ac5d
0001abbf(4): CMP RBP,qword ptr [RDX + 0x8]
0001abc3(6): JG 0x0001ac5d
0001abc9(3): MOV RCX,qword ptr [RDX]
0001abcc(4): MOV RAX,qword ptr [R12]
0001abd0(4): MOV RSI,qword ptr [RBX + 0x8]
0001abd4(4): SHL RCX,0x4
0001abd8(4): CMP RBP,qword ptr [RDX + 0x18]
0001abdc(4): MOV R8,qword ptr [RAX + RCX*0x1]
0001abe0(6): JZ 0x0001ac80
0001abe6(3): XOR R14D,R14D
0001abe9(3): TEST RSI,RSI
0001abec(2): JLE 0x0001ac5d
0001abee(5): MOV qword ptr [RSP + 0x28],RBP
0001abf3(3): MOV RBP,R8
0001abf6(2): JMP 0x0001ac0e
0001ac00(4): ADD R14,0x1
0001ac04(4): CMP R14,qword ptr [RBX + 0x8]
0001ac08(2): JGE 0x0001ac58
0001ac0a(4): MOV RAX,qword ptr [R12]
0001ac0e(4): MOV RDX,qword ptr [RBX + 0x10]
0001ac12(4): MOV RSI,qword ptr [RDX + R14*0x8]
0001ac16(3): MOV RDX,RSI
0001ac19(4): SHL RDX,0x4
0001ac1d(3): ADD RAX,RDX
0001ac20(4): MOVZX EDX,byte ptr [RAX + 0x8]
0001ac24(3): SUB EDX,0x8
0001ac27(3): CMP EDX,0x1
0001ac2a(2): JA 0x0001ac00
0001ac2c(3): CMP RBP,qword ptr [RAX]
0001ac2f(2): JNZ 0x0001ac00
0001ac31(5): MOV RCX,qword ptr [RSP + 0x10]
0001ac36(3): MOV RDX,RBX
0001ac39(3): MOV RDI,R12
0001ac3c(5): CALL 0x00014ef0
0001ac41(2): TEST EAX,EAX
0001ac43(6): JNZ 0x0001a888
0001ac49(4): ADD R14,0x1
0001ac4d(4): CMP R14,qword ptr [RBX + 0x8]
0001ac51(2): JL 0x0001ac0a
0001ac53(5): NOP dword ptr [RAX + RAX*0x1]
0001ac58(5): MOV RBP,qword ptr [RSP + 0x28]
0001ac5d(4): ADD R15,0x1
0001ac61(4): CMP R15,qword ptr [R13 + 0x28]
0001ac65(6): JL 0x0001aba0
0001ac6b(8): MOV dword ptr [RSP + 0x5c],0x0
0001ac73(5): JMP 0x0001a90f
0001ac80(3): TEST RSI,RSI
0001ac83(2): JLE 0x0001ac5d
0001ac85(4): MOV R10,qword ptr [RBX + 0x10]
0001ac89(7): MOV R9,-0x1
0001ac90(4): LEA R11,[R10 + RSI*0x8]
0001ac94(3): MOV RCX,R10
0001ac97(3): MOV RSI,R9
0001ac9a(2): JMP 0x0001acb6
0001aca0(4): CMP R14D,0x9
0001aca4(2): JNZ 0x0001acad
0001aca6(3): CMP R8,qword ptr [RDX]
0001aca9(4): CMOVZ R9,RDI
0001acad(4): ADD RCX,0x8
0001acb1(3): CMP R11,RCX
0001acb4(2): JZ 0x0001acde
0001acb6(3): MOV RDI,qword ptr [RCX]
0001acb9(3): MOV RDX,RDI
0001acbc(4): SHL RDX,0x4
0001acc0(3): ADD RDX,RAX
0001acc3(5): MOVZX R14D,byte ptr [RDX + 0x8]
0001acc8(4): CMP R14D,0x8
0001accc(2): JNZ 0x0001aca0
0001acce(3): CMP R8,qword ptr [RDX]
0001acd1(4): CMOVZ RSI,RDI
0001acd5(4): ADD RCX,0x8
0001acd9(3): CMP R11,RCX
0001acdc(2): JNZ 0x0001acb6
0001acde(3): TEST RSI,RSI
0001ace1(3): MOV R14,R9
0001ace4(5): MOV qword ptr [RSP + 0x28],R9
0001ace9(6): JS 0x0001adb0
0001acef(5): MOV RCX,qword ptr [RSP + 0x10]
0001acf4(3): MOV RDX,RBX
0001acf7(3): MOV RDI,R12
0001acfa(5): CALL 0x00014ef0
0001acff(2): TEST EAX,EAX
0001ad01(6): JNZ 0x0001a888
0001ad07(3): TEST R14,R14
0001ad0a(6): JS 0x0001ac5d
0001ad10(5): CMP qword ptr [RBX + 0x8],0x0
0001ad15(6): JLE 0x0001ac5d
0001ad1b(4): MOV R10,qword ptr [RBX + 0x10]
0001ad1f(3): XOR R14D,R14D
0001ad22(5): MOV qword ptr [RSP + 0x30],RBP
0001ad27(3): MOV RBP,R14
0001ad2a(5): MOV R14,qword ptr [RSP + 0x28]
0001ad2f(2): JMP 0x0001ad4a
0001ad38(4): ADD RBP,0x1
0001ad3c(4): CMP RBP,qword ptr [RBX + 0x8]
0001ad40(6): JGE 0x0001adc8
0001ad46(4): MOV R10,qword ptr [RBX + 0x10]
0001ad4a(4): MOV R10,qword ptr [R10 + RBP*0x8]
0001ad4e(5): MOV RAX,qword ptr [R12 + 0x38]
0001ad53(3): MOV RDX,R14
0001ad56(4): LEA R9,[R10 + R10*0x2]
0001ad5a(4): SHL R9,0x3
0001ad5e(3): ADD RAX,R9
0001ad61(4): MOV RDI,qword ptr [RAX + 0x8]
0001ad65(4): LEA RSI,[RAX + 0x10]
0001ad69(5): CALL 0x000126a0
0001ad6e(3): TEST RAX,RAX
0001ad71(2): JNZ 0x0001ad38
0001ad73(5): ADD R9,qword ptr [R12 + 0x30]
0001ad78(4): MOV RDI,qword ptr [R9 + 0x8]
0001ad7c(4): LEA RSI,[R9 + 0x10]
0001ad80(5): CALL 0x000126a0
0001ad85(3): TEST RAX,RAX
0001ad88(2): JNZ 0x0001ad38
0001ad8a(5): MOV RCX,qword ptr [RSP + 0x10]
0001ad8f(3): MOV RDX,RBX
0001ad92(3): MOV RSI,R10
0001ad95(3): MOV RDI,R12
0001ad98(5): CALL 0x00014ef0
0001ad9d(2): TEST EAX,EAX
0001ad9f(6): JNZ 0x0001a888
0001ada5(4): SUB RBP,0x1
0001ada9(2): JMP 0x0001ad38
0001adb0(6): CMP qword ptr [RSP + 0x28],0x0
0001adb6(6): JNS 0x0001ad1f
0001adbc(5): JMP 0x0001ac5d
0001adc8(5): MOV RBP,qword ptr [RSP + 0x30]
0001adcd(5): JMP 0x0001ac5d
0001add8(5): MOV RAX,qword ptr [RSP + 0x8]
0001addd(5): MOV R13,qword ptr [RSP + 0x40]
0001ade2(5): MOV RBX,qword ptr [RSP + 0x48]
0001ade7(7): ADD R13,qword ptr [0xd8 + RAX]
0001adee(4): LEA RAX,[R14 + R14*0x2]
0001adf2(4): SHL RAX,0x3
0001adf6(5): MOV qword ptr [RSP + 0x30],RAX
0001adfb(8): LEA RAX,[R14*0x8]
0001ae03(5): MOV qword ptr [RSP + 0x28],RAX
0001ae08(3): MOV RAX,R15
0001ae0b(3): MOV R15,R13
0001ae0e(3): MOV R13,RBX
0001ae11(3): MOV RBX,RAX
0001ae14(5): JMP 0x0001af7e
0001ae20(4): MOV RAX,qword ptr [R15 + 0x18]
0001ae24(4): SUB RAX,qword ptr [R15 + 0x10]
0001ae28(3): TEST RAX,RAX
0001ae2b(5): LEA R9,[RBP + RAX*0x1]
0001ae30(6): JZ 0x0001af90
0001ae36(5): MOV RAX,qword ptr [R12 + 0x18]
0001ae3b(5): MOV RSI,qword ptr [RSP + 0x28]
0001ae40(4): MOV R10,qword ptr [RAX + RSI*0x1]
0001ae44(4): CMP R9,qword ptr [RBX + 0x18]
0001ae48(6): JG 0x0001af87
0001ae4e(3): MOV RAX,qword ptr [RBX]
0001ae51(4): MOV RAX,qword ptr [RAX + R9*0x8]
0001ae55(3): TEST RAX,RAX
0001ae58(6): JZ 0x0001af87
0001ae5e(4): MOV RDI,qword ptr [RAX + 0x10]
0001ae62(4): LEA RSI,[RAX + 0x18]
0001ae66(3): MOV RDX,R10
0001ae69(5): CALL 0x000126a0
0001ae6e(3): TEST RAX,RAX
0001ae71(6): JZ 0x0001af87
0001ae77(4): SUB RSP,0x8
0001ae7b(4): LEA RDX,[RBX + 0x30]
0001ae7f(4): LEA RSI,[RBX + 0x28]
0001ae83(2): PUSH R9
0001ae85(5): MOV RDI,qword ptr [RSP + 0x18]
0001ae8a(3): MOV RCX,R14
0001ae8d(3): MOV R9,R10
0001ae90(3): MOV R8,RBP
0001ae93(5): CALL 0x00012950
0001ae98(2): TEST AL,AL
0001ae9a(1): POP RDX
0001ae9b(1): POP RCX
0001ae9c(6): JNZ 0x0001af87
0001aea2(6): CMP qword ptr [RSP + 0x60],0x0
0001aea8(6): JZ 0x0001afb8
0001aeae(5): MOV RAX,qword ptr [RSP + 0x38]
0001aeb3(3): MOV RSI,R13
0001aeb6(5): MOV qword ptr [RSP + 0x70],R14
0001aebb(5): MOV qword ptr [RSP + 0x78],RBP
0001aec0(4): LEA RDI,[RAX + 0x20]
0001aec4(5): CALL 0x00011160
0001aec9(2): TEST AL,AL
0001aecb(6): JZ 0x0001b024
0001aed1(5): MOV RDI,qword ptr [RSP + 0x18]
0001aed6(5): MOV RAX,qword ptr [RSP + 0x60]
0001aedb(5): MOV RSI,qword ptr [RSP + 0x38]
0001aee0(4): MOV R15,qword ptr [RAX + RDI*0x1]
0001aee4(5): MOV RDI,qword ptr [RSP + 0x8]
0001aee9(5): CALL 0x00018d80
0001aeee(2): TEST EAX,EAX
0001aef0(6): JNZ 0x0001affe
0001aef6(4): MOV RSI,qword ptr [RBX + 0x8]
0001aefa(5): MOV RDX,qword ptr [RSP + 0x60]
0001aeff(3): TEST RSI,RSI
0001af02(2): JZ 0x0001af1d
0001af04(4): LEA RCX,[RBP + 0x1]
0001af08(3): MOV RDI,R12
0001af0b(5): CALL 0x00013eb0
0001af10(2): TEST EAX,EAX
0001af12(6): JNZ 0x0001affe
0001af18(5): MOV RDX,qword ptr [RSP + 0x60]
0001af1d(5): MOV R11,qword ptr [RSP + 0x38]
0001af22(5): MOV RAX,qword ptr [RSP + 0x18]
0001af27(8): MOV RDI,qword ptr [0x88 + RSP]
0001af2f(4): LEA R9,[R11 + 0x30]
0001af33(4): MOV qword ptr [RDX + RAX*0x1],R15
0001af37(3): MOV RDX,R13
0001af3a(3): MOV RSI,R9
0001af3d(5): CALL 0x000126a0
0001af42(4): SUB RAX,0x1
0001af46(3): MOV RDX,RAX
0001af49(2): JS 0x0001af57
0001af4b(4): LEA RDI,[R11 + 0x28]
0001af4f(3): MOV RSI,R9
0001af52(5): CALL 0x00012820
0001af57(5): MOV RCX,qword ptr [RSP + 0x8]
0001af5c(5): LEA RAX,[R13 + R13*0x4]
0001af61(7): MOV RDX,qword ptr [0xd8 + RCX]
0001af68(4): LEA RAX,[RDX + RAX*0x8]
0001af6c(4): NOP dword ptr [RAX]
0001af70(4): ADD R13,0x1
0001af74(4): CMP byte ptr [RAX + 0x20],0x0
0001af78(4): LEA R15,[RAX + 0x28]
0001af7c(2): JZ 0x0001afb0
0001af7e(3): CMP R14,qword ptr [R15]
0001af81(6): JZ 0x0001ae20
0001af87(3): MOV RAX,R15
0001af8a(2): JMP 0x0001af70
0001af90(5): MOV RAX,qword ptr [R12 + 0x28]
0001af95(5): MOV RDI,qword ptr [RSP + 0x30]
0001af9a(5): MOV RAX,qword ptr [RAX + RDI*0x1 + 0x10]
0001af9f(3): MOV R10,qword ptr [RAX]
0001afa2(5): JMP 0x0001ae44
0001afb0(3): MOV R15,RBX
0001afb3(5): JMP 0x0001aa58
0001afb8(4): MOV RAX,qword ptr [RBX + 0x30]
0001afbc(4): LEA RSI,[RBX + 0x20]
0001afc0(4): MOVDQA XMM0,xmmword ptr [RBX]
0001afc4(8): MOV qword ptr [0x90 + RSP],RAX
0001afcc(5): MOV RAX,qword ptr [RSP + 0x38]
0001afd1(5): MOVAPS xmmword ptr [RSP + 0x60],XMM0
0001afd6(4): LEA RDI,[RAX + 0x20]
0001afda(5): MOVDQA XMM0,xmmword ptr [RBX + 0x10]
0001afdf(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
0001afe4(5): MOVDQA XMM0,xmmword ptr [RBX + 0x20]
0001afe9(8): MOVAPS xmmword ptr [0x80 + RSP],XMM0
0001aff1(5): CALL 0x00013800
0001aff6(2): TEST EAX,EAX
0001aff8(6): JZ 0x0001aeae
0001affe(6): CMP qword ptr [RSP + 0x60],0x0
0001b004(6): JZ 0x0001a888
0001b00a(8): MOV RDI,qword ptr [0x90 + RSP]
0001b012(4): MOV dword ptr [RSP + 0x8],EAX
0001b016(5): CALL 0x00002a10
0001b01b(4): MOV EAX,dword ptr [RSP + 0x8]
0001b01f(5): JMP 0x0001a888
0001b024(5): MOV EAX,0xc
0001b029(2): JMP 0x0001affe
0001b02b(6): CMP qword ptr [RSP + 0x60],0x0
0001b031(6): JZ 0x0001aad0
0001b037(2): XOR EAX,EAX
0001b039(2): JMP 0x0001b00a
0001b03b(5): CALL 0x00002560
0001b040(2): PUSH R14
0001b042(2): PUSH R13
0001b044(3): MOV R10,RSI
0001b047(2): PUSH R12
0001b049(1): PUSH RBP
0001b04a(3): MOVSXD R11,ECX
0001b04d(1): PUSH RBX
0001b04e(3): MOV RBP,RDX
0001b051(3): MOV RBX,RDI
0001b054(4): SUB RSP,0x20
0001b058(4): MOV R12,qword ptr [RSI + 0x48]
0001b05c(9): MOV RAX,qword ptr FS:[0x28]
0001b065(5): MOV qword ptr [RSP + 0x18],RAX
0001b06a(2): XOR EAX,EAX
0001b06c(7): CMP dword ptr [0x90 + RSI],0x1
0001b073(2): JZ 0x0001b0c8
0001b075(3): MOV RSI,R12
0001b078(3): MOV RDI,R10
0001b07b(5): CALL 0x000125f0
0001b080(3): CMP EAX,0x1
0001b083(2): JLE 0x0001b0c8
0001b085(4): MOV RDX,qword ptr [R10 + 0x10]
0001b089(2): CDQE
0001b08b(6): MOV dword ptr [RBX],0x1
0001b091(3): ADD RAX,R12
0001b094(4): MOV EDX,dword ptr [RDX + R12*0x4]
0001b098(3): MOV dword ptr [RBX + 0x8],EDX
0001b09b(4): MOV qword ptr [R10 + 0x48],RAX
0001b09f(2): XOR EAX,EAX
0001b0a1(5): MOV RCX,qword ptr [RSP + 0x18]
0001b0a6(9): XOR RCX,qword ptr FS:[0x28]
0001b0af(6): JNZ 0x0001b298
0001b0b5(4): ADD RSP,0x20
0001b0b9(1): POP RBX
0001b0ba(1): POP RBP
0001b0bb(2): POP R12
0001b0bd(2): POP R13
0001b0bf(2): POP R14
0001b0c1(1): RET
0001b0c8(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001b0cc(3): ADD R11,R12
0001b0cf(4): MOV qword ptr [R10 + 0x48],R11
0001b0d3(2): MOV EDX,EAX
0001b0d5(3): AND EDX,0xfffffffb
0001b0d8(3): CMP DL,0x1a
0001b0db(2): JZ 0x0001b100
0001b0dd(2): CMP AL,0x1c
0001b0df(2): JZ 0x0001b100
0001b0e1(2): CMP AL,0x16
0001b0e3(2): JNZ 0x0001b0ee
0001b0e5(3): TEST R9B,R9B
0001b0e8(6): JZ 0x0001b232
0001b0ee(4): MOVZX EAX,byte ptr [RBP]
0001b0f2(6): MOV dword ptr [RBX],0x0
0001b0f8(3): MOV byte ptr [RBX + 0x8],AL
0001b0fb(2): XOR EAX,EAX
0001b0fd(2): JMP 0x0001b0a1
0001b100(4): MOV R12,qword ptr [R10 + 0x68]
0001b104(3): CMP R11,R12
0001b107(6): JGE 0x0001b228
0001b10d(5): MOVZX R13D,byte ptr [RBP]
0001b112(3): XOR R8D,R8D
0001b115(2): JMP 0x0001b142
0001b120(4): MOV RAX,qword ptr [RBX + 0x8]
0001b124(4): MOV byte ptr [RAX + R8*0x1],R9B
0001b128(4): ADD R8,0x1
0001b12c(4): CMP R8,0x20
0001b130(6): JZ 0x0001b228
0001b136(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001b13a(4): MOV R11,qword ptr [R10 + 0x48]
0001b13e(4): MOV R12,qword ptr [R10 + 0x68]
0001b142(2): CMP AL,0x1e
0001b144(3): MOVSXD R14,R8D
0001b147(2): JZ 0x0001b1b0
0001b149(4): MOV RDX,qword ptr [R10 + 0x8]
0001b14d(4): LEA RAX,[R11 + 0x1]
0001b151(4): MOV qword ptr [R10 + 0x48],RAX
0001b155(5): MOVZX R9D,byte ptr [RDX + R11*0x1]
0001b15a(3): CMP RAX,R12
0001b15d(6): JGE 0x0001b228
0001b163(3): CMP R13B,R9B
0001b166(2): JNZ 0x0001b120
0001b168(4): MOV RDX,qword ptr [R10 + 0x8]
0001b16c(4): CMP byte ptr [RDX + RAX*0x1],0x5d
0001b170(2): JNZ 0x0001b120
0001b172(4): ADD RAX,0x1
0001b176(4): MOV qword ptr [R10 + 0x48],RAX
0001b17a(4): MOV RAX,qword ptr [RBX + 0x8]
0001b17e(5): MOV byte ptr [RAX + R14*0x1],0x0
0001b183(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001b187(2): CMP AL,0x1c
0001b189(6): JZ 0x0001b28b
0001b18f(2): CMP AL,0x1e
0001b191(6): JZ 0x0001b27e
0001b197(2): CMP AL,0x1a
0001b199(6): JZ 0x0001b271
0001b19f(2): XOR EAX,EAX
0001b1a1(5): JMP 0x0001b0a1
0001b1b0(8): CMP byte ptr [0x8b + R10],0x0
0001b1b8(2): JZ 0x0001b149
0001b1ba(8): CMP byte ptr [0x8c + R10],0x0
0001b1c2(6): JZ 0x0001b258
0001b1c8(4): CMP R11,qword ptr [R10 + 0x30]
0001b1cc(2): JZ 0x0001b1dd
0001b1ce(4): MOV RAX,qword ptr [R10 + 0x10]
0001b1d2(5): CMP dword ptr [RAX + R11*0x4],-0x1
0001b1d7(6): JZ 0x0001b149
0001b1dd(4): MOV RAX,qword ptr [R10 + 0x18]
0001b1e1(4): MOV RAX,qword ptr [RAX + R11*0x8]
0001b1e5(3): ADD RAX,qword ptr [R10]
0001b1e8(4): ADD RAX,qword ptr [R10 + 0x28]
0001b1ec(4): MOVZX R9D,byte ptr [RAX]
0001b1f0(4): TEST R9B,0x80
0001b1f4(6): JNZ 0x0001b149
0001b1fa(8): CMP dword ptr [0x90 + R10],0x1
0001b202(5): MOV EAX,0x1
0001b207(2): JZ 0x0001b216
0001b209(3): MOV RSI,R11
0001b20c(3): MOV RDI,R10
0001b20f(5): CALL 0x000125f0
0001b214(2): CDQE
0001b216(3): ADD RAX,R11
0001b219(4): MOV qword ptr [R10 + 0x48],RAX
0001b21d(5): JMP 0x0001b15a
0001b228(5): MOV EAX,0x7
0001b22d(5): JMP 0x0001b0a1
0001b232(3): MOV RDI,RSP
0001b235(3): MOV RDX,R8
0001b238(3): MOV RSI,R10
0001b23b(5): CALL 0x00010b90
0001b240(5): CMP byte ptr [RSP + 0x8],0x15
0001b245(5): MOV EAX,0xb
0001b24a(6): JZ 0x0001b0ee
0001b250(5): JMP 0x0001b0a1
0001b258(4): LEA RAX,[R11 + 0x1]
0001b25c(3): ADD R11,qword ptr [R10]
0001b25f(4): MOV RDX,qword ptr [R10 + 0x28]
0001b263(4): MOV qword ptr [R10 + 0x48],RAX
0001b267(5): MOVZX R9D,byte ptr [R11 + RDX*0x1]
0001b26c(5): JMP 0x0001b15a
0001b271(6): MOV dword ptr [RBX],0x3
0001b277(2): XOR EAX,EAX
0001b279(5): JMP 0x0001b0a1
0001b27e(6): MOV dword ptr [RBX],0x4
0001b284(2): XOR EAX,EAX
0001b286(5): JMP 0x0001b0a1
0001b28b(6): MOV dword ptr [RBX],0x2
0001b291(2): XOR EAX,EAX
0001b293(5): JMP 0x0001b0a1
0001b298(5): CALL 0x00002560
0001b29d(3): NOP dword ptr [RAX]
0001b2a0(2): PUSH R15
0001b2a2(2): PUSH R14
0001b2a4(2): PUSH R13
0001b2a6(2): PUSH R12
0001b2a8(1): PUSH RBP
0001b2a9(1): PUSH RBX
0001b2aa(3): MOV RBP,RDI
0001b2ad(4): SUB RSP,0x38
0001b2b1(4): MOV R14,qword ptr [RSI + 0x48]
0001b2b5(9): MOV RAX,qword ptr FS:[0x28]
0001b2be(5): MOV qword ptr [RSP + 0x28],RAX
0001b2c3(2): XOR EAX,EAX
0001b2c5(4): CMP qword ptr [RSI + 0x68],R14
0001b2c9(6): JLE 0x0001b360
0001b2cf(5): MOVZX R13D,byte ptr [RDI + 0xa]
0001b2d4(3): MOV R15,RDX
0001b2d7(4): MOV RDX,qword ptr [RSI + 0x8]
0001b2db(3): MOV RBX,RSI
0001b2de(5): MOVZX R12D,byte ptr [RDX + R14*0x1]
0001b2e3(4): AND R13D,0xffffff9f
0001b2e7(4): MOV byte ptr [RDI + 0xa],R13B
0001b2eb(6): MOV EAX,dword ptr [0x90 + RSI]
0001b2f1(3): MOV byte ptr [RDI],R12B
0001b2f4(3): CMP EAX,0x1
0001b2f7(6): JLE 0x0001b390
0001b2fd(4): CMP R14,qword ptr [RSI + 0x30]
0001b301(6): JZ 0x0001b4a0
0001b307(4): MOV RCX,qword ptr [RSI + 0x10]
0001b30b(4): MOV ECX,dword ptr [RCX + R14*0x4]
0001b30f(3): CMP ECX,-0x1
0001b312(6): JZ 0x0001b3f0
0001b318(4): CMP R12B,0x5c
0001b31c(6): JZ 0x0001b410
0001b322(4): MOV byte ptr [RDI + 0x8],0x1
0001b326(2): MOV EDI,ECX
0001b328(5): MOV qword ptr [RSP + 0x8],RDX
0001b32d(3): MOV dword ptr [RSP],ECX
0001b330(5): CALL 0x00002770
0001b335(3): MOV ECX,dword ptr [RSP]
0001b338(2): TEST EAX,EAX
0001b33a(3): SETNZ AL
0001b33d(3): CMP ECX,0x5f
0001b340(3): SETZ CL
0001b343(2): OR EAX,ECX
0001b345(3): SHL EAX,0x6
0001b348(3): OR R13D,EAX
0001b34b(4): MOV byte ptr [RBP + 0xa],R13B
0001b34f(5): MOV RDX,qword ptr [RSP + 0x8]
0001b354(2): JMP 0x0001b3cc
0001b360(4): MOV byte ptr [RDI + 0x8],0x2
0001b364(5): MOV RDI,qword ptr [RSP + 0x28]
0001b369(9): XOR RDI,qword ptr FS:[0x28]
0001b372(6): JNZ 0x0001b998
0001b378(4): ADD RSP,0x38
0001b37c(1): POP RBX
0001b37d(1): POP RBP
0001b37e(2): POP R12
0001b380(2): POP R13
0001b382(2): POP R14
0001b384(2): POP R15
0001b386(1): RET
0001b390(4): CMP R12B,0x5c
0001b394(2): JZ 0x0001b410
0001b396(4): MOV byte ptr [RBP + 0x8],0x1
0001b39a(4): MOV qword ptr [RSP],RDX
0001b39e(5): CALL 0x000029f0
0001b3a3(3): MOV RSI,qword ptr [RAX]
0001b3a6(4): MOVZX ECX,R12B
0001b3aa(4): MOVZX EAX,word ptr [RSI + RCX*0x2]
0001b3ae(4): SHR AX,0x3
0001b3b2(3): AND EAX,0x1
0001b3b5(4): CMP R12B,0x5f
0001b3b9(3): SETZ CL
0001b3bc(2): OR EAX,ECX
0001b3be(3): SHL EAX,0x6
0001b3c1(3): OR R13D,EAX
0001b3c4(4): MOV byte ptr [RBP + 0xa],R13B
0001b3c8(4): MOV RDX,qword ptr [RSP]
0001b3cc(4): SUB R12D,0xa
0001b3d0(4): CMP R12B,0x73
0001b3d4(6): JA 0x0001b50c
0001b3da(7): LEA RCX,[0x228f4]
0001b3e1(4): MOVZX R12D,R12B
0001b3e5(4): MOVSXD RAX,dword ptr [RCX + R12*0x4]
0001b3e9(3): ADD RAX,RCX
0001b3ec(2): JMP RAX
0001b3f0(4): OR R13D,0x20
0001b3f4(4): MOV byte ptr [RDI + 0x8],0x1
0001b3f8(5): MOV EAX,0x1
0001b3fd(4): MOV byte ptr [RDI + 0xa],R13B
0001b401(5): JMP 0x0001b364
0001b410(4): LEA RSI,[R14 + 0x1]
0001b414(4): CMP RSI,qword ptr [RBX + 0x58]
0001b418(6): JGE 0x0001b4c0
0001b41e(7): CMP byte ptr [0x8b + RBX],0x0
0001b425(6): JNZ 0x0001b8b0
0001b42b(6): MOVZX EDI,byte ptr [RDX + R14*0x1 + 0x1]
0001b431(3): MOV R12D,EDI
0001b434(4): MOV dword ptr [RSP + 0x8],EDI
0001b438(3): CMP EAX,0x1
0001b43b(4): MOV byte ptr [RBP],R12B
0001b43f(4): MOV byte ptr [RBP + 0x8],0x1
0001b443(6): JLE 0x0001b890
0001b449(4): MOV RAX,qword ptr [RBX + 0x10]
0001b44d(4): MOV R8D,dword ptr [RAX + RSI*0x4]
0001b451(3): MOV EDI,R8D
0001b454(4): MOV dword ptr [RSP],R8D
0001b458(5): CALL 0x00002770
0001b45d(4): MOV R8D,dword ptr [RSP]
0001b461(2): TEST EAX,EAX
0001b463(3): SETNZ AL
0001b466(4): CMP R8D,0x5f
0001b46a(3): SETZ DL
0001b46d(5): LEA ECX,[R12 + -0x27]
0001b472(2): OR EAX,EDX
0001b474(3): SHL EAX,0x6
0001b477(3): OR R13D,EAX
0001b47a(3): CMP CL,0x56
0001b47d(4): MOV byte ptr [RBP + 0xa],R13B
0001b481(6): JA 0x0001b885
0001b487(7): LEA RDX,[0x22ac4]
0001b48e(3): MOVZX ECX,CL
0001b491(4): MOVSXD RAX,dword ptr [RDX + RCX*0x4]
0001b495(3): ADD RAX,RDX
0001b498(2): JMP RAX
0001b4a0(4): CMP R12B,0x5c
0001b4a4(6): JZ 0x0001b410
0001b4aa(4): MOV RAX,qword ptr [RBX + 0x10]
0001b4ae(4): MOV byte ptr [RBP + 0x8],0x1
0001b4b2(4): MOV ECX,dword ptr [RAX + R14*0x4]
0001b4b6(5): JMP 0x0001b326
0001b4c0(4): MOV byte ptr [RBP + 0x8],0x24
0001b4c4(5): MOV EAX,0x1
0001b4c9(5): JMP 0x0001b364
0001b4d0(7): AND R15D,0x1200
0001b4d7(5): MOV EAX,0x1
0001b4dc(7): CMP R15,0x1200
0001b4e3(6): JNZ 0x0001b364
0001b4e9(4): MOV byte ptr [RBP + 0x8],0x18
0001b4ed(5): JMP 0x0001b364
0001b4f8(7): AND R15D,0x8400
0001b4ff(7): CMP R15,0x8000
0001b506(6): JZ 0x0001b5e2
0001b50c(5): MOV EAX,0x1
0001b511(5): JMP 0x0001b364
0001b520(7): AND R15D,0x1200
0001b527(5): MOV EAX,0x1
0001b52c(7): CMP R15,0x1200
0001b533(6): JNZ 0x0001b364
0001b539(4): MOV byte ptr [RBP + 0x8],0x17
0001b53d(5): JMP 0x0001b364
0001b548(7): TEST R15D,0x800008
0001b54f(2): JNZ 0x0001b55a
0001b551(3): TEST R14,R14
0001b554(6): JNZ 0x0001b91a
0001b55a(4): MOV byte ptr [RBP + 0x8],0xc
0001b55e(7): MOV dword ptr [RBP],0x10
0001b565(5): MOV EAX,0x1
0001b56a(5): JMP 0x0001b364
0001b570(4): MOV byte ptr [RBP + 0x8],0x14
0001b574(5): MOV EAX,0x1
0001b579(5): JMP 0x0001b364
0001b580(7): TEST R15D,0x402
0001b587(5): MOV EAX,0x1
0001b58c(6): JNZ 0x0001b364
0001b592(4): MOV byte ptr [RBP + 0x8],0x13
0001b596(5): JMP 0x0001b364
0001b5a0(4): MOV byte ptr [RBP + 0x8],0x5
0001b5a4(5): MOV EAX,0x1
0001b5a9(5): JMP 0x0001b364
0001b5b0(7): TEST R15D,0x402
0001b5b7(5): MOV EAX,0x1
0001b5bc(6): JNZ 0x0001b364
0001b5c2(4): MOV byte ptr [RBP + 0x8],0x12
0001b5c6(5): JMP 0x0001b364
0001b5d0(7): TEST R15D,0x800
0001b5d7(5): MOV EAX,0x1
0001b5dc(6): JZ 0x0001b364
0001b5e2(4): MOV byte ptr [RBP + 0x8],0xa
0001b5e6(5): MOV EAX,0x1
0001b5eb(5): JMP 0x0001b364
0001b5f0(4): MOV byte ptr [RBP + 0x8],0xb
0001b5f4(5): MOV EAX,0x1
0001b5f9(5): JMP 0x0001b364
0001b600(7): TEST R15D,0x2000
0001b607(5): MOV EAX,0x1
0001b60c(6): JZ 0x0001b364
0001b612(4): MOV byte ptr [RBP + 0x8],0x9
0001b616(5): JMP 0x0001b364
0001b620(7): TEST R15D,0x2000
0001b627(5): MOV EAX,0x1
0001b62c(6): JZ 0x0001b364
0001b632(4): MOV byte ptr [RBP + 0x8],0x8
0001b636(5): JMP 0x0001b364
0001b640(4): TEST R15B,0x8
0001b644(2): JNZ 0x0001b654
0001b646(4): ADD R14,0x1
0001b64a(4): CMP R14,qword ptr [RBX + 0x58]
0001b64e(6): JNZ 0x0001b94b
0001b654(4): MOV byte ptr [RBP + 0x8],0xc
0001b658(7): MOV dword ptr [RBP],0x20
0001b65f(5): MOV EAX,0x1
0001b664(5): JMP 0x0001b364
0001b669(7): TEST R15D,0x8400
0001b670(5): MOV EAX,0x2
0001b675(6): JNZ 0x0001b364
0001b67b(4): MOV byte ptr [RBP + 0x8],0xa
0001b67f(5): JMP 0x0001b364
0001b684(7): AND R15D,0x1200
0001b68b(5): MOV EAX,0x2
0001b690(7): CMP R15,0x200
0001b697(6): JNZ 0x0001b364
0001b69d(5): JMP 0x0001b539
0001b6a2(7): TEST R15D,0x80000
0001b6a9(5): MOV EAX,0x2
0001b6ae(6): JNZ 0x0001b364
0001b6b4(4): MOV byte ptr [RBP + 0x8],0x20
0001b6b8(5): JMP 0x0001b364
0001b6bd(7): TEST R15D,0x80000
0001b6c4(5): MOV EAX,0x2
0001b6c9(6): JNZ 0x0001b364
0001b6cf(4): MOV byte ptr [RBP + 0x8],0x22
0001b6d3(5): JMP 0x0001b364
0001b6d8(7): AND R15D,0x1200
0001b6df(5): MOV EAX,0x2
0001b6e4(7): CMP R15,0x200
0001b6eb(6): JNZ 0x0001b364
0001b6f1(5): JMP 0x0001b4e9
0001b6f6(7): TEST R15D,0x80000
0001b6fd(5): MOV EAX,0x2
0001b702(6): JNZ 0x0001b364
0001b708(4): MOV byte ptr [RBP + 0x8],0xc
0001b70c(7): MOV dword ptr [RBP],0x100
0001b713(5): JMP 0x0001b364
0001b718(7): TEST R15D,0x80000
0001b71f(5): MOV EAX,0x2
0001b724(6): JNZ 0x0001b364
0001b72a(4): MOV byte ptr [RBP + 0x8],0xc
0001b72e(7): MOV dword ptr [RBP],0x40
0001b735(5): JMP 0x0001b364
0001b73a(7): TEST R15D,0x80000
0001b741(5): MOV EAX,0x2
0001b746(6): JNZ 0x0001b364
0001b74c(4): MOV byte ptr [RBP + 0x8],0x21
0001b750(5): JMP 0x0001b364
0001b755(7): TEST R15D,0x80000
0001b75c(5): MOV EAX,0x2
0001b761(6): JNZ 0x0001b364
0001b767(4): MOV byte ptr [RBP + 0x8],0x23
0001b76b(5): JMP 0x0001b364
0001b770(7): TEST R15D,0x80000
0001b777(5): MOV EAX,0x2
0001b77c(6): JNZ 0x0001b364
0001b782(4): MOV byte ptr [RBP + 0x8],0xc
0001b786(7): MOV dword ptr [RBP],0x200
0001b78d(5): JMP 0x0001b364
0001b792(7): AND R15D,0x402
0001b799(5): MOV EAX,0x2
0001b79e(4): CMP R15,0x2
0001b7a2(6): JNZ 0x0001b364
0001b7a8(5): JMP 0x0001b592
0001b7ad(7): TEST R15D,0x80000
0001b7b4(5): MOV EAX,0x2
0001b7b9(6): JNZ 0x0001b364
0001b7bf(4): MOV byte ptr [RBP + 0x8],0xc
0001b7c3(7): MOV dword ptr [RBP],0x9
0001b7ca(5): JMP 0x0001b364
0001b7cf(7): TEST R15D,0x80000
0001b7d6(5): MOV EAX,0x2
0001b7db(6): JNZ 0x0001b364
0001b7e1(4): MOV byte ptr [RBP + 0x8],0xc
0001b7e5(7): MOV dword ptr [RBP],0x6
0001b7ec(5): JMP 0x0001b364
0001b7f1(7): TEST R15D,0x4000
0001b7f8(5): MOV EAX,0x2
0001b7fd(6): JNZ 0x0001b364
0001b803(4): MOV EDX,dword ptr [RSP + 0x8]
0001b807(4): MOV byte ptr [RBP + 0x8],0x4
0001b80b(3): SUB EDX,0x31
0001b80e(3): MOVSXD RDX,EDX
0001b811(4): MOV qword ptr [RBP],RDX
0001b815(5): JMP 0x0001b364
0001b81a(7): AND R15D,0x402
0001b821(5): MOV EAX,0x2
0001b826(4): CMP R15,0x2
0001b82a(6): JNZ 0x0001b364
0001b830(5): JMP 0x0001b5c2
0001b835(7): TEST R15D,0x2000
0001b83c(5): MOV EAX,0x2
0001b841(6): JNZ 0x0001b364
0001b847(5): JMP 0x0001b612
0001b84c(7): TEST R15D,0x2000
0001b853(5): MOV EAX,0x2
0001b858(6): JNZ 0x0001b364
0001b85e(5): JMP 0x0001b632
0001b863(7): TEST R15D,0x80000
0001b86a(5): MOV EAX,0x2
0001b86f(6): JNZ 0x0001b364
0001b875(4): MOV byte ptr [RBP + 0x8],0xc
0001b879(7): MOV dword ptr [RBP],0x80
0001b880(5): JMP 0x0001b364
0001b885(5): MOV EAX,0x2
0001b88a(5): JMP 0x0001b364
0001b890(5): CALL 0x000029f0
0001b895(3): MOV RSI,qword ptr [RAX]
0001b898(4): MOVZX EDX,R12B
0001b89c(4): MOVZX EAX,word ptr [RSI + RDX*0x2]
0001b8a0(4): SHR AX,0x3
0001b8a4(3): AND EAX,0x1
0001b8a7(4): CMP R12B,0x5f
0001b8ab(5): JMP 0x0001b46a
0001b8b0(3): CMP EAX,0x1
0001b8b3(2): JLE 0x0001b8e4
0001b8b5(4): MOV RCX,qword ptr [RBX + 0x10]
0001b8b9(8): LEA RDI,[RSI*0x4]
0001b8c1(4): MOV R8D,dword ptr [RCX + RSI*0x4]
0001b8c5(4): CMP R8D,-0x1
0001b8c9(6): JZ 0x0001b97f
0001b8cf(4): LEA R9,[R14 + 0x2]
0001b8d3(4): CMP qword ptr [RBX + 0x30],R9
0001b8d7(2): JZ 0x0001b8e4
0001b8d9(5): CMP dword ptr [RCX + RDI*0x1 + 0x4],-0x1
0001b8de(6): JZ 0x0001b97f
0001b8e4(7): CMP byte ptr [0x8c + RBX],0x0
0001b8eb(3): MOV RCX,qword ptr [RBX]
0001b8ee(4): MOV RDI,qword ptr [RBX + 0x28]
0001b8f2(2): JZ 0x0001b938
0001b8f4(4): MOV R8,qword ptr [RBX + 0x18]
0001b8f8(3): ADD RCX,RDI
0001b8fb(4): ADD RCX,qword ptr [R8 + RSI*0x8]
0001b8ff(3): MOVZX EDI,byte ptr [RCX]
0001b902(3): MOV R12D,EDI
0001b905(4): MOV dword ptr [RSP + 0x8],EDI
0001b909(6): AND EDI,0x80
0001b90f(6): JNZ 0x0001b42b
0001b915(5): JMP 0x0001b438
0001b91a(6): CMP byte ptr [RDX + R14*0x1 + -0x1],0xa
0001b920(6): JNZ 0x0001b50c
0001b926(7): TEST R15D,0x800
0001b92d(6): JZ 0x0001b50c
0001b933(5): JMP 0x0001b55a
0001b938(3): ADD RCX,RSI
0001b93b(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
0001b93f(3): MOV R12D,EDI
0001b942(4): MOV dword ptr [RSP + 0x8],EDI
0001b946(5): JMP 0x0001b438
0001b94b(5): LEA RDI,[RSP + 0x10]
0001b950(3): MOV RDX,R15
0001b953(4): MOV qword ptr [RBX + 0x48],R14
0001b957(3): MOV RSI,RBX
0001b95a(5): CALL 0x0001b2a0
0001b95f(5): MOVZX EAX,byte ptr [RSP + 0x18]
0001b964(5): SUB qword ptr [RBX + 0x48],0x1
0001b969(3): LEA EDX,[RAX + -0x9]
0001b96c(5): MOV EAX,0x1
0001b971(3): CMP DL,0x1
0001b974(6): JA 0x0001b364
0001b97a(5): JMP 0x0001b654
0001b97f(6): MOVZX EAX,byte ptr [RDX + R14*0x1 + 0x1]
0001b985(4): MOV byte ptr [RBP + 0x8],0x1
0001b989(3): MOV R12D,EAX
0001b98c(3): MOV byte ptr [RBP],AL
0001b98f(4): MOV dword ptr [RSP + 0x8],EAX
0001b993(5): JMP 0x0001b451
0001b998(5): CALL 0x00002560
0001b99d(3): NOP dword ptr [RAX]
0001b9a0(2): PUSH R14
0001b9a2(3): MOV R14,RDI
0001b9a5(2): PUSH R13
0001b9a7(3): MOV R13,RSI
0001b9aa(2): PUSH R12
0001b9ac(7): MOV R12,-0x2
0001b9b3(1): PUSH RBP
0001b9b4(3): MOV RBP,RDX
0001b9b7(1): PUSH RBX
0001b9b8(7): MOV RBX,-0x1
0001b9bf(1): NOP
0001b9c0(3): MOV RDX,RBP
0001b9c3(3): MOV RSI,R14
0001b9c6(3): MOV RDI,R13
0001b9c9(5): CALL 0x0001b2a0
0001b9ce(2): CDQE
0001b9d0(4): ADD qword ptr [R14 + 0x48],RAX
0001b9d4(5): MOVZX EAX,byte ptr [R13 + 0x8]
0001b9d9(5): MOVZX EDX,byte ptr [R13]
0001b9de(2): CMP AL,0x2
0001b9e0(2): JZ 0x0001ba30
0001b9e2(2): CMP AL,0x18
0001b9e4(2): JZ 0x0001ba37
0001b9e6(3): CMP DL,0x2c
0001b9e9(2): JZ 0x0001ba37
0001b9eb(2): CMP AL,0x1
0001b9ed(2): JZ 0x0001b9f8
0001b9ef(3): MOV RBX,R12
0001b9f2(2): JMP 0x0001b9c0
0001b9f8(3): LEA EAX,[RDX + -0x30]
0001b9fb(2): CMP AL,0x9
0001b9fd(2): JA 0x0001b9ef
0001b9ff(4): CMP RBX,-0x2
0001ba03(2): JZ 0x0001b9ef
0001ba05(4): CMP RBX,-0x1
0001ba09(2): JZ 0x0001ba48
0001ba0b(4): LEA RAX,[RBX + RBX*0x4]
0001ba0f(4): LEA RBX,[RDX + RAX*0x2]
0001ba13(5): MOV EAX,0x8030
0001ba18(7): CMP RBX,0x8030
0001ba1f(4): CMOVG RBX,RAX
0001ba23(4): SUB RBX,0x30
0001ba27(2): JMP 0x0001b9c0
0001ba30(7): MOV RBX,-0x2
0001ba37(3): MOV RAX,RBX
0001ba3a(1): POP RBX
0001ba3b(1): POP RBP
0001ba3c(2): POP R12
0001ba3e(2): POP R13
0001ba40(2): POP R14
0001ba42(1): RET
0001ba48(3): MOVZX EBX,DL
0001ba4b(3): SUB EBX,0x30
0001ba4e(3): MOVSXD RBX,EBX
0001ba51(5): JMP 0x0001b9c0
0001ba60(2): PUSH R15
0001ba62(2): PUSH R14
0001ba64(2): PUSH R13
0001ba66(2): PUSH R12
0001ba68(1): PUSH RBP
0001ba69(1): PUSH RBX
0001ba6a(7): SUB RSP,0x128
0001ba71(5): MOV qword ptr [RSP + 0x20],RCX
0001ba76(4): MOVZX ECX,byte ptr [RDX + 0x8]
0001ba7a(9): MOV RAX,qword ptr FS:[0x28]
0001ba83(8): MOV qword ptr [0x118 + RSP],RAX
0001ba8b(2): XOR EAX,EAX
0001ba8d(3): MOV RAX,qword ptr [RSI]
0001ba90(5): MOV qword ptr [RSP + 0x18],RDX
0001ba95(5): MOV qword ptr [RSP + 0x40],R9
0001ba9a(3): CMP CL,0x24
0001ba9d(5): MOV qword ptr [RSP + 0x10],RAX
0001baa2(6): JA 0x0001bb60
0001baa8(3): MOV RBP,RSI
0001baab(7): LEA RSI,[0x22c20]
0001bab2(3): MOVZX EDX,CL
0001bab5(3): MOV R14,RDI
0001bab8(4): MOVSXD RAX,dword ptr [RSI + RDX*0x4]
0001babc(3): ADD RAX,RSI
0001babf(2): JMP RAX
0001bac1(4): MOV RBX,qword ptr [RBP + 0x30]
0001bac5(5): MOV R15,qword ptr [RSP + 0x20]
0001baca(3): MOV RSI,RDI
0001bacd(5): MOV R13,qword ptr [RSP + 0x18]
0001bad2(4): MOV qword ptr [RSP],R8
0001bad6(4): LEA RAX,[RBX + 0x1]
0001bada(3): MOV RDX,R15
0001badd(7): OR RDX,0x800000
0001bae4(3): MOV RDI,R13
0001bae7(4): MOV qword ptr [RBP + 0x30],RAX
0001baeb(5): CALL 0x0001b2a0
0001baf0(2): CDQE
0001baf2(4): ADD qword ptr [R14 + 0x48],RAX
0001baf6(2): XOR EAX,EAX
0001baf8(5): CMP byte ptr [R13 + 0x8],0x9
0001bafd(3): MOV RDX,R13
0001bb00(6): JZ 0x0001c600
0001bb06(5): MOV R13,qword ptr [RSP + 0x40]
0001bb0b(4): MOV R8,qword ptr [RSP]
0001bb0f(3): MOV RCX,R15
0001bb12(3): MOV RSI,RBP
0001bb15(3): MOV RDI,R14
0001bb18(4): ADD R8,0x1
0001bb1c(3): MOV R9,R13
0001bb1f(5): CALL 0x0001d0d0
0001bb24(4): MOV R11D,dword ptr [R13]
0001bb28(3): TEST R11D,R11D
0001bb2b(2): JNZ 0x0001bb60
0001bb2d(5): MOV RDX,qword ptr [RSP + 0x18]
0001bb32(4): CMP byte ptr [RDX + 0x8],0x9
0001bb36(6): JZ 0x0001c600
0001bb3c(3): TEST RAX,RAX
0001bb3f(2): JZ 0x0001bb52
0001bb41(7): LEA RSI,[0x11e20]
0001bb48(2): XOR EDX,EDX
0001bb4a(3): MOV RDI,RAX
0001bb4d(5): CALL 0x00010f80
0001bb52(5): MOV RAX,qword ptr [RSP + 0x40]
0001bb57(6): MOV dword ptr [RAX],0x8
0001bb5d(3): NOP dword ptr [RAX]
0001bb60(9): MOV qword ptr [RSP + 0x28],0x0
0001bb69(7): NOP dword ptr [RAX]
0001bb70(8): MOV RDI,qword ptr [0x118 + RSP]
0001bb78(9): XOR RDI,qword ptr FS:[0x28]
0001bb81(5): MOV RAX,qword ptr [RSP + 0x28]
0001bb86(6): JNZ 0x0001cefe
0001bb8c(7): ADD RSP,0x128
0001bb93(1): POP RBX
0001bb94(1): POP RBP
0001bb95(2): POP R12
0001bb97(2): POP R13
0001bb99(2): POP R14
0001bb9b(2): POP R15
0001bb9d(1): RET
0001bb9e(9): TEST qword ptr [RSP + 0x20],0x1000000
0001bba7(6): JNZ 0x0001bdfd
0001bbad(5): MOV RAX,qword ptr [RSP + 0x20]
0001bbb2(2): TEST AL,0x20
0001bbb4(6): JNZ 0x0001bdfd
0001bbba(2): TEST AL,0x10
0001bbbc(6): JNZ 0x0001ca25
0001bbc2(3): CMP CL,0x9
0001bbc5(6): JZ 0x0001c5d8
0001bbcb(5): MOV RAX,qword ptr [RSP + 0x10]
0001bbd0(5): MOV R8,qword ptr [RSP + 0x18]
0001bbd5(2): XOR ECX,ECX
0001bbd7(2): XOR EDX,EDX
0001bbd9(7): LEA RSI,[0x80 + RAX]
0001bbe0(4): LEA RDI,[RAX + 0x70]
0001bbe4(5): MOV byte ptr [R8 + 0x8],0x1
0001bbe9(5): CALL 0x00013360
0001bbee(3): TEST RAX,RAX
0001bbf1(5): MOV qword ptr [RSP + 0x28],RAX
0001bbf6(6): JZ 0x0001c5c8
0001bbfc(5): MOV RBX,qword ptr [RSP + 0x18]
0001bc01(5): MOV RDX,qword ptr [RSP + 0x20]
0001bc06(3): MOV RSI,R14
0001bc09(8): LEA R15,[0xc0 + RSP]
0001bc11(3): MOV RDI,RBX
0001bc14(5): CALL 0x0001b2a0
0001bc19(2): CDQE
0001bc1b(4): ADD qword ptr [R14 + 0x48],RAX
0001bc1f(4): MOVZX EAX,byte ptr [RBX + 0x8]
0001bc23(5): NOP dword ptr [RAX + RAX*0x1]
0001bc28(2): CMP AL,0x17
0001bc2a(6): JA 0x0001bb70
0001bc30(2): CMP AL,0x12
0001bc32(5): MOV ECX,0x8c0800
0001bc37(3): SETZ BL
0001bc3a(4): BT RCX,RAX
0001bc3e(6): JNC 0x0001bb70
0001bc44(5): MOV RCX,qword ptr [RSP + 0x18]
0001bc49(2): CMP AL,0x17
0001bc4b(4): MOV RBP,qword ptr [R14 + 0x48]
0001bc4f(4): MOVDQA XMM0,xmmword ptr [RCX]
0001bc53(6): JZ 0x0001bf78
0001bc59(2): CMP AL,0x13
0001bc5b(3): MOVZX EBX,BL
0001bc5e(6): JZ 0x0001bf10
0001bc64(5): MOV RDX,qword ptr [RSP + 0x20]
0001bc69(5): MOV RDI,qword ptr [RSP + 0x18]
0001bc6e(3): MOV RSI,R14
0001bc71(5): CALL 0x0001b2a0
0001bc76(2): CDQE
0001bc78(4): ADD qword ptr [R14 + 0x48],RAX
0001bc7c(6): CMP qword ptr [RSP + 0x28],0x0
0001bc82(6): JZ 0x0001c010
0001bc88(8): MOV qword ptr [RSP],-0x1
0001bc90(3): TEST RBX,RBX
0001bc93(5): MOV RBP,qword ptr [RSP + 0x28]
0001bc98(9): MOV qword ptr [RSP + 0x30],0x0
0001bca1(6): JG 0x0001be20
0001bca7(4): CMP byte ptr [RBP + 0x30],0x11
0001bcab(6): JZ 0x0001bff0
0001bcb1(5): CMP qword ptr [RSP],-0x1
0001bcb6(3): MOV RDX,RBP
0001bcb9(3): MOV R8,R15
0001bcbc(3): SETZ AL
0001bcbf(2): XOR ECX,ECX
0001bcc1(3): ADD EAX,0xa
0001bcc4(7): MOV byte ptr [0xc8 + RSP],AL
0001bccb(5): MOV RAX,qword ptr [RSP + 0x10]
0001bcd0(4): LEA R12,[RAX + 0x70]
0001bcd4(7): LEA R13,[0x80 + RAX]
0001bcdb(3): MOV RDI,R12
0001bcde(3): MOV RSI,R13
0001bce1(5): CALL 0x00013360
0001bce6(3): TEST RAX,RAX
0001bce9(3): MOV RDX,RAX
0001bcec(6): JZ 0x0001bee0
0001bcf2(4): ADD RBX,0x2
0001bcf6(4): CMP RBX,qword ptr [RSP]
0001bcfa(2): JG 0x0001bd7b
0001bcfc(5): MOV qword ptr [RSP + 0x48],R14
0001bd01(3): MOV R14,RAX
0001bd04(5): MOV RSI,qword ptr [RSP + 0x10]
0001bd09(3): MOV RDI,RBP
0001bd0c(5): CALL 0x00013440
0001bd11(3): MOV R8,R15
0001bd14(3): MOV RBP,RAX
0001bd17(3): MOV RCX,RAX
0001bd1a(3): MOV RDX,R14
0001bd1d(3): MOV RSI,R13
0001bd20(3): MOV RDI,R12
0001bd23(8): MOV byte ptr [0xc8 + RSP],0x10
0001bd2b(5): CALL 0x00013360
0001bd30(3): TEST RBP,RBP
0001bd33(6): JZ 0x0001bee0
0001bd39(3): TEST RAX,RAX
0001bd3c(6): JZ 0x0001bee0
0001bd42(2): XOR ECX,ECX
0001bd44(3): MOV R8,R15
0001bd47(3): MOV RDX,RAX
0001bd4a(3): MOV RSI,R13
0001bd4d(3): MOV RDI,R12
0001bd50(8): MOV byte ptr [0xc8 + RSP],0xa
0001bd58(5): CALL 0x00013360
0001bd5d(3): TEST RAX,RAX
0001bd60(3): MOV R14,RAX
0001bd63(6): JZ 0x0001bee0
0001bd69(4): ADD RBX,0x1
0001bd6d(4): CMP RBX,qword ptr [RSP]
0001bd71(2): JLE 0x0001bd04
0001bd73(5): MOV R14,qword ptr [RSP + 0x48]
0001bd78(3): MOV RDX,RAX
0001bd7b(5): MOV RAX,qword ptr [RSP + 0x30]
0001bd80(3): TEST RAX,RAX
0001bd83(6): JZ 0x0001c030
0001bd89(3): MOV RCX,RDX
0001bd8c(3): MOV R8,R15
0001bd8f(3): MOV RDX,RAX
0001bd92(3): MOV RSI,R13
0001bd95(3): MOV RDI,R12
0001bd98(8): MOV byte ptr [0xc8 + RSP],0x10
0001bda0(5): CALL 0x00013360
0001bda5(5): MOV RDI,qword ptr [RSP + 0x40]
0001bdaa(2): MOV EDX,dword ptr [RDI]
0001bdac(2): TEST EDX,EDX
0001bdae(2): JZ 0x0001bdb9
0001bdb0(3): TEST RAX,RAX
0001bdb3(6): JZ 0x0001c10b
0001bdb9(5): MOV qword ptr [RSP + 0x28],RAX
0001bdbe(9): TEST qword ptr [RSP + 0x20],0x1000000
0001bdc7(5): MOV RAX,qword ptr [RSP + 0x18]
0001bdcc(4): MOVZX EAX,byte ptr [RAX + 0x8]
0001bdd0(6): JZ 0x0001bc28
0001bdd6(2): CMP AL,0xb
0001bdd8(2): JZ 0x0001bde2
0001bdda(2): CMP AL,0x17
0001bddc(6): JNZ 0x0001bc28
0001bde2(5): MOV RAX,qword ptr [RSP + 0x28]
0001bde7(3): TEST RAX,RAX
0001bdea(2): JZ 0x0001bdfd
0001bdec(7): LEA RSI,[0x11e20]
0001bdf3(2): XOR EDX,EDX
0001bdf5(3): MOV RDI,RAX
0001bdf8(5): CALL 0x00010f80
0001bdfd(5): MOV RAX,qword ptr [RSP + 0x40]
0001be02(9): MOV qword ptr [RSP + 0x28],0x0
0001be0b(6): MOV dword ptr [RAX],0xd
0001be11(5): JMP 0x0001bb70
0001be20(4): CMP RBX,0x1
0001be24(6): JZ 0x0001c65c
0001be2a(5): MOV RAX,qword ptr [RSP + 0x10]
0001be2f(3): MOV R13,RBP
0001be32(5): MOV qword ptr [RSP + 0x48],R14
0001be37(7): LEA R12,[0x80 + RAX]
0001be3e(4): LEA RDI,[RAX + 0x70]
0001be42(3): MOV RAX,RBP
0001be45(3): MOV R14,RAX
0001be48(5): MOV EBP,0x2
0001be4d(3): MOV RSI,R12
0001be50(5): MOV qword ptr [RSP + 0x30],RDI
0001be55(3): MOV R12,R13
0001be58(3): MOV R13,RBX
0001be5b(3): MOV RBX,RSI
0001be5e(2): NOP
0001be60(5): MOV RSI,qword ptr [RSP + 0x10]
0001be65(3): MOV RDI,R12
0001be68(5): CALL 0x00013440
0001be6d(5): MOV RDI,qword ptr [RSP + 0x30]
0001be72(3): MOV R12,RAX
0001be75(3): MOV RDX,R14
0001be78(3): MOV R8,R15
0001be7b(3): MOV RCX,RAX
0001be7e(3): MOV RSI,RBX
0001be81(8): MOV byte ptr [0xc8 + RSP],0x10
0001be89(5): CALL 0x00013360
0001be8e(3): TEST R12,R12
0001be91(3): MOV R14,RAX
0001be94(2): JZ 0x0001bee0
0001be96(3): TEST RAX,RAX
0001be99(2): JZ 0x0001bee0
0001be9b(4): ADD RBP,0x1
0001be9f(3): CMP RBP,R13
0001bea2(2): JLE 0x0001be60
0001bea4(5): MOV R14,qword ptr [RSP + 0x48]
0001bea9(3): MOV RBX,R13
0001beac(5): MOV qword ptr [RSP + 0x30],RAX
0001beb1(3): MOV R13,R12
0001beb4(4): CMP qword ptr [RSP],RBX
0001beb8(6): JZ 0x0001c024
0001bebe(5): MOV RSI,qword ptr [RSP + 0x10]
0001bec3(3): MOV RDI,R13
0001bec6(5): CALL 0x00013440
0001becb(3): TEST RAX,RAX
0001bece(3): MOV RBP,RAX
0001bed1(6): JNZ 0x0001bca7
0001bed7(9): NOP word ptr [RAX + RAX*0x1]
0001bee0(5): MOV RAX,qword ptr [RSP + 0x40]
0001bee5(6): MOV dword ptr [RAX],0xc
0001beeb(5): MOV RDI,qword ptr [RSP + 0x28]
0001bef0(7): LEA RSI,[0x11e20]
0001bef7(2): XOR EDX,EDX
0001bef9(5): CALL 0x00010f80
0001befe(9): MOV qword ptr [RSP + 0x28],0x0
0001bf07(5): JMP 0x0001bb70
0001bf10(8): MOV qword ptr [RSP],0x1
0001bf18(5): MOV RDX,qword ptr [RSP + 0x20]
0001bf1d(5): MOV RDI,qword ptr [RSP + 0x18]
0001bf22(3): MOV RSI,R14
0001bf25(5): CALL 0x0001b2a0
0001bf2a(2): CDQE
0001bf2c(4): ADD qword ptr [R14 + 0x48],RAX
0001bf30(6): CMP qword ptr [RSP + 0x28],0x0
0001bf36(6): JZ 0x0001c010
0001bf3c(4): MOV RAX,qword ptr [RSP]
0001bf40(3): OR RAX,RBX
0001bf43(6): JNZ 0x0001bc90
0001bf49(5): MOV RDI,qword ptr [RSP + 0x28]
0001bf4e(7): LEA RSI,[0x11e20]
0001bf55(2): XOR EDX,EDX
0001bf57(5): CALL 0x00010f80
0001bf5c(5): MOV RAX,qword ptr [RSP + 0x40]
0001bf61(2): MOV ESI,dword ptr [RAX]
0001bf63(2): TEST ESI,ESI
0001bf65(2): JNZ 0x0001beeb
0001bf67(9): MOV qword ptr [RSP + 0x28],0x0
0001bf70(5): JMP 0x0001bdbe
0001bf78(5): MOV RDX,qword ptr [RSP + 0x20]
0001bf7d(3): MOV RSI,RCX
0001bf80(3): MOV RDI,R14
0001bf83(4): MOVAPS xmmword ptr [RSP],XMM0
0001bf87(5): CALL 0x0001b9a0
0001bf8c(4): CMP RAX,-0x1
0001bf90(3): MOV RBX,RAX
0001bf93(5): MOVDQA XMM0,xmmword ptr [RSP]
0001bf98(6): JZ 0x0001c040
0001bf9e(4): CMP RAX,-0x2
0001bfa2(2): JZ 0x0001bfbd
0001bfa4(5): MOV RAX,qword ptr [RSP + 0x18]
0001bfa9(4): MOVZX EAX,byte ptr [RAX + 0x8]
0001bfad(2): CMP AL,0x18
0001bfaf(6): JZ 0x0001c0d0
0001bfb5(2): CMP AL,0x1
0001bfb7(6): JZ 0x0001c0e3
0001bfbd(9): TEST qword ptr [RSP + 0x20],0x200000
0001bfc6(6): JZ 0x0001cf03
0001bfcc(5): MOV RAX,qword ptr [RSP + 0x18]
0001bfd1(4): MOV qword ptr [R14 + 0x48],RBP
0001bfd5(3): MOVAPS xmmword ptr [RAX],XMM0
0001bfd8(4): MOV byte ptr [RAX + 0x8],0x1
0001bfdc(5): MOV RAX,qword ptr [RSP + 0x28]
0001bfe1(5): JMP 0x0001bda5
0001bff0(4): MOV RDX,qword ptr [RBP + 0x28]
0001bff4(7): LEA RSI,[0x10cc0]
0001bffb(3): MOV RDI,RBP
0001bffe(5): CALL 0x00010f80
0001c003(5): JMP 0x0001bcb1
0001c010(5): MOV RAX,qword ptr [RSP + 0x40]
0001c015(2): MOV ECX,dword ptr [RAX]
0001c017(2): TEST ECX,ECX
0001c019(6): JZ 0x0001bf67
0001c01f(5): JMP 0x0001bb60
0001c024(5): MOV RDX,qword ptr [RSP + 0x30]
0001c029(7): NOP dword ptr [RAX]
0001c030(5): MOV qword ptr [RSP + 0x28],RDX
0001c035(5): JMP 0x0001bdbe
0001c040(5): MOV RAX,qword ptr [RSP + 0x18]
0001c045(4): CMP byte ptr [RAX + 0x8],0x1
0001c049(6): JNZ 0x0001c100
0001c04f(5): MOV RAX,qword ptr [RSP + 0x18]
0001c054(3): CMP byte ptr [RAX],0x2c
0001c057(6): JNZ 0x0001c100
0001c05d(2): XOR EBX,EBX
0001c05f(5): MOV RDX,qword ptr [RSP + 0x20]
0001c064(5): MOV RSI,qword ptr [RSP + 0x18]
0001c069(3): MOV RDI,R14
0001c06c(5): MOVAPS xmmword ptr [RSP + 0x30],XMM0
0001c071(5): CALL 0x0001b9a0
0001c076(4): CMP RAX,-0x2
0001c07a(4): MOV qword ptr [RSP],RAX
0001c07e(6): MOVDQA XMM0,xmmword ptr [RSP + 0x30]
0001c084(6): JZ 0x0001bfbd
0001c08a(4): MOV RAX,qword ptr [RSP]
0001c08e(4): CMP RAX,-0x1
0001c092(2): JZ 0x0001c099
0001c094(3): CMP RAX,RBX
0001c097(2): JL 0x0001c100
0001c099(5): MOV RAX,qword ptr [RSP + 0x18]
0001c09e(4): CMP byte ptr [RAX + 0x8],0x18
0001c0a2(2): JNZ 0x0001c100
0001c0a4(5): CMP qword ptr [RSP],-0x1
0001c0a9(2): JNZ 0x0001c0d4
0001c0ab(2): XOR EAX,EAX
0001c0ad(7): CMP RBX,0x7fff
0001c0b4(3): SETG AL
0001c0b7(3): TEST RAX,RAX
0001c0ba(6): JZ 0x0001bf18
0001c0c0(5): MOV RAX,qword ptr [RSP + 0x40]
0001c0c5(6): MOV dword ptr [RAX],0xf
0001c0cb(2): JMP 0x0001c10b
0001c0d0(4): MOV qword ptr [RSP],RBX
0001c0d4(2): XOR EAX,EAX
0001c0d6(8): CMP qword ptr [RSP],0x7fff
0001c0de(3): SETG AL
0001c0e1(2): JMP 0x0001c0b7
0001c0e3(5): MOV RAX,qword ptr [RSP + 0x18]
0001c0e8(3): CMP byte ptr [RAX],0x2c
0001c0eb(6): JZ 0x0001c05f
0001c0f1(9): TEST qword ptr [RSP + 0x20],0x200000
0001c0fa(6): JNZ 0x0001bfcc
0001c100(5): MOV RAX,qword ptr [RSP + 0x40]
0001c105(6): MOV dword ptr [RAX],0xa
0001c10b(6): CMP qword ptr [RSP + 0x28],0x0
0001c111(6): JNZ 0x0001beeb
0001c117(5): JMP 0x0001bb60
0001c120(5): MOV RAX,qword ptr [RSP + 0x18]
0001c125(2): MOV EBP,dword ptr [RAX]
0001c127(6): TEST EBP,0x30f
0001c12d(2): JZ 0x0001c191
0001c12f(5): MOV RAX,qword ptr [RSP + 0x10]
0001c134(7): MOVZX EAX,byte ptr [0xb0 + RAX]
0001c13b(2): TEST AL,0x10
0001c13d(2): JNZ 0x0001c191
0001c13f(5): MOV RDI,qword ptr [RSP + 0x10]
0001c144(3): OR EAX,0x10
0001c147(2): TEST AL,0x8
0001c149(6): MOV byte ptr [0xb0 + RDI],AL
0001c14f(6): JNZ 0x0001cd53
0001c155(10): MOV RDX,0x3ff000000000000
0001c15f(2): TEST AL,0x4
0001c161(7): MOV qword ptr [0xb8 + RDI],RDX
0001c168(10): MOV RDX,0x7fffffe87fffffe
0001c172(7): MOV qword ptr [0xc0 + RDI],RDX
0001c179(6): JZ 0x0001ccd8
0001c17f(4): PXOR XMM0,XMM0
0001c183(5): MOV RAX,qword ptr [RSP + 0x18]
0001c188(7): MOVUPS xmmword ptr [0xc8 + RDI],XMM0
0001c18f(2): MOV EBP,dword ptr [RAX]
0001c191(5): MOV RAX,qword ptr [RSP + 0x10]
0001c196(4): LEA RBX,[RAX + 0x70]
0001c19a(7): LEA R12,[0x80 + RAX]
0001c1a1(6): LEA EAX,[-0x100 + RBP]
0001c1a7(5): TEST EAX,0xfffffeff
0001c1ac(6): JNZ 0x0001c81a
0001c1b2(6): CMP EBP,0x100
0001c1b8(5): MOV R15,qword ptr [RSP + 0x18]
0001c1bd(6): JZ 0x0001c7f2
0001c1c3(7): MOV dword ptr [R15],0x5
0001c1ca(3): MOV R8,R15
0001c1cd(2): XOR ECX,ECX
0001c1cf(2): XOR EDX,EDX
0001c1d1(3): MOV RSI,R12
0001c1d4(3): MOV RDI,RBX
0001c1d7(5): CALL 0x00013360
0001c1dc(7): MOV dword ptr [R15],0xa
0001c1e3(3): MOV RBP,RAX
0001c1e6(5): MOV R8,qword ptr [RSP + 0x18]
0001c1eb(2): XOR ECX,ECX
0001c1ed(2): XOR EDX,EDX
0001c1ef(3): MOV RSI,R12
0001c1f2(3): MOV RDI,RBX
0001c1f5(5): CALL 0x00013360
0001c1fa(8): LEA R8,[0xc0 + RSP]
0001c202(3): MOV RDX,RBP
0001c205(3): MOV RDI,RBX
0001c208(3): MOV RCX,RAX
0001c20b(3): MOV RSI,R12
0001c20e(3): MOV R13,RAX
0001c211(8): MOV byte ptr [0xc8 + RSP],0xa
0001c219(5): CALL 0x00013360
0001c21e(3): TEST RBP,RBP
0001c221(3): MOV RDI,RAX
0001c224(5): MOV qword ptr [RSP + 0x28],RAX
0001c229(3): SETZ DL
0001c22c(3): TEST R13,R13
0001c22f(3): SETZ AL
0001c232(2): OR DL,AL
0001c234(6): JNZ 0x0001c5c8
0001c23a(3): TEST RDI,RDI
0001c23d(6): JZ 0x0001c5c8
0001c243(5): MOV RDX,qword ptr [RSP + 0x20]
0001c248(5): MOV RDI,qword ptr [RSP + 0x18]
0001c24d(3): MOV RSI,R14
0001c250(5): CALL 0x0001b2a0
0001c255(2): CDQE
0001c257(4): ADD qword ptr [R14 + 0x48],RAX
0001c25b(5): JMP 0x0001bb70
0001c260(5): MOV ESI,0x1
0001c265(5): MOV EDI,0x20
0001c26a(12): MOV qword ptr [0x98 + RSP],0x0
0001c276(5): CALL 0x000026b0
0001c27b(5): MOV ESI,0x1
0001c280(3): MOV R12,RAX
0001c283(5): MOV EDI,0x50
0001c288(5): CALL 0x000026b0
0001c28d(3): TEST R12,R12
0001c290(3): MOV R13,RAX
0001c293(3): SETZ DL
0001c296(3): TEST RAX,RAX
0001c299(3): SETZ AL
0001c29c(2): OR DL,AL
0001c29e(6): JNZ 0x0001ca79
0001c2a4(5): MOV R10,qword ptr [RSP + 0x18]
0001c2a9(5): MOV RDX,qword ptr [RSP + 0x20]
0001c2ae(3): MOV RSI,R14
0001c2b1(3): MOV RDI,R10
0001c2b4(5): CALL 0x00010b90
0001c2b9(3): MOVSXD RBX,EAX
0001c2bc(5): MOVZX EAX,byte ptr [R10 + 0x8]
0001c2c1(2): CMP AL,0x2
0001c2c3(6): JZ 0x0001ca69
0001c2c9(2): CMP AL,0x19
0001c2cb(5): MOV byte ptr [RSP + 0x57],0x0
0001c2d0(6): JZ 0x0001c79a
0001c2d6(2): CMP AL,0x15
0001c2d8(6): JZ 0x0001c7e4
0001c2de(8): LEA RAX,[0xd0 + RSP]
0001c2e6(5): MOV R15,qword ptr [RSP + 0x18]
0001c2eb(7): LEA RBP,[0x22cb4]
0001c2f2(9): MOV qword ptr [RSP + 0x48],0x0
0001c2fb(6): MOV R9D,0x1
0001c301(9): MOV qword ptr [RSP + 0x30],0x0
0001c30a(5): MOV qword ptr [RSP + 0x28],RAX
0001c30f(8): LEA RAX,[0xa0 + RSP]
0001c317(4): MOV qword ptr [RSP],RAX
0001c31b(8): LEA RAX,[0x98 + RSP]
0001c323(5): MOV qword ptr [RSP + 0x58],RAX
0001c328(8): LEA RAX,[0xc0 + RSP]
0001c330(5): MOV qword ptr [RSP + 0x60],RAX
0001c335(8): LEA RAX,[0xf0 + RSP]
0001c33d(5): MOV qword ptr [RSP + 0x68],RAX
0001c342(5): MOV RAX,qword ptr [RSP + 0x28]
0001c347(5): MOV R8,qword ptr [RSP + 0x20]
0001c34c(4): AND R9D,0x1
0001c350(4): MOV RDI,qword ptr [RSP]
0001c354(2): MOV ECX,EBX
0001c356(3): MOV RDX,R15
0001c359(3): MOV RSI,R14
0001c35c(11): MOV dword ptr [0xa0 + RSP],0x3
0001c367(8): MOV qword ptr [0xa8 + RSP],RAX
0001c36f(5): CALL 0x0001b040
0001c374(2): TEST EAX,EAX
0001c376(6): JNZ 0x0001c85b
0001c37c(5): MOV RDX,qword ptr [RSP + 0x20]
0001c381(3): MOV RSI,R14
0001c384(3): MOV RDI,R15
0001c387(5): CALL 0x00010b90
0001c38c(3): MOVSXD RBX,EAX
0001c38f(7): MOV EAX,dword ptr [0xa0 + RSP]
0001c396(3): LEA EDX,[RAX + -0x2]
0001c399(3): AND EDX,0xfffffffd
0001c39c(2): JZ 0x0001c3b5
0001c39e(5): MOVZX EDX,byte ptr [R15 + 0x8]
0001c3a3(3): CMP DL,0x2
0001c3a6(6): JZ 0x0001c841
0001c3ac(3): CMP DL,0x16
0001c3af(6): JZ 0x0001c867
0001c3b5(3): CMP EAX,0x4
0001c3b8(6): JA 0x0001cd5a
0001c3be(5): MOVSXD RAX,dword ptr [RBP + RAX*0x4]
0001c3c3(3): ADD RAX,RBP
0001c3c6(2): JMP RAX
0001c3c8(5): MOV RBX,qword ptr [RSP + 0x40]
0001c3cd(3): CMP CL,0x23
0001c3d0(4): MOV RSI,qword ptr [RDI + 0x78]
0001c3d4(4): SETZ R8B
0001c3d8(7): LEA RCX,[0x21fe1]
0001c3df(7): LEA RDX,[0x2282b]
0001c3e6(4): MOVZX R8D,R8B
0001c3ea(3): MOV R9,RBX
0001c3ed(5): MOV RDI,qword ptr [RSP + 0x10]
0001c3f2(5): CALL 0x000166b0
0001c3f7(2): MOV EDI,dword ptr [RBX]
0001c3f9(5): MOV qword ptr [RSP + 0x28],RAX
0001c3fe(2): TEST EDI,EDI
0001c400(6): JZ 0x0001bbfc
0001c406(3): TEST RAX,RAX
0001c409(6): JNZ 0x0001bbfc
0001c40f(5): JMP 0x0001bb60
0001c418(5): MOV RBX,qword ptr [RSP + 0x40]
0001c41d(3): CMP CL,0x21
0001c420(4): MOV RSI,qword ptr [RDI + 0x78]
0001c424(4): SETZ R8B
0001c428(7): LEA RCX,[0x1fb17]
0001c42f(7): LEA RDX,[0x2281f]
0001c436(4): MOVZX R8D,R8B
0001c43a(3): MOV R9,RBX
0001c43d(2): JMP 0x0001c3ed
0001c43f(5): MOV RAX,qword ptr [RSP + 0x18]
0001c444(5): MOV RDI,qword ptr [RSP + 0x10]
0001c449(3): MOV RCX,qword ptr [RAX]
0001c44c(5): MOV EAX,0x1
0001c451(2): SHL EAX,CL
0001c453(2): CDQE
0001c455(7): TEST qword ptr [0xa8 + RDI],RAX
0001c45c(6): JZ 0x0001ca8e
0001c462(5): MOV RBX,qword ptr [RSP + 0x10]
0001c467(5): MOV R8,qword ptr [RSP + 0x18]
0001c46c(2): XOR ECX,ECX
0001c46e(2): XOR EDX,EDX
0001c470(7): OR qword ptr [0xa0 + RBX],RAX
0001c477(7): LEA RSI,[0x80 + RBX]
0001c47e(4): LEA RDI,[RBX + 0x70]
0001c482(5): CALL 0x00013360
0001c487(3): TEST RAX,RAX
0001c48a(5): MOV qword ptr [RSP + 0x28],RAX
0001c48f(6): JZ 0x0001c5c8
0001c495(8): ADD qword ptr [0x98 + RBX],0x1
0001c49d(7): OR byte ptr [0xb0 + RBX],0x2
0001c4a4(5): JMP 0x0001bbfc
0001c4a9(5): MOV RBX,qword ptr [RSP + 0x10]
0001c4ae(5): MOV R8,qword ptr [RSP + 0x18]
0001c4b3(2): XOR ECX,ECX
0001c4b5(2): XOR EDX,EDX
0001c4b7(7): LEA RSI,[0x80 + RBX]
0001c4be(4): LEA RDI,[RBX + 0x70]
0001c4c2(5): CALL 0x00013360
0001c4c7(3): TEST RAX,RAX
0001c4ca(5): MOV qword ptr [RSP + 0x28],RAX
0001c4cf(6): JZ 0x0001c5c8
0001c4d5(7): CMP dword ptr [0xb4 + RBX],0x1
0001c4dc(6): JLE 0x0001bbfc
0001c4e2(7): OR byte ptr [0xb0 + RBX],0x2
0001c4e9(5): JMP 0x0001bbfc
0001c4ee(5): MOV RAX,qword ptr [RSP + 0x10]
0001c4f3(5): MOV R8,qword ptr [RSP + 0x18]
0001c4f8(2): XOR ECX,ECX
0001c4fa(2): XOR EDX,EDX
0001c4fc(4): LEA RBX,[RAX + 0x70]
0001c500(7): LEA RBP,[0x80 + RAX]
0001c507(3): MOV RDI,RBX
0001c50a(3): MOV RSI,RBP
0001c50d(5): CALL 0x00013360
0001c512(3): TEST RAX,RAX
0001c515(5): MOV qword ptr [RSP + 0x28],RAX
0001c51a(6): JZ 0x0001c5c8
0001c520(5): MOV RAX,qword ptr [RSP + 0x10]
0001c525(8): LEA R12,[0xc0 + RSP]
0001c52d(5): MOV R15,qword ptr [RSP + 0x28]
0001c532(7): CMP dword ptr [0xb4 + RAX],0x1
0001c539(6): JLE 0x0001bbfc
0001c53f(4): MOV RAX,qword ptr [R14 + 0x48]
0001c543(4): CMP qword ptr [R14 + 0x68],RAX
0001c547(6): JLE 0x0001c851
0001c54d(4): CMP RAX,qword ptr [R14 + 0x30]
0001c551(6): JZ 0x0001c851
0001c557(4): MOV RDX,qword ptr [R14 + 0x10]
0001c55b(4): CMP dword ptr [RDX + RAX*0x4],-0x1
0001c55f(6): JNZ 0x0001c851
0001c565(5): MOV R13,qword ptr [RSP + 0x18]
0001c56a(5): MOV RDX,qword ptr [RSP + 0x20]
0001c56f(3): MOV RSI,R14
0001c572(3): MOV RDI,R13
0001c575(5): CALL 0x0001b2a0
0001c57a(2): CDQE
0001c57c(4): ADD qword ptr [R14 + 0x48],RAX
0001c580(3): MOV R8,R13
0001c583(2): XOR ECX,ECX
0001c585(2): XOR EDX,EDX
0001c587(3): MOV RSI,RBP
0001c58a(3): MOV RDI,RBX
0001c58d(5): CALL 0x00013360
0001c592(3): MOV RDX,R15
0001c595(3): MOV R13,RAX
0001c598(3): MOV R8,R12
0001c59b(3): MOV RCX,RAX
0001c59e(3): MOV RSI,RBP
0001c5a1(3): MOV RDI,RBX
0001c5a4(8): MOV byte ptr [0xc8 + RSP],0x10
0001c5ac(5): CALL 0x00013360
0001c5b1(3): TEST R13,R13
0001c5b4(3): MOV R15,RAX
0001c5b7(3): SETZ DL
0001c5ba(3): TEST RAX,RAX
0001c5bd(3): SETZ AL
0001c5c0(2): OR DL,AL
0001c5c2(6): JZ 0x0001c53f
0001c5c8(5): MOV RAX,qword ptr [RSP + 0x40]
0001c5cd(6): MOV dword ptr [RAX],0xc
0001c5d3(5): JMP 0x0001bb60
0001c5d8(9): TEST qword ptr [RSP + 0x20],0x20000
0001c5e1(6): JNZ 0x0001bbcb
0001c5e7(5): MOV RAX,qword ptr [RSP + 0x40]
0001c5ec(9): MOV qword ptr [RSP + 0x28],0x0
0001c5f5(6): MOV dword ptr [RAX],0x10
0001c5fb(5): JMP 0x0001bb70
0001c600(4): CMP RBX,0x8
0001c604(2): JBE 0x0001c66b
0001c606(5): MOV RDI,qword ptr [RSP + 0x10]
0001c60b(8): LEA R8,[0xc0 + RSP]
0001c613(2): XOR ECX,ECX
0001c615(3): MOV RDX,RAX
0001c618(8): MOV byte ptr [0xc8 + RSP],0x11
0001c620(7): LEA RSI,[0x80 + RDI]
0001c627(4): ADD RDI,0x70
0001c62b(5): CALL 0x00013360
0001c630(3): TEST RAX,RAX
0001c633(5): MOV qword ptr [RSP + 0x28],RAX
0001c638(2): JZ 0x0001c5c8
0001c63a(4): MOV qword ptr [RAX + 0x28],RBX
0001c63e(5): JMP 0x0001bbfc
0001c643(5): MOV RAX,qword ptr [RSP + 0x40]
0001c648(9): MOV qword ptr [RSP + 0x28],0x0
0001c651(6): MOV dword ptr [RAX],0x5
0001c657(5): JMP 0x0001bb70
0001c65c(5): MOV R13,qword ptr [RSP + 0x28]
0001c661(5): MOV qword ptr [RSP + 0x30],R13
0001c666(5): JMP 0x0001beb4
0001c66b(5): MOV RSI,qword ptr [RSP + 0x10]
0001c670(5): MOV EDX,0x1
0001c675(2): MOV ECX,EBX
0001c677(2): SHL EDX,CL
0001c679(3): MOVSXD RDX,EDX
0001c67c(7): OR qword ptr [0xa8 + RSI],RDX
0001c683(2): JMP 0x0001c606
0001c685(8): MOV RSI,qword ptr [0xa8 + RSP]
0001c68d(3): MOV RDI,R12
0001c690(5): CALL 0x00015e50
0001c695(5): MOV RDX,qword ptr [RSP + 0x40]
0001c69a(2): TEST EAX,EAX
0001c69c(2): MOV dword ptr [RDX],EAX
0001c69e(2): JNZ 0x0001c6d8
0001c6a0(5): MOVZX EAX,byte ptr [R15 + 0x8]
0001c6a5(2): CMP AL,0x2
0001c6a7(6): JZ 0x0001c841
0001c6ad(2): CMP AL,0x15
0001c6af(6): JZ 0x0001cac2
0001c6b5(3): XOR R9D,R9D
0001c6b8(5): JMP 0x0001c342
0001c6bd(8): MOV RSI,qword ptr [0xa8 + RSP]
0001c6c5(3): MOV RDI,R12
0001c6c8(5): CALL 0x00015e50
0001c6cd(5): MOV RDX,qword ptr [RSP + 0x40]
0001c6d2(2): TEST EAX,EAX
0001c6d4(2): MOV dword ptr [RDX],EAX
0001c6d6(2): JZ 0x0001c6a0
0001c6d8(3): MOV RDI,R12
0001c6db(5): CALL 0x00002a10
0001c6e0(3): MOV RDI,R13
0001c6e3(5): CALL 0x00011dc0
0001c6e8(5): MOV RAX,qword ptr [RSP + 0x40]
0001c6ed(3): MOV R8D,dword ptr [RAX]
0001c6f0(3): TEST R8D,R8D
0001c6f3(6): JNZ 0x0001bb60
0001c6f9(9): MOV qword ptr [RSP + 0x28],0x0
0001c702(5): JMP 0x0001bbfc
0001c707(4): MOV RDX,qword ptr [R13 + 0x28]
0001c70b(5): CMP RDX,qword ptr [RSP + 0x30]
0001c710(4): MOV RAX,qword ptr [R13]
0001c714(6): JZ 0x0001cc0e
0001c71a(4): LEA RCX,[RDX + 0x1]
0001c71e(4): MOV qword ptr [R13 + 0x28],RCX
0001c722(7): MOV ECX,dword ptr [0xa8 + RSP]
0001c729(3): MOV dword ptr [RAX + RDX*0x4],ECX
0001c72c(5): JMP 0x0001c6a0
0001c731(8): MOVZX EDX,byte ptr [0xa8 + RSP]
0001c739(5): MOV ESI,0x1
0001c73e(3): MOV RAX,RDX
0001c741(3): AND EDX,0x3f
0001c744(4): SHR RAX,0x3
0001c748(2): MOV ECX,EDX
0001c74a(3): AND EAX,0x18
0001c74d(3): SHL RSI,CL
0001c750(4): OR qword ptr [R12 + RAX*0x1],RSI
0001c754(5): JMP 0x0001c6a0
0001c759(4): SUB RSP,0x8
0001c75d(4): MOV RDI,qword ptr [R14 + 0x78]
0001c761(4): LEA RDX,[R13 + 0x18]
0001c765(4): PUSH qword ptr [RSP + 0x28]
0001c769(8): MOV R9,qword ptr [0xb8 + RSP]
0001c771(4): LEA RCX,[R13 + 0x48]
0001c775(5): MOV R8,qword ptr [RSP + 0x68]
0001c77a(3): MOV RSI,R12
0001c77d(5): CALL 0x00015ea0
0001c782(5): MOV RDX,qword ptr [RSP + 0x50]
0001c787(2): TEST EAX,EAX
0001c789(2): MOV dword ptr [RDX],EAX
0001c78b(2): POP R9
0001c78d(2): POP R10
0001c78f(6): JZ 0x0001c6a0
0001c795(5): JMP 0x0001c6d8
0001c79a(5): OR byte ptr [R13 + 0x20],0x1
0001c79f(9): TEST qword ptr [RSP + 0x20],0x100
0001c7a8(2): JZ 0x0001c7b2
0001c7aa(8): OR qword ptr [R12],0x400
0001c7b2(4): ADD qword ptr [R14 + 0x48],RBX
0001c7b6(5): MOV R11,qword ptr [RSP + 0x18]
0001c7bb(3): MOV RSI,R14
0001c7be(5): MOV RDX,qword ptr [RSP + 0x20]
0001c7c3(3): MOV RDI,R11
0001c7c6(5): CALL 0x00010b90
0001c7cb(2): MOV EBX,EAX
0001c7cd(5): MOVZX EAX,byte ptr [R11 + 0x8]
0001c7d2(2): CMP AL,0x2
0001c7d4(6): JZ 0x0001ca69
0001c7da(5): MOV byte ptr [RSP + 0x57],0x1
0001c7df(5): JMP 0x0001c2d6
0001c7e4(5): MOV RAX,qword ptr [RSP + 0x18]
0001c7e9(4): MOV byte ptr [RAX + 0x8],0x1
0001c7ed(5): JMP 0x0001c2de
0001c7f2(7): MOV dword ptr [R15],0x6
0001c7f9(3): MOV R8,R15
0001c7fc(2): XOR ECX,ECX
0001c7fe(2): XOR EDX,EDX
0001c800(3): MOV RSI,R12
0001c803(3): MOV RDI,RBX
0001c806(5): CALL 0x00013360
0001c80b(7): MOV dword ptr [R15],0x9
0001c812(3): MOV RBP,RAX
0001c815(5): JMP 0x0001c1e6
0001c81a(5): MOV R8,qword ptr [RSP + 0x18]
0001c81f(2): XOR ECX,ECX
0001c821(2): XOR EDX,EDX
0001c823(3): MOV RSI,R12
0001c826(3): MOV RDI,RBX
0001c829(5): CALL 0x00013360
0001c82e(3): TEST RAX,RAX
0001c831(5): MOV qword ptr [RSP + 0x28],RAX
0001c836(6): JNZ 0x0001c243
0001c83c(5): JMP 0x0001c5c8
0001c841(5): MOV RAX,qword ptr [RSP + 0x40]
0001c846(6): MOV dword ptr [RAX],0x7
0001c84c(5): JMP 0x0001c6d8
0001c851(5): MOV qword ptr [RSP + 0x28],R15
0001c856(5): JMP 0x0001bbfc
0001c85b(5): MOV RDX,qword ptr [RSP + 0x40]
0001c860(2): MOV dword ptr [RDX],EAX
0001c862(5): JMP 0x0001c6d8
0001c867(3): MOVSXD RAX,EBX
0001c86a(5): MOV R11,qword ptr [RSP + 0x20]
0001c86f(4): ADD qword ptr [R14 + 0x48],RAX
0001c873(5): MOV R10,qword ptr [RSP + 0x60]
0001c878(3): MOV RDX,R11
0001c87b(3): MOV RDI,R10
0001c87e(5): CALL 0x00010b90
0001c883(8): MOVZX EDX,byte ptr [0xc8 + RSP]
0001c88b(3): CMP DL,0x2
0001c88e(2): JZ 0x0001c841
0001c890(3): CMP DL,0x15
0001c893(6): JZ 0x0001caa7
0001c899(5): MOV RDX,qword ptr [RSP + 0x68]
0001c89e(8): LEA RDI,[0xb0 + RSP]
0001c8a6(6): MOV R9D,0x1
0001c8ac(3): MOV R8,R11
0001c8af(2): MOV ECX,EAX
0001c8b1(11): MOV dword ptr [0xb0 + RSP],0x3
0001c8bc(8): MOV qword ptr [0xb8 + RSP],RDX
0001c8c4(3): MOV RDX,R10
0001c8c7(5): CALL 0x0001b040
0001c8cc(2): TEST EAX,EAX
0001c8ce(2): JNZ 0x0001c85b
0001c8d0(5): MOV RDX,qword ptr [RSP + 0x20]
0001c8d5(3): MOV RSI,R14
0001c8d8(3): MOV RDI,R15
0001c8db(5): CALL 0x00010b90
0001c8e0(3): MOVSXD RBX,EAX
0001c8e3(5): MOV RAX,qword ptr [RSP + 0x10]
0001c8e8(7): MOV ESI,dword ptr [0xa0 + RSP]
0001c8ef(6): MOV R9D,0x0
0001c8f5(7): CMP dword ptr [0xb4 + RAX],0x1
0001c8fc(3): LEA EAX,[RSI + -0x2]
0001c8ff(4): CMOVG R9,R13
0001c903(3): AND EAX,0xfffffffd
0001c906(6): JZ 0x0001cd79
0001c90c(8): MOV R10D,dword ptr [0xb0 + RSP]
0001c914(4): LEA EAX,[R10 + -0x2]
0001c918(3): AND EAX,0xfffffffd
0001c91b(6): JZ 0x0001cd79
0001c921(3): CMP ESI,0x3
0001c924(4): SETZ R11B
0001c928(6): JZ 0x0001cdbd
0001c92e(4): CMP R10D,0x3
0001c932(6): JZ 0x0001cd89
0001c938(2): TEST ESI,ESI
0001c93a(6): JNZ 0x0001cca9
0001c940(8): MOVZX EDX,byte ptr [0xa8 + RSP]
0001c948(3): TEST R10D,R10D
0001c94b(6): JNZ 0x0001cc8d
0001c951(9): MOVZX R8D,byte ptr [0xb8 + RSP]
0001c95a(2): TEST ESI,ESI
0001c95c(6): JZ 0x0001cc46
0001c962(3): TEST R11B,R11B
0001c965(6): JNZ 0x0001cc46
0001c96b(3): TEST R9,R9
0001c96e(7): MOV EDX,dword ptr [0xa8 + RSP]
0001c975(2): JZ 0x0001c994
0001c977(3): MOV EDI,R8D
0001c97a(4): MOV dword ptr [RSP + 0x78],EDX
0001c97e(5): MOV qword ptr [RSP + 0x70],R9
0001c983(5): CALL 0x00002880
0001c988(5): MOV R9,qword ptr [RSP + 0x70]
0001c98d(4): MOV EDX,dword ptr [RSP + 0x78]
0001c991(3): MOV R8D,EAX
0001c994(3): CMP EDX,-0x1
0001c997(6): JZ 0x0001cdad
0001c99d(4): CMP R8D,-0x1
0001c9a1(6): JZ 0x0001cdad
0001c9a7(9): TEST qword ptr [RSP + 0x20],0x10000
0001c9b0(2): JZ 0x0001c9bb
0001c9b2(3): CMP R8D,EDX
0001c9b5(6): JC 0x0001cd79
0001c9bb(3): TEST R9,R9
0001c9be(2): JZ 0x0001c9e6
0001c9c0(4): MOV RAX,qword ptr [R9 + 0x40]
0001c9c4(5): CMP RAX,qword ptr [RSP + 0x48]
0001c9c9(4): MOV RCX,qword ptr [R9 + 0x8]
0001c9cd(6): JZ 0x0001cde3
0001c9d3(3): MOV dword ptr [RCX + RAX*0x4],EDX
0001c9d6(4): MOV RCX,qword ptr [R9 + 0x10]
0001c9da(4): LEA RSI,[RAX + 0x1]
0001c9de(4): MOV qword ptr [R9 + 0x40],RSI
0001c9e2(4): MOV dword ptr [RCX + RAX*0x4],R8D
0001c9e6(2): XOR EAX,EAX
0001c9e8(5): MOV EDI,0x1
0001c9ed(2): CMP EDX,EAX
0001c9ef(2): MOV ECX,EAX
0001c9f1(2): JA 0x0001ca09
0001c9f3(3): CMP R8D,EAX
0001c9f6(2): JC 0x0001ca09
0001c9f8(3): MOV RSI,RAX
0001c9fb(3): MOV R11,RDI
0001c9fe(4): SAR RSI,0x6
0001ca02(3): SHL R11,CL
0001ca05(4): OR qword ptr [R12 + RSI*0x8],R11
0001ca09(4): ADD RAX,0x1
0001ca0d(6): CMP RAX,0x100
0001ca13(2): JNZ 0x0001c9ed
0001ca15(5): MOV RAX,qword ptr [RSP + 0x40]
0001ca1a(6): MOV dword ptr [RAX],0x0
0001ca20(5): JMP 0x0001c6a0
0001ca25(5): MOV RBX,qword ptr [RSP + 0x18]
0001ca2a(3): MOV RDX,RAX
0001ca2d(3): MOV RSI,R14
0001ca30(4): MOV qword ptr [RSP],R8
0001ca34(3): MOV R15,RAX
0001ca37(3): MOV RDI,RBX
0001ca3a(5): CALL 0x0001b2a0
0001ca3f(2): CDQE
0001ca41(4): ADD qword ptr [R14 + 0x48],RAX
0001ca45(5): MOV R9,qword ptr [RSP + 0x40]
0001ca4a(4): MOV R8,qword ptr [RSP]
0001ca4e(3): MOV RCX,R15
0001ca51(3): MOV RDX,RBX
0001ca54(3): MOV RSI,RBP
0001ca57(3): MOV RDI,R14
0001ca5a(5): CALL 0x0001ba60
0001ca5f(5): MOV qword ptr [RSP + 0x28],RAX
0001ca64(5): JMP 0x0001bb70
0001ca69(5): MOV RAX,qword ptr [RSP + 0x40]
0001ca6e(6): MOV dword ptr [RAX],0x2
0001ca74(5): JMP 0x0001c6d8
0001ca79(3): MOV RDI,R12
0001ca7c(5): CALL 0x00002a10
0001ca81(3): MOV RDI,R13
0001ca84(5): CALL 0x00002a10
0001ca89(5): JMP 0x0001c5c8
0001ca8e(5): MOV RAX,qword ptr [RSP + 0x40]
0001ca93(9): MOV qword ptr [RSP + 0x28],0x0
0001ca9c(6): MOV dword ptr [RAX],0x6
0001caa2(5): JMP 0x0001bb70
0001caa7(2): MOV EAX,EBX
0001caa9(2): NEG EAX
0001caab(2): CDQE
0001caad(4): ADD qword ptr [R14 + 0x48],RAX
0001cab1(5): MOV byte ptr [R15 + 0x8],0x1
0001cab6(7): MOV EAX,dword ptr [0xa0 + RSP]
0001cabd(5): JMP 0x0001c3b5
0001cac2(4): ADD qword ptr [R14 + 0x48],RBX
0001cac6(5): CMP byte ptr [RSP + 0x57],0x0
0001cacb(2): JZ 0x0001cae1
0001cacd(5): LEA RDX,[R12 + 0x20]
0001cad2(3): MOV RAX,R12
0001cad5(3): NOT qword ptr [RAX]
0001cad8(4): ADD RAX,0x8
0001cadc(3): CMP RDX,RAX
0001cadf(2): JNZ 0x0001cad5
0001cae1(5): MOV RAX,qword ptr [RSP + 0x10]
0001cae6(6): MOV EDX,dword ptr [0xb4 + RAX]
0001caec(3): CMP EDX,0x1
0001caef(2): JLE 0x0001cb09
0001caf1(4): MOV RCX,qword ptr [RAX + 0x78]
0001caf5(2): XOR EAX,EAX
0001caf7(4): MOV RSI,qword ptr [RCX + RAX*0x1]
0001cafb(4): AND qword ptr [R12 + RAX*0x1],RSI
0001caff(4): ADD RAX,0x8
0001cb03(4): CMP RAX,0x20
0001cb07(2): JNZ 0x0001caf7
0001cb09(5): CMP qword ptr [R13 + 0x28],0x0
0001cb0e(6): JNZ 0x0001cb98
0001cb14(5): CMP qword ptr [R13 + 0x30],0x0
0001cb19(2): JNZ 0x0001cb98
0001cb1b(5): CMP qword ptr [R13 + 0x38],0x0
0001cb20(2): JNZ 0x0001cb98
0001cb22(5): CMP qword ptr [R13 + 0x40],0x0
0001cb27(2): JNZ 0x0001cb98
0001cb29(3): SUB EDX,0x1
0001cb2c(2): JLE 0x0001cb3c
0001cb2e(5): CMP qword ptr [R13 + 0x48],0x0
0001cb33(2): JNZ 0x0001cb98
0001cb35(5): TEST byte ptr [R13 + 0x20],0x1
0001cb3a(2): JNZ 0x0001cb98
0001cb3c(3): MOV RDI,R13
0001cb3f(5): CALL 0x00011dc0
0001cb44(5): MOV RAX,qword ptr [RSP + 0x10]
0001cb49(8): LEA R8,[0xb0 + RSP]
0001cb51(2): XOR ECX,ECX
0001cb53(2): XOR EDX,EDX
0001cb55(8): MOV byte ptr [0xb8 + RSP],0x3
0001cb5d(8): MOV qword ptr [0xb0 + RSP],R12
0001cb65(7): LEA RSI,[0x80 + RAX]
0001cb6c(4): LEA RDI,[RAX + 0x70]
0001cb70(5): CALL 0x00013360
0001cb75(3): TEST RAX,RAX
0001cb78(5): MOV qword ptr [RSP + 0x28],RAX
0001cb7d(6): JNZ 0x0001bbfc
0001cb83(5): MOV RAX,qword ptr [RSP + 0x40]
0001cb88(6): MOV dword ptr [RAX],0xc
0001cb8e(5): JMP 0x0001c6d8
0001cb98(5): MOV RAX,qword ptr [RSP + 0x10]
0001cb9d(8): LEA R15,[0xb0 + RSP]
0001cba5(2): XOR EDX,EDX
0001cba7(2): XOR ECX,ECX
0001cba9(3): MOV R8,R15
0001cbac(7): OR byte ptr [0xb0 + RAX],0x2
0001cbb3(4): LEA RBX,[RAX + 0x70]
0001cbb7(7): LEA RBP,[0x80 + RAX]
0001cbbe(8): MOV byte ptr [0xb8 + RSP],0x6
0001cbc6(8): MOV qword ptr [0xb0 + RSP],R13
0001cbce(3): MOV RDI,RBX
0001cbd1(3): MOV RSI,RBP
0001cbd4(5): CALL 0x00013360
0001cbd9(3): MOV RDI,RAX
0001cbdc(5): MOV qword ptr [RSP + 0x28],RAX
0001cbe1(5): LEA RDX,[R12 + 0x20]
0001cbe6(3): TEST RDI,RDI
0001cbe9(3): MOV RAX,R12
0001cbec(2): JZ 0x0001cb83
0001cbee(4): CMP qword ptr [RAX],0x0
0001cbf2(6): JNZ 0x0001ce9d
0001cbf8(4): ADD RAX,0x8
0001cbfc(3): CMP RDX,RAX
0001cbff(2): JNZ 0x0001cbee
0001cc01(3): MOV RDI,R12
0001cc04(5): CALL 0x00002a10
0001cc09(5): JMP 0x0001bbfc
0001cc0e(5): MOV RDX,qword ptr [RSP + 0x30]
0001cc13(5): LEA RDI,[RDX + RDX*0x1 + 0x1]
0001cc18(8): LEA RSI,[RDI*0x4]
0001cc20(5): MOV qword ptr [RSP + 0x30],RDI
0001cc25(3): MOV RDI,RAX
0001cc28(5): CALL 0x00002830
0001cc2d(3): TEST RAX,RAX
0001cc30(6): JZ 0x0001cb83
0001cc36(4): MOV qword ptr [R13],RAX
0001cc3a(4): MOV RDX,qword ptr [R13 + 0x28]
0001cc3e(5): JMP 0x0001c71a
0001cc43(3): XOR R8D,R8D
0001cc46(3): TEST R9,R9
0001cc49(2): JZ 0x0001ccc4
0001cc4b(2): MOV EDI,EDX
0001cc4d(5): MOV dword ptr [RSP + 0x78],R8D
0001cc52(5): MOV qword ptr [RSP + 0x70],R9
0001cc57(5): CALL 0x00002880
0001cc5c(2): MOV EDX,EAX
0001cc5e(7): MOV EAX,dword ptr [0xb0 + RSP]
0001cc65(5): MOV R9,qword ptr [RSP + 0x70]
0001cc6a(5): MOV R8D,dword ptr [RSP + 0x78]
0001cc6f(3): CMP EAX,0x3
0001cc72(6): JZ 0x0001c977
0001cc78(2): TEST EAX,EAX
0001cc7a(6): JZ 0x0001c977
0001cc80(8): MOV R8D,dword ptr [0xb8 + RSP]
0001cc88(5): JMP 0x0001c994
0001cc8d(4): CMP R10D,0x3
0001cc91(6): JZ 0x0001cf22
0001cc97(2): TEST ESI,ESI
0001cc99(2): JZ 0x0001cc43
0001cc9b(3): TEST R11B,R11B
0001cc9e(2): JNZ 0x0001cc43
0001cca0(7): MOV EDX,dword ptr [0xa8 + RSP]
0001cca7(2): JMP 0x0001cc80
0001cca9(2): XOR EDX,EDX
0001ccab(3): CMP ESI,0x3
0001ccae(6): JNZ 0x0001c948
0001ccb4(8): MOV RAX,qword ptr [0xa8 + RSP]
0001ccbc(3): MOVZX EDX,byte ptr [RAX]
0001ccbf(5): JMP 0x0001c948
0001ccc4(3): TEST R10D,R10D
0001ccc7(6): JZ 0x0001c9a7
0001cccd(4): CMP R10D,0x3
0001ccd1(2): JNZ 0x0001cc80
0001ccd3(5): JMP 0x0001c9a7
0001ccd8(5): MOV EBX,0x80
0001ccdd(6): MOV R12D,0x2
0001cce3(5): CALL 0x000029f0
0001cce8(3): MOVSXD RDX,EBX
0001cceb(3): MOVSXD R9,R12D
0001ccee(6): MOV R8D,0x1
0001ccf4(3): ADD RDX,RDX
0001ccf7(3): ADD RDX,qword ptr [RAX]
0001ccfa(5): MOV RAX,qword ptr [RSP + 0x10]
0001ccff(4): LEA RDI,[RAX + R9*0x8]
0001cd03(2): XOR EAX,EAX
0001cd05(2): JMP 0x0001cd22
0001cd10(3): LEA ESI,[RBX + RAX*0x1]
0001cd13(3): CMP ESI,0x5f
0001cd16(2): JZ 0x0001cd2a
0001cd18(4): ADD RAX,0x1
0001cd1c(4): CMP RAX,0x40
0001cd20(2): JZ 0x0001cd39
0001cd22(4): TEST byte ptr [RDX + RAX*0x2],0x8
0001cd26(2): MOV ECX,EAX
0001cd28(2): JZ 0x0001cd10
0001cd2a(3): MOV RSI,R8
0001cd2d(3): SHL RSI,CL
0001cd30(7): OR qword ptr [0xb8 + RDI],RSI
0001cd37(2): JMP 0x0001cd18
0001cd39(4): ADD R9,0x1
0001cd3d(3): ADD EBX,0x40
0001cd40(4): SUB RDX,-0x80
0001cd44(4): ADD RDI,0x8
0001cd48(4): CMP R9D,0x3
0001cd4c(2): JLE 0x0001cd03
0001cd4e(5): JMP 0x0001c191
0001cd53(2): XOR EBX,EBX
0001cd55(3): XOR R12D,R12D
0001cd58(2): JMP 0x0001cce3
0001cd5a(7): LEA RCX,[0x22d90]
0001cd61(7): LEA RSI,[0x227c0]
0001cd68(7): LEA RDI,[0x21506]
0001cd6f(5): MOV EDX,0xced
0001cd74(5): CALL 0x00002600
0001cd79(5): MOV RAX,qword ptr [RSP + 0x40]
0001cd7e(6): MOV dword ptr [RAX],0xb
0001cd84(5): JMP 0x0001c6d8
0001cd89(8): MOV RDI,qword ptr [0xb8 + RSP]
0001cd91(2): XOR EAX,EAX
0001cd93(4): OR RCX,-0x1
0001cd97(2): SCASB.REPNE RDI
0001cd99(3): MOV RAX,RCX
0001cd9c(3): NOT RAX
0001cd9f(4): SUB RAX,0x1
0001cda3(4): CMP RAX,0x1
0001cda7(6): JBE 0x0001c938
0001cdad(5): MOV RAX,qword ptr [RSP + 0x40]
0001cdb2(6): MOV dword ptr [RAX],0x3
0001cdb8(5): JMP 0x0001c6d8
0001cdbd(8): MOV RDI,qword ptr [0xa8 + RSP]
0001cdc5(2): XOR EAX,EAX
0001cdc7(4): OR RCX,-0x1
0001cdcb(2): SCASB.REPNE RDI
0001cdcd(3): MOV RAX,RCX
0001cdd0(3): NOT RAX
0001cdd3(4): SUB RAX,0x1
0001cdd7(4): CMP RAX,0x1
0001cddb(6): JBE 0x0001c92e
0001cde1(2): JMP 0x0001cdad
0001cde3(5): MOV RAX,qword ptr [RSP + 0x48]
0001cde8(3): MOV RDI,RCX
0001cdeb(8): MOV dword ptr [0x8c + RSP],R8D
0001cdf3(7): MOV dword ptr [0x88 + RSP],EDX
0001cdfa(5): MOV qword ptr [RSP + 0x70],R9
0001cdff(3): ADD RAX,RAX
0001ce02(4): ADD RAX,0x1
0001ce06(8): LEA R10,[RAX*0x4]
0001ce0e(5): MOV qword ptr [RSP + 0x48],RAX
0001ce13(3): MOV RSI,R10
0001ce16(8): MOV qword ptr [0x80 + RSP],R10
0001ce1e(5): CALL 0x00002830
0001ce23(5): MOV R9,qword ptr [RSP + 0x70]
0001ce28(8): MOV R10,qword ptr [0x80 + RSP]
0001ce30(5): MOV qword ptr [RSP + 0x78],RAX
0001ce35(4): MOV RDI,qword ptr [R9 + 0x10]
0001ce39(3): MOV RSI,R10
0001ce3c(5): CALL 0x00002830
0001ce41(5): MOV RCX,qword ptr [RSP + 0x78]
0001ce46(3): TEST RCX,RCX
0001ce49(2): JZ 0x0001ce75
0001ce4b(3): TEST RAX,RAX
0001ce4e(5): MOV R9,qword ptr [RSP + 0x70]
0001ce53(7): MOV EDX,dword ptr [0x88 + RSP]
0001ce5a(8): MOV R8D,dword ptr [0x8c + RSP]
0001ce62(2): JZ 0x0001ce75
0001ce64(4): MOV qword ptr [R9 + 0x10],RAX
0001ce68(4): MOV qword ptr [R9 + 0x8],RCX
0001ce6c(4): MOV RAX,qword ptr [R9 + 0x40]
0001ce70(5): JMP 0x0001c9d3
0001ce75(3): MOV RDI,RCX
0001ce78(4): MOV qword ptr [RSP],RAX
0001ce7c(5): CALL 0x00002a10
0001ce81(4): MOV RAX,qword ptr [RSP]
0001ce85(3): MOV RDI,RAX
0001ce88(5): CALL 0x00002a10
0001ce8d(5): MOV RAX,qword ptr [RSP + 0x40]
0001ce92(6): MOV dword ptr [RAX],0xc
0001ce98(5): JMP 0x0001c6d8
0001ce9d(2): XOR ECX,ECX
0001ce9f(2): XOR EDX,EDX
0001cea1(3): MOV R8,R15
0001cea4(3): MOV RSI,RBP
0001cea7(3): MOV RDI,RBX
0001ceaa(8): MOV byte ptr [0xb8 + RSP],0x3
0001ceb2(8): MOV qword ptr [0xb0 + RSP],R12
0001ceba(5): CALL 0x00013360
0001cebf(3): TEST RAX,RAX
0001cec2(6): JZ 0x0001cb83
0001cec8(5): MOV RCX,qword ptr [RSP + 0x28]
0001cecd(8): LEA R8,[0xc0 + RSP]
0001ced5(3): MOV RDX,RAX
0001ced8(3): MOV RSI,RBP
0001cedb(3): MOV RDI,RBX
0001cede(8): MOV byte ptr [0xc8 + RSP],0xa
0001cee6(5): CALL 0x00013360
0001ceeb(3): TEST RAX,RAX
0001ceee(5): MOV qword ptr [RSP + 0x28],RAX
0001cef3(6): JNZ 0x0001bbfc
0001cef9(5): JMP 0x0001cb83
0001cefe(5): CALL 0x00002560
0001cf03(5): MOV RAX,qword ptr [RSP + 0x18]
0001cf08(4): CMP byte ptr [RAX + 0x8],0x2
0001cf0c(6): JNZ 0x0001c100
0001cf12(5): MOV RAX,qword ptr [RSP + 0x40]
0001cf17(6): MOV dword ptr [RAX],0x9
0001cf1d(5): JMP 0x0001c10b
0001cf22(8): MOV RAX,qword ptr [0xb8 + RSP]
0001cf2a(4): MOVZX R8D,byte ptr [RAX]
0001cf2e(5): JMP 0x0001c95a
0001cf40(2): PUSH R15
0001cf42(2): PUSH R14
0001cf44(3): MOV R15,RCX
0001cf47(2): PUSH R13
0001cf49(2): PUSH R12
0001cf4b(3): MOV R13,RSI
0001cf4e(1): PUSH RBP
0001cf4f(1): PUSH RBX
0001cf50(3): MOV RBX,R9
0001cf53(3): MOV RBP,RDX
0001cf56(3): MOV R12,R8
0001cf59(4): SUB RSP,0x48
0001cf5d(9): MOV RAX,qword ptr FS:[0x28]
0001cf66(5): MOV qword ptr [RSP + 0x38],RAX
0001cf6b(2): XOR EAX,EAX
0001cf6d(3): MOV RAX,qword ptr [RSI]
0001cf70(4): MOV qword ptr [RSP],RDI
0001cf74(5): MOV qword ptr [RSP + 0x10],RAX
0001cf79(5): CALL 0x0001ba60
0001cf7e(2): MOV EDX,dword ptr [RBX]
0001cf80(3): MOV R14,RAX
0001cf83(2): TEST EDX,EDX
0001cf85(2): JZ 0x0001cf90
0001cf87(3): TEST RAX,RAX
0001cf8a(6): JZ 0x0001d08a
0001cf90(5): LEA RAX,[RSP + 0x20]
0001cf95(5): MOV qword ptr [RSP + 0x18],RAX
0001cf9a(6): NOP word ptr [RAX + RAX*0x1]
0001cfa0(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001cfa4(2): MOV EDX,EAX
0001cfa6(3): AND EDX,0xfffffff7
0001cfa9(3): CMP DL,0x2
0001cfac(6): JZ 0x0001d040
0001cfb2(2): CMP AL,0x9
0001cfb4(2): JNZ 0x0001cfbf
0001cfb6(3): TEST R12,R12
0001cfb9(6): JNZ 0x0001d040
0001cfbf(4): MOV RDI,qword ptr [RSP]
0001cfc3(3): MOV R9,RBX
0001cfc6(3): MOV R8,R12
0001cfc9(3): MOV RCX,R15
0001cfcc(3): MOV RDX,RBP
0001cfcf(3): MOV RSI,R13
0001cfd2(5): CALL 0x0001ba60
0001cfd7(3): MOV R9,RAX
0001cfda(2): MOV EAX,dword ptr [RBX]
0001cfdc(2): TEST EAX,EAX
0001cfde(2): JZ 0x0001cfe9
0001cfe0(3): TEST R9,R9
0001cfe3(6): JZ 0x0001d074
0001cfe9(3): TEST R14,R14
0001cfec(2): JZ 0x0001d068
0001cfee(3): TEST R9,R9
0001cff1(2): JZ 0x0001d068
0001cff3(5): MOV RAX,qword ptr [RSP + 0x10]
0001cff8(5): MOV R8,qword ptr [RSP + 0x18]
0001cffd(3): MOV RCX,R9
0001d000(3): MOV RDX,R14
0001d003(5): MOV qword ptr [RSP + 0x8],R9
0001d008(5): MOV byte ptr [RSP + 0x28],0x10
0001d00d(7): LEA RSI,[0x80 + RAX]
0001d014(4): LEA RDI,[RAX + 0x70]
0001d018(5): CALL 0x00013360
0001d01d(3): TEST RAX,RAX
0001d020(5): MOV R9,qword ptr [RSP + 0x8]
0001d025(2): JZ 0x0001d090
0001d027(3): MOV R14,RAX
0001d02a(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001d02e(2): MOV EDX,EAX
0001d030(3): AND EDX,0xfffffff7
0001d033(3): CMP DL,0x2
0001d036(6): JNZ 0x0001cfb2
0001d03c(4): NOP dword ptr [RAX]
0001d040(5): MOV RCX,qword ptr [RSP + 0x38]
0001d045(9): XOR RCX,qword ptr FS:[0x28]
0001d04e(3): MOV RAX,R14
0001d051(2): JNZ 0x0001d0bd
0001d053(4): ADD RSP,0x48
0001d057(1): POP RBX
0001d058(1): POP RBP
0001d059(2): POP R12
0001d05b(2): POP R13
0001d05d(2): POP R14
0001d05f(2): POP R15
0001d061(1): RET
0001d068(3): TEST R14,R14
0001d06b(4): CMOVZ R14,R9
0001d06f(5): JMP 0x0001cfa0
0001d074(3): TEST R14,R14
0001d077(2): JZ 0x0001d08a
0001d079(7): LEA RSI,[0x11e20]
0001d080(2): XOR EDX,EDX
0001d082(3): MOV RDI,R14
0001d085(5): CALL 0x00010f80
0001d08a(3): XOR R14D,R14D
0001d08d(2): JMP 0x0001d040
0001d090(7): LEA RSI,[0x11e20]
0001d097(3): MOV RDI,R9
0001d09a(2): XOR EDX,EDX
0001d09c(5): CALL 0x00010f80
0001d0a1(7): LEA RSI,[0x11e20]
0001d0a8(3): MOV RDI,R14
0001d0ab(2): XOR EDX,EDX
0001d0ad(3): XOR R14D,R14D
0001d0b0(5): CALL 0x00010f80
0001d0b5(6): MOV dword ptr [RBX],0xc
0001d0bb(2): JMP 0x0001d040
0001d0bd(5): CALL 0x00002560
0001d0c2(4): NOP dword ptr [RAX]
0001d0c6(10): NOP word ptr CS:[RAX + RAX*0x1]
0001d0d0(2): PUSH R15
0001d0d2(2): PUSH R14
0001d0d4(3): MOV R14,RCX
0001d0d7(2): PUSH R13
0001d0d9(2): PUSH R12
0001d0db(3): MOV R13,R9
0001d0de(1): PUSH RBP
0001d0df(1): PUSH RBX
0001d0e0(3): MOV RBP,RDX
0001d0e3(3): MOV R12,RDI
0001d0e6(4): SUB RSP,0x58
0001d0ea(3): MOV RBX,qword ptr [RSI]
0001d0ed(9): MOV RAX,qword ptr FS:[0x28]
0001d0f6(5): MOV qword ptr [RSP + 0x48],RAX
0001d0fb(2): XOR EAX,EAX
0001d0fd(5): MOV qword ptr [RSP + 0x28],RSI
0001d102(5): MOV qword ptr [RSP + 0x10],R8
0001d107(7): MOV RAX,qword ptr [0xa8 + RBX]
0001d10e(5): MOV qword ptr [RSP + 0x20],RAX
0001d113(5): CALL 0x0001cf40
0001d118(4): MOV EDX,dword ptr [R13]
0001d11c(3): MOV R15,RAX
0001d11f(2): TEST EDX,EDX
0001d121(2): JZ 0x0001d12c
0001d123(3): TEST RAX,RAX
0001d126(6): JZ 0x0001d212
0001d12c(5): LEA RAX,[RSP + 0x30]
0001d131(5): MOV qword ptr [RSP + 0x8],RAX
0001d136(5): JMP 0x0001d1c4
0001d140(2): CMP AL,0x9
0001d142(2): JNZ 0x0001d150
0001d144(6): CMP qword ptr [RSP + 0x10],0x0
0001d14a(6): JNZ 0x0001d1f8
0001d150(7): MOV RAX,qword ptr [0xa8 + RBX]
0001d157(5): MOV R8,qword ptr [RSP + 0x10]
0001d15c(3): MOV RCX,R14
0001d15f(5): MOV RSI,qword ptr [RSP + 0x28]
0001d164(3): MOV R9,R13
0001d167(3): MOV RDX,RBP
0001d16a(3): MOV RDI,R12
0001d16d(5): MOV qword ptr [RSP + 0x18],RAX
0001d172(5): MOV RAX,qword ptr [RSP + 0x20]
0001d177(7): MOV qword ptr [0xa8 + RBX],RAX
0001d17e(5): CALL 0x0001cf40
0001d183(3): MOV RCX,RAX
0001d186(4): MOV EAX,dword ptr [R13]
0001d18a(2): TEST EAX,EAX
0001d18c(2): JZ 0x0001d193
0001d18e(3): TEST RCX,RCX
0001d191(2): JZ 0x0001d1fc
0001d193(5): MOV RAX,qword ptr [RSP + 0x18]
0001d198(7): OR qword ptr [0xa8 + RBX],RAX
0001d19f(5): MOV R8,qword ptr [RSP + 0x8]
0001d1a4(7): LEA RSI,[0x80 + RBX]
0001d1ab(4): LEA RDI,[RBX + 0x70]
0001d1af(3): MOV RDX,R15
0001d1b2(5): MOV byte ptr [RSP + 0x38],0xa
0001d1b7(5): CALL 0x00013360
0001d1bc(3): TEST RAX,RAX
0001d1bf(3): MOV R15,RAX
0001d1c2(2): JZ 0x0001d240
0001d1c4(4): CMP byte ptr [RBP + 0x8],0xa
0001d1c8(2): JNZ 0x0001d218
0001d1ca(3): MOV RDX,R14
0001d1cd(3): MOV RSI,R12
0001d1d0(3): MOV RDI,RBP
0001d1d3(7): OR RDX,0x800000
0001d1da(5): CALL 0x0001b2a0
0001d1df(2): CDQE
0001d1e1(5): ADD qword ptr [R12 + 0x48],RAX
0001d1e6(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001d1ea(2): MOV EDX,EAX
0001d1ec(3): AND EDX,0xfffffff7
0001d1ef(3): CMP DL,0x2
0001d1f2(6): JNZ 0x0001d140
0001d1f8(2): XOR ECX,ECX
0001d1fa(2): JMP 0x0001d19f
0001d1fc(3): TEST R15,R15
0001d1ff(2): JZ 0x0001d212
0001d201(7): LEA RSI,[0x11e20]
0001d208(2): XOR EDX,EDX
0001d20a(3): MOV RDI,R15
0001d20d(5): CALL 0x00010f80
0001d212(3): XOR R15D,R15D
0001d215(3): NOP dword ptr [RAX]
0001d218(5): MOV RCX,qword ptr [RSP + 0x48]
0001d21d(9): XOR RCX,qword ptr FS:[0x28]
0001d226(3): MOV RAX,R15
0001d229(2): JNZ 0x0001d24a
0001d22b(4): ADD RSP,0x58
0001d22f(1): POP RBX
0001d230(1): POP RBP
0001d231(2): POP R12
0001d233(2): POP R13
0001d235(2): POP R14
0001d237(2): POP R15
0001d239(1): RET
0001d240(8): MOV dword ptr [R13],0xc
0001d248(2): JMP 0x0001d218
0001d24a(5): CALL 0x00002560
0001d24f(1): NOP
0001d250(2): PUSH R15
0001d252(2): PUSH R14
0001d254(2): PUSH R13
0001d256(2): PUSH R12
0001d258(1): PUSH RBP
0001d259(1): PUSH RBX
0001d25a(7): SUB RSP,0x128
0001d261(4): MOV qword ptr [RDI + 0x18],RCX
0001d265(8): MOV qword ptr [RDI + 0x10],0x0
0001d26d(9): MOV RAX,qword ptr FS:[0x28]
0001d276(8): MOV qword ptr [0x118 + RSP],RAX
0001d27e(2): XOR EAX,EAX
0001d280(4): MOVZX EAX,byte ptr [RDI + 0x38]
0001d284(5): MOV qword ptr [RSP + 0x8],RDI
0001d289(5): MOV qword ptr [RSP + 0x10],RSI
0001d28e(4): MOV qword ptr [RSP],RDX
0001d292(5): MOV qword ptr [RSP + 0x18],RCX
0001d297(8): MOV dword ptr [RSP + 0x4c],0x0
0001d29f(8): MOV qword ptr [RDI + 0x30],0x0
0001d2a7(3): MOV RBX,qword ptr [RDI]
0001d2aa(4): MOV byte ptr [RSP + 0x20],AL
0001d2ae(3): AND EAX,0xffffff90
0001d2b1(8): CMP qword ptr [RDI + 0x8],0xe7
0001d2b9(3): MOV byte ptr [RDI + 0x38],AL
0001d2bc(6): JBE 0x0001e0b6
0001d2c2(4): LEA RDI,[RBX + 0x8]
0001d2c6(5): MOV RAX,qword ptr [RSP + 0x8]
0001d2cb(3): MOV RCX,RBX
0001d2ce(4): AND RDI,-0x8
0001d2d2(3): SUB RCX,RDI
0001d2d5(8): MOV qword ptr [RAX + 0x10],0xe8
0001d2dd(2): XOR EAX,EAX
0001d2df(6): ADD ECX,0xe8
0001d2e5(7): MOV qword ptr [RBX],0x0
0001d2ec(11): MOV qword ptr [0xe0 + RBX],0x0
0001d2f7(3): SHR ECX,0x3
0001d2fa(3): STOSQ.REP RDI
0001d2fd(10): MOV RAX,0x555555555555554
0001d307(10): MOV dword ptr [0x80 + RBX],0xf
0001d311(4): CMP qword ptr [RSP],RAX
0001d315(6): JA 0x0001d956
0001d31b(4): MOV R14,qword ptr [RSP]
0001d31f(4): LEA RAX,[R14 + 0x1]
0001d323(3): MOV RDI,RAX
0001d326(4): MOV qword ptr [RBX + 0x8],RAX
0001d32a(5): MOV qword ptr [RSP + 0x28],RAX
0001d32f(4): SHL RDI,0x4
0001d333(5): CALL 0x00002780
0001d338(3): TEST R14,R14
0001d33b(3): MOV qword ptr [RBX],RAX
0001d33e(6): JZ 0x0001e025
0001d344(5): MOV ESI,0x1
0001d349(7): NOP dword ptr [RAX]
0001d350(3): ADD RSI,RSI
0001d353(4): CMP qword ptr [RSP],RSI
0001d357(2): JNC 0x0001d350
0001d359(4): LEA RBP,[RSI + -0x1]
0001d35d(5): MOV EDI,0x18
0001d362(5): CALL 0x000026b0
0001d367(7): MOV qword ptr [0x88 + RBX],RBP
0001d36e(4): MOV qword ptr [RBX + 0x40],RAX
0001d372(5): CALL 0x00002520
0001d377(5): MOV EDI,0xe
0001d37c(6): MOV dword ptr [0xb4 + RBX],EAX
0001d382(5): CALL 0x000027d0
0001d387(3): MOVZX EDX,byte ptr [RAX]
0001d38a(3): AND EDX,0xffffffdf
0001d38d(3): CMP DL,0x55
0001d390(2): JNZ 0x0001d3e0
0001d392(4): MOVZX EDX,byte ptr [RAX + 0x1]
0001d396(3): AND EDX,0xffffffdf
0001d399(3): CMP DL,0x54
0001d39c(2): JNZ 0x0001d3e0
0001d39e(4): MOVZX EDX,byte ptr [RAX + 0x2]
0001d3a2(3): AND EDX,0xffffffdf
0001d3a5(3): CMP DL,0x46
0001d3a8(2): JNZ 0x0001d3e0
0001d3aa(2): XOR EDX,EDX
0001d3ac(4): CMP byte ptr [RAX + 0x3],0x2d
0001d3b0(7): LEA RDI,[0x22862]
0001d3b7(5): MOV ECX,0x2
0001d3bc(3): SETZ DL
0001d3bf(5): LEA RSI,[RAX + RDX*0x1 + 0x3]
0001d3c4(2): CMPSB.REPE RDI,RSI
0001d3c6(3): SETA AL
0001d3c9(2): SBB AL,0x0
0001d3cb(2): TEST AL,AL
0001d3cd(2): JNZ 0x0001d3e0
0001d3cf(7): OR byte ptr [0xb0 + RBX],0x4
0001d3d6(10): NOP word ptr CS:[RAX + RAX*0x1]
0001d3e0(7): MOVZX EAX,byte ptr [0xb0 + RBX]
0001d3e7(2): MOV EDX,EAX
0001d3e9(3): AND EDX,0xfffffff7
0001d3ec(7): CMP dword ptr [0xb4 + RBX],0x1
0001d3f3(6): MOV byte ptr [0xb0 + RBX],DL
0001d3f9(2): JLE 0x0001d40e
0001d3fb(2): TEST AL,0x4
0001d3fd(6): JZ 0x0001d963
0001d403(7): LEA RAX,[0x22dc0]
0001d40a(4): MOV qword ptr [RBX + 0x78],RAX
0001d40e(4): CMP qword ptr [RBX],0x0
0001d412(6): JZ 0x0001d956
0001d418(5): CMP qword ptr [RBX + 0x40],0x0
0001d41d(6): JZ 0x0001d956
0001d423(5): MOV RAX,qword ptr [RSP + 0x18]
0001d428(8): LEA RBP,[0x80 + RSP]
0001d430(5): MOV ECX,0x12
0001d435(8): MOV dword ptr [RSP + 0x4c],0x0
0001d43d(4): LEA R8,[RBP + 0x8]
0001d441(5): AND EAX,0x400000
0001d446(5): MOV qword ptr [RSP + 0x20],RAX
0001d44b(5): MOV RAX,qword ptr [RSP + 0x8]
0001d450(3): SETNZ DL
0001d453(3): MOV RDI,R8
0001d456(4): MOV RSI,qword ptr [RAX + 0x28]
0001d45a(2): XOR EAX,EAX
0001d45c(3): STOSQ.REP RDI
0001d45f(5): MOV RAX,qword ptr [RSP + 0x10]
0001d464(4): MOV RDI,qword ptr [RSP]
0001d468(3): TEST RSI,RSI
0001d46b(7): MOV byte ptr [0x108 + RSP],DL
0001d472(6): MOV ECX,dword ptr [0xb4 + RBX]
0001d478(4): SETNZ R12B
0001d47c(8): MOV qword ptr [0xf8 + RSP],RSI
0001d484(8): MOV qword ptr [0x80 + RSP],RAX
0001d48c(7): MOVZX EAX,byte ptr [0xb0 + RBX]
0001d493(3): OR R12D,EDX
0001d496(8): MOV qword ptr [0xd8 + RSP],RDI
0001d49e(8): MOV qword ptr [0xd0 + RSP],RDI
0001d4a6(3): MOV ESI,R12D
0001d4a9(8): MOV byte ptr [0x10b + RSP],R12B
0001d4b1(7): MOV dword ptr [0x110 + RSP],ECX
0001d4b8(8): MOV qword ptr [0xe8 + RSP],RDI
0001d4c0(8): MOV qword ptr [0xe0 + RSP],RDI
0001d4c8(2): MOV EDX,EAX
0001d4ca(3): SHR AL,0x3
0001d4cd(3): SHR DL,0x2
0001d4d0(3): AND EAX,0x1
0001d4d3(3): AND EDX,0x1
0001d4d6(3): TEST RDI,RDI
0001d4d9(7): MOV byte ptr [0x10a + RSP],AL
0001d4e0(7): MOV byte ptr [0x109 + RSP],DL
0001d4e7(6): JNZ 0x0001d925
0001d4ed(3): TEST SIL,SIL
0001d4f0(2): JZ 0x0001d4ff
0001d4f2(8): MOV RAX,qword ptr [0x88 + RSP]
0001d4fa(5): MOV qword ptr [RSP + 0x10],RAX
0001d4ff(6): CMP qword ptr [RSP + 0x20],0x0
0001d505(5): MOV RAX,qword ptr [RSP + 0x10]
0001d50a(8): MOV qword ptr [0x88 + RSP],RAX
0001d512(6): JZ 0x0001d615
0001d518(3): CMP ECX,0x1
0001d51b(6): JLE 0x0001e10d
0001d521(3): MOV RDI,RBP
0001d524(5): CALL 0x000115c0
0001d529(2): TEST EAX,EAX
0001d52b(2): JNZ 0x0001d570
0001d52d(4): MOV RAX,qword ptr [RSP]
0001d531(8): CMP RAX,qword ptr [0xb8 + RSP]
0001d539(6): JLE 0x0001e0f0
0001d53f(7): MOVSXD RAX,dword ptr [0xb4 + RBX]
0001d546(8): MOV RSI,qword ptr [0xc0 + RSP]
0001d54e(8): ADD RAX,qword ptr [0xb0 + RSP]
0001d556(3): CMP RSI,RAX
0001d559(6): JG 0x0001e0f0
0001d55f(3): ADD RSI,RSI
0001d562(3): MOV RDI,RBP
0001d565(5): CALL 0x00011050
0001d56a(2): TEST EAX,EAX
0001d56c(2): JZ 0x0001d521
0001d56e(2): NOP
0001d570(4): MOV dword ptr [RSP + 0x4c],EAX
0001d574(5): MOV RAX,qword ptr [RSP + 0x8]
0001d579(3): MOV R13,qword ptr [RAX]
0001d57c(4): MOV RDI,qword ptr [R13 + 0x70]
0001d580(3): TEST RDI,RDI
0001d583(2): JZ 0x0001d598
0001d585(3): NOP dword ptr [RAX]
0001d588(3): MOV R12,qword ptr [RDI]
0001d58b(5): CALL 0x00002a10
0001d590(3): TEST R12,R12
0001d593(3): MOV RDI,R12
0001d596(2): JNZ 0x0001d588
0001d598(4): MOV RDI,qword ptr [R13 + 0x20]
0001d59c(8): MOV qword ptr [R13 + 0x70],0x0
0001d5a4(11): MOV dword ptr [0x80 + R13],0xf
0001d5af(8): MOV qword ptr [R13 + 0x68],0x0
0001d5b7(5): CALL 0x00002a10
0001d5bc(8): MOV qword ptr [R13 + 0x20],0x0
0001d5c4(3): MOV RDI,RBP
0001d5c7(5): CALL 0x00012390
0001d5cc(3): MOV RDI,RBX
0001d5cf(5): CALL 0x000123d0
0001d5d4(5): MOV RAX,qword ptr [RSP + 0x8]
0001d5d9(7): MOV qword ptr [RAX],0x0
0001d5e0(8): MOV qword ptr [RAX + 0x8],0x0
0001d5e8(4): MOV EAX,dword ptr [RSP + 0x4c]
0001d5ec(8): MOV RBX,qword ptr [0x118 + RSP]
0001d5f4(9): XOR RBX,qword ptr FS:[0x28]
0001d5fd(6): JNZ 0x0001e340
0001d603(7): ADD RSP,0x128
0001d60a(1): POP RBX
0001d60b(1): POP RBP
0001d60c(2): POP R12
0001d60e(2): POP R13
0001d610(2): POP R14
0001d612(2): POP R15
0001d614(1): RET
0001d615(3): CMP ECX,0x1
0001d618(6): JG 0x0001dfca
0001d61e(3): TEST R12B,R12B
0001d621(8): MOV RSI,qword ptr [0xc0 + RSP]
0001d629(6): JZ 0x0001dc44
0001d62f(8): CMP qword ptr [0xd8 + RSP],RSI
0001d637(8): MOV RAX,qword ptr [0xb0 + RSP]
0001d63f(9): CMOVLE RSI,qword ptr [0xd8 + RSP]
0001d648(3): CMP RSI,RAX
0001d64b(2): JG 0x0001d65d
0001d64d(2): JMP 0x0001d690
0001d650(8): MOV RDX,qword ptr [0x88 + RSP]
0001d658(5): MOV qword ptr [RSP + 0x10],RDX
0001d65d(8): MOV RDX,qword ptr [0x80 + RSP]
0001d665(8): MOV RCX,qword ptr [0xf8 + RSP]
0001d66d(3): ADD RDX,RAX
0001d670(8): ADD RDX,qword ptr [0xa8 + RSP]
0001d678(3): MOVZX EDX,byte ptr [RDX]
0001d67b(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
0001d67f(5): MOV RCX,qword ptr [RSP + 0x10]
0001d684(3): MOV byte ptr [RCX + RAX*0x1],DL
0001d687(4): ADD RAX,0x1
0001d68b(3): CMP RSI,RAX
0001d68e(2): JNZ 0x0001d650
0001d690(8): MOV qword ptr [0xb0 + RSP],RAX
0001d698(8): MOV qword ptr [0xb8 + RSP],RAX
0001d6a0(8): MOV dword ptr [RSP + 0x4c],0x0
0001d6a8(5): MOV R12,qword ptr [RSP + 0x8]
0001d6ad(5): MOV R14,qword ptr [RSP + 0x18]
0001d6b2(5): LEA R13,[RSP + 0x50]
0001d6b7(3): MOV RSI,RBP
0001d6ba(3): MOV RDI,R13
0001d6bd(5): MOV qword ptr [RSP + 0x28],R13
0001d6c2(4): MOV R15,qword ptr [R12]
0001d6c6(3): MOV RDX,R14
0001d6c9(9): MOV qword ptr [R12 + 0x30],0x0
0001d6d2(7): OR RDX,0x800000
0001d6d9(7): MOV qword ptr [0xd8 + R15],R14
0001d6e0(5): CALL 0x0001b2a0
0001d6e5(5): LEA R9,[RSP + 0x4c]
0001d6ea(3): XOR R8D,R8D
0001d6ed(3): MOV RCX,R14
0001d6f0(3): MOV RDX,R13
0001d6f3(3): MOV RSI,R12
0001d6f6(3): MOV RDI,RBP
0001d6f9(2): CDQE
0001d6fb(8): ADD qword ptr [0xc8 + RSP],RAX
0001d703(5): CALL 0x0001d0d0
0001d708(4): MOV ECX,dword ptr [RSP + 0x4c]
0001d70c(2): TEST ECX,ECX
0001d70e(6): JNZ 0x0001e137
0001d714(4): LEA R13,[R15 + 0x70]
0001d718(5): LEA R12,[RSP + 0x60]
0001d71d(4): SUB R15,-0x80
0001d721(2): XOR EDX,EDX
0001d723(2): XOR ECX,ECX
0001d725(3): MOV RSI,R15
0001d728(3): MOV R8,R12
0001d72b(3): MOV RDI,R13
0001d72e(4): MOV qword ptr [RSP],RAX
0001d732(5): MOV byte ptr [RSP + 0x68],0x2
0001d737(5): CALL 0x00013360
0001d73c(4): MOV R9,qword ptr [RSP]
0001d740(3): MOV R11,RAX
0001d743(3): MOV RDX,RAX
0001d746(3): TEST R9,R9
0001d749(2): JZ 0x0001d772
0001d74b(3): MOV RCX,R11
0001d74e(3): MOV RDX,R9
0001d751(3): MOV R8,R12
0001d754(3): MOV RSI,R15
0001d757(3): MOV RDI,R13
0001d75a(4): MOV qword ptr [RSP],R11
0001d75e(5): MOV byte ptr [RSP + 0x68],0x10
0001d763(5): CALL 0x00013360
0001d768(4): MOV R11,qword ptr [RSP]
0001d76c(3): MOV RDX,R11
0001d76f(3): MOV R11,RAX
0001d772(3): TEST RDX,RDX
0001d775(5): MOV RCX,qword ptr [RSP + 0x8]
0001d77a(3): SETZ DL
0001d77d(3): TEST R11,R11
0001d780(3): SETZ AL
0001d783(2): OR DL,AL
0001d785(3): MOV R13,qword ptr [RCX]
0001d788(6): JNZ 0x0001e122
0001d78e(4): MOV R15,qword ptr [R13 + 0x8]
0001d792(4): MOV qword ptr [RBX + 0x68],R11
0001d796(8): LEA RCX,[R15*0x8]
0001d79e(4): LEA R15,[R15 + R15*0x2]
0001d7a2(3): MOV RDI,RCX
0001d7a5(4): MOV qword ptr [RSP],RCX
0001d7a9(4): SHL R15,0x3
0001d7ad(5): CALL 0x00002780
0001d7b2(4): MOV RCX,qword ptr [RSP]
0001d7b6(4): MOV qword ptr [R13 + 0x18],RAX
0001d7ba(5): MOV qword ptr [RSP + 0x18],RAX
0001d7bf(3): MOV RDI,RCX
0001d7c2(5): CALL 0x00002780
0001d7c7(3): MOV RDI,R15
0001d7ca(4): MOV qword ptr [R13 + 0x20],RAX
0001d7ce(5): MOV qword ptr [RSP + 0x10],RAX
0001d7d3(5): CALL 0x00002780
0001d7d8(3): MOV RDI,R15
0001d7db(4): MOV qword ptr [R13 + 0x28],RAX
0001d7df(4): MOV qword ptr [RSP],RAX
0001d7e3(5): CALL 0x00002780
0001d7e8(5): MOV RDX,qword ptr [RSP + 0x18]
0001d7ed(4): MOV qword ptr [R13 + 0x30],RAX
0001d7f1(4): MOV RSI,qword ptr [RSP]
0001d7f5(5): MOV RCX,qword ptr [RSP + 0x10]
0001d7fa(3): TEST RDX,RDX
0001d7fd(6): JZ 0x0001dfbd
0001d803(3): TEST RCX,RCX
0001d806(6): JZ 0x0001dfbd
0001d80c(3): TEST RSI,RSI
0001d80f(6): JZ 0x0001dfbd
0001d815(3): TEST RAX,RAX
0001d818(6): JZ 0x0001dfbd
0001d81e(5): MOV RAX,qword ptr [RSP + 0x8]
0001d823(4): MOV R15,qword ptr [RAX + 0x30]
0001d827(8): LEA RDI,[R15*0x8]
0001d82f(5): CALL 0x00002780
0001d834(3): TEST RAX,RAX
0001d837(7): MOV qword ptr [0xe0 + R13],RAX
0001d83e(2): JZ 0x0001d8ad
0001d840(3): TEST R15,R15
0001d843(2): JZ 0x0001d85d
0001d845(2): XOR EDX,EDX
0001d847(9): NOP word ptr [RAX + RAX*0x1]
0001d850(4): MOV qword ptr [RAX + RDX*0x8],RDX
0001d854(4): ADD RDX,0x1
0001d858(3): CMP RDX,R15
0001d85b(2): JNZ 0x0001d850
0001d85d(4): MOV RDI,qword ptr [R13 + 0x68]
0001d861(7): LEA RSI,[0x12860]
0001d868(3): MOV RDX,R13
0001d86b(5): CALL 0x00010ff0
0001d870(5): MOV RAX,qword ptr [RSP + 0x8]
0001d875(7): MOV RDI,qword ptr [0xe0 + R13]
0001d87c(4): MOV RDX,qword ptr [RAX + 0x30]
0001d880(3): TEST RDX,RDX
0001d883(6): JZ 0x0001e174
0001d889(3): MOV RAX,qword ptr [RDI]
0001d88c(3): TEST RAX,RAX
0001d88f(2): JZ 0x0001d89e
0001d891(2): JMP 0x0001d8ad
0001d898(4): CMP qword ptr [RDI + RAX*0x8],RAX
0001d89c(2): JNZ 0x0001d8ad
0001d89e(4): ADD RAX,0x1
0001d8a2(3): CMP RDX,RAX
0001d8a5(2): JA 0x0001d898
0001d8a7(6): JZ 0x0001e174
0001d8ad(4): MOV RDI,qword ptr [R13 + 0x68]
0001d8b1(5): MOV RDX,qword ptr [RSP + 0x8]
0001d8b6(7): LEA RSI,[0x13760]
0001d8bd(5): CALL 0x00010f80
0001d8c2(2): TEST EAX,EAX
0001d8c4(6): JNZ 0x0001d570
0001d8ca(4): MOV RDI,qword ptr [R13 + 0x68]
0001d8ce(7): LEA RSI,[0x15cd0]
0001d8d5(3): MOV RDX,R13
0001d8d8(5): CALL 0x00010f80
0001d8dd(2): TEST EAX,EAX
0001d8df(6): JNZ 0x0001d570
0001d8e5(4): MOV RDI,qword ptr [R13 + 0x68]
0001d8e9(7): LEA RSI,[0x128f0]
0001d8f0(3): MOV RDX,R13
0001d8f3(5): CALL 0x00010ff0
0001d8f8(4): MOV RDX,qword ptr [R13 + 0x68]
0001d8fc(7): LEA RSI,[0x22cc8]
0001d903(5): NOP dword ptr [RAX + RAX*0x1]
0001d908(4): MOVZX ECX,byte ptr [RDX + 0x30]
0001d90c(4): MOV RDI,qword ptr [RDX + 0x38]
0001d910(3): CMP CL,0x10
0001d913(6): JA 0x0001d9e8
0001d919(3): MOVZX EAX,CL
0001d91c(4): MOVSXD RAX,dword ptr [RSI + RAX*0x4]
0001d920(3): ADD RAX,RSI
0001d923(2): JMP RAX
0001d925(5): MOV RSI,qword ptr [RSP + 0x28]
0001d92a(3): MOV RDI,RBP
0001d92d(5): CALL 0x00011050
0001d932(2): TEST EAX,EAX
0001d934(6): JNZ 0x0001d570
0001d93a(8): MOVZX ESI,byte ptr [0x10b + RSP]
0001d942(6): MOV ECX,dword ptr [0xb4 + RBX]
0001d948(3): TEST SIL,SIL
0001d94b(6): JZ 0x0001d4ff
0001d951(5): JMP 0x0001d4f2
0001d956(8): MOV dword ptr [RSP + 0x4c],0xc
0001d95e(5): JMP 0x0001d5cc
0001d963(5): MOV ESI,0x1
0001d968(5): MOV EDI,0x20
0001d96d(5): CALL 0x000026b0
0001d972(3): TEST RAX,RAX
0001d975(4): MOV qword ptr [RBX + 0x78],RAX
0001d979(2): JZ 0x0001d956
0001d97b(3): XOR R12D,R12D
0001d97e(2): XOR EBP,EBP
0001d980(6): MOV R13D,0x1
0001d986(3): XOR R15D,R15D
0001d989(7): NOP dword ptr [RAX]
0001d990(5): LEA R14D,[RBP + R15*0x1]
0001d995(3): MOV EDI,R14D
0001d998(5): CALL 0x00002880
0001d99d(3): CMP EAX,-0x1
0001d9a0(2): JZ 0x0001d9b5
0001d9a2(4): MOV RSI,qword ptr [RBX + 0x78]
0001d9a6(3): MOV RDI,R13
0001d9a9(3): MOV ECX,R15D
0001d9ac(3): SHL RDI,CL
0001d9af(3): ADD RSI,R12
0001d9b2(3): OR qword ptr [RSI],RDI
0001d9b5(7): TEST R14D,0xffffff80
0001d9bc(2): JNZ 0x0001d9ca
0001d9be(3): CMP EAX,R14D
0001d9c1(2): JZ 0x0001d9ca
0001d9c3(7): OR byte ptr [0xb0 + RBX],0x8
0001d9ca(4): ADD R15,0x1
0001d9ce(4): CMP R15,0x40
0001d9d2(2): JNZ 0x0001d990
0001d9d4(3): ADD EBP,0x40
0001d9d7(4): ADD R12,0x8
0001d9db(6): CMP EBP,0x100
0001d9e1(2): JNZ 0x0001d986
0001d9e3(5): JMP 0x0001d40e
0001d9e8(3): AND ECX,0x8
0001d9eb(6): JNZ 0x0001e302
0001d9f1(4): MOV RAX,qword ptr [RDX + 0x20]
0001d9f5(4): MOV RCX,qword ptr [RAX + 0x38]
0001d9f9(4): MOV RAX,qword ptr [R13 + 0x18]
0001d9fd(4): MOV qword ptr [RAX + RDI*0x8],RCX
0001da01(4): MOV R15,qword ptr [RDX + 0x8]
0001da05(2): XOR EDI,EDI
0001da07(3): TEST R15,R15
0001da0a(2): JZ 0x0001da1b
0001da0c(3): MOV RDX,R15
0001da0f(5): JMP 0x0001d908
0001da18(3): MOV RDX,RAX
0001da1b(4): MOV R15,qword ptr [RDX + 0x10]
0001da1f(3): TEST R15,R15
0001da22(3): SETZ CL
0001da25(3): CMP R15,RDI
0001da28(3): SETZ AL
0001da2b(2): OR CL,AL
0001da2d(4): MOV byte ptr [RSP + 0x10],CL
0001da31(2): JZ 0x0001da0c
0001da33(3): MOV RAX,qword ptr [RDX]
0001da36(3): MOV RDI,RDX
0001da39(3): TEST RAX,RAX
0001da3c(2): JNZ 0x0001da18
0001da3e(3): XOR R14D,R14D
0001da41(3): XOR R15D,R15D
0001da44(4): NOP dword ptr [RAX]
0001da48(4): MOV RDX,qword ptr [R13 + 0x10]
0001da4c(3): CMP RDX,R15
0001da4f(2): JZ 0x0001da76
0001da51(4): LEA R10,[R15 + R15*0x2]
0001da55(4): MOV RAX,qword ptr [R13 + 0x30]
0001da59(4): SHL R10,0x3
0001da5d(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
0001da63(6): JZ 0x0001dc68
0001da69(4): MOV RDX,qword ptr [R13 + 0x10]
0001da6d(4): ADD R15,0x1
0001da71(3): CMP RDX,R15
0001da74(2): JNZ 0x0001da51
0001da76(3): TEST R14B,R14B
0001da79(6): JZ 0x0001dcbe
0001da7f(3): XOR R14D,R14D
0001da82(3): XOR R15D,R15D
0001da85(2): JMP 0x0001da51
0001da87(8): OR byte ptr [0xb0 + R13],0x1
0001da8f(4): MOV R15,qword ptr [RDX + 0x8]
0001da93(3): TEST R15,R15
0001da96(6): JZ 0x0001e0a9
0001da9c(4): MOV RAX,qword ptr [R15 + 0x18]
0001daa0(4): MOV RCX,qword ptr [RAX + 0x38]
0001daa4(4): MOV RAX,qword ptr [RDX + 0x10]
0001daa8(3): TEST RAX,RAX
0001daab(6): JZ 0x0001e09c
0001dab1(4): MOV RAX,qword ptr [RAX + 0x18]
0001dab5(4): MOV R9,qword ptr [RAX + 0x38]
0001dab9(3): TEST RCX,RCX
0001dabc(6): JS 0x0001e321
0001dac2(3): TEST R9,R9
0001dac5(6): JS 0x0001e2e3
0001dacb(4): MOV RAX,qword ptr [R13 + 0x28]
0001dacf(4): LEA RDI,[RDI + RDI*0x2]
0001dad3(5): MOV qword ptr [RSP + 0x38],RSI
0001dad8(5): MOV qword ptr [RSP + 0x30],R9
0001dadd(5): MOV qword ptr [RSP + 0x18],RCX
0001dae2(5): MOV qword ptr [RSP + 0x10],RDX
0001dae7(4): LEA R10,[RAX + RDI*0x8]
0001daeb(5): MOV EDI,0x10
0001daf0(7): MOV qword ptr [R10],0x2
0001daf7(4): MOV qword ptr [RSP],R10
0001dafb(5): CALL 0x00002780
0001db00(4): MOV R10,qword ptr [RSP]
0001db04(3): TEST RAX,RAX
0001db07(5): MOV RDX,qword ptr [RSP + 0x10]
0001db0c(5): MOV RCX,qword ptr [RSP + 0x18]
0001db11(5): MOV R9,qword ptr [RSP + 0x30]
0001db16(5): MOV RSI,qword ptr [RSP + 0x38]
0001db1b(4): MOV qword ptr [R10 + 0x10],RAX
0001db1f(6): JZ 0x0001ddba
0001db25(3): CMP RCX,R9
0001db28(6): JZ 0x0001e0fd
0001db2e(8): MOV qword ptr [R10 + 0x8],0x2
0001db36(6): JL 0x0001e0e4
0001db3c(3): MOV qword ptr [RAX],R9
0001db3f(4): MOV qword ptr [RAX + 0x8],RCX
0001db43(5): JMP 0x0001da05
0001db48(4): MOV RAX,qword ptr [RDX + 0x20]
0001db4c(4): LEA RCX,[RDI + RDI*0x2]
0001db50(5): MOV EDI,0x8
0001db55(5): MOV qword ptr [RSP + 0x10],RSI
0001db5a(4): MOV qword ptr [RSP],RDX
0001db5e(4): MOV R14,qword ptr [RAX + 0x38]
0001db62(4): MOV RAX,qword ptr [R13 + 0x28]
0001db66(4): LEA R15,[RAX + RCX*0x8]
0001db6a(7): MOV qword ptr [R15],0x1
0001db71(8): MOV qword ptr [R15 + 0x8],0x1
0001db79(5): CALL 0x00002780
0001db7e(3): TEST RAX,RAX
0001db81(4): MOV qword ptr [R15 + 0x10],RAX
0001db85(4): MOV RDX,qword ptr [RSP]
0001db89(5): MOV RSI,qword ptr [RSP + 0x10]
0001db8e(6): JZ 0x0001e238
0001db94(3): MOV qword ptr [RAX],R14
0001db97(4): MOV R15,qword ptr [RDX + 0x8]
0001db9b(5): JMP 0x0001da05
0001dba0(5): CMP qword ptr [RDX + 0x20],0x0
0001dba5(6): JZ 0x0001da01
0001dbab(7): LEA RCX,[0x22d80]
0001dbb2(7): LEA RSI,[0x227c0]
0001dbb9(7): LEA RDI,[0x22864]
0001dbc0(5): MOV EDX,0x59f
0001dbc5(5): CALL 0x00002600
0001dbd0(4): MOV RAX,qword ptr [RDX + 0x20]
0001dbd4(4): MOV R15,qword ptr [RAX + 0x38]
0001dbd8(4): MOV RAX,qword ptr [R13 + 0x18]
0001dbdc(4): MOV qword ptr [RAX + RDI*0x8],R15
0001dbe0(4): CMP byte ptr [RDX + 0x30],0x4
0001dbe4(6): JNZ 0x0001da01
0001dbea(4): MOV RAX,qword ptr [R13 + 0x28]
0001dbee(4): LEA RCX,[RDI + RDI*0x2]
0001dbf2(5): MOV EDI,0x8
0001dbf7(5): MOV qword ptr [RSP + 0x18],RSI
0001dbfc(5): MOV qword ptr [RSP + 0x10],RDX
0001dc01(4): LEA RCX,[RAX + RCX*0x8]
0001dc05(7): MOV qword ptr [RCX],0x1
0001dc0c(8): MOV qword ptr [RCX + 0x8],0x1
0001dc14(4): MOV qword ptr [RSP],RCX
0001dc18(5): CALL 0x00002780
0001dc1d(4): MOV RCX,qword ptr [RSP]
0001dc21(3): TEST RAX,RAX
0001dc24(5): MOV RDX,qword ptr [RSP + 0x10]
0001dc29(5): MOV RSI,qword ptr [RSP + 0x18]
0001dc2e(4): MOV qword ptr [RCX + 0x10],RAX
0001dc32(6): JZ 0x0001e280
0001dc38(3): MOV qword ptr [RAX],R15
0001dc3b(4): MOV R15,qword ptr [RDX + 0x8]
0001dc3f(5): JMP 0x0001da05
0001dc44(8): MOV qword ptr [0xb0 + RSP],RSI
0001dc4c(8): MOV qword ptr [0xb8 + RSP],RSI
0001dc54(8): MOV dword ptr [RSP + 0x4c],0x0
0001dc5c(5): JMP 0x0001d6a8
0001dc68(5): MOV ECX,0x1
0001dc6d(3): MOV RDX,R15
0001dc70(3): MOV RSI,R13
0001dc73(3): MOV RDI,R12
0001dc76(4): MOV qword ptr [RSP],R10
0001dc7a(5): CALL 0x00012da0
0001dc7f(2): TEST EAX,EAX
0001dc81(6): JNZ 0x0001d570
0001dc87(4): MOV RAX,qword ptr [R13 + 0x30]
0001dc8b(4): MOV R10,qword ptr [RSP]
0001dc8f(4): ADD R15,0x1
0001dc93(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
0001dc99(6): JNZ 0x0001da48
0001dc9f(5): MOV RDI,qword ptr [RSP + 0x70]
0001dca4(5): CALL 0x00002a10
0001dca9(4): CMP qword ptr [R13 + 0x10],R15
0001dcad(6): JZ 0x0001da7f
0001dcb3(6): MOVZX R14D,byte ptr [RSP + 0x10]
0001dcb9(5): JMP 0x0001da51
0001dcbe(5): MOV RAX,qword ptr [RSP + 0x8]
0001dcc3(4): TEST byte ptr [RAX + 0x38],0x10
0001dcc7(2): JNZ 0x0001dcda
0001dcc9(5): CMP qword ptr [RAX + 0x30],0x0
0001dcce(2): JZ 0x0001dcda
0001dcd0(8): TEST byte ptr [0xb0 + R13],0x1
0001dcd8(2): JNZ 0x0001dce8
0001dcda(8): CMP qword ptr [0x98 + R13],0x0
0001dce2(6): JZ 0x0001dddb
0001dce8(4): LEA RDI,[RDX + RDX*0x2]
0001dcec(4): MOV qword ptr [RSP],RDX
0001dcf0(4): SHL RDI,0x3
0001dcf4(5): CALL 0x00002780
0001dcf9(3): TEST RAX,RAX
0001dcfc(4): MOV qword ptr [R13 + 0x38],RAX
0001dd00(6): JZ 0x0001e24c
0001dd06(4): MOV RDX,qword ptr [RSP]
0001dd0a(2): XOR ESI,ESI
0001dd0c(2): XOR ECX,ECX
0001dd0e(3): TEST RDX,RDX
0001dd11(2): JNZ 0x0001dd24
0001dd13(5): JMP 0x0001dddb
0001dd20(4): MOV RAX,qword ptr [R13 + 0x38]
0001dd24(4): PXOR XMM0,XMM0
0001dd28(3): ADD RAX,RSI
0001dd2b(4): ADD RCX,0x1
0001dd2f(8): MOV qword ptr [RAX + 0x10],0x0
0001dd37(4): ADD RSI,0x18
0001dd3b(3): MOVUPS xmmword ptr [RAX],XMM0
0001dd3e(4): MOV RAX,qword ptr [R13 + 0x10]
0001dd42(3): CMP RCX,RAX
0001dd45(2): JC 0x0001dd20
0001dd47(3): TEST RAX,RAX
0001dd4a(6): JZ 0x0001dddb
0001dd50(4): MOV RAX,qword ptr [R13 + 0x30]
0001dd54(9): MOV qword ptr [RSP + 0x18],0x0
0001dd5d(9): MOV qword ptr [RSP + 0x10],0x0
0001dd66(5): MOV RCX,qword ptr [RSP + 0x18]
0001dd6b(4): LEA RDX,[RAX + RCX*0x1]
0001dd6f(5): CMP qword ptr [RDX + 0x8],0x0
0001dd74(4): MOV RCX,qword ptr [RDX + 0x10]
0001dd78(2): JLE 0x0001ddc4
0001dd7a(3): XOR R15D,R15D
0001dd7d(2): JMP 0x0001dd98
0001dd80(4): MOV RAX,qword ptr [R13 + 0x30]
0001dd84(5): MOV RDX,qword ptr [RSP + 0x18]
0001dd89(4): ADD R15,0x1
0001dd8d(4): MOV RCX,qword ptr [RSP]
0001dd91(5): CMP R15,qword ptr [RAX + RDX*0x1 + 0x8]
0001dd96(2): JGE 0x0001ddc4
0001dd98(4): MOV RAX,qword ptr [RCX + R15*0x8]
0001dd9c(4): MOV qword ptr [RSP],RCX
0001dda0(4): LEA RSI,[RAX + RAX*0x2]
0001dda4(4): MOV RAX,qword ptr [R13 + 0x38]
0001dda8(4): LEA RDI,[RAX + RSI*0x8]
0001ddac(5): MOV RSI,qword ptr [RSP + 0x10]
0001ddb1(5): CALL 0x000110f0
0001ddb6(2): TEST AL,AL
0001ddb8(2): JNZ 0x0001dd80
0001ddba(5): MOV EAX,0xc
0001ddbf(5): JMP 0x0001d570
0001ddc4(6): ADD qword ptr [RSP + 0x10],0x1
0001ddca(6): ADD qword ptr [RSP + 0x18],0x18
0001ddd0(5): MOV RDX,qword ptr [RSP + 0x10]
0001ddd5(4): CMP RDX,qword ptr [R13 + 0x10]
0001ddd9(2): JC 0x0001dd66
0001dddb(7): MOVZX EAX,byte ptr [0xb0 + RBX]
0001dde2(8): MOV dword ptr [RSP + 0x4c],0x0
0001ddea(3): SHR AL,0x2
0001dded(6): CMP qword ptr [RSP + 0x20],0x0
0001ddf3(3): SETZ DL
0001ddf6(2): AND AL,DL
0001ddf8(6): JNZ 0x0001dfdf
0001ddfe(4): MOV RAX,qword ptr [RBX + 0x68]
0001de02(3): MOV RDI,R12
0001de05(4): MOV RAX,qword ptr [RAX + 0x18]
0001de09(4): MOV RAX,qword ptr [RAX + 0x38]
0001de0d(4): LEA RDX,[RAX + RAX*0x2]
0001de11(7): MOV qword ptr [0x90 + RBX],RAX
0001de18(4): MOV RAX,qword ptr [RBX + 0x30]
0001de1c(4): LEA RSI,[RAX + RDX*0x8]
0001de20(5): CALL 0x00013800
0001de25(2): TEST EAX,EAX
0001de27(3): MOV R15D,EAX
0001de2a(4): MOV dword ptr [RSP + 0x50],EAX
0001de2e(6): JNZ 0x0001df4f
0001de34(8): CMP qword ptr [0x98 + RBX],0x0
0001de3c(6): JLE 0x0001df10
0001de42(5): MOV R9,qword ptr [RSP + 0x68]
0001de47(3): TEST R9,R9
0001de4a(6): JLE 0x0001df10
0001de50(3): XOR R10D,R10D
0001de53(5): LEA R13,[R12 + 0x10]
0001de58(2): JMP 0x0001de6d
0001de60(4): ADD R10,0x1
0001de64(3): CMP R9,R10
0001de67(6): JLE 0x0001df10
0001de6d(5): MOV RCX,qword ptr [RSP + 0x70]
0001de72(3): MOV RSI,qword ptr [RBX]
0001de75(4): MOV R8,qword ptr [RCX + R10*0x8]
0001de79(3): MOV RDI,R8
0001de7c(4): SHL RDI,0x4
0001de80(3): ADD RDI,RSI
0001de83(4): CMP byte ptr [RDI + 0x8],0x4
0001de87(2): JNZ 0x0001de60
0001de89(2): XOR EDX,EDX
0001de8b(2): JMP 0x0001de99
0001de90(4): ADD RDX,0x1
0001de94(3): CMP R9,RDX
0001de97(2): JZ 0x0001de60
0001de99(4): MOV RAX,qword ptr [RCX + RDX*0x8]
0001de9d(4): SHL RAX,0x4
0001dea1(3): ADD RAX,RSI
0001dea4(4): CMP byte ptr [RAX + 0x8],0x9
0001dea8(2): JNZ 0x0001de90
0001deaa(3): MOV R11,qword ptr [RDI]
0001dead(3): CMP qword ptr [RAX],R11
0001deb0(2): JNZ 0x0001de90
0001deb2(4): MOV RDX,qword ptr [RBX + 0x28]
0001deb6(4): LEA RAX,[R8 + R8*0x2]
0001deba(3): MOV RSI,R13
0001debd(3): MOV RDI,R9
0001dec0(4): LEA RAX,[RDX + RAX*0x8]
0001dec4(4): MOV RAX,qword ptr [RAX + 0x10]
0001dec8(3): MOV R11,qword ptr [RAX]
0001decb(3): MOV RDX,R11
0001dece(5): CALL 0x000126a0
0001ded3(3): TEST RAX,RAX
0001ded6(2): JNZ 0x0001de60
0001ded8(4): MOV RAX,qword ptr [RBX + 0x30]
0001dedc(4): LEA RDX,[R11 + R11*0x2]
0001dee0(3): MOV RDI,R12
0001dee3(4): LEA RSI,[RAX + RDX*0x8]
0001dee7(5): CALL 0x00012bc0
0001deec(2): TEST EAX,EAX
0001deee(6): JNZ 0x0001e230
0001def4(5): MOV R9,qword ptr [RSP + 0x68]
0001def9(6): MOV R10D,0x1
0001deff(3): CMP R9,R10
0001df02(6): JG 0x0001de6d
0001df08(8): NOP dword ptr [RAX + RAX*0x1]
0001df10(5): MOV RDI,qword ptr [RSP + 0x28]
0001df15(2): XOR ECX,ECX
0001df17(3): MOV RDX,R12
0001df1a(3): MOV RSI,RBX
0001df1d(5): CALL 0x000139f0
0001df22(3): TEST RAX,RAX
0001df25(4): MOV qword ptr [RBX + 0x48],RAX
0001df29(6): JZ 0x0001e092
0001df2f(4): CMP byte ptr [RAX + 0x68],0x0
0001df33(6): JS 0x0001e031
0001df39(4): MOV qword ptr [RBX + 0x60],RAX
0001df3d(4): MOV qword ptr [RBX + 0x58],RAX
0001df41(4): MOV qword ptr [RBX + 0x50],RAX
0001df45(5): MOV RDI,qword ptr [RSP + 0x70]
0001df4a(5): CALL 0x00002a10
0001df4f(5): MOV RAX,qword ptr [RSP + 0x8]
0001df54(5): MOV dword ptr [RSP + 0x4c],R15D
0001df59(3): MOV R13,qword ptr [RAX]
0001df5c(4): MOV RDI,qword ptr [R13 + 0x70]
0001df60(3): TEST RDI,RDI
0001df63(2): JZ 0x0001df78
0001df65(3): NOP dword ptr [RAX]
0001df68(3): MOV R12,qword ptr [RDI]
0001df6b(5): CALL 0x00002a10
0001df70(3): TEST R12,R12
0001df73(3): MOV RDI,R12
0001df76(2): JNZ 0x0001df68
0001df78(4): MOV RDI,qword ptr [R13 + 0x20]
0001df7c(8): MOV qword ptr [R13 + 0x70],0x0
0001df84(11): MOV dword ptr [0x80 + R13],0xf
0001df8f(8): MOV qword ptr [R13 + 0x68],0x0
0001df97(5): CALL 0x00002a10
0001df9c(8): MOV qword ptr [R13 + 0x20],0x0
0001dfa4(3): MOV RDI,RBP
0001dfa7(5): CALL 0x00012390
0001dfac(4): MOV EAX,dword ptr [RSP + 0x4c]
0001dfb0(2): TEST EAX,EAX
0001dfb2(6): JZ 0x0001d5ec
0001dfb8(5): JMP 0x0001d5cc
0001dfbd(8): MOV dword ptr [RSP + 0x4c],0xc
0001dfc5(5): JMP 0x0001d57c
0001dfca(3): MOV RDI,RBP
0001dfcd(5): CALL 0x000113f0
0001dfd2(8): MOV dword ptr [RSP + 0x4c],0x0
0001dfda(5): JMP 0x0001d6a8
0001dfdf(5): MOV RCX,qword ptr [RSP + 0x8]
0001dfe4(5): CMP qword ptr [RCX + 0x28],0x0
0001dfe9(6): JNZ 0x0001ddfe
0001dfef(4): MOV R10,qword ptr [RBX + 0x10]
0001dff3(3): TEST R10,R10
0001dff6(6): JZ 0x0001e2aa
0001dffc(3): MOV RSI,qword ptr [RBX]
0001dfff(7): LEA R9,[0x22d0c]
0001e006(3): XOR R8D,R8D
0001e009(2): XOR EDX,EDX
0001e00b(3): MOV RCX,RSI
0001e00e(4): CMP byte ptr [RCX + 0x8],0xc
0001e012(6): JA 0x0001e2de
0001e018(4): MOVZX EDI,byte ptr [RCX + 0x8]
0001e01c(4): MOVSXD RDI,dword ptr [R9 + RDI*0x4]
0001e020(3): ADD RDI,R9
0001e023(2): JMP RDI
0001e025(2): XOR EBP,EBP
0001e027(5): MOV ESI,0x1
0001e02c(5): JMP 0x0001d35d
0001e031(5): MOV R14,qword ptr [RSP + 0x28]
0001e036(5): MOV ECX,0x1
0001e03b(3): MOV RDX,R12
0001e03e(3): MOV RSI,RBX
0001e041(3): MOV RDI,R14
0001e044(5): CALL 0x000139f0
0001e049(5): MOV ECX,0x2
0001e04e(3): MOV RDX,R12
0001e051(3): MOV RSI,RBX
0001e054(3): MOV RDI,R14
0001e057(4): MOV qword ptr [RBX + 0x50],RAX
0001e05b(5): CALL 0x000139f0
0001e060(5): MOV ECX,0x6
0001e065(4): MOV qword ptr [RBX + 0x58],RAX
0001e069(3): MOV RDX,R12
0001e06c(3): MOV RSI,RBX
0001e06f(3): MOV RDI,R14
0001e072(5): CALL 0x000139f0
0001e077(5): CMP qword ptr [RBX + 0x50],0x0
0001e07c(4): MOV qword ptr [RBX + 0x60],RAX
0001e080(2): JZ 0x0001e092
0001e082(5): CMP qword ptr [RBX + 0x58],0x0
0001e087(2): JZ 0x0001e092
0001e089(3): TEST RAX,RAX
0001e08c(6): JNZ 0x0001df45
0001e092(5): MOV R15D,dword ptr [RSP + 0x50]
0001e097(5): JMP 0x0001df4f
0001e09c(4): MOV RAX,qword ptr [RDX + 0x20]
0001e0a0(4): MOV R9,qword ptr [RAX + 0x38]
0001e0a4(5): JMP 0x0001dab9
0001e0a9(4): MOV RAX,qword ptr [RDX + 0x20]
0001e0ad(4): MOV RCX,qword ptr [RAX + 0x38]
0001e0b1(5): JMP 0x0001daa4
0001e0b6(3): MOV RDI,RBX
0001e0b9(5): MOV ESI,0xe8
0001e0be(5): CALL 0x00002830
0001e0c3(3): TEST RAX,RAX
0001e0c6(3): MOV RBX,RAX
0001e0c9(6): JZ 0x0001e261
0001e0cf(5): MOV RAX,qword ptr [RSP + 0x8]
0001e0d4(8): MOV qword ptr [RAX + 0x8],0xe8
0001e0dc(3): MOV qword ptr [RAX],RBX
0001e0df(5): JMP 0x0001d2c2
0001e0e4(3): MOV qword ptr [RAX],RCX
0001e0e7(4): MOV qword ptr [RAX + 0x8],R9
0001e0eb(5): JMP 0x0001da05
0001e0f0(8): MOV dword ptr [RSP + 0x4c],0x0
0001e0f8(5): JMP 0x0001d6a8
0001e0fd(8): MOV qword ptr [R10 + 0x8],0x1
0001e105(3): MOV qword ptr [RAX],RCX
0001e108(5): JMP 0x0001da05
0001e10d(3): MOV RDI,RBP
0001e110(5): CALL 0x00011380
0001e115(8): MOV dword ptr [RSP + 0x4c],0x0
0001e11d(5): JMP 0x0001d6a8
0001e122(8): MOV dword ptr [RSP + 0x4c],0xc
0001e12a(8): MOV qword ptr [RBX + 0x68],0x0
0001e132(5): JMP 0x0001d57c
0001e137(3): TEST RAX,RAX
0001e13a(6): JZ 0x0001e26b
0001e140(4): LEA R13,[R15 + 0x70]
0001e144(5): LEA R12,[RSP + 0x60]
0001e149(4): SUB R15,-0x80
0001e14d(2): XOR ECX,ECX
0001e14f(2): XOR EDX,EDX
0001e151(3): MOV RSI,R15
0001e154(3): MOV R8,R12
0001e157(3): MOV RDI,R13
0001e15a(4): MOV qword ptr [RSP],RAX
0001e15e(5): MOV byte ptr [RSP + 0x68],0x2
0001e163(5): CALL 0x00013360
0001e168(4): MOV R9,qword ptr [RSP]
0001e16c(3): MOV R11,RAX
0001e16f(5): JMP 0x0001d74b
0001e174(5): CALL 0x00002a10
0001e179(11): MOV qword ptr [0xe0 + R13],0x0
0001e184(5): JMP 0x0001d8ad
0001e189(3): MOV R8D,EAX
0001e18c(4): ADD RDX,0x1
0001e190(4): ADD RCX,0x10
0001e194(3): CMP RDX,R10
0001e197(6): JNZ 0x0001e00e
0001e19d(3): OR R14B,R8B
0001e1a0(6): JZ 0x0001e2aa
0001e1a6(3): MOV RAX,RDX
0001e1a9(4): SHL RAX,0x4
0001e1ad(3): ADD RAX,RSI
0001e1b0(2): JMP 0x0001e1c8
0001e1b2(3): CMP DL,0x5
0001e1b5(2): JNZ 0x0001e1bb
0001e1b7(4): MOV byte ptr [RSI + 0x8],0x7
0001e1bb(4): ADD RSI,0x10
0001e1bf(3): CMP RAX,RSI
0001e1c2(6): JZ 0x0001e2a7
0001e1c8(4): MOVZX EDX,byte ptr [RSI + 0x8]
0001e1cc(3): CMP DL,0x1
0001e1cf(2): JNZ 0x0001e1b2
0001e1d1(3): CMP byte ptr [RSI],0x0
0001e1d4(2): JNS 0x0001e1bb
0001e1d6(4): AND byte ptr [RSI + 0xa],0xdf
0001e1da(2): JMP 0x0001e1bb
0001e1e0(3): CMP byte ptr [RCX],0x0
0001e1e3(4): CMOVS R14D,EAX
0001e1e7(2): JMP 0x0001e18c
0001e1e9(2): MOV EDI,dword ptr [RCX]
0001e1eb(3): CMP EDI,0x20
0001e1ee(2): JZ 0x0001e18c
0001e1f0(6): JBE 0x0001e299
0001e1f6(3): CMP EDI,0x40
0001e1f9(2): JZ 0x0001e18c
0001e1fb(3): ADD EDI,-0x80
0001e1fe(2): JZ 0x0001e18c
0001e200(5): JMP 0x0001ddfe
0001e208(3): MOV RDI,qword ptr [RCX]
0001e20b(5): CMP qword ptr [RDI + 0x10],0x0
0001e210(6): JNZ 0x0001ddfe
0001e216(5): CMP qword ptr [RDI + 0x18],0x0
0001e21b(6): JZ 0x0001e18c
0001e221(5): JMP 0x0001ddfe
0001e230(3): MOV R15D,EAX
0001e233(5): JMP 0x0001df4f
0001e238(8): MOV qword ptr [R15 + 0x8],0x0
0001e240(7): MOV qword ptr [R15],0x0
0001e247(5): JMP 0x0001ddba
0001e24c(5): MOV RAX,qword ptr [RSP + 0x8]
0001e251(8): MOV dword ptr [RSP + 0x4c],0xc
0001e259(3): MOV R13,qword ptr [RAX]
0001e25c(5): JMP 0x0001d57c
0001e261(5): MOV EAX,0xc
0001e266(5): JMP 0x0001d5ec
0001e26b(5): MOV RAX,qword ptr [RSP + 0x8]
0001e270(8): MOV qword ptr [RBX + 0x68],0x0
0001e278(3): MOV R13,qword ptr [RAX]
0001e27b(5): JMP 0x0001d57c
0001e280(8): MOV qword ptr [RCX + 0x8],0x0
0001e288(7): MOV qword ptr [RCX],0x0
0001e28f(5): MOV EAX,0xc
0001e294(5): JMP 0x0001d570
0001e299(3): CMP EDI,0x10
0001e29c(6): JZ 0x0001e18c
0001e2a2(5): JMP 0x0001ddfe
0001e2a7(3): MOV R14D,R8D
0001e2aa(8): CMP qword ptr [0x98 + RBX],0x0
0001e2b2(7): MOVZX EDX,byte ptr [0xb0 + RBX]
0001e2b9(10): MOV dword ptr [0xb4 + RBX],0x1
0001e2c3(3): SETG AL
0001e2c6(3): AND EDX,0xfffffff9
0001e2c9(3): OR EAX,R14D
0001e2cc(3): AND EAX,0x1
0001e2cf(2): ADD EAX,EAX
0001e2d1(2): OR EAX,EDX
0001e2d3(6): MOV byte ptr [0xb0 + RBX],AL
0001e2d9(5): JMP 0x0001ddfe
0001e2de(5): CALL 0x00002400
0001e2e3(7): LEA RCX,[0x22d80]
0001e2ea(7): LEA RSI,[0x227c0]
0001e2f1(7): LEA RDI,[0x22881]
0001e2f8(5): MOV EDX,0x5b0
0001e2fd(5): CALL 0x00002600
0001e302(7): LEA RCX,[0x22d80]
0001e309(7): LEA RSI,[0x227c0]
0001e310(7): LEA RDI,[0x227e0]
0001e317(5): MOV EDX,0x5c2
0001e31c(5): CALL 0x00002600
0001e321(7): LEA RCX,[0x22d80]
0001e328(7): LEA RSI,[0x227c0]
0001e32f(7): LEA RDI,[0x22877]
0001e336(5): MOV EDX,0x5af
0001e33b(5): CALL 0x00002600
0001e340(5): CALL 0x00002560
0001e345(1): NOP
0001e346(10): NOP word ptr CS:[RAX + RAX*0x1]
0001e350(4): SUB RSP,0x8
0001e354(7): MOV RCX,qword ptr [0x00228300]
0001e35b(3): MOV R8,RDI
0001e35e(3): MOV RDI,RDX
0001e361(3): MOV RAX,RCX
0001e364(4): SHR RAX,0x19
0001e368(3): AND EAX,0x1
0001e36b(3): SHL EAX,0x4
0001e36e(2): MOV EDX,EAX
0001e370(4): MOVZX EAX,byte ptr [RDI + 0x38]
0001e374(3): AND EAX,0xffffffef
0001e377(2): OR EAX,EDX
0001e379(3): MOV RDX,RSI
0001e37c(3): MOV RSI,R8
0001e37f(3): OR EAX,0xffffff80
0001e382(3): MOV byte ptr [RDI + 0x38],AL
0001e385(5): CALL 0x0001d250
0001e38a(2): TEST EAX,EAX
0001e38c(2): JZ 0x0001e3b8
0001e38e(7): LEA RDX,[0x22de0]
0001e395(2): CDQE
0001e397(7): LEA RSI,[0x22e80]
0001e39e(2): XOR EDI,EDI
0001e3a0(4): ADD RSI,qword ptr [RDX + RAX*0x8]
0001e3a4(5): MOV EDX,0x5
0001e3a9(4): ADD RSP,0x8
0001e3ad(5): JMP 0x00002510
0001e3b8(2): XOR EAX,EAX
0001e3ba(4): ADD RSP,0x8
0001e3be(1): RET
0001e3c0(7): MOV RAX,qword ptr [0x00228300]
0001e3c7(7): MOV qword ptr [0x00228300],RDI
0001e3ce(1): RET
0001e3d0(2): PUSH R12
0001e3d2(1): PUSH RBP
0001e3d3(2): XOR EAX,EAX
0001e3d5(1): PUSH RBX
0001e3d6(4): MOV RBP,qword ptr [RDI + 0x20]
0001e3da(3): MOV RBX,RDI
0001e3dd(3): MOV R12,qword ptr [RDI]
0001e3e0(4): LEA RDI,[RBP + 0x8]
0001e3e4(3): MOV RCX,RBP
0001e3e7(8): MOV qword ptr [RBP],0x0
0001e3ef(11): MOV qword ptr [0xf8 + RBP],0x0
0001e3fa(4): AND RDI,-0x8
0001e3fe(3): SUB RCX,RDI
0001e401(6): ADD ECX,0x100
0001e407(3): SHR ECX,0x3
0001e40a(3): STOSQ.REP RDI
0001e40d(3): MOV RCX,RBP
0001e410(3): MOV RDI,RBX
0001e413(5): MOV RSI,qword ptr [R12 + 0x48]
0001e418(4): LEA RDX,[RSI + 0x18]
0001e41c(4): ADD RSI,0x10
0001e420(5): CALL 0x00016920
0001e425(5): MOV RAX,qword ptr [R12 + 0x50]
0001e42a(5): CMP qword ptr [R12 + 0x48],RAX
0001e42f(2): JZ 0x0001e449
0001e431(4): LEA RDX,[RAX + 0x18]
0001e435(4): LEA RSI,[RAX + 0x10]
0001e439(3): MOV RCX,RBP
0001e43c(3): MOV RDI,RBX
0001e43f(5): CALL 0x00016920
0001e444(5): MOV RAX,qword ptr [R12 + 0x48]
0001e449(5): MOV RSI,qword ptr [R12 + 0x58]
0001e44e(3): CMP RSI,RAX
0001e451(2): JZ 0x0001e46b
0001e453(4): LEA RDX,[RSI + 0x18]
0001e457(3): MOV RCX,RBP
0001e45a(4): ADD RSI,0x10
0001e45e(3): MOV RDI,RBX
0001e461(5): CALL 0x00016920
0001e466(5): MOV RAX,qword ptr [R12 + 0x48]
0001e46b(5): MOV RSI,qword ptr [R12 + 0x60]
0001e470(3): CMP RSI,RAX
0001e473(2): JZ 0x0001e488
0001e475(4): LEA RDX,[RSI + 0x18]
0001e479(3): MOV RCX,RBP
0001e47c(4): ADD RSI,0x10
0001e480(3): MOV RDI,RBX
0001e483(5): CALL 0x00016920
0001e488(4): OR byte ptr [RBX + 0x38],0x8
0001e48c(2): XOR EAX,EAX
0001e48e(1): POP RBX
0001e48f(1): POP RBP
0001e490(2): POP R12
0001e492(1): RET
0001e4a0(2): PUSH R15
0001e4a2(2): PUSH R14
0001e4a4(3): MOV RAX,R8
0001e4a7(2): PUSH R13
0001e4a9(2): PUSH R12
0001e4ab(3): ADD R8,RCX
0001e4ae(1): PUSH RBP
0001e4af(1): PUSH RBX
0001e4b0(4): SUB RSP,0x38
0001e4b4(3): TEST RCX,RCX
0001e4b7(4): MOV EBX,dword ptr [RSP + 0x78]
0001e4bb(5): MOV R12,qword ptr [RSP + 0x70]
0001e4c0(4): MOV dword ptr [RSP + 0x28],EBX
0001e4c4(6): JS 0x0001e800
0001e4ca(3): CMP RCX,RDX
0001e4cd(6): JG 0x0001e800
0001e4d3(3): CMP R8,RDX
0001e4d6(3): MOV RBX,RCX
0001e4d9(3): MOV R15,RDI
0001e4dc(6): JG 0x0001e760
0001e4e2(3): TEST RAX,RAX
0001e4e5(2): JS 0x0001e4f0
0001e4e7(3): CMP RCX,R8
0001e4ea(6): JG 0x0001e760
0001e4f0(3): TEST R8,R8
0001e4f3(6): JS 0x0001e7d8
0001e4f9(3): TEST RAX,RAX
0001e4fc(2): JNS 0x0001e507
0001e4fe(3): CMP RBX,R8
0001e501(6): JLE 0x0001e7d8
0001e507(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001e50c(3): MOV R13D,EAX
0001e50f(4): SHR R13B,0x5
0001e513(3): MOV EDI,R13D
0001e516(3): AND EDI,0x3
0001e519(3): CMP R8,RBX
0001e51c(4): MOV dword ptr [RSP + 0x2c],EDI
0001e520(2): JLE 0x0001e531
0001e522(5): CMP qword ptr [R15 + 0x20],0x0
0001e527(2): JZ 0x0001e531
0001e529(2): TEST AL,0x8
0001e52b(6): JZ 0x0001e720
0001e531(2): TEST AL,0x10
0001e533(6): JNZ 0x0001e700
0001e539(3): TEST R12,R12
0001e53c(6): JZ 0x0001e700
0001e542(3): AND EAX,0x6
0001e545(4): MOV RCX,qword ptr [R15 + 0x30]
0001e549(2): CMP AL,0x4
0001e54b(6): JZ 0x0001e6e0
0001e551(4): LEA R14,[RCX + 0x1]
0001e555(3): MOV R13,R14
0001e558(3): MOV RDI,R14
0001e55b(4): SHL RDI,0x4
0001e55f(5): MOV qword ptr [RSP + 0x20],R9
0001e564(5): MOV qword ptr [RSP + 0x18],RDX
0001e569(5): MOV qword ptr [RSP + 0x10],RSI
0001e56e(5): MOV qword ptr [RSP + 0x8],R8
0001e573(5): CALL 0x00002780
0001e578(3): TEST RAX,RAX
0001e57b(3): MOV RBP,RAX
0001e57e(6): JZ 0x0001e810
0001e584(4): SUB RSP,0x8
0001e588(3): MOV RCX,RBX
0001e58b(3): MOV RDI,R15
0001e58e(4): MOV EAX,dword ptr [RSP + 0x34]
0001e592(1): PUSH RAX
0001e593(1): PUSH RBP
0001e594(2): PUSH R14
0001e596(5): MOV R9,qword ptr [RSP + 0x40]
0001e59b(5): MOV R8,qword ptr [RSP + 0x28]
0001e5a0(5): MOV RDX,qword ptr [RSP + 0x38]
0001e5a5(5): MOV RSI,qword ptr [RSP + 0x30]
0001e5aa(5): CALL 0x000190c0
0001e5af(4): ADD RSP,0x20
0001e5b3(2): TEST EAX,EAX
0001e5b5(2): JZ 0x0001e5e8
0001e5b7(3): CMP EAX,0x1
0001e5ba(7): MOV R12,-0x1
0001e5c1(2): JZ 0x0001e5ca
0001e5c3(7): MOV R12,-0x2
0001e5ca(3): MOV RDI,RBP
0001e5cd(5): CALL 0x00002a10
0001e5d2(4): ADD RSP,0x38
0001e5d6(3): MOV RAX,R12
0001e5d9(1): POP RBX
0001e5da(1): POP RBP
0001e5db(2): POP R12
0001e5dd(2): POP R13
0001e5df(2): POP R14
0001e5e1(2): POP R15
0001e5e3(1): RET
0001e5e8(3): TEST R12,R12
0001e5eb(6): JZ 0x0001e6b8
0001e5f1(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001e5f6(4): LEA RDX,[R13 + 0x1]
0001e5fa(2): SHR AL,1
0001e5fc(3): AND EAX,0x3
0001e5ff(6): JZ 0x0001e770
0001e605(3): CMP EAX,0x1
0001e608(6): JZ 0x0001e820
0001e60e(3): CMP EAX,0x2
0001e611(6): JNZ 0x0001e900
0001e617(4): CMP R14,qword ptr [R12]
0001e61b(6): JA 0x0001e8e1
0001e621(6): MOV R9D,0x2
0001e627(3): TEST R13,R13
0001e62a(6): JLE 0x0001e898
0001e630(5): MOV R8,qword ptr [R12 + 0x8]
0001e635(5): MOV RDI,qword ptr [R12 + 0x10]
0001e63a(8): LEA RSI,[R13*0x8]
0001e642(3): MOV RDX,R13
0001e645(2): XOR EAX,EAX
0001e647(9): NOP word ptr [RAX + RAX*0x1]
0001e650(5): MOV RCX,qword ptr [RBP + RAX*0x2]
0001e655(4): MOV qword ptr [R8 + RAX*0x1],RCX
0001e659(5): MOV RCX,qword ptr [RBP + RAX*0x2 + 0x8]
0001e65e(4): MOV qword ptr [RDI + RAX*0x1],RCX
0001e662(4): ADD RAX,0x8
0001e666(3): CMP RSI,RAX
0001e669(2): JNZ 0x0001e650
0001e66b(4): CMP qword ptr [R12],RDX
0001e66f(2): JBE 0x0001e69d
0001e671(5): MOV RSI,qword ptr [R12 + 0x10]
0001e676(5): MOV RCX,qword ptr [R12 + 0x8]
0001e67b(7): MOV RAX,-0x1
0001e682(6): NOP word ptr [RAX + RAX*0x1]
0001e688(4): MOV qword ptr [RSI + RDX*0x8],RAX
0001e68c(4): ADD R13,0x1
0001e690(4): MOV qword ptr [RCX + RDX*0x8],RAX
0001e694(4): CMP R13,qword ptr [R12]
0001e698(3): MOV RDX,R13
0001e69b(2): JC 0x0001e688
0001e69d(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001e6a2(4): LEA R13D,[R9 + R9*0x1]
0001e6a6(3): AND EAX,0xfffffff9
0001e6a9(3): OR EAX,R13D
0001e6ac(2): TEST AL,0x6
0001e6ae(4): MOV byte ptr [R15 + 0x38],AL
0001e6b2(6): JZ 0x0001e5c3
0001e6b8(5): CMP byte ptr [RSP + 0x28],0x0
0001e6bd(4): MOV R12,qword ptr [RBP]
0001e6c1(6): JZ 0x0001e5ca
0001e6c7(3): CMP R12,RBX
0001e6ca(6): JNZ 0x0001e8c2
0001e6d0(4): MOV R12,qword ptr [RBP + 0x8]
0001e6d4(3): SUB R12,RBX
0001e6d7(5): JMP 0x0001e5ca
0001e6e0(4): MOV R14,qword ptr [R12]
0001e6e4(3): CMP R14,RCX
0001e6e7(6): JA 0x0001e551
0001e6ed(3): TEST R14,R14
0001e6f0(3): MOV R13,R14
0001e6f3(6): JG 0x0001e558
0001e6f9(7): NOP dword ptr [RAX]
0001e700(5): MOV EDI,0x10
0001e705(6): MOV R14D,0x1
0001e70b(6): MOV R13D,0x1
0001e711(3): XOR R12D,R12D
0001e714(5): JMP 0x0001e55f
0001e720(3): MOV RDI,R15
0001e723(5): MOV qword ptr [RSP + 0x20],R9
0001e728(5): MOV qword ptr [RSP + 0x18],RDX
0001e72d(5): MOV qword ptr [RSP + 0x10],RSI
0001e732(5): MOV qword ptr [RSP + 0x8],R8
0001e737(5): CALL 0x0001e3d0
0001e73c(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001e741(5): MOV R9,qword ptr [RSP + 0x20]
0001e746(5): MOV RDX,qword ptr [RSP + 0x18]
0001e74b(5): MOV RSI,qword ptr [RSP + 0x10]
0001e750(5): MOV R8,qword ptr [RSP + 0x8]
0001e755(5): JMP 0x0001e531
0001e760(3): MOV R8,RDX
0001e763(5): JMP 0x0001e507
0001e770(8): LEA R14,[RDX*0x8]
0001e778(5): MOV qword ptr [RSP + 0x8],RDX
0001e77d(3): MOV RDI,R14
0001e780(5): CALL 0x00002780
0001e785(3): TEST RAX,RAX
0001e788(5): MOV qword ptr [R12 + 0x8],RAX
0001e78d(5): MOV RDX,qword ptr [RSP + 0x8]
0001e792(6): JZ 0x0001e8aa
0001e798(3): MOV RDI,R14
0001e79b(5): MOV qword ptr [RSP + 0x8],RDX
0001e7a0(5): MOV qword ptr [RSP + 0x10],RAX
0001e7a5(5): CALL 0x00002780
0001e7aa(3): TEST RAX,RAX
0001e7ad(5): MOV qword ptr [R12 + 0x10],RAX
0001e7b2(5): MOV RDX,qword ptr [RSP + 0x8]
0001e7b7(5): MOV RCX,qword ptr [RSP + 0x10]
0001e7bc(6): JZ 0x0001e8a2
0001e7c2(4): MOV qword ptr [R12],RDX
0001e7c6(6): MOV R9D,0x1
0001e7cc(5): JMP 0x0001e627
0001e7d8(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001e7dd(3): XOR R8D,R8D
0001e7e0(3): MOV R13D,EAX
0001e7e3(4): SHR R13B,0x5
0001e7e7(3): MOV EDI,R13D
0001e7ea(3): AND EDI,0x3
0001e7ed(4): MOV dword ptr [RSP + 0x2c],EDI
0001e7f1(5): JMP 0x0001e531
0001e800(7): MOV R12,-0x1
0001e807(5): JMP 0x0001e5d2
0001e810(7): MOV R12,-0x2
0001e817(5): JMP 0x0001e5d2
0001e820(4): CMP qword ptr [R12],RDX
0001e824(6): MOV R9D,0x1
0001e82a(6): JNC 0x0001e627
0001e830(8): LEA RCX,[RDX*0x8]
0001e838(5): MOV RDI,qword ptr [R12 + 0x8]
0001e83d(5): MOV byte ptr [RSP + 0x18],R9B
0001e842(5): MOV qword ptr [RSP + 0x10],RDX
0001e847(3): MOV RSI,RCX
0001e84a(5): MOV qword ptr [RSP + 0x8],RCX
0001e84f(5): CALL 0x00002830
0001e854(3): TEST RAX,RAX
0001e857(3): MOV R14,RAX
0001e85a(2): JZ 0x0001e8aa
0001e85c(5): MOV RCX,qword ptr [RSP + 0x8]
0001e861(5): MOV RDI,qword ptr [R12 + 0x10]
0001e866(3): MOV RSI,RCX
0001e869(5): CALL 0x00002830
0001e86e(3): TEST RAX,RAX
0001e871(5): MOV RDX,qword ptr [RSP + 0x10]
0001e876(6): MOVZX R9D,byte ptr [RSP + 0x18]
0001e87c(2): JZ 0x0001e8b2
0001e87e(5): MOV qword ptr [R12 + 0x8],R14
0001e883(5): MOV qword ptr [R12 + 0x10],RAX
0001e888(4): MOV qword ptr [R12],RDX
0001e88c(5): JMP 0x0001e627
0001e898(2): XOR EDX,EDX
0001e89a(3): XOR R13D,R13D
0001e89d(5): JMP 0x0001e66b
0001e8a2(3): MOV RDI,RCX
0001e8a5(5): CALL 0x00002a10
0001e8aa(3): XOR R9D,R9D
0001e8ad(5): JMP 0x0001e69d
0001e8b2(3): MOV RDI,R14
0001e8b5(5): CALL 0x00002a10
0001e8ba(3): XOR R9D,R9D
0001e8bd(5): JMP 0x0001e69d
0001e8c2(7): LEA RCX,[0x22d50]
0001e8c9(7): LEA RSI,[0x227a0]
0001e8d0(7): LEA RDI,[0x228c1]
0001e8d7(5): MOV EDX,0x1be
0001e8dc(5): CALL 0x00002600
0001e8e1(7): LEA RCX,[0x22d40]
0001e8e8(7): LEA RSI,[0x227a0]
0001e8ef(7): LEA RDI,[0x228a9]
0001e8f6(5): MOV EDX,0x1fb
0001e8fb(5): CALL 0x00002600
0001e900(7): LEA RCX,[0x22d40]
0001e907(7): LEA RSI,[0x227a0]
0001e90e(7): LEA RDI,[0x2288c]
0001e915(5): MOV EDX,0x1f9
0001e91a(5): CALL 0x00002600
0001e91f(1): NOP
0001e920(2): PUSH R15
0001e922(2): PUSH R14
0001e924(2): PUSH R13
0001e926(2): PUSH R12
0001e928(3): MOV R12,RDI
0001e92b(1): PUSH RBP
0001e92c(1): PUSH RBX
0001e92d(3): MOV RBP,R8
0001e930(3): MOV RBX,RDX
0001e933(3): MOV RDX,RBP
0001e936(4): SUB RSP,0x28
0001e93a(4): SHR RDX,0x3f
0001e93e(5): MOV RAX,qword ptr [RSP + 0x70]
0001e943(2): MOV EDI,EDX
0001e945(5): MOV R8D,dword ptr [RSP + 0x78]
0001e94a(4): SHR RAX,0x3f
0001e94e(3): OR DIL,AL
0001e951(6): JNZ 0x0001ea20
0001e957(3): TEST RBX,RBX
0001e95a(6): JS 0x0001ea20
0001e960(3): MOV R15,RBX
0001e963(3): ADD R15,RBP
0001e966(6): JO 0x0001ea20
0001e96c(3): TEST RBP,RBP
0001e96f(3): MOV R14,RCX
0001e972(3): MOV RCX,R9
0001e975(6): JZ 0x0001ea30
0001e97b(3): XOR R13D,R13D
0001e97e(3): TEST RBX,RBX
0001e981(5): MOV qword ptr [RSP + 0x8],RSI
0001e986(2): JNZ 0x0001e9d0
0001e988(4): MOVZX R8D,R8B
0001e98c(3): MOV RDX,R15
0001e98f(3): MOV RSI,R14
0001e992(2): PUSH R8
0001e994(4): PUSH qword ptr [RSP + 0x70]
0001e998(3): MOV RDI,R12
0001e99b(8): MOV R9,qword ptr [0x80 + RSP]
0001e9a3(5): MOV R8,qword ptr [RSP + 0x70]
0001e9a8(5): CALL 0x0001e4a0
0001e9ad(3): MOV RDI,R13
0001e9b0(3): MOV RBX,RAX
0001e9b3(5): CALL 0x00002a10
0001e9b8(1): POP RAX
0001e9b9(1): POP RDX
0001e9ba(4): ADD RSP,0x28
0001e9be(3): MOV RAX,RBX
0001e9c1(1): POP RBX
0001e9c2(1): POP RBP
0001e9c3(2): POP R12
0001e9c5(2): POP R13
0001e9c7(2): POP R14
0001e9c9(2): POP R15
0001e9cb(1): RET
0001e9d0(3): MOV RDI,R15
0001e9d3(5): MOV dword ptr [RSP + 0x1c],R8D
0001e9d8(5): MOV qword ptr [RSP + 0x10],R9
0001e9dd(5): CALL 0x00002780
0001e9e2(3): TEST RAX,RAX
0001e9e5(3): MOV R13,RAX
0001e9e8(2): JZ 0x0001ea20
0001e9ea(5): MOV RSI,qword ptr [RSP + 0x8]
0001e9ef(3): MOV RDX,RBX
0001e9f2(3): MOV RDI,RAX
0001e9f5(5): CALL 0x00002710
0001e9fa(5): LEA RDI,[R13 + RBX*0x1]
0001e9ff(3): MOV RSI,R14
0001ea02(3): MOV RDX,RBP
0001ea05(3): MOV R14,R13
0001ea08(5): CALL 0x00002710
0001ea0d(5): MOV RCX,qword ptr [RSP + 0x10]
0001ea12(5): MOV R8D,dword ptr [RSP + 0x1c]
0001ea17(5): JMP 0x0001e988
0001ea20(7): MOV RBX,-0x2
0001ea27(2): JMP 0x0001e9ba
0001ea30(3): MOV R14,RSI
0001ea33(3): XOR R13D,R13D
0001ea36(5): JMP 0x0001e988
0001ea40(2): MOV EAX,EDX
0001ea42(2): PUSH R14
0001ea44(2): PUSH R13
0001ea46(3): AND EAX,0x1
0001ea49(2): PUSH R12
0001ea4b(1): PUSH RBP
0001ea4c(3): CMP EAX,0x1
0001ea4f(1): PUSH RBX
0001ea50(3): MOV RBX,RDI
0001ea53(3): SBB R14,R14
0001ea56(7): MOV qword ptr [RDI],0x0
0001ea5d(8): MOV qword ptr [RDI + 0x8],0x0
0001ea65(7): AND R14D,0xfd4fca
0001ea6c(8): MOV qword ptr [RDI + 0x10],0x0
0001ea74(5): MOV EDI,0x100
0001ea79(3): MOV R12,RSI
0001ea7c(2): MOV EBP,EDX
0001ea7e(7): ADD R14,0x3b2fc
0001ea85(5): CALL 0x00002780
0001ea8a(3): TEST RAX,RAX
0001ea8d(4): MOV qword ptr [RBX + 0x20],RAX
0001ea91(6): JZ 0x0001eb40
0001ea97(3): MOV R13,RBP
0001ea9a(4): SHL R13,0x15
0001ea9e(7): AND R13D,0x400000
0001eaa5(3): OR R13,R14
0001eaa8(4): TEST BPL,0x4
0001eaac(2): JNZ 0x0001eb10
0001eaae(4): AND byte ptr [RBX + 0x38],0x7f
0001eab2(4): MOVZX EDX,byte ptr [RBX + 0x38]
0001eab6(3): SHR EBP,0x3
0001eab9(3): MOV RDI,R12
0001eabc(3): AND EBP,0x1
0001eabf(8): MOV qword ptr [RBX + 0x28],0x0
0001eac7(3): SHL EBP,0x4
0001eaca(3): AND EDX,0xffffffef
0001eacd(2): OR EBP,EDX
0001eacf(4): MOV byte ptr [RBX + 0x38],BPL
0001ead3(5): CALL 0x00002530
0001ead8(3): MOV RCX,R13
0001eadb(3): MOV RDX,RAX
0001eade(3): MOV RSI,R12
0001eae1(3): MOV RDI,RBX
0001eae4(5): CALL 0x0001d250
0001eae9(3): CMP EAX,0x10
0001eaec(2): MOV EBP,EAX
0001eaee(2): JZ 0x0001eb28
0001eaf0(2): TEST EAX,EAX
0001eaf2(2): JNZ 0x0001eb2d
0001eaf4(3): MOV RDI,RBX
0001eaf7(5): CALL 0x0001e3d0
0001eafc(1): POP RBX
0001eafd(2): MOV EAX,EBP
0001eaff(1): POP RBP
0001eb00(2): POP R12
0001eb02(2): POP R13
0001eb04(2): POP R14
0001eb06(1): RET
0001eb10(4): AND R13,-0x41
0001eb14(4): OR byte ptr [RBX + 0x38],0x80
0001eb18(7): OR R13,0x100
0001eb1f(2): JMP 0x0001eab2
0001eb28(5): MOV EBP,0x8
0001eb2d(4): MOV RDI,qword ptr [RBX + 0x20]
0001eb31(5): CALL 0x00002a10
0001eb36(8): MOV qword ptr [RBX + 0x20],0x0
0001eb3e(2): JMP 0x0001eafc
0001eb40(5): MOV EBP,0xc
0001eb45(1): POP RBX
0001eb46(2): MOV EAX,EBP
0001eb48(1): POP RBP
0001eb49(2): POP R12
0001eb4b(2): POP R13
0001eb4d(2): POP R14
0001eb4f(1): RET
0001eb50(2): PUSH R13
0001eb52(2): PUSH R12
0001eb54(1): PUSH RBP
0001eb55(1): PUSH RBX
0001eb56(4): SUB RSP,0x8
0001eb5a(3): CMP EDI,0x10
0001eb5d(2): JA 0x0001ebc0
0001eb5f(7): LEA RAX,[0x22de0]
0001eb66(3): MOVSXD RDI,EDI
0001eb69(7): LEA RSI,[0x22e80]
0001eb70(3): MOV RBP,RDX
0001eb73(5): MOV EDX,0x5
0001eb78(3): MOV R12,RCX
0001eb7b(4): ADD RSI,qword ptr [RAX + RDI*0x8]
0001eb7f(2): XOR EDI,EDI
0001eb81(5): CALL 0x00002510
0001eb86(3): MOV RDI,RAX
0001eb89(3): MOV R13,RAX
0001eb8c(5): CALL 0x00002530
0001eb91(3): TEST R12,R12
0001eb94(4): LEA RBX,[RAX + 0x1]
0001eb98(2): JZ 0x0001ebad
0001eb9a(3): CMP RBX,R12
0001eb9d(3): MOV RDX,RBX
0001eba0(2): JA 0x0001ebc8
0001eba2(3): MOV RSI,R13
0001eba5(3): MOV RDI,RBP
0001eba8(5): CALL 0x00002710
0001ebad(4): ADD RSP,0x8
0001ebb1(3): MOV RAX,RBX
0001ebb4(1): POP RBX
0001ebb5(1): POP RBP
0001ebb6(2): POP R12
0001ebb8(2): POP R13
0001ebba(1): RET
0001ebc0(5): CALL 0x00002400
0001ebc5(3): NOP dword ptr [RAX]
0001ebc8(5): LEA RDX,[R12 + -0x1]
0001ebcd(6): MOV byte ptr [RBP + R12*0x1 + -0x1],0x0
0001ebd3(2): JMP 0x0001eba2
0001ebe0(1): PUSH RBX
0001ebe1(3): MOV RBX,RDI
0001ebe4(3): MOV RDI,qword ptr [RDI]
0001ebe7(3): TEST RDI,RDI
0001ebea(2): JZ 0x0001ebf1
0001ebec(5): CALL 0x000123d0
0001ebf1(4): MOV RDI,qword ptr [RBX + 0x20]
0001ebf5(7): MOV qword ptr [RBX],0x0
0001ebfc(8): MOV qword ptr [RBX + 0x8],0x0
0001ec04(5): CALL 0x00002a10
0001ec09(4): MOV RDI,qword ptr [RBX + 0x28]
0001ec0d(8): MOV qword ptr [RBX + 0x20],0x0
0001ec15(5): CALL 0x00002a10
0001ec1a(8): MOV qword ptr [RBX + 0x28],0x0
0001ec22(1): POP RBX
0001ec23(1): RET
0001ec30(7): TEST R8D,0xfffffff8
0001ec37(6): JNZ 0x0001ecc8
0001ec3d(2): PUSH R13
0001ec3f(2): PUSH R12
0001ec41(3): MOV R13,RDX
0001ec44(1): PUSH RBP
0001ec45(1): PUSH RBX
0001ec46(3): MOV R12,RCX
0001ec49(3): MOV EBX,R8D
0001ec4c(3): MOV RBP,RDI
0001ec4f(4): SUB RSP,0x18
0001ec53(4): TEST R8B,0x4
0001ec57(2): JNZ 0x0001eca8
0001ec59(3): MOV RDI,RSI
0001ec5c(5): MOV qword ptr [RSP + 0x8],RSI
0001ec61(5): CALL 0x00002530
0001ec66(2): XOR ECX,ECX
0001ec68(4): TEST byte ptr [RBP + 0x38],0x10
0001ec6c(3): MOV RDX,RAX
0001ec6f(5): MOV RSI,qword ptr [RSP + 0x8]
0001ec74(2): JZ 0x0001ecb6
0001ec76(4): SUB RSP,0x8
0001ec7a(1): PUSH RBX
0001ec7b(2): PUSH 0x0
0001ec7d(2): PUSH 0x0
0001ec7f(3): MOV RDI,RBP
0001ec82(3): MOV R9,RDX
0001ec85(3): MOV R8,RDX
0001ec88(5): CALL 0x000190c0
0001ec8d(4): ADD RSP,0x20
0001ec91(2): TEST EAX,EAX
0001ec93(3): SETNZ AL
0001ec96(4): ADD RSP,0x18
0001ec9a(1): POP RBX
0001ec9b(3): MOVZX EAX,AL
0001ec9e(1): POP RBP
0001ec9f(2): POP R12
0001eca1(2): POP R13
0001eca3(1): RET
0001eca8(4): TEST byte ptr [RBP + 0x38],0x10
0001ecac(3): MOV RCX,qword ptr [RCX]
0001ecaf(5): MOV RDX,qword ptr [R12 + 0x8]
0001ecb4(2): JNZ 0x0001ec76
0001ecb6(4): SUB RSP,0x8
0001ecba(1): PUSH RBX
0001ecbb(2): PUSH R12
0001ecbd(2): PUSH R13
0001ecbf(2): JMP 0x0001ec7f
0001ecc8(5): MOV EAX,0x2
0001eccd(1): RET
0001ecd0(4): SUB RSP,0x8
0001ecd4(3): MOV R9,RDX
0001ecd7(2): PUSH 0x1
0001ecd9(2): PUSH R8
0001ecdb(3): XOR R8D,R8D
0001ecde(5): CALL 0x0001e4a0
0001ece3(4): ADD RSP,0x18
0001ece7(1): RET
0001ecf0(4): SUB RSP,0x8
0001ecf4(2): PUSH 0x0
0001ecf6(2): PUSH R9
0001ecf8(3): MOV R9,RDX
0001ecfb(5): CALL 0x0001e4a0
0001ed00(4): ADD RSP,0x18
0001ed04(1): RET
0001ed10(4): SUB RSP,0x8
0001ed14(2): PUSH 0x1
0001ed16(4): PUSH qword ptr [RSP + 0x20]
0001ed1a(4): PUSH qword ptr [RSP + 0x20]
0001ed1e(2): PUSH 0x0
0001ed20(5): CALL 0x0001e920
0001ed25(4): ADD RSP,0x28
0001ed29(1): RET
0001ed30(4): SUB RSP,0x8
0001ed34(2): PUSH 0x0
0001ed36(4): PUSH qword ptr [RSP + 0x28]
0001ed3a(4): PUSH qword ptr [RSP + 0x28]
0001ed3e(4): PUSH qword ptr [RSP + 0x28]
0001ed42(5): CALL 0x0001e920
0001ed47(4): ADD RSP,0x28
0001ed4b(1): RET
0001ed50(3): TEST RDX,RDX
0001ed53(2): JNZ 0x0001ed78
0001ed55(4): AND byte ptr [RDI + 0x38],0xf9
0001ed59(7): MOV qword ptr [RSI],0x0
0001ed60(8): MOV qword ptr [RSI + 0x10],0x0
0001ed68(8): MOV qword ptr [RSI + 0x8],0x0
0001ed70(1): RET
0001ed78(4): MOVZX EAX,byte ptr [RDI + 0x38]
0001ed7c(3): AND EAX,0xfffffff9
0001ed7f(3): OR EAX,0x2
0001ed82(3): MOV byte ptr [RDI + 0x38],AL
0001ed85(3): MOV qword ptr [RSI],RDX
0001ed88(4): MOV qword ptr [RSI + 0x8],RCX
0001ed8c(4): MOV qword ptr [RSI + 0x10],R8
0001ed90(1): RET
0001eda0(3): TEST RDI,RDI
0001eda3(2): JZ 0x0001edc0
0001eda5(3): MOV RSI,RDI
0001eda8(7): LEA RDI,[0x1fba7]
0001edaf(5): MOV EDX,0x1
0001edb4(5): JMP 0x000024b0
0001edc0(7): LEA RDI,[0x1fba7]
0001edc7(5): JMP 0x00002900
0001edd0(3): TEST RDI,RDI
0001edd3(2): JZ 0x0001edf8
0001edd5(1): PUSH RBX
0001edd6(10): NOP word ptr CS:[RAX + RAX*0x1]
0001ede0(3): MOV RBX,qword ptr [RDI]
0001ede3(5): CALL 0x00002a10
0001ede8(3): TEST RBX,RBX
0001edeb(3): MOV RDI,RBX
0001edee(2): JNZ 0x0001ede0
0001edf0(1): POP RBX
0001edf1(1): RET
0001edf8(2): RET
0001ee00(2): PUSH R13
0001ee02(2): PUSH R12
0001ee04(1): PUSH RBP
0001ee05(1): PUSH RBX
0001ee06(3): MOV RBP,RDI
0001ee09(4): SUB RSP,0x8
0001ee0d(5): CALL 0x00002410
0001ee12(4): CMP byte ptr [RBP + 0x8],0x0
0001ee16(3): MOV RBX,RAX
0001ee19(3): MOV R12D,dword ptr [RAX]
0001ee1c(4): LEA RDI,[RBP + 0x9]
0001ee20(2): JNZ 0x0001ee24
0001ee22(2): XOR EDI,EDI
0001ee24(5): CALL 0x0001eda0
0001ee29(2): TEST EAX,EAX
0001ee2b(2): JZ 0x0001ee50
0001ee2d(3): MOV R12D,dword ptr [RBX]
0001ee30(3): XOR R13D,R13D
0001ee33(3): MOV RDI,RBP
0001ee36(5): CALL 0x0001edd0
0001ee3b(3): MOV dword ptr [RBX],R12D
0001ee3e(4): ADD RSP,0x8
0001ee42(3): MOV EAX,R13D
0001ee45(1): POP RBX
0001ee46(1): POP RBP
0001ee47(2): POP R12
0001ee49(2): POP R13
0001ee4b(1): RET
0001ee50(5): CALL 0x00002720
0001ee55(6): MOV R13D,0x1
0001ee5b(2): JMP 0x0001ee33
0001ee60(3): TEST RDI,RDI
0001ee63(2): PUSH R12
0001ee65(1): PUSH RBP
0001ee66(1): PUSH RBX
0001ee67(2): JZ 0x0001eec8
0001ee69(3): MOV R12,RDI
0001ee6c(5): CALL 0x00002530
0001ee71(4): LEA RBP,[RAX + 0x1]
0001ee75(5): MOV EDI,0x76
0001ee7a(4): CMP RBP,0x76
0001ee7e(4): CMOVNC RDI,RBP
0001ee82(4): ADD RDI,0x11
0001ee86(4): AND RDI,-0x8
0001ee8a(5): CALL 0x00002780
0001ee8f(3): TEST RAX,RAX
0001ee92(3): MOV RBX,RAX
0001ee95(2): JZ 0x0001eebb
0001ee97(7): MOV qword ptr [RAX],0x0
0001ee9e(4): LEA RDI,[RBX + 0x9]
0001eea2(5): MOV EAX,0x1
0001eea7(4): MOV word ptr [RBX + 0x8],AX
0001eeab(3): MOV RDX,RBP
0001eeae(3): MOV RSI,R12
0001eeb1(5): CALL 0x00002710
0001eeb6(5): MOV byte ptr [RBX + RBP*0x1 + 0x9],0x0
0001eebb(3): MOV RAX,RBX
0001eebe(1): POP RBX
0001eebf(1): POP RBP
0001eec0(2): POP R12
0001eec2(1): RET
0001eec8(5): MOV EDI,0x80
0001eecd(5): CALL 0x00002780
0001eed2(3): TEST RAX,RAX
0001eed5(3): MOV RBX,RAX
0001eed8(2): JZ 0x0001eebb
0001eeda(2): XOR EDX,EDX
0001eedc(7): MOV qword ptr [RBX],0x0
0001eee3(3): MOV RAX,RBX
0001eee6(4): MOV word ptr [RBX + 0x8],DX
0001eeea(1): POP RBX
0001eeeb(1): POP RBP
0001eeec(2): POP R12
0001eeee(1): RET
0001eef0(2): PUSH R15
0001eef2(2): PUSH R14
0001eef4(5): MOV EAX,0x1
0001eef9(2): PUSH R13
0001eefb(2): PUSH R12
0001eefd(1): PUSH RBP
0001eefe(1): PUSH RBX
0001eeff(4): SUB RSP,0x8
0001ef03(4): MOV RBP,qword ptr [RSI + 0x30]
0001ef07(3): TEST RBP,RBP
0001ef0a(6): JZ 0x0001efa0
0001ef10(3): CMP RSI,RBP
0001ef13(3): MOV R12,RDI
0001ef16(3): MOV R13,RSI
0001ef19(2): JA 0x0001ef24
0001ef1b(4): LEA RDX,[RSI + 0x38]
0001ef1f(3): CMP RBP,RDX
0001ef22(2): JC 0x0001efa0
0001ef24(4): CMP byte ptr [RBP],0x0
0001ef28(5): LEA RBX,[R12 + 0x9]
0001ef2d(2): JZ 0x0001ef90
0001ef2f(1): NOP
0001ef30(3): MOV RSI,RBP
0001ef33(3): MOV RDI,RBX
0001ef36(5): CALL 0x000026d0
0001ef3b(2): TEST EAX,EAX
0001ef3d(2): JZ 0x0001ef97
0001ef3f(3): CMP byte ptr [RBX],0x0
0001ef42(2): JNZ 0x0001ef56
0001ef44(5): LEA R14,[R12 + 0x9]
0001ef49(3): CMP R14,RBX
0001ef4c(2): JNZ 0x0001efb0
0001ef4e(6): CMP byte ptr [R12 + 0x8],0x0
0001ef54(2): JZ 0x0001efb0
0001ef56(3): MOV RDI,RBX
0001ef59(5): CALL 0x00002530
0001ef5e(5): LEA RBX,[RBX + RAX*0x1 + 0x1]
0001ef63(3): CMP byte ptr [RBX],0x0
0001ef66(2): JNZ 0x0001ef30
0001ef68(4): MOV RAX,qword ptr [R12]
0001ef6c(3): TEST RAX,RAX
0001ef6f(2): JZ 0x0001ef30
0001ef71(4): LEA RBX,[RAX + 0x9]
0001ef75(3): MOV RSI,RBP
0001ef78(3): MOV R12,RAX
0001ef7b(3): MOV RDI,RBX
0001ef7e(5): CALL 0x000026d0
0001ef83(2): TEST EAX,EAX
0001ef85(2): JNZ 0x0001ef3f
0001ef87(2): JMP 0x0001ef97
0001ef90(7): LEA RBX,[0x21fe1]
0001ef97(4): MOV qword ptr [R13 + 0x30],RBX
0001ef9b(5): MOV EAX,0x1
0001efa0(4): ADD RSP,0x8
0001efa4(1): POP RBX
0001efa5(1): POP RBP
0001efa6(2): POP R12
0001efa8(2): POP R13
0001efaa(2): POP R14
0001efac(2): POP R15
0001efae(1): RET
0001efb0(3): MOV RDI,RBP
0001efb3(5): CALL 0x00002530
0001efb8(4): LEA RDX,[RAX + 0x1]
0001efbc(3): MOV R15,RAX
0001efbf(3): MOV RAX,RBX
0001efc2(3): SUB RAX,R14
0001efc5(3): MOV RCX,RAX
0001efc8(3): NOT RCX
0001efcb(3): CMP RCX,RDX
0001efce(2): JC 0x0001f000
0001efd0(3): ADD RAX,RDX
0001efd3(4): CMP RAX,0x76
0001efd7(2): JBE 0x0001f010
0001efd9(3): MOV RDI,RBP
0001efdc(5): CALL 0x0001ee60
0001efe1(3): MOV RBX,RAX
0001efe4(4): MOV qword ptr [R12],RAX
0001efe8(2): XOR EAX,EAX
0001efea(3): TEST RBX,RBX
0001efed(2): JZ 0x0001efa0
0001efef(4): MOV byte ptr [RBX + 0x8],0x0
0001eff3(4): ADD RBX,0x9
0001eff7(2): JMP 0x0001ef97
0001f000(5): CALL 0x00002410
0001f005(6): MOV dword ptr [RAX],0xc
0001f00b(2): XOR EAX,EAX
0001f00d(2): JMP 0x0001efa0
0001f010(3): MOV RSI,RBP
0001f013(3): MOV RDI,RBX
0001f016(5): CALL 0x00002710
0001f01b(6): MOV byte ptr [RBX + R15*0x1 + 0x1],0x0
0001f021(5): JMP 0x0001ef97
0001f030(2): PUSH R12
0001f032(1): PUSH RBP
0001f033(3): MOV RBP,RDI
0001f036(1): PUSH RBX
0001f037(7): LEA RDI,[0x1fba7]
0001f03e(4): SUB RSP,0x10
0001f042(5): CALL 0x000023e0
0001f047(3): TEST RAX,RAX
0001f04a(3): MOV RBX,RAX
0001f04d(6): JZ 0x0001f0e8
0001f053(4): CMP byte ptr [RBP + 0x8],0x0
0001f057(2): JNZ 0x0001f0c0
0001f059(3): MOV RDI,RBX
0001f05c(5): CALL 0x0001ee60
0001f061(3): TEST RAX,RAX
0001f064(3): MOV R12,RAX
0001f067(2): JZ 0x0001f0ad
0001f069(2): XOR EDI,EDI
0001f06b(4): CMP byte ptr [RBP + 0x8],0x0
0001f06f(2): JZ 0x0001f075
0001f071(4): LEA RDI,[RBP + 0x9]
0001f075(5): CALL 0x0001eda0
0001f07a(2): TEST EAX,EAX
0001f07c(6): JZ 0x0001f108
0001f082(5): CALL 0x00002410
0001f087(4): CMP R12,0x1
0001f08b(2): MOV EBX,dword ptr [RAX]
0001f08d(2): JZ 0x0001f0a8
0001f08f(3): MOV RDI,R12
0001f092(5): MOV qword ptr [RSP + 0x8],RAX
0001f097(5): CALL 0x0001edd0
0001f09c(5): MOV RAX,qword ptr [RSP + 0x8]
0001f0a1(7): NOP dword ptr [RAX]
0001f0a8(2): MOV dword ptr [RAX],EBX
0001f0aa(3): XOR R12D,R12D
0001f0ad(4): ADD RSP,0x10
0001f0b1(3): MOV RAX,R12
0001f0b4(1): POP RBX
0001f0b5(1): POP RBP
0001f0b6(2): POP R12
0001f0b8(1): RET
0001f0c0(4): LEA RDI,[RBP + 0x9]
0001f0c4(3): MOV RSI,RAX
0001f0c7(6): MOV R12D,0x1
0001f0cd(5): CALL 0x000026d0
0001f0d2(2): TEST EAX,EAX
0001f0d4(2): JNZ 0x0001f059
0001f0d6(4): ADD RSP,0x10
0001f0da(3): MOV RAX,R12
0001f0dd(1): POP RBX
0001f0de(1): POP RBP
0001f0df(2): POP R12
0001f0e1(1): RET
0001f0e8(4): CMP byte ptr [RBP + 0x8],0x0
0001f0ec(6): MOV R12D,0x1
0001f0f2(6): JNZ 0x0001f059
0001f0f8(4): ADD RSP,0x10
0001f0fc(3): MOV RAX,R12
0001f0ff(1): POP RBX
0001f100(1): POP RBP
0001f101(2): POP R12
0001f103(1): RET
0001f108(5): CALL 0x00002720
0001f10d(2): JMP 0x0001f0ad
0001f110(4): CMP RDI,0x1
0001f114(2): JZ 0x0001f11b
0001f116(5): JMP 0x0001edd0
0001f11b(1): RET
0001f120(2): PUSH R13
0001f122(2): PUSH R12
0001f124(1): PUSH RBP
0001f125(1): PUSH RBX
0001f126(3): MOV RBP,RSI
0001f129(4): SUB RSP,0x8
0001f12d(3): TEST RDI,RDI
0001f130(2): JZ 0x0001f1a0
0001f132(3): MOV R13,RDX
0001f135(3): MOV RBX,RDI
0001f138(5): CALL 0x0001f030
0001f13d(3): TEST RAX,RAX
0001f140(3): MOV R12,RAX
0001f143(2): JZ 0x0001f18e
0001f145(3): MOV RSI,R13
0001f148(3): MOV RDI,RBP
0001f14b(5): CALL 0x00002430
0001f150(3): TEST RAX,RAX
0001f153(2): JZ 0x0001f180
0001f155(3): MOV RSI,R13
0001f158(3): MOV RDI,RBX
0001f15b(5): CALL 0x0001eef0
0001f160(2): TEST AL,AL
0001f162(2): JZ 0x0001f180
0001f164(4): CMP R12,0x1
0001f168(2): JNZ 0x0001f1b5
0001f16a(4): ADD RSP,0x8
0001f16e(3): MOV RAX,R13
0001f171(1): POP RBX
0001f172(1): POP RBP
0001f173(2): POP R12
0001f175(2): POP R13
0001f177(1): RET
0001f180(4): CMP R12,0x1
0001f184(2): JZ 0x0001f18e
0001f186(3): MOV RDI,R12
0001f189(5): CALL 0x0001ee00
0001f18e(4): ADD RSP,0x8
0001f192(2): XOR EAX,EAX
0001f194(1): POP RBX
0001f195(1): POP RBP
0001f196(2): POP R12
0001f198(2): POP R13
0001f19a(1): RET
0001f1a0(4): ADD RSP,0x8
0001f1a4(3): MOV RDI,RBP
0001f1a7(3): MOV RSI,RDX
0001f1aa(1): POP RBX
0001f1ab(1): POP RBP
0001f1ac(2): POP R12
0001f1ae(2): POP R13
0001f1b0(5): JMP 0x000025e0
0001f1b5(3): MOV RDI,R12
0001f1b8(5): CALL 0x0001ee00
0001f1bd(2): TEST AL,AL
0001f1bf(2): JNZ 0x0001f16a
0001f1c1(2): JMP 0x0001f18e
0001f1d0(2): PUSH R12
0001f1d2(1): PUSH RBP
0001f1d3(1): PUSH RBX
0001f1d4(3): MOV RBX,RSI
0001f1d7(4): SUB RSP,0x50
0001f1db(9): MOV RAX,qword ptr FS:[0x28]
0001f1e4(5): MOV qword ptr [RSP + 0x48],RAX
0001f1e9(2): XOR EAX,EAX
0001f1eb(3): TEST RDI,RDI
0001f1ee(6): JZ 0x0001f2f0
0001f1f4(3): MOV RBP,RDI
0001f1f7(5): CALL 0x0001f030
0001f1fc(3): TEST RAX,RAX
0001f1ff(3): MOV R12,RAX
0001f202(6): JZ 0x0001f300
0001f208(3): MOV RDI,RBX
0001f20b(5): CALL 0x00002800
0001f210(4): CMP RAX,-0x1
0001f214(5): MOV qword ptr [RSP + 0x8],RAX
0001f219(2): JZ 0x0001f270
0001f21b(3): MOV RSI,RBX
0001f21e(3): MOV RDI,RBP
0001f221(5): CALL 0x0001eef0
0001f226(2): TEST AL,AL
0001f228(2): JNZ 0x0001f233
0001f22a(9): MOV qword ptr [RSP + 0x8],-0x1
0001f233(4): CMP R12,0x1
0001f237(2): JZ 0x0001f249
0001f239(3): MOV RDI,R12
0001f23c(5): CALL 0x0001ee00
0001f241(2): TEST AL,AL
0001f243(6): JZ 0x0001f300
0001f249(5): MOV RAX,qword ptr [RSP + 0x8]
0001f24e(5): MOV RCX,qword ptr [RSP + 0x48]
0001f253(9): XOR RCX,qword ptr FS:[0x28]
0001f25c(6): JNZ 0x0001f30c
0001f262(4): ADD RSP,0x50
0001f266(1): POP RBX
0001f267(1): POP RBP
0001f268(2): POP R12
0001f26a(1): RET
0001f270(5): LEA RSI,[RSP + 0x10]
0001f275(5): LEA RDI,[RSP + 0x8]
0001f27a(5): CALL 0x00002430
0001f27f(3): TEST RAX,RAX
0001f282(2): JZ 0x0001f233
0001f284(2): MOV EAX,dword ptr [RBX]
0001f286(3): MOV EDX,dword ptr [RBX + 0x4]
0001f289(4): XOR EAX,dword ptr [RSP + 0x10]
0001f28d(4): XOR EDX,dword ptr [RSP + 0x14]
0001f291(4): MOV ECX,dword ptr [RSP + 0x30]
0001f295(2): OR EAX,EDX
0001f297(3): MOV EDX,dword ptr [RBX + 0x8]
0001f29a(4): XOR EDX,dword ptr [RSP + 0x18]
0001f29e(2): OR EAX,EDX
0001f2a0(3): MOV EDX,dword ptr [RBX + 0xc]
0001f2a3(4): XOR EDX,dword ptr [RSP + 0x1c]
0001f2a7(2): OR EAX,EDX
0001f2a9(3): MOV EDX,dword ptr [RBX + 0x10]
0001f2ac(4): XOR EDX,dword ptr [RSP + 0x20]
0001f2b0(2): OR EAX,EDX
0001f2b2(3): MOV EDX,dword ptr [RBX + 0x14]
0001f2b5(4): XOR EDX,dword ptr [RSP + 0x24]
0001f2b9(2): OR EAX,EDX
0001f2bb(3): MOV EDX,dword ptr [RBX + 0x20]
0001f2be(2): TEST EDX,EDX
0001f2c0(4): SETZ DIL
0001f2c4(2): TEST ECX,ECX
0001f2c6(4): SETZ SIL
0001f2ca(3): CMP DIL,SIL
0001f2cd(2): JZ 0x0001f2db
0001f2cf(2): TEST EDX,EDX
0001f2d1(2): JS 0x0001f2db
0001f2d3(2): TEST ECX,ECX
0001f2d5(6): JNS 0x0001f233
0001f2db(2): TEST EAX,EAX
0001f2dd(6): JZ 0x0001f21b
0001f2e3(5): JMP 0x0001f233
0001f2f0(3): MOV RDI,RSI
0001f2f3(5): CALL 0x00002860
0001f2f8(5): JMP 0x0001f24e
0001f300(7): MOV RAX,-0x1
0001f307(5): JMP 0x0001f24e
0001f30c(5): CALL 0x00002560
0001f311(10): NOP word ptr CS:[RAX + RAX*0x1]
0001f31b(5): NOP dword ptr [RAX + RAX*0x1]
0001f320(2): PUSH R12
0001f322(1): PUSH RBP
0001f323(3): MOV RBP,RDI
0001f326(1): PUSH RBX
0001f327(5): CALL 0x00002460
0001f32c(3): MOV EBX,dword ptr [RBP]
0001f32f(3): MOV RDI,RBP
0001f332(3): MOV R12,RAX
0001f335(5): CALL 0x0000dca0
0001f33a(3): AND EBX,0x20
0001f33d(2): TEST EBX,EBX
0001f33f(2): JNZ 0x0001f358
0001f341(2): TEST EAX,EAX
0001f343(2): JZ 0x0001f34f
0001f345(3): TEST R12,R12
0001f348(5): MOV EAX,0xffffffff
0001f34d(2): JZ 0x0001f388
0001f34f(1): POP RBX
0001f350(1): POP RBP
0001f351(2): POP R12
0001f353(1): RET
0001f358(2): TEST EAX,EAX
0001f35a(2): JNZ 0x0001f378
0001f35c(5): CALL 0x00002410
0001f361(6): MOV dword ptr [RAX],0x0
0001f367(5): MOV EAX,0xffffffff
0001f36c(1): POP RBX
0001f36d(1): POP RBP
0001f36e(2): POP R12
0001f370(1): RET
0001f378(1): POP RBX
0001f379(5): MOV EAX,0xffffffff
0001f37e(1): POP RBP
0001f37f(2): POP R12
0001f381(1): RET
0001f388(5): CALL 0x00002410
0001f38d(3): CMP dword ptr [RAX],0x9
0001f390(1): POP RBX
0001f391(1): POP RBP
0001f392(2): POP R12
0001f394(3): SETNZ AL
0001f397(3): MOVZX EAX,AL
0001f39a(2): NEG EAX
0001f39c(1): RET
0001f3a0(8): MOV qword ptr [RDI + 0x10],0x0
0001f3a8(7): MOV dword ptr [RDI + 0x18],0x95f616
0001f3af(1): RET
0001f3b0(7): CMP dword ptr [RDI + 0x18],0x95f616
0001f3b7(2): JNZ 0x0001f417
0001f3b9(4): MOV RDX,qword ptr [RDI + 0x10]
0001f3bd(4): MOV RCX,qword ptr [RSI + 0x8]
0001f3c1(3): TEST RDX,RDX
0001f3c4(2): JZ 0x0001f3e0
0001f3c6(3): CMP qword ptr [RDI],RCX
0001f3c9(2): JZ 0x0001f3f8
0001f3cb(4): LEA R8,[RDX + 0x1]
0001f3cf(2): XOR EAX,EAX
0001f3d1(3): TEST RDX,R8
0001f3d4(4): MOV qword ptr [RDI + 0x10],R8
0001f3d8(2): JZ 0x0001f410
0001f3da(2): RET
0001f3e0(8): MOV qword ptr [RDI + 0x10],0x1
0001f3e8(3): MOV RAX,qword ptr [RSI]
0001f3eb(3): MOV qword ptr [RDI],RCX
0001f3ee(4): MOV qword ptr [RDI + 0x8],RAX
0001f3f2(2): XOR EAX,EAX
0001f3f4(1): RET
0001f3f8(4): MOV RAX,qword ptr [RDI + 0x8]
0001f3fc(3): CMP qword ptr [RSI],RAX
0001f3ff(2): JNZ 0x0001f3cb
0001f401(5): MOV EAX,0x1
0001f406(1): RET
0001f410(3): TEST R8,R8
0001f413(2): JZ 0x0001f401
0001f415(2): JMP 0x0001f3e8
0001f417(7): LEA RCX,[0x23050]
0001f41e(7): LEA RSI,[0x23010]
0001f425(7): LEA RDI,[0x23038]
0001f42c(4): SUB RSP,0x8
0001f430(5): MOV EDX,0x3c
0001f435(5): CALL 0x00002600
0001f43a(6): NOP word ptr [RAX + RAX*0x1]
0001f440(4): SUB RSP,0x58
0001f444(5): MOV qword ptr [RSP + 0x30],RDX
0001f449(2): XOR EDX,EDX
0001f44b(9): MOV RAX,qword ptr FS:[0x28]
0001f454(5): MOV qword ptr [RSP + 0x18],RAX
0001f459(2): XOR EAX,EAX
0001f45b(4): TEST SIL,0x40
0001f45f(2): JNZ 0x0001f488
0001f461(2): XOR EAX,EAX
0001f463(5): CALL 0x000028b0
0001f468(2): MOV EDI,EAX
0001f46a(5): CALL 0x0001f6f0
0001f46f(5): MOV RCX,qword ptr [RSP + 0x18]
0001f474(9): XOR RCX,qword ptr FS:[0x28]
0001f47d(2): JNZ 0x0001f4a9
0001f47f(4): ADD RSP,0x58
0001f483(1): RET
0001f488(5): LEA RAX,[RSP + 0x60]
0001f48d(7): MOV dword ptr [RSP],0x10
0001f494(4): MOV EDX,dword ptr [RSP + 0x30]
0001f498(5): MOV qword ptr [RSP + 0x8],RAX
0001f49d(5): LEA RAX,[RSP + 0x20]
0001f4a2(5): MOV qword ptr [RSP + 0x10],RAX
0001f4a7(2): JMP 0x0001f461
0001f4a9(5): CALL 0x00002560
0001f4ae(2): NOP
0001f4b0(4): SUB RSP,0x8
0001f4b4(2): XOR ESI,ESI
0001f4b6(5): CALL 0x00002840
0001f4bb(3): MOV RDX,RAX
0001f4be(5): MOV EAX,0x1
0001f4c3(3): TEST RDX,RDX
0001f4c6(2): JZ 0x0001f4e5
0001f4c8(7): LEA RDI,[0x2305c]
0001f4cf(5): MOV ECX,0x2
0001f4d4(3): MOV RSI,RDX
0001f4d7(2): CMPSB.REPE RDI,RSI
0001f4d9(3): SETA CL
0001f4dc(3): SBB CL,0x0
0001f4df(2): XOR EAX,EAX
0001f4e1(2): TEST CL,CL
0001f4e3(2): JNZ 0x0001f4f0
0001f4e5(4): ADD RSP,0x8
0001f4e9(1): RET
0001f4f0(7): LEA RDI,[0x2305e]
0001f4f7(5): MOV ECX,0x6
0001f4fc(3): MOV RSI,RDX
0001f4ff(2): CMPSB.REPE RDI,RSI
0001f501(3): SETA AL
0001f504(2): SBB AL,0x0
0001f506(2): TEST AL,AL
0001f508(3): SETNZ AL
0001f50b(4): ADD RSP,0x8
0001f50f(1): RET
0001f510(4): MOV byte ptr [RDI + 0x1c],0x1
0001f514(8): MOV qword ptr [RDI + 0x14],0x0
0001f51c(2): MOV dword ptr [RDI],ESI
0001f51e(3): MOV dword ptr [RDI + 0x4],ESI
0001f521(3): MOV dword ptr [RDI + 0x8],ESI
0001f524(3): MOV dword ptr [RDI + 0xc],ESI
0001f527(3): MOV dword ptr [RDI + 0x10],ESI
0001f52a(1): RET
0001f530(4): MOVZX EAX,byte ptr [RDI + 0x1c]
0001f534(1): RET
0001f540(4): MOVZX EDX,byte ptr [RDI + 0x1c]
0001f544(3): MOV ECX,dword ptr [RDI + 0x14]
0001f547(3): XOR EDX,0x1
0001f54a(3): MOVZX EDX,DL
0001f54d(2): ADD ECX,EDX
0001f54f(3): AND ECX,0x3
0001f552(2): MOV EAX,ECX
0001f554(4): LEA R8,[RDI + RAX*0x4]
0001f558(3): MOV EAX,dword ptr [R8]
0001f55b(3): MOV dword ptr [R8],ESI
0001f55e(3): MOV ESI,dword ptr [RDI + 0x18]
0001f561(3): MOV dword ptr [RDI + 0x14],ECX
0001f564(2): CMP ESI,ECX
0001f566(2): JNZ 0x0001f570
0001f568(2): ADD EDX,ESI
0001f56a(3): AND EDX,0x3
0001f56d(3): MOV dword ptr [RDI + 0x18],EDX
0001f570(4): MOV byte ptr [RDI + 0x1c],0x0
0001f574(1): RET
0001f580(4): CMP byte ptr [RDI + 0x1c],0x0
0001f584(2): JNZ 0x0001f5b5
0001f586(3): MOV EAX,dword ptr [RDI + 0x14]
0001f589(3): MOV ESI,dword ptr [RDI + 0x10]
0001f58c(4): LEA RCX,[RDI + RAX*0x4]
0001f590(3): MOV RDX,RAX
0001f593(2): MOV EAX,dword ptr [RCX]
0001f595(2): MOV dword ptr [RCX],ESI
0001f597(3): CMP EDX,dword ptr [RDI + 0x18]
0001f59a(2): JZ 0x0001f5b0
0001f59c(3): ADD EDX,0x3
0001f59f(3): AND EDX,0x3
0001f5a2(3): MOV dword ptr [RDI + 0x14],EDX
0001f5a5(1): RET
0001f5b0(4): MOV byte ptr [RDI + 0x1c],0x1
0001f5b4(1): RET
0001f5b5(4): SUB RSP,0x8
0001f5b9(5): CALL 0x00002400
0001f5be(2): NOP
0001f5c0(4): SUB RSP,0x8
0001f5c4(5): MOV EDI,0xe
0001f5c9(5): CALL 0x000027d0
0001f5ce(3): TEST RAX,RAX
0001f5d1(2): JZ 0x0001f5f0
0001f5d3(3): CMP byte ptr [RAX],0x0
0001f5d6(7): LEA RDX,[0x23064]
0001f5dd(4): CMOVZ RAX,RDX
0001f5e1(4): ADD RSP,0x8
0001f5e5(1): RET
0001f5f0(7): LEA RAX,[0x23064]
0001f5f7(4): ADD RSP,0x8
0001f5fb(1): RET
0001f600(4): SUB RSP,0x58
0001f604(5): MOV qword ptr [RSP + 0x38],RCX
0001f609(2): XOR ECX,ECX
0001f60b(9): MOV RAX,qword ptr FS:[0x28]
0001f614(5): MOV qword ptr [RSP + 0x18],RAX
0001f619(2): XOR EAX,EAX
0001f61b(3): TEST DL,0x40
0001f61e(2): JNZ 0x0001f648
0001f620(2): XOR EAX,EAX
0001f622(5): CALL 0x00002550
0001f627(2): MOV EDI,EAX
0001f629(5): CALL 0x0001f6f0
0001f62e(5): MOV RSI,qword ptr [RSP + 0x18]
0001f633(9): XOR RSI,qword ptr FS:[0x28]
0001f63c(2): JNZ 0x0001f669
0001f63e(4): ADD RSP,0x58
0001f642(1): RET
0001f648(5): LEA RAX,[RSP + 0x60]
0001f64d(7): MOV dword ptr [RSP],0x18
0001f654(4): MOV ECX,dword ptr [RSP + 0x38]
0001f658(5): MOV qword ptr [RSP + 0x8],RAX
0001f65d(5): LEA RAX,[RSP + 0x20]
0001f662(5): MOV qword ptr [RSP + 0x10],RAX
0001f667(2): JMP 0x0001f620
0001f669(5): CALL 0x00002560
0001f66e(2): NOP
0001f670(2): PUSH R13
0001f672(2): PUSH R12
0001f674(6): OR EDX,0x90900
0001f67a(1): PUSH RBP
0001f67b(1): PUSH RBX
0001f67c(2): XOR EAX,EAX
0001f67e(3): MOV R12,RCX
0001f681(4): SUB RSP,0x8
0001f685(5): CALL 0x0001f600
0001f68a(2): TEST EAX,EAX
0001f68c(2): JS 0x0001f6e0
0001f68e(2): MOV EDI,EAX
0001f690(2): MOV EBX,EAX
0001f692(5): CALL 0x000028f0
0001f697(3): TEST RAX,RAX
0001f69a(3): MOV RBP,RAX
0001f69d(2): JZ 0x0001f6b8
0001f69f(4): MOV dword ptr [R12],EBX
0001f6a3(4): ADD RSP,0x8
0001f6a7(3): MOV RAX,RBP
0001f6aa(1): POP RBX
0001f6ab(1): POP RBP
0001f6ac(2): POP R12
0001f6ae(2): POP R13
0001f6b0(1): RET
0001f6b8(5): CALL 0x00002410
0001f6bd(3): MOV R13D,dword ptr [RAX]
0001f6c0(3): MOV R12,RAX
0001f6c3(2): MOV EDI,EBX
0001f6c5(5): CALL 0x00002640
0001f6ca(3): MOV RAX,RBP
0001f6cd(4): MOV dword ptr [R12],R13D
0001f6d1(4): ADD RSP,0x8
0001f6d5(1): POP RBX
0001f6d6(1): POP RBP
0001f6d7(2): POP R12
0001f6d9(2): POP R13
0001f6db(1): RET
0001f6e0(4): ADD RSP,0x8
0001f6e4(2): XOR EBP,EBP
0001f6e6(1): POP RBX
0001f6e7(3): MOV RAX,RBP
0001f6ea(1): POP RBP
0001f6eb(2): POP R12
0001f6ed(2): POP R13
0001f6ef(1): RET
0001f6f0(2): PUSH R13
0001f6f2(2): PUSH R12
0001f6f4(1): PUSH RBP
0001f6f5(1): PUSH RBX
0001f6f6(2): MOV EBX,EDI
0001f6f8(4): SUB RSP,0x8
0001f6fc(3): CMP EDI,0x2
0001f6ff(2): JA 0x0001f722
0001f701(5): CALL 0x0001f9b0
0001f706(3): MOV R12D,EAX
0001f709(5): CALL 0x00002410
0001f70e(3): MOV R13D,dword ptr [RAX]
0001f711(3): MOV RBP,RAX
0001f714(2): MOV EDI,EBX
0001f716(5): CALL 0x00002640
0001f71b(3): MOV EBX,R12D
0001f71e(4): MOV dword ptr [RBP],R13D
0001f722(4): ADD RSP,0x8
0001f726(2): MOV EAX,EBX
0001f728(1): POP RBX
0001f729(1): POP RBP
0001f72a(2): POP R12
0001f72c(2): POP R13
0001f72e(1): RET
0001f730(2): PUSH R12
0001f732(1): PUSH RBP
0001f733(2): MOV EBP,EDI
0001f735(1): PUSH RBX
0001f736(4): SUB RSP,0x50
0001f73a(9): MOV RAX,qword ptr FS:[0x28]
0001f743(5): MOV qword ptr [RSP + 0x18],RAX
0001f748(2): XOR EAX,EAX
0001f74a(5): LEA RAX,[RSP + 0x70]
0001f74f(2): TEST ESI,ESI
0001f751(5): MOV qword ptr [RSP + 0x30],RDX
0001f756(5): MOV qword ptr [RSP + 0x38],RCX
0001f75b(5): MOV qword ptr [RSP + 0x40],R8
0001f760(5): MOV qword ptr [RSP + 0x8],RAX
0001f765(5): LEA RAX,[RSP + 0x20]
0001f76a(5): MOV qword ptr [RSP + 0x48],R9
0001f76f(7): MOV dword ptr [RSP],0x10
0001f776(5): MOV qword ptr [RSP + 0x10],RAX
0001f77b(6): JZ 0x0001f982
0001f781(6): CMP ESI,0x406
0001f787(2): JNZ 0x0001f7d0
0001f789(5): MOV RAX,qword ptr [RSP + 0x10]
0001f78e(7): CMP dword ptr [0x002282f8],0x0
0001f795(7): MOV dword ptr [RSP],0x18
0001f79c(4): MOV R12D,dword ptr [RAX + 0x10]
0001f7a0(3): MOV EDX,R12D
0001f7a3(6): JS 0x0001f8d3
0001f7a9(2): XOR EAX,EAX
0001f7ab(5): MOV ESI,0x406
0001f7b0(5): CALL 0x000024a0
0001f7b5(2): TEST EAX,EAX
0001f7b7(2): MOV EBX,EAX
0001f7b9(6): JS 0x0001f948
0001f7bf(10): MOV dword ptr [0x002282f8],0x1
0001f7c9(2): JMP 0x0001f810
0001f7d0(3): CMP ESI,0xb
0001f7d3(2): JZ 0x0001f800
0001f7d5(2): JG 0x0001f830
0001f7d7(3): CMP ESI,0x4
0001f7da(6): JZ 0x0001f8b0
0001f7e0(6): JG 0x0001f8a0
0001f7e6(3): CMP ESI,0x2
0001f7e9(6): JZ 0x0001f8b0
0001f7ef(2): JG 0x0001f800
0001f7f1(3): CMP ESI,0x1
0001f7f4(2): JNZ 0x0001f858
0001f7f6(10): NOP word ptr CS:[RAX + RAX*0x1]
0001f800(2): MOV EDI,EBP
0001f802(2): XOR EAX,EAX
0001f804(5): CALL 0x000024a0
0001f809(2): MOV EBX,EAX
0001f80b(5): NOP dword ptr [RAX + RAX*0x1]
0001f810(5): MOV RCX,qword ptr [RSP + 0x18]
0001f815(9): XOR RCX,qword ptr FS:[0x28]
0001f81e(2): MOV EAX,EBX
0001f820(6): JNZ 0x0001f97d
0001f826(4): ADD RSP,0x50
0001f82a(1): POP RBX
0001f82b(1): POP RBP
0001f82c(2): POP R12
0001f82e(1): RET
0001f830(6): CMP ESI,0x407
0001f836(2): JG 0x0001f880
0001f838(6): CMP ESI,0x406
0001f83e(2): JGE 0x0001f8b0
0001f840(6): CMP ESI,0x401
0001f846(2): JZ 0x0001f800
0001f848(6): CMP ESI,0x402
0001f84e(2): JZ 0x0001f8b0
0001f850(6): CMP ESI,0x400
0001f856(2): JZ 0x0001f8b0
0001f858(3): MOV EAX,dword ptr [RSP]
0001f85b(3): CMP EAX,0x2f
0001f85e(6): JA 0x0001f99a
0001f864(5): ADD RAX,qword ptr [RSP + 0x10]
0001f869(3): MOV RDX,qword ptr [RAX]
0001f86c(2): MOV EDI,EBP
0001f86e(2): XOR EAX,EAX
0001f870(5): CALL 0x000024a0
0001f875(2): MOV EBX,EAX
0001f877(2): JMP 0x0001f810
0001f880(6): CMP ESI,0x409
0001f886(2): JZ 0x0001f8b0
0001f888(6): JL 0x0001f800
0001f88e(6): CMP ESI,0x40a
0001f894(2): JNZ 0x0001f858
0001f896(5): JMP 0x0001f800
0001f8a0(3): CMP ESI,0x9
0001f8a3(6): JZ 0x0001f800
0001f8a9(2): JG 0x0001f8b0
0001f8ab(3): CMP ESI,0x8
0001f8ae(2): JNZ 0x0001f858
0001f8b0(3): MOV EAX,dword ptr [RSP]
0001f8b3(3): CMP EAX,0x2f
0001f8b6(6): JA 0x0001f9a4
0001f8bc(5): ADD RAX,qword ptr [RSP + 0x10]
0001f8c1(2): MOV EDX,dword ptr [RAX]
0001f8c3(2): MOV EDI,EBP
0001f8c5(2): XOR EAX,EAX
0001f8c7(5): CALL 0x000024a0
0001f8cc(2): MOV EBX,EAX
0001f8ce(5): JMP 0x0001f810
0001f8d3(2): XOR ESI,ESI
0001f8d5(2): XOR EAX,EAX
0001f8d7(5): CALL 0x000024a0
0001f8dc(2): TEST EAX,EAX
0001f8de(2): MOV EBX,EAX
0001f8e0(6): JS 0x0001f810
0001f8e6(7): CMP dword ptr [0x002282f8],-0x1
0001f8ed(6): JNZ 0x0001f810
0001f8f3(2): XOR EAX,EAX
0001f8f5(5): MOV ESI,0x1
0001f8fa(2): MOV EDI,EBX
0001f8fc(5): CALL 0x000024a0
0001f901(2): TEST EAX,EAX
0001f903(2): JS 0x0001f921
0001f905(3): OR EAX,0x1
0001f908(5): MOV ESI,0x2
0001f90d(2): MOV EDI,EBX
0001f90f(2): MOV EDX,EAX
0001f911(2): XOR EAX,EAX
0001f913(5): CALL 0x000024a0
0001f918(3): CMP EAX,-0x1
0001f91b(6): JNZ 0x0001f810
0001f921(5): CALL 0x00002410
0001f926(3): MOV R12D,dword ptr [RAX]
0001f929(3): MOV RBP,RAX
0001f92c(2): MOV EDI,EBX
0001f92e(5): CALL 0x00002640
0001f933(5): MOV EBX,0xffffffff
0001f938(4): MOV dword ptr [RBP],R12D
0001f93c(5): JMP 0x0001f810
0001f948(5): CALL 0x00002410
0001f94d(3): CMP dword ptr [RAX],0x16
0001f950(6): JNZ 0x0001f7bf
0001f956(2): XOR ESI,ESI
0001f958(2): XOR EAX,EAX
0001f95a(3): MOV EDX,R12D
0001f95d(2): MOV EDI,EBP
0001f95f(5): CALL 0x000024a0
0001f964(2): TEST EAX,EAX
0001f966(2): MOV EBX,EAX
0001f968(6): JS 0x0001f810
0001f96e(10): MOV dword ptr [0x002282f8],0xffffffff
0001f978(5): JMP 0x0001f8f3
0001f97d(5): CALL 0x00002560
0001f982(5): MOV RAX,qword ptr [RSP + 0x10]
0001f987(2): XOR ESI,ESI
0001f989(3): MOV EDX,dword ptr [RAX + 0x10]
0001f98c(2): XOR EAX,EAX
0001f98e(5): CALL 0x000024a0
0001f993(2): MOV EBX,EAX
0001f995(5): JMP 0x0001f810
0001f99a(5): MOV RAX,qword ptr [RSP + 0x8]
0001f99f(5): JMP 0x0001f869
0001f9a4(5): MOV RAX,qword ptr [RSP + 0x8]
0001f9a9(5): JMP 0x0001f8c1
0001f9b0(5): MOV EDX,0x3
0001f9b5(2): XOR ESI,ESI
0001f9b7(2): XOR EAX,EAX
0001f9b9(5): JMP 0x0001f730
0001f9c0(2): PUSH R15
0001f9c2(2): PUSH R14
0001f9c4(3): MOV R15,RDX
0001f9c7(2): PUSH R13
0001f9c9(2): PUSH R12
0001f9cb(7): LEA R12,[0x227670]
0001f9d2(1): PUSH RBP
0001f9d3(7): LEA RBP,[0x227678]
0001f9da(1): PUSH RBX
0001f9db(3): MOV R13D,EDI
0001f9de(3): MOV R14,RSI
0001f9e1(3): SUB RBP,R12
0001f9e4(4): SUB RSP,0x8
0001f9e8(4): SAR RBP,0x3
0001f9ec(5): CALL 0x00002390
0001f9f1(3): TEST RBP,RBP
0001f9f4(2): JZ 0x0001fa16
0001f9f6(2): XOR EBX,EBX
0001f9f8(8): NOP dword ptr [RAX + RAX*0x1]
0001fa00(3): MOV RDX,R15
0001fa03(3): MOV RSI,R14
0001fa06(3): MOV EDI,R13D
0001fa09(4): CALL qword ptr [R12 + RBX*0x8]
0001fa0d(4): ADD RBX,0x1
0001fa11(3): CMP RBP,RBX
0001fa14(2): JNZ 0x0001fa00
0001fa16(4): ADD RSP,0x8
0001fa1a(1): POP RBX
0001fa1b(1): POP RBP
0001fa1c(2): POP R12
0001fa1e(2): POP R13
0001fa20(2): POP R14
0001fa22(2): POP R15
0001fa24(1): RET
0001fa30(2): RET
0001fa40(7): MOV RDX,qword ptr [0x00228008]
0001fa47(2): XOR ESI,ESI
0001fa49(5): JMP 0x00002940
0001fa50(4): SUB RSP,0x8
0001fa54(4): ADD RSP,0x8
0001fa58(1): RET

