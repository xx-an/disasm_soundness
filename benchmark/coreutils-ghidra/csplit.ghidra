00001a98(4): SUB RSP,0x8
00001a9c(7): MOV RAX,qword ptr [0x0021bfe8]
00001aa3(3): TEST RAX,RAX
00001aa6(2): JZ 0x00001aaa
00001aa8(2): CALL RAX
00001aaa(4): ADD RSP,0x8
00001aae(1): RET
00001ab0(6): PUSH qword ptr [0x0021bd70]
00001ab6(6): JMP qword ptr [0x0021bd78]
00001ac0(6): JMP qword ptr [0x0021bd80]
00001ac6(5): PUSH 0x0
00001acb(5): JMP 0x00001ab0
00001ad0(6): JMP qword ptr [0x0021bd88]
00001ad6(5): PUSH 0x1
00001adb(5): JMP 0x00001ab0
00001ae0(6): JMP qword ptr [0x0021bd90]
00001ae6(5): PUSH 0x2
00001aeb(5): JMP 0x00001ab0
00001af0(6): JMP qword ptr [0x0021bd98]
00001af6(5): PUSH 0x3
00001afb(5): JMP 0x00001ab0
00001b00(6): JMP qword ptr [0x0021bda0]
00001b06(5): PUSH 0x4
00001b0b(5): JMP 0x00001ab0
00001b10(6): JMP qword ptr [0x0021bda8]
00001b16(5): PUSH 0x5
00001b1b(5): JMP 0x00001ab0
00001b20(6): JMP qword ptr [0x0021bdb0]
00001b26(5): PUSH 0x6
00001b2b(5): JMP 0x00001ab0
00001b30(6): JMP qword ptr [0x0021bdb8]
00001b36(5): PUSH 0x7
00001b3b(5): JMP 0x00001ab0
00001b40(6): JMP qword ptr [0x0021bdc0]
00001b46(5): PUSH 0x8
00001b4b(5): JMP 0x00001ab0
00001b50(6): JMP qword ptr [0x0021bdc8]
00001b56(5): PUSH 0x9
00001b5b(5): JMP 0x00001ab0
00001b60(6): JMP qword ptr [0x0021bdd0]
00001b66(5): PUSH 0xa
00001b6b(5): JMP 0x00001ab0
00001b70(6): JMP qword ptr [0x0021bdd8]
00001b76(5): PUSH 0xb
00001b7b(5): JMP 0x00001ab0
00001b80(6): JMP qword ptr [0x0021bde0]
00001b86(5): PUSH 0xc
00001b8b(5): JMP 0x00001ab0
00001b90(6): JMP qword ptr [0x0021bde8]
00001b96(5): PUSH 0xd
00001b9b(5): JMP 0x00001ab0
00001ba0(6): JMP qword ptr [0x0021bdf0]
00001ba6(5): PUSH 0xe
00001bab(5): JMP 0x00001ab0
00001bb0(6): JMP qword ptr [0x0021bdf8]
00001bb6(5): PUSH 0xf
00001bbb(5): JMP 0x00001ab0
00001bc0(6): JMP qword ptr [0x0021be00]
00001bc6(5): PUSH 0x10
00001bcb(5): JMP 0x00001ab0
00001bd0(6): JMP qword ptr [0x0021be08]
00001bd6(5): PUSH 0x11
00001bdb(5): JMP 0x00001ab0
00001be0(6): JMP qword ptr [0x0021be10]
00001be6(5): PUSH 0x12
00001beb(5): JMP 0x00001ab0
00001bf0(6): JMP qword ptr [0x0021be18]
00001bf6(5): PUSH 0x13
00001bfb(5): JMP 0x00001ab0
00001c00(6): JMP qword ptr [0x0021be20]
00001c06(5): PUSH 0x14
00001c0b(5): JMP 0x00001ab0
00001c10(6): JMP qword ptr [0x0021be28]
00001c16(5): PUSH 0x15
00001c1b(5): JMP 0x00001ab0
00001c20(6): JMP qword ptr [0x0021be30]
00001c26(5): PUSH 0x16
00001c2b(5): JMP 0x00001ab0
00001c30(6): JMP qword ptr [0x0021be38]
00001c36(5): PUSH 0x17
00001c3b(5): JMP 0x00001ab0
00001c40(6): JMP qword ptr [0x0021be40]
00001c46(5): PUSH 0x18
00001c4b(5): JMP 0x00001ab0
00001c50(6): JMP qword ptr [0x0021be48]
00001c56(5): PUSH 0x19
00001c5b(5): JMP 0x00001ab0
00001c60(6): JMP qword ptr [0x0021be50]
00001c66(5): PUSH 0x1a
00001c6b(5): JMP 0x00001ab0
00001c70(6): JMP qword ptr [0x0021be58]
00001c76(5): PUSH 0x1b
00001c7b(5): JMP 0x00001ab0
00001c80(6): JMP qword ptr [0x0021be60]
00001c86(5): PUSH 0x1c
00001c8b(5): JMP 0x00001ab0
00001c90(6): JMP qword ptr [0x0021be68]
00001c96(5): PUSH 0x1d
00001c9b(5): JMP 0x00001ab0
00001ca0(6): JMP qword ptr [0x0021be70]
00001ca6(5): PUSH 0x1e
00001cab(5): JMP 0x00001ab0
00001cb0(6): JMP qword ptr [0x0021be78]
00001cb6(5): PUSH 0x1f
00001cbb(5): JMP 0x00001ab0
00001cc0(6): JMP qword ptr [0x0021be80]
00001cc6(5): PUSH 0x20
00001ccb(5): JMP 0x00001ab0
00001cd0(6): JMP qword ptr [0x0021be88]
00001cd6(5): PUSH 0x21
00001cdb(5): JMP 0x00001ab0
00001ce0(6): JMP qword ptr [0x0021be90]
00001ce6(5): PUSH 0x22
00001ceb(5): JMP 0x00001ab0
00001cf0(6): JMP qword ptr [0x0021be98]
00001cf6(5): PUSH 0x23
00001cfb(5): JMP 0x00001ab0
00001d00(6): JMP qword ptr [0x0021bea0]
00001d06(5): PUSH 0x24
00001d0b(5): JMP 0x00001ab0
00001d10(6): JMP qword ptr [0x0021bea8]
00001d16(5): PUSH 0x25
00001d1b(5): JMP 0x00001ab0
00001d20(6): JMP qword ptr [0x0021beb0]
00001d26(5): PUSH 0x26
00001d2b(5): JMP 0x00001ab0
00001d30(6): JMP qword ptr [0x0021beb8]
00001d36(5): PUSH 0x27
00001d3b(5): JMP 0x00001ab0
00001d40(6): JMP qword ptr [0x0021bec0]
00001d46(5): PUSH 0x28
00001d4b(5): JMP 0x00001ab0
00001d50(6): JMP qword ptr [0x0021bec8]
00001d56(5): PUSH 0x29
00001d5b(5): JMP 0x00001ab0
00001d60(6): JMP qword ptr [0x0021bed0]
00001d66(5): PUSH 0x2a
00001d6b(5): JMP 0x00001ab0
00001d70(6): JMP qword ptr [0x0021bed8]
00001d76(5): PUSH 0x2b
00001d7b(5): JMP 0x00001ab0
00001d80(6): JMP qword ptr [0x0021bee0]
00001d86(5): PUSH 0x2c
00001d8b(5): JMP 0x00001ab0
00001d90(6): JMP qword ptr [0x0021bee8]
00001d96(5): PUSH 0x2d
00001d9b(5): JMP 0x00001ab0
00001da0(6): JMP qword ptr [0x0021bef0]
00001da6(5): PUSH 0x2e
00001dab(5): JMP 0x00001ab0
00001db0(6): JMP qword ptr [0x0021bef8]
00001db6(5): PUSH 0x2f
00001dbb(5): JMP 0x00001ab0
00001dc0(6): JMP qword ptr [0x0021bf00]
00001dc6(5): PUSH 0x30
00001dcb(5): JMP 0x00001ab0
00001dd0(6): JMP qword ptr [0x0021bf08]
00001dd6(5): PUSH 0x31
00001ddb(5): JMP 0x00001ab0
00001de0(6): JMP qword ptr [0x0021bf10]
00001de6(5): PUSH 0x32
00001deb(5): JMP 0x00001ab0
00001df0(6): JMP qword ptr [0x0021bf18]
00001df6(5): PUSH 0x33
00001dfb(5): JMP 0x00001ab0
00001e00(6): JMP qword ptr [0x0021bf20]
00001e06(5): PUSH 0x34
00001e0b(5): JMP 0x00001ab0
00001e10(6): JMP qword ptr [0x0021bf28]
00001e16(5): PUSH 0x35
00001e1b(5): JMP 0x00001ab0
00001e20(6): JMP qword ptr [0x0021bf30]
00001e26(5): PUSH 0x36
00001e2b(5): JMP 0x00001ab0
00001e30(6): JMP qword ptr [0x0021bf38]
00001e36(5): PUSH 0x37
00001e3b(5): JMP 0x00001ab0
00001e40(6): JMP qword ptr [0x0021bf40]
00001e46(5): PUSH 0x38
00001e4b(5): JMP 0x00001ab0
00001e50(6): JMP qword ptr [0x0021bf48]
00001e56(5): PUSH 0x39
00001e5b(5): JMP 0x00001ab0
00001e60(6): JMP qword ptr [0x0021bf50]
00001e66(5): PUSH 0x3a
00001e6b(5): JMP 0x00001ab0
00001e70(6): JMP qword ptr [0x0021bf58]
00001e76(5): PUSH 0x3b
00001e7b(5): JMP 0x00001ab0
00001e80(6): JMP qword ptr [0x0021bf60]
00001e86(5): PUSH 0x3c
00001e8b(5): JMP 0x00001ab0
00001e90(6): JMP qword ptr [0x0021bf68]
00001e96(5): PUSH 0x3d
00001e9b(5): JMP 0x00001ab0
00001ea0(6): JMP qword ptr [0x0021bf70]
00001ea6(5): PUSH 0x3e
00001eab(5): JMP 0x00001ab0
00001eb0(6): JMP qword ptr [0x0021bf78]
00001eb6(5): PUSH 0x3f
00001ebb(5): JMP 0x00001ab0
00001ec0(6): JMP qword ptr [0x0021bf80]
00001ec6(5): PUSH 0x40
00001ecb(5): JMP 0x00001ab0
00001ed0(6): JMP qword ptr [0x0021bf88]
00001ed6(5): PUSH 0x41
00001edb(5): JMP 0x00001ab0
00001ee0(6): JMP qword ptr [0x0021bf90]
00001ee6(5): PUSH 0x42
00001eeb(5): JMP 0x00001ab0
00001ef0(6): JMP qword ptr [0x0021bf98]
00001ef6(5): PUSH 0x43
00001efb(5): JMP 0x00001ab0
00001f00(6): JMP qword ptr [0x0021bfa0]
00001f06(5): PUSH 0x44
00001f0b(5): JMP 0x00001ab0
00001f10(6): JMP qword ptr [0x0021bfa8]
00001f16(5): PUSH 0x45
00001f1b(5): JMP 0x00001ab0
00001f20(6): JMP qword ptr [0x0021bfb0]
00001f26(5): PUSH 0x46
00001f2b(5): JMP 0x00001ab0
00001f30(6): JMP qword ptr [0x0021bfb8]
00001f36(5): PUSH 0x47
00001f3b(5): JMP 0x00001ab0
00001f40(6): JMP qword ptr [0x0021bfc0]
00001f46(5): PUSH 0x48
00001f4b(5): JMP 0x00001ab0
00001f50(6): JMP qword ptr [0x0021bfc8]
00001f56(5): PUSH 0x49
00001f5b(5): JMP 0x00001ab0
00001f60(6): JMP qword ptr [0x0021bfd0]
00001f66(5): PUSH 0x4a
00001f6b(5): JMP 0x00001ab0
00001f70(6): JMP qword ptr [0x0021bff8]
00001f80(2): PUSH R13
00001f82(2): PUSH R12
00001f84(1): PUSH RBP
00001f85(1): PUSH RBX
00001f86(2): MOV EBP,EDX
00001f88(3): MOV RBX,RSI
00001f8b(4): SUB RSP,0x28
00001f8f(4): MOVSXD RDX,dword ptr [RDI + 0x18]
00001f93(9): MOV RAX,qword ptr FS:[0x28]
00001f9c(5): MOV qword ptr [RSP + 0x18],RAX
00001fa1(2): XOR EAX,EAX
00001fa3(7): MOV RAX,qword ptr [0x0021c1b8]
00001faa(4): MOV RDI,qword ptr [RAX + RDX*0x8]
00001fae(5): CALL 0x00006260
00001fb3(7): LEA RSI,[0x15fed]
00001fba(2): XOR EDI,EDI
00001fbc(7): MOV R12,qword ptr [0x0021c238]
00001fc3(5): MOV EDX,0x5
00001fc8(3): MOV R13,RAX
00001fcb(5): CALL 0x00001bf0
00001fd0(7): MOV RDI,qword ptr [0x0021c0e0]
00001fd7(3): MOV RDX,RAX
00001fda(3): MOV R8,R13
00001fdd(2): XOR EAX,EAX
00001fdf(3): MOV RCX,R12
00001fe2(5): MOV ESI,0x1
00001fe7(5): CALL 0x00001f00
00001fec(3): TEST RBX,RBX
00001fef(2): JZ 0x0000202d
00001ff1(3): MOV RSI,RSP
00001ff4(3): MOV RDI,RBX
00001ff7(5): CALL 0x00004500
00001ffc(7): LEA RSI,[0x15fbe]
00002003(2): XOR EDI,EDI
00002005(5): MOV EDX,0x5
0000200a(3): MOV RBX,RAX
0000200d(5): CALL 0x00001bf0
00002012(7): MOV RDI,qword ptr [0x0021c0e0]
00002019(3): MOV RDX,RAX
0000201c(3): MOV RCX,RBX
0000201f(5): MOV ESI,0x1
00002024(2): XOR EAX,EAX
00002026(5): CALL 0x00001f00
0000202b(2): JMP 0x0000203e
0000202d(7): MOV RSI,qword ptr [0x0021c0e0]
00002034(5): MOV EDI,0xa
00002039(5): CALL 0x00001cd0
0000203e(3): TEST BPL,BPL
00002041(2): JNZ 0x0000204d
00002043(5): CALL 0x00003d70
00002048(5): CALL 0x00003280
0000204d(5): CALL 0x00003220
00002052(10): NOP word ptr CS:[RAX + RAX*0x1]
0000205c(4): NOP dword ptr [RAX]
00002060(2): PUSH R15
00002062(2): PUSH R14
00002064(2): PUSH R13
00002066(2): PUSH R12
00002068(3): MOV R12,RSI
0000206b(1): PUSH RBP
0000206c(1): PUSH RBX
0000206d(7): LEA RBX,[0x21b9c0]
00002074(7): SUB RSP,0x108
0000207b(4): MOV dword ptr [RSP + 0x8],EDI
0000207f(3): MOV RDI,qword ptr [RSI]
00002082(9): MOV RAX,qword ptr FS:[0x28]
0000208b(8): MOV qword ptr [0xf8 + RSP],RAX
00002093(2): XOR EAX,EAX
00002095(5): CALL 0x00004550
0000209a(7): LEA RSI,[0x170e1]
000020a1(5): MOV EDI,0x6
000020a6(5): CALL 0x00001e20
000020ab(7): LEA RSI,[0x160c3]
000020b2(7): LEA RDI,[0x1609a]
000020b9(5): CALL 0x00001be0
000020be(7): LEA RDI,[0x1609a]
000020c5(5): CALL 0x00001ba0
000020ca(7): LEA RDI,[0x4350]
000020d1(5): CALL 0x00015f70
000020d6(7): LEA RAX,[0x160db]
000020dd(7): MOV byte ptr [0x0021c1b2],0x1
000020e4(7): MOV qword ptr [0x0021c1b8],R12
000020eb(11): MOV qword ptr [0x0021c1a8],0x0
000020f6(11): MOV qword ptr [0x0021c1a0],0x0
00002101(7): MOV byte ptr [0x0021c1b3],0x0
00002108(7): MOV byte ptr [0x0021c1b0],0x0
0000210f(7): MOV qword ptr [0x0021c1e8],RAX
00002116(10): NOP word ptr CS:[RAX + RAX*0x1]
00002120(4): MOV EDI,dword ptr [RSP + 0x8]
00002124(7): LEA RDX,[0x16109]
0000212b(3): XOR R8D,R8D
0000212e(3): MOV RCX,RBX
00002131(3): MOV RSI,R12
00002134(5): CALL 0x00001c30
00002139(3): CMP EAX,-0x1
0000213c(6): JZ 0x00002291
00002142(3): CMP EAX,0x6b
00002145(6): JZ 0x00002210
0000214b(2): JLE 0x00002178
0000214d(3): CMP EAX,0x73
00002150(6): JZ 0x000021fc
00002156(2): JLE 0x000021b0
00002158(3): CMP EAX,0x7a
0000215b(6): JZ 0x00002220
00002161(3): ADD EAX,-0x80
00002164(6): JNZ 0x00002d8f
0000216a(7): MOV byte ptr [0x0021c1b0],0x1
00002171(2): JMP 0x00002120
00002178(5): CMP EAX,0xffffff7e
0000217d(6): JZ 0x00002d99
00002183(6): JLE 0x00002248
00002189(3): CMP EAX,0x62
0000218c(6): JZ 0x00002230
00002192(3): CMP EAX,0x66
00002195(6): JNZ 0x00002d8f
0000219b(7): MOV RAX,qword ptr [0x0021c0b8]
000021a2(7): MOV qword ptr [0x0021c1e8],RAX
000021a9(5): JMP 0x00002120
000021b0(3): CMP EAX,0x6e
000021b3(2): JNZ 0x000021f3
000021b5(7): LEA RSI,[0x160de]
000021bc(5): MOV EDX,0x5
000021c1(2): XOR EDI,EDI
000021c3(5): CALL 0x00001bf0
000021c8(7): MOV RDI,qword ptr [0x0021c0b8]
000021cf(7): LEA RCX,[0x170e1]
000021d6(3): MOV R8,RAX
000021d9(3): XOR R9D,R9D
000021dc(5): MOV EDX,0x7fffffff
000021e1(2): XOR ESI,ESI
000021e3(5): CALL 0x00006c80
000021e8(6): MOV dword ptr [0x0021c010],EAX
000021ee(5): JMP 0x00002120
000021f3(3): CMP EAX,0x71
000021f6(6): JNZ 0x00002d8f
000021fc(7): MOV byte ptr [0x0021c1b3],0x1
00002203(5): JMP 0x00002120
00002210(7): MOV byte ptr [0x0021c1b2],0x0
00002217(5): JMP 0x00002120
00002220(7): MOV byte ptr [0x0021c1b1],0x1
00002227(5): JMP 0x00002120
00002230(7): MOV RAX,qword ptr [0x0021c0b8]
00002237(7): MOV qword ptr [0x0021c1e0],RAX
0000223e(5): JMP 0x00002120
00002248(5): CMP EAX,0xffffff7d
0000224d(6): JNZ 0x00002d8f
00002253(4): SUB RSP,0x8
00002257(7): MOV RDI,qword ptr [0x0021c0a8]
0000225e(7): MOV RCX,qword ptr [0x0021c018]
00002265(2): PUSH 0x0
00002267(7): LEA R9,[0x160ed]
0000226e(7): LEA R8,[0x160fd]
00002275(7): LEA RDX,[0x16096]
0000227c(7): LEA RSI,[0x16019]
00002283(2): XOR EAX,EAX
00002285(5): CALL 0x000067b0
0000228a(2): XOR EDI,EDI
0000228c(5): CALL 0x00001ee0
00002291(6): MOV EAX,dword ptr [0x0021c0b0]
00002297(4): MOV EDX,dword ptr [RSP + 0x8]
0000229b(2): SUB EDX,EAX
0000229d(3): SUB EDX,0x1
000022a0(6): JLE 0x00002d64
000022a6(7): MOV RDI,qword ptr [0x0021c1e8]
000022ad(2): XOR EAX,EAX
000022af(4): OR RCX,-0x1
000022b3(2): SCASB.REPNE RDI
000022b5(3): MOV RAX,RCX
000022b8(3): NOT RAX
000022bb(4): LEA RBX,[RAX + -0x1]
000022bf(7): MOV RAX,qword ptr [0x0021c1e0]
000022c6(3): TEST RAX,RAX
000022c9(2): JZ 0x00002316
000022cb(7): MOV R8,qword ptr [0x0021c1e0]
000022d2(2): XOR EDI,EDI
000022d4(4): MOVZX ECX,byte ptr [R8]
000022d8(3): MOV RDX,R8
000022db(2): TEST CL,CL
000022dd(2): JNZ 0x000022f5
000022df(5): JMP 0x00002c3b
000022e8(2): MOV ECX,ESI
000022ea(2): TEST CL,CL
000022ec(3): MOV RDX,RAX
000022ef(6): JZ 0x00002aab
000022f5(3): CMP CL,0x25
000022f8(4): LEA RAX,[RDX + 0x1]
000022fc(4): MOVZX ESI,byte ptr [RDX + 0x1]
00002300(2): JNZ 0x000022e8
00002302(4): CMP SIL,0x25
00002306(6): JNZ 0x00002942
0000230c(4): MOVZX ECX,byte ptr [RDX + 0x2]
00002310(4): LEA RAX,[RDX + 0x2]
00002314(2): JMP 0x000022ea
00002316(6): MOV EAX,dword ptr [0x0021c010]
0000231c(3): CMP EAX,0x9
0000231f(6): JBE 0x00002b9b
00002325(7): MOVSXD RDX,dword ptr [0x0021c010]
0000232c(7): MOV RAX,-0x2
00002333(3): SUB RAX,RBX
00002336(3): CMP RAX,RDX
00002339(6): JC 0x00002ad7
0000233f(5): LEA RDI,[RBX + RDX*0x1 + 0x1]
00002344(5): CALL 0x00006910
00002349(6): MOV EBX,dword ptr [0x0021c0b0]
0000234f(7): MOV qword ptr [0x0021c1f0],RAX
00002356(7): LEA RSI,[0x16baa]
0000235d(3): MOVSXD RAX,EBX
00002360(4): MOV RBP,qword ptr [R12 + RAX*0x8]
00002364(3): LEA EBX,[RAX + 0x1]
00002367(6): MOV dword ptr [0x0021c0b0],EBX
0000236d(3): MOV RDI,RBP
00002370(5): CALL 0x00001d40
00002375(2): TEST EAX,EAX
00002377(6): JNZ 0x00002ae9
0000237d(4): CMP EBX,dword ptr [RSP + 0x8]
00002381(6): JGE 0x00002568
00002387(3): MOVSXD RAX,EBX
0000238a(4): MOV RBP,qword ptr [R12 + RAX*0x8]
0000238e(5): MOV qword ptr [RSP + 0x10],RAX
00002393(5): LEA RAX,[RSP + 0x30]
00002398(5): MOV qword ptr [RSP + 0x20],RAX
0000239d(5): LEA RAX,[RSP + 0x38]
000023a2(5): MOV qword ptr [RSP + 0x28],RAX
000023a7(4): MOVZX EAX,byte ptr [RBP]
000023ab(2): CMP AL,0x25
000023ad(4): SETZ R15B
000023b1(2): CMP AL,0x2f
000023b3(6): JZ 0x00002478
000023b9(7): NOP dword ptr [RAX]
000023c0(3): TEST R15B,R15B
000023c3(6): JNZ 0x00002478
000023c9(5): MOV RAX,qword ptr [RSP + 0x10]
000023ce(4): LEA RBP,[R12 + RAX*0x8]
000023d2(5): CALL 0x00003850
000023d7(5): MOV RCX,qword ptr [RSP + 0x20]
000023dc(4): MOV RDI,qword ptr [RBP]
000023e0(7): LEA R8,[0x170e1]
000023e7(2): XOR ESI,ESI
000023e9(3): MOV dword ptr [RAX + 0x18],EBX
000023ec(5): MOV EDX,0xa
000023f1(3): MOV R14,RAX
000023f4(5): CALL 0x00007370
000023f9(2): TEST EAX,EAX
000023fb(6): JNZ 0x00002c8a
00002401(5): MOV RAX,qword ptr [RSP + 0x30]
00002406(3): TEST RAX,RAX
00002409(6): JZ 0x00002c5f
0000240f(7): MOV RDI,qword ptr [0x0021c110]
00002416(3): CMP RAX,RDI
00002419(6): JC 0x00002d1e
0000241f(6): JZ 0x0000279a
00002425(7): MOV qword ptr [0x0021c110],RAX
0000242c(4): MOV qword ptr [R14 + 0x8],RAX
00002430(3): LEA EAX,[RBX + 0x1]
00002433(4): CMP dword ptr [RSP + 0x8],EAX
00002437(6): JLE 0x00002568
0000243d(5): MOV R13,qword ptr [RSP + 0x10]
00002442(4): ADD R13,0x1
00002446(4): MOV RBP,qword ptr [R12 + R13*0x8]
0000244a(8): LEA R15,[R13*0x8]
00002452(4): CMP byte ptr [RBP],0x7b
00002456(6): JZ 0x00002722
0000245c(2): CDQE
0000245e(3): MOV RBX,RAX
00002461(5): MOV qword ptr [RSP + 0x10],RAX
00002466(4): MOVZX EAX,byte ptr [RBP]
0000246a(2): CMP AL,0x25
0000246c(4): SETZ R15B
00002470(2): CMP AL,0x2f
00002472(6): JNZ 0x000023c0
00002478(3): MOVSX ESI,AL
0000247b(4): LEA RAX,[RBP + 0x1]
0000247f(3): MOV R14D,ESI
00002482(3): MOV RDI,RAX
00002485(5): MOV qword ptr [RSP + 0x18],RAX
0000248a(5): CALL 0x00001c70
0000248f(3): TEST RAX,RAX
00002492(3): MOV R13,RAX
00002495(6): JZ 0x00002cf4
0000249b(5): CALL 0x00003850
000024a0(5): MOV EDI,0x100
000024a5(4): MOV byte ptr [RAX + 0x1d],R15B
000024a9(3): MOV dword ptr [RAX + 0x18],EBX
000024ac(4): MOV byte ptr [RAX + 0x1e],0x1
000024b0(8): MOV qword ptr [RAX + 0x20],0x0
000024b8(3): MOV R14,RAX
000024bb(8): MOV qword ptr [RAX + 0x28],0x0
000024c3(5): CALL 0x00006910
000024c8(3): MOV RSI,R13
000024cb(5): MOV RDI,qword ptr [RSP + 0x18]
000024d0(4): LEA RDX,[R14 + 0x20]
000024d4(3): SUB RSI,RBP
000024d7(4): MOV qword ptr [R14 + 0x40],RAX
000024db(8): MOV qword ptr [R14 + 0x48],0x0
000024e3(4): SUB RSI,0x1
000024e7(11): MOV qword ptr [0x0021c380],0x2c6
000024f2(5): CALL 0x00015380
000024f7(3): TEST RAX,RAX
000024fa(3): MOV R15,RAX
000024fd(6): JNZ 0x00002cbd
00002503(5): CMP byte ptr [R13 + 0x1],0x0
00002508(6): JZ 0x00002430
0000250e(4): LEA RDI,[R13 + 0x1]
00002512(7): LEA R8,[0x170e1]
00002519(2): XOR ESI,ESI
0000251b(3): MOV RCX,R14
0000251e(5): MOV EDX,0xa
00002523(5): CALL 0x00006cb0
00002528(2): TEST EAX,EAX
0000252a(6): JZ 0x00002430
00002530(3): MOV RDI,RBP
00002533(5): CALL 0x00006260
00002538(7): LEA RSI,[0x16998]
0000253f(3): MOV RBX,RAX
00002542(5): MOV EDX,0x5
00002547(2): XOR EDI,EDI
00002549(5): CALL 0x00001bf0
0000254e(3): MOV RCX,RBX
00002551(3): MOV RDX,RAX
00002554(2): XOR ESI,ESI
00002556(5): MOV EDI,0x1
0000255b(2): XOR EAX,EAX
0000255d(5): CALL 0x00001e60
00002562(6): NOP word ptr [RAX + RAX*0x1]
00002568(7): LEA RBX,[0x16b20]
0000256f(7): LEA RDI,[0x21c120]
00002576(5): LEA R13,[RSP + 0x40]
0000257b(7): LEA R15,[0x21c120]
00002582(4): LEA R14,[RBX + 0x2c]
00002586(3): MOV RBP,RBX
00002589(5): CALL 0x00001d60
0000258e(4): MOV R12D,dword ptr [RBP]
00002592(2): XOR ESI,ESI
00002594(3): MOV RDX,R13
00002597(3): MOV EDI,R12D
0000259a(5): CALL 0x00001b80
0000259f(6): CMP qword ptr [RSP + 0x40],0x1
000025a5(2): JZ 0x000025b2
000025a7(3): MOV ESI,R12D
000025aa(3): MOV RDI,R15
000025ad(5): CALL 0x00001f30
000025b2(4): ADD RBP,0x4
000025b6(3): CMP R14,RBP
000025b9(2): JNZ 0x0000258e
000025bb(7): LEA RAX,[0x35e0]
000025c2(5): LEA RDI,[RSP + 0x48]
000025c7(7): LEA RSI,[0x21c120]
000025ce(5): MOV ECX,0x20
000025d3(11): MOV dword ptr [0xc8 + RSP],0x0
000025de(7): LEA R14,[0x21c120]
000025e5(5): MOV qword ptr [RSP + 0x40],RAX
000025ea(2): MOVSD.REP RDI,RSI
000025ec(2): JMP 0x000025f9
000025f0(4): ADD RBX,0x4
000025f4(3): CMP RBP,RBX
000025f7(2): JZ 0x00002621
000025f9(3): MOV R12D,dword ptr [RBX]
000025fc(3): MOV RDI,R14
000025ff(3): MOV ESI,R12D
00002602(5): CALL 0x00001ed0
00002607(2): TEST EAX,EAX
00002609(2): JZ 0x000025f0
0000260b(2): XOR EDX,EDX
0000260d(3): MOV RSI,R13
00002610(3): MOV EDI,R12D
00002613(4): ADD RBX,0x4
00002617(5): CALL 0x00001b80
0000261c(3): CMP RBP,RBX
0000261f(2): JNZ 0x000025f9
00002621(9): MOV qword ptr [RSP + 0x8],0x0
0000262a(5): MOV RAX,qword ptr [RSP + 0x8]
0000262f(7): CMP RAX,qword ptr [0x0021c1a0]
00002636(6): JNC 0x00002ba5
0000263c(6): IMUL R15,qword ptr [RSP + 0x8],0x60
00002642(7): MOV R12,qword ptr [0x0021c1a8]
00002649(3): XOR R14D,R14D
0000264c(6): CMP byte ptr [R12 + R15*0x1 + 0x1e],0x0
00002652(6): JZ 0x00002823
00002658(4): LEA RBX,[R12 + R15*0x1]
0000265c(4): CMP byte ptr [RBX + 0x1c],0x0
00002660(2): JNZ 0x0000266c
00002662(4): CMP R14,qword ptr [RBX + 0x10]
00002666(6): JA 0x00002a09
0000266c(5): MOVZX R12D,byte ptr [RBX + 0x1d]
00002671(3): TEST R12B,R12B
00002674(6): JZ 0x00002aa1
0000267a(7): CMP byte ptr [0x0021c1b0],0x0
00002681(2): JZ 0x00002691
00002683(8): CMP qword ptr [0x0021c200],0x0
0000268b(6): JNZ 0x00002c05
00002691(4): CMP qword ptr [RBX],0x0
00002695(4): LEA RBP,[RBX + 0x20]
00002699(2): JNS 0x000026e6
0000269b(5): JMP 0x000028f8
000026a0(3): MOV RCX,qword ptr [RAX]
000026a3(4): MOV RSI,qword ptr [RAX + 0x8]
000026a7(3): MOV RDI,RBP
000026aa(5): CMP byte ptr [RSI + RCX*0x1 + -0x1],0xa
000026af(4): LEA RDX,[RCX + -0x1]
000026b3(4): CMOVNZ RDX,RCX
000026b7(3): XOR R9D,R9D
000026ba(2): XOR ECX,ECX
000026bc(3): MOV R8,RDX
000026bf(5): CALL 0x00015d20
000026c4(4): CMP RAX,-0x2
000026c8(6): JZ 0x00002e0a
000026ce(4): CMP RAX,-0x1
000026d2(6): JNZ 0x00002a14
000026d8(5): CALL 0x00003c90
000026dd(3): TEST R12B,R12B
000026e0(6): JZ 0x00002adc
000026e6(7): MOV RAX,qword ptr [0x0021c200]
000026ed(4): LEA RDI,[RAX + 0x1]
000026f1(7): MOV qword ptr [0x0021c200],RDI
000026f8(5): CALL 0x00003da0
000026fd(3): TEST RAX,RAX
00002700(2): JNZ 0x000026a0
00002702(4): CMP byte ptr [RBX + 0x1c],0x0
00002706(6): JZ 0x00002e9c
0000270c(3): TEST R12B,R12B
0000270f(2): JNZ 0x0000271b
00002711(5): CALL 0x00003d70
00002716(5): CALL 0x00003280
0000271b(2): XOR EDI,EDI
0000271d(5): CALL 0x00001ee0
00002722(2): XOR EAX,EAX
00002724(4): OR RCX,-0x1
00002728(3): MOV RDI,RBP
0000272b(2): SCASB.REPNE RDI
0000272d(3): MOV RAX,RCX
00002730(3): NOT RAX
00002733(5): LEA R13,[RBP + RAX*0x1 + -0x2]
00002738(5): CMP byte ptr [R13],0x7d
0000273d(6): JNZ 0x00002e6a
00002743(4): LEA RDI,[RBP + 0x1]
00002747(4): LEA RAX,[R13 + -0x1]
0000274b(5): MOV byte ptr [R13],0x0
00002750(3): CMP RDI,RAX
00002753(2): JZ 0x000027d4
00002755(5): MOV RCX,qword ptr [RSP + 0x28]
0000275a(7): LEA R8,[0x170e1]
00002761(2): XOR ESI,ESI
00002763(5): MOV EDX,0xa
00002768(5): CALL 0x00007370
0000276d(2): TEST EAX,EAX
0000276f(6): JNZ 0x00002e30
00002775(5): MOV RAX,qword ptr [RSP + 0x38]
0000277a(4): MOV qword ptr [R14 + 0x10],RAX
0000277e(3): LEA EAX,[RBX + 0x2]
00002781(4): CMP dword ptr [RSP + 0x8],EAX
00002785(5): MOV byte ptr [R13],0x7d
0000278a(6): JLE 0x00002568
00002790(5): MOV RBP,qword ptr [R12 + R15*0x1 + 0x8]
00002795(5): JMP 0x0000245c
0000279a(4): MOV RDI,qword ptr [RBP]
0000279e(5): CALL 0x00006260
000027a3(7): LEA RSI,[0x16a30]
000027aa(3): MOV RBP,RAX
000027ad(5): MOV EDX,0x5
000027b2(2): XOR EDI,EDI
000027b4(5): CALL 0x00001bf0
000027b9(3): MOV RCX,RBP
000027bc(3): MOV RDX,RAX
000027bf(2): XOR ESI,ESI
000027c1(2): XOR EAX,EAX
000027c3(2): XOR EDI,EDI
000027c5(5): CALL 0x00001e60
000027ca(5): MOV RAX,qword ptr [RSP + 0x30]
000027cf(5): JMP 0x00002425
000027d4(4): CMP byte ptr [RBP + 0x1],0x2a
000027d8(6): JNZ 0x00002755
000027de(5): MOV byte ptr [R14 + 0x1c],0x1
000027e3(2): JMP 0x0000277e
000027e5(5): CALL 0x00003280
000027ea(7): CMP byte ptr [0x0021c1b0],0x0
000027f1(6): JNZ 0x000028b1
000027f7(9): NOP word ptr [RAX + RAX*0x1]
00002800(7): MOV RAX,qword ptr [0x0021c200]
00002807(4): LEA RDI,[RAX + 0x1]
0000280b(5): CALL 0x00003da0
00002810(3): TEST RAX,RAX
00002813(6): JZ 0x00002933
00002819(7): MOV R12,qword ptr [0x0021c1a8]
00002820(3): MOV R14,R13
00002823(3): ADD R12,R15
00002826(6): CMP byte ptr [R12 + 0x1c],0x0
0000282c(2): JNZ 0x00002839
0000282e(5): CMP R14,qword ptr [R12 + 0x10]
00002833(6): JA 0x00002a09
00002839(5): MOV RBP,qword ptr [R12 + 0x8]
0000283e(4): LEA R13,[R14 + 0x1]
00002842(5): CALL 0x000034d0
00002847(7): MOV RAX,qword ptr [0x0021c200]
0000284e(4): IMUL RBP,R13
00002852(4): LEA RDI,[RAX + 0x1]
00002856(5): CALL 0x00003da0
0000285b(3): TEST RAX,RAX
0000285e(6): JZ 0x00002919
00002864(5): CALL 0x00003ea0
00002869(3): CMP RBP,RAX
0000286c(4): LEA RBX,[RAX + 0x1]
00002870(6): JBE 0x000027e5
00002876(4): ADD RBP,0x1
0000287a(6): NOP word ptr [RAX + RAX*0x1]
00002880(5): CALL 0x00003c90
00002885(3): TEST RAX,RAX
00002888(6): JZ 0x00002926
0000288e(3): MOV RDI,RAX
00002891(4): ADD RBX,0x1
00002895(5): CALL 0x00003440
0000289a(3): CMP RBX,RBP
0000289d(2): JNZ 0x00002880
0000289f(5): CALL 0x00003280
000028a4(7): CMP byte ptr [0x0021c1b0],0x0
000028ab(6): JZ 0x00002800
000028b1(5): CALL 0x00003c90
000028b6(5): JMP 0x00002800
000028c0(3): MOV RCX,qword ptr [RAX]
000028c3(4): MOV RSI,qword ptr [RAX + 0x8]
000028c7(3): MOV RDI,RBP
000028ca(5): CMP byte ptr [RSI + RCX*0x1 + -0x1],0xa
000028cf(4): LEA RDX,[RCX + -0x1]
000028d3(4): CMOVNZ RDX,RCX
000028d7(3): XOR R9D,R9D
000028da(2): XOR ECX,ECX
000028dc(3): MOV R8,RDX
000028df(5): CALL 0x00015d20
000028e4(4): CMP RAX,-0x2
000028e8(6): JZ 0x00002e0a
000028ee(4): CMP RAX,-0x1
000028f2(6): JNZ 0x00002a14
000028f8(7): MOV RAX,qword ptr [0x0021c200]
000028ff(4): LEA RDI,[RAX + 0x1]
00002903(7): MOV qword ptr [0x0021c200],RDI
0000290a(5): CALL 0x00003da0
0000290f(3): TEST RAX,RAX
00002912(2): JNZ 0x000028c0
00002914(5): JMP 0x00002702
00002919(7): CMP byte ptr [0x0021c1b0],0x0
00002920(6): JZ 0x00002864
00002926(5): MOV RDI,qword ptr [R12 + 0x8]
0000292b(3): MOV RSI,R14
0000292e(5): CALL 0x00003610
00002933(7): CMP byte ptr [0x0021c1b0],0x0
0000293a(6): JNZ 0x00002819
00002940(2): JMP 0x00002926
00002942(3): TEST DIL,DIL
00002945(6): JNZ 0x00002eab
0000294b(2): XOR EDI,EDI
0000294d(3): MOVZX EDX,byte ptr [RAX]
00002950(3): MOV RSI,RAX
00002953(3): CMP DL,0x27
00002956(6): JZ 0x00002a01
0000295c(2): JG 0x0000296c
0000295e(3): CMP DL,0x23
00002961(2): JNZ 0x00002976
00002963(3): OR EDI,0x2
00002966(4): ADD RAX,0x1
0000296a(2): JMP 0x0000294d
0000296c(3): CMP DL,0x2d
0000296f(2): JZ 0x00002966
00002971(3): CMP DL,0x30
00002974(2): JZ 0x00002966
00002976(3): MOVSX EAX,DL
00002979(3): SUB EAX,0x30
0000297c(3): CMP EAX,0x9
0000297f(2): JA 0x00002999
00002981(7): NOP dword ptr [RAX]
00002988(4): ADD RSI,0x1
0000298c(3): MOVSX EAX,byte ptr [RSI]
0000298f(2): MOV EDX,EAX
00002991(3): SUB EAX,0x30
00002994(3): CMP EAX,0x9
00002997(2): JBE 0x00002988
00002999(3): CMP DL,0x2e
0000299c(2): JZ 0x000029f0
0000299e(4): MOVZX R13D,byte ptr [RSI]
000029a2(4): CMP R13B,0x69
000029a6(3): MOV RBP,R13
000029a9(6): JZ 0x00002bf8
000029af(6): JLE 0x00002b44
000029b5(4): CMP R13B,0x75
000029b9(6): JZ 0x00002bee
000029bf(4): CMP R13B,0x78
000029c3(2): JZ 0x000029cf
000029c5(4): CMP R13B,0x6f
000029c9(6): JNZ 0x00002b61
000029cf(5): MOV EAX,0x2
000029d4(2): NOT EAX
000029d6(2): AND EDI,EAX
000029d8(6): JNZ 0x00002dd3
000029de(4): MOVZX ECX,byte ptr [RSI + 0x1]
000029e2(4): LEA RAX,[RSI + 0x1]
000029e6(5): MOV EDI,0x1
000029eb(5): JMP 0x000022ea
000029f0(4): ADD RSI,0x1
000029f4(3): MOVSX EAX,byte ptr [RSI]
000029f7(3): SUB EAX,0x30
000029fa(3): CMP EAX,0x9
000029fd(2): JA 0x0000299e
000029ff(2): JMP 0x000029f0
00002a01(3): OR EDI,0x1
00002a04(5): JMP 0x00002966
00002a09(6): ADD qword ptr [RSP + 0x8],0x1
00002a0f(5): JMP 0x0000262a
00002a14(7): MOV RAX,qword ptr [0x0021c200]
00002a1b(3): ADD RAX,qword ptr [RBX]
00002a1e(3): MOV RBP,RAX
00002a21(5): MOV qword ptr [RSP + 0x10],RAX
00002a26(3): MOV EAX,dword ptr [RBX + 0x18]
00002a29(4): MOV dword ptr [RSP + 0x18],EAX
00002a2d(5): CALL 0x00003ea0
00002a32(3): CMP RBP,RAX
00002a35(6): JC 0x00002f10
00002a3b(5): MOV R13,qword ptr [RSP + 0x10]
00002a40(3): SUB R13,RAX
00002a43(2): JZ 0x00002a76
00002a45(2): XOR EBP,EBP
00002a47(2): JMP 0x00002a59
00002a50(4): ADD RBP,0x1
00002a54(3): CMP R13,RBP
00002a57(2): JZ 0x00002a76
00002a59(5): CALL 0x00003c90
00002a5e(3): TEST RAX,RAX
00002a61(6): JZ 0x00002ecf
00002a67(3): TEST R12B,R12B
00002a6a(2): JNZ 0x00002a50
00002a6c(3): MOV RDI,RAX
00002a6f(5): CALL 0x00003440
00002a74(2): JMP 0x00002a50
00002a76(3): TEST R12B,R12B
00002a79(6): JZ 0x00002c0f
00002a7f(4): CMP qword ptr [RBX],0x0
00002a83(2): JLE 0x00002a91
00002a85(5): MOV RAX,qword ptr [RSP + 0x10]
00002a8a(7): MOV qword ptr [0x0021c200],RAX
00002a91(4): ADD R14,0x1
00002a95(7): MOV R12,qword ptr [0x0021c1a8]
00002a9c(5): JMP 0x00002658
00002aa1(5): CALL 0x000034d0
00002aa6(5): JMP 0x0000267a
00002aab(3): TEST DIL,DIL
00002aae(6): JZ 0x00002c3b
00002ab4(4): OR R9D,0xffffffff
00002ab8(4): OR RCX,-0x1
00002abc(5): MOV EDX,0x1
00002ac1(2): XOR ESI,ESI
00002ac3(2): XOR EDI,EDI
00002ac5(2): XOR EAX,EAX
00002ac7(5): CALL 0x00001ae0
00002acc(2): TEST EAX,EAX
00002ace(3): MOVSXD RDX,EAX
00002ad1(6): JNS 0x0000233f
00002ad7(5): CALL 0x00003810
00002adc(3): MOV RDI,RAX
00002adf(5): CALL 0x00003440
00002ae4(5): JMP 0x000026e6
00002ae9(2): XOR ECX,ECX
00002aeb(2): XOR EDX,EDX
00002aed(2): XOR EDI,EDI
00002aef(3): MOV RSI,RBP
00002af2(5): CALL 0x00004400
00002af7(2): TEST EAX,EAX
00002af9(6): MOV EBX,dword ptr [0x0021c0b0]
00002aff(6): JNS 0x0000237d
00002b05(3): MOV RSI,RBP
00002b08(5): MOV EDI,0x4
00002b0d(5): CALL 0x00005f90
00002b12(7): LEA RSI,[0x1613d]
00002b19(5): MOV EDX,0x5
00002b1e(2): XOR EDI,EDI
00002b20(3): MOV RBP,RAX
00002b23(5): CALL 0x00001bf0
00002b28(3): MOV RBX,RAX
00002b2b(5): CALL 0x00001b20
00002b30(2): MOV ESI,dword ptr [RAX]
00002b32(3): MOV RCX,RBP
00002b35(3): MOV RDX,RBX
00002b38(5): MOV EDI,0x1
00002b3d(2): XOR EAX,EAX
00002b3f(5): CALL 0x00001e60
00002b44(4): CMP R13B,0x58
00002b48(6): JZ 0x000029cf
00002b4e(4): CMP R13B,0x64
00002b52(6): JZ 0x00002bf8
00002b58(3): TEST R13B,R13B
00002b5b(6): JZ 0x00002f22
00002b61(5): CALL 0x00001f50
00002b66(3): MOV RAX,qword ptr [RAX]
00002b69(5): MOV EDX,0x5
00002b6e(5): TEST byte ptr [RAX + RBP*0x2 + 0x1],0x40
00002b73(6): JZ 0x00002c19
00002b79(7): LEA RSI,[0x168b0]
00002b80(2): XOR EDI,EDI
00002b82(5): CALL 0x00001bf0
00002b87(3): MOV ECX,R13D
00002b8a(3): MOV RDX,RAX
00002b8d(2): XOR ESI,ESI
00002b8f(5): MOV EDI,0x1
00002b94(2): XOR EAX,EAX
00002b96(5): CALL 0x00001e60
00002b9b(5): MOV EDX,0xa
00002ba0(5): JMP 0x0000233f
00002ba5(5): CALL 0x000034d0
00002baa(5): CALL 0x00003d70
00002baf(5): CALL 0x00003280
00002bb4(2): XOR EDI,EDI
00002bb6(5): CALL 0x00001cc0
00002bbb(2): TEST EAX,EAX
00002bbd(6): JNZ 0x00002da5
00002bc3(2): XOR EAX,EAX
00002bc5(8): MOV RCX,qword ptr [0xf8 + RSP]
00002bcd(9): XOR RCX,qword ptr FS:[0x28]
00002bd6(6): JNZ 0x00002da0
00002bdc(7): ADD RSP,0x108
00002be3(1): POP RBX
00002be4(1): POP RBP
00002be5(2): POP R12
00002be7(2): POP R13
00002be9(2): POP R14
00002beb(2): POP R15
00002bed(1): RET
00002bee(5): MOV EAX,0x1
00002bf3(5): JMP 0x000029d4
00002bf8(3): MOV byte ptr [RSI],0x75
00002bfb(5): MOV EAX,0x1
00002c00(5): JMP 0x000029d4
00002c05(5): CALL 0x00003c90
00002c0a(5): JMP 0x00002691
00002c0f(5): CALL 0x00003280
00002c14(5): JMP 0x00002a7f
00002c19(7): LEA RSI,[0x168e0]
00002c20(2): XOR EDI,EDI
00002c22(5): CALL 0x00001bf0
00002c27(3): MOV ECX,R13D
00002c2a(3): MOV RDX,RAX
00002c2d(2): XOR ESI,ESI
00002c2f(5): MOV EDI,0x1
00002c34(2): XOR EAX,EAX
00002c36(5): CALL 0x00001e60
00002c3b(7): LEA RSI,[0x16828]
00002c42(5): MOV EDX,0x5
00002c47(2): XOR EDI,EDI
00002c49(5): CALL 0x00001bf0
00002c4e(2): XOR ESI,ESI
00002c50(3): MOV RDX,RAX
00002c53(5): MOV EDI,0x1
00002c58(2): XOR EAX,EAX
00002c5a(5): CALL 0x00001e60
00002c5f(4): MOV RBX,qword ptr [RBP]
00002c63(7): LEA RSI,[0x169c0]
00002c6a(5): MOV EDX,0x5
00002c6f(2): XOR EDI,EDI
00002c71(5): CALL 0x00001bf0
00002c76(3): MOV RCX,RBX
00002c79(3): MOV RDX,RAX
00002c7c(2): XOR ESI,ESI
00002c7e(5): MOV EDI,0x1
00002c83(2): XOR EAX,EAX
00002c85(5): CALL 0x00001e60
00002c8a(4): MOV RDI,qword ptr [RBP]
00002c8e(5): CALL 0x00006260
00002c93(7): LEA RSI,[0x16158]
00002c9a(3): MOV RBX,RAX
00002c9d(5): MOV EDX,0x5
00002ca2(2): XOR EDI,EDI
00002ca4(5): CALL 0x00001bf0
00002ca9(3): MOV RCX,RBX
00002cac(3): MOV RDX,RAX
00002caf(2): XOR ESI,ESI
00002cb1(5): MOV EDI,0x1
00002cb6(2): XOR EAX,EAX
00002cb8(5): CALL 0x00001e60
00002cbd(3): MOV RDI,RBP
00002cc0(5): CALL 0x00006260
00002cc5(7): LEA RSI,[0x16970]
00002ccc(3): MOV RBX,RAX
00002ccf(5): MOV EDX,0x5
00002cd4(2): XOR EDI,EDI
00002cd6(5): CALL 0x00001bf0
00002cdb(3): MOV R8,R15
00002cde(3): MOV RDX,RAX
00002ce1(3): MOV RCX,RBX
00002ce4(2): XOR ESI,ESI
00002ce6(2): XOR EDI,EDI
00002ce8(2): XOR EAX,EAX
00002cea(5): CALL 0x00001e60
00002cef(5): CALL 0x00003220
00002cf4(7): LEA RSI,[0x16948]
00002cfb(5): MOV EDX,0x5
00002d00(2): XOR EDI,EDI
00002d02(5): CALL 0x00001bf0
00002d07(3): MOV R8D,R14D
00002d0a(3): MOV RDX,RAX
00002d0d(3): MOV RCX,RBP
00002d10(2): XOR ESI,ESI
00002d12(5): MOV EDI,0x1
00002d17(2): XOR EAX,EAX
00002d19(5): CALL 0x00001e60
00002d1e(8): LEA RSI,[0xe0 + RSP]
00002d26(5): CALL 0x00004500
00002d2b(4): MOV RDI,qword ptr [RBP]
00002d2f(3): MOV R12,RAX
00002d32(5): CALL 0x00006260
00002d37(7): LEA RSI,[0x169f0]
00002d3e(3): MOV RBX,RAX
00002d41(5): MOV EDX,0x5
00002d46(2): XOR EDI,EDI
00002d48(5): CALL 0x00001bf0
00002d4d(3): MOV R8,R12
00002d50(3): MOV RDX,RAX
00002d53(3): MOV RCX,RBX
00002d56(2): XOR ESI,ESI
00002d58(5): MOV EDI,0x1
00002d5d(2): XOR EAX,EAX
00002d5f(5): CALL 0x00001e60
00002d64(4): CMP EAX,dword ptr [RSP + 0x8]
00002d68(6): JL 0x00002f46
00002d6e(7): LEA RSI,[0x16114]
00002d75(5): MOV EDX,0x5
00002d7a(2): XOR EDI,EDI
00002d7c(5): CALL 0x00001bf0
00002d81(2): XOR ESI,ESI
00002d83(3): MOV RDX,RAX
00002d86(2): XOR EDI,EDI
00002d88(2): XOR EAX,EAX
00002d8a(5): CALL 0x00001e60
00002d8f(5): MOV EDI,0x1
00002d94(5): CALL 0x00003f10
00002d99(2): XOR EDI,EDI
00002d9b(5): CALL 0x00003f10
00002da0(5): CALL 0x00001c20
00002da5(7): LEA RSI,[0x15fe2]
00002dac(5): MOV EDX,0x5
00002db1(2): XOR EDI,EDI
00002db3(5): CALL 0x00001bf0
00002db8(3): MOV RBX,RAX
00002dbb(5): CALL 0x00001b20
00002dc0(2): MOV ESI,dword ptr [RAX]
00002dc2(3): MOV RDX,RBX
00002dc5(2): XOR EDI,EDI
00002dc7(2): XOR EAX,EAX
00002dc9(5): CALL 0x00001e60
00002dce(5): CALL 0x00003220
00002dd3(3): AND EDI,0x2
00002dd6(7): LEA RSI,[0x16910]
00002ddd(5): MOV EDX,0x5
00002de2(3): CMP EDI,0x1
00002de5(2): SBB EBX,EBX
00002de7(2): XOR EDI,EDI
00002de9(3): AND EBX,0x4
00002dec(3): ADD EBX,0x23
00002def(5): CALL 0x00001bf0
00002df4(3): MOV R8D,R13D
00002df7(3): MOV RDX,RAX
00002dfa(2): MOV ECX,EBX
00002dfc(2): XOR ESI,ESI
00002dfe(5): MOV EDI,0x1
00002e03(2): XOR EAX,EAX
00002e05(5): CALL 0x00001e60
00002e0a(7): LEA RSI,[0x16ac8]
00002e11(5): MOV EDX,0x5
00002e16(2): XOR EDI,EDI
00002e18(5): CALL 0x00001bf0
00002e1d(2): XOR ESI,ESI
00002e1f(3): MOV RDX,RAX
00002e22(2): XOR EDI,EDI
00002e24(2): XOR EAX,EAX
00002e26(5): CALL 0x00001e60
00002e2b(5): CALL 0x00003220
00002e30(7): MOV RAX,qword ptr [0x0021c1b8]
00002e37(4): MOV RDI,qword ptr [RAX + R15*0x1]
00002e3b(5): CALL 0x00006260
00002e40(7): LEA RSI,[0x16a98]
00002e47(3): MOV RBX,RAX
00002e4a(5): MOV EDX,0x5
00002e4f(2): XOR EDI,EDI
00002e51(5): CALL 0x00001bf0
00002e56(3): MOV RCX,RBX
00002e59(3): MOV RDX,RAX
00002e5c(2): XOR ESI,ESI
00002e5e(5): MOV EDI,0x1
00002e63(2): XOR EAX,EAX
00002e65(5): CALL 0x00001e60
00002e6a(3): MOV RDI,RBP
00002e6d(5): CALL 0x00006260
00002e72(7): LEA RSI,[0x16a70]
00002e79(3): MOV RBX,RAX
00002e7c(5): MOV EDX,0x5
00002e81(2): XOR EDI,EDI
00002e83(5): CALL 0x00001bf0
00002e88(3): MOV RCX,RBX
00002e8b(3): MOV RDX,RAX
00002e8e(2): XOR ESI,ESI
00002e90(5): MOV EDI,0x1
00002e95(2): XOR EAX,EAX
00002e97(5): CALL 0x00001e60
00002e9c(4): MOVZX EDX,R12B
00002ea0(3): MOV RSI,R14
00002ea3(3): MOV RDI,RBX
00002ea6(5): CALL 0x00001f80
00002eab(7): LEA RSI,[0x16858]
00002eb2(5): MOV EDX,0x5
00002eb7(2): XOR EDI,EDI
00002eb9(5): CALL 0x00001bf0
00002ebe(2): XOR ESI,ESI
00002ec0(3): MOV RDX,RAX
00002ec3(5): MOV EDI,0x1
00002ec8(2): XOR EAX,EAX
00002eca(5): CALL 0x00001e60
00002ecf(5): MOVSXD RAX,dword ptr [RSP + 0x18]
00002ed4(7): MOV RDX,qword ptr [0x0021c1b8]
00002edb(4): MOV RDI,qword ptr [RDX + RAX*0x8]
00002edf(5): CALL 0x00006260
00002ee4(7): LEA RSI,[0x1616c]
00002eeb(3): MOV RBX,RAX
00002eee(5): MOV EDX,0x5
00002ef3(2): XOR EDI,EDI
00002ef5(5): CALL 0x00001bf0
00002efa(3): MOV RCX,RBX
00002efd(3): MOV RDX,RAX
00002f00(2): XOR ESI,ESI
00002f02(2): XOR EDI,EDI
00002f04(2): XOR EAX,EAX
00002f06(5): CALL 0x00001e60
00002f0b(5): CALL 0x00003220
00002f10(5): MOVSXD RDX,dword ptr [RSP + 0x18]
00002f15(7): MOV RAX,qword ptr [0x0021c1b8]
00002f1c(4): MOV RDI,qword ptr [RAX + RDX*0x8]
00002f20(2): JMP 0x00002edf
00002f22(7): LEA RSI,[0x16888]
00002f29(5): MOV EDX,0x5
00002f2e(2): XOR EDI,EDI
00002f30(5): CALL 0x00001bf0
00002f35(2): XOR ESI,ESI
00002f37(3): MOV RDX,RAX
00002f3a(5): MOV EDI,0x1
00002f3f(2): XOR EAX,EAX
00002f41(5): CALL 0x00001e60
00002f46(5): MOVSXD R14,dword ptr [RSP + 0x8]
00002f4b(5): MOV RDI,qword ptr [R12 + R14*0x8 + -0x8]
00002f50(5): CALL 0x00006260
00002f55(7): LEA RSI,[0x16124]
00002f5c(3): MOV RBX,RAX
00002f5f(2): XOR EDI,EDI
00002f61(5): MOV EDX,0x5
00002f66(5): CALL 0x00001bf0
00002f6b(3): MOV RCX,RBX
00002f6e(3): MOV RDX,RAX
00002f71(2): XOR ESI,ESI
00002f73(2): XOR EDI,EDI
00002f75(2): XOR EAX,EAX
00002f77(5): CALL 0x00001e60
00002f7c(5): JMP 0x00002d8f
00002f90(2): XOR EBP,EBP
00002f92(3): MOV R9,RDX
00002f95(1): POP RSI
00002f96(3): MOV RDX,RSP
00002f99(4): AND RSP,-0x10
00002f9d(1): PUSH RAX
00002f9e(1): PUSH RSP
00002f9f(7): LEA R8,[0x15f60]
00002fa6(7): LEA RCX,[0x15ef0]
00002fad(7): LEA RDI,[0x2060]
00002fb4(6): CALL qword ptr [0x0021bfe0]
00002fba(1): HLT
00002fc0(7): LEA RDI,[0x21c0a0]
00002fc7(1): PUSH RBP
00002fc8(7): LEA RAX,[0x21c0a0]
00002fcf(3): CMP RAX,RDI
00002fd2(3): MOV RBP,RSP
00002fd5(2): JZ 0x00002ff0
00002fd7(7): MOV RAX,qword ptr [0x0021bfd8]
00002fde(3): TEST RAX,RAX
00002fe1(2): JZ 0x00002ff0
00002fe3(1): POP RBP
00002fe4(2): JMP RAX
00002ff0(1): POP RBP
00002ff1(1): RET
00003000(7): LEA RDI,[0x21c0a0]
00003007(7): LEA RSI,[0x21c0a0]
0000300e(1): PUSH RBP
0000300f(3): SUB RSI,RDI
00003012(3): MOV RBP,RSP
00003015(4): SAR RSI,0x3
00003019(3): MOV RAX,RSI
0000301c(4): SHR RAX,0x3f
00003020(3): ADD RSI,RAX
00003023(3): SAR RSI,1
00003026(2): JZ 0x00003040
00003028(7): MOV RAX,qword ptr [0x0021bff0]
0000302f(3): TEST RAX,RAX
00003032(2): JZ 0x00003040
00003034(1): POP RBP
00003035(2): JMP RAX
00003040(1): POP RBP
00003041(1): RET
00003050(7): CMP byte ptr [0x0021c0e8],0x0
00003057(2): JNZ 0x00003088
00003059(8): CMP qword ptr [0x0021bff8],0x0
00003061(1): PUSH RBP
00003062(3): MOV RBP,RSP
00003065(2): JZ 0x00003073
00003067(7): MOV RDI,qword ptr [0x0021c008]
0000306e(5): CALL 0x00001f70
00003073(5): CALL 0x00002fc0
00003078(7): MOV byte ptr [0x0021c0e8],0x1
0000307f(1): POP RBP
00003080(1): RET
00003088(2): RET
00003090(1): PUSH RBP
00003091(3): MOV RBP,RSP
00003094(1): POP RBP
00003095(5): JMP 0x00003000
000030a0(2): PUSH R12
000030a2(7): MOV RSI,qword ptr [0x0021c1e8]
000030a9(1): PUSH RBP
000030aa(2): MOV EBP,EDI
000030ac(7): MOV RDI,qword ptr [0x0021c1f0]
000030b3(1): PUSH RBX
000030b4(5): CALL 0x00001b60
000030b9(7): MOV RAX,qword ptr [0x0021c1e0]
000030c0(3): TEST RAX,RAX
000030c3(2): JZ 0x00003110
000030c5(7): MOV R12,qword ptr [0x0021c1e0]
000030cc(7): MOV RBX,qword ptr [0x0021c1f0]
000030d3(7): MOV RDI,qword ptr [0x0021c1e8]
000030da(5): CALL 0x00001c10
000030df(4): LEA RDI,[RBX + RAX*0x1]
000030e3(3): MOV R8D,EBP
000030e6(3): MOV RCX,R12
000030e9(7): MOV RDX,-0x1
000030f0(5): MOV ESI,0x1
000030f5(2): XOR EAX,EAX
000030f7(5): CALL 0x00001f60
000030fc(1): POP RBX
000030fd(7): MOV RAX,qword ptr [0x0021c1f0]
00003104(1): POP RBP
00003105(2): POP R12
00003107(1): RET
00003110(7): MOV R12D,dword ptr [0x0021c010]
00003117(7): MOV RBX,qword ptr [0x0021c1f0]
0000311e(7): MOV RDI,qword ptr [0x0021c1e8]
00003125(5): CALL 0x00001c10
0000312a(7): LEA RCX,[0x15fa4]
00003131(4): LEA RDI,[RBX + RAX*0x1]
00003135(3): MOV R9D,EBP
00003138(3): MOV R8D,R12D
0000313b(7): MOV RDX,-0x1
00003142(5): MOV ESI,0x1
00003147(2): XOR EAX,EAX
00003149(5): CALL 0x00001f60
0000314e(1): POP RBX
0000314f(7): MOV RAX,qword ptr [0x0021c1f0]
00003156(1): POP RBP
00003157(2): POP R12
00003159(1): RET
00003160(6): MOV EAX,dword ptr [0x0021c1d8]
00003166(2): TEST EAX,EAX
00003168(6): JZ 0x00003208
0000316e(2): PUSH R13
00003170(2): PUSH R12
00003172(7): LEA R13,[0x16b61]
00003179(1): PUSH RBP
0000317a(1): PUSH RBX
0000317b(3): MOV R12D,EDI
0000317e(2): XOR EBX,EBX
00003180(4): SUB RSP,0x8
00003184(2): JMP 0x0000319d
00003190(6): MOV EAX,dword ptr [0x0021c1d8]
00003196(3): ADD EBX,0x1
00003199(2): CMP EBX,EAX
0000319b(2): JNC 0x000031ed
0000319d(2): MOV EDI,EBX
0000319f(5): CALL 0x000030a0
000031a4(3): MOV RDI,RAX
000031a7(3): MOV RBP,RAX
000031aa(5): CALL 0x00001b30
000031af(2): TEST EAX,EAX
000031b1(2): JZ 0x00003190
000031b3(3): TEST R12B,R12B
000031b6(2): JNZ 0x00003190
000031b8(3): MOV RDX,RBP
000031bb(2): XOR EDI,EDI
000031bd(5): MOV ESI,0x3
000031c2(5): CALL 0x00006090
000031c7(3): MOV RBP,RAX
000031ca(3): ADD EBX,0x1
000031cd(5): CALL 0x00001b20
000031d2(2): MOV ESI,dword ptr [RAX]
000031d4(2): XOR EDI,EDI
000031d6(2): XOR EAX,EAX
000031d8(3): MOV RCX,RBP
000031db(3): MOV RDX,R13
000031de(5): CALL 0x00001e60
000031e3(6): MOV EAX,dword ptr [0x0021c1d8]
000031e9(2): CMP EBX,EAX
000031eb(2): JC 0x0000319d
000031ed(10): MOV dword ptr [0x0021c1d8],0x0
000031f7(4): ADD RSP,0x8
000031fb(1): POP RBX
000031fc(1): POP RBP
000031fd(2): POP R12
000031ff(2): POP R13
00003201(1): RET
00003208(10): MOV dword ptr [0x0021c1d8],0x0
00003212(1): RET
00003220(1): PUSH RBX
00003221(7): SUB RSP,0x90
00003228(9): MOV RAX,qword ptr FS:[0x28]
00003231(8): MOV qword ptr [0x88 + RSP],RAX
00003239(2): XOR EAX,EAX
0000323b(3): MOV RBX,RSP
0000323e(5): CALL 0x00003280
00003243(7): LEA RSI,[0x21c120]
0000324a(2): XOR EDI,EDI
0000324c(3): MOV RDX,RBX
0000324f(5): CALL 0x00001ad0
00003254(7): MOVZX EAX,byte ptr [0x0021c1b2]
0000325b(2): TEST AL,AL
0000325d(2): JZ 0x00003266
0000325f(2): XOR EDI,EDI
00003261(5): CALL 0x00003160
00003266(5): MOV EDI,0x2
0000326b(2): XOR EDX,EDX
0000326d(3): MOV RSI,RBX
00003270(5): CALL 0x00001ad0
00003275(5): MOV EDI,0x1
0000327a(5): CALL 0x00001ee0
0000327f(1): NOP
00003280(2): PUSH R13
00003282(2): PUSH R12
00003284(1): PUSH RBP
00003285(1): PUSH RBX
00003286(7): SUB RSP,0xa8
0000328d(7): MOV RDI,qword ptr [0x0021c1c8]
00003294(9): MOV RAX,qword ptr FS:[0x28]
0000329d(8): MOV qword ptr [0x98 + RSP],RAX
000032a5(2): XOR EAX,EAX
000032a7(3): TEST RDI,RDI
000032aa(2): JZ 0x000032eb
000032ac(3): TEST byte ptr [RDI],0x20
000032af(6): JNZ 0x00003406
000032b5(5): CALL 0x00007790
000032ba(2): TEST EAX,EAX
000032bc(6): JNZ 0x000033c6
000032c2(7): MOV RDI,qword ptr [0x0021c1d0]
000032c9(3): TEST RDI,RDI
000032cc(2): JNZ 0x000032d7
000032ce(7): CMP byte ptr [0x0021c1b1],0x0
000032d5(2): JNZ 0x00003340
000032d7(7): CMP byte ptr [0x0021c1b3],0x0
000032de(2): JZ 0x00003310
000032e0(11): MOV qword ptr [0x0021c1c8],0x0
000032eb(8): MOV RAX,qword ptr [0x98 + RSP]
000032f3(9): XOR RAX,qword ptr FS:[0x28]
000032fc(6): JNZ 0x000033c1
00003302(7): ADD RSP,0xa8
00003309(1): POP RBX
0000330a(1): POP RBP
0000330b(2): POP R12
0000330d(2): POP R13
0000330f(1): RET
00003310(8): LEA RSI,[0x80 + RSP]
00003318(5): CALL 0x00004500
0000331d(7): MOV RDI,qword ptr [0x0021c0a8]
00003324(7): LEA RDX,[0x17090]
0000332b(3): MOV RCX,RAX
0000332e(5): MOV ESI,0x1
00003333(2): XOR EAX,EAX
00003335(5): CALL 0x00001f00
0000333a(2): JMP 0x000032e0
00003340(7): LEA RSI,[0x21c120]
00003347(3): MOV RBP,RSP
0000334a(3): MOV RDX,RBP
0000334d(5): CALL 0x00001ad0
00003352(7): MOV R12,qword ptr [0x0021c1c0]
00003359(3): MOV RDI,R12
0000335c(5): CALL 0x00001b30
00003361(2): MOV EBX,EAX
00003363(5): CALL 0x00001b20
00003368(3): MOV R13D,dword ptr [RAX]
0000336b(6): MOV EAX,dword ptr [0x0021c1d8]
00003371(2): XOR EDX,EDX
00003373(2): TEST EBX,EBX
00003375(3): MOV RSI,RBP
00003378(5): MOV EDI,0x2
0000337d(3): SETZ DL
00003380(2): SUB EAX,EDX
00003382(2): XOR EDX,EDX
00003384(6): MOV dword ptr [0x0021c1d8],EAX
0000338a(5): CALL 0x00001ad0
0000338f(2): TEST EBX,EBX
00003391(6): JZ 0x000032e0
00003397(3): MOV RDX,R12
0000339a(2): XOR EDI,EDI
0000339c(5): MOV ESI,0x3
000033a1(5): CALL 0x00006090
000033a6(7): LEA RDX,[0x16b61]
000033ad(3): MOV RCX,RAX
000033b0(3): MOV ESI,R13D
000033b3(2): XOR EDI,EDI
000033b5(2): XOR EAX,EAX
000033b7(5): CALL 0x00001e60
000033bc(5): JMP 0x000032e0
000033c1(5): CALL 0x00001c20
000033c6(7): MOV RDX,qword ptr [0x0021c1c0]
000033cd(5): MOV ESI,0x3
000033d2(2): XOR EDI,EDI
000033d4(5): CALL 0x00006090
000033d9(3): MOV RBX,RAX
000033dc(5): CALL 0x00001b20
000033e1(2): MOV ESI,dword ptr [RAX]
000033e3(7): LEA RDX,[0x16b61]
000033ea(3): MOV RCX,RBX
000033ed(2): XOR EDI,EDI
000033ef(2): XOR EAX,EAX
000033f1(5): CALL 0x00001e60
000033f6(11): MOV qword ptr [0x0021c1c8],0x0
00003401(5): CALL 0x00003220
00003406(7): MOV RSI,qword ptr [0x0021c1c0]
0000340d(5): MOV EDI,0x4
00003412(5): CALL 0x00005f90
00003417(7): LEA RSI,[0x15fa9]
0000341e(3): MOV RBX,RAX
00003421(5): MOV EDX,0x5
00003426(2): XOR EDI,EDI
00003428(5): CALL 0x00001bf0
0000342d(3): MOV RCX,RBX
00003430(3): MOV RDX,RAX
00003433(2): XOR ESI,ESI
00003435(2): JMP 0x000033ed
00003440(1): PUSH RBP
00003441(1): PUSH RBX
00003442(3): MOV RBX,RDI
00003445(5): MOV ESI,0x1
0000344a(4): SUB RSP,0x8
0000344e(3): MOV RDX,qword ptr [RBX]
00003451(4): MOV RDI,qword ptr [RDI + 0x8]
00003455(7): MOV RCX,qword ptr [0x0021c1c8]
0000345c(5): CALL 0x00001df0
00003461(3): MOV RDX,qword ptr [RBX]
00003464(3): CMP RDX,RAX
00003467(2): JNZ 0x00003477
00003469(7): ADD qword ptr [0x0021c1d0],RDX
00003470(4): ADD RSP,0x8
00003474(1): POP RBX
00003475(1): POP RBP
00003476(1): RET
00003477(7): MOV RSI,qword ptr [0x0021c1c0]
0000347e(5): MOV EDI,0x4
00003483(5): CALL 0x00005f90
00003488(7): LEA RSI,[0x15fa9]
0000348f(5): MOV EDX,0x5
00003494(2): XOR EDI,EDI
00003496(3): MOV RBP,RAX
00003499(5): CALL 0x00001bf0
0000349e(3): MOV RBX,RAX
000034a1(5): CALL 0x00001b20
000034a6(2): MOV ESI,dword ptr [RAX]
000034a8(3): MOV RCX,RBP
000034ab(3): MOV RDX,RBX
000034ae(2): XOR EDI,EDI
000034b0(2): XOR EAX,EAX
000034b2(5): CALL 0x00001e60
000034b7(11): MOV qword ptr [0x0021c1c8],0x0
000034c2(5): CALL 0x00003220
000034c7(9): NOP word ptr [RAX + RAX*0x1]
000034d0(2): PUSH R12
000034d2(1): PUSH RBP
000034d3(5): MOV EBP,0x4b
000034d8(1): PUSH RBX
000034d9(7): SUB RSP,0x90
000034e0(9): MOV RAX,qword ptr FS:[0x28]
000034e9(8): MOV qword ptr [0x88 + RSP],RAX
000034f1(2): XOR EAX,EAX
000034f3(6): MOV EDI,dword ptr [0x0021c1d8]
000034f9(5): CALL 0x000030a0
000034fe(3): MOV RBX,RAX
00003501(7): MOV qword ptr [0x0021c1c0],RAX
00003508(6): MOV EAX,dword ptr [0x0021c1d8]
0000350e(3): CMP EAX,-0x1
00003511(2): JNZ 0x00003540
00003513(3): MOV RDX,RBX
00003516(5): MOV ESI,0x3
0000351b(2): XOR EDI,EDI
0000351d(5): CALL 0x00006090
00003522(7): LEA RDX,[0x16b61]
00003529(3): MOV RCX,RAX
0000352c(2): MOV ESI,EBP
0000352e(2): XOR EDI,EDI
00003530(2): XOR EAX,EAX
00003532(5): CALL 0x00001e60
00003537(5): CALL 0x00003220
0000353c(4): NOP dword ptr [RAX]
00003540(3): MOV R12,RSP
00003543(7): LEA RSI,[0x21c120]
0000354a(2): XOR EDI,EDI
0000354c(3): MOV RDX,R12
0000354f(5): CALL 0x00001ad0
00003554(7): LEA RSI,[0x15fbc]
0000355b(3): MOV RDI,RBX
0000355e(5): CALL 0x00004460
00003563(3): MOV RBX,RAX
00003566(7): MOV qword ptr [0x0021c1c8],RAX
0000356d(5): CALL 0x00001b20
00003572(6): MOV EDX,dword ptr [0x0021c1d8]
00003578(2): MOV EBP,dword ptr [RAX]
0000357a(2): XOR EAX,EAX
0000357c(3): TEST RBX,RBX
0000357f(3): MOV RSI,R12
00003582(5): MOV EDI,0x2
00003587(3): SETNZ AL
0000358a(2): ADD EAX,EDX
0000358c(2): XOR EDX,EDX
0000358e(6): MOV dword ptr [0x0021c1d8],EAX
00003594(5): CALL 0x00001ad0
00003599(3): TEST RBX,RBX
0000359c(2): JZ 0x000035cd
0000359e(8): MOV RAX,qword ptr [0x88 + RSP]
000035a6(9): XOR RAX,qword ptr FS:[0x28]
000035af(11): MOV qword ptr [0x0021c1d0],0x0
000035ba(2): JNZ 0x000035c8
000035bc(7): ADD RSP,0x90
000035c3(1): POP RBX
000035c4(1): POP RBP
000035c5(2): POP R12
000035c7(1): RET
000035c8(5): CALL 0x00001c20
000035cd(7): MOV RBX,qword ptr [0x0021c1c0]
000035d4(5): JMP 0x00003513
000035e0(7): MOVZX EAX,byte ptr [0x0021c1b2]
000035e7(1): PUSH RBX
000035e8(2): MOV EBX,EDI
000035ea(2): TEST AL,AL
000035ec(2): JZ 0x000035f8
000035ee(5): MOV EDI,0x1
000035f3(5): CALL 0x00003160
000035f8(2): MOV EDI,EBX
000035fa(2): XOR ESI,ESI
000035fc(5): CALL 0x00001d50
00003601(2): MOV EDI,EBX
00003603(1): POP RBX
00003604(5): JMP 0x00001af0
00003610(2): PUSH R13
00003612(2): PUSH R12
00003614(1): PUSH RBP
00003615(1): PUSH RBX
00003616(3): MOV RBX,RSI
00003619(4): SUB RSP,0x28
0000361d(3): MOV RBP,RSP
00003620(3): MOV RSI,RBP
00003623(9): MOV RAX,qword ptr FS:[0x28]
0000362c(5): MOV qword ptr [RSP + 0x18],RAX
00003631(2): XOR EAX,EAX
00003633(5): CALL 0x00004500
00003638(3): MOV RDI,RAX
0000363b(5): CALL 0x00006260
00003640(7): LEA RSI,[0x161f0]
00003647(2): XOR EDI,EDI
00003649(7): MOV R12,qword ptr [0x0021c238]
00003650(5): MOV EDX,0x5
00003655(3): MOV R13,RAX
00003658(5): CALL 0x00001bf0
0000365d(7): MOV RDI,qword ptr [0x0021c0e0]
00003664(3): MOV RDX,RAX
00003667(3): MOV R8,R13
0000366a(2): XOR EAX,EAX
0000366c(3): MOV RCX,R12
0000366f(5): MOV ESI,0x1
00003674(5): CALL 0x00001f00
00003679(3): TEST RBX,RBX
0000367c(2): JZ 0x000036bd
0000367e(3): MOV RDI,RBX
00003681(3): MOV RSI,RBP
00003684(5): CALL 0x00004500
00003689(7): LEA RSI,[0x15fbe]
00003690(5): MOV EDX,0x5
00003695(2): XOR EDI,EDI
00003697(3): MOV RBX,RAX
0000369a(5): CALL 0x00001bf0
0000369f(7): MOV RDI,qword ptr [0x0021c0e0]
000036a6(3): MOV RDX,RAX
000036a9(3): MOV RCX,RBX
000036ac(5): MOV ESI,0x1
000036b1(2): XOR EAX,EAX
000036b3(5): CALL 0x00001f00
000036b8(5): CALL 0x00003220
000036bd(7): MOV RSI,qword ptr [0x0021c0e0]
000036c4(5): MOV EDI,0xa
000036c9(5): CALL 0x00001cd0
000036ce(2): JMP 0x000036b8
000036d0(2): PUSH R13
000036d2(2): PUSH R12
000036d4(3): MOV R13,RDX
000036d7(1): PUSH RBP
000036d8(1): PUSH RBX
000036d9(3): MOV RBP,RSI
000036dc(3): MOV R12,RCX
000036df(4): SUB RSP,0x8
000036e3(4): CMP qword ptr [RDI],0x0
000036e7(6): JZ 0x00003780
000036ed(4): MOV RBX,qword ptr [RBP]
000036f1(3): MOV RAX,qword ptr [RBX]
000036f4(4): CMP RAX,0x50
000036f8(2): JZ 0x00003730
000036fa(4): MOV RSI,qword ptr [RBX + 0x8]
000036fe(4): ADD RAX,0x1
00003702(3): MOV RDI,RSI
00003705(4): ADD RSI,0x1
00003709(4): SHL RDI,0x4
0000370d(3): ADD RDI,RBX
00003710(4): MOV qword ptr [RDI + 0x20],R13
00003714(4): MOV qword ptr [RDI + 0x18],R12
00003718(3): MOV qword ptr [RBX],RAX
0000371b(4): MOV qword ptr [RBX + 0x8],RSI
0000371f(4): ADD RSP,0x8
00003723(1): POP RBX
00003724(1): POP RBP
00003725(2): POP R12
00003727(2): POP R13
00003729(1): RET
00003730(5): MOV EDI,0x520
00003735(5): CALL 0x00006910
0000373a(11): MOV qword ptr [0x518 + RAX],0x0
00003745(7): MOV qword ptr [RAX],0x0
0000374c(8): MOV qword ptr [RAX + 0x8],0x0
00003754(8): MOV qword ptr [RAX + 0x10],0x0
0000375c(7): MOV qword ptr [0x518 + RBX],RAX
00003763(4): MOV RAX,qword ptr [RBP]
00003767(7): MOV RBX,qword ptr [0x518 + RAX]
0000376e(4): MOV qword ptr [RBP],RBX
00003772(3): MOV RAX,qword ptr [RBX]
00003775(5): JMP 0x000036fa
00003780(3): MOV RBX,RDI
00003783(5): MOV EDI,0x520
00003788(5): CALL 0x00006910
0000378d(4): MOV qword ptr [RBP],RAX
00003791(11): MOV qword ptr [0x518 + RAX],0x0
0000379c(7): MOV qword ptr [RAX],0x0
000037a3(8): MOV qword ptr [RAX + 0x8],0x0
000037ab(8): MOV qword ptr [RAX + 0x10],0x0
000037b3(3): MOV qword ptr [RBX],RAX
000037b6(5): JMP 0x000036ed
000037c0(2): PUSH R12
000037c2(1): PUSH RBP
000037c3(3): MOV RBP,RDI
000037c6(3): MOV RDI,qword ptr [RSI]
000037c9(1): PUSH RBX
000037ca(3): MOV R12,RSI
000037cd(3): TEST RDI,RDI
000037d0(2): JZ 0x000037ec
000037d2(6): NOP word ptr [RAX + RAX*0x1]
000037d8(7): MOV RBX,qword ptr [0x518 + RDI]
000037df(5): CALL 0x00001b00
000037e4(3): TEST RBX,RBX
000037e7(3): MOV RDI,RBX
000037ea(2): JNZ 0x000037d8
000037ec(4): MOV RDI,qword ptr [RBP]
000037f0(8): MOV qword ptr [R12],0x0
000037f8(5): CALL 0x00001b00
000037fd(8): MOV qword ptr [RBP],0x0
00003805(1): POP RBX
00003806(1): POP RBP
00003807(2): POP R12
00003809(1): RET
00003810(7): LEA RSI,[0x15fd1]
00003817(4): SUB RSP,0x8
0000381b(5): MOV EDX,0x5
00003820(2): XOR EDI,EDI
00003822(5): CALL 0x00001bf0
00003827(7): LEA RDX,[0x16b61]
0000382e(3): MOV RCX,RAX
00003831(2): XOR ESI,ESI
00003833(2): XOR EDI,EDI
00003835(2): XOR EAX,EAX
00003837(5): CALL 0x00001e60
0000383c(5): CALL 0x00003220
00003841(5): NOP dword ptr [RAX + RAX*0x1]
00003846(10): NOP word ptr CS:[RAX + RAX*0x1]
00003850(4): SUB RSP,0x8
00003854(7): MOV RCX,qword ptr [0x0021c1a0]
0000385b(7): CMP RCX,qword ptr [0x0021c108]
00003862(7): MOV RDI,qword ptr [0x0021c1a8]
00003869(2): JZ 0x000038a8
0000386b(4): LEA RAX,[RCX + 0x1]
0000386f(7): MOV qword ptr [0x0021c1a0],RAX
00003876(4): LEA RAX,[RCX + RCX*0x2]
0000387a(4): SHL RAX,0x5
0000387e(3): ADD RAX,RDI
00003881(4): MOV byte ptr [RAX + 0x1e],0x0
00003885(8): MOV qword ptr [RAX + 0x10],0x0
0000388d(4): MOV byte ptr [RAX + 0x1c],0x0
00003891(8): MOV qword ptr [RAX + 0x8],0x0
00003899(7): MOV qword ptr [RAX],0x0
000038a0(4): ADD RSP,0x8
000038a4(1): RET
000038a8(3): TEST RDI,RDI
000038ab(2): JZ 0x000038f8
000038ad(10): MOV RAX,0xe38e38e38e38e2
000038b7(3): CMP RCX,RAX
000038ba(2): JA 0x0000391d
000038bc(3): MOV RAX,RCX
000038bf(3): SHR RAX,1
000038c2(5): LEA RCX,[RCX + RAX*0x1 + 0x1]
000038c7(4): LEA RSI,[RCX + RCX*0x2]
000038cb(7): MOV qword ptr [0x0021c108],RCX
000038d2(4): SHL RSI,0x5
000038d6(5): CALL 0x00006970
000038db(7): MOV RCX,qword ptr [0x0021c1a0]
000038e2(3): MOV RDI,RAX
000038e5(7): MOV qword ptr [0x0021c1a8],RAX
000038ec(5): JMP 0x0000386b
000038f8(3): TEST RCX,RCX
000038fb(5): MOV EAX,0x1
00003900(5): MOV EDX,0x60
00003905(4): CMOVZ RCX,RAX
00003909(3): MOV RAX,RDX
0000390c(2): XOR ESI,ESI
0000390e(3): MUL RCX
00003911(2): JO 0x00003922
00003913(3): TEST RAX,RAX
00003916(2): JS 0x0000391d
00003918(3): TEST RSI,RSI
0000391b(2): JZ 0x000038c7
0000391d(5): CALL 0x00003810
00003922(5): MOV ESI,0x1
00003927(2): JMP 0x00003913
00003930(2): PUSH R15
00003932(2): PUSH R14
00003934(5): MOV ECX,0x1fff
00003939(2): PUSH R13
0000393b(2): PUSH R12
0000393d(1): PUSH RBP
0000393e(1): PUSH RBX
0000393f(4): SUB RSP,0x18
00003943(11): CMP qword ptr [0x0021c210],0x1fff
0000394e(8): CMOVNC RCX,qword ptr [0x0021c210]
00003956(3): MOV RBP,RCX
00003959(7): CMP RBP,0x1fff
00003960(6): JBE 0x00003b2c
00003966(10): NOP word ptr CS:[RAX + RAX*0x1]
00003970(7): SUB RBP,0x1800
00003977(7): AND RBP,0xfffff800
0000397e(7): LEA R13,[0x1fff + RBP]
00003985(7): ADD RBP,0x2000
0000398c(5): MOV EDI,0x48
00003991(5): CALL 0x00006910
00003996(3): MOV RDI,RBP
00003999(3): MOV RBX,RAX
0000399c(5): CALL 0x00006910
000039a1(7): MOV RBP,qword ptr [0x0021c210]
000039a8(3): MOV R12,RAX
000039ab(4): MOV qword ptr [RBX + 0x28],RAX
000039af(7): MOV RAX,qword ptr [0x0021c208]
000039b6(3): MOV qword ptr [RBX],R13
000039b9(8): MOV qword ptr [RBX + 0x38],0x0
000039c1(8): MOV qword ptr [RBX + 0x30],0x0
000039c9(8): MOV qword ptr [RBX + 0x20],0x0
000039d1(8): MOV qword ptr [RBX + 0x8],0x0
000039d9(4): ADD RAX,0x1
000039dd(3): TEST RBP,RBP
000039e0(8): MOV qword ptr [RBX + 0x40],0x0
000039e8(4): MOV qword ptr [RBX + 0x18],RAX
000039ec(4): MOV qword ptr [RBX + 0x10],RAX
000039f0(6): JNZ 0x00003b40
000039f6(2): XOR EDI,EDI
000039f8(3): MOV RDX,R13
000039fb(3): MOV RSI,R12
000039fe(5): CALL 0x00006280
00003a03(3): TEST RAX,RAX
00003a06(6): JNZ 0x00003b78
00003a0c(7): MOV byte ptr [0x0021c1f8],0x1
00003a13(4): ADD RAX,qword ptr [RBX + 0x8]
00003a17(3): TEST RAX,RAX
00003a1a(3): MOV RBP,RAX
00003a1d(4): MOV qword ptr [RBX + 0x8],RAX
00003a21(6): JZ 0x00003ad4
00003a27(4): MOV R12,qword ptr [RBX + 0x28]
00003a2b(4): LEA RAX,[RBX + 0x38]
00003a2f(3): XOR R14D,R14D
00003a32(5): MOV qword ptr [RSP + 0x8],RAX
00003a37(2): JMP 0x00003a69
00003a40(3): MOV R13,RAX
00003a43(5): MOV RSI,qword ptr [RSP + 0x8]
00003a48(3): MOV RDX,R12
00003a4b(3): SUB R13,R12
00003a4e(4): LEA RDI,[RBX + 0x30]
00003a52(4): LEA R12,[R15 + 0x1]
00003a56(4): ADD R13,0x1
00003a5a(4): ADD R14,0x1
00003a5e(3): MOV RCX,R13
00003a61(3): SUB RBP,R13
00003a64(5): CALL 0x000036d0
00003a69(3): MOV RDX,RBP
00003a6c(5): MOV ESI,0xa
00003a71(3): MOV RDI,R12
00003a74(5): CALL 0x00001ce0
00003a79(3): TEST RAX,RAX
00003a7c(3): MOV R15,RAX
00003a7f(2): JNZ 0x00003a40
00003a81(3): TEST RBP,RBP
00003a84(2): JZ 0x00003aaa
00003a86(7): CMP byte ptr [0x0021c1f8],0x0
00003a8d(6): JZ 0x00003c00
00003a93(4): LEA RSI,[RBX + 0x38]
00003a97(4): LEA RDI,[RBX + 0x30]
00003a9b(3): MOV RCX,RBP
00003a9e(3): MOV RDX,R12
00003aa1(4): ADD R14,0x1
00003aa5(5): CALL 0x000036d0
00003aaa(7): MOV RAX,qword ptr [0x0021c208]
00003ab1(4): MOV qword ptr [RBX + 0x20],R14
00003ab5(4): LEA RDX,[RAX + 0x1]
00003ab9(3): ADD RAX,R14
00003abc(3): TEST R14,R14
00003abf(7): MOV qword ptr [0x0021c208],RAX
00003ac6(4): MOV qword ptr [RBX + 0x10],RDX
00003aca(4): MOV qword ptr [RBX + 0x18],RDX
00003ace(6): JNZ 0x00003bb0
00003ad4(7): CMP byte ptr [0x0021c1f8],0x0
00003adb(6): JNZ 0x00003c30
00003ae1(3): MOV RCX,qword ptr [RBX]
00003ae4(5): MOV EAX,0x2
00003ae9(2): XOR ESI,ESI
00003aeb(3): MUL RCX
00003aee(6): JO 0x00003c7b
00003af4(3): TEST RAX,RAX
00003af7(6): JS 0x00003c85
00003afd(3): TEST RSI,RSI
00003b00(6): JNZ 0x00003c85
00003b06(4): LEA RSI,[RBX + 0x30]
00003b0a(4): LEA RDI,[RBX + 0x28]
00003b0e(4): LEA RBP,[RCX + RCX*0x1]
00003b12(5): CALL 0x000037c0
00003b17(3): MOV RDI,RBX
00003b1a(5): CALL 0x00001b00
00003b1f(7): CMP RBP,0x1fff
00003b26(6): JA 0x00003970
00003b2c(5): MOV EBP,0x2000
00003b31(6): MOV R13D,0x1fff
00003b37(5): JMP 0x0000398c
00003b40(7): MOV RSI,qword ptr [0x0021c218]
00003b47(3): MOV RDX,RBP
00003b4a(3): MOV RDI,R12
00003b4d(5): CALL 0x00001d70
00003b52(3): SUB R13,RBP
00003b55(4): MOV qword ptr [RBX + 0x8],RBP
00003b59(11): MOV qword ptr [0x0021c210],0x0
00003b64(6): JZ 0x00003a2b
00003b6a(3): ADD R12,RBP
00003b6d(5): JMP 0x000039f6
00003b78(4): CMP RAX,-0x1
00003b7c(6): JNZ 0x00003a13
00003b82(7): LEA RSI,[0x15fe2]
00003b89(5): MOV EDX,0x5
00003b8e(2): XOR EDI,EDI
00003b90(5): CALL 0x00001bf0
00003b95(3): MOV RBX,RAX
00003b98(5): CALL 0x00001b20
00003b9d(2): MOV ESI,dword ptr [RAX]
00003b9f(3): MOV RDX,RBX
00003ba2(2): XOR EDI,EDI
00003ba4(2): XOR EAX,EAX
00003ba6(5): CALL 0x00001e60
00003bab(5): CALL 0x00003220
00003bb0(4): MOV RAX,qword ptr [RBX + 0x30]
00003bb4(8): MOV qword ptr [RBX + 0x40],0x0
00003bbc(4): MOV qword ptr [RBX + 0x38],RAX
00003bc0(7): MOV RAX,qword ptr [0x0021c220]
00003bc7(3): TEST RAX,RAX
00003bca(2): JNZ 0x00003bdb
00003bcc(5): JMP 0x00003c60
00003bd8(3): MOV RAX,RDX
00003bdb(4): MOV RDX,qword ptr [RAX + 0x40]
00003bdf(3): TEST RDX,RDX
00003be2(2): JNZ 0x00003bd8
00003be4(4): MOV qword ptr [RAX + 0x40],RBX
00003be8(4): ADD RSP,0x18
00003bec(5): MOV EAX,0x1
00003bf1(1): POP RBX
00003bf2(1): POP RBP
00003bf3(2): POP R12
00003bf5(2): POP R13
00003bf7(2): POP R14
00003bf9(2): POP R15
00003bfb(1): RET
00003c00(3): MOV RDI,R12
00003c03(3): MOV RSI,RBP
00003c06(5): CALL 0x00006b10
00003c0b(7): MOV RDI,qword ptr [0x0021c218]
00003c12(3): MOV R12,RAX
00003c15(5): CALL 0x00001b00
00003c1a(7): MOV qword ptr [0x0021c218],R12
00003c21(7): MOV qword ptr [0x0021c210],RBP
00003c28(5): JMP 0x00003aaa
00003c30(4): LEA RSI,[RBX + 0x30]
00003c34(4): LEA RDI,[RBX + 0x28]
00003c38(5): CALL 0x000037c0
00003c3d(3): MOV RDI,RBX
00003c40(5): CALL 0x00001b00
00003c45(4): ADD RSP,0x18
00003c49(2): XOR EAX,EAX
00003c4b(1): POP RBX
00003c4c(1): POP RBP
00003c4d(2): POP R12
00003c4f(2): POP R13
00003c51(2): POP R14
00003c53(2): POP R15
00003c55(1): RET
00003c60(7): MOV qword ptr [0x0021c220],RBX
00003c67(4): ADD RSP,0x18
00003c6b(5): MOV EAX,0x1
00003c70(1): POP RBX
00003c71(1): POP RBP
00003c72(2): POP R12
00003c74(2): POP R13
00003c76(2): POP R14
00003c78(2): POP R15
00003c7a(1): RET
00003c7b(5): MOV ESI,0x1
00003c80(5): JMP 0x00003af4
00003c85(5): CALL 0x00003810
00003c8a(6): NOP word ptr [RAX + RAX*0x1]
00003c90(1): PUSH RBX
00003c91(7): MOV RBX,qword ptr [0x0021c100]
00003c98(3): TEST RBX,RBX
00003c9b(2): JZ 0x00003cbd
00003c9d(4): LEA RSI,[RBX + 0x30]
00003ca1(4): LEA RDI,[RBX + 0x28]
00003ca5(5): CALL 0x000037c0
00003caa(3): MOV RDI,RBX
00003cad(5): CALL 0x00001b00
00003cb2(11): MOV qword ptr [0x0021c100],0x0
00003cbd(7): MOV RDX,qword ptr [0x0021c220]
00003cc4(3): TEST RDX,RDX
00003cc7(2): JZ 0x00003d40
00003cc9(4): MOV RAX,qword ptr [RDX + 0x18]
00003ccd(7): CMP RAX,qword ptr [0x0021c200]
00003cd4(2): JBE 0x00003cdd
00003cd6(7): MOV qword ptr [0x0021c200],RAX
00003cdd(4): MOV RSI,qword ptr [RDX + 0x38]
00003ce1(4): ADD RAX,0x1
00003ce5(4): MOV qword ptr [RDX + 0x18],RAX
00003ce9(4): MOV RAX,qword ptr [RSI + 0x10]
00003ced(4): LEA RCX,[RAX + 0x1]
00003cf1(3): MOV RAX,RCX
00003cf4(4): MOV qword ptr [RSI + 0x10],RCX
00003cf8(4): SHL RAX,0x4
00003cfc(3): CMP qword ptr [RSI],RCX
00003cff(5): LEA RAX,[RSI + RAX*0x1 + 0x8]
00003d04(2): JZ 0x00003d10
00003d06(1): POP RBX
00003d07(1): RET
00003d10(7): MOV RCX,qword ptr [0x518 + RSI]
00003d17(3): TEST RCX,RCX
00003d1a(4): MOV qword ptr [RDX + 0x38],RCX
00003d1e(2): JZ 0x00003d26
00003d20(4): CMP qword ptr [RCX],0x0
00003d24(2): JNZ 0x00003d06
00003d26(7): MOV qword ptr [0x0021c100],RDX
00003d2d(4): MOV RDX,qword ptr [RDX + 0x40]
00003d31(1): POP RBX
00003d32(7): MOV qword ptr [0x0021c220],RDX
00003d39(1): RET
00003d40(7): CMP byte ptr [0x0021c1f8],0x0
00003d47(2): JNZ 0x00003d60
00003d49(5): CALL 0x00003930
00003d4e(2): TEST AL,AL
00003d50(2): JZ 0x00003d60
00003d52(7): MOV RDX,qword ptr [0x0021c220]
00003d59(5): JMP 0x00003cc9
00003d60(2): XOR EAX,EAX
00003d62(1): POP RBX
00003d63(1): RET
00003d70(4): SUB RSP,0x8
00003d74(2): JMP 0x00003d88
00003d80(3): MOV RDI,RAX
00003d83(5): CALL 0x00003440
00003d88(5): CALL 0x00003c90
00003d8d(3): TEST RAX,RAX
00003d90(2): JNZ 0x00003d80
00003d92(4): ADD RSP,0x8
00003d96(1): RET
00003da0(1): PUSH RBP
00003da1(1): PUSH RBX
00003da2(3): MOV RBP,RDI
00003da5(4): SUB RSP,0x8
00003da9(7): MOV RBX,qword ptr [0x0021c220]
00003db0(3): TEST RBX,RBX
00003db3(6): JZ 0x00003e78
00003db9(4): MOV RDX,qword ptr [RBX + 0x10]
00003dbd(3): CMP RDX,RBP
00003dc0(2): JBE 0x00003dd7
00003dc2(5): JMP 0x00003e68
00003dd0(4): MOV RDX,qword ptr [RAX + 0x10]
00003dd4(3): MOV RBX,RAX
00003dd7(4): MOV RAX,qword ptr [RBX + 0x20]
00003ddb(3): ADD RAX,RDX
00003dde(3): CMP RAX,RBP
00003de1(2): JA 0x00003e30
00003de3(4): MOV RAX,qword ptr [RBX + 0x40]
00003de7(3): TEST RAX,RAX
00003dea(2): JNZ 0x00003dd0
00003dec(7): CMP byte ptr [0x0021c1f8],0x0
00003df3(2): JNZ 0x00003e68
00003df5(5): CALL 0x00003930
00003dfa(2): TEST AL,AL
00003dfc(2): JZ 0x00003e68
00003dfe(4): MOV RAX,qword ptr [RBX + 0x40]
00003e02(3): TEST RAX,RAX
00003e05(2): JNZ 0x00003dd0
00003e07(7): LEA RCX,[0x16b00]
00003e0e(7): LEA RSI,[0x16218]
00003e15(7): LEA RDI,[0x16005]
00003e1c(5): MOV EDX,0x26a
00003e21(5): CALL 0x00001c90
00003e26(10): NOP word ptr CS:[RAX + RAX*0x1]
00003e30(3): SUB RBP,RDX
00003e33(4): MOV RAX,qword ptr [RBX + 0x30]
00003e37(4): CMP RBP,0x4f
00003e3b(2): JBE 0x00003e51
00003e3d(3): NOP dword ptr [RAX]
00003e40(4): SUB RBP,0x50
00003e44(7): MOV RAX,qword ptr [0x518 + RAX]
00003e4b(4): CMP RBP,0x4f
00003e4f(2): JA 0x00003e40
00003e51(4): SHL RBP,0x4
00003e55(4): ADD RSP,0x8
00003e59(5): LEA RAX,[RAX + RBP*0x1 + 0x18]
00003e5e(1): POP RBX
00003e5f(1): POP RBP
00003e60(1): RET
00003e68(4): ADD RSP,0x8
00003e6c(2): XOR EAX,EAX
00003e6e(1): POP RBX
00003e6f(1): POP RBP
00003e70(1): RET
00003e78(7): CMP byte ptr [0x0021c1f8],0x0
00003e7f(2): JNZ 0x00003e68
00003e81(5): CALL 0x00003930
00003e86(2): TEST AL,AL
00003e88(2): JZ 0x00003e68
00003e8a(7): MOV RBX,qword ptr [0x0021c220]
00003e91(5): JMP 0x00003db9
00003ea0(7): MOV RAX,qword ptr [0x0021c220]
00003ea7(3): TEST RAX,RAX
00003eaa(2): JZ 0x00003eb8
00003eac(4): MOV RAX,qword ptr [RAX + 0x18]
00003eb0(1): RET
00003eb8(7): CMP byte ptr [0x0021c1f8],0x0
00003ebf(1): PUSH RBX
00003ec0(2): JNZ 0x00003ed8
00003ec2(5): CALL 0x00003930
00003ec7(2): TEST AL,AL
00003ec9(2): JZ 0x00003ed8
00003ecb(7): MOV RAX,qword ptr [0x0021c220]
00003ed2(1): POP RBX
00003ed3(4): MOV RAX,qword ptr [RAX + 0x18]
00003ed7(1): RET
00003ed8(7): LEA RSI,[0x16007]
00003edf(5): MOV EDX,0x5
00003ee4(2): XOR EDI,EDI
00003ee6(5): CALL 0x00001bf0
00003eeb(3): MOV RBX,RAX
00003eee(5): CALL 0x00001b20
00003ef3(2): MOV ESI,dword ptr [RAX]
00003ef5(3): MOV RDX,RBX
00003ef8(5): MOV EDI,0x1
00003efd(2): XOR EAX,EAX
00003eff(5): CALL 0x00001e60
00003f04(2): NOP
00003f06(10): NOP word ptr CS:[RAX + RAX*0x1]
00003f10(2): PUSH R13
00003f12(2): PUSH R12
00003f14(5): MOV EDX,0x5
00003f19(1): PUSH RBP
00003f1a(1): PUSH RBX
00003f1b(2): MOV EBP,EDI
00003f1d(7): SUB RSP,0x88
00003f24(7): MOV RBX,qword ptr [0x0021c238]
00003f2b(9): MOV RAX,qword ptr FS:[0x28]
00003f34(5): MOV qword ptr [RSP + 0x78],RAX
00003f39(2): XOR EAX,EAX
00003f3b(2): TEST EDI,EDI
00003f3d(2): JZ 0x00003f6d
00003f3f(7): LEA RSI,[0x16238]
00003f46(2): XOR EDI,EDI
00003f48(5): CALL 0x00001bf0
00003f4d(7): MOV RDI,qword ptr [0x0021c0e0]
00003f54(3): MOV RDX,RAX
00003f57(3): MOV RCX,RBX
00003f5a(5): MOV ESI,0x1
00003f5f(2): XOR EAX,EAX
00003f61(5): CALL 0x00001f00
00003f66(2): MOV EDI,EBP
00003f68(5): CALL 0x00001ee0
00003f6d(7): LEA RSI,[0x16260]
00003f74(2): XOR EDI,EDI
00003f76(5): CALL 0x00001bf0
00003f7b(3): MOV RDX,RBX
00003f7e(3): MOV RSI,RAX
00003f81(5): MOV EDI,0x1
00003f86(2): XOR EAX,EAX
00003f88(5): CALL 0x00001e30
00003f8d(7): MOV RBX,qword ptr [0x0021c0a8]
00003f94(7): LEA RSI,[0x16288]
00003f9b(5): MOV EDX,0x5
00003fa0(2): XOR EDI,EDI
00003fa2(5): CALL 0x00001bf0
00003fa7(3): MOV RSI,RBX
00003faa(3): MOV RDI,RAX
00003fad(5): CALL 0x00001d20
00003fb2(7): MOV RBX,qword ptr [0x0021c0a8]
00003fb9(7): LEA RSI,[0x16310]
00003fc0(5): MOV EDX,0x5
00003fc5(2): XOR EDI,EDI
00003fc7(5): CALL 0x00001bf0
00003fcc(3): MOV RSI,RBX
00003fcf(3): MOV RDI,RAX
00003fd2(5): CALL 0x00001d20
00003fd7(7): MOV RBX,qword ptr [0x0021c0a8]
00003fde(7): LEA RSI,[0x16338]
00003fe5(5): MOV EDX,0x5
00003fea(2): XOR EDI,EDI
00003fec(5): CALL 0x00001bf0
00003ff1(3): MOV RSI,RBX
00003ff4(3): MOV RDI,RAX
00003ff7(5): CALL 0x00001d20
00003ffc(7): MOV RBX,qword ptr [0x0021c0a8]
00004003(7): LEA RSI,[0x16388]
0000400a(5): MOV EDX,0x5
0000400f(2): XOR EDI,EDI
00004011(5): CALL 0x00001bf0
00004016(3): MOV RSI,RBX
00004019(3): MOV RDI,RAX
0000401c(5): CALL 0x00001d20
00004021(7): MOV RBX,qword ptr [0x0021c0a8]
00004028(7): LEA RSI,[0x16448]
0000402f(5): MOV EDX,0x5
00004034(2): XOR EDI,EDI
00004036(5): CALL 0x00001bf0
0000403b(3): MOV RSI,RBX
0000403e(3): MOV RDI,RAX
00004041(5): CALL 0x00001d20
00004046(7): MOV RBX,qword ptr [0x0021c0a8]
0000404d(7): LEA RSI,[0x16490]
00004054(5): MOV EDX,0x5
00004059(2): XOR EDI,EDI
0000405b(5): CALL 0x00001bf0
00004060(3): MOV RSI,RBX
00004063(3): MOV RDI,RAX
00004066(5): CALL 0x00001d20
0000406b(7): MOV RBX,qword ptr [0x0021c0a8]
00004072(7): LEA RSI,[0x16558]
00004079(5): MOV EDX,0x5
0000407e(2): XOR EDI,EDI
00004080(5): CALL 0x00001bf0
00004085(3): MOV RSI,RBX
00004088(3): MOV RDI,RAX
0000408b(5): CALL 0x00001d20
00004090(7): MOV RBX,qword ptr [0x0021c0a8]
00004097(7): LEA RSI,[0x16588]
0000409e(5): MOV EDX,0x5
000040a3(2): XOR EDI,EDI
000040a5(5): CALL 0x00001bf0
000040aa(3): MOV RSI,RBX
000040ad(3): MOV RDI,RAX
000040b0(5): CALL 0x00001d20
000040b5(7): MOV RBX,qword ptr [0x0021c0a8]
000040bc(7): LEA RSI,[0x165c0]
000040c3(5): MOV EDX,0x5
000040c8(2): XOR EDI,EDI
000040ca(5): CALL 0x00001bf0
000040cf(3): MOV RSI,RBX
000040d2(3): MOV RDI,RAX
000040d5(7): LEA RBX,[0x16019]
000040dc(5): CALL 0x00001d20
000040e1(7): LEA RAX,[0x16020]
000040e8(7): LEA RCX,[0x16061]
000040ef(9): MOV qword ptr [RSP + 0x60],0x0
000040f8(9): MOV qword ptr [RSP + 0x68],0x0
00004101(3): MOV RDX,RSP
00004104(4): MOV qword ptr [RSP],RAX
00004108(7): LEA RAX,[0x16022]
0000410f(5): MOV qword ptr [RSP + 0x30],RCX
00004114(7): LEA RCX,[0x1606b]
0000411b(5): MOV qword ptr [RSP + 0x8],RAX
00004120(7): LEA RAX,[0x1609a]
00004127(5): MOV qword ptr [RSP + 0x40],RCX
0000412c(7): LEA RCX,[0x16075]
00004133(5): MOV qword ptr [RSP + 0x10],RAX
00004138(7): LEA RAX,[0x16032]
0000413f(5): MOV qword ptr [RSP + 0x50],RCX
00004144(5): MOV qword ptr [RSP + 0x18],RAX
00004149(7): LEA RAX,[0x16048]
00004150(5): MOV qword ptr [RSP + 0x20],RAX
00004155(7): LEA RAX,[0x16052]
0000415c(5): MOV qword ptr [RSP + 0x28],RAX
00004161(5): MOV qword ptr [RSP + 0x38],RAX
00004166(5): MOV qword ptr [RSP + 0x48],RAX
0000416b(5): MOV qword ptr [RSP + 0x58],RAX
00004170(4): ADD RDX,0x10
00004174(3): MOV RDI,qword ptr [RDX]
00004177(3): TEST RDI,RDI
0000417a(2): JZ 0x0000418f
0000417c(5): MOV ECX,0x7
00004181(3): MOV RSI,RBX
00004184(2): CMPSB.REPE RDI,RSI
00004186(3): SETA AL
00004189(2): SBB AL,0x0
0000418b(2): TEST AL,AL
0000418d(2): JNZ 0x00004170
0000418f(4): MOV R12,qword ptr [RDX + 0x8]
00004193(2): XOR EDI,EDI
00004195(5): MOV EDX,0x5
0000419a(7): LEA RSI,[0x1607f]
000041a1(3): TEST R12,R12
000041a4(6): JZ 0x0000426b
000041aa(5): CALL 0x00001bf0
000041af(7): LEA RCX,[0x16780]
000041b6(7): LEA RDX,[0x16096]
000041bd(3): MOV RSI,RAX
000041c0(5): MOV EDI,0x1
000041c5(2): XOR EAX,EAX
000041c7(5): CALL 0x00001e30
000041cc(2): XOR ESI,ESI
000041ce(5): MOV EDI,0x5
000041d3(5): CALL 0x00001e20
000041d8(3): TEST RAX,RAX
000041db(2): JZ 0x000041f9
000041dd(7): LEA RSI,[0x160a4]
000041e4(5): MOV EDX,0x3
000041e9(3): MOV RDI,RAX
000041ec(5): CALL 0x00001b40
000041f1(2): TEST EAX,EAX
000041f3(6): JNZ 0x00004300
000041f9(7): LEA RSI,[0x160a8]
00004200(2): XOR EDI,EDI
00004202(5): MOV EDX,0x5
00004207(5): CALL 0x00001bf0
0000420c(7): LEA RCX,[0x16019]
00004213(7): LEA RDX,[0x16780]
0000421a(3): MOV RSI,RAX
0000421d(5): MOV EDI,0x1
00004222(2): XOR EAX,EAX
00004224(5): CALL 0x00001e30
00004229(3): CMP R12,RBX
0000422c(7): LEA RCX,[0x1603c]
00004233(7): LEA RBX,[0x170e1]
0000423a(4): CMOVZ RBX,RCX
0000423e(7): LEA RSI,[0x167f0]
00004245(2): XOR EDI,EDI
00004247(5): MOV EDX,0x5
0000424c(5): CALL 0x00001bf0
00004251(3): MOV RCX,RBX
00004254(3): MOV RSI,RAX
00004257(3): MOV RDX,R12
0000425a(5): MOV EDI,0x1
0000425f(2): XOR EAX,EAX
00004261(5): CALL 0x00001e30
00004266(5): JMP 0x00003f66
0000426b(5): CALL 0x00001bf0
00004270(7): LEA RCX,[0x16780]
00004277(7): LEA RDX,[0x16096]
0000427e(3): MOV RSI,RAX
00004281(5): MOV EDI,0x1
00004286(2): XOR EAX,EAX
00004288(5): CALL 0x00001e30
0000428d(2): XOR ESI,ESI
0000428f(5): MOV EDI,0x5
00004294(5): CALL 0x00001e20
00004299(3): TEST RAX,RAX
0000429c(2): JZ 0x000042b6
0000429e(7): LEA RSI,[0x160a4]
000042a5(5): MOV EDX,0x3
000042aa(3): MOV RDI,RAX
000042ad(5): CALL 0x00001b40
000042b2(2): TEST EAX,EAX
000042b4(2): JNZ 0x000042f9
000042b6(7): LEA RSI,[0x160a8]
000042bd(5): MOV EDX,0x5
000042c2(2): XOR EDI,EDI
000042c4(7): LEA R12,[0x16019]
000042cb(7): LEA RBX,[0x1603c]
000042d2(5): CALL 0x00001bf0
000042d7(7): LEA RCX,[0x16019]
000042de(7): LEA RDX,[0x16780]
000042e5(3): MOV RSI,RAX
000042e8(5): MOV EDI,0x1
000042ed(2): XOR EAX,EAX
000042ef(5): CALL 0x00001e30
000042f4(5): JMP 0x0000423e
000042f9(7): LEA R12,[0x16019]
00004300(7): MOV R13,qword ptr [0x0021c0a8]
00004307(7): LEA RSI,[0x167a8]
0000430e(2): XOR EDI,EDI
00004310(5): MOV EDX,0x5
00004315(5): CALL 0x00001bf0
0000431a(3): MOV RSI,R13
0000431d(3): MOV RDI,RAX
00004320(5): CALL 0x00001d20
00004325(5): JMP 0x000041f9
00004330(7): MOV qword ptr [0x0021c230],RDI
00004337(1): RET
00004340(7): MOV byte ptr [0x0021c228],DIL
00004347(1): RET
00004350(1): PUSH RBP
00004351(1): PUSH RBX
00004352(4): SUB RSP,0x8
00004356(7): MOV RDI,qword ptr [0x0021c0a8]
0000435d(5): CALL 0x00015dd0
00004362(2): TEST EAX,EAX
00004364(2): JZ 0x0000437c
00004366(5): CALL 0x00001b20
0000436b(7): CMP byte ptr [0x0021c228],0x0
00004372(3): MOV RBX,RAX
00004375(2): JZ 0x00004393
00004377(3): CMP dword ptr [RAX],0x20
0000437a(2): JNZ 0x00004393
0000437c(7): MOV RDI,qword ptr [0x0021c0e0]
00004383(5): CALL 0x00015dd0
00004388(2): TEST EAX,EAX
0000438a(2): JNZ 0x000043d2
0000438c(4): ADD RSP,0x8
00004390(1): POP RBX
00004391(1): POP RBP
00004392(1): RET
00004393(7): LEA RSI,[0x16b51]
0000439a(2): XOR EDI,EDI
0000439c(5): MOV EDX,0x5
000043a1(5): CALL 0x00001bf0
000043a6(7): MOV RDI,qword ptr [0x0021c230]
000043ad(3): MOV RBP,RAX
000043b0(3): TEST RDI,RDI
000043b3(2): JZ 0x000043dd
000043b5(5): CALL 0x00006060
000043ba(2): MOV ESI,dword ptr [RBX]
000043bc(7): LEA RDX,[0x16b5d]
000043c3(3): MOV RCX,RAX
000043c6(3): MOV R8,RBP
000043c9(2): XOR EDI,EDI
000043cb(2): XOR EAX,EAX
000043cd(5): CALL 0x00001e60
000043d2(6): MOV EDI,dword ptr [0x0021c020]
000043d8(5): CALL 0x00001b50
000043dd(2): MOV ESI,dword ptr [RBX]
000043df(7): LEA RDX,[0x16b61]
000043e6(3): MOV RCX,RAX
000043e9(2): XOR EDI,EDI
000043eb(2): XOR EAX,EAX
000043ed(5): CALL 0x00001e60
000043f2(2): JMP 0x000043d2
00004400(2): PUSH R13
00004402(2): PUSH R12
00004404(2): XOR EAX,EAX
00004406(1): PUSH RBP
00004407(1): PUSH RBX
00004408(2): MOV EBP,EDI
0000440a(3): MOV RDI,RSI
0000440d(2): MOV ESI,EDX
0000440f(2): MOV EDX,ECX
00004411(4): SUB RSP,0x8
00004415(5): CALL 0x00001e70
0000441a(2): CMP EBP,EAX
0000441c(2): MOV EBX,EAX
0000441e(2): JZ 0x00004449
00004420(2): TEST EAX,EAX
00004422(2): JS 0x00004449
00004424(2): MOV ESI,EBP
00004426(2): MOV EDI,EAX
00004428(5): CALL 0x00001c50
0000442d(3): MOV R12D,EAX
00004430(5): CALL 0x00001b20
00004435(3): MOV R13D,dword ptr [RAX]
00004438(3): MOV RBP,RAX
0000443b(2): MOV EDI,EBX
0000443d(5): CALL 0x00001cc0
00004442(3): MOV EBX,R12D
00004445(4): MOV dword ptr [RBP],R13D
00004449(4): ADD RSP,0x8
0000444d(2): MOV EAX,EBX
0000444f(1): POP RBX
00004450(1): POP RBP
00004451(2): POP R12
00004453(2): POP R13
00004455(1): RET
00004460(2): PUSH R12
00004462(1): PUSH RBP
00004463(3): MOV RBP,RSI
00004466(1): PUSH RBX
00004467(5): CALL 0x00001e90
0000446c(3): TEST RAX,RAX
0000446f(3): MOV RBX,RAX
00004472(2): JZ 0x00004481
00004474(3): MOV RDI,RAX
00004477(5): CALL 0x00001d80
0000447c(3): CMP EAX,0x2
0000447f(2): JBE 0x00004490
00004481(3): MOV RAX,RBX
00004484(1): POP RBX
00004485(1): POP RBP
00004486(2): POP R12
00004488(1): RET
00004490(2): MOV EDI,EAX
00004492(5): CALL 0x000062e0
00004497(2): TEST EAX,EAX
00004499(3): MOV R12D,EAX
0000449c(2): JS 0x000044d8
0000449e(3): MOV RDI,RBX
000044a1(5): CALL 0x00007790
000044a6(2): TEST EAX,EAX
000044a8(2): JNZ 0x000044bd
000044aa(3): MOV RSI,RBP
000044ad(3): MOV EDI,R12D
000044b0(5): CALL 0x00001e10
000044b5(3): TEST RAX,RAX
000044b8(3): MOV RBX,RAX
000044bb(2): JNZ 0x00004481
000044bd(5): CALL 0x00001b20
000044c2(2): MOV EBP,dword ptr [RAX]
000044c4(3): MOV RBX,RAX
000044c7(3): MOV EDI,R12D
000044ca(5): CALL 0x00001cc0
000044cf(2): MOV dword ptr [RBX],EBP
000044d1(2): XOR EBX,EBX
000044d3(2): JMP 0x00004481
000044d8(5): CALL 0x00001b20
000044dd(3): MOV R12D,dword ptr [RAX]
000044e0(3): MOV RBP,RAX
000044e3(3): MOV RDI,RBX
000044e6(5): CALL 0x00007790
000044eb(2): XOR EBX,EBX
000044ed(4): MOV dword ptr [RBP],R12D
000044f1(2): JMP 0x00004481
00004500(4): LEA RCX,[RSI + 0x14]
00004504(4): MOV byte ptr [RSI + 0x14],0x0
00004508(10): MOV RSI,-0x3333333333333333
00004512(6): NOP word ptr [RAX + RAX*0x1]
00004518(3): MOV RAX,RDI
0000451b(4): SUB RCX,0x1
0000451f(3): MUL RSI
00004522(4): SHR RDX,0x3
00004526(4): LEA RAX,[RDX + RDX*0x4]
0000452a(3): ADD RAX,RAX
0000452d(3): SUB RDI,RAX
00004530(3): ADD EDI,0x30
00004533(3): TEST RDX,RDX
00004536(3): MOV byte ptr [RCX],DIL
00004539(3): MOV RDI,RDX
0000453c(2): JNZ 0x00004518
0000453e(3): MOV RAX,RCX
00004541(1): RET
00004550(3): TEST RDI,RDI
00004553(1): PUSH RBX
00004554(2): JZ 0x000045cd
00004556(5): MOV ESI,0x2f
0000455b(3): MOV RBX,RDI
0000455e(5): CALL 0x00001c70
00004563(3): TEST RAX,RAX
00004566(2): JZ 0x000045bd
00004568(4): LEA R8,[RAX + 0x1]
0000456c(3): MOV RDX,R8
0000456f(3): SUB RDX,RBX
00004572(4): CMP RDX,0x6
00004576(2): JLE 0x000045bd
00004578(4): LEA RSI,[RAX + -0x6]
0000457c(7): LEA RDI,[0x16ba0]
00004583(5): MOV ECX,0x7
00004588(2): CMPSB.REPE RDI,RSI
0000458a(3): SETA DL
0000458d(3): SBB DL,0x0
00004590(2): TEST DL,DL
00004592(2): JNZ 0x000045bd
00004594(7): LEA RDI,[0x16ba8]
0000459b(5): MOV ECX,0x3
000045a0(3): MOV RSI,R8
000045a3(3): MOV RBX,R8
000045a6(2): CMPSB.REPE RDI,RSI
000045a8(3): SETA DL
000045ab(3): SBB DL,0x0
000045ae(2): TEST DL,DL
000045b0(2): JNZ 0x000045bd
000045b2(4): LEA RBX,[RAX + 0x4]
000045b6(7): MOV qword ptr [0x0021c0a0],RBX
000045bd(7): MOV qword ptr [0x0021c238],RBX
000045c4(7): MOV qword ptr [0x0021c0c0],RBX
000045cb(1): POP RBX
000045cc(1): RET
000045cd(7): MOV RCX,qword ptr [0x0021c0e0]
000045d4(7): LEA RDI,[0x16b68]
000045db(5): MOV EDX,0x37
000045e0(5): MOV ESI,0x1
000045e5(5): CALL 0x00001ef0
000045ea(5): CALL 0x00001b10
000045ef(1): NOP
000045f0(1): PUSH RBP
000045f1(1): PUSH RBX
000045f2(3): MOV RBP,RDI
000045f5(2): MOV EBX,ESI
000045f7(4): SUB RSP,0x8
000045fb(5): CALL 0x00015eb0
00004600(3): MOVZX EDX,byte ptr [RAX]
00004603(3): AND EDX,0xffffffdf
00004606(3): CMP DL,0x55
00004609(2): JZ 0x00004680
0000460b(3): CMP DL,0x47
0000460e(2): JZ 0x00004630
00004610(7): LEA RAX,[0x16bbb]
00004617(7): LEA RDX,[0x16bbd]
0000461e(3): CMP EBX,0x9
00004621(4): CMOVNZ RAX,RDX
00004625(4): ADD RSP,0x8
00004629(1): POP RBX
0000462a(1): POP RBP
0000462b(1): RET
00004630(4): MOVZX EDX,byte ptr [RAX + 0x1]
00004634(3): AND EDX,0xffffffdf
00004637(3): CMP DL,0x42
0000463a(2): JNZ 0x00004610
0000463c(4): CMP byte ptr [RAX + 0x2],0x31
00004640(2): JNZ 0x00004610
00004642(4): CMP byte ptr [RAX + 0x3],0x38
00004646(2): JNZ 0x00004610
00004648(4): CMP byte ptr [RAX + 0x4],0x30
0000464c(2): JNZ 0x00004610
0000464e(4): CMP byte ptr [RAX + 0x5],0x33
00004652(2): JNZ 0x00004610
00004654(4): CMP byte ptr [RAX + 0x6],0x30
00004658(2): JNZ 0x00004610
0000465a(4): CMP byte ptr [RAX + 0x7],0x0
0000465e(2): JNZ 0x00004610
00004660(4): CMP byte ptr [RBP],0x60
00004664(7): LEA RAX,[0x16bb4]
0000466b(7): LEA RDX,[0x16bb8]
00004672(4): CMOVNZ RAX,RDX
00004676(4): ADD RSP,0x8
0000467a(1): POP RBX
0000467b(1): POP RBP
0000467c(1): RET
00004680(4): MOVZX EDX,byte ptr [RAX + 0x1]
00004684(3): AND EDX,0xffffffdf
00004687(3): CMP DL,0x54
0000468a(2): JNZ 0x00004610
0000468c(4): MOVZX EDX,byte ptr [RAX + 0x2]
00004690(3): AND EDX,0xffffffdf
00004693(3): CMP DL,0x46
00004696(6): JNZ 0x00004610
0000469c(4): CMP byte ptr [RAX + 0x3],0x2d
000046a0(6): JNZ 0x00004610
000046a6(4): CMP byte ptr [RAX + 0x4],0x38
000046aa(6): JNZ 0x00004610
000046b0(4): CMP byte ptr [RAX + 0x5],0x0
000046b4(6): JNZ 0x00004610
000046ba(4): CMP byte ptr [RBP],0x60
000046be(7): LEA RAX,[0x16bac]
000046c5(7): LEA RDX,[0x16bb0]
000046cc(4): CMOVNZ RAX,RDX
000046d0(4): ADD RSP,0x8
000046d4(1): POP RBX
000046d5(1): POP RBP
000046d6(1): RET
000046e0(2): PUSH R15
000046e2(2): PUSH R14
000046e4(3): MOV R15D,R8D
000046e7(2): PUSH R13
000046e9(2): PUSH R12
000046eb(3): MOV R14,RDI
000046ee(1): PUSH RBP
000046ef(1): PUSH RBX
000046f0(3): MOV EBX,R9D
000046f3(3): MOV R13,RSI
000046f6(3): MOV RBP,RCX
000046f9(3): AND EBX,0x2
000046fc(7): SUB RSP,0xb8
00004703(8): MOV RAX,qword ptr [0xf0 + RSP]
0000470b(5): MOV qword ptr [RSP + 0x10],RDX
00004710(5): MOV dword ptr [RSP + 0x8],R8D
00004715(5): MOV dword ptr [RSP + 0x78],R9D
0000471a(5): MOV qword ptr [RSP + 0x20],RAX
0000471f(8): MOV RAX,qword ptr [0xf8 + RSP]
00004727(5): MOV qword ptr [RSP + 0x68],RAX
0000472c(8): MOV RAX,qword ptr [0x100 + RSP]
00004734(5): MOV qword ptr [RSP + 0x60],RAX
00004739(9): MOV RAX,qword ptr FS:[0x28]
00004742(8): MOV qword ptr [0xa8 + RSP],RAX
0000474a(2): XOR EAX,EAX
0000474c(5): CALL 0x00001c00
00004751(4): CMP R15D,0xa
00004755(5): MOV qword ptr [RSP + 0x58],RAX
0000475a(6): JA 0x0000590f
00004760(7): LEA RCX,[0x16c20]
00004767(3): MOV EDX,R15D
0000476a(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
0000476e(3): ADD RAX,RCX
00004771(2): JMP RAX
00004773(5): MOV byte ptr [RSP + 0xe],0x1
00004778(5): MOV byte ptr [RSP + 0x7c],0x0
0000477d(3): XOR R12D,R12D
00004780(9): MOV qword ptr [RSP + 0x50],0x0
00004789(5): MOV byte ptr [RSP + 0xf],0x1
0000478e(5): MOV byte ptr [RSP + 0xd],0x0
00004793(7): LEA RAX,[0x16bbd]
0000479a(9): MOV qword ptr [RSP + 0x18],0x1
000047a3(3): XOR R15D,R15D
000047a6(8): MOV dword ptr [RSP + 0x8],0x2
000047ae(5): MOV qword ptr [RSP + 0x48],RAX
000047b3(3): XOR R11D,R11D
000047b6(3): MOV RAX,RBP
000047b9(3): MOV R8D,R12D
000047bc(3): MOV RBP,R11
000047bf(3): MOV R11,RAX
000047c2(6): NOP word ptr [RAX + RAX*0x1]
000047c8(3): CMP R11,RBP
000047cb(4): SETNZ R12B
000047cf(4): CMP R11,-0x1
000047d3(2): JNZ 0x000047e2
000047d5(5): MOV RAX,qword ptr [RSP + 0x10]
000047da(4): CMP byte ptr [RAX + RBP*0x1],0x0
000047de(4): SETNZ R12B
000047e2(3): TEST R12B,R12B
000047e5(6): JZ 0x00004e40
000047eb(5): CMP dword ptr [RSP + 0x8],0x2
000047f0(5): MOV RDI,qword ptr [RSP + 0x10]
000047f5(4): LEA R9,[RDI + RBP*0x1]
000047f9(3): SETNZ AL
000047fc(4): AND AL,byte ptr [RSP + 0xd]
00004800(3): MOV R10D,EAX
00004803(6): JZ 0x000048b0
00004809(5): MOV RAX,qword ptr [RSP + 0x18]
0000480e(3): TEST RAX,RAX
00004811(6): JZ 0x00004c40
00004817(4): CMP R11,-0x1
0000481b(5): LEA RBX,[RBP + RAX*0x1]
00004820(2): JNZ 0x00004850
00004822(4): CMP RAX,0x1
00004826(2): JBE 0x00004850
00004828(5): MOV byte ptr [RSP + 0x38],R8B
0000482d(5): MOV byte ptr [RSP + 0x30],R10B
00004832(5): MOV qword ptr [RSP + 0x28],R9
00004837(5): CALL 0x00001c10
0000483c(6): MOVZX R8D,byte ptr [RSP + 0x38]
00004842(6): MOVZX R10D,byte ptr [RSP + 0x30]
00004848(3): MOV R11,RAX
0000484b(5): MOV R9,qword ptr [RSP + 0x28]
00004850(3): CMP RBX,R11
00004853(5): MOV byte ptr [RSP + 0x28],R10B
00004858(6): JA 0x00004e10
0000485e(5): MOV RDX,qword ptr [RSP + 0x18]
00004863(5): MOV RSI,qword ptr [RSP + 0x48]
00004868(3): MOV RDI,R9
0000486b(5): MOV qword ptr [RSP + 0x40],R11
00004870(5): MOV byte ptr [RSP + 0x38],R8B
00004875(5): MOV qword ptr [RSP + 0x30],R9
0000487a(5): CALL 0x00001d00
0000487f(2): TEST EAX,EAX
00004881(5): MOV R9,qword ptr [RSP + 0x30]
00004886(6): MOVZX R8D,byte ptr [RSP + 0x38]
0000488c(5): MOV R11,qword ptr [RSP + 0x40]
00004891(6): JNZ 0x00004e10
00004897(5): CMP byte ptr [RSP + 0xf],0x0
0000489c(6): MOVZX R10D,byte ptr [RSP + 0x28]
000048a2(6): JNZ 0x00005825
000048a8(8): NOP dword ptr [RAX + RAX*0x1]
000048b0(4): MOVZX EBX,byte ptr [R9]
000048b4(3): CMP BL,0x7e
000048b7(6): JA 0x00004bd8
000048bd(7): LEA RCX,[0x16c4c]
000048c4(3): MOVZX EDX,BL
000048c7(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
000048cb(3): ADD RAX,RCX
000048ce(2): JMP RAX
000048d0(3): XOR R10D,R10D
000048d3(4): CMP R11,0x1
000048d7(3): SETNZ AL
000048da(4): CMP R11,-0x1
000048de(2): JNZ 0x000048ec
000048e0(5): MOV RAX,qword ptr [RSP + 0x10]
000048e5(4): CMP byte ptr [RAX + 0x1],0x0
000048e9(3): SETNZ AL
000048ec(5): CMP dword ptr [RSP + 0x8],0x2
000048f1(3): SETZ DL
000048f4(2): TEST AL,AL
000048f6(6): JZ 0x00004b48
000048fc(3): XOR R12D,R12D
000048ff(2): XOR EAX,EAX
00004901(7): NOP dword ptr [RAX]
00004908(5): CMP byte ptr [RSP + 0xd],0x1
0000490d(6): JNZ 0x00004a22
00004913(2): TEST DL,DL
00004915(6): JNZ 0x00004a22
0000491b(5): MOV RSI,qword ptr [RSP + 0x20]
00004920(3): TEST RSI,RSI
00004923(2): JZ 0x00004939
00004925(2): MOV EDX,EBX
00004927(3): SHR DL,0x5
0000492a(3): MOVZX EDX,DL
0000492d(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00004930(3): BT EDX,EBX
00004933(6): JC 0x00004a83
00004939(3): TEST R10B,R10B
0000493c(6): JNZ 0x00004a83
00004942(3): XOR EAX,0x1
00004945(4): ADD RBP,0x1
00004949(3): AND EAX,R8D
0000494c(2): TEST AL,AL
0000494e(2): JZ 0x00004970
00004950(3): CMP R13,R15
00004953(2): JBE 0x0000495a
00004955(5): MOV byte ptr [R14 + R15*0x1],0x27
0000495a(4): LEA RAX,[R15 + 0x1]
0000495e(3): CMP R13,RAX
00004961(2): JBE 0x00004969
00004963(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
00004969(4): ADD R15,0x2
0000496d(3): XOR R8D,R8D
00004970(3): CMP R15,R13
00004973(2): JNC 0x00004979
00004975(4): MOV byte ptr [R14 + R15*0x1],BL
00004979(5): MOVZX EDI,byte ptr [RSP + 0xe]
0000497e(4): ADD R15,0x1
00004982(5): MOV EAX,0x0
00004987(3): TEST R12B,R12B
0000498a(3): CMOVZ EDI,EAX
0000498d(5): MOV byte ptr [RSP + 0xe],DIL
00004992(5): JMP 0x000047c8
000049a0(3): XOR R10D,R10D
000049a3(4): MOV EAX,dword ptr [RSP + 0x8]
000049a7(3): CMP EAX,0x2
000049aa(6): JZ 0x00004f68
000049b0(3): CMP EAX,0x5
000049b3(6): JZ 0x00004f28
000049b9(3): CMP EAX,0x2
000049bc(5): MOV EBX,0x3f
000049c1(3): SETZ DL
000049c4(3): XOR R12D,R12D
000049c7(2): XOR EAX,EAX
000049c9(5): JMP 0x00004908
000049d0(3): XOR R10D,R10D
000049d3(5): CMP dword ptr [RSP + 0x8],0x2
000049d8(6): JZ 0x00004ee0
000049de(5): MOV byte ptr [RSP + 0x7c],R12B
000049e3(2): XOR EDX,EDX
000049e5(2): XOR EAX,EAX
000049e7(5): MOV EBX,0x27
000049ec(5): JMP 0x00004908
000049f8(5): MOV EDX,0x9
000049fd(5): MOV EBX,0x74
00004a02(5): CMP dword ptr [RSP + 0x8],0x2
00004a07(3): SETZ AL
00004a0a(4): AND AL,byte ptr [RSP + 0xf]
00004a0e(6): JNZ 0x00004b5e
00004a14(5): CMP byte ptr [RSP + 0xd],0x0
00004a19(2): JNZ 0x00004a80
00004a1b(2): MOV EBX,EDX
00004a1d(3): XOR R12D,R12D
00004a20(2): XOR EAX,EAX
00004a22(5): CMP byte ptr [RSP + 0xf],0x0
00004a27(6): JNZ 0x0000491b
00004a2d(5): JMP 0x00004939
00004a38(5): MOV EDX,0x8
00004a3d(5): MOV EBX,0x62
00004a42(2): JMP 0x00004a14
00004a48(5): CMP dword ptr [RSP + 0x8],0x2
00004a4d(6): JZ 0x00004e20
00004a53(5): CMP byte ptr [RSP + 0xd],0x0
00004a58(6): JZ 0x00004c70
00004a5e(5): CMP byte ptr [RSP + 0xf],0x0
00004a63(6): JZ 0x00004c70
00004a69(6): CMP qword ptr [RSP + 0x18],0x0
00004a6f(6): JNZ 0x00004e2b
00004a75(5): MOV EBX,0x5c
00004a7a(6): NOP word ptr [RAX + RAX*0x1]
00004a80(3): XOR R12D,R12D
00004a83(5): CMP dword ptr [RSP + 0x8],0x2
00004a88(3): SETZ DL
00004a8b(5): CMP byte ptr [RSP + 0xf],0x0
00004a90(2): MOV EAX,EDX
00004a92(6): JNZ 0x000052e8
00004a98(3): MOV EAX,R8D
00004a9b(3): XOR EAX,0x1
00004a9e(2): AND AL,DL
00004aa0(2): JZ 0x00004ad1
00004aa2(3): CMP R13,R15
00004aa5(2): JBE 0x00004aac
00004aa7(5): MOV byte ptr [R14 + R15*0x1],0x27
00004aac(4): LEA RDX,[R15 + 0x1]
00004ab0(3): CMP R13,RDX
00004ab3(2): JBE 0x00004abb
00004ab5(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00004abb(4): LEA RDX,[R15 + 0x2]
00004abf(3): CMP R13,RDX
00004ac2(2): JBE 0x00004aca
00004ac4(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00004aca(4): ADD R15,0x3
00004ace(3): MOV R8D,EAX
00004ad1(3): CMP R13,R15
00004ad4(2): JBE 0x00004adb
00004ad6(5): MOV byte ptr [R14 + R15*0x1],0x5c
00004adb(4): ADD R15,0x1
00004adf(4): ADD RBP,0x1
00004ae3(5): JMP 0x00004970
00004af0(5): CMP byte ptr [RSP + 0xd],0x0
00004af5(6): JNZ 0x00004cc3
00004afb(2): XOR EDX,EDX
00004afd(5): TEST byte ptr [RSP + 0x78],0x1
00004b02(6): JZ 0x00004a1b
00004b08(4): ADD RBP,0x1
00004b0c(5): JMP 0x000047c8
00004b18(5): CMP dword ptr [RSP + 0x8],0x2
00004b1d(3): SETZ DL
00004b20(2): XOR EAX,EAX
00004b22(5): JMP 0x00004908
00004b30(5): MOV EDX,0x7
00004b35(5): MOV EBX,0x61
00004b3a(5): JMP 0x00004a14
00004b40(5): CMP dword ptr [RSP + 0x8],0x2
00004b45(3): SETZ DL
00004b48(3): TEST RBP,RBP
00004b4b(6): JNZ 0x000048fc
00004b51(5): MOVZX EAX,byte ptr [RSP + 0xf]
00004b56(2): AND AL,DL
00004b58(6): JZ 0x00004908
00004b5e(3): MOV RBP,R11
00004b61(8): MOV dword ptr [RSP + 0x8],0x2
00004b69(5): JMP 0x00005269
00004b70(5): CMP dword ptr [RSP + 0x8],0x2
00004b75(3): SETZ DL
00004b78(3): XOR R12D,R12D
00004b7b(2): JMP 0x00004b51
00004b80(5): CMP dword ptr [RSP + 0x8],0x2
00004b85(5): MOV EBX,0x20
00004b8a(3): SETZ DL
00004b8d(2): JMP 0x00004b51
00004b90(5): MOV EDX,0xd
00004b95(5): MOV EBX,0x72
00004b9a(5): JMP 0x00004a02
00004ba0(5): MOV EDX,0xc
00004ba5(5): MOV EBX,0x66
00004baa(5): JMP 0x00004a14
00004bb0(5): MOV EDX,0xb
00004bb5(5): MOV EBX,0x76
00004bba(5): JMP 0x00004a14
00004bc0(5): MOV EDX,0xa
00004bc5(5): MOV EBX,0x6e
00004bca(5): JMP 0x00004a02
00004bd0(3): XOR R10D,R10D
00004bd3(5): NOP dword ptr [RAX + RAX*0x1]
00004bd8(6): CMP qword ptr [RSP + 0x58],0x1
00004bde(6): JNZ 0x00004f88
00004be4(5): MOV qword ptr [RSP + 0x38],R11
00004be9(5): MOV byte ptr [RSP + 0x30],R8B
00004bee(5): MOV byte ptr [RSP + 0x28],R10B
00004bf3(5): CALL 0x00001f50
00004bf8(3): MOV RCX,qword ptr [RAX]
00004bfb(3): MOVZX EDX,BL
00004bfe(6): MOVZX R10D,byte ptr [RSP + 0x28]
00004c04(6): MOVZX R8D,byte ptr [RSP + 0x30]
00004c0a(5): MOV R11,qword ptr [RSP + 0x38]
00004c0f(5): MOV EDI,0x1
00004c14(4): MOVZX EAX,word ptr [RCX + RDX*0x2]
00004c18(4): AND AX,0x4000
00004c1c(4): SETNZ R12B
00004c20(3): SETZ AL
00004c23(4): AND AL,byte ptr [RSP + 0xd]
00004c27(2): TEST AL,AL
00004c29(6): JNZ 0x000055c1
00004c2f(5): CMP dword ptr [RSP + 0x8],0x2
00004c34(3): SETZ DL
00004c37(5): JMP 0x00004908
00004c40(4): MOVZX EBX,byte ptr [R9]
00004c44(3): CMP BL,0x7e
00004c47(2): JA 0x00004bd0
00004c49(7): LEA RCX,[0x16e48]
00004c50(3): MOVZX EDX,BL
00004c53(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00004c57(3): ADD RAX,RCX
00004c5a(2): JMP RAX
00004c60(3): XOR R10D,R10D
00004c63(5): CMP byte ptr [RSP + 0xd],0x0
00004c68(6): JNZ 0x00004a5e
00004c6e(2): NOP
00004c70(5): MOV EDX,0x5c
00004c75(5): MOV EBX,0x5c
00004c7a(5): JMP 0x00004a14
00004c80(5): MOV EDX,0xc
00004c85(3): XOR R10D,R10D
00004c88(5): MOV EBX,0x66
00004c8d(5): JMP 0x00004a14
00004c98(5): MOV EDX,0xa
00004c9d(3): XOR R10D,R10D
00004ca0(5): MOV EBX,0x6e
00004ca5(5): JMP 0x00004a02
00004cb0(5): MOV EBX,0x61
00004cb5(5): JMP 0x00004a80
00004cc0(3): XOR R10D,R10D
00004cc3(5): CMP dword ptr [RSP + 0x8],0x2
00004cc8(3): SETZ DL
00004ccb(5): CMP byte ptr [RSP + 0xf],0x0
00004cd0(6): JNZ 0x0000586a
00004cd6(3): MOV EAX,R8D
00004cd9(3): MOV RCX,R15
00004cdc(3): XOR EAX,0x1
00004cdf(2): AND AL,DL
00004ce1(2): JZ 0x00004d10
00004ce3(3): CMP R13,R15
00004ce6(2): JBE 0x00004ced
00004ce8(5): MOV byte ptr [R14 + R15*0x1],0x27
00004ced(4): LEA RCX,[R15 + 0x1]
00004cf1(3): CMP R13,RCX
00004cf4(2): JBE 0x00004cfc
00004cf6(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00004cfc(4): LEA RCX,[R15 + 0x2]
00004d00(3): CMP R13,RCX
00004d03(6): JA 0x00005339
00004d09(4): LEA RCX,[R15 + 0x3]
00004d0d(3): MOV R8D,EAX
00004d10(3): CMP R13,RCX
00004d13(2): JBE 0x00004d1a
00004d15(5): MOV byte ptr [R14 + RCX*0x1],0x5c
00004d1a(5): CMP dword ptr [RSP + 0x8],0x2
00004d1f(4): LEA R15,[RCX + 0x1]
00004d23(6): JZ 0x00005329
00004d29(4): LEA RAX,[RBP + 0x1]
00004d2d(3): CMP RAX,R11
00004d30(2): JNC 0x00004d4b
00004d32(5): MOV RAX,qword ptr [RSP + 0x10]
00004d37(5): MOVZX EAX,byte ptr [RAX + RBP*0x1 + 0x1]
00004d3c(4): MOV byte ptr [RSP + 0x28],AL
00004d40(3): SUB EAX,0x30
00004d43(2): CMP AL,0x9
00004d45(6): JBE 0x00005579
00004d4b(3): MOV EAX,R12D
00004d4e(5): MOV EBX,0x30
00004d53(3): XOR R12D,R12D
00004d56(5): JMP 0x00004908
00004d60(5): CMP dword ptr [RSP + 0x8],0x2
00004d65(3): MOV R12D,R10D
00004d68(3): SETZ DL
00004d6b(3): XOR R10D,R10D
00004d6e(2): XOR EAX,EAX
00004d70(5): JMP 0x00004908
00004d78(5): CMP dword ptr [RSP + 0x8],0x2
00004d7d(3): SETZ DL
00004d80(3): XOR R10D,R10D
00004d83(5): JMP 0x00004b48
00004d90(5): CMP dword ptr [RSP + 0x8],0x2
00004d95(3): SETZ DL
00004d98(3): XOR R10D,R10D
00004d9b(3): XOR R12D,R12D
00004d9e(5): JMP 0x00004b51
00004da8(5): CMP dword ptr [RSP + 0x8],0x2
00004dad(3): MOV R12D,R10D
00004db0(5): MOV EBX,0x20
00004db5(3): SETZ DL
00004db8(3): XOR R10D,R10D
00004dbb(5): JMP 0x00004b51
00004dc0(5): MOV EDX,0xd
00004dc5(3): XOR R10D,R10D
00004dc8(5): MOV EBX,0x72
00004dcd(5): JMP 0x00004a02
00004dd8(5): MOV EBX,0x76
00004ddd(5): JMP 0x00004a80
00004de8(5): MOV EDX,0x9
00004ded(3): XOR R10D,R10D
00004df0(5): MOV EBX,0x74
00004df5(5): JMP 0x00004a02
00004e00(5): MOV EBX,0x62
00004e05(5): JMP 0x00004a80
00004e10(3): XOR R10D,R10D
00004e13(5): JMP 0x000048b0
00004e20(5): CMP byte ptr [RSP + 0xf],0x0
00004e25(6): JNZ 0x00005790
00004e2b(4): ADD RBP,0x1
00004e2f(3): MOV EAX,R8D
00004e32(3): XOR R12D,R12D
00004e35(5): MOV EBX,0x5c
00004e3a(5): JMP 0x0000494c
00004e40(5): CMP dword ptr [RSP + 0x8],0x2
00004e45(5): MOVZX EBX,byte ptr [RSP + 0xf]
00004e4a(3): MOV R12D,R8D
00004e4d(3): MOV RBP,R11
00004e50(3): SETZ DL
00004e53(2): MOV EAX,EBX
00004e55(3): TEST R15,R15
00004e58(3): SETZ CL
00004e5b(2): AND EAX,EDX
00004e5d(2): AND AL,CL
00004e5f(6): JNZ 0x000058c6
00004e65(2): MOV EAX,EBX
00004e67(3): XOR EAX,0x1
00004e6a(2): AND DL,AL
00004e6c(6): JZ 0x000057dc
00004e72(5): CMP byte ptr [RSP + 0x7c],0x0
00004e77(6): JZ 0x000057da
00004e7d(5): CMP byte ptr [RSP + 0xe],0x0
00004e82(6): JNZ 0x0000587d
00004e88(3): TEST R13,R13
00004e8b(3): SETZ AL
00004e8e(6): CMP qword ptr [RSP + 0x50],0x0
00004e94(3): SETNZ DL
00004e97(2): AND AL,DL
00004e99(6): JZ 0x000058bc
00004e9f(5): MOV R13,qword ptr [RSP + 0x50]
00004ea4(7): LEA RBX,[0x16bbd]
00004eab(4): MOV byte ptr [R14],0x27
00004eaf(8): MOV dword ptr [RSP + 0x8],0x2
00004eb7(6): MOV R15D,0x1
00004ebd(9): MOV qword ptr [RSP + 0x18],0x1
00004ec6(5): MOV byte ptr [RSP + 0xf],0x0
00004ecb(5): MOV qword ptr [RSP + 0x48],RBX
00004ed0(4): MOV byte ptr [RSP + 0x7c],AL
00004ed4(5): JMP 0x000047b3
00004ee0(5): CMP byte ptr [RSP + 0xf],0x0
00004ee5(6): JNZ 0x00005790
00004eeb(3): TEST R13,R13
00004eee(6): JZ 0x000052f0
00004ef4(2): XOR EDX,EDX
00004ef6(6): CMP qword ptr [RSP + 0x50],0x0
00004efc(6): JNZ 0x000052f0
00004f02(5): MOV qword ptr [RSP + 0x50],R13
00004f07(4): ADD R15,0x3
00004f0b(2): XOR EAX,EAX
00004f0d(5): MOV byte ptr [RSP + 0x7c],R12B
00004f12(3): XOR R8D,R8D
00004f15(3): MOV R13,RDX
00004f18(5): MOV EBX,0x27
00004f1d(5): JMP 0x00004939
00004f28(5): TEST byte ptr [RSP + 0x78],0x4
00004f2d(2): JZ 0x00004f50
00004f2f(4): LEA RCX,[RBP + 0x2]
00004f33(3): CMP RCX,R11
00004f36(2): JNC 0x00004f50
00004f38(5): MOV RAX,qword ptr [RSP + 0x10]
00004f3d(5): CMP byte ptr [RAX + RBP*0x1 + 0x1],0x3f
00004f42(6): JZ 0x000056d2
00004f48(8): NOP dword ptr [RAX + RAX*0x1]
00004f50(2): XOR EDX,EDX
00004f52(3): XOR R12D,R12D
00004f55(2): XOR EAX,EAX
00004f57(5): MOV EBX,0x3f
00004f5c(5): JMP 0x00004908
00004f68(5): CMP byte ptr [RSP + 0xf],0x0
00004f6d(6): JNZ 0x00005790
00004f73(3): XOR R12D,R12D
00004f76(2): XOR EAX,EAX
00004f78(5): MOV EBX,0x3f
00004f7d(5): JMP 0x00004939
00004f88(8): LEA RAX,[0xa0 + RSP]
00004f90(4): CMP R11,-0x1
00004f94(12): MOV qword ptr [0xa0 + RSP],0x0
00004fa0(5): MOV qword ptr [RSP + 0x28],RAX
00004fa5(2): JNZ 0x00004fd4
00004fa7(5): MOV RDI,qword ptr [RSP + 0x10]
00004fac(5): MOV byte ptr [RSP + 0x40],R8B
00004fb1(5): MOV byte ptr [RSP + 0x38],R10B
00004fb6(5): MOV qword ptr [RSP + 0x30],R9
00004fbb(5): CALL 0x00001c10
00004fc0(6): MOVZX R8D,byte ptr [RSP + 0x40]
00004fc6(6): MOVZX R10D,byte ptr [RSP + 0x38]
00004fcc(3): MOV R11,RAX
00004fcf(5): MOV R9,qword ptr [RSP + 0x30]
00004fd4(8): LEA RAX,[0x9c + RSP]
00004fdc(2): XOR ECX,ECX
00004fde(4): MOV byte ptr [RSP + 0x7e],BL
00004fe2(5): MOV byte ptr [RSP + 0x7d],R8B
00004fe7(3): MOV RBX,RCX
00004fea(8): MOV qword ptr [0x88 + RSP],R9
00004ff2(5): MOV qword ptr [RSP + 0x38],RAX
00004ff7(5): MOV byte ptr [RSP + 0x7f],R10B
00004ffc(8): MOV qword ptr [0x80 + RSP],R15
00005004(5): MOV qword ptr [RSP + 0x40],R14
00005009(5): MOV qword ptr [RSP + 0x70],R13
0000500e(5): MOV qword ptr [RSP + 0x30],R11
00005013(5): MOV RAX,qword ptr [RSP + 0x10]
00005018(5): LEA R14,[RBP + RBX*0x1]
0000501d(5): MOV RDX,qword ptr [RSP + 0x30]
00005022(5): MOV RCX,qword ptr [RSP + 0x28]
00005027(5): MOV RDI,qword ptr [RSP + 0x38]
0000502c(4): LEA R13,[RAX + R14*0x1]
00005030(3): SUB RDX,R14
00005033(3): MOV RSI,R13
00005036(5): CALL 0x00007b30
0000503b(3): TEST RAX,RAX
0000503e(3): MOV R15,RAX
00005041(2): JZ 0x00005091
00005043(4): CMP RAX,-0x1
00005047(6): JZ 0x00005665
0000504d(4): CMP RAX,-0x2
00005051(6): JZ 0x000055f1
00005057(5): CMP dword ptr [RSP + 0x8],0x2
0000505c(3): SETZ AL
0000505f(4): AND AL,byte ptr [RSP + 0xf]
00005063(6): JNZ 0x00005200
00005069(7): MOV EDI,dword ptr [0x9c + RSP]
00005070(5): CALL 0x00001f20
00005075(5): MOV RDI,qword ptr [RSP + 0x28]
0000507a(2): TEST EAX,EAX
0000507c(5): MOV EAX,0x0
00005081(4): CMOVZ R12D,EAX
00005085(3): ADD RBX,R15
00005088(5): CALL 0x00001f10
0000508d(2): TEST EAX,EAX
0000508f(2): JZ 0x00005013
00005091(3): MOV EDX,R12D
00005094(3): MOV RDI,RBX
00005097(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000509d(3): XOR EDX,0x1
000050a0(5): MOVZX EBX,byte ptr [RSP + 0x7e]
000050a5(6): MOVZX R10D,byte ptr [RSP + 0x7f]
000050ab(4): AND DL,byte ptr [RSP + 0xd]
000050af(8): MOV R15,qword ptr [0x80 + RSP]
000050b7(5): MOV R14,qword ptr [RSP + 0x40]
000050bc(5): MOV R13,qword ptr [RSP + 0x70]
000050c1(5): MOV R11,qword ptr [RSP + 0x30]
000050c6(4): CMP RDI,0x1
000050ca(6): JBE 0x000056cb
000050d0(3): MOV RCX,RDI
000050d3(2): XOR ESI,ESI
000050d5(6): MOVZX R9D,byte ptr [RSP + 0xf]
000050db(3): ADD RCX,RBP
000050de(5): MOV RDI,qword ptr [RSP + 0x10]
000050e3(5): JMP 0x0000519e
000050f0(5): CMP dword ptr [RSP + 0x8],0x2
000050f5(3): SETZ AL
000050f8(3): TEST R9B,R9B
000050fb(6): JNZ 0x000055b0
00005101(3): MOV ESI,R8D
00005104(3): XOR ESI,0x1
00005107(3): AND AL,SIL
0000510a(2): JZ 0x0000513b
0000510c(3): CMP R13,R15
0000510f(2): JBE 0x00005116
00005111(5): MOV byte ptr [R14 + R15*0x1],0x27
00005116(4): LEA RSI,[R15 + 0x1]
0000511a(3): CMP R13,RSI
0000511d(2): JBE 0x00005125
0000511f(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00005125(4): LEA RSI,[R15 + 0x2]
00005129(3): CMP R13,RSI
0000512c(2): JBE 0x00005134
0000512e(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00005134(4): ADD R15,0x3
00005138(3): MOV R8D,EAX
0000513b(3): CMP R13,R15
0000513e(2): JBE 0x00005145
00005140(5): MOV byte ptr [R14 + R15*0x1],0x5c
00005145(4): LEA RAX,[R15 + 0x1]
00005149(3): CMP R13,RAX
0000514c(2): JBE 0x0000515b
0000514e(2): MOV EAX,EBX
00005150(3): SHR AL,0x6
00005153(3): ADD EAX,0x30
00005156(5): MOV byte ptr [R14 + R15*0x1 + 0x1],AL
0000515b(4): LEA RAX,[R15 + 0x2]
0000515f(3): CMP R13,RAX
00005162(2): JBE 0x00005174
00005164(2): MOV EAX,EBX
00005166(3): SHR AL,0x3
00005169(3): AND EAX,0x7
0000516c(3): ADD EAX,0x30
0000516f(5): MOV byte ptr [R14 + R15*0x1 + 0x2],AL
00005174(3): AND EBX,0x7
00005177(4): ADD RBP,0x1
0000517b(4): ADD R15,0x3
0000517f(3): ADD EBX,0x30
00005182(3): CMP RBP,RCX
00005185(6): JNC 0x00004970
0000518b(2): MOV ESI,EDX
0000518d(3): CMP R13,R15
00005190(2): JBE 0x00005196
00005192(4): MOV byte ptr [R14 + R15*0x1],BL
00005196(4): MOVZX EBX,byte ptr [RDI + RBP*0x1]
0000519a(4): ADD R15,0x1
0000519e(2): TEST DL,DL
000051a0(6): JNZ 0x000050f0
000051a6(2): MOV EAX,ESI
000051a8(3): XOR EAX,0x1
000051ab(3): AND EAX,R8D
000051ae(3): TEST R10B,R10B
000051b1(2): JZ 0x000051c1
000051b3(3): CMP R13,R15
000051b6(2): JBE 0x000051bd
000051b8(5): MOV byte ptr [R14 + R15*0x1],0x5c
000051bd(4): ADD R15,0x1
000051c1(4): ADD RBP,0x1
000051c5(3): CMP RBP,RCX
000051c8(6): JNC 0x0000494c
000051ce(2): TEST AL,AL
000051d0(6): JZ 0x000055ce
000051d6(3): CMP R13,R15
000051d9(2): JBE 0x000051e0
000051db(5): MOV byte ptr [R14 + R15*0x1],0x27
000051e0(4): LEA RAX,[R15 + 0x1]
000051e4(3): CMP R13,RAX
000051e7(2): JBE 0x000051ef
000051e9(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
000051ef(4): ADD R15,0x2
000051f3(3): XOR R10D,R10D
000051f6(3): XOR R8D,R8D
000051f9(2): JMP 0x0000518d
00005200(4): CMP R15,0x1
00005204(6): JZ 0x00005069
0000520a(5): MOV RDI,qword ptr [RSP + 0x10]
0000520f(4): LEA RCX,[RDI + R15*0x1]
00005213(5): LEA RDX,[RDI + R14*0x1 + 0x1]
00005218(4): LEA R8,[RCX + R14*0x1]
0000521c(2): JMP 0x0000522d
00005220(4): ADD RDX,0x1
00005224(3): CMP R8,RDX
00005227(6): JZ 0x00005069
0000522d(3): MOVZX ECX,byte ptr [RDX]
00005230(3): SUB ECX,0x5b
00005233(3): CMP CL,0x21
00005236(2): JA 0x00005220
00005238(5): MOV ESI,0x1
0000523d(3): SHL RSI,CL
00005240(3): MOV RCX,RSI
00005243(10): MOV RSI,0x20000002b
0000524d(3): TEST RCX,RSI
00005250(2): JZ 0x00005220
00005252(5): MOV R14,qword ptr [RSP + 0x40]
00005257(5): MOV R13,qword ptr [RSP + 0x70]
0000525c(5): MOV RBP,qword ptr [RSP + 0x30]
00005261(8): MOV dword ptr [RSP + 0x8],0x2
00005269(5): CMP byte ptr [RSP + 0xd],0x0
0000526e(2): JZ 0x00005280
00005270(2): TEST AL,AL
00005272(5): MOV EAX,0x4
00005277(5): CMOVZ EAX,dword ptr [RSP + 0x8]
0000527c(4): MOV dword ptr [RSP + 0x8],EAX
00005280(4): SUB RSP,0x8
00005284(3): MOV RCX,RBP
00005287(3): MOV RSI,R13
0000528a(4): PUSH qword ptr [RSP + 0x68]
0000528e(4): PUSH qword ptr [RSP + 0x78]
00005292(3): MOV RDI,R14
00005295(2): PUSH 0x0
00005297(8): MOV R9D,dword ptr [0x98 + RSP]
0000529f(5): MOV R8D,dword ptr [RSP + 0x28]
000052a4(5): MOV RDX,qword ptr [RSP + 0x30]
000052a9(4): AND R9D,0xfffffffd
000052ad(5): CALL 0x000046e0
000052b2(4): ADD RSP,0x20
000052b6(3): MOV R15,RAX
000052b9(8): MOV RBX,qword ptr [0xa8 + RSP]
000052c1(9): XOR RBX,qword ptr FS:[0x28]
000052ca(3): MOV RAX,R15
000052cd(6): JNZ 0x000058d3
000052d3(7): ADD RSP,0xb8
000052da(1): POP RBX
000052db(1): POP RBP
000052dc(2): POP R12
000052de(2): POP R13
000052e0(2): POP R14
000052e2(2): POP R15
000052e4(1): RET
000052e8(3): MOV RBP,R11
000052eb(5): JMP 0x00005269
000052f0(3): CMP R13,R15
000052f3(2): JBE 0x000052fa
000052f5(5): MOV byte ptr [R14 + R15*0x1],0x27
000052fa(4): LEA RAX,[R15 + 0x1]
000052fe(3): CMP R13,RAX
00005301(2): JBE 0x00005309
00005303(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x5c
00005309(4): LEA RAX,[R15 + 0x2]
0000530d(3): CMP R13,RAX
00005310(6): JBE 0x00005902
00005316(3): MOV RDX,R13
00005319(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000531f(5): MOV R13,qword ptr [RSP + 0x50]
00005324(5): JMP 0x00004f02
00005329(3): MOV EAX,R12D
0000532c(5): MOV EBX,0x30
00005331(3): XOR R12D,R12D
00005334(5): JMP 0x00004939
00005339(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000533f(5): JMP 0x00004d09
00005344(2): TEST EBX,EBX
00005346(6): JNZ 0x00004773
0000534c(5): MOV byte ptr [RSP + 0xd],0x1
00005351(3): TEST R13,R13
00005354(6): JNZ 0x000058ea
0000535a(7): LEA RAX,[0x16bbd]
00005361(9): MOV qword ptr [RSP + 0x50],0x0
0000536a(5): MOV byte ptr [RSP + 0xe],0x1
0000536f(5): MOV byte ptr [RSP + 0x7c],0x0
00005374(3): XOR R12D,R12D
00005377(5): MOV byte ptr [RSP + 0xf],0x0
0000537c(9): MOV qword ptr [RSP + 0x18],0x1
00005385(5): MOV qword ptr [RSP + 0x48],RAX
0000538a(6): MOV R15D,0x1
00005390(8): MOV dword ptr [RSP + 0x8],0x2
00005398(5): JMP 0x000047b3
000053a0(2): TEST EBX,EBX
000053a2(6): JNZ 0x0000579d
000053a8(3): TEST R13,R13
000053ab(6): JZ 0x000055d6
000053b1(4): MOV byte ptr [R14],0x22
000053b5(5): MOV byte ptr [RSP + 0xe],0x1
000053ba(3): XOR R12D,R12D
000053bd(5): MOV byte ptr [RSP + 0x7c],0x0
000053c2(9): MOV qword ptr [RSP + 0x50],0x0
000053cb(7): LEA RAX,[0x16bbb]
000053d2(5): MOV byte ptr [RSP + 0xf],0x0
000053d7(5): MOV byte ptr [RSP + 0xd],0x1
000053dc(9): MOV qword ptr [RSP + 0x18],0x1
000053e5(6): MOV R15D,0x1
000053eb(5): MOV qword ptr [RSP + 0x48],RAX
000053f0(5): JMP 0x000047b3
000053f5(7): LEA RAX,[0x16bbb]
000053fc(5): MOV byte ptr [RSP + 0xe],0x1
00005401(5): MOV byte ptr [RSP + 0x7c],0x0
00005406(3): XOR R12D,R12D
00005409(9): MOV qword ptr [RSP + 0x50],0x0
00005412(5): MOV byte ptr [RSP + 0xf],0x1
00005417(5): MOV byte ptr [RSP + 0xd],0x1
0000541c(9): MOV qword ptr [RSP + 0x18],0x1
00005425(3): XOR R15D,R15D
00005428(5): MOV qword ptr [RSP + 0x48],RAX
0000542d(8): MOV dword ptr [RSP + 0x8],0x5
00005435(5): JMP 0x000047b3
0000543a(5): MOV byte ptr [RSP + 0xe],0x1
0000543f(5): MOV byte ptr [RSP + 0x7c],0x0
00005444(3): XOR R12D,R12D
00005447(9): MOV qword ptr [RSP + 0x50],0x0
00005450(5): MOV byte ptr [RSP + 0xf],0x0
00005455(3): XOR R15D,R15D
00005458(5): MOV byte ptr [RSP + 0xd],0x1
0000545d(9): MOV qword ptr [RSP + 0x18],0x0
00005466(9): MOV qword ptr [RSP + 0x48],0x0
0000546f(5): JMP 0x000047b3
00005474(5): CMP dword ptr [RSP + 0x8],0xa
00005479(2): JZ 0x000054d1
0000547b(7): LEA RSI,[0x16bbf]
00005482(2): XOR EDI,EDI
00005484(5): MOV EDX,0x5
00005489(5): CALL 0x00001bf0
0000548e(3): MOV RCX,RAX
00005491(5): MOV qword ptr [RSP + 0x68],RAX
00005496(7): LEA RAX,[0x16bbf]
0000549d(3): CMP RCX,RAX
000054a0(6): JZ 0x0000583e
000054a6(7): LEA RSI,[0x16bbd]
000054ad(2): XOR EDI,EDI
000054af(5): MOV EDX,0x5
000054b4(5): CALL 0x00001bf0
000054b9(3): MOV RCX,RAX
000054bc(5): MOV qword ptr [RSP + 0x60],RAX
000054c1(7): LEA RAX,[0x16bbd]
000054c8(3): CMP RCX,RAX
000054cb(6): JZ 0x00005854
000054d1(3): XOR R15D,R15D
000054d4(2): TEST EBX,EBX
000054d6(6): JZ 0x0000569d
000054dc(2): TEST EBX,EBX
000054de(5): MOV RBX,qword ptr [RSP + 0x60]
000054e3(5): SETNZ byte ptr [RSP + 0xf]
000054e8(3): XOR R12D,R12D
000054eb(3): MOV RDI,RBX
000054ee(5): CALL 0x00001c10
000054f3(5): MOV qword ptr [RSP + 0x48],RBX
000054f8(5): MOV qword ptr [RSP + 0x18],RAX
000054fd(5): MOV byte ptr [RSP + 0xe],0x1
00005502(5): MOV byte ptr [RSP + 0x7c],0x0
00005507(9): MOV qword ptr [RSP + 0x50],0x0
00005510(5): MOV byte ptr [RSP + 0xd],0x1
00005515(5): JMP 0x000047b3
0000551a(5): MOV byte ptr [RSP + 0xe],0x1
0000551f(5): MOV byte ptr [RSP + 0x7c],0x0
00005524(3): XOR R12D,R12D
00005527(9): MOV qword ptr [RSP + 0x50],0x0
00005530(5): MOV byte ptr [RSP + 0xf],0x0
00005535(3): XOR R15D,R15D
00005538(5): MOV byte ptr [RSP + 0xd],0x0
0000553d(9): MOV qword ptr [RSP + 0x18],0x0
00005546(9): MOV qword ptr [RSP + 0x48],0x0
0000554f(5): JMP 0x000047b3
00005554(5): MOV byte ptr [RSP + 0xe],0x1
00005559(5): MOV byte ptr [RSP + 0x7c],0x0
0000555e(3): XOR R12D,R12D
00005561(9): MOV qword ptr [RSP + 0x50],0x0
0000556a(5): MOV byte ptr [RSP + 0xf],0x1
0000556f(5): MOV byte ptr [RSP + 0xd],0x1
00005574(5): JMP 0x00004793
00005579(3): CMP R13,R15
0000557c(2): JBE 0x00005583
0000557e(5): MOV byte ptr [R14 + R15*0x1],0x30
00005583(4): LEA RAX,[RCX + 0x2]
00005587(3): CMP R13,RAX
0000558a(2): JBE 0x00005592
0000558c(6): MOV byte ptr [R14 + RCX*0x1 + 0x2],0x30
00005592(3): MOV EAX,R12D
00005595(4): LEA R15,[RCX + 0x3]
00005599(3): XOR R12D,R12D
0000559c(5): MOV EBX,0x30
000055a1(5): JMP 0x00004908
000055b0(5): MOVZX EBX,byte ptr [RSP + 0xf]
000055b5(3): MOV RBP,R11
000055b8(4): MOV byte ptr [RSP + 0xd],BL
000055bc(5): JMP 0x00005269
000055c1(5): MOVZX EDX,byte ptr [RSP + 0xd]
000055c6(3): XOR R12D,R12D
000055c9(5): JMP 0x000050d0
000055ce(3): XOR R10D,R10D
000055d1(5): JMP 0x0000518d
000055d6(9): MOV qword ptr [RSP + 0x50],0x0
000055df(5): MOV byte ptr [RSP + 0xe],0x1
000055e4(3): XOR R12D,R12D
000055e7(5): MOV byte ptr [RSP + 0x7c],0x0
000055ec(5): JMP 0x000053cb
000055f1(5): MOV R11,qword ptr [RSP + 0x30]
000055f6(3): MOV RSI,R14
000055f9(3): MOV RCX,R13
000055fc(3): MOV RAX,RBX
000055ff(3): MOV RDI,RBX
00005602(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00005608(5): MOVZX EBX,byte ptr [RSP + 0x7e]
0000560d(8): MOV R9,qword ptr [0x88 + RSP]
00005615(3): CMP RSI,R11
00005618(6): MOVZX R10D,byte ptr [RSP + 0x7f]
0000561e(8): MOV R15,qword ptr [0x80 + RSP]
00005626(5): MOV R14,qword ptr [RSP + 0x40]
0000562b(5): MOV R13,qword ptr [RSP + 0x70]
00005630(2): JNC 0x00005658
00005632(3): CMP byte ptr [RCX],0x0
00005635(2): JNZ 0x00005647
00005637(2): JMP 0x00005658
00005640(5): CMP byte ptr [R9 + RAX*0x1],0x0
00005645(2): JZ 0x00005655
00005647(4): ADD RAX,0x1
0000564b(5): LEA RDX,[RBP + RAX*0x1]
00005650(3): CMP R11,RDX
00005653(2): JA 0x00005640
00005655(3): MOV RDI,RAX
00005658(5): MOVZX EDX,byte ptr [RSP + 0xd]
0000565d(3): XOR R12D,R12D
00005660(5): JMP 0x000050c6
00005665(3): MOV RDI,RBX
00005668(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000566e(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00005673(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00005679(8): MOV R15,qword ptr [0x80 + RSP]
00005681(3): XOR R12D,R12D
00005684(5): MOV R14,qword ptr [RSP + 0x40]
00005689(5): MOV R13,qword ptr [RSP + 0x70]
0000568e(5): MOV R11,qword ptr [RSP + 0x30]
00005693(5): MOVZX EDX,byte ptr [RSP + 0xd]
00005698(5): JMP 0x000050c6
0000569d(5): MOV RDX,qword ptr [RSP + 0x68]
000056a2(3): MOVZX EAX,byte ptr [RDX]
000056a5(2): TEST AL,AL
000056a7(6): JZ 0x000054dc
000056ad(3): NOP dword ptr [RAX]
000056b0(3): CMP R13,R15
000056b3(2): JBE 0x000056b9
000056b5(4): MOV byte ptr [R14 + R15*0x1],AL
000056b9(4): ADD R15,0x1
000056bd(5): MOVZX EAX,byte ptr [RDX + R15*0x1]
000056c2(2): TEST AL,AL
000056c4(2): JNZ 0x000056b0
000056c6(5): JMP 0x000054dc
000056cb(2): MOV EAX,EDX
000056cd(5): JMP 0x00004c27
000056d2(4): MOVZX EBX,byte ptr [RAX + RCX*0x1]
000056d6(3): CMP BL,0x3e
000056d9(6): JA 0x00004f50
000056df(10): MOV RAX,0x7000a38200000000
000056e9(4): BT RAX,RBX
000056ed(6): JNC 0x00004f50
000056f3(5): CMP byte ptr [RSP + 0xf],0x0
000056f8(6): JNZ 0x000058e2
000056fe(3): CMP R13,R15
00005701(2): JBE 0x00005708
00005703(5): MOV byte ptr [R14 + R15*0x1],0x3f
00005708(4): LEA RAX,[R15 + 0x1]
0000570c(3): CMP R13,RAX
0000570f(2): JBE 0x00005717
00005711(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x22
00005717(4): LEA RAX,[R15 + 0x2]
0000571b(3): CMP R13,RAX
0000571e(2): JBE 0x00005726
00005720(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x22
00005726(4): LEA RAX,[R15 + 0x3]
0000572a(3): CMP R13,RAX
0000572d(2): JBE 0x00005735
0000572f(6): MOV byte ptr [R14 + R15*0x1 + 0x3],0x3f
00005735(4): ADD R15,0x4
00005739(2): XOR EDX,EDX
0000573b(3): XOR R12D,R12D
0000573e(2): XOR EAX,EAX
00005740(3): MOV RBP,RCX
00005743(5): JMP 0x00004908
00005748(2): TEST EBX,EBX
0000574a(6): JZ 0x000058d8
00005750(7): LEA RAX,[0x16bbd]
00005757(5): MOV byte ptr [RSP + 0xe],0x1
0000575c(5): MOV byte ptr [RSP + 0x7c],0x0
00005761(3): XOR R12D,R12D
00005764(9): MOV qword ptr [RSP + 0x50],0x0
0000576d(5): MOV byte ptr [RSP + 0xf],0x1
00005772(5): MOV byte ptr [RSP + 0xd],0x0
00005777(9): MOV qword ptr [RSP + 0x18],0x1
00005780(3): XOR R15D,R15D
00005783(5): MOV qword ptr [RSP + 0x48],RAX
00005788(5): JMP 0x000047b3
00005790(3): MOV RBP,R11
00005793(5): MOVZX EAX,byte ptr [RSP + 0xf]
00005798(5): JMP 0x00005269
0000579d(7): LEA RAX,[0x16bbb]
000057a4(5): MOV byte ptr [RSP + 0xe],0x1
000057a9(5): MOV byte ptr [RSP + 0x7c],0x0
000057ae(3): XOR R12D,R12D
000057b1(9): MOV qword ptr [RSP + 0x50],0x0
000057ba(5): MOV byte ptr [RSP + 0xf],0x1
000057bf(5): MOV byte ptr [RSP + 0xd],0x1
000057c4(9): MOV qword ptr [RSP + 0x18],0x1
000057cd(3): XOR R15D,R15D
000057d0(5): MOV qword ptr [RSP + 0x48],RAX
000057d5(5): JMP 0x000047b3
000057da(2): MOV EAX,EDX
000057dc(5): MOV RBX,qword ptr [RSP + 0x48]
000057e1(3): TEST RBX,RBX
000057e4(2): JZ 0x00005812
000057e6(2): TEST AL,AL
000057e8(2): JZ 0x00005812
000057ea(3): MOVZX ECX,byte ptr [RBX]
000057ed(3): MOV RAX,RBX
000057f0(2): TEST CL,CL
000057f2(2): JZ 0x00005812
000057f4(3): MOV RDX,R15
000057f7(3): SUB RAX,R15
000057fa(3): CMP R13,RDX
000057fd(2): JBE 0x00005803
000057ff(4): MOV byte ptr [R14 + RDX*0x1],CL
00005803(4): ADD RDX,0x1
00005807(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
0000580b(2): TEST CL,CL
0000580d(2): JNZ 0x000057fa
0000580f(3): MOV R15,RDX
00005812(3): CMP R13,R15
00005815(6): JBE 0x000052b9
0000581b(5): MOV byte ptr [R14 + R15*0x1],0x0
00005820(5): JMP 0x000052b9
00005825(5): CMP dword ptr [RSP + 0x8],0x2
0000582a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000582f(3): MOV RBP,R11
00005832(3): SETZ AL
00005835(4): MOV byte ptr [RSP + 0xd],BL
00005839(5): JMP 0x00005269
0000583e(4): MOV ESI,dword ptr [RSP + 0x8]
00005842(3): MOV RDI,RCX
00005845(5): CALL 0x000045f0
0000584a(5): MOV qword ptr [RSP + 0x68],RAX
0000584f(5): JMP 0x000054a6
00005854(4): MOV ESI,dword ptr [RSP + 0x8]
00005858(3): MOV RDI,RCX
0000585b(5): CALL 0x000045f0
00005860(5): MOV qword ptr [RSP + 0x60],RAX
00005865(5): JMP 0x000054d1
0000586a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000586f(3): MOV RBP,R11
00005872(2): MOV EAX,EDX
00005874(4): MOV byte ptr [RSP + 0xd],BL
00005878(5): JMP 0x00005269
0000587d(4): SUB RSP,0x8
00005881(6): MOV R8D,0x5
00005887(3): MOV RCX,R11
0000588a(4): PUSH qword ptr [RSP + 0x68]
0000588e(4): PUSH qword ptr [RSP + 0x78]
00005892(3): MOV RDI,R14
00005895(4): PUSH qword ptr [RSP + 0x38]
00005899(8): MOV R9D,dword ptr [0x98 + RSP]
000058a1(5): MOV RDX,qword ptr [RSP + 0x30]
000058a6(5): MOV RSI,qword ptr [RSP + 0x70]
000058ab(5): CALL 0x000046e0
000058b0(4): ADD RSP,0x20
000058b4(3): MOV R15,RAX
000058b7(5): JMP 0x000052b9
000058bc(5): MOVZX EAX,byte ptr [RSP + 0x7c]
000058c1(5): JMP 0x000057dc
000058c6(8): MOV dword ptr [RSP + 0x8],0x2
000058ce(5): JMP 0x00005269
000058d3(5): CALL 0x00001c20
000058d8(5): MOV byte ptr [RSP + 0xd],0x0
000058dd(5): JMP 0x00005351
000058e2(3): MOV RBP,R11
000058e5(5): JMP 0x00005280
000058ea(5): MOV byte ptr [RSP + 0xe],0x1
000058ef(2): XOR EAX,EAX
000058f1(3): XOR R12D,R12D
000058f4(9): MOV qword ptr [RSP + 0x50],0x0
000058fd(5): JMP 0x00004ea4
00005902(3): MOV RDX,R13
00005905(5): MOV R13,qword ptr [RSP + 0x50]
0000590a(5): JMP 0x00004f02
0000590f(5): CALL 0x00001b10
00005914(2): NOP
00005916(10): NOP word ptr CS:[RAX + RAX*0x1]
00005920(2): PUSH R15
00005922(2): PUSH R14
00005924(3): MOVSXD R15,EDI
00005927(2): PUSH R13
00005929(2): PUSH R12
0000592b(3): MOV R14,RDX
0000592e(1): PUSH RBP
0000592f(1): PUSH RBX
00005930(3): MOV RBP,RCX
00005933(4): SUB RSP,0x28
00005937(5): MOV qword ptr [RSP + 0x8],RSI
0000593c(5): CALL 0x00001b20
00005941(3): MOV R13,RAX
00005944(2): MOV EAX,dword ptr [RAX]
00005946(3): TEST R15D,R15D
00005949(7): MOV RBX,qword ptr [0x0021c080]
00005950(4): MOV dword ptr [RSP + 0x18],EAX
00005954(6): JS 0x00005ac1
0000595a(7): CMP dword ptr [0x0021c078],R15D
00005961(2): JG 0x000059c5
00005963(7): CMP R15D,0x7fffffff
0000596a(6): JZ 0x00005ac6
00005970(4): LEA R12D,[R15 + 0x1]
00005974(7): LEA RAX,[0x21c090]
0000597b(3): MOVSXD RSI,R12D
0000597e(4): SHL RSI,0x4
00005982(3): CMP RBX,RAX
00005985(6): JZ 0x00005aa0
0000598b(3): MOV RDI,RBX
0000598e(5): CALL 0x00006970
00005993(3): MOV RBX,RAX
00005996(7): MOV qword ptr [0x0021c080],RAX
0000599d(7): MOVSXD RDI,dword ptr [0x0021c078]
000059a4(3): MOV EDX,R12D
000059a7(2): XOR ESI,ESI
000059a9(2): SUB EDX,EDI
000059ab(4): SHL RDI,0x4
000059af(3): MOVSXD RDX,EDX
000059b2(3): ADD RDI,RBX
000059b5(4): SHL RDX,0x4
000059b9(5): CALL 0x00001cb0
000059be(7): MOV dword ptr [0x0021c078],R12D
000059c5(3): MOV EAX,dword ptr [RBP + 0x4]
000059c8(4): SHL R15,0x4
000059cc(4): SUB RSP,0x8
000059d0(3): ADD RBX,R15
000059d3(4): LEA R15,[RBP + 0x8]
000059d7(4): MOV R8D,dword ptr [RBP]
000059db(3): MOV R11,qword ptr [RBX]
000059de(4): MOV R12,qword ptr [RBX + 0x8]
000059e2(3): MOV RCX,R14
000059e5(3): OR EAX,0x1
000059e8(4): MOV dword ptr [RSP + 0x24],EAX
000059ec(3): PUSH qword ptr [RBP + 0x30]
000059ef(3): MOV R9D,EAX
000059f2(3): PUSH qword ptr [RBP + 0x28]
000059f5(2): PUSH R15
000059f7(3): MOV RSI,R11
000059fa(5): MOV RDX,qword ptr [RSP + 0x28]
000059ff(3): MOV RDI,R12
00005a02(5): MOV qword ptr [RSP + 0x30],R11
00005a07(5): CALL 0x000046e0
00005a0c(4): ADD RSP,0x20
00005a10(5): MOV R11,qword ptr [RSP + 0x10]
00005a15(3): CMP R11,RAX
00005a18(2): JA 0x00005a81
00005a1a(4): LEA RSI,[RAX + 0x1]
00005a1e(7): LEA RAX,[0x21c240]
00005a25(3): CMP R12,RAX
00005a28(3): MOV qword ptr [RBX],RSI
00005a2b(2): JZ 0x00005a3f
00005a2d(3): MOV RDI,R12
00005a30(5): MOV qword ptr [RSP + 0x10],RSI
00005a35(5): CALL 0x00001b00
00005a3a(5): MOV RSI,qword ptr [RSP + 0x10]
00005a3f(3): MOV RDI,RSI
00005a42(5): MOV qword ptr [RSP + 0x10],RSI
00005a47(5): CALL 0x00006910
00005a4c(4): SUB RSP,0x8
00005a50(4): MOV qword ptr [RBX + 0x8],RAX
00005a54(4): MOV R8D,dword ptr [RBP]
00005a58(3): PUSH qword ptr [RBP + 0x30]
00005a5b(3): PUSH qword ptr [RBP + 0x28]
00005a5e(3): MOV RCX,R14
00005a61(2): PUSH R15
00005a63(5): MOV R9D,dword ptr [RSP + 0x3c]
00005a68(3): MOV RDI,RAX
00005a6b(5): MOV RDX,qword ptr [RSP + 0x28]
00005a70(5): MOV RSI,qword ptr [RSP + 0x30]
00005a75(3): MOV R12,RAX
00005a78(5): CALL 0x000046e0
00005a7d(4): ADD RSP,0x20
00005a81(4): MOV EAX,dword ptr [RSP + 0x18]
00005a85(4): MOV dword ptr [R13],EAX
00005a89(4): ADD RSP,0x28
00005a8d(3): MOV RAX,R12
00005a90(1): POP RBX
00005a91(1): POP RBP
00005a92(2): POP R12
00005a94(2): POP R13
00005a96(2): POP R14
00005a98(2): POP R15
00005a9a(1): RET
00005aa0(2): XOR EDI,EDI
00005aa2(5): CALL 0x00006970
00005aa7(8): MOVDQA XMM0,xmmword ptr [0x0021c090]
00005aaf(3): MOV RBX,RAX
00005ab2(7): MOV qword ptr [0x0021c080],RAX
00005ab9(3): MOVUPS xmmword ptr [RAX],XMM0
00005abc(5): JMP 0x0000599d
00005ac1(5): CALL 0x00001b10
00005ac6(5): CALL 0x00003810
00005acb(5): NOP dword ptr [RAX + RAX*0x1]
00005ad0(2): PUSH R12
00005ad2(1): PUSH RBP
00005ad3(1): PUSH RBX
00005ad4(3): MOV RBX,RDI
00005ad7(5): CALL 0x00001b20
00005adc(3): MOV R12D,dword ptr [RAX]
00005adf(3): MOV RBP,RAX
00005ae2(7): LEA RAX,[0x21c340]
00005ae9(3): TEST RBX,RBX
00005aec(5): MOV ESI,0x38
00005af1(4): CMOVZ RBX,RAX
00005af5(3): MOV RDI,RBX
00005af8(5): CALL 0x00006b10
00005afd(4): MOV dword ptr [RBP],R12D
00005b01(1): POP RBX
00005b02(1): POP RBP
00005b03(2): POP R12
00005b05(1): RET
00005b10(7): LEA RAX,[0x21c340]
00005b17(3): TEST RDI,RDI
00005b1a(4): CMOVZ RDI,RAX
00005b1e(2): MOV EAX,dword ptr [RDI]
00005b20(1): RET
00005b30(7): LEA RAX,[0x21c340]
00005b37(3): TEST RDI,RDI
00005b3a(4): CMOVZ RDI,RAX
00005b3e(2): MOV dword ptr [RDI],ESI
00005b40(1): RET
00005b50(7): LEA RAX,[0x21c340]
00005b57(3): TEST RDI,RDI
00005b5a(2): MOV ECX,ESI
00005b5c(4): CMOVZ RDI,RAX
00005b60(2): MOV EAX,ESI
00005b62(3): AND ECX,0x1f
00005b65(3): SHR AL,0x5
00005b68(3): MOVZX EAX,AL
00005b6b(5): LEA RDI,[RDI + RAX*0x4 + 0x8]
00005b70(2): MOV ESI,dword ptr [RDI]
00005b72(2): MOV EAX,ESI
00005b74(2): SHR EAX,CL
00005b76(2): XOR EDX,EAX
00005b78(3): AND EAX,0x1
00005b7b(3): AND EDX,0x1
00005b7e(2): SHL EDX,CL
00005b80(2): XOR EDX,ESI
00005b82(2): MOV dword ptr [RDI],EDX
00005b84(1): RET
00005b90(7): LEA RAX,[0x21c340]
00005b97(3): TEST RDI,RDI
00005b9a(4): CMOVZ RDI,RAX
00005b9e(3): MOV EAX,dword ptr [RDI + 0x4]
00005ba1(3): MOV dword ptr [RDI + 0x4],ESI
00005ba4(1): RET
00005bb0(7): LEA RAX,[0x21c340]
00005bb7(3): TEST RDI,RDI
00005bba(4): CMOVZ RDI,RAX
00005bbe(3): TEST RSI,RSI
00005bc1(6): MOV dword ptr [RDI],0xa
00005bc7(2): JZ 0x00005bd7
00005bc9(3): TEST RDX,RDX
00005bcc(2): JZ 0x00005bd7
00005bce(4): MOV qword ptr [RDI + 0x28],RSI
00005bd2(4): MOV qword ptr [RDI + 0x30],RDX
00005bd6(1): RET
00005bd7(4): SUB RSP,0x8
00005bdb(5): CALL 0x00001b10
00005be0(2): PUSH R15
00005be2(2): PUSH R14
00005be4(7): LEA RAX,[0x21c340]
00005beb(2): PUSH R13
00005bed(2): PUSH R12
00005bef(3): MOV R13,RDI
00005bf2(1): PUSH RBP
00005bf3(1): PUSH RBX
00005bf4(3): MOV RBX,R8
00005bf7(3): MOV R14,RSI
00005bfa(3): MOV R15,RDX
00005bfd(4): SUB RSP,0x18
00005c01(3): TEST R8,R8
00005c04(4): CMOVZ RBX,RAX
00005c08(5): MOV qword ptr [RSP + 0x8],RCX
00005c0d(5): CALL 0x00001b20
00005c12(3): MOV R12D,dword ptr [RAX]
00005c15(3): MOV RBP,RAX
00005c18(4): LEA RAX,[RBX + 0x8]
00005c1c(4): SUB RSP,0x8
00005c20(4): MOV R9D,dword ptr [RBX + 0x4]
00005c24(3): PUSH qword ptr [RBX + 0x30]
00005c27(3): MOV R8D,dword ptr [RBX]
00005c2a(3): PUSH qword ptr [RBX + 0x28]
00005c2d(3): MOV RDX,R15
00005c30(1): PUSH RAX
00005c31(5): MOV RCX,qword ptr [RSP + 0x28]
00005c36(3): MOV RSI,R14
00005c39(3): MOV RDI,R13
00005c3c(5): CALL 0x000046e0
00005c41(4): MOV dword ptr [RBP],R12D
00005c45(4): ADD RSP,0x38
00005c49(1): POP RBX
00005c4a(1): POP RBP
00005c4b(2): POP R12
00005c4d(2): POP R13
00005c4f(2): POP R14
00005c51(2): POP R15
00005c53(1): RET
00005c60(2): PUSH R15
00005c62(2): PUSH R14
00005c64(7): LEA RAX,[0x21c340]
00005c6b(2): PUSH R13
00005c6d(2): PUSH R12
00005c6f(3): MOV R12,RDX
00005c72(1): PUSH RBP
00005c73(1): PUSH RBX
00005c74(3): MOV RBX,RCX
00005c77(3): MOV R14,RDI
00005c7a(3): MOV R15,RSI
00005c7d(4): SUB RSP,0x38
00005c81(3): TEST RCX,RCX
00005c84(4): CMOVZ RBX,RAX
00005c88(2): XOR EBP,EBP
00005c8a(5): CALL 0x00001b20
00005c8f(3): TEST R12,R12
00005c92(3): MOV R13,RAX
00005c95(2): MOV EAX,dword ptr [RAX]
00005c97(4): SETZ BPL
00005c9b(3): OR EBP,dword ptr [RBX + 0x4]
00005c9e(4): LEA R10,[RBX + 0x8]
00005ca2(4): SUB RSP,0x8
00005ca6(3): MOV R8D,dword ptr [RBX]
00005ca9(3): MOV RCX,R15
00005cac(4): MOV dword ptr [RSP + 0x14],EAX
00005cb0(3): PUSH qword ptr [RBX + 0x30]
00005cb3(3): MOV RDX,R14
00005cb6(3): PUSH qword ptr [RBX + 0x28]
00005cb9(2): PUSH R10
00005cbb(2): XOR ESI,ESI
00005cbd(3): MOV R9D,EBP
00005cc0(2): XOR EDI,EDI
00005cc2(5): MOV qword ptr [RSP + 0x40],R10
00005cc7(5): CALL 0x000046e0
00005ccc(4): LEA RSI,[RAX + 0x1]
00005cd0(5): MOV qword ptr [RSP + 0x48],RAX
00005cd5(4): ADD RSP,0x20
00005cd9(3): MOV RDI,RSI
00005cdc(5): MOV qword ptr [RSP + 0x18],RSI
00005ce1(5): CALL 0x00006910
00005ce6(5): MOV qword ptr [RSP + 0x10],RAX
00005ceb(4): SUB RSP,0x8
00005cef(3): PUSH qword ptr [RBX + 0x30]
00005cf2(3): PUSH qword ptr [RBX + 0x28]
00005cf5(5): MOV R10,qword ptr [RSP + 0x38]
00005cfa(3): MOV R9D,EBP
00005cfd(3): MOV R8D,dword ptr [RBX]
00005d00(3): MOV RCX,R15
00005d03(3): MOV RDX,R14
00005d06(3): MOV RDI,RAX
00005d09(2): PUSH R10
00005d0b(5): MOV RSI,qword ptr [RSP + 0x38]
00005d10(5): CALL 0x000046e0
00005d15(4): MOV EAX,dword ptr [RSP + 0x2c]
00005d19(4): ADD RSP,0x20
00005d1d(3): TEST R12,R12
00005d20(4): MOV dword ptr [R13],EAX
00005d24(2): JZ 0x00005d2f
00005d26(5): MOV R11,qword ptr [RSP + 0x28]
00005d2b(4): MOV qword ptr [R12],R11
00005d2f(5): MOV RAX,qword ptr [RSP + 0x10]
00005d34(4): ADD RSP,0x38
00005d38(1): POP RBX
00005d39(1): POP RBP
00005d3a(2): POP R12
00005d3c(2): POP R13
00005d3e(2): POP R14
00005d40(2): POP R15
00005d42(1): RET
00005d50(3): MOV RCX,RDX
00005d53(2): XOR EDX,EDX
00005d55(5): JMP 0x00005c60
00005d60(6): MOV EAX,dword ptr [0x0021c078]
00005d66(2): PUSH R12
00005d68(7): MOV R12,qword ptr [0x0021c080]
00005d6f(1): PUSH RBP
00005d70(1): PUSH RBX
00005d71(3): CMP EAX,0x1
00005d74(2): JLE 0x00005da1
00005d76(3): SUB EAX,0x2
00005d79(5): LEA RBX,[R12 + 0x18]
00005d7e(4): SHL RAX,0x4
00005d82(5): LEA RBP,[R12 + RAX*0x1 + 0x28]
00005d87(9): NOP word ptr [RAX + RAX*0x1]
00005d90(3): MOV RDI,qword ptr [RBX]
00005d93(4): ADD RBX,0x10
00005d97(5): CALL 0x00001b00
00005d9c(3): CMP RBX,RBP
00005d9f(2): JNZ 0x00005d90
00005da1(5): MOV RDI,qword ptr [R12 + 0x8]
00005da6(7): LEA RBX,[0x21c240]
00005dad(3): CMP RDI,RBX
00005db0(2): JZ 0x00005dc9
00005db2(5): CALL 0x00001b00
00005db7(11): MOV qword ptr [0x0021c090],0x100
00005dc2(7): MOV qword ptr [0x0021c098],RBX
00005dc9(7): LEA RBX,[0x21c090]
00005dd0(3): CMP R12,RBX
00005dd3(2): JZ 0x00005de4
00005dd5(3): MOV RDI,R12
00005dd8(5): CALL 0x00001b00
00005ddd(7): MOV qword ptr [0x0021c080],RBX
00005de4(1): POP RBX
00005de5(10): MOV dword ptr [0x0021c078],0x1
00005def(1): POP RBP
00005df0(2): POP R12
00005df2(1): RET
00005e00(7): LEA RCX,[0x21c340]
00005e07(7): MOV RDX,-0x1
00005e0e(5): JMP 0x00005920
00005e20(7): LEA RCX,[0x21c340]
00005e27(5): JMP 0x00005920
00005e30(7): LEA RCX,[0x21c340]
00005e37(3): MOV RSI,RDI
00005e3a(7): MOV RDX,-0x1
00005e41(2): XOR EDI,EDI
00005e43(5): JMP 0x00005920
00005e50(7): LEA RCX,[0x21c340]
00005e57(3): MOV RDX,RSI
00005e5a(3): MOV RSI,RDI
00005e5d(2): XOR EDI,EDI
00005e5f(5): JMP 0x00005920
00005e70(4): SUB RSP,0x48
00005e74(3): MOV RAX,RDX
00005e77(9): MOV RDX,qword ptr FS:[0x28]
00005e80(5): MOV qword ptr [RSP + 0x38],RDX
00005e85(2): XOR EDX,EDX
00005e87(3): CMP ESI,0xa
00005e8a(2): JZ 0x00005ef4
00005e8c(3): MOV dword ptr [RSP],ESI
00005e8f(3): MOV RCX,RSP
00005e92(7): MOV RDX,-0x1
00005e99(3): MOV RSI,RAX
00005e9c(9): MOV qword ptr [RSP + 0x4],0x0
00005ea5(9): MOV qword ptr [RSP + 0xc],0x0
00005eae(9): MOV qword ptr [RSP + 0x14],0x0
00005eb7(9): MOV qword ptr [RSP + 0x1c],0x0
00005ec0(9): MOV qword ptr [RSP + 0x24],0x0
00005ec9(9): MOV qword ptr [RSP + 0x2c],0x0
00005ed2(8): MOV dword ptr [RSP + 0x34],0x0
00005eda(5): CALL 0x00005920
00005edf(5): MOV RCX,qword ptr [RSP + 0x38]
00005ee4(9): XOR RCX,qword ptr FS:[0x28]
00005eed(2): JNZ 0x00005ef9
00005eef(4): ADD RSP,0x48
00005ef3(1): RET
00005ef4(5): CALL 0x00001b10
00005ef9(5): CALL 0x00001c20
00005efe(2): NOP
00005f00(4): SUB RSP,0x48
00005f04(3): MOV RAX,RDX
00005f07(3): MOV RDX,RCX
00005f0a(9): MOV RCX,qword ptr FS:[0x28]
00005f13(5): MOV qword ptr [RSP + 0x38],RCX
00005f18(2): XOR ECX,ECX
00005f1a(3): CMP ESI,0xa
00005f1d(2): JZ 0x00005f80
00005f1f(3): MOV dword ptr [RSP],ESI
00005f22(3): MOV RCX,RSP
00005f25(3): MOV RSI,RAX
00005f28(9): MOV qword ptr [RSP + 0x4],0x0
00005f31(9): MOV qword ptr [RSP + 0xc],0x0
00005f3a(9): MOV qword ptr [RSP + 0x14],0x0
00005f43(9): MOV qword ptr [RSP + 0x1c],0x0
00005f4c(9): MOV qword ptr [RSP + 0x24],0x0
00005f55(9): MOV qword ptr [RSP + 0x2c],0x0
00005f5e(8): MOV dword ptr [RSP + 0x34],0x0
00005f66(5): CALL 0x00005920
00005f6b(5): MOV RDX,qword ptr [RSP + 0x38]
00005f70(9): XOR RDX,qword ptr FS:[0x28]
00005f79(2): JNZ 0x00005f85
00005f7b(4): ADD RSP,0x48
00005f7f(1): RET
00005f80(5): CALL 0x00001b10
00005f85(5): CALL 0x00001c20
00005f8a(6): NOP word ptr [RAX + RAX*0x1]
00005f90(3): MOV RDX,RSI
00005f93(2): MOV ESI,EDI
00005f95(2): XOR EDI,EDI
00005f97(5): JMP 0x00005e70
00005fa0(3): MOV RCX,RDX
00005fa3(3): MOV RDX,RSI
00005fa6(2): MOV ESI,EDI
00005fa8(2): XOR EDI,EDI
00005faa(5): JMP 0x00005f00
00005fb0(4): SUB RSP,0x48
00005fb4(2): MOV ECX,EDX
00005fb6(9): MOV RAX,qword ptr FS:[0x28]
00005fbf(5): MOV qword ptr [RSP + 0x38],RAX
00005fc4(2): XOR EAX,EAX
00005fc6(7): MOV RAX,qword ptr [0x0021c370]
00005fcd(3): MOV R8,RSP
00005fd0(3): AND ECX,0x1f
00005fd3(8): MOVDQA XMM0,xmmword ptr [0x0021c340]
00005fdb(5): MOV qword ptr [RSP + 0x30],RAX
00005fe0(2): MOV EAX,EDX
00005fe2(4): MOVAPS xmmword ptr [RSP],XMM0
00005fe6(3): SHR AL,0x5
00005fe9(3): MOVZX EAX,AL
00005fec(5): LEA R9,[R8 + RAX*0x4 + 0x8]
00005ff1(8): MOVDQA XMM0,xmmword ptr [0x0021c350]
00005ff9(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00005ffe(8): MOVDQA XMM0,xmmword ptr [0x0021c360]
00006006(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000600b(3): MOV EDX,dword ptr [R9]
0000600e(2): MOV EAX,EDX
00006010(2): SHR EAX,CL
00006012(2): NOT EAX
00006014(3): AND EAX,0x1
00006017(2): SHL EAX,CL
00006019(3): MOV RCX,R8
0000601c(2): XOR EAX,EDX
0000601e(3): MOV RDX,RSI
00006021(3): MOV RSI,RDI
00006024(3): MOV dword ptr [R9],EAX
00006027(2): XOR EDI,EDI
00006029(5): CALL 0x00005920
0000602e(5): MOV RSI,qword ptr [RSP + 0x38]
00006033(9): XOR RSI,qword ptr FS:[0x28]
0000603c(2): JNZ 0x00006043
0000603e(4): ADD RSP,0x48
00006042(1): RET
00006043(5): CALL 0x00001c20
00006048(8): NOP dword ptr [RAX + RAX*0x1]
00006050(4): MOVSX EDX,SIL
00006054(7): MOV RSI,-0x1
0000605b(5): JMP 0x00005fb0
00006060(5): MOV EDX,0x3a
00006065(7): MOV RSI,-0x1
0000606c(5): JMP 0x00005fb0
00006080(5): MOV EDX,0x3a
00006085(5): JMP 0x00005fb0
00006090(4): SUB RSP,0x48
00006094(3): MOV RAX,RDX
00006097(9): MOV RDX,qword ptr FS:[0x28]
000060a0(5): MOV qword ptr [RSP + 0x38],RDX
000060a5(2): XOR EDX,EDX
000060a7(3): CMP ESI,0xa
000060aa(2): JZ 0x00006114
000060ac(3): MOV dword ptr [RSP],ESI
000060af(3): MOV RCX,RSP
000060b2(7): MOV RDX,-0x1
000060b9(3): MOV RSI,RAX
000060bc(9): MOV qword ptr [RSP + 0x4],0x0
000060c5(9): MOV qword ptr [RSP + 0xc],0x4000000
000060ce(9): MOV qword ptr [RSP + 0x14],0x0
000060d7(9): MOV qword ptr [RSP + 0x1c],0x0
000060e0(9): MOV qword ptr [RSP + 0x24],0x0
000060e9(9): MOV qword ptr [RSP + 0x2c],0x0
000060f2(8): MOV dword ptr [RSP + 0x34],0x0
000060fa(5): CALL 0x00005920
000060ff(5): MOV RCX,qword ptr [RSP + 0x38]
00006104(9): XOR RCX,qword ptr FS:[0x28]
0000610d(2): JNZ 0x00006119
0000610f(4): ADD RSP,0x48
00006113(1): RET
00006114(5): CALL 0x00001b10
00006119(5): CALL 0x00001c20
0000611e(2): NOP
00006120(4): SUB RSP,0x48
00006124(3): MOV R9,RCX
00006127(7): MOV RCX,qword ptr [0x0021c370]
0000612e(8): MOVDQA XMM0,xmmword ptr [0x0021c340]
00006136(9): MOV RAX,qword ptr FS:[0x28]
0000613f(5): MOV qword ptr [RSP + 0x38],RAX
00006144(2): XOR EAX,EAX
00006146(4): MOVAPS xmmword ptr [RSP],XMM0
0000614a(3): TEST RSI,RSI
0000614d(5): MOV qword ptr [RSP + 0x30],RCX
00006152(7): MOV dword ptr [RSP],0xa
00006159(8): MOVDQA XMM0,xmmword ptr [0x0021c350]
00006161(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00006166(8): MOVDQA XMM0,xmmword ptr [0x0021c360]
0000616e(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00006173(2): JZ 0x000061a7
00006175(3): TEST RDX,RDX
00006178(2): JZ 0x000061a7
0000617a(5): MOV qword ptr [RSP + 0x28],RSI
0000617f(5): MOV qword ptr [RSP + 0x30],RDX
00006184(3): MOV RCX,RSP
00006187(3): MOV RDX,R8
0000618a(3): MOV RSI,R9
0000618d(5): CALL 0x00005920
00006192(5): MOV RDI,qword ptr [RSP + 0x38]
00006197(9): XOR RDI,qword ptr FS:[0x28]
000061a0(2): JNZ 0x000061ac
000061a2(4): ADD RSP,0x48
000061a6(1): RET
000061a7(5): CALL 0x00001b10
000061ac(5): CALL 0x00001c20
000061b1(5): NOP dword ptr [RAX + RAX*0x1]
000061b6(10): NOP word ptr CS:[RAX + RAX*0x1]
000061c0(7): MOV R8,-0x1
000061c7(5): JMP 0x00006120
000061d0(3): MOV RCX,RDX
000061d3(7): MOV R8,-0x1
000061da(3): MOV RDX,RSI
000061dd(3): MOV RSI,RDI
000061e0(2): XOR EDI,EDI
000061e2(5): JMP 0x00006120
000061f0(3): MOV R8,RCX
000061f3(3): MOV RCX,RDX
000061f6(3): MOV RDX,RSI
000061f9(3): MOV RSI,RDI
000061fc(2): XOR EDI,EDI
000061fe(5): JMP 0x00006120
00006210(7): LEA RCX,[0x21c040]
00006217(5): JMP 0x00005920
00006220(7): LEA RCX,[0x21c040]
00006227(3): MOV RDX,RSI
0000622a(3): MOV RSI,RDI
0000622d(2): XOR EDI,EDI
0000622f(5): JMP 0x00005920
00006240(7): LEA RCX,[0x21c040]
00006247(7): MOV RDX,-0x1
0000624e(5): JMP 0x00005920
00006260(7): LEA RCX,[0x21c040]
00006267(3): MOV RSI,RDI
0000626a(7): MOV RDX,-0x1
00006271(2): XOR EDI,EDI
00006273(5): JMP 0x00005920
00006280(2): PUSH R13
00006282(2): PUSH R12
00006284(3): MOV R13D,EDI
00006287(1): PUSH RBP
00006288(1): PUSH RBX
00006289(3): MOV R12,RSI
0000628c(3): MOV RBX,RDX
0000628f(4): SUB RSP,0x8
00006293(5): NOP dword ptr [RAX + RAX*0x1]
00006298(3): MOV RDX,RBX
0000629b(3): MOV RSI,R12
0000629e(3): MOV EDI,R13D
000062a1(5): CALL 0x00001cf0
000062a6(3): TEST RAX,RAX
000062a9(3): MOV RBP,RAX
000062ac(2): JNS 0x000062d0
000062ae(5): CALL 0x00001b20
000062b3(2): MOV EAX,dword ptr [RAX]
000062b5(3): CMP EAX,0x4
000062b8(2): JZ 0x00006298
000062ba(7): CMP RBX,0x7ff00000
000062c1(2): JBE 0x000062d0
000062c3(3): CMP EAX,0x16
000062c6(2): JNZ 0x000062d0
000062c8(5): MOV EBX,0x7ff00000
000062cd(2): JMP 0x00006298
000062d0(4): ADD RSP,0x8
000062d4(3): MOV RAX,RBP
000062d7(1): POP RBX
000062d8(1): POP RBP
000062d9(2): POP R12
000062db(2): POP R13
000062dd(1): RET
000062e0(5): MOV EDX,0x3
000062e5(2): XOR ESI,ESI
000062e7(2): XOR EAX,EAX
000062e9(5): JMP 0x00007810
000062f0(2): PUSH R15
000062f2(2): PUSH R14
000062f4(2): PUSH R13
000062f6(2): PUSH R12
000062f8(3): MOV R12,R9
000062fb(1): PUSH RBP
000062fc(1): PUSH RBX
000062fd(3): MOV RBP,RDI
00006300(3): MOV RBX,R8
00006303(4): SUB RSP,0x28
00006307(3): TEST RSI,RSI
0000630a(6): JZ 0x00006428
00006310(3): MOV R8,RDX
00006313(7): LEA RDX,[0x17088]
0000631a(3): MOV R9,RCX
0000631d(2): XOR EAX,EAX
0000631f(3): MOV RCX,RSI
00006322(5): MOV ESI,0x1
00006327(5): CALL 0x00001f00
0000632c(7): LEA RSI,[0x1709b]
00006333(2): XOR EDI,EDI
00006335(5): MOV EDX,0x5
0000633a(5): CALL 0x00001bf0
0000633f(7): LEA RDX,[0x173c0]
00006346(3): MOV RCX,RAX
00006349(6): MOV R8D,0x7e3
0000634f(5): MOV ESI,0x1
00006354(3): MOV RDI,RBP
00006357(2): XOR EAX,EAX
00006359(5): CALL 0x00001f00
0000635e(7): LEA RSI,[0x17128]
00006365(2): XOR EDI,EDI
00006367(5): MOV EDX,0x5
0000636c(5): CALL 0x00001bf0
00006371(3): MOV RSI,RBP
00006374(3): MOV RDI,RAX
00006377(5): CALL 0x00001d20
0000637c(4): CMP R12,0x9
00006380(6): JA 0x000066c0
00006386(7): LEA RDX,[0x17384]
0000638d(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
00006391(3): ADD RAX,RDX
00006394(2): JMP RAX
000063a0(4): MOV R9,qword ptr [RBX + 0x38]
000063a4(4): MOV RAX,qword ptr [RBX + 0x10]
000063a8(7): LEA RSI,[0x17298]
000063af(4): MOV R8,qword ptr [RBX + 0x8]
000063b3(5): MOV EDX,0x5
000063b8(2): XOR EDI,EDI
000063ba(4): MOV R13,qword ptr [RBX + 0x30]
000063be(4): MOV R12,qword ptr [RBX + 0x28]
000063c2(5): MOV qword ptr [RSP + 0x10],R9
000063c7(4): MOV R15,qword ptr [RBX + 0x20]
000063cb(4): MOV R14,qword ptr [RBX + 0x18]
000063cf(4): MOV qword ptr [RSP],RAX
000063d3(5): MOV qword ptr [RSP + 0x8],R8
000063d8(3): MOV RBX,qword ptr [RBX]
000063db(5): CALL 0x00001bf0
000063e0(4): SUB RSP,0x8
000063e4(5): MOV R9,qword ptr [RSP + 0x18]
000063e9(3): MOV RDX,RAX
000063ec(3): MOV RCX,RBX
000063ef(5): MOV ESI,0x1
000063f4(3): MOV RDI,RBP
000063f7(2): XOR EAX,EAX
000063f9(2): PUSH R9
000063fb(2): PUSH R13
000063fd(2): PUSH R12
000063ff(2): PUSH R15
00006401(2): PUSH R14
00006403(5): MOV R9,qword ptr [RSP + 0x30]
00006408(5): MOV R8,qword ptr [RSP + 0x38]
0000640d(5): CALL 0x00001f00
00006412(4): ADD RSP,0x30
00006416(4): ADD RSP,0x28
0000641a(1): POP RBX
0000641b(1): POP RBP
0000641c(2): POP R12
0000641e(2): POP R13
00006420(2): POP R14
00006422(2): POP R15
00006424(1): RET
00006428(3): MOV R8,RCX
0000642b(3): MOV RCX,RDX
0000642e(7): LEA RDX,[0x17094]
00006435(5): MOV ESI,0x1
0000643a(2): XOR EAX,EAX
0000643c(5): CALL 0x00001f00
00006441(5): JMP 0x0000632c
00006450(4): MOV R10,qword ptr [RBX + 0x40]
00006454(4): MOV R9,qword ptr [RBX + 0x38]
00006458(7): LEA RSI,[0x172c8]
0000645f(4): MOV RAX,qword ptr [RBX + 0x10]
00006463(4): MOV R8,qword ptr [RBX + 0x8]
00006467(5): MOV EDX,0x5
0000646c(4): MOV R13,qword ptr [RBX + 0x30]
00006470(4): MOV R12,qword ptr [RBX + 0x28]
00006474(4): MOV R15,qword ptr [RBX + 0x20]
00006478(4): MOV R14,qword ptr [RBX + 0x18]
0000647c(3): MOV RBX,qword ptr [RBX]
0000647f(5): MOV qword ptr [RSP + 0x18],R10
00006484(5): MOV qword ptr [RSP + 0x10],R9
00006489(4): MOV qword ptr [RSP],RAX
0000648d(5): MOV qword ptr [RSP + 0x8],R8
00006492(2): XOR EDI,EDI
00006494(5): CALL 0x00001bf0
00006499(5): MOV R10,qword ptr [RSP + 0x18]
0000649e(2): PUSH R10
000064a0(5): JMP 0x000063e4
000064a8(3): MOV RBX,qword ptr [RBX]
000064ab(7): LEA RSI,[0x1709f]
000064b2(5): MOV EDX,0x5
000064b7(2): XOR EDI,EDI
000064b9(5): CALL 0x00001bf0
000064be(4): ADD RSP,0x28
000064c2(3): MOV RCX,RBX
000064c5(3): MOV RDI,RBP
000064c8(1): POP RBX
000064c9(1): POP RBP
000064ca(2): POP R12
000064cc(2): POP R13
000064ce(2): POP R14
000064d0(2): POP R15
000064d2(3): MOV RDX,RAX
000064d5(5): MOV ESI,0x1
000064da(2): XOR EAX,EAX
000064dc(5): JMP 0x00001f00
000064e8(4): MOV R12,qword ptr [RBX + 0x8]
000064ec(7): LEA RSI,[0x170af]
000064f3(3): MOV RBX,qword ptr [RBX]
000064f6(5): MOV EDX,0x5
000064fb(2): XOR EDI,EDI
000064fd(5): CALL 0x00001bf0
00006502(4): ADD RSP,0x28
00006506(3): MOV R8,R12
00006509(3): MOV RCX,RBX
0000650c(3): MOV RDI,RBP
0000650f(3): MOV RDX,RAX
00006512(5): MOV ESI,0x1
00006517(1): POP RBX
00006518(1): POP RBP
00006519(2): POP R12
0000651b(2): POP R13
0000651d(2): POP R14
0000651f(2): POP R15
00006521(2): XOR EAX,EAX
00006523(5): JMP 0x00001f00
00006530(4): MOV R13,qword ptr [RBX + 0x10]
00006534(4): MOV R12,qword ptr [RBX + 0x8]
00006538(7): LEA RSI,[0x170c6]
0000653f(3): MOV RBX,qword ptr [RBX]
00006542(5): MOV EDX,0x5
00006547(2): XOR EDI,EDI
00006549(5): CALL 0x00001bf0
0000654e(4): ADD RSP,0x28
00006552(3): MOV R9,R13
00006555(3): MOV R8,R12
00006558(3): MOV RCX,RBX
0000655b(3): MOV RDI,RBP
0000655e(3): MOV RDX,RAX
00006561(1): POP RBX
00006562(1): POP RBP
00006563(2): POP R12
00006565(2): POP R13
00006567(2): POP R14
00006569(2): POP R15
0000656b(5): MOV ESI,0x1
00006570(2): XOR EAX,EAX
00006572(5): JMP 0x00001f00
00006580(7): LEA RSI,[0x171f8]
00006587(5): MOV EDX,0x5
0000658c(2): XOR EDI,EDI
0000658e(4): MOV R14,qword ptr [RBX + 0x18]
00006592(4): MOV R13,qword ptr [RBX + 0x10]
00006596(4): MOV R12,qword ptr [RBX + 0x8]
0000659a(3): MOV RBX,qword ptr [RBX]
0000659d(5): CALL 0x00001bf0
000065a2(4): SUB RSP,0x8
000065a6(2): PUSH R14
000065a8(3): MOV RDX,RAX
000065ab(3): MOV R9,R13
000065ae(3): MOV R8,R12
000065b1(3): MOV RCX,RBX
000065b4(3): MOV RDI,RBP
000065b7(5): MOV ESI,0x1
000065bc(2): XOR EAX,EAX
000065be(5): CALL 0x00001f00
000065c3(1): POP RAX
000065c4(1): POP RDX
000065c5(4): ADD RSP,0x28
000065c9(1): POP RBX
000065ca(1): POP RBP
000065cb(2): POP R12
000065cd(2): POP R13
000065cf(2): POP R14
000065d1(2): POP R15
000065d3(1): RET
000065d8(4): MOV R15,qword ptr [RBX + 0x20]
000065dc(7): LEA RSI,[0x17218]
000065e3(5): MOV EDX,0x5
000065e8(2): XOR EDI,EDI
000065ea(4): MOV R14,qword ptr [RBX + 0x18]
000065ee(4): MOV R13,qword ptr [RBX + 0x10]
000065f2(4): MOV R12,qword ptr [RBX + 0x8]
000065f6(3): MOV RBX,qword ptr [RBX]
000065f9(5): CALL 0x00001bf0
000065fe(2): PUSH R15
00006600(2): JMP 0x000065a6
00006608(4): MOV R8,qword ptr [RBX + 0x8]
0000660c(4): MOV R12,qword ptr [RBX + 0x28]
00006610(7): LEA RSI,[0x17240]
00006617(4): MOV R15,qword ptr [RBX + 0x20]
0000661b(4): MOV R14,qword ptr [RBX + 0x18]
0000661f(5): MOV EDX,0x5
00006624(4): MOV R13,qword ptr [RBX + 0x10]
00006628(2): XOR EDI,EDI
0000662a(3): MOV RBX,qword ptr [RBX]
0000662d(4): MOV qword ptr [RSP],R8
00006631(5): CALL 0x00001bf0
00006636(4): SUB RSP,0x8
0000663a(3): MOV R9,R13
0000663d(2): PUSH R12
0000663f(2): PUSH R15
00006641(2): PUSH R14
00006643(5): MOV R8,qword ptr [RSP + 0x20]
00006648(3): MOV RCX,RBX
0000664b(3): MOV RDX,RAX
0000664e(3): MOV RDI,RBP
00006651(5): MOV ESI,0x1
00006656(2): XOR EAX,EAX
00006658(5): CALL 0x00001f00
0000665d(4): ADD RSP,0x20
00006661(4): ADD RSP,0x28
00006665(1): POP RBX
00006666(1): POP RBP
00006667(2): POP R12
00006669(2): POP R13
0000666b(2): POP R14
0000666d(2): POP R15
0000666f(1): RET
00006670(4): MOV R9,qword ptr [RBX + 0x10]
00006674(4): MOV R13,qword ptr [RBX + 0x30]
00006678(7): LEA RSI,[0x17268]
0000667f(4): MOV R12,qword ptr [RBX + 0x28]
00006683(4): MOV R15,qword ptr [RBX + 0x20]
00006687(5): MOV EDX,0x5
0000668c(4): MOV R14,qword ptr [RBX + 0x18]
00006690(4): MOV R8,qword ptr [RBX + 0x8]
00006694(2): XOR EDI,EDI
00006696(5): MOV qword ptr [RSP + 0x8],R9
0000669b(3): MOV RBX,qword ptr [RBX]
0000669e(4): MOV qword ptr [RSP],R8
000066a2(5): CALL 0x00001bf0
000066a7(2): PUSH R13
000066a9(2): PUSH R12
000066ab(2): PUSH R15
000066ad(2): PUSH R14
000066af(5): MOV R9,qword ptr [RSP + 0x28]
000066b4(2): JMP 0x00006643
000066c0(4): MOV R10,qword ptr [RBX + 0x40]
000066c4(4): MOV R9,qword ptr [RBX + 0x38]
000066c8(5): MOV EDX,0x5
000066cd(4): MOV RAX,qword ptr [RBX + 0x10]
000066d1(4): MOV R8,qword ptr [RBX + 0x8]
000066d5(7): LEA RSI,[0x17300]
000066dc(4): MOV R13,qword ptr [RBX + 0x30]
000066e0(4): MOV R12,qword ptr [RBX + 0x28]
000066e4(4): MOV R15,qword ptr [RBX + 0x20]
000066e8(4): MOV R14,qword ptr [RBX + 0x18]
000066ec(5): MOV qword ptr [RSP + 0x18],R10
000066f1(5): MOV qword ptr [RSP + 0x10],R9
000066f6(4): MOV qword ptr [RSP],RAX
000066fa(5): MOV qword ptr [RSP + 0x8],R8
000066ff(3): MOV RBX,qword ptr [RBX]
00006702(5): JMP 0x00006492
00006710(3): XOR R9D,R9D
00006713(4): CMP qword ptr [R8],0x0
00006717(2): JZ 0x0000672b
00006719(7): NOP dword ptr [RAX]
00006720(4): ADD R9,0x1
00006724(5): CMP qword ptr [R8 + R9*0x8],0x0
00006729(2): JNZ 0x00006720
0000672b(5): JMP 0x000062f0
00006730(4): SUB RSP,0x68
00006734(3): MOV R10,R8
00006737(3): XOR R9D,R9D
0000673a(9): MOV RAX,qword ptr FS:[0x28]
00006743(5): MOV qword ptr [RSP + 0x58],RAX
00006748(2): XOR EAX,EAX
0000674a(3): MOV R8,RSP
0000674d(3): NOP dword ptr [RAX]
00006750(3): MOV EAX,dword ptr [R10]
00006753(3): CMP EAX,0x2f
00006756(2): JA 0x0000679a
00006758(3): MOV R11D,EAX
0000675b(4): ADD R11,qword ptr [R10 + 0x10]
0000675f(3): ADD EAX,0x8
00006762(3): MOV dword ptr [R10],EAX
00006765(3): MOV RAX,qword ptr [R11]
00006768(3): TEST RAX,RAX
0000676b(4): MOV qword ptr [R8 + R9*0x8],RAX
0000676f(2): JZ 0x0000677b
00006771(4): ADD R9,0x1
00006775(4): CMP R9,0xa
00006779(2): JNZ 0x00006750
0000677b(5): CALL 0x000062f0
00006780(5): MOV RAX,qword ptr [RSP + 0x58]
00006785(9): XOR RAX,qword ptr FS:[0x28]
0000678e(2): JNZ 0x00006795
00006790(4): ADD RSP,0x68
00006794(1): RET
00006795(5): CALL 0x00001c20
0000679a(4): MOV R11,qword ptr [R10 + 0x8]
0000679e(4): LEA RAX,[R11 + 0x8]
000067a2(4): MOV qword ptr [R10 + 0x8],RAX
000067a6(2): JMP 0x00006765
000067b0(1): PUSH RBP
000067b1(1): PUSH RBX
000067b2(6): MOV R10D,0x20
000067b8(3): XOR R11D,R11D
000067bb(7): SUB RSP,0xb8
000067c2(9): MOV RAX,qword ptr FS:[0x28]
000067cb(5): MOV qword ptr [RSP + 0x78],RAX
000067d0(2): XOR EAX,EAX
000067d2(8): LEA RAX,[0xd0 + RSP]
000067da(8): MOV qword ptr [0xa0 + RSP],R8
000067e2(8): LEA RBX,[0xd0 + RSP]
000067ea(5): LEA R8,[RSP + 0x20]
000067ef(8): MOV qword ptr [0xa8 + RSP],R9
000067f7(8): MOV dword ptr [RSP + 0x8],0x20
000067ff(5): MOV qword ptr [RSP + 0x10],RAX
00006804(8): LEA RAX,[0x80 + RSP]
0000680c(3): XOR R9D,R9D
0000680f(5): MOV qword ptr [RSP + 0x18],RAX
00006814(3): MOV RBP,RAX
00006817(9): NOP word ptr [RAX + RAX*0x1]
00006820(4): CMP R10D,0x2f
00006824(2): JA 0x0000687c
00006826(3): MOV EAX,R10D
00006829(6): MOV R11D,0x1
0000682f(4): ADD R10D,0x8
00006833(3): ADD RAX,RBP
00006836(3): MOV RAX,qword ptr [RAX]
00006839(3): TEST RAX,RAX
0000683c(4): MOV qword ptr [R8 + R9*0x8],RAX
00006840(2): JZ 0x0000684c
00006842(4): ADD R9,0x1
00006846(4): CMP R9,0xa
0000684a(2): JNZ 0x00006820
0000684c(3): TEST R11B,R11B
0000684f(2): JNZ 0x00006875
00006851(5): CALL 0x000062f0
00006856(5): MOV RAX,qword ptr [RSP + 0x78]
0000685b(9): XOR RAX,qword ptr FS:[0x28]
00006864(2): JNZ 0x00006870
00006866(7): ADD RSP,0xb8
0000686d(1): POP RBX
0000686e(1): POP RBP
0000686f(1): RET
00006870(5): CALL 0x00001c20
00006875(5): MOV dword ptr [RSP + 0x8],R10D
0000687a(2): JMP 0x00006851
0000687c(3): MOV RAX,RBX
0000687f(4): ADD RBX,0x8
00006883(2): JMP 0x00006836
00006890(1): PUSH RBX
00006891(7): LEA RSI,[0x170e2]
00006898(5): MOV EDX,0x5
0000689d(2): XOR EDI,EDI
0000689f(5): CALL 0x00001bf0
000068a4(7): LEA RDX,[0x170f7]
000068ab(3): MOV RSI,RAX
000068ae(5): MOV EDI,0x1
000068b3(2): XOR EAX,EAX
000068b5(5): CALL 0x00001e30
000068ba(7): LEA RSI,[0x1710d]
000068c1(5): MOV EDX,0x5
000068c6(2): XOR EDI,EDI
000068c8(5): CALL 0x00001bf0
000068cd(7): LEA RCX,[0x16780]
000068d4(7): LEA RDX,[0x16096]
000068db(3): MOV RSI,RAX
000068de(5): MOV EDI,0x1
000068e3(2): XOR EAX,EAX
000068e5(5): CALL 0x00001e30
000068ea(7): MOV RBX,qword ptr [0x0021c0a8]
000068f1(7): LEA RSI,[0x17340]
000068f8(2): XOR EDI,EDI
000068fa(5): MOV EDX,0x5
000068ff(5): CALL 0x00001bf0
00006904(3): MOV RSI,RBX
00006907(3): MOV RDI,RAX
0000690a(1): POP RBX
0000690b(5): JMP 0x00001d20
00006910(1): PUSH RBX
00006911(3): MOV RBX,RDI
00006914(5): CALL 0x00001da0
00006919(3): TEST RAX,RAX
0000691c(2): JNZ 0x00006923
0000691e(3): TEST RBX,RBX
00006921(2): JNZ 0x00006925
00006923(1): POP RBX
00006924(1): RET
00006925(5): CALL 0x00003810
0000692a(6): NOP word ptr [RAX + RAX*0x1]
00006930(3): MOV RAX,RDI
00006933(3): MUL RSI
00006936(3): MOV RDI,RAX
00006939(3): SETO AL
0000693c(3): TEST RDI,RDI
0000693f(2): JS 0x0000694b
00006941(3): MOVZX EAX,AL
00006944(3): TEST RAX,RAX
00006947(2): JNZ 0x0000694b
00006949(2): JMP 0x00006910
0000694b(4): SUB RSP,0x8
0000694f(5): CALL 0x00003810
00006954(2): NOP
00006956(10): NOP word ptr CS:[RAX + RAX*0x1]
00006960(2): JMP 0x00006910
00006970(3): TEST RSI,RSI
00006973(1): PUSH RBX
00006974(3): MOV RBX,RSI
00006977(2): JNZ 0x0000697e
00006979(3): TEST RDI,RDI
0000697c(2): JNZ 0x00006998
0000697e(3): MOV RSI,RBX
00006981(5): CALL 0x00001e00
00006986(3): TEST RAX,RAX
00006989(2): JNZ 0x00006990
0000698b(3): TEST RBX,RBX
0000698e(2): JNZ 0x000069a1
00006990(1): POP RBX
00006991(1): RET
00006998(5): CALL 0x00001b00
0000699d(2): XOR EAX,EAX
0000699f(1): POP RBX
000069a0(1): RET
000069a1(5): CALL 0x00003810
000069a6(10): NOP word ptr CS:[RAX + RAX*0x1]
000069b0(3): MOV RAX,RSI
000069b3(3): MUL RDX
000069b6(3): MOV RSI,RAX
000069b9(3): SETO AL
000069bc(3): TEST RSI,RSI
000069bf(2): JS 0x000069cb
000069c1(3): MOVZX EAX,AL
000069c4(3): TEST RAX,RAX
000069c7(2): JNZ 0x000069cb
000069c9(2): JMP 0x00006970
000069cb(4): SUB RSP,0x8
000069cf(5): CALL 0x00003810
000069d4(2): NOP
000069d6(10): NOP word ptr CS:[RAX + RAX*0x1]
000069e0(3): TEST RDI,RDI
000069e3(3): MOV R9,RDX
000069e6(3): MOV RCX,qword ptr [RSI]
000069e9(2): JZ 0x00006a20
000069eb(2): XOR EDX,EDX
000069ed(10): MOV RAX,0x5555555555555554
000069f7(3): DIV R9
000069fa(3): CMP RAX,RCX
000069fd(2): JBE 0x00006a3b
000069ff(3): MOV RAX,RCX
00006a02(3): SHR RAX,1
00006a05(5): LEA RCX,[RAX + RCX*0x1 + 0x1]
00006a0a(3): MOV qword ptr [RSI],RCX
00006a0d(4): IMUL RCX,R9
00006a11(3): MOV RSI,RCX
00006a14(5): JMP 0x00006970
00006a20(3): TEST RCX,RCX
00006a23(2): JZ 0x00006a48
00006a25(3): MOV RAX,RCX
00006a28(3): MUL R9
00006a2b(3): SETO DL
00006a2e(3): TEST RAX,RAX
00006a31(3): MOVZX EDX,DL
00006a34(2): JS 0x00006a3b
00006a36(3): TEST RDX,RDX
00006a39(2): JZ 0x00006a0a
00006a3b(4): SUB RSP,0x8
00006a3f(5): CALL 0x00003810
00006a44(4): NOP dword ptr [RAX]
00006a48(2): XOR EDX,EDX
00006a4a(5): MOV EAX,0x80
00006a4f(3): XOR R8D,R8D
00006a52(3): DIV R9
00006a55(3): TEST RAX,RAX
00006a58(4): SETZ R8B
00006a5c(4): LEA RCX,[R8 + RAX*0x1]
00006a60(2): JMP 0x00006a25
00006a70(3): TEST RDI,RDI
00006a73(3): MOV RAX,qword ptr [RSI]
00006a76(2): JZ 0x00006aa0
00006a78(10): MOV RDX,0x5555555555555553
00006a82(3): CMP RAX,RDX
00006a85(2): JA 0x00006ab1
00006a87(3): MOV RDX,RAX
00006a8a(3): SHR RDX,1
00006a8d(5): LEA RAX,[RDX + RAX*0x1 + 0x1]
00006a92(3): MOV qword ptr [RSI],RAX
00006a95(3): MOV RSI,RAX
00006a98(5): JMP 0x00006970
00006aa0(3): TEST RAX,RAX
00006aa3(5): MOV EDX,0x80
00006aa8(4): CMOVZ RAX,RDX
00006aac(3): TEST RAX,RAX
00006aaf(2): JNS 0x00006a92
00006ab1(4): SUB RSP,0x8
00006ab5(5): CALL 0x00003810
00006aba(6): NOP word ptr [RAX + RAX*0x1]
00006ac0(1): PUSH RBX
00006ac1(3): MOV RBX,RDI
00006ac4(5): CALL 0x00006910
00006ac9(3): MOV RDX,RBX
00006acc(2): XOR ESI,ESI
00006ace(3): MOV RDI,RAX
00006ad1(1): POP RBX
00006ad2(5): JMP 0x00001cb0
00006ae0(3): MOV RAX,RDI
00006ae3(4): SUB RSP,0x8
00006ae7(3): MUL RSI
00006aea(3): SETO DL
00006aed(3): TEST RAX,RAX
00006af0(2): JS 0x00006b09
00006af2(3): MOVZX EDX,DL
00006af5(3): TEST RDX,RDX
00006af8(2): JNZ 0x00006b09
00006afa(5): CALL 0x00001d30
00006aff(3): TEST RAX,RAX
00006b02(2): JZ 0x00006b09
00006b04(4): ADD RSP,0x8
00006b08(1): RET
00006b09(5): CALL 0x00003810
00006b0e(2): NOP
00006b10(1): PUSH RBP
00006b11(1): PUSH RBX
00006b12(3): MOV RBP,RDI
00006b15(3): MOV RDI,RSI
00006b18(3): MOV RBX,RSI
00006b1b(4): SUB RSP,0x8
00006b1f(5): CALL 0x00006910
00006b24(4): ADD RSP,0x8
00006b28(3): MOV RDX,RBX
00006b2b(3): MOV RSI,RBP
00006b2e(1): POP RBX
00006b2f(1): POP RBP
00006b30(3): MOV RDI,RAX
00006b33(5): JMP 0x00001d70
00006b40(1): PUSH RBX
00006b41(3): MOV RBX,RDI
00006b44(5): CALL 0x00001c10
00006b49(3): MOV RDI,RBX
00006b4c(4): LEA RSI,[RAX + 0x1]
00006b50(1): POP RBX
00006b51(2): JMP 0x00006b10
00006b60(2): PUSH R15
00006b62(2): PUSH R14
00006b64(3): MOV R15,RCX
00006b67(2): PUSH R13
00006b69(2): PUSH R12
00006b6b(3): MOV R14,RDX
00006b6e(1): PUSH RBP
00006b6f(1): PUSH RBX
00006b70(2): MOV EDX,ESI
00006b72(2): XOR ESI,ESI
00006b74(3): MOV R12,RDI
00006b77(3): MOV R13,R9
00006b7a(4): SUB RSP,0x18
00006b7e(3): MOV RCX,RSP
00006b81(4): MOV EBX,dword ptr [RSP + 0x50]
00006b85(9): MOV RAX,qword ptr FS:[0x28]
00006b8e(5): MOV qword ptr [RSP + 0x8],RAX
00006b93(2): XOR EAX,EAX
00006b95(5): CALL 0x00006cb0
00006b9a(2): TEST EAX,EAX
00006b9c(6): JNZ 0x00006c30
00006ba2(4): MOV RBP,qword ptr [RSP]
00006ba6(3): CMP RBP,R14
00006ba9(2): JL 0x00006bb0
00006bab(3): CMP RBP,R15
00006bae(2): JLE 0x00006c06
00006bb0(5): CALL 0x00001b20
00006bb5(7): CMP RBP,0x3fffffff
00006bbc(3): MOV R14,RAX
00006bbf(6): JLE 0x00006c50
00006bc5(7): MOV dword ptr [R14],0x4b
00006bcc(3): MOV RDI,R12
00006bcf(5): CALL 0x00006260
00006bd4(3): MOV ESI,dword ptr [R14]
00006bd7(3): MOV R8,RAX
00006bda(5): MOV EAX,0x0
00006bdf(7): LEA RDX,[0x16b5d]
00006be6(3): MOV RCX,R13
00006be9(3): CMP ESI,0x16
00006bec(3): CMOVZ ESI,EAX
00006bef(2): TEST EBX,EBX
00006bf1(5): MOV EAX,0x1
00006bf6(3): CMOVZ EBX,EAX
00006bf9(2): XOR EAX,EAX
00006bfb(2): MOV EDI,EBX
00006bfd(5): CALL 0x00001e60
00006c02(4): MOV RBP,qword ptr [RSP]
00006c06(5): MOV RDX,qword ptr [RSP + 0x8]
00006c0b(9): XOR RDX,qword ptr FS:[0x28]
00006c14(3): MOV RAX,RBP
00006c17(2): JNZ 0x00006c6c
00006c19(4): ADD RSP,0x18
00006c1d(1): POP RBX
00006c1e(1): POP RBP
00006c1f(2): POP R12
00006c21(2): POP R13
00006c23(2): POP R14
00006c25(2): POP R15
00006c27(1): RET
00006c30(2): MOV EBP,EAX
00006c32(5): CALL 0x00001b20
00006c37(3): CMP EBP,0x1
00006c3a(3): MOV R14,RAX
00006c3d(2): JZ 0x00006bc5
00006c3f(3): CMP EBP,0x3
00006c42(2): JNZ 0x00006bcc
00006c44(6): MOV dword ptr [RAX],0x0
00006c4a(2): JMP 0x00006bcc
00006c50(7): CMP RBP,0xbfffffff
00006c57(5): MOV EAX,0x22
00006c5c(5): MOV EDX,0x4b
00006c61(3): CMOVLE EAX,EDX
00006c64(3): MOV dword ptr [R14],EAX
00006c67(5): JMP 0x00006bcc
00006c6c(5): CALL 0x00001c20
00006c71(5): NOP dword ptr [RAX + RAX*0x1]
00006c76(10): NOP word ptr CS:[RAX + RAX*0x1]
00006c80(4): SUB RSP,0x10
00006c84(2): PUSH R9
00006c86(3): MOV R9,R8
00006c89(3): MOV R8,RCX
00006c8c(3): MOV RCX,RDX
00006c8f(3): MOV RDX,RSI
00006c92(5): MOV ESI,0xa
00006c97(5): CALL 0x00006b60
00006c9c(4): ADD RSP,0x18
00006ca0(1): RET
00006cb0(2): PUSH R15
00006cb2(2): PUSH R14
00006cb4(2): PUSH R13
00006cb6(2): PUSH R12
00006cb8(1): PUSH RBP
00006cb9(1): PUSH RBX
00006cba(4): SUB RSP,0x28
00006cbe(9): MOV RAX,qword ptr FS:[0x28]
00006cc7(5): MOV qword ptr [RSP + 0x18],RAX
00006ccc(2): XOR EAX,EAX
00006cce(3): CMP EDX,0x24
00006cd1(6): JA 0x0000733f
00006cd7(5): LEA RAX,[RSP + 0x10]
00006cdc(3): TEST RSI,RSI
00006cdf(3): MOV RBX,RSI
00006ce2(3): MOV R12,RDI
00006ce5(2): MOV EBP,EDX
00006ce7(3): MOV R14,RCX
00006cea(4): CMOVZ RBX,RAX
00006cee(3): MOV R15,R8
00006cf1(5): CALL 0x00001b20
00006cf6(2): XOR ECX,ECX
00006cf8(2): MOV EDX,EBP
00006cfa(6): MOV dword ptr [RAX],0x0
00006d00(3): MOV RSI,RBX
00006d03(3): MOV RDI,R12
00006d06(3): MOV R13,RAX
00006d09(5): CALL 0x00001bb0
00006d0e(3): MOV RCX,qword ptr [RBX]
00006d11(3): MOV RBP,RAX
00006d14(3): CMP RCX,R12
00006d17(2): JZ 0x00006d78
00006d19(4): MOV EAX,dword ptr [R13]
00006d1d(2): TEST EAX,EAX
00006d1f(2): JNZ 0x00006d60
00006d21(3): XOR R12D,R12D
00006d24(3): TEST R15,R15
00006d27(2): JZ 0x00006d36
00006d29(4): MOVZX R13D,byte ptr [RCX]
00006d2d(3): TEST R13B,R13B
00006d30(6): JNZ 0x00006db3
00006d36(3): MOV qword ptr [R14],RBP
00006d39(5): MOV RDI,qword ptr [RSP + 0x18]
00006d3e(9): XOR RDI,qword ptr FS:[0x28]
00006d47(3): MOV EAX,R12D
00006d4a(6): JNZ 0x0000735e
00006d50(4): ADD RSP,0x28
00006d54(1): POP RBX
00006d55(1): POP RBP
00006d56(2): POP R12
00006d58(2): POP R13
00006d5a(2): POP R14
00006d5c(2): POP R15
00006d5e(1): RET
00006d60(3): CMP EAX,0x22
00006d63(6): MOV R12D,0x4
00006d69(2): JNZ 0x00006d39
00006d6b(6): MOV R12D,0x1
00006d71(2): JMP 0x00006d24
00006d78(3): TEST R15,R15
00006d7b(6): JZ 0x00007210
00006d81(4): MOVZX R13D,byte ptr [RCX]
00006d85(5): MOV qword ptr [RSP + 0x8],RCX
00006d8a(6): MOV R12D,0x4
00006d90(3): TEST R13B,R13B
00006d93(2): JZ 0x00006d39
00006d95(4): MOVSX ESI,R13B
00006d99(3): MOV RDI,R15
00006d9c(5): CALL 0x00001c60
00006da1(3): TEST RAX,RAX
00006da4(5): MOV RCX,qword ptr [RSP + 0x8]
00006da9(2): JZ 0x00006d39
00006dab(5): MOV EBP,0x1
00006db0(3): XOR R12D,R12D
00006db3(4): MOVSX ESI,R13B
00006db7(3): MOV RDI,R15
00006dba(5): MOV qword ptr [RSP + 0x8],RCX
00006dbf(5): CALL 0x00001c60
00006dc4(3): TEST RAX,RAX
00006dc7(5): MOV RCX,qword ptr [RSP + 0x8]
00006dcc(2): JZ 0x00006e28
00006dce(4): LEA EAX,[R13 + -0x45]
00006dd2(2): CMP AL,0x2f
00006dd4(2): JA 0x00006e38
00006dd6(10): MOV RDX,0x814400308945
00006de0(4): BT RDX,RAX
00006de4(2): JNC 0x00006e38
00006de6(5): MOV ESI,0x30
00006deb(3): MOV RDI,R15
00006dee(5): MOV qword ptr [RSP + 0x8],RCX
00006df3(5): CALL 0x00001c60
00006df8(3): TEST RAX,RAX
00006dfb(5): MOV RCX,qword ptr [RSP + 0x8]
00006e00(2): JZ 0x00006e38
00006e02(4): MOVZX EAX,byte ptr [RCX + 0x1]
00006e06(2): CMP AL,0x44
00006e08(2): JZ 0x00006e16
00006e0a(2): CMP AL,0x69
00006e0c(6): JZ 0x000072f8
00006e12(2): CMP AL,0x42
00006e14(2): JNZ 0x00006e38
00006e16(5): MOV EDI,0x2
00006e1b(5): MOV EAX,0x3e8
00006e20(2): JMP 0x00006e42
00006e28(3): MOV qword ptr [R14],RBP
00006e2b(4): OR R12D,0x2
00006e2f(5): JMP 0x00006d39
00006e38(5): MOV EDI,0x1
00006e3d(5): MOV EAX,0x400
00006e42(4): SUB R13D,0x42
00006e46(4): CMP R13B,0x35
00006e4a(2): JA 0x00006e28
00006e4c(7): LEA RSI,[0x17438]
00006e53(4): MOVZX R13D,R13B
00006e57(4): MOVSXD RDX,dword ptr [RSI + R13*0x4]
00006e5b(3): ADD RDX,RSI
00006e5e(2): JMP RDX
00006e60(10): MOV R8,-0x8000000000000000
00006e6a(3): MOVSXD RSI,EAX
00006e6d(3): MOV RAX,R8
00006e70(2): CQO
00006e72(3): IDIV RSI
00006e75(3): CMP RBP,RAX
00006e78(3): MOV R9,RAX
00006e7b(6): JL 0x00007325
00006e81(10): MOV R10,0x7fffffffffffffff
00006e8b(3): MOV RAX,R10
00006e8e(2): CQO
00006e90(3): IDIV RSI
00006e93(3): CMP RBP,RAX
00006e96(6): JG 0x00007332
00006e9c(4): IMUL RBP,RSI
00006ea0(3): CMP R9,RBP
00006ea3(6): JG 0x00007325
00006ea9(3): CMP RAX,RBP
00006eac(6): JL 0x00007332
00006eb2(4): IMUL RBP,RSI
00006eb6(2): XOR EAX,EAX
00006eb8(3): OR R12D,EAX
00006ebb(5): NOP dword ptr [RAX + RAX*0x1]
00006ec0(3): MOVSXD RAX,EDI
00006ec3(3): ADD RCX,RAX
00006ec6(3): MOV EAX,R12D
00006ec9(3): OR EAX,0x2
00006ecc(3): MOV qword ptr [RBX],RCX
00006ecf(3): CMP byte ptr [RCX],0x0
00006ed2(4): CMOVNZ R12D,EAX
00006ed6(5): JMP 0x00006d36
00006ee0(10): MOV RAX,-0x4000000000000000
00006eea(3): CMP RBP,RAX
00006eed(6): JL 0x00007220
00006ef3(10): MOV RAX,0x3fffffffffffffff
00006efd(3): CMP RBP,RAX
00006f00(6): JG 0x000072e0
00006f06(3): ADD RBP,RBP
00006f09(2): JMP 0x00006ec0
00006f10(10): MOV RAX,-0x40000000000000
00006f1a(3): CMP RBP,RAX
00006f1d(6): JL 0x00007220
00006f23(10): MOV RAX,0x3fffffffffffff
00006f2d(3): CMP RBP,RAX
00006f30(6): JG 0x000072e0
00006f36(4): SHL RBP,0x9
00006f3a(2): JMP 0x00006ec0
00006f40(3): MOVSXD RSI,EAX
00006f43(10): MOV RAX,-0x8000000000000000
00006f4d(6): MOV R8D,0x7
00006f53(2): CQO
00006f55(3): XOR R11D,R11D
00006f58(10): MOV R9,0x7fffffffffffffff
00006f62(3): IDIV RSI
00006f65(3): MOV R10,RAX
00006f68(2): JMP 0x00006f8f
00006f70(3): MOV RAX,R9
00006f73(2): CQO
00006f75(3): IDIV RSI
00006f78(3): CMP RAX,RBP
00006f7b(6): JL 0x00007268
00006f81(4): IMUL RBP,RSI
00006f85(4): SUB R8D,0x1
00006f89(6): JZ 0x000070b0
00006f8f(3): CMP R10,RBP
00006f92(2): JLE 0x00006f70
00006f94(6): MOV R11D,0x1
00006f9a(10): MOV RBP,-0x8000000000000000
00006fa4(2): JMP 0x00006f85
00006fb0(3): MOVSXD RSI,EAX
00006fb3(10): MOV RAX,-0x8000000000000000
00006fbd(6): MOV R8D,0x8
00006fc3(2): CQO
00006fc5(3): XOR R11D,R11D
00006fc8(10): MOV R9,0x7fffffffffffffff
00006fd2(3): IDIV RSI
00006fd5(3): MOV R10,RAX
00006fd8(2): JMP 0x00006fff
00006fe0(3): MOV RAX,R9
00006fe3(2): CQO
00006fe5(3): IDIV RSI
00006fe8(3): CMP RAX,RBP
00006feb(6): JL 0x00007238
00006ff1(4): IMUL RBP,RSI
00006ff5(4): SUB R8D,0x1
00006ff9(6): JZ 0x000070b0
00006fff(3): CMP R10,RBP
00007002(2): JLE 0x00006fe0
00007004(6): MOV R11D,0x1
0000700a(10): MOV RBP,-0x8000000000000000
00007014(2): JMP 0x00006ff5
00007020(10): MOV R8,-0x8000000000000000
0000702a(3): MOVSXD RSI,EAX
0000702d(3): MOV RAX,R8
00007030(2): CQO
00007032(3): IDIV RSI
00007035(3): CMP RBP,RAX
00007038(6): JL 0x00007220
0000703e(4): SUB R8,0x1
00007042(3): MOV RAX,R8
00007045(2): CQO
00007047(3): IDIV RSI
0000704a(3): CMP RBP,RAX
0000704d(6): JG 0x000072e0
00007053(4): IMUL RBP,RSI
00007057(5): JMP 0x00006ec0
00007060(3): MOVSXD RSI,EAX
00007063(10): MOV RAX,-0x8000000000000000
0000706d(6): MOV R8D,0x3
00007073(2): CQO
00007075(3): XOR R11D,R11D
00007078(10): MOV R9,0x7fffffffffffffff
00007082(3): IDIV RSI
00007085(3): MOV R10,RAX
00007088(3): CMP R10,RBP
0000708b(6): JG 0x00007280
00007091(3): MOV RAX,R9
00007094(2): CQO
00007096(3): IDIV RSI
00007099(3): CMP RAX,RBP
0000709c(6): JL 0x00007310
000070a2(4): IMUL RBP,RSI
000070a6(4): SUB R8D,0x1
000070aa(2): JNZ 0x00007088
000070ac(4): NOP dword ptr [RAX]
000070b0(3): OR R12D,R11D
000070b3(5): JMP 0x00006ec0
000070c0(3): MOVSXD RSI,EAX
000070c3(10): MOV RAX,-0x8000000000000000
000070cd(6): MOV R8D,0x6
000070d3(2): CQO
000070d5(3): XOR R11D,R11D
000070d8(10): MOV R9,0x7fffffffffffffff
000070e2(3): IDIV RSI
000070e5(3): MOV R10,RAX
000070e8(2): JMP 0x0000710b
000070f0(3): MOV RAX,R9
000070f3(2): CQO
000070f5(3): IDIV RSI
000070f8(3): CMP RAX,RBP
000070fb(6): JL 0x00007298
00007101(4): IMUL RBP,RSI
00007105(4): SUB R8D,0x1
00007109(2): JZ 0x000070b0
0000710b(3): CMP R10,RBP
0000710e(2): JLE 0x000070f0
00007110(6): MOV R11D,0x1
00007116(10): MOV RBP,-0x8000000000000000
00007120(2): JMP 0x00007105
00007128(3): MOVSXD RSI,EAX
0000712b(10): MOV RAX,-0x8000000000000000
00007135(6): MOV R8D,0x5
0000713b(2): CQO
0000713d(3): XOR R11D,R11D
00007140(10): MOV R9,0x7fffffffffffffff
0000714a(3): IDIV RSI
0000714d(3): MOV R10,RAX
00007150(2): JMP 0x00007177
00007158(3): MOV RAX,R9
0000715b(2): CQO
0000715d(3): IDIV RSI
00007160(3): CMP RAX,RBP
00007163(6): JL 0x000072b0
00007169(4): IMUL RBP,RSI
0000716d(4): SUB R8D,0x1
00007171(6): JZ 0x000070b0
00007177(3): CMP R10,RBP
0000717a(2): JLE 0x00007158
0000717c(6): MOV R11D,0x1
00007182(10): MOV RBP,-0x8000000000000000
0000718c(2): JMP 0x0000716d
00007190(10): MOV RAX,-0x20000000000000
0000719a(3): CMP RBP,RAX
0000719d(6): JL 0x00007220
000071a3(10): MOV RAX,0x1fffffffffffff
000071ad(3): CMP RBP,RAX
000071b0(6): JG 0x000072e0
000071b6(4): SHL RBP,0xa
000071ba(5): JMP 0x00006ec0
000071c0(3): MOVSXD RSI,EAX
000071c3(10): MOV RAX,-0x8000000000000000
000071cd(6): MOV R8D,0x4
000071d3(2): CQO
000071d5(3): XOR R11D,R11D
000071d8(10): MOV R9,0x7fffffffffffffff
000071e2(3): IDIV RSI
000071e5(3): MOV R10,RAX
000071e8(3): CMP R10,RBP
000071eb(2): JG 0x00007250
000071ed(3): MOV RAX,R9
000071f0(2): CQO
000071f2(3): IDIV RSI
000071f5(3): CMP RAX,RBP
000071f8(6): JL 0x000072c8
000071fe(4): IMUL RBP,RSI
00007202(4): SUB R8D,0x1
00007206(2): JNZ 0x000071e8
00007208(5): JMP 0x000070b0
00007210(6): MOV R12D,0x4
00007216(5): JMP 0x00006d39
00007220(6): MOV R12D,0x1
00007226(10): MOV RBP,-0x8000000000000000
00007230(5): JMP 0x00006ec0
00007238(6): MOV R11D,0x1
0000723e(10): MOV RBP,0x7fffffffffffffff
00007248(5): JMP 0x00006ff5
00007250(6): MOV R11D,0x1
00007256(10): MOV RBP,-0x8000000000000000
00007260(2): JMP 0x00007202
00007268(6): MOV R11D,0x1
0000726e(10): MOV RBP,0x7fffffffffffffff
00007278(5): JMP 0x00006f85
00007280(6): MOV R11D,0x1
00007286(10): MOV RBP,-0x8000000000000000
00007290(5): JMP 0x000070a6
00007298(6): MOV R11D,0x1
0000729e(10): MOV RBP,0x7fffffffffffffff
000072a8(5): JMP 0x00007105
000072b0(6): MOV R11D,0x1
000072b6(10): MOV RBP,0x7fffffffffffffff
000072c0(5): JMP 0x0000716d
000072c8(6): MOV R11D,0x1
000072ce(10): MOV RBP,0x7fffffffffffffff
000072d8(5): JMP 0x00007202
000072e0(6): MOV R12D,0x1
000072e6(10): MOV RBP,0x7fffffffffffffff
000072f0(5): JMP 0x00006ec0
000072f8(2): XOR EDI,EDI
000072fa(4): CMP byte ptr [RCX + 0x2],0x42
000072fe(5): MOV EAX,0x400
00007303(4): SETZ DIL
00007307(4): LEA EDI,[RDI + RDI*0x1 + 0x1]
0000730b(5): JMP 0x00006e42
00007310(6): MOV R11D,0x1
00007316(10): MOV RBP,0x7fffffffffffffff
00007320(5): JMP 0x000070a6
00007325(5): MOV EAX,0x1
0000732a(3): MOV RBP,R8
0000732d(5): JMP 0x00006eb8
00007332(5): MOV EAX,0x1
00007337(3): MOV RBP,R10
0000733a(5): JMP 0x00006eb8
0000733f(7): LEA RCX,[0x17510]
00007346(7): LEA RSI,[0x173f0]
0000734d(7): LEA RDI,[0x17410]
00007354(5): MOV EDX,0x54
00007359(5): CALL 0x00001c90
0000735e(5): CALL 0x00001c20
00007363(10): NOP word ptr CS:[RAX + RAX*0x1]
0000736d(3): NOP dword ptr [RAX]
00007370(2): PUSH R15
00007372(2): PUSH R14
00007374(2): PUSH R13
00007376(2): PUSH R12
00007378(1): PUSH RBP
00007379(1): PUSH RBX
0000737a(4): SUB RSP,0x28
0000737e(9): MOV RAX,qword ptr FS:[0x28]
00007387(5): MOV qword ptr [RSP + 0x18],RAX
0000738c(2): XOR EAX,EAX
0000738e(3): CMP EDX,0x24
00007391(6): JA 0x000076f5
00007397(5): LEA RAX,[RSP + 0x10]
0000739c(3): MOV R15,RSI
0000739f(3): TEST RSI,RSI
000073a2(3): MOV RBP,RDI
000073a5(4): MOV dword ptr [RSP + 0x8],EDX
000073a9(3): MOV R14,RCX
000073ac(3): MOV R13,R8
000073af(4): CMOVZ R15,RAX
000073b3(5): CALL 0x00001b20
000073b8(6): MOV dword ptr [RAX],0x0
000073be(3): MOV R12,RAX
000073c1(4): MOVZX EBX,byte ptr [RBP]
000073c5(5): CALL 0x00001f50
000073ca(4): MOV EDX,dword ptr [RSP + 0x8]
000073ce(3): MOV RSI,qword ptr [RAX]
000073d1(3): MOV RAX,RBP
000073d4(2): JMP 0x000073e7
000073e0(4): ADD RAX,0x1
000073e4(3): MOVZX EBX,byte ptr [RAX]
000073e7(3): MOVZX ECX,BL
000073ea(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x20
000073ef(2): JNZ 0x000073e0
000073f1(3): CMP BL,0x2d
000073f4(2): JZ 0x00007448
000073f6(2): XOR ECX,ECX
000073f8(3): MOV RSI,R15
000073fb(3): MOV RDI,RBP
000073fe(5): CALL 0x00001ca0
00007403(3): MOV RCX,qword ptr [R15]
00007406(3): MOV RBX,RAX
00007409(3): CMP RCX,RBP
0000740c(2): JZ 0x00007438
0000740e(4): MOV EAX,dword ptr [R12]
00007412(2): TEST EAX,EAX
00007414(2): JZ 0x00007478
00007416(3): CMP EAX,0x22
00007419(5): MOV EBP,0x1
0000741e(2): JNZ 0x00007448
00007420(3): TEST R13,R13
00007423(2): JZ 0x0000742e
00007425(4): MOVZX R12D,byte ptr [RCX]
00007429(3): TEST R12B,R12B
0000742c(2): JNZ 0x000074a7
0000742e(3): MOV qword ptr [R14],RBX
00007431(2): JMP 0x0000744d
00007438(3): TEST R13,R13
0000743b(5): MOV qword ptr [RSP + 0x8],RCX
00007440(2): JNZ 0x00007480
00007442(6): NOP word ptr [RAX + RAX*0x1]
00007448(5): MOV EBP,0x4
0000744d(5): MOV RDI,qword ptr [RSP + 0x18]
00007452(9): XOR RDI,qword ptr FS:[0x28]
0000745b(2): MOV EAX,EBP
0000745d(6): JNZ 0x000076f0
00007463(4): ADD RSP,0x28
00007467(1): POP RBX
00007468(1): POP RBP
00007469(2): POP R12
0000746b(2): POP R13
0000746d(2): POP R14
0000746f(2): POP R15
00007471(1): RET
00007478(2): XOR EBP,EBP
0000747a(2): JMP 0x00007420
00007480(5): MOVZX R12D,byte ptr [RBP]
00007485(3): TEST R12B,R12B
00007488(2): JZ 0x00007448
0000748a(4): MOVSX ESI,R12B
0000748e(3): MOV RDI,R13
00007491(2): XOR EBP,EBP
00007493(5): CALL 0x00001c60
00007498(3): TEST RAX,RAX
0000749b(5): MOV EBX,0x1
000074a0(5): MOV RCX,qword ptr [RSP + 0x8]
000074a5(2): JZ 0x00007448
000074a7(4): MOVSX ESI,R12B
000074ab(3): MOV RDI,R13
000074ae(5): MOV qword ptr [RSP + 0x8],RCX
000074b3(5): CALL 0x00001c60
000074b8(3): TEST RAX,RAX
000074bb(5): MOV RCX,qword ptr [RSP + 0x8]
000074c0(6): JZ 0x0000758c
000074c6(5): LEA EAX,[R12 + -0x45]
000074cb(2): CMP AL,0x2f
000074cd(2): JA 0x00007520
000074cf(10): MOV RDX,0x814400308945
000074d9(4): BT RDX,RAX
000074dd(2): JNC 0x00007520
000074df(5): MOV ESI,0x30
000074e4(3): MOV RDI,R13
000074e7(5): MOV qword ptr [RSP + 0x8],RCX
000074ec(5): CALL 0x00001c60
000074f1(3): TEST RAX,RAX
000074f4(5): MOV RCX,qword ptr [RSP + 0x8]
000074f9(2): JZ 0x00007520
000074fb(4): MOVZX EAX,byte ptr [RCX + 0x1]
000074ff(2): CMP AL,0x44
00007501(2): JZ 0x0000750f
00007503(2): CMP AL,0x69
00007505(6): JZ 0x000076d8
0000750b(2): CMP AL,0x42
0000750d(2): JNZ 0x00007520
0000750f(5): MOV EDI,0x2
00007514(5): MOV ESI,0x3e8
00007519(2): JMP 0x0000752a
00007520(5): MOV EDI,0x1
00007525(5): MOV ESI,0x400
0000752a(4): SUB R12D,0x42
0000752e(4): CMP R12B,0x35
00007532(2): JA 0x0000758c
00007534(7): LEA RDX,[0x17520]
0000753b(4): MOVZX R12D,R12B
0000753f(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
00007543(3): ADD RAX,RDX
00007546(2): JMP RAX
00007548(3): MOV RAX,RBX
0000754b(3): MUL RSI
0000754e(6): JO 0x00007741
00007554(3): XOR R8D,R8D
00007557(3): MUL RSI
0000755a(6): JO 0x00007732
00007560(3): MOV RBX,RAX
00007563(3): OR EBP,R8D
00007566(10): NOP word ptr CS:[RAX + RAX*0x1]
00007570(3): MOVSXD RDI,EDI
00007573(2): MOV EAX,EBP
00007575(3): ADD RCX,RDI
00007578(3): OR EAX,0x2
0000757b(3): MOV qword ptr [R15],RCX
0000757e(3): CMP byte ptr [RCX],0x0
00007581(3): MOV qword ptr [R14],RBX
00007584(3): CMOVNZ EBP,EAX
00007587(5): JMP 0x0000744d
0000758c(3): MOV qword ptr [R14],RBX
0000758f(3): OR EBP,0x2
00007592(5): JMP 0x0000744d
00007597(5): MOV EDX,0x2
0000759c(3): MOV RAX,RDX
0000759f(3): MUL RBX
000075a2(6): JO 0x0000763e
000075a8(3): ADD RBX,RBX
000075ab(2): JMP 0x00007570
000075ad(5): MOV EDX,0x200
000075b2(3): MOV RAX,RDX
000075b5(3): MUL RBX
000075b8(6): JO 0x0000763e
000075be(4): SHL RBX,0x9
000075c2(2): JMP 0x00007570
000075c4(6): MOV R8D,0x7
000075ca(3): XOR R9D,R9D
000075cd(3): NOP dword ptr [RAX]
000075d0(3): MOV RAX,RBX
000075d3(3): MUL RSI
000075d6(3): MOV RBX,RAX
000075d9(6): JO 0x0000776e
000075df(4): SUB R8D,0x1
000075e3(2): JNZ 0x000075d0
000075e5(3): OR EBP,R9D
000075e8(2): JMP 0x00007570
000075ea(6): MOV R8D,0x8
000075f0(3): XOR R9D,R9D
000075f3(5): NOP dword ptr [RAX + RAX*0x1]
000075f8(3): MOV RAX,RBX
000075fb(3): MUL RSI
000075fe(3): MOV RBX,RAX
00007601(6): JO 0x00007750
00007607(4): SUB R8D,0x1
0000760b(2): JNZ 0x000075f8
0000760d(2): JMP 0x000075e5
0000760f(6): MOV R8D,0x4
00007615(3): XOR R9D,R9D
00007618(3): MOV RAX,RBX
0000761b(3): MUL RSI
0000761e(3): MOV RBX,RAX
00007621(6): JO 0x00007723
00007627(4): SUB R8D,0x1
0000762b(2): JNZ 0x00007618
0000762d(2): JMP 0x000075e5
0000762f(3): MOV RAX,RBX
00007632(3): MUL RSI
00007635(3): MOV RBX,RAX
00007638(6): JNO 0x00007570
0000763e(5): MOV EBP,0x1
00007643(4): OR RBX,-0x1
00007647(5): JMP 0x00007570
00007650(6): MOV R8D,0x5
00007656(3): XOR R9D,R9D
00007659(3): MOV RAX,RBX
0000765c(3): MUL RSI
0000765f(3): MOV RBX,RAX
00007662(6): JO 0x0000775f
00007668(4): SUB R8D,0x1
0000766c(2): JNZ 0x00007659
0000766e(5): JMP 0x000075e5
00007673(6): MOV R8D,0x6
00007679(3): XOR R9D,R9D
0000767c(3): MOV RAX,RBX
0000767f(3): MUL RSI
00007682(3): MOV RBX,RAX
00007685(6): JO 0x00007714
0000768b(4): SUB R8D,0x1
0000768f(2): JNZ 0x0000767c
00007691(5): JMP 0x000075e5
00007696(5): MOV EDX,0x400
0000769b(3): MOV RAX,RDX
0000769e(3): MUL RBX
000076a1(2): JO 0x0000763e
000076a3(4): SHL RBX,0xa
000076a7(5): JMP 0x00007570
000076ac(3): MOV RAX,RBX
000076af(3): MUL RSI
000076b2(6): JO 0x0000777d
000076b8(3): XOR R8D,R8D
000076bb(3): MUL RSI
000076be(6): JNO 0x00007557
000076c4(6): MOV R8D,0x1
000076ca(4): OR RAX,-0x1
000076ce(5): JMP 0x00007557
000076d8(2): XOR EDI,EDI
000076da(4): CMP byte ptr [RCX + 0x2],0x42
000076de(5): MOV ESI,0x400
000076e3(4): SETZ DIL
000076e7(4): LEA EDI,[RDI + RDI*0x1 + 0x1]
000076eb(5): JMP 0x0000752a
000076f0(5): CALL 0x00001c20
000076f5(7): LEA RCX,[0x175f8]
000076fc(7): LEA RSI,[0x173f0]
00007703(7): LEA RDI,[0x17410]
0000770a(5): MOV EDX,0x54
0000770f(5): CALL 0x00001c90
00007714(6): MOV R9D,0x1
0000771a(4): OR RBX,-0x1
0000771e(5): JMP 0x0000768b
00007723(6): MOV R9D,0x1
00007729(4): OR RBX,-0x1
0000772d(5): JMP 0x00007627
00007732(6): MOV R8D,0x1
00007738(4): OR RBX,-0x1
0000773c(5): JMP 0x00007563
00007741(4): OR RAX,-0x1
00007745(6): MOV R8D,0x1
0000774b(5): JMP 0x00007557
00007750(6): MOV R9D,0x1
00007756(4): OR RBX,-0x1
0000775a(5): JMP 0x00007607
0000775f(6): MOV R9D,0x1
00007765(4): OR RBX,-0x1
00007769(5): JMP 0x00007668
0000776e(6): MOV R9D,0x1
00007774(4): OR RBX,-0x1
00007778(5): JMP 0x000075df
0000777d(6): MOV R8D,0x1
00007783(4): OR RAX,-0x1
00007787(5): JMP 0x000076bb
00007790(2): PUSH R12
00007792(1): PUSH RBP
00007793(1): PUSH RBX
00007794(3): MOV RBX,RDI
00007797(5): CALL 0x00001d80
0000779c(2): TEST EAX,EAX
0000779e(3): MOV RDI,RBX
000077a1(2): JS 0x000077f7
000077a3(5): CALL 0x00001de0
000077a8(2): TEST EAX,EAX
000077aa(2): JNZ 0x000077d8
000077ac(3): MOV RDI,RBX
000077af(5): CALL 0x00007a90
000077b4(2): TEST EAX,EAX
000077b6(2): JZ 0x000077f4
000077b8(5): CALL 0x00001b20
000077bd(3): MOV R12D,dword ptr [RAX]
000077c0(3): MOV RDI,RBX
000077c3(3): MOV RBP,RAX
000077c6(5): CALL 0x00001bd0
000077cb(3): TEST R12D,R12D
000077ce(2): JNZ 0x00007800
000077d0(1): POP RBX
000077d1(1): POP RBP
000077d2(2): POP R12
000077d4(1): RET
000077d8(3): MOV RDI,RBX
000077db(5): CALL 0x00001d80
000077e0(2): XOR ESI,ESI
000077e2(5): MOV EDX,0x1
000077e7(2): MOV EDI,EAX
000077e9(5): CALL 0x00001c80
000077ee(4): CMP RAX,-0x1
000077f2(2): JNZ 0x000077ac
000077f4(3): MOV RDI,RBX
000077f7(1): POP RBX
000077f8(1): POP RBP
000077f9(2): POP R12
000077fb(5): JMP 0x00001bd0
00007800(4): MOV dword ptr [RBP],R12D
00007804(5): MOV EAX,0xffffffff
00007809(2): JMP 0x000077d0
00007810(2): PUSH R12
00007812(1): PUSH RBP
00007813(2): MOV EBP,EDI
00007815(1): PUSH RBX
00007816(4): SUB RSP,0x50
0000781a(9): MOV RAX,qword ptr FS:[0x28]
00007823(5): MOV qword ptr [RSP + 0x18],RAX
00007828(2): XOR EAX,EAX
0000782a(5): LEA RAX,[RSP + 0x70]
0000782f(2): TEST ESI,ESI
00007831(5): MOV qword ptr [RSP + 0x30],RDX
00007836(5): MOV qword ptr [RSP + 0x38],RCX
0000783b(5): MOV qword ptr [RSP + 0x40],R8
00007840(5): MOV qword ptr [RSP + 0x8],RAX
00007845(5): LEA RAX,[RSP + 0x20]
0000784a(5): MOV qword ptr [RSP + 0x48],R9
0000784f(7): MOV dword ptr [RSP],0x10
00007856(5): MOV qword ptr [RSP + 0x10],RAX
0000785b(6): JZ 0x00007a62
00007861(6): CMP ESI,0x406
00007867(2): JNZ 0x000078b0
00007869(5): MOV RAX,qword ptr [RSP + 0x10]
0000786e(7): CMP dword ptr [0x0021c378],0x0
00007875(7): MOV dword ptr [RSP],0x18
0000787c(4): MOV R12D,dword ptr [RAX + 0x10]
00007880(3): MOV EDX,R12D
00007883(6): JS 0x000079b3
00007889(2): XOR EAX,EAX
0000788b(5): MOV ESI,0x406
00007890(5): CALL 0x00001b90
00007895(2): TEST EAX,EAX
00007897(2): MOV EBX,EAX
00007899(6): JS 0x00007a28
0000789f(10): MOV dword ptr [0x0021c378],0x1
000078a9(2): JMP 0x000078f0
000078b0(3): CMP ESI,0xb
000078b3(2): JZ 0x000078e0
000078b5(2): JG 0x00007910
000078b7(3): CMP ESI,0x4
000078ba(6): JZ 0x00007990
000078c0(6): JG 0x00007980
000078c6(3): CMP ESI,0x2
000078c9(6): JZ 0x00007990
000078cf(2): JG 0x000078e0
000078d1(3): CMP ESI,0x1
000078d4(2): JNZ 0x00007938
000078d6(10): NOP word ptr CS:[RAX + RAX*0x1]
000078e0(2): MOV EDI,EBP
000078e2(2): XOR EAX,EAX
000078e4(5): CALL 0x00001b90
000078e9(2): MOV EBX,EAX
000078eb(5): NOP dword ptr [RAX + RAX*0x1]
000078f0(5): MOV RCX,qword ptr [RSP + 0x18]
000078f5(9): XOR RCX,qword ptr FS:[0x28]
000078fe(2): MOV EAX,EBX
00007900(6): JNZ 0x00007a5d
00007906(4): ADD RSP,0x50
0000790a(1): POP RBX
0000790b(1): POP RBP
0000790c(2): POP R12
0000790e(1): RET
00007910(6): CMP ESI,0x407
00007916(2): JG 0x00007960
00007918(6): CMP ESI,0x406
0000791e(2): JGE 0x00007990
00007920(6): CMP ESI,0x401
00007926(2): JZ 0x000078e0
00007928(6): CMP ESI,0x402
0000792e(2): JZ 0x00007990
00007930(6): CMP ESI,0x400
00007936(2): JZ 0x00007990
00007938(3): MOV EAX,dword ptr [RSP]
0000793b(3): CMP EAX,0x2f
0000793e(6): JA 0x00007a7a
00007944(5): ADD RAX,qword ptr [RSP + 0x10]
00007949(3): MOV RDX,qword ptr [RAX]
0000794c(2): MOV EDI,EBP
0000794e(2): XOR EAX,EAX
00007950(5): CALL 0x00001b90
00007955(2): MOV EBX,EAX
00007957(2): JMP 0x000078f0
00007960(6): CMP ESI,0x409
00007966(2): JZ 0x00007990
00007968(6): JL 0x000078e0
0000796e(6): CMP ESI,0x40a
00007974(2): JNZ 0x00007938
00007976(5): JMP 0x000078e0
00007980(3): CMP ESI,0x9
00007983(6): JZ 0x000078e0
00007989(2): JG 0x00007990
0000798b(3): CMP ESI,0x8
0000798e(2): JNZ 0x00007938
00007990(3): MOV EAX,dword ptr [RSP]
00007993(3): CMP EAX,0x2f
00007996(6): JA 0x00007a84
0000799c(5): ADD RAX,qword ptr [RSP + 0x10]
000079a1(2): MOV EDX,dword ptr [RAX]
000079a3(2): MOV EDI,EBP
000079a5(2): XOR EAX,EAX
000079a7(5): CALL 0x00001b90
000079ac(2): MOV EBX,EAX
000079ae(5): JMP 0x000078f0
000079b3(2): XOR ESI,ESI
000079b5(2): XOR EAX,EAX
000079b7(5): CALL 0x00001b90
000079bc(2): TEST EAX,EAX
000079be(2): MOV EBX,EAX
000079c0(6): JS 0x000078f0
000079c6(7): CMP dword ptr [0x0021c378],-0x1
000079cd(6): JNZ 0x000078f0
000079d3(2): XOR EAX,EAX
000079d5(5): MOV ESI,0x1
000079da(2): MOV EDI,EBX
000079dc(5): CALL 0x00001b90
000079e1(2): TEST EAX,EAX
000079e3(2): JS 0x00007a01
000079e5(3): OR EAX,0x1
000079e8(5): MOV ESI,0x2
000079ed(2): MOV EDI,EBX
000079ef(2): MOV EDX,EAX
000079f1(2): XOR EAX,EAX
000079f3(5): CALL 0x00001b90
000079f8(3): CMP EAX,-0x1
000079fb(6): JNZ 0x000078f0
00007a01(5): CALL 0x00001b20
00007a06(3): MOV R12D,dword ptr [RAX]
00007a09(3): MOV RBP,RAX
00007a0c(2): MOV EDI,EBX
00007a0e(5): CALL 0x00001cc0
00007a13(5): MOV EBX,0xffffffff
00007a18(4): MOV dword ptr [RBP],R12D
00007a1c(5): JMP 0x000078f0
00007a28(5): CALL 0x00001b20
00007a2d(3): CMP dword ptr [RAX],0x16
00007a30(6): JNZ 0x0000789f
00007a36(2): XOR ESI,ESI
00007a38(2): XOR EAX,EAX
00007a3a(3): MOV EDX,R12D
00007a3d(2): MOV EDI,EBP
00007a3f(5): CALL 0x00001b90
00007a44(2): TEST EAX,EAX
00007a46(2): MOV EBX,EAX
00007a48(6): JS 0x000078f0
00007a4e(10): MOV dword ptr [0x0021c378],0xffffffff
00007a58(5): JMP 0x000079d3
00007a5d(5): CALL 0x00001c20
00007a62(5): MOV RAX,qword ptr [RSP + 0x10]
00007a67(2): XOR ESI,ESI
00007a69(3): MOV EDX,dword ptr [RAX + 0x10]
00007a6c(2): XOR EAX,EAX
00007a6e(5): CALL 0x00001b90
00007a73(2): MOV EBX,EAX
00007a75(5): JMP 0x000078f0
00007a7a(5): MOV RAX,qword ptr [RSP + 0x8]
00007a7f(5): JMP 0x00007949
00007a84(5): MOV RAX,qword ptr [RSP + 0x8]
00007a89(5): JMP 0x000079a1
00007a90(3): TEST RDI,RDI
00007a93(1): PUSH RBX
00007a94(3): MOV RBX,RDI
00007a97(2): JZ 0x00007aaa
00007a99(5): CALL 0x00001de0
00007a9e(2): TEST EAX,EAX
00007aa0(2): JZ 0x00007aaa
00007aa2(6): TEST dword ptr [RBX],0x100
00007aa8(2): JNZ 0x00007ab8
00007aaa(3): MOV RDI,RBX
00007aad(1): POP RBX
00007aae(5): JMP 0x00001dc0
00007ab8(3): MOV RDI,RBX
00007abb(5): MOV EDX,0x1
00007ac0(2): XOR ESI,ESI
00007ac2(5): CALL 0x00007ad0
00007ac7(3): MOV RDI,RBX
00007aca(1): POP RBX
00007acb(5): JMP 0x00001dc0
00007ad0(4): MOV RAX,qword ptr [RDI + 0x8]
00007ad4(4): CMP qword ptr [RDI + 0x10],RAX
00007ad8(2): JZ 0x00007ae0
00007ada(5): JMP 0x00001e80
00007ae0(4): MOV RAX,qword ptr [RDI + 0x20]
00007ae4(4): CMP qword ptr [RDI + 0x28],RAX
00007ae8(2): JNZ 0x00007ada
00007aea(5): CMP qword ptr [RDI + 0x48],0x0
00007aef(2): JNZ 0x00007ada
00007af1(2): PUSH R12
00007af3(1): PUSH RBP
00007af4(3): MOV R12D,EDX
00007af7(1): PUSH RBX
00007af8(3): MOV RBP,RSI
00007afb(3): MOV RBX,RDI
00007afe(5): CALL 0x00001d80
00007b03(3): MOV EDX,R12D
00007b06(3): MOV RSI,RBP
00007b09(2): MOV EDI,EAX
00007b0b(5): CALL 0x00001c80
00007b10(4): CMP RAX,-0x1
00007b14(2): JZ 0x00007b22
00007b16(3): AND dword ptr [RBX],0xffffffef
00007b19(7): MOV qword ptr [0x90 + RBX],RAX
00007b20(2): XOR EAX,EAX
00007b22(1): POP RBX
00007b23(1): POP RBP
00007b24(2): POP R12
00007b26(1): RET
00007b30(2): PUSH R13
00007b32(2): PUSH R12
00007b34(3): MOV R13,RSI
00007b37(1): PUSH RBP
00007b38(1): PUSH RBX
00007b39(3): MOV RBX,RDI
00007b3c(3): MOV R12,RDX
00007b3f(4): SUB RSP,0x18
00007b43(9): MOV RAX,qword ptr FS:[0x28]
00007b4c(5): MOV qword ptr [RSP + 0x8],RAX
00007b51(2): XOR EAX,EAX
00007b53(5): LEA RAX,[RSP + 0x4]
00007b58(3): TEST RDI,RDI
00007b5b(4): CMOVZ RBX,RAX
00007b5f(3): MOV RDI,RBX
00007b62(5): CALL 0x00001c40
00007b67(4): CMP RAX,-0x3
00007b6b(3): MOV RBP,RAX
00007b6e(2): JBE 0x00007b90
00007b70(3): TEST R12,R12
00007b73(2): JZ 0x00007b90
00007b75(2): XOR EDI,EDI
00007b77(5): CALL 0x00015e50
00007b7c(2): TEST AL,AL
00007b7e(2): JNZ 0x00007b90
00007b80(5): MOVZX EAX,byte ptr [R13]
00007b85(5): MOV EBP,0x1
00007b8a(2): MOV dword ptr [RBX],EAX
00007b8c(4): NOP dword ptr [RAX]
00007b90(5): MOV RDX,qword ptr [RSP + 0x8]
00007b95(9): XOR RDX,qword ptr FS:[0x28]
00007b9e(3): MOV RAX,RBP
00007ba1(2): JNZ 0x00007bae
00007ba3(4): ADD RSP,0x18
00007ba7(1): POP RBX
00007ba8(1): POP RBP
00007ba9(2): POP R12
00007bab(2): POP R13
00007bad(1): RET
00007bae(5): CALL 0x00001c20
00007bb3(10): NOP word ptr CS:[RAX + RAX*0x1]
00007bbd(3): NOP dword ptr [RAX]
00007bc0(4): MOV RAX,qword ptr [RSI + 0x48]
00007bc4(4): CMP qword ptr [RSI + 0x68],RAX
00007bc8(2): JLE 0x00007c20
00007bca(4): MOV R8,qword ptr [RSI + 0x8]
00007bce(7): CMP dword ptr [0x90 + RSI],0x1
00007bd5(5): MOVZX ECX,byte ptr [R8 + RAX*0x1]
00007bda(2): MOV byte ptr [RDI],CL
00007bdc(2): JLE 0x00007bf3
00007bde(4): CMP RAX,qword ptr [RSI + 0x30]
00007be2(2): JZ 0x00007bf3
00007be4(4): MOV R9,qword ptr [RSI + 0x10]
00007be8(5): CMP dword ptr [R9 + RAX*0x4],-0x1
00007bed(6): JZ 0x00007c6f
00007bf3(3): CMP CL,0x5c
00007bf6(2): JZ 0x00007c60
00007bf8(3): CMP CL,0x5b
00007bfb(2): JZ 0x00007c30
00007bfd(3): CMP CL,0x5d
00007c00(6): JZ 0x00007ca0
00007c06(3): CMP CL,0x5e
00007c09(6): JZ 0x00007c90
00007c0f(3): CMP CL,0x2d
00007c12(2): JNZ 0x00007c6f
00007c14(4): MOV byte ptr [RDI + 0x8],0x16
00007c18(5): MOV EAX,0x1
00007c1d(1): RET
00007c20(4): MOV byte ptr [RDI + 0x8],0x2
00007c24(2): XOR EAX,EAX
00007c26(1): RET
00007c30(4): LEA RCX,[RAX + 0x1]
00007c34(4): CMP RCX,qword ptr [RSI + 0x58]
00007c38(2): JGE 0x00007c80
00007c3a(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
00007c40(2): CMP AL,0x3a
00007c42(2): MOV byte ptr [RDI],AL
00007c44(6): JZ 0x00007ce0
00007c4a(2): CMP AL,0x3d
00007c4c(6): JZ 0x00007cd0
00007c52(2): CMP AL,0x2e
00007c54(2): JNZ 0x00007c80
00007c56(4): MOV byte ptr [RDI + 0x8],0x1a
00007c5a(5): MOV EAX,0x2
00007c5f(1): RET
00007c60(3): AND EDX,0x1
00007c63(2): JZ 0x00007c6f
00007c65(4): LEA RDX,[RAX + 0x1]
00007c69(4): CMP RDX,qword ptr [RSI + 0x58]
00007c6d(2): JL 0x00007cb0
00007c6f(4): MOV byte ptr [RDI + 0x8],0x1
00007c73(5): MOV EAX,0x1
00007c78(1): RET
00007c80(4): MOV byte ptr [RDI + 0x8],0x1
00007c84(3): MOV byte ptr [RDI],0x5b
00007c87(5): MOV EAX,0x1
00007c8c(1): RET
00007c90(4): MOV byte ptr [RDI + 0x8],0x19
00007c94(5): MOV EAX,0x1
00007c99(1): RET
00007ca0(4): MOV byte ptr [RDI + 0x8],0x15
00007ca4(5): MOV EAX,0x1
00007ca9(1): RET
00007cb0(4): MOV qword ptr [RSI + 0x48],RDX
00007cb4(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
00007cba(4): MOV byte ptr [RDI + 0x8],0x1
00007cbe(2): MOV byte ptr [RDI],AL
00007cc0(5): MOV EAX,0x1
00007cc5(1): RET
00007cd0(4): MOV byte ptr [RDI + 0x8],0x1c
00007cd4(5): MOV EAX,0x2
00007cd9(1): RET
00007ce0(3): AND EDX,0x4
00007ce3(2): JZ 0x00007c80
00007ce5(4): MOV byte ptr [RDI + 0x8],0x1e
00007ce9(5): MOV EAX,0x2
00007cee(1): RET
00007cf0(4): CMP byte ptr [RSI + 0x30],0x11
00007cf4(2): JZ 0x00007d00
00007cf6(2): XOR EAX,EAX
00007cf8(1): RET
00007d00(4): CMP RDI,qword ptr [RSI + 0x28]
00007d04(2): JNZ 0x00007cf6
00007d06(4): OR byte ptr [RSI + 0x32],0x8
00007d0a(2): XOR EAX,EAX
00007d0c(1): RET
00007d10(2): PUSH R15
00007d12(2): PUSH R14
00007d14(3): MOV R9,RDX
00007d17(2): PUSH R13
00007d19(2): PUSH R12
00007d1b(4): LEA RDX,[RCX + RCX*0x2]
00007d1f(1): PUSH RBP
00007d20(1): PUSH RBX
00007d21(3): MOV R15D,ESI
00007d24(4): SUB RSP,0x48
00007d28(7): MOV R14,qword ptr [0x98 + RDI]
00007d2f(4): MOV qword ptr [RSP],RDI
00007d33(4): MOV RAX,qword ptr [R14 + 0x30]
00007d37(4): LEA R12,[RAX + RDX*0x8]
00007d3b(6): CMP qword ptr [R12 + 0x8],0x0
00007d41(6): JLE 0x00007ed5
00007d47(4): LEA RAX,[R8 + R8*0x4]
00007d4b(3): MOV R11,RCX
00007d4e(3): MOV ECX,R9D
00007d51(3): MOV R10,R8
00007d54(2): XOR EBX,EBX
00007d56(4): MOV dword ptr [RSP + 0x20],ESI
00007d5a(4): SHL RAX,0x3
00007d5e(3): MOV R15,R9
00007d61(5): MOV qword ptr [RSP + 0x10],R11
00007d66(5): MOV qword ptr [RSP + 0x28],RAX
00007d6b(5): MOV EAX,0x1
00007d70(3): SHL RAX,CL
00007d73(5): MOV qword ptr [RSP + 0x18],RAX
00007d78(2): NOT EAX
00007d7a(5): MOV word ptr [RSP + 0x26],AX
00007d7f(2): MOV EAX,ESI
00007d81(3): AND EAX,0x1
00007d84(4): MOV dword ptr [RSP + 0xc],EAX
00007d88(2): MOV EAX,ESI
00007d8a(3): AND EAX,0x2
00007d8d(4): MOV dword ptr [RSP + 0x8],EAX
00007d91(2): JMP 0x00007db5
00007d98(3): CMP DL,0x9
00007d9b(6): JZ 0x00007ef0
00007da1(3): CMP DL,0x4
00007da4(2): JZ 0x00007df8
00007da6(4): ADD RBX,0x1
00007daa(5): CMP qword ptr [R12 + 0x8],RBX
00007daf(6): JLE 0x00007ed0
00007db5(5): MOV RAX,qword ptr [R12 + 0x10]
00007dba(4): MOV RBP,qword ptr [RAX + RBX*0x8]
00007dbe(3): MOV RAX,RBP
00007dc1(4): SHL RAX,0x4
00007dc5(3): ADD RAX,qword ptr [R14]
00007dc8(4): MOVZX EDX,byte ptr [RAX + 0x8]
00007dcc(3): CMP DL,0x8
00007dcf(2): JNZ 0x00007d98
00007dd1(4): MOV ECX,dword ptr [RSP + 0xc]
00007dd5(2): TEST ECX,ECX
00007dd7(2): JZ 0x00007da6
00007dd9(3): CMP qword ptr [RAX],R15
00007ddc(2): JNZ 0x00007da6
00007dde(4): ADD RSP,0x48
00007de2(5): MOV EAX,0xffffffff
00007de7(1): POP RBX
00007de8(1): POP RBP
00007de9(2): POP R12
00007deb(2): POP R13
00007ded(2): POP R14
00007def(2): POP R15
00007df1(1): RET
00007df8(4): CMP R10,-0x1
00007dfc(2): JZ 0x00007da6
00007dfe(4): MOV RAX,qword ptr [RSP]
00007e02(5): MOV R13,qword ptr [RSP + 0x28]
00007e07(3): MOV RDI,RBP
00007e0a(5): MOV qword ptr [RSP + 0x30],R12
00007e0f(5): MOV qword ptr [RSP + 0x38],RBX
00007e14(3): MOV R12,R10
00007e17(7): ADD R13,qword ptr [0xd8 + RAX]
00007e1e(5): LEA RAX,[RBP + RBP*0x2]
00007e23(3): MOV RBP,R14
00007e26(3): MOV R14,RDI
00007e29(4): SHL RAX,0x3
00007e2d(3): MOV RBX,RAX
00007e30(4): CMP qword ptr [R13],R14
00007e34(2): JNZ 0x00007ea0
00007e36(4): CMP R15,0x3f
00007e3a(2): JG 0x00007e48
00007e3c(5): MOVZX EAX,word ptr [R13 + 0x22]
00007e41(5): TEST qword ptr [RSP + 0x18],RAX
00007e46(2): JZ 0x00007ea0
00007e48(4): MOV RAX,qword ptr [RBP + 0x28]
00007e4c(5): MOV RAX,qword ptr [RAX + RBX*0x1 + 0x10]
00007e51(3): MOV RCX,qword ptr [RAX]
00007e54(5): CMP qword ptr [RSP + 0x10],RCX
00007e59(6): JZ 0x00007f20
00007e5f(4): MOV ESI,dword ptr [RSP + 0x20]
00007e63(4): MOV RDI,qword ptr [RSP]
00007e67(3): MOV R8,R12
00007e6a(3): MOV RDX,R15
00007e6d(5): CALL 0x00007d10
00007e72(3): CMP EAX,-0x1
00007e75(6): JZ 0x00007dde
00007e7b(2): TEST EAX,EAX
00007e7d(2): JNZ 0x00007e87
00007e7f(4): MOV ESI,dword ptr [RSP + 0x8]
00007e83(2): TEST ESI,ESI
00007e85(2): JNZ 0x00007f05
00007e87(4): CMP R15,0x3f
00007e8b(2): JG 0x00007ea0
00007e8d(5): MOVZX EAX,word ptr [RSP + 0x26]
00007e92(5): AND word ptr [R13 + 0x22],AX
00007e97(9): NOP word ptr [RAX + RAX*0x1]
00007ea0(4): ADD R13,0x28
00007ea4(5): CMP byte ptr [R13 + -0x8],0x0
00007ea9(2): JNZ 0x00007e30
00007eab(5): MOV RBX,qword ptr [RSP + 0x38]
00007eb0(3): MOV R10,R12
00007eb3(5): MOV R12,qword ptr [RSP + 0x30]
00007eb8(3): MOV R14,RBP
00007ebb(4): ADD RBX,0x1
00007ebf(5): CMP qword ptr [R12 + 0x8],RBX
00007ec4(6): JG 0x00007db5
00007eca(6): NOP word ptr [RAX + RAX*0x1]
00007ed0(5): MOV R15D,dword ptr [RSP + 0x20]
00007ed5(4): ADD RSP,0x48
00007ed9(3): MOV EAX,R15D
00007edc(1): POP RBX
00007edd(2): SAR EAX,1
00007edf(1): POP RBP
00007ee0(2): POP R12
00007ee2(2): POP R13
00007ee4(2): POP R14
00007ee6(2): POP R15
00007ee8(1): RET
00007ef0(4): MOV EDX,dword ptr [RSP + 0x8]
00007ef4(2): TEST EDX,EDX
00007ef6(6): JZ 0x00007da6
00007efc(3): CMP qword ptr [RAX],R15
00007eff(6): JNZ 0x00007da6
00007f05(4): ADD RSP,0x48
00007f09(2): XOR EAX,EAX
00007f0b(1): POP RBX
00007f0c(1): POP RBP
00007f0d(2): POP R12
00007f0f(2): POP R13
00007f11(2): POP R14
00007f13(2): POP R15
00007f15(1): RET
00007f20(5): MOV R15D,dword ptr [RSP + 0x20]
00007f25(4): ADD RSP,0x48
00007f29(1): POP RBX
00007f2a(1): POP RBP
00007f2b(3): MOV EAX,R15D
00007f2e(3): AND EAX,0x1
00007f31(2): POP R12
00007f33(2): NEG EAX
00007f35(2): POP R13
00007f37(2): POP R14
00007f39(2): POP R15
00007f3b(1): RET
00007f40(7): MOV RAX,qword ptr [0xd8 + RDI]
00007f47(4): LEA RSI,[RSI + RSI*0x4]
00007f4b(4): LEA RAX,[RAX + RSI*0x8]
00007f4f(4): MOV R10,qword ptr [RAX + 0x10]
00007f53(3): CMP R10,R8
00007f56(2): JG 0x00007fa0
00007f58(4): MOV RAX,qword ptr [RAX + 0x18]
00007f5c(3): CMP RAX,R8
00007f5f(2): JL 0x00007f80
00007f61(2): XOR ESI,ESI
00007f63(3): CMP R10,R8
00007f66(4): SETZ SIL
00007f6a(3): OR ESI,0x2
00007f6d(3): CMP RAX,R8
00007f70(2): JZ 0x00007f95
00007f72(2): XOR EAX,EAX
00007f74(3): CMP R10,R8
00007f77(2): JZ 0x00007f90
00007f79(2): RET
00007f80(5): MOV EAX,0x1
00007f85(1): RET
00007f90(5): MOV ESI,0x1
00007f95(3): MOV R8,R9
00007f98(5): JMP 0x00007d10
00007fa0(5): MOV EAX,0xffffffff
00007fa5(1): RET
00007fb0(2): PUSH R12
00007fb2(3): MOV R12,RSI
00007fb5(1): PUSH RBP
00007fb6(3): MOV RBP,RDX
00007fb9(1): PUSH RBX
00007fba(3): MOV RBX,RDI
00007fbd(2): JMP 0x00007fc3
00007fc0(3): MOV RBX,RAX
00007fc3(4): MOV RAX,qword ptr [RBX + 0x8]
00007fc7(3): TEST RAX,RAX
00007fca(2): JNZ 0x00007fc0
00007fcc(4): MOV RAX,qword ptr [RBX + 0x10]
00007fd0(3): TEST RAX,RAX
00007fd3(2): JNZ 0x00007fc0
00007fd5(3): MOV RSI,RBX
00007fd8(3): MOV RDI,RBP
00007fdb(3): CALL R12
00007fde(2): TEST EAX,EAX
00007fe0(2): JNZ 0x00008016
00007fe2(6): NOP word ptr [RAX + RAX*0x1]
00007fe8(3): MOV RDX,qword ptr [RBX]
00007feb(3): TEST RDX,RDX
00007fee(2): JZ 0x00008016
00007ff0(4): MOV RAX,qword ptr [RDX + 0x10]
00007ff4(3): CMP RAX,RBX
00007ff7(3): MOV RBX,RDX
00007ffa(4): SETZ SIL
00007ffe(3): TEST RAX,RAX
00008001(3): SETZ CL
00008004(3): OR SIL,CL
00008007(2): JZ 0x00007fc0
00008009(3): MOV RSI,RBX
0000800c(3): MOV RDI,RBP
0000800f(3): CALL R12
00008012(2): TEST EAX,EAX
00008014(2): JZ 0x00007fe8
00008016(1): POP RBX
00008017(1): POP RBP
00008018(2): POP R12
0000801a(1): RET
00008020(2): PUSH R12
00008022(3): MOV R12,RSI
00008025(1): PUSH RBP
00008026(3): MOV RBP,RDX
00008029(1): PUSH RBX
0000802a(3): MOV RBX,RDI
0000802d(2): JMP 0x00008033
00008030(3): MOV RBX,RDX
00008033(3): MOV RSI,RBX
00008036(3): MOV RDI,RBP
00008039(3): CALL R12
0000803c(2): TEST EAX,EAX
0000803e(2): JNZ 0x0000806c
00008040(4): MOV RDX,qword ptr [RBX + 0x8]
00008044(2): XOR ECX,ECX
00008046(3): TEST RDX,RDX
00008049(2): JNZ 0x00008030
0000804b(2): JMP 0x00008053
00008050(3): MOV RBX,RDX
00008053(4): MOV RDX,qword ptr [RBX + 0x10]
00008057(3): CMP RDX,RCX
0000805a(2): JZ 0x00008061
0000805c(3): TEST RDX,RDX
0000805f(2): JNZ 0x00008030
00008061(3): MOV RDX,qword ptr [RBX]
00008064(3): MOV RCX,RBX
00008067(3): TEST RDX,RDX
0000806a(2): JNZ 0x00008050
0000806c(1): POP RBX
0000806d(1): POP RBP
0000806e(2): POP R12
00008070(1): RET
00008080(1): PUSH RBP
00008081(1): PUSH RBX
00008082(3): MOV RBP,RSI
00008085(3): MOV RBX,RDI
00008088(4): SUB RSP,0x8
0000808c(7): CMP dword ptr [0x90 + RDI],0x1
00008093(2): JLE 0x000080dd
00008095(10): MOV RAX,0x1fffffffffffffff
0000809f(3): CMP RSI,RAX
000080a2(2): JA 0x00008110
000080a4(4): MOV RDI,qword ptr [RDI + 0x10]
000080a8(8): LEA RSI,[RSI*0x4]
000080b0(5): CALL 0x00001e00
000080b5(3): TEST RAX,RAX
000080b8(2): JZ 0x00008110
000080ba(4): MOV RDI,qword ptr [RBX + 0x18]
000080be(4): MOV qword ptr [RBX + 0x10],RAX
000080c2(3): TEST RDI,RDI
000080c5(2): JZ 0x000080dd
000080c7(8): LEA RSI,[RBP*0x8]
000080cf(5): CALL 0x00001e00
000080d4(3): TEST RAX,RAX
000080d7(2): JZ 0x00008110
000080d9(4): MOV qword ptr [RBX + 0x18],RAX
000080dd(7): CMP byte ptr [0x8b + RBX],0x0
000080e4(2): JNZ 0x000080f8
000080e6(4): MOV qword ptr [RBX + 0x40],RBP
000080ea(4): ADD RSP,0x8
000080ee(2): XOR EAX,EAX
000080f0(1): POP RBX
000080f1(1): POP RBP
000080f2(1): RET
000080f8(4): MOV RDI,qword ptr [RBX + 0x8]
000080fc(3): MOV RSI,RBP
000080ff(5): CALL 0x00001e00
00008104(3): TEST RAX,RAX
00008107(2): JZ 0x00008110
00008109(4): MOV qword ptr [RBX + 0x8],RAX
0000810d(2): JMP 0x000080e6
00008110(4): ADD RSP,0x8
00008114(5): MOV EAX,0xc
00008119(1): POP RBX
0000811a(1): POP RBP
0000811b(1): RET
00008120(1): PUSH RBP
00008121(1): PUSH RBX
00008122(3): MOV RBP,RSI
00008125(3): MOV RBX,RDI
00008128(4): SUB RSP,0x8
0000812c(4): MOV RSI,qword ptr [RDI + 0x8]
00008130(3): CMP qword ptr [RDI],RSI
00008133(4): MOV RAX,qword ptr [RDI + 0x10]
00008137(2): JZ 0x00008158
00008139(4): LEA RDX,[RSI + 0x1]
0000813d(4): MOV qword ptr [RBX + 0x8],RDX
00008141(4): MOV qword ptr [RAX + RSI*0x8],RBP
00008145(5): MOV EAX,0x1
0000814a(4): ADD RSP,0x8
0000814e(1): POP RBX
0000814f(1): POP RBP
00008150(1): RET
00008158(4): ADD RSI,0x1
0000815c(4): LEA RDX,[RSI + RSI*0x1]
00008160(4): SHL RSI,0x4
00008164(3): MOV qword ptr [RDI],RDX
00008167(3): MOV RDI,RAX
0000816a(5): CALL 0x00001e00
0000816f(3): TEST RAX,RAX
00008172(2): JZ 0x00008180
00008174(4): MOV qword ptr [RBX + 0x10],RAX
00008178(4): MOV RSI,qword ptr [RBX + 0x8]
0000817c(2): JMP 0x00008139
00008180(2): XOR EAX,EAX
00008182(2): JMP 0x0000814a
00008190(1): PUSH RBP
00008191(1): PUSH RBX
00008192(3): MOV RBP,RSI
00008195(3): MOV RBX,RDI
00008198(4): SUB RSP,0x8
0000819c(3): MOV RDX,qword ptr [RDI]
0000819f(3): TEST RDX,RDX
000081a2(2): JZ 0x000081c8
000081a4(4): MOV RSI,qword ptr [RDI + 0x8]
000081a8(4): MOV RAX,qword ptr [RDI + 0x10]
000081ac(3): TEST RSI,RSI
000081af(2): JNZ 0x00008200
000081b1(3): MOV qword ptr [RAX],RBP
000081b4(5): ADD qword ptr [RDI + 0x8],0x1
000081b9(5): MOV EAX,0x1
000081be(4): ADD RSP,0x8
000081c2(1): POP RBX
000081c3(1): POP RBP
000081c4(1): RET
000081c8(7): MOV qword ptr [RDI],0x1
000081cf(8): MOV qword ptr [RDI + 0x8],0x1
000081d7(5): MOV EDI,0x8
000081dc(5): CALL 0x00001da0
000081e1(3): TEST RAX,RAX
000081e4(4): MOV qword ptr [RBX + 0x10],RAX
000081e8(6): JZ 0x00008278
000081ee(3): MOV qword ptr [RAX],RBP
000081f1(4): ADD RSP,0x8
000081f5(5): MOV EAX,0x1
000081fa(1): POP RBX
000081fb(1): POP RBP
000081fc(1): RET
00008200(3): CMP RDX,RSI
00008203(6): JZ 0x00008290
00008209(3): CMP qword ptr [RAX],RBP
0000820c(8): LEA RDX,[RSI*0x8]
00008214(2): JLE 0x00008250
00008216(3): TEST RSI,RSI
00008219(2): JLE 0x00008233
0000821b(3): ADD RDX,RAX
0000821e(2): NOP
00008220(4): MOV RCX,qword ptr [RDX + -0x8]
00008224(4): SUB RDX,0x8
00008228(4): MOV qword ptr [RDX + 0x8],RCX
0000822c(3): CMP RAX,RDX
0000822f(2): JNZ 0x00008220
00008231(2): XOR EDX,EDX
00008233(4): MOV qword ptr [RAX + RDX*0x1],RBP
00008237(5): MOV EAX,0x1
0000823c(5): ADD qword ptr [RBX + 0x8],0x1
00008241(5): JMP 0x000081be
00008250(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
00008255(3): CMP RBP,RCX
00008258(2): JGE 0x00008233
0000825a(6): NOP word ptr [RAX + RAX*0x1]
00008260(4): MOV qword ptr [RAX + RDX*0x1],RCX
00008264(4): SUB RDX,0x8
00008268(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
0000826d(3): CMP RCX,RBP
00008270(2): JG 0x00008260
00008272(2): JMP 0x00008233
00008278(8): MOV qword ptr [RBX + 0x8],0x0
00008280(7): MOV qword ptr [RBX],0x0
00008287(5): JMP 0x000081be
00008290(4): LEA RDX,[RSI + RSI*0x1]
00008294(4): SHL RSI,0x4
00008298(3): MOV qword ptr [RDI],RDX
0000829b(3): MOV RDI,RAX
0000829e(5): CALL 0x00001e00
000082a3(3): TEST RAX,RAX
000082a6(2): JZ 0x000082b5
000082a8(4): MOV qword ptr [RBX + 0x10],RAX
000082ac(4): MOV RSI,qword ptr [RBX + 0x8]
000082b0(5): JMP 0x00008209
000082b5(2): XOR EAX,EAX
000082b7(5): JMP 0x000081be
000082c0(2): PUSH R14
000082c2(2): PUSH R13
000082c4(3): MOV R14,RDI
000082c7(2): PUSH R12
000082c9(1): PUSH RBP
000082ca(3): MOV R12,RDX
000082cd(1): PUSH RBX
000082ce(4): MOV RBX,qword ptr [RSI + 0x10]
000082d2(3): MOV RBP,RSI
000082d5(3): MOV qword ptr [RSI],RDX
000082d8(8): MOV qword ptr [RSI + 0x28],0x0
000082e0(4): LEA R13,[RSI + 0x20]
000082e4(8): LEA RDI,[RBX*0x8]
000082ec(4): MOV qword ptr [RSI + 0x20],RBX
000082f0(5): CALL 0x00001da0
000082f5(3): TEST RAX,RAX
000082f8(4): MOV qword ptr [RBP + 0x30],RAX
000082fc(2): JZ 0x0000833e
000082fe(3): TEST RBX,RBX
00008301(2): JLE 0x00008350
00008303(2): XOR EBX,EBX
00008305(2): JMP 0x0000831a
00008310(4): ADD RBX,0x1
00008314(4): CMP qword ptr [RBP + 0x10],RBX
00008318(2): JLE 0x00008350
0000831a(4): MOV RAX,qword ptr [RBP + 0x18]
0000831e(4): MOV RSI,qword ptr [RAX + RBX*0x8]
00008322(3): MOV RAX,RSI
00008325(4): SHL RAX,0x4
00008329(3): ADD RAX,qword ptr [R14]
0000832c(4): TEST byte ptr [RAX + 0x8],0x8
00008330(2): JNZ 0x00008310
00008332(3): MOV RDI,R13
00008335(5): CALL 0x00008120
0000833a(2): TEST AL,AL
0000833c(2): JNZ 0x00008310
0000833e(1): POP RBX
0000833f(5): MOV EAX,0xc
00008344(1): POP RBP
00008345(2): POP R12
00008347(2): POP R13
00008349(2): POP R14
0000834b(1): RET
00008350(7): AND R12,qword ptr [0x88 + R14]
00008357(4): MOV RAX,qword ptr [R14 + 0x40]
0000835b(4): LEA RDX,[R12 + R12*0x2]
0000835f(4): LEA RBX,[RAX + RDX*0x8]
00008363(3): MOV RDX,qword ptr [RBX]
00008366(4): CMP qword ptr [RBX + 0x8],RDX
0000836a(4): MOV RAX,qword ptr [RBX + 0x10]
0000836e(4): LEA RSI,[RDX + 0x1]
00008372(2): JLE 0x00008386
00008374(3): MOV qword ptr [RBX],RSI
00008377(4): MOV qword ptr [RAX + RDX*0x8],RBP
0000837b(2): XOR EAX,EAX
0000837d(1): POP RBX
0000837e(1): POP RBP
0000837f(2): POP R12
00008381(2): POP R13
00008383(2): POP R14
00008385(1): RET
00008386(4): LEA R12,[RSI + RSI*0x1]
0000838a(3): MOV RDI,RAX
0000838d(4): SHL RSI,0x4
00008391(5): CALL 0x00001e00
00008396(3): TEST RAX,RAX
00008399(2): JZ 0x0000833e
0000839b(3): MOV RDX,qword ptr [RBX]
0000839e(4): MOV qword ptr [RBX + 0x10],RAX
000083a2(4): MOV qword ptr [RBX + 0x8],R12
000083a6(4): LEA RSI,[RDX + 0x1]
000083aa(2): JMP 0x00008374
000083b0(2): PUSH R12
000083b2(4): MOV R12,qword ptr [RDI + 0x58]
000083b6(4): CMP qword ptr [RDI + 0x40],R12
000083ba(1): PUSH RBP
000083bb(3): MOV RBP,RDI
000083be(5): CMOVLE R12,qword ptr [RDI + 0x40]
000083c3(1): PUSH RBX
000083c4(4): MOV RBX,qword ptr [RDI + 0x30]
000083c8(3): CMP R12,RBX
000083cb(2): JLE 0x00008405
000083cd(5): CALL 0x00001ac0
000083d2(6): NOP word ptr [RAX + RAX*0x1]
000083d8(4): MOV RDX,qword ptr [RBP]
000083dc(4): MOV RCX,qword ptr [RBP + 0x78]
000083e0(3): ADD RDX,RBX
000083e3(4): ADD RDX,qword ptr [RBP + 0x28]
000083e7(3): TEST RCX,RCX
000083ea(3): MOVZX EDX,byte ptr [RDX]
000083ed(2): JNZ 0x00008418
000083ef(3): MOV RSI,qword ptr [RAX]
000083f2(4): MOV RCX,qword ptr [RBP + 0x8]
000083f6(3): MOV EDX,dword ptr [RSI + RDX*0x4]
000083f9(3): MOV byte ptr [RCX + RBX*0x1],DL
000083fc(4): ADD RBX,0x1
00008400(3): CMP R12,RBX
00008403(2): JNZ 0x000083d8
00008405(4): MOV qword ptr [RBP + 0x30],RBX
00008409(4): MOV qword ptr [RBP + 0x38],RBX
0000840d(1): POP RBX
0000840e(1): POP RBP
0000840f(2): POP R12
00008411(1): RET
00008418(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
0000841c(2): JMP 0x000083ef
00008420(2): PUSH R15
00008422(2): PUSH R14
00008424(2): PUSH R13
00008426(2): PUSH R12
00008428(1): PUSH RBP
00008429(1): PUSH RBX
0000842a(3): MOV RBX,RDI
0000842d(4): SUB RSP,0x68
00008431(4): MOV R12,qword ptr [RDI + 0x58]
00008435(4): MOV RBP,qword ptr [RDI + 0x30]
00008439(9): MOV RAX,qword ptr FS:[0x28]
00008442(5): MOV qword ptr [RSP + 0x58],RAX
00008447(2): XOR EAX,EAX
00008449(4): CMP qword ptr [RDI + 0x40],R12
0000844d(5): CMOVLE R12,qword ptr [RDI + 0x40]
00008452(3): CMP R12,RBP
00008455(6): JLE 0x000084e4
0000845b(4): LEA R14,[RDI + 0x20]
0000845f(5): LEA R13,[RSP + 0xc]
00008464(4): NOP dword ptr [RAX]
00008468(4): MOV RDI,qword ptr [RBX + 0x78]
0000846c(3): MOV RDX,R12
0000846f(4): MOV R15,qword ptr [RBX + 0x20]
00008473(3): SUB RDX,RBP
00008476(3): TEST RDI,RDI
00008479(6): JNZ 0x00008560
0000847f(4): MOV RSI,qword ptr [RBX + 0x28]
00008483(3): ADD RSI,RBP
00008486(3): ADD RSI,qword ptr [RBX]
00008489(3): MOV RCX,R14
0000848c(3): MOV RDI,R13
0000848f(5): CALL 0x00007b30
00008494(4): LEA RDX,[RAX + -0x1]
00008498(4): CMP RDX,-0x3
0000849c(6): JA 0x00008530
000084a2(4): CMP RAX,-0x2
000084a6(4): MOV EDX,dword ptr [RSP + 0xc]
000084aa(2): JZ 0x00008520
000084ac(4): MOV RCX,qword ptr [RBX + 0x10]
000084b0(4): LEA RSI,[RBP + 0x1]
000084b4(8): LEA RDI,[RBP*0x4]
000084bc(3): MOV dword ptr [RCX + RBP*0x4],EDX
000084bf(3): ADD RBP,RAX
000084c2(3): CMP RSI,RBP
000084c5(2): JGE 0x00008510
000084c7(5): LEA RDX,[RCX + RDI*0x1 + 0x4]
000084cc(4): LEA RAX,[RCX + RBP*0x4]
000084d0(6): MOV dword ptr [RDX],0xffffffff
000084d6(4): ADD RDX,0x4
000084da(3): CMP RAX,RDX
000084dd(2): JNZ 0x000084d0
000084df(3): CMP RBP,R12
000084e2(2): JL 0x00008468
000084e4(5): MOV RAX,qword ptr [RSP + 0x58]
000084e9(9): XOR RAX,qword ptr FS:[0x28]
000084f2(4): MOV qword ptr [RBX + 0x30],RBP
000084f6(4): MOV qword ptr [RBX + 0x38],RBP
000084fa(6): JNZ 0x000085de
00008500(4): ADD RSP,0x68
00008504(1): POP RBX
00008505(1): POP RBP
00008506(2): POP R12
00008508(2): POP R13
0000850a(2): POP R14
0000850c(2): POP R15
0000850e(1): RET
00008510(3): MOV RBP,RSI
00008513(3): CMP RBP,R12
00008516(6): JL 0x00008468
0000851c(2): JMP 0x000084e4
00008520(4): MOV RAX,qword ptr [RBX + 0x58]
00008524(4): CMP qword ptr [RBX + 0x40],RAX
00008528(6): JL 0x000085c8
0000852e(2): NOP
00008530(3): MOV RAX,qword ptr [RBX]
00008533(4): MOV RCX,qword ptr [RBX + 0x78]
00008537(3): ADD RAX,RBP
0000853a(4): ADD RAX,qword ptr [RBX + 0x28]
0000853e(3): TEST RCX,RCX
00008541(3): MOVZX EDX,byte ptr [RAX]
00008544(4): MOV dword ptr [RSP + 0xc],EDX
00008548(6): JNZ 0x000085d1
0000854e(4): MOV qword ptr [RBX + 0x20],R15
00008552(5): MOV EAX,0x1
00008557(5): JMP 0x000084ac
00008560(6): MOV ECX,dword ptr [0x90 + RBX]
00008566(2): XOR EAX,EAX
00008568(5): LEA RSI,[RSP + 0x10]
0000856d(2): TEST ECX,ECX
0000856f(2): JG 0x00008591
00008571(5): JMP 0x00008489
00008580(4): ADD RAX,0x1
00008584(3): CMP RDX,RAX
00008587(6): JZ 0x00008489
0000858d(4): MOV RDI,qword ptr [RBX + 0x78]
00008591(3): MOV RCX,qword ptr [RBX]
00008594(3): ADD RCX,RBP
00008597(3): ADD RCX,RAX
0000859a(4): ADD RCX,qword ptr [RBX + 0x28]
0000859e(3): MOVZX ECX,byte ptr [RCX]
000085a1(4): MOVZX ECX,byte ptr [RDI + RCX*0x1]
000085a5(4): MOV RDI,qword ptr [RBX + 0x8]
000085a9(3): ADD RDI,RBP
000085ac(3): MOV byte ptr [RDI + RAX*0x1],CL
000085af(3): MOV byte ptr [RSI + RAX*0x1],CL
000085b2(3): LEA ECX,[RAX + 0x1]
000085b5(6): CMP ECX,dword ptr [0x90 + RBX]
000085bb(2): JL 0x00008580
000085bd(5): JMP 0x00008489
000085c8(4): MOV qword ptr [RBX + 0x20],R15
000085cc(5): JMP 0x000084e4
000085d1(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
000085d5(4): MOV dword ptr [RSP + 0xc],EDX
000085d9(5): JMP 0x0000854e
000085de(5): CALL 0x00001c20
000085e3(3): NOP dword ptr [RAX]
000085e6(10): NOP word ptr CS:[RAX + RAX*0x1]
000085f0(2): PUSH R15
000085f2(2): PUSH R14
000085f4(3): MOV R14,RDI
000085f7(2): PUSH R13
000085f9(2): PUSH R12
000085fb(1): PUSH RBP
000085fc(1): PUSH RBX
000085fd(7): SUB RSP,0xa8
00008604(4): MOV RBX,qword ptr [RDI + 0x58]
00008608(4): MOV R15,qword ptr [RDI + 0x30]
0000860c(9): MOV RAX,qword ptr FS:[0x28]
00008615(8): MOV qword ptr [0x98 + RSP],RAX
0000861d(2): XOR EAX,EAX
0000861f(4): CMP qword ptr [RDI + 0x40],RBX
00008623(5): CMOVLE RBX,qword ptr [RDI + 0x40]
00008628(7): CMP byte ptr [0x8a + RDI],0x0
0000862f(2): JNZ 0x0000863c
00008631(5): CMP qword ptr [RDI + 0x78],0x0
00008636(6): JZ 0x000087c0
0000863c(4): MOV R13,qword ptr [R14 + 0x38]
00008640(3): CMP R15,RBX
00008643(2): JL 0x00008680
00008645(4): MOV qword ptr [R14 + 0x30],R15
00008649(4): MOV qword ptr [R14 + 0x38],R13
0000864d(2): XOR EAX,EAX
0000864f(8): MOV RCX,qword ptr [0x98 + RSP]
00008657(9): XOR RCX,qword ptr FS:[0x28]
00008660(6): JNZ 0x00008bea
00008666(7): ADD RSP,0xa8
0000866d(1): POP RBX
0000866e(1): POP RBP
0000866f(2): POP R12
00008671(2): POP R13
00008673(2): POP R14
00008675(2): POP R15
00008677(1): RET
00008680(4): LEA RAX,[R14 + 0x20]
00008684(5): MOV qword ptr [RSP + 0x8],RAX
00008689(3): MOV RAX,RBX
0000868c(3): SUB RAX,R15
0000868f(5): MOV qword ptr [RSP + 0x10],RAX
00008694(5): LEA RAX,[RSP + 0x44]
00008699(5): MOV qword ptr [RSP + 0x20],RAX
0000869e(4): MOV RDX,qword ptr [R14 + 0x78]
000086a2(4): MOV RAX,qword ptr [R14 + 0x20]
000086a6(3): TEST RDX,RDX
000086a9(5): MOV qword ptr [RSP + 0x48],RAX
000086ae(6): JNZ 0x000089b9
000086b4(4): MOV RBP,qword ptr [R14 + 0x28]
000086b8(3): ADD RBP,R13
000086bb(3): ADD RBP,qword ptr [R14]
000086be(5): MOV qword ptr [RSP + 0x18],RBP
000086c3(5): MOV RCX,qword ptr [RSP + 0x8]
000086c8(5): MOV RDX,qword ptr [RSP + 0x10]
000086cd(5): MOV RSI,qword ptr [RSP + 0x18]
000086d2(5): MOV RDI,qword ptr [RSP + 0x20]
000086d7(5): CALL 0x00007b30
000086dc(3): MOV RBP,RAX
000086df(4): LEA RAX,[RAX + -0x1]
000086e3(4): CMP RAX,-0x4
000086e7(5): MOV qword ptr [RSP + 0x20],RAX
000086ec(6): JA 0x00008a29
000086f2(4): MOV EDX,dword ptr [RSP + 0x44]
000086f6(2): MOV EDI,EDX
000086f8(4): MOV dword ptr [RSP + 0x10],EDX
000086fc(5): CALL 0x00001eb0
00008701(4): MOV EDX,dword ptr [RSP + 0x10]
00008705(3): MOV R12D,EAX
00008708(5): MOV qword ptr [RSP + 0x8],R15
0000870d(2): CMP EDX,EAX
0000870f(6): JZ 0x00008a10
00008715(5): LEA RCX,[RSP + 0x50]
0000871a(5): LEA RDX,[RSP + 0x48]
0000871f(2): MOV ESI,EAX
00008721(3): MOV RDI,RCX
00008724(5): MOV qword ptr [RSP + 0x10],RCX
00008729(5): CALL 0x00001db0
0000872e(3): CMP RBP,RAX
00008731(3): MOV R11,RAX
00008734(5): MOV RCX,qword ptr [RSP + 0x10]
00008739(6): JNZ 0x00008ac6
0000873f(4): MOV RDI,qword ptr [R14 + 0x8]
00008743(3): MOV RDX,RBP
00008746(3): MOV RSI,RCX
00008749(3): ADD RDI,R15
0000874c(5): CALL 0x00001d70
00008751(8): CMP byte ptr [0x8c + R14],0x0
00008759(5): LEA RAX,[RBP + R13*0x1]
0000875e(6): JNZ 0x00008a95
00008764(4): ADD R15,0x1
00008768(5): MOV RSI,qword ptr [RSP + 0x8]
0000876d(4): MOV RDX,qword ptr [R14 + 0x10]
00008771(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
00008776(3): MOV R13,RAX
00008779(3): CMP R15,RCX
0000877c(8): LEA RAX,[RSI*0x4]
00008784(4): MOV dword ptr [RDX + RSI*0x4],R12D
00008788(6): JGE 0x00008640
0000878e(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
00008793(4): LEA RDX,[RDX + RCX*0x4]
00008797(9): NOP word ptr [RAX + RAX*0x1]
000087a0(6): MOV dword ptr [RAX],0xffffffff
000087a6(4): ADD RAX,0x4
000087aa(3): CMP RDX,RAX
000087ad(2): JNZ 0x000087a0
000087af(3): MOV R15,RCX
000087b2(5): JMP 0x00008640
000087c0(7): CMP byte ptr [0x8c + RDI],0x0
000087c7(6): JNZ 0x0000863c
000087cd(3): CMP R15,RBX
000087d0(6): JGE 0x00008968
000087d6(4): LEA RAX,[RDI + 0x20]
000087da(5): MOV qword ptr [RSP + 0x8],RAX
000087df(5): LEA RAX,[RSP + 0x44]
000087e4(5): MOV qword ptr [RSP + 0x30],RAX
000087e9(5): LEA RAX,[RSP + 0x48]
000087ee(5): MOV qword ptr [RSP + 0x38],RAX
000087f3(5): LEA RAX,[RSP + 0x50]
000087f8(5): MOV qword ptr [RSP + 0x28],RAX
000087fd(3): NOP dword ptr [RAX]
00008800(4): MOV RBP,qword ptr [R14 + 0x28]
00008804(3): MOV R13,R15
00008807(3): ADD RBP,R15
0000880a(3): ADD RBP,qword ptr [R14]
0000880d(5): MOVZX R12D,byte ptr [RBP]
00008812(4): TEST R12B,0x80
00008816(2): JNZ 0x0000882a
00008818(5): MOV RDI,qword ptr [RSP + 0x8]
0000881d(5): CALL 0x00001f10
00008822(2): TEST EAX,EAX
00008824(6): JNZ 0x00008918
0000882a(4): MOV RAX,qword ptr [R14 + 0x20]
0000882e(5): MOV RDI,qword ptr [RSP + 0x30]
00008833(3): MOV RDX,RBX
00008836(5): MOV RCX,qword ptr [RSP + 0x8]
0000883b(3): SUB RDX,R15
0000883e(3): MOV RSI,RBP
00008841(5): MOV qword ptr [RSP + 0x10],RDX
00008846(5): MOV qword ptr [RSP + 0x48],RAX
0000884b(5): MOV qword ptr [RSP + 0x20],RDI
00008850(5): CALL 0x00007b30
00008855(3): MOV RBP,RAX
00008858(4): LEA RAX,[RAX + -0x1]
0000885c(4): CMP RAX,-0x4
00008860(6): JA 0x00008948
00008866(4): MOV EDX,dword ptr [RSP + 0x44]
0000886a(2): MOV EDI,EDX
0000886c(4): MOV dword ptr [RSP + 0x18],EDX
00008870(5): CALL 0x00001eb0
00008875(4): MOV EDX,dword ptr [RSP + 0x18]
00008879(3): MOV R12D,EAX
0000887c(2): CMP EDX,EAX
0000887e(2): JZ 0x000088f8
00008880(5): MOV RDX,qword ptr [RSP + 0x38]
00008885(5): MOV RDI,qword ptr [RSP + 0x28]
0000888a(2): MOV ESI,EAX
0000888c(5): CALL 0x00001db0
00008891(3): CMP RBP,RAX
00008894(6): JNZ 0x00008a08
0000889a(4): MOV RDI,qword ptr [R14 + 0x8]
0000889e(5): MOV RSI,qword ptr [RSP + 0x28]
000088a3(3): MOV RDX,RBP
000088a6(3): ADD RDI,R15
000088a9(5): CALL 0x00001d70
000088ae(4): ADD R15,0x1
000088b2(4): MOV RDX,qword ptr [R14 + 0x10]
000088b6(8): LEA RAX,[R13*0x4]
000088be(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
000088c3(3): CMP R15,RCX
000088c6(4): MOV dword ptr [RDX + R13*0x4],R12D
000088ca(2): JGE 0x000088ea
000088cc(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
000088d1(4): LEA RDX,[RDX + RCX*0x4]
000088d5(3): NOP dword ptr [RAX]
000088d8(6): MOV dword ptr [RAX],0xffffffff
000088de(4): ADD RAX,0x4
000088e2(3): CMP RDX,RAX
000088e5(2): JNZ 0x000088d8
000088e7(3): MOV R15,RCX
000088ea(3): CMP RBX,R15
000088ed(6): JG 0x00008800
000088f3(2): JMP 0x00008968
000088f8(4): MOV RSI,qword ptr [R14 + 0x28]
000088fc(4): MOV RDI,qword ptr [R14 + 0x8]
00008900(3): MOV RDX,RBP
00008903(3): ADD RSI,R15
00008906(3): ADD RSI,qword ptr [R14]
00008909(3): ADD RDI,R15
0000890c(5): CALL 0x00001d70
00008911(2): JMP 0x000088ae
00008918(5): CALL 0x00001ac0
0000891d(3): MOV RAX,qword ptr [RAX]
00008920(4): MOV RDX,qword ptr [R14 + 0x8]
00008924(4): MOV EAX,dword ptr [RAX + R12*0x4]
00008928(4): MOV byte ptr [RDX + R15*0x1],AL
0000892c(4): MOV RDX,qword ptr [R14 + 0x8]
00008930(4): MOV RAX,qword ptr [R14 + 0x10]
00008934(5): MOVZX EDX,byte ptr [RDX + R15*0x1]
00008939(4): MOV dword ptr [RAX + R15*0x4],EDX
0000893d(4): ADD R15,0x1
00008941(2): JMP 0x000088ea
00008948(4): CMP RAX,-0x3
0000894c(2): JNZ 0x00008980
0000894e(4): MOV RAX,qword ptr [R14 + 0x58]
00008952(4): CMP qword ptr [R14 + 0x40],RAX
00008956(2): JGE 0x00008980
00008958(5): MOV RAX,qword ptr [RSP + 0x48]
0000895d(4): MOV qword ptr [R14 + 0x20],RAX
00008961(7): NOP dword ptr [RAX]
00008968(4): MOV qword ptr [R14 + 0x30],R15
0000896c(4): MOV qword ptr [R14 + 0x38],R15
00008970(2): XOR EAX,EAX
00008972(5): JMP 0x0000864f
00008980(3): MOV RAX,qword ptr [R14]
00008983(4): MOV RDX,qword ptr [R14 + 0x8]
00008987(3): ADD RAX,R15
0000898a(4): ADD RAX,qword ptr [R14 + 0x28]
0000898e(3): MOVZX EAX,byte ptr [RAX]
00008991(4): MOV byte ptr [RDX + R15*0x1],AL
00008995(4): MOV RDX,qword ptr [R14 + 0x10]
00008999(4): ADD R15,0x1
0000899d(4): CMP RBP,-0x1
000089a1(4): MOV dword ptr [RDX + R13*0x4],EAX
000089a5(6): JNZ 0x000088ea
000089ab(5): MOV RAX,qword ptr [RSP + 0x48]
000089b0(4): MOV qword ptr [R14 + 0x20],RAX
000089b4(5): JMP 0x000088ea
000089b9(7): MOV EAX,dword ptr [0x90 + R14]
000089c0(2): TEST EAX,EAX
000089c2(6): JLE 0x00008be0
000089c8(4): MOV RDI,qword ptr [R14 + 0x28]
000089cc(4): LEA R11D,[RAX + -0x1]
000089d0(5): LEA RCX,[RSP + 0x50]
000089d5(2): XOR EAX,EAX
000089d7(3): ADD RDI,R13
000089da(3): ADD RDI,qword ptr [R14]
000089dd(2): JMP 0x000089ea
000089df(4): ADD RAX,0x1
000089e3(5): CMP qword ptr [RSP + 0x10],RAX
000089e8(2): JZ 0x000089fb
000089ea(4): MOVZX ESI,byte ptr [RDI + RAX*0x1]
000089ee(3): CMP R11,RAX
000089f1(4): MOVZX ESI,byte ptr [RDX + RSI*0x1]
000089f5(4): MOV byte ptr [RCX + RAX*0x1],SIL
000089f9(2): JNZ 0x000089df
000089fb(5): MOV qword ptr [RSP + 0x18],RCX
00008a00(5): JMP 0x000086c3
00008a08(3): MOV R13,R15
00008a0b(5): JMP 0x0000869e
00008a10(4): MOV RDI,qword ptr [R14 + 0x8]
00008a14(5): MOV RSI,qword ptr [RSP + 0x18]
00008a19(3): MOV RDX,RBP
00008a1c(3): ADD RDI,R15
00008a1f(5): CALL 0x00001d70
00008a24(5): JMP 0x00008751
00008a29(6): CMP qword ptr [RSP + 0x20],-0x3
00008a2f(2): JNZ 0x00008a3b
00008a31(4): MOV RAX,qword ptr [R14 + 0x58]
00008a35(4): CMP qword ptr [R14 + 0x40],RAX
00008a39(2): JL 0x00008ab8
00008a3b(3): MOV RAX,qword ptr [R14]
00008a3e(4): MOV RDX,qword ptr [R14 + 0x78]
00008a42(3): ADD RAX,R13
00008a45(4): ADD RAX,qword ptr [R14 + 0x28]
00008a49(3): TEST RDX,RDX
00008a4c(3): MOVZX EAX,byte ptr [RAX]
00008a4f(6): JNZ 0x00008bfc
00008a55(4): MOV RDX,qword ptr [R14 + 0x8]
00008a59(3): MOV RCX,R15
00008a5c(4): MOV byte ptr [RDX + R15*0x1],AL
00008a60(8): CMP byte ptr [0x8c + R14],0x0
00008a68(6): JNZ 0x00008bef
00008a6e(4): MOV RDX,qword ptr [R14 + 0x10]
00008a72(4): ADD R13,0x1
00008a76(4): ADD R15,0x1
00008a7a(4): CMP RBP,-0x1
00008a7e(3): MOV dword ptr [RDX + RCX*0x4],EAX
00008a81(6): JNZ 0x00008640
00008a87(5): MOV RAX,qword ptr [RSP + 0x48]
00008a8c(4): MOV qword ptr [R14 + 0x20],RAX
00008a90(5): JMP 0x00008640
00008a95(4): MOV RDX,qword ptr [R14 + 0x18]
00008a99(3): MOV RCX,R15
00008a9c(3): MOV R10,R13
00008a9f(3): SUB RCX,R13
00008aa2(4): LEA RDX,[RDX + RCX*0x8]
00008aa6(4): MOV qword ptr [RDX + R10*0x8],R10
00008aaa(4): ADD R10,0x1
00008aae(3): CMP RAX,R10
00008ab1(2): JNZ 0x00008aa6
00008ab3(5): JMP 0x00008764
00008ab8(5): MOV RAX,qword ptr [RSP + 0x48]
00008abd(4): MOV qword ptr [R14 + 0x20],RAX
00008ac1(5): JMP 0x00008645
00008ac6(4): CMP RAX,-0x1
00008aca(6): JZ 0x00008a10
00008ad0(4): LEA RAX,[RAX + R15*0x1]
00008ad4(3): MOV RSI,RAX
00008ad7(5): MOV qword ptr [RSP + 0x8],RAX
00008adc(4): MOV RAX,qword ptr [R14 + 0x40]
00008ae0(3): CMP RSI,RAX
00008ae3(2): JA 0x00008ab8
00008ae5(5): CMP qword ptr [R14 + 0x18],0x0
00008aea(6): JZ 0x00008ba8
00008af0(8): CMP byte ptr [0x8c + R14],0x0
00008af8(2): JNZ 0x00008b1a
00008afa(3): TEST R15,R15
00008afd(2): JZ 0x00008b12
00008aff(4): MOV RDX,qword ptr [R14 + 0x18]
00008b03(2): XOR EAX,EAX
00008b05(4): MOV qword ptr [RDX + RAX*0x8],RAX
00008b09(4): ADD RAX,0x1
00008b0d(3): CMP RAX,R15
00008b10(2): JNZ 0x00008b05
00008b12(8): MOV byte ptr [0x8c + R14],0x1
00008b1a(4): MOV RDI,qword ptr [R14 + 0x8]
00008b1e(3): MOV RSI,RCX
00008b21(3): MOV RDX,R11
00008b24(5): MOV qword ptr [RSP + 0x10],R11
00008b29(3): ADD RDI,R15
00008b2c(5): CALL 0x00001d70
00008b31(4): MOV RAX,qword ptr [R14 + 0x10]
00008b35(5): MOV R11,qword ptr [RSP + 0x10]
00008b3a(4): LEA RCX,[RAX + R15*0x4]
00008b3e(4): MOV RAX,qword ptr [R14 + 0x18]
00008b42(4): CMP R11,0x1
00008b46(3): MOV dword ptr [RCX],R12D
00008b49(4): LEA RSI,[RAX + R15*0x8]
00008b4d(3): MOV qword ptr [RSI],R13
00008b50(2): JBE 0x00008b7a
00008b52(5): MOV EAX,0x1
00008b57(5): MOV RDX,qword ptr [RSP + 0x20]
00008b5c(3): CMP RAX,RBP
00008b5f(4): CMOVC RDX,RAX
00008b63(3): ADD RDX,R13
00008b66(4): MOV qword ptr [RSI + RAX*0x8],RDX
00008b6a(7): MOV dword ptr [RCX + RAX*0x4],0xffffffff
00008b71(4): ADD RAX,0x1
00008b75(3): CMP RAX,R11
00008b78(2): JNZ 0x00008b57
00008b7a(4): MOV RBX,qword ptr [R14 + 0x58]
00008b7e(3): SUB R11,RBP
00008b81(3): ADD RBX,R11
00008b84(4): CMP R13,qword ptr [R14 + 0x60]
00008b88(4): MOV qword ptr [R14 + 0x58],RBX
00008b8c(2): JGE 0x00008b92
00008b8e(4): ADD qword ptr [R14 + 0x68],R11
00008b92(4): CMP qword ptr [R14 + 0x40],RBX
00008b96(5): MOV R15,qword ptr [RSP + 0x8]
00008b9b(5): CMOVLE RBX,qword ptr [R14 + 0x40]
00008ba0(3): ADD R13,RBP
00008ba3(5): JMP 0x00008640
00008ba8(8): LEA RDI,[RAX*0x8]
00008bb0(5): MOV qword ptr [RSP + 0x18],RCX
00008bb5(5): MOV qword ptr [RSP + 0x10],R11
00008bba(5): CALL 0x00001da0
00008bbf(3): TEST RAX,RAX
00008bc2(4): MOV qword ptr [R14 + 0x18],RAX
00008bc6(5): MOV R11,qword ptr [RSP + 0x10]
00008bcb(5): MOV RCX,qword ptr [RSP + 0x18]
00008bd0(6): JNZ 0x00008af0
00008bd6(5): MOV EAX,0xc
00008bdb(5): JMP 0x0000864f
00008be0(5): LEA RCX,[RSP + 0x50]
00008be5(5): JMP 0x000089fb
00008bea(5): CALL 0x00001c20
00008bef(4): MOV RDX,qword ptr [R14 + 0x18]
00008bf3(4): MOV qword ptr [RDX + R15*0x8],R13
00008bf7(5): JMP 0x00008a6e
00008bfc(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
00008c00(5): JMP 0x00008a55
00008c10(1): PUSH RBP
00008c11(1): PUSH RBX
00008c12(10): MOV RDX,0xffffffffffffffe
00008c1c(4): SUB RSP,0x8
00008c20(4): MOV RAX,qword ptr [RDI + 0x40]
00008c24(3): CMP RAX,RDX
00008c27(6): JA 0x00008d38
00008c2d(4): MOV RDX,qword ptr [RDI + 0x58]
00008c31(3): ADD RAX,RAX
00008c34(3): MOVSXD RSI,ESI
00008c37(3): MOV RBX,RDI
00008c3a(3): CMP RAX,RDX
00008c3d(4): CMOVG RAX,RDX
00008c41(3): CMP RAX,RSI
00008c44(4): CMOVGE RSI,RAX
00008c48(5): CALL 0x00008080
00008c4d(2): TEST EAX,EAX
00008c4f(2): MOV EBP,EAX
00008c51(6): JNZ 0x00008d0d
00008c57(7): MOV RDI,qword ptr [0xb8 + RBX]
00008c5e(3): TEST RDI,RDI
00008c61(2): JZ 0x00008c84
00008c63(4): MOV RAX,qword ptr [RBX + 0x40]
00008c67(8): LEA RSI,[0x8 + RAX*0x8]
00008c6f(5): CALL 0x00001e00
00008c74(3): TEST RAX,RAX
00008c77(6): JZ 0x00008d38
00008c7d(7): MOV qword ptr [0xb8 + RBX],RAX
00008c84(7): CMP byte ptr [0x88 + RBX],0x0
00008c8b(6): MOV EAX,dword ptr [0x90 + RBX]
00008c91(2): JZ 0x00008cb0
00008c93(3): CMP EAX,0x1
00008c96(3): MOV RDI,RBX
00008c99(6): JLE 0x00008d50
00008c9f(4): ADD RSP,0x8
00008ca3(1): POP RBX
00008ca4(1): POP RBP
00008ca5(5): JMP 0x000085f0
00008cb0(3): CMP EAX,0x1
00008cb3(2): JG 0x00008d20
00008cb5(4): MOV RCX,qword ptr [RBX + 0x78]
00008cb9(3): TEST RCX,RCX
00008cbc(2): JZ 0x00008d0d
00008cbe(4): MOV RSI,qword ptr [RBX + 0x58]
00008cc2(4): CMP qword ptr [RBX + 0x40],RSI
00008cc6(5): CMOVLE RSI,qword ptr [RBX + 0x40]
00008ccb(4): MOV RAX,qword ptr [RBX + 0x30]
00008ccf(3): CMP RSI,RAX
00008cd2(2): JG 0x00008ce4
00008cd4(2): JMP 0x00008d05
00008ce0(4): MOV RCX,qword ptr [RBX + 0x78]
00008ce4(3): MOV RDX,qword ptr [RBX]
00008ce7(3): ADD RDX,RAX
00008cea(4): ADD RDX,qword ptr [RBX + 0x28]
00008cee(3): MOVZX EDX,byte ptr [RDX]
00008cf1(4): MOVZX ECX,byte ptr [RCX + RDX*0x1]
00008cf5(4): MOV RDX,qword ptr [RBX + 0x8]
00008cf9(3): MOV byte ptr [RDX + RAX*0x1],CL
00008cfc(4): ADD RAX,0x1
00008d00(3): CMP RSI,RAX
00008d03(2): JNZ 0x00008ce0
00008d05(4): MOV qword ptr [RBX + 0x30],RAX
00008d09(4): MOV qword ptr [RBX + 0x38],RAX
00008d0d(4): ADD RSP,0x8
00008d11(2): MOV EAX,EBP
00008d13(1): POP RBX
00008d14(1): POP RBP
00008d15(1): RET
00008d20(3): MOV RDI,RBX
00008d23(5): CALL 0x00008420
00008d28(4): ADD RSP,0x8
00008d2c(2): MOV EAX,EBP
00008d2e(1): POP RBX
00008d2f(1): POP RBP
00008d30(1): RET
00008d38(5): MOV EBP,0xc
00008d3d(4): ADD RSP,0x8
00008d41(2): MOV EAX,EBP
00008d43(1): POP RBX
00008d44(1): POP RBP
00008d45(1): RET
00008d50(5): CALL 0x000083b0
00008d55(4): ADD RSP,0x8
00008d59(2): MOV EAX,EBP
00008d5b(1): POP RBX
00008d5c(1): POP RBP
00008d5d(1): RET
00008d60(2): PUSH R12
00008d62(1): PUSH RBP
00008d63(3): MOV RBP,RSI
00008d66(1): PUSH RBX
00008d67(4): MOV RAX,qword ptr [RDI + 0x40]
00008d6b(3): MOV RBX,RDI
00008d6e(7): MOV R12,qword ptr [0xc0 + RDI]
00008d75(3): CMP RAX,RSI
00008d78(2): JG 0x00008da0
00008d7a(4): CMP RAX,qword ptr [RDI + 0x58]
00008d7e(2): JGE 0x00008da0
00008d80(3): LEA ESI,[RBP + 0x1]
00008d83(3): MOV RDI,RBX
00008d86(5): CALL 0x00008c10
00008d8b(2): TEST EAX,EAX
00008d8d(2): JNZ 0x00008d96
00008d8f(3): CMP R12,RBP
00008d92(2): JL 0x00008dc0
00008d94(2): XOR EAX,EAX
00008d96(1): POP RBX
00008d97(1): POP RBP
00008d98(2): POP R12
00008d9a(1): RET
00008da0(4): MOV RAX,qword ptr [RBX + 0x30]
00008da4(3): CMP RAX,RBP
00008da7(2): JG 0x00008d8f
00008da9(4): CMP RAX,qword ptr [RBX + 0x58]
00008dad(2): JGE 0x00008d8f
00008daf(3): LEA ESI,[RBP + 0x1]
00008db2(3): MOV RDI,RBX
00008db5(5): CALL 0x00008c10
00008dba(2): TEST EAX,EAX
00008dbc(2): JZ 0x00008d8f
00008dbe(2): JMP 0x00008d96
00008dc0(7): MOV RAX,qword ptr [0xb8 + RBX]
00008dc7(3): MOV RDX,RBP
00008dca(2): XOR ESI,ESI
00008dcc(3): SUB RDX,R12
00008dcf(4): SHL RDX,0x3
00008dd3(5): LEA RDI,[RAX + R12*0x8 + 0x8]
00008dd8(5): CALL 0x00001cb0
00008ddd(7): MOV qword ptr [0xc0 + RBX],RBP
00008de4(2): JMP 0x00008d94
00008df0(1): PUSH RBX
00008df1(3): MOV RBX,RDI
00008df4(3): MOV RDI,qword ptr [RDI]
00008df7(5): CALL 0x00001b00
00008dfc(4): MOV RDI,qword ptr [RBX + 0x8]
00008e00(5): CALL 0x00001b00
00008e05(4): MOV RDI,qword ptr [RBX + 0x10]
00008e09(5): CALL 0x00001b00
00008e0e(4): MOV RDI,qword ptr [RBX + 0x18]
00008e12(5): CALL 0x00001b00
00008e17(3): MOV RDI,RBX
00008e1a(1): POP RBX
00008e1b(5): JMP 0x00001b00
00008e20(3): MOV EAX,dword ptr [RDI + 0x8]
00008e23(5): AND EAX,0x400ff
00008e28(3): CMP EAX,0x6
00008e2b(2): JZ 0x00008e40
00008e2d(3): CMP EAX,0x3
00008e30(2): JZ 0x00008e38
00008e32(2): RET
00008e38(3): MOV RDI,qword ptr [RDI]
00008e3b(5): JMP 0x00001b00
00008e40(3): MOV RDI,qword ptr [RDI]
00008e43(2): JMP 0x00008df0
00008e50(4): LEA RDI,[RSI + 0x28]
00008e54(4): SUB RSP,0x8
00008e58(5): CALL 0x00008e20
00008e5d(2): XOR EAX,EAX
00008e5f(4): ADD RSP,0x8
00008e63(1): RET
00008e70(2): PUSH R15
00008e72(2): PUSH R14
00008e74(3): MOV R14,RSI
00008e77(2): PUSH R13
00008e79(2): PUSH R12
00008e7b(1): PUSH RBP
00008e7c(1): PUSH RBX
00008e7d(3): MOV RBX,RDI
00008e80(4): SUB RSP,0x18
00008e84(4): MOV RSI,qword ptr [RDI + 0x10]
00008e88(4): MOV RBP,qword ptr [RDI + 0x8]
00008e8c(3): CMP RSI,RBP
00008e8f(6): JNC 0x00008f40
00008e95(4): MOV R12,qword ptr [RDI + 0x18]
00008e99(4): MOV RBP,qword ptr [RDI + 0x28]
00008e9d(3): MOV RAX,RSI
00008ea0(2): MOV ECX,EDX
00008ea2(4): SHL RAX,0x4
00008ea6(3): ADD RAX,qword ptr [RBX]
00008ea9(6): AND ECX,0xfffc00ff
00008eaf(4): MOV qword ptr [RAX + 0x8],RDX
00008eb3(3): MOV dword ptr [RAX + 0x8],ECX
00008eb6(2): XOR ECX,ECX
00008eb8(3): CMP DL,0x6
00008ebb(3): MOV qword ptr [RAX],R14
00008ebe(3): SETZ CL
00008ec1(3): CMP DL,0x5
00008ec4(2): JNZ 0x00008ed2
00008ec6(2): XOR ECX,ECX
00008ec8(7): CMP dword ptr [0xb4 + RBX],0x1
00008ecf(3): SETG CL
00008ed2(4): MOVZX EDX,byte ptr [RAX + 0xa]
00008ed6(3): SHL ECX,0x4
00008ed9(4): PXOR XMM0,XMM0
00008edd(3): AND EDX,0xffffffef
00008ee0(2): OR EDX,ECX
00008ee2(3): MOV byte ptr [RAX + 0xa],DL
00008ee5(8): MOV qword ptr [R12 + RSI*0x8],-0x1
00008eed(4): MOV RAX,qword ptr [RBX + 0x10]
00008ef1(4): LEA RAX,[RAX + RAX*0x2]
00008ef5(5): LEA RAX,[RBP + RAX*0x8]
00008efa(3): MOVUPS xmmword ptr [RAX],XMM0
00008efd(8): MOV qword ptr [RAX + 0x10],0x0
00008f05(4): MOV RAX,qword ptr [RBX + 0x10]
00008f09(4): LEA RDX,[RAX + RAX*0x2]
00008f0d(4): MOV RAX,qword ptr [RBX + 0x30]
00008f11(4): LEA RAX,[RAX + RDX*0x8]
00008f15(3): MOVUPS xmmword ptr [RAX],XMM0
00008f18(8): MOV qword ptr [RAX + 0x10],0x0
00008f20(4): MOV RAX,qword ptr [RBX + 0x10]
00008f24(4): LEA RDX,[RAX + 0x1]
00008f28(4): MOV qword ptr [RBX + 0x10],RDX
00008f2c(4): ADD RSP,0x18
00008f30(1): POP RBX
00008f31(1): POP RBP
00008f32(2): POP R12
00008f34(2): POP R13
00008f36(2): POP R14
00008f38(2): POP R15
00008f3a(1): RET
00008f40(5): LEA R13,[RBP + RBP*0x1]
00008f45(10): MOV RAX,0xaaaaaaaaaaaaaaa
00008f4f(3): CMP R13,RAX
00008f52(6): JA 0x00009032
00008f58(3): MOV RDI,qword ptr [RDI]
00008f5b(3): MOV RSI,RBP
00008f5e(5): MOV qword ptr [RSP + 0x8],RDX
00008f63(4): SHL RSI,0x5
00008f67(5): CALL 0x00001e00
00008f6c(3): TEST RAX,RAX
00008f6f(6): JZ 0x00009032
00008f75(3): MOV R15,RBP
00008f78(4): MOV RDI,qword ptr [RBX + 0x18]
00008f7c(3): MOV qword ptr [RBX],RAX
00008f7f(4): SHL R15,0x4
00008f83(3): MOV RSI,R15
00008f86(5): CALL 0x00001e00
00008f8b(4): MOV RDI,qword ptr [RBX + 0x20]
00008f8f(3): MOV RSI,R15
00008f92(5): LEA R15,[R13 + RBP*0x4]
00008f97(3): MOV R12,RAX
00008f9a(4): SHL R15,0x3
00008f9e(5): CALL 0x00001e00
00008fa3(4): MOV RDI,qword ptr [RBX + 0x28]
00008fa7(3): MOV RSI,R15
00008faa(4): MOV qword ptr [RSP],RAX
00008fae(5): CALL 0x00001e00
00008fb3(4): MOV RDI,qword ptr [RBX + 0x30]
00008fb7(3): MOV RSI,R15
00008fba(3): MOV RBP,RAX
00008fbd(5): CALL 0x00001e00
00008fc2(3): TEST R12,R12
00008fc5(4): MOV RCX,qword ptr [RSP]
00008fc9(2): JZ 0x00009000
00008fcb(3): TEST RCX,RCX
00008fce(2): JZ 0x00009000
00008fd0(3): TEST RBP,RBP
00008fd3(2): JZ 0x00009000
00008fd5(3): TEST RAX,RAX
00008fd8(5): MOV RDX,qword ptr [RSP + 0x8]
00008fdd(2): JZ 0x00009000
00008fdf(4): MOV qword ptr [RBX + 0x18],R12
00008fe3(4): MOV qword ptr [RBX + 0x20],RCX
00008fe7(4): MOV qword ptr [RBX + 0x28],RBP
00008feb(4): MOV qword ptr [RBX + 0x30],RAX
00008fef(4): MOV qword ptr [RBX + 0x8],R13
00008ff3(4): MOV RSI,qword ptr [RBX + 0x10]
00008ff7(5): JMP 0x00008e9d
00009000(3): MOV RDI,R12
00009003(5): MOV qword ptr [RSP + 0x8],RAX
00009008(4): MOV qword ptr [RSP],RCX
0000900c(5): CALL 0x00001b00
00009011(4): MOV RCX,qword ptr [RSP]
00009015(3): MOV RDI,RCX
00009018(5): CALL 0x00001b00
0000901d(3): MOV RDI,RBP
00009020(5): CALL 0x00001b00
00009025(5): MOV RAX,qword ptr [RSP + 0x8]
0000902a(3): MOV RDI,RAX
0000902d(5): CALL 0x00001b00
00009032(7): MOV RAX,-0x1
00009039(5): JMP 0x00008f2c
00009040(2): PUSH R13
00009042(2): PUSH R12
00009044(3): MOV R13,RSI
00009047(1): PUSH RBP
00009048(1): PUSH RBX
00009049(4): SHL R13,0x4
0000904d(3): MOV RBP,RSI
00009050(3): MOV R12D,EDX
00009053(3): MOV RBX,RDI
00009056(4): SUB RSP,0x8
0000905a(3): MOV RAX,qword ptr [RDI]
0000905d(4): MOV RSI,qword ptr [RAX + R13*0x1]
00009061(5): MOV RDX,qword ptr [RAX + R13*0x1 + 0x8]
00009066(5): CALL 0x00008e70
0000906b(4): CMP RAX,-0x1
0000906f(2): JZ 0x000090d4
00009071(3): MOV EDI,R12D
00009074(3): MOV R8,qword ptr [RBX]
00009077(3): MOV RSI,RAX
0000907a(5): AND DI,0x3ff
0000907f(4): SHL RSI,0x4
00009083(2): MOV ECX,EDI
00009085(6): AND ECX,0x3ff
0000908b(3): ADD RSI,R8
0000908e(3): SHL ECX,0x8
00009091(2): MOV EDX,ECX
00009093(3): MOV ECX,dword ptr [RSI + 0x8]
00009096(6): AND ECX,0xfffc00ff
0000909c(2): OR ECX,EDX
0000909e(3): MOV dword ptr [RSI + 0x8],ECX
000090a1(5): MOV EDX,dword ptr [R8 + R13*0x1 + 0x8]
000090a6(6): AND ECX,0xfffc00ff
000090ac(3): SHR EDX,0x8
000090af(2): OR EDX,EDI
000090b1(6): AND EDX,0x3ff
000090b7(3): SHL EDX,0x8
000090ba(2): OR EDX,ECX
000090bc(2): MOV ECX,EDX
000090be(3): MOV dword ptr [RSI + 0x8],EDX
000090c1(3): SHR ECX,0x10
000090c4(2): MOV EDX,ECX
000090c6(3): OR EDX,0x4
000090c9(3): MOV byte ptr [RSI + 0xa],DL
000090cc(4): MOV RDX,qword ptr [RBX + 0x20]
000090d0(4): MOV qword ptr [RDX + RAX*0x8],RBP
000090d4(4): ADD RSP,0x8
000090d8(1): POP RBX
000090d9(1): POP RBP
000090da(2): POP R12
000090dc(2): POP R13
000090de(1): RET
000090e0(2): PUSH R15
000090e2(2): PUSH R14
000090e4(3): MOV R9,RSI
000090e7(2): PUSH R13
000090e9(2): PUSH R12
000090eb(3): MOV R14,RDI
000090ee(1): PUSH RBP
000090ef(1): PUSH RBX
000090f0(3): MOV R13,RDX
000090f3(3): MOV EBP,R8D
000090f6(4): SUB RSP,0x18
000090fa(5): MOV qword ptr [RSP + 0x8],RCX
000090ff(3): MOV R8,qword ptr [R14]
00009102(3): MOV RAX,R9
00009105(4): MOV RDI,qword ptr [R14 + 0x28]
00009109(4): SHL RAX,0x4
0000910d(3): MOV R12,R13
00009110(3): ADD RAX,R8
00009113(4): CMP byte ptr [RAX + 0x8],0x4
00009117(6): JZ 0x000092d0
0000911d(4): LEA R12,[R9 + R9*0x2]
00009121(4): SHL R12,0x3
00009125(4): LEA RSI,[RDI + R12*0x1]
00009129(4): MOV RCX,qword ptr [RSI + 0x8]
0000912d(3): TEST RCX,RCX
00009130(6): JZ 0x00009329
00009136(5): LEA RBX,[R13 + R13*0x2]
0000913b(4): MOV RSI,qword ptr [RSI + 0x10]
0000913f(4): SHL RBX,0x3
00009143(3): ADD RDI,RBX
00009146(4): CMP RCX,0x1
0000914a(3): MOV R15,qword ptr [RSI]
0000914d(8): MOV qword ptr [RDI + 0x8],0x0
00009155(6): JZ 0x00009270
0000915b(4): MOV RDX,qword ptr [R14 + 0x10]
0000915f(4): LEA RSI,[RDX + -0x1]
00009163(3): MOV RAX,RSI
00009166(4): SHL RAX,0x4
0000916a(3): ADD RAX,R8
0000916d(4): TEST byte ptr [RAX + 0xa],0x4
00009171(6): JZ 0x00009220
00009177(3): TEST RSI,RSI
0000917a(6): JLE 0x00009220
00009180(4): SHL RDX,0x4
00009184(3): SUB R8,RAX
00009187(4): MOV RCX,qword ptr [R14 + 0x20]
0000918b(5): LEA R8,[R8 + RDX*0x1 + -0x20]
00009190(2): JMP 0x000091aa
00009198(3): ADD RAX,R8
0000919b(4): SUB RSI,0x1
0000919f(4): TEST byte ptr [RAX + 0xa],0x4
000091a3(2): JZ 0x00009220
000091a5(3): TEST RSI,RSI
000091a8(2): JLE 0x00009220
000091aa(4): CMP qword ptr [RCX + RSI*0x8],R15
000091ae(2): JNZ 0x00009198
000091b0(3): MOV EDX,dword ptr [RAX + 0x8]
000091b3(3): SHR EDX,0x8
000091b6(6): AND EDX,0x3ff
000091bc(2): CMP EBP,EDX
000091be(2): JNZ 0x00009198
000091c0(5): CALL 0x00008190
000091c5(2): TEST AL,AL
000091c7(2): JZ 0x0000920b
000091c9(4): MOV RAX,qword ptr [R14 + 0x28]
000091cd(2): MOV EDX,EBP
000091cf(3): MOV RDI,R14
000091d2(5): MOV RAX,qword ptr [RAX + R12*0x1 + 0x10]
000091d7(4): MOV R9,qword ptr [RAX + 0x8]
000091db(3): MOV RSI,R9
000091de(4): MOV qword ptr [RSP],R9
000091e2(5): CALL 0x00009040
000091e7(4): CMP RAX,-0x1
000091eb(3): MOV R13,RAX
000091ee(2): JZ 0x0000920b
000091f0(4): ADD RBX,qword ptr [R14 + 0x28]
000091f4(3): MOV RSI,R13
000091f7(3): MOV RDI,RBX
000091fa(5): CALL 0x00008190
000091ff(2): TEST AL,AL
00009201(4): MOV R9,qword ptr [RSP]
00009205(6): JNZ 0x000090ff
0000920b(5): MOV EAX,0xc
00009210(4): ADD RSP,0x18
00009214(1): POP RBX
00009215(1): POP RBP
00009216(2): POP R12
00009218(2): POP R13
0000921a(2): POP R14
0000921c(2): POP R15
0000921e(1): RET
00009220(2): MOV EDX,EBP
00009222(3): MOV RSI,R15
00009225(3): MOV RDI,R14
00009228(5): CALL 0x00009040
0000922d(4): CMP RAX,-0x1
00009231(3): MOV R13,RAX
00009234(2): JZ 0x0000920b
00009236(4): MOV RDI,qword ptr [R14 + 0x28]
0000923a(3): MOV RSI,R13
0000923d(3): ADD RDI,RBX
00009240(5): CALL 0x00008190
00009245(2): TEST AL,AL
00009247(2): JZ 0x0000920b
00009249(5): MOV RCX,qword ptr [RSP + 0x8]
0000924e(3): MOV R8D,EBP
00009251(3): MOV RDX,R13
00009254(3): MOV RSI,R15
00009257(3): MOV RDI,R14
0000925a(5): CALL 0x000090e0
0000925f(2): TEST EAX,EAX
00009261(6): JZ 0x000091c9
00009267(2): JMP 0x00009210
00009270(5): CMP R9,qword ptr [RSP + 0x8]
00009275(2): JNZ 0x00009280
00009277(3): CMP R9,R13
0000927a(6): JNZ 0x0000933c
00009280(3): MOV EAX,dword ptr [RAX + 0x8]
00009283(3): MOV RSI,R15
00009286(3): MOV RDI,R14
00009289(3): SHR EAX,0x8
0000928c(5): AND EAX,0x3ff
00009291(2): OR EBP,EAX
00009293(2): MOV EDX,EBP
00009295(5): CALL 0x00009040
0000929a(4): CMP RAX,-0x1
0000929e(3): MOV R13,RAX
000092a1(6): JZ 0x0000920b
000092a7(4): ADD RBX,qword ptr [R14 + 0x28]
000092ab(3): MOV RSI,RAX
000092ae(3): MOV RDI,RBX
000092b1(5): CALL 0x00008190
000092b6(2): TEST AL,AL
000092b8(6): JZ 0x0000920b
000092be(3): MOV R9,R15
000092c1(5): JMP 0x000090ff
000092d0(4): MOV RAX,qword ptr [R14 + 0x18]
000092d4(5): LEA RBX,[R13 + R13*0x2]
000092d9(8): LEA R15,[R9*0x8]
000092e1(2): MOV EDX,EBP
000092e3(4): SHL RBX,0x3
000092e7(4): MOV R9,qword ptr [RAX + R9*0x8]
000092eb(9): MOV qword ptr [RDI + RBX*0x1 + 0x8],0x0
000092f4(3): MOV RDI,R14
000092f7(3): MOV RSI,R9
000092fa(4): MOV qword ptr [RSP],R9
000092fe(5): CALL 0x00009040
00009303(4): CMP RAX,-0x1
00009307(3): MOV R13,RAX
0000930a(4): MOV R9,qword ptr [RSP]
0000930e(6): JZ 0x0000920b
00009314(4): MOV RAX,qword ptr [R14 + 0x18]
00009318(4): MOV qword ptr [RSP],R9
0000931c(4): MOV RCX,qword ptr [RAX + R15*0x1]
00009320(4): MOV qword ptr [RAX + R12*0x8],RCX
00009324(5): JMP 0x000091f0
00009329(4): MOV RAX,qword ptr [R14 + 0x18]
0000932d(4): MOV RCX,qword ptr [RAX + R9*0x8]
00009331(4): MOV qword ptr [RAX + R13*0x8],RCX
00009335(2): XOR EAX,EAX
00009337(5): JMP 0x00009210
0000933c(3): MOV RSI,R15
0000933f(5): CALL 0x00008190
00009344(2): MOV EDX,EAX
00009346(2): XOR EAX,EAX
00009348(2): TEST DL,DL
0000934a(6): JNZ 0x00009210
00009350(5): JMP 0x0000920b
00009360(1): PUSH RBX
00009361(3): MOV RBX,RDI
00009364(4): MOV RDI,qword ptr [RDI + 0x30]
00009368(5): CALL 0x00001b00
0000936d(4): MOV RDI,qword ptr [RBX + 0x48]
00009371(5): CALL 0x00001b00
00009376(4): MOV RAX,qword ptr [RBX + 0x50]
0000937a(4): LEA RDX,[RBX + 0x8]
0000937e(3): CMP RAX,RDX
00009381(2): JZ 0x00009395
00009383(4): MOV RDI,qword ptr [RAX + 0x10]
00009387(5): CALL 0x00001b00
0000938c(4): MOV RDI,qword ptr [RBX + 0x50]
00009390(5): CALL 0x00001b00
00009395(4): MOV RDI,qword ptr [RBX + 0x18]
00009399(5): CALL 0x00001b00
0000939e(4): MOV RDI,qword ptr [RBX + 0x60]
000093a2(5): CALL 0x00001b00
000093a7(4): MOV RDI,qword ptr [RBX + 0x58]
000093ab(5): CALL 0x00001b00
000093b0(3): MOV RDI,RBX
000093b3(1): POP RBX
000093b4(5): JMP 0x00001b00
000093c0(1): PUSH RBX
000093c1(3): MOV RBX,RDI
000093c4(4): MOV RDI,qword ptr [RDI + 0x10]
000093c8(5): CALL 0x00001b00
000093cd(4): MOV RDI,qword ptr [RBX + 0x18]
000093d1(5): CALL 0x00001b00
000093d6(7): CMP byte ptr [0x8b + RBX],0x0
000093dd(2): JNZ 0x000093e8
000093df(1): POP RBX
000093e0(1): RET
000093e8(4): MOV RDI,qword ptr [RBX + 0x8]
000093ec(1): POP RBX
000093ed(5): JMP 0x00001b00
00009400(2): PUSH R14
00009402(2): PUSH R13
00009404(2): PUSH R12
00009406(3): MOV R12,RDI
00009409(1): PUSH RBP
0000940a(1): PUSH RBX
0000940b(3): MOV RDI,qword ptr [RDI]
0000940e(3): TEST RDI,RDI
00009411(2): JZ 0x0000943e
00009413(6): CMP qword ptr [R12 + 0x10],0x0
00009419(2): JZ 0x0000943e
0000941b(2): XOR EBX,EBX
0000941d(2): JMP 0x00009424
00009420(4): MOV RDI,qword ptr [R12]
00009424(3): MOV RAX,RBX
00009427(4): ADD RBX,0x1
0000942b(4): SHL RAX,0x4
0000942f(3): ADD RDI,RAX
00009432(5): CALL 0x00008e20
00009437(5): CMP qword ptr [R12 + 0x10],RBX
0000943c(2): JA 0x00009420
0000943e(5): MOV RDI,qword ptr [R12 + 0x18]
00009443(5): CALL 0x00001b00
00009448(6): CMP qword ptr [R12 + 0x10],0x0
0000944e(2): JZ 0x000094a3
00009450(2): XOR EBX,EBX
00009452(2): XOR EBP,EBP
00009454(4): NOP dword ptr [RAX]
00009458(5): MOV RAX,qword ptr [R12 + 0x30]
0000945d(3): TEST RAX,RAX
00009460(2): JZ 0x0000946c
00009462(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
00009467(5): CALL 0x00001b00
0000946c(5): MOV RAX,qword ptr [R12 + 0x38]
00009471(3): TEST RAX,RAX
00009474(2): JZ 0x00009480
00009476(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000947b(5): CALL 0x00001b00
00009480(5): MOV RAX,qword ptr [R12 + 0x28]
00009485(3): TEST RAX,RAX
00009488(2): JZ 0x00009494
0000948a(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000948f(5): CALL 0x00001b00
00009494(4): ADD RBP,0x1
00009498(4): ADD RBX,0x18
0000949c(5): CMP qword ptr [R12 + 0x10],RBP
000094a1(2): JA 0x00009458
000094a3(5): MOV RDI,qword ptr [R12 + 0x28]
000094a8(5): CALL 0x00001b00
000094ad(5): MOV RDI,qword ptr [R12 + 0x30]
000094b2(5): CALL 0x00001b00
000094b7(5): MOV RDI,qword ptr [R12 + 0x38]
000094bc(5): CALL 0x00001b00
000094c1(4): MOV RDI,qword ptr [R12]
000094c5(5): CALL 0x00001b00
000094ca(5): MOV RDI,qword ptr [R12 + 0x40]
000094cf(3): TEST RDI,RDI
000094d2(2): JZ 0x00009527
000094d4(3): XOR R14D,R14D
000094d7(3): XOR R13D,R13D
000094da(6): NOP word ptr [RAX + RAX*0x1]
000094e0(4): LEA RBP,[RDI + R14*0x1]
000094e4(5): CMP qword ptr [RBP],0x0
000094e9(2): JLE 0x00009507
000094eb(2): XOR EBX,EBX
000094ed(3): NOP dword ptr [RAX]
000094f0(4): MOV RAX,qword ptr [RBP + 0x10]
000094f4(4): MOV RDI,qword ptr [RAX + RBX*0x8]
000094f8(4): ADD RBX,0x1
000094fc(5): CALL 0x00009360
00009501(4): CMP qword ptr [RBP],RBX
00009505(2): JG 0x000094f0
00009507(4): MOV RDI,qword ptr [RBP + 0x10]
0000950b(4): ADD R13,0x1
0000950f(4): ADD R14,0x18
00009513(5): CALL 0x00001b00
00009518(8): CMP qword ptr [0x88 + R12],R13
00009520(5): MOV RDI,qword ptr [R12 + 0x40]
00009525(2): JNC 0x000094e0
00009527(5): CALL 0x00001b00
0000952c(5): MOV RDI,qword ptr [R12 + 0x78]
00009531(7): LEA RAX,[0x17c40]
00009538(3): CMP RDI,RAX
0000953b(2): JZ 0x00009542
0000953d(5): CALL 0x00001b00
00009542(8): MOV RDI,qword ptr [0xe0 + R12]
0000954a(5): CALL 0x00001b00
0000954f(1): POP RBX
00009550(3): MOV RDI,R12
00009553(1): POP RBP
00009554(2): POP R12
00009556(2): POP R13
00009558(2): POP R14
0000955a(5): JMP 0x00001b00
00009560(2): PUSH R14
00009562(2): PUSH R13
00009564(3): MOV R14,RDI
00009567(2): PUSH R12
00009569(1): PUSH RBP
0000956a(1): PUSH RBX
0000956b(8): CMP qword ptr [0xe8 + RDI],0x0
00009573(6): JLE 0x000095f9
00009579(3): XOR R13D,R13D
0000957c(4): NOP dword ptr [RAX]
00009580(7): MOV RAX,qword ptr [0xf8 + R14]
00009587(4): MOV R12,qword ptr [RAX + R13*0x8]
0000958b(6): CMP qword ptr [R12 + 0x20],0x0
00009591(2): JLE 0x000095bd
00009593(2): XOR EBX,EBX
00009595(3): NOP dword ptr [RAX]
00009598(5): MOV RAX,qword ptr [R12 + 0x28]
0000959d(4): MOV RBP,qword ptr [RAX + RBX*0x8]
000095a1(4): ADD RBX,0x1
000095a5(4): MOV RDI,qword ptr [RBP + 0x20]
000095a9(5): CALL 0x00001b00
000095ae(3): MOV RDI,RBP
000095b1(5): CALL 0x00001b00
000095b6(5): CMP qword ptr [R12 + 0x20],RBX
000095bb(2): JG 0x00009598
000095bd(5): MOV RDI,qword ptr [R12 + 0x28]
000095c2(5): CALL 0x00001b00
000095c7(5): MOV RAX,qword ptr [R12 + 0x10]
000095cc(3): TEST RAX,RAX
000095cf(2): JZ 0x000095e4
000095d1(4): MOV RDI,qword ptr [RAX + 0x10]
000095d5(5): CALL 0x00001b00
000095da(5): MOV RDI,qword ptr [R12 + 0x10]
000095df(5): CALL 0x00001b00
000095e4(3): MOV RDI,R12
000095e7(4): ADD R13,0x1
000095eb(5): CALL 0x00001b00
000095f0(7): CMP qword ptr [0xe8 + R14],R13
000095f7(2): JG 0x00009580
000095f9(1): POP RBX
000095fa(11): MOV qword ptr [0xe8 + R14],0x0
00009605(11): MOV qword ptr [0xc8 + R14],0x0
00009610(1): POP RBP
00009611(2): POP R12
00009613(2): POP R13
00009615(2): POP R14
00009617(1): RET
00009620(4): MOV RCX,qword ptr [RDI + 0x30]
00009624(4): LEA RAX,[RSI + 0x1]
00009628(3): CMP RAX,RCX
0000962b(2): JGE 0x00009668
0000962d(4): MOV RDX,qword ptr [RDI + 0x10]
00009631(8): LEA RDI,[RAX*0x4]
00009639(4): CMP dword ptr [RDX + RAX*0x4],-0x1
0000963d(2): JNZ 0x00009668
0000963f(3): SUB RCX,RSI
00009642(5): LEA RSI,[RDX + RDI*0x1 + -0x4]
00009647(5): MOV EDX,0x2
0000964c(2): JMP 0x0000965b
00009650(4): ADD RDX,0x1
00009654(5): CMP dword ptr [RSI + RDX*0x4 + -0x4],-0x1
00009659(2): JNZ 0x0000966d
0000965b(3): CMP RDX,RCX
0000965e(2): MOV EAX,EDX
00009660(2): JNZ 0x00009650
00009662(2): RET
00009668(5): MOV EAX,0x1
0000966d(2): RET
00009670(4): MOV RDX,qword ptr [RDI + 0x8]
00009674(2): XOR EAX,EAX
00009676(4): CMP RDX,qword ptr [RSI + 0x8]
0000967a(2): JZ 0x00009680
0000967c(2): RET
00009680(4): LEA RAX,[RDX + -0x1]
00009684(8): LEA RDX,[RAX*0x8]
0000968c(2): JMP 0x000096ad
00009690(4): MOV RCX,qword ptr [RDI + 0x10]
00009694(4): MOV R8,qword ptr [RCX + RDX*0x1]
00009698(4): MOV RCX,qword ptr [RSI + 0x10]
0000969c(4): MOV RCX,qword ptr [RCX + RDX*0x1]
000096a0(4): SUB RDX,0x8
000096a4(3): CMP R8,RCX
000096a7(2): JNZ 0x000096c0
000096a9(4): SUB RAX,0x1
000096ad(3): TEST RAX,RAX
000096b0(2): JNS 0x00009690
000096b2(5): MOV EAX,0x1
000096b7(1): RET
000096c0(2): XOR EAX,EAX
000096c2(1): RET
000096d0(2): XOR EAX,EAX
000096d2(3): TEST RDI,RDI
000096d5(2): JLE 0x00009715
000096d7(3): MOV R8,qword ptr [RSI]
000096da(4): SUB RDI,0x1
000096de(2): XOR ESI,ESI
000096e0(3): CMP RSI,RDI
000096e3(2): JNC 0x0000970d
000096e5(4): LEA RCX,[RSI + RDI*0x1]
000096e9(3): SHR RCX,1
000096ec(4): CMP RDX,qword ptr [R8 + RCX*0x8]
000096f0(2): JLE 0x00009708
000096f2(2): JMP 0x00009720
000096f8(4): LEA RAX,[RSI + RCX*0x1]
000096fc(3): SHR RAX,1
000096ff(4): CMP qword ptr [R8 + RAX*0x8],RDX
00009703(2): JL 0x00009730
00009705(3): MOV RCX,RAX
00009708(3): CMP RSI,RCX
0000970b(2): JC 0x000096f8
0000970d(2): XOR EAX,EAX
0000970f(4): CMP RDX,qword ptr [R8 + RSI*0x8]
00009713(2): JZ 0x00009740
00009715(2): RET
00009720(3): MOV RAX,RCX
00009723(3): MOV RCX,RDI
00009726(10): NOP word ptr CS:[RAX + RAX*0x1]
00009730(4): LEA RSI,[RAX + 0x1]
00009734(3): MOV RDI,RCX
00009737(2): JMP 0x000096e0
00009740(4): LEA RAX,[RSI + 0x1]
00009744(1): RET
00009750(2): PUSH R15
00009752(2): PUSH R14
00009754(4): LEA R14,[RSI + 0x10]
00009758(2): PUSH R13
0000975a(2): PUSH R12
0000975c(3): MOV R15,RCX
0000975f(1): PUSH RBP
00009760(1): PUSH RBX
00009761(3): MOV R12,RDI
00009764(3): MOV RBP,RSI
00009767(3): MOV RBX,RDX
0000976a(3): MOV R13D,R8D
0000976d(4): SUB RSP,0x8
00009771(4): MOV RDI,qword ptr [RBP + 0x8]
00009775(3): MOV RDX,RBX
00009778(3): MOV RSI,R14
0000977b(5): CALL 0x000096d0
00009780(3): TEST RAX,RAX
00009783(2): JNZ 0x000097f0
00009785(3): MOV RAX,RBX
00009788(4): SHL RAX,0x4
0000978c(4): ADD RAX,qword ptr [R12]
00009790(4): MOVZX EDX,byte ptr [RAX + 0x8]
00009794(3): CMP EDX,R13D
00009797(2): JNZ 0x0000979e
00009799(3): CMP qword ptr [RAX],R15
0000979c(2): JZ 0x000097d8
0000979e(3): MOV RSI,RBX
000097a1(3): MOV RDI,RBP
000097a4(5): CALL 0x00008190
000097a9(2): TEST AL,AL
000097ab(2): JZ 0x00009808
000097ad(4): LEA RBX,[RBX + RBX*0x2]
000097b1(5): MOV RDX,qword ptr [R12 + 0x28]
000097b6(4): SHL RBX,0x3
000097ba(3): ADD RDX,RBX
000097bd(4): MOV RAX,qword ptr [RDX + 0x8]
000097c1(3): TEST RAX,RAX
000097c4(2): JZ 0x000097f0
000097c6(4): CMP RAX,0x2
000097ca(4): MOV RDX,qword ptr [RDX + 0x10]
000097ce(2): JZ 0x00009820
000097d0(3): MOV RBX,qword ptr [RDX]
000097d3(2): JMP 0x00009771
000097d8(4): CMP R13D,0x9
000097dc(2): JNZ 0x000097f0
000097de(3): MOV RSI,RBX
000097e1(3): MOV RDI,RBP
000097e4(5): CALL 0x00008190
000097e9(2): TEST AL,AL
000097eb(2): JZ 0x00009808
000097ed(3): NOP dword ptr [RAX]
000097f0(2): XOR EAX,EAX
000097f2(4): ADD RSP,0x8
000097f6(1): POP RBX
000097f7(1): POP RBP
000097f8(2): POP R12
000097fa(2): POP R13
000097fc(2): POP R14
000097fe(2): POP R15
00009800(1): RET
00009808(4): ADD RSP,0x8
0000980c(5): MOV EAX,0xc
00009811(1): POP RBX
00009812(1): POP RBP
00009813(2): POP R12
00009815(2): POP R13
00009817(2): POP R14
00009819(2): POP R15
0000981b(1): RET
00009820(4): MOV RDX,qword ptr [RDX + 0x8]
00009824(3): MOV R8D,R13D
00009827(3): MOV RCX,R15
0000982a(3): MOV RSI,RBP
0000982d(3): MOV RDI,R12
00009830(5): CALL 0x00009750
00009835(2): TEST EAX,EAX
00009837(2): JNZ 0x000097f2
00009839(5): MOV RAX,qword ptr [R12 + 0x28]
0000983e(5): MOV RDX,qword ptr [RAX + RBX*0x1 + 0x10]
00009843(2): JMP 0x000097d0
00009850(3): MOV RAX,qword ptr [RDI]
00009853(3): CMP RAX,RDX
00009856(2): JLE 0x00009882
00009858(4): SUB RAX,0x1
0000985c(3): CMP RDX,RAX
0000985f(3): MOV qword ptr [RDI],RAX
00009862(2): JGE 0x00009882
00009864(3): MOV RAX,qword ptr [RSI]
00009867(9): NOP word ptr [RAX + RAX*0x1]
00009870(5): MOV RCX,qword ptr [RAX + RDX*0x8 + 0x8]
00009875(4): MOV qword ptr [RAX + RDX*0x8],RCX
00009879(4): ADD RDX,0x1
0000987d(3): CMP RDX,qword ptr [RDI]
00009880(2): JL 0x00009870
00009882(2): RET
00009890(4): MOVZX EAX,byte ptr [RSI + 0x30]
00009894(2): CMP AL,0x4
00009896(2): JZ 0x000098f0
00009898(2): CMP AL,0x11
0000989a(2): JZ 0x000098a0
0000989c(2): XOR EAX,EAX
0000989e(1): RET
000098a0(4): MOV RAX,qword ptr [RSI + 0x8]
000098a4(3): TEST RAX,RAX
000098a7(2): JZ 0x0000989c
000098a9(4): CMP byte ptr [RAX + 0x30],0x11
000098ad(2): JNZ 0x0000989c
000098af(4): MOV RCX,qword ptr [RAX + 0x28]
000098b3(4): MOV RAX,qword ptr [RAX + 0x8]
000098b7(3): TEST RAX,RAX
000098ba(4): MOV qword ptr [RSI + 0x8],RAX
000098be(2): JZ 0x000098c3
000098c0(3): MOV qword ptr [RAX],RSI
000098c3(7): MOV RAX,qword ptr [0xe0 + RDI]
000098ca(4): MOV RDX,qword ptr [RSI + 0x28]
000098ce(4): CMP RCX,0x3f
000098d2(4): MOV RDX,qword ptr [RAX + RDX*0x8]
000098d6(4): MOV qword ptr [RAX + RCX*0x8],RDX
000098da(2): JG 0x0000989c
000098dc(7): MOV RAX,-0x2
000098e3(3): ROL RAX,CL
000098e6(7): AND qword ptr [0xa0 + RDI],RAX
000098ed(2): JMP 0x0000989c
000098f0(7): MOV RAX,qword ptr [0xe0 + RDI]
000098f7(3): TEST RAX,RAX
000098fa(2): JZ 0x0000989c
000098fc(4): MOVSXD RDX,dword ptr [RSI + 0x28]
00009900(4): MOV RCX,qword ptr [RAX + RDX*0x8]
00009904(5): MOV EAX,0x1
00009909(2): SHL EAX,CL
0000990b(4): MOV qword ptr [RSI + 0x28],RCX
0000990f(2): CDQE
00009911(7): OR qword ptr [0xa0 + RDI],RAX
00009918(2): XOR EAX,EAX
0000991a(1): RET
00009920(4): MOVZX EAX,byte ptr [RSI + 0x30]
00009924(4): MOV RDX,qword ptr [RSI + 0x8]
00009928(2): CMP AL,0xb
0000992a(2): JZ 0x00009970
0000992c(2): CMP AL,0x10
0000992e(2): JZ 0x00009958
00009930(3): TEST RDX,RDX
00009933(2): JZ 0x0000993d
00009935(4): MOV RAX,qword ptr [RSI + 0x20]
00009939(4): MOV qword ptr [RDX + 0x20],RAX
0000993d(4): MOV RAX,qword ptr [RSI + 0x10]
00009941(3): TEST RAX,RAX
00009944(2): JZ 0x0000994e
00009946(4): MOV RDX,qword ptr [RSI + 0x20]
0000994a(4): MOV qword ptr [RAX + 0x20],RDX
0000994e(2): XOR EAX,EAX
00009950(1): RET
00009958(4): MOV RAX,qword ptr [RSI + 0x10]
0000995c(4): MOV RCX,qword ptr [RAX + 0x18]
00009960(4): MOV qword ptr [RDX + 0x20],RCX
00009964(4): MOV RDX,qword ptr [RSI + 0x20]
00009968(4): MOV qword ptr [RAX + 0x20],RDX
0000996c(2): XOR EAX,EAX
0000996e(1): RET
00009970(4): MOV qword ptr [RDX + 0x20],RSI
00009974(2): XOR EAX,EAX
00009976(1): RET
00009980(2): PUSH R15
00009982(2): PUSH R14
00009984(2): PUSH R13
00009986(2): PUSH R12
00009988(1): PUSH RBP
00009989(1): PUSH RBX
0000998a(2): XOR EBX,EBX
0000998c(4): SUB RSP,0x48
00009990(7): MOV RAX,qword ptr [0x98 + RDI]
00009997(7): MOV R15,qword ptr [0xc8 + RDI]
0000999e(8): MOV R12,qword ptr [0x80 + RSP]
000099a6(5): MOV qword ptr [RSP + 0x8],RAX
000099ab(3): MOV RBP,R15
000099ae(3): CMP RBX,RBP
000099b1(2): JGE 0x00009a0b
000099b3(4): LEA RAX,[RBX + RBP*0x1]
000099b7(7): MOV R13,qword ptr [0xd8 + RDI]
000099be(3): MOV R10,RAX
000099c1(4): SHR R10,0x3f
000099c5(3): ADD R10,RAX
000099c8(3): SAR R10,1
000099cb(4): LEA RAX,[R10 + R10*0x4]
000099cf(5): CMP R8,qword ptr [R13 + RAX*0x8 + 0x8]
000099d4(2): JLE 0x00009a06
000099d6(5): JMP 0x00009b70
000099e0(4): LEA R11,[RBX + R10*0x1]
000099e4(3): MOV RAX,R11
000099e7(4): SHR RAX,0x3f
000099eb(3): ADD RAX,R11
000099ee(3): SAR RAX,1
000099f1(4): LEA R11,[RAX + RAX*0x4]
000099f5(3): MOV R14,RAX
000099f8(5): CMP qword ptr [R13 + R11*0x8 + 0x8],R8
000099fd(6): JL 0x00009b80
00009a03(3): MOV R10,RAX
00009a06(3): CMP RBX,R10
00009a09(2): JL 0x000099e0
00009a0b(3): CMP R15,RBX
00009a0e(6): JLE 0x00009bb0
00009a14(7): MOV R11,qword ptr [0xd8 + RDI]
00009a1b(4): LEA RAX,[RBX + RBX*0x4]
00009a1f(4): LEA RAX,[R11 + RAX*0x8]
00009a23(4): CMP R8,qword ptr [RAX + 0x8]
00009a27(7): MOV RAX,-0x1
00009a2e(4): CMOVNZ RBX,RAX
00009a32(3): MOV RAX,R15
00009a35(2): XOR EBP,EBP
00009a37(3): CMP RBP,RAX
00009a3a(2): JGE 0x00009a94
00009a3c(5): LEA R11,[RBP + RAX*0x1]
00009a41(3): MOV R10,R11
00009a44(4): SHR R10,0x3f
00009a48(3): ADD R10,R11
00009a4b(7): MOV R11,qword ptr [0xd8 + RDI]
00009a52(3): SAR R10,1
00009a55(4): LEA R13,[R10 + R10*0x4]
00009a59(5): CMP R12,qword ptr [R11 + R13*0x8 + 0x8]
00009a5e(2): JLE 0x00009a8f
00009a60(5): JMP 0x00009b90
00009a68(5): LEA R13,[RBP + R10*0x1]
00009a6d(3): MOV RAX,R13
00009a70(4): SHR RAX,0x3f
00009a74(3): ADD RAX,R13
00009a77(3): SAR RAX,1
00009a7a(4): LEA R13,[RAX + RAX*0x4]
00009a7e(3): MOV R14,RAX
00009a81(5): CMP qword ptr [R11 + R13*0x8 + 0x8],R12
00009a86(6): JL 0x00009ba0
00009a8c(3): MOV R10,RAX
00009a8f(3): CMP RBP,R10
00009a92(2): JL 0x00009a68
00009a94(3): CMP R15,RBP
00009a97(6): JLE 0x00009bc0
00009a9d(7): MOV R10,qword ptr [0xd8 + RDI]
00009aa4(5): LEA RAX,[RBP + RBP*0x4]
00009aa9(4): LEA RAX,[R10 + RAX*0x8]
00009aad(4): CMP R12,qword ptr [RAX + 0x8]
00009ab1(7): MOV RAX,-0x1
00009ab8(4): CMOVNZ RBP,RAX
00009abc(4): CMP qword ptr [RSI],0x0
00009ac0(6): JLE 0x00009be2
00009ac6(5): MOV qword ptr [RSP + 0x30],RBP
00009acb(5): MOV qword ptr [RSP + 0x20],R9
00009ad0(3): MOV R13,RDI
00009ad3(5): MOV qword ptr [RSP + 0x18],R8
00009ad8(5): MOV qword ptr [RSP + 0x10],RCX
00009add(3): XOR R14D,R14D
00009ae0(5): MOV qword ptr [RSP + 0x38],RSI
00009ae5(5): MOV qword ptr [RSP + 0x28],RBX
00009aea(3): MOV RBP,RDX
00009aed(3): MOV R15,R12
00009af0(4): MOV RAX,qword ptr [RBP]
00009af4(7): MOV RDX,qword ptr [0xd8 + R13]
00009afb(3): MOV RDI,R13
00009afe(5): MOV R9,qword ptr [RSP + 0x28]
00009b03(5): MOV R8,qword ptr [RSP + 0x18]
00009b08(5): MOV RCX,qword ptr [RSP + 0x10]
00009b0d(4): MOV RSI,qword ptr [RAX + R14*0x8]
00009b11(4): LEA RAX,[RSI + RSI*0x4]
00009b15(4): LEA RAX,[RDX + RAX*0x8]
00009b19(5): MOV RDX,qword ptr [RSP + 0x8]
00009b1e(3): MOV RAX,qword ptr [RAX]
00009b21(4): SHL RAX,0x4
00009b25(3): ADD RAX,qword ptr [RDX]
00009b28(3): MOV R12,qword ptr [RAX]
00009b2b(3): MOV RDX,R12
00009b2e(5): CALL 0x00007f40
00009b33(2): MOV EBX,EAX
00009b35(4): MOV RAX,qword ptr [RBP]
00009b39(5): MOV R9,qword ptr [RSP + 0x30]
00009b3e(5): MOV RCX,qword ptr [RSP + 0x20]
00009b43(3): MOV R8,R15
00009b46(3): MOV RDX,R12
00009b49(3): MOV RDI,R13
00009b4c(4): MOV RSI,qword ptr [RAX + R14*0x8]
00009b50(5): CALL 0x00007f40
00009b55(2): CMP EBX,EAX
00009b57(2): JZ 0x00009bd0
00009b59(5): MOV EAX,0x1
00009b5e(4): ADD RSP,0x48
00009b62(1): POP RBX
00009b63(1): POP RBP
00009b64(2): POP R12
00009b66(2): POP R13
00009b68(2): POP R14
00009b6a(2): POP R15
00009b6c(1): RET
00009b70(3): MOV R14,R10
00009b73(3): MOV R10,RBP
00009b76(10): NOP word ptr CS:[RAX + RAX*0x1]
00009b80(4): LEA RBX,[R14 + 0x1]
00009b84(3): MOV RBP,R10
00009b87(5): JMP 0x000099ae
00009b90(3): MOV R14,R10
00009b93(3): MOV R10,RAX
00009b96(10): NOP word ptr CS:[RAX + RAX*0x1]
00009ba0(4): LEA RBP,[R14 + 0x1]
00009ba4(3): MOV RAX,R10
00009ba7(5): JMP 0x00009a37
00009bb0(7): MOV RBX,-0x1
00009bb7(5): JMP 0x00009a32
00009bc0(7): MOV RBP,-0x1
00009bc7(5): JMP 0x00009abc
00009bd0(5): MOV RAX,qword ptr [RSP + 0x38]
00009bd5(4): ADD R14,0x1
00009bd9(3): CMP R14,qword ptr [RAX]
00009bdc(6): JL 0x00009af0
00009be2(2): XOR EAX,EAX
00009be4(5): JMP 0x00009b5e
00009bf0(3): TEST RSI,RSI
00009bf3(6): JZ 0x00009ce8
00009bf9(4): MOV RDX,qword ptr [RSI + 0x8]
00009bfd(3): TEST RDX,RDX
00009c00(6): JZ 0x00009ce8
00009c06(2): PUSH R12
00009c08(1): PUSH RBP
00009c09(3): MOV R12,RSI
00009c0c(1): PUSH RBX
00009c0d(4): MOV RAX,qword ptr [RDI + 0x8]
00009c11(3): MOV RBX,RDI
00009c14(3): MOV RSI,qword ptr [RDI]
00009c17(4): LEA RCX,[RAX + RDX*0x2]
00009c1b(3): CMP RSI,RCX
00009c1e(6): JL 0x00009d68
00009c24(3): TEST RAX,RAX
00009c27(6): JZ 0x00009da0
00009c2d(4): LEA RBP,[RAX + RDX*0x2]
00009c31(4): SUB RDX,0x1
00009c35(4): SUB RAX,0x1
00009c39(3): MOV RDI,RDX
00009c3c(3): NOT RDI
00009c3f(3): TEST RDI,RDI
00009c42(2): JNS 0x00009c80
00009c44(3): TEST RAX,RAX
00009c47(2): JS 0x00009c80
00009c49(4): MOV RCX,qword ptr [RBX + 0x10]
00009c4d(5): MOV RSI,qword ptr [R12 + 0x10]
00009c52(4): MOV RSI,qword ptr [RSI + RDX*0x8]
00009c56(4): CMP qword ptr [RCX + RAX*0x8],RSI
00009c5a(6): JZ 0x00009cf0
00009c60(6): JGE 0x00009d08
00009c66(4): SUB RDX,0x1
00009c6a(4): SUB RBP,0x1
00009c6e(3): MOV RDI,RDX
00009c71(4): MOV qword ptr [RCX + RBP*0x8],RSI
00009c75(3): NOT RDI
00009c78(3): TEST RDI,RDI
00009c7b(2): JS 0x00009c44
00009c7d(3): NOP dword ptr [RAX]
00009c80(3): TEST RDX,RDX
00009c83(6): JNS 0x00009d18
00009c89(4): MOV RCX,qword ptr [RBX + 0x8]
00009c8d(5): MOV RAX,qword ptr [R12 + 0x8]
00009c92(5): LEA R8,[RCX + RAX*0x2 + -0x1]
00009c97(3): MOV RDX,R8
00009c9a(3): SUB RDX,RBP
00009c9d(4): ADD RDX,0x1
00009ca1(2): JZ 0x00009cda
00009ca3(4): MOV RDI,qword ptr [RBX + 0x10]
00009ca7(4): LEA RAX,[RCX + -0x1]
00009cab(3): ADD RCX,RDX
00009cae(4): MOV qword ptr [RBX + 0x8],RCX
00009cb2(6): NOP word ptr [RAX + RAX*0x1]
00009cb8(4): MOV RSI,qword ptr [RDI + R8*0x8]
00009cbc(4): MOV RCX,qword ptr [RDI + RAX*0x8]
00009cc0(4): LEA R9,[RAX + RDX*0x1]
00009cc4(4): LEA R9,[RDI + R9*0x8]
00009cc8(3): CMP RSI,RCX
00009ccb(2): JLE 0x00009d40
00009ccd(4): SUB R8,0x1
00009cd1(4): SUB RDX,0x1
00009cd5(3): MOV qword ptr [R9],RSI
00009cd8(2): JNZ 0x00009cb8
00009cda(2): XOR EAX,EAX
00009cdc(1): POP RBX
00009cdd(1): POP RBP
00009cde(2): POP R12
00009ce0(1): RET
00009ce8(2): XOR EAX,EAX
00009cea(1): RET
00009cf0(4): SUB RDX,0x1
00009cf4(4): SUB RAX,0x1
00009cf8(3): MOV RDI,RDX
00009cfb(3): NOT RDI
00009cfe(5): JMP 0x00009c3f
00009d08(4): SUB RAX,0x1
00009d0c(5): JMP 0x00009c3f
00009d18(4): MOV RAX,qword ptr [RBX + 0x10]
00009d1c(4): ADD RDX,0x1
00009d20(5): MOV RSI,qword ptr [R12 + 0x10]
00009d25(3): SUB RBP,RDX
00009d28(4): SHL RDX,0x3
00009d2c(4): LEA RDI,[RAX + RBP*0x8]
00009d30(5): CALL 0x00001d70
00009d35(5): JMP 0x00009c89
00009d40(4): SUB RAX,0x1
00009d44(3): MOV qword ptr [R9],RCX
00009d47(6): JNS 0x00009cb8
00009d4d(4): LEA RSI,[RDI + RBP*0x8]
00009d51(4): SHL RDX,0x3
00009d55(5): CALL 0x00001d70
00009d5a(2): XOR EAX,EAX
00009d5c(5): JMP 0x00009cdc
00009d68(3): ADD RDX,RSI
00009d6b(4): MOV RDI,qword ptr [RDI + 0x10]
00009d6f(4): LEA RBP,[RDX + RDX*0x1]
00009d73(4): SHL RDX,0x4
00009d77(3): MOV RSI,RDX
00009d7a(5): CALL 0x00001e00
00009d7f(3): TEST RAX,RAX
00009d82(2): JZ 0x00009dc4
00009d84(4): MOV qword ptr [RBX + 0x10],RAX
00009d88(3): MOV qword ptr [RBX],RBP
00009d8b(4): MOV RAX,qword ptr [RBX + 0x8]
00009d8f(5): MOV RDX,qword ptr [R12 + 0x8]
00009d94(5): JMP 0x00009c24
00009da0(4): MOV qword ptr [RBX + 0x8],RDX
00009da4(5): MOV RAX,qword ptr [R12 + 0x8]
00009da9(4): MOV RDI,qword ptr [RBX + 0x10]
00009dad(5): MOV RSI,qword ptr [R12 + 0x10]
00009db2(8): LEA RDX,[RAX*0x8]
00009dba(5): CALL 0x00001d70
00009dbf(5): JMP 0x00009cda
00009dc4(5): MOV EAX,0xc
00009dc9(5): JMP 0x00009cdc
00009dd0(2): PUSH R15
00009dd2(2): PUSH R14
00009dd4(3): MOV R15,RSI
00009dd7(2): PUSH R13
00009dd9(2): PUSH R12
00009ddb(1): PUSH RBP
00009ddc(1): PUSH RBX
00009ddd(4): LEA RBX,[RDX + RDX*0x2]
00009de1(3): MOV RBP,RDX
00009de4(4): SUB RSP,0x68
00009de8(4): MOV R12,qword ptr [RSI + 0x28]
00009dec(4): SHL RBX,0x3
00009df0(9): MOV RAX,qword ptr FS:[0x28]
00009df9(5): MOV qword ptr [RSP + 0x58],RAX
00009dfe(2): XOR EAX,EAX
00009e00(5): MOV qword ptr [RSP + 0x10],RDI
00009e05(4): MOV dword ptr [RSP + 0x1c],ECX
00009e09(3): ADD R12,RBX
00009e0c(5): MOV RAX,qword ptr [R12 + 0x8]
00009e11(9): MOV qword ptr [RSP + 0x28],0x0
00009e1a(4): LEA RDI,[RAX + 0x1]
00009e1e(5): MOV qword ptr [RSP + 0x20],RDI
00009e23(4): SHL RDI,0x3
00009e27(5): CALL 0x00001da0
00009e2c(3): TEST RAX,RAX
00009e2f(5): MOV qword ptr [RSP + 0x30],RAX
00009e34(6): JZ 0x0000a070
00009e3a(4): MOV RAX,qword ptr [R15 + 0x30]
00009e3e(3): MOV RDX,qword ptr [R15]
00009e41(3): MOV R13,RBP
00009e44(4): SHL R13,0x4
00009e48(9): MOV qword ptr [RAX + RBX*0x1 + 0x8],-0x1
00009e51(4): LEA RAX,[RDX + R13*0x1]
00009e55(4): MOV R8D,dword ptr [RAX + 0x8]
00009e59(7): TEST R8D,0x3ff00
00009e60(6): JNZ 0x0000a000
00009e66(4): TEST byte ptr [RAX + 0x8],0x8
00009e6a(6): JZ 0x00009f30
00009e70(4): MOV RSI,qword ptr [R15 + 0x28]
00009e74(4): LEA RAX,[RSI + RBX*0x1]
00009e78(5): CMP qword ptr [RAX + 0x8],0x0
00009e7d(6): JLE 0x00009f30
00009e83(5): LEA RDX,[RSP + 0x20]
00009e88(5): MOV byte ptr [RSP + 0x1b],0x0
00009e8d(3): XOR R14D,R14D
00009e90(5): LEA R12,[RSP + 0x40]
00009e95(5): MOV qword ptr [RSP + 0x8],RDX
00009e9a(2): JMP 0x00009eb6
00009ea0(4): MOV RSI,qword ptr [R15 + 0x28]
00009ea4(4): ADD R14,0x1
00009ea8(4): LEA RAX,[RSI + RBX*0x1]
00009eac(4): CMP qword ptr [RAX + 0x8],R14
00009eb0(6): JLE 0x00009fb7
00009eb6(4): MOV RAX,qword ptr [RAX + 0x10]
00009eba(4): MOV RDX,qword ptr [RAX + R14*0x8]
00009ebe(4): MOV RAX,qword ptr [R15 + 0x30]
00009ec2(4): LEA R8,[RDX + RDX*0x2]
00009ec6(8): LEA R13,[R8*0x8]
00009ece(3): ADD RAX,R13
00009ed1(4): MOV RCX,qword ptr [RAX + 0x8]
00009ed5(4): CMP RCX,-0x1
00009ed9(6): JZ 0x00009fa0
00009edf(3): TEST RCX,RCX
00009ee2(6): JZ 0x0000a058
00009ee8(4): MOVDQU XMM0,xmmword ptr [RAX]
00009eec(5): MOVAPS xmmword ptr [RSP + 0x40],XMM0
00009ef1(4): MOV RAX,qword ptr [RAX + 0x10]
00009ef5(5): MOV qword ptr [RSP + 0x50],RAX
00009efa(5): MOV RDI,qword ptr [RSP + 0x8]
00009eff(3): MOV RSI,R12
00009f02(5): CALL 0x00009bf0
00009f07(2): TEST EAX,EAX
00009f09(2): JNZ 0x00009f76
00009f0b(4): MOV RAX,qword ptr [R15 + 0x30]
00009f0f(6): CMP qword ptr [RAX + R13*0x1 + 0x8],0x0
00009f15(2): JNZ 0x00009ea0
00009f17(5): MOV RDI,qword ptr [RSP + 0x50]
00009f1c(5): CALL 0x00001b00
00009f21(5): MOV byte ptr [RSP + 0x1b],0x1
00009f26(5): JMP 0x00009ea0
00009f30(5): LEA RDI,[RSP + 0x20]
00009f35(3): MOV RSI,RBP
00009f38(5): CALL 0x00008190
00009f3d(2): TEST AL,AL
00009f3f(6): JZ 0x0000a070
00009f45(4): MOV RAX,qword ptr [R15 + 0x30]
00009f49(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
00009f4f(4): MOVUPS xmmword ptr [RAX + RBX*0x1],XMM0
00009f53(5): MOV RDX,qword ptr [RSP + 0x30]
00009f58(5): MOV qword ptr [RAX + RBX*0x1 + 0x10],RDX
00009f5d(5): MOV RBX,qword ptr [RSP + 0x10]
00009f62(5): MOV RAX,qword ptr [RSP + 0x30]
00009f67(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
00009f6d(3): MOVAPS xmmword ptr [RBX],XMM0
00009f70(4): MOV qword ptr [RBX + 0x10],RAX
00009f74(2): XOR EAX,EAX
00009f76(5): MOV RSI,qword ptr [RSP + 0x58]
00009f7b(9): XOR RSI,qword ptr FS:[0x28]
00009f84(6): JNZ 0x0000a07a
00009f8a(4): ADD RSP,0x68
00009f8e(1): POP RBX
00009f8f(1): POP RBP
00009f90(2): POP R12
00009f92(2): POP R13
00009f94(2): POP R14
00009f96(2): POP R15
00009f98(1): RET
00009fa0(4): LEA RAX,[RSI + RBX*0x1]
00009fa4(4): ADD R14,0x1
00009fa8(5): MOV byte ptr [RSP + 0x1b],0x1
00009fad(4): CMP qword ptr [RAX + 0x8],R14
00009fb1(6): JG 0x00009eb6
00009fb7(5): LEA RDI,[RSP + 0x20]
00009fbc(3): MOV RSI,RBP
00009fbf(5): CALL 0x00008190
00009fc4(2): TEST AL,AL
00009fc6(6): JZ 0x0000a070
00009fcc(5): CMP byte ptr [RSP + 0x1c],0x1
00009fd1(4): MOV RAX,qword ptr [R15 + 0x30]
00009fd5(4): LEA RDX,[RAX + RBX*0x1]
00009fd9(6): JZ 0x00009f49
00009fdf(5): CMP byte ptr [RSP + 0x1b],0x0
00009fe4(6): JZ 0x00009f49
00009fea(8): MOV qword ptr [RDX + 0x8],0x0
00009ff2(5): JMP 0x00009f5d
0000a000(6): CMP qword ptr [R12 + 0x8],0x0
0000a006(6): JZ 0x00009f30
0000a00c(5): MOV RCX,qword ptr [R12 + 0x10]
0000a011(3): MOV RCX,qword ptr [RCX]
0000a014(4): SHL RCX,0x4
0000a018(5): TEST byte ptr [RDX + RCX*0x1 + 0xa],0x4
0000a01d(6): JNZ 0x00009e66
0000a023(4): SHR R8D,0x8
0000a027(3): MOV RCX,RBP
0000a02a(3): MOV RDX,RBP
0000a02d(7): AND R8D,0x3ff
0000a034(3): MOV RSI,RBP
0000a037(3): MOV RDI,R15
0000a03a(5): CALL 0x000090e0
0000a03f(2): TEST EAX,EAX
0000a041(6): JNZ 0x00009f76
0000a047(3): MOV RAX,qword ptr [R15]
0000a04a(3): ADD RAX,R13
0000a04d(5): JMP 0x00009e66
0000a058(3): MOV RSI,R15
0000a05b(3): MOV RDI,R12
0000a05e(5): CALL 0x00009dd0
0000a063(2): TEST EAX,EAX
0000a065(6): JZ 0x00009efa
0000a06b(5): JMP 0x00009f76
0000a070(5): MOV EAX,0xc
0000a075(5): JMP 0x00009f76
0000a07a(5): CALL 0x00001c20
0000a07f(1): NOP
0000a080(2): PUSH R15
0000a082(2): PUSH R14
0000a084(3): MOV R14,RDI
0000a087(2): PUSH R13
0000a089(2): PUSH R12
0000a08b(3): MOV R15,RSI
0000a08e(1): PUSH RBP
0000a08f(1): PUSH RBX
0000a090(3): MOV RBP,RDX
0000a093(2): MOV EBX,ECX
0000a095(4): SUB RSP,0x38
0000a099(4): MOV R12,qword ptr [RSI + 0x8]
0000a09d(9): MOV RAX,qword ptr FS:[0x28]
0000a0a6(5): MOV qword ptr [RSP + 0x28],RAX
0000a0ab(2): XOR EAX,EAX
0000a0ad(9): MOV qword ptr [RSP + 0x18],0x0
0000a0b6(8): LEA RDI,[R12*0x8]
0000a0be(5): MOV qword ptr [RSP + 0x10],R12
0000a0c3(5): CALL 0x00001da0
0000a0c8(3): TEST RAX,RAX
0000a0cb(5): MOV qword ptr [RSP + 0x20],RAX
0000a0d0(6): JZ 0x0000a1cd
0000a0d6(3): TEST R12,R12
0000a0d9(6): JLE 0x0000a16b
0000a0df(5): LEA R12,[RSP + 0x10]
0000a0e4(3): XOR R13D,R13D
0000a0e7(9): NOP word ptr [RAX + RAX*0x1]
0000a0f0(4): MOV RAX,qword ptr [R15 + 0x10]
0000a0f4(4): MOV RDX,qword ptr [RAX + R13*0x8]
0000a0f8(4): MOV RAX,qword ptr [R14 + 0x30]
0000a0fc(4): LEA RCX,[RDX + RDX*0x2]
0000a100(4): LEA RSI,[RAX + RCX*0x8]
0000a104(4): MOV R8,qword ptr [RSI + 0x8]
0000a108(3): TEST R8,R8
0000a10b(6): JLE 0x0000a190
0000a111(4): MOV R10,qword ptr [RSI + 0x10]
0000a115(3): MOV R9,qword ptr [R14]
0000a118(2): XOR ECX,ECX
0000a11a(2): JMP 0x0000a129
0000a120(4): ADD RCX,0x1
0000a124(3): CMP R8,RCX
0000a127(2): JZ 0x0000a190
0000a129(4): MOV RDI,qword ptr [R10 + RCX*0x8]
0000a12d(3): MOV RAX,RDI
0000a130(4): SHL RAX,0x4
0000a134(3): ADD RAX,R9
0000a137(5): MOVZX R11D,byte ptr [RAX + 0x8]
0000a13c(3): CMP EBX,R11D
0000a13f(2): JNZ 0x0000a120
0000a141(3): CMP RBP,qword ptr [RAX]
0000a144(2): JNZ 0x0000a120
0000a146(4): CMP RDI,-0x1
0000a14a(2): JZ 0x0000a190
0000a14c(3): MOV R8D,EBX
0000a14f(3): MOV RCX,RBP
0000a152(3): MOV RSI,R12
0000a155(3): MOV RDI,R14
0000a158(5): CALL 0x00009750
0000a15d(2): TEST EAX,EAX
0000a15f(2): JNZ 0x0000a19c
0000a161(4): ADD R13,0x1
0000a165(4): CMP qword ptr [R15 + 0x8],R13
0000a169(2): JG 0x0000a0f0
0000a16b(4): MOV RDI,qword ptr [R15 + 0x10]
0000a16f(5): CALL 0x00001b00
0000a174(5): MOV RAX,qword ptr [RSP + 0x20]
0000a179(6): MOVDQA XMM0,xmmword ptr [RSP + 0x10]
0000a17f(4): MOV qword ptr [R15 + 0x10],RAX
0000a183(2): XOR EAX,EAX
0000a185(4): MOVAPS xmmword ptr [R15],XMM0
0000a189(2): JMP 0x0000a1ae
0000a190(3): MOV RDI,R12
0000a193(5): CALL 0x00009bf0
0000a198(2): TEST EAX,EAX
0000a19a(2): JZ 0x0000a161
0000a19c(5): MOV RDI,qword ptr [RSP + 0x20]
0000a1a1(4): MOV dword ptr [RSP + 0xc],EAX
0000a1a5(5): CALL 0x00001b00
0000a1aa(4): MOV EAX,dword ptr [RSP + 0xc]
0000a1ae(5): MOV RDX,qword ptr [RSP + 0x28]
0000a1b3(9): XOR RDX,qword ptr FS:[0x28]
0000a1bc(2): JNZ 0x0000a1d4
0000a1be(4): ADD RSP,0x38
0000a1c2(1): POP RBX
0000a1c3(1): POP RBP
0000a1c4(2): POP R12
0000a1c6(2): POP R13
0000a1c8(2): POP R14
0000a1ca(2): POP R15
0000a1cc(1): RET
0000a1cd(5): MOV EAX,0xc
0000a1d2(2): JMP 0x0000a1ae
0000a1d4(5): CALL 0x00001c20
0000a1d9(7): NOP dword ptr [RAX]
0000a1e0(4): MOV R9,qword ptr [RSI + 0x8]
0000a1e4(2): XOR EAX,EAX
0000a1e6(3): TEST R9,R9
0000a1e9(6): JZ 0x0000a2a8
0000a1ef(4): MOV R11,qword ptr [RDX + 0x8]
0000a1f3(3): TEST R11,R11
0000a1f6(6): JZ 0x0000a2a8
0000a1fc(2): PUSH R13
0000a1fe(2): PUSH R12
0000a200(4): LEA RAX,[R9 + R11*0x1]
0000a204(1): PUSH RBP
0000a205(1): PUSH RBX
0000a206(3): MOV R12,RDX
0000a209(3): MOV RBX,RDI
0000a20c(3): MOV RBP,RSI
0000a20f(4): SUB RSP,0x8
0000a213(4): MOV RCX,qword ptr [RDI + 0x8]
0000a217(3): MOV R13,qword ptr [RDI]
0000a21a(4): MOV RDI,qword ptr [RDI + 0x10]
0000a21e(4): LEA RDX,[RAX + RCX*0x1]
0000a222(3): CMP RDX,R13
0000a225(6): JG 0x0000a350
0000a22b(4): LEA RSI,[RCX + R9*0x1]
0000a22f(4): MOV R13,qword ptr [RBP + 0x10]
0000a233(5): MOV RDX,qword ptr [R12 + 0x10]
0000a238(4): SUB R9,0x1
0000a23c(4): SUB RCX,0x1
0000a240(3): ADD RSI,R11
0000a243(4): SUB R11,0x1
0000a247(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000a24c(4): MOV R8,qword ptr [RDX + R11*0x8]
0000a250(3): CMP RAX,R8
0000a253(2): JZ 0x0000a266
0000a255(2): JGE 0x0000a2b0
0000a257(4): SUB R11,0x1
0000a25b(2): JS 0x0000a2c0
0000a25d(4): MOV R8,qword ptr [RDX + R11*0x8]
0000a261(3): CMP RAX,R8
0000a264(2): JNZ 0x0000a255
0000a266(3): TEST RCX,RCX
0000a269(2): JNS 0x0000a27a
0000a26b(2): JMP 0x0000a288
0000a270(4): SUB RCX,0x1
0000a274(4): CMP RCX,-0x1
0000a278(2): JZ 0x0000a288
0000a27a(4): MOV R10,qword ptr [RDI + RCX*0x8]
0000a27e(3): CMP R10,R8
0000a281(2): JG 0x0000a270
0000a283(3): CMP R10,R8
0000a286(2): JZ 0x0000a290
0000a288(4): SUB RSI,0x1
0000a28c(4): MOV qword ptr [RDI + RSI*0x8],R8
0000a290(4): SUB R9,0x1
0000a294(2): JS 0x0000a2c0
0000a296(4): SUB R11,0x1
0000a29a(2): JS 0x0000a2c0
0000a29c(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000a2a1(2): JMP 0x0000a25d
0000a2a8(2): RET
0000a2b0(4): SUB R9,0x1
0000a2b4(2): JS 0x0000a2c0
0000a2b6(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000a2bb(2): JMP 0x0000a250
0000a2c0(4): MOV RCX,qword ptr [RBX + 0x8]
0000a2c4(4): MOV RDX,qword ptr [RBP + 0x8]
0000a2c8(3): ADD RDX,RCX
0000a2cb(5): ADD RDX,qword ptr [R12 + 0x8]
0000a2d0(4): LEA RAX,[RCX + -0x1]
0000a2d4(4): LEA R9,[RDX + -0x1]
0000a2d8(3): SUB RDX,RSI
0000a2db(3): ADD RCX,RDX
0000a2de(3): TEST RDX,RDX
0000a2e1(4): MOV qword ptr [RBX + 0x8],RCX
0000a2e5(2): JLE 0x0000a32d
0000a2e7(3): TEST RAX,RAX
0000a2ea(2): JS 0x0000a32d
0000a2ec(4): NOP dword ptr [RAX]
0000a2f0(4): MOV R8,qword ptr [RDI + R9*0x8]
0000a2f4(4): MOV RCX,qword ptr [RDI + RAX*0x8]
0000a2f8(4): LEA R10,[RAX + RDX*0x1]
0000a2fc(4): LEA R10,[RDI + R10*0x8]
0000a300(3): CMP R8,RCX
0000a303(2): JLE 0x0000a320
0000a305(4): SUB R9,0x1
0000a309(4): SUB RDX,0x1
0000a30d(3): MOV qword ptr [R10],R8
0000a310(2): JNZ 0x0000a2f0
0000a312(2): XOR EDX,EDX
0000a314(2): JMP 0x0000a331
0000a320(4): SUB RAX,0x1
0000a324(3): MOV qword ptr [R10],RCX
0000a327(4): CMP RAX,-0x1
0000a32b(2): JNZ 0x0000a2f0
0000a32d(4): SHL RDX,0x3
0000a331(4): LEA RSI,[RDI + RSI*0x8]
0000a335(5): CALL 0x00001d70
0000a33a(2): XOR EAX,EAX
0000a33c(4): ADD RSP,0x8
0000a340(1): POP RBX
0000a341(1): POP RBP
0000a342(2): POP R12
0000a344(2): POP R13
0000a346(1): RET
0000a350(3): ADD R13,RAX
0000a353(8): LEA RSI,[R13*0x8]
0000a35b(5): CALL 0x00001e00
0000a360(3): TEST RAX,RAX
0000a363(3): MOV RDI,RAX
0000a366(2): JZ 0x0000a381
0000a368(4): MOV qword ptr [RBX + 0x10],RAX
0000a36c(3): MOV qword ptr [RBX],R13
0000a36f(4): MOV RCX,qword ptr [RBX + 0x8]
0000a373(4): MOV R9,qword ptr [RBP + 0x8]
0000a377(5): MOV R11,qword ptr [R12 + 0x8]
0000a37c(5): JMP 0x0000a22b
0000a381(5): MOV EAX,0xc
0000a386(2): JMP 0x0000a33c
0000a390(1): PUSH RBX
0000a391(3): MOV RBX,RDI
0000a394(4): SUB RSP,0x20
0000a398(2): MOV EAX,dword ptr [RSI]
0000a39a(3): CMP EAX,0xf
0000a39d(2): JZ 0x0000a418
0000a39f(3): MOVSXD R9,EAX
0000a3a2(4): LEA R10D,[RAX + 0x1]
0000a3a6(3): MOV RDI,qword ptr [RDI]
0000a3a9(3): MOV RAX,R9
0000a3ac(4): SHL RAX,0x6
0000a3b0(4): ADD RAX,0x8
0000a3b4(4): SHL R9,0x6
0000a3b8(3): MOV dword ptr [RSI],R10D
0000a3bb(3): ADD RAX,RDI
0000a3be(4): LEA RSI,[RDI + R9*0x1]
0000a3c2(8): MOV qword ptr [RSI + 0x8],0x0
0000a3ca(4): MOV qword ptr [RSI + 0x10],RDX
0000a3ce(4): LEA RDI,[RSI + 0x20]
0000a3d2(4): MOV qword ptr [RSI + 0x18],RCX
0000a3d6(5): MOVDQU XMM0,xmmword ptr [R8]
0000a3db(4): MOVUPS xmmword ptr [RSI + 0x30],XMM0
0000a3df(4): AND byte ptr [RDI + 0x1a],0xf3
0000a3e3(3): TEST RDX,RDX
0000a3e6(8): MOV qword ptr [RSI + 0x20],0x0
0000a3ee(8): MOV qword ptr [RSI + 0x28],0x0
0000a3f6(8): MOV qword ptr [RSI + 0x40],-0x1
0000a3fe(2): JZ 0x0000a403
0000a400(3): MOV qword ptr [RDX],RAX
0000a403(3): TEST RCX,RCX
0000a406(2): JZ 0x0000a40b
0000a408(3): MOV qword ptr [RCX],RAX
0000a40b(4): ADD RSP,0x20
0000a40f(1): POP RBX
0000a410(1): RET
0000a418(5): MOV EDI,0x3c8
0000a41d(5): MOV qword ptr [RSP + 0x18],R8
0000a422(5): MOV qword ptr [RSP + 0x10],RCX
0000a427(5): MOV qword ptr [RSP + 0x8],RDX
0000a42c(4): MOV qword ptr [RSP],RSI
0000a430(5): CALL 0x00001da0
0000a435(3): TEST RAX,RAX
0000a438(3): MOV RDI,RAX
0000a43b(2): JZ 0x0000a46c
0000a43d(3): MOV RAX,qword ptr [RBX]
0000a440(6): MOV R10D,0x1
0000a446(3): MOV qword ptr [RBX],RDI
0000a449(3): XOR R9D,R9D
0000a44c(5): MOV R8,qword ptr [RSP + 0x18]
0000a451(5): MOV RCX,qword ptr [RSP + 0x10]
0000a456(5): MOV RDX,qword ptr [RSP + 0x8]
0000a45b(4): MOV RSI,qword ptr [RSP]
0000a45f(3): MOV qword ptr [RDI],RAX
0000a462(5): MOV EAX,0x8
0000a467(5): JMP 0x0000a3b4
0000a46c(2): XOR EAX,EAX
0000a46e(2): JMP 0x0000a40b
0000a470(2): PUSH R14
0000a472(2): PUSH R13
0000a474(4): LEA R13,[RSI + 0x70]
0000a478(2): PUSH R12
0000a47a(1): PUSH RBP
0000a47b(7): LEA R12,[0x80 + RSI]
0000a482(1): PUSH RBX
0000a483(3): MOV RBX,RDI
0000a486(4): SUB RSP,0x10
0000a48a(3): MOV RBP,qword ptr [RDI]
0000a48d(9): MOV RAX,qword ptr FS:[0x28]
0000a496(5): MOV qword ptr [RSP + 0x8],RAX
0000a49b(2): XOR EAX,EAX
0000a49d(3): MOV R14,RSP
0000a4a0(4): LEA R8,[RBX + 0x28]
0000a4a4(2): XOR ECX,ECX
0000a4a6(2): XOR EDX,EDX
0000a4a8(3): MOV RSI,R12
0000a4ab(3): MOV RDI,R13
0000a4ae(5): CALL 0x0000a390
0000a4b3(3): TEST RAX,RAX
0000a4b6(3): MOV qword ptr [R14],RAX
0000a4b9(2): JZ 0x0000a50c
0000a4bb(3): MOV qword ptr [RAX],RBP
0000a4be(3): MOV RBP,qword ptr [R14]
0000a4c1(4): OR byte ptr [RBP + 0x32],0x4
0000a4c5(4): MOV RAX,qword ptr [RBX + 0x8]
0000a4c9(3): TEST RAX,RAX
0000a4cc(2): JZ 0x0000a4e0
0000a4ce(4): LEA R14,[RBP + 0x8]
0000a4d2(3): MOV RBX,RAX
0000a4d5(2): JMP 0x0000a4a0
0000a4e0(2): XOR EDX,EDX
0000a4e2(2): JMP 0x0000a4eb
0000a4e8(3): MOV RBX,RAX
0000a4eb(4): MOV RAX,qword ptr [RBX + 0x10]
0000a4ef(3): TEST RAX,RAX
0000a4f2(2): JZ 0x0000a4f9
0000a4f4(3): CMP RAX,RDX
0000a4f7(2): JNZ 0x0000a530
0000a4f9(3): MOV RAX,qword ptr [RBX]
0000a4fc(4): MOV RBP,qword ptr [RBP]
0000a500(3): MOV RDX,RBX
0000a503(3): TEST RAX,RAX
0000a506(2): JNZ 0x0000a4e8
0000a508(4): MOV RAX,qword ptr [RSP]
0000a50c(5): MOV RCX,qword ptr [RSP + 0x8]
0000a511(9): XOR RCX,qword ptr FS:[0x28]
0000a51a(2): JNZ 0x0000a53c
0000a51c(4): ADD RSP,0x10
0000a520(1): POP RBX
0000a521(1): POP RBP
0000a522(2): POP R12
0000a524(2): POP R13
0000a526(2): POP R14
0000a528(1): RET
0000a530(4): LEA R14,[RBP + 0x10]
0000a534(3): MOV RBX,RAX
0000a537(5): JMP 0x0000a4a0
0000a53c(5): CALL 0x00001c20
0000a541(5): NOP dword ptr [RAX + RAX*0x1]
0000a546(10): NOP word ptr CS:[RAX + RAX*0x1]
0000a550(2): PUSH R15
0000a552(2): PUSH R14
0000a554(2): PUSH R13
0000a556(2): PUSH R12
0000a558(3): MOV R13,RDX
0000a55b(1): PUSH RBP
0000a55c(1): PUSH RBX
0000a55d(4): SUB RSP,0x48
0000a561(3): MOV RBX,qword ptr [RSI]
0000a564(4): MOV RBP,qword ptr [RDX + 0x8]
0000a568(9): MOV RAX,qword ptr FS:[0x28]
0000a571(5): MOV qword ptr [RSP + 0x38],RAX
0000a576(2): XOR EAX,EAX
0000a578(4): TEST byte ptr [RSI + 0x38],0x10
0000a57c(5): MOV qword ptr [RSP + 0x18],RDI
0000a581(6): JZ 0x0000a6f8
0000a587(3): TEST RBP,RBP
0000a58a(2): JZ 0x0000a600
0000a58c(4): MOV RAX,qword ptr [RDX + 0x28]
0000a590(4): CMP RAX,0x3f
0000a594(6): JG 0x0000a6cd
0000a59a(7): MOV RDX,qword ptr [0xa0 + RBX]
0000a5a1(4): BT RDX,RAX
0000a5a5(6): JNC 0x0000a6cd
0000a5ab(4): LEA RAX,[RBX + 0x70]
0000a5af(5): LEA R14,[RSP + 0x20]
0000a5b4(4): SUB RBX,-0x80
0000a5b8(2): XOR ECX,ECX
0000a5ba(2): XOR EDX,EDX
0000a5bc(3): MOV RSI,RBX
0000a5bf(3): MOV R15,RAX
0000a5c2(3): MOV R8,R14
0000a5c5(3): MOV RDI,RAX
0000a5c8(5): MOV byte ptr [RSP + 0x28],0x8
0000a5cd(5): MOV qword ptr [RSP + 0x8],RAX
0000a5d2(5): CALL 0x0000a390
0000a5d7(3): MOV RDI,R15
0000a5da(3): MOV R8,R14
0000a5dd(2): XOR ECX,ECX
0000a5df(2): XOR EDX,EDX
0000a5e1(3): MOV RSI,RBX
0000a5e4(3): MOV R12,RAX
0000a5e7(5): MOV byte ptr [RSP + 0x28],0x9
0000a5ec(5): CALL 0x0000a390
0000a5f1(3): MOV R15,RAX
0000a5f4(5): JMP 0x0000a74d
0000a600(4): LEA RAX,[RBX + 0x70]
0000a604(5): LEA R14,[RSP + 0x20]
0000a609(4): SUB RBX,-0x80
0000a60d(2): XOR ECX,ECX
0000a60f(2): XOR EDX,EDX
0000a611(3): MOV RSI,RBX
0000a614(3): MOV R15,RAX
0000a617(3): MOV R8,R14
0000a61a(3): MOV RDI,RAX
0000a61d(5): MOV byte ptr [RSP + 0x28],0x8
0000a622(5): MOV qword ptr [RSP + 0x8],RAX
0000a627(5): CALL 0x0000a390
0000a62c(3): MOV RDI,R15
0000a62f(3): MOV R8,R14
0000a632(2): XOR ECX,ECX
0000a634(2): XOR EDX,EDX
0000a636(3): MOV RSI,RBX
0000a639(3): MOV R12,RAX
0000a63c(5): MOV byte ptr [RSP + 0x28],0x9
0000a641(5): CALL 0x0000a390
0000a646(3): MOV R11,RAX
0000a649(3): MOV R15,RAX
0000a64c(5): MOV RDI,qword ptr [RSP + 0x8]
0000a651(3): MOV R8,R14
0000a654(3): MOV RCX,R11
0000a657(3): MOV RDX,R12
0000a65a(3): MOV RSI,RBX
0000a65d(5): MOV byte ptr [RSP + 0x28],0x10
0000a662(5): MOV qword ptr [RSP + 0x10],R11
0000a667(5): CALL 0x0000a390
0000a66c(3): TEST RAX,RAX
0000a66f(3): MOV RBP,RAX
0000a672(6): JZ 0x0000a770
0000a678(5): MOV R11,qword ptr [RSP + 0x10]
0000a67d(3): TEST R11,R11
0000a680(6): JZ 0x0000a770
0000a686(3): TEST R12,R12
0000a689(6): JZ 0x0000a770
0000a68f(3): TEST R15,R15
0000a692(6): JZ 0x0000a770
0000a698(4): MOV RAX,qword ptr [R13 + 0x28]
0000a69c(4): MOV qword ptr [R15 + 0x28],RAX
0000a6a0(5): MOV qword ptr [R12 + 0x28],RAX
0000a6a5(5): MOVZX EAX,byte ptr [R13 + 0x32]
0000a6aa(5): MOVZX EDX,byte ptr [R15 + 0x32]
0000a6af(3): AND EAX,0x8
0000a6b2(3): AND EDX,0xfffffff7
0000a6b5(2): MOV ECX,EAX
0000a6b7(2): OR EDX,ECX
0000a6b9(4): MOV byte ptr [R15 + 0x32],DL
0000a6bd(6): MOVZX EAX,byte ptr [R12 + 0x32]
0000a6c3(3): AND EAX,0xfffffff7
0000a6c6(2): OR EAX,ECX
0000a6c8(5): MOV byte ptr [R12 + 0x32],AL
0000a6cd(5): MOV RDI,qword ptr [RSP + 0x38]
0000a6d2(9): XOR RDI,qword ptr FS:[0x28]
0000a6db(3): MOV RAX,RBP
0000a6de(6): JNZ 0x0000a782
0000a6e4(4): ADD RSP,0x48
0000a6e8(1): POP RBX
0000a6e9(1): POP RBP
0000a6ea(2): POP R12
0000a6ec(2): POP R13
0000a6ee(2): POP R14
0000a6f0(2): POP R15
0000a6f2(1): RET
0000a6f8(4): LEA RAX,[RBX + 0x70]
0000a6fc(5): LEA R14,[RSP + 0x20]
0000a701(4): SUB RBX,-0x80
0000a705(2): XOR ECX,ECX
0000a707(2): XOR EDX,EDX
0000a709(3): MOV RSI,RBX
0000a70c(3): MOV R15,RAX
0000a70f(3): MOV R8,R14
0000a712(3): MOV RDI,RAX
0000a715(5): MOV byte ptr [RSP + 0x28],0x8
0000a71a(5): MOV qword ptr [RSP + 0x8],RAX
0000a71f(5): CALL 0x0000a390
0000a724(2): XOR ECX,ECX
0000a726(2): XOR EDX,EDX
0000a728(3): MOV RDI,R15
0000a72b(3): MOV R8,R14
0000a72e(3): MOV RSI,RBX
0000a731(3): MOV R12,RAX
0000a734(5): MOV byte ptr [RSP + 0x28],0x9
0000a739(5): CALL 0x0000a390
0000a73e(3): TEST RBP,RBP
0000a741(3): MOV R15,RAX
0000a744(3): MOV R11,RAX
0000a747(6): JZ 0x0000a64c
0000a74d(5): MOV RDI,qword ptr [RSP + 0x8]
0000a752(3): MOV R8,R14
0000a755(3): MOV RCX,R15
0000a758(3): MOV RDX,RBP
0000a75b(3): MOV RSI,RBX
0000a75e(5): MOV byte ptr [RSP + 0x28],0x10
0000a763(5): CALL 0x0000a390
0000a768(3): MOV R11,RAX
0000a76b(5): JMP 0x0000a64c
0000a770(5): MOV RAX,qword ptr [RSP + 0x18]
0000a775(2): XOR EBP,EBP
0000a777(6): MOV dword ptr [RAX],0xc
0000a77d(5): JMP 0x0000a6cd
0000a782(5): CALL 0x00001c20
0000a787(9): NOP word ptr [RAX + RAX*0x1]
0000a790(1): PUSH RBP
0000a791(1): PUSH RBX
0000a792(3): MOV RBP,RDI
0000a795(3): MOV RBX,RSI
0000a798(4): SUB RSP,0x18
0000a79c(4): MOV RDX,qword ptr [RSI + 0x8]
0000a7a0(9): MOV RAX,qword ptr FS:[0x28]
0000a7a9(5): MOV qword ptr [RSP + 0x8],RAX
0000a7ae(2): XOR EAX,EAX
0000a7b0(8): MOV dword ptr [RSP + 0x4],0x0
0000a7b8(3): TEST RDX,RDX
0000a7bb(2): JZ 0x0000a7c3
0000a7bd(4): CMP byte ptr [RDX + 0x30],0x11
0000a7c1(2): JZ 0x0000a810
0000a7c3(4): MOV RDX,qword ptr [RBX + 0x10]
0000a7c7(3): TEST RDX,RDX
0000a7ca(2): JZ 0x0000a7d2
0000a7cc(4): CMP byte ptr [RDX + 0x30],0x11
0000a7d0(2): JZ 0x0000a7f0
0000a7d2(5): MOV RCX,qword ptr [RSP + 0x8]
0000a7d7(9): XOR RCX,qword ptr FS:[0x28]
0000a7e0(4): MOV EAX,dword ptr [RSP + 0x4]
0000a7e4(2): JNZ 0x0000a82b
0000a7e6(4): ADD RSP,0x18
0000a7ea(1): POP RBX
0000a7eb(1): POP RBP
0000a7ec(1): RET
0000a7f0(5): LEA RDI,[RSP + 0x4]
0000a7f5(3): MOV RSI,RBP
0000a7f8(5): CALL 0x0000a550
0000a7fd(3): TEST RAX,RAX
0000a800(4): MOV qword ptr [RBX + 0x10],RAX
0000a804(2): JZ 0x0000a7d2
0000a806(3): MOV qword ptr [RAX],RBX
0000a809(2): JMP 0x0000a7d2
0000a810(5): LEA RDI,[RSP + 0x4]
0000a815(3): MOV RSI,RBP
0000a818(5): CALL 0x0000a550
0000a81d(3): TEST RAX,RAX
0000a820(4): MOV qword ptr [RBX + 0x8],RAX
0000a824(2): JZ 0x0000a7c3
0000a826(3): MOV qword ptr [RAX],RBX
0000a829(2): JMP 0x0000a7c3
0000a82b(5): CALL 0x00001c20
0000a830(2): PUSH R12
0000a832(1): PUSH RBP
0000a833(1): PUSH RBX
0000a834(4): MOV RAX,qword ptr [RSI + 0x8]
0000a838(4): MOV qword ptr [RDI + 0x8],RAX
0000a83c(4): MOV R12,qword ptr [RSI + 0x8]
0000a840(3): TEST R12,R12
0000a843(2): JLE 0x0000a880
0000a845(3): MOV RBX,RDI
0000a848(3): MOV qword ptr [RDI],RAX
0000a84b(8): LEA RDI,[RAX*0x8]
0000a853(3): MOV RBP,RSI
0000a856(5): CALL 0x00001da0
0000a85b(3): TEST RAX,RAX
0000a85e(4): MOV qword ptr [RBX + 0x10],RAX
0000a862(2): JZ 0x0000a8a0
0000a864(4): MOV RSI,qword ptr [RBP + 0x10]
0000a868(8): LEA RDX,[R12*0x8]
0000a870(3): MOV RDI,RAX
0000a873(5): CALL 0x00001d70
0000a878(2): XOR EAX,EAX
0000a87a(1): POP RBX
0000a87b(1): POP RBP
0000a87c(2): POP R12
0000a87e(1): RET
0000a880(4): PXOR XMM0,XMM0
0000a884(8): MOV qword ptr [RDI + 0x10],0x0
0000a88c(2): XOR EAX,EAX
0000a88e(3): MOVUPS xmmword ptr [RDI],XMM0
0000a891(1): POP RBX
0000a892(1): POP RBP
0000a893(2): POP R12
0000a895(1): RET
0000a8a0(8): MOV qword ptr [RBX + 0x8],0x0
0000a8a8(7): MOV qword ptr [RBX],0x0
0000a8af(5): MOV EAX,0xc
0000a8b4(2): JMP 0x0000a87a
0000a8c0(3): TEST RSI,RSI
0000a8c3(2): PUSH R14
0000a8c5(2): PUSH R13
0000a8c7(2): PUSH R12
0000a8c9(1): PUSH RBP
0000a8ca(1): PUSH RBX
0000a8cb(6): JZ 0x0000a975
0000a8d1(3): TEST RDX,RDX
0000a8d4(4): MOV R13,qword ptr [RSI + 0x8]
0000a8d8(6): JZ 0x0000a970
0000a8de(3): TEST R13,R13
0000a8e1(6): JLE 0x0000a970
0000a8e7(4): MOV R14,qword ptr [RDX + 0x8]
0000a8eb(3): TEST R14,R14
0000a8ee(6): JLE 0x0000a9a3
0000a8f4(3): MOV R12,RDI
0000a8f7(5): LEA RDI,[R13 + R14*0x1]
0000a8fc(3): MOV RBX,RDX
0000a8ff(3): MOV RBP,RSI
0000a902(4): MOV qword ptr [R12],RDI
0000a906(4): SHL RDI,0x3
0000a90a(5): CALL 0x00001da0
0000a90f(3): TEST RAX,RAX
0000a912(5): MOV qword ptr [R12 + 0x10],RAX
0000a917(6): JZ 0x0000aa08
0000a91d(4): MOV R9,qword ptr [RBX + 0x10]
0000a921(4): MOV R8,qword ptr [RBP + 0x10]
0000a925(2): XOR EBX,EBX
0000a927(2): XOR ECX,ECX
0000a929(2): XOR ESI,ESI
0000a92b(2): JMP 0x0000a94e
0000a930(4): SETZ DIL
0000a934(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDX
0000a939(4): ADD RSI,0x1
0000a93d(4): MOVZX EDI,DIL
0000a941(3): ADD RCX,RDI
0000a944(3): CMP R13,RSI
0000a947(2): JLE 0x0000a9b0
0000a949(3): CMP R14,RCX
0000a94c(2): JLE 0x0000a9c8
0000a94e(4): MOV RDX,qword ptr [R8 + RSI*0x8]
0000a952(4): MOV RDI,qword ptr [R9 + RCX*0x8]
0000a956(4): ADD RBX,0x1
0000a95a(3): CMP RDX,RDI
0000a95d(2): JLE 0x0000a930
0000a95f(4): ADD RCX,0x1
0000a963(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDI
0000a968(2): JMP 0x0000a944
0000a970(3): TEST R13,R13
0000a973(2): JG 0x0000a9a3
0000a975(3): TEST RDX,RDX
0000a978(2): JZ 0x0000a981
0000a97a(5): CMP qword ptr [RDX + 0x8],0x0
0000a97f(2): JG 0x0000a9a0
0000a981(4): PXOR XMM0,XMM0
0000a985(8): MOV qword ptr [RDI + 0x10],0x0
0000a98d(2): XOR EAX,EAX
0000a98f(3): MOVAPS xmmword ptr [RDI],XMM0
0000a992(1): POP RBX
0000a993(1): POP RBP
0000a994(2): POP R12
0000a996(2): POP R13
0000a998(2): POP R14
0000a99a(1): RET
0000a9a0(3): MOV RSI,RDX
0000a9a3(1): POP RBX
0000a9a4(1): POP RBP
0000a9a5(2): POP R12
0000a9a7(2): POP R13
0000a9a9(2): POP R14
0000a9ab(5): JMP 0x0000a830
0000a9b0(3): CMP R14,RCX
0000a9b3(2): JG 0x0000a9e8
0000a9b5(5): MOV qword ptr [R12 + 0x8],RBX
0000a9ba(2): XOR EAX,EAX
0000a9bc(1): POP RBX
0000a9bd(1): POP RBP
0000a9be(2): POP R12
0000a9c0(2): POP R13
0000a9c2(2): POP R14
0000a9c4(1): RET
0000a9c8(3): SUB R13,RSI
0000a9cb(4): LEA RDI,[RAX + RBX*0x8]
0000a9cf(4): LEA RSI,[R8 + RSI*0x8]
0000a9d3(8): LEA RDX,[R13*0x8]
0000a9db(3): ADD RBX,R13
0000a9de(5): CALL 0x00001d70
0000a9e3(2): JMP 0x0000a9b5
0000a9e8(3): SUB R14,RCX
0000a9eb(4): LEA RDI,[RAX + RBX*0x8]
0000a9ef(4): LEA RSI,[R9 + RCX*0x8]
0000a9f3(8): LEA RDX,[R14*0x8]
0000a9fb(3): ADD RBX,R14
0000a9fe(5): CALL 0x00001d70
0000aa03(2): JMP 0x0000a9b5
0000aa08(5): MOV EAX,0xc
0000aa0d(5): JMP 0x0000a992
0000aa20(2): PUSH R15
0000aa22(2): PUSH R14
0000aa24(2): PUSH R13
0000aa26(2): PUSH R12
0000aa28(1): PUSH RBP
0000aa29(1): PUSH RBX
0000aa2a(4): SUB RSP,0x28
0000aa2e(4): MOV R10,qword ptr [RDX + 0x8]
0000aa32(3): TEST R10,R10
0000aa35(6): JZ 0x0000acbf
0000aa3b(3): MOV R8D,ECX
0000aa3e(3): TEST R10,R10
0000aa41(4): LEA R12,[R8 + R10*0x1]
0000aa45(2): JLE 0x0000aa5c
0000aa47(4): MOV RAX,qword ptr [RDX + 0x10]
0000aa4b(4): LEA R10,[RAX + R10*0x8]
0000aa4f(1): NOP
0000aa50(3): ADD R12,qword ptr [RAX]
0000aa53(4): ADD RAX,0x8
0000aa57(3): CMP R10,RAX
0000aa5a(2): JNZ 0x0000aa50
0000aa5c(7): MOV RAX,qword ptr [0x88 + RSI]
0000aa63(3): MOV RBP,RDX
0000aa66(4): MOV dword ptr [RSP + 0x4],ECX
0000aa6a(3): MOV R13,RSI
0000aa6d(5): MOV qword ptr [RSP + 0x18],RDI
0000aa72(3): AND RAX,R12
0000aa75(4): LEA RDX,[RAX + RAX*0x2]
0000aa79(4): MOV RAX,qword ptr [RSI + 0x40]
0000aa7d(4): LEA RAX,[RAX + RDX*0x8]
0000aa81(3): MOV R11,qword ptr [RAX]
0000aa84(3): TEST R11,R11
0000aa87(2): JLE 0x0000aae0
0000aa89(4): MOV RBX,qword ptr [RAX + 0x10]
0000aa8d(3): XOR R10D,R10D
0000aa90(3): MOV R9D,ECX
0000aa93(2): JMP 0x0000aaa1
0000aa98(4): ADD R10,0x1
0000aa9c(3): CMP R10,R11
0000aa9f(2): JZ 0x0000aae0
0000aaa1(4): MOV R14,qword ptr [RBX + R10*0x8]
0000aaa5(3): CMP qword ptr [R14],R12
0000aaa8(2): JNZ 0x0000aa98
0000aaaa(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000aaaf(3): AND EAX,0xf
0000aab2(3): CMP EAX,R9D
0000aab5(2): JNZ 0x0000aa98
0000aab7(4): MOV RDI,qword ptr [R14 + 0x50]
0000aabb(3): TEST RDI,RDI
0000aabe(2): JZ 0x0000aa98
0000aac0(3): MOV RSI,RBP
0000aac3(5): CALL 0x00009670
0000aac8(2): TEST AL,AL
0000aaca(2): JZ 0x0000aa98
0000aacc(4): ADD RSP,0x28
0000aad0(3): MOV RAX,R14
0000aad3(1): POP RBX
0000aad4(1): POP RBP
0000aad5(2): POP R12
0000aad7(2): POP R13
0000aad9(2): POP R14
0000aadb(2): POP R15
0000aadd(1): RET
0000aae0(5): MOV ESI,0x1
0000aae5(5): MOV EDI,0x70
0000aaea(5): CALL 0x00001d30
0000aaef(3): TEST RAX,RAX
0000aaf2(3): MOV R14,RAX
0000aaf5(6): JZ 0x0000ac36
0000aafb(4): LEA RAX,[RAX + 0x8]
0000aaff(3): MOV RSI,RBP
0000ab02(3): MOV RDI,RAX
0000ab05(3): MOV RBX,RAX
0000ab08(5): CALL 0x0000a830
0000ab0d(2): TEST EAX,EAX
0000ab0f(6): JNZ 0x0000accd
0000ab15(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000ab1a(5): MOVZX EDX,byte ptr [RSP + 0x4]
0000ab1f(4): MOV qword ptr [R14 + 0x50],RBX
0000ab23(3): AND EDX,0xf
0000ab26(3): AND EAX,0xfffffff0
0000ab29(2): OR EAX,EDX
0000ab2b(5): CMP qword ptr [RBP + 0x8],0x0
0000ab30(4): MOV byte ptr [R14 + 0x68],AL
0000ab34(6): JLE 0x0000ac18
0000ab3a(4): LEA RCX,[R14 + 0x18]
0000ab3e(3): XOR R15D,R15D
0000ab41(5): MOV qword ptr [RSP + 0x10],R12
0000ab46(3): XOR R10D,R10D
0000ab49(3): MOV R12,R13
0000ab4c(3): MOV R13,R15
0000ab4f(5): MOV qword ptr [RSP + 0x8],RCX
0000ab54(3): MOV R15,RBX
0000ab57(9): NOP word ptr [RAX + RAX*0x1]
0000ab60(4): MOV RAX,qword ptr [RBP + 0x10]
0000ab64(4): MOV RAX,qword ptr [RAX + R13*0x8]
0000ab68(4): SHL RAX,0x4
0000ab6c(4): ADD RAX,qword ptr [R12]
0000ab70(4): MOVZX ESI,byte ptr [RAX + 0x8]
0000ab74(3): MOV EBX,dword ptr [RAX + 0x8]
0000ab77(3): SHR EBX,0x8
0000ab7a(5): AND BX,0x3ff
0000ab7f(3): CMP ESI,0x1
0000ab82(3): MOVZX EDI,BX
0000ab85(2): JNZ 0x0000ab8b
0000ab87(2): TEST EDI,EDI
0000ab89(2): JZ 0x0000ac02
0000ab8b(5): MOVZX EDX,byte ptr [R14 + 0x68]
0000ab90(4): MOVZX EAX,byte ptr [RAX + 0xa]
0000ab94(3): MOV R9D,EDX
0000ab97(3): SHR AL,0x4
0000ab9a(3): AND EDX,0xffffffdf
0000ab9d(4): SHR R9B,0x5
0000aba1(3): OR EAX,R9D
0000aba4(3): AND EAX,0x1
0000aba7(3): SHL EAX,0x5
0000abaa(2): OR EAX,EDX
0000abac(3): CMP ESI,0x2
0000abaf(4): MOV byte ptr [R14 + 0x68],AL
0000abb3(6): JZ 0x0000ac80
0000abb9(3): CMP ESI,0x4
0000abbc(2): JNZ 0x0000abc5
0000abbe(3): OR EAX,0x40
0000abc1(4): MOV byte ptr [R14 + 0x68],AL
0000abc5(2): TEST EDI,EDI
0000abc7(2): JZ 0x0000ac02
0000abc9(4): CMP R15,qword ptr [R14 + 0x50]
0000abcd(6): JZ 0x0000ac90
0000abd3(3): TEST BL,0x1
0000abd6(2): JZ 0x0000ac50
0000abd8(5): TEST byte ptr [RSP + 0x4],0x1
0000abdd(2): JZ 0x0000abe8
0000abdf(3): TEST BL,0x2
0000abe2(2): JZ 0x0000ac5c
0000abe4(4): NOP dword ptr [RAX]
0000abe8(3): MOV RDX,R13
0000abeb(3): SUB RDX,R10
0000abee(2): JS 0x0000abfe
0000abf0(5): MOV RSI,qword ptr [RSP + 0x8]
0000abf5(4): LEA RDI,[R14 + 0x10]
0000abf9(5): CALL 0x00009850
0000abfe(4): ADD R10,0x1
0000ac02(4): ADD R13,0x1
0000ac06(4): CMP R13,qword ptr [RBP + 0x8]
0000ac0a(6): JL 0x0000ab60
0000ac10(3): MOV R13,R12
0000ac13(5): MOV R12,qword ptr [RSP + 0x10]
0000ac18(3): MOV RDX,R12
0000ac1b(3): MOV RSI,R14
0000ac1e(3): MOV RDI,R13
0000ac21(5): CALL 0x000082c0
0000ac26(2): TEST EAX,EAX
0000ac28(6): JZ 0x0000aacc
0000ac2e(3): MOV RDI,R14
0000ac31(5): CALL 0x00009360
0000ac36(5): MOV RAX,qword ptr [RSP + 0x18]
0000ac3b(3): XOR R14D,R14D
0000ac3e(6): MOV dword ptr [RAX],0xc
0000ac44(5): JMP 0x0000aacc
0000ac50(3): TEST BL,0x2
0000ac53(2): JZ 0x0000ac5c
0000ac55(5): TEST byte ptr [RSP + 0x4],0x1
0000ac5a(2): JNZ 0x0000abe8
0000ac5c(3): TEST BL,0x10
0000ac5f(2): JZ 0x0000ac68
0000ac61(5): TEST byte ptr [RSP + 0x4],0x2
0000ac66(2): JZ 0x0000abe8
0000ac68(3): AND EBX,0x40
0000ac6b(2): JZ 0x0000ac02
0000ac6d(5): TEST byte ptr [RSP + 0x4],0x4
0000ac72(2): JNZ 0x0000ac02
0000ac74(5): JMP 0x0000abe8
0000ac80(3): OR EAX,0x10
0000ac83(4): MOV byte ptr [R14 + 0x68],AL
0000ac87(5): JMP 0x0000abc5
0000ac90(5): MOV EDI,0x18
0000ac95(5): CALL 0x00001da0
0000ac9a(3): TEST RAX,RAX
0000ac9d(4): MOV qword ptr [R14 + 0x50],RAX
0000aca1(2): JZ 0x0000ac2e
0000aca3(3): MOV RSI,RBP
0000aca6(3): MOV RDI,RAX
0000aca9(5): CALL 0x0000a830
0000acae(2): TEST EAX,EAX
0000acb0(2): JNZ 0x0000ac36
0000acb2(5): OR byte ptr [R14 + 0x68],0x80
0000acb7(3): XOR R10D,R10D
0000acba(5): JMP 0x0000abd3
0000acbf(6): MOV dword ptr [RDI],0x0
0000acc5(3): XOR R14D,R14D
0000acc8(5): JMP 0x0000aacc
0000accd(3): MOV RDI,R14
0000acd0(5): CALL 0x00001b00
0000acd5(5): JMP 0x0000ac36
0000ace0(2): PUSH R15
0000ace2(2): PUSH R14
0000ace4(2): PUSH R13
0000ace6(2): PUSH R12
0000ace8(1): PUSH RBP
0000ace9(1): PUSH RBX
0000acea(4): SUB RSP,0x8
0000acee(4): MOV RBP,qword ptr [RDX + 0x8]
0000acf2(3): TEST RBP,RBP
0000acf5(6): JZ 0x0000aed0
0000acfb(3): TEST RBP,RBP
0000acfe(2): JLE 0x0000ad1c
0000ad00(4): MOV RAX,qword ptr [RDX + 0x10]
0000ad04(4): LEA RCX,[RAX + RBP*0x8]
0000ad08(8): NOP dword ptr [RAX + RAX*0x1]
0000ad10(3): ADD RBP,qword ptr [RAX]
0000ad13(4): ADD RAX,0x8
0000ad17(3): CMP RCX,RAX
0000ad1a(2): JNZ 0x0000ad10
0000ad1c(7): MOV RAX,qword ptr [0x88 + RSI]
0000ad23(3): MOV R14,RDX
0000ad26(3): MOV R12,RSI
0000ad29(3): MOV R13,RDI
0000ad2c(3): AND RAX,RBP
0000ad2f(4): LEA RDX,[RAX + RAX*0x2]
0000ad33(4): MOV RAX,qword ptr [RSI + 0x40]
0000ad37(4): LEA RAX,[RAX + RDX*0x8]
0000ad3b(3): MOV R10,qword ptr [RAX]
0000ad3e(3): TEST R10,R10
0000ad41(2): JLE 0x0000ad76
0000ad43(4): MOV R11,qword ptr [RAX + 0x10]
0000ad47(3): XOR R9D,R9D
0000ad4a(6): NOP word ptr [RAX + RAX*0x1]
0000ad50(4): MOV RBX,qword ptr [R11 + R9*0x8]
0000ad54(3): CMP qword ptr [RBX],RBP
0000ad57(2): JNZ 0x0000ad6d
0000ad59(4): LEA RDI,[RBX + 0x8]
0000ad5d(3): MOV RSI,R14
0000ad60(5): CALL 0x00009670
0000ad65(2): TEST AL,AL
0000ad67(6): JNZ 0x0000ae6f
0000ad6d(4): ADD R9,0x1
0000ad71(3): CMP R10,R9
0000ad74(2): JNZ 0x0000ad50
0000ad76(5): MOV ESI,0x1
0000ad7b(5): MOV EDI,0x70
0000ad80(5): CALL 0x00001d30
0000ad85(3): TEST RAX,RAX
0000ad88(3): MOV RBX,RAX
0000ad8b(6): JZ 0x0000aeb8
0000ad91(4): LEA R15,[RAX + 0x8]
0000ad95(3): MOV RSI,R14
0000ad98(3): MOV RDI,R15
0000ad9b(5): CALL 0x0000a830
0000ada0(2): TEST EAX,EAX
0000ada2(6): JNZ 0x0000aeb0
0000ada8(4): MOV RAX,qword ptr [R14 + 0x8]
0000adac(4): MOV qword ptr [RBX + 0x50],R15
0000adb0(3): TEST RAX,RAX
0000adb3(6): JLE 0x0000ae5d
0000adb9(4): MOV RSI,qword ptr [R14 + 0x10]
0000adbd(4): MOV R8,qword ptr [R12]
0000adc1(4): LEA R9,[RSI + RAX*0x8]
0000adc5(2): JMP 0x0000ae14
0000add0(4): MOVZX ECX,byte ptr [RBX + 0x68]
0000add4(4): MOVZX EDX,byte ptr [RAX + 0xa]
0000add8(3): MOV R10D,ECX
0000addb(3): SHR DL,0x4
0000adde(3): AND ECX,0xffffffdf
0000ade1(4): SHR R10B,0x5
0000ade5(3): OR EDX,R10D
0000ade8(3): AND EDX,0x1
0000adeb(3): SHL EDX,0x5
0000adee(2): OR EDX,ECX
0000adf0(3): CMP EDI,0x2
0000adf3(3): MOV byte ptr [RBX + 0x68],DL
0000adf6(6): JZ 0x0000ae88
0000adfc(3): CMP EDI,0x4
0000adff(6): JNZ 0x0000ae98
0000ae05(3): OR EDX,0x40
0000ae08(3): MOV byte ptr [RBX + 0x68],DL
0000ae0b(4): ADD RSI,0x8
0000ae0f(3): CMP R9,RSI
0000ae12(2): JZ 0x0000ae5d
0000ae14(3): MOV RAX,qword ptr [RSI]
0000ae17(4): SHL RAX,0x4
0000ae1b(3): ADD RAX,R8
0000ae1e(4): MOVZX EDI,byte ptr [RAX + 0x8]
0000ae22(3): CMP EDI,0x1
0000ae25(2): JNZ 0x0000add0
0000ae27(7): TEST dword ptr [RAX + 0x8],0x3ff00
0000ae2e(2): JZ 0x0000ae0b
0000ae30(4): MOVZX EDX,byte ptr [RBX + 0x68]
0000ae34(4): MOVZX EAX,byte ptr [RAX + 0xa]
0000ae38(2): MOV ECX,EDX
0000ae3a(3): SHR AL,0x4
0000ae3d(3): AND EDX,0xffffffdf
0000ae40(3): SHR CL,0x5
0000ae43(2): OR EAX,ECX
0000ae45(3): AND EAX,0x1
0000ae48(3): SHL EAX,0x5
0000ae4b(2): OR EAX,EDX
0000ae4d(3): MOV byte ptr [RBX + 0x68],AL
0000ae50(4): ADD RSI,0x8
0000ae54(4): OR byte ptr [RBX + 0x68],0x80
0000ae58(3): CMP R9,RSI
0000ae5b(2): JNZ 0x0000ae14
0000ae5d(3): MOV RDX,RBP
0000ae60(3): MOV RSI,RBX
0000ae63(3): MOV RDI,R12
0000ae66(5): CALL 0x000082c0
0000ae6b(2): TEST EAX,EAX
0000ae6d(2): JNZ 0x0000aec4
0000ae6f(4): ADD RSP,0x8
0000ae73(3): MOV RAX,RBX
0000ae76(1): POP RBX
0000ae77(1): POP RBP
0000ae78(2): POP R12
0000ae7a(2): POP R13
0000ae7c(2): POP R14
0000ae7e(2): POP R15
0000ae80(1): RET
0000ae88(3): OR EDX,0x10
0000ae8b(3): MOV byte ptr [RBX + 0x68],DL
0000ae8e(5): JMP 0x0000ae0b
0000ae98(3): CMP EDI,0xc
0000ae9b(2): JZ 0x0000ae50
0000ae9d(7): TEST dword ptr [RAX + 0x8],0x3ff00
0000aea4(6): JZ 0x0000ae0b
0000aeaa(2): JMP 0x0000ae50
0000aeb0(3): MOV RDI,RBX
0000aeb3(5): CALL 0x00001b00
0000aeb8(8): MOV dword ptr [R13],0xc
0000aec0(2): XOR EBX,EBX
0000aec2(2): JMP 0x0000ae6f
0000aec4(3): MOV RDI,RBX
0000aec7(5): CALL 0x00009360
0000aecc(2): JMP 0x0000aeb8
0000aed0(6): MOV dword ptr [RDI],0x0
0000aed6(2): XOR EBX,EBX
0000aed8(2): JMP 0x0000ae6f
0000aee0(2): PUSH R15
0000aee2(2): PUSH R14
0000aee4(2): PUSH R13
0000aee6(2): PUSH R12
0000aee8(1): PUSH RBP
0000aee9(1): PUSH RBX
0000aeea(4): SUB RSP,0x48
0000aeee(9): MOV RAX,qword ptr FS:[0x28]
0000aef7(5): MOV qword ptr [RSP + 0x38],RAX
0000aefc(2): XOR EAX,EAX
0000aefe(3): TEST RCX,RCX
0000af01(6): JLE 0x0000af96
0000af07(5): LEA RAX,[RSP + 0x1c]
0000af0c(3): MOV R14,RDI
0000af0f(3): MOV RBX,RSI
0000af12(3): MOV R12,RDX
0000af15(3): MOV RBP,RCX
0000af18(3): XOR R15D,R15D
0000af1b(5): LEA R13,[RSP + 0x20]
0000af20(5): MOV qword ptr [RSP + 0x8],RAX
0000af25(2): JMP 0x0000af7c
0000af30(3): TEST RDX,RDX
0000af33(2): JZ 0x0000af73
0000af35(4): ADD RDX,0x8
0000af39(4): ADD RSI,0x8
0000af3d(3): MOV RDI,R13
0000af40(5): CALL 0x0000a8c0
0000af45(2): TEST EAX,EAX
0000af47(4): MOV dword ptr [RSP + 0x1c],EAX
0000af4b(2): JNZ 0x0000af98
0000af4d(5): MOV RDI,qword ptr [RSP + 0x8]
0000af52(3): MOV RDX,R13
0000af55(3): MOV RSI,R14
0000af58(5): CALL 0x0000ace0
0000af5d(5): MOV RDI,qword ptr [RSP + 0x30]
0000af62(4): MOV qword ptr [RBX + R15*0x8],RAX
0000af66(5): CALL 0x00001b00
0000af6b(4): MOV EAX,dword ptr [RSP + 0x1c]
0000af6f(2): TEST EAX,EAX
0000af71(2): JNZ 0x0000af98
0000af73(4): ADD R15,0x1
0000af77(3): CMP RBP,R15
0000af7a(2): JZ 0x0000af96
0000af7c(4): MOV RSI,qword ptr [RBX + R15*0x8]
0000af80(4): MOV RDX,qword ptr [R12 + R15*0x8]
0000af84(3): TEST RSI,RSI
0000af87(2): JNZ 0x0000af30
0000af89(4): MOV qword ptr [RBX + R15*0x8],RDX
0000af8d(4): ADD R15,0x1
0000af91(3): CMP RBP,R15
0000af94(2): JNZ 0x0000af7c
0000af96(2): XOR EAX,EAX
0000af98(5): MOV RCX,qword ptr [RSP + 0x38]
0000af9d(9): XOR RCX,qword ptr FS:[0x28]
0000afa6(2): JNZ 0x0000afb7
0000afa8(4): ADD RSP,0x48
0000afac(1): POP RBX
0000afad(1): POP RBP
0000afae(2): POP R12
0000afb0(2): POP R13
0000afb2(2): POP R14
0000afb4(2): POP R15
0000afb6(1): RET
0000afb7(5): CALL 0x00001c20
0000afbc(4): NOP dword ptr [RAX]
0000afc0(2): PUSH R15
0000afc2(2): PUSH R14
0000afc4(2): PUSH R13
0000afc6(2): PUSH R12
0000afc8(3): MOV R12,RDX
0000afcb(1): PUSH RBP
0000afcc(1): PUSH RBX
0000afcd(3): MOV RBX,RDI
0000afd0(3): MOV RBP,RSI
0000afd3(2): XOR ESI,ESI
0000afd5(4): SUB RSP,0x78
0000afd9(7): MOV RDI,qword ptr [0xc8 + RDI]
0000afe0(9): MOV RAX,qword ptr FS:[0x28]
0000afe9(5): MOV qword ptr [RSP + 0x68],RAX
0000afee(2): XOR EAX,EAX
0000aff0(5): MOV qword ptr [RSP + 0x20],RCX
0000aff5(5): MOV dword ptr [RSP + 0x2c],R8D
0000affa(3): MOV RDX,RDI
0000affd(3): CMP RSI,RDX
0000b000(2): JGE 0x0000b057
0000b002(4): LEA RAX,[RSI + RDX*0x1]
0000b006(7): MOV R8,qword ptr [0xd8 + RBX]
0000b00d(3): MOV RCX,RAX
0000b010(4): SHR RCX,0x3f
0000b014(3): ADD RCX,RAX
0000b017(3): SAR RCX,1
0000b01a(4): LEA RAX,[RCX + RCX*0x4]
0000b01e(5): CMP R12,qword ptr [R8 + RAX*0x8 + 0x8]
0000b023(2): JLE 0x0000b052
0000b025(5): JMP 0x0000b0a8
0000b030(4): LEA RDX,[RSI + RCX*0x1]
0000b034(3): MOV RAX,RDX
0000b037(4): SHR RAX,0x3f
0000b03b(3): ADD RAX,RDX
0000b03e(3): SAR RAX,1
0000b041(4): LEA RDX,[RAX + RAX*0x4]
0000b045(3): MOV R9,RAX
0000b048(5): CMP R12,qword ptr [R8 + RDX*0x8 + 0x8]
0000b04d(2): JG 0x0000b0b0
0000b04f(3): MOV RCX,RAX
0000b052(3): CMP RSI,RCX
0000b055(2): JL 0x0000b030
0000b057(3): CMP RDI,RSI
0000b05a(2): JLE 0x0000b07d
0000b05c(7): MOV RCX,qword ptr [0xd8 + RBX]
0000b063(4): LEA RAX,[RSI + RSI*0x4]
0000b067(4): SHL RAX,0x3
0000b06b(5): CMP qword ptr [RCX + RAX*0x1 + 0x8],R12
0000b070(5): MOV qword ptr [RSP + 0x30],RAX
0000b075(2): JNZ 0x0000b07d
0000b077(4): CMP RSI,-0x1
0000b07b(2): JNZ 0x0000b0c0
0000b07d(2): XOR EAX,EAX
0000b07f(5): MOV RBX,qword ptr [RSP + 0x68]
0000b084(9): XOR RBX,qword ptr FS:[0x28]
0000b08d(6): JNZ 0x0000b359
0000b093(4): ADD RSP,0x78
0000b097(1): POP RBX
0000b098(1): POP RBP
0000b099(2): POP R12
0000b09b(2): POP R13
0000b09d(2): POP R14
0000b09f(2): POP R15
0000b0a1(1): RET
0000b0a8(3): MOV R9,RCX
0000b0ab(3): MOV RCX,RDX
0000b0ae(2): NOP
0000b0b0(4): LEA RSI,[R9 + 0x1]
0000b0b4(3): MOV RDX,RCX
0000b0b7(5): JMP 0x0000affd
0000b0c0(4): LEA RAX,[RBP + 0x10]
0000b0c4(7): MOV R13,qword ptr [0x98 + RBX]
0000b0cb(4): MOV qword ptr [RSP],RAX
0000b0cf(5): LEA RAX,[RSP + 0x4c]
0000b0d4(5): MOV qword ptr [RSP + 0x38],RAX
0000b0d9(5): LEA RAX,[RSP + 0x50]
0000b0de(5): MOV qword ptr [RSP + 0x10],RAX
0000b0e3(5): MOV RAX,qword ptr [RSP + 0x30]
0000b0e8(4): LEA R15,[RCX + RAX*0x1]
0000b0ec(5): JMP 0x0000b1c8
0000b0f8(4): MOV RAX,qword ptr [R13 + 0x18]
0000b0fc(4): MOV RCX,qword ptr [RAX + R10*0x8]
0000b100(7): MOV R10,qword ptr [0xb8 + RBX]
0000b107(8): LEA RAX,[R14*0x8]
0000b10f(5): MOV qword ptr [RSP + 0x18],RAX
0000b114(3): ADD R10,RAX
0000b117(5): MOV qword ptr [RSP + 0x8],RCX
0000b11c(3): MOV R9,qword ptr [R10]
0000b11f(3): TEST R9,R9
0000b122(6): JZ 0x0000b2b0
0000b128(4): MOV RDI,qword ptr [R9 + 0x10]
0000b12c(4): LEA RSI,[R9 + 0x18]
0000b130(3): MOV RDX,RCX
0000b133(5): CALL 0x000096d0
0000b138(3): TEST RAX,RAX
0000b13b(2): JNZ 0x0000b1b9
0000b13d(5): MOV RDI,qword ptr [RSP + 0x10]
0000b142(4): LEA RSI,[R9 + 0x8]
0000b146(5): CALL 0x0000a830
0000b14b(5): MOV RSI,qword ptr [RSP + 0x8]
0000b150(5): MOV RDI,qword ptr [RSP + 0x10]
0000b155(4): MOV dword ptr [RSP + 0x4c],EAX
0000b159(5): CALL 0x00008190
0000b15e(4): MOV EDX,dword ptr [RSP + 0x4c]
0000b162(2): TEST EDX,EDX
0000b164(6): JNZ 0x0000b306
0000b16a(2): CMP AL,0x1
0000b16c(6): JNZ 0x0000b306
0000b172(5): MOV R10,qword ptr [RSP + 0x18]
0000b177(7): ADD R10,qword ptr [0xb8 + RBX]
0000b17e(5): MOV RDX,qword ptr [RSP + 0x10]
0000b183(5): MOV RDI,qword ptr [RSP + 0x38]
0000b188(3): MOV RSI,R13
0000b18b(5): MOV qword ptr [RSP + 0x8],R10
0000b190(5): CALL 0x0000ace0
0000b195(5): MOV R10,qword ptr [RSP + 0x8]
0000b19a(5): MOV RDI,qword ptr [RSP + 0x60]
0000b19f(3): MOV qword ptr [R10],RAX
0000b1a2(5): CALL 0x00001b00
0000b1a7(7): MOV RAX,qword ptr [0xb8 + RBX]
0000b1ae(5): CMP qword ptr [RAX + R14*0x8],0x0
0000b1b3(6): JZ 0x0000b2f5
0000b1b9(4): ADD R15,0x28
0000b1bd(5): CMP byte ptr [R15 + -0x8],0x0
0000b1c2(6): JZ 0x0000b07d
0000b1c8(3): MOV R10,qword ptr [R15]
0000b1cb(4): MOV R9,qword ptr [RBP + 0x8]
0000b1cf(4): MOV RSI,qword ptr [RSP]
0000b1d3(3): MOV RDX,R10
0000b1d6(3): MOV RDI,R9
0000b1d9(5): CALL 0x000096d0
0000b1de(3): TEST RAX,RAX
0000b1e1(2): JZ 0x0000b1b9
0000b1e3(4): MOV R8,qword ptr [R15 + 0x18]
0000b1e7(3): ADD R8,R12
0000b1ea(3): MOV R14,R8
0000b1ed(4): SUB R14,qword ptr [R15 + 0x10]
0000b1f1(3): CMP R12,R14
0000b1f4(6): JNZ 0x0000b0f8
0000b1fa(4): MOV RCX,qword ptr [R13 + 0x28]
0000b1fe(4): LEA RAX,[R10 + R10*0x2]
0000b202(4): MOV RSI,qword ptr [RSP]
0000b206(3): MOV RDI,R9
0000b209(4): LEA RAX,[RCX + RAX*0x8]
0000b20d(4): MOV RAX,qword ptr [RAX + 0x10]
0000b211(3): MOV R14,qword ptr [RAX]
0000b214(3): MOV RDX,R14
0000b217(5): CALL 0x000096d0
0000b21c(3): TEST RAX,RAX
0000b21f(2): JNZ 0x0000b1b9
0000b221(5): MOV EDI,0x8
0000b226(9): MOV qword ptr [RSP + 0x50],0x1
0000b22f(9): MOV qword ptr [RSP + 0x58],0x1
0000b238(5): CALL 0x00001da0
0000b23d(3): TEST RAX,RAX
0000b240(5): MOV qword ptr [RSP + 0x60],RAX
0000b245(6): JZ 0x0000b33d
0000b24b(3): MOV qword ptr [RAX],R14
0000b24e(2): XOR EAX,EAX
0000b250(5): MOV R15,qword ptr [RSP + 0x10]
0000b255(5): MOV RDX,qword ptr [RSP + 0x20]
0000b25a(3): MOV RDI,R13
0000b25d(4): MOV ECX,dword ptr [RSP + 0x2c]
0000b261(4): MOV dword ptr [RSP + 0x4c],EAX
0000b265(3): MOV RSI,R15
0000b268(5): CALL 0x0000a080
0000b26d(3): MOV RSI,R15
0000b270(3): MOV RDI,RBP
0000b273(3): MOV R14D,EAX
0000b276(5): CALL 0x00009bf0
0000b27b(5): MOV RDI,qword ptr [RSP + 0x60]
0000b280(3): MOV R15D,EAX
0000b283(5): CALL 0x00001b00
0000b288(4): MOV EAX,dword ptr [RSP + 0x4c]
0000b28c(3): MOV EDX,R14D
0000b28f(3): OR EDX,R15D
0000b292(2): OR EDX,EAX
0000b294(6): JNZ 0x0000b326
0000b29a(7): MOV RCX,qword ptr [0xd8 + RBX]
0000b2a1(5): JMP 0x0000b0e3
0000b2b0(5): MOV EDI,0x8
0000b2b5(5): MOV qword ptr [RSP + 0x18],R10
0000b2ba(9): MOV qword ptr [RSP + 0x50],0x1
0000b2c3(9): MOV qword ptr [RSP + 0x58],0x1
0000b2cc(5): CALL 0x00001da0
0000b2d1(3): TEST RAX,RAX
0000b2d4(5): MOV qword ptr [RSP + 0x60],RAX
0000b2d9(2): JZ 0x0000b31c
0000b2db(5): MOV RDI,qword ptr [RSP + 0x8]
0000b2e0(8): MOV dword ptr [RSP + 0x4c],0x0
0000b2e8(5): MOV R10,qword ptr [RSP + 0x18]
0000b2ed(3): MOV qword ptr [RAX],RDI
0000b2f0(5): JMP 0x0000b17e
0000b2f5(4): MOV EAX,dword ptr [RSP + 0x4c]
0000b2f9(2): TEST EAX,EAX
0000b2fb(6): JZ 0x0000b1b9
0000b301(5): JMP 0x0000b07f
0000b306(5): MOV RDI,qword ptr [RSP + 0x60]
0000b30b(5): CALL 0x00001b00
0000b310(4): MOV EAX,dword ptr [RSP + 0x4c]
0000b314(2): TEST EAX,EAX
0000b316(6): JNZ 0x0000b07f
0000b31c(5): MOV EAX,0xc
0000b321(5): JMP 0x0000b07f
0000b326(2): TEST EAX,EAX
0000b328(6): JNZ 0x0000b07f
0000b32e(3): TEST R14D,R14D
0000b331(3): MOV EAX,R14D
0000b334(4): CMOVZ EAX,R15D
0000b338(5): JMP 0x0000b07f
0000b33d(9): MOV qword ptr [RSP + 0x58],0x0
0000b346(9): MOV qword ptr [RSP + 0x50],0x0
0000b34f(5): MOV EAX,0xc
0000b354(5): JMP 0x0000b250
0000b359(5): CALL 0x00001c20
0000b35e(2): NOP
0000b360(2): PUSH R15
0000b362(2): PUSH R14
0000b364(2): PUSH R13
0000b366(2): PUSH R12
0000b368(1): PUSH RBP
0000b369(1): PUSH RBX
0000b36a(4): SUB RSP,0x28
0000b36e(4): CMP qword ptr [RSI],0x0
0000b372(7): MOV R13,qword ptr [0x98 + RDI]
0000b379(6): JLE 0x0000b440
0000b37f(3): MOV R14,RDX
0000b382(3): MOV R12,RSI
0000b385(3): MOV R15,RDI
0000b388(2): XOR EBX,EBX
0000b38a(2): JMP 0x0000b39e
0000b390(4): ADD RBX,0x1
0000b394(4): CMP RBX,qword ptr [R12]
0000b398(6): JGE 0x0000b440
0000b39e(3): MOV RAX,qword ptr [R14]
0000b3a1(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000b3a5(3): MOV RAX,RBP
0000b3a8(4): SHL RAX,0x4
0000b3ac(4): ADD RAX,qword ptr [R13]
0000b3b0(4): CMP byte ptr [RAX + 0x8],0x8
0000b3b4(2): JNZ 0x0000b390
0000b3b6(3): MOV RAX,qword ptr [RAX]
0000b3b9(4): CMP RAX,0x3f
0000b3bd(2): JG 0x0000b390
0000b3bf(7): MOV RSI,qword ptr [0xa0 + R13]
0000b3c6(4): BT RSI,RAX
0000b3ca(2): JNC 0x0000b390
0000b3cc(7): MOV R8,qword ptr [0xe8 + R15]
0000b3d3(7): CMP R8,qword ptr [0xf0 + R15]
0000b3da(7): MOV R9,qword ptr [0xf8 + R15]
0000b3e1(2): JZ 0x0000b458
0000b3e3(5): MOV ESI,0x30
0000b3e8(5): MOV EDI,0x1
0000b3ed(5): MOV qword ptr [RSP + 0x10],R9
0000b3f2(5): MOV qword ptr [RSP + 0x8],R8
0000b3f7(5): MOV qword ptr [RSP + 0x18],RCX
0000b3fc(5): CALL 0x00001d30
0000b401(5): MOV R8,qword ptr [RSP + 0x8]
0000b406(5): MOV R9,qword ptr [RSP + 0x10]
0000b40b(3): TEST RAX,RAX
0000b40e(4): MOV qword ptr [R9 + R8*0x8],RAX
0000b412(2): JZ 0x0000b451
0000b414(4): ADD R8,0x1
0000b418(4): ADD RBX,0x1
0000b41c(5): MOV RCX,qword ptr [RSP + 0x18]
0000b421(7): MOV qword ptr [0xe8 + R15],R8
0000b428(4): CMP RBX,qword ptr [R12]
0000b42c(4): MOV qword ptr [RAX + 0x8],RBP
0000b430(3): MOV qword ptr [RAX],RCX
0000b433(6): JL 0x0000b39e
0000b439(7): NOP dword ptr [RAX]
0000b440(2): XOR EAX,EAX
0000b442(4): ADD RSP,0x28
0000b446(1): POP RBX
0000b447(1): POP RBP
0000b448(2): POP R12
0000b44a(2): POP R13
0000b44c(2): POP R14
0000b44e(2): POP R15
0000b450(1): RET
0000b451(5): MOV EAX,0xc
0000b456(2): JMP 0x0000b442
0000b458(4): LEA RAX,[R8 + R8*0x1]
0000b45c(3): MOV RSI,R8
0000b45f(3): MOV RDI,R9
0000b462(4): SHL RSI,0x4
0000b466(5): MOV qword ptr [RSP + 0x8],RCX
0000b46b(5): MOV qword ptr [RSP + 0x10],RAX
0000b470(5): CALL 0x00001e00
0000b475(3): TEST RAX,RAX
0000b478(3): MOV R9,RAX
0000b47b(5): MOV RCX,qword ptr [RSP + 0x8]
0000b480(2): JZ 0x0000b451
0000b482(7): MOV qword ptr [0xf8 + R15],RAX
0000b489(5): MOV RAX,qword ptr [RSP + 0x10]
0000b48e(7): MOV R8,qword ptr [0xe8 + R15]
0000b495(7): MOV qword ptr [0xf0 + R15],RAX
0000b49c(5): JMP 0x0000b3e3
0000b4b0(1): PUSH RBP
0000b4b1(1): PUSH RBX
0000b4b2(3): MOV RBP,RDI
0000b4b5(4): SUB RSP,0x8
0000b4b9(3): TEST RSI,RSI
0000b4bc(2): JS 0x0000b510
0000b4be(4): CMP qword ptr [RDI + 0x58],RSI
0000b4c2(6): JZ 0x0000b568
0000b4c8(7): CMP dword ptr [0x90 + RDI],0x1
0000b4cf(2): JLE 0x0000b520
0000b4d1(4): MOV RAX,qword ptr [RDI + 0x10]
0000b4d5(2): JMP 0x0000b4ea
0000b4e0(4): SUB RSI,0x1
0000b4e4(4): CMP RSI,-0x1
0000b4e8(2): JZ 0x0000b510
0000b4ea(3): MOV EBX,dword ptr [RAX + RSI*0x4]
0000b4ed(3): CMP EBX,-0x1
0000b4f0(2): JZ 0x0000b4e0
0000b4f2(7): CMP byte ptr [0x8e + RBP],0x0
0000b4f9(2): JNZ 0x0000b578
0000b4fb(2): XOR EAX,EAX
0000b4fd(3): CMP EBX,0xa
0000b500(2): JZ 0x0000b54c
0000b502(4): ADD RSP,0x8
0000b506(1): POP RBX
0000b507(1): POP RBP
0000b508(1): RET
0000b510(3): MOV EAX,dword ptr [RBP + 0x70]
0000b513(4): ADD RSP,0x8
0000b517(1): POP RBX
0000b518(1): POP RBP
0000b519(1): RET
0000b520(4): MOV RAX,qword ptr [RDI + 0x8]
0000b524(7): MOV RCX,qword ptr [0x80 + RDI]
0000b52b(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
0000b52f(3): MOV RDX,RAX
0000b532(4): SAR RAX,0x6
0000b536(4): MOV RCX,qword ptr [RCX + RAX*0x8]
0000b53a(5): MOV EAX,0x1
0000b53f(4): BT RCX,RDX
0000b543(2): JC 0x0000b502
0000b545(2): XOR EAX,EAX
0000b547(3): CMP DL,0xa
0000b54a(2): JNZ 0x0000b502
0000b54c(2): XOR EAX,EAX
0000b54e(7): CMP byte ptr [0x8d + RBP],0x0
0000b555(3): SETNZ AL
0000b558(4): ADD RSP,0x8
0000b55c(2): ADD EAX,EAX
0000b55e(1): POP RBX
0000b55f(1): POP RBP
0000b560(1): RET
0000b568(3): AND EDX,0x2
0000b56b(3): CMP EDX,0x1
0000b56e(2): SBB EAX,EAX
0000b570(3): AND EAX,0x2
0000b573(3): ADD EAX,0x8
0000b576(2): JMP 0x0000b502
0000b578(2): MOV EDI,EBX
0000b57a(5): CALL 0x00001d90
0000b57f(2): TEST EAX,EAX
0000b581(2): JNZ 0x0000b58c
0000b583(3): CMP EBX,0x5f
0000b586(6): JNZ 0x0000b4fb
0000b58c(5): MOV EAX,0x1
0000b591(5): JMP 0x0000b502
0000b5a0(4): MOV RAX,qword ptr [RDI + 0x8]
0000b5a4(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
0000b5a8(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000b5ac(2): CMP AL,0x3
0000b5ae(6): JZ 0x0000b668
0000b5b4(6): JBE 0x0000b650
0000b5ba(2): CMP AL,0x5
0000b5bc(2): JZ 0x0000b5d0
0000b5be(2): CMP AL,0x7
0000b5c0(6): JNZ 0x0000b660
0000b5c6(2): XOR EAX,EAX
0000b5c8(2): TEST CL,CL
0000b5ca(6): JS 0x0000b65a
0000b5d0(3): CMP CL,0xa
0000b5d3(6): JZ 0x0000b698
0000b5d9(2): TEST CL,CL
0000b5db(2): JNZ 0x0000b5f0
0000b5dd(7): MOV RCX,qword ptr [0x98 + RDI]
0000b5e4(2): XOR EAX,EAX
0000b5e6(7): TEST byte ptr [0xd8 + RCX],0x80
0000b5ed(2): JNZ 0x0000b65a
0000b5ef(1): NOP
0000b5f0(1): PUSH RBX
0000b5f1(3): MOV EBX,dword ptr [RSI + 0x8]
0000b5f4(5): MOV EAX,0x1
0000b5f9(6): TEST EBX,0x3ff00
0000b5ff(2): JZ 0x0000b64c
0000b601(3): MOV RSI,RDX
0000b604(6): MOV EDX,dword ptr [0xa0 + RDI]
0000b60a(3): SHR EBX,0x8
0000b60d(5): CALL 0x0000b4b0
0000b612(2): MOV ECX,EBX
0000b614(2): MOV EDX,EAX
0000b616(5): AND CX,0x3ff
0000b61b(3): TEST BL,0x4
0000b61e(2): JZ 0x0000b688
0000b620(2): XOR EAX,EAX
0000b622(3): TEST DL,0x1
0000b625(2): JZ 0x0000b64c
0000b627(3): AND EBX,0x8
0000b62a(2): JNZ 0x0000b64c
0000b62c(3): TEST CL,0x20
0000b62f(2): JZ 0x0000b638
0000b631(2): XOR EAX,EAX
0000b633(3): TEST DL,0x2
0000b636(2): JZ 0x0000b64c
0000b638(3): SHR EDX,0x3
0000b63b(5): MOV EAX,0x1
0000b640(3): AND EDX,0x1
0000b643(6): AND ECX,0x80
0000b649(3): CMOVNZ EAX,EDX
0000b64c(1): POP RBX
0000b64d(1): RET
0000b650(2): CMP AL,0x1
0000b652(2): JNZ 0x0000b660
0000b654(2): XOR EAX,EAX
0000b656(2): CMP byte ptr [RSI],CL
0000b658(2): JZ 0x0000b5f0
0000b65a(2): RET
0000b660(2): XOR EAX,EAX
0000b662(1): RET
0000b668(3): MOV R8,qword ptr [RSI]
0000b66b(3): MOVZX EAX,CL
0000b66e(4): SAR RAX,0x6
0000b672(4): MOV R8,qword ptr [R8 + RAX*0x8]
0000b676(2): XOR EAX,EAX
0000b678(4): BT RAX,RCX
0000b67c(6): JC 0x0000b5f0
0000b682(2): RET
0000b688(3): AND EBX,0x8
0000b68b(2): JZ 0x0000b62c
0000b68d(2): TEST AL,0x1
0000b68f(2): JZ 0x0000b62c
0000b691(2): XOR EAX,EAX
0000b693(1): POP RBX
0000b694(1): RET
0000b698(7): MOV RCX,qword ptr [0x98 + RDI]
0000b69f(2): XOR EAX,EAX
0000b6a1(7): TEST byte ptr [0xd8 + RCX],0x40
0000b6a8(6): JNZ 0x0000b5f0
0000b6ae(2): RET
0000b6b0(2): PUSH R12
0000b6b2(3): MOV R12,RDX
0000b6b5(1): PUSH RBP
0000b6b6(1): PUSH RBX
0000b6b7(6): MOV EDX,dword ptr [0xa0 + RDI]
0000b6bd(3): MOV RBX,RSI
0000b6c0(3): MOV RSI,RCX
0000b6c3(3): MOV RBP,RDI
0000b6c6(5): CALL 0x0000b4b0
0000b6cb(3): TEST RBX,RBX
0000b6ce(6): JLE 0x0000b778
0000b6d4(7): MOV RDX,qword ptr [0x98 + RBP]
0000b6db(3): MOV R11D,EAX
0000b6de(2): MOV EBP,EAX
0000b6e0(3): AND EAX,0x1
0000b6e3(4): MOV R9,qword ptr [R12]
0000b6e7(2): XOR ESI,ESI
0000b6e9(3): AND EBP,0x8
0000b6ec(4): AND R11D,0x2
0000b6f0(3): MOV R10D,EAX
0000b6f3(3): MOV R8,qword ptr [RDX]
0000b6f6(2): JMP 0x0000b709
0000b700(4): ADD RSI,0x1
0000b704(3): CMP RSI,RBX
0000b707(2): JZ 0x0000b778
0000b709(4): MOV RAX,qword ptr [R9 + RSI*0x8]
0000b70d(3): MOV RDX,RAX
0000b710(4): SHL RDX,0x4
0000b714(3): ADD RDX,R8
0000b717(3): MOV ECX,dword ptr [RDX + 0x8]
0000b71a(3): SHR ECX,0x8
0000b71d(2): MOV EDI,ECX
0000b71f(5): AND DI,0x3ff
0000b724(4): CMP byte ptr [RDX + 0x8],0x2
0000b728(2): JNZ 0x0000b700
0000b72a(3): TEST DI,DI
0000b72d(2): JZ 0x0000b755
0000b72f(3): TEST CL,0x4
0000b732(2): JZ 0x0000b760
0000b734(3): TEST R10D,R10D
0000b737(2): JZ 0x0000b700
0000b739(3): AND ECX,0x8
0000b73c(2): JNZ 0x0000b700
0000b73e(4): TEST DIL,0x20
0000b742(2): JZ 0x0000b749
0000b744(3): TEST R11D,R11D
0000b747(2): JZ 0x0000b700
0000b749(6): AND EDI,0x80
0000b74f(2): JZ 0x0000b755
0000b751(2): TEST EBP,EBP
0000b753(2): JZ 0x0000b700
0000b755(1): POP RBX
0000b756(1): POP RBP
0000b757(2): POP R12
0000b759(1): RET
0000b760(3): AND ECX,0x8
0000b763(2): JZ 0x0000b73e
0000b765(3): TEST R10D,R10D
0000b768(2): JNZ 0x0000b700
0000b76a(4): TEST DIL,0x20
0000b76e(2): JZ 0x0000b749
0000b770(2): JMP 0x0000b744
0000b778(1): POP RBX
0000b779(2): XOR EAX,EAX
0000b77b(1): POP RBP
0000b77c(2): POP R12
0000b77e(1): RET
0000b780(2): PUSH R15
0000b782(2): PUSH R14
0000b784(3): MOV R15,RSI
0000b787(2): PUSH R13
0000b789(2): PUSH R12
0000b78b(3): MOV R10D,EDX
0000b78e(1): PUSH RBP
0000b78f(1): PUSH RBX
0000b790(3): MOV RBP,RSI
0000b793(3): MOV RBX,RDI
0000b796(4): SUB RSP,0x48
0000b79a(9): MOV RAX,qword ptr FS:[0x28]
0000b7a3(5): MOV qword ptr [RSP + 0x38],RAX
0000b7a8(2): XOR EAX,EAX
0000b7aa(4): MOV RAX,qword ptr [RDI + 0x28]
0000b7ae(3): SUB RBP,RAX
0000b7b1(3): CMP RAX,RSI
0000b7b4(2): JLE 0x0000b816
0000b7b6(7): CMP dword ptr [0x90 + RDI],0x1
0000b7bd(6): JG 0x0000b8f0
0000b7c3(4): MOV RAX,qword ptr [RBX + 0x50]
0000b7c7(8): MOV qword ptr [RBX + 0x30],0x0
0000b7cf(3): MOV RBP,R15
0000b7d2(8): MOV qword ptr [RBX + 0x28],0x0
0000b7da(8): MOV qword ptr [RBX + 0x38],0x0
0000b7e2(7): MOV byte ptr [0x8c + RBX],0x0
0000b7e9(4): MOV qword ptr [RBX + 0x58],RAX
0000b7ed(4): MOV RAX,qword ptr [RBX + 0x60]
0000b7f1(4): MOV qword ptr [RBX + 0x68],RAX
0000b7f5(3): MOV EAX,R10D
0000b7f8(3): AND EAX,0x1
0000b7fb(3): CMP EAX,0x1
0000b7fe(2): SBB EAX,EAX
0000b800(3): AND EAX,0x2
0000b803(3): ADD EAX,0x4
0000b806(7): CMP byte ptr [0x8b + RBX],0x0
0000b80d(3): MOV dword ptr [RBX + 0x70],EAX
0000b810(6): JZ 0x0000b8e0
0000b816(3): TEST RBP,RBP
0000b819(2): JZ 0x0000b87e
0000b81b(4): MOV RAX,qword ptr [RBX + 0x38]
0000b81f(7): MOVZX EDX,byte ptr [0x8c + RBX]
0000b826(4): MOV R8,qword ptr [RBX + 0x30]
0000b82a(3): CMP RAX,RBP
0000b82d(6): JLE 0x0000b950
0000b833(2): TEST DL,DL
0000b835(6): JNZ 0x0000ba48
0000b83b(4): LEA RSI,[RBP + -0x1]
0000b83f(3): MOV EDX,R10D
0000b842(3): MOV RDI,RBX
0000b845(4): MOV qword ptr [RSP],R8
0000b849(5): CALL 0x0000b4b0
0000b84e(4): MOV R8,qword ptr [RSP]
0000b852(3): MOV dword ptr [RBX + 0x70],EAX
0000b855(3): SUB R8,RBP
0000b858(7): CMP dword ptr [0x90 + RBX],0x1
0000b85f(6): JG 0x0000b900
0000b865(7): CMP byte ptr [0x8b + RBX],0x0
0000b86c(6): JNZ 0x0000bc10
0000b872(4): SUB qword ptr [RBX + 0x38],RBP
0000b876(4): MOV qword ptr [RBX + 0x30],R8
0000b87a(4): ADD qword ptr [RBX + 0x8],RBP
0000b87e(4): MOV RAX,qword ptr [RBX + 0x58]
0000b882(4): SUB qword ptr [RBX + 0x68],RBP
0000b886(4): MOV qword ptr [RBX + 0x28],R15
0000b88a(3): SUB RAX,RBP
0000b88d(7): CMP dword ptr [0x90 + RBX],0x1
0000b894(4): MOV qword ptr [RBX + 0x58],RAX
0000b898(6): JLE 0x0000b938
0000b89e(7): CMP byte ptr [0x88 + RBX],0x0
0000b8a5(3): MOV RDI,RBX
0000b8a8(2): JZ 0x0000b928
0000b8aa(5): CALL 0x000085f0
0000b8af(2): TEST EAX,EAX
0000b8b1(2): JNZ 0x0000b8bd
0000b8b3(8): MOV qword ptr [RBX + 0x48],0x0
0000b8bb(2): XOR EAX,EAX
0000b8bd(5): MOV RCX,qword ptr [RSP + 0x38]
0000b8c2(9): XOR RCX,qword ptr FS:[0x28]
0000b8cb(6): JNZ 0x0000bf1a
0000b8d1(4): ADD RSP,0x48
0000b8d5(1): POP RBX
0000b8d6(1): POP RBP
0000b8d7(2): POP R12
0000b8d9(2): POP R13
0000b8db(2): POP R14
0000b8dd(2): POP R15
0000b8df(1): RET
0000b8e0(3): MOV RAX,qword ptr [RBX]
0000b8e3(4): MOV qword ptr [RBX + 0x8],RAX
0000b8e7(5): JMP 0x0000b816
0000b8f0(8): MOV qword ptr [RDI + 0x20],0x0
0000b8f8(5): JMP 0x0000b7c3
0000b900(4): MOV RDI,qword ptr [RBX + 0x10]
0000b904(8): LEA RDX,[R8*0x4]
0000b90c(4): LEA RSI,[RDI + RBP*0x4]
0000b910(5): CALL 0x00001e50
0000b915(4): MOV R8,qword ptr [RBX + 0x30]
0000b919(3): SUB R8,RBP
0000b91c(5): JMP 0x0000b865
0000b928(5): CALL 0x00008420
0000b92d(5): JMP 0x0000b8b3
0000b938(7): CMP byte ptr [0x8b + RBX],0x0
0000b93f(6): JNZ 0x0000bcf0
0000b945(4): MOV qword ptr [RBX + 0x30],RAX
0000b949(5): JMP 0x0000b8b3
0000b950(2): TEST DL,DL
0000b952(6): JNZ 0x0000bdfd
0000b958(7): MOVSXD RDX,dword ptr [0x90 + RBX]
0000b95f(8): MOV qword ptr [RBX + 0x30],0x0
0000b967(4): MOV R11,qword ptr [RBX + 0x28]
0000b96b(3): CMP EDX,0x1
0000b96e(6): JLE 0x0000bd58
0000b974(7): CMP byte ptr [0x89 + RBX],0x0
0000b97b(6): JNZ 0x0000bc38
0000b981(4): LEA R14,[R11 + RAX*0x1]
0000b985(3): CMP R15,R14
0000b988(6): JLE 0x0000bdcf
0000b98e(4): LEA RAX,[RBX + 0x20]
0000b992(5): LEA R13,[RSP + 0x24]
0000b997(5): MOV qword ptr [RSP + 0x10],RAX
0000b99c(4): NOP dword ptr [RAX]
0000b9a0(4): MOV R12,qword ptr [RBX + 0x50]
0000b9a4(3): MOV RSI,qword ptr [RBX]
0000b9a7(3): MOV RDI,R13
0000b9aa(4): MOV RAX,qword ptr [RBX + 0x20]
0000b9ae(5): MOV RCX,qword ptr [RSP + 0x10]
0000b9b3(5): MOV dword ptr [RSP + 0xc],R10D
0000b9b8(4): MOV qword ptr [RSP],R8
0000b9bc(3): SUB R12,R14
0000b9bf(3): ADD RSI,R14
0000b9c2(3): MOV RDX,R12
0000b9c5(5): MOV qword ptr [RSP + 0x18],RAX
0000b9ca(5): CALL 0x00007b30
0000b9cf(4): LEA RCX,[RAX + -0x1]
0000b9d3(4): MOV EDX,dword ptr [RSP + 0x24]
0000b9d7(4): MOV R8,qword ptr [RSP]
0000b9db(5): MOV R10D,dword ptr [RSP + 0xc]
0000b9e0(4): CMP RCX,-0x4
0000b9e4(6): JA 0x0000be25
0000b9ea(3): ADD R14,RAX
0000b9ed(3): CMP R15,R14
0000b9f0(2): JG 0x0000b9a0
0000b9f2(3): SUB R14,R15
0000b9f5(3): CMP EDX,-0x1
0000b9f8(3): MOV R12,R14
0000b9fb(4): MOV qword ptr [RBX + 0x30],R14
0000b9ff(6): JZ 0x0000bdd9
0000ba05(7): CMP byte ptr [0x8e + RBX],0x0
0000ba0c(6): JNZ 0x0000be79
0000ba12(2): XOR EAX,EAX
0000ba14(3): CMP EDX,0xa
0000ba17(2): JNZ 0x0000ba27
0000ba19(2): XOR EAX,EAX
0000ba1b(7): CMP byte ptr [0x8d + RBX],0x0
0000ba22(3): SETNZ AL
0000ba25(2): ADD EAX,EAX
0000ba27(3): MOV dword ptr [RBX + 0x70],EAX
0000ba2a(4): CMP R12,0x0
0000ba2e(6): JNZ 0x0000be4a
0000ba34(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000ba3b(4): MOV qword ptr [RBX + 0x38],R12
0000ba3f(5): JMP 0x0000bbfc
0000ba48(4): MOV R14,qword ptr [RBX + 0x18]
0000ba4c(3): MOV RCX,R8
0000ba4f(2): XOR ESI,ESI
0000ba51(2): JMP 0x0000ba63
0000ba58(2): JGE 0x0000ba93
0000ba5a(4): LEA RSI,[RAX + 0x1]
0000ba5e(3): CMP RSI,RCX
0000ba61(2): JGE 0x0000ba88
0000ba63(4): LEA RDX,[RSI + RCX*0x1]
0000ba67(3): MOV RAX,RDX
0000ba6a(4): SHR RAX,0x3f
0000ba6e(3): ADD RAX,RDX
0000ba71(3): SAR RAX,1
0000ba74(4): MOV RDX,qword ptr [R14 + RAX*0x8]
0000ba78(3): MOV R12,RAX
0000ba7b(3): CMP RDX,RBP
0000ba7e(2): JLE 0x0000ba58
0000ba80(3): MOV RCX,RAX
0000ba83(2): JMP 0x0000ba5e
0000ba88(4): LEA R12,[RAX + 0x1]
0000ba8c(3): CMP RDX,RBP
0000ba8f(4): CMOVGE R12,RAX
0000ba93(5): LEA R13,[R12 + -0x1]
0000ba98(3): MOV EDX,R10D
0000ba9b(3): MOV RDI,RBX
0000ba9e(4): MOV qword ptr [RSP],R8
0000baa2(3): MOV RSI,R13
0000baa5(5): CALL 0x0000b4b0
0000baaa(3): CMP RBP,R12
0000baad(3): MOV dword ptr [RBX + 0x70],EAX
0000bab0(4): MOV R8,qword ptr [RSP]
0000bab4(6): JNZ 0x0000bb38
0000baba(3): CMP RBP,R8
0000babd(2): JGE 0x0000bb38
0000babf(4): CMP qword ptr [R14 + R12*0x8],RBP
0000bac3(2): JNZ 0x0000bb38
0000bac5(4): MOV RDI,qword ptr [RBX + 0x10]
0000bac9(3): SUB R8,RBP
0000bacc(8): LEA RDX,[R8*0x4]
0000bad4(4): LEA RSI,[RDI + RBP*0x4]
0000bad8(5): CALL 0x00001e50
0000badd(4): MOV RDI,qword ptr [RBX + 0x8]
0000bae1(4): MOV RDX,qword ptr [RBX + 0x30]
0000bae5(4): LEA RSI,[RDI + RBP*0x1]
0000bae9(3): SUB RDX,RBP
0000baec(5): CALL 0x00001e50
0000baf1(4): MOV RAX,qword ptr [RBX + 0x30]
0000baf5(4): SUB qword ptr [RBX + 0x38],RBP
0000baf9(3): SUB RAX,RBP
0000bafc(3): TEST RAX,RAX
0000baff(4): MOV qword ptr [RBX + 0x30],RAX
0000bb03(2): JLE 0x0000bb28
0000bb05(4): MOV RCX,qword ptr [RBX + 0x18]
0000bb09(2): XOR EAX,EAX
0000bb0b(4): LEA RSI,[RCX + RBP*0x8]
0000bb0f(1): NOP
0000bb10(4): MOV RDX,qword ptr [RSI + RAX*0x8]
0000bb14(3): SUB RDX,RBP
0000bb17(4): MOV qword ptr [RCX + RAX*0x8],RDX
0000bb1b(4): ADD RAX,0x1
0000bb1f(4): CMP qword ptr [RBX + 0x30],RAX
0000bb23(2): JG 0x0000bb10
0000bb25(3): NOP dword ptr [RAX]
0000bb28(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000bb2f(5): JMP 0x0000bbfc
0000bb38(4): MOV RAX,qword ptr [RBX + 0x50]
0000bb3c(7): MOV byte ptr [0x8c + RBX],0x0
0000bb43(3): ADD RAX,RBP
0000bb46(3): SUB RAX,R15
0000bb49(4): MOV qword ptr [RBX + 0x58],RAX
0000bb4d(4): MOV RAX,qword ptr [RBX + 0x60]
0000bb51(3): ADD RAX,RBP
0000bb54(3): SUB RAX,R15
0000bb57(3): TEST R12,R12
0000bb5a(4): MOV qword ptr [RBX + 0x68],RAX
0000bb5e(2): JLE 0x0000bb83
0000bb60(5): CMP qword ptr [R14 + R12*0x8 + -0x8],RBP
0000bb65(2): JZ 0x0000bb7b
0000bb67(2): JMP 0x0000bb83
0000bb70(5): CMP qword ptr [R14 + R13*0x8 + -0x8],RBP
0000bb75(2): JNZ 0x0000bb83
0000bb77(4): SUB R13,0x1
0000bb7b(3): TEST R13,R13
0000bb7e(3): MOV R12,R13
0000bb81(2): JNZ 0x0000bb70
0000bb83(3): CMP R12,R8
0000bb86(6): JGE 0x0000bdb8
0000bb8c(4): MOV RAX,qword ptr [RBX + 0x10]
0000bb90(2): JMP 0x0000bba5
0000bb98(4): ADD R12,0x1
0000bb9c(3): CMP R12,R8
0000bb9f(6): JZ 0x0000bdc0
0000bba5(5): CMP dword ptr [RAX + R12*0x4],-0x1
0000bbaa(2): JZ 0x0000bb98
0000bbac(4): MOV RDX,qword ptr [R14 + R12*0x8]
0000bbb0(3): SUB RDX,RBP
0000bbb3(4): CMP RDX,0x0
0000bbb7(4): MOV qword ptr [RBX + 0x30],RDX
0000bbbb(2): JZ 0x0000bbf1
0000bbbd(2): JLE 0x0000bbdf
0000bbbf(4): MOV RAX,qword ptr [RBX + 0x10]
0000bbc3(4): LEA RCX,[RAX + RDX*0x4]
0000bbc7(9): NOP word ptr [RAX + RAX*0x1]
0000bbd0(6): MOV dword ptr [RAX],0xffffffff
0000bbd6(4): ADD RAX,0x4
0000bbda(3): CMP RCX,RAX
0000bbdd(2): JNZ 0x0000bbd0
0000bbdf(4): MOV RDI,qword ptr [RBX + 0x8]
0000bbe3(5): MOV ESI,0xff
0000bbe8(5): CALL 0x00001cb0
0000bbed(4): MOV RDX,qword ptr [RBX + 0x30]
0000bbf1(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000bbf8(4): MOV qword ptr [RBX + 0x38],RDX
0000bbfc(2): TEST AL,AL
0000bbfe(6): JZ 0x0000b87a
0000bc04(5): JMP 0x0000b87e
0000bc10(4): MOV RDI,qword ptr [RBX + 0x8]
0000bc14(3): MOV RDX,R8
0000bc17(4): LEA RSI,[RDI + RBP*0x1]
0000bc1b(5): CALL 0x00001e50
0000bc20(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000bc27(4): SUB qword ptr [RBX + 0x30],RBP
0000bc2b(4): SUB qword ptr [RBX + 0x38],RBP
0000bc2f(2): JMP 0x0000bbfc
0000bc38(3): MOV RCX,qword ptr [RBX]
0000bc3b(3): MOV RDI,RBP
0000bc3e(3): SUB RDI,RDX
0000bc41(3): MOV RDX,RDI
0000bc44(4): LEA R12,[RCX + R11*0x1]
0000bc48(3): ADD RDX,R12
0000bc4b(5): LEA RSI,[R12 + RBP*0x1 + -0x1]
0000bc50(3): CMP RCX,RDX
0000bc53(4): CMOVC RCX,RDX
0000bc57(3): CMP RCX,RSI
0000bc5a(2): JBE 0x0000bc75
0000bc5c(5): JMP 0x0000b981
0000bc68(4): SUB RSI,0x1
0000bc6c(3): CMP RCX,RSI
0000bc6f(6): JA 0x0000b981
0000bc75(3): MOVZX EDX,byte ptr [RSI]
0000bc78(3): AND EDX,0xffffffc0
0000bc7b(3): CMP DL,0x80
0000bc7e(2): JZ 0x0000bc68
0000bc80(4): MOV RDX,qword ptr [RBX + 0x58]
0000bc84(4): MOV RCX,qword ptr [RBX + 0x78]
0000bc88(3): MOV R14,RSI
0000bc8b(3): ADD RDX,R12
0000bc8e(3): SUB RDX,RSI
0000bc91(3): TEST RCX,RCX
0000bc94(6): JNZ 0x0000bee2
0000bc9a(5): LEA R13,[RSP + 0x24]
0000bc9f(3): ADD R12,RBP
0000bca2(5): LEA RCX,[RSP + 0x28]
0000bca7(3): SUB R12,R14
0000bcaa(5): MOV dword ptr [RSP + 0xc],R10D
0000bcaf(4): MOV qword ptr [RSP],R8
0000bcb3(3): MOV RDI,R13
0000bcb6(9): MOV qword ptr [RSP + 0x28],0x0
0000bcbf(5): CALL 0x00007b30
0000bcc4(3): CMP R12,RAX
0000bcc7(4): MOV R8,qword ptr [RSP]
0000bccb(5): MOV R10D,dword ptr [RSP + 0xc]
0000bcd0(2): JA 0x0000bcdc
0000bcd2(4): CMP RAX,-0x3
0000bcd6(6): JBE 0x0000bea1
0000bcdc(4): MOV R11,qword ptr [RBX + 0x28]
0000bce0(4): MOV RAX,qword ptr [RBX + 0x38]
0000bce4(5): JMP 0x0000b981
0000bcf0(7): CMP byte ptr [0x88 + RBX],0x0
0000bcf7(6): JNZ 0x0000bdf0
0000bcfd(4): MOV RCX,qword ptr [RBX + 0x78]
0000bd01(3): TEST RCX,RCX
0000bd04(6): JZ 0x0000b8b3
0000bd0a(4): CMP qword ptr [RBX + 0x40],RAX
0000bd0e(4): MOV RDX,qword ptr [RBX + 0x30]
0000bd12(5): CMOVLE RAX,qword ptr [RBX + 0x40]
0000bd17(3): CMP RAX,RDX
0000bd1a(2): JG 0x0000bd28
0000bd1c(2): JMP 0x0000bd48
0000bd20(4): MOV R15,qword ptr [RBX + 0x28]
0000bd24(4): MOV RCX,qword ptr [RBX + 0x78]
0000bd28(3): MOV RSI,qword ptr [RBX]
0000bd2b(3): ADD RSI,RDX
0000bd2e(5): MOVZX ESI,byte ptr [RSI + R15*0x1]
0000bd33(4): MOVZX ESI,byte ptr [RCX + RSI*0x1]
0000bd37(4): MOV RCX,qword ptr [RBX + 0x8]
0000bd3b(4): MOV byte ptr [RCX + RDX*0x1],SIL
0000bd3f(4): ADD RDX,0x1
0000bd43(3): CMP RAX,RDX
0000bd46(2): JNZ 0x0000bd20
0000bd48(4): MOV qword ptr [RBX + 0x30],RDX
0000bd4c(4): MOV qword ptr [RBX + 0x38],RDX
0000bd50(5): JMP 0x0000b8b3
0000bd58(3): MOV RAX,qword ptr [RBX]
0000bd5b(4): MOV RDX,qword ptr [RBX + 0x78]
0000bd5f(3): ADD RAX,RBP
0000bd62(3): TEST RDX,RDX
0000bd65(6): MOVZX EAX,byte ptr [R11 + RAX*0x1 + -0x1]
0000bd6b(8): MOV qword ptr [RBX + 0x38],0x0
0000bd73(2): JZ 0x0000bd79
0000bd75(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
0000bd79(7): MOV RCX,qword ptr [0x80 + RBX]
0000bd80(3): MOVZX EDX,AL
0000bd83(4): SAR RDX,0x6
0000bd87(4): MOV RCX,qword ptr [RCX + RDX*0x8]
0000bd8b(5): MOV EDX,0x1
0000bd90(4): BT RCX,RAX
0000bd94(2): JC 0x0000bdb0
0000bd96(2): XOR EDX,EDX
0000bd98(2): CMP AL,0xa
0000bd9a(2): JNZ 0x0000bdb0
0000bd9c(2): XOR EDX,EDX
0000bd9e(7): CMP byte ptr [0x8d + RBX],0x0
0000bda5(3): SETNZ DL
0000bda8(2): ADD EDX,EDX
0000bdaa(6): NOP word ptr [RAX + RAX*0x1]
0000bdb0(3): MOV dword ptr [RBX + 0x70],EDX
0000bdb3(5): JMP 0x0000bb28
0000bdb8(6): JNZ 0x0000bbac
0000bdbe(2): NOP
0000bdc0(8): MOV qword ptr [RBX + 0x30],0x0
0000bdc8(2): XOR EDX,EDX
0000bdca(5): JMP 0x0000bbf1
0000bdcf(3): SUB R14,R15
0000bdd2(3): MOV R12,R14
0000bdd5(4): MOV qword ptr [RBX + 0x30],R14
0000bdd9(4): LEA RSI,[R8 + -0x1]
0000bddd(3): MOV EDX,R10D
0000bde0(3): MOV RDI,RBX
0000bde3(5): CALL 0x0000b4b0
0000bde8(3): MOV dword ptr [RBX + 0x70],EAX
0000bdeb(5): JMP 0x0000ba2a
0000bdf0(3): MOV RDI,RBX
0000bdf3(5): CALL 0x000083b0
0000bdf8(5): JMP 0x0000b8b3
0000bdfd(4): MOV RDX,qword ptr [RBX + 0x50]
0000be01(7): MOV byte ptr [0x8c + RBX],0x0
0000be08(3): ADD RDX,RBP
0000be0b(3): SUB RDX,R15
0000be0e(4): MOV qword ptr [RBX + 0x58],RDX
0000be12(4): MOV RDX,qword ptr [RBX + 0x60]
0000be16(3): ADD RDX,RBP
0000be19(3): SUB RDX,R15
0000be1c(4): MOV qword ptr [RBX + 0x68],RDX
0000be20(5): JMP 0x0000b958
0000be25(3): TEST RAX,RAX
0000be28(2): JZ 0x0000be9d
0000be2a(3): TEST R12,R12
0000be2d(2): JZ 0x0000be9d
0000be2f(3): MOV RAX,qword ptr [RBX]
0000be32(5): MOVZX EDX,byte ptr [RAX + R14*0x1]
0000be37(5): MOV RAX,qword ptr [RSP + 0x18]
0000be3c(4): MOV qword ptr [RBX + 0x20],RAX
0000be40(5): MOV EAX,0x1
0000be45(5): JMP 0x0000b9ea
0000be4a(2): JLE 0x0000be67
0000be4c(4): MOV RAX,qword ptr [RBX + 0x10]
0000be50(4): LEA RDX,[RAX + R12*0x4]
0000be54(4): NOP dword ptr [RAX]
0000be58(6): MOV dword ptr [RAX],0xffffffff
0000be5e(4): ADD RAX,0x4
0000be62(3): CMP RDX,RAX
0000be65(2): JNZ 0x0000be58
0000be67(7): CMP byte ptr [0x8b + RBX],0x0
0000be6e(2): JNZ 0x0000bec8
0000be70(4): MOV qword ptr [RBX + 0x38],R12
0000be74(5): JMP 0x0000b87a
0000be79(2): MOV EDI,EDX
0000be7b(3): MOV dword ptr [RSP],EDX
0000be7e(5): CALL 0x00001d90
0000be83(2): TEST EAX,EAX
0000be85(2): JNZ 0x0000be93
0000be87(3): MOV EDX,dword ptr [RSP]
0000be8a(3): CMP EDX,0x5f
0000be8d(6): JNZ 0x0000ba12
0000be93(5): MOV EAX,0x1
0000be98(5): JMP 0x0000ba27
0000be9d(2): XOR EDX,EDX
0000be9f(2): JMP 0x0000be37
0000bea1(4): MOV EDX,dword ptr [RSP + 0x24]
0000bea5(3): SUB RAX,R12
0000bea8(8): MOV qword ptr [RBX + 0x20],0x0
0000beb0(3): MOV R12,RAX
0000beb3(4): MOV qword ptr [RBX + 0x30],RAX
0000beb7(3): CMP EDX,-0x1
0000beba(6): JNZ 0x0000ba05
0000bec0(5): JMP 0x0000bcdc
0000bec8(4): MOV RDI,qword ptr [RBX + 0x8]
0000becc(3): MOV RDX,R12
0000becf(5): MOV ESI,0xff
0000bed4(5): CALL 0x00001cb0
0000bed9(4): MOV R12,qword ptr [RBX + 0x30]
0000bedd(5): JMP 0x0000ba34
0000bee2(4): CMP RDX,0x6
0000bee6(5): MOV EDI,0x6
0000beeb(5): LEA R11,[RSP + 0x32]
0000bef0(4): CMOVLE RDI,RDX
0000bef4(3): SUB EDI,0x1
0000bef7(2): TEST EDI,EDI
0000bef9(3): MOVSXD RAX,EDI
0000befc(2): JS 0x0000bf12
0000befe(4): MOVZX EDI,byte ptr [RSI + RAX*0x1]
0000bf02(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
0000bf06(4): MOV byte ptr [R11 + RAX*0x1],DIL
0000bf0a(4): SUB RAX,0x1
0000bf0e(2): TEST EAX,EAX
0000bf10(2): JNS 0x0000befe
0000bf12(3): MOV RSI,R11
0000bf15(5): JMP 0x0000bc9a
0000bf1a(5): CALL 0x00001c20
0000bf1f(1): NOP
0000bf20(2): PUSH R15
0000bf22(2): PUSH R14
0000bf24(3): MOV R14,RDX
0000bf27(2): PUSH R13
0000bf29(2): PUSH R12
0000bf2b(4): LEA RDX,[RSI + RSI*0x2]
0000bf2f(1): PUSH RBP
0000bf30(1): PUSH RBX
0000bf31(4): PXOR XMM0,XMM0
0000bf35(4): SUB RSP,0x48
0000bf39(9): MOV RAX,qword ptr FS:[0x28]
0000bf42(5): MOV qword ptr [RSP + 0x38],RAX
0000bf47(2): XOR EAX,EAX
0000bf49(4): MOV RAX,qword ptr [RDI + 0x38]
0000bf4d(9): MOV qword ptr [RSP + 0x30],0x0
0000bf56(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000bf5b(5): MOV qword ptr [RSP + 0x10],RCX
0000bf60(4): LEA RBP,[RAX + RDX*0x8]
0000bf64(4): MOV R10,qword ptr [RBP + 0x8]
0000bf68(3): TEST R10,R10
0000bf6b(6): JLE 0x0000c152
0000bf71(5): LEA RAX,[RSP + 0x20]
0000bf76(3): MOV R12,RDI
0000bf79(3): MOV R13,RSI
0000bf7c(2): XOR EBX,EBX
0000bf7e(5): MOV qword ptr [RSP + 0x18],RAX
0000bf83(2): JMP 0x0000bfdd
0000bf88(3): TEST RAX,RAX
0000bf8b(6): JNZ 0x0000c068
0000bf91(4): MOV RDI,qword ptr [R14 + 0x8]
0000bf95(4): LEA RSI,[R14 + 0x10]
0000bf99(3): MOV RDX,R8
0000bf9c(5): CALL 0x000096d0
0000bfa1(3): TEST RAX,RAX
0000bfa4(6): JZ 0x0000c068
0000bfaa(5): MOV RDX,qword ptr [R12 + 0x38]
0000bfaf(5): MOV RSI,qword ptr [RSP + 0x10]
0000bfb4(5): MOV RDI,qword ptr [RSP + 0x18]
0000bfb9(3): ADD RDX,R9
0000bfbc(5): CALL 0x0000a1e0
0000bfc1(2): TEST EAX,EAX
0000bfc3(6): JNZ 0x0000c140
0000bfc9(4): MOV R10,qword ptr [RBP + 0x8]
0000bfcd(3): NOP dword ptr [RAX]
0000bfd0(4): ADD RBX,0x1
0000bfd4(3): CMP R10,RBX
0000bfd7(6): JLE 0x0000c0b0
0000bfdd(4): MOV RAX,qword ptr [RBP + 0x10]
0000bfe1(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000bfe5(3): CMP R13,RAX
0000bfe8(2): JZ 0x0000bfd0
0000bfea(3): MOV RDX,RAX
0000bfed(4): SHL RDX,0x4
0000bff1(4): ADD RDX,qword ptr [R12]
0000bff5(4): TEST byte ptr [RDX + 0x8],0x8
0000bff9(2): JZ 0x0000bfd0
0000bffb(4): LEA R9,[RAX + RAX*0x2]
0000bfff(5): MOV RCX,qword ptr [R12 + 0x28]
0000c004(4): LEA R11,[RBP + 0x10]
0000c008(3): MOV RDI,R10
0000c00b(4): SHL R9,0x3
0000c00f(3): MOV RSI,R11
0000c012(3): ADD RCX,R9
0000c015(4): MOV R15,qword ptr [RCX + 0x10]
0000c019(5): MOV qword ptr [RSP + 0x8],RCX
0000c01e(3): MOV R8,qword ptr [R15]
0000c021(3): MOV RDX,R8
0000c024(4): MOV qword ptr [RSP],R8
0000c028(5): CALL 0x000096d0
0000c02d(5): MOV RCX,qword ptr [RSP + 0x8]
0000c032(4): MOV R8,qword ptr [RSP]
0000c036(5): CMP qword ptr [RCX + 0x8],0x1
0000c03b(6): JG 0x0000bf88
0000c041(3): TEST RAX,RAX
0000c044(2): JNZ 0x0000bfd0
0000c046(4): MOV RDI,qword ptr [R14 + 0x8]
0000c04a(4): LEA RSI,[R14 + 0x10]
0000c04e(3): MOV RDX,R8
0000c051(5): CALL 0x000096d0
0000c056(3): TEST RAX,RAX
0000c059(6): JNZ 0x0000bfaa
0000c05f(5): JMP 0x0000bfd0
0000c068(4): MOV R15,qword ptr [R15 + 0x8]
0000c06c(3): TEST R15,R15
0000c06f(6): JLE 0x0000bfd0
0000c075(3): MOV RDX,R15
0000c078(3): MOV RSI,R11
0000c07b(3): MOV RDI,R10
0000c07e(5): CALL 0x000096d0
0000c083(3): TEST RAX,RAX
0000c086(6): JNZ 0x0000bfd0
0000c08c(4): MOV RDI,qword ptr [R14 + 0x8]
0000c090(4): LEA RSI,[R14 + 0x10]
0000c094(5): CALL 0x000096d0
0000c099(3): TEST RAX,RAX
0000c09c(6): JZ 0x0000bfd0
0000c0a2(5): JMP 0x0000bfaa
0000c0b0(3): XOR R9D,R9D
0000c0b3(3): TEST R10,R10
0000c0b6(5): LEA R11,[RSP + 0x30]
0000c0bb(2): JLE 0x0000c10c
0000c0bd(3): NOP dword ptr [RAX]
0000c0c0(4): MOV RAX,qword ptr [RBP + 0x10]
0000c0c4(5): MOV RDI,qword ptr [RSP + 0x28]
0000c0c9(3): MOV RSI,R11
0000c0cc(4): MOV R10,qword ptr [RAX + R9*0x8]
0000c0d0(3): MOV RDX,R10
0000c0d3(5): CALL 0x000096d0
0000c0d8(3): TEST RAX,RAX
0000c0db(2): JNZ 0x0000c102
0000c0dd(4): LEA RBX,[R14 + 0x10]
0000c0e1(4): MOV RDI,qword ptr [R14 + 0x8]
0000c0e5(3): MOV RSI,RBX
0000c0e8(5): CALL 0x000096d0
0000c0ed(4): SUB RAX,0x1
0000c0f1(3): MOV RDX,RAX
0000c0f4(2): JS 0x0000c102
0000c0f6(4): LEA RDI,[R14 + 0x8]
0000c0fa(3): MOV RSI,RBX
0000c0fd(5): CALL 0x00009850
0000c102(4): ADD R9,0x1
0000c106(4): CMP qword ptr [RBP + 0x8],R9
0000c10a(2): JG 0x0000c0c0
0000c10c(5): MOV RDI,qword ptr [RSP + 0x30]
0000c111(5): CALL 0x00001b00
0000c116(2): XOR EAX,EAX
0000c118(5): MOV RSI,qword ptr [RSP + 0x38]
0000c11d(9): XOR RSI,qword ptr FS:[0x28]
0000c126(2): JNZ 0x0000c156
0000c128(4): ADD RSP,0x48
0000c12c(1): POP RBX
0000c12d(1): POP RBP
0000c12e(2): POP R12
0000c130(2): POP R13
0000c132(2): POP R14
0000c134(2): POP R15
0000c136(1): RET
0000c140(5): MOV RDI,qword ptr [RSP + 0x30]
0000c145(3): MOV dword ptr [RSP],EAX
0000c148(5): CALL 0x00001b00
0000c14d(3): MOV EAX,dword ptr [RSP]
0000c150(2): JMP 0x0000c118
0000c152(2): XOR EDI,EDI
0000c154(2): JMP 0x0000c111
0000c156(5): CALL 0x00001c20
0000c15b(5): NOP dword ptr [RAX + RAX*0x1]
0000c160(2): PUSH R15
0000c162(2): PUSH R14
0000c164(3): MOV R15,RDI
0000c167(2): PUSH R13
0000c169(2): PUSH R12
0000c16b(5): MOV EDI,0x3800
0000c170(1): PUSH RBP
0000c171(1): PUSH RBX
0000c172(7): SUB RSP,0x108
0000c179(9): MOV RAX,qword ptr FS:[0x28]
0000c182(8): MOV qword ptr [0xf8 + RSP],RAX
0000c18a(2): XOR EAX,EAX
0000c18c(5): MOV qword ptr [RSP + 0x8],RSI
0000c191(5): CALL 0x00001da0
0000c196(3): TEST RAX,RAX
0000c199(5): MOV qword ptr [RSP + 0x18],RAX
0000c19e(6): JZ 0x0000c570
0000c1a4(5): MOV RAX,qword ptr [RSP + 0x18]
0000c1a9(4): PXOR XMM0,XMM0
0000c1ad(7): LEA RBX,[0x1800 + RAX]
0000c1b4(5): MOV RAX,qword ptr [RSP + 0x8]
0000c1b9(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000c1c1(5): MOV qword ptr [RSP + 0x40],RBX
0000c1c6(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000c1ce(5): CMP qword ptr [RAX + 0x10],0x0
0000c1d3(8): MOV qword ptr [RAX + 0x58],0x0
0000c1db(8): MOV qword ptr [RAX + 0x60],0x0
0000c1e3(6): JLE 0x0000cc5a
0000c1e9(5): MOV qword ptr [RSP + 0x30],R15
0000c1ee(2): XOR EBP,EBP
0000c1f0(9): MOV qword ptr [RSP + 0x10],0x0
0000c1f9(3): MOV R15,RBX
0000c1fc(5): MOV RBX,qword ptr [RSP + 0x10]
0000c201(8): LEA RAX,[RBX*0x8]
0000c209(5): MOV qword ptr [RSP + 0x20],RAX
0000c20e(5): MOV RAX,qword ptr [RSP + 0x8]
0000c213(4): MOV RAX,qword ptr [RAX + 0x18]
0000c217(4): MOV R13,qword ptr [RAX + RBX*0x8]
0000c21b(5): MOV RAX,qword ptr [RSP + 0x30]
0000c220(4): SHL R13,0x4
0000c224(3): ADD R13,qword ptr [RAX]
0000c227(5): MOVZX R14D,byte ptr [R13 + 0x8]
0000c22c(4): MOV EAX,dword ptr [R13 + 0x8]
0000c230(3): SHR EAX,0x8
0000c233(4): AND AX,0x3ff
0000c237(4): CMP R14D,0x1
0000c23b(6): JZ 0x0000c5a0
0000c241(4): CMP R14D,0x3
0000c245(6): JZ 0x0000ca10
0000c24b(4): CMP R14D,0x5
0000c24f(6): JZ 0x0000c8d0
0000c255(4): CMP R14D,0x7
0000c259(6): JZ 0x0000ca39
0000c25f(5): MOV RBX,qword ptr [RSP + 0x8]
0000c264(6): ADD qword ptr [RSP + 0x10],0x1
0000c26a(5): MOV RAX,qword ptr [RSP + 0x10]
0000c26f(4): CMP RAX,qword ptr [RBX + 0x10]
0000c273(2): JL 0x0000c1fc
0000c275(3): TEST RBP,RBP
0000c278(5): MOV R15,qword ptr [RSP + 0x30]
0000c27d(6): JLE 0x0000ccd9
0000c283(4): LEA RBX,[RBP + 0x1]
0000c287(9): MOV qword ptr [RSP + 0x78],0x0
0000c290(5): MOV qword ptr [RSP + 0x70],RBX
0000c295(4): SHL RBX,0x3
0000c299(3): MOV RDI,RBX
0000c29c(5): CALL 0x00001da0
0000c2a1(3): TEST RAX,RAX
0000c2a4(3): MOV R12,RAX
0000c2a7(8): MOV qword ptr [0x80 + RSP],RAX
0000c2af(6): JZ 0x0000caaf
0000c2b5(10): MOV RAX,0xaaaaaaaaaaaa855
0000c2bf(8): MOV dword ptr [RSP + 0x6c],0x0
0000c2c7(3): CMP RBP,RAX
0000c2ca(6): JG 0x0000caaf
0000c2d0(5): LEA RAX,[RBP + RBP*0x2]
0000c2d5(4): SHL RAX,0x3
0000c2d9(3): MOV RDI,RAX
0000c2dc(5): MOV qword ptr [RSP + 0x58],RAX
0000c2e1(5): CALL 0x00001da0
0000c2e6(3): TEST RAX,RAX
0000c2e9(5): MOV qword ptr [RSP + 0x10],RAX
0000c2ee(6): JZ 0x0000caaf
0000c2f4(5): MOV RAX,qword ptr [RSP + 0x10]
0000c2f9(4): SUB RBX,0x8
0000c2fd(5): MOV R12,qword ptr [RSP + 0x40]
0000c302(4): PXOR XMM0,XMM0
0000c306(5): LEA R14,[RSP + 0x70]
0000c30b(5): MOV qword ptr [RSP + 0x20],RBP
0000c310(5): MOV byte ptr [RSP + 0x4f],0x0
0000c315(3): MOV RBP,R15
0000c318(3): ADD RAX,RBX
0000c31b(5): MOV qword ptr [RSP + 0x50],R12
0000c320(3): ADD RBX,RAX
0000c323(5): MOV qword ptr [RSP + 0x30],RAX
0000c328(5): MOV RAX,qword ptr [RSP + 0x18]
0000c32d(8): MOVAPS xmmword ptr [0xd0 + RSP],XMM0
0000c335(5): MOV qword ptr [RSP + 0x38],RBX
0000c33a(2): XOR EBX,EBX
0000c33c(4): LEA R13,[RAX + 0x8]
0000c340(5): LEA RAX,[RSP + 0x6c]
0000c345(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0000c34d(5): MOV qword ptr [RSP + 0x28],RAX
0000c352(9): MOV qword ptr [RSP + 0x78],0x0
0000c35b(5): CMP qword ptr [R13],0x0
0000c360(2): JLE 0x0000c3a8
0000c362(3): XOR R15D,R15D
0000c365(3): NOP dword ptr [RAX]
0000c368(4): MOV RAX,qword ptr [R13 + 0x8]
0000c36c(4): MOV RDX,qword ptr [RAX + R15*0x8]
0000c370(4): MOV RAX,qword ptr [RBP + 0x18]
0000c374(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000c378(4): CMP RAX,-0x1
0000c37c(2): JZ 0x0000c39e
0000c37e(4): LEA RDX,[RAX + RAX*0x2]
0000c382(4): MOV RAX,qword ptr [RBP + 0x30]
0000c386(3): MOV RDI,R14
0000c389(4): LEA RSI,[RAX + RDX*0x8]
0000c38d(5): CALL 0x00009bf0
0000c392(2): TEST EAX,EAX
0000c394(4): MOV dword ptr [RSP + 0x6c],EAX
0000c398(6): JNZ 0x0000ca98
0000c39e(4): ADD R15,0x1
0000c3a2(4): CMP qword ptr [R13],R15
0000c3a6(2): JG 0x0000c368
0000c3a8(5): MOV RDI,qword ptr [RSP + 0x28]
0000c3ad(2): XOR ECX,ECX
0000c3af(3): MOV RSI,RBP
0000c3b2(3): MOV RDX,R14
0000c3b5(5): CALL 0x0000aa20
0000c3ba(5): MOV RSI,qword ptr [RSP + 0x10]
0000c3bf(3): TEST RAX,RAX
0000c3c2(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000c3c6(6): JZ 0x0000cb78
0000c3cc(4): CMP byte ptr [RAX + 0x68],0x0
0000c3d0(6): JS 0x0000caf0
0000c3d6(5): MOV RDI,qword ptr [RSP + 0x30]
0000c3db(5): MOV RSI,qword ptr [RSP + 0x38]
0000c3e0(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000c3e4(5): MOV RAX,qword ptr [RSP + 0x10]
0000c3e9(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000c3ed(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000c3f1(8): LEA RDX,[0xd0 + RSP]
0000c3f9(2): XOR EAX,EAX
0000c3fb(4): MOV RCX,qword ptr [RDX + RAX*0x1]
0000c3ff(4): OR RCX,qword ptr [R12 + RAX*0x1]
0000c403(4): MOV qword ptr [RDX + RAX*0x1],RCX
0000c407(4): ADD RAX,0x8
0000c40b(4): CMP RAX,0x20
0000c40f(2): JNZ 0x0000c3fb
0000c411(4): ADD RBX,0x1
0000c415(4): ADD R13,0x18
0000c419(4): ADD R12,0x20
0000c41d(5): CMP RBX,qword ptr [RSP + 0x20]
0000c422(6): JNZ 0x0000c352
0000c428(5): CMP byte ptr [RSP + 0x4f],0x0
0000c42d(3): MOV R15,RBP
0000c430(5): MOV RBP,qword ptr [RSP + 0x20]
0000c435(5): MOV qword ptr [RSP + 0x20],RDX
0000c43a(6): JNZ 0x0000cb89
0000c440(5): MOV ESI,0x100
0000c445(5): MOV EDI,0x8
0000c44a(5): CALL 0x00001d30
0000c44f(3): MOV R11,RAX
0000c452(5): MOV RAX,qword ptr [RSP + 0x8]
0000c457(3): TEST R11,R11
0000c45a(4): MOV qword ptr [RAX + 0x58],R11
0000c45e(6): JZ 0x0000ca9d
0000c464(5): MOV RBX,qword ptr [RSP + 0x40]
0000c469(5): MOV R12,qword ptr [RSP + 0x10]
0000c46e(3): XOR R9D,R9D
0000c471(5): MOV R13,qword ptr [RSP + 0x30]
0000c476(5): MOV RDX,qword ptr [RSP + 0x20]
0000c47b(4): ADD RBX,0x20
0000c47f(4): MOV RAX,qword ptr [RDX + R9*0x1]
0000c483(3): TEST RAX,RAX
0000c486(2): JZ 0x0000c4b4
0000c488(3): MOV RSI,R9
0000c48b(5): MOV ECX,0x1
0000c490(4): SHL RSI,0x6
0000c494(3): ADD RSI,R11
0000c497(9): NOP word ptr [RAX + RAX*0x1]
0000c4a0(2): TEST AL,0x1
0000c4a2(6): JNZ 0x0000cc08
0000c4a8(3): ADD RCX,RCX
0000c4ab(4): ADD RSI,0x8
0000c4af(3): SHR RAX,1
0000c4b2(2): JNZ 0x0000c4a0
0000c4b4(4): ADD R9,0x8
0000c4b8(4): CMP R9,0x20
0000c4bc(2): JNZ 0x0000c47f
0000c4be(8): TEST byte ptr [0xd1 + RSP],0x4
0000c4c6(2): JZ 0x0000c502
0000c4c8(2): XOR EAX,EAX
0000c4ca(5): MOV RDX,qword ptr [RSP + 0x50]
0000c4cf(2): JMP 0x0000c4de
0000c4d1(4): ADD RAX,0x1
0000c4d5(4): ADD RDX,0x20
0000c4d9(3): CMP RAX,RBP
0000c4dc(2): JZ 0x0000c502
0000c4de(7): TEST qword ptr [RDX],0x400
0000c4e5(2): JZ 0x0000c4d1
0000c4e7(5): MOV RBX,qword ptr [RSP + 0x38]
0000c4ec(5): CMP byte ptr [RSP + 0x4f],0x0
0000c4f1(4): MOV RAX,qword ptr [RBX + RAX*0x8]
0000c4f5(4): MOV qword ptr [R11 + 0x50],RAX
0000c4f9(2): JZ 0x0000c502
0000c4fb(7): MOV qword ptr [0x850 + R11],RAX
0000c502(5): MOV RDI,qword ptr [RSP + 0x10]
0000c507(5): CALL 0x00001b00
0000c50c(8): MOV RDI,qword ptr [0x80 + RSP]
0000c514(5): CALL 0x00001b00
0000c519(5): MOV RAX,qword ptr [RSP + 0x18]
0000c51e(5): MOV RBX,qword ptr [RSP + 0x58]
0000c523(4): LEA RBP,[RAX + 0x10]
0000c527(3): ADD RBX,RBP
0000c52a(4): MOV RDI,qword ptr [RBP]
0000c52e(4): ADD RBP,0x18
0000c532(5): CALL 0x00001b00
0000c537(3): CMP RBX,RBP
0000c53a(2): JNZ 0x0000c52a
0000c53c(5): MOV RDI,qword ptr [RSP + 0x18]
0000c541(5): CALL 0x00001b00
0000c546(5): MOV EAX,0x1
0000c54b(2): JMP 0x0000c572
0000c54d(3): TEST RBP,RBP
0000c550(8): MOV qword ptr [RBX + 0x8],0x0
0000c558(7): MOV qword ptr [RBX],0x0
0000c55f(6): JNZ 0x0000c890
0000c565(5): MOV RDI,qword ptr [RSP + 0x18]
0000c56a(5): CALL 0x00001b00
0000c56f(1): NOP
0000c570(2): XOR EAX,EAX
0000c572(8): MOV RBX,qword ptr [0xf8 + RSP]
0000c57a(9): XOR RBX,qword ptr FS:[0x28]
0000c583(6): JNZ 0x0000ccd4
0000c589(7): ADD RSP,0x108
0000c590(1): POP RBX
0000c591(1): POP RBP
0000c592(2): POP R12
0000c594(2): POP R13
0000c596(2): POP R14
0000c598(2): POP R15
0000c59a(1): RET
0000c5a0(5): MOVZX ECX,byte ptr [R13]
0000c5a5(8): LEA R12,[0x90 + RSP]
0000c5ad(5): MOV EDI,0x1
0000c5b2(3): MOV RDX,RCX
0000c5b5(3): AND ECX,0x3f
0000c5b8(4): SHR RDX,0x3
0000c5bc(3): SHL RDI,CL
0000c5bf(3): AND EDX,0x18
0000c5c2(4): OR qword ptr [R12 + RDX*0x1],RDI
0000c5c6(3): TEST AX,AX
0000c5c9(6): JZ 0x0000c690
0000c5cf(2): TEST AL,0x20
0000c5d1(6): JNZ 0x0000c940
0000c5d7(2): TEST AL,0x80
0000c5d9(6): JNZ 0x0000c874
0000c5df(2): TEST AL,0x4
0000c5e1(2): JZ 0x0000c635
0000c5e3(4): CMP R14D,0x1
0000c5e7(6): JZ 0x0000c9c5
0000c5ed(5): MOV R8,qword ptr [RSP + 0x30]
0000c5f2(8): CMP dword ptr [0xb4 + R8],0x1
0000c5fa(6): JLE 0x0000ca52
0000c600(4): MOV RDI,qword ptr [R8 + 0x78]
0000c604(2): XOR ESI,ESI
0000c606(2): XOR ECX,ECX
0000c608(4): MOV RDX,qword ptr [RDI + RCX*0x8]
0000c60c(3): NOT RDX
0000c60f(8): OR RDX,qword ptr [0xb8 + R8 + RCX*0x8]
0000c617(4): AND RDX,qword ptr [R12 + RCX*0x8]
0000c61b(4): MOV qword ptr [R12 + RCX*0x8],RDX
0000c61f(4): ADD RCX,0x1
0000c623(3): OR RSI,RDX
0000c626(4): CMP RCX,0x4
0000c62a(2): JNZ 0x0000c608
0000c62c(3): TEST RSI,RSI
0000c62f(6): JZ 0x0000c25f
0000c635(2): TEST AL,0x8
0000c637(2): JZ 0x0000c690
0000c639(4): CMP R14D,0x1
0000c63d(6): JZ 0x0000c971
0000c643(5): MOV RDI,qword ptr [RSP + 0x30]
0000c648(7): CMP dword ptr [0xb4 + RDI],0x1
0000c64f(6): JLE 0x0000c98e
0000c655(4): MOV RSI,qword ptr [RDI + 0x78]
0000c659(2): XOR ECX,ECX
0000c65b(2): XOR EDX,EDX
0000c65d(8): MOV RAX,qword ptr [0xb8 + RDI + RDX*0x8]
0000c665(4): AND RAX,qword ptr [RSI + RDX*0x8]
0000c669(3): NOT RAX
0000c66c(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000c670(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000c674(4): ADD RDX,0x1
0000c678(3): OR RCX,RAX
0000c67b(4): CMP RDX,0x4
0000c67f(2): JNZ 0x0000c65d
0000c681(3): TEST RCX,RCX
0000c684(6): JZ 0x0000c25f
0000c68a(6): NOP word ptr [RAX + RAX*0x1]
0000c690(2): XOR EBX,EBX
0000c692(3): TEST RBP,RBP
0000c695(6): JLE 0x0000c7fb
0000c69b(5): MOV qword ptr [RSP + 0x28],R13
0000c6a0(3): MOV R13,R15
0000c6a3(5): NOP dword ptr [RAX + RAX*0x1]
0000c6a8(3): MOV R10,RBX
0000c6ab(4): SHL R10,0x5
0000c6af(4): CMP R14D,0x1
0000c6b3(2): JNZ 0x0000c6d8
0000c6b5(5): MOV RAX,qword ptr [RSP + 0x28]
0000c6ba(3): MOVZX EDX,byte ptr [RAX]
0000c6bd(3): MOV RAX,RDX
0000c6c0(4): SHR RAX,0x3
0000c6c4(3): AND EAX,0x18
0000c6c7(3): ADD RAX,R13
0000c6ca(4): MOV RAX,qword ptr [RAX + R10*0x1]
0000c6ce(4): BT RAX,RDX
0000c6d2(6): JNC 0x0000c7eb
0000c6d8(5): LEA RDI,[R13 + R10*0x1]
0000c6dd(8): LEA RSI,[0xb0 + RSP]
0000c6e5(2): XOR ECX,ECX
0000c6e7(2): XOR EAX,EAX
0000c6e9(4): MOV RDX,qword ptr [R12 + RAX*0x8]
0000c6ed(4): AND RDX,qword ptr [RDI + RAX*0x8]
0000c6f1(4): MOV qword ptr [RSI + RAX*0x8],RDX
0000c6f5(4): ADD RAX,0x1
0000c6f9(3): OR RCX,RDX
0000c6fc(4): CMP RAX,0x4
0000c700(2): JNZ 0x0000c6e9
0000c702(3): TEST RCX,RCX
0000c705(6): JZ 0x0000c7eb
0000c70b(8): LEA R11,[0xd0 + RSP]
0000c713(3): XOR R15D,R15D
0000c716(3): XOR R9D,R9D
0000c719(2): XOR ECX,ECX
0000c71b(4): MOV RSI,qword ptr [R12 + RCX*0x8]
0000c71f(4): MOV RAX,qword ptr [RDI + RCX*0x8]
0000c723(3): MOV RDX,RSI
0000c726(3): NOT RDX
0000c729(3): AND RDX,RAX
0000c72c(3): NOT RAX
0000c72f(3): AND RAX,RSI
0000c732(4): MOV qword ptr [R11 + RCX*0x8],RDX
0000c736(3): OR R9,RDX
0000c739(4): MOV qword ptr [R12 + RCX*0x8],RAX
0000c73d(4): ADD RCX,0x1
0000c741(3): OR R15,RAX
0000c744(4): CMP RCX,0x4
0000c748(2): JNZ 0x0000c71b
0000c74a(5): MOV RDI,qword ptr [RSP + 0x18]
0000c74f(4): LEA RAX,[RBX + RBX*0x2]
0000c753(3): TEST R9,R9
0000c756(4): LEA RDX,[RDI + RAX*0x8]
0000c75a(2): JZ 0x0000c7c4
0000c75c(3): MOV RAX,RBP
0000c75f(9): MOVDQA XMM0,xmmword ptr [0xd0 + RSP]
0000c768(4): SHL RAX,0x5
0000c76c(3): MOV RSI,RDX
0000c76f(5): MOV qword ptr [RSP + 0x38],RDX
0000c774(3): ADD RAX,R13
0000c777(3): MOVUPS xmmword ptr [RAX],XMM0
0000c77a(9): MOVDQA XMM0,xmmword ptr [0xe0 + RSP]
0000c783(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000c787(5): LEA RAX,[RBP + RBP*0x2]
0000c78c(4): LEA RDI,[RDI + RAX*0x8]
0000c790(9): MOVDQA XMM0,xmmword ptr [0xb0 + RSP]
0000c799(6): MOVUPS xmmword ptr [R13 + R10*0x1],XMM0
0000c79f(9): MOVDQA XMM0,xmmword ptr [0xc0 + RSP]
0000c7a8(6): MOVUPS xmmword ptr [R13 + R10*0x1 + 0x10],XMM0
0000c7ae(5): CALL 0x0000a830
0000c7b3(2): TEST EAX,EAX
0000c7b5(6): JNZ 0x0000c890
0000c7bb(5): MOV RDX,qword ptr [RSP + 0x38]
0000c7c0(4): ADD RBP,0x1
0000c7c4(5): MOV RAX,qword ptr [RSP + 0x8]
0000c7c9(5): MOV RSI,qword ptr [RSP + 0x20]
0000c7ce(3): MOV RDI,RDX
0000c7d1(4): MOV RAX,qword ptr [RAX + 0x18]
0000c7d5(4): MOV RSI,qword ptr [RAX + RSI*0x1]
0000c7d9(5): CALL 0x00008190
0000c7de(2): TEST AL,AL
0000c7e0(6): JZ 0x0000c890
0000c7e6(3): TEST R15,R15
0000c7e9(2): JZ 0x0000c7f8
0000c7eb(4): ADD RBX,0x1
0000c7ef(3): CMP RBX,RBP
0000c7f2(6): JL 0x0000c6a8
0000c7f8(3): MOV R15,R13
0000c7fb(3): CMP RBP,RBX
0000c7fe(6): JNZ 0x0000c25f
0000c804(3): MOV RAX,RBP
0000c807(9): MOVDQA XMM0,xmmword ptr [0x90 + RSP]
0000c810(4): SHL RAX,0x5
0000c814(5): MOV RBX,qword ptr [RSP + 0x20]
0000c819(5): MOV EDI,0x8
0000c81e(3): ADD RAX,R15
0000c821(3): MOVUPS xmmword ptr [RAX],XMM0
0000c824(9): MOVDQA XMM0,xmmword ptr [0xa0 + RSP]
0000c82d(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000c831(5): MOV RAX,qword ptr [RSP + 0x8]
0000c836(4): MOV RAX,qword ptr [RAX + 0x18]
0000c83a(4): MOV R13,qword ptr [RAX + RBX*0x1]
0000c83e(5): MOV RBX,qword ptr [RSP + 0x18]
0000c843(5): LEA RAX,[RBP + RBP*0x2]
0000c848(4): LEA RBX,[RBX + RAX*0x8]
0000c84c(7): MOV qword ptr [RBX],0x1
0000c853(8): MOV qword ptr [RBX + 0x8],0x1
0000c85b(5): CALL 0x00001da0
0000c860(3): TEST RAX,RAX
0000c863(4): MOV qword ptr [RBX + 0x10],RAX
0000c867(6): JZ 0x0000c54d
0000c86d(3): MOV qword ptr [RAX],R13
0000c870(4): ADD RBP,0x1
0000c874(4): PXOR XMM0,XMM0
0000c878(5): MOVAPS xmmword ptr [R12],XMM0
0000c87d(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000c883(5): JMP 0x0000c25f
0000c890(5): MOV RAX,qword ptr [RSP + 0x18]
0000c895(4): LEA RBX,[RAX + 0x10]
0000c899(5): LEA RAX,[RBP + RBP*0x2]
0000c89e(4): LEA RBP,[RBX + RAX*0x8]
0000c8a2(6): NOP word ptr [RAX + RAX*0x1]
0000c8a8(3): MOV RDI,qword ptr [RBX]
0000c8ab(4): ADD RBX,0x18
0000c8af(5): CALL 0x00001b00
0000c8b4(3): CMP RBP,RBX
0000c8b7(2): JNZ 0x0000c8a8
0000c8b9(5): MOV RDI,qword ptr [RSP + 0x18]
0000c8be(5): CALL 0x00001b00
0000c8c3(5): JMP 0x0000c570
0000c8d0(5): MOV RSI,qword ptr [RSP + 0x30]
0000c8d5(7): CMP dword ptr [0xb4 + RSI],0x1
0000c8dc(6): JLE 0x0000c9e5
0000c8e2(4): MOV RSI,qword ptr [RSI + 0x78]
0000c8e6(8): LEA R12,[0x90 + RSP]
0000c8ee(2): XOR EDX,EDX
0000c8f0(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000c8f4(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000c8f8(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000c8fc(4): ADD RDX,0x8
0000c900(4): CMP RDX,0x20
0000c904(2): JNZ 0x0000c8f0
0000c906(5): MOV RBX,qword ptr [RSP + 0x30]
0000c90b(7): MOV RDX,qword ptr [0xd8 + RBX]
0000c912(3): TEST DL,0x40
0000c915(2): JNZ 0x0000c923
0000c917(12): AND qword ptr [0x90 + RSP],0xfffffbff
0000c923(6): AND EDX,0x80
0000c929(6): JZ 0x0000c5c6
0000c92f(9): AND qword ptr [0x90 + RSP],-0x2
0000c938(5): JMP 0x0000c5c6
0000c940(8): MOV RDX,qword ptr [0x90 + RSP]
0000c948(4): PXOR XMM0,XMM0
0000c94c(3): AND DH,0x4
0000c94f(5): MOVAPS xmmword ptr [R12],XMM0
0000c954(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000c95a(6): JZ 0x0000c25f
0000c960(12): MOV qword ptr [0x90 + RSP],0x400
0000c96c(5): JMP 0x0000c5d7
0000c971(5): TEST byte ptr [R13 + 0xa],0x40
0000c976(6): JNZ 0x0000c874
0000c97c(5): MOV RDI,qword ptr [RSP + 0x30]
0000c981(7): CMP dword ptr [0xb4 + RDI],0x1
0000c988(6): JG 0x0000c655
0000c98e(5): MOV RSI,qword ptr [RSP + 0x30]
0000c993(2): XOR ECX,ECX
0000c995(2): XOR EDX,EDX
0000c997(8): MOV RAX,qword ptr [0xb8 + RSI + RDX*0x8]
0000c99f(3): NOT RAX
0000c9a2(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000c9a6(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000c9aa(4): ADD RDX,0x1
0000c9ae(3): OR RCX,RAX
0000c9b1(4): CMP RDX,0x4
0000c9b5(2): JNZ 0x0000c997
0000c9b7(3): TEST RCX,RCX
0000c9ba(6): JNZ 0x0000c690
0000c9c0(5): JMP 0x0000c25f
0000c9c5(5): TEST byte ptr [R13 + 0xa],0x40
0000c9ca(6): JZ 0x0000c874
0000c9d0(5): MOV R8,qword ptr [RSP + 0x30]
0000c9d5(8): CMP dword ptr [0xb4 + R8],0x1
0000c9dd(6): JG 0x0000c600
0000c9e3(2): JMP 0x0000ca52
0000c9e5(4): PCMPEQD XMM0,XMM0
0000c9e9(8): LEA R12,[0x90 + RSP]
0000c9f1(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000c9f9(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000ca01(5): JMP 0x0000c906
0000ca10(4): MOV RSI,qword ptr [R13]
0000ca14(8): LEA R12,[0x90 + RSP]
0000ca1c(2): XOR EDX,EDX
0000ca1e(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000ca22(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000ca26(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000ca2a(4): ADD RDX,0x8
0000ca2e(4): CMP RDX,0x20
0000ca32(2): JNZ 0x0000ca1e
0000ca34(5): JMP 0x0000c5c6
0000ca39(4): PCMPEQD XMM0,XMM0
0000ca3d(8): LEA R12,[0x90 + RSP]
0000ca45(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000ca4d(5): JMP 0x0000c906
0000ca52(5): MOV RDI,qword ptr [RSP + 0x30]
0000ca57(2): XOR ESI,ESI
0000ca59(2): XOR EDX,EDX
0000ca5b(4): MOV RCX,qword ptr [R12 + RDX*0x8]
0000ca5f(8): AND RCX,qword ptr [0xb8 + RDI + RDX*0x8]
0000ca67(4): MOV qword ptr [R12 + RDX*0x8],RCX
0000ca6b(4): ADD RDX,0x1
0000ca6f(3): OR RSI,RCX
0000ca72(4): CMP RDX,0x4
0000ca76(2): JNZ 0x0000ca5b
0000ca78(3): TEST RSI,RSI
0000ca7b(6): JNZ 0x0000c635
0000ca81(5): JMP 0x0000c25f
0000ca86(4): MOV EDX,dword ptr [RSP + 0x6c]
0000ca8a(2): TEST EDX,EDX
0000ca8c(6): JZ 0x0000cb17
0000ca92(6): NOP word ptr [RAX + RAX*0x1]
0000ca98(5): MOV RBP,qword ptr [RSP + 0x20]
0000ca9d(5): MOV RDI,qword ptr [RSP + 0x10]
0000caa2(5): CALL 0x00001b00
0000caa7(8): MOV R12,qword ptr [0x80 + RSP]
0000caaf(3): MOV RDI,R12
0000cab2(5): CALL 0x00001b00
0000cab7(5): MOV RAX,qword ptr [RSP + 0x18]
0000cabc(4): LEA RBX,[RAX + 0x10]
0000cac0(5): LEA RAX,[RBP + RBP*0x2]
0000cac5(4): LEA RBP,[RBX + RAX*0x8]
0000cac9(7): NOP dword ptr [RAX]
0000cad0(3): MOV RDI,qword ptr [RBX]
0000cad3(4): ADD RBX,0x18
0000cad7(5): CALL 0x00001b00
0000cadc(3): CMP RBP,RBX
0000cadf(2): JNZ 0x0000cad0
0000cae1(5): MOV RDI,qword ptr [RSP + 0x18]
0000cae6(5): CALL 0x00001b00
0000caeb(5): JMP 0x0000c570
0000caf0(5): MOV RDI,qword ptr [RSP + 0x28]
0000caf5(5): MOV ECX,0x1
0000cafa(3): MOV RDX,R14
0000cafd(3): MOV RSI,RBP
0000cb00(5): CALL 0x0000aa20
0000cb05(5): MOV RDI,qword ptr [RSP + 0x30]
0000cb0a(3): TEST RAX,RAX
0000cb0d(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000cb11(6): JZ 0x0000ca86
0000cb17(5): MOV RDI,qword ptr [RSP + 0x10]
0000cb1c(4): CMP RAX,qword ptr [RDI + RBX*0x8]
0000cb20(2): JZ 0x0000cb3b
0000cb22(5): MOVZX EDI,byte ptr [RSP + 0x4f]
0000cb27(7): CMP dword ptr [0xb4 + RBP],0x2
0000cb2e(5): MOV EAX,0x1
0000cb33(3): CMOVGE EDI,EAX
0000cb36(5): MOV byte ptr [RSP + 0x4f],DIL
0000cb3b(5): MOV RDI,qword ptr [RSP + 0x28]
0000cb40(3): MOV RSI,RBP
0000cb43(5): MOV ECX,0x2
0000cb48(3): MOV RDX,R14
0000cb4b(5): CALL 0x0000aa20
0000cb50(5): MOV RSI,qword ptr [RSP + 0x38]
0000cb55(3): TEST RAX,RAX
0000cb58(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000cb5c(6): JNZ 0x0000c3f1
0000cb62(4): MOV EAX,dword ptr [RSP + 0x6c]
0000cb66(2): TEST EAX,EAX
0000cb68(6): JZ 0x0000c3f1
0000cb6e(5): JMP 0x0000ca98
0000cb78(4): MOV ECX,dword ptr [RSP + 0x6c]
0000cb7c(2): TEST ECX,ECX
0000cb7e(6): JZ 0x0000c3cc
0000cb84(5): JMP 0x0000ca98
0000cb89(5): MOV ESI,0x200
0000cb8e(5): MOV EDI,0x8
0000cb93(5): CALL 0x00001d30
0000cb98(3): MOV R11,RAX
0000cb9b(5): MOV RAX,qword ptr [RSP + 0x8]
0000cba0(3): TEST R11,R11
0000cba3(4): MOV qword ptr [RAX + 0x60],R11
0000cba7(6): JZ 0x0000ca9d
0000cbad(5): MOV R13,qword ptr [RSP + 0x40]
0000cbb2(5): MOV R10,qword ptr [RSP + 0x10]
0000cbb7(3): MOV R12,R11
0000cbba(5): MOV R14,qword ptr [RSP + 0x30]
0000cbbf(5): MOV RDX,qword ptr [RSP + 0x20]
0000cbc4(2): XOR EBX,EBX
0000cbc6(4): ADD R13,0x20
0000cbca(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000cbce(3): TEST RAX,RAX
0000cbd1(2): JZ 0x0000cbef
0000cbd3(3): MOV RSI,R12
0000cbd6(5): MOV ECX,0x1
0000cbdb(2): TEST AL,0x1
0000cbdd(6): JNZ 0x0000cc8c
0000cbe3(3): ADD RCX,RCX
0000cbe6(4): ADD RSI,0x8
0000cbea(3): SHR RAX,1
0000cbed(2): JNZ 0x0000cbdb
0000cbef(4): ADD RBX,0x8
0000cbf3(7): ADD R12,0x200
0000cbfa(4): CMP RBX,0x20
0000cbfe(2): JNZ 0x0000cbca
0000cc00(5): JMP 0x0000c4be
0000cc08(5): MOV RDI,qword ptr [RSP + 0x18]
0000cc0d(8): TEST qword ptr [0x1800 + RDI + R9*0x1],RCX
0000cc15(2): JNZ 0x0000cc87
0000cc17(4): LEA RDI,[RBX + R9*0x1]
0000cc1b(3): XOR R8D,R8D
0000cc1e(2): NOP
0000cc20(3): MOV R10,qword ptr [RDI]
0000cc23(4): ADD R8,0x1
0000cc27(4): ADD RDI,0x20
0000cc2b(3): AND R10,RCX
0000cc2e(3): TEST R10,R10
0000cc31(2): JZ 0x0000cc20
0000cc33(4): SHL R8,0x3
0000cc37(8): TEST qword ptr [0xb8 + R15 + R9*0x1],RCX
0000cc3f(2): JZ 0x0000cc4e
0000cc41(5): MOV RDI,qword ptr [R13 + R8*0x1]
0000cc46(3): MOV qword ptr [RSI],RDI
0000cc49(5): JMP 0x0000c4a8
0000cc4e(4): MOV RDI,qword ptr [R12 + R8*0x1]
0000cc52(3): MOV qword ptr [RSI],RDI
0000cc55(5): JMP 0x0000c4a8
0000cc5a(5): MOV RDI,qword ptr [RSP + 0x18]
0000cc5f(5): CALL 0x00001b00
0000cc64(5): MOV ESI,0x100
0000cc69(5): MOV EDI,0x8
0000cc6e(5): CALL 0x00001d30
0000cc73(5): MOV RBX,qword ptr [RSP + 0x8]
0000cc78(3): TEST RAX,RAX
0000cc7b(4): MOV qword ptr [RBX + 0x58],RAX
0000cc7f(3): SETNZ AL
0000cc82(5): JMP 0x0000c572
0000cc87(3): XOR R8D,R8D
0000cc8a(2): JMP 0x0000cc37
0000cc8c(5): MOV RDI,qword ptr [RSP + 0x18]
0000cc91(8): TEST qword ptr [0x1800 + RDI + RBX*0x1],RCX
0000cc99(2): JNZ 0x0000ccd0
0000cc9b(5): LEA R9,[R13 + RBX*0x1]
0000cca0(3): XOR R8D,R8D
0000cca3(3): MOV R15,qword ptr [R9]
0000cca6(4): ADD R8,0x1
0000ccaa(4): ADD R9,0x20
0000ccae(3): MOV RDI,R8
0000ccb1(3): AND R15,RCX
0000ccb4(3): TEST R15,R15
0000ccb7(2): JZ 0x0000cca3
0000ccb9(4): MOV R8,qword ptr [R10 + RDI*0x8]
0000ccbd(3): MOV qword ptr [RSI],R8
0000ccc0(4): MOV RDI,qword ptr [R14 + RDI*0x8]
0000ccc4(7): MOV qword ptr [0x800 + RSI],RDI
0000cccb(5): JMP 0x0000cbe3
0000ccd0(2): XOR EDI,EDI
0000ccd2(2): JMP 0x0000ccb9
0000ccd4(5): CALL 0x00001c20
0000ccd9(5): MOV RDI,qword ptr [RSP + 0x18]
0000ccde(5): CALL 0x00001b00
0000cce3(3): TEST RBP,RBP
0000cce6(6): JNZ 0x0000c570
0000ccec(5): JMP 0x0000cc64
0000cd00(4): CMP byte ptr [RSI + 0x30],0x10
0000cd04(2): JZ 0x0000cd68
0000cd06(1): PUSH RBP
0000cd07(1): PUSH RBX
0000cd08(3): MOV RBX,RSI
0000cd0b(3): MOV RBP,RDI
0000cd0e(4): SUB RSP,0x8
0000cd12(4): MOV qword ptr [RBX + 0x18],RSI
0000cd16(4): MOV RDX,qword ptr [RBX + 0x30]
0000cd1a(4): MOV RSI,qword ptr [RSI + 0x28]
0000cd1e(5): CALL 0x00008e70
0000cd23(4): CMP RAX,-0x1
0000cd27(3): MOV RDX,RAX
0000cd2a(4): MOV qword ptr [RBX + 0x38],RAX
0000cd2e(2): JZ 0x0000cd80
0000cd30(2): XOR EAX,EAX
0000cd32(4): CMP byte ptr [RBX + 0x30],0xc
0000cd36(2): JNZ 0x0000cd5c
0000cd38(3): MOV ECX,dword ptr [RBX + 0x28]
0000cd3b(4): SHL RDX,0x4
0000cd3f(4): ADD RDX,qword ptr [RBP]
0000cd43(6): AND ECX,0x3ff
0000cd49(3): SHL ECX,0x8
0000cd4c(2): MOV ESI,ECX
0000cd4e(3): MOV ECX,dword ptr [RDX + 0x8]
0000cd51(6): AND ECX,0xfffc00ff
0000cd57(2): OR ECX,ESI
0000cd59(3): MOV dword ptr [RDX + 0x8],ECX
0000cd5c(4): ADD RSP,0x8
0000cd60(1): POP RBX
0000cd61(1): POP RBP
0000cd62(1): RET
0000cd68(4): MOV RAX,qword ptr [RSI + 0x8]
0000cd6c(4): MOV RDX,qword ptr [RAX + 0x18]
0000cd70(4): MOV RAX,qword ptr [RAX + 0x38]
0000cd74(4): MOV qword ptr [RSI + 0x18],RDX
0000cd78(4): MOV qword ptr [RSI + 0x38],RAX
0000cd7c(2): XOR EAX,EAX
0000cd7e(1): RET
0000cd80(5): MOV EAX,0xc
0000cd85(2): JMP 0x0000cd5c
0000cd90(2): PUSH R12
0000cd92(1): PUSH RBP
0000cd93(3): MOV RBP,RDI
0000cd96(1): PUSH RBX
0000cd97(4): CMP qword ptr [RDI],0x0
0000cd9b(2): JLE 0x0000cdd2
0000cd9d(2): XOR EBX,EBX
0000cd9f(3): XOR R12D,R12D
0000cda2(6): NOP word ptr [RAX + RAX*0x1]
0000cda8(4): MOV RAX,qword ptr [RBP + 0x10]
0000cdac(4): ADD R12,0x1
0000cdb0(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x28]
0000cdb5(5): CALL 0x00001b00
0000cdba(4): MOV RAX,qword ptr [RBP + 0x10]
0000cdbe(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000cdc3(4): ADD RBX,0x30
0000cdc7(5): CALL 0x00001b00
0000cdcc(4): CMP R12,qword ptr [RBP]
0000cdd0(2): JL 0x0000cda8
0000cdd2(1): POP RBX
0000cdd3(4): MOV RDI,qword ptr [RBP + 0x10]
0000cdd7(1): POP RBP
0000cdd8(2): POP R12
0000cdda(5): JMP 0x00001b00
0000cde0(2): PUSH R12
0000cde2(1): PUSH RBP
0000cde3(1): PUSH RBX
0000cde4(3): MOV RAX,qword ptr [RDI]
0000cde7(4): SUB RAX,0x1
0000cdeb(3): TEST RAX,RAX
0000cdee(3): MOV qword ptr [RDI],RAX
0000cdf1(2): JS 0x0000ce55
0000cdf3(4): LEA RBX,[RAX + RAX*0x2]
0000cdf7(3): MOV RAX,qword ptr [RSI]
0000cdfa(3): MOV R12,RSI
0000cdfd(4): SHL RCX,0x4
0000ce01(3): MOV RBP,R9
0000ce04(3): MOV RDI,R8
0000ce07(4): SHL RBX,0x4
0000ce0b(3): ADD RAX,RBX
0000ce0e(3): MOV RSI,qword ptr [RAX]
0000ce11(3): MOV qword ptr [RDX],RSI
0000ce14(4): MOV RSI,qword ptr [RAX + 0x10]
0000ce18(3): MOV RDX,RCX
0000ce1b(5): CALL 0x00001d70
0000ce20(4): MOV RDI,qword ptr [RBP + 0x10]
0000ce24(5): CALL 0x00001b00
0000ce29(4): MOV RAX,qword ptr [R12]
0000ce2d(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000ce32(5): CALL 0x00001b00
0000ce37(4): ADD RBX,qword ptr [R12]
0000ce3b(5): MOVDQU XMM0,xmmword ptr [RBX + 0x18]
0000ce40(4): MOVAPS xmmword ptr [RBP],XMM0
0000ce44(4): MOV RAX,qword ptr [RBX + 0x28]
0000ce48(4): MOV qword ptr [RBP + 0x10],RAX
0000ce4c(4): MOV RAX,qword ptr [RBX + 0x8]
0000ce50(1): POP RBX
0000ce51(1): POP RBP
0000ce52(2): POP R12
0000ce54(1): RET
0000ce55(7): LEA RCX,[0x17be0]
0000ce5c(7): LEA RSI,[0x17608]
0000ce63(7): LEA RDI,[0x17670]
0000ce6a(5): MOV EDX,0x555
0000ce6f(5): CALL 0x00001c90
0000ce74(2): NOP
0000ce76(10): NOP word ptr CS:[RAX + RAX*0x1]
0000ce80(1): PUSH RBP
0000ce81(1): PUSH RBX
0000ce82(3): MOV RBP,RDI
0000ce85(3): MOV RDI,RSI
0000ce88(3): MOV RBX,RSI
0000ce8b(4): SUB RSP,0x8
0000ce8f(5): CALL 0x00001c10
0000ce94(4): CMP RAX,0x1
0000ce98(2): JNZ 0x0000cec0
0000ce9a(3): MOVZX ECX,byte ptr [RBX]
0000ce9d(3): MOV RDX,RCX
0000cea0(3): AND ECX,0x3f
0000cea3(4): SHR RDX,0x3
0000cea7(3): SHL RAX,CL
0000ceaa(3): AND EDX,0x18
0000cead(5): OR qword ptr [RBP + RDX*0x1],RAX
0000ceb2(4): ADD RSP,0x8
0000ceb6(2): XOR EAX,EAX
0000ceb8(1): POP RBX
0000ceb9(1): POP RBP
0000ceba(1): RET
0000cec0(4): ADD RSP,0x8
0000cec4(5): MOV EAX,0x3
0000cec9(1): POP RBX
0000ceca(1): POP RBP
0000cecb(1): RET
0000ced0(2): PUSH R14
0000ced2(2): PUSH R13
0000ced4(3): MOV R13,RCX
0000ced7(2): PUSH R12
0000ced9(1): PUSH RBP
0000ceda(3): MOV R12,R9
0000cedd(1): PUSH RBX
0000cede(3): MOV RBP,RDI
0000cee1(3): MOV RBX,RSI
0000cee4(4): SUB RSP,0x10
0000cee8(9): TEST qword ptr [RSP + 0x40],0x400000
0000cef1(2): JZ 0x0000cf18
0000cef3(7): LEA RDI,[0x1767f]
0000cefa(5): MOV ECX,0x6
0000ceff(3): MOV RSI,R9
0000cf02(2): CMPSB.REPE RDI,RSI
0000cf04(3): SETA AL
0000cf07(2): SBB AL,0x0
0000cf09(2): TEST AL,AL
0000cf0b(6): JNZ 0x0000d006
0000cf11(7): LEA R12,[0x17679]
0000cf18(4): MOV RCX,qword ptr [R13]
0000cf1c(3): CMP qword ptr [R8],RCX
0000cf1f(3): MOV RAX,qword ptr [RDX]
0000cf22(6): JZ 0x0000d039
0000cf28(4): LEA RDX,[RCX + 0x1]
0000cf2c(3): MOV RDI,R12
0000cf2f(4): MOV qword ptr [R13],RDX
0000cf33(4): LEA R13,[RAX + RCX*0x8]
0000cf37(5): CALL 0x00001d10
0000cf3c(7): LEA RDI,[0x1768b]
0000cf43(4): MOV qword ptr [R13],RAX
0000cf47(5): MOV ECX,0x6
0000cf4c(3): MOV RSI,R12
0000cf4f(2): CMPSB.REPE RDI,RSI
0000cf51(3): SETA AL
0000cf54(2): SBB AL,0x0
0000cf56(2): TEST AL,AL
0000cf58(2): JZ 0x0000cfc8
0000cf5a(7): LEA RDI,[0x17691]
0000cf61(5): MOV ECX,0x6
0000cf66(3): MOV RSI,R12
0000cf69(2): CMPSB.REPE RDI,RSI
0000cf6b(3): SETA AL
0000cf6e(2): SBB AL,0x0
0000cf70(2): TEST AL,AL
0000cf72(6): JNZ 0x0000d078
0000cf78(5): CALL 0x00001f50
0000cf7d(2): XOR ECX,ECX
0000cf7f(3): TEST RBP,RBP
0000cf82(3): MOV RDX,qword ptr [RAX]
0000cf85(5): MOV EDI,0x1
0000cf8a(6): JNZ 0x0000d24a
0000cf90(4): TEST byte ptr [RDX + RCX*0x2],0x2
0000cf94(2): JZ 0x0000cfa7
0000cf96(3): MOV RAX,RCX
0000cf99(3): MOV RSI,RDI
0000cf9c(4): SAR RAX,0x6
0000cfa0(3): SHL RSI,CL
0000cfa3(4): OR qword ptr [RBX + RAX*0x8],RSI
0000cfa7(4): ADD RCX,0x1
0000cfab(7): CMP RCX,0x100
0000cfb2(2): JNZ 0x0000cf90
0000cfb4(2): XOR EAX,EAX
0000cfb6(4): ADD RSP,0x10
0000cfba(1): POP RBX
0000cfbb(1): POP RBP
0000cfbc(2): POP R12
0000cfbe(2): POP R13
0000cfc0(2): POP R14
0000cfc2(1): RET
0000cfc8(5): CALL 0x00001f50
0000cfcd(2): XOR ECX,ECX
0000cfcf(3): TEST RBP,RBP
0000cfd2(3): MOV RDX,qword ptr [RAX]
0000cfd5(5): MOV EDI,0x1
0000cfda(6): JNZ 0x0000d1ca
0000cfe0(4): TEST byte ptr [RDX + RCX*0x2],0x8
0000cfe4(2): JZ 0x0000cff7
0000cfe6(3): MOV RAX,RCX
0000cfe9(3): MOV RSI,RDI
0000cfec(4): SAR RAX,0x6
0000cff0(3): SHL RSI,CL
0000cff3(4): OR qword ptr [RBX + RAX*0x8],RSI
0000cff7(4): ADD RCX,0x1
0000cffb(7): CMP RCX,0x100
0000d002(2): JNZ 0x0000cfe0
0000d004(2): JMP 0x0000cfb4
0000d006(7): LEA RDI,[0x17685]
0000d00d(5): MOV ECX,0x6
0000d012(3): MOV RSI,R9
0000d015(2): CMPSB.REPE RDI,RSI
0000d017(4): MOV RCX,qword ptr [R13]
0000d01b(3): SETA AL
0000d01e(2): SBB AL,0x0
0000d020(2): TEST AL,AL
0000d022(7): LEA RAX,[0x17679]
0000d029(4): CMOVZ R12,RAX
0000d02d(3): CMP qword ptr [R8],RCX
0000d030(3): MOV RAX,qword ptr [RDX]
0000d033(6): JNZ 0x0000cf28
0000d039(5): LEA R14,[RCX + RCX*0x1 + 0x1]
0000d03e(3): MOV RDI,RAX
0000d041(5): MOV qword ptr [RSP + 0x8],R8
0000d046(4): MOV qword ptr [RSP],RDX
0000d04a(8): LEA RSI,[R14*0x8]
0000d052(5): CALL 0x00001e00
0000d057(3): TEST RAX,RAX
0000d05a(6): JZ 0x0000d378
0000d060(4): MOV RDX,qword ptr [RSP]
0000d064(5): MOV R8,qword ptr [RSP + 0x8]
0000d069(3): MOV qword ptr [RDX],RAX
0000d06c(3): MOV qword ptr [R8],R14
0000d06f(4): MOV RCX,qword ptr [R13]
0000d073(5): JMP 0x0000cf28
0000d078(7): LEA RDI,[0x17685]
0000d07f(5): MOV ECX,0x6
0000d084(3): MOV RSI,R12
0000d087(2): CMPSB.REPE RDI,RSI
0000d089(3): SETA AL
0000d08c(2): SBB AL,0x0
0000d08e(2): TEST AL,AL
0000d090(2): JZ 0x0000d0fa
0000d092(7): LEA RDI,[0x17697]
0000d099(5): MOV ECX,0x6
0000d09e(3): MOV RSI,R12
0000d0a1(2): CMPSB.REPE RDI,RSI
0000d0a3(3): SETA AL
0000d0a6(2): SBB AL,0x0
0000d0a8(2): TEST AL,AL
0000d0aa(6): JNZ 0x0000d142
0000d0b0(5): CALL 0x00001f50
0000d0b5(2): XOR ECX,ECX
0000d0b7(3): TEST RBP,RBP
0000d0ba(3): MOV RDX,qword ptr [RAX]
0000d0bd(5): MOV EDI,0x1
0000d0c2(6): JNZ 0x0000d41e
0000d0c8(8): NOP dword ptr [RAX + RAX*0x1]
0000d0d0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x20
0000d0d5(2): JZ 0x0000d0e8
0000d0d7(3): MOV RAX,RCX
0000d0da(3): MOV RSI,RDI
0000d0dd(4): SAR RAX,0x6
0000d0e1(3): SHL RSI,CL
0000d0e4(4): OR qword ptr [RBX + RAX*0x8],RSI
0000d0e8(4): ADD RCX,0x1
0000d0ec(7): CMP RCX,0x100
0000d0f3(2): JNZ 0x0000d0d0
0000d0f5(5): JMP 0x0000cfb4
0000d0fa(5): CALL 0x00001f50
0000d0ff(2): XOR ECX,ECX
0000d101(3): TEST RBP,RBP
0000d104(3): MOV RDX,qword ptr [RAX]
0000d107(5): MOV EDI,0x1
0000d10c(6): JNZ 0x0000d2e2
0000d112(6): NOP word ptr [RAX + RAX*0x1]
0000d118(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x2
0000d11d(2): JZ 0x0000d130
0000d11f(3): MOV RAX,RCX
0000d122(3): MOV RSI,RDI
0000d125(4): SAR RAX,0x6
0000d129(3): SHL RSI,CL
0000d12c(4): OR qword ptr [RBX + RAX*0x8],RSI
0000d130(4): ADD RCX,0x1
0000d134(7): CMP RCX,0x100
0000d13b(2): JNZ 0x0000d118
0000d13d(5): JMP 0x0000cfb4
0000d142(7): LEA RDI,[0x17679]
0000d149(5): MOV ECX,0x6
0000d14e(3): MOV RSI,R12
0000d151(2): CMPSB.REPE RDI,RSI
0000d153(3): SETA AL
0000d156(2): SBB AL,0x0
0000d158(2): TEST AL,AL
0000d15a(6): JZ 0x0000d203
0000d160(7): LEA RDI,[0x176b6]
0000d167(5): MOV ECX,0x6
0000d16c(3): MOV RSI,R12
0000d16f(2): CMPSB.REPE RDI,RSI
0000d171(3): SETA AL
0000d174(2): SBB AL,0x0
0000d176(2): TEST AL,AL
0000d178(6): JNZ 0x0000d283
0000d17e(5): CALL 0x00001f50
0000d183(2): XOR ECX,ECX
0000d185(3): TEST RBP,RBP
0000d188(3): MOV RDX,qword ptr [RAX]
0000d18b(5): MOV EDI,0x1
0000d190(6): JNZ 0x0000d63a
0000d196(10): NOP word ptr CS:[RAX + RAX*0x1]
0000d1a0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x8
0000d1a5(2): JZ 0x0000d1b8
0000d1a7(3): MOV RAX,RCX
0000d1aa(3): MOV RSI,RDI
0000d1ad(4): SAR RAX,0x6
0000d1b1(3): SHL RSI,CL
0000d1b4(4): OR qword ptr [RBX + RAX*0x8],RSI
0000d1b8(4): ADD RCX,0x1
0000d1bc(7): CMP RCX,0x100
0000d1c3(2): JNZ 0x0000d1a0
0000d1c5(5): JMP 0x0000cfb4
0000d1ca(2): XOR EAX,EAX
0000d1cc(4): NOP dword ptr [RAX]
0000d1d0(4): TEST byte ptr [RDX + RAX*0x2],0x8
0000d1d4(2): JZ 0x0000d1f2
0000d1d6(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d1db(3): MOV R10,RDI
0000d1de(3): MOV RSI,RCX
0000d1e1(3): AND ECX,0x3f
0000d1e4(4): SHR RSI,0x3
0000d1e8(3): SHL R10,CL
0000d1eb(3): AND ESI,0x18
0000d1ee(4): OR qword ptr [RBX + RSI*0x1],R10
0000d1f2(4): ADD RAX,0x1
0000d1f6(6): CMP RAX,0x100
0000d1fc(2): JNZ 0x0000d1d0
0000d1fe(5): JMP 0x0000cfb4
0000d203(5): CALL 0x00001f50
0000d208(2): XOR ECX,ECX
0000d20a(3): TEST RBP,RBP
0000d20d(3): MOV RDX,qword ptr [RAX]
0000d210(5): MOV EDI,0x1
0000d215(6): JNZ 0x0000d3e8
0000d21b(5): NOP dword ptr [RAX + RAX*0x1]
0000d220(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x4
0000d225(2): JZ 0x0000d238
0000d227(3): MOV RAX,RCX
0000d22a(3): MOV RSI,RDI
0000d22d(4): SAR RAX,0x6
0000d231(3): SHL RSI,CL
0000d234(4): OR qword ptr [RBX + RAX*0x8],RSI
0000d238(4): ADD RCX,0x1
0000d23c(7): CMP RCX,0x100
0000d243(2): JNZ 0x0000d220
0000d245(5): JMP 0x0000cfb4
0000d24a(2): XOR EAX,EAX
0000d24c(4): NOP dword ptr [RAX]
0000d250(4): TEST byte ptr [RDX + RAX*0x2],0x2
0000d254(2): JZ 0x0000d272
0000d256(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d25b(3): MOV R11,RDI
0000d25e(3): MOV RSI,RCX
0000d261(3): AND ECX,0x3f
0000d264(4): SHR RSI,0x3
0000d268(3): SHL R11,CL
0000d26b(3): AND ESI,0x18
0000d26e(4): OR qword ptr [RBX + RSI*0x1],R11
0000d272(4): ADD RAX,0x1
0000d276(6): CMP RAX,0x100
0000d27c(2): JNZ 0x0000d250
0000d27e(5): JMP 0x0000cfb4
0000d283(7): LEA RDI,[0x1769d]
0000d28a(5): MOV ECX,0x6
0000d28f(3): MOV RSI,R12
0000d292(2): CMPSB.REPE RDI,RSI
0000d294(3): SETA AL
0000d297(2): SBB AL,0x0
0000d299(2): TEST AL,AL
0000d29b(2): JNZ 0x0000d31c
0000d29d(5): CALL 0x00001f50
0000d2a2(2): XOR ECX,ECX
0000d2a4(3): TEST RBP,RBP
0000d2a7(3): MOV RDX,qword ptr [RAX]
0000d2aa(5): MOV EDI,0x1
0000d2af(6): JNZ 0x0000d6a7
0000d2b5(3): NOP dword ptr [RAX]
0000d2b8(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x40
0000d2bd(2): JZ 0x0000d2d0
0000d2bf(3): MOV RAX,RCX
0000d2c2(3): MOV RSI,RDI
0000d2c5(4): SAR RAX,0x6
0000d2c9(3): SHL RSI,CL
0000d2cc(4): OR qword ptr [RBX + RAX*0x8],RSI
0000d2d0(4): ADD RCX,0x1
0000d2d4(7): CMP RCX,0x100
0000d2db(2): JNZ 0x0000d2b8
0000d2dd(5): JMP 0x0000cfb4
0000d2e2(2): XOR EAX,EAX
0000d2e4(4): NOP dword ptr [RAX]
0000d2e8(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x2
0000d2ed(2): JZ 0x0000d30b
0000d2ef(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d2f4(3): MOV R14,RDI
0000d2f7(3): MOV RSI,RCX
0000d2fa(3): AND ECX,0x3f
0000d2fd(4): SHR RSI,0x3
0000d301(3): SHL R14,CL
0000d304(3): AND ESI,0x18
0000d307(4): OR qword ptr [RBX + RSI*0x1],R14
0000d30b(4): ADD RAX,0x1
0000d30f(6): CMP RAX,0x100
0000d315(2): JNZ 0x0000d2e8
0000d317(5): JMP 0x0000cfb4
0000d31c(7): LEA RDI,[0x1767f]
0000d323(5): MOV ECX,0x6
0000d328(3): MOV RSI,R12
0000d32b(2): CMPSB.REPE RDI,RSI
0000d32d(3): SETA AL
0000d330(2): SBB AL,0x0
0000d332(2): TEST AL,AL
0000d334(2): JNZ 0x0000d382
0000d336(5): CALL 0x00001f50
0000d33b(2): XOR ECX,ECX
0000d33d(3): TEST RBP,RBP
0000d340(3): MOV RAX,qword ptr [RAX]
0000d343(5): MOV EDI,0x1
0000d348(6): JNZ 0x0000d670
0000d34e(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x1
0000d353(2): JZ 0x0000d366
0000d355(3): MOV RDX,RCX
0000d358(3): MOV RSI,RDI
0000d35b(4): SAR RDX,0x6
0000d35f(3): SHL RSI,CL
0000d362(4): OR qword ptr [RBX + RDX*0x8],RSI
0000d366(4): ADD RCX,0x1
0000d36a(7): CMP RCX,0x100
0000d371(2): JNZ 0x0000d34e
0000d373(5): JMP 0x0000cfb4
0000d378(5): MOV EAX,0xc
0000d37d(5): JMP 0x0000cfb6
0000d382(7): LEA RDI,[0x176a3]
0000d389(5): MOV ECX,0x6
0000d38e(3): MOV RSI,R12
0000d391(2): CMPSB.REPE RDI,RSI
0000d393(3): SETA AL
0000d396(2): SBB AL,0x0
0000d398(2): TEST AL,AL
0000d39a(6): JNZ 0x0000d48e
0000d3a0(5): CALL 0x00001f50
0000d3a5(2): XOR ECX,ECX
0000d3a7(3): TEST RBP,RBP
0000d3aa(3): MOV RDX,qword ptr [RAX]
0000d3ad(5): MOV ESI,0x1
0000d3b2(6): JNZ 0x0000d454
0000d3b8(4): TEST byte ptr [RDX + RCX*0x2],0x1
0000d3bc(2): JZ 0x0000d3cf
0000d3be(3): MOV RAX,RCX
0000d3c1(3): MOV RDI,RSI
0000d3c4(4): SAR RAX,0x6
0000d3c8(3): SHL RDI,CL
0000d3cb(4): OR qword ptr [RBX + RAX*0x8],RDI
0000d3cf(4): ADD RCX,0x1
0000d3d3(7): CMP RCX,0x100
0000d3da(2): JNZ 0x0000d3b8
0000d3dc(5): JMP 0x0000cfb4
0000d3e8(2): XOR EAX,EAX
0000d3ea(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x4
0000d3ef(2): JZ 0x0000d40d
0000d3f1(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d3f6(3): MOV R9,RDI
0000d3f9(3): MOV RSI,RCX
0000d3fc(3): AND ECX,0x3f
0000d3ff(4): SHR RSI,0x3
0000d403(3): SHL R9,CL
0000d406(3): AND ESI,0x18
0000d409(4): OR qword ptr [RBX + RSI*0x1],R9
0000d40d(4): ADD RAX,0x1
0000d411(6): CMP RAX,0x100
0000d417(2): JNZ 0x0000d3ea
0000d419(5): JMP 0x0000cfb4
0000d41e(2): XOR EAX,EAX
0000d420(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x20
0000d425(2): JZ 0x0000d443
0000d427(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d42c(3): MOV R9,RDI
0000d42f(3): MOV RSI,RCX
0000d432(3): AND ECX,0x3f
0000d435(4): SHR RSI,0x3
0000d439(3): SHL R9,CL
0000d43c(3): AND ESI,0x18
0000d43f(4): OR qword ptr [RBX + RSI*0x1],R9
0000d443(4): ADD RAX,0x1
0000d447(6): CMP RAX,0x100
0000d44d(2): JNZ 0x0000d420
0000d44f(5): JMP 0x0000cfb4
0000d454(2): XOR EAX,EAX
0000d456(5): MOV EDI,0x1
0000d45b(4): TEST byte ptr [RDX + RAX*0x2],0x1
0000d45f(2): JZ 0x0000d47d
0000d461(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d466(3): MOV R14,RDI
0000d469(3): MOV RSI,RCX
0000d46c(3): AND ECX,0x3f
0000d46f(4): SHR RSI,0x3
0000d473(3): SHL R14,CL
0000d476(3): AND ESI,0x18
0000d479(4): OR qword ptr [RBX + RSI*0x1],R14
0000d47d(4): ADD RAX,0x1
0000d481(6): CMP RAX,0x100
0000d487(2): JNZ 0x0000d45b
0000d489(5): JMP 0x0000cfb4
0000d48e(7): LEA RSI,[0x176a9]
0000d495(3): MOV RDI,R12
0000d498(5): CALL 0x00001d40
0000d49d(2): TEST EAX,EAX
0000d49f(2): JNZ 0x0000d51a
0000d4a1(5): CALL 0x00001f50
0000d4a6(2): XOR ECX,ECX
0000d4a8(3): TEST RBP,RBP
0000d4ab(3): MOV RSI,qword ptr [RAX]
0000d4ae(5): MOV EDX,0x1
0000d4b3(2): JNZ 0x0000d4df
0000d4b5(5): CMP word ptr [RSI + RCX*0x2],0x0
0000d4ba(2): JNS 0x0000d4cd
0000d4bc(3): MOV RAX,RCX
0000d4bf(3): MOV RDI,RDX
0000d4c2(4): SAR RAX,0x6
0000d4c6(3): SHL RDI,CL
0000d4c9(4): OR qword ptr [RBX + RAX*0x8],RDI
0000d4cd(4): ADD RCX,0x1
0000d4d1(7): CMP RCX,0x100
0000d4d8(2): JNZ 0x0000d4b5
0000d4da(5): JMP 0x0000cfb4
0000d4df(2): XOR EAX,EAX
0000d4e1(5): MOV EDI,0x1
0000d4e6(5): CMP word ptr [RSI + RAX*0x2],0x0
0000d4eb(2): JNS 0x0000d509
0000d4ed(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d4f2(3): MOV R9,RDI
0000d4f5(3): MOV RDX,RCX
0000d4f8(3): AND ECX,0x3f
0000d4fb(4): SHR RDX,0x3
0000d4ff(3): SHL R9,CL
0000d502(3): AND EDX,0x18
0000d505(4): OR qword ptr [RBX + RDX*0x1],R9
0000d509(4): ADD RAX,0x1
0000d50d(6): CMP RAX,0x100
0000d513(2): JNZ 0x0000d4e6
0000d515(5): JMP 0x0000cfb4
0000d51a(7): LEA RSI,[0x176af]
0000d521(3): MOV RDI,R12
0000d524(5): CALL 0x00001d40
0000d529(2): TEST EAX,EAX
0000d52b(2): JNZ 0x0000d5a4
0000d52d(5): CALL 0x00001f50
0000d532(2): XOR ECX,ECX
0000d534(3): TEST RBP,RBP
0000d537(3): MOV RSI,qword ptr [RAX]
0000d53a(5): MOV EDX,0x1
0000d53f(2): JNZ 0x0000d56a
0000d541(4): TEST byte ptr [RSI + RCX*0x2],0x4
0000d545(2): JZ 0x0000d558
0000d547(3): MOV RAX,RCX
0000d54a(3): MOV RDI,RDX
0000d54d(4): SAR RAX,0x6
0000d551(3): SHL RDI,CL
0000d554(4): OR qword ptr [RBX + RAX*0x8],RDI
0000d558(4): ADD RCX,0x1
0000d55c(7): CMP RCX,0x100
0000d563(2): JNZ 0x0000d541
0000d565(5): JMP 0x0000cfb4
0000d56a(2): XOR EAX,EAX
0000d56c(5): MOV EDI,0x1
0000d571(4): TEST byte ptr [RSI + RAX*0x2],0x4
0000d575(2): JZ 0x0000d593
0000d577(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d57c(3): MOV R14,RDI
0000d57f(3): MOV RDX,RCX
0000d582(3): AND ECX,0x3f
0000d585(4): SHR RDX,0x3
0000d589(3): SHL R14,CL
0000d58c(3): AND EDX,0x18
0000d58f(4): OR qword ptr [RBX + RDX*0x1],R14
0000d593(4): ADD RAX,0x1
0000d597(6): CMP RAX,0x100
0000d59d(2): JNZ 0x0000d571
0000d59f(5): JMP 0x0000cfb4
0000d5a4(7): LEA RSI,[0x176b5]
0000d5ab(3): MOV RDI,R12
0000d5ae(5): CALL 0x00001d40
0000d5b3(2): TEST EAX,EAX
0000d5b5(2): JNZ 0x0000d630
0000d5b7(5): CALL 0x00001f50
0000d5bc(2): XOR ECX,ECX
0000d5be(3): TEST RBP,RBP
0000d5c1(3): MOV RSI,qword ptr [RAX]
0000d5c4(5): MOV EDX,0x1
0000d5c9(2): JNZ 0x0000d5f5
0000d5cb(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x10
0000d5d0(2): JZ 0x0000d5e3
0000d5d2(3): MOV RAX,RCX
0000d5d5(3): MOV RDI,RDX
0000d5d8(4): SAR RAX,0x6
0000d5dc(3): SHL RDI,CL
0000d5df(4): OR qword ptr [RBX + RAX*0x8],RDI
0000d5e3(4): ADD RCX,0x1
0000d5e7(7): CMP RCX,0x100
0000d5ee(2): JNZ 0x0000d5cb
0000d5f0(5): JMP 0x0000cfb4
0000d5f5(2): XOR EAX,EAX
0000d5f7(5): MOV EDI,0x1
0000d5fc(5): TEST byte ptr [RSI + RAX*0x2 + 0x1],0x10
0000d601(2): JZ 0x0000d61f
0000d603(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d608(3): MOV R9,RDI
0000d60b(3): MOV RDX,RCX
0000d60e(3): AND ECX,0x3f
0000d611(4): SHR RDX,0x3
0000d615(3): SHL R9,CL
0000d618(3): AND EDX,0x18
0000d61b(4): OR qword ptr [RBX + RDX*0x1],R9
0000d61f(4): ADD RAX,0x1
0000d623(6): CMP RAX,0x100
0000d629(2): JNZ 0x0000d5fc
0000d62b(5): JMP 0x0000cfb4
0000d630(5): MOV EAX,0x4
0000d635(5): JMP 0x0000cfb6
0000d63a(2): XOR EAX,EAX
0000d63c(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x8
0000d641(2): JZ 0x0000d65f
0000d643(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d648(3): MOV R14,RDI
0000d64b(3): MOV RSI,RCX
0000d64e(3): AND ECX,0x3f
0000d651(4): SHR RSI,0x3
0000d655(3): SHL R14,CL
0000d658(3): AND ESI,0x18
0000d65b(4): OR qword ptr [RBX + RSI*0x1],R14
0000d65f(4): ADD RAX,0x1
0000d663(6): CMP RAX,0x100
0000d669(2): JNZ 0x0000d63c
0000d66b(5): JMP 0x0000cfb4
0000d670(2): XOR EDX,EDX
0000d672(5): TEST byte ptr [RAX + RDX*0x2 + 0x1],0x1
0000d677(2): JZ 0x0000d695
0000d679(5): MOVZX ECX,byte ptr [RBP + RDX*0x1]
0000d67e(3): MOV R9,RDI
0000d681(3): MOV RSI,RCX
0000d684(3): AND ECX,0x3f
0000d687(4): SHR RSI,0x3
0000d68b(3): SHL R9,CL
0000d68e(3): AND ESI,0x18
0000d691(4): OR qword ptr [RBX + RSI*0x1],R9
0000d695(4): ADD RDX,0x1
0000d699(7): CMP RDX,0x100
0000d6a0(2): JNZ 0x0000d672
0000d6a2(5): JMP 0x0000cfb4
0000d6a7(2): XOR EAX,EAX
0000d6a9(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x40
0000d6ae(2): JZ 0x0000d6cc
0000d6b0(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000d6b5(3): MOV R14,RDI
0000d6b8(3): MOV RSI,RCX
0000d6bb(3): AND ECX,0x3f
0000d6be(4): SHR RSI,0x3
0000d6c2(3): SHL R14,CL
0000d6c5(3): AND ESI,0x18
0000d6c8(4): OR qword ptr [RBX + RSI*0x1],R14
0000d6cc(4): ADD RAX,0x1
0000d6d0(6): CMP RAX,0x100
0000d6d6(2): JNZ 0x0000d6a9
0000d6d8(5): JMP 0x0000cfb4
0000d6e0(2): PUSH R15
0000d6e2(2): PUSH R14
0000d6e4(3): MOV R14,RDX
0000d6e7(2): PUSH R13
0000d6e9(2): PUSH R12
0000d6eb(3): MOV R13,RCX
0000d6ee(1): PUSH RBP
0000d6ef(1): PUSH RBX
0000d6f0(3): MOV RBP,RDI
0000d6f3(5): MOV EDI,0x20
0000d6f8(3): MOV R12D,R8D
0000d6fb(4): SUB RSP,0x58
0000d6ff(4): MOV qword ptr [RSP],RSI
0000d703(5): MOV ESI,0x1
0000d708(5): MOV qword ptr [RSP + 0x8],R9
0000d70d(9): MOV RAX,qword ptr FS:[0x28]
0000d716(5): MOV qword ptr [RSP + 0x48],RAX
0000d71b(2): XOR EAX,EAX
0000d71d(9): MOV qword ptr [RSP + 0x18],0x0
0000d726(5): CALL 0x00001d30
0000d72b(3): TEST RAX,RAX
0000d72e(6): JZ 0x0000d8f0
0000d734(5): MOV ESI,0x1
0000d739(5): MOV EDI,0x50
0000d73e(3): MOV RBX,RAX
0000d741(5): CALL 0x00001d30
0000d746(3): TEST RAX,RAX
0000d749(3): MOV R15,RAX
0000d74c(6): JZ 0x0000d900
0000d752(4): MOVZX EAX,byte ptr [RAX + 0x20]
0000d756(4): SUB RSP,0x8
0000d75a(3): MOV EDX,R12D
0000d75d(2): PUSH 0x0
0000d75f(3): AND EDX,0x1
0000d762(5): MOV RDI,qword ptr [RSP + 0x10]
0000d767(4): LEA RCX,[R15 + 0x48]
0000d76b(3): MOV R9,R14
0000d76e(3): MOV RSI,RBX
0000d771(5): LEA R8,[RSP + 0x28]
0000d776(3): AND EAX,0xfffffffe
0000d779(2): OR EAX,EDX
0000d77b(4): LEA RDX,[R15 + 0x18]
0000d77f(4): MOV byte ptr [R15 + 0x20],AL
0000d783(5): CALL 0x0000ced0
0000d788(2): TEST EAX,EAX
0000d78a(1): POP RDX
0000d78b(1): POP RCX
0000d78c(6): JNZ 0x0000d920
0000d792(5): MOVSX RCX,byte ptr [R13]
0000d797(5): MOV ESI,0x1
0000d79c(2): TEST CL,CL
0000d79e(2): JZ 0x0000d7da
0000d7a0(4): LEA RAX,[RCX + 0x3f]
0000d7a4(3): TEST RCX,RCX
0000d7a7(3): MOV RDX,RCX
0000d7aa(4): CMOVNS RAX,RCX
0000d7ae(4): SAR RDX,0x3f
0000d7b2(4): ADD R13,0x1
0000d7b6(4): SHR RDX,0x3a
0000d7ba(4): SAR RAX,0x6
0000d7be(3): ADD RCX,RDX
0000d7c1(3): AND ECX,0x3f
0000d7c4(3): SUB RCX,RDX
0000d7c7(3): MOV RDX,RSI
0000d7ca(3): SHL RDX,CL
0000d7cd(5): MOVSX RCX,byte ptr [R13]
0000d7d2(4): OR qword ptr [RBX + RAX*0x8],RDX
0000d7d6(2): TEST CL,CL
0000d7d8(2): JNZ 0x0000d7a0
0000d7da(3): TEST R12B,R12B
0000d7dd(2): JZ 0x0000d7f2
0000d7df(4): LEA RDX,[RBX + 0x20]
0000d7e3(3): MOV RAX,RBX
0000d7e6(3): NOT qword ptr [RAX]
0000d7e9(4): ADD RAX,0x8
0000d7ed(3): CMP RDX,RAX
0000d7f0(2): JNZ 0x0000d7e6
0000d7f2(7): CMP dword ptr [0xb4 + RBP],0x1
0000d7f9(2): JLE 0x0000d813
0000d7fb(4): MOV RCX,qword ptr [RBP + 0x78]
0000d7ff(2): XOR EAX,EAX
0000d801(4): MOV RDX,qword ptr [RCX + RAX*0x1]
0000d805(4): AND qword ptr [RBX + RAX*0x1],RDX
0000d809(4): ADD RAX,0x8
0000d80d(4): CMP RAX,0x20
0000d811(2): JNZ 0x0000d801
0000d813(5): LEA R9,[RSP + 0x20]
0000d818(4): LEA R12,[RBP + 0x70]
0000d81c(7): LEA R13,[0x80 + RBP]
0000d823(2): XOR ECX,ECX
0000d825(2): XOR EDX,EDX
0000d827(5): MOV byte ptr [RSP + 0x28],0x3
0000d82c(3): MOV R8,R9
0000d82f(3): MOV RSI,R13
0000d832(3): MOV RDI,R12
0000d835(5): MOV qword ptr [RSP + 0x20],RBX
0000d83a(4): MOV qword ptr [RSP],R9
0000d83e(5): CALL 0x0000a390
0000d843(3): TEST RAX,RAX
0000d846(3): MOV R14,RAX
0000d849(6): JZ 0x0000d8e0
0000d84f(7): CMP dword ptr [0xb4 + RBP],0x1
0000d856(2): JLE 0x0000d8d0
0000d858(7): OR byte ptr [0xb0 + RBP],0x2
0000d85f(4): MOV R9,qword ptr [RSP]
0000d863(2): XOR ECX,ECX
0000d865(2): XOR EDX,EDX
0000d867(3): MOV RSI,R13
0000d86a(3): MOV RDI,R12
0000d86d(5): MOV byte ptr [RSP + 0x28],0x6
0000d872(5): MOV qword ptr [RSP + 0x20],R15
0000d877(3): MOV R8,R9
0000d87a(5): CALL 0x0000a390
0000d87f(3): TEST RAX,RAX
0000d882(2): JZ 0x0000d8e0
0000d884(5): LEA R8,[RSP + 0x30]
0000d889(3): MOV RDX,R14
0000d88c(3): MOV RCX,RAX
0000d88f(3): MOV RSI,R13
0000d892(3): MOV RDI,R12
0000d895(5): MOV byte ptr [RSP + 0x38],0xa
0000d89a(5): CALL 0x0000a390
0000d89f(3): MOV R14,RAX
0000d8a2(5): MOV RDI,qword ptr [RSP + 0x48]
0000d8a7(9): XOR RDI,qword ptr FS:[0x28]
0000d8b0(3): MOV RAX,R14
0000d8b3(6): JNZ 0x0000d945
0000d8b9(4): ADD RSP,0x58
0000d8bd(1): POP RBX
0000d8be(1): POP RBP
0000d8bf(2): POP R12
0000d8c1(2): POP R13
0000d8c3(2): POP R14
0000d8c5(2): POP R15
0000d8c7(1): RET
0000d8d0(3): MOV RDI,R15
0000d8d3(5): CALL 0x00008df0
0000d8d8(2): JMP 0x0000d8a2
0000d8e0(3): MOV RDI,RBX
0000d8e3(5): CALL 0x00001b00
0000d8e8(3): MOV RDI,R15
0000d8eb(5): CALL 0x00008df0
0000d8f0(5): MOV RAX,qword ptr [RSP + 0x8]
0000d8f5(3): XOR R14D,R14D
0000d8f8(6): MOV dword ptr [RAX],0xc
0000d8fe(2): JMP 0x0000d8a2
0000d900(3): MOV RDI,RBX
0000d903(3): XOR R14D,R14D
0000d906(5): CALL 0x00001b00
0000d90b(5): MOV RAX,qword ptr [RSP + 0x8]
0000d910(6): MOV dword ptr [RAX],0xc
0000d916(2): JMP 0x0000d8a2
0000d920(3): MOV RDI,RBX
0000d923(3): MOV dword ptr [RSP],EAX
0000d926(3): XOR R14D,R14D
0000d929(5): CALL 0x00001b00
0000d92e(3): MOV RDI,R15
0000d931(5): CALL 0x00008df0
0000d936(5): MOV RDI,qword ptr [RSP + 0x8]
0000d93b(3): MOV EAX,dword ptr [RSP]
0000d93e(2): MOV dword ptr [RDI],EAX
0000d940(5): JMP 0x0000d8a2
0000d945(5): CALL 0x00001c20
0000d94a(6): NOP word ptr [RAX + RAX*0x1]
0000d950(2): PUSH R15
0000d952(2): PUSH R14
0000d954(3): MOV RAX,RDI
0000d957(2): PUSH R13
0000d959(2): PUSH R12
0000d95b(1): PUSH RBP
0000d95c(1): PUSH RBX
0000d95d(2): XOR EBX,EBX
0000d95f(3): MOV RBP,RCX
0000d962(7): SUB RSP,0x178
0000d969(3): MOV RAX,qword ptr [RAX]
0000d96c(5): MOV qword ptr [RSP + 0x30],RDI
0000d971(5): MOV qword ptr [RSP + 0x20],RSI
0000d976(9): MOV RDI,qword ptr FS:[0x28]
0000d97f(8): MOV qword ptr [0x168 + RSP],RDI
0000d987(2): XOR EDI,EDI
0000d989(7): CMP dword ptr [0xb4 + RAX],0x1
0000d990(5): MOV qword ptr [RSP + 0x28],RDX
0000d995(5): MOV qword ptr [RSP + 0x8],RAX
0000d99a(2): JNZ 0x0000d9b3
0000d99c(5): MOV RAX,qword ptr [RSP + 0x30]
0000d9a1(4): MOV RAX,qword ptr [RAX + 0x18]
0000d9a5(3): MOV RBX,RAX
0000d9a8(4): MOV qword ptr [RSP],RAX
0000d9ac(4): SHR RBX,0x16
0000d9b0(3): AND EBX,0x1
0000d9b3(5): MOV RAX,qword ptr [RSP + 0x20]
0000d9b8(4): CMP qword ptr [RAX],0x0
0000d9bc(6): JLE 0x0000ddcd
0000d9c2(5): LEA RAX,[RSP + 0x58]
0000d9c7(8): MOV qword ptr [RSP],0x0
0000d9cf(5): MOV qword ptr [RSP + 0x40],RAX
0000d9d4(5): LEA RAX,[RSP + 0x54]
0000d9d9(5): MOV qword ptr [RSP + 0x48],RAX
0000d9de(5): LEA RAX,[RSP + 0x60]
0000d9e3(5): MOV qword ptr [RSP + 0x38],RAX
0000d9e8(2): JMP 0x0000da2e
0000d9f0(3): CMP EAX,0x3
0000d9f3(6): JZ 0x0000dce6
0000d9f9(3): CMP EAX,0x6
0000d9fc(6): JZ 0x0000db88
0000da02(3): AND EDX,0xfffffffd
0000da05(3): CMP DL,0x5
0000da08(6): JZ 0x0000de04
0000da0e(3): CMP EAX,0x2
0000da11(6): JZ 0x0000dd64
0000da17(5): MOV RDI,qword ptr [RSP + 0x20]
0000da1c(5): ADD qword ptr [RSP],0x1
0000da21(4): MOV RAX,qword ptr [RSP]
0000da25(3): CMP RAX,qword ptr [RDI]
0000da28(6): JGE 0x0000ddcd
0000da2e(5): MOV RAX,qword ptr [RSP + 0x28]
0000da33(4): MOV RDI,qword ptr [RSP]
0000da37(3): MOV RAX,qword ptr [RAX]
0000da3a(4): MOV R12,qword ptr [RAX + RDI*0x8]
0000da3e(5): MOV RAX,qword ptr [RSP + 0x8]
0000da43(3): MOV RCX,qword ptr [RAX]
0000da46(3): MOV RAX,R12
0000da49(4): SHL RAX,0x4
0000da4d(5): MOV qword ptr [RSP + 0x10],RAX
0000da52(4): LEA RSI,[RCX + RAX*0x1]
0000da56(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000da5a(3): CMP EAX,0x1
0000da5d(2): MOV EDX,EAX
0000da5f(2): JNZ 0x0000d9f0
0000da61(4): MOVZX R13D,byte ptr [RSI]
0000da65(2): TEST EBX,EBX
0000da67(6): MOV byte ptr [RBP + R13*0x1],0x1
0000da6d(2): JZ 0x0000da80
0000da6f(5): CALL 0x00001f40
0000da74(3): MOV RAX,qword ptr [RAX]
0000da77(4): MOVSXD RAX,dword ptr [RAX + R13*0x4]
0000da7b(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000da80(5): MOV RAX,qword ptr [RSP + 0x30]
0000da85(4): TEST byte ptr [RAX + 0x1a],0x40
0000da89(2): JZ 0x0000da17
0000da8b(5): MOV RSI,qword ptr [RSP + 0x8]
0000da90(7): CMP dword ptr [0xb4 + RSI],0x1
0000da97(6): JLE 0x0000da17
0000da9d(3): MOV RAX,qword ptr [RSI]
0000daa0(5): MOV RDI,qword ptr [RSP + 0x10]
0000daa5(4): MOVZX EDX,byte ptr [RAX + RDI*0x1]
0000daa9(4): MOV byte ptr [RSP + 0x60],DL
0000daad(5): LEA RDX,[R12 + 0x1]
0000dab2(4): CMP qword ptr [RSI + 0x10],RDX
0000dab6(6): JBE 0x0000ddf6
0000dabc(5): LEA RCX,[RAX + RDI*0x1 + 0x10]
0000dac1(3): MOV EAX,dword ptr [RCX + 0x8]
0000dac4(5): AND EAX,0x2000ff
0000dac9(5): CMP EAX,0x200001
0000dace(6): JNZ 0x0000ddf6
0000dad4(4): ADD RDI,0x20
0000dad8(3): MOV R13,RDI
0000dadb(5): MOV RDI,qword ptr [RSP + 0x38]
0000dae0(4): LEA RAX,[RDI + 0x1]
0000dae4(2): JMP 0x0000db0b
0000daf0(3): MOV RCX,qword ptr [RSI]
0000daf3(3): ADD RCX,R13
0000daf6(4): ADD R13,0x10
0000dafa(3): MOV EDX,dword ptr [RCX + 0x8]
0000dafd(6): AND EDX,0x2000ff
0000db03(6): CMP EDX,0x200001
0000db09(2): JNZ 0x0000db24
0000db0b(3): MOVZX EDX,byte ptr [RCX]
0000db0e(4): ADD RAX,0x1
0000db12(3): MOV byte ptr [RAX + -0x1],DL
0000db15(3): MOV RDX,RAX
0000db18(3): SUB RDX,RDI
0000db1b(3): ADD RDX,R12
0000db1e(4): CMP qword ptr [RSI + 0x10],RDX
0000db22(2): JA 0x0000daf0
0000db24(5): MOV RSI,qword ptr [RSP + 0x38]
0000db29(5): MOV RCX,qword ptr [RSP + 0x40]
0000db2e(5): MOV RDI,qword ptr [RSP + 0x48]
0000db33(3): SUB RAX,RSI
0000db36(7): MOV qword ptr [RCX],0x0
0000db3d(3): MOV R12,RAX
0000db40(3): MOV RDX,RAX
0000db43(5): CALL 0x00007b30
0000db48(3): CMP R12,RAX
0000db4b(6): JNZ 0x0000da17
0000db51(4): MOV EDI,dword ptr [RSP + 0x54]
0000db55(5): CALL 0x00001ea0
0000db5a(5): MOV RDX,qword ptr [RSP + 0x40]
0000db5f(5): MOV RDI,qword ptr [RSP + 0x38]
0000db64(2): MOV ESI,EAX
0000db66(5): CALL 0x00001db0
0000db6b(4): CMP RAX,-0x1
0000db6f(6): JZ 0x0000da17
0000db75(5): MOVZX EAX,byte ptr [RSP + 0x60]
0000db7a(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000db7f(5): JMP 0x0000da17
0000db88(5): MOV RAX,qword ptr [RSP + 0x8]
0000db8d(3): MOV R12,qword ptr [RSI]
0000db90(7): CMP dword ptr [0xb4 + RAX],0x1
0000db97(2): JLE 0x0000dbbd
0000db99(6): CMP qword ptr [R12 + 0x48],0x0
0000db9f(6): JNZ 0x0000dc9f
0000dba5(6): TEST byte ptr [R12 + 0x20],0x1
0000dbab(6): JNZ 0x0000dc9f
0000dbb1(6): CMP qword ptr [R12 + 0x40],0x0
0000dbb7(6): JNZ 0x0000dc9f
0000dbbd(3): XOR R13D,R13D
0000dbc0(6): CMP qword ptr [R12 + 0x28],0x0
0000dbc6(6): JLE 0x0000da17
0000dbcc(3): MOV R15,R12
0000dbcf(5): MOV R14,qword ptr [RSP + 0x40]
0000dbd4(3): MOV R12,RBP
0000dbd7(3): MOV RBP,R13
0000dbda(3): MOV R13D,EBX
0000dbdd(2): JMP 0x0000dbed
0000dbdf(4): ADD RBP,0x1
0000dbe3(4): CMP RBP,qword ptr [R15 + 0x28]
0000dbe7(6): JGE 0x0000dc94
0000dbed(7): MOV qword ptr [R14],0x0
0000dbf4(3): MOV RAX,qword ptr [R15]
0000dbf7(3): MOV RDX,R14
0000dbfa(5): MOV RDI,qword ptr [RSP + 0x38]
0000dbff(8): LEA RBX,[RBP*0x4]
0000dc07(3): MOV ESI,dword ptr [RAX + RBP*0x4]
0000dc0a(5): CALL 0x00001db0
0000dc0f(4): CMP RAX,-0x1
0000dc13(2): JZ 0x0000dc3f
0000dc15(5): MOVZX EDX,byte ptr [RSP + 0x60]
0000dc1a(3): TEST R13D,R13D
0000dc1d(5): MOV byte ptr [R12 + RDX*0x1],0x1
0000dc22(5): MOV qword ptr [RSP + 0x10],RDX
0000dc27(2): JZ 0x0000dc3f
0000dc29(5): CALL 0x00001f40
0000dc2e(5): MOV RDX,qword ptr [RSP + 0x10]
0000dc33(3): MOV RAX,qword ptr [RAX]
0000dc36(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
0000dc3a(5): MOV byte ptr [R12 + RAX*0x1],0x1
0000dc3f(5): MOV RAX,qword ptr [RSP + 0x30]
0000dc44(4): TEST byte ptr [RAX + 0x1a],0x40
0000dc48(2): JZ 0x0000dbdf
0000dc4a(5): MOV RAX,qword ptr [RSP + 0x8]
0000dc4f(7): CMP dword ptr [0xb4 + RAX],0x1
0000dc56(2): JLE 0x0000dbdf
0000dc58(3): MOV RAX,qword ptr [R15]
0000dc5b(3): MOV EDI,dword ptr [RAX + RBX*0x1]
0000dc5e(5): CALL 0x00001ea0
0000dc63(5): MOV RDI,qword ptr [RSP + 0x38]
0000dc68(3): MOV RDX,R14
0000dc6b(2): MOV ESI,EAX
0000dc6d(5): CALL 0x00001db0
0000dc72(4): CMP RAX,-0x1
0000dc76(6): JZ 0x0000dbdf
0000dc7c(5): MOVZX EAX,byte ptr [RSP + 0x60]
0000dc81(4): ADD RBP,0x1
0000dc85(5): MOV byte ptr [R12 + RAX*0x1],0x1
0000dc8a(4): CMP RBP,qword ptr [R15 + 0x28]
0000dc8e(6): JL 0x0000dbed
0000dc94(3): MOV EBX,R13D
0000dc97(3): MOV RBP,R12
0000dc9a(5): JMP 0x0000da17
0000dc9f(5): MOV R12,qword ptr [RSP + 0x40]
0000dca4(5): MOV R13,qword ptr [RSP + 0x48]
0000dca9(5): MOV byte ptr [RSP + 0x54],0x0
0000dcae(2): NOP
0000dcb0(2): XOR EDI,EDI
0000dcb2(8): MOV qword ptr [R12],0x0
0000dcba(3): MOV RCX,R12
0000dcbd(5): MOV EDX,0x1
0000dcc2(3): MOV RSI,R13
0000dcc5(5): CALL 0x00007b30
0000dcca(4): CMP RAX,-0x2
0000dcce(2): JNZ 0x0000dcda
0000dcd0(5): MOVZX EAX,byte ptr [RSP + 0x54]
0000dcd5(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000dcda(5): ADD byte ptr [RSP + 0x54],0x1
0000dcdf(2): JNZ 0x0000dcb0
0000dce1(5): JMP 0x0000da17
0000dce6(3): MOV R13,RBP
0000dce9(3): XOR R12D,R12D
0000dcec(9): MOV qword ptr [RSP + 0x18],0x0
0000dcf5(5): MOV RAX,qword ptr [RSP + 0x10]
0000dcfa(5): MOV RSI,qword ptr [RSP + 0x18]
0000dcff(3): XOR R14D,R14D
0000dd02(4): MOV RAX,qword ptr [RCX + RAX*0x1]
0000dd06(4): MOV R15,qword ptr [RAX + RSI*0x1]
0000dd0a(6): NOP word ptr [RAX + RAX*0x1]
0000dd10(4): BT RDI,R14
0000dd14(2): JNC 0x0000dd35
0000dd16(2): TEST EBX,EBX
0000dd18(6): MOV byte ptr [R13 + R14*0x1],0x1
0000dd1e(2): JZ 0x0000dd35
0000dd20(5): CALL 0x00001f40
0000dd25(3): MOV RAX,qword ptr [RAX]
0000dd28(4): LEA RDX,[R12 + R14*0x1]
0000dd2c(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
0000dd30(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000dd35(4): ADD R14,0x1
0000dd39(4): CMP R14,0x40
0000dd3d(2): JNZ 0x0000dd10
0000dd3f(4): ADD R12,0x40
0000dd43(6): ADD qword ptr [RSP + 0x18],0x8
0000dd49(4): ADD R13,0x40
0000dd4d(7): CMP R12,0x100
0000dd54(6): JZ 0x0000da17
0000dd5a(5): MOV RAX,qword ptr [RSP + 0x8]
0000dd5f(3): MOV RCX,qword ptr [RAX]
0000dd62(2): JMP 0x0000dcf5
0000dd64(8): MOVDQA XMM0,xmmword ptr [0x00017e80]
0000dd6c(4): MOVUPS xmmword ptr [RBP],XMM0
0000dd70(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
0000dd74(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0000dd78(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0000dd7c(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
0000dd80(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
0000dd84(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
0000dd88(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0000dd8c(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
0000dd93(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0000dd9a(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
0000dda1(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
0000dda8(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0000ddaf(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
0000ddb6(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0000ddbd(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
0000ddc4(5): MOV RAX,qword ptr [RSP + 0x30]
0000ddc9(4): OR byte ptr [RAX + 0x38],0x1
0000ddcd(8): MOV RAX,qword ptr [0x168 + RSP]
0000ddd5(9): XOR RAX,qword ptr FS:[0x28]
0000ddde(6): JNZ 0x0000de72
0000dde4(7): ADD RSP,0x178
0000ddeb(1): POP RBX
0000ddec(1): POP RBP
0000dded(2): POP R12
0000ddef(2): POP R13
0000ddf1(2): POP R14
0000ddf3(2): POP R15
0000ddf5(1): RET
0000ddf6(5): MOV RAX,qword ptr [RSP + 0x38]
0000ddfb(4): ADD RAX,0x1
0000ddff(5): JMP 0x0000db24
0000de04(8): MOVDQA XMM0,xmmword ptr [0x00017e80]
0000de0c(3): CMP EAX,0x2
0000de0f(4): MOVUPS xmmword ptr [RBP],XMM0
0000de13(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
0000de17(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0000de1b(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0000de1f(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
0000de23(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
0000de27(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
0000de2b(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0000de2f(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
0000de36(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0000de3d(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
0000de44(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
0000de4b(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0000de52(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
0000de59(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0000de60(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
0000de67(6): JNZ 0x0000ddcd
0000de6d(5): JMP 0x0000ddc4
0000de72(5): CALL 0x00001c20
0000de77(9): NOP word ptr [RAX + RAX*0x1]
0000de80(4): SHL RDX,0x4
0000de84(2): PUSH R13
0000de86(2): PUSH R12
0000de88(4): LEA R9,[RDI + RDX*0x1]
0000de8c(1): PUSH RBP
0000de8d(1): PUSH RBX
0000de8e(4): SUB RSP,0x8
0000de92(5): MOVZX R11D,byte ptr [R9 + 0x8]
0000de97(4): CMP R11B,0x7
0000de9b(6): JZ 0x0000dfb0
0000dea1(7): CMP dword ptr [0x90 + RCX],0x1
0000dea8(6): JZ 0x0000df70
0000deae(3): MOV RBX,RSI
0000deb1(3): MOV RDI,RCX
0000deb4(3): MOV RSI,R8
0000deb7(3): MOV R10,RCX
0000deba(5): CALL 0x00009620
0000debf(4): CMP R11B,0x5
0000dec3(2): MOV EBP,EAX
0000dec5(6): JZ 0x0000df80
0000decb(4): CMP R11B,0x6
0000decf(6): JNZ 0x0000df70
0000ded5(3): CMP EAX,0x1
0000ded8(6): JLE 0x0000df70
0000dede(3): MOV R13,qword ptr [R9]
0000dee1(4): MOV RSI,qword ptr [R13 + 0x40]
0000dee5(4): MOV RDX,qword ptr [R13 + 0x28]
0000dee9(3): TEST RSI,RSI
0000deec(2): JNZ 0x0000def9
0000deee(5): CMP qword ptr [R13 + 0x48],0x0
0000def3(6): JZ 0x0000dfe8
0000def9(4): MOV RAX,qword ptr [R10 + 0x10]
0000defd(3): TEST RDX,RDX
0000df00(4): MOV R12D,dword ptr [RAX + R8*0x4]
0000df04(2): JLE 0x0000df27
0000df06(4): MOV RCX,qword ptr [R13]
0000df0a(3): CMP R12D,dword ptr [RCX]
0000df0d(2): JZ 0x0000df62
0000df0f(2): XOR EAX,EAX
0000df11(2): JMP 0x0000df1e
0000df18(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0000df1c(2): JZ 0x0000df62
0000df1e(4): ADD RAX,0x1
0000df22(3): CMP RAX,RDX
0000df25(2): JNZ 0x0000df18
0000df27(4): MOV RAX,qword ptr [R13 + 0x48]
0000df2b(3): TEST RAX,RAX
0000df2e(6): JLE 0x0000e00c
0000df34(2): XOR EBX,EBX
0000df36(2): JMP 0x0000df4e
0000df40(4): ADD RBX,0x1
0000df44(4): CMP RBX,qword ptr [R13 + 0x48]
0000df48(6): JGE 0x0000e008
0000df4e(4): MOV RAX,qword ptr [R13 + 0x18]
0000df52(3): MOV EDI,R12D
0000df55(4): MOV RSI,qword ptr [RAX + RBX*0x8]
0000df59(5): CALL 0x00001bc0
0000df5e(2): TEST EAX,EAX
0000df60(2): JZ 0x0000df40
0000df62(5): TEST byte ptr [R13 + 0x20],0x1
0000df67(2): JZ 0x0000df72
0000df69(7): NOP dword ptr [RAX]
0000df70(2): XOR EBP,EBP
0000df72(4): ADD RSP,0x8
0000df76(2): MOV EAX,EBP
0000df78(1): POP RBX
0000df79(1): POP RBP
0000df7a(2): POP R12
0000df7c(2): POP R13
0000df7e(1): RET
0000df80(3): CMP EAX,0x1
0000df83(2): JLE 0x0000df70
0000df85(3): MOV RAX,qword ptr [RBX]
0000df88(2): TEST AL,0x40
0000df8a(2): JZ 0x0000dfa0
0000df8c(2): TEST AL,0x80
0000df8e(2): JZ 0x0000df72
0000df90(4): MOV RAX,qword ptr [R10 + 0x8]
0000df94(5): CMP byte ptr [RAX + R8*0x1],0x0
0000df99(2): JZ 0x0000df70
0000df9b(2): JMP 0x0000df72
0000dfa0(4): MOV RDX,qword ptr [R10 + 0x8]
0000dfa4(5): CMP byte ptr [RDX + R8*0x1],0xa
0000dfa9(2): JNZ 0x0000df8c
0000dfab(2): JMP 0x0000df70
0000dfb0(4): MOV RDX,qword ptr [RCX + 0x8]
0000dfb4(4): LEA RSI,[RDX + R8*0x1]
0000dfb8(3): MOVZX EAX,byte ptr [RSI]
0000dfbb(2): CMP AL,0xc1
0000dfbd(2): JBE 0x0000df70
0000dfbf(4): MOV RCX,qword ptr [RCX + 0x58]
0000dfc3(4): LEA RDI,[R8 + 0x1]
0000dfc7(3): CMP RDI,RCX
0000dfca(2): JGE 0x0000df70
0000dfcc(2): CMP AL,0xdf
0000dfce(6): MOVZX EDX,byte ptr [RDX + R8*0x1 + 0x1]
0000dfd4(2): JA 0x0000e03e
0000dfd6(3): ADD EDX,-0x80
0000dfd9(5): MOV EBP,0x2
0000dfde(3): CMP DL,0x3f
0000dfe1(2): JA 0x0000df70
0000dfe3(2): JMP 0x0000df72
0000dfe8(3): TEST RDX,RDX
0000dfeb(6): JNZ 0x0000def9
0000dff1(5): TEST byte ptr [R13 + 0x20],0x1
0000dff6(6): JNZ 0x0000df72
0000dffc(5): JMP 0x0000df70
0000e008(4): MOV RSI,qword ptr [R13 + 0x40]
0000e00c(3): TEST RSI,RSI
0000e00f(2): JLE 0x0000dff1
0000e011(4): MOV RDX,qword ptr [R13 + 0x8]
0000e015(2): XOR EAX,EAX
0000e017(2): JMP 0x0000e029
0000e020(4): ADD RAX,0x1
0000e024(3): CMP RAX,RSI
0000e027(2): JZ 0x0000dff1
0000e029(4): CMP R12D,dword ptr [RDX + RAX*0x4]
0000e02d(2): JL 0x0000e020
0000e02f(4): MOV RCX,qword ptr [R13 + 0x10]
0000e033(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0000e037(2): JG 0x0000e020
0000e039(5): JMP 0x0000df62
0000e03e(2): CMP AL,0xef
0000e040(2): JA 0x0000e088
0000e042(2): CMP AL,0xe0
0000e044(2): JNZ 0x0000e04f
0000e046(3): CMP DL,0x9f
0000e049(6): JBE 0x0000df70
0000e04f(5): MOV EBP,0x3
0000e054(3): MOVSXD RDI,EBP
0000e057(3): ADD R8,RDI
0000e05a(3): CMP RCX,R8
0000e05d(6): JL 0x0000df70
0000e063(5): MOV EAX,0x1
0000e068(2): JMP 0x0000e077
0000e06a(4): ADD RAX,0x1
0000e06e(3): CMP RDI,RAX
0000e071(6): JLE 0x0000df72
0000e077(4): MOVZX EBX,byte ptr [RSI + RAX*0x1]
0000e07b(3): LEA EDX,[RBX + -0x80]
0000e07e(3): CMP DL,0x3f
0000e081(2): JBE 0x0000e06a
0000e083(5): JMP 0x0000df70
0000e088(2): CMP AL,0xf7
0000e08a(2): JA 0x0000e0a0
0000e08c(2): CMP AL,0xf0
0000e08e(2): JNZ 0x0000e099
0000e090(3): CMP DL,0x8f
0000e093(6): JBE 0x0000df70
0000e099(5): MOV EBP,0x4
0000e09e(2): JMP 0x0000e054
0000e0a0(2): CMP AL,0xfb
0000e0a2(2): JA 0x0000e0b8
0000e0a4(2): CMP AL,0xf8
0000e0a6(2): JNZ 0x0000e0b1
0000e0a8(3): CMP DL,0x87
0000e0ab(6): JBE 0x0000df70
0000e0b1(5): MOV EBP,0x5
0000e0b6(2): JMP 0x0000e054
0000e0b8(2): CMP AL,0xfd
0000e0ba(6): JA 0x0000df70
0000e0c0(2): CMP AL,0xfc
0000e0c2(2): JNZ 0x0000e0cd
0000e0c4(3): CMP DL,0x83
0000e0c7(6): JBE 0x0000df70
0000e0cd(5): MOV EBP,0x6
0000e0d2(2): JMP 0x0000e054
0000e0e0(2): PUSH R15
0000e0e2(2): PUSH R14
0000e0e4(3): MOV R15,RDI
0000e0e7(2): PUSH R13
0000e0e9(2): PUSH R12
0000e0eb(1): PUSH RBP
0000e0ec(1): PUSH RBX
0000e0ed(3): MOV RBP,RCX
0000e0f0(3): MOV RBX,RDX
0000e0f3(7): SUB RSP,0xd8
0000e0fa(7): MOV RCX,qword ptr [0x98 + RDI]
0000e101(4): MOV R13,qword ptr [RSI + 0x8]
0000e105(9): MOV RAX,qword ptr FS:[0x28]
0000e10e(8): MOV qword ptr [0xc8 + RSP],RAX
0000e116(2): XOR EAX,EAX
0000e118(3): MOV RAX,RDX
0000e11b(5): MOV qword ptr [RSP + 0x60],RSI
0000e120(5): MOV qword ptr [RSP + 0x78],R8
0000e125(4): SHL RAX,0x4
0000e129(3): ADD RAX,qword ptr [RCX]
0000e12c(5): MOV qword ptr [RSP + 0x40],R9
0000e131(5): MOV qword ptr [RSP + 0x30],RCX
0000e136(11): MOV dword ptr [0x88 + RSP],0x0
0000e141(3): MOV RAX,qword ptr [RAX]
0000e144(5): MOV qword ptr [RSP + 0x48],RAX
0000e149(7): MOVSXD RAX,dword ptr [0xe0 + RDI]
0000e150(3): ADD RAX,R9
0000e153(3): CMP RAX,R13
0000e156(6): JGE 0x0000e776
0000e15c(5): MOV RAX,qword ptr [RSP + 0x60]
0000e161(7): MOV RDX,qword ptr [0xb8 + R15]
0000e168(4): MOV RCX,qword ptr [R15 + 0x48]
0000e16c(3): MOV R12,qword ptr [RAX]
0000e16f(4): MOV R14,qword ptr [RAX + 0x10]
0000e173(5): MOV qword ptr [RSP + 0x68],RDX
0000e178(5): MOV qword ptr [RSP + 0x70],RCX
0000e17d(7): MOV EDX,dword ptr [0xa0 + R15]
0000e184(3): TEST R12,R12
0000e187(7): MOV qword ptr [0xb8 + R15],R14
0000e18e(6): JZ 0x0000e570
0000e194(5): LEA RSI,[R12 + -0x1]
0000e199(4): MOV qword ptr [R15 + 0x48],R12
0000e19d(3): MOV RDI,R15
0000e1a0(5): CALL 0x0000b4b0
0000e1a5(3): CMP R12,RBP
0000e1a8(3): MOV R13D,EAX
0000e1ab(6): JZ 0x0000e583
0000e1b1(4): MOV RBP,qword ptr [R14 + R12*0x8]
0000e1b5(3): TEST RBP,RBP
0000e1b8(2): JZ 0x0000e1c4
0000e1ba(4): TEST byte ptr [RBP + 0x68],0x40
0000e1be(6): JNZ 0x0000e6e0
0000e1c4(4): PXOR XMM0,XMM0
0000e1c8(12): MOV qword ptr [0xa0 + RSP],0x0
0000e1d4(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000e1dc(5): CMP R12,qword ptr [RSP + 0x40]
0000e1e1(6): JGE 0x0000e508
0000e1e7(7): MOV ECX,dword ptr [0xe0 + R15]
0000e1ee(2): TEST ECX,ECX
0000e1f0(6): JS 0x0000e508
0000e1f6(8): LEA RBX,[0x90 + RSP]
0000e1fe(8): LEA RAX,[0x8 + R12*0x8]
0000e206(4): MOV qword ptr [RSP],R12
0000e20a(9): MOV qword ptr [RSP + 0x20],0x0
0000e213(5): MOV qword ptr [RSP + 0x8],RBX
0000e218(8): LEA RBX,[0xb0 + RSP]
0000e220(5): MOV qword ptr [RSP + 0x10],RAX
0000e225(7): MOV RAX,qword ptr [0xb8 + R15]
0000e22c(5): MOV qword ptr [RSP + 0x18],RBX
0000e231(8): LEA RBX,[0x8c + RSP]
0000e239(5): MOV qword ptr [RSP + 0x58],RBX
0000e23e(5): MOV RCX,qword ptr [RSP + 0x10]
0000e243(12): MOV qword ptr [0x98 + RSP],0x0
0000e24f(4): MOV RSI,qword ptr [RAX + RCX*0x1]
0000e253(3): TEST RSI,RSI
0000e256(6): JZ 0x0000e618
0000e25c(5): MOV RDI,qword ptr [RSP + 0x8]
0000e261(4): ADD RSI,0x8
0000e265(5): CALL 0x00009bf0
0000e26a(2): TEST EAX,EAX
0000e26c(7): MOV dword ptr [0x88 + RSP],EAX
0000e273(6): JNZ 0x0000e650
0000e279(3): TEST RBP,RBP
0000e27c(6): JZ 0x0000e428
0000e282(5): CMP qword ptr [RBP + 0x28],0x0
0000e287(5): MOV RAX,qword ptr [RSP + 0x18]
0000e28c(4): PXOR XMM0,XMM0
0000e290(7): MOV R12,qword ptr [0x98 + R15]
0000e297(11): MOV dword ptr [0x8c + RSP],0x0
0000e2a2(8): MOV qword ptr [RAX + 0x10],0x0
0000e2aa(3): MOVAPS xmmword ptr [RAX],XMM0
0000e2ad(6): JLE 0x0000e7e0
0000e2b3(8): LEA RAX,[0xd8 + R12]
0000e2bb(2): XOR EBX,EBX
0000e2bd(5): MOV qword ptr [RSP + 0x28],RAX
0000e2c2(2): JMP 0x0000e309
0000e2c8(4): MOV RDX,qword ptr [RSP]
0000e2cc(3): MOV RDI,R15
0000e2cf(5): CALL 0x0000b5a0
0000e2d4(2): TEST AL,AL
0000e2d6(2): JZ 0x0000e2fb
0000e2d8(8): LEA R13,[R14*0x8]
0000e2e0(5): MOV RAX,qword ptr [R12 + 0x18]
0000e2e5(5): MOV RDI,qword ptr [RSP + 0x8]
0000e2ea(4): MOV RSI,qword ptr [RAX + R13*0x1]
0000e2ee(5): CALL 0x00008190
0000e2f3(2): TEST AL,AL
0000e2f5(6): JZ 0x0000e638
0000e2fb(4): ADD RBX,0x1
0000e2ff(4): CMP RBX,qword ptr [RBP + 0x28]
0000e303(6): JGE 0x0000e690
0000e309(4): MOV RAX,qword ptr [RBP + 0x30]
0000e30d(4): MOV RDI,qword ptr [R12]
0000e311(4): MOV R14,qword ptr [RAX + RBX*0x8]
0000e315(3): MOV R13,R14
0000e318(4): SHL R13,0x4
0000e31c(4): LEA RSI,[RDI + R13*0x1]
0000e320(4): TEST byte ptr [RSI + 0xa],0x10
0000e324(2): JZ 0x0000e2c8
0000e326(4): MOV R8,qword ptr [RSP]
0000e32a(5): MOV RSI,qword ptr [RSP + 0x28]
0000e32f(3): MOV RCX,R15
0000e332(3): MOV RDX,R14
0000e335(5): CALL 0x0000de80
0000e33a(3): CMP EAX,0x1
0000e33d(6): JLE 0x0000e600
0000e343(2): CDQE
0000e345(4): ADD RAX,qword ptr [RSP]
0000e349(5): MOV RDX,qword ptr [R12 + 0x18]
0000e34e(8): LEA R13,[R14*0x8]
0000e356(4): MOV RDX,qword ptr [RDX + R14*0x8]
0000e35a(3): MOV RCX,RAX
0000e35d(5): MOV qword ptr [RSP + 0x38],RAX
0000e362(8): LEA R14,[RAX*0x8]
0000e36a(7): MOV RAX,qword ptr [0xb8 + R15]
0000e371(4): MOV RSI,qword ptr [RAX + RCX*0x8]
0000e375(12): MOV qword ptr [0xb8 + RSP],0x0
0000e381(3): TEST RSI,RSI
0000e384(2): JZ 0x0000e3a9
0000e386(5): MOV RDI,qword ptr [RSP + 0x18]
0000e38b(4): ADD RSI,0x8
0000e38f(5): MOV qword ptr [RSP + 0x50],RDX
0000e394(5): CALL 0x00009bf0
0000e399(2): TEST EAX,EAX
0000e39b(7): MOV dword ptr [0x8c + RSP],EAX
0000e3a2(5): MOV RDX,qword ptr [RSP + 0x50]
0000e3a7(2): JNZ 0x0000e400
0000e3a9(5): MOV RDI,qword ptr [RSP + 0x18]
0000e3ae(3): MOV RSI,RDX
0000e3b1(5): CALL 0x00008190
0000e3b6(2): TEST AL,AL
0000e3b8(6): JZ 0x0000e638
0000e3be(7): ADD R14,qword ptr [0xb8 + R15]
0000e3c5(5): MOV RDX,qword ptr [RSP + 0x18]
0000e3ca(3): MOV RSI,R12
0000e3cd(5): MOV RDI,qword ptr [RSP + 0x58]
0000e3d2(5): CALL 0x0000ace0
0000e3d7(5): MOV RDX,qword ptr [RSP + 0x38]
0000e3dc(3): MOV qword ptr [R14],RAX
0000e3df(7): MOV RAX,qword ptr [0xb8 + R15]
0000e3e6(5): CMP qword ptr [RAX + RDX*0x8],0x0
0000e3eb(6): JNZ 0x0000e2e0
0000e3f1(7): MOV EDX,dword ptr [0x8c + RSP]
0000e3f8(2): TEST EDX,EDX
0000e3fa(6): JZ 0x0000e2e0
0000e400(8): MOV RDI,qword ptr [0xc0 + RSP]
0000e408(5): CALL 0x00001b00
0000e40d(7): MOV EAX,dword ptr [0x8c + RSP]
0000e414(2): TEST EAX,EAX
0000e416(7): MOV dword ptr [0x88 + RSP],EAX
0000e41d(6): JNZ 0x0000e650
0000e423(5): NOP dword ptr [RAX + RAX*0x1]
0000e428(4): MOV RAX,qword ptr [RSP]
0000e42c(9): CMP qword ptr [0x98 + RSP],0x0
0000e435(4): LEA RBX,[RAX + 0x1]
0000e439(3): MOV R12,RBX
0000e43c(2): JZ 0x0000e494
0000e43e(7): MOV ECX,dword ptr [0x110 + RSP]
0000e445(5): MOV RDX,qword ptr [RSP + 0x48]
0000e44a(5): MOV RSI,qword ptr [RSP + 0x8]
0000e44f(5): MOV RDI,qword ptr [RSP + 0x30]
0000e454(5): CALL 0x0000a080
0000e459(2): TEST EAX,EAX
0000e45b(7): MOV dword ptr [0x88 + RSP],EAX
0000e462(6): JNZ 0x0000e650
0000e468(8): MOV R8D,dword ptr [0x110 + RSP]
0000e470(5): MOV RCX,qword ptr [RSP + 0x48]
0000e475(3): MOV RDX,RBX
0000e478(5): MOV RSI,qword ptr [RSP + 0x8]
0000e47d(3): MOV RDI,R15
0000e480(5): CALL 0x0000afc0
0000e485(2): TEST EAX,EAX
0000e487(7): MOV dword ptr [0x88 + RSP],EAX
0000e48e(6): JNZ 0x0000e650
0000e494(7): MOV EDX,dword ptr [0xa0 + R15]
0000e49b(4): MOV RSI,qword ptr [RSP]
0000e49f(3): MOV RDI,R15
0000e4a2(5): CALL 0x0000b4b0
0000e4a7(5): MOV RDX,qword ptr [RSP + 0x8]
0000e4ac(5): MOV RSI,qword ptr [RSP + 0x30]
0000e4b1(8): LEA RDI,[0x88 + RSP]
0000e4b9(2): MOV ECX,EAX
0000e4bb(5): CALL 0x0000aa20
0000e4c0(3): TEST RAX,RAX
0000e4c3(3): MOV RBP,RAX
0000e4c6(6): JZ 0x0000e6b0
0000e4cc(7): MOV RAX,qword ptr [0xb8 + R15]
0000e4d3(5): MOV RDX,qword ptr [RSP + 0x10]
0000e4d8(9): MOV qword ptr [RSP + 0x20],0x0
0000e4e1(4): MOV qword ptr [RAX + RDX*0x1],RBP
0000e4e5(5): CMP qword ptr [RSP + 0x40],RBX
0000e4ea(2): JLE 0x0000e508
0000e4ec(7): MOVSXD RDX,dword ptr [0xe0 + R15]
0000e4f3(6): ADD qword ptr [RSP + 0x10],0x8
0000e4f9(5): CMP RDX,qword ptr [RSP + 0x20]
0000e4fe(4): MOV qword ptr [RSP],RBX
0000e502(6): JGE 0x0000e23e
0000e508(8): MOV RDI,qword ptr [0xa0 + RSP]
0000e510(5): CALL 0x00001b00
0000e515(7): MOV RAX,qword ptr [0xb8 + R15]
0000e51c(5): MOV RBX,qword ptr [RSP + 0x40]
0000e521(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000e525(3): TEST RAX,RAX
0000e528(6): JZ 0x0000e805
0000e52e(5): MOV RBX,qword ptr [RSP + 0x60]
0000e533(5): MOV RDX,qword ptr [RSP + 0x78]
0000e538(4): LEA RSI,[RAX + 0x18]
0000e53c(3): MOV qword ptr [RBX],R12
0000e53f(5): MOV RBX,qword ptr [RSP + 0x68]
0000e544(7): MOV qword ptr [0xb8 + R15],RBX
0000e54b(5): MOV RBX,qword ptr [RSP + 0x70]
0000e550(4): MOV qword ptr [R15 + 0x48],RBX
0000e554(4): MOV RDI,qword ptr [RAX + 0x10]
0000e558(5): CALL 0x000096d0
0000e55d(3): TEST RAX,RAX
0000e560(3): SETZ AL
0000e563(3): MOVZX EAX,AL
0000e566(5): JMP 0x0000e664
0000e570(4): LEA RSI,[RBP + -0x1]
0000e574(4): MOV qword ptr [R15 + 0x48],RBP
0000e578(3): MOV RDI,R15
0000e57b(5): CALL 0x0000b4b0
0000e580(3): MOV R13D,EAX
0000e583(5): MOV EDI,0x8
0000e588(12): MOV qword ptr [0x90 + RSP],0x1
0000e594(12): MOV qword ptr [0x98 + RSP],0x1
0000e5a0(5): CALL 0x00001da0
0000e5a5(3): TEST RAX,RAX
0000e5a8(8): MOV qword ptr [0xa0 + RSP],RAX
0000e5b0(6): JZ 0x0000e7fb
0000e5b6(3): MOV qword ptr [RAX],RBX
0000e5b9(7): MOV ECX,dword ptr [0x110 + RSP]
0000e5c0(8): LEA RBX,[0x90 + RSP]
0000e5c8(5): MOV RDX,qword ptr [RSP + 0x48]
0000e5cd(5): MOV RDI,qword ptr [RSP + 0x30]
0000e5d2(3): MOV R12,RBP
0000e5d5(3): MOV RSI,RBX
0000e5d8(11): MOV dword ptr [0x88 + RSP],0x0
0000e5e3(5): CALL 0x0000a080
0000e5e8(2): TEST EAX,EAX
0000e5ea(7): MOV dword ptr [0x88 + RSP],EAX
0000e5f1(6): JZ 0x0000e70d
0000e5f7(2): JMP 0x0000e650
0000e600(2): TEST EAX,EAX
0000e602(6): JNZ 0x0000e2d8
0000e608(4): MOV RSI,qword ptr [R12]
0000e60c(3): ADD RSI,R13
0000e60f(5): JMP 0x0000e2c8
0000e618(3): TEST RBP,RBP
0000e61b(6): JNZ 0x0000e282
0000e621(4): MOV RAX,qword ptr [RSP]
0000e625(4): LEA RBX,[RAX + 0x1]
0000e629(3): MOV R12,RBX
0000e62c(5): JMP 0x0000e494
0000e638(8): MOV RDI,qword ptr [0xc0 + RSP]
0000e640(5): CALL 0x00001b00
0000e645(11): MOV dword ptr [0x88 + RSP],0xc
0000e650(8): MOV RDI,qword ptr [0xa0 + RSP]
0000e658(5): CALL 0x00001b00
0000e65d(7): MOV EAX,dword ptr [0x88 + RSP]
0000e664(8): MOV RBX,qword ptr [0xc8 + RSP]
0000e66c(9): XOR RBX,qword ptr FS:[0x28]
0000e675(6): JNZ 0x0000e82c
0000e67b(7): ADD RSP,0xd8
0000e682(1): POP RBX
0000e683(1): POP RBP
0000e684(2): POP R12
0000e686(2): POP R13
0000e688(2): POP R14
0000e68a(2): POP R15
0000e68c(1): RET
0000e690(8): MOV RDI,qword ptr [0xc0 + RSP]
0000e698(5): CALL 0x00001b00
0000e69d(11): MOV dword ptr [0x88 + RSP],0x0
0000e6a8(5): JMP 0x0000e428
0000e6b0(7): MOV EAX,dword ptr [0x88 + RSP]
0000e6b7(2): TEST EAX,EAX
0000e6b9(2): JNZ 0x0000e650
0000e6bb(7): MOV RAX,qword ptr [0xb8 + R15]
0000e6c2(5): MOV RDX,qword ptr [RSP + 0x10]
0000e6c7(6): ADD qword ptr [RSP + 0x20],0x1
0000e6cd(8): MOV qword ptr [RAX + RDX*0x1],0x0
0000e6d5(5): JMP 0x0000e4e5
0000e6e0(8): LEA RBX,[0x90 + RSP]
0000e6e8(4): LEA RSI,[RBP + 0x8]
0000e6ec(3): MOV RDI,RBX
0000e6ef(5): CALL 0x0000a830
0000e6f4(2): TEST EAX,EAX
0000e6f6(7): MOV dword ptr [0x88 + RSP],EAX
0000e6fd(6): JNZ 0x0000e664
0000e703(4): TEST byte ptr [RBP + 0x68],0x40
0000e707(6): JZ 0x0000e1dc
0000e70d(9): CMP qword ptr [0x98 + RSP],0x0
0000e716(2): JZ 0x0000e742
0000e718(8): MOV R8D,dword ptr [0x110 + RSP]
0000e720(5): MOV RCX,qword ptr [RSP + 0x48]
0000e725(3): MOV RDX,R12
0000e728(3): MOV RSI,RBX
0000e72b(3): MOV RDI,R15
0000e72e(5): CALL 0x0000afc0
0000e733(2): TEST EAX,EAX
0000e735(7): MOV dword ptr [0x88 + RSP],EAX
0000e73c(6): JNZ 0x0000e650
0000e742(5): MOV RSI,qword ptr [RSP + 0x30]
0000e747(8): LEA RDI,[0x88 + RSP]
0000e74f(3): MOV ECX,R13D
0000e752(3): MOV RDX,RBX
0000e755(5): CALL 0x0000aa20
0000e75a(3): TEST RAX,RAX
0000e75d(3): MOV RBP,RAX
0000e760(6): JZ 0x0000e7e7
0000e766(7): MOV RAX,qword ptr [0xb8 + R15]
0000e76d(4): MOV qword ptr [RAX + R12*0x8],RBP
0000e771(5): JMP 0x0000e1dc
0000e776(4): LEA R12,[RAX + 0x1]
0000e77a(10): MOV RAX,0x7fffffffffffffff
0000e784(3): SUB RAX,R13
0000e787(3): CMP RAX,R12
0000e78a(2): JL 0x0000e7fb
0000e78c(5): LEA R14,[R13 + R12*0x1]
0000e791(10): MOV RAX,0x1fffffffffffffff
0000e79b(3): CMP R14,RAX
0000e79e(2): JA 0x0000e7fb
0000e7a0(5): MOV RAX,qword ptr [RSP + 0x60]
0000e7a5(8): LEA RSI,[R14*0x8]
0000e7ad(4): MOV RDI,qword ptr [RAX + 0x10]
0000e7b1(5): CALL 0x00001e00
0000e7b6(3): TEST RAX,RAX
0000e7b9(2): JZ 0x0000e7fb
0000e7bb(5): MOV RCX,qword ptr [RSP + 0x60]
0000e7c0(8): LEA RDX,[R12*0x8]
0000e7c8(4): LEA RDI,[RAX + R13*0x8]
0000e7cc(2): XOR ESI,ESI
0000e7ce(4): MOV qword ptr [RCX + 0x10],RAX
0000e7d2(4): MOV qword ptr [RCX + 0x8],R14
0000e7d6(5): CALL 0x00001cb0
0000e7db(5): JMP 0x0000e15c
0000e7e0(2): XOR EDI,EDI
0000e7e2(5): JMP 0x0000e698
0000e7e7(7): MOV ESI,dword ptr [0x88 + RSP]
0000e7ee(2): TEST ESI,ESI
0000e7f0(6): JZ 0x0000e766
0000e7f6(5): JMP 0x0000e650
0000e7fb(5): MOV EAX,0xc
0000e800(5): JMP 0x0000e664
0000e805(5): MOV RAX,qword ptr [RSP + 0x60]
0000e80a(3): MOV qword ptr [RAX],R12
0000e80d(5): MOV RAX,qword ptr [RSP + 0x68]
0000e812(7): MOV qword ptr [0xb8 + R15],RAX
0000e819(5): MOV RAX,qword ptr [RSP + 0x70]
0000e81e(4): MOV qword ptr [R15 + 0x48],RAX
0000e822(5): MOV EAX,0x1
0000e827(5): JMP 0x0000e664
0000e82c(5): CALL 0x00001c20
0000e831(5): NOP dword ptr [RAX + RAX*0x1]
0000e836(10): NOP word ptr CS:[RAX + RAX*0x1]
0000e840(1): PUSH RBP
0000e841(3): MOV RBP,RSP
0000e844(2): PUSH R15
0000e846(2): PUSH R14
0000e848(2): PUSH R13
0000e84a(2): PUSH R12
0000e84c(3): MOV R13,RCX
0000e84f(1): PUSH RBX
0000e850(3): MOV R12,RSI
0000e853(7): SUB RSP,0xb8
0000e85a(7): MOV qword ptr [-0x98 + RBP],RDX
0000e861(8): MOV qword ptr [RBP + -0x50],0x0
0000e869(9): MOV RAX,qword ptr FS:[0x28]
0000e872(4): MOV qword ptr [RBP + -0x38],RAX
0000e876(2): XOR EAX,EAX
0000e878(3): MOV RAX,qword ptr [RDI]
0000e87b(3): TEST R8B,R8B
0000e87e(8): MOV qword ptr [RBP + -0x48],0x2
0000e886(8): MOV qword ptr [RBP + -0x40],0x0
0000e88e(7): MOV qword ptr [-0x90 + RBP],RAX
0000e895(6): JZ 0x0000f03d
0000e89b(5): MOV EDI,0x60
0000e8a0(5): CALL 0x00001da0
0000e8a5(4): LEA RCX,[RBP + -0x50]
0000e8a9(3): TEST RAX,RAX
0000e8ac(4): MOV qword ptr [RBP + -0x40],RAX
0000e8b0(7): MOV qword ptr [-0x88 + RBP],RCX
0000e8b7(6): JZ 0x0000efdc
0000e8bd(7): MOV RAX,qword ptr [-0x90 + RBP]
0000e8c4(4): PXOR XMM0,XMM0
0000e8c8(8): MOV qword ptr [RBP + -0x60],0x0
0000e8d0(7): MOV RBX,qword ptr [0x90 + RAX]
0000e8d7(7): MOV RAX,qword ptr [-0x98 + RBP]
0000e8de(4): MOVAPS xmmword ptr [RBP + -0x70],XMM0
0000e8e2(4): SHL RAX,0x4
0000e8e6(6): CMP RAX,0xfbf
0000e8ec(7): MOV qword ptr [-0xb8 + RBP],RAX
0000e8f3(6): JA 0x0000efe6
0000e8f9(4): ADD RAX,0x10
0000e8fd(7): MOV byte ptr [-0xc9 + RBP],0x0
0000e904(3): SUB RSP,RAX
0000e907(5): LEA RAX,[RSP + 0xf]
0000e90c(4): AND RAX,-0x10
0000e910(7): MOV qword ptr [-0xc0 + RBP],RAX
0000e917(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000e91e(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000e925(3): MOV RSI,R13
0000e928(5): CALL 0x00001d70
0000e92d(4): LEA RAX,[RBP + -0x70]
0000e931(4): MOV RCX,qword ptr [R13]
0000e935(7): MOV qword ptr [-0xa8 + RBP],RAX
0000e93c(4): ADD RAX,0x10
0000e940(4): MOV qword ptr [RBP + -0x78],RCX
0000e944(7): MOV qword ptr [-0xc8 + RBP],RAX
0000e94b(4): LEA RAX,[RBP + -0x78]
0000e94f(7): MOV qword ptr [-0xb0 + RBP],RAX
0000e956(5): JMP 0x0000ea39
0000e960(3): CMP ESI,0x9
0000e963(6): JZ 0x0000eb50
0000e969(3): CMP RAX,RCX
0000e96c(2): JNZ 0x0000e97c
0000e96e(8): CMP qword ptr [0xb0 + R12],RBX
0000e976(6): JZ 0x0000ed50
0000e97c(8): MOV R14,qword ptr [0x98 + R12]
0000e984(3): MOV RDI,qword ptr [R14]
0000e987(4): LEA RSI,[RDI + R9*0x1]
0000e98b(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000e98f(2): TEST AL,0x8
0000e991(6): JNZ 0x0000eaa0
0000e997(4): TEST byte ptr [RSI + 0xa],0x10
0000e99b(6): JNZ 0x0000eba0
0000e9a1(2): CMP AL,0x4
0000e9a3(6): JZ 0x0000ebe0
0000e9a9(4): MOV RCX,qword ptr [RBP + -0x78]
0000e9ad(3): MOV RDX,RCX
0000e9b0(3): MOV RDI,R12
0000e9b3(7): MOV qword ptr [-0xa0 + RBP],RCX
0000e9ba(5): CALL 0x0000b5a0
0000e9bf(2): TEST AL,AL
0000e9c1(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000e9c8(6): JZ 0x0000ee18
0000e9ce(4): MOV RAX,qword ptr [R14 + 0x18]
0000e9d2(4): LEA RDX,[RCX + 0x1]
0000e9d6(4): MOV RBX,qword ptr [RAX + R15*0x8]
0000e9da(8): CMP qword ptr [-0x88 + RBP],0x0
0000e9e2(4): MOV qword ptr [RBP + -0x78],RDX
0000e9e6(2): JZ 0x0000ea24
0000e9e8(8): CMP RDX,qword ptr [0xa8 + R12]
0000e9f0(6): JG 0x0000ee26
0000e9f6(8): MOV RAX,qword ptr [0xb8 + R12]
0000e9fe(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000ea02(3): TEST RAX,RAX
0000ea05(6): JZ 0x0000ee26
0000ea0b(4): MOV RDI,qword ptr [RAX + 0x10]
0000ea0f(4): LEA RSI,[RAX + 0x18]
0000ea13(3): MOV RDX,RBX
0000ea16(5): CALL 0x000096d0
0000ea1b(3): TEST RAX,RAX
0000ea1e(6): JZ 0x0000ee26
0000ea24(8): MOV qword ptr [RBP + -0x68],0x0
0000ea2c(3): TEST RBX,RBX
0000ea2f(6): JS 0x0000ee0a
0000ea35(4): MOV RCX,qword ptr [RBP + -0x78]
0000ea39(4): MOV RAX,qword ptr [R13 + 0x8]
0000ea3d(3): CMP RAX,RCX
0000ea40(6): JL 0x0000ef30
0000ea46(7): MOV RDI,qword ptr [-0x90 + RBP]
0000ea4d(3): MOV R9,RBX
0000ea50(3): MOV R15,RBX
0000ea53(4): SHL R9,0x4
0000ea57(3): MOV RDX,qword ptr [RDI]
0000ea5a(3): ADD RDX,R9
0000ea5d(4): MOVZX ESI,byte ptr [RDX + 0x8]
0000ea61(3): CMP ESI,0x8
0000ea64(6): JNZ 0x0000e960
0000ea6a(3): MOV RDX,qword ptr [RDX]
0000ea6d(4): ADD RDX,0x1
0000ea71(7): CMP qword ptr [-0x98 + RBP],RDX
0000ea78(6): JLE 0x0000e969
0000ea7e(4): SHL RDX,0x4
0000ea82(3): ADD RDX,R13
0000ea85(8): MOV qword ptr [RDX + 0x8],-0x1
0000ea8d(3): MOV qword ptr [RDX],RCX
0000ea90(4): MOV RAX,qword ptr [R13 + 0x8]
0000ea94(5): JMP 0x0000e969
0000eaa0(8): MOV RAX,qword ptr [0xb8 + R12]
0000eaa8(4): MOV RDX,qword ptr [RBP + -0x78]
0000eaac(3): MOV RSI,RBX
0000eaaf(7): MOV RDI,qword ptr [-0xa8 + RBP]
0000eab6(4): MOV R9,qword ptr [RAX + RDX*0x8]
0000eaba(4): MOV RAX,qword ptr [R14 + 0x28]
0000eabe(4): LEA RDX,[RBX + RBX*0x2]
0000eac2(7): MOV qword ptr [-0xa0 + RBP],R9
0000eac9(4): LEA R15,[RAX + RDX*0x8]
0000eacd(5): CALL 0x00008190
0000ead2(2): TEST AL,AL
0000ead4(7): MOV R9,qword ptr [-0xa0 + RBP]
0000eadb(6): JZ 0x0000efb8
0000eae1(4): MOV R10,qword ptr [R15 + 0x8]
0000eae5(3): TEST R10,R10
0000eae8(6): JLE 0x0000ee18
0000eaee(4): MOV R15,qword ptr [R15 + 0x10]
0000eaf2(4): MOV R11,qword ptr [R9 + 0x10]
0000eaf6(4): LEA R14,[R9 + 0x18]
0000eafa(7): MOV RBX,-0x1
0000eb01(3): XOR R9D,R9D
0000eb04(7): MOV qword ptr [-0xa0 + RBP],R12
0000eb0b(5): NOP dword ptr [RAX + RAX*0x1]
0000eb10(4): MOV R12,qword ptr [R15 + R9*0x8]
0000eb14(3): MOV RSI,R14
0000eb17(3): MOV RDI,R11
0000eb1a(3): MOV RDX,R12
0000eb1d(5): CALL 0x000096d0
0000eb22(3): TEST RAX,RAX
0000eb25(2): JZ 0x0000eb34
0000eb27(4): CMP RBX,-0x1
0000eb2b(6): JNZ 0x0000ec80
0000eb31(3): MOV RBX,R12
0000eb34(4): ADD R9,0x1
0000eb38(3): CMP R10,R9
0000eb3b(2): JNZ 0x0000eb10
0000eb3d(7): MOV R12,qword ptr [-0xa0 + RBP]
0000eb44(5): JMP 0x0000ea2c
0000eb50(3): MOV RDI,qword ptr [RDX]
0000eb53(4): LEA RSI,[RDI + 0x1]
0000eb57(7): CMP qword ptr [-0x98 + RBP],RSI
0000eb5e(6): JLE 0x0000e969
0000eb64(4): SHL RSI,0x4
0000eb68(5): LEA RAX,[R13 + RSI*0x1]
0000eb6d(3): CMP qword ptr [RAX],RCX
0000eb70(6): JL 0x0000eef0
0000eb76(4): TEST byte ptr [RDX + 0xa],0x8
0000eb7a(2): JZ 0x0000eb8e
0000eb7c(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000eb83(5): CMP qword ptr [RDI + RSI*0x1],-0x1
0000eb88(6): JNZ 0x0000ef7b
0000eb8e(4): MOV qword ptr [RAX + 0x8],RCX
0000eb92(4): MOV RAX,qword ptr [R13 + 0x8]
0000eb96(5): JMP 0x0000e969
0000eba0(4): MOV R8,qword ptr [RBP + -0x78]
0000eba4(7): LEA RSI,[0xd8 + R14]
0000ebab(3): MOV RCX,R12
0000ebae(3): MOV RDX,RBX
0000ebb1(7): MOV qword ptr [-0xa0 + RBP],R9
0000ebb8(5): CALL 0x0000de80
0000ebbd(3): MOVSXD RCX,EAX
0000ebc0(3): TEST RCX,RCX
0000ebc3(6): JNZ 0x0000edc1
0000ebc9(7): MOV R9,qword ptr [-0xa0 + RBP]
0000ebd0(3): MOV RSI,qword ptr [R14]
0000ebd3(4): MOV RCX,qword ptr [RBP + -0x78]
0000ebd7(3): ADD RSI,R9
0000ebda(5): JMP 0x0000e9ad
0000ebe0(3): MOV RAX,qword ptr [RSI]
0000ebe3(4): ADD RAX,0x1
0000ebe7(4): SHL RAX,0x4
0000ebeb(3): ADD RAX,R13
0000ebee(4): MOV RDX,qword ptr [RAX + 0x8]
0000ebf2(3): MOV RDI,qword ptr [RAX]
0000ebf5(3): MOV RCX,RDX
0000ebf8(3): SUB RCX,RDI
0000ebfb(8): CMP qword ptr [-0x88 + RBP],0x0
0000ec03(6): JZ 0x0000edb8
0000ec09(4): CMP RDI,-0x1
0000ec0d(6): JZ 0x0000ee26
0000ec13(4): CMP RDX,-0x1
0000ec17(6): JZ 0x0000ee26
0000ec1d(3): TEST RCX,RCX
0000ec20(6): JZ 0x0000ee70
0000ec26(4): MOV R15,qword ptr [RBP + -0x78]
0000ec2a(5): MOV RDX,qword ptr [R12 + 0x30]
0000ec2f(5): MOV RAX,qword ptr [R12 + 0x8]
0000ec34(3): SUB RDX,R15
0000ec37(3): CMP RCX,RDX
0000ec3a(6): JG 0x0000ee26
0000ec40(4): LEA RSI,[RAX + R15*0x1]
0000ec44(3): ADD RDI,RAX
0000ec47(3): MOV RDX,RCX
0000ec4a(7): MOV qword ptr [-0xa0 + RBP],RCX
0000ec51(5): CALL 0x00001d00
0000ec56(2): TEST EAX,EAX
0000ec58(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000ec5f(6): JNZ 0x0000ee26
0000ec65(4): MOV RAX,qword ptr [R14 + 0x18]
0000ec69(4): LEA RDX,[R15 + RCX*0x1]
0000ec6d(4): MOV RBX,qword ptr [RAX + RBX*0x8]
0000ec71(5): JMP 0x0000e9da
0000ec80(7): MOV RSI,qword ptr [-0xc8 + RBP]
0000ec87(4): MOV RDI,qword ptr [RBP + -0x68]
0000ec8b(3): MOV RDX,RBX
0000ec8e(3): MOV R14,R12
0000ec91(7): MOV R12,qword ptr [-0xa0 + RBP]
0000ec98(5): CALL 0x000096d0
0000ec9d(3): TEST RAX,RAX
0000eca0(6): JNZ 0x0000ee60
0000eca6(7): MOV RCX,qword ptr [-0x88 + RBP]
0000ecad(3): TEST RCX,RCX
0000ecb0(6): JZ 0x0000ea2c
0000ecb6(3): MOV R15,qword ptr [RCX]
0000ecb9(4): MOV RDX,qword ptr [RBP + -0x78]
0000ecbd(4): LEA RAX,[R15 + 0x1]
0000ecc1(4): CMP RAX,qword ptr [RCX + 0x8]
0000ecc5(3): MOV qword ptr [RCX],RAX
0000ecc8(6): JZ 0x0000f04d
0000ecce(4): MOV RAX,qword ptr [RCX + 0x10]
0000ecd2(4): LEA R15,[R15 + R15*0x2]
0000ecd6(4): SHL R15,0x4
0000ecda(3): ADD R15,RAX
0000ecdd(4): MOV qword ptr [R15 + 0x8],R14
0000ece1(7): MOV R14,qword ptr [-0xb8 + RBP]
0000ece8(3): MOV qword ptr [R15],RDX
0000eceb(3): MOV RDI,R14
0000ecee(5): CALL 0x00001da0
0000ecf3(3): TEST RAX,RAX
0000ecf6(4): MOV qword ptr [R15 + 0x10],RAX
0000ecfa(2): JZ 0x0000ed22
0000ecfc(3): MOV RDX,R14
0000ecff(3): MOV RSI,R13
0000ed02(3): MOV RDI,RAX
0000ed05(5): CALL 0x00001d70
0000ed0a(7): MOV RSI,qword ptr [-0xa8 + RBP]
0000ed11(4): LEA RDI,[R15 + 0x18]
0000ed15(5): CALL 0x0000a830
0000ed1a(2): TEST EAX,EAX
0000ed1c(6): JZ 0x0000ea2c
0000ed22(4): MOV RDI,qword ptr [RBP + -0x60]
0000ed26(5): CALL 0x00001b00
0000ed2b(7): CMP byte ptr [-0xc9 + RBP],0x0
0000ed32(6): JNZ 0x0000f0cb
0000ed38(7): MOV RDI,qword ptr [-0x88 + RBP]
0000ed3f(5): CALL 0x0000cd90
0000ed44(5): MOV EAX,0xc
0000ed49(5): JMP 0x0000ef59
0000ed50(8): CMP qword ptr [-0x88 + RBP],0x0
0000ed58(6): JZ 0x0000f08c
0000ed5e(7): MOV RCX,qword ptr [-0x98 + RBP]
0000ed65(3): TEST RCX,RCX
0000ed68(2): JZ 0x0000ed8a
0000ed6a(3): MOV RAX,R13
0000ed6d(2): XOR EDX,EDX
0000ed6f(1): NOP
0000ed70(4): CMP qword ptr [RAX],0x0
0000ed74(2): JS 0x0000ed7d
0000ed76(5): CMP qword ptr [RAX + 0x8],-0x1
0000ed7b(2): JZ 0x0000edd0
0000ed7d(4): ADD RDX,0x1
0000ed81(4): ADD RAX,0x10
0000ed85(3): CMP RCX,RDX
0000ed88(2): JNZ 0x0000ed70
0000ed8a(4): MOV RDI,qword ptr [RBP + -0x60]
0000ed8e(5): CALL 0x00001b00
0000ed93(7): CMP byte ptr [-0xc9 + RBP],0x0
0000ed9a(6): JNZ 0x0000f114
0000eda0(7): MOV RDI,qword ptr [-0x88 + RBP]
0000eda7(5): CALL 0x0000cd90
0000edac(2): XOR EAX,EAX
0000edae(5): JMP 0x0000ef59
0000edb8(3): TEST RCX,RCX
0000edbb(6): JZ 0x0000ee70
0000edc1(4): MOV R15,qword ptr [RBP + -0x78]
0000edc5(5): JMP 0x0000ec65
0000edd0(7): MOV RDI,qword ptr [-0x88 + RBP]
0000edd7(7): MOV R9,qword ptr [-0xa8 + RBP]
0000edde(3): MOV R8,R13
0000ede1(7): MOV RCX,qword ptr [-0x98 + RBP]
0000ede8(7): MOV RDX,qword ptr [-0xb0 + RBP]
0000edef(4): LEA RSI,[RDI + 0x10]
0000edf3(5): CALL 0x0000cde0
0000edf8(3): MOV R9,RAX
0000edfb(3): MOV RBX,RAX
0000edfe(3): MOV R15,RAX
0000ee01(4): SHL R9,0x4
0000ee05(5): JMP 0x0000e97c
0000ee0a(4): CMP RBX,-0x2
0000ee0e(6): JZ 0x0000efb8
0000ee14(4): NOP dword ptr [RAX]
0000ee18(8): CMP qword ptr [-0x88 + RBP],0x0
0000ee20(6): JZ 0x0000f0dc
0000ee26(7): MOV RDI,qword ptr [-0x88 + RBP]
0000ee2d(7): MOV RCX,qword ptr [-0x98 + RBP]
0000ee34(4): LEA RDX,[RBP + -0x78]
0000ee38(7): MOV R9,qword ptr [-0xa8 + RBP]
0000ee3f(3): MOV R8,R13
0000ee42(4): LEA RSI,[RDI + 0x10]
0000ee46(5): CALL 0x0000cde0
0000ee4b(4): MOV RCX,qword ptr [RBP + -0x78]
0000ee4f(3): MOV RBX,RAX
0000ee52(5): JMP 0x0000e94b
0000ee60(3): MOV RBX,R14
0000ee63(5): JMP 0x0000ea2c
0000ee70(7): MOV RDI,qword ptr [-0xa8 + RBP]
0000ee77(3): MOV RSI,RBX
0000ee7a(7): MOV qword ptr [-0xa0 + RBP],R9
0000ee81(5): CALL 0x00008190
0000ee86(2): TEST AL,AL
0000ee88(6): JZ 0x0000efb8
0000ee8e(4): MOV RDX,qword ptr [R14 + 0x28]
0000ee92(4): LEA RAX,[RBX + RBX*0x2]
0000ee96(4): MOV RCX,qword ptr [RBP + -0x78]
0000ee9a(4): LEA RAX,[RDX + RAX*0x8]
0000ee9e(7): MOV qword ptr [-0xd8 + RBP],RCX
0000eea5(4): MOV RAX,qword ptr [RAX + 0x10]
0000eea9(3): MOV RBX,qword ptr [RAX]
0000eeac(8): MOV RAX,qword ptr [0xb8 + R12]
0000eeb4(4): MOV RAX,qword ptr [RAX + RCX*0x8]
0000eeb8(3): MOV RDX,RBX
0000eebb(4): MOV RDI,qword ptr [RAX + 0x10]
0000eebf(4): LEA RSI,[RAX + 0x18]
0000eec3(5): CALL 0x000096d0
0000eec8(3): TEST RAX,RAX
0000eecb(6): JNZ 0x0000ea2c
0000eed1(7): MOV R9,qword ptr [-0xa0 + RBP]
0000eed8(3): MOV RSI,qword ptr [R14]
0000eedb(7): MOV RCX,qword ptr [-0xd8 + RBP]
0000eee2(3): ADD RSI,R9
0000eee5(5): JMP 0x0000e9ad
0000eef0(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000eef7(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000eefe(3): MOV RSI,R13
0000ef01(4): MOV qword ptr [RAX + 0x8],RCX
0000ef05(7): MOV qword ptr [-0xd8 + RBP],R9
0000ef0c(7): MOV qword ptr [-0xa0 + RBP],RCX
0000ef13(5): CALL 0x00001d70
0000ef18(4): MOV RAX,qword ptr [R13 + 0x8]
0000ef1c(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000ef23(7): MOV R9,qword ptr [-0xd8 + RBP]
0000ef2a(5): JMP 0x0000e969
0000ef30(4): MOV RDI,qword ptr [RBP + -0x60]
0000ef34(5): CALL 0x00001b00
0000ef39(7): CMP byte ptr [-0xc9 + RBP],0x0
0000ef40(6): JNZ 0x0000f01c
0000ef46(7): MOV RDI,qword ptr [-0x88 + RBP]
0000ef4d(3): TEST RDI,RDI
0000ef50(2): JZ 0x0000ef57
0000ef52(5): CALL 0x0000cd90
0000ef57(2): XOR EAX,EAX
0000ef59(4): MOV RBX,qword ptr [RBP + -0x38]
0000ef5d(9): XOR RBX,qword ptr FS:[0x28]
0000ef66(6): JNZ 0x0000f125
0000ef6c(4): LEA RSP,[RBP + -0x28]
0000ef70(1): POP RBX
0000ef71(2): POP R12
0000ef73(2): POP R13
0000ef75(2): POP R14
0000ef77(2): POP R15
0000ef79(1): POP RBP
0000ef7a(1): RET
0000ef7b(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000ef82(3): MOV RSI,RDI
0000ef85(3): MOV RDI,R13
0000ef88(7): MOV qword ptr [-0xd8 + RBP],RCX
0000ef8f(7): MOV qword ptr [-0xa0 + RBP],R9
0000ef96(5): CALL 0x00001d70
0000ef9b(4): MOV RAX,qword ptr [R13 + 0x8]
0000ef9f(7): MOV R9,qword ptr [-0xa0 + RBP]
0000efa6(7): MOV RCX,qword ptr [-0xd8 + RBP]
0000efad(5): JMP 0x0000e969
0000efb8(4): MOV RDI,qword ptr [RBP + -0x60]
0000efbc(5): CALL 0x00001b00
0000efc1(7): CMP byte ptr [-0xc9 + RBP],0x0
0000efc8(6): JNZ 0x0000f0cb
0000efce(8): CMP qword ptr [-0x88 + RBP],0x0
0000efd6(6): JNZ 0x0000ed38
0000efdc(5): MOV EAX,0xc
0000efe1(5): JMP 0x0000ef59
0000efe6(7): MOV RDI,qword ptr [-0xb8 + RBP]
0000efed(5): CALL 0x00001da0
0000eff2(3): TEST RAX,RAX
0000eff5(7): MOV qword ptr [-0xc0 + RBP],RAX
0000effc(7): MOV byte ptr [-0xc9 + RBP],0x1
0000f003(6): JNZ 0x0000e917
0000f009(7): MOV RDI,qword ptr [-0x88 + RBP]
0000f010(3): TEST RDI,RDI
0000f013(2): JZ 0x0000efdc
0000f015(5): CALL 0x0000cd90
0000f01a(2): JMP 0x0000efdc
0000f01c(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000f023(5): CALL 0x00001b00
0000f028(7): MOV RDI,qword ptr [-0x88 + RBP]
0000f02f(3): TEST RDI,RDI
0000f032(6): JNZ 0x0000ef52
0000f038(5): JMP 0x0000ef57
0000f03d(11): MOV qword ptr [-0x88 + RBP],0x0
0000f048(5): JMP 0x0000e8bd
0000f04d(4): LEA RSI,[RAX + RAX*0x2]
0000f051(7): MOV RAX,qword ptr [-0x88 + RBP]
0000f058(7): MOV qword ptr [-0xa0 + RBP],RDX
0000f05f(4): SHL RSI,0x5
0000f063(4): MOV RDI,qword ptr [RAX + 0x10]
0000f067(5): CALL 0x00001e00
0000f06c(3): TEST RAX,RAX
0000f06f(2): JZ 0x0000f0b5
0000f071(7): MOV RCX,qword ptr [-0x88 + RBP]
0000f078(7): MOV RDX,qword ptr [-0xa0 + RBP]
0000f07f(4): SHL qword ptr [RCX + 0x8],1
0000f083(4): MOV qword ptr [RCX + 0x10],RAX
0000f087(5): JMP 0x0000ecd2
0000f08c(4): MOV RDI,qword ptr [RBP + -0x60]
0000f090(5): CALL 0x00001b00
0000f095(7): CMP byte ptr [-0xc9 + RBP],0x0
0000f09c(6): JZ 0x0000ef57
0000f0a2(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000f0a9(5): CALL 0x00001b00
0000f0ae(2): XOR EAX,EAX
0000f0b0(5): JMP 0x0000ef59
0000f0b5(4): MOV RDI,qword ptr [RBP + -0x60]
0000f0b9(5): CALL 0x00001b00
0000f0be(7): CMP byte ptr [-0xc9 + RBP],0x0
0000f0c5(6): JZ 0x0000ed38
0000f0cb(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000f0d2(5): CALL 0x00001b00
0000f0d7(5): JMP 0x0000efce
0000f0dc(4): MOV RDI,qword ptr [RBP + -0x60]
0000f0e0(5): CALL 0x00001b00
0000f0e5(7): CMP byte ptr [-0xc9 + RBP],0x0
0000f0ec(5): MOV EAX,0x1
0000f0f1(6): JZ 0x0000ef59
0000f0f7(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000f0fe(6): MOV dword ptr [-0x88 + RBP],EAX
0000f104(5): CALL 0x00001b00
0000f109(6): MOV EAX,dword ptr [-0x88 + RBP]
0000f10f(5): JMP 0x0000ef59
0000f114(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000f11b(5): CALL 0x00001b00
0000f120(5): JMP 0x0000eda0
0000f125(5): CALL 0x00001c20
0000f12a(6): NOP word ptr [RAX + RAX*0x1]
0000f130(2): PUSH R15
0000f132(2): PUSH R14
0000f134(3): MOV R14,RCX
0000f137(2): PUSH R13
0000f139(2): PUSH R12
0000f13b(3): MOV R13,RSI
0000f13e(1): PUSH RBP
0000f13f(1): PUSH RBX
0000f140(4): LEA RSI,[RDX + 0x10]
0000f144(3): MOV RBP,RDX
0000f147(3): MOV R9,R8
0000f14a(3): MOV R12,R8
0000f14d(4): SUB RSP,0x20
0000f151(4): MOV RCX,qword ptr [RDX + 0x8]
0000f155(3): MOV R8,R14
0000f158(2): PUSH 0x8
0000f15a(3): MOV RDX,qword ptr [RDX]
0000f15d(3): MOV RBX,RDI
0000f160(5): CALL 0x0000e0e0
0000f165(2): TEST EAX,EAX
0000f167(1): POP RDX
0000f168(1): POP RCX
0000f169(2): JZ 0x0000f180
0000f16b(4): ADD RSP,0x18
0000f16f(1): POP RBX
0000f170(1): POP RBP
0000f171(2): POP R12
0000f173(2): POP R13
0000f175(2): POP R14
0000f177(2): POP R15
0000f179(1): RET
0000f180(7): MOV RAX,qword ptr [0xc8 + RBX]
0000f187(7): MOV RDX,qword ptr [0xd0 + RBX]
0000f18e(4): MOV R15,qword ptr [RBP + 0x8]
0000f192(4): MOV RCX,qword ptr [R13]
0000f196(7): MOV RDI,qword ptr [0xd8 + RBX]
0000f19d(3): CMP RAX,RDX
0000f1a0(3): MOV RSI,R15
0000f1a3(6): JGE 0x0000f240
0000f1a9(4): LEA RDX,[RAX + RAX*0x4]
0000f1ad(4): SHL RDX,0x3
0000f1b1(3): TEST RAX,RAX
0000f1b4(2): JLE 0x0000f1c1
0000f1b6(5): LEA R8,[RDI + RDX*0x1 + -0x28]
0000f1bb(4): CMP R12,qword ptr [R8 + 0x8]
0000f1bf(2): JZ 0x0000f230
0000f1c1(3): ADD RDI,RDX
0000f1c4(2): XOR EDX,EDX
0000f1c6(3): CMP R15,RCX
0000f1c9(3): SETZ DL
0000f1cc(4): ADD RAX,0x1
0000f1d0(3): MOV qword ptr [RDI],R14
0000f1d3(2): NEG EDX
0000f1d5(4): MOV qword ptr [RDI + 0x8],R12
0000f1d9(4): MOV qword ptr [RDI + 0x10],RCX
0000f1dd(4): MOV word ptr [RDI + 0x22],DX
0000f1e1(4): MOV qword ptr [RDI + 0x18],R15
0000f1e5(7): MOV qword ptr [0xc8 + RBX],RAX
0000f1ec(4): MOV byte ptr [RDI + 0x20],0x0
0000f1f0(3): MOV RAX,R15
0000f1f3(7): MOVSXD RDX,dword ptr [0xe0 + RBX]
0000f1fa(3): SUB RAX,RCX
0000f1fd(3): CMP RDX,RAX
0000f200(2): JGE 0x0000f20c
0000f202(3): SUB R15D,ECX
0000f205(7): MOV dword ptr [0xe0 + RBX],R15D
0000f20c(3): ADD RSI,R12
0000f20f(4): SUB RSI,qword ptr [R13]
0000f213(4): ADD RSP,0x18
0000f217(3): MOV RDI,RBX
0000f21a(1): POP RBX
0000f21b(1): POP RBP
0000f21c(2): POP R12
0000f21e(2): POP R13
0000f220(2): POP R14
0000f222(2): POP R15
0000f224(5): JMP 0x00008d60
0000f230(5): MOV byte ptr [R8 + 0x20],0x1
0000f235(2): JMP 0x0000f1c1
0000f240(4): LEA RSI,[RDX + RDX*0x4]
0000f244(5): MOV qword ptr [RSP + 0x8],RCX
0000f249(4): SHL RSI,0x4
0000f24d(5): CALL 0x00001e00
0000f252(3): TEST RAX,RAX
0000f255(5): MOV RCX,qword ptr [RSP + 0x8]
0000f25a(2): JZ 0x0000f2b0
0000f25c(7): MOV RSI,qword ptr [0xc8 + RBX]
0000f263(7): MOV RDX,qword ptr [0xd0 + RBX]
0000f26a(7): MOV qword ptr [0xd8 + RBX],RAX
0000f271(5): MOV qword ptr [RSP + 0x8],RCX
0000f276(4): LEA RSI,[RSI + RSI*0x4]
0000f27a(4): LEA RDX,[RDX + RDX*0x4]
0000f27e(4): LEA RDI,[RAX + RSI*0x8]
0000f282(4): SHL RDX,0x3
0000f286(2): XOR ESI,ESI
0000f288(5): CALL 0x00001cb0
0000f28d(7): SHL qword ptr [0xd0 + RBX],1
0000f294(7): MOV RAX,qword ptr [0xc8 + RBX]
0000f29b(7): MOV RDI,qword ptr [0xd8 + RBX]
0000f2a2(4): MOV RSI,qword ptr [RBP + 0x8]
0000f2a6(5): MOV RCX,qword ptr [RSP + 0x8]
0000f2ab(5): JMP 0x0000f1a9
0000f2b0(7): MOV RDI,qword ptr [0xd8 + RBX]
0000f2b7(5): CALL 0x00001b00
0000f2bc(5): MOV EAX,0xc
0000f2c1(5): JMP 0x0000f16b
0000f2d0(2): PUSH R15
0000f2d2(2): PUSH R14
0000f2d4(2): PUSH R13
0000f2d6(2): PUSH R12
0000f2d8(1): PUSH RBP
0000f2d9(1): PUSH RBX
0000f2da(7): SUB RSP,0xb8
0000f2e1(4): MOV R15,qword ptr [RDI + 0x48]
0000f2e5(9): MOV RAX,qword ptr FS:[0x28]
0000f2ee(8): MOV qword ptr [0xa8 + RSP],RAX
0000f2f6(2): XOR EAX,EAX
0000f2f8(4): CMP qword ptr [RSI],0x0
0000f2fc(7): MOV RAX,qword ptr [0x98 + RDI]
0000f303(5): MOV qword ptr [RSP + 0x48],RSI
0000f308(5): MOV qword ptr [RSP + 0x40],RDX
0000f30d(5): MOV qword ptr [RSP + 0x38],RAX
0000f312(6): JLE 0x0000f640
0000f318(8): LEA RAX,[R15*0x8]
0000f320(3): MOV R14,RDI
0000f323(8): MOV qword ptr [RSP],0x0
0000f32b(5): MOV qword ptr [RSP + 0x8],R15
0000f330(5): MOV qword ptr [RSP + 0x60],RAX
0000f335(8): LEA RAX,[0x90 + RSP]
0000f33d(5): MOV qword ptr [RSP + 0x68],RAX
0000f342(8): LEA RAX,[0x8c + RSP]
0000f34a(5): MOV qword ptr [RSP + 0x78],RAX
0000f34f(2): JMP 0x0000f397
0000f358(2): TEST AL,0x1
0000f35a(2): JZ 0x0000f380
0000f35c(3): AND EDX,0x8
0000f35f(2): JNZ 0x0000f380
0000f361(3): TEST CL,0x20
0000f364(2): JZ 0x0000f36a
0000f366(2): TEST AL,0x2
0000f368(2): JZ 0x0000f380
0000f36a(6): AND ECX,0x80
0000f370(6): JZ 0x0000f410
0000f376(2): TEST AL,0x8
0000f378(6): JNZ 0x0000f410
0000f37e(2): NOP
0000f380(5): MOV RDI,qword ptr [RSP + 0x48]
0000f385(5): ADD qword ptr [RSP],0x1
0000f38a(4): MOV RAX,qword ptr [RSP]
0000f38e(3): CMP RAX,qword ptr [RDI]
0000f391(6): JGE 0x0000f640
0000f397(5): MOV RAX,qword ptr [RSP + 0x40]
0000f39c(4): MOV RDI,qword ptr [RSP]
0000f3a0(3): MOV RAX,qword ptr [RAX]
0000f3a3(4): MOV R13,qword ptr [RAX + RDI*0x8]
0000f3a7(5): MOV RDI,qword ptr [RSP + 0x38]
0000f3ac(3): MOV RAX,qword ptr [RDI]
0000f3af(3): MOV RBX,R13
0000f3b2(4): SHL RBX,0x4
0000f3b6(3): ADD RAX,RBX
0000f3b9(4): CMP byte ptr [RAX + 0x8],0x4
0000f3bd(2): JNZ 0x0000f380
0000f3bf(3): MOV EBP,dword ptr [RAX + 0x8]
0000f3c2(6): TEST EBP,0x3ff00
0000f3c8(2): JZ 0x0000f410
0000f3ca(7): MOV EDX,dword ptr [0xa0 + R14]
0000f3d1(5): MOV RSI,qword ptr [RSP + 0x8]
0000f3d6(3): MOV RDI,R14
0000f3d9(5): CALL 0x0000b4b0
0000f3de(2): MOV EDX,EBP
0000f3e0(3): SHR EDX,0x8
0000f3e3(2): MOV ECX,EDX
0000f3e5(5): AND CX,0x3ff
0000f3ea(3): TEST DL,0x4
0000f3ed(6): JNZ 0x0000f358
0000f3f3(3): AND EDX,0x8
0000f3f6(6): JZ 0x0000f361
0000f3fc(2): TEST AL,0x1
0000f3fe(6): JZ 0x0000f361
0000f404(5): JMP 0x0000f380
0000f410(7): MOV RDI,qword ptr [0xc8 + R14]
0000f417(7): MOV RAX,qword ptr [0x98 + R14]
0000f41e(2): XOR ECX,ECX
0000f420(4): MOV R10,qword ptr [R14 + 0x8]
0000f424(5): MOV R9,qword ptr [RSP + 0x8]
0000f429(5): MOV qword ptr [RSP + 0x70],RDI
0000f42e(5): MOV qword ptr [RSP + 0x50],RAX
0000f433(3): CMP RCX,RDI
0000f436(2): JGE 0x0000f48b
0000f438(4): LEA RAX,[RCX + RDI*0x1]
0000f43c(7): MOV R11,qword ptr [0xd8 + R14]
0000f443(3): MOV RSI,RAX
0000f446(4): SHR RSI,0x3f
0000f44a(3): ADD RSI,RAX
0000f44d(3): SAR RSI,1
0000f450(4): LEA RAX,[RSI + RSI*0x4]
0000f454(5): CMP R9,qword ptr [R11 + RAX*0x8 + 0x8]
0000f459(2): JLE 0x0000f486
0000f45b(5): JMP 0x0000f628
0000f460(4): LEA RDX,[RSI + RCX*0x1]
0000f464(3): MOV RAX,RDX
0000f467(4): SHR RAX,0x3f
0000f46b(3): ADD RAX,RDX
0000f46e(3): SAR RAX,1
0000f471(4): LEA RDX,[RAX + RAX*0x4]
0000f475(3): MOV R8,RAX
0000f478(5): CMP R9,qword ptr [R11 + RDX*0x8 + 0x8]
0000f47d(6): JG 0x0000f630
0000f483(3): MOV RSI,RAX
0000f486(3): CMP RSI,RCX
0000f489(2): JG 0x0000f460
0000f48b(5): CMP qword ptr [RSP + 0x70],RCX
0000f490(2): JLE 0x0000f4b6
0000f492(7): MOV RDX,qword ptr [0xd8 + R14]
0000f499(4): LEA RAX,[RCX + RCX*0x4]
0000f49d(5): MOV RDI,qword ptr [RSP + 0x8]
0000f4a2(4): LEA RAX,[RDX + RAX*0x8]
0000f4a6(4): CMP qword ptr [RAX + 0x8],RDI
0000f4aa(2): JNZ 0x0000f4b6
0000f4ac(4): CMP RCX,-0x1
0000f4b0(6): JNZ 0x0000f686
0000f4b6(5): MOV RAX,qword ptr [RSP + 0x50]
0000f4bb(8): CMP qword ptr [0xe8 + R14],0x0
0000f4c3(3): MOV RDX,qword ptr [RAX]
0000f4c6(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000f4ca(5): MOV qword ptr [RSP + 0x58],RAX
0000f4cf(6): JLE 0x0000f68b
0000f4d5(5): MOV qword ptr [RSP + 0x30],R13
0000f4da(9): MOV qword ptr [RSP + 0x28],0x0
0000f4e3(3): MOV R13,R10
0000f4e6(7): MOV RAX,qword ptr [0xf8 + R14]
0000f4ed(5): MOV RBX,qword ptr [RSP + 0x28]
0000f4f2(5): MOV RDI,qword ptr [RSP + 0x58]
0000f4f7(4): MOV RBX,qword ptr [RAX + RBX*0x8]
0000f4fb(4): MOV RAX,qword ptr [RBX + 0x8]
0000f4ff(4): SHL RAX,0x4
0000f503(4): CMP RDI,qword ptr [RDX + RAX*0x1]
0000f507(2): JZ 0x0000f530
0000f509(6): ADD qword ptr [RSP + 0x28],0x1
0000f50f(5): MOV RAX,qword ptr [RSP + 0x28]
0000f514(7): CMP RAX,qword ptr [0xe8 + R14]
0000f51b(6): JGE 0x0000fb91
0000f521(5): MOV RAX,qword ptr [RSP + 0x50]
0000f526(3): MOV RDX,qword ptr [RAX]
0000f529(2): JMP 0x0000f4e6
0000f530(5): CMP qword ptr [RBX + 0x20],0x0
0000f535(3): MOV R11,qword ptr [RBX]
0000f538(6): JLE 0x0000fba2
0000f53e(5): MOV RCX,qword ptr [RSP + 0x8]
0000f543(3): MOV R8,R13
0000f546(2): XOR EBP,EBP
0000f548(3): MOV R13,RBX
0000f54b(3): MOV RBX,RCX
0000f54e(2): JMP 0x0000f5bc
0000f550(4): LEA RSI,[R8 + R11*0x1]
0000f554(4): LEA RDI,[R8 + RBX*0x1]
0000f558(5): MOV qword ptr [RSP + 0x20],R9
0000f55d(5): MOV qword ptr [RSP + 0x18],R11
0000f562(5): MOV qword ptr [RSP + 0x10],R8
0000f567(5): CALL 0x00001d00
0000f56c(2): TEST EAX,EAX
0000f56e(5): MOV R8,qword ptr [RSP + 0x10]
0000f573(5): MOV R11,qword ptr [RSP + 0x18]
0000f578(5): MOV R9,qword ptr [RSP + 0x20]
0000f57d(6): JNZ 0x0000fa48
0000f583(5): MOV R8,qword ptr [RSP + 0x8]
0000f588(5): MOV RCX,qword ptr [RSP + 0x30]
0000f58d(3): MOV RDX,R9
0000f590(3): MOV RSI,R13
0000f593(3): MOV RDI,R14
0000f596(5): CALL 0x0000f130
0000f59b(3): CMP EAX,0x1
0000f59e(4): MOV R8,qword ptr [R14 + 0x8]
0000f5a2(6): JA 0x0000f648
0000f5a8(4): ADD RBP,0x1
0000f5ac(4): CMP RBP,qword ptr [R13 + 0x20]
0000f5b0(3): MOV R11,R15
0000f5b3(3): MOV RBX,R12
0000f5b6(6): JGE 0x0000f868
0000f5bc(4): MOV RAX,qword ptr [R13 + 0x28]
0000f5c0(4): MOV R9,qword ptr [RAX + RBP*0x8]
0000f5c4(4): MOV R15,qword ptr [R9 + 0x8]
0000f5c8(3): MOV RDX,R15
0000f5cb(3): SUB RDX,R11
0000f5ce(3): TEST RDX,RDX
0000f5d1(4): LEA R12,[RDX + RBX*0x1]
0000f5d5(2): JLE 0x0000f583
0000f5d7(4): CMP qword ptr [R14 + 0x30],R12
0000f5db(6): JGE 0x0000f550
0000f5e1(4): CMP qword ptr [R14 + 0x58],R12
0000f5e5(5): MOV qword ptr [RSP + 0x18],RDX
0000f5ea(5): MOV qword ptr [RSP + 0x10],R9
0000f5ef(6): JL 0x0000fa48
0000f5f5(3): MOV RSI,R12
0000f5f8(3): MOV RDI,R14
0000f5fb(5): MOV qword ptr [RSP + 0x20],R11
0000f600(5): CALL 0x00008d60
0000f605(2): TEST EAX,EAX
0000f607(2): JNZ 0x0000f648
0000f609(4): MOV R8,qword ptr [R14 + 0x8]
0000f60d(5): MOV RDX,qword ptr [RSP + 0x18]
0000f612(5): MOV R9,qword ptr [RSP + 0x10]
0000f617(5): MOV R11,qword ptr [RSP + 0x20]
0000f61c(5): JMP 0x0000f550
0000f628(3): MOV R8,RSI
0000f62b(3): MOV RSI,RDI
0000f62e(2): NOP
0000f630(4): LEA RCX,[R8 + 0x1]
0000f634(3): MOV RDI,RSI
0000f637(5): JMP 0x0000f433
0000f640(2): XOR EAX,EAX
0000f642(6): NOP word ptr [RAX + RAX*0x1]
0000f648(8): MOV RBX,qword ptr [0xa8 + RSP]
0000f650(9): XOR RBX,qword ptr FS:[0x28]
0000f659(6): JNZ 0x0000fbac
0000f65f(7): ADD RSP,0xb8
0000f666(1): POP RBX
0000f667(1): POP RBP
0000f668(2): POP R12
0000f66a(2): POP R13
0000f66c(2): POP R14
0000f66e(2): POP R15
0000f670(1): RET
0000f678(4): ADD RAX,0x28
0000f67c(4): CMP byte ptr [RAX + -0x8],0x0
0000f680(6): JZ 0x0000f4b6
0000f686(3): CMP R13,qword ptr [RAX]
0000f689(2): JNZ 0x0000f678
0000f68b(5): MOV RAX,qword ptr [RSP + 0x70]
0000f690(5): CMP qword ptr [RSP + 0x70],RAX
0000f695(11): MOV dword ptr [0x8c + RSP],0x0
0000f6a0(6): JGE 0x0000f380
0000f6a6(8): LEA RAX,[R13*0x8]
0000f6ae(5): MOV R12,qword ptr [RSP + 0x70]
0000f6b3(5): MOV RBP,qword ptr [RSP + 0x38]
0000f6b8(5): MOV qword ptr [RSP + 0x50],RAX
0000f6bd(5): LEA RAX,[R13 + R13*0x2]
0000f6c2(4): LEA R8,[R12 + R12*0x4]
0000f6c6(4): SHL RAX,0x3
0000f6ca(5): MOV qword ptr [RSP + 0x58],RAX
0000f6cf(8): LEA R15,[R8*0x8]
0000f6d7(5): JMP 0x0000f80d
0000f6e0(4): MOV RCX,qword ptr [RBP + 0x28]
0000f6e4(5): MOV RDI,qword ptr [RSP + 0x58]
0000f6e9(5): MOV RCX,qword ptr [RCX + RDI*0x1 + 0x10]
0000f6ee(3): MOV RCX,qword ptr [RCX]
0000f6f1(4): LEA RCX,[RCX + RCX*0x2]
0000f6f5(4): LEA RCX,[RDX + RCX*0x8]
0000f6f9(5): MOV qword ptr [RSP + 0x18],RCX
0000f6fe(5): ADD RBX,qword ptr [RSP + 0x8]
0000f703(7): MOV EDX,dword ptr [0xa0 + R14]
0000f70a(3): MOV RDI,R14
0000f70d(3): SUB RBX,RAX
0000f710(4): LEA RSI,[RBX + -0x1]
0000f714(5): CALL 0x0000b4b0
0000f719(5): MOV RSI,qword ptr [RSP + 0x60]
0000f71e(2): MOV ECX,EAX
0000f720(7): MOV RAX,qword ptr [0xb8 + R14]
0000f727(8): LEA R10,[RBX*0x8]
0000f72f(9): MOV qword ptr [RSP + 0x10],0x0
0000f738(4): LEA R11,[RAX + R10*0x1]
0000f73c(4): MOV RAX,qword ptr [RAX + RSI*0x1]
0000f740(3): MOV RDX,qword ptr [R11]
0000f743(3): TEST RAX,RAX
0000f746(2): JZ 0x0000f751
0000f748(4): MOV RAX,qword ptr [RAX + 0x10]
0000f74c(5): MOV qword ptr [RSP + 0x10],RAX
0000f751(3): TEST RDX,RDX
0000f754(6): JZ 0x0000fa70
0000f75a(4): MOV RSI,qword ptr [RDX + 0x50]
0000f75e(5): MOV RDI,qword ptr [RSP + 0x68]
0000f763(5): MOV RDX,qword ptr [RSP + 0x18]
0000f768(5): MOV qword ptr [RSP + 0x30],R10
0000f76d(4): MOV dword ptr [RSP + 0x28],ECX
0000f771(5): CALL 0x0000a8c0
0000f776(2): TEST EAX,EAX
0000f778(7): MOV dword ptr [0x8c + RSP],EAX
0000f77f(4): MOV ECX,dword ptr [RSP + 0x28]
0000f783(5): MOV R10,qword ptr [RSP + 0x30]
0000f788(6): JNZ 0x0000fb18
0000f78e(7): ADD R10,qword ptr [0xb8 + R14]
0000f795(5): MOV RDX,qword ptr [RSP + 0x68]
0000f79a(3): MOV RSI,RBP
0000f79d(5): MOV RDI,qword ptr [RSP + 0x78]
0000f7a2(5): MOV qword ptr [RSP + 0x28],R10
0000f7a7(5): CALL 0x0000aa20
0000f7ac(5): MOV R10,qword ptr [RSP + 0x28]
0000f7b1(8): MOV RDI,qword ptr [0xa0 + RSP]
0000f7b9(3): MOV qword ptr [R10],RAX
0000f7bc(5): CALL 0x00001b00
0000f7c1(7): MOV RDX,qword ptr [0xb8 + R14]
0000f7c8(5): CMP qword ptr [RDX + RBX*0x8],0x0
0000f7cd(6): JZ 0x0000faa1
0000f7d3(6): CMP qword ptr [RSP + 0x20],0x0
0000f7d9(2): JNZ 0x0000f7f8
0000f7db(5): MOV RAX,qword ptr [RSP + 0x60]
0000f7e0(5): MOV RBX,qword ptr [RSP + 0x10]
0000f7e5(4): MOV RAX,qword ptr [RDX + RAX*0x1]
0000f7e9(4): CMP qword ptr [RAX + 0x10],RBX
0000f7ed(6): JG 0x0000fab8
0000f7f3(5): NOP dword ptr [RAX + RAX*0x1]
0000f7f8(4): ADD R12,0x1
0000f7fc(4): ADD R15,0x28
0000f800(7): CMP R12,qword ptr [0xc8 + R14]
0000f807(6): JGE 0x0000f380
0000f80d(7): MOV RAX,qword ptr [0xd8 + R14]
0000f814(3): ADD RAX,R15
0000f817(3): CMP R13,qword ptr [RAX]
0000f81a(2): JNZ 0x0000f7f8
0000f81c(5): MOV RDI,qword ptr [RSP + 0x8]
0000f821(4): CMP RDI,qword ptr [RAX + 0x8]
0000f825(2): JNZ 0x0000f7f8
0000f827(4): MOV RBX,qword ptr [RAX + 0x18]
0000f82b(4): MOV RAX,qword ptr [RAX + 0x10]
0000f82f(4): MOV RDX,qword ptr [RBP + 0x30]
0000f833(3): MOV RCX,RBX
0000f836(3): SUB RCX,RAX
0000f839(5): MOV qword ptr [RSP + 0x20],RCX
0000f83e(6): JZ 0x0000f6e0
0000f844(4): MOV RCX,qword ptr [RBP + 0x18]
0000f848(5): MOV RDI,qword ptr [RSP + 0x50]
0000f84d(4): MOV RCX,qword ptr [RCX + RDI*0x1]
0000f851(4): LEA RCX,[RCX + RCX*0x2]
0000f855(4): LEA RCX,[RDX + RCX*0x8]
0000f859(5): MOV qword ptr [RSP + 0x18],RCX
0000f85e(5): JMP 0x0000f6fe
0000f868(3): MOV RBX,R13
0000f86b(3): MOV R13,R8
0000f86e(4): LEA R11,[R15 + 0x1]
0000f872(5): CMP qword ptr [RSP + 0x8],R11
0000f877(6): JL 0x0000f509
0000f87d(3): MOV RAX,R12
0000f880(8): LEA R15,[R11*0x8]
0000f888(3): MOV R12,RBX
0000f88b(3): MOV RBX,R11
0000f88e(3): MOV R11,R13
0000f891(3): MOV R13,RAX
0000f894(4): NOP dword ptr [RAX]
0000f898(3): MOV RAX,RBX
0000f89b(4): SUB RAX,qword ptr [R12]
0000f89f(3): TEST RAX,RAX
0000f8a2(2): JLE 0x0000f8c5
0000f8a4(4): CMP qword ptr [R14 + 0x30],R13
0000f8a8(6): JLE 0x0000fb31
0000f8ae(6): MOVZX ECX,byte ptr [R11 + RBX*0x1 + -0x1]
0000f8b4(4): LEA RAX,[R13 + 0x1]
0000f8b8(4): CMP byte ptr [R11 + R13*0x1],CL
0000f8bc(6): JNZ 0x0000f9f2
0000f8c2(3): MOV R13,RAX
0000f8c5(7): MOV RAX,qword ptr [0xb8 + R14]
0000f8cc(4): MOV RAX,qword ptr [RAX + R15*0x1]
0000f8d0(3): TEST RAX,RAX
0000f8d3(6): JZ 0x0000f9df
0000f8d9(4): MOV RCX,qword ptr [RAX + 0x10]
0000f8dd(3): TEST RCX,RCX
0000f8e0(6): JLE 0x0000f9df
0000f8e6(4): MOV RDI,qword ptr [RAX + 0x18]
0000f8ea(5): MOV RAX,qword ptr [RSP + 0x50]
0000f8ef(2): XOR EDX,EDX
0000f8f1(5): MOV R8,qword ptr [RSP + 0x58]
0000f8f6(3): MOV RSI,qword ptr [RAX]
0000f8f9(2): JMP 0x0000f90d
0000f900(4): ADD RDX,0x1
0000f904(3): CMP RCX,RDX
0000f907(6): JZ 0x0000f9df
0000f90d(4): MOV RBP,qword ptr [RDI + RDX*0x8]
0000f911(3): MOV RAX,RBP
0000f914(4): SHL RAX,0x4
0000f918(3): ADD RAX,RSI
0000f91b(4): CMP byte ptr [RAX + 0x8],0x9
0000f91f(2): JNZ 0x0000f900
0000f921(3): CMP R8,qword ptr [RAX]
0000f924(2): JNZ 0x0000f900
0000f926(4): CMP RBP,-0x1
0000f92a(6): JZ 0x0000f9df
0000f930(5): MOV RSI,qword ptr [R12 + 0x10]
0000f935(4): MOV RCX,qword ptr [R12]
0000f939(3): TEST RSI,RSI
0000f93c(6): JZ 0x0000fa00
0000f942(5): MOV qword ptr [RSP + 0x10],R11
0000f947(5): MOV RDX,qword ptr [R12 + 0x8]
0000f94c(4): SUB RSP,0x8
0000f950(2): PUSH 0x9
0000f952(3): MOV R9,RBX
0000f955(3): MOV R8,RBP
0000f958(3): MOV RDI,R14
0000f95b(5): CALL 0x0000e0e0
0000f960(1): POP RDX
0000f961(3): CMP EAX,0x1
0000f964(1): POP RCX
0000f965(5): MOV R11,qword ptr [RSP + 0x10]
0000f96a(2): JZ 0x0000f9df
0000f96c(2): TEST EAX,EAX
0000f96e(6): JNZ 0x0000f648
0000f974(5): MOV RAX,qword ptr [R12 + 0x20]
0000f979(5): CMP RAX,qword ptr [R12 + 0x18]
0000f97e(6): JZ 0x0000fb58
0000f984(5): MOV ESI,0x28
0000f989(5): MOV EDI,0x1
0000f98e(5): CALL 0x00001d30
0000f993(3): TEST RAX,RAX
0000f996(6): JZ 0x0000fa39
0000f99c(5): MOV RDX,qword ptr [R12 + 0x20]
0000f9a1(5): MOV RCX,qword ptr [R12 + 0x28]
0000f9a6(3): MOV RSI,R12
0000f9a9(5): MOV R8,qword ptr [RSP + 0x8]
0000f9ae(3): MOV RDI,R14
0000f9b1(4): MOV qword ptr [RCX + RDX*0x8],RAX
0000f9b5(5): MOV RCX,qword ptr [RSP + 0x30]
0000f9ba(4): ADD RDX,0x1
0000f9be(3): MOV qword ptr [RAX],RBP
0000f9c1(4): MOV qword ptr [RAX + 0x8],RBX
0000f9c5(5): MOV qword ptr [R12 + 0x20],RDX
0000f9ca(3): MOV RDX,RAX
0000f9cd(5): CALL 0x0000f130
0000f9d2(3): CMP EAX,0x1
0000f9d5(4): MOV R11,qword ptr [R14 + 0x8]
0000f9d9(6): JA 0x0000f648
0000f9df(4): ADD RBX,0x1
0000f9e3(4): ADD R15,0x8
0000f9e7(5): CMP qword ptr [RSP + 0x8],RBX
0000f9ec(6): JGE 0x0000f898
0000f9f2(3): MOV R13,R11
0000f9f5(5): JMP 0x0000f509
0000fa00(3): MOV RSI,RBX
0000fa03(5): MOV EDI,0x18
0000fa08(5): MOV qword ptr [RSP + 0x18],R11
0000fa0d(3): SUB RSI,RCX
0000fa10(5): MOV qword ptr [RSP + 0x10],RCX
0000fa15(4): ADD RSI,0x1
0000fa19(5): CALL 0x00001d30
0000fa1e(3): TEST RAX,RAX
0000fa21(3): MOV RSI,RAX
0000fa24(5): MOV qword ptr [R12 + 0x10],RAX
0000fa29(5): MOV RCX,qword ptr [RSP + 0x10]
0000fa2e(5): MOV R11,qword ptr [RSP + 0x18]
0000fa33(6): JNZ 0x0000f942
0000fa39(5): MOV EAX,0xc
0000fa3e(5): JMP 0x0000f648
0000fa48(3): MOV RCX,RBX
0000fa4b(3): MOV RBX,R13
0000fa4e(3): MOV R13,R8
0000fa51(4): CMP qword ptr [RBX + 0x20],RBP
0000fa55(6): JG 0x0000f509
0000fa5b(3): TEST RBP,RBP
0000fa5e(3): MOV R12,RCX
0000fa61(6): JZ 0x0000f872
0000fa67(3): MOV R15,R11
0000fa6a(5): JMP 0x0000f86e
0000fa70(5): MOV RDX,qword ptr [RSP + 0x18]
0000fa75(5): MOV RDI,qword ptr [RSP + 0x78]
0000fa7a(3): MOV RSI,RBP
0000fa7d(5): MOV qword ptr [RSP + 0x28],R11
0000fa82(5): CALL 0x0000aa20
0000fa87(5): MOV R11,qword ptr [RSP + 0x28]
0000fa8c(7): MOV RDX,qword ptr [0xb8 + R14]
0000fa93(3): MOV qword ptr [R11],RAX
0000fa96(5): CMP qword ptr [RDX + RBX*0x8],0x0
0000fa9b(6): JNZ 0x0000f7d3
0000faa1(7): MOV EAX,dword ptr [0x8c + RSP]
0000faa8(2): TEST EAX,EAX
0000faaa(6): JZ 0x0000f7d3
0000fab0(5): JMP 0x0000f648
0000fab8(5): MOV RAX,qword ptr [RSP + 0x18]
0000fabd(5): MOV RCX,qword ptr [RSP + 0x8]
0000fac2(3): MOV RDI,R14
0000fac5(4): LEA R8,[RAX + 0x10]
0000fac9(4): LEA RBX,[RAX + 0x8]
0000facd(3): MOV RDX,R8
0000fad0(3): MOV RSI,RBX
0000fad3(5): MOV qword ptr [RSP + 0x10],R8
0000fad8(5): CALL 0x0000b360
0000fadd(2): TEST EAX,EAX
0000fadf(7): MOV dword ptr [0x8c + RSP],EAX
0000fae6(6): JNZ 0x0000f648
0000faec(5): MOV R8,qword ptr [RSP + 0x10]
0000faf1(3): MOV RSI,RBX
0000faf4(3): MOV RDI,R14
0000faf7(3): MOV RDX,R8
0000fafa(5): CALL 0x0000f2d0
0000faff(2): TEST EAX,EAX
0000fb01(7): MOV dword ptr [0x8c + RSP],EAX
0000fb08(6): JZ 0x0000f7f8
0000fb0e(5): JMP 0x0000f648
0000fb18(8): MOV RDI,qword ptr [0xa0 + RSP]
0000fb20(5): CALL 0x00001b00
0000fb25(7): MOV EAX,dword ptr [0x8c + RSP]
0000fb2c(5): JMP 0x0000f648
0000fb31(4): CMP qword ptr [R14 + 0x58],R13
0000fb35(6): JLE 0x0000f9f2
0000fb3b(4): LEA ESI,[R13 + 0x1]
0000fb3f(3): MOV RDI,R14
0000fb42(5): CALL 0x00008c10
0000fb47(2): TEST EAX,EAX
0000fb49(6): JNZ 0x0000f648
0000fb4f(4): MOV R11,qword ptr [R14 + 0x8]
0000fb53(5): JMP 0x0000f8ae
0000fb58(5): LEA RDX,[RAX + RAX*0x1 + 0x1]
0000fb5d(5): MOV RDI,qword ptr [R12 + 0x28]
0000fb62(8): LEA RSI,[RDX*0x8]
0000fb6a(5): MOV qword ptr [RSP + 0x10],RDX
0000fb6f(5): CALL 0x00001e00
0000fb74(3): TEST RAX,RAX
0000fb77(6): JZ 0x0000fa39
0000fb7d(5): MOV RDX,qword ptr [RSP + 0x10]
0000fb82(5): MOV qword ptr [R12 + 0x28],RAX
0000fb87(5): MOV qword ptr [R12 + 0x18],RDX
0000fb8c(5): JMP 0x0000f984
0000fb91(5): MOV R13,qword ptr [RSP + 0x30]
0000fb96(7): MOV RAX,qword ptr [0xc8 + R14]
0000fb9d(5): JMP 0x0000f690
0000fba2(5): MOV R12,qword ptr [RSP + 0x8]
0000fba7(5): JMP 0x0000f872
0000fbac(5): CALL 0x00001c20
0000fbb1(5): NOP dword ptr [RAX + RAX*0x1]
0000fbb6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000fbc0(2): PUSH R15
0000fbc2(2): PUSH R14
0000fbc4(2): PUSH R13
0000fbc6(2): PUSH R12
0000fbc8(3): MOV R13,RDI
0000fbcb(1): PUSH RBP
0000fbcc(1): PUSH RBX
0000fbcd(3): MOV RBX,RSI
0000fbd0(4): SUB RSP,0x38
0000fbd4(4): MOV R12,qword ptr [RSI + 0x48]
0000fbd8(7): MOV R14,qword ptr [0xb8 + RSI]
0000fbdf(9): MOV RAX,qword ptr FS:[0x28]
0000fbe8(5): MOV qword ptr [RSP + 0x28],RAX
0000fbed(2): XOR EAX,EAX
0000fbef(7): MOV R15,qword ptr [0x98 + RSI]
0000fbf6(8): LEA RBP,[R12*0x8]
0000fbfe(3): ADD R14,RBP
0000fc01(7): CMP qword ptr [0xc0 + RSI],R12
0000fc08(2): JGE 0x0000fc50
0000fc0a(3): MOV qword ptr [R14],RDX
0000fc0d(3): MOV RBP,RDX
0000fc10(7): MOV qword ptr [0xc0 + RSI],R12
0000fc17(8): CMP qword ptr [0x98 + R15],0x0
0000fc1f(6): JNZ 0x0000fd48
0000fc25(5): MOV RCX,qword ptr [RSP + 0x28]
0000fc2a(9): XOR RCX,qword ptr FS:[0x28]
0000fc33(3): MOV RAX,RBP
0000fc36(6): JNZ 0x0000fda7
0000fc3c(4): ADD RSP,0x38
0000fc40(1): POP RBX
0000fc41(1): POP RBP
0000fc42(2): POP R12
0000fc44(2): POP R13
0000fc46(2): POP R14
0000fc48(2): POP R15
0000fc4a(1): RET
0000fc50(3): MOV RAX,qword ptr [R14]
0000fc53(3): TEST RAX,RAX
0000fc56(6): JZ 0x0000fd38
0000fc5c(3): TEST RDX,RDX
0000fc5f(4): MOV RAX,qword ptr [RAX + 0x50]
0000fc63(6): JZ 0x0000fcf0
0000fc69(4): MOV R14,qword ptr [RDX + 0x50]
0000fc6d(5): LEA RDI,[RSP + 0x10]
0000fc72(3): MOV RDX,RAX
0000fc75(4): MOV qword ptr [RSP],RDI
0000fc79(3): MOV RSI,R14
0000fc7c(5): CALL 0x0000a8c0
0000fc81(2): TEST EAX,EAX
0000fc83(4): MOV dword ptr [R13],EAX
0000fc87(6): JNZ 0x0000fda0
0000fc8d(4): MOV RAX,qword ptr [RBX + 0x48]
0000fc91(6): MOV EDX,dword ptr [0xa0 + RBX]
0000fc97(3): MOV RDI,RBX
0000fc9a(4): LEA RSI,[RAX + -0x1]
0000fc9e(5): CALL 0x0000b4b0
0000fca3(7): MOV R8,qword ptr [0xb8 + RBX]
0000fcaa(4): MOV RDX,qword ptr [RSP]
0000fcae(2): MOV ECX,EAX
0000fcb0(3): MOV RSI,R15
0000fcb3(3): MOV RDI,R13
0000fcb6(3): ADD R8,RBP
0000fcb9(5): MOV qword ptr [RSP + 0x8],R8
0000fcbe(5): CALL 0x0000aa20
0000fcc3(5): MOV R8,qword ptr [RSP + 0x8]
0000fcc8(3): TEST R14,R14
0000fccb(3): MOV RBP,RAX
0000fcce(3): MOV qword ptr [R8],RAX
0000fcd1(6): JZ 0x0000fc17
0000fcd7(5): MOV RDI,qword ptr [RSP + 0x20]
0000fcdc(5): CALL 0x00001b00
0000fce1(5): JMP 0x0000fc17
0000fcf0(4): MOVDQU XMM0,xmmword ptr [RAX]
0000fcf4(3): MOV RDI,RBX
0000fcf7(6): MOV EDX,dword ptr [0xa0 + RSI]
0000fcfd(5): LEA RSI,[R12 + -0x1]
0000fd02(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
0000fd07(4): MOV RAX,qword ptr [RAX + 0x10]
0000fd0b(5): MOV qword ptr [RSP + 0x20],RAX
0000fd10(5): CALL 0x0000b4b0
0000fd15(5): LEA RDX,[RSP + 0x10]
0000fd1a(2): MOV ECX,EAX
0000fd1c(3): MOV RSI,R15
0000fd1f(3): MOV RDI,R13
0000fd22(5): CALL 0x0000aa20
0000fd27(3): MOV RBP,RAX
0000fd2a(3): MOV qword ptr [R14],RAX
0000fd2d(5): JMP 0x0000fc17
0000fd38(3): MOV qword ptr [R14],RDX
0000fd3b(3): MOV RBP,RDX
0000fd3e(5): JMP 0x0000fc17
0000fd48(3): TEST RBP,RBP
0000fd4b(2): JZ 0x0000fda0
0000fd4d(4): LEA R14,[RBP + 0x10]
0000fd51(4): LEA R15,[RBP + 0x18]
0000fd55(3): MOV RCX,R12
0000fd58(3): MOV RDI,RBX
0000fd5b(3): MOV RDX,R15
0000fd5e(3): MOV RSI,R14
0000fd61(5): CALL 0x0000b360
0000fd66(2): TEST EAX,EAX
0000fd68(4): MOV dword ptr [R13],EAX
0000fd6c(2): JNZ 0x0000fda0
0000fd6e(4): TEST byte ptr [RBP + 0x68],0x40
0000fd72(6): JZ 0x0000fc25
0000fd78(3): MOV RDX,R15
0000fd7b(3): MOV RSI,R14
0000fd7e(3): MOV RDI,RBX
0000fd81(5): CALL 0x0000f2d0
0000fd86(2): TEST EAX,EAX
0000fd88(4): MOV dword ptr [R13],EAX
0000fd8c(2): JNZ 0x0000fda0
0000fd8e(7): MOV RAX,qword ptr [0xb8 + RBX]
0000fd95(4): MOV RBP,qword ptr [RAX + R12*0x8]
0000fd99(5): JMP 0x0000fc25
0000fda0(2): XOR EBP,EBP
0000fda2(5): JMP 0x0000fc25
0000fda7(5): CALL 0x00001c20
0000fdac(4): NOP dword ptr [RAX]
0000fdb0(2): PUSH R15
0000fdb2(2): PUSH R14
0000fdb4(3): MOV R14,RDI
0000fdb7(2): PUSH R13
0000fdb9(2): PUSH R12
0000fdbb(3): MOV R13,RSI
0000fdbe(1): PUSH RBP
0000fdbf(1): PUSH RBX
0000fdc0(4): SUB RSP,0x68
0000fdc4(4): MOV R15,qword ptr [RSI + 0x18]
0000fdc8(4): MOV RBX,qword ptr [RSI + 0x10]
0000fdcc(4): MOV qword ptr [RSP],RDI
0000fdd0(5): MOV EDI,0x8
0000fdd5(9): MOV qword ptr [RSP + 0x40],0x1
0000fdde(9): MOV RAX,qword ptr FS:[0x28]
0000fde7(5): MOV qword ptr [RSP + 0x58],RAX
0000fdec(2): XOR EAX,EAX
0000fdee(9): MOV qword ptr [RSP + 0x48],0x1
0000fdf7(5): CALL 0x00001da0
0000fdfc(3): TEST RAX,RAX
0000fdff(5): MOV qword ptr [RSP + 0x50],RAX
0000fe04(6): JZ 0x000100e4
0000fe0a(5): LEA RCX,[RSP + 0x40]
0000fe0f(3): MOV qword ptr [RAX],RBX
0000fe12(3): MOV RDX,R15
0000fe15(3): MOV RSI,R13
0000fe18(3): MOV RDI,R14
0000fe1b(5): MOV qword ptr [RSP + 0x10],RCX
0000fe20(5): CALL 0x00011820
0000fe25(2): TEST EAX,EAX
0000fe27(6): JNZ 0x000100b5
0000fe2d(8): LEA RAX,[R15*0x8]
0000fe35(3): TEST R15,R15
0000fe38(8): MOV dword ptr [RSP + 0x2c],0x0
0000fe40(5): MOV qword ptr [RSP + 0x8],RAX
0000fe45(4): LEA RAX,[R13 + 0x30]
0000fe49(5): MOV qword ptr [RSP + 0x38],RAX
0000fe4e(6): JLE 0x00010057
0000fe54(4): MOV RDI,qword ptr [R13]
0000fe58(5): MOV RAX,qword ptr [RSP + 0x8]
0000fe5d(5): CMP qword ptr [RDI + RAX*0x1],0x0
0000fe62(6): JZ 0x00010078
0000fe68(4): MOV RAX,qword ptr [RSP]
0000fe6c(8): MOV dword ptr [RSP + 0x2c],0x0
0000fe74(4): MOV ECX,dword ptr [RSP + 0x2c]
0000fe78(6): CMP dword ptr [0xe0 + RAX],ECX
0000fe7e(6): JL 0x00010091
0000fe84(4): MOV RBX,qword ptr [RSP]
0000fe88(5): MOV RDI,qword ptr [RSP + 0x8]
0000fe8d(4): SUB R15,0x1
0000fe91(9): MOV qword ptr [RSP + 0x48],0x0
0000fe9a(7): MOV RAX,qword ptr [0xb8 + RBX]
0000fea1(5): MOV R12,qword ptr [RAX + RDI*0x1 + -0x8]
0000fea6(3): TEST R12,R12
0000fea9(6): JZ 0x00010030
0000feaf(6): CMP qword ptr [R12 + 0x28],0x0
0000feb5(7): MOV R14,qword ptr [0x98 + RBX]
0000febc(6): JLE 0x00010030
0000fec2(2): XOR EBX,EBX
0000fec4(5): JMP 0x0000ff6b
0000fed0(4): MOV RDI,qword ptr [RSP]
0000fed4(3): MOV RDX,R15
0000fed7(5): CALL 0x0000b5a0
0000fedc(2): TEST AL,AL
0000fede(2): JZ 0x0000ff5c
0000fee0(4): MOV RAX,qword ptr [R13]
0000fee4(5): MOV RCX,qword ptr [RSP + 0x8]
0000fee9(4): MOV RAX,qword ptr [RAX + RCX*0x1]
0000feed(3): TEST RAX,RAX
0000fef0(2): JZ 0x0000ff5c
0000fef2(4): MOV RDX,qword ptr [R14 + 0x18]
0000fef6(4): MOV RDI,qword ptr [RAX + 0x10]
0000fefa(4): LEA RSI,[RAX + 0x18]
0000fefe(4): MOV RDX,qword ptr [RDX + RBP*0x8]
0000ff02(5): CALL 0x000096d0
0000ff07(3): TEST RAX,RAX
0000ff0a(2): JZ 0x0000ff5c
0000ff0c(6): MOV R10D,0x1
0000ff12(5): CMP qword ptr [R13 + 0x28],0x0
0000ff17(2): JZ 0x0000ff47
0000ff19(4): MOV RAX,qword ptr [R14 + 0x18]
0000ff1d(4): SUB RSP,0x8
0000ff21(4): LEA RSI,[R13 + 0x28]
0000ff25(4): LEA R8,[R10 + R15*0x1]
0000ff29(3): MOV R9,RBP
0000ff2c(4): MOV RCX,qword ptr [RAX + RBP*0x8]
0000ff30(2): PUSH R15
0000ff32(5): MOV RDX,qword ptr [RSP + 0x48]
0000ff37(5): MOV RDI,qword ptr [RSP + 0x10]
0000ff3c(5): CALL 0x00009980
0000ff41(2): TEST AL,AL
0000ff43(1): POP RDX
0000ff44(1): POP RCX
0000ff45(2): JNZ 0x0000ff5c
0000ff47(5): MOV RDI,qword ptr [RSP + 0x10]
0000ff4c(3): MOV RSI,RBP
0000ff4f(5): CALL 0x00008190
0000ff54(2): TEST AL,AL
0000ff56(6): JZ 0x000100b0
0000ff5c(4): ADD RBX,0x1
0000ff60(5): CMP RBX,qword ptr [R12 + 0x28]
0000ff65(6): JGE 0x00010030
0000ff6b(5): MOV RAX,qword ptr [R12 + 0x30]
0000ff70(3): MOV RSI,qword ptr [R14]
0000ff73(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000ff77(3): MOV R9,RBP
0000ff7a(4): SHL R9,0x4
0000ff7e(3): ADD RSI,R9
0000ff81(4): TEST byte ptr [RSI + 0xa],0x10
0000ff85(6): JZ 0x0000fed0
0000ff8b(4): MOV RCX,qword ptr [RSP]
0000ff8f(4): MOV RAX,qword ptr [R13 + 0x18]
0000ff93(3): MOV R8,R15
0000ff96(3): MOV RDX,RBP
0000ff99(5): MOV qword ptr [RSP + 0x18],R9
0000ff9e(7): MOV R11,qword ptr [0x98 + RCX]
0000ffa5(5): MOV qword ptr [RSP + 0x20],RAX
0000ffaa(3): MOV RDI,qword ptr [R11]
0000ffad(7): LEA RSI,[0xd8 + R11]
0000ffb4(5): MOV qword ptr [RSP + 0x30],R11
0000ffb9(5): CALL 0x0000de80
0000ffbe(3): MOVSXD R10,EAX
0000ffc1(5): MOV R9,qword ptr [RSP + 0x18]
0000ffc6(4): CMP R10D,0x0
0000ffca(6): JLE 0x00010060
0000ffd0(3): MOVSXD RAX,R10D
0000ffd3(3): ADD RAX,R15
0000ffd6(5): CMP qword ptr [RSP + 0x20],RAX
0000ffdb(6): JL 0x0000ff12
0000ffe1(4): MOV RDX,qword ptr [R13]
0000ffe5(5): MOV R11,qword ptr [RSP + 0x30]
0000ffea(4): MOV RAX,qword ptr [RDX + RAX*0x8]
0000ffee(3): TEST RAX,RAX
0000fff1(2): JZ 0x00010066
0000fff3(4): MOV RDX,qword ptr [R11 + 0x18]
0000fff7(4): MOV RDI,qword ptr [RAX + 0x10]
0000fffb(4): LEA RSI,[RAX + 0x18]
0000ffff(5): MOV qword ptr [RSP + 0x18],R9
00010004(4): MOV RDX,qword ptr [RDX + RBP*0x8]
00010008(5): CALL 0x000096d0
0001000d(3): TEST RAX,RAX
00010010(6): JNZ 0x0000ff12
00010016(5): MOV R9,qword ptr [RSP + 0x18]
0001001b(3): MOV RSI,qword ptr [R14]
0001001e(3): ADD RSI,R9
00010021(5): JMP 0x0000fed0
00010030(5): MOV RCX,qword ptr [RSP + 0x10]
00010035(4): MOV RDI,qword ptr [RSP]
00010039(3): MOV RDX,R15
0001003c(3): MOV RSI,R13
0001003f(5): CALL 0x00011820
00010044(2): TEST EAX,EAX
00010046(2): JNZ 0x000100b5
00010048(6): SUB qword ptr [RSP + 0x8],0x8
0001004e(3): TEST R15,R15
00010051(6): JNZ 0x0000fe54
00010057(2): XOR EAX,EAX
00010059(2): JMP 0x000100b5
00010060(6): JNZ 0x0000ff12
00010066(3): MOV RSI,qword ptr [R14]
00010069(3): ADD RSI,R9
0001006c(5): JMP 0x0000fed0
00010078(4): MOV RAX,qword ptr [RSP]
0001007c(5): ADD dword ptr [RSP + 0x2c],0x1
00010081(4): MOV ECX,dword ptr [RSP + 0x2c]
00010085(6): CMP dword ptr [0xe0 + RAX],ECX
0001008b(6): JGE 0x0000fe84
00010091(5): MOV RDX,qword ptr [RSP + 0x8]
00010096(2): XOR ESI,ESI
00010098(5): CALL 0x00001cb0
0001009d(5): MOV RDI,qword ptr [RSP + 0x50]
000100a2(5): CALL 0x00001b00
000100a7(2): XOR EAX,EAX
000100a9(2): JMP 0x000100c5
000100b0(5): MOV EAX,0xc
000100b5(5): MOV RDI,qword ptr [RSP + 0x50]
000100ba(3): MOV dword ptr [RSP],EAX
000100bd(5): CALL 0x00001b00
000100c2(3): MOV EAX,dword ptr [RSP]
000100c5(5): MOV RDX,qword ptr [RSP + 0x58]
000100ca(9): XOR RDX,qword ptr FS:[0x28]
000100d3(2): JNZ 0x000100eb
000100d5(4): ADD RSP,0x68
000100d9(1): POP RBX
000100da(1): POP RBP
000100db(2): POP R12
000100dd(2): POP R13
000100df(2): POP R14
000100e1(2): POP R15
000100e3(1): RET
000100e4(5): MOV EAX,0xc
000100e9(2): JMP 0x000100c5
000100eb(5): CALL 0x00001c20
000100f0(2): PUSH R15
000100f2(2): PUSH R14
000100f4(2): PUSH R13
000100f6(2): PUSH R12
000100f8(3): MOV R13,R9
000100fb(1): PUSH RBP
000100fc(1): PUSH RBX
000100fd(3): MOV RBP,RCX
00010100(5): MOV ECX,0x20
00010105(3): MOV R12,R8
00010108(7): SUB RSP,0x238
0001010f(3): MOV RBX,qword ptr [RDI]
00010112(8): MOV RAX,qword ptr [0x278 + RSP]
0001011a(5): MOV qword ptr [RSP + 0x48],RDI
0001011f(5): MOV qword ptr [RSP + 0x78],RSI
00010124(3): MOV RSI,RDI
00010127(8): LEA RDI,[0x120 + RSP]
0001012f(8): MOV qword ptr [0x88 + RSP],RDX
00010137(5): MOV qword ptr [RSP + 0x38],RBX
0001013c(8): MOV qword ptr [0xb8 + RSP],RAX
00010144(4): MOV qword ptr [RSP],RDI
00010148(9): MOV RAX,qword ptr FS:[0x28]
00010151(8): MOV qword ptr [0x228 + RSP],RAX
00010159(2): XOR EAX,EAX
0001015b(3): STOSQ.REP RDI
0001015e(4): MOV RDI,qword ptr [RSI + 0x20]
00010162(8): MOV qword ptr [0x1b8 + RSP],RBX
0001016a(3): TEST RDI,RDI
0001016d(5): MOV qword ptr [RSP + 0x68],RDI
00010172(2): JZ 0x00010196
00010174(4): MOVZX EDX,byte ptr [RSI + 0x38]
00010178(3): TEST DL,0x8
0001017b(6): JZ 0x00010610
00010181(3): CMP RBP,R8
00010184(6): JZ 0x00010610
0001018a(3): AND EDX,0x1
0001018d(4): CMOVZ RAX,RDI
00010191(5): MOV qword ptr [RSP + 0x68],RAX
00010196(5): MOV RAX,qword ptr [RSP + 0x48]
0001019b(12): MOV qword ptr [0x98 + RSP],0x0
000101a7(4): MOV RAX,qword ptr [RAX + 0x30]
000101ab(8): CMP RAX,qword ptr [0x270 + RSP]
000101b3(2): JNC 0x000101d4
000101b5(8): MOV RCX,qword ptr [0x270 + RSP]
000101bd(4): LEA RDX,[RCX + -0x1]
000101c1(3): SUB RDX,RAX
000101c4(8): SUB qword ptr [0x270 + RSP],RDX
000101cc(8): MOV qword ptr [0x98 + RSP],RDX
000101d4(5): MOV RSI,qword ptr [RSP + 0x48]
000101d9(5): CMP qword ptr [RSI + 0x10],0x0
000101de(6): JZ 0x00011070
000101e4(5): MOV RDI,qword ptr [RSP + 0x38]
000101e9(4): MOV RAX,qword ptr [RDI + 0x48]
000101ed(3): TEST RAX,RAX
000101f0(6): JZ 0x00011070
000101f6(4): MOV RDX,qword ptr [RDI + 0x50]
000101fa(3): TEST RDX,RDX
000101fd(6): JZ 0x00011070
00010203(4): MOV RCX,qword ptr [RDI + 0x58]
00010207(3): TEST RCX,RCX
0001020a(6): JZ 0x00011070
00010210(5): CMP qword ptr [RDI + 0x60],0x0
00010215(6): JZ 0x00011070
0001021b(5): CMP qword ptr [RAX + 0x10],0x0
00010220(2): JNZ 0x00010258
00010222(5): CMP qword ptr [RDX + 0x10],0x0
00010227(2): JNZ 0x00010258
00010229(5): CMP qword ptr [RCX + 0x10],0x0
0001022e(2): JZ 0x00010236
00010230(4): CMP byte ptr [RSI + 0x38],0x0
00010234(2): JS 0x00010258
00010236(3): TEST RBP,RBP
00010239(2): JZ 0x0001024c
0001023b(3): TEST R12,R12
0001023e(8): MOV dword ptr [RSP + 0x5c],0x1
00010246(6): JNZ 0x00010c69
0001024c(3): XOR R12D,R12D
0001024f(2): XOR EBP,EBP
00010251(7): NOP dword ptr [RAX]
00010258(9): CMP qword ptr [0x270 + RSP],0x0
00010261(8): MOV dword ptr [RSP + 0x58],0x1
00010269(6): JZ 0x000105f0
0001026f(5): MOV R11,qword ptr [RSP + 0x38]
00010274(5): MOV RAX,qword ptr [RSP + 0x48]
00010279(8): MOV RDI,qword ptr [0x88 + RSP]
00010281(4): MOV RSI,qword ptr [R11 + 0x10]
00010285(4): MOV RBX,qword ptr [RAX + 0x28]
00010289(7): MOV EDX,dword ptr [0xb4 + R11]
00010290(4): MOV RAX,qword ptr [RAX + 0x18]
00010294(8): MOV qword ptr [0x178 + RSP],RDI
0001029c(8): MOV qword ptr [0x170 + RSP],RDI
000102a4(5): MOV qword ptr [RSP + 0x8],RSI
000102a9(4): LEA RSI,[RSI + 0x1]
000102ad(8): MOV qword ptr [0xb0 + RSP],RBX
000102b5(3): MOVSXD RCX,EDX
000102b8(4): SHR RAX,0x16
000102bc(8): MOV qword ptr [0x198 + RSP],RBX
000102c4(3): AND EAX,0x1
000102c7(3): CMP RSI,RCX
000102ca(7): MOV dword ptr [0x1b0 + RSP],EDX
000102d1(4): CMOVL RSI,RCX
000102d5(4): LEA RCX,[RDI + 0x1]
000102d9(7): MOV byte ptr [0x1a8 + RSP],AL
000102e0(8): MOV qword ptr [0x188 + RSP],RDI
000102e8(8): MOV qword ptr [0x180 + RSP],RDI
000102f0(3): CMP RSI,RCX
000102f3(4): MOV RDI,qword ptr [RSP]
000102f7(4): CMOVG RSI,RCX
000102fb(3): TEST RBX,RBX
000102fe(5): MOV RCX,qword ptr [RSP + 0x78]
00010303(3): SETNZ BL
00010306(2): OR EAX,EBX
00010308(7): MOV byte ptr [0x1ab + RSP],AL
0001030f(8): MOVZX EAX,byte ptr [0xb0 + R11]
00010317(8): MOV qword ptr [0x120 + RSP],RCX
0001031f(2): MOV EDX,EAX
00010321(3): SHR AL,0x3
00010324(3): SHR DL,0x2
00010327(3): AND EAX,0x1
0001032a(3): AND EDX,0x1
0001032d(7): MOV byte ptr [0x1aa + RSP],AL
00010334(7): MOV byte ptr [0x1a9 + RSP],DL
0001033b(5): CALL 0x00008080
00010340(2): TEST EAX,EAX
00010342(4): MOV dword ptr [RSP + 0x5c],EAX
00010346(6): JNZ 0x00010c40
0001034c(5): MOV RDI,qword ptr [RSP + 0x38]
00010351(7): LEA RAX,[0xb8 + RDI]
00010358(8): MOV qword ptr [0x1a0 + RSP],RAX
00010360(7): MOVZX EAX,byte ptr [0xb0 + RDI]
00010367(4): MOV byte ptr [RSP + 0x8],AL
0001036b(3): SHR AL,0x4
0001036e(3): AND EAX,0x1
00010371(8): CMP byte ptr [0x1ab + RSP],0x0
00010379(7): MOV byte ptr [0x1ae + RSP],AL
00010380(2): JNZ 0x000103a5
00010382(5): MOV RSI,qword ptr [RSP + 0x38]
00010387(5): MOV RAX,qword ptr [RSP + 0x78]
0001038c(7): CMP dword ptr [0xb4 + RSI],0x1
00010393(8): MOV qword ptr [0x128 + RSP],RAX
0001039b(8): MOV RAX,qword ptr [0x88 + RSP]
000103a3(2): JLE 0x000103a7
000103a5(2): XOR EAX,EAX
000103a7(8): MOV qword ptr [0x150 + RSP],RAX
000103af(8): MOV qword ptr [0x158 + RSP],RAX
000103b7(5): MOV RAX,qword ptr [RSP + 0x48]
000103bc(8): MOV qword ptr [0x188 + RSP],R13
000103c4(8): MOV qword ptr [0x180 + RSP],R13
000103cc(4): MOVZX EAX,byte ptr [RAX + 0x38]
000103d0(4): MOV byte ptr [RSP + 0x8],AL
000103d4(3): SHR AL,0x7
000103d7(7): MOV byte ptr [0x1ad + RSP],AL
000103de(5): MOV RAX,qword ptr [RSP + 0x38]
000103e3(7): MOV R14,qword ptr [0x98 + RAX]
000103ea(7): MOV EAX,dword ptr [0x280 + RSP]
000103f1(12): MOV qword ptr [0x1c8 + RSP],-0x1
000103fd(4): LEA R13,[R14 + R14*0x1]
00010401(7): MOV dword ptr [0x1c0 + RSP],EAX
00010408(3): TEST R13,R13
0001040b(2): JLE 0x0001045f
0001040d(10): MOV RAX,0x666666666666666
00010417(3): CMP R13,RAX
0001041a(6): JG 0x00011160
00010420(5): LEA RDI,[R13 + R14*0x8]
00010425(4): SHL RDI,0x3
00010429(5): CALL 0x00001da0
0001042e(3): MOV RDI,R14
00010431(3): MOV R15,RAX
00010434(8): MOV qword ptr [0x1f8 + RSP],RAX
0001043c(4): SHL RDI,0x4
00010440(5): CALL 0x00001da0
00010445(3): TEST RAX,RAX
00010448(8): MOV qword ptr [0x218 + RSP],RAX
00010450(6): JZ 0x00011160
00010456(3): TEST R15,R15
00010459(6): JZ 0x00011160
0001045f(9): CMP qword ptr [0x270 + RSP],0x1
00010468(8): MOV qword ptr [0x1f0 + RSP],R13
00010470(11): MOV dword ptr [0x200 + RSP],0x1
0001047b(8): MOV qword ptr [0x210 + RSP],R13
00010483(6): JBE 0x000115a8
00010489(8): MOV RAX,qword ptr [0x160 + RSP]
00010491(10): MOV RDX,0x1ffffffffffffffe
0001049b(3): CMP RAX,RDX
0001049e(6): JA 0x00011160
000104a4(8): LEA RDI,[0x8 + RAX*0x8]
000104ac(5): CALL 0x00001da0
000104b1(3): TEST RAX,RAX
000104b4(3): MOV RDI,RAX
000104b7(8): MOV qword ptr [0x1d8 + RSP],RAX
000104bf(6): JZ 0x000111b0
000104c5(7): MOV EAX,dword ptr [0x280 + RSP]
000104cc(8): MOV qword ptr [0xd8 + RSP],RBP
000104d4(3): AND EAX,0x1
000104d7(3): CMP EAX,0x1
000104da(2): SBB EAX,EAX
000104dc(3): AND EAX,0x2
000104df(3): ADD EAX,0x4
000104e2(7): MOV dword ptr [0x190 + RSP],EAX
000104e9(2): XOR EAX,EAX
000104eb(3): CMP RBP,R12
000104ee(3): SETLE AL
000104f1(4): LEA EAX,[RAX + RAX*0x1 + -0x1]
000104f5(7): MOV dword ptr [0xac + RSP],EAX
000104fc(3): MOV RAX,R12
000104ff(4): CMOVLE RAX,RBP
00010503(8): MOV qword ptr [0x90 + RSP],RAX
0001050b(3): MOV RAX,R12
0001050e(4): CMOVGE RAX,RBP
00010512(6): CMP qword ptr [RSP + 0x68],0x0
00010518(5): MOV qword ptr [RSP + 0x70],RAX
0001051d(5): MOV RAX,qword ptr [RSP + 0x38]
00010522(6): MOV ESI,dword ptr [0xb4 + RAX]
00010528(5): MOV EAX,0x8
0001052d(7): MOV dword ptr [0xc8 + RSP],ESI
00010534(2): JZ 0x0001056f
00010536(3): CMP ESI,0x1
00010539(5): MOV ECX,0x4
0001053e(2): JZ 0x0001055e
00010540(5): MOV RAX,qword ptr [RSP + 0x48]
00010545(4): TEST byte ptr [RAX + 0x1a],0x40
00010549(6): JNZ 0x000112ce
0001054f(9): CMP qword ptr [0xb0 + RSP],0x0
00010558(6): JNZ 0x000112ce
0001055e(2): XOR EDX,EDX
00010560(3): CMP RBP,R12
00010563(3): MOVZX EAX,BL
00010566(3): SETLE DL
00010569(2): OR EAX,ECX
0001056b(2): ADD EDX,EDX
0001056d(2): OR EAX,EDX
0001056f(5): CMP RBP,qword ptr [RSP + 0x70]
00010574(3): SETG CL
00010577(8): CMP RBP,qword ptr [0x90 + RSP]
0001057f(3): SETL DL
00010582(2): OR CL,DL
00010584(6): JNZ 0x00011059
0001058a(8): LEA RCX,[0xd8 + RSP]
00010592(3): CMP RBP,R12
00010595(5): MOV EDX,0x0
0001059a(4): CMOVLE RDX,RCX
0001059e(3): TEST RDX,RDX
000105a1(8): MOV qword ptr [0xc0 + RSP],RDX
000105a9(8): SETNZ byte ptr [0xcf + RSP]
000105b1(3): SUB EAX,0x4
000105b4(7): MOV dword ptr [0xa8 + RSP],EAX
000105bb(8): LEA RAX,[0xd0 + RSP]
000105c3(5): MOV qword ptr [RSP + 0x28],RAX
000105c8(7): MOV EAX,dword ptr [0xa8 + RSP]
000105cf(3): CMP EAX,0x4
000105d2(6): JA 0x000111bd
000105d8(7): LEA RCX,[0x17760]
000105df(4): MOVSXD RAX,dword ptr [RCX + RAX*0x4]
000105e3(3): ADD RAX,RCX
000105e6(2): JMP RAX
000105f0(5): MOV RAX,qword ptr [RSP + 0x38]
000105f5(8): CMP qword ptr [0x98 + RAX],0x0
000105fd(3): SETNZ AL
00010600(3): MOVZX EAX,AL
00010603(4): MOV dword ptr [RSP + 0x58],EAX
00010607(5): JMP 0x0001026f
00010610(9): MOV qword ptr [RSP + 0x68],0x0
00010619(5): JMP 0x00010196
0001061e(5): CMP qword ptr [RSP + 0x70],RBP
00010623(2): JLE 0x0001067f
00010625(5): MOV RAX,qword ptr [RSP + 0x78]
0001062a(5): MOV RDI,qword ptr [RSP + 0x68]
0001062f(4): MOVZX EDX,byte ptr [RAX + RBP*0x1]
00010633(4): LEA RAX,[RBP + 0x1]
00010637(4): CMP byte ptr [RDI + RDX*0x1],0x0
0001063b(6): JNZ 0x000106c8
00010641(5): MOV RSI,qword ptr [RSP + 0x68]
00010646(5): MOV RCX,qword ptr [RSP + 0x70]
0001064b(5): MOV RDI,qword ptr [RSP + 0x78]
00010650(2): JMP 0x0001066a
00010658(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0001065c(4): LEA RAX,[RAX + 0x1]
00010660(4): CMP byte ptr [RSI + RDX*0x1],0x0
00010664(6): JNZ 0x00011801
0001066a(3): CMP RCX,RAX
0001066d(3): MOV RBP,RAX
00010670(2): JNZ 0x00010658
00010672(5): MOV RAX,qword ptr [RSP + 0x70]
00010677(8): MOV qword ptr [0xd8 + RSP],RAX
0001067f(5): CMP qword ptr [RSP + 0x70],RBP
00010684(2): JNZ 0x000106c8
00010686(2): XOR EAX,EAX
00010688(5): MOV RSI,qword ptr [RSP + 0x70]
0001068d(8): CMP qword ptr [0x88 + RSP],RSI
00010695(2): JLE 0x000106a0
00010697(5): MOV RAX,qword ptr [RSP + 0x78]
0001069c(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
000106a0(8): MOV RSI,qword ptr [0xb0 + RSP]
000106a8(3): TEST RSI,RSI
000106ab(2): JZ 0x000106b1
000106ad(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
000106b1(5): MOV RDI,qword ptr [RSP + 0x68]
000106b6(4): CMP byte ptr [RDI + RAX*0x1],0x0
000106ba(6): JZ 0x00011059
000106c0(5): MOV RBP,qword ptr [RSP + 0x70]
000106c5(3): NOP dword ptr [RAX]
000106c8(7): MOV EDX,dword ptr [0x280 + RSP]
000106cf(4): MOV RDI,qword ptr [RSP]
000106d3(3): MOV RSI,RBP
000106d6(5): CALL 0x0000b780
000106db(2): TEST EAX,EAX
000106dd(4): MOV dword ptr [RSP + 0x5c],EAX
000106e1(6): JNZ 0x00010c40
000106e7(8): CMP dword ptr [0xc8 + RSP],0x1
000106ef(2): JZ 0x0001070d
000106f1(9): CMP qword ptr [0x150 + RSP],0x0
000106fa(2): JZ 0x0001070d
000106fc(8): MOV RAX,qword ptr [0x130 + RSP]
00010704(3): CMP dword ptr [RAX],-0x1
00010707(6): JZ 0x00011031
0001070d(8): MOV RBX,qword ptr [0x1b8 + RSP]
00010715(5): MOVZX EAX,byte ptr [RSP + 0x58]
0001071a(11): MOV dword ptr [0x200 + RSP],0x0
00010725(12): MOV qword ptr [0x1e8 + RSP],0x0
00010731(12): MOV qword ptr [0x1e0 + RSP],0x0
0001073d(11): MOV dword ptr [0xd0 + RSP],0x0
00010748(4): MOV R14,qword ptr [RBX + 0x48]
0001074c(3): AND EAX,0x1
0001074f(7): MOV byte ptr [0xce + RSP],AL
00010756(8): MOV RAX,qword ptr [0x168 + RSP]
0001075e(5): CMP byte ptr [R14 + 0x68],0x0
00010763(5): MOV qword ptr [RSP + 0x8],RAX
00010768(6): JS 0x000110e0
0001076e(8): MOV RAX,qword ptr [0x1d8 + RSP]
00010776(3): TEST RAX,RAX
00010779(2): JZ 0x00010792
0001077b(8): CMP qword ptr [0x98 + RBX],0x0
00010783(5): MOV RDI,qword ptr [RSP + 0x8]
00010788(4): MOV qword ptr [RAX + RDI*0x8],R14
0001078c(6): JNZ 0x0001167b
00010792(8): MOVZX EAX,byte ptr [0xcf + RSP]
0001079a(4): MOV byte ptr [RSP + 0x18],AL
0001079e(5): MOVZX EAX,byte ptr [R14 + 0x68]
000107a3(2): TEST AL,0x10
000107a5(9): MOV qword ptr [RSP + 0x20],-0x1
000107ae(9): MOV qword ptr [RSP + 0x30],0x0
000107b7(6): JNZ 0x00011640
000107bd(8): MOV RAX,qword ptr [0xc0 + RSP]
000107c5(8): MOV R8,qword ptr [0x168 + RSP]
000107cd(5): MOV qword ptr [RSP + 0x50],RAX
000107d2(8): LEA RAX,[0xe0 + RSP]
000107da(5): MOV qword ptr [RSP + 0x60],RAX
000107df(8): LEA RAX,[0xd4 + RSP]
000107e7(8): MOV qword ptr [0x80 + RSP],RAX
000107ef(2): JMP 0x0001084c
000107f8(3): CMP R14,R13
000107fb(8): MOV R8,qword ptr [0x168 + RSP]
00010803(3): SETZ AL
00010806(4): AND byte ptr [RSP + 0x18],AL
0001080a(5): MOVZX EAX,byte ptr [R13 + 0x68]
0001080f(6): CMOVZ RBX,qword ptr [RSP + 0x8]
00010815(2): TEST AL,0x10
00010817(5): MOV qword ptr [RSP + 0x8],RBX
0001081c(2): JZ 0x00010849
0001081e(2): TEST AL,AL
00010820(6): JS 0x00010ce0
00010826(4): MOV EAX,dword ptr [RSP + 0x58]
0001082a(5): MOV qword ptr [RSP + 0x20],R8
0001082f(2): TEST EAX,EAX
00010831(6): JZ 0x00010956
00010837(9): MOV qword ptr [RSP + 0x30],0x1
00010840(9): MOV qword ptr [RSP + 0x50],0x0
00010849(3): MOV R14,R13
0001084c(8): CMP qword ptr [0x188 + RSP],R8
00010854(6): JLE 0x00010944
0001085a(8): MOV RAX,qword ptr [0x160 + RSP]
00010862(4): LEA RBX,[R8 + 0x1]
00010866(3): CMP RBX,RAX
00010869(6): JGE 0x00010d10
0001086f(8): MOV RAX,qword ptr [0x150 + RSP]
00010877(3): CMP RBX,RAX
0001087a(6): JGE 0x00011000
00010880(5): TEST byte ptr [R14 + 0x68],0x20
00010885(6): JNZ 0x00010d50
0001088b(4): LEA RAX,[R8 + 0x1]
0001088f(8): MOV qword ptr [0x168 + RSP],RAX
00010897(8): MOV RAX,qword ptr [0x128 + RSP]
0001089f(5): MOVZX R13D,byte ptr [RAX + R8*0x1]
000108a4(4): MOV RAX,qword ptr [R14 + 0x58]
000108a8(3): TEST RAX,RAX
000108ab(6): JZ 0x00010fc0
000108b1(4): MOV R13,qword ptr [RAX + R13*0x8]
000108b5(9): CMP qword ptr [0x1d8 + RSP],0x0
000108be(2): JZ 0x000108d4
000108c0(4): MOV RSI,qword ptr [RSP]
000108c4(5): MOV RDI,qword ptr [RSP + 0x28]
000108c9(3): MOV RDX,R13
000108cc(5): CALL 0x0000fbc0
000108d1(3): MOV R13,RAX
000108d4(3): TEST R13,R13
000108d7(6): JNZ 0x000107f8
000108dd(7): MOV ECX,dword ptr [0xd0 + RSP]
000108e4(8): MOV RDI,qword ptr [0x1d8 + RSP]
000108ec(2): TEST ECX,ECX
000108ee(6): JNZ 0x000111b0
000108f4(3): TEST RDI,RDI
000108f7(2): JZ 0x00010944
000108f9(8): MOVZX EAX,byte ptr [0xce + RSP]
00010901(3): XOR EAX,0x1
00010904(4): TEST byte ptr [RSP + 0x30],AL
00010908(2): JNZ 0x00010944
0001090a(8): MOV RSI,qword ptr [0x1e0 + RSP]
00010912(8): MOV RAX,qword ptr [0x168 + RSP]
0001091a(2): XOR ECX,ECX
0001091c(2): JMP 0x00010933
00010920(5): CMP qword ptr [RDI + RDX*0x8],0x0
00010925(3): MOV RAX,RDX
00010928(5): MOV ECX,0x1
0001092d(6): JNZ 0x00010ca0
00010933(4): LEA RDX,[RAX + 0x1]
00010937(3): CMP RSI,RDX
0001093a(2): JGE 0x00010920
0001093c(2): TEST CL,CL
0001093e(6): JNZ 0x0001180e
00010944(5): MOV RAX,qword ptr [RSP + 0x50]
00010949(3): TEST RAX,RAX
0001094c(2): JZ 0x00010956
0001094e(5): MOV RDI,qword ptr [RSP + 0x8]
00010953(3): ADD qword ptr [RAX],RDI
00010956(5): MOV RAX,qword ptr [RSP + 0x20]
0001095b(4): CMP RAX,-0x1
0001095f(6): JZ 0x00011020
00010965(4): CMP RAX,-0x2
00010969(6): JZ 0x00011160
0001096f(5): MOV RAX,qword ptr [RSP + 0x20]
00010974(8): MOV qword ptr [0x1c8 + RSP],RAX
0001097c(5): MOV RAX,qword ptr [RSP + 0x48]
00010981(4): TEST byte ptr [RAX + 0x38],0x10
00010985(6): JNZ 0x00011140
0001098b(9): CMP qword ptr [0x270 + RSP],0x1
00010994(6): JBE 0x0001128c
0001099a(5): MOV RCX,qword ptr [RSP + 0x20]
0001099f(8): MOV RBX,qword ptr [0x1d8 + RSP]
000109a7(4): MOV RDI,qword ptr [RSP]
000109ab(4): MOV RAX,qword ptr [RBX + RCX*0x8]
000109af(4): MOV RSI,qword ptr [RAX + 0x10]
000109b3(4): LEA RDX,[RAX + 0x18]
000109b7(5): CALL 0x0000b6b0
000109bc(3): MOV R13,RAX
000109bf(8): MOV qword ptr [0x1d0 + RSP],RAX
000109c7(5): MOV RAX,qword ptr [RSP + 0x38]
000109cc(7): TEST byte ptr [0xb0 + RAX],0x1
000109d3(2): JNZ 0x000109f0
000109d5(5): MOV RAX,qword ptr [RSP + 0x38]
000109da(8): CMP qword ptr [0x98 + RAX],0x0
000109e2(6): JZ 0x0001137c
000109e8(8): MOV R13,qword ptr [0x1d0 + RSP]
000109f0(10): MOV RSI,0x1ffffffffffffffe
000109fa(5): CMP qword ptr [RSP + 0x20],RSI
000109ff(8): MOV R15,qword ptr [0x1b8 + RSP]
00010a07(6): JA 0x0001166b
00010a0d(5): MOV RAX,qword ptr [RSP + 0x20]
00010a12(4): ADD RAX,0x1
00010a16(8): LEA RBX,[RAX*0x8]
00010a1e(5): MOV qword ptr [RSP + 0x8],RAX
00010a23(3): MOV RDI,RBX
00010a26(5): CALL 0x00001da0
00010a2b(3): TEST RAX,RAX
00010a2e(3): MOV R12,RAX
00010a31(6): JZ 0x00011160
00010a37(8): CMP qword ptr [0x98 + R15],0x0
00010a3f(6): JZ 0x000112d5
00010a45(3): MOV RDI,RBX
00010a48(5): CALL 0x00001da0
00010a4d(3): TEST RAX,RAX
00010a50(3): MOV RBP,RAX
00010a53(6): JZ 0x00011158
00010a59(5): MOV R14,qword ptr [RSP + 0x20]
00010a5e(8): LEA RBX,[0xe0 + RSP]
00010a66(5): MOV qword ptr [RSP + 0x10],R15
00010a6b(5): MOV qword ptr [RSP + 0x18],RAX
00010a70(5): MOV RAX,qword ptr [RSP + 0x8]
00010a75(2): XOR ESI,ESI
00010a77(3): MOV RDI,RBP
00010a7a(8): LEA RDX,[RAX*0x8]
00010a82(5): CALL 0x00001cb0
00010a87(4): PXOR XMM0,XMM0
00010a8b(8): MOV qword ptr [0xe0 + RSP],R12
00010a93(8): MOV qword ptr [0xe8 + RSP],RBP
00010a9b(8): MOV qword ptr [0xf0 + RSP],R13
00010aa3(3): MOV RSI,RBX
00010aa6(8): MOV qword ptr [0xf8 + RSP],R14
00010aae(4): MOV RDI,qword ptr [RSP]
00010ab2(4): MOVAPS xmmword ptr [RBX + 0x20],XMM0
00010ab6(8): MOV qword ptr [RBX + 0x30],0x0
00010abe(5): CALL 0x0000fdb0
00010ac3(8): MOV RDI,qword ptr [0x110 + RSP]
00010acb(3): MOV R15D,EAX
00010ace(5): CALL 0x00001b00
00010ad3(3): TEST R15D,R15D
00010ad6(6): JNZ 0x000116f4
00010adc(5): CMP qword ptr [R12],0x0
00010ae1(6): JNZ 0x00011753
00010ae7(5): CMP qword ptr [RBP],0x0
00010aec(6): JNZ 0x00011753
00010af2(8): MOV RDX,qword ptr [0x1d8 + RSP]
00010afa(6): NOP word ptr [RAX + RAX*0x1]
00010b00(4): SUB R14,0x1
00010b04(4): CMP R14,-0x1
00010b08(6): JZ 0x000115cb
00010b0e(4): MOV RAX,qword ptr [RDX + R14*0x8]
00010b12(3): TEST RAX,RAX
00010b15(2): JZ 0x00010b00
00010b17(4): TEST byte ptr [RAX + 0x68],0x10
00010b1b(2): JZ 0x00010b00
00010b1d(4): MOV RSI,qword ptr [RAX + 0x10]
00010b21(4): MOV RDI,qword ptr [RSP]
00010b25(4): LEA RDX,[RAX + 0x18]
00010b29(3): MOV RCX,R14
00010b2c(5): CALL 0x0000b6b0
00010b31(3): MOV R13,RAX
00010b34(4): LEA RAX,[R14 + 0x1]
00010b38(5): MOV qword ptr [RSP + 0x8],RAX
00010b3d(5): JMP 0x00010a70
00010b42(5): CMP qword ptr [RSP + 0x70],RBP
00010b47(6): JLE 0x0001067f
00010b4d(5): MOV RAX,qword ptr [RSP + 0x78]
00010b52(8): MOV RDI,qword ptr [0xb0 + RSP]
00010b5a(5): MOV RSI,qword ptr [RSP + 0x68]
00010b5f(4): MOVZX EAX,byte ptr [RAX + RBP*0x1]
00010b63(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
00010b67(4): LEA RAX,[RBP + 0x1]
00010b6b(4): CMP byte ptr [RSI + RDX*0x1],0x0
00010b6f(6): JNZ 0x000106c8
00010b75(5): MOV RSI,qword ptr [RSP + 0x68]
00010b7a(8): MOV RDI,qword ptr [0xb0 + RSP]
00010b82(5): MOV RCX,qword ptr [RSP + 0x70]
00010b87(5): MOV R8,qword ptr [RSP + 0x78]
00010b8c(2): JMP 0x00010ba7
00010b90(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
00010b95(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
00010b99(4): LEA RAX,[RBP + 0x1]
00010b9d(4): CMP byte ptr [RSI + RDX*0x1],0x0
00010ba1(6): JNZ 0x00011801
00010ba7(3): CMP RCX,RAX
00010baa(3): MOV RBP,RAX
00010bad(2): JNZ 0x00010b90
00010baf(5): JMP 0x00010672
00010bb4(8): CMP qword ptr [0x90 + RSP],RBP
00010bbc(6): JG 0x00011059
00010bc2(2): XOR ECX,ECX
00010bc4(3): MOV RAX,RBP
00010bc7(5): MOV RDI,qword ptr [RSP + 0x68]
00010bcc(8): MOV RSI,qword ptr [0xb0 + RSP]
00010bd4(8): MOV R9,qword ptr [0x90 + RSP]
00010bdc(5): MOV R10,qword ptr [RSP + 0x78]
00010be1(8): MOV R8,qword ptr [0x88 + RSP]
00010be9(2): JMP 0x00010c02
00010bf0(4): SUB RAX,0x1
00010bf4(5): MOV ECX,0x1
00010bf9(3): CMP RAX,R9
00010bfc(6): JL 0x000115e0
00010c02(2): XOR EDX,EDX
00010c04(3): CMP R8,RAX
00010c07(2): JLE 0x00010c0e
00010c09(5): MOVZX EDX,byte ptr [R10 + RAX*0x1]
00010c0e(3): TEST RSI,RSI
00010c11(2): JZ 0x00010c17
00010c13(4): MOVZX EDX,byte ptr [RSI + RDX*0x1]
00010c17(4): CMP byte ptr [RDI + RDX*0x1],0x0
00010c1b(2): JZ 0x00010bf0
00010c1d(2): TEST CL,CL
00010c1f(6): JZ 0x000106c8
00010c25(8): MOV qword ptr [0xd8 + RSP],RAX
00010c2d(3): MOV RBP,RAX
00010c30(5): JMP 0x000106c8
00010c38(4): MOV dword ptr [RSP + 0x5c],EAX
00010c3c(4): NOP dword ptr [RAX]
00010c40(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010c48(5): CALL 0x00001b00
00010c4d(5): MOV RAX,qword ptr [RSP + 0x38]
00010c52(8): CMP qword ptr [0x98 + RAX],0x0
00010c5a(6): JNZ 0x00011580
00010c60(4): MOV RDI,qword ptr [RSP]
00010c64(5): CALL 0x000093c0
00010c69(8): MOV RSI,qword ptr [0x228 + RSP]
00010c71(9): XOR RSI,qword ptr FS:[0x28]
00010c7a(4): MOV EAX,dword ptr [RSP + 0x5c]
00010c7e(6): JNZ 0x0001181b
00010c84(7): ADD RSP,0x238
00010c8b(1): POP RBX
00010c8c(1): POP RBP
00010c8d(2): POP R12
00010c8f(2): POP R13
00010c91(2): POP R14
00010c93(2): POP R15
00010c95(1): RET
00010ca0(4): MOV RSI,qword ptr [RSP]
00010ca4(5): MOV RDI,qword ptr [RSP + 0x28]
00010ca9(8): MOV qword ptr [0x168 + RSP],RDX
00010cb1(2): XOR EDX,EDX
00010cb3(5): CALL 0x0000fbc0
00010cb8(7): MOV EDX,dword ptr [0xd0 + RSP]
00010cbf(2): TEST EDX,EDX
00010cc1(6): JNZ 0x000115fd
00010cc7(3): TEST RAX,RAX
00010cca(6): JNZ 0x00011610
00010cd0(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010cd8(5): JMP 0x0001090a
00010ce0(4): MOV RSI,qword ptr [R13 + 0x10]
00010ce4(4): MOV RDI,qword ptr [RSP]
00010ce8(4): LEA RDX,[R13 + 0x18]
00010cec(3): MOV RCX,R8
00010cef(5): MOV qword ptr [RSP + 0x10],R8
00010cf4(5): CALL 0x0000b6b0
00010cf9(3): TEST RAX,RAX
00010cfc(5): MOV R8,qword ptr [RSP + 0x10]
00010d01(6): JZ 0x00010849
00010d07(5): JMP 0x00010826
00010d10(8): CMP RAX,qword ptr [0x178 + RSP]
00010d18(6): JGE 0x0001086f
00010d1e(4): MOV RDI,qword ptr [RSP]
00010d22(3): LEA ESI,[RBX + 0x1]
00010d25(5): CALL 0x00008c10
00010d2a(2): TEST EAX,EAX
00010d2c(7): MOV dword ptr [0xd0 + RSP],EAX
00010d33(6): JNZ 0x00011618
00010d39(5): TEST byte ptr [R14 + 0x68],0x20
00010d3e(8): MOV R8,qword ptr [0x168 + RSP]
00010d46(6): JZ 0x0001088b
00010d4c(4): NOP dword ptr [RAX]
00010d50(5): CMP qword ptr [R14 + 0x10],0x0
00010d55(8): MOV R13,qword ptr [0x1b8 + RSP]
00010d5d(6): JLE 0x0001108b
00010d63(7): LEA RAX,[0xd8 + R13]
00010d6a(3): XOR R12D,R12D
00010d6d(8): MOV qword ptr [0xa0 + RSP],RBX
00010d75(3): MOV RBX,R12
00010d78(3): MOV R12,R8
00010d7b(5): MOV qword ptr [RSP + 0x40],RAX
00010d80(5): JMP 0x00010ed8
00010d88(2): TEST AL,0x1
00010d8a(6): JZ 0x00010eca
00010d90(3): AND ECX,0x8
00010d93(6): JNZ 0x00010eca
00010d99(3): TEST DL,0x20
00010d9c(2): JZ 0x00010da6
00010d9e(2): TEST AL,0x2
00010da0(6): JZ 0x00010eca
00010da6(6): AND EDX,0x80
00010dac(2): JZ 0x00010dc0
00010dae(2): TEST AL,0x8
00010db0(6): JZ 0x00010eca
00010db6(10): NOP word ptr CS:[RAX + RAX*0x1]
00010dc0(4): MOV RCX,qword ptr [RSP]
00010dc4(5): MOV RSI,qword ptr [RSP + 0x40]
00010dc9(3): MOV R8,R12
00010dcc(3): MOV RDX,R15
00010dcf(3): MOV RDI,RBP
00010dd2(5): CALL 0x0000de80
00010dd7(2): TEST EAX,EAX
00010dd9(6): JZ 0x00010ec2
00010ddf(3): MOVSXD RBP,EAX
00010de2(8): ADD RBP,qword ptr [0x168 + RSP]
00010dea(7): CMP dword ptr [0x200 + RSP],EAX
00010df1(8): CMOVGE EAX,dword ptr [0x200 + RSP]
00010df9(4): MOV RDI,qword ptr [RSP]
00010dfd(3): MOV RSI,RBP
00010e00(7): MOV dword ptr [0x200 + RSP],EAX
00010e07(5): CALL 0x00008d60
00010e0c(2): TEST EAX,EAX
00010e0e(7): MOV dword ptr [0xd4 + RSP],EAX
00010e15(6): JNZ 0x000110b0
00010e1b(4): MOV RAX,qword ptr [R13 + 0x18]
00010e1f(8): LEA R12,[RBP*0x8]
00010e27(4): MOV RAX,qword ptr [RAX + R15*0x8]
00010e2b(8): MOV R15,qword ptr [0x1d8 + RSP]
00010e33(4): LEA RDX,[RAX + RAX*0x2]
00010e37(4): MOV RAX,qword ptr [R13 + 0x30]
00010e3b(3): ADD R15,R12
00010e3e(4): LEA RDX,[RAX + RDX*0x8]
00010e42(3): MOV RAX,qword ptr [R15]
00010e45(3): TEST RAX,RAX
00010e48(6): JZ 0x00010f48
00010e4e(4): MOV RSI,qword ptr [RAX + 0x50]
00010e52(5): MOV RDI,qword ptr [RSP + 0x60]
00010e57(5): CALL 0x0000a8c0
00010e5c(2): TEST EAX,EAX
00010e5e(7): MOV dword ptr [0xd4 + RSP],EAX
00010e65(6): JNZ 0x000110b0
00010e6b(7): MOV EDX,dword ptr [0x1c0 + RSP]
00010e72(4): MOV RDI,qword ptr [RSP]
00010e76(4): LEA RSI,[RBP + -0x1]
00010e7a(5): CALL 0x0000b4b0
00010e7f(5): MOV RDX,qword ptr [RSP + 0x60]
00010e84(8): MOV RDI,qword ptr [0x80 + RSP]
00010e8c(2): MOV ECX,EAX
00010e8e(8): ADD R12,qword ptr [0x1d8 + RSP]
00010e96(3): MOV RSI,R13
00010e99(5): CALL 0x0000aa20
00010e9e(8): MOV RDI,qword ptr [0xf0 + RSP]
00010ea6(4): MOV qword ptr [R12],RAX
00010eaa(5): CALL 0x00001b00
00010eaf(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010eb7(5): CMP qword ptr [RDI + RBP*0x8],0x0
00010ebc(6): JZ 0x00010fa1
00010ec2(8): MOV R12,qword ptr [0x168 + RSP]
00010eca(4): ADD RBX,0x1
00010ece(4): CMP RBX,qword ptr [R14 + 0x10]
00010ed2(6): JGE 0x00011080
00010ed8(4): MOV RAX,qword ptr [R14 + 0x18]
00010edc(4): MOV RBP,qword ptr [R13]
00010ee0(4): MOV R15,qword ptr [RAX + RBX*0x8]
00010ee4(3): MOV RAX,R15
00010ee7(4): SHL RAX,0x4
00010eeb(3): ADD RAX,RBP
00010eee(4): TEST byte ptr [RAX + 0xa],0x10
00010ef2(2): JZ 0x00010eca
00010ef4(3): MOV ECX,dword ptr [RAX + 0x8]
00010ef7(6): TEST ECX,0x3ff00
00010efd(4): MOV dword ptr [RSP + 0x10],ECX
00010f01(6): JZ 0x00010dc0
00010f07(7): MOV EDX,dword ptr [0x1c0 + RSP]
00010f0e(4): MOV RDI,qword ptr [RSP]
00010f12(3): MOV RSI,R12
00010f15(5): CALL 0x0000b4b0
00010f1a(4): MOV ECX,dword ptr [RSP + 0x10]
00010f1e(3): SHR ECX,0x8
00010f21(2): MOV EDX,ECX
00010f23(5): AND DX,0x3ff
00010f28(3): TEST CL,0x4
00010f2b(6): JNZ 0x00010d88
00010f31(3): AND ECX,0x8
00010f34(6): JZ 0x00010d99
00010f3a(2): TEST AL,0x1
00010f3c(6): JZ 0x00010d99
00010f42(2): JMP 0x00010eca
00010f48(4): MOVDQU XMM0,xmmword ptr [RDX]
00010f4c(4): LEA RSI,[RBP + -0x1]
00010f50(4): MOV RDI,qword ptr [RSP]
00010f54(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
00010f5c(4): MOV RAX,qword ptr [RDX + 0x10]
00010f60(7): MOV EDX,dword ptr [0x1c0 + RSP]
00010f67(8): MOV qword ptr [0xf0 + RSP],RAX
00010f6f(5): CALL 0x0000b4b0
00010f74(8): MOV RDI,qword ptr [0x80 + RSP]
00010f7c(5): MOV RDX,qword ptr [RSP + 0x60]
00010f81(2): MOV ECX,EAX
00010f83(3): MOV RSI,R13
00010f86(5): CALL 0x0000aa20
00010f8b(8): MOV RDI,qword ptr [0x1d8 + RSP]
00010f93(3): MOV qword ptr [R15],RAX
00010f96(5): CMP qword ptr [RDI + RBP*0x8],0x0
00010f9b(6): JNZ 0x00010ec2
00010fa1(7): MOV EAX,dword ptr [0xd4 + RSP]
00010fa8(2): TEST EAX,EAX
00010faa(6): JZ 0x00010ec2
00010fb0(8): MOV RBX,qword ptr [0xa0 + RSP]
00010fb8(5): JMP 0x000110c0
00010fc0(4): MOV RBP,qword ptr [R14 + 0x60]
00010fc4(3): TEST RBP,RBP
00010fc7(6): JZ 0x00011175
00010fcd(8): MOV RAX,qword ptr [0x168 + RSP]
00010fd5(7): MOV EDX,dword ptr [0x1c0 + RSP]
00010fdc(4): MOV RDI,qword ptr [RSP]
00010fe0(4): LEA RSI,[RAX + -0x1]
00010fe4(5): CALL 0x0000b4b0
00010fe9(2): TEST AL,0x1
00010feb(6): JZ 0x000110a0
00010ff1(8): MOV R13,qword ptr [0x800 + RBP + R13*0x8]
00010ff9(5): JMP 0x000108b5
00011000(8): CMP RAX,qword ptr [0x178 + RSP]
00011008(6): JGE 0x00010880
0001100e(5): JMP 0x00010d1e
00011013(3): MOV RDI,R12
00011016(5): CALL 0x00001b00
0001101b(5): NOP dword ptr [RAX + RAX*0x1]
00011020(4): MOV RDI,qword ptr [RSP]
00011024(5): CALL 0x00009560
00011029(8): MOV RBP,qword ptr [0xd8 + RSP]
00011031(8): MOVSXD RAX,dword ptr [0xac + RSP]
00011039(3): ADD RBP,RAX
0001103c(8): CMP RBP,qword ptr [0x90 + RSP]
00011044(8): MOV qword ptr [0xd8 + RSP],RBP
0001104c(2): JL 0x00011059
0001104e(5): CMP RBP,qword ptr [RSP + 0x70]
00011053(6): JLE 0x000105c8
00011059(8): MOV RDI,qword ptr [0x1d8 + RSP]
00011061(8): MOV dword ptr [RSP + 0x5c],0x1
00011069(5): JMP 0x00010c48
00011070(8): MOV dword ptr [RSP + 0x5c],0x1
00011078(5): JMP 0x00010c69
00011080(8): MOV RBX,qword ptr [0xa0 + RSP]
00011088(3): MOV R8,R12
0001108b(11): MOV dword ptr [0xd0 + RSP],0x0
00011096(5): JMP 0x0001088b
000110a0(5): MOV R13,qword ptr [RBP + R13*0x8]
000110a5(5): JMP 0x000108b5
000110b0(8): MOV RBX,qword ptr [0xa0 + RSP]
000110b8(8): MOV RDI,qword ptr [0x1d8 + RSP]
000110c0(3): TEST RDI,RDI
000110c3(7): MOV dword ptr [0xd0 + RSP],EAX
000110ca(6): JZ 0x000111b0
000110d0(3): XOR R13D,R13D
000110d3(5): JMP 0x000108c0
000110e0(7): MOV EDX,dword ptr [0x1c0 + RSP]
000110e7(4): MOV RDI,qword ptr [RSP]
000110eb(4): LEA RSI,[RAX + -0x1]
000110ef(5): CALL 0x0000b4b0
000110f4(2): TEST AL,0x1
000110f6(6): JZ 0x00011265
000110fc(4): MOV R14,qword ptr [RBX + 0x50]
00011100(3): TEST R14,R14
00011103(6): JNZ 0x0001076e
00011109(7): MOV EAX,dword ptr [0xd0 + RSP]
00011110(3): CMP EAX,0xc
00011113(4): MOV dword ptr [RSP + 0x5c],EAX
00011117(6): JZ 0x00010c40
0001111d(7): LEA RCX,[0x17bf0]
00011124(7): LEA RSI,[0x17608]
0001112b(7): LEA RDI,[0x176bc]
00011132(5): MOV EDX,0x435
00011137(5): CALL 0x00001c90
0001113c(4): NOP dword ptr [RAX]
00011140(5): MOV RAX,qword ptr [RSP + 0x38]
00011145(8): CMP qword ptr [0x98 + RAX],0x0
0001114d(6): JZ 0x0001137c
00011153(5): JMP 0x0001129f
00011158(3): MOV RDI,R12
0001115b(5): CALL 0x00001b00
00011160(8): MOV RDI,qword ptr [0x1d8 + RSP]
00011168(8): MOV dword ptr [RSP + 0x5c],0xc
00011170(5): JMP 0x00010c48
00011175(8): MOV RDI,qword ptr [0x1b8 + RSP]
0001117d(3): MOV RSI,R14
00011180(5): CALL 0x0000c160
00011185(2): TEST AL,AL
00011187(6): JNZ 0x000108a4
0001118d(8): MOV RDI,qword ptr [0x1d8 + RSP]
00011195(11): MOV dword ptr [0xd0 + RSP],0xc
000111a0(3): TEST RDI,RDI
000111a3(6): JNZ 0x000110d0
000111a9(7): NOP dword ptr [RAX]
000111b0(8): MOV dword ptr [RSP + 0x5c],0xc
000111b8(5): JMP 0x00010c48
000111bd(5): MOV RBX,qword ptr [RSP + 0x68]
000111c2(8): MOV R13D,dword ptr [0xac + RSP]
000111ca(8): MOV R14,qword ptr [0x90 + RSP]
000111d2(5): MOV R15,qword ptr [RSP + 0x70]
000111d7(8): MOV R12,qword ptr [0x88 + RSP]
000111df(2): JMP 0x00011228
000111e8(3): CMP R12,RBP
000111eb(3): MOV RAX,RBX
000111ee(2): JLE 0x000111ff
000111f0(8): MOV RAX,qword ptr [0x128 + RSP]
000111f8(4): MOVZX EAX,byte ptr [RAX + RDX*0x1]
000111fc(3): ADD RAX,RBX
000111ff(3): CMP byte ptr [RAX],0x0
00011202(6): JNZ 0x000106c8
00011208(3): MOVSXD RAX,R13D
0001120b(3): ADD RBP,RAX
0001120e(3): CMP RBP,R14
00011211(8): MOV qword ptr [0xd8 + RSP],RBP
00011219(6): JL 0x00011059
0001121f(3): CMP RBP,R15
00011222(6): JG 0x00011059
00011228(3): MOV RDX,RBP
0001122b(8): SUB RDX,qword ptr [0x148 + RSP]
00011233(8): CMP qword ptr [0x158 + RSP],RDX
0001123b(2): JA 0x000111e8
0001123d(7): MOV EDX,dword ptr [0x280 + RSP]
00011244(4): MOV RDI,qword ptr [RSP]
00011248(3): MOV RSI,RBP
0001124b(5): CALL 0x0000b780
00011250(2): TEST EAX,EAX
00011252(6): JNZ 0x00010c38
00011258(3): MOV RDX,RBP
0001125b(8): SUB RDX,qword ptr [0x148 + RSP]
00011263(2): JMP 0x000111e8
00011265(2): TEST EAX,EAX
00011267(6): JZ 0x0001076e
0001126d(2): MOV EDX,EAX
0001126f(3): AND EDX,0x6
00011272(3): CMP EDX,0x6
00011275(6): JZ 0x000116df
0001127b(2): TEST AL,0x2
0001127d(6): JZ 0x00011730
00011283(4): MOV R14,qword ptr [RBX + 0x58]
00011287(5): JMP 0x00011100
0001128c(5): MOV RAX,qword ptr [RSP + 0x38]
00011291(8): CMP qword ptr [0x98 + RAX],0x0
00011299(6): JZ 0x0001137c
0001129f(5): MOV RCX,qword ptr [RSP + 0x20]
000112a4(8): MOV RBX,qword ptr [0x1d8 + RSP]
000112ac(4): MOV RDI,qword ptr [RSP]
000112b0(4): MOV RAX,qword ptr [RBX + RCX*0x8]
000112b4(4): MOV RSI,qword ptr [RAX + 0x10]
000112b8(4): LEA RDX,[RAX + 0x18]
000112bc(5): CALL 0x0000b6b0
000112c1(8): MOV qword ptr [0x1d0 + RSP],RAX
000112c9(5): JMP 0x000109e8
000112ce(2): XOR ECX,ECX
000112d0(5): JMP 0x0001055e
000112d5(4): PXOR XMM0,XMM0
000112d9(8): MOV qword ptr [0xe0 + RSP],RAX
000112e1(4): MOV RDI,qword ptr [RSP]
000112e5(5): MOV RAX,qword ptr [RSP + 0x20]
000112ea(8): LEA RBX,[0xe0 + RSP]
000112f2(12): MOV qword ptr [0xe8 + RSP],0x0
000112fe(8): MOV qword ptr [0xf0 + RSP],R13
00011306(3): MOV RSI,RBX
00011309(12): MOV qword ptr [0x110 + RSP],0x0
00011315(8): MOVAPS xmmword ptr [0x100 + RSP],XMM0
0001131d(8): MOV qword ptr [0xf8 + RSP],RAX
00011325(5): CALL 0x0000fdb0
0001132a(8): MOV RDI,qword ptr [0x110 + RSP]
00011332(4): MOV dword ptr [RSP + 0x8],EAX
00011336(5): CALL 0x00001b00
0001133b(4): MOV EAX,dword ptr [RSP + 0x8]
0001133f(2): TEST EAX,EAX
00011341(6): JNZ 0x00011788
00011347(5): CMP qword ptr [R12],0x0
0001134c(6): JZ 0x00011013
00011352(8): MOV RDI,qword ptr [0x1d8 + RSP]
0001135a(5): CALL 0x00001b00
0001135f(5): MOV RAX,qword ptr [RSP + 0x20]
00011364(8): MOV qword ptr [0x1d8 + RSP],R12
0001136c(8): MOV qword ptr [0x1d0 + RSP],R13
00011374(8): MOV qword ptr [0x1c8 + RSP],RAX
0001137c(9): CMP qword ptr [0x270 + RSP],0x0
00011385(6): JZ 0x00010c40
0001138b(9): CMP qword ptr [0x270 + RSP],0x1
00011394(6): JZ 0x000117b8
0001139a(8): MOV RSI,qword ptr [0xb8 + RSP]
000113a2(8): MOV RCX,qword ptr [0x270 + RSP]
000113aa(7): MOV RDX,-0x1
000113b1(4): SHL RCX,0x4
000113b5(4): LEA RAX,[RSI + 0x10]
000113b9(3): ADD RCX,RSI
000113bc(4): MOV qword ptr [RAX + 0x8],RDX
000113c0(3): MOV qword ptr [RAX],RDX
000113c3(4): ADD RAX,0x10
000113c7(3): CMP RCX,RAX
000113ca(2): JNZ 0x000113bc
000113cc(8): MOV RDI,qword ptr [0xb8 + RSP]
000113d4(8): MOV RAX,qword ptr [0x1c8 + RSP]
000113dc(4): MOV qword ptr [RDI + 0x8],RAX
000113e0(5): MOV RAX,qword ptr [RSP + 0x48]
000113e5(7): MOV qword ptr [RDI],0x0
000113ec(4): TEST byte ptr [RAX + 0x38],0x10
000113f0(6): JNZ 0x000117d3
000113f6(9): CMP qword ptr [0x270 + RSP],0x1
000113ff(6): JZ 0x000117d3
00011405(5): MOV RAX,qword ptr [RSP + 0x38]
0001140a(3): XOR R8D,R8D
0001140d(7): TEST byte ptr [0xb0 + RAX],0x1
00011414(2): JZ 0x00011425
00011416(3): XOR R8D,R8D
00011419(8): CMP qword ptr [0x98 + RAX],0x0
00011421(4): SETG R8B
00011425(8): MOV RBX,qword ptr [0xb8 + RSP]
0001142d(8): MOV RDX,qword ptr [0x270 + RSP]
00011435(4): MOV RSI,qword ptr [RSP]
00011439(5): MOV RDI,qword ptr [RSP + 0x48]
0001143e(3): MOV RCX,RBX
00011441(5): CALL 0x0000e840
00011446(2): TEST EAX,EAX
00011448(6): JNZ 0x0001171d
0001144e(3): MOV RAX,qword ptr [RBX]
00011451(9): MOVZX R11D,byte ptr [0x1ac + RSP]
0001145a(8): MOV R10,qword ptr [0x150 + RSP]
00011462(2): XOR ECX,ECX
00011464(8): MOV R9,qword ptr [0x138 + RSP]
0001146c(8): MOV R8,qword ptr [0x158 + RSP]
00011474(8): MOV RDI,qword ptr [0xd8 + RSP]
0001147c(8): MOV RDX,qword ptr [0xb8 + RSP]
00011484(2): JMP 0x00011489
00011486(3): MOV RAX,qword ptr [RDX]
00011489(4): CMP RAX,-0x1
0001148d(2): JZ 0x000114a9
0001148f(3): TEST R11B,R11B
00011492(4): MOV RSI,qword ptr [RDX + 0x8]
00011496(6): JNZ 0x000117da
0001149c(3): ADD RAX,RDI
0001149f(3): ADD RSI,RDI
000114a2(3): MOV qword ptr [RDX],RAX
000114a5(4): MOV qword ptr [RDX + 0x8],RSI
000114a9(4): ADD RCX,0x1
000114ad(4): ADD RDX,0x10
000114b1(8): CMP RCX,qword ptr [0x270 + RSP]
000114b9(2): JNZ 0x00011486
000114bb(9): CMP qword ptr [0x98 + RSP],0x0
000114c4(2): JLE 0x00011505
000114c6(8): MOV RDX,qword ptr [0x98 + RSP]
000114ce(8): MOV RDI,qword ptr [0xb8 + RSP]
000114d6(3): MOV RAX,RCX
000114d9(4): SHL RAX,0x4
000114dd(3): ADD RDX,RCX
000114e0(5): LEA RAX,[RDI + RAX*0x1 + 0x8]
000114e5(4): SHL RDX,0x4
000114e9(5): LEA RSI,[RDI + RDX*0x1 + 0x8]
000114ee(7): MOV RDX,-0x1
000114f5(4): MOV qword ptr [RAX + -0x8],RDX
000114f9(3): MOV qword ptr [RAX],RDX
000114fc(4): ADD RAX,0x10
00011500(3): CMP RSI,RAX
00011503(2): JNZ 0x000114f5
00011505(5): MOV RAX,qword ptr [RSP + 0x38]
0001150a(8): MOV RDI,qword ptr [0x1d8 + RSP]
00011512(7): MOV R9,qword ptr [0xe0 + RAX]
00011519(3): TEST R9,R9
0001151c(6): JZ 0x00010c48
00011522(8): MOV R10,qword ptr [0xb8 + RSP]
0001152a(3): XOR R8D,R8D
0001152d(4): LEA RDX,[R10 + 0x10]
00011531(2): JMP 0x00011569
00011533(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
00011538(3): CMP RAX,R8
0001153b(2): JZ 0x00011562
0001153d(4): ADD RAX,0x1
00011541(4): SHL RAX,0x4
00011545(4): MOV RAX,qword ptr [R10 + RAX*0x1]
00011549(3): MOV qword ptr [RDX],RAX
0001154c(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
00011551(4): ADD RAX,0x1
00011555(4): SHL RAX,0x4
00011559(5): MOV RAX,qword ptr [R10 + RAX*0x1 + 0x8]
0001155e(4): MOV qword ptr [RDX + 0x8],RAX
00011562(4): ADD RDX,0x10
00011566(3): MOV R8,RSI
00011569(4): LEA RSI,[R8 + 0x1]
0001156d(3): CMP RSI,RCX
00011570(2): JNZ 0x00011533
00011572(5): JMP 0x00010c48
00011580(4): MOV RDI,qword ptr [RSP]
00011584(5): CALL 0x00009560
00011589(8): MOV RDI,qword ptr [0x218 + RSP]
00011591(5): CALL 0x00001b00
00011596(8): MOV RDI,qword ptr [0x1f8 + RSP]
0001159e(5): CALL 0x00001b00
000115a3(5): JMP 0x00010c60
000115a8(5): MOV RAX,qword ptr [RSP + 0x38]
000115ad(7): TEST byte ptr [0xb0 + RAX],0x2
000115b4(6): JNZ 0x00010489
000115ba(12): MOV qword ptr [0x1d8 + RSP],0x0
000115c6(5): JMP 0x000104c5
000115cb(3): MOV RDI,R12
000115ce(5): CALL 0x00001b00
000115d3(3): MOV RDI,RBP
000115d6(5): CALL 0x00001b00
000115db(5): JMP 0x00011020
000115e0(8): MOV qword ptr [0xd8 + RSP],RAX
000115e8(8): MOV RDI,qword ptr [0x1d8 + RSP]
000115f0(8): MOV dword ptr [RSP + 0x5c],0x1
000115f8(5): JMP 0x00010c48
000115fd(3): TEST RAX,RAX
00011600(3): MOV R13,RAX
00011603(6): JNZ 0x000107f8
00011609(5): JMP 0x00010944
00011610(3): MOV R13,RAX
00011613(5): JMP 0x000107f8
00011618(3): CMP EAX,0xc
0001161b(6): JZ 0x00011160
00011621(7): LEA RCX,[0x17bf0]
00011628(7): LEA RSI,[0x17608]
0001162f(7): LEA RDI,[0x176bc]
00011636(5): MOV EDX,0x46c
0001163b(5): CALL 0x00001c90
00011640(5): CMP byte ptr [R14 + 0x68],0x0
00011645(2): JS 0x000116b6
00011647(4): MOV ESI,dword ptr [RSP + 0x58]
0001164b(5): MOV RAX,qword ptr [RSP + 0x8]
00011650(2): TEST ESI,ESI
00011652(5): MOV qword ptr [RSP + 0x20],RAX
00011657(6): JZ 0x00010956
0001165d(9): MOV qword ptr [RSP + 0x30],0x1
00011666(5): JMP 0x000107bd
0001166b(3): MOV RDI,RBX
0001166e(8): MOV dword ptr [RSP + 0x5c],0xc
00011676(5): JMP 0x00010c48
0001167b(4): LEA RBX,[R14 + 0x10]
0001167f(4): LEA RBP,[R14 + 0x18]
00011683(4): MOV RDI,qword ptr [RSP]
00011687(2): XOR ECX,ECX
00011689(3): MOV RDX,RBP
0001168c(3): MOV RSI,RBX
0001168f(5): CALL 0x0000b360
00011694(2): TEST EAX,EAX
00011696(7): MOV dword ptr [0xd0 + RSP],EAX
0001169d(2): JNZ 0x000116e8
0001169f(5): MOVZX EAX,byte ptr [R14 + 0x68]
000116a4(2): TEST AL,0x40
000116a6(6): JNZ 0x00011790
000116ac(5): MOV byte ptr [RSP + 0x18],0x0
000116b1(5): JMP 0x000107a3
000116b6(4): MOV RSI,qword ptr [R14 + 0x10]
000116ba(5): MOV RCX,qword ptr [RSP + 0x8]
000116bf(4): LEA RDX,[R14 + 0x18]
000116c3(4): MOV RDI,qword ptr [RSP]
000116c7(5): CALL 0x0000b6b0
000116cc(3): TEST RAX,RAX
000116cf(5): MOV qword ptr [RSP + 0x30],RAX
000116d4(6): JZ 0x000107bd
000116da(5): JMP 0x00011647
000116df(4): MOV R14,qword ptr [RBX + 0x60]
000116e3(5): JMP 0x00011100
000116e8(2): CDQE
000116ea(5): MOV qword ptr [RSP + 0x20],RAX
000116ef(5): JMP 0x00010956
000116f4(5): MOV R14,qword ptr [RSP + 0x18]
000116f9(3): MOV EAX,R15D
000116fc(3): MOV RDI,R12
000116ff(4): MOV dword ptr [RSP + 0x8],EAX
00011703(5): CALL 0x00001b00
00011708(3): MOV RDI,R14
0001170b(5): CALL 0x00001b00
00011710(4): MOV EAX,dword ptr [RSP + 0x8]
00011714(3): CMP EAX,0x1
00011717(6): JZ 0x00011020
0001171d(8): MOV RDI,qword ptr [0x1d8 + RSP]
00011725(4): MOV dword ptr [RSP + 0x5c],EAX
00011729(5): JMP 0x00010c48
00011730(2): TEST AL,0x4
00011732(6): JZ 0x0001076e
00011738(4): MOV RDX,qword ptr [R14 + 0x50]
0001173c(5): MOV RDI,qword ptr [RSP + 0x28]
00011741(2): MOV ECX,EAX
00011743(3): MOV RSI,RBX
00011746(5): CALL 0x0000aa20
0001174b(3): MOV R14,RAX
0001174e(5): JMP 0x00011100
00011753(5): MOV R15,qword ptr [RSP + 0x10]
00011758(5): MOV RCX,qword ptr [RSP + 0x8]
0001175d(3): MOV RDX,RBP
00011760(3): MOV RSI,R12
00011763(5): MOV qword ptr [RSP + 0x20],R14
00011768(3): MOV RDI,R15
0001176b(5): CALL 0x0000aee0
00011770(3): MOV RDI,RBP
00011773(4): MOV dword ptr [RSP + 0x8],EAX
00011777(5): CALL 0x00001b00
0001177c(4): MOV EAX,dword ptr [RSP + 0x8]
00011780(2): TEST EAX,EAX
00011782(6): JZ 0x00011352
00011788(3): XOR R14D,R14D
0001178b(5): JMP 0x000116fc
00011790(4): MOV RDI,qword ptr [RSP]
00011794(3): MOV RDX,RBP
00011797(3): MOV RSI,RBX
0001179a(5): CALL 0x0000f2d0
0001179f(2): TEST EAX,EAX
000117a1(7): MOV dword ptr [0xd0 + RSP],EAX
000117a8(6): JNZ 0x000116e8
000117ae(5): MOVZX EAX,byte ptr [R14 + 0x68]
000117b3(5): JMP 0x000116ac
000117b8(8): MOV RSI,qword ptr [0xb8 + RSP]
000117c0(8): MOV RAX,qword ptr [0x1c8 + RSP]
000117c8(7): MOV qword ptr [RSI],0x0
000117cf(4): MOV qword ptr [RSI + 0x8],RAX
000117d3(2): XOR EAX,EAX
000117d5(5): JMP 0x00011451
000117da(3): CMP R10,RAX
000117dd(2): JZ 0x000117fc
000117df(4): MOV RAX,qword ptr [R9 + RAX*0x8]
000117e3(3): CMP R10,RSI
000117e6(3): MOV qword ptr [RDX],RAX
000117e9(2): JZ 0x000117f4
000117eb(4): MOV RSI,qword ptr [R9 + RSI*0x8]
000117ef(5): JMP 0x0001149c
000117f4(3): MOV RSI,R8
000117f7(5): JMP 0x0001149c
000117fc(3): MOV RAX,R8
000117ff(2): JMP 0x000117e3
00011801(8): MOV qword ptr [0xd8 + RSP],RBP
00011809(5): JMP 0x000106c8
0001180e(8): MOV qword ptr [0x168 + RSP],RAX
00011816(5): JMP 0x00010944
0001181b(5): CALL 0x00001c20
00011820(2): PUSH R15
00011822(2): PUSH R14
00011824(3): MOV RAX,RDI
00011827(2): PUSH R13
00011829(2): PUSH R12
0001182b(3): MOV R13,RSI
0001182e(1): PUSH RBP
0001182f(1): PUSH RBX
00011830(3): MOV RBP,RDX
00011833(3): MOV RBX,RCX
00011836(8): LEA RCX,[RDX*0x8]
0001183e(7): SUB RSP,0xa8
00011845(7): MOV R12,qword ptr [0x98 + RAX]
0001184c(7): MOV RAX,qword ptr [0xb8 + RAX]
00011853(5): MOV qword ptr [RSP + 0x8],RDI
00011858(5): MOV qword ptr [RSP + 0x18],RCX
0001185d(9): MOV RDI,qword ptr FS:[0x28]
00011866(8): MOV qword ptr [0x98 + RSP],RDI
0001186e(2): XOR EDI,EDI
00011870(4): MOV RDX,qword ptr [RAX + RDX*0x8]
00011874(8): MOV dword ptr [RSP + 0x5c],0x0
0001187c(4): MOV RCX,qword ptr [RBX + 0x8]
00011880(3): TEST RDX,RDX
00011883(6): JZ 0x00011ad8
00011889(4): LEA RDI,[RDX + 0x8]
0001188d(3): TEST RCX,RCX
00011890(5): MOV qword ptr [RSP + 0x10],RDI
00011895(2): JNZ 0x000118e8
00011897(3): MOV RDX,qword ptr [RSI]
0001189a(8): MOV qword ptr [RDX + RBP*0x8],0x0
000118a2(4): MOV RDX,qword ptr [RAX + RBP*0x8]
000118a6(2): XOR EAX,EAX
000118a8(4): TEST byte ptr [RDX + 0x68],0x40
000118ac(6): JNZ 0x0001198f
000118b2(6): NOP word ptr [RAX + RAX*0x1]
000118b8(8): MOV RDI,qword ptr [0x98 + RSP]
000118c0(9): XOR RDI,qword ptr FS:[0x28]
000118c9(6): JNZ 0x0001206b
000118cf(7): ADD RSP,0xa8
000118d6(1): POP RBX
000118d7(1): POP RBP
000118d8(2): POP R12
000118da(2): POP R13
000118dc(2): POP R14
000118de(2): POP R15
000118e0(1): RET
000118e8(5): LEA RDI,[RSP + 0x60]
000118ed(3): MOV RDX,RBX
000118f0(3): MOV RSI,R12
000118f3(8): MOV dword ptr [RSP + 0x60],0x0
000118fb(5): CALL 0x0000ace0
00011900(3): MOV RDX,RAX
00011903(4): MOV EAX,dword ptr [RSP + 0x60]
00011907(2): TEST EAX,EAX
00011909(2): JNZ 0x000118b8
0001190b(4): MOV R15,qword ptr [RDX + 0x38]
0001190f(4): LEA R14,[RDX + 0x38]
00011913(3): TEST R15,R15
00011916(6): JZ 0x00011b20
0001191c(5): MOV RSI,qword ptr [RSP + 0x10]
00011921(3): MOV RDX,R14
00011924(3): MOV RDI,RBX
00011927(5): CALL 0x0000a1e0
0001192c(2): TEST EAX,EAX
0001192e(4): MOV dword ptr [RSP + 0x5c],EAX
00011932(2): JNZ 0x000118b8
00011934(5): CMP qword ptr [R13 + 0x28],0x0
00011939(6): JNZ 0x00011bb0
0001193f(5): MOV R14,qword ptr [RSP + 0x18]
00011944(4): ADD R14,qword ptr [R13]
00011948(5): LEA RDI,[RSP + 0x5c]
0001194d(3): MOV RDX,RBX
00011950(3): MOV RSI,R12
00011953(5): CALL 0x0000ace0
00011958(3): MOV qword ptr [R14],RAX
0001195b(4): MOV EAX,dword ptr [RSP + 0x5c]
0001195f(2): TEST EAX,EAX
00011961(6): JNZ 0x000118b8
00011967(6): CMP qword ptr [RSP + 0x10],0x0
0001196d(6): JZ 0x000118b8
00011973(5): MOV RAX,qword ptr [RSP + 0x8]
00011978(7): MOV RAX,qword ptr [0xb8 + RAX]
0001197f(4): MOV RDX,qword ptr [RAX + RBP*0x8]
00011983(2): XOR EAX,EAX
00011985(4): TEST byte ptr [RDX + 0x68],0x40
00011989(6): JZ 0x000118b8
0001198f(5): MOV RAX,qword ptr [RSP + 0x8]
00011994(2): XOR EBX,EBX
00011996(7): MOV RSI,qword ptr [0xc8 + RAX]
0001199d(3): MOV RDX,RSI
000119a0(3): CMP RBX,RDX
000119a3(2): JGE 0x00011a03
000119a5(4): LEA RAX,[RBX + RDX*0x1]
000119a9(3): MOV RCX,RAX
000119ac(4): SHR RCX,0x3f
000119b0(3): ADD RCX,RAX
000119b3(5): MOV RAX,qword ptr [RSP + 0x8]
000119b8(3): SAR RCX,1
000119bb(7): MOV RDI,qword ptr [0xd8 + RAX]
000119c2(4): LEA RAX,[RCX + RCX*0x4]
000119c6(5): CMP RBP,qword ptr [RDI + RAX*0x8 + 0x8]
000119cb(2): JLE 0x000119fe
000119cd(5): JMP 0x00011b07
000119d8(4): LEA RDX,[RBX + RCX*0x1]
000119dc(3): MOV RAX,RDX
000119df(4): SHR RAX,0x3f
000119e3(3): ADD RAX,RDX
000119e6(3): SAR RAX,1
000119e9(4): LEA RDX,[RAX + RAX*0x4]
000119ed(3): MOV R8,RAX
000119f0(5): CMP RBP,qword ptr [RDI + RDX*0x8 + 0x8]
000119f5(6): JG 0x00011b10
000119fb(3): MOV RCX,RAX
000119fe(3): CMP RBX,RCX
00011a01(2): JL 0x000119d8
00011a03(3): CMP RSI,RBX
00011a06(6): JLE 0x00011b00
00011a0c(4): LEA RAX,[RBX + RBX*0x4]
00011a10(8): LEA RSI,[RAX*0x8]
00011a18(5): MOV RAX,qword ptr [RSP + 0x8]
00011a1d(5): MOV qword ptr [RSP + 0x40],RSI
00011a22(7): MOV RAX,qword ptr [0xd8 + RAX]
00011a29(5): CMP RBP,qword ptr [RAX + RSI*0x1 + 0x8]
00011a2e(6): JNZ 0x00011b00
00011a34(4): CMP RBX,-0x1
00011a38(6): JZ 0x00011b00
00011a3e(5): MOV RAX,qword ptr [RSP + 0x8]
00011a43(9): MOV qword ptr [RSP + 0x60],0x0
00011a4c(7): MOV R12,qword ptr [0x98 + RAX]
00011a53(5): MOV RAX,qword ptr [RSP + 0x10]
00011a58(5): CMP qword ptr [RAX + 0x8],0x0
00011a5d(6): JLE 0x00011b00
00011a63(5): LEA RAX,[RSP + 0x60]
00011a68(9): MOV qword ptr [RSP + 0x20],0x0
00011a71(5): MOV qword ptr [RSP + 0x48],RBX
00011a76(3): MOV R15,R13
00011a79(5): MOV qword ptr [RSP + 0x38],RAX
00011a7e(2): JMP 0x00011aa2
00011a80(2): CMP AL,0x4
00011a82(6): JZ 0x00011e08
00011a88(5): MOV RCX,qword ptr [RSP + 0x10]
00011a8d(6): ADD qword ptr [RSP + 0x20],0x1
00011a93(5): MOV RAX,qword ptr [RSP + 0x20]
00011a98(4): CMP RAX,qword ptr [RCX + 0x8]
00011a9c(6): JGE 0x0001205b
00011aa2(5): MOV RAX,qword ptr [RSP + 0x10]
00011aa7(5): MOV RDI,qword ptr [RSP + 0x20]
00011aac(4): MOV RAX,qword ptr [RAX + 0x10]
00011ab0(4): MOV R14,qword ptr [RAX + RDI*0x8]
00011ab4(3): MOV RAX,R14
00011ab7(4): SHL RAX,0x4
00011abb(4): ADD RAX,qword ptr [R12]
00011abf(4): CMP R14,qword ptr [R15 + 0x10]
00011ac3(4): MOVZX EAX,byte ptr [RAX + 0x8]
00011ac7(2): JNZ 0x00011a80
00011ac9(4): CMP RBP,qword ptr [R15 + 0x18]
00011acd(2): JNZ 0x00011a80
00011acf(2): JMP 0x00011a88
00011ad8(8): LEA R14,[RBP*0x8]
00011ae0(3): ADD R14,qword ptr [RSI]
00011ae3(3): TEST RCX,RCX
00011ae6(6): JNZ 0x00011ba0
00011aec(7): MOV qword ptr [R14],0x0
00011af3(2): XOR EAX,EAX
00011af5(5): JMP 0x000118b8
00011b00(2): XOR EAX,EAX
00011b02(5): JMP 0x000118b8
00011b07(3): MOV R8,RCX
00011b0a(3): MOV RCX,RDX
00011b0d(3): NOP dword ptr [RAX]
00011b10(4): LEA RBX,[R8 + 0x1]
00011b14(3): MOV RDX,RCX
00011b17(5): JMP 0x000119a0
00011b20(4): MOV RDI,qword ptr [RBX + 0x8]
00011b24(8): MOV qword ptr [RDX + 0x40],0x0
00011b2c(5): MOV qword ptr [RSP + 0x20],RDX
00011b31(4): MOV qword ptr [RDX + 0x38],RDI
00011b35(4): SHL RDI,0x3
00011b39(5): CALL 0x00001da0
00011b3e(5): MOV RDX,qword ptr [RSP + 0x20]
00011b43(3): TEST RAX,RAX
00011b46(4): MOV qword ptr [RDX + 0x48],RAX
00011b4a(2): JZ 0x00011b93
00011b4c(5): CMP qword ptr [RBX + 0x8],0x0
00011b51(8): MOV dword ptr [RSP + 0x60],0x0
00011b59(2): JG 0x00011b6e
00011b5b(5): JMP 0x0001191c
00011b60(4): ADD R15,0x1
00011b64(4): CMP R15,qword ptr [RBX + 0x8]
00011b68(6): JGE 0x0001191c
00011b6e(4): MOV RAX,qword ptr [RBX + 0x10]
00011b72(3): MOV RDI,R14
00011b75(4): MOV RAX,qword ptr [RAX + R15*0x8]
00011b79(4): LEA RDX,[RAX + RAX*0x2]
00011b7d(5): MOV RAX,qword ptr [R12 + 0x38]
00011b82(4): LEA RSI,[RAX + RDX*0x8]
00011b86(5): CALL 0x00009bf0
00011b8b(2): TEST EAX,EAX
00011b8d(4): MOV dword ptr [RSP + 0x60],EAX
00011b91(2): JZ 0x00011b60
00011b93(5): MOV EAX,0xc
00011b98(5): JMP 0x000118b8
00011ba0(9): MOV qword ptr [RSP + 0x10],0x0
00011ba9(5): JMP 0x00011948
00011bb0(5): MOV RAX,qword ptr [RSP + 0x8]
00011bb5(7): MOV RAX,qword ptr [0xd8 + RAX]
00011bbc(5): MOV qword ptr [RSP + 0x20],RAX
00011bc1(6): JLE 0x00011c9b
00011bc7(3): XOR R15D,R15D
00011bca(6): NOP word ptr [RAX + RAX*0x1]
00011bd0(4): MOV RAX,qword ptr [R13 + 0x30]
00011bd4(5): MOV RDI,qword ptr [RSP + 0x20]
00011bd9(4): MOV RAX,qword ptr [RAX + R15*0x8]
00011bdd(4): LEA RAX,[RAX + RAX*0x4]
00011be1(4): LEA RDX,[RDI + RAX*0x8]
00011be5(4): CMP RBP,qword ptr [RDX + 0x10]
00011be9(6): JLE 0x00011c8d
00011bef(4): CMP RBP,qword ptr [RDX + 0x8]
00011bf3(6): JG 0x00011c8d
00011bf9(3): MOV RCX,qword ptr [RDX]
00011bfc(4): MOV RAX,qword ptr [R12]
00011c00(4): MOV RSI,qword ptr [RBX + 0x8]
00011c04(4): SHL RCX,0x4
00011c08(4): CMP RBP,qword ptr [RDX + 0x18]
00011c0c(4): MOV R8,qword ptr [RAX + RCX*0x1]
00011c10(6): JZ 0x00011cb0
00011c16(3): XOR R14D,R14D
00011c19(3): TEST RSI,RSI
00011c1c(2): JLE 0x00011c8d
00011c1e(5): MOV qword ptr [RSP + 0x28],RBP
00011c23(3): MOV RBP,R8
00011c26(2): JMP 0x00011c3e
00011c30(4): ADD R14,0x1
00011c34(4): CMP R14,qword ptr [RBX + 0x8]
00011c38(2): JGE 0x00011c88
00011c3a(4): MOV RAX,qword ptr [R12]
00011c3e(4): MOV RDX,qword ptr [RBX + 0x10]
00011c42(4): MOV RSI,qword ptr [RDX + R14*0x8]
00011c46(3): MOV RDX,RSI
00011c49(4): SHL RDX,0x4
00011c4d(3): ADD RAX,RDX
00011c50(4): MOVZX EDX,byte ptr [RAX + 0x8]
00011c54(3): SUB EDX,0x8
00011c57(3): CMP EDX,0x1
00011c5a(2): JA 0x00011c30
00011c5c(3): CMP RBP,qword ptr [RAX]
00011c5f(2): JNZ 0x00011c30
00011c61(5): MOV RCX,qword ptr [RSP + 0x10]
00011c66(3): MOV RDX,RBX
00011c69(3): MOV RDI,R12
00011c6c(5): CALL 0x0000bf20
00011c71(2): TEST EAX,EAX
00011c73(6): JNZ 0x000118b8
00011c79(4): ADD R14,0x1
00011c7d(4): CMP R14,qword ptr [RBX + 0x8]
00011c81(2): JL 0x00011c3a
00011c83(5): NOP dword ptr [RAX + RAX*0x1]
00011c88(5): MOV RBP,qword ptr [RSP + 0x28]
00011c8d(4): ADD R15,0x1
00011c91(4): CMP R15,qword ptr [R13 + 0x28]
00011c95(6): JL 0x00011bd0
00011c9b(8): MOV dword ptr [RSP + 0x5c],0x0
00011ca3(5): JMP 0x0001193f
00011cb0(3): TEST RSI,RSI
00011cb3(2): JLE 0x00011c8d
00011cb5(4): MOV R10,qword ptr [RBX + 0x10]
00011cb9(7): MOV R9,-0x1
00011cc0(4): LEA R11,[R10 + RSI*0x8]
00011cc4(3): MOV RCX,R10
00011cc7(3): MOV RSI,R9
00011cca(2): JMP 0x00011ce6
00011cd0(4): CMP R14D,0x9
00011cd4(2): JNZ 0x00011cdd
00011cd6(3): CMP R8,qword ptr [RDX]
00011cd9(4): CMOVZ R9,RDI
00011cdd(4): ADD RCX,0x8
00011ce1(3): CMP R11,RCX
00011ce4(2): JZ 0x00011d0e
00011ce6(3): MOV RDI,qword ptr [RCX]
00011ce9(3): MOV RDX,RDI
00011cec(4): SHL RDX,0x4
00011cf0(3): ADD RDX,RAX
00011cf3(5): MOVZX R14D,byte ptr [RDX + 0x8]
00011cf8(4): CMP R14D,0x8
00011cfc(2): JNZ 0x00011cd0
00011cfe(3): CMP R8,qword ptr [RDX]
00011d01(4): CMOVZ RSI,RDI
00011d05(4): ADD RCX,0x8
00011d09(3): CMP R11,RCX
00011d0c(2): JNZ 0x00011ce6
00011d0e(3): TEST RSI,RSI
00011d11(3): MOV R14,R9
00011d14(5): MOV qword ptr [RSP + 0x28],R9
00011d19(6): JS 0x00011de0
00011d1f(5): MOV RCX,qword ptr [RSP + 0x10]
00011d24(3): MOV RDX,RBX
00011d27(3): MOV RDI,R12
00011d2a(5): CALL 0x0000bf20
00011d2f(2): TEST EAX,EAX
00011d31(6): JNZ 0x000118b8
00011d37(3): TEST R14,R14
00011d3a(6): JS 0x00011c8d
00011d40(5): CMP qword ptr [RBX + 0x8],0x0
00011d45(6): JLE 0x00011c8d
00011d4b(4): MOV R10,qword ptr [RBX + 0x10]
00011d4f(3): XOR R14D,R14D
00011d52(5): MOV qword ptr [RSP + 0x30],RBP
00011d57(3): MOV RBP,R14
00011d5a(5): MOV R14,qword ptr [RSP + 0x28]
00011d5f(2): JMP 0x00011d7a
00011d68(4): ADD RBP,0x1
00011d6c(4): CMP RBP,qword ptr [RBX + 0x8]
00011d70(6): JGE 0x00011df8
00011d76(4): MOV R10,qword ptr [RBX + 0x10]
00011d7a(4): MOV R10,qword ptr [R10 + RBP*0x8]
00011d7e(5): MOV RAX,qword ptr [R12 + 0x38]
00011d83(3): MOV RDX,R14
00011d86(4): LEA R9,[R10 + R10*0x2]
00011d8a(4): SHL R9,0x3
00011d8e(3): ADD RAX,R9
00011d91(4): MOV RDI,qword ptr [RAX + 0x8]
00011d95(4): LEA RSI,[RAX + 0x10]
00011d99(5): CALL 0x000096d0
00011d9e(3): TEST RAX,RAX
00011da1(2): JNZ 0x00011d68
00011da3(5): ADD R9,qword ptr [R12 + 0x30]
00011da8(4): MOV RDI,qword ptr [R9 + 0x8]
00011dac(4): LEA RSI,[R9 + 0x10]
00011db0(5): CALL 0x000096d0
00011db5(3): TEST RAX,RAX
00011db8(2): JNZ 0x00011d68
00011dba(5): MOV RCX,qword ptr [RSP + 0x10]
00011dbf(3): MOV RDX,RBX
00011dc2(3): MOV RSI,R10
00011dc5(3): MOV RDI,R12
00011dc8(5): CALL 0x0000bf20
00011dcd(2): TEST EAX,EAX
00011dcf(6): JNZ 0x000118b8
00011dd5(4): SUB RBP,0x1
00011dd9(2): JMP 0x00011d68
00011de0(6): CMP qword ptr [RSP + 0x28],0x0
00011de6(6): JNS 0x00011d4f
00011dec(5): JMP 0x00011c8d
00011df8(5): MOV RBP,qword ptr [RSP + 0x30]
00011dfd(5): JMP 0x00011c8d
00011e08(5): MOV RAX,qword ptr [RSP + 0x8]
00011e0d(5): MOV R13,qword ptr [RSP + 0x40]
00011e12(5): MOV RBX,qword ptr [RSP + 0x48]
00011e17(7): ADD R13,qword ptr [0xd8 + RAX]
00011e1e(4): LEA RAX,[R14 + R14*0x2]
00011e22(4): SHL RAX,0x3
00011e26(5): MOV qword ptr [RSP + 0x30],RAX
00011e2b(8): LEA RAX,[R14*0x8]
00011e33(5): MOV qword ptr [RSP + 0x28],RAX
00011e38(3): MOV RAX,R15
00011e3b(3): MOV R15,R13
00011e3e(3): MOV R13,RBX
00011e41(3): MOV RBX,RAX
00011e44(5): JMP 0x00011fae
00011e50(4): MOV RAX,qword ptr [R15 + 0x18]
00011e54(4): SUB RAX,qword ptr [R15 + 0x10]
00011e58(3): TEST RAX,RAX
00011e5b(5): LEA R9,[RBP + RAX*0x1]
00011e60(6): JZ 0x00011fc0
00011e66(5): MOV RAX,qword ptr [R12 + 0x18]
00011e6b(5): MOV RSI,qword ptr [RSP + 0x28]
00011e70(4): MOV R10,qword ptr [RAX + RSI*0x1]
00011e74(4): CMP R9,qword ptr [RBX + 0x18]
00011e78(6): JG 0x00011fb7
00011e7e(3): MOV RAX,qword ptr [RBX]
00011e81(4): MOV RAX,qword ptr [RAX + R9*0x8]
00011e85(3): TEST RAX,RAX
00011e88(6): JZ 0x00011fb7
00011e8e(4): MOV RDI,qword ptr [RAX + 0x10]
00011e92(4): LEA RSI,[RAX + 0x18]
00011e96(3): MOV RDX,R10
00011e99(5): CALL 0x000096d0
00011e9e(3): TEST RAX,RAX
00011ea1(6): JZ 0x00011fb7
00011ea7(4): SUB RSP,0x8
00011eab(4): LEA RDX,[RBX + 0x30]
00011eaf(4): LEA RSI,[RBX + 0x28]
00011eb3(2): PUSH R9
00011eb5(5): MOV RDI,qword ptr [RSP + 0x18]
00011eba(3): MOV RCX,R14
00011ebd(3): MOV R9,R10
00011ec0(3): MOV R8,RBP
00011ec3(5): CALL 0x00009980
00011ec8(2): TEST AL,AL
00011eca(1): POP RDX
00011ecb(1): POP RCX
00011ecc(6): JNZ 0x00011fb7
00011ed2(6): CMP qword ptr [RSP + 0x60],0x0
00011ed8(6): JZ 0x00011fe8
00011ede(5): MOV RAX,qword ptr [RSP + 0x38]
00011ee3(3): MOV RSI,R13
00011ee6(5): MOV qword ptr [RSP + 0x70],R14
00011eeb(5): MOV qword ptr [RSP + 0x78],RBP
00011ef0(4): LEA RDI,[RAX + 0x20]
00011ef4(5): CALL 0x00008190
00011ef9(2): TEST AL,AL
00011efb(6): JZ 0x00012054
00011f01(5): MOV RDI,qword ptr [RSP + 0x18]
00011f06(5): MOV RAX,qword ptr [RSP + 0x60]
00011f0b(5): MOV RSI,qword ptr [RSP + 0x38]
00011f10(4): MOV R15,qword ptr [RAX + RDI*0x1]
00011f14(5): MOV RDI,qword ptr [RSP + 0x8]
00011f19(5): CALL 0x0000fdb0
00011f1e(2): TEST EAX,EAX
00011f20(6): JNZ 0x0001202e
00011f26(4): MOV RSI,qword ptr [RBX + 0x8]
00011f2a(5): MOV RDX,qword ptr [RSP + 0x60]
00011f2f(3): TEST RSI,RSI
00011f32(2): JZ 0x00011f4d
00011f34(4): LEA RCX,[RBP + 0x1]
00011f38(3): MOV RDI,R12
00011f3b(5): CALL 0x0000aee0
00011f40(2): TEST EAX,EAX
00011f42(6): JNZ 0x0001202e
00011f48(5): MOV RDX,qword ptr [RSP + 0x60]
00011f4d(5): MOV R11,qword ptr [RSP + 0x38]
00011f52(5): MOV RAX,qword ptr [RSP + 0x18]
00011f57(8): MOV RDI,qword ptr [0x88 + RSP]
00011f5f(4): LEA R9,[R11 + 0x30]
00011f63(4): MOV qword ptr [RDX + RAX*0x1],R15
00011f67(3): MOV RDX,R13
00011f6a(3): MOV RSI,R9
00011f6d(5): CALL 0x000096d0
00011f72(4): SUB RAX,0x1
00011f76(3): MOV RDX,RAX
00011f79(2): JS 0x00011f87
00011f7b(4): LEA RDI,[R11 + 0x28]
00011f7f(3): MOV RSI,R9
00011f82(5): CALL 0x00009850
00011f87(5): MOV RCX,qword ptr [RSP + 0x8]
00011f8c(5): LEA RAX,[R13 + R13*0x4]
00011f91(7): MOV RDX,qword ptr [0xd8 + RCX]
00011f98(4): LEA RAX,[RDX + RAX*0x8]
00011f9c(4): NOP dword ptr [RAX]
00011fa0(4): ADD R13,0x1
00011fa4(4): CMP byte ptr [RAX + 0x20],0x0
00011fa8(4): LEA R15,[RAX + 0x28]
00011fac(2): JZ 0x00011fe0
00011fae(3): CMP R14,qword ptr [R15]
00011fb1(6): JZ 0x00011e50
00011fb7(3): MOV RAX,R15
00011fba(2): JMP 0x00011fa0
00011fc0(5): MOV RAX,qword ptr [R12 + 0x28]
00011fc5(5): MOV RDI,qword ptr [RSP + 0x30]
00011fca(5): MOV RAX,qword ptr [RAX + RDI*0x1 + 0x10]
00011fcf(3): MOV R10,qword ptr [RAX]
00011fd2(5): JMP 0x00011e74
00011fe0(3): MOV R15,RBX
00011fe3(5): JMP 0x00011a88
00011fe8(4): MOV RAX,qword ptr [RBX + 0x30]
00011fec(4): LEA RSI,[RBX + 0x20]
00011ff0(4): MOVDQA XMM0,xmmword ptr [RBX]
00011ff4(8): MOV qword ptr [0x90 + RSP],RAX
00011ffc(5): MOV RAX,qword ptr [RSP + 0x38]
00012001(5): MOVAPS xmmword ptr [RSP + 0x60],XMM0
00012006(4): LEA RDI,[RAX + 0x20]
0001200a(5): MOVDQA XMM0,xmmword ptr [RBX + 0x10]
0001200f(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
00012014(5): MOVDQA XMM0,xmmword ptr [RBX + 0x20]
00012019(8): MOVAPS xmmword ptr [0x80 + RSP],XMM0
00012021(5): CALL 0x0000a830
00012026(2): TEST EAX,EAX
00012028(6): JZ 0x00011ede
0001202e(6): CMP qword ptr [RSP + 0x60],0x0
00012034(6): JZ 0x000118b8
0001203a(8): MOV RDI,qword ptr [0x90 + RSP]
00012042(4): MOV dword ptr [RSP + 0x8],EAX
00012046(5): CALL 0x00001b00
0001204b(4): MOV EAX,dword ptr [RSP + 0x8]
0001204f(5): JMP 0x000118b8
00012054(5): MOV EAX,0xc
00012059(2): JMP 0x0001202e
0001205b(6): CMP qword ptr [RSP + 0x60],0x0
00012061(6): JZ 0x00011b00
00012067(2): XOR EAX,EAX
00012069(2): JMP 0x0001203a
0001206b(5): CALL 0x00001c20
00012070(2): PUSH R14
00012072(2): PUSH R13
00012074(3): MOV R10,RSI
00012077(2): PUSH R12
00012079(1): PUSH RBP
0001207a(3): MOVSXD R11,ECX
0001207d(1): PUSH RBX
0001207e(3): MOV RBP,RDX
00012081(3): MOV RBX,RDI
00012084(4): SUB RSP,0x20
00012088(4): MOV R12,qword ptr [RSI + 0x48]
0001208c(9): MOV RAX,qword ptr FS:[0x28]
00012095(5): MOV qword ptr [RSP + 0x18],RAX
0001209a(2): XOR EAX,EAX
0001209c(7): CMP dword ptr [0x90 + RSI],0x1
000120a3(2): JZ 0x000120f8
000120a5(3): MOV RSI,R12
000120a8(3): MOV RDI,R10
000120ab(5): CALL 0x00009620
000120b0(3): CMP EAX,0x1
000120b3(2): JLE 0x000120f8
000120b5(4): MOV RDX,qword ptr [R10 + 0x10]
000120b9(2): CDQE
000120bb(6): MOV dword ptr [RBX],0x1
000120c1(3): ADD RAX,R12
000120c4(4): MOV EDX,dword ptr [RDX + R12*0x4]
000120c8(3): MOV dword ptr [RBX + 0x8],EDX
000120cb(4): MOV qword ptr [R10 + 0x48],RAX
000120cf(2): XOR EAX,EAX
000120d1(5): MOV RCX,qword ptr [RSP + 0x18]
000120d6(9): XOR RCX,qword ptr FS:[0x28]
000120df(6): JNZ 0x000122c8
000120e5(4): ADD RSP,0x20
000120e9(1): POP RBX
000120ea(1): POP RBP
000120eb(2): POP R12
000120ed(2): POP R13
000120ef(2): POP R14
000120f1(1): RET
000120f8(4): MOVZX EAX,byte ptr [RBP + 0x8]
000120fc(3): ADD R11,R12
000120ff(4): MOV qword ptr [R10 + 0x48],R11
00012103(2): MOV EDX,EAX
00012105(3): AND EDX,0xfffffffb
00012108(3): CMP DL,0x1a
0001210b(2): JZ 0x00012130
0001210d(2): CMP AL,0x1c
0001210f(2): JZ 0x00012130
00012111(2): CMP AL,0x16
00012113(2): JNZ 0x0001211e
00012115(3): TEST R9B,R9B
00012118(6): JZ 0x00012262
0001211e(4): MOVZX EAX,byte ptr [RBP]
00012122(6): MOV dword ptr [RBX],0x0
00012128(3): MOV byte ptr [RBX + 0x8],AL
0001212b(2): XOR EAX,EAX
0001212d(2): JMP 0x000120d1
00012130(4): MOV R12,qword ptr [R10 + 0x68]
00012134(3): CMP R11,R12
00012137(6): JGE 0x00012258
0001213d(5): MOVZX R13D,byte ptr [RBP]
00012142(3): XOR R8D,R8D
00012145(2): JMP 0x00012172
00012150(4): MOV RAX,qword ptr [RBX + 0x8]
00012154(4): MOV byte ptr [RAX + R8*0x1],R9B
00012158(4): ADD R8,0x1
0001215c(4): CMP R8,0x20
00012160(6): JZ 0x00012258
00012166(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001216a(4): MOV R11,qword ptr [R10 + 0x48]
0001216e(4): MOV R12,qword ptr [R10 + 0x68]
00012172(2): CMP AL,0x1e
00012174(3): MOVSXD R14,R8D
00012177(2): JZ 0x000121e0
00012179(4): MOV RDX,qword ptr [R10 + 0x8]
0001217d(4): LEA RAX,[R11 + 0x1]
00012181(4): MOV qword ptr [R10 + 0x48],RAX
00012185(5): MOVZX R9D,byte ptr [RDX + R11*0x1]
0001218a(3): CMP RAX,R12
0001218d(6): JGE 0x00012258
00012193(3): CMP R13B,R9B
00012196(2): JNZ 0x00012150
00012198(4): MOV RDX,qword ptr [R10 + 0x8]
0001219c(4): CMP byte ptr [RDX + RAX*0x1],0x5d
000121a0(2): JNZ 0x00012150
000121a2(4): ADD RAX,0x1
000121a6(4): MOV qword ptr [R10 + 0x48],RAX
000121aa(4): MOV RAX,qword ptr [RBX + 0x8]
000121ae(5): MOV byte ptr [RAX + R14*0x1],0x0
000121b3(4): MOVZX EAX,byte ptr [RBP + 0x8]
000121b7(2): CMP AL,0x1c
000121b9(6): JZ 0x000122bb
000121bf(2): CMP AL,0x1e
000121c1(6): JZ 0x000122ae
000121c7(2): CMP AL,0x1a
000121c9(6): JZ 0x000122a1
000121cf(2): XOR EAX,EAX
000121d1(5): JMP 0x000120d1
000121e0(8): CMP byte ptr [0x8b + R10],0x0
000121e8(2): JZ 0x00012179
000121ea(8): CMP byte ptr [0x8c + R10],0x0
000121f2(6): JZ 0x00012288
000121f8(4): CMP R11,qword ptr [R10 + 0x30]
000121fc(2): JZ 0x0001220d
000121fe(4): MOV RAX,qword ptr [R10 + 0x10]
00012202(5): CMP dword ptr [RAX + R11*0x4],-0x1
00012207(6): JZ 0x00012179
0001220d(4): MOV RAX,qword ptr [R10 + 0x18]
00012211(4): MOV RAX,qword ptr [RAX + R11*0x8]
00012215(3): ADD RAX,qword ptr [R10]
00012218(4): ADD RAX,qword ptr [R10 + 0x28]
0001221c(4): MOVZX R9D,byte ptr [RAX]
00012220(4): TEST R9B,0x80
00012224(6): JNZ 0x00012179
0001222a(8): CMP dword ptr [0x90 + R10],0x1
00012232(5): MOV EAX,0x1
00012237(2): JZ 0x00012246
00012239(3): MOV RSI,R11
0001223c(3): MOV RDI,R10
0001223f(5): CALL 0x00009620
00012244(2): CDQE
00012246(3): ADD RAX,R11
00012249(4): MOV qword ptr [R10 + 0x48],RAX
0001224d(5): JMP 0x0001218a
00012258(5): MOV EAX,0x7
0001225d(5): JMP 0x000120d1
00012262(3): MOV RDI,RSP
00012265(3): MOV RDX,R8
00012268(3): MOV RSI,R10
0001226b(5): CALL 0x00007bc0
00012270(5): CMP byte ptr [RSP + 0x8],0x15
00012275(5): MOV EAX,0xb
0001227a(6): JZ 0x0001211e
00012280(5): JMP 0x000120d1
00012288(4): LEA RAX,[R11 + 0x1]
0001228c(3): ADD R11,qword ptr [R10]
0001228f(4): MOV RDX,qword ptr [R10 + 0x28]
00012293(4): MOV qword ptr [R10 + 0x48],RAX
00012297(5): MOVZX R9D,byte ptr [R11 + RDX*0x1]
0001229c(5): JMP 0x0001218a
000122a1(6): MOV dword ptr [RBX],0x3
000122a7(2): XOR EAX,EAX
000122a9(5): JMP 0x000120d1
000122ae(6): MOV dword ptr [RBX],0x4
000122b4(2): XOR EAX,EAX
000122b6(5): JMP 0x000120d1
000122bb(6): MOV dword ptr [RBX],0x2
000122c1(2): XOR EAX,EAX
000122c3(5): JMP 0x000120d1
000122c8(5): CALL 0x00001c20
000122cd(3): NOP dword ptr [RAX]
000122d0(2): PUSH R15
000122d2(2): PUSH R14
000122d4(2): PUSH R13
000122d6(2): PUSH R12
000122d8(1): PUSH RBP
000122d9(1): PUSH RBX
000122da(3): MOV RBP,RDI
000122dd(4): SUB RSP,0x38
000122e1(4): MOV R14,qword ptr [RSI + 0x48]
000122e5(9): MOV RAX,qword ptr FS:[0x28]
000122ee(5): MOV qword ptr [RSP + 0x28],RAX
000122f3(2): XOR EAX,EAX
000122f5(4): CMP qword ptr [RSI + 0x68],R14
000122f9(6): JLE 0x00012390
000122ff(5): MOVZX R13D,byte ptr [RDI + 0xa]
00012304(3): MOV R15,RDX
00012307(4): MOV RDX,qword ptr [RSI + 0x8]
0001230b(3): MOV RBX,RSI
0001230e(5): MOVZX R12D,byte ptr [RDX + R14*0x1]
00012313(4): AND R13D,0xffffff9f
00012317(4): MOV byte ptr [RDI + 0xa],R13B
0001231b(6): MOV EAX,dword ptr [0x90 + RSI]
00012321(3): MOV byte ptr [RDI],R12B
00012324(3): CMP EAX,0x1
00012327(6): JLE 0x000123c0
0001232d(4): CMP R14,qword ptr [RSI + 0x30]
00012331(6): JZ 0x000124d0
00012337(4): MOV RCX,qword ptr [RSI + 0x10]
0001233b(4): MOV ECX,dword ptr [RCX + R14*0x4]
0001233f(3): CMP ECX,-0x1
00012342(6): JZ 0x00012420
00012348(4): CMP R12B,0x5c
0001234c(6): JZ 0x00012440
00012352(4): MOV byte ptr [RDI + 0x8],0x1
00012356(2): MOV EDI,ECX
00012358(5): MOV qword ptr [RSP + 0x8],RDX
0001235d(3): MOV dword ptr [RSP],ECX
00012360(5): CALL 0x00001d90
00012365(3): MOV ECX,dword ptr [RSP]
00012368(2): TEST EAX,EAX
0001236a(3): SETNZ AL
0001236d(3): CMP ECX,0x5f
00012370(3): SETZ CL
00012373(2): OR EAX,ECX
00012375(3): SHL EAX,0x6
00012378(3): OR R13D,EAX
0001237b(4): MOV byte ptr [RBP + 0xa],R13B
0001237f(5): MOV RDX,qword ptr [RSP + 0x8]
00012384(2): JMP 0x000123fc
00012390(4): MOV byte ptr [RDI + 0x8],0x2
00012394(5): MOV RDI,qword ptr [RSP + 0x28]
00012399(9): XOR RDI,qword ptr FS:[0x28]
000123a2(6): JNZ 0x000129c8
000123a8(4): ADD RSP,0x38
000123ac(1): POP RBX
000123ad(1): POP RBP
000123ae(2): POP R12
000123b0(2): POP R13
000123b2(2): POP R14
000123b4(2): POP R15
000123b6(1): RET
000123c0(4): CMP R12B,0x5c
000123c4(2): JZ 0x00012440
000123c6(4): MOV byte ptr [RBP + 0x8],0x1
000123ca(4): MOV qword ptr [RSP],RDX
000123ce(5): CALL 0x00001f50
000123d3(3): MOV RSI,qword ptr [RAX]
000123d6(4): MOVZX ECX,R12B
000123da(4): MOVZX EAX,word ptr [RSI + RCX*0x2]
000123de(4): SHR AX,0x3
000123e2(3): AND EAX,0x1
000123e5(4): CMP R12B,0x5f
000123e9(3): SETZ CL
000123ec(2): OR EAX,ECX
000123ee(3): SHL EAX,0x6
000123f1(3): OR R13D,EAX
000123f4(4): MOV byte ptr [RBP + 0xa],R13B
000123f8(4): MOV RDX,qword ptr [RSP]
000123fc(4): SUB R12D,0xa
00012400(4): CMP R12B,0x73
00012404(6): JA 0x0001253c
0001240a(7): LEA RCX,[0x17774]
00012411(4): MOVZX R12D,R12B
00012415(4): MOVSXD RAX,dword ptr [RCX + R12*0x4]
00012419(3): ADD RAX,RCX
0001241c(2): JMP RAX
00012420(4): OR R13D,0x20
00012424(4): MOV byte ptr [RDI + 0x8],0x1
00012428(5): MOV EAX,0x1
0001242d(4): MOV byte ptr [RDI + 0xa],R13B
00012431(5): JMP 0x00012394
00012440(4): LEA RSI,[R14 + 0x1]
00012444(4): CMP RSI,qword ptr [RBX + 0x58]
00012448(6): JGE 0x000124f0
0001244e(7): CMP byte ptr [0x8b + RBX],0x0
00012455(6): JNZ 0x000128e0
0001245b(6): MOVZX EDI,byte ptr [RDX + R14*0x1 + 0x1]
00012461(3): MOV R12D,EDI
00012464(4): MOV dword ptr [RSP + 0x8],EDI
00012468(3): CMP EAX,0x1
0001246b(4): MOV byte ptr [RBP],R12B
0001246f(4): MOV byte ptr [RBP + 0x8],0x1
00012473(6): JLE 0x000128c0
00012479(4): MOV RAX,qword ptr [RBX + 0x10]
0001247d(4): MOV R8D,dword ptr [RAX + RSI*0x4]
00012481(3): MOV EDI,R8D
00012484(4): MOV dword ptr [RSP],R8D
00012488(5): CALL 0x00001d90
0001248d(4): MOV R8D,dword ptr [RSP]
00012491(2): TEST EAX,EAX
00012493(3): SETNZ AL
00012496(4): CMP R8D,0x5f
0001249a(3): SETZ DL
0001249d(5): LEA ECX,[R12 + -0x27]
000124a2(2): OR EAX,EDX
000124a4(3): SHL EAX,0x6
000124a7(3): OR R13D,EAX
000124aa(3): CMP CL,0x56
000124ad(4): MOV byte ptr [RBP + 0xa],R13B
000124b1(6): JA 0x000128b5
000124b7(7): LEA RDX,[0x17944]
000124be(3): MOVZX ECX,CL
000124c1(4): MOVSXD RAX,dword ptr [RDX + RCX*0x4]
000124c5(3): ADD RAX,RDX
000124c8(2): JMP RAX
000124d0(4): CMP R12B,0x5c
000124d4(6): JZ 0x00012440
000124da(4): MOV RAX,qword ptr [RBX + 0x10]
000124de(4): MOV byte ptr [RBP + 0x8],0x1
000124e2(4): MOV ECX,dword ptr [RAX + R14*0x4]
000124e6(5): JMP 0x00012356
000124f0(4): MOV byte ptr [RBP + 0x8],0x24
000124f4(5): MOV EAX,0x1
000124f9(5): JMP 0x00012394
00012500(7): AND R15D,0x1200
00012507(5): MOV EAX,0x1
0001250c(7): CMP R15,0x1200
00012513(6): JNZ 0x00012394
00012519(4): MOV byte ptr [RBP + 0x8],0x18
0001251d(5): JMP 0x00012394
00012528(7): AND R15D,0x8400
0001252f(7): CMP R15,0x8000
00012536(6): JZ 0x00012612
0001253c(5): MOV EAX,0x1
00012541(5): JMP 0x00012394
00012550(7): AND R15D,0x1200
00012557(5): MOV EAX,0x1
0001255c(7): CMP R15,0x1200
00012563(6): JNZ 0x00012394
00012569(4): MOV byte ptr [RBP + 0x8],0x17
0001256d(5): JMP 0x00012394
00012578(7): TEST R15D,0x800008
0001257f(2): JNZ 0x0001258a
00012581(3): TEST R14,R14
00012584(6): JNZ 0x0001294a
0001258a(4): MOV byte ptr [RBP + 0x8],0xc
0001258e(7): MOV dword ptr [RBP],0x10
00012595(5): MOV EAX,0x1
0001259a(5): JMP 0x00012394
000125a0(4): MOV byte ptr [RBP + 0x8],0x14
000125a4(5): MOV EAX,0x1
000125a9(5): JMP 0x00012394
000125b0(7): TEST R15D,0x402
000125b7(5): MOV EAX,0x1
000125bc(6): JNZ 0x00012394
000125c2(4): MOV byte ptr [RBP + 0x8],0x13
000125c6(5): JMP 0x00012394
000125d0(4): MOV byte ptr [RBP + 0x8],0x5
000125d4(5): MOV EAX,0x1
000125d9(5): JMP 0x00012394
000125e0(7): TEST R15D,0x402
000125e7(5): MOV EAX,0x1
000125ec(6): JNZ 0x00012394
000125f2(4): MOV byte ptr [RBP + 0x8],0x12
000125f6(5): JMP 0x00012394
00012600(7): TEST R15D,0x800
00012607(5): MOV EAX,0x1
0001260c(6): JZ 0x00012394
00012612(4): MOV byte ptr [RBP + 0x8],0xa
00012616(5): MOV EAX,0x1
0001261b(5): JMP 0x00012394
00012620(4): MOV byte ptr [RBP + 0x8],0xb
00012624(5): MOV EAX,0x1
00012629(5): JMP 0x00012394
00012630(7): TEST R15D,0x2000
00012637(5): MOV EAX,0x1
0001263c(6): JZ 0x00012394
00012642(4): MOV byte ptr [RBP + 0x8],0x9
00012646(5): JMP 0x00012394
00012650(7): TEST R15D,0x2000
00012657(5): MOV EAX,0x1
0001265c(6): JZ 0x00012394
00012662(4): MOV byte ptr [RBP + 0x8],0x8
00012666(5): JMP 0x00012394
00012670(4): TEST R15B,0x8
00012674(2): JNZ 0x00012684
00012676(4): ADD R14,0x1
0001267a(4): CMP R14,qword ptr [RBX + 0x58]
0001267e(6): JNZ 0x0001297b
00012684(4): MOV byte ptr [RBP + 0x8],0xc
00012688(7): MOV dword ptr [RBP],0x20
0001268f(5): MOV EAX,0x1
00012694(5): JMP 0x00012394
00012699(7): TEST R15D,0x8400
000126a0(5): MOV EAX,0x2
000126a5(6): JNZ 0x00012394
000126ab(4): MOV byte ptr [RBP + 0x8],0xa
000126af(5): JMP 0x00012394
000126b4(7): AND R15D,0x1200
000126bb(5): MOV EAX,0x2
000126c0(7): CMP R15,0x200
000126c7(6): JNZ 0x00012394
000126cd(5): JMP 0x00012569
000126d2(7): TEST R15D,0x80000
000126d9(5): MOV EAX,0x2
000126de(6): JNZ 0x00012394
000126e4(4): MOV byte ptr [RBP + 0x8],0x20
000126e8(5): JMP 0x00012394
000126ed(7): TEST R15D,0x80000
000126f4(5): MOV EAX,0x2
000126f9(6): JNZ 0x00012394
000126ff(4): MOV byte ptr [RBP + 0x8],0x22
00012703(5): JMP 0x00012394
00012708(7): AND R15D,0x1200
0001270f(5): MOV EAX,0x2
00012714(7): CMP R15,0x200
0001271b(6): JNZ 0x00012394
00012721(5): JMP 0x00012519
00012726(7): TEST R15D,0x80000
0001272d(5): MOV EAX,0x2
00012732(6): JNZ 0x00012394
00012738(4): MOV byte ptr [RBP + 0x8],0xc
0001273c(7): MOV dword ptr [RBP],0x100
00012743(5): JMP 0x00012394
00012748(7): TEST R15D,0x80000
0001274f(5): MOV EAX,0x2
00012754(6): JNZ 0x00012394
0001275a(4): MOV byte ptr [RBP + 0x8],0xc
0001275e(7): MOV dword ptr [RBP],0x40
00012765(5): JMP 0x00012394
0001276a(7): TEST R15D,0x80000
00012771(5): MOV EAX,0x2
00012776(6): JNZ 0x00012394
0001277c(4): MOV byte ptr [RBP + 0x8],0x21
00012780(5): JMP 0x00012394
00012785(7): TEST R15D,0x80000
0001278c(5): MOV EAX,0x2
00012791(6): JNZ 0x00012394
00012797(4): MOV byte ptr [RBP + 0x8],0x23
0001279b(5): JMP 0x00012394
000127a0(7): TEST R15D,0x80000
000127a7(5): MOV EAX,0x2
000127ac(6): JNZ 0x00012394
000127b2(4): MOV byte ptr [RBP + 0x8],0xc
000127b6(7): MOV dword ptr [RBP],0x200
000127bd(5): JMP 0x00012394
000127c2(7): AND R15D,0x402
000127c9(5): MOV EAX,0x2
000127ce(4): CMP R15,0x2
000127d2(6): JNZ 0x00012394
000127d8(5): JMP 0x000125c2
000127dd(7): TEST R15D,0x80000
000127e4(5): MOV EAX,0x2
000127e9(6): JNZ 0x00012394
000127ef(4): MOV byte ptr [RBP + 0x8],0xc
000127f3(7): MOV dword ptr [RBP],0x9
000127fa(5): JMP 0x00012394
000127ff(7): TEST R15D,0x80000
00012806(5): MOV EAX,0x2
0001280b(6): JNZ 0x00012394
00012811(4): MOV byte ptr [RBP + 0x8],0xc
00012815(7): MOV dword ptr [RBP],0x6
0001281c(5): JMP 0x00012394
00012821(7): TEST R15D,0x4000
00012828(5): MOV EAX,0x2
0001282d(6): JNZ 0x00012394
00012833(4): MOV EDX,dword ptr [RSP + 0x8]
00012837(4): MOV byte ptr [RBP + 0x8],0x4
0001283b(3): SUB EDX,0x31
0001283e(3): MOVSXD RDX,EDX
00012841(4): MOV qword ptr [RBP],RDX
00012845(5): JMP 0x00012394
0001284a(7): AND R15D,0x402
00012851(5): MOV EAX,0x2
00012856(4): CMP R15,0x2
0001285a(6): JNZ 0x00012394
00012860(5): JMP 0x000125f2
00012865(7): TEST R15D,0x2000
0001286c(5): MOV EAX,0x2
00012871(6): JNZ 0x00012394
00012877(5): JMP 0x00012642
0001287c(7): TEST R15D,0x2000
00012883(5): MOV EAX,0x2
00012888(6): JNZ 0x00012394
0001288e(5): JMP 0x00012662
00012893(7): TEST R15D,0x80000
0001289a(5): MOV EAX,0x2
0001289f(6): JNZ 0x00012394
000128a5(4): MOV byte ptr [RBP + 0x8],0xc
000128a9(7): MOV dword ptr [RBP],0x80
000128b0(5): JMP 0x00012394
000128b5(5): MOV EAX,0x2
000128ba(5): JMP 0x00012394
000128c0(5): CALL 0x00001f50
000128c5(3): MOV RSI,qword ptr [RAX]
000128c8(4): MOVZX EDX,R12B
000128cc(4): MOVZX EAX,word ptr [RSI + RDX*0x2]
000128d0(4): SHR AX,0x3
000128d4(3): AND EAX,0x1
000128d7(4): CMP R12B,0x5f
000128db(5): JMP 0x0001249a
000128e0(3): CMP EAX,0x1
000128e3(2): JLE 0x00012914
000128e5(4): MOV RCX,qword ptr [RBX + 0x10]
000128e9(8): LEA RDI,[RSI*0x4]
000128f1(4): MOV R8D,dword ptr [RCX + RSI*0x4]
000128f5(4): CMP R8D,-0x1
000128f9(6): JZ 0x000129af
000128ff(4): LEA R9,[R14 + 0x2]
00012903(4): CMP qword ptr [RBX + 0x30],R9
00012907(2): JZ 0x00012914
00012909(5): CMP dword ptr [RCX + RDI*0x1 + 0x4],-0x1
0001290e(6): JZ 0x000129af
00012914(7): CMP byte ptr [0x8c + RBX],0x0
0001291b(3): MOV RCX,qword ptr [RBX]
0001291e(4): MOV RDI,qword ptr [RBX + 0x28]
00012922(2): JZ 0x00012968
00012924(4): MOV R8,qword ptr [RBX + 0x18]
00012928(3): ADD RCX,RDI
0001292b(4): ADD RCX,qword ptr [R8 + RSI*0x8]
0001292f(3): MOVZX EDI,byte ptr [RCX]
00012932(3): MOV R12D,EDI
00012935(4): MOV dword ptr [RSP + 0x8],EDI
00012939(6): AND EDI,0x80
0001293f(6): JNZ 0x0001245b
00012945(5): JMP 0x00012468
0001294a(6): CMP byte ptr [RDX + R14*0x1 + -0x1],0xa
00012950(6): JNZ 0x0001253c
00012956(7): TEST R15D,0x800
0001295d(6): JZ 0x0001253c
00012963(5): JMP 0x0001258a
00012968(3): ADD RCX,RSI
0001296b(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
0001296f(3): MOV R12D,EDI
00012972(4): MOV dword ptr [RSP + 0x8],EDI
00012976(5): JMP 0x00012468
0001297b(5): LEA RDI,[RSP + 0x10]
00012980(3): MOV RDX,R15
00012983(4): MOV qword ptr [RBX + 0x48],R14
00012987(3): MOV RSI,RBX
0001298a(5): CALL 0x000122d0
0001298f(5): MOVZX EAX,byte ptr [RSP + 0x18]
00012994(5): SUB qword ptr [RBX + 0x48],0x1
00012999(3): LEA EDX,[RAX + -0x9]
0001299c(5): MOV EAX,0x1
000129a1(3): CMP DL,0x1
000129a4(6): JA 0x00012394
000129aa(5): JMP 0x00012684
000129af(6): MOVZX EAX,byte ptr [RDX + R14*0x1 + 0x1]
000129b5(4): MOV byte ptr [RBP + 0x8],0x1
000129b9(3): MOV R12D,EAX
000129bc(3): MOV byte ptr [RBP],AL
000129bf(4): MOV dword ptr [RSP + 0x8],EAX
000129c3(5): JMP 0x00012481
000129c8(5): CALL 0x00001c20
000129cd(3): NOP dword ptr [RAX]
000129d0(2): PUSH R14
000129d2(3): MOV R14,RDI
000129d5(2): PUSH R13
000129d7(3): MOV R13,RSI
000129da(2): PUSH R12
000129dc(7): MOV R12,-0x2
000129e3(1): PUSH RBP
000129e4(3): MOV RBP,RDX
000129e7(1): PUSH RBX
000129e8(7): MOV RBX,-0x1
000129ef(1): NOP
000129f0(3): MOV RDX,RBP
000129f3(3): MOV RSI,R14
000129f6(3): MOV RDI,R13
000129f9(5): CALL 0x000122d0
000129fe(2): CDQE
00012a00(4): ADD qword ptr [R14 + 0x48],RAX
00012a04(5): MOVZX EAX,byte ptr [R13 + 0x8]
00012a09(5): MOVZX EDX,byte ptr [R13]
00012a0e(2): CMP AL,0x2
00012a10(2): JZ 0x00012a60
00012a12(2): CMP AL,0x18
00012a14(2): JZ 0x00012a67
00012a16(3): CMP DL,0x2c
00012a19(2): JZ 0x00012a67
00012a1b(2): CMP AL,0x1
00012a1d(2): JZ 0x00012a28
00012a1f(3): MOV RBX,R12
00012a22(2): JMP 0x000129f0
00012a28(3): LEA EAX,[RDX + -0x30]
00012a2b(2): CMP AL,0x9
00012a2d(2): JA 0x00012a1f
00012a2f(4): CMP RBX,-0x2
00012a33(2): JZ 0x00012a1f
00012a35(4): CMP RBX,-0x1
00012a39(2): JZ 0x00012a78
00012a3b(4): LEA RAX,[RBX + RBX*0x4]
00012a3f(4): LEA RBX,[RDX + RAX*0x2]
00012a43(5): MOV EAX,0x8030
00012a48(7): CMP RBX,0x8030
00012a4f(4): CMOVG RBX,RAX
00012a53(4): SUB RBX,0x30
00012a57(2): JMP 0x000129f0
00012a60(7): MOV RBX,-0x2
00012a67(3): MOV RAX,RBX
00012a6a(1): POP RBX
00012a6b(1): POP RBP
00012a6c(2): POP R12
00012a6e(2): POP R13
00012a70(2): POP R14
00012a72(1): RET
00012a78(3): MOVZX EBX,DL
00012a7b(3): SUB EBX,0x30
00012a7e(3): MOVSXD RBX,EBX
00012a81(5): JMP 0x000129f0
00012a90(2): PUSH R15
00012a92(2): PUSH R14
00012a94(2): PUSH R13
00012a96(2): PUSH R12
00012a98(1): PUSH RBP
00012a99(1): PUSH RBX
00012a9a(7): SUB RSP,0x128
00012aa1(5): MOV qword ptr [RSP + 0x20],RCX
00012aa6(4): MOVZX ECX,byte ptr [RDX + 0x8]
00012aaa(9): MOV RAX,qword ptr FS:[0x28]
00012ab3(8): MOV qword ptr [0x118 + RSP],RAX
00012abb(2): XOR EAX,EAX
00012abd(3): MOV RAX,qword ptr [RSI]
00012ac0(5): MOV qword ptr [RSP + 0x18],RDX
00012ac5(5): MOV qword ptr [RSP + 0x40],R9
00012aca(3): CMP CL,0x24
00012acd(5): MOV qword ptr [RSP + 0x10],RAX
00012ad2(6): JA 0x00012b90
00012ad8(3): MOV RBP,RSI
00012adb(7): LEA RSI,[0x17aa0]
00012ae2(3): MOVZX EDX,CL
00012ae5(3): MOV R14,RDI
00012ae8(4): MOVSXD RAX,dword ptr [RSI + RDX*0x4]
00012aec(3): ADD RAX,RSI
00012aef(2): JMP RAX
00012af1(4): MOV RBX,qword ptr [RBP + 0x30]
00012af5(5): MOV R15,qword ptr [RSP + 0x20]
00012afa(3): MOV RSI,RDI
00012afd(5): MOV R13,qword ptr [RSP + 0x18]
00012b02(4): MOV qword ptr [RSP],R8
00012b06(4): LEA RAX,[RBX + 0x1]
00012b0a(3): MOV RDX,R15
00012b0d(7): OR RDX,0x800000
00012b14(3): MOV RDI,R13
00012b17(4): MOV qword ptr [RBP + 0x30],RAX
00012b1b(5): CALL 0x000122d0
00012b20(2): CDQE
00012b22(4): ADD qword ptr [R14 + 0x48],RAX
00012b26(2): XOR EAX,EAX
00012b28(5): CMP byte ptr [R13 + 0x8],0x9
00012b2d(3): MOV RDX,R13
00012b30(6): JZ 0x00013630
00012b36(5): MOV R13,qword ptr [RSP + 0x40]
00012b3b(4): MOV R8,qword ptr [RSP]
00012b3f(3): MOV RCX,R15
00012b42(3): MOV RSI,RBP
00012b45(3): MOV RDI,R14
00012b48(4): ADD R8,0x1
00012b4c(3): MOV R9,R13
00012b4f(5): CALL 0x00014100
00012b54(4): MOV R11D,dword ptr [R13]
00012b58(3): TEST R11D,R11D
00012b5b(2): JNZ 0x00012b90
00012b5d(5): MOV RDX,qword ptr [RSP + 0x18]
00012b62(4): CMP byte ptr [RDX + 0x8],0x9
00012b66(6): JZ 0x00013630
00012b6c(3): TEST RAX,RAX
00012b6f(2): JZ 0x00012b82
00012b71(7): LEA RSI,[0x8e50]
00012b78(2): XOR EDX,EDX
00012b7a(3): MOV RDI,RAX
00012b7d(5): CALL 0x00007fb0
00012b82(5): MOV RAX,qword ptr [RSP + 0x40]
00012b87(6): MOV dword ptr [RAX],0x8
00012b8d(3): NOP dword ptr [RAX]
00012b90(9): MOV qword ptr [RSP + 0x28],0x0
00012b99(7): NOP dword ptr [RAX]
00012ba0(8): MOV RDI,qword ptr [0x118 + RSP]
00012ba8(9): XOR RDI,qword ptr FS:[0x28]
00012bb1(5): MOV RAX,qword ptr [RSP + 0x28]
00012bb6(6): JNZ 0x00013f2e
00012bbc(7): ADD RSP,0x128
00012bc3(1): POP RBX
00012bc4(1): POP RBP
00012bc5(2): POP R12
00012bc7(2): POP R13
00012bc9(2): POP R14
00012bcb(2): POP R15
00012bcd(1): RET
00012bce(9): TEST qword ptr [RSP + 0x20],0x1000000
00012bd7(6): JNZ 0x00012e2d
00012bdd(5): MOV RAX,qword ptr [RSP + 0x20]
00012be2(2): TEST AL,0x20
00012be4(6): JNZ 0x00012e2d
00012bea(2): TEST AL,0x10
00012bec(6): JNZ 0x00013a55
00012bf2(3): CMP CL,0x9
00012bf5(6): JZ 0x00013608
00012bfb(5): MOV RAX,qword ptr [RSP + 0x10]
00012c00(5): MOV R8,qword ptr [RSP + 0x18]
00012c05(2): XOR ECX,ECX
00012c07(2): XOR EDX,EDX
00012c09(7): LEA RSI,[0x80 + RAX]
00012c10(4): LEA RDI,[RAX + 0x70]
00012c14(5): MOV byte ptr [R8 + 0x8],0x1
00012c19(5): CALL 0x0000a390
00012c1e(3): TEST RAX,RAX
00012c21(5): MOV qword ptr [RSP + 0x28],RAX
00012c26(6): JZ 0x000135f8
00012c2c(5): MOV RBX,qword ptr [RSP + 0x18]
00012c31(5): MOV RDX,qword ptr [RSP + 0x20]
00012c36(3): MOV RSI,R14
00012c39(8): LEA R15,[0xc0 + RSP]
00012c41(3): MOV RDI,RBX
00012c44(5): CALL 0x000122d0
00012c49(2): CDQE
00012c4b(4): ADD qword ptr [R14 + 0x48],RAX
00012c4f(4): MOVZX EAX,byte ptr [RBX + 0x8]
00012c53(5): NOP dword ptr [RAX + RAX*0x1]
00012c58(2): CMP AL,0x17
00012c5a(6): JA 0x00012ba0
00012c60(2): CMP AL,0x12
00012c62(5): MOV ECX,0x8c0800
00012c67(3): SETZ BL
00012c6a(4): BT RCX,RAX
00012c6e(6): JNC 0x00012ba0
00012c74(5): MOV RCX,qword ptr [RSP + 0x18]
00012c79(2): CMP AL,0x17
00012c7b(4): MOV RBP,qword ptr [R14 + 0x48]
00012c7f(4): MOVDQA XMM0,xmmword ptr [RCX]
00012c83(6): JZ 0x00012fa8
00012c89(2): CMP AL,0x13
00012c8b(3): MOVZX EBX,BL
00012c8e(6): JZ 0x00012f40
00012c94(5): MOV RDX,qword ptr [RSP + 0x20]
00012c99(5): MOV RDI,qword ptr [RSP + 0x18]
00012c9e(3): MOV RSI,R14
00012ca1(5): CALL 0x000122d0
00012ca6(2): CDQE
00012ca8(4): ADD qword ptr [R14 + 0x48],RAX
00012cac(6): CMP qword ptr [RSP + 0x28],0x0
00012cb2(6): JZ 0x00013040
00012cb8(8): MOV qword ptr [RSP],-0x1
00012cc0(3): TEST RBX,RBX
00012cc3(5): MOV RBP,qword ptr [RSP + 0x28]
00012cc8(9): MOV qword ptr [RSP + 0x30],0x0
00012cd1(6): JG 0x00012e50
00012cd7(4): CMP byte ptr [RBP + 0x30],0x11
00012cdb(6): JZ 0x00013020
00012ce1(5): CMP qword ptr [RSP],-0x1
00012ce6(3): MOV RDX,RBP
00012ce9(3): MOV R8,R15
00012cec(3): SETZ AL
00012cef(2): XOR ECX,ECX
00012cf1(3): ADD EAX,0xa
00012cf4(7): MOV byte ptr [0xc8 + RSP],AL
00012cfb(5): MOV RAX,qword ptr [RSP + 0x10]
00012d00(4): LEA R12,[RAX + 0x70]
00012d04(7): LEA R13,[0x80 + RAX]
00012d0b(3): MOV RDI,R12
00012d0e(3): MOV RSI,R13
00012d11(5): CALL 0x0000a390
00012d16(3): TEST RAX,RAX
00012d19(3): MOV RDX,RAX
00012d1c(6): JZ 0x00012f10
00012d22(4): ADD RBX,0x2
00012d26(4): CMP RBX,qword ptr [RSP]
00012d2a(2): JG 0x00012dab
00012d2c(5): MOV qword ptr [RSP + 0x48],R14
00012d31(3): MOV R14,RAX
00012d34(5): MOV RSI,qword ptr [RSP + 0x10]
00012d39(3): MOV RDI,RBP
00012d3c(5): CALL 0x0000a470
00012d41(3): MOV R8,R15
00012d44(3): MOV RBP,RAX
00012d47(3): MOV RCX,RAX
00012d4a(3): MOV RDX,R14
00012d4d(3): MOV RSI,R13
00012d50(3): MOV RDI,R12
00012d53(8): MOV byte ptr [0xc8 + RSP],0x10
00012d5b(5): CALL 0x0000a390
00012d60(3): TEST RBP,RBP
00012d63(6): JZ 0x00012f10
00012d69(3): TEST RAX,RAX
00012d6c(6): JZ 0x00012f10
00012d72(2): XOR ECX,ECX
00012d74(3): MOV R8,R15
00012d77(3): MOV RDX,RAX
00012d7a(3): MOV RSI,R13
00012d7d(3): MOV RDI,R12
00012d80(8): MOV byte ptr [0xc8 + RSP],0xa
00012d88(5): CALL 0x0000a390
00012d8d(3): TEST RAX,RAX
00012d90(3): MOV R14,RAX
00012d93(6): JZ 0x00012f10
00012d99(4): ADD RBX,0x1
00012d9d(4): CMP RBX,qword ptr [RSP]
00012da1(2): JLE 0x00012d34
00012da3(5): MOV R14,qword ptr [RSP + 0x48]
00012da8(3): MOV RDX,RAX
00012dab(5): MOV RAX,qword ptr [RSP + 0x30]
00012db0(3): TEST RAX,RAX
00012db3(6): JZ 0x00013060
00012db9(3): MOV RCX,RDX
00012dbc(3): MOV R8,R15
00012dbf(3): MOV RDX,RAX
00012dc2(3): MOV RSI,R13
00012dc5(3): MOV RDI,R12
00012dc8(8): MOV byte ptr [0xc8 + RSP],0x10
00012dd0(5): CALL 0x0000a390
00012dd5(5): MOV RDI,qword ptr [RSP + 0x40]
00012dda(2): MOV EDX,dword ptr [RDI]
00012ddc(2): TEST EDX,EDX
00012dde(2): JZ 0x00012de9
00012de0(3): TEST RAX,RAX
00012de3(6): JZ 0x0001313b
00012de9(5): MOV qword ptr [RSP + 0x28],RAX
00012dee(9): TEST qword ptr [RSP + 0x20],0x1000000
00012df7(5): MOV RAX,qword ptr [RSP + 0x18]
00012dfc(4): MOVZX EAX,byte ptr [RAX + 0x8]
00012e00(6): JZ 0x00012c58
00012e06(2): CMP AL,0xb
00012e08(2): JZ 0x00012e12
00012e0a(2): CMP AL,0x17
00012e0c(6): JNZ 0x00012c58
00012e12(5): MOV RAX,qword ptr [RSP + 0x28]
00012e17(3): TEST RAX,RAX
00012e1a(2): JZ 0x00012e2d
00012e1c(7): LEA RSI,[0x8e50]
00012e23(2): XOR EDX,EDX
00012e25(3): MOV RDI,RAX
00012e28(5): CALL 0x00007fb0
00012e2d(5): MOV RAX,qword ptr [RSP + 0x40]
00012e32(9): MOV qword ptr [RSP + 0x28],0x0
00012e3b(6): MOV dword ptr [RAX],0xd
00012e41(5): JMP 0x00012ba0
00012e50(4): CMP RBX,0x1
00012e54(6): JZ 0x0001368c
00012e5a(5): MOV RAX,qword ptr [RSP + 0x10]
00012e5f(3): MOV R13,RBP
00012e62(5): MOV qword ptr [RSP + 0x48],R14
00012e67(7): LEA R12,[0x80 + RAX]
00012e6e(4): LEA RDI,[RAX + 0x70]
00012e72(3): MOV RAX,RBP
00012e75(3): MOV R14,RAX
00012e78(5): MOV EBP,0x2
00012e7d(3): MOV RSI,R12
00012e80(5): MOV qword ptr [RSP + 0x30],RDI
00012e85(3): MOV R12,R13
00012e88(3): MOV R13,RBX
00012e8b(3): MOV RBX,RSI
00012e8e(2): NOP
00012e90(5): MOV RSI,qword ptr [RSP + 0x10]
00012e95(3): MOV RDI,R12
00012e98(5): CALL 0x0000a470
00012e9d(5): MOV RDI,qword ptr [RSP + 0x30]
00012ea2(3): MOV R12,RAX
00012ea5(3): MOV RDX,R14
00012ea8(3): MOV R8,R15
00012eab(3): MOV RCX,RAX
00012eae(3): MOV RSI,RBX
00012eb1(8): MOV byte ptr [0xc8 + RSP],0x10
00012eb9(5): CALL 0x0000a390
00012ebe(3): TEST R12,R12
00012ec1(3): MOV R14,RAX
00012ec4(2): JZ 0x00012f10
00012ec6(3): TEST RAX,RAX
00012ec9(2): JZ 0x00012f10
00012ecb(4): ADD RBP,0x1
00012ecf(3): CMP RBP,R13
00012ed2(2): JLE 0x00012e90
00012ed4(5): MOV R14,qword ptr [RSP + 0x48]
00012ed9(3): MOV RBX,R13
00012edc(5): MOV qword ptr [RSP + 0x30],RAX
00012ee1(3): MOV R13,R12
00012ee4(4): CMP qword ptr [RSP],RBX
00012ee8(6): JZ 0x00013054
00012eee(5): MOV RSI,qword ptr [RSP + 0x10]
00012ef3(3): MOV RDI,R13
00012ef6(5): CALL 0x0000a470
00012efb(3): TEST RAX,RAX
00012efe(3): MOV RBP,RAX
00012f01(6): JNZ 0x00012cd7
00012f07(9): NOP word ptr [RAX + RAX*0x1]
00012f10(5): MOV RAX,qword ptr [RSP + 0x40]
00012f15(6): MOV dword ptr [RAX],0xc
00012f1b(5): MOV RDI,qword ptr [RSP + 0x28]
00012f20(7): LEA RSI,[0x8e50]
00012f27(2): XOR EDX,EDX
00012f29(5): CALL 0x00007fb0
00012f2e(9): MOV qword ptr [RSP + 0x28],0x0
00012f37(5): JMP 0x00012ba0
00012f40(8): MOV qword ptr [RSP],0x1
00012f48(5): MOV RDX,qword ptr [RSP + 0x20]
00012f4d(5): MOV RDI,qword ptr [RSP + 0x18]
00012f52(3): MOV RSI,R14
00012f55(5): CALL 0x000122d0
00012f5a(2): CDQE
00012f5c(4): ADD qword ptr [R14 + 0x48],RAX
00012f60(6): CMP qword ptr [RSP + 0x28],0x0
00012f66(6): JZ 0x00013040
00012f6c(4): MOV RAX,qword ptr [RSP]
00012f70(3): OR RAX,RBX
00012f73(6): JNZ 0x00012cc0
00012f79(5): MOV RDI,qword ptr [RSP + 0x28]
00012f7e(7): LEA RSI,[0x8e50]
00012f85(2): XOR EDX,EDX
00012f87(5): CALL 0x00007fb0
00012f8c(5): MOV RAX,qword ptr [RSP + 0x40]
00012f91(2): MOV ESI,dword ptr [RAX]
00012f93(2): TEST ESI,ESI
00012f95(2): JNZ 0x00012f1b
00012f97(9): MOV qword ptr [RSP + 0x28],0x0
00012fa0(5): JMP 0x00012dee
00012fa8(5): MOV RDX,qword ptr [RSP + 0x20]
00012fad(3): MOV RSI,RCX
00012fb0(3): MOV RDI,R14
00012fb3(4): MOVAPS xmmword ptr [RSP],XMM0
00012fb7(5): CALL 0x000129d0
00012fbc(4): CMP RAX,-0x1
00012fc0(3): MOV RBX,RAX
00012fc3(5): MOVDQA XMM0,xmmword ptr [RSP]
00012fc8(6): JZ 0x00013070
00012fce(4): CMP RAX,-0x2
00012fd2(2): JZ 0x00012fed
00012fd4(5): MOV RAX,qword ptr [RSP + 0x18]
00012fd9(4): MOVZX EAX,byte ptr [RAX + 0x8]
00012fdd(2): CMP AL,0x18
00012fdf(6): JZ 0x00013100
00012fe5(2): CMP AL,0x1
00012fe7(6): JZ 0x00013113
00012fed(9): TEST qword ptr [RSP + 0x20],0x200000
00012ff6(6): JZ 0x00013f33
00012ffc(5): MOV RAX,qword ptr [RSP + 0x18]
00013001(4): MOV qword ptr [R14 + 0x48],RBP
00013005(3): MOVAPS xmmword ptr [RAX],XMM0
00013008(4): MOV byte ptr [RAX + 0x8],0x1
0001300c(5): MOV RAX,qword ptr [RSP + 0x28]
00013011(5): JMP 0x00012dd5
00013020(4): MOV RDX,qword ptr [RBP + 0x28]
00013024(7): LEA RSI,[0x7cf0]
0001302b(3): MOV RDI,RBP
0001302e(5): CALL 0x00007fb0
00013033(5): JMP 0x00012ce1
00013040(5): MOV RAX,qword ptr [RSP + 0x40]
00013045(2): MOV ECX,dword ptr [RAX]
00013047(2): TEST ECX,ECX
00013049(6): JZ 0x00012f97
0001304f(5): JMP 0x00012b90
00013054(5): MOV RDX,qword ptr [RSP + 0x30]
00013059(7): NOP dword ptr [RAX]
00013060(5): MOV qword ptr [RSP + 0x28],RDX
00013065(5): JMP 0x00012dee
00013070(5): MOV RAX,qword ptr [RSP + 0x18]
00013075(4): CMP byte ptr [RAX + 0x8],0x1
00013079(6): JNZ 0x00013130
0001307f(5): MOV RAX,qword ptr [RSP + 0x18]
00013084(3): CMP byte ptr [RAX],0x2c
00013087(6): JNZ 0x00013130
0001308d(2): XOR EBX,EBX
0001308f(5): MOV RDX,qword ptr [RSP + 0x20]
00013094(5): MOV RSI,qword ptr [RSP + 0x18]
00013099(3): MOV RDI,R14
0001309c(5): MOVAPS xmmword ptr [RSP + 0x30],XMM0
000130a1(5): CALL 0x000129d0
000130a6(4): CMP RAX,-0x2
000130aa(4): MOV qword ptr [RSP],RAX
000130ae(6): MOVDQA XMM0,xmmword ptr [RSP + 0x30]
000130b4(6): JZ 0x00012fed
000130ba(4): MOV RAX,qword ptr [RSP]
000130be(4): CMP RAX,-0x1
000130c2(2): JZ 0x000130c9
000130c4(3): CMP RAX,RBX
000130c7(2): JL 0x00013130
000130c9(5): MOV RAX,qword ptr [RSP + 0x18]
000130ce(4): CMP byte ptr [RAX + 0x8],0x18
000130d2(2): JNZ 0x00013130
000130d4(5): CMP qword ptr [RSP],-0x1
000130d9(2): JNZ 0x00013104
000130db(2): XOR EAX,EAX
000130dd(7): CMP RBX,0x7fff
000130e4(3): SETG AL
000130e7(3): TEST RAX,RAX
000130ea(6): JZ 0x00012f48
000130f0(5): MOV RAX,qword ptr [RSP + 0x40]
000130f5(6): MOV dword ptr [RAX],0xf
000130fb(2): JMP 0x0001313b
00013100(4): MOV qword ptr [RSP],RBX
00013104(2): XOR EAX,EAX
00013106(8): CMP qword ptr [RSP],0x7fff
0001310e(3): SETG AL
00013111(2): JMP 0x000130e7
00013113(5): MOV RAX,qword ptr [RSP + 0x18]
00013118(3): CMP byte ptr [RAX],0x2c
0001311b(6): JZ 0x0001308f
00013121(9): TEST qword ptr [RSP + 0x20],0x200000
0001312a(6): JNZ 0x00012ffc
00013130(5): MOV RAX,qword ptr [RSP + 0x40]
00013135(6): MOV dword ptr [RAX],0xa
0001313b(6): CMP qword ptr [RSP + 0x28],0x0
00013141(6): JNZ 0x00012f1b
00013147(5): JMP 0x00012b90
00013150(5): MOV RAX,qword ptr [RSP + 0x18]
00013155(2): MOV EBP,dword ptr [RAX]
00013157(6): TEST EBP,0x30f
0001315d(2): JZ 0x000131c1
0001315f(5): MOV RAX,qword ptr [RSP + 0x10]
00013164(7): MOVZX EAX,byte ptr [0xb0 + RAX]
0001316b(2): TEST AL,0x10
0001316d(2): JNZ 0x000131c1
0001316f(5): MOV RDI,qword ptr [RSP + 0x10]
00013174(3): OR EAX,0x10
00013177(2): TEST AL,0x8
00013179(6): MOV byte ptr [0xb0 + RDI],AL
0001317f(6): JNZ 0x00013d83
00013185(10): MOV RDX,0x3ff000000000000
0001318f(2): TEST AL,0x4
00013191(7): MOV qword ptr [0xb8 + RDI],RDX
00013198(10): MOV RDX,0x7fffffe87fffffe
000131a2(7): MOV qword ptr [0xc0 + RDI],RDX
000131a9(6): JZ 0x00013d08
000131af(4): PXOR XMM0,XMM0
000131b3(5): MOV RAX,qword ptr [RSP + 0x18]
000131b8(7): MOVUPS xmmword ptr [0xc8 + RDI],XMM0
000131bf(2): MOV EBP,dword ptr [RAX]
000131c1(5): MOV RAX,qword ptr [RSP + 0x10]
000131c6(4): LEA RBX,[RAX + 0x70]
000131ca(7): LEA R12,[0x80 + RAX]
000131d1(6): LEA EAX,[-0x100 + RBP]
000131d7(5): TEST EAX,0xfffffeff
000131dc(6): JNZ 0x0001384a
000131e2(6): CMP EBP,0x100
000131e8(5): MOV R15,qword ptr [RSP + 0x18]
000131ed(6): JZ 0x00013822
000131f3(7): MOV dword ptr [R15],0x5
000131fa(3): MOV R8,R15
000131fd(2): XOR ECX,ECX
000131ff(2): XOR EDX,EDX
00013201(3): MOV RSI,R12
00013204(3): MOV RDI,RBX
00013207(5): CALL 0x0000a390
0001320c(7): MOV dword ptr [R15],0xa
00013213(3): MOV RBP,RAX
00013216(5): MOV R8,qword ptr [RSP + 0x18]
0001321b(2): XOR ECX,ECX
0001321d(2): XOR EDX,EDX
0001321f(3): MOV RSI,R12
00013222(3): MOV RDI,RBX
00013225(5): CALL 0x0000a390
0001322a(8): LEA R8,[0xc0 + RSP]
00013232(3): MOV RDX,RBP
00013235(3): MOV RDI,RBX
00013238(3): MOV RCX,RAX
0001323b(3): MOV RSI,R12
0001323e(3): MOV R13,RAX
00013241(8): MOV byte ptr [0xc8 + RSP],0xa
00013249(5): CALL 0x0000a390
0001324e(3): TEST RBP,RBP
00013251(3): MOV RDI,RAX
00013254(5): MOV qword ptr [RSP + 0x28],RAX
00013259(3): SETZ DL
0001325c(3): TEST R13,R13
0001325f(3): SETZ AL
00013262(2): OR DL,AL
00013264(6): JNZ 0x000135f8
0001326a(3): TEST RDI,RDI
0001326d(6): JZ 0x000135f8
00013273(5): MOV RDX,qword ptr [RSP + 0x20]
00013278(5): MOV RDI,qword ptr [RSP + 0x18]
0001327d(3): MOV RSI,R14
00013280(5): CALL 0x000122d0
00013285(2): CDQE
00013287(4): ADD qword ptr [R14 + 0x48],RAX
0001328b(5): JMP 0x00012ba0
00013290(5): MOV ESI,0x1
00013295(5): MOV EDI,0x20
0001329a(12): MOV qword ptr [0x98 + RSP],0x0
000132a6(5): CALL 0x00001d30
000132ab(5): MOV ESI,0x1
000132b0(3): MOV R12,RAX
000132b3(5): MOV EDI,0x50
000132b8(5): CALL 0x00001d30
000132bd(3): TEST R12,R12
000132c0(3): MOV R13,RAX
000132c3(3): SETZ DL
000132c6(3): TEST RAX,RAX
000132c9(3): SETZ AL
000132cc(2): OR DL,AL
000132ce(6): JNZ 0x00013aa9
000132d4(5): MOV R10,qword ptr [RSP + 0x18]
000132d9(5): MOV RDX,qword ptr [RSP + 0x20]
000132de(3): MOV RSI,R14
000132e1(3): MOV RDI,R10
000132e4(5): CALL 0x00007bc0
000132e9(3): MOVSXD RBX,EAX
000132ec(5): MOVZX EAX,byte ptr [R10 + 0x8]
000132f1(2): CMP AL,0x2
000132f3(6): JZ 0x00013a99
000132f9(2): CMP AL,0x19
000132fb(5): MOV byte ptr [RSP + 0x57],0x0
00013300(6): JZ 0x000137ca
00013306(2): CMP AL,0x15
00013308(6): JZ 0x00013814
0001330e(8): LEA RAX,[0xd0 + RSP]
00013316(5): MOV R15,qword ptr [RSP + 0x18]
0001331b(7): LEA RBP,[0x17b34]
00013322(9): MOV qword ptr [RSP + 0x48],0x0
0001332b(6): MOV R9D,0x1
00013331(9): MOV qword ptr [RSP + 0x30],0x0
0001333a(5): MOV qword ptr [RSP + 0x28],RAX
0001333f(8): LEA RAX,[0xa0 + RSP]
00013347(4): MOV qword ptr [RSP],RAX
0001334b(8): LEA RAX,[0x98 + RSP]
00013353(5): MOV qword ptr [RSP + 0x58],RAX
00013358(8): LEA RAX,[0xc0 + RSP]
00013360(5): MOV qword ptr [RSP + 0x60],RAX
00013365(8): LEA RAX,[0xf0 + RSP]
0001336d(5): MOV qword ptr [RSP + 0x68],RAX
00013372(5): MOV RAX,qword ptr [RSP + 0x28]
00013377(5): MOV R8,qword ptr [RSP + 0x20]
0001337c(4): AND R9D,0x1
00013380(4): MOV RDI,qword ptr [RSP]
00013384(2): MOV ECX,EBX
00013386(3): MOV RDX,R15
00013389(3): MOV RSI,R14
0001338c(11): MOV dword ptr [0xa0 + RSP],0x3
00013397(8): MOV qword ptr [0xa8 + RSP],RAX
0001339f(5): CALL 0x00012070
000133a4(2): TEST EAX,EAX
000133a6(6): JNZ 0x0001388b
000133ac(5): MOV RDX,qword ptr [RSP + 0x20]
000133b1(3): MOV RSI,R14
000133b4(3): MOV RDI,R15
000133b7(5): CALL 0x00007bc0
000133bc(3): MOVSXD RBX,EAX
000133bf(7): MOV EAX,dword ptr [0xa0 + RSP]
000133c6(3): LEA EDX,[RAX + -0x2]
000133c9(3): AND EDX,0xfffffffd
000133cc(2): JZ 0x000133e5
000133ce(5): MOVZX EDX,byte ptr [R15 + 0x8]
000133d3(3): CMP DL,0x2
000133d6(6): JZ 0x00013871
000133dc(3): CMP DL,0x16
000133df(6): JZ 0x00013897
000133e5(3): CMP EAX,0x4
000133e8(6): JA 0x00013d8a
000133ee(5): MOVSXD RAX,dword ptr [RBP + RAX*0x4]
000133f3(3): ADD RAX,RBP
000133f6(2): JMP RAX
000133f8(5): MOV RBX,qword ptr [RSP + 0x40]
000133fd(3): CMP CL,0x23
00013400(4): MOV RSI,qword ptr [RDI + 0x78]
00013404(4): SETZ R8B
00013408(7): LEA RCX,[0x170e1]
0001340f(7): LEA RDX,[0x17697]
00013416(4): MOVZX R8D,R8B
0001341a(3): MOV R9,RBX
0001341d(5): MOV RDI,qword ptr [RSP + 0x10]
00013422(5): CALL 0x0000d6e0
00013427(2): MOV EDI,dword ptr [RBX]
00013429(5): MOV qword ptr [RSP + 0x28],RAX
0001342e(2): TEST EDI,EDI
00013430(6): JZ 0x00012c2c
00013436(3): TEST RAX,RAX
00013439(6): JNZ 0x00012c2c
0001343f(5): JMP 0x00012b90
00013448(5): MOV RBX,qword ptr [RSP + 0x40]
0001344d(3): CMP CL,0x21
00013450(4): MOV RSI,qword ptr [RDI + 0x78]
00013454(4): SETZ R8B
00013458(7): LEA RCX,[0x160a6]
0001345f(7): LEA RDX,[0x1768b]
00013466(4): MOVZX R8D,R8B
0001346a(3): MOV R9,RBX
0001346d(2): JMP 0x0001341d
0001346f(5): MOV RAX,qword ptr [RSP + 0x18]
00013474(5): MOV RDI,qword ptr [RSP + 0x10]
00013479(3): MOV RCX,qword ptr [RAX]
0001347c(5): MOV EAX,0x1
00013481(2): SHL EAX,CL
00013483(2): CDQE
00013485(7): TEST qword ptr [0xa8 + RDI],RAX
0001348c(6): JZ 0x00013abe
00013492(5): MOV RBX,qword ptr [RSP + 0x10]
00013497(5): MOV R8,qword ptr [RSP + 0x18]
0001349c(2): XOR ECX,ECX
0001349e(2): XOR EDX,EDX
000134a0(7): OR qword ptr [0xa0 + RBX],RAX
000134a7(7): LEA RSI,[0x80 + RBX]
000134ae(4): LEA RDI,[RBX + 0x70]
000134b2(5): CALL 0x0000a390
000134b7(3): TEST RAX,RAX
000134ba(5): MOV qword ptr [RSP + 0x28],RAX
000134bf(6): JZ 0x000135f8
000134c5(8): ADD qword ptr [0x98 + RBX],0x1
000134cd(7): OR byte ptr [0xb0 + RBX],0x2
000134d4(5): JMP 0x00012c2c
000134d9(5): MOV RBX,qword ptr [RSP + 0x10]
000134de(5): MOV R8,qword ptr [RSP + 0x18]
000134e3(2): XOR ECX,ECX
000134e5(2): XOR EDX,EDX
000134e7(7): LEA RSI,[0x80 + RBX]
000134ee(4): LEA RDI,[RBX + 0x70]
000134f2(5): CALL 0x0000a390
000134f7(3): TEST RAX,RAX
000134fa(5): MOV qword ptr [RSP + 0x28],RAX
000134ff(6): JZ 0x000135f8
00013505(7): CMP dword ptr [0xb4 + RBX],0x1
0001350c(6): JLE 0x00012c2c
00013512(7): OR byte ptr [0xb0 + RBX],0x2
00013519(5): JMP 0x00012c2c
0001351e(5): MOV RAX,qword ptr [RSP + 0x10]
00013523(5): MOV R8,qword ptr [RSP + 0x18]
00013528(2): XOR ECX,ECX
0001352a(2): XOR EDX,EDX
0001352c(4): LEA RBX,[RAX + 0x70]
00013530(7): LEA RBP,[0x80 + RAX]
00013537(3): MOV RDI,RBX
0001353a(3): MOV RSI,RBP
0001353d(5): CALL 0x0000a390
00013542(3): TEST RAX,RAX
00013545(5): MOV qword ptr [RSP + 0x28],RAX
0001354a(6): JZ 0x000135f8
00013550(5): MOV RAX,qword ptr [RSP + 0x10]
00013555(8): LEA R12,[0xc0 + RSP]
0001355d(5): MOV R15,qword ptr [RSP + 0x28]
00013562(7): CMP dword ptr [0xb4 + RAX],0x1
00013569(6): JLE 0x00012c2c
0001356f(4): MOV RAX,qword ptr [R14 + 0x48]
00013573(4): CMP qword ptr [R14 + 0x68],RAX
00013577(6): JLE 0x00013881
0001357d(4): CMP RAX,qword ptr [R14 + 0x30]
00013581(6): JZ 0x00013881
00013587(4): MOV RDX,qword ptr [R14 + 0x10]
0001358b(4): CMP dword ptr [RDX + RAX*0x4],-0x1
0001358f(6): JNZ 0x00013881
00013595(5): MOV R13,qword ptr [RSP + 0x18]
0001359a(5): MOV RDX,qword ptr [RSP + 0x20]
0001359f(3): MOV RSI,R14
000135a2(3): MOV RDI,R13
000135a5(5): CALL 0x000122d0
000135aa(2): CDQE
000135ac(4): ADD qword ptr [R14 + 0x48],RAX
000135b0(3): MOV R8,R13
000135b3(2): XOR ECX,ECX
000135b5(2): XOR EDX,EDX
000135b7(3): MOV RSI,RBP
000135ba(3): MOV RDI,RBX
000135bd(5): CALL 0x0000a390
000135c2(3): MOV RDX,R15
000135c5(3): MOV R13,RAX
000135c8(3): MOV R8,R12
000135cb(3): MOV RCX,RAX
000135ce(3): MOV RSI,RBP
000135d1(3): MOV RDI,RBX
000135d4(8): MOV byte ptr [0xc8 + RSP],0x10
000135dc(5): CALL 0x0000a390
000135e1(3): TEST R13,R13
000135e4(3): MOV R15,RAX
000135e7(3): SETZ DL
000135ea(3): TEST RAX,RAX
000135ed(3): SETZ AL
000135f0(2): OR DL,AL
000135f2(6): JZ 0x0001356f
000135f8(5): MOV RAX,qword ptr [RSP + 0x40]
000135fd(6): MOV dword ptr [RAX],0xc
00013603(5): JMP 0x00012b90
00013608(9): TEST qword ptr [RSP + 0x20],0x20000
00013611(6): JNZ 0x00012bfb
00013617(5): MOV RAX,qword ptr [RSP + 0x40]
0001361c(9): MOV qword ptr [RSP + 0x28],0x0
00013625(6): MOV dword ptr [RAX],0x10
0001362b(5): JMP 0x00012ba0
00013630(4): CMP RBX,0x8
00013634(2): JBE 0x0001369b
00013636(5): MOV RDI,qword ptr [RSP + 0x10]
0001363b(8): LEA R8,[0xc0 + RSP]
00013643(2): XOR ECX,ECX
00013645(3): MOV RDX,RAX
00013648(8): MOV byte ptr [0xc8 + RSP],0x11
00013650(7): LEA RSI,[0x80 + RDI]
00013657(4): ADD RDI,0x70
0001365b(5): CALL 0x0000a390
00013660(3): TEST RAX,RAX
00013663(5): MOV qword ptr [RSP + 0x28],RAX
00013668(2): JZ 0x000135f8
0001366a(4): MOV qword ptr [RAX + 0x28],RBX
0001366e(5): JMP 0x00012c2c
00013673(5): MOV RAX,qword ptr [RSP + 0x40]
00013678(9): MOV qword ptr [RSP + 0x28],0x0
00013681(6): MOV dword ptr [RAX],0x5
00013687(5): JMP 0x00012ba0
0001368c(5): MOV R13,qword ptr [RSP + 0x28]
00013691(5): MOV qword ptr [RSP + 0x30],R13
00013696(5): JMP 0x00012ee4
0001369b(5): MOV RSI,qword ptr [RSP + 0x10]
000136a0(5): MOV EDX,0x1
000136a5(2): MOV ECX,EBX
000136a7(2): SHL EDX,CL
000136a9(3): MOVSXD RDX,EDX
000136ac(7): OR qword ptr [0xa8 + RSI],RDX
000136b3(2): JMP 0x00013636
000136b5(8): MOV RSI,qword ptr [0xa8 + RSP]
000136bd(3): MOV RDI,R12
000136c0(5): CALL 0x0000ce80
000136c5(5): MOV RDX,qword ptr [RSP + 0x40]
000136ca(2): TEST EAX,EAX
000136cc(2): MOV dword ptr [RDX],EAX
000136ce(2): JNZ 0x00013708
000136d0(5): MOVZX EAX,byte ptr [R15 + 0x8]
000136d5(2): CMP AL,0x2
000136d7(6): JZ 0x00013871
000136dd(2): CMP AL,0x15
000136df(6): JZ 0x00013af2
000136e5(3): XOR R9D,R9D
000136e8(5): JMP 0x00013372
000136ed(8): MOV RSI,qword ptr [0xa8 + RSP]
000136f5(3): MOV RDI,R12
000136f8(5): CALL 0x0000ce80
000136fd(5): MOV RDX,qword ptr [RSP + 0x40]
00013702(2): TEST EAX,EAX
00013704(2): MOV dword ptr [RDX],EAX
00013706(2): JZ 0x000136d0
00013708(3): MOV RDI,R12
0001370b(5): CALL 0x00001b00
00013710(3): MOV RDI,R13
00013713(5): CALL 0x00008df0
00013718(5): MOV RAX,qword ptr [RSP + 0x40]
0001371d(3): MOV R8D,dword ptr [RAX]
00013720(3): TEST R8D,R8D
00013723(6): JNZ 0x00012b90
00013729(9): MOV qword ptr [RSP + 0x28],0x0
00013732(5): JMP 0x00012c2c
00013737(4): MOV RDX,qword ptr [R13 + 0x28]
0001373b(5): CMP RDX,qword ptr [RSP + 0x30]
00013740(4): MOV RAX,qword ptr [R13]
00013744(6): JZ 0x00013c3e
0001374a(4): LEA RCX,[RDX + 0x1]
0001374e(4): MOV qword ptr [R13 + 0x28],RCX
00013752(7): MOV ECX,dword ptr [0xa8 + RSP]
00013759(3): MOV dword ptr [RAX + RDX*0x4],ECX
0001375c(5): JMP 0x000136d0
00013761(8): MOVZX EDX,byte ptr [0xa8 + RSP]
00013769(5): MOV ESI,0x1
0001376e(3): MOV RAX,RDX
00013771(3): AND EDX,0x3f
00013774(4): SHR RAX,0x3
00013778(2): MOV ECX,EDX
0001377a(3): AND EAX,0x18
0001377d(3): SHL RSI,CL
00013780(4): OR qword ptr [R12 + RAX*0x1],RSI
00013784(5): JMP 0x000136d0
00013789(4): SUB RSP,0x8
0001378d(4): MOV RDI,qword ptr [R14 + 0x78]
00013791(4): LEA RDX,[R13 + 0x18]
00013795(4): PUSH qword ptr [RSP + 0x28]
00013799(8): MOV R9,qword ptr [0xb8 + RSP]
000137a1(4): LEA RCX,[R13 + 0x48]
000137a5(5): MOV R8,qword ptr [RSP + 0x68]
000137aa(3): MOV RSI,R12
000137ad(5): CALL 0x0000ced0
000137b2(5): MOV RDX,qword ptr [RSP + 0x50]
000137b7(2): TEST EAX,EAX
000137b9(2): MOV dword ptr [RDX],EAX
000137bb(2): POP R9
000137bd(2): POP R10
000137bf(6): JZ 0x000136d0
000137c5(5): JMP 0x00013708
000137ca(5): OR byte ptr [R13 + 0x20],0x1
000137cf(9): TEST qword ptr [RSP + 0x20],0x100
000137d8(2): JZ 0x000137e2
000137da(8): OR qword ptr [R12],0x400
000137e2(4): ADD qword ptr [R14 + 0x48],RBX
000137e6(5): MOV R11,qword ptr [RSP + 0x18]
000137eb(3): MOV RSI,R14
000137ee(5): MOV RDX,qword ptr [RSP + 0x20]
000137f3(3): MOV RDI,R11
000137f6(5): CALL 0x00007bc0
000137fb(2): MOV EBX,EAX
000137fd(5): MOVZX EAX,byte ptr [R11 + 0x8]
00013802(2): CMP AL,0x2
00013804(6): JZ 0x00013a99
0001380a(5): MOV byte ptr [RSP + 0x57],0x1
0001380f(5): JMP 0x00013306
00013814(5): MOV RAX,qword ptr [RSP + 0x18]
00013819(4): MOV byte ptr [RAX + 0x8],0x1
0001381d(5): JMP 0x0001330e
00013822(7): MOV dword ptr [R15],0x6
00013829(3): MOV R8,R15
0001382c(2): XOR ECX,ECX
0001382e(2): XOR EDX,EDX
00013830(3): MOV RSI,R12
00013833(3): MOV RDI,RBX
00013836(5): CALL 0x0000a390
0001383b(7): MOV dword ptr [R15],0x9
00013842(3): MOV RBP,RAX
00013845(5): JMP 0x00013216
0001384a(5): MOV R8,qword ptr [RSP + 0x18]
0001384f(2): XOR ECX,ECX
00013851(2): XOR EDX,EDX
00013853(3): MOV RSI,R12
00013856(3): MOV RDI,RBX
00013859(5): CALL 0x0000a390
0001385e(3): TEST RAX,RAX
00013861(5): MOV qword ptr [RSP + 0x28],RAX
00013866(6): JNZ 0x00013273
0001386c(5): JMP 0x000135f8
00013871(5): MOV RAX,qword ptr [RSP + 0x40]
00013876(6): MOV dword ptr [RAX],0x7
0001387c(5): JMP 0x00013708
00013881(5): MOV qword ptr [RSP + 0x28],R15
00013886(5): JMP 0x00012c2c
0001388b(5): MOV RDX,qword ptr [RSP + 0x40]
00013890(2): MOV dword ptr [RDX],EAX
00013892(5): JMP 0x00013708
00013897(3): MOVSXD RAX,EBX
0001389a(5): MOV R11,qword ptr [RSP + 0x20]
0001389f(4): ADD qword ptr [R14 + 0x48],RAX
000138a3(5): MOV R10,qword ptr [RSP + 0x60]
000138a8(3): MOV RDX,R11
000138ab(3): MOV RDI,R10
000138ae(5): CALL 0x00007bc0
000138b3(8): MOVZX EDX,byte ptr [0xc8 + RSP]
000138bb(3): CMP DL,0x2
000138be(2): JZ 0x00013871
000138c0(3): CMP DL,0x15
000138c3(6): JZ 0x00013ad7
000138c9(5): MOV RDX,qword ptr [RSP + 0x68]
000138ce(8): LEA RDI,[0xb0 + RSP]
000138d6(6): MOV R9D,0x1
000138dc(3): MOV R8,R11
000138df(2): MOV ECX,EAX
000138e1(11): MOV dword ptr [0xb0 + RSP],0x3
000138ec(8): MOV qword ptr [0xb8 + RSP],RDX
000138f4(3): MOV RDX,R10
000138f7(5): CALL 0x00012070
000138fc(2): TEST EAX,EAX
000138fe(2): JNZ 0x0001388b
00013900(5): MOV RDX,qword ptr [RSP + 0x20]
00013905(3): MOV RSI,R14
00013908(3): MOV RDI,R15
0001390b(5): CALL 0x00007bc0
00013910(3): MOVSXD RBX,EAX
00013913(5): MOV RAX,qword ptr [RSP + 0x10]
00013918(7): MOV ESI,dword ptr [0xa0 + RSP]
0001391f(6): MOV R9D,0x0
00013925(7): CMP dword ptr [0xb4 + RAX],0x1
0001392c(3): LEA EAX,[RSI + -0x2]
0001392f(4): CMOVG R9,R13
00013933(3): AND EAX,0xfffffffd
00013936(6): JZ 0x00013da9
0001393c(8): MOV R10D,dword ptr [0xb0 + RSP]
00013944(4): LEA EAX,[R10 + -0x2]
00013948(3): AND EAX,0xfffffffd
0001394b(6): JZ 0x00013da9
00013951(3): CMP ESI,0x3
00013954(4): SETZ R11B
00013958(6): JZ 0x00013ded
0001395e(4): CMP R10D,0x3
00013962(6): JZ 0x00013db9
00013968(2): TEST ESI,ESI
0001396a(6): JNZ 0x00013cd9
00013970(8): MOVZX EDX,byte ptr [0xa8 + RSP]
00013978(3): TEST R10D,R10D
0001397b(6): JNZ 0x00013cbd
00013981(9): MOVZX R8D,byte ptr [0xb8 + RSP]
0001398a(2): TEST ESI,ESI
0001398c(6): JZ 0x00013c76
00013992(3): TEST R11B,R11B
00013995(6): JNZ 0x00013c76
0001399b(3): TEST R9,R9
0001399e(7): MOV EDX,dword ptr [0xa8 + RSP]
000139a5(2): JZ 0x000139c4
000139a7(3): MOV EDI,R8D
000139aa(4): MOV dword ptr [RSP + 0x78],EDX
000139ae(5): MOV qword ptr [RSP + 0x70],R9
000139b3(5): CALL 0x00001e40
000139b8(5): MOV R9,qword ptr [RSP + 0x70]
000139bd(4): MOV EDX,dword ptr [RSP + 0x78]
000139c1(3): MOV R8D,EAX
000139c4(3): CMP EDX,-0x1
000139c7(6): JZ 0x00013ddd
000139cd(4): CMP R8D,-0x1
000139d1(6): JZ 0x00013ddd
000139d7(9): TEST qword ptr [RSP + 0x20],0x10000
000139e0(2): JZ 0x000139eb
000139e2(3): CMP R8D,EDX
000139e5(6): JC 0x00013da9
000139eb(3): TEST R9,R9
000139ee(2): JZ 0x00013a16
000139f0(4): MOV RAX,qword ptr [R9 + 0x40]
000139f4(5): CMP RAX,qword ptr [RSP + 0x48]
000139f9(4): MOV RCX,qword ptr [R9 + 0x8]
000139fd(6): JZ 0x00013e13
00013a03(3): MOV dword ptr [RCX + RAX*0x4],EDX
00013a06(4): MOV RCX,qword ptr [R9 + 0x10]
00013a0a(4): LEA RSI,[RAX + 0x1]
00013a0e(4): MOV qword ptr [R9 + 0x40],RSI
00013a12(4): MOV dword ptr [RCX + RAX*0x4],R8D
00013a16(2): XOR EAX,EAX
00013a18(5): MOV EDI,0x1
00013a1d(2): CMP EDX,EAX
00013a1f(2): MOV ECX,EAX
00013a21(2): JA 0x00013a39
00013a23(3): CMP R8D,EAX
00013a26(2): JC 0x00013a39
00013a28(3): MOV RSI,RAX
00013a2b(3): MOV R11,RDI
00013a2e(4): SAR RSI,0x6
00013a32(3): SHL R11,CL
00013a35(4): OR qword ptr [R12 + RSI*0x8],R11
00013a39(4): ADD RAX,0x1
00013a3d(6): CMP RAX,0x100
00013a43(2): JNZ 0x00013a1d
00013a45(5): MOV RAX,qword ptr [RSP + 0x40]
00013a4a(6): MOV dword ptr [RAX],0x0
00013a50(5): JMP 0x000136d0
00013a55(5): MOV RBX,qword ptr [RSP + 0x18]
00013a5a(3): MOV RDX,RAX
00013a5d(3): MOV RSI,R14
00013a60(4): MOV qword ptr [RSP],R8
00013a64(3): MOV R15,RAX
00013a67(3): MOV RDI,RBX
00013a6a(5): CALL 0x000122d0
00013a6f(2): CDQE
00013a71(4): ADD qword ptr [R14 + 0x48],RAX
00013a75(5): MOV R9,qword ptr [RSP + 0x40]
00013a7a(4): MOV R8,qword ptr [RSP]
00013a7e(3): MOV RCX,R15
00013a81(3): MOV RDX,RBX
00013a84(3): MOV RSI,RBP
00013a87(3): MOV RDI,R14
00013a8a(5): CALL 0x00012a90
00013a8f(5): MOV qword ptr [RSP + 0x28],RAX
00013a94(5): JMP 0x00012ba0
00013a99(5): MOV RAX,qword ptr [RSP + 0x40]
00013a9e(6): MOV dword ptr [RAX],0x2
00013aa4(5): JMP 0x00013708
00013aa9(3): MOV RDI,R12
00013aac(5): CALL 0x00001b00
00013ab1(3): MOV RDI,R13
00013ab4(5): CALL 0x00001b00
00013ab9(5): JMP 0x000135f8
00013abe(5): MOV RAX,qword ptr [RSP + 0x40]
00013ac3(9): MOV qword ptr [RSP + 0x28],0x0
00013acc(6): MOV dword ptr [RAX],0x6
00013ad2(5): JMP 0x00012ba0
00013ad7(2): MOV EAX,EBX
00013ad9(2): NEG EAX
00013adb(2): CDQE
00013add(4): ADD qword ptr [R14 + 0x48],RAX
00013ae1(5): MOV byte ptr [R15 + 0x8],0x1
00013ae6(7): MOV EAX,dword ptr [0xa0 + RSP]
00013aed(5): JMP 0x000133e5
00013af2(4): ADD qword ptr [R14 + 0x48],RBX
00013af6(5): CMP byte ptr [RSP + 0x57],0x0
00013afb(2): JZ 0x00013b11
00013afd(5): LEA RDX,[R12 + 0x20]
00013b02(3): MOV RAX,R12
00013b05(3): NOT qword ptr [RAX]
00013b08(4): ADD RAX,0x8
00013b0c(3): CMP RDX,RAX
00013b0f(2): JNZ 0x00013b05
00013b11(5): MOV RAX,qword ptr [RSP + 0x10]
00013b16(6): MOV EDX,dword ptr [0xb4 + RAX]
00013b1c(3): CMP EDX,0x1
00013b1f(2): JLE 0x00013b39
00013b21(4): MOV RCX,qword ptr [RAX + 0x78]
00013b25(2): XOR EAX,EAX
00013b27(4): MOV RSI,qword ptr [RCX + RAX*0x1]
00013b2b(4): AND qword ptr [R12 + RAX*0x1],RSI
00013b2f(4): ADD RAX,0x8
00013b33(4): CMP RAX,0x20
00013b37(2): JNZ 0x00013b27
00013b39(5): CMP qword ptr [R13 + 0x28],0x0
00013b3e(6): JNZ 0x00013bc8
00013b44(5): CMP qword ptr [R13 + 0x30],0x0
00013b49(2): JNZ 0x00013bc8
00013b4b(5): CMP qword ptr [R13 + 0x38],0x0
00013b50(2): JNZ 0x00013bc8
00013b52(5): CMP qword ptr [R13 + 0x40],0x0
00013b57(2): JNZ 0x00013bc8
00013b59(3): SUB EDX,0x1
00013b5c(2): JLE 0x00013b6c
00013b5e(5): CMP qword ptr [R13 + 0x48],0x0
00013b63(2): JNZ 0x00013bc8
00013b65(5): TEST byte ptr [R13 + 0x20],0x1
00013b6a(2): JNZ 0x00013bc8
00013b6c(3): MOV RDI,R13
00013b6f(5): CALL 0x00008df0
00013b74(5): MOV RAX,qword ptr [RSP + 0x10]
00013b79(8): LEA R8,[0xb0 + RSP]
00013b81(2): XOR ECX,ECX
00013b83(2): XOR EDX,EDX
00013b85(8): MOV byte ptr [0xb8 + RSP],0x3
00013b8d(8): MOV qword ptr [0xb0 + RSP],R12
00013b95(7): LEA RSI,[0x80 + RAX]
00013b9c(4): LEA RDI,[RAX + 0x70]
00013ba0(5): CALL 0x0000a390
00013ba5(3): TEST RAX,RAX
00013ba8(5): MOV qword ptr [RSP + 0x28],RAX
00013bad(6): JNZ 0x00012c2c
00013bb3(5): MOV RAX,qword ptr [RSP + 0x40]
00013bb8(6): MOV dword ptr [RAX],0xc
00013bbe(5): JMP 0x00013708
00013bc8(5): MOV RAX,qword ptr [RSP + 0x10]
00013bcd(8): LEA R15,[0xb0 + RSP]
00013bd5(2): XOR EDX,EDX
00013bd7(2): XOR ECX,ECX
00013bd9(3): MOV R8,R15
00013bdc(7): OR byte ptr [0xb0 + RAX],0x2
00013be3(4): LEA RBX,[RAX + 0x70]
00013be7(7): LEA RBP,[0x80 + RAX]
00013bee(8): MOV byte ptr [0xb8 + RSP],0x6
00013bf6(8): MOV qword ptr [0xb0 + RSP],R13
00013bfe(3): MOV RDI,RBX
00013c01(3): MOV RSI,RBP
00013c04(5): CALL 0x0000a390
00013c09(3): MOV RDI,RAX
00013c0c(5): MOV qword ptr [RSP + 0x28],RAX
00013c11(5): LEA RDX,[R12 + 0x20]
00013c16(3): TEST RDI,RDI
00013c19(3): MOV RAX,R12
00013c1c(2): JZ 0x00013bb3
00013c1e(4): CMP qword ptr [RAX],0x0
00013c22(6): JNZ 0x00013ecd
00013c28(4): ADD RAX,0x8
00013c2c(3): CMP RDX,RAX
00013c2f(2): JNZ 0x00013c1e
00013c31(3): MOV RDI,R12
00013c34(5): CALL 0x00001b00
00013c39(5): JMP 0x00012c2c
00013c3e(5): MOV RDX,qword ptr [RSP + 0x30]
00013c43(5): LEA RDI,[RDX + RDX*0x1 + 0x1]
00013c48(8): LEA RSI,[RDI*0x4]
00013c50(5): MOV qword ptr [RSP + 0x30],RDI
00013c55(3): MOV RDI,RAX
00013c58(5): CALL 0x00001e00
00013c5d(3): TEST RAX,RAX
00013c60(6): JZ 0x00013bb3
00013c66(4): MOV qword ptr [R13],RAX
00013c6a(4): MOV RDX,qword ptr [R13 + 0x28]
00013c6e(5): JMP 0x0001374a
00013c73(3): XOR R8D,R8D
00013c76(3): TEST R9,R9
00013c79(2): JZ 0x00013cf4
00013c7b(2): MOV EDI,EDX
00013c7d(5): MOV dword ptr [RSP + 0x78],R8D
00013c82(5): MOV qword ptr [RSP + 0x70],R9
00013c87(5): CALL 0x00001e40
00013c8c(2): MOV EDX,EAX
00013c8e(7): MOV EAX,dword ptr [0xb0 + RSP]
00013c95(5): MOV R9,qword ptr [RSP + 0x70]
00013c9a(5): MOV R8D,dword ptr [RSP + 0x78]
00013c9f(3): CMP EAX,0x3
00013ca2(6): JZ 0x000139a7
00013ca8(2): TEST EAX,EAX
00013caa(6): JZ 0x000139a7
00013cb0(8): MOV R8D,dword ptr [0xb8 + RSP]
00013cb8(5): JMP 0x000139c4
00013cbd(4): CMP R10D,0x3
00013cc1(6): JZ 0x00013f52
00013cc7(2): TEST ESI,ESI
00013cc9(2): JZ 0x00013c73
00013ccb(3): TEST R11B,R11B
00013cce(2): JNZ 0x00013c73
00013cd0(7): MOV EDX,dword ptr [0xa8 + RSP]
00013cd7(2): JMP 0x00013cb0
00013cd9(2): XOR EDX,EDX
00013cdb(3): CMP ESI,0x3
00013cde(6): JNZ 0x00013978
00013ce4(8): MOV RAX,qword ptr [0xa8 + RSP]
00013cec(3): MOVZX EDX,byte ptr [RAX]
00013cef(5): JMP 0x00013978
00013cf4(3): TEST R10D,R10D
00013cf7(6): JZ 0x000139d7
00013cfd(4): CMP R10D,0x3
00013d01(2): JNZ 0x00013cb0
00013d03(5): JMP 0x000139d7
00013d08(5): MOV EBX,0x80
00013d0d(6): MOV R12D,0x2
00013d13(5): CALL 0x00001f50
00013d18(3): MOVSXD RDX,EBX
00013d1b(3): MOVSXD R9,R12D
00013d1e(6): MOV R8D,0x1
00013d24(3): ADD RDX,RDX
00013d27(3): ADD RDX,qword ptr [RAX]
00013d2a(5): MOV RAX,qword ptr [RSP + 0x10]
00013d2f(4): LEA RDI,[RAX + R9*0x8]
00013d33(2): XOR EAX,EAX
00013d35(2): JMP 0x00013d52
00013d40(3): LEA ESI,[RBX + RAX*0x1]
00013d43(3): CMP ESI,0x5f
00013d46(2): JZ 0x00013d5a
00013d48(4): ADD RAX,0x1
00013d4c(4): CMP RAX,0x40
00013d50(2): JZ 0x00013d69
00013d52(4): TEST byte ptr [RDX + RAX*0x2],0x8
00013d56(2): MOV ECX,EAX
00013d58(2): JZ 0x00013d40
00013d5a(3): MOV RSI,R8
00013d5d(3): SHL RSI,CL
00013d60(7): OR qword ptr [0xb8 + RDI],RSI
00013d67(2): JMP 0x00013d48
00013d69(4): ADD R9,0x1
00013d6d(3): ADD EBX,0x40
00013d70(4): SUB RDX,-0x80
00013d74(4): ADD RDI,0x8
00013d78(4): CMP R9D,0x3
00013d7c(2): JLE 0x00013d33
00013d7e(5): JMP 0x000131c1
00013d83(2): XOR EBX,EBX
00013d85(3): XOR R12D,R12D
00013d88(2): JMP 0x00013d13
00013d8a(7): LEA RCX,[0x17c10]
00013d91(7): LEA RSI,[0x17628]
00013d98(7): LEA RDI,[0x17677]
00013d9f(5): MOV EDX,0xced
00013da4(5): CALL 0x00001c90
00013da9(5): MOV RAX,qword ptr [RSP + 0x40]
00013dae(6): MOV dword ptr [RAX],0xb
00013db4(5): JMP 0x00013708
00013db9(8): MOV RDI,qword ptr [0xb8 + RSP]
00013dc1(2): XOR EAX,EAX
00013dc3(4): OR RCX,-0x1
00013dc7(2): SCASB.REPNE RDI
00013dc9(3): MOV RAX,RCX
00013dcc(3): NOT RAX
00013dcf(4): SUB RAX,0x1
00013dd3(4): CMP RAX,0x1
00013dd7(6): JBE 0x00013968
00013ddd(5): MOV RAX,qword ptr [RSP + 0x40]
00013de2(6): MOV dword ptr [RAX],0x3
00013de8(5): JMP 0x00013708
00013ded(8): MOV RDI,qword ptr [0xa8 + RSP]
00013df5(2): XOR EAX,EAX
00013df7(4): OR RCX,-0x1
00013dfb(2): SCASB.REPNE RDI
00013dfd(3): MOV RAX,RCX
00013e00(3): NOT RAX
00013e03(4): SUB RAX,0x1
00013e07(4): CMP RAX,0x1
00013e0b(6): JBE 0x0001395e
00013e11(2): JMP 0x00013ddd
00013e13(5): MOV RAX,qword ptr [RSP + 0x48]
00013e18(3): MOV RDI,RCX
00013e1b(8): MOV dword ptr [0x8c + RSP],R8D
00013e23(7): MOV dword ptr [0x88 + RSP],EDX
00013e2a(5): MOV qword ptr [RSP + 0x70],R9
00013e2f(3): ADD RAX,RAX
00013e32(4): ADD RAX,0x1
00013e36(8): LEA R10,[RAX*0x4]
00013e3e(5): MOV qword ptr [RSP + 0x48],RAX
00013e43(3): MOV RSI,R10
00013e46(8): MOV qword ptr [0x80 + RSP],R10
00013e4e(5): CALL 0x00001e00
00013e53(5): MOV R9,qword ptr [RSP + 0x70]
00013e58(8): MOV R10,qword ptr [0x80 + RSP]
00013e60(5): MOV qword ptr [RSP + 0x78],RAX
00013e65(4): MOV RDI,qword ptr [R9 + 0x10]
00013e69(3): MOV RSI,R10
00013e6c(5): CALL 0x00001e00
00013e71(5): MOV RCX,qword ptr [RSP + 0x78]
00013e76(3): TEST RCX,RCX
00013e79(2): JZ 0x00013ea5
00013e7b(3): TEST RAX,RAX
00013e7e(5): MOV R9,qword ptr [RSP + 0x70]
00013e83(7): MOV EDX,dword ptr [0x88 + RSP]
00013e8a(8): MOV R8D,dword ptr [0x8c + RSP]
00013e92(2): JZ 0x00013ea5
00013e94(4): MOV qword ptr [R9 + 0x10],RAX
00013e98(4): MOV qword ptr [R9 + 0x8],RCX
00013e9c(4): MOV RAX,qword ptr [R9 + 0x40]
00013ea0(5): JMP 0x00013a03
00013ea5(3): MOV RDI,RCX
00013ea8(4): MOV qword ptr [RSP],RAX
00013eac(5): CALL 0x00001b00
00013eb1(4): MOV RAX,qword ptr [RSP]
00013eb5(3): MOV RDI,RAX
00013eb8(5): CALL 0x00001b00
00013ebd(5): MOV RAX,qword ptr [RSP + 0x40]
00013ec2(6): MOV dword ptr [RAX],0xc
00013ec8(5): JMP 0x00013708
00013ecd(2): XOR ECX,ECX
00013ecf(2): XOR EDX,EDX
00013ed1(3): MOV R8,R15
00013ed4(3): MOV RSI,RBP
00013ed7(3): MOV RDI,RBX
00013eda(8): MOV byte ptr [0xb8 + RSP],0x3
00013ee2(8): MOV qword ptr [0xb0 + RSP],R12
00013eea(5): CALL 0x0000a390
00013eef(3): TEST RAX,RAX
00013ef2(6): JZ 0x00013bb3
00013ef8(5): MOV RCX,qword ptr [RSP + 0x28]
00013efd(8): LEA R8,[0xc0 + RSP]
00013f05(3): MOV RDX,RAX
00013f08(3): MOV RSI,RBP
00013f0b(3): MOV RDI,RBX
00013f0e(8): MOV byte ptr [0xc8 + RSP],0xa
00013f16(5): CALL 0x0000a390
00013f1b(3): TEST RAX,RAX
00013f1e(5): MOV qword ptr [RSP + 0x28],RAX
00013f23(6): JNZ 0x00012c2c
00013f29(5): JMP 0x00013bb3
00013f2e(5): CALL 0x00001c20
00013f33(5): MOV RAX,qword ptr [RSP + 0x18]
00013f38(4): CMP byte ptr [RAX + 0x8],0x2
00013f3c(6): JNZ 0x00013130
00013f42(5): MOV RAX,qword ptr [RSP + 0x40]
00013f47(6): MOV dword ptr [RAX],0x9
00013f4d(5): JMP 0x0001313b
00013f52(8): MOV RAX,qword ptr [0xb8 + RSP]
00013f5a(4): MOVZX R8D,byte ptr [RAX]
00013f5e(5): JMP 0x0001398a
00013f70(2): PUSH R15
00013f72(2): PUSH R14
00013f74(3): MOV R15,RCX
00013f77(2): PUSH R13
00013f79(2): PUSH R12
00013f7b(3): MOV R13,RSI
00013f7e(1): PUSH RBP
00013f7f(1): PUSH RBX
00013f80(3): MOV RBX,R9
00013f83(3): MOV RBP,RDX
00013f86(3): MOV R12,R8
00013f89(4): SUB RSP,0x48
00013f8d(9): MOV RAX,qword ptr FS:[0x28]
00013f96(5): MOV qword ptr [RSP + 0x38],RAX
00013f9b(2): XOR EAX,EAX
00013f9d(3): MOV RAX,qword ptr [RSI]
00013fa0(4): MOV qword ptr [RSP],RDI
00013fa4(5): MOV qword ptr [RSP + 0x10],RAX
00013fa9(5): CALL 0x00012a90
00013fae(2): MOV EDX,dword ptr [RBX]
00013fb0(3): MOV R14,RAX
00013fb3(2): TEST EDX,EDX
00013fb5(2): JZ 0x00013fc0
00013fb7(3): TEST RAX,RAX
00013fba(6): JZ 0x000140ba
00013fc0(5): LEA RAX,[RSP + 0x20]
00013fc5(5): MOV qword ptr [RSP + 0x18],RAX
00013fca(6): NOP word ptr [RAX + RAX*0x1]
00013fd0(4): MOVZX EAX,byte ptr [RBP + 0x8]
00013fd4(2): MOV EDX,EAX
00013fd6(3): AND EDX,0xfffffff7
00013fd9(3): CMP DL,0x2
00013fdc(6): JZ 0x00014070
00013fe2(2): CMP AL,0x9
00013fe4(2): JNZ 0x00013fef
00013fe6(3): TEST R12,R12
00013fe9(6): JNZ 0x00014070
00013fef(4): MOV RDI,qword ptr [RSP]
00013ff3(3): MOV R9,RBX
00013ff6(3): MOV R8,R12
00013ff9(3): MOV RCX,R15
00013ffc(3): MOV RDX,RBP
00013fff(3): MOV RSI,R13
00014002(5): CALL 0x00012a90
00014007(3): MOV R9,RAX
0001400a(2): MOV EAX,dword ptr [RBX]
0001400c(2): TEST EAX,EAX
0001400e(2): JZ 0x00014019
00014010(3): TEST R9,R9
00014013(6): JZ 0x000140a4
00014019(3): TEST R14,R14
0001401c(2): JZ 0x00014098
0001401e(3): TEST R9,R9
00014021(2): JZ 0x00014098
00014023(5): MOV RAX,qword ptr [RSP + 0x10]
00014028(5): MOV R8,qword ptr [RSP + 0x18]
0001402d(3): MOV RCX,R9
00014030(3): MOV RDX,R14
00014033(5): MOV qword ptr [RSP + 0x8],R9
00014038(5): MOV byte ptr [RSP + 0x28],0x10
0001403d(7): LEA RSI,[0x80 + RAX]
00014044(4): LEA RDI,[RAX + 0x70]
00014048(5): CALL 0x0000a390
0001404d(3): TEST RAX,RAX
00014050(5): MOV R9,qword ptr [RSP + 0x8]
00014055(2): JZ 0x000140c0
00014057(3): MOV R14,RAX
0001405a(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001405e(2): MOV EDX,EAX
00014060(3): AND EDX,0xfffffff7
00014063(3): CMP DL,0x2
00014066(6): JNZ 0x00013fe2
0001406c(4): NOP dword ptr [RAX]
00014070(5): MOV RCX,qword ptr [RSP + 0x38]
00014075(9): XOR RCX,qword ptr FS:[0x28]
0001407e(3): MOV RAX,R14
00014081(2): JNZ 0x000140ed
00014083(4): ADD RSP,0x48
00014087(1): POP RBX
00014088(1): POP RBP
00014089(2): POP R12
0001408b(2): POP R13
0001408d(2): POP R14
0001408f(2): POP R15
00014091(1): RET
00014098(3): TEST R14,R14
0001409b(4): CMOVZ R14,R9
0001409f(5): JMP 0x00013fd0
000140a4(3): TEST R14,R14
000140a7(2): JZ 0x000140ba
000140a9(7): LEA RSI,[0x8e50]
000140b0(2): XOR EDX,EDX
000140b2(3): MOV RDI,R14
000140b5(5): CALL 0x00007fb0
000140ba(3): XOR R14D,R14D
000140bd(2): JMP 0x00014070
000140c0(7): LEA RSI,[0x8e50]
000140c7(3): MOV RDI,R9
000140ca(2): XOR EDX,EDX
000140cc(5): CALL 0x00007fb0
000140d1(7): LEA RSI,[0x8e50]
000140d8(3): MOV RDI,R14
000140db(2): XOR EDX,EDX
000140dd(3): XOR R14D,R14D
000140e0(5): CALL 0x00007fb0
000140e5(6): MOV dword ptr [RBX],0xc
000140eb(2): JMP 0x00014070
000140ed(5): CALL 0x00001c20
000140f2(4): NOP dword ptr [RAX]
000140f6(10): NOP word ptr CS:[RAX + RAX*0x1]
00014100(2): PUSH R15
00014102(2): PUSH R14
00014104(3): MOV R14,RCX
00014107(2): PUSH R13
00014109(2): PUSH R12
0001410b(3): MOV R13,R9
0001410e(1): PUSH RBP
0001410f(1): PUSH RBX
00014110(3): MOV RBP,RDX
00014113(3): MOV R12,RDI
00014116(4): SUB RSP,0x58
0001411a(3): MOV RBX,qword ptr [RSI]
0001411d(9): MOV RAX,qword ptr FS:[0x28]
00014126(5): MOV qword ptr [RSP + 0x48],RAX
0001412b(2): XOR EAX,EAX
0001412d(5): MOV qword ptr [RSP + 0x28],RSI
00014132(5): MOV qword ptr [RSP + 0x10],R8
00014137(7): MOV RAX,qword ptr [0xa8 + RBX]
0001413e(5): MOV qword ptr [RSP + 0x20],RAX
00014143(5): CALL 0x00013f70
00014148(4): MOV EDX,dword ptr [R13]
0001414c(3): MOV R15,RAX
0001414f(2): TEST EDX,EDX
00014151(2): JZ 0x0001415c
00014153(3): TEST RAX,RAX
00014156(6): JZ 0x00014242
0001415c(5): LEA RAX,[RSP + 0x30]
00014161(5): MOV qword ptr [RSP + 0x8],RAX
00014166(5): JMP 0x000141f4
00014170(2): CMP AL,0x9
00014172(2): JNZ 0x00014180
00014174(6): CMP qword ptr [RSP + 0x10],0x0
0001417a(6): JNZ 0x00014228
00014180(7): MOV RAX,qword ptr [0xa8 + RBX]
00014187(5): MOV R8,qword ptr [RSP + 0x10]
0001418c(3): MOV RCX,R14
0001418f(5): MOV RSI,qword ptr [RSP + 0x28]
00014194(3): MOV R9,R13
00014197(3): MOV RDX,RBP
0001419a(3): MOV RDI,R12
0001419d(5): MOV qword ptr [RSP + 0x18],RAX
000141a2(5): MOV RAX,qword ptr [RSP + 0x20]
000141a7(7): MOV qword ptr [0xa8 + RBX],RAX
000141ae(5): CALL 0x00013f70
000141b3(3): MOV RCX,RAX
000141b6(4): MOV EAX,dword ptr [R13]
000141ba(2): TEST EAX,EAX
000141bc(2): JZ 0x000141c3
000141be(3): TEST RCX,RCX
000141c1(2): JZ 0x0001422c
000141c3(5): MOV RAX,qword ptr [RSP + 0x18]
000141c8(7): OR qword ptr [0xa8 + RBX],RAX
000141cf(5): MOV R8,qword ptr [RSP + 0x8]
000141d4(7): LEA RSI,[0x80 + RBX]
000141db(4): LEA RDI,[RBX + 0x70]
000141df(3): MOV RDX,R15
000141e2(5): MOV byte ptr [RSP + 0x38],0xa
000141e7(5): CALL 0x0000a390
000141ec(3): TEST RAX,RAX
000141ef(3): MOV R15,RAX
000141f2(2): JZ 0x00014270
000141f4(4): CMP byte ptr [RBP + 0x8],0xa
000141f8(2): JNZ 0x00014248
000141fa(3): MOV RDX,R14
000141fd(3): MOV RSI,R12
00014200(3): MOV RDI,RBP
00014203(7): OR RDX,0x800000
0001420a(5): CALL 0x000122d0
0001420f(2): CDQE
00014211(5): ADD qword ptr [R12 + 0x48],RAX
00014216(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001421a(2): MOV EDX,EAX
0001421c(3): AND EDX,0xfffffff7
0001421f(3): CMP DL,0x2
00014222(6): JNZ 0x00014170
00014228(2): XOR ECX,ECX
0001422a(2): JMP 0x000141cf
0001422c(3): TEST R15,R15
0001422f(2): JZ 0x00014242
00014231(7): LEA RSI,[0x8e50]
00014238(2): XOR EDX,EDX
0001423a(3): MOV RDI,R15
0001423d(5): CALL 0x00007fb0
00014242(3): XOR R15D,R15D
00014245(3): NOP dword ptr [RAX]
00014248(5): MOV RCX,qword ptr [RSP + 0x48]
0001424d(9): XOR RCX,qword ptr FS:[0x28]
00014256(3): MOV RAX,R15
00014259(2): JNZ 0x0001427a
0001425b(4): ADD RSP,0x58
0001425f(1): POP RBX
00014260(1): POP RBP
00014261(2): POP R12
00014263(2): POP R13
00014265(2): POP R14
00014267(2): POP R15
00014269(1): RET
00014270(8): MOV dword ptr [R13],0xc
00014278(2): JMP 0x00014248
0001427a(5): CALL 0x00001c20
0001427f(1): NOP
00014280(2): PUSH R15
00014282(2): PUSH R14
00014284(2): PUSH R13
00014286(2): PUSH R12
00014288(1): PUSH RBP
00014289(1): PUSH RBX
0001428a(7): SUB RSP,0x128
00014291(4): MOV qword ptr [RDI + 0x18],RCX
00014295(8): MOV qword ptr [RDI + 0x10],0x0
0001429d(9): MOV RAX,qword ptr FS:[0x28]
000142a6(8): MOV qword ptr [0x118 + RSP],RAX
000142ae(2): XOR EAX,EAX
000142b0(4): MOVZX EAX,byte ptr [RDI + 0x38]
000142b4(5): MOV qword ptr [RSP + 0x8],RDI
000142b9(5): MOV qword ptr [RSP + 0x10],RSI
000142be(4): MOV qword ptr [RSP],RDX
000142c2(5): MOV qword ptr [RSP + 0x18],RCX
000142c7(8): MOV dword ptr [RSP + 0x4c],0x0
000142cf(8): MOV qword ptr [RDI + 0x30],0x0
000142d7(3): MOV RBX,qword ptr [RDI]
000142da(4): MOV byte ptr [RSP + 0x20],AL
000142de(3): AND EAX,0xffffff90
000142e1(8): CMP qword ptr [RDI + 0x8],0xe7
000142e9(3): MOV byte ptr [RDI + 0x38],AL
000142ec(6): JBE 0x000150e6
000142f2(4): LEA RDI,[RBX + 0x8]
000142f6(5): MOV RAX,qword ptr [RSP + 0x8]
000142fb(3): MOV RCX,RBX
000142fe(4): AND RDI,-0x8
00014302(3): SUB RCX,RDI
00014305(8): MOV qword ptr [RAX + 0x10],0xe8
0001430d(2): XOR EAX,EAX
0001430f(6): ADD ECX,0xe8
00014315(7): MOV qword ptr [RBX],0x0
0001431c(11): MOV qword ptr [0xe0 + RBX],0x0
00014327(3): SHR ECX,0x3
0001432a(3): STOSQ.REP RDI
0001432d(10): MOV RAX,0x555555555555554
00014337(10): MOV dword ptr [0x80 + RBX],0xf
00014341(4): CMP qword ptr [RSP],RAX
00014345(6): JA 0x00014986
0001434b(4): MOV R14,qword ptr [RSP]
0001434f(4): LEA RAX,[R14 + 0x1]
00014353(3): MOV RDI,RAX
00014356(4): MOV qword ptr [RBX + 0x8],RAX
0001435a(5): MOV qword ptr [RSP + 0x28],RAX
0001435f(4): SHL RDI,0x4
00014363(5): CALL 0x00001da0
00014368(3): TEST R14,R14
0001436b(3): MOV qword ptr [RBX],RAX
0001436e(6): JZ 0x00015055
00014374(5): MOV ESI,0x1
00014379(7): NOP dword ptr [RAX]
00014380(3): ADD RSI,RSI
00014383(4): CMP qword ptr [RSP],RSI
00014387(2): JNC 0x00014380
00014389(4): LEA RBP,[RSI + -0x1]
0001438d(5): MOV EDI,0x18
00014392(5): CALL 0x00001d30
00014397(7): MOV qword ptr [0x88 + RBX],RBP
0001439e(4): MOV qword ptr [RBX + 0x40],RAX
000143a2(5): CALL 0x00001c00
000143a7(5): MOV EDI,0xe
000143ac(6): MOV dword ptr [0xb4 + RBX],EAX
000143b2(5): CALL 0x00001dd0
000143b7(3): MOVZX EDX,byte ptr [RAX]
000143ba(3): AND EDX,0xffffffdf
000143bd(3): CMP DL,0x55
000143c0(2): JNZ 0x00014410
000143c2(4): MOVZX EDX,byte ptr [RAX + 0x1]
000143c6(3): AND EDX,0xffffffdf
000143c9(3): CMP DL,0x54
000143cc(2): JNZ 0x00014410
000143ce(4): MOVZX EDX,byte ptr [RAX + 0x2]
000143d2(3): AND EDX,0xffffffdf
000143d5(3): CMP DL,0x46
000143d8(2): JNZ 0x00014410
000143da(2): XOR EDX,EDX
000143dc(4): CMP byte ptr [RAX + 0x3],0x2d
000143e0(7): LEA RDI,[0x176ce]
000143e7(5): MOV ECX,0x2
000143ec(3): SETZ DL
000143ef(5): LEA RSI,[RAX + RDX*0x1 + 0x3]
000143f4(2): CMPSB.REPE RDI,RSI
000143f6(3): SETA AL
000143f9(2): SBB AL,0x0
000143fb(2): TEST AL,AL
000143fd(2): JNZ 0x00014410
000143ff(7): OR byte ptr [0xb0 + RBX],0x4
00014406(10): NOP word ptr CS:[RAX + RAX*0x1]
00014410(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00014417(2): MOV EDX,EAX
00014419(3): AND EDX,0xfffffff7
0001441c(7): CMP dword ptr [0xb4 + RBX],0x1
00014423(6): MOV byte ptr [0xb0 + RBX],DL
00014429(2): JLE 0x0001443e
0001442b(2): TEST AL,0x4
0001442d(6): JZ 0x00014993
00014433(7): LEA RAX,[0x17c40]
0001443a(4): MOV qword ptr [RBX + 0x78],RAX
0001443e(4): CMP qword ptr [RBX],0x0
00014442(6): JZ 0x00014986
00014448(5): CMP qword ptr [RBX + 0x40],0x0
0001444d(6): JZ 0x00014986
00014453(5): MOV RAX,qword ptr [RSP + 0x18]
00014458(8): LEA RBP,[0x80 + RSP]
00014460(5): MOV ECX,0x12
00014465(8): MOV dword ptr [RSP + 0x4c],0x0
0001446d(4): LEA R8,[RBP + 0x8]
00014471(5): AND EAX,0x400000
00014476(5): MOV qword ptr [RSP + 0x20],RAX
0001447b(5): MOV RAX,qword ptr [RSP + 0x8]
00014480(3): SETNZ DL
00014483(3): MOV RDI,R8
00014486(4): MOV RSI,qword ptr [RAX + 0x28]
0001448a(2): XOR EAX,EAX
0001448c(3): STOSQ.REP RDI
0001448f(5): MOV RAX,qword ptr [RSP + 0x10]
00014494(4): MOV RDI,qword ptr [RSP]
00014498(3): TEST RSI,RSI
0001449b(7): MOV byte ptr [0x108 + RSP],DL
000144a2(6): MOV ECX,dword ptr [0xb4 + RBX]
000144a8(4): SETNZ R12B
000144ac(8): MOV qword ptr [0xf8 + RSP],RSI
000144b4(8): MOV qword ptr [0x80 + RSP],RAX
000144bc(7): MOVZX EAX,byte ptr [0xb0 + RBX]
000144c3(3): OR R12D,EDX
000144c6(8): MOV qword ptr [0xd8 + RSP],RDI
000144ce(8): MOV qword ptr [0xd0 + RSP],RDI
000144d6(3): MOV ESI,R12D
000144d9(8): MOV byte ptr [0x10b + RSP],R12B
000144e1(7): MOV dword ptr [0x110 + RSP],ECX
000144e8(8): MOV qword ptr [0xe8 + RSP],RDI
000144f0(8): MOV qword ptr [0xe0 + RSP],RDI
000144f8(2): MOV EDX,EAX
000144fa(3): SHR AL,0x3
000144fd(3): SHR DL,0x2
00014500(3): AND EAX,0x1
00014503(3): AND EDX,0x1
00014506(3): TEST RDI,RDI
00014509(7): MOV byte ptr [0x10a + RSP],AL
00014510(7): MOV byte ptr [0x109 + RSP],DL
00014517(6): JNZ 0x00014955
0001451d(3): TEST SIL,SIL
00014520(2): JZ 0x0001452f
00014522(8): MOV RAX,qword ptr [0x88 + RSP]
0001452a(5): MOV qword ptr [RSP + 0x10],RAX
0001452f(6): CMP qword ptr [RSP + 0x20],0x0
00014535(5): MOV RAX,qword ptr [RSP + 0x10]
0001453a(8): MOV qword ptr [0x88 + RSP],RAX
00014542(6): JZ 0x00014645
00014548(3): CMP ECX,0x1
0001454b(6): JLE 0x0001513d
00014551(3): MOV RDI,RBP
00014554(5): CALL 0x000085f0
00014559(2): TEST EAX,EAX
0001455b(2): JNZ 0x000145a0
0001455d(4): MOV RAX,qword ptr [RSP]
00014561(8): CMP RAX,qword ptr [0xb8 + RSP]
00014569(6): JLE 0x00015120
0001456f(7): MOVSXD RAX,dword ptr [0xb4 + RBX]
00014576(8): MOV RSI,qword ptr [0xc0 + RSP]
0001457e(8): ADD RAX,qword ptr [0xb0 + RSP]
00014586(3): CMP RSI,RAX
00014589(6): JG 0x00015120
0001458f(3): ADD RSI,RSI
00014592(3): MOV RDI,RBP
00014595(5): CALL 0x00008080
0001459a(2): TEST EAX,EAX
0001459c(2): JZ 0x00014551
0001459e(2): NOP
000145a0(4): MOV dword ptr [RSP + 0x4c],EAX
000145a4(5): MOV RAX,qword ptr [RSP + 0x8]
000145a9(3): MOV R13,qword ptr [RAX]
000145ac(4): MOV RDI,qword ptr [R13 + 0x70]
000145b0(3): TEST RDI,RDI
000145b3(2): JZ 0x000145c8
000145b5(3): NOP dword ptr [RAX]
000145b8(3): MOV R12,qword ptr [RDI]
000145bb(5): CALL 0x00001b00
000145c0(3): TEST R12,R12
000145c3(3): MOV RDI,R12
000145c6(2): JNZ 0x000145b8
000145c8(4): MOV RDI,qword ptr [R13 + 0x20]
000145cc(8): MOV qword ptr [R13 + 0x70],0x0
000145d4(11): MOV dword ptr [0x80 + R13],0xf
000145df(8): MOV qword ptr [R13 + 0x68],0x0
000145e7(5): CALL 0x00001b00
000145ec(8): MOV qword ptr [R13 + 0x20],0x0
000145f4(3): MOV RDI,RBP
000145f7(5): CALL 0x000093c0
000145fc(3): MOV RDI,RBX
000145ff(5): CALL 0x00009400
00014604(5): MOV RAX,qword ptr [RSP + 0x8]
00014609(7): MOV qword ptr [RAX],0x0
00014610(8): MOV qword ptr [RAX + 0x8],0x0
00014618(4): MOV EAX,dword ptr [RSP + 0x4c]
0001461c(8): MOV RBX,qword ptr [0x118 + RSP]
00014624(9): XOR RBX,qword ptr FS:[0x28]
0001462d(6): JNZ 0x00015370
00014633(7): ADD RSP,0x128
0001463a(1): POP RBX
0001463b(1): POP RBP
0001463c(2): POP R12
0001463e(2): POP R13
00014640(2): POP R14
00014642(2): POP R15
00014644(1): RET
00014645(3): CMP ECX,0x1
00014648(6): JG 0x00014ffa
0001464e(3): TEST R12B,R12B
00014651(8): MOV RSI,qword ptr [0xc0 + RSP]
00014659(6): JZ 0x00014c74
0001465f(8): CMP qword ptr [0xd8 + RSP],RSI
00014667(8): MOV RAX,qword ptr [0xb0 + RSP]
0001466f(9): CMOVLE RSI,qword ptr [0xd8 + RSP]
00014678(3): CMP RSI,RAX
0001467b(2): JG 0x0001468d
0001467d(2): JMP 0x000146c0
00014680(8): MOV RDX,qword ptr [0x88 + RSP]
00014688(5): MOV qword ptr [RSP + 0x10],RDX
0001468d(8): MOV RDX,qword ptr [0x80 + RSP]
00014695(8): MOV RCX,qword ptr [0xf8 + RSP]
0001469d(3): ADD RDX,RAX
000146a0(8): ADD RDX,qword ptr [0xa8 + RSP]
000146a8(3): MOVZX EDX,byte ptr [RDX]
000146ab(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
000146af(5): MOV RCX,qword ptr [RSP + 0x10]
000146b4(3): MOV byte ptr [RCX + RAX*0x1],DL
000146b7(4): ADD RAX,0x1
000146bb(3): CMP RSI,RAX
000146be(2): JNZ 0x00014680
000146c0(8): MOV qword ptr [0xb0 + RSP],RAX
000146c8(8): MOV qword ptr [0xb8 + RSP],RAX
000146d0(8): MOV dword ptr [RSP + 0x4c],0x0
000146d8(5): MOV R12,qword ptr [RSP + 0x8]
000146dd(5): MOV R14,qword ptr [RSP + 0x18]
000146e2(5): LEA R13,[RSP + 0x50]
000146e7(3): MOV RSI,RBP
000146ea(3): MOV RDI,R13
000146ed(5): MOV qword ptr [RSP + 0x28],R13
000146f2(4): MOV R15,qword ptr [R12]
000146f6(3): MOV RDX,R14
000146f9(9): MOV qword ptr [R12 + 0x30],0x0
00014702(7): OR RDX,0x800000
00014709(7): MOV qword ptr [0xd8 + R15],R14
00014710(5): CALL 0x000122d0
00014715(5): LEA R9,[RSP + 0x4c]
0001471a(3): XOR R8D,R8D
0001471d(3): MOV RCX,R14
00014720(3): MOV RDX,R13
00014723(3): MOV RSI,R12
00014726(3): MOV RDI,RBP
00014729(2): CDQE
0001472b(8): ADD qword ptr [0xc8 + RSP],RAX
00014733(5): CALL 0x00014100
00014738(4): MOV ECX,dword ptr [RSP + 0x4c]
0001473c(2): TEST ECX,ECX
0001473e(6): JNZ 0x00015167
00014744(4): LEA R13,[R15 + 0x70]
00014748(5): LEA R12,[RSP + 0x60]
0001474d(4): SUB R15,-0x80
00014751(2): XOR EDX,EDX
00014753(2): XOR ECX,ECX
00014755(3): MOV RSI,R15
00014758(3): MOV R8,R12
0001475b(3): MOV RDI,R13
0001475e(4): MOV qword ptr [RSP],RAX
00014762(5): MOV byte ptr [RSP + 0x68],0x2
00014767(5): CALL 0x0000a390
0001476c(4): MOV R9,qword ptr [RSP]
00014770(3): MOV R11,RAX
00014773(3): MOV RDX,RAX
00014776(3): TEST R9,R9
00014779(2): JZ 0x000147a2
0001477b(3): MOV RCX,R11
0001477e(3): MOV RDX,R9
00014781(3): MOV R8,R12
00014784(3): MOV RSI,R15
00014787(3): MOV RDI,R13
0001478a(4): MOV qword ptr [RSP],R11
0001478e(5): MOV byte ptr [RSP + 0x68],0x10
00014793(5): CALL 0x0000a390
00014798(4): MOV R11,qword ptr [RSP]
0001479c(3): MOV RDX,R11
0001479f(3): MOV R11,RAX
000147a2(3): TEST RDX,RDX
000147a5(5): MOV RCX,qword ptr [RSP + 0x8]
000147aa(3): SETZ DL
000147ad(3): TEST R11,R11
000147b0(3): SETZ AL
000147b3(2): OR DL,AL
000147b5(3): MOV R13,qword ptr [RCX]
000147b8(6): JNZ 0x00015152
000147be(4): MOV R15,qword ptr [R13 + 0x8]
000147c2(4): MOV qword ptr [RBX + 0x68],R11
000147c6(8): LEA RCX,[R15*0x8]
000147ce(4): LEA R15,[R15 + R15*0x2]
000147d2(3): MOV RDI,RCX
000147d5(4): MOV qword ptr [RSP],RCX
000147d9(4): SHL R15,0x3
000147dd(5): CALL 0x00001da0
000147e2(4): MOV RCX,qword ptr [RSP]
000147e6(4): MOV qword ptr [R13 + 0x18],RAX
000147ea(5): MOV qword ptr [RSP + 0x18],RAX
000147ef(3): MOV RDI,RCX
000147f2(5): CALL 0x00001da0
000147f7(3): MOV RDI,R15
000147fa(4): MOV qword ptr [R13 + 0x20],RAX
000147fe(5): MOV qword ptr [RSP + 0x10],RAX
00014803(5): CALL 0x00001da0
00014808(3): MOV RDI,R15
0001480b(4): MOV qword ptr [R13 + 0x28],RAX
0001480f(4): MOV qword ptr [RSP],RAX
00014813(5): CALL 0x00001da0
00014818(5): MOV RDX,qword ptr [RSP + 0x18]
0001481d(4): MOV qword ptr [R13 + 0x30],RAX
00014821(4): MOV RSI,qword ptr [RSP]
00014825(5): MOV RCX,qword ptr [RSP + 0x10]
0001482a(3): TEST RDX,RDX
0001482d(6): JZ 0x00014fed
00014833(3): TEST RCX,RCX
00014836(6): JZ 0x00014fed
0001483c(3): TEST RSI,RSI
0001483f(6): JZ 0x00014fed
00014845(3): TEST RAX,RAX
00014848(6): JZ 0x00014fed
0001484e(5): MOV RAX,qword ptr [RSP + 0x8]
00014853(4): MOV R15,qword ptr [RAX + 0x30]
00014857(8): LEA RDI,[R15*0x8]
0001485f(5): CALL 0x00001da0
00014864(3): TEST RAX,RAX
00014867(7): MOV qword ptr [0xe0 + R13],RAX
0001486e(2): JZ 0x000148dd
00014870(3): TEST R15,R15
00014873(2): JZ 0x0001488d
00014875(2): XOR EDX,EDX
00014877(9): NOP word ptr [RAX + RAX*0x1]
00014880(4): MOV qword ptr [RAX + RDX*0x8],RDX
00014884(4): ADD RDX,0x1
00014888(3): CMP RDX,R15
0001488b(2): JNZ 0x00014880
0001488d(4): MOV RDI,qword ptr [R13 + 0x68]
00014891(7): LEA RSI,[0x9890]
00014898(3): MOV RDX,R13
0001489b(5): CALL 0x00008020
000148a0(5): MOV RAX,qword ptr [RSP + 0x8]
000148a5(7): MOV RDI,qword ptr [0xe0 + R13]
000148ac(4): MOV RDX,qword ptr [RAX + 0x30]
000148b0(3): TEST RDX,RDX
000148b3(6): JZ 0x000151a4
000148b9(3): MOV RAX,qword ptr [RDI]
000148bc(3): TEST RAX,RAX
000148bf(2): JZ 0x000148ce
000148c1(2): JMP 0x000148dd
000148c8(4): CMP qword ptr [RDI + RAX*0x8],RAX
000148cc(2): JNZ 0x000148dd
000148ce(4): ADD RAX,0x1
000148d2(3): CMP RDX,RAX
000148d5(2): JA 0x000148c8
000148d7(6): JZ 0x000151a4
000148dd(4): MOV RDI,qword ptr [R13 + 0x68]
000148e1(5): MOV RDX,qword ptr [RSP + 0x8]
000148e6(7): LEA RSI,[0xa790]
000148ed(5): CALL 0x00007fb0
000148f2(2): TEST EAX,EAX
000148f4(6): JNZ 0x000145a0
000148fa(4): MOV RDI,qword ptr [R13 + 0x68]
000148fe(7): LEA RSI,[0xcd00]
00014905(3): MOV RDX,R13
00014908(5): CALL 0x00007fb0
0001490d(2): TEST EAX,EAX
0001490f(6): JNZ 0x000145a0
00014915(4): MOV RDI,qword ptr [R13 + 0x68]
00014919(7): LEA RSI,[0x9920]
00014920(3): MOV RDX,R13
00014923(5): CALL 0x00008020
00014928(4): MOV RDX,qword ptr [R13 + 0x68]
0001492c(7): LEA RSI,[0x17b48]
00014933(5): NOP dword ptr [RAX + RAX*0x1]
00014938(4): MOVZX ECX,byte ptr [RDX + 0x30]
0001493c(4): MOV RDI,qword ptr [RDX + 0x38]
00014940(3): CMP CL,0x10
00014943(6): JA 0x00014a18
00014949(3): MOVZX EAX,CL
0001494c(4): MOVSXD RAX,dword ptr [RSI + RAX*0x4]
00014950(3): ADD RAX,RSI
00014953(2): JMP RAX
00014955(5): MOV RSI,qword ptr [RSP + 0x28]
0001495a(3): MOV RDI,RBP
0001495d(5): CALL 0x00008080
00014962(2): TEST EAX,EAX
00014964(6): JNZ 0x000145a0
0001496a(8): MOVZX ESI,byte ptr [0x10b + RSP]
00014972(6): MOV ECX,dword ptr [0xb4 + RBX]
00014978(3): TEST SIL,SIL
0001497b(6): JZ 0x0001452f
00014981(5): JMP 0x00014522
00014986(8): MOV dword ptr [RSP + 0x4c],0xc
0001498e(5): JMP 0x000145fc
00014993(5): MOV ESI,0x1
00014998(5): MOV EDI,0x20
0001499d(5): CALL 0x00001d30
000149a2(3): TEST RAX,RAX
000149a5(4): MOV qword ptr [RBX + 0x78],RAX
000149a9(2): JZ 0x00014986
000149ab(3): XOR R12D,R12D
000149ae(2): XOR EBP,EBP
000149b0(6): MOV R13D,0x1
000149b6(3): XOR R15D,R15D
000149b9(7): NOP dword ptr [RAX]
000149c0(5): LEA R14D,[RBP + R15*0x1]
000149c5(3): MOV EDI,R14D
000149c8(5): CALL 0x00001e40
000149cd(3): CMP EAX,-0x1
000149d0(2): JZ 0x000149e5
000149d2(4): MOV RSI,qword ptr [RBX + 0x78]
000149d6(3): MOV RDI,R13
000149d9(3): MOV ECX,R15D
000149dc(3): SHL RDI,CL
000149df(3): ADD RSI,R12
000149e2(3): OR qword ptr [RSI],RDI
000149e5(7): TEST R14D,0xffffff80
000149ec(2): JNZ 0x000149fa
000149ee(3): CMP EAX,R14D
000149f1(2): JZ 0x000149fa
000149f3(7): OR byte ptr [0xb0 + RBX],0x8
000149fa(4): ADD R15,0x1
000149fe(4): CMP R15,0x40
00014a02(2): JNZ 0x000149c0
00014a04(3): ADD EBP,0x40
00014a07(4): ADD R12,0x8
00014a0b(6): CMP EBP,0x100
00014a11(2): JNZ 0x000149b6
00014a13(5): JMP 0x0001443e
00014a18(3): AND ECX,0x8
00014a1b(6): JNZ 0x00015332
00014a21(4): MOV RAX,qword ptr [RDX + 0x20]
00014a25(4): MOV RCX,qword ptr [RAX + 0x38]
00014a29(4): MOV RAX,qword ptr [R13 + 0x18]
00014a2d(4): MOV qword ptr [RAX + RDI*0x8],RCX
00014a31(4): MOV R15,qword ptr [RDX + 0x8]
00014a35(2): XOR EDI,EDI
00014a37(3): TEST R15,R15
00014a3a(2): JZ 0x00014a4b
00014a3c(3): MOV RDX,R15
00014a3f(5): JMP 0x00014938
00014a48(3): MOV RDX,RAX
00014a4b(4): MOV R15,qword ptr [RDX + 0x10]
00014a4f(3): TEST R15,R15
00014a52(3): SETZ CL
00014a55(3): CMP R15,RDI
00014a58(3): SETZ AL
00014a5b(2): OR CL,AL
00014a5d(4): MOV byte ptr [RSP + 0x10],CL
00014a61(2): JZ 0x00014a3c
00014a63(3): MOV RAX,qword ptr [RDX]
00014a66(3): MOV RDI,RDX
00014a69(3): TEST RAX,RAX
00014a6c(2): JNZ 0x00014a48
00014a6e(3): XOR R14D,R14D
00014a71(3): XOR R15D,R15D
00014a74(4): NOP dword ptr [RAX]
00014a78(4): MOV RDX,qword ptr [R13 + 0x10]
00014a7c(3): CMP RDX,R15
00014a7f(2): JZ 0x00014aa6
00014a81(4): LEA R10,[R15 + R15*0x2]
00014a85(4): MOV RAX,qword ptr [R13 + 0x30]
00014a89(4): SHL R10,0x3
00014a8d(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
00014a93(6): JZ 0x00014c98
00014a99(4): MOV RDX,qword ptr [R13 + 0x10]
00014a9d(4): ADD R15,0x1
00014aa1(3): CMP RDX,R15
00014aa4(2): JNZ 0x00014a81
00014aa6(3): TEST R14B,R14B
00014aa9(6): JZ 0x00014cee
00014aaf(3): XOR R14D,R14D
00014ab2(3): XOR R15D,R15D
00014ab5(2): JMP 0x00014a81
00014ab7(8): OR byte ptr [0xb0 + R13],0x1
00014abf(4): MOV R15,qword ptr [RDX + 0x8]
00014ac3(3): TEST R15,R15
00014ac6(6): JZ 0x000150d9
00014acc(4): MOV RAX,qword ptr [R15 + 0x18]
00014ad0(4): MOV RCX,qword ptr [RAX + 0x38]
00014ad4(4): MOV RAX,qword ptr [RDX + 0x10]
00014ad8(3): TEST RAX,RAX
00014adb(6): JZ 0x000150cc
00014ae1(4): MOV RAX,qword ptr [RAX + 0x18]
00014ae5(4): MOV R9,qword ptr [RAX + 0x38]
00014ae9(3): TEST RCX,RCX
00014aec(6): JS 0x00015351
00014af2(3): TEST R9,R9
00014af5(6): JS 0x00015313
00014afb(4): MOV RAX,qword ptr [R13 + 0x28]
00014aff(4): LEA RDI,[RDI + RDI*0x2]
00014b03(5): MOV qword ptr [RSP + 0x38],RSI
00014b08(5): MOV qword ptr [RSP + 0x30],R9
00014b0d(5): MOV qword ptr [RSP + 0x18],RCX
00014b12(5): MOV qword ptr [RSP + 0x10],RDX
00014b17(4): LEA R10,[RAX + RDI*0x8]
00014b1b(5): MOV EDI,0x10
00014b20(7): MOV qword ptr [R10],0x2
00014b27(4): MOV qword ptr [RSP],R10
00014b2b(5): CALL 0x00001da0
00014b30(4): MOV R10,qword ptr [RSP]
00014b34(3): TEST RAX,RAX
00014b37(5): MOV RDX,qword ptr [RSP + 0x10]
00014b3c(5): MOV RCX,qword ptr [RSP + 0x18]
00014b41(5): MOV R9,qword ptr [RSP + 0x30]
00014b46(5): MOV RSI,qword ptr [RSP + 0x38]
00014b4b(4): MOV qword ptr [R10 + 0x10],RAX
00014b4f(6): JZ 0x00014dea
00014b55(3): CMP RCX,R9
00014b58(6): JZ 0x0001512d
00014b5e(8): MOV qword ptr [R10 + 0x8],0x2
00014b66(6): JL 0x00015114
00014b6c(3): MOV qword ptr [RAX],R9
00014b6f(4): MOV qword ptr [RAX + 0x8],RCX
00014b73(5): JMP 0x00014a35
00014b78(4): MOV RAX,qword ptr [RDX + 0x20]
00014b7c(4): LEA RCX,[RDI + RDI*0x2]
00014b80(5): MOV EDI,0x8
00014b85(5): MOV qword ptr [RSP + 0x10],RSI
00014b8a(4): MOV qword ptr [RSP],RDX
00014b8e(4): MOV R14,qword ptr [RAX + 0x38]
00014b92(4): MOV RAX,qword ptr [R13 + 0x28]
00014b96(4): LEA R15,[RAX + RCX*0x8]
00014b9a(7): MOV qword ptr [R15],0x1
00014ba1(8): MOV qword ptr [R15 + 0x8],0x1
00014ba9(5): CALL 0x00001da0
00014bae(3): TEST RAX,RAX
00014bb1(4): MOV qword ptr [R15 + 0x10],RAX
00014bb5(4): MOV RDX,qword ptr [RSP]
00014bb9(5): MOV RSI,qword ptr [RSP + 0x10]
00014bbe(6): JZ 0x00015268
00014bc4(3): MOV qword ptr [RAX],R14
00014bc7(4): MOV R15,qword ptr [RDX + 0x8]
00014bcb(5): JMP 0x00014a35
00014bd0(5): CMP qword ptr [RDX + 0x20],0x0
00014bd5(6): JZ 0x00014a31
00014bdb(7): LEA RCX,[0x17c00]
00014be2(7): LEA RSI,[0x17628]
00014be9(7): LEA RDI,[0x176d0]
00014bf0(5): MOV EDX,0x59f
00014bf5(5): CALL 0x00001c90
00014c00(4): MOV RAX,qword ptr [RDX + 0x20]
00014c04(4): MOV R15,qword ptr [RAX + 0x38]
00014c08(4): MOV RAX,qword ptr [R13 + 0x18]
00014c0c(4): MOV qword ptr [RAX + RDI*0x8],R15
00014c10(4): CMP byte ptr [RDX + 0x30],0x4
00014c14(6): JNZ 0x00014a31
00014c1a(4): MOV RAX,qword ptr [R13 + 0x28]
00014c1e(4): LEA RCX,[RDI + RDI*0x2]
00014c22(5): MOV EDI,0x8
00014c27(5): MOV qword ptr [RSP + 0x18],RSI
00014c2c(5): MOV qword ptr [RSP + 0x10],RDX
00014c31(4): LEA RCX,[RAX + RCX*0x8]
00014c35(7): MOV qword ptr [RCX],0x1
00014c3c(8): MOV qword ptr [RCX + 0x8],0x1
00014c44(4): MOV qword ptr [RSP],RCX
00014c48(5): CALL 0x00001da0
00014c4d(4): MOV RCX,qword ptr [RSP]
00014c51(3): TEST RAX,RAX
00014c54(5): MOV RDX,qword ptr [RSP + 0x10]
00014c59(5): MOV RSI,qword ptr [RSP + 0x18]
00014c5e(4): MOV qword ptr [RCX + 0x10],RAX
00014c62(6): JZ 0x000152b0
00014c68(3): MOV qword ptr [RAX],R15
00014c6b(4): MOV R15,qword ptr [RDX + 0x8]
00014c6f(5): JMP 0x00014a35
00014c74(8): MOV qword ptr [0xb0 + RSP],RSI
00014c7c(8): MOV qword ptr [0xb8 + RSP],RSI
00014c84(8): MOV dword ptr [RSP + 0x4c],0x0
00014c8c(5): JMP 0x000146d8
00014c98(5): MOV ECX,0x1
00014c9d(3): MOV RDX,R15
00014ca0(3): MOV RSI,R13
00014ca3(3): MOV RDI,R12
00014ca6(4): MOV qword ptr [RSP],R10
00014caa(5): CALL 0x00009dd0
00014caf(2): TEST EAX,EAX
00014cb1(6): JNZ 0x000145a0
00014cb7(4): MOV RAX,qword ptr [R13 + 0x30]
00014cbb(4): MOV R10,qword ptr [RSP]
00014cbf(4): ADD R15,0x1
00014cc3(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
00014cc9(6): JNZ 0x00014a78
00014ccf(5): MOV RDI,qword ptr [RSP + 0x70]
00014cd4(5): CALL 0x00001b00
00014cd9(4): CMP qword ptr [R13 + 0x10],R15
00014cdd(6): JZ 0x00014aaf
00014ce3(6): MOVZX R14D,byte ptr [RSP + 0x10]
00014ce9(5): JMP 0x00014a81
00014cee(5): MOV RAX,qword ptr [RSP + 0x8]
00014cf3(4): TEST byte ptr [RAX + 0x38],0x10
00014cf7(2): JNZ 0x00014d0a
00014cf9(5): CMP qword ptr [RAX + 0x30],0x0
00014cfe(2): JZ 0x00014d0a
00014d00(8): TEST byte ptr [0xb0 + R13],0x1
00014d08(2): JNZ 0x00014d18
00014d0a(8): CMP qword ptr [0x98 + R13],0x0
00014d12(6): JZ 0x00014e0b
00014d18(4): LEA RDI,[RDX + RDX*0x2]
00014d1c(4): MOV qword ptr [RSP],RDX
00014d20(4): SHL RDI,0x3
00014d24(5): CALL 0x00001da0
00014d29(3): TEST RAX,RAX
00014d2c(4): MOV qword ptr [R13 + 0x38],RAX
00014d30(6): JZ 0x0001527c
00014d36(4): MOV RDX,qword ptr [RSP]
00014d3a(2): XOR ESI,ESI
00014d3c(2): XOR ECX,ECX
00014d3e(3): TEST RDX,RDX
00014d41(2): JNZ 0x00014d54
00014d43(5): JMP 0x00014e0b
00014d50(4): MOV RAX,qword ptr [R13 + 0x38]
00014d54(4): PXOR XMM0,XMM0
00014d58(3): ADD RAX,RSI
00014d5b(4): ADD RCX,0x1
00014d5f(8): MOV qword ptr [RAX + 0x10],0x0
00014d67(4): ADD RSI,0x18
00014d6b(3): MOVUPS xmmword ptr [RAX],XMM0
00014d6e(4): MOV RAX,qword ptr [R13 + 0x10]
00014d72(3): CMP RCX,RAX
00014d75(2): JC 0x00014d50
00014d77(3): TEST RAX,RAX
00014d7a(6): JZ 0x00014e0b
00014d80(4): MOV RAX,qword ptr [R13 + 0x30]
00014d84(9): MOV qword ptr [RSP + 0x18],0x0
00014d8d(9): MOV qword ptr [RSP + 0x10],0x0
00014d96(5): MOV RCX,qword ptr [RSP + 0x18]
00014d9b(4): LEA RDX,[RAX + RCX*0x1]
00014d9f(5): CMP qword ptr [RDX + 0x8],0x0
00014da4(4): MOV RCX,qword ptr [RDX + 0x10]
00014da8(2): JLE 0x00014df4
00014daa(3): XOR R15D,R15D
00014dad(2): JMP 0x00014dc8
00014db0(4): MOV RAX,qword ptr [R13 + 0x30]
00014db4(5): MOV RDX,qword ptr [RSP + 0x18]
00014db9(4): ADD R15,0x1
00014dbd(4): MOV RCX,qword ptr [RSP]
00014dc1(5): CMP R15,qword ptr [RAX + RDX*0x1 + 0x8]
00014dc6(2): JGE 0x00014df4
00014dc8(4): MOV RAX,qword ptr [RCX + R15*0x8]
00014dcc(4): MOV qword ptr [RSP],RCX
00014dd0(4): LEA RSI,[RAX + RAX*0x2]
00014dd4(4): MOV RAX,qword ptr [R13 + 0x38]
00014dd8(4): LEA RDI,[RAX + RSI*0x8]
00014ddc(5): MOV RSI,qword ptr [RSP + 0x10]
00014de1(5): CALL 0x00008120
00014de6(2): TEST AL,AL
00014de8(2): JNZ 0x00014db0
00014dea(5): MOV EAX,0xc
00014def(5): JMP 0x000145a0
00014df4(6): ADD qword ptr [RSP + 0x10],0x1
00014dfa(6): ADD qword ptr [RSP + 0x18],0x18
00014e00(5): MOV RDX,qword ptr [RSP + 0x10]
00014e05(4): CMP RDX,qword ptr [R13 + 0x10]
00014e09(2): JC 0x00014d96
00014e0b(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00014e12(8): MOV dword ptr [RSP + 0x4c],0x0
00014e1a(3): SHR AL,0x2
00014e1d(6): CMP qword ptr [RSP + 0x20],0x0
00014e23(3): SETZ DL
00014e26(2): AND AL,DL
00014e28(6): JNZ 0x0001500f
00014e2e(4): MOV RAX,qword ptr [RBX + 0x68]
00014e32(3): MOV RDI,R12
00014e35(4): MOV RAX,qword ptr [RAX + 0x18]
00014e39(4): MOV RAX,qword ptr [RAX + 0x38]
00014e3d(4): LEA RDX,[RAX + RAX*0x2]
00014e41(7): MOV qword ptr [0x90 + RBX],RAX
00014e48(4): MOV RAX,qword ptr [RBX + 0x30]
00014e4c(4): LEA RSI,[RAX + RDX*0x8]
00014e50(5): CALL 0x0000a830
00014e55(2): TEST EAX,EAX
00014e57(3): MOV R15D,EAX
00014e5a(4): MOV dword ptr [RSP + 0x50],EAX
00014e5e(6): JNZ 0x00014f7f
00014e64(8): CMP qword ptr [0x98 + RBX],0x0
00014e6c(6): JLE 0x00014f40
00014e72(5): MOV R9,qword ptr [RSP + 0x68]
00014e77(3): TEST R9,R9
00014e7a(6): JLE 0x00014f40
00014e80(3): XOR R10D,R10D
00014e83(5): LEA R13,[R12 + 0x10]
00014e88(2): JMP 0x00014e9d
00014e90(4): ADD R10,0x1
00014e94(3): CMP R9,R10
00014e97(6): JLE 0x00014f40
00014e9d(5): MOV RCX,qword ptr [RSP + 0x70]
00014ea2(3): MOV RSI,qword ptr [RBX]
00014ea5(4): MOV R8,qword ptr [RCX + R10*0x8]
00014ea9(3): MOV RDI,R8
00014eac(4): SHL RDI,0x4
00014eb0(3): ADD RDI,RSI
00014eb3(4): CMP byte ptr [RDI + 0x8],0x4
00014eb7(2): JNZ 0x00014e90
00014eb9(2): XOR EDX,EDX
00014ebb(2): JMP 0x00014ec9
00014ec0(4): ADD RDX,0x1
00014ec4(3): CMP R9,RDX
00014ec7(2): JZ 0x00014e90
00014ec9(4): MOV RAX,qword ptr [RCX + RDX*0x8]
00014ecd(4): SHL RAX,0x4
00014ed1(3): ADD RAX,RSI
00014ed4(4): CMP byte ptr [RAX + 0x8],0x9
00014ed8(2): JNZ 0x00014ec0
00014eda(3): MOV R11,qword ptr [RDI]
00014edd(3): CMP qword ptr [RAX],R11
00014ee0(2): JNZ 0x00014ec0
00014ee2(4): MOV RDX,qword ptr [RBX + 0x28]
00014ee6(4): LEA RAX,[R8 + R8*0x2]
00014eea(3): MOV RSI,R13
00014eed(3): MOV RDI,R9
00014ef0(4): LEA RAX,[RDX + RAX*0x8]
00014ef4(4): MOV RAX,qword ptr [RAX + 0x10]
00014ef8(3): MOV R11,qword ptr [RAX]
00014efb(3): MOV RDX,R11
00014efe(5): CALL 0x000096d0
00014f03(3): TEST RAX,RAX
00014f06(2): JNZ 0x00014e90
00014f08(4): MOV RAX,qword ptr [RBX + 0x30]
00014f0c(4): LEA RDX,[R11 + R11*0x2]
00014f10(3): MOV RDI,R12
00014f13(4): LEA RSI,[RAX + RDX*0x8]
00014f17(5): CALL 0x00009bf0
00014f1c(2): TEST EAX,EAX
00014f1e(6): JNZ 0x00015260
00014f24(5): MOV R9,qword ptr [RSP + 0x68]
00014f29(6): MOV R10D,0x1
00014f2f(3): CMP R9,R10
00014f32(6): JG 0x00014e9d
00014f38(8): NOP dword ptr [RAX + RAX*0x1]
00014f40(5): MOV RDI,qword ptr [RSP + 0x28]
00014f45(2): XOR ECX,ECX
00014f47(3): MOV RDX,R12
00014f4a(3): MOV RSI,RBX
00014f4d(5): CALL 0x0000aa20
00014f52(3): TEST RAX,RAX
00014f55(4): MOV qword ptr [RBX + 0x48],RAX
00014f59(6): JZ 0x000150c2
00014f5f(4): CMP byte ptr [RAX + 0x68],0x0
00014f63(6): JS 0x00015061
00014f69(4): MOV qword ptr [RBX + 0x60],RAX
00014f6d(4): MOV qword ptr [RBX + 0x58],RAX
00014f71(4): MOV qword ptr [RBX + 0x50],RAX
00014f75(5): MOV RDI,qword ptr [RSP + 0x70]
00014f7a(5): CALL 0x00001b00
00014f7f(5): MOV RAX,qword ptr [RSP + 0x8]
00014f84(5): MOV dword ptr [RSP + 0x4c],R15D
00014f89(3): MOV R13,qword ptr [RAX]
00014f8c(4): MOV RDI,qword ptr [R13 + 0x70]
00014f90(3): TEST RDI,RDI
00014f93(2): JZ 0x00014fa8
00014f95(3): NOP dword ptr [RAX]
00014f98(3): MOV R12,qword ptr [RDI]
00014f9b(5): CALL 0x00001b00
00014fa0(3): TEST R12,R12
00014fa3(3): MOV RDI,R12
00014fa6(2): JNZ 0x00014f98
00014fa8(4): MOV RDI,qword ptr [R13 + 0x20]
00014fac(8): MOV qword ptr [R13 + 0x70],0x0
00014fb4(11): MOV dword ptr [0x80 + R13],0xf
00014fbf(8): MOV qword ptr [R13 + 0x68],0x0
00014fc7(5): CALL 0x00001b00
00014fcc(8): MOV qword ptr [R13 + 0x20],0x0
00014fd4(3): MOV RDI,RBP
00014fd7(5): CALL 0x000093c0
00014fdc(4): MOV EAX,dword ptr [RSP + 0x4c]
00014fe0(2): TEST EAX,EAX
00014fe2(6): JZ 0x0001461c
00014fe8(5): JMP 0x000145fc
00014fed(8): MOV dword ptr [RSP + 0x4c],0xc
00014ff5(5): JMP 0x000145ac
00014ffa(3): MOV RDI,RBP
00014ffd(5): CALL 0x00008420
00015002(8): MOV dword ptr [RSP + 0x4c],0x0
0001500a(5): JMP 0x000146d8
0001500f(5): MOV RCX,qword ptr [RSP + 0x8]
00015014(5): CMP qword ptr [RCX + 0x28],0x0
00015019(6): JNZ 0x00014e2e
0001501f(4): MOV R10,qword ptr [RBX + 0x10]
00015023(3): TEST R10,R10
00015026(6): JZ 0x000152da
0001502c(3): MOV RSI,qword ptr [RBX]
0001502f(7): LEA R9,[0x17b8c]
00015036(3): XOR R8D,R8D
00015039(2): XOR EDX,EDX
0001503b(3): MOV RCX,RSI
0001503e(4): CMP byte ptr [RCX + 0x8],0xc
00015042(6): JA 0x0001530e
00015048(4): MOVZX EDI,byte ptr [RCX + 0x8]
0001504c(4): MOVSXD RDI,dword ptr [R9 + RDI*0x4]
00015050(3): ADD RDI,R9
00015053(2): JMP RDI
00015055(2): XOR EBP,EBP
00015057(5): MOV ESI,0x1
0001505c(5): JMP 0x0001438d
00015061(5): MOV R14,qword ptr [RSP + 0x28]
00015066(5): MOV ECX,0x1
0001506b(3): MOV RDX,R12
0001506e(3): MOV RSI,RBX
00015071(3): MOV RDI,R14
00015074(5): CALL 0x0000aa20
00015079(5): MOV ECX,0x2
0001507e(3): MOV RDX,R12
00015081(3): MOV RSI,RBX
00015084(3): MOV RDI,R14
00015087(4): MOV qword ptr [RBX + 0x50],RAX
0001508b(5): CALL 0x0000aa20
00015090(5): MOV ECX,0x6
00015095(4): MOV qword ptr [RBX + 0x58],RAX
00015099(3): MOV RDX,R12
0001509c(3): MOV RSI,RBX
0001509f(3): MOV RDI,R14
000150a2(5): CALL 0x0000aa20
000150a7(5): CMP qword ptr [RBX + 0x50],0x0
000150ac(4): MOV qword ptr [RBX + 0x60],RAX
000150b0(2): JZ 0x000150c2
000150b2(5): CMP qword ptr [RBX + 0x58],0x0
000150b7(2): JZ 0x000150c2
000150b9(3): TEST RAX,RAX
000150bc(6): JNZ 0x00014f75
000150c2(5): MOV R15D,dword ptr [RSP + 0x50]
000150c7(5): JMP 0x00014f7f
000150cc(4): MOV RAX,qword ptr [RDX + 0x20]
000150d0(4): MOV R9,qword ptr [RAX + 0x38]
000150d4(5): JMP 0x00014ae9
000150d9(4): MOV RAX,qword ptr [RDX + 0x20]
000150dd(4): MOV RCX,qword ptr [RAX + 0x38]
000150e1(5): JMP 0x00014ad4
000150e6(3): MOV RDI,RBX
000150e9(5): MOV ESI,0xe8
000150ee(5): CALL 0x00001e00
000150f3(3): TEST RAX,RAX
000150f6(3): MOV RBX,RAX
000150f9(6): JZ 0x00015291
000150ff(5): MOV RAX,qword ptr [RSP + 0x8]
00015104(8): MOV qword ptr [RAX + 0x8],0xe8
0001510c(3): MOV qword ptr [RAX],RBX
0001510f(5): JMP 0x000142f2
00015114(3): MOV qword ptr [RAX],RCX
00015117(4): MOV qword ptr [RAX + 0x8],R9
0001511b(5): JMP 0x00014a35
00015120(8): MOV dword ptr [RSP + 0x4c],0x0
00015128(5): JMP 0x000146d8
0001512d(8): MOV qword ptr [R10 + 0x8],0x1
00015135(3): MOV qword ptr [RAX],RCX
00015138(5): JMP 0x00014a35
0001513d(3): MOV RDI,RBP
00015140(5): CALL 0x000083b0
00015145(8): MOV dword ptr [RSP + 0x4c],0x0
0001514d(5): JMP 0x000146d8
00015152(8): MOV dword ptr [RSP + 0x4c],0xc
0001515a(8): MOV qword ptr [RBX + 0x68],0x0
00015162(5): JMP 0x000145ac
00015167(3): TEST RAX,RAX
0001516a(6): JZ 0x0001529b
00015170(4): LEA R13,[R15 + 0x70]
00015174(5): LEA R12,[RSP + 0x60]
00015179(4): SUB R15,-0x80
0001517d(2): XOR ECX,ECX
0001517f(2): XOR EDX,EDX
00015181(3): MOV RSI,R15
00015184(3): MOV R8,R12
00015187(3): MOV RDI,R13
0001518a(4): MOV qword ptr [RSP],RAX
0001518e(5): MOV byte ptr [RSP + 0x68],0x2
00015193(5): CALL 0x0000a390
00015198(4): MOV R9,qword ptr [RSP]
0001519c(3): MOV R11,RAX
0001519f(5): JMP 0x0001477b
000151a4(5): CALL 0x00001b00
000151a9(11): MOV qword ptr [0xe0 + R13],0x0
000151b4(5): JMP 0x000148dd
000151b9(3): MOV R8D,EAX
000151bc(4): ADD RDX,0x1
000151c0(4): ADD RCX,0x10
000151c4(3): CMP RDX,R10
000151c7(6): JNZ 0x0001503e
000151cd(3): OR R14B,R8B
000151d0(6): JZ 0x000152da
000151d6(3): MOV RAX,RDX
000151d9(4): SHL RAX,0x4
000151dd(3): ADD RAX,RSI
000151e0(2): JMP 0x000151f8
000151e2(3): CMP DL,0x5
000151e5(2): JNZ 0x000151eb
000151e7(4): MOV byte ptr [RSI + 0x8],0x7
000151eb(4): ADD RSI,0x10
000151ef(3): CMP RAX,RSI
000151f2(6): JZ 0x000152d7
000151f8(4): MOVZX EDX,byte ptr [RSI + 0x8]
000151fc(3): CMP DL,0x1
000151ff(2): JNZ 0x000151e2
00015201(3): CMP byte ptr [RSI],0x0
00015204(2): JNS 0x000151eb
00015206(4): AND byte ptr [RSI + 0xa],0xdf
0001520a(2): JMP 0x000151eb
00015210(3): CMP byte ptr [RCX],0x0
00015213(4): CMOVS R14D,EAX
00015217(2): JMP 0x000151bc
00015219(2): MOV EDI,dword ptr [RCX]
0001521b(3): CMP EDI,0x20
0001521e(2): JZ 0x000151bc
00015220(6): JBE 0x000152c9
00015226(3): CMP EDI,0x40
00015229(2): JZ 0x000151bc
0001522b(3): ADD EDI,-0x80
0001522e(2): JZ 0x000151bc
00015230(5): JMP 0x00014e2e
00015238(3): MOV RDI,qword ptr [RCX]
0001523b(5): CMP qword ptr [RDI + 0x10],0x0
00015240(6): JNZ 0x00014e2e
00015246(5): CMP qword ptr [RDI + 0x18],0x0
0001524b(6): JZ 0x000151bc
00015251(5): JMP 0x00014e2e
00015260(3): MOV R15D,EAX
00015263(5): JMP 0x00014f7f
00015268(8): MOV qword ptr [R15 + 0x8],0x0
00015270(7): MOV qword ptr [R15],0x0
00015277(5): JMP 0x00014dea
0001527c(5): MOV RAX,qword ptr [RSP + 0x8]
00015281(8): MOV dword ptr [RSP + 0x4c],0xc
00015289(3): MOV R13,qword ptr [RAX]
0001528c(5): JMP 0x000145ac
00015291(5): MOV EAX,0xc
00015296(5): JMP 0x0001461c
0001529b(5): MOV RAX,qword ptr [RSP + 0x8]
000152a0(8): MOV qword ptr [RBX + 0x68],0x0
000152a8(3): MOV R13,qword ptr [RAX]
000152ab(5): JMP 0x000145ac
000152b0(8): MOV qword ptr [RCX + 0x8],0x0
000152b8(7): MOV qword ptr [RCX],0x0
000152bf(5): MOV EAX,0xc
000152c4(5): JMP 0x000145a0
000152c9(3): CMP EDI,0x10
000152cc(6): JZ 0x000151bc
000152d2(5): JMP 0x00014e2e
000152d7(3): MOV R14D,R8D
000152da(8): CMP qword ptr [0x98 + RBX],0x0
000152e2(7): MOVZX EDX,byte ptr [0xb0 + RBX]
000152e9(10): MOV dword ptr [0xb4 + RBX],0x1
000152f3(3): SETG AL
000152f6(3): AND EDX,0xfffffff9
000152f9(3): OR EAX,R14D
000152fc(3): AND EAX,0x1
000152ff(2): ADD EAX,EAX
00015301(2): OR EAX,EDX
00015303(6): MOV byte ptr [0xb0 + RBX],AL
00015309(5): JMP 0x00014e2e
0001530e(5): CALL 0x00001b10
00015313(7): LEA RCX,[0x17c00]
0001531a(7): LEA RSI,[0x17628]
00015321(7): LEA RDI,[0x176ed]
00015328(5): MOV EDX,0x5b0
0001532d(5): CALL 0x00001c90
00015332(7): LEA RCX,[0x17c00]
00015339(7): LEA RSI,[0x17628]
00015340(7): LEA RDI,[0x17648]
00015347(5): MOV EDX,0x5c2
0001534c(5): CALL 0x00001c90
00015351(7): LEA RCX,[0x17c00]
00015358(7): LEA RSI,[0x17628]
0001535f(7): LEA RDI,[0x176e3]
00015366(5): MOV EDX,0x5af
0001536b(5): CALL 0x00001c90
00015370(5): CALL 0x00001c20
00015375(1): NOP
00015376(10): NOP word ptr CS:[RAX + RAX*0x1]
00015380(4): SUB RSP,0x8
00015384(7): MOV RCX,qword ptr [0x0021c380]
0001538b(3): MOV R8,RDI
0001538e(3): MOV RDI,RDX
00015391(3): MOV RAX,RCX
00015394(4): SHR RAX,0x19
00015398(3): AND EAX,0x1
0001539b(3): SHL EAX,0x4
0001539e(2): MOV EDX,EAX
000153a0(4): MOVZX EAX,byte ptr [RDI + 0x38]
000153a4(3): AND EAX,0xffffffef
000153a7(2): OR EAX,EDX
000153a9(3): MOV RDX,RSI
000153ac(3): MOV RSI,R8
000153af(3): OR EAX,0xffffff80
000153b2(3): MOV byte ptr [RDI + 0x38],AL
000153b5(5): CALL 0x00014280
000153ba(2): TEST EAX,EAX
000153bc(2): JZ 0x000153e8
000153be(7): LEA RDX,[0x17c60]
000153c5(2): CDQE
000153c7(7): LEA RSI,[0x17d00]
000153ce(2): XOR EDI,EDI
000153d0(4): ADD RSI,qword ptr [RDX + RAX*0x8]
000153d4(5): MOV EDX,0x5
000153d9(4): ADD RSP,0x8
000153dd(5): JMP 0x00001bf0
000153e8(2): XOR EAX,EAX
000153ea(4): ADD RSP,0x8
000153ee(1): RET
000153f0(7): MOV RAX,qword ptr [0x0021c380]
000153f7(7): MOV qword ptr [0x0021c380],RDI
000153fe(1): RET
00015400(2): PUSH R12
00015402(1): PUSH RBP
00015403(2): XOR EAX,EAX
00015405(1): PUSH RBX
00015406(4): MOV RBP,qword ptr [RDI + 0x20]
0001540a(3): MOV RBX,RDI
0001540d(3): MOV R12,qword ptr [RDI]
00015410(4): LEA RDI,[RBP + 0x8]
00015414(3): MOV RCX,RBP
00015417(8): MOV qword ptr [RBP],0x0
0001541f(11): MOV qword ptr [0xf8 + RBP],0x0
0001542a(4): AND RDI,-0x8
0001542e(3): SUB RCX,RDI
00015431(6): ADD ECX,0x100
00015437(3): SHR ECX,0x3
0001543a(3): STOSQ.REP RDI
0001543d(3): MOV RCX,RBP
00015440(3): MOV RDI,RBX
00015443(5): MOV RSI,qword ptr [R12 + 0x48]
00015448(4): LEA RDX,[RSI + 0x18]
0001544c(4): ADD RSI,0x10
00015450(5): CALL 0x0000d950
00015455(5): MOV RAX,qword ptr [R12 + 0x50]
0001545a(5): CMP qword ptr [R12 + 0x48],RAX
0001545f(2): JZ 0x00015479
00015461(4): LEA RDX,[RAX + 0x18]
00015465(4): LEA RSI,[RAX + 0x10]
00015469(3): MOV RCX,RBP
0001546c(3): MOV RDI,RBX
0001546f(5): CALL 0x0000d950
00015474(5): MOV RAX,qword ptr [R12 + 0x48]
00015479(5): MOV RSI,qword ptr [R12 + 0x58]
0001547e(3): CMP RSI,RAX
00015481(2): JZ 0x0001549b
00015483(4): LEA RDX,[RSI + 0x18]
00015487(3): MOV RCX,RBP
0001548a(4): ADD RSI,0x10
0001548e(3): MOV RDI,RBX
00015491(5): CALL 0x0000d950
00015496(5): MOV RAX,qword ptr [R12 + 0x48]
0001549b(5): MOV RSI,qword ptr [R12 + 0x60]
000154a0(3): CMP RSI,RAX
000154a3(2): JZ 0x000154b8
000154a5(4): LEA RDX,[RSI + 0x18]
000154a9(3): MOV RCX,RBP
000154ac(4): ADD RSI,0x10
000154b0(3): MOV RDI,RBX
000154b3(5): CALL 0x0000d950
000154b8(4): OR byte ptr [RBX + 0x38],0x8
000154bc(2): XOR EAX,EAX
000154be(1): POP RBX
000154bf(1): POP RBP
000154c0(2): POP R12
000154c2(1): RET
000154d0(2): PUSH R15
000154d2(2): PUSH R14
000154d4(3): MOV RAX,R8
000154d7(2): PUSH R13
000154d9(2): PUSH R12
000154db(3): ADD R8,RCX
000154de(1): PUSH RBP
000154df(1): PUSH RBX
000154e0(4): SUB RSP,0x38
000154e4(3): TEST RCX,RCX
000154e7(4): MOV EBX,dword ptr [RSP + 0x78]
000154eb(5): MOV R12,qword ptr [RSP + 0x70]
000154f0(4): MOV dword ptr [RSP + 0x28],EBX
000154f4(6): JS 0x00015830
000154fa(3): CMP RCX,RDX
000154fd(6): JG 0x00015830
00015503(3): CMP R8,RDX
00015506(3): MOV RBX,RCX
00015509(3): MOV R15,RDI
0001550c(6): JG 0x00015790
00015512(3): TEST RAX,RAX
00015515(2): JS 0x00015520
00015517(3): CMP RCX,R8
0001551a(6): JG 0x00015790
00015520(3): TEST R8,R8
00015523(6): JS 0x00015808
00015529(3): TEST RAX,RAX
0001552c(2): JNS 0x00015537
0001552e(3): CMP RBX,R8
00015531(6): JLE 0x00015808
00015537(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001553c(3): MOV R13D,EAX
0001553f(4): SHR R13B,0x5
00015543(3): MOV EDI,R13D
00015546(3): AND EDI,0x3
00015549(3): CMP R8,RBX
0001554c(4): MOV dword ptr [RSP + 0x2c],EDI
00015550(2): JLE 0x00015561
00015552(5): CMP qword ptr [R15 + 0x20],0x0
00015557(2): JZ 0x00015561
00015559(2): TEST AL,0x8
0001555b(6): JZ 0x00015750
00015561(2): TEST AL,0x10
00015563(6): JNZ 0x00015730
00015569(3): TEST R12,R12
0001556c(6): JZ 0x00015730
00015572(3): AND EAX,0x6
00015575(4): MOV RCX,qword ptr [R15 + 0x30]
00015579(2): CMP AL,0x4
0001557b(6): JZ 0x00015710
00015581(4): LEA R14,[RCX + 0x1]
00015585(3): MOV R13,R14
00015588(3): MOV RDI,R14
0001558b(4): SHL RDI,0x4
0001558f(5): MOV qword ptr [RSP + 0x20],R9
00015594(5): MOV qword ptr [RSP + 0x18],RDX
00015599(5): MOV qword ptr [RSP + 0x10],RSI
0001559e(5): MOV qword ptr [RSP + 0x8],R8
000155a3(5): CALL 0x00001da0
000155a8(3): TEST RAX,RAX
000155ab(3): MOV RBP,RAX
000155ae(6): JZ 0x00015840
000155b4(4): SUB RSP,0x8
000155b8(3): MOV RCX,RBX
000155bb(3): MOV RDI,R15
000155be(4): MOV EAX,dword ptr [RSP + 0x34]
000155c2(1): PUSH RAX
000155c3(1): PUSH RBP
000155c4(2): PUSH R14
000155c6(5): MOV R9,qword ptr [RSP + 0x40]
000155cb(5): MOV R8,qword ptr [RSP + 0x28]
000155d0(5): MOV RDX,qword ptr [RSP + 0x38]
000155d5(5): MOV RSI,qword ptr [RSP + 0x30]
000155da(5): CALL 0x000100f0
000155df(4): ADD RSP,0x20
000155e3(2): TEST EAX,EAX
000155e5(2): JZ 0x00015618
000155e7(3): CMP EAX,0x1
000155ea(7): MOV R12,-0x1
000155f1(2): JZ 0x000155fa
000155f3(7): MOV R12,-0x2
000155fa(3): MOV RDI,RBP
000155fd(5): CALL 0x00001b00
00015602(4): ADD RSP,0x38
00015606(3): MOV RAX,R12
00015609(1): POP RBX
0001560a(1): POP RBP
0001560b(2): POP R12
0001560d(2): POP R13
0001560f(2): POP R14
00015611(2): POP R15
00015613(1): RET
00015618(3): TEST R12,R12
0001561b(6): JZ 0x000156e8
00015621(5): MOVZX EAX,byte ptr [R15 + 0x38]
00015626(4): LEA RDX,[R13 + 0x1]
0001562a(2): SHR AL,1
0001562c(3): AND EAX,0x3
0001562f(6): JZ 0x000157a0
00015635(3): CMP EAX,0x1
00015638(6): JZ 0x00015850
0001563e(3): CMP EAX,0x2
00015641(6): JNZ 0x00015930
00015647(4): CMP R14,qword ptr [R12]
0001564b(6): JA 0x00015911
00015651(6): MOV R9D,0x2
00015657(3): TEST R13,R13
0001565a(6): JLE 0x000158c8
00015660(5): MOV R8,qword ptr [R12 + 0x8]
00015665(5): MOV RDI,qword ptr [R12 + 0x10]
0001566a(8): LEA RSI,[R13*0x8]
00015672(3): MOV RDX,R13
00015675(2): XOR EAX,EAX
00015677(9): NOP word ptr [RAX + RAX*0x1]
00015680(5): MOV RCX,qword ptr [RBP + RAX*0x2]
00015685(4): MOV qword ptr [R8 + RAX*0x1],RCX
00015689(5): MOV RCX,qword ptr [RBP + RAX*0x2 + 0x8]
0001568e(4): MOV qword ptr [RDI + RAX*0x1],RCX
00015692(4): ADD RAX,0x8
00015696(3): CMP RSI,RAX
00015699(2): JNZ 0x00015680
0001569b(4): CMP qword ptr [R12],RDX
0001569f(2): JBE 0x000156cd
000156a1(5): MOV RSI,qword ptr [R12 + 0x10]
000156a6(5): MOV RCX,qword ptr [R12 + 0x8]
000156ab(7): MOV RAX,-0x1
000156b2(6): NOP word ptr [RAX + RAX*0x1]
000156b8(4): MOV qword ptr [RSI + RDX*0x8],RAX
000156bc(4): ADD R13,0x1
000156c0(4): MOV qword ptr [RCX + RDX*0x8],RAX
000156c4(4): CMP R13,qword ptr [R12]
000156c8(3): MOV RDX,R13
000156cb(2): JC 0x000156b8
000156cd(5): MOVZX EAX,byte ptr [R15 + 0x38]
000156d2(4): LEA R13D,[R9 + R9*0x1]
000156d6(3): AND EAX,0xfffffff9
000156d9(3): OR EAX,R13D
000156dc(2): TEST AL,0x6
000156de(4): MOV byte ptr [R15 + 0x38],AL
000156e2(6): JZ 0x000155f3
000156e8(5): CMP byte ptr [RSP + 0x28],0x0
000156ed(4): MOV R12,qword ptr [RBP]
000156f1(6): JZ 0x000155fa
000156f7(3): CMP R12,RBX
000156fa(6): JNZ 0x000158f2
00015700(4): MOV R12,qword ptr [RBP + 0x8]
00015704(3): SUB R12,RBX
00015707(5): JMP 0x000155fa
00015710(4): MOV R14,qword ptr [R12]
00015714(3): CMP R14,RCX
00015717(6): JA 0x00015581
0001571d(3): TEST R14,R14
00015720(3): MOV R13,R14
00015723(6): JG 0x00015588
00015729(7): NOP dword ptr [RAX]
00015730(5): MOV EDI,0x10
00015735(6): MOV R14D,0x1
0001573b(6): MOV R13D,0x1
00015741(3): XOR R12D,R12D
00015744(5): JMP 0x0001558f
00015750(3): MOV RDI,R15
00015753(5): MOV qword ptr [RSP + 0x20],R9
00015758(5): MOV qword ptr [RSP + 0x18],RDX
0001575d(5): MOV qword ptr [RSP + 0x10],RSI
00015762(5): MOV qword ptr [RSP + 0x8],R8
00015767(5): CALL 0x00015400
0001576c(5): MOVZX EAX,byte ptr [R15 + 0x38]
00015771(5): MOV R9,qword ptr [RSP + 0x20]
00015776(5): MOV RDX,qword ptr [RSP + 0x18]
0001577b(5): MOV RSI,qword ptr [RSP + 0x10]
00015780(5): MOV R8,qword ptr [RSP + 0x8]
00015785(5): JMP 0x00015561
00015790(3): MOV R8,RDX
00015793(5): JMP 0x00015537
000157a0(8): LEA R14,[RDX*0x8]
000157a8(5): MOV qword ptr [RSP + 0x8],RDX
000157ad(3): MOV RDI,R14
000157b0(5): CALL 0x00001da0
000157b5(3): TEST RAX,RAX
000157b8(5): MOV qword ptr [R12 + 0x8],RAX
000157bd(5): MOV RDX,qword ptr [RSP + 0x8]
000157c2(6): JZ 0x000158da
000157c8(3): MOV RDI,R14
000157cb(5): MOV qword ptr [RSP + 0x8],RDX
000157d0(5): MOV qword ptr [RSP + 0x10],RAX
000157d5(5): CALL 0x00001da0
000157da(3): TEST RAX,RAX
000157dd(5): MOV qword ptr [R12 + 0x10],RAX
000157e2(5): MOV RDX,qword ptr [RSP + 0x8]
000157e7(5): MOV RCX,qword ptr [RSP + 0x10]
000157ec(6): JZ 0x000158d2
000157f2(4): MOV qword ptr [R12],RDX
000157f6(6): MOV R9D,0x1
000157fc(5): JMP 0x00015657
00015808(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001580d(3): XOR R8D,R8D
00015810(3): MOV R13D,EAX
00015813(4): SHR R13B,0x5
00015817(3): MOV EDI,R13D
0001581a(3): AND EDI,0x3
0001581d(4): MOV dword ptr [RSP + 0x2c],EDI
00015821(5): JMP 0x00015561
00015830(7): MOV R12,-0x1
00015837(5): JMP 0x00015602
00015840(7): MOV R12,-0x2
00015847(5): JMP 0x00015602
00015850(4): CMP qword ptr [R12],RDX
00015854(6): MOV R9D,0x1
0001585a(6): JNC 0x00015657
00015860(8): LEA RCX,[RDX*0x8]
00015868(5): MOV RDI,qword ptr [R12 + 0x8]
0001586d(5): MOV byte ptr [RSP + 0x18],R9B
00015872(5): MOV qword ptr [RSP + 0x10],RDX
00015877(3): MOV RSI,RCX
0001587a(5): MOV qword ptr [RSP + 0x8],RCX
0001587f(5): CALL 0x00001e00
00015884(3): TEST RAX,RAX
00015887(3): MOV R14,RAX
0001588a(2): JZ 0x000158da
0001588c(5): MOV RCX,qword ptr [RSP + 0x8]
00015891(5): MOV RDI,qword ptr [R12 + 0x10]
00015896(3): MOV RSI,RCX
00015899(5): CALL 0x00001e00
0001589e(3): TEST RAX,RAX
000158a1(5): MOV RDX,qword ptr [RSP + 0x10]
000158a6(6): MOVZX R9D,byte ptr [RSP + 0x18]
000158ac(2): JZ 0x000158e2
000158ae(5): MOV qword ptr [R12 + 0x8],R14
000158b3(5): MOV qword ptr [R12 + 0x10],RAX
000158b8(4): MOV qword ptr [R12],RDX
000158bc(5): JMP 0x00015657
000158c8(2): XOR EDX,EDX
000158ca(3): XOR R13D,R13D
000158cd(5): JMP 0x0001569b
000158d2(3): MOV RDI,RCX
000158d5(5): CALL 0x00001b00
000158da(3): XOR R9D,R9D
000158dd(5): JMP 0x000156cd
000158e2(3): MOV RDI,R14
000158e5(5): CALL 0x00001b00
000158ea(3): XOR R9D,R9D
000158ed(5): JMP 0x000156cd
000158f2(7): LEA RCX,[0x17bd0]
000158f9(7): LEA RSI,[0x17608]
00015900(7): LEA RDI,[0x1772d]
00015907(5): MOV EDX,0x1be
0001590c(5): CALL 0x00001c90
00015911(7): LEA RCX,[0x17bc0]
00015918(7): LEA RSI,[0x17608]
0001591f(7): LEA RDI,[0x17715]
00015926(5): MOV EDX,0x1fb
0001592b(5): CALL 0x00001c90
00015930(7): LEA RCX,[0x17bc0]
00015937(7): LEA RSI,[0x17608]
0001593e(7): LEA RDI,[0x176f8]
00015945(5): MOV EDX,0x1f9
0001594a(5): CALL 0x00001c90
0001594f(1): NOP
00015950(2): PUSH R15
00015952(2): PUSH R14
00015954(2): PUSH R13
00015956(2): PUSH R12
00015958(3): MOV R12,RDI
0001595b(1): PUSH RBP
0001595c(1): PUSH RBX
0001595d(3): MOV RBP,R8
00015960(3): MOV RBX,RDX
00015963(3): MOV RDX,RBP
00015966(4): SUB RSP,0x28
0001596a(4): SHR RDX,0x3f
0001596e(5): MOV RAX,qword ptr [RSP + 0x70]
00015973(2): MOV EDI,EDX
00015975(5): MOV R8D,dword ptr [RSP + 0x78]
0001597a(4): SHR RAX,0x3f
0001597e(3): OR DIL,AL
00015981(6): JNZ 0x00015a50
00015987(3): TEST RBX,RBX
0001598a(6): JS 0x00015a50
00015990(3): MOV R15,RBX
00015993(3): ADD R15,RBP
00015996(6): JO 0x00015a50
0001599c(3): TEST RBP,RBP
0001599f(3): MOV R14,RCX
000159a2(3): MOV RCX,R9
000159a5(6): JZ 0x00015a60
000159ab(3): XOR R13D,R13D
000159ae(3): TEST RBX,RBX
000159b1(5): MOV qword ptr [RSP + 0x8],RSI
000159b6(2): JNZ 0x00015a00
000159b8(4): MOVZX R8D,R8B
000159bc(3): MOV RDX,R15
000159bf(3): MOV RSI,R14
000159c2(2): PUSH R8
000159c4(4): PUSH qword ptr [RSP + 0x70]
000159c8(3): MOV RDI,R12
000159cb(8): MOV R9,qword ptr [0x80 + RSP]
000159d3(5): MOV R8,qword ptr [RSP + 0x70]
000159d8(5): CALL 0x000154d0
000159dd(3): MOV RDI,R13
000159e0(3): MOV RBX,RAX
000159e3(5): CALL 0x00001b00
000159e8(1): POP RAX
000159e9(1): POP RDX
000159ea(4): ADD RSP,0x28
000159ee(3): MOV RAX,RBX
000159f1(1): POP RBX
000159f2(1): POP RBP
000159f3(2): POP R12
000159f5(2): POP R13
000159f7(2): POP R14
000159f9(2): POP R15
000159fb(1): RET
00015a00(3): MOV RDI,R15
00015a03(5): MOV dword ptr [RSP + 0x1c],R8D
00015a08(5): MOV qword ptr [RSP + 0x10],R9
00015a0d(5): CALL 0x00001da0
00015a12(3): TEST RAX,RAX
00015a15(3): MOV R13,RAX
00015a18(2): JZ 0x00015a50
00015a1a(5): MOV RSI,qword ptr [RSP + 0x8]
00015a1f(3): MOV RDX,RBX
00015a22(3): MOV RDI,RAX
00015a25(5): CALL 0x00001d70
00015a2a(5): LEA RDI,[R13 + RBX*0x1]
00015a2f(3): MOV RSI,R14
00015a32(3): MOV RDX,RBP
00015a35(3): MOV R14,R13
00015a38(5): CALL 0x00001d70
00015a3d(5): MOV RCX,qword ptr [RSP + 0x10]
00015a42(5): MOV R8D,dword ptr [RSP + 0x1c]
00015a47(5): JMP 0x000159b8
00015a50(7): MOV RBX,-0x2
00015a57(2): JMP 0x000159ea
00015a60(3): MOV R14,RSI
00015a63(3): XOR R13D,R13D
00015a66(5): JMP 0x000159b8
00015a70(2): MOV EAX,EDX
00015a72(2): PUSH R14
00015a74(2): PUSH R13
00015a76(3): AND EAX,0x1
00015a79(2): PUSH R12
00015a7b(1): PUSH RBP
00015a7c(3): CMP EAX,0x1
00015a7f(1): PUSH RBX
00015a80(3): MOV RBX,RDI
00015a83(3): SBB R14,R14
00015a86(7): MOV qword ptr [RDI],0x0
00015a8d(8): MOV qword ptr [RDI + 0x8],0x0
00015a95(7): AND R14D,0xfd4fca
00015a9c(8): MOV qword ptr [RDI + 0x10],0x0
00015aa4(5): MOV EDI,0x100
00015aa9(3): MOV R12,RSI
00015aac(2): MOV EBP,EDX
00015aae(7): ADD R14,0x3b2fc
00015ab5(5): CALL 0x00001da0
00015aba(3): TEST RAX,RAX
00015abd(4): MOV qword ptr [RBX + 0x20],RAX
00015ac1(6): JZ 0x00015b70
00015ac7(3): MOV R13,RBP
00015aca(4): SHL R13,0x15
00015ace(7): AND R13D,0x400000
00015ad5(3): OR R13,R14
00015ad8(4): TEST BPL,0x4
00015adc(2): JNZ 0x00015b40
00015ade(4): AND byte ptr [RBX + 0x38],0x7f
00015ae2(4): MOVZX EDX,byte ptr [RBX + 0x38]
00015ae6(3): SHR EBP,0x3
00015ae9(3): MOV RDI,R12
00015aec(3): AND EBP,0x1
00015aef(8): MOV qword ptr [RBX + 0x28],0x0
00015af7(3): SHL EBP,0x4
00015afa(3): AND EDX,0xffffffef
00015afd(2): OR EBP,EDX
00015aff(4): MOV byte ptr [RBX + 0x38],BPL
00015b03(5): CALL 0x00001c10
00015b08(3): MOV RCX,R13
00015b0b(3): MOV RDX,RAX
00015b0e(3): MOV RSI,R12
00015b11(3): MOV RDI,RBX
00015b14(5): CALL 0x00014280
00015b19(3): CMP EAX,0x10
00015b1c(2): MOV EBP,EAX
00015b1e(2): JZ 0x00015b58
00015b20(2): TEST EAX,EAX
00015b22(2): JNZ 0x00015b5d
00015b24(3): MOV RDI,RBX
00015b27(5): CALL 0x00015400
00015b2c(1): POP RBX
00015b2d(2): MOV EAX,EBP
00015b2f(1): POP RBP
00015b30(2): POP R12
00015b32(2): POP R13
00015b34(2): POP R14
00015b36(1): RET
00015b40(4): AND R13,-0x41
00015b44(4): OR byte ptr [RBX + 0x38],0x80
00015b48(7): OR R13,0x100
00015b4f(2): JMP 0x00015ae2
00015b58(5): MOV EBP,0x8
00015b5d(4): MOV RDI,qword ptr [RBX + 0x20]
00015b61(5): CALL 0x00001b00
00015b66(8): MOV qword ptr [RBX + 0x20],0x0
00015b6e(2): JMP 0x00015b2c
00015b70(5): MOV EBP,0xc
00015b75(1): POP RBX
00015b76(2): MOV EAX,EBP
00015b78(1): POP RBP
00015b79(2): POP R12
00015b7b(2): POP R13
00015b7d(2): POP R14
00015b7f(1): RET
00015b80(2): PUSH R13
00015b82(2): PUSH R12
00015b84(1): PUSH RBP
00015b85(1): PUSH RBX
00015b86(4): SUB RSP,0x8
00015b8a(3): CMP EDI,0x10
00015b8d(2): JA 0x00015bf0
00015b8f(7): LEA RAX,[0x17c60]
00015b96(3): MOVSXD RDI,EDI
00015b99(7): LEA RSI,[0x17d00]
00015ba0(3): MOV RBP,RDX
00015ba3(5): MOV EDX,0x5
00015ba8(3): MOV R12,RCX
00015bab(4): ADD RSI,qword ptr [RAX + RDI*0x8]
00015baf(2): XOR EDI,EDI
00015bb1(5): CALL 0x00001bf0
00015bb6(3): MOV RDI,RAX
00015bb9(3): MOV R13,RAX
00015bbc(5): CALL 0x00001c10
00015bc1(3): TEST R12,R12
00015bc4(4): LEA RBX,[RAX + 0x1]
00015bc8(2): JZ 0x00015bdd
00015bca(3): CMP RBX,R12
00015bcd(3): MOV RDX,RBX
00015bd0(2): JA 0x00015bf8
00015bd2(3): MOV RSI,R13
00015bd5(3): MOV RDI,RBP
00015bd8(5): CALL 0x00001d70
00015bdd(4): ADD RSP,0x8
00015be1(3): MOV RAX,RBX
00015be4(1): POP RBX
00015be5(1): POP RBP
00015be6(2): POP R12
00015be8(2): POP R13
00015bea(1): RET
00015bf0(5): CALL 0x00001b10
00015bf5(3): NOP dword ptr [RAX]
00015bf8(5): LEA RDX,[R12 + -0x1]
00015bfd(6): MOV byte ptr [RBP + R12*0x1 + -0x1],0x0
00015c03(2): JMP 0x00015bd2
00015c10(1): PUSH RBX
00015c11(3): MOV RBX,RDI
00015c14(3): MOV RDI,qword ptr [RDI]
00015c17(3): TEST RDI,RDI
00015c1a(2): JZ 0x00015c21
00015c1c(5): CALL 0x00009400
00015c21(4): MOV RDI,qword ptr [RBX + 0x20]
00015c25(7): MOV qword ptr [RBX],0x0
00015c2c(8): MOV qword ptr [RBX + 0x8],0x0
00015c34(5): CALL 0x00001b00
00015c39(4): MOV RDI,qword ptr [RBX + 0x28]
00015c3d(8): MOV qword ptr [RBX + 0x20],0x0
00015c45(5): CALL 0x00001b00
00015c4a(8): MOV qword ptr [RBX + 0x28],0x0
00015c52(1): POP RBX
00015c53(1): RET
00015c60(7): TEST R8D,0xfffffff8
00015c67(6): JNZ 0x00015cf8
00015c6d(2): PUSH R13
00015c6f(2): PUSH R12
00015c71(3): MOV R13,RDX
00015c74(1): PUSH RBP
00015c75(1): PUSH RBX
00015c76(3): MOV R12,RCX
00015c79(3): MOV EBX,R8D
00015c7c(3): MOV RBP,RDI
00015c7f(4): SUB RSP,0x18
00015c83(4): TEST R8B,0x4
00015c87(2): JNZ 0x00015cd8
00015c89(3): MOV RDI,RSI
00015c8c(5): MOV qword ptr [RSP + 0x8],RSI
00015c91(5): CALL 0x00001c10
00015c96(2): XOR ECX,ECX
00015c98(4): TEST byte ptr [RBP + 0x38],0x10
00015c9c(3): MOV RDX,RAX
00015c9f(5): MOV RSI,qword ptr [RSP + 0x8]
00015ca4(2): JZ 0x00015ce6
00015ca6(4): SUB RSP,0x8
00015caa(1): PUSH RBX
00015cab(2): PUSH 0x0
00015cad(2): PUSH 0x0
00015caf(3): MOV RDI,RBP
00015cb2(3): MOV R9,RDX
00015cb5(3): MOV R8,RDX
00015cb8(5): CALL 0x000100f0
00015cbd(4): ADD RSP,0x20
00015cc1(2): TEST EAX,EAX
00015cc3(3): SETNZ AL
00015cc6(4): ADD RSP,0x18
00015cca(1): POP RBX
00015ccb(3): MOVZX EAX,AL
00015cce(1): POP RBP
00015ccf(2): POP R12
00015cd1(2): POP R13
00015cd3(1): RET
00015cd8(4): TEST byte ptr [RBP + 0x38],0x10
00015cdc(3): MOV RCX,qword ptr [RCX]
00015cdf(5): MOV RDX,qword ptr [R12 + 0x8]
00015ce4(2): JNZ 0x00015ca6
00015ce6(4): SUB RSP,0x8
00015cea(1): PUSH RBX
00015ceb(2): PUSH R12
00015ced(2): PUSH R13
00015cef(2): JMP 0x00015caf
00015cf8(5): MOV EAX,0x2
00015cfd(1): RET
00015d00(4): SUB RSP,0x8
00015d04(3): MOV R9,RDX
00015d07(2): PUSH 0x1
00015d09(2): PUSH R8
00015d0b(3): XOR R8D,R8D
00015d0e(5): CALL 0x000154d0
00015d13(4): ADD RSP,0x18
00015d17(1): RET
00015d20(4): SUB RSP,0x8
00015d24(2): PUSH 0x0
00015d26(2): PUSH R9
00015d28(3): MOV R9,RDX
00015d2b(5): CALL 0x000154d0
00015d30(4): ADD RSP,0x18
00015d34(1): RET
00015d40(4): SUB RSP,0x8
00015d44(2): PUSH 0x1
00015d46(4): PUSH qword ptr [RSP + 0x20]
00015d4a(4): PUSH qword ptr [RSP + 0x20]
00015d4e(2): PUSH 0x0
00015d50(5): CALL 0x00015950
00015d55(4): ADD RSP,0x28
00015d59(1): RET
00015d60(4): SUB RSP,0x8
00015d64(2): PUSH 0x0
00015d66(4): PUSH qword ptr [RSP + 0x28]
00015d6a(4): PUSH qword ptr [RSP + 0x28]
00015d6e(4): PUSH qword ptr [RSP + 0x28]
00015d72(5): CALL 0x00015950
00015d77(4): ADD RSP,0x28
00015d7b(1): RET
00015d80(3): TEST RDX,RDX
00015d83(2): JNZ 0x00015da8
00015d85(4): AND byte ptr [RDI + 0x38],0xf9
00015d89(7): MOV qword ptr [RSI],0x0
00015d90(8): MOV qword ptr [RSI + 0x10],0x0
00015d98(8): MOV qword ptr [RSI + 0x8],0x0
00015da0(1): RET
00015da8(4): MOVZX EAX,byte ptr [RDI + 0x38]
00015dac(3): AND EAX,0xfffffff9
00015daf(3): OR EAX,0x2
00015db2(3): MOV byte ptr [RDI + 0x38],AL
00015db5(3): MOV qword ptr [RSI],RDX
00015db8(4): MOV qword ptr [RSI + 0x8],RCX
00015dbc(4): MOV qword ptr [RSI + 0x10],R8
00015dc0(1): RET
00015dd0(2): PUSH R12
00015dd2(1): PUSH RBP
00015dd3(3): MOV RBP,RDI
00015dd6(1): PUSH RBX
00015dd7(5): CALL 0x00001b70
00015ddc(3): MOV EBX,dword ptr [RBP]
00015ddf(3): MOV RDI,RBP
00015de2(3): MOV R12,RAX
00015de5(5): CALL 0x00007790
00015dea(3): AND EBX,0x20
00015ded(2): TEST EBX,EBX
00015def(2): JNZ 0x00015e08
00015df1(2): TEST EAX,EAX
00015df3(2): JZ 0x00015dff
00015df5(3): TEST R12,R12
00015df8(5): MOV EAX,0xffffffff
00015dfd(2): JZ 0x00015e38
00015dff(1): POP RBX
00015e00(1): POP RBP
00015e01(2): POP R12
00015e03(1): RET
00015e08(2): TEST EAX,EAX
00015e0a(2): JNZ 0x00015e28
00015e0c(5): CALL 0x00001b20
00015e11(6): MOV dword ptr [RAX],0x0
00015e17(5): MOV EAX,0xffffffff
00015e1c(1): POP RBX
00015e1d(1): POP RBP
00015e1e(2): POP R12
00015e20(1): RET
00015e28(1): POP RBX
00015e29(5): MOV EAX,0xffffffff
00015e2e(1): POP RBP
00015e2f(2): POP R12
00015e31(1): RET
00015e38(5): CALL 0x00001b20
00015e3d(3): CMP dword ptr [RAX],0x9
00015e40(1): POP RBX
00015e41(1): POP RBP
00015e42(2): POP R12
00015e44(3): SETNZ AL
00015e47(3): MOVZX EAX,AL
00015e4a(2): NEG EAX
00015e4c(1): RET
00015e50(4): SUB RSP,0x8
00015e54(2): XOR ESI,ESI
00015e56(5): CALL 0x00001e20
00015e5b(3): MOV RDX,RAX
00015e5e(5): MOV EAX,0x1
00015e63(3): TEST RDX,RDX
00015e66(2): JZ 0x00015e85
00015e68(7): LEA RDI,[0x17e90]
00015e6f(5): MOV ECX,0x2
00015e74(3): MOV RSI,RDX
00015e77(2): CMPSB.REPE RDI,RSI
00015e79(3): SETA CL
00015e7c(3): SBB CL,0x0
00015e7f(2): XOR EAX,EAX
00015e81(2): TEST CL,CL
00015e83(2): JNZ 0x00015e90
00015e85(4): ADD RSP,0x8
00015e89(1): RET
00015e90(7): LEA RDI,[0x17e92]
00015e97(5): MOV ECX,0x6
00015e9c(3): MOV RSI,RDX
00015e9f(2): CMPSB.REPE RDI,RSI
00015ea1(3): SETA AL
00015ea4(2): SBB AL,0x0
00015ea6(2): TEST AL,AL
00015ea8(3): SETNZ AL
00015eab(4): ADD RSP,0x8
00015eaf(1): RET
00015eb0(4): SUB RSP,0x8
00015eb4(5): MOV EDI,0xe
00015eb9(5): CALL 0x00001dd0
00015ebe(3): TEST RAX,RAX
00015ec1(2): JZ 0x00015ee0
00015ec3(3): CMP byte ptr [RAX],0x0
00015ec6(7): LEA RDX,[0x17e98]
00015ecd(4): CMOVZ RAX,RDX
00015ed1(4): ADD RSP,0x8
00015ed5(1): RET
00015ee0(7): LEA RAX,[0x17e98]
00015ee7(4): ADD RSP,0x8
00015eeb(1): RET
00015ef0(2): PUSH R15
00015ef2(2): PUSH R14
00015ef4(3): MOV R15,RDX
00015ef7(2): PUSH R13
00015ef9(2): PUSH R12
00015efb(7): LEA R12,[0x21b9b0]
00015f02(1): PUSH RBP
00015f03(7): LEA RBP,[0x21b9b8]
00015f0a(1): PUSH RBX
00015f0b(3): MOV R13D,EDI
00015f0e(3): MOV R14,RSI
00015f11(3): SUB RBP,R12
00015f14(4): SUB RSP,0x8
00015f18(4): SAR RBP,0x3
00015f1c(5): CALL 0x00001a98
00015f21(3): TEST RBP,RBP
00015f24(2): JZ 0x00015f46
00015f26(2): XOR EBX,EBX
00015f28(8): NOP dword ptr [RAX + RAX*0x1]
00015f30(3): MOV RDX,R15
00015f33(3): MOV RSI,R14
00015f36(3): MOV EDI,R13D
00015f39(4): CALL qword ptr [R12 + RBX*0x8]
00015f3d(4): ADD RBX,0x1
00015f41(3): CMP RBP,RBX
00015f44(2): JNZ 0x00015f30
00015f46(4): ADD RSP,0x8
00015f4a(1): POP RBX
00015f4b(1): POP RBP
00015f4c(2): POP R12
00015f4e(2): POP R13
00015f50(2): POP R14
00015f52(2): POP R15
00015f54(1): RET
00015f60(2): RET
00015f70(7): MOV RDX,qword ptr [0x0021c008]
00015f77(2): XOR ESI,ESI
00015f79(5): JMP 0x00001ec0
00015f80(4): SUB RSP,0x8
00015f84(4): ADD RSP,0x8
00015f88(1): RET

