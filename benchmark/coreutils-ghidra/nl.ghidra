00001888(4): SUB RSP,0x8
0000188c(7): MOV RAX,qword ptr [0x00218fd8]
00001893(3): TEST RAX,RAX
00001896(2): JZ 0x0000189a
00001898(2): CALL RAX
0000189a(4): ADD RSP,0x8
0000189e(1): RET
000018a0(6): PUSH qword ptr [0x00218dd0]
000018a6(6): JMP qword ptr [0x00218dd8]
000018b0(6): JMP qword ptr [0x00218de0]
000018b6(5): PUSH 0x0
000018bb(5): JMP 0x000018a0
000018c0(6): JMP qword ptr [0x00218de8]
000018c6(5): PUSH 0x1
000018cb(5): JMP 0x000018a0
000018d0(6): JMP qword ptr [0x00218df0]
000018d6(5): PUSH 0x2
000018db(5): JMP 0x000018a0
000018e0(6): JMP qword ptr [0x00218df8]
000018e6(5): PUSH 0x3
000018eb(5): JMP 0x000018a0
000018f0(6): JMP qword ptr [0x00218e00]
000018f6(5): PUSH 0x4
000018fb(5): JMP 0x000018a0
00001900(6): JMP qword ptr [0x00218e08]
00001906(5): PUSH 0x5
0000190b(5): JMP 0x000018a0
00001910(6): JMP qword ptr [0x00218e10]
00001916(5): PUSH 0x6
0000191b(5): JMP 0x000018a0
00001920(6): JMP qword ptr [0x00218e18]
00001926(5): PUSH 0x7
0000192b(5): JMP 0x000018a0
00001930(6): JMP qword ptr [0x00218e20]
00001936(5): PUSH 0x8
0000193b(5): JMP 0x000018a0
00001940(6): JMP qword ptr [0x00218e28]
00001946(5): PUSH 0x9
0000194b(5): JMP 0x000018a0
00001950(6): JMP qword ptr [0x00218e30]
00001956(5): PUSH 0xa
0000195b(5): JMP 0x000018a0
00001960(6): JMP qword ptr [0x00218e38]
00001966(5): PUSH 0xb
0000196b(5): JMP 0x000018a0
00001970(6): JMP qword ptr [0x00218e40]
00001976(5): PUSH 0xc
0000197b(5): JMP 0x000018a0
00001980(6): JMP qword ptr [0x00218e48]
00001986(5): PUSH 0xd
0000198b(5): JMP 0x000018a0
00001990(6): JMP qword ptr [0x00218e50]
00001996(5): PUSH 0xe
0000199b(5): JMP 0x000018a0
000019a0(6): JMP qword ptr [0x00218e58]
000019a6(5): PUSH 0xf
000019ab(5): JMP 0x000018a0
000019b0(6): JMP qword ptr [0x00218e60]
000019b6(5): PUSH 0x10
000019bb(5): JMP 0x000018a0
000019c0(6): JMP qword ptr [0x00218e68]
000019c6(5): PUSH 0x11
000019cb(5): JMP 0x000018a0
000019d0(6): JMP qword ptr [0x00218e70]
000019d6(5): PUSH 0x12
000019db(5): JMP 0x000018a0
000019e0(6): JMP qword ptr [0x00218e78]
000019e6(5): PUSH 0x13
000019eb(5): JMP 0x000018a0
000019f0(6): JMP qword ptr [0x00218e80]
000019f6(5): PUSH 0x14
000019fb(5): JMP 0x000018a0
00001a00(6): JMP qword ptr [0x00218e88]
00001a06(5): PUSH 0x15
00001a0b(5): JMP 0x000018a0
00001a10(6): JMP qword ptr [0x00218e90]
00001a16(5): PUSH 0x16
00001a1b(5): JMP 0x000018a0
00001a20(6): JMP qword ptr [0x00218e98]
00001a26(5): PUSH 0x17
00001a2b(5): JMP 0x000018a0
00001a30(6): JMP qword ptr [0x00218ea0]
00001a36(5): PUSH 0x18
00001a3b(5): JMP 0x000018a0
00001a40(6): JMP qword ptr [0x00218ea8]
00001a46(5): PUSH 0x19
00001a4b(5): JMP 0x000018a0
00001a50(6): JMP qword ptr [0x00218eb0]
00001a56(5): PUSH 0x1a
00001a5b(5): JMP 0x000018a0
00001a60(6): JMP qword ptr [0x00218eb8]
00001a66(5): PUSH 0x1b
00001a6b(5): JMP 0x000018a0
00001a70(6): JMP qword ptr [0x00218ec0]
00001a76(5): PUSH 0x1c
00001a7b(5): JMP 0x000018a0
00001a80(6): JMP qword ptr [0x00218ec8]
00001a86(5): PUSH 0x1d
00001a8b(5): JMP 0x000018a0
00001a90(6): JMP qword ptr [0x00218ed0]
00001a96(5): PUSH 0x1e
00001a9b(5): JMP 0x000018a0
00001aa0(6): JMP qword ptr [0x00218ed8]
00001aa6(5): PUSH 0x1f
00001aab(5): JMP 0x000018a0
00001ab0(6): JMP qword ptr [0x00218ee0]
00001ab6(5): PUSH 0x20
00001abb(5): JMP 0x000018a0
00001ac0(6): JMP qword ptr [0x00218ee8]
00001ac6(5): PUSH 0x21
00001acb(5): JMP 0x000018a0
00001ad0(6): JMP qword ptr [0x00218ef0]
00001ad6(5): PUSH 0x22
00001adb(5): JMP 0x000018a0
00001ae0(6): JMP qword ptr [0x00218ef8]
00001ae6(5): PUSH 0x23
00001aeb(5): JMP 0x000018a0
00001af0(6): JMP qword ptr [0x00218f00]
00001af6(5): PUSH 0x24
00001afb(5): JMP 0x000018a0
00001b00(6): JMP qword ptr [0x00218f08]
00001b06(5): PUSH 0x25
00001b0b(5): JMP 0x000018a0
00001b10(6): JMP qword ptr [0x00218f10]
00001b16(5): PUSH 0x26
00001b1b(5): JMP 0x000018a0
00001b20(6): JMP qword ptr [0x00218f18]
00001b26(5): PUSH 0x27
00001b2b(5): JMP 0x000018a0
00001b30(6): JMP qword ptr [0x00218f20]
00001b36(5): PUSH 0x28
00001b3b(5): JMP 0x000018a0
00001b40(6): JMP qword ptr [0x00218f28]
00001b46(5): PUSH 0x29
00001b4b(5): JMP 0x000018a0
00001b50(6): JMP qword ptr [0x00218f30]
00001b56(5): PUSH 0x2a
00001b5b(5): JMP 0x000018a0
00001b60(6): JMP qword ptr [0x00218f38]
00001b66(5): PUSH 0x2b
00001b6b(5): JMP 0x000018a0
00001b70(6): JMP qword ptr [0x00218f40]
00001b76(5): PUSH 0x2c
00001b7b(5): JMP 0x000018a0
00001b80(6): JMP qword ptr [0x00218f48]
00001b86(5): PUSH 0x2d
00001b8b(5): JMP 0x000018a0
00001b90(6): JMP qword ptr [0x00218f50]
00001b96(5): PUSH 0x2e
00001b9b(5): JMP 0x000018a0
00001ba0(6): JMP qword ptr [0x00218f58]
00001ba6(5): PUSH 0x2f
00001bab(5): JMP 0x000018a0
00001bb0(6): JMP qword ptr [0x00218f60]
00001bb6(5): PUSH 0x30
00001bbb(5): JMP 0x000018a0
00001bc0(6): JMP qword ptr [0x00218f68]
00001bc6(5): PUSH 0x31
00001bcb(5): JMP 0x000018a0
00001bd0(6): JMP qword ptr [0x00218f70]
00001bd6(5): PUSH 0x32
00001bdb(5): JMP 0x000018a0
00001be0(6): JMP qword ptr [0x00218f78]
00001be6(5): PUSH 0x33
00001beb(5): JMP 0x000018a0
00001bf0(6): JMP qword ptr [0x00218f80]
00001bf6(5): PUSH 0x34
00001bfb(5): JMP 0x000018a0
00001c00(6): JMP qword ptr [0x00218f88]
00001c06(5): PUSH 0x35
00001c0b(5): JMP 0x000018a0
00001c10(6): JMP qword ptr [0x00218f90]
00001c16(5): PUSH 0x36
00001c1b(5): JMP 0x000018a0
00001c20(6): JMP qword ptr [0x00218f98]
00001c26(5): PUSH 0x37
00001c2b(5): JMP 0x000018a0
00001c30(6): JMP qword ptr [0x00218fa0]
00001c36(5): PUSH 0x38
00001c3b(5): JMP 0x000018a0
00001c40(6): JMP qword ptr [0x00218fa8]
00001c46(5): PUSH 0x39
00001c4b(5): JMP 0x000018a0
00001c50(6): JMP qword ptr [0x00218fb0]
00001c56(5): PUSH 0x3a
00001c5b(5): JMP 0x000018a0
00001c60(6): JMP qword ptr [0x00218fb8]
00001c66(5): PUSH 0x3b
00001c6b(5): JMP 0x000018a0
00001c70(6): JMP qword ptr [0x00218fc0]
00001c76(5): PUSH 0x3c
00001c7b(5): JMP 0x000018a0
00001c80(6): JMP qword ptr [0x00218fe8]
00001c90(2): PUSH R15
00001c92(2): PUSH R14
00001c94(7): LEA R15,[0x14e50]
00001c9b(2): PUSH R13
00001c9d(2): PUSH R12
00001c9f(7): LEA R14,[0x144b2]
00001ca6(1): PUSH RBP
00001ca7(1): PUSH RBX
00001ca8(2): MOV EBP,EDI
00001caa(3): MOV RBX,RSI
00001cad(7): LEA R12,[0x2189c0]
00001cb4(6): MOV R13D,0x1
00001cba(4): SUB RSP,0x18
00001cbe(3): MOV RDI,qword ptr [RSI]
00001cc1(5): CALL 0x00003030
00001cc6(7): LEA RSI,[0x145ad]
00001ccd(5): MOV EDI,0x6
00001cd2(5): CALL 0x00001b70
00001cd7(7): LEA RSI,[0x1445f]
00001cde(7): LEA RDI,[0x14436]
00001ce5(5): CALL 0x00001990
00001cea(7): LEA RDI,[0x14436]
00001cf1(5): CALL 0x00001950
00001cf6(7): LEA RDI,[0x2e00]
00001cfd(5): CALL 0x00014380
00001d02(7): MOV byte ptr [0x00219148],0x0
00001d09(7): NOP dword ptr [RAX]
00001d10(7): LEA RDX,[0x144d9]
00001d17(3): XOR R8D,R8D
00001d1a(3): MOV RCX,R12
00001d1d(3): MOV RSI,RBX
00001d20(2): MOV EDI,EBP
00001d22(5): CALL 0x000019f0
00001d27(3): CMP EAX,-0x1
00001d2a(6): JZ 0x000020d0
00001d30(3): CMP EAX,0x69
00001d33(6): JZ 0x00001f78
00001d39(2): JLE 0x00001d70
00001d3b(3): CMP EAX,0x70
00001d3e(6): JZ 0x00001e40
00001d44(2): JLE 0x00001da8
00001d46(3): CMP EAX,0x76
00001d49(6): JZ 0x00001f28
00001d4f(3): CMP EAX,0x77
00001d52(6): JZ 0x00001ee0
00001d58(3): CMP EAX,0x73
00001d5b(6): JZ 0x00001fc0
00001d61(3): XOR R13D,R13D
00001d64(2): JMP 0x00001d10
00001d70(3): CMP EAX,0x62
00001d73(6): JZ 0x00001fd8
00001d79(2): JLE 0x00001df0
00001d7b(3): CMP EAX,0x66
00001d7e(6): JZ 0x00001e98
00001d84(3): CMP EAX,0x68
00001d87(6): JZ 0x00001e50
00001d8d(3): CMP EAX,0x64
00001d90(2): JNZ 0x00001d61
00001d92(7): MOV RAX,qword ptr [0x00219100]
00001d99(7): MOV qword ptr [0x00219040],RAX
00001da0(5): JMP 0x00001d10
00001da8(3): CMP EAX,0x6c
00001dab(6): JZ 0x00002038
00001db1(3): CMP EAX,0x6e
00001db4(2): JNZ 0x00001d61
00001db6(7): MOV RDX,qword ptr [0x00219100]
00001dbd(5): MOV ECX,0x3
00001dc2(3): MOV RDI,R14
00001dc5(3): MOV RSI,RDX
00001dc8(2): CMPSB.REPE RDI,RSI
00001dca(3): SETA AL
00001dcd(2): SBB AL,0x0
00001dcf(2): TEST AL,AL
00001dd1(6): JNZ 0x0000207f
00001dd7(7): LEA RAX,[0x14e40]
00001dde(7): MOV qword ptr [0x00219038],RAX
00001de5(5): JMP 0x00001d10
00001df0(5): CMP EAX,0xffffff7d
00001df5(6): JNZ 0x00002281
00001dfb(4): SUB RSP,0x8
00001dff(7): MOV RDI,qword ptr [0x002190e8]
00001e06(7): MOV RCX,qword ptr [0x00219068]
00001e0d(2): PUSH 0x0
00001e0f(7): LEA R9,[0x144bb]
00001e16(7): LEA R8,[0x144cb]
00001e1d(7): LEA RDX,[0x14432]
00001e24(7): LEA RSI,[0x143b9]
00001e2b(2): XOR EAX,EAX
00001e2d(5): CALL 0x00005220
00001e32(2): XOR EDI,EDI
00001e34(5): CALL 0x00001c10
00001e40(7): MOV byte ptr [0x00219020],0x0
00001e47(5): JMP 0x00001d10
00001e50(7): LEA RDX,[0x2192c0]
00001e57(7): LEA RSI,[0x219500]
00001e5e(7): LEA RDI,[0x219058]
00001e65(5): CALL 0x00002420
00001e6a(2): TEST AL,AL
00001e6c(6): JNZ 0x00001d10
00001e72(7): MOV RDI,qword ptr [0x00219100]
00001e79(5): CALL 0x00004d40
00001e7e(5): MOV EDX,0x5
00001e83(3): MOV R13,RAX
00001e86(7): LEA RSI,[0x14d50]
00001e8d(5): JMP 0x00002015
00001e98(7): LEA RDX,[0x2191c0]
00001e9f(7): LEA RSI,[0x2194c0]
00001ea6(7): LEA RDI,[0x219050]
00001ead(5): CALL 0x00002420
00001eb2(2): TEST AL,AL
00001eb4(6): JNZ 0x00001d10
00001eba(7): MOV RDI,qword ptr [0x00219100]
00001ec1(5): CALL 0x00004d40
00001ec6(5): MOV EDX,0x5
00001ecb(3): MOV R13,RAX
00001ece(7): LEA RSI,[0x14da0]
00001ed5(5): JMP 0x00002015
00001ee0(7): LEA RSI,[0x14df0]
00001ee7(5): MOV EDX,0x5
00001eec(2): XOR EDI,EDI
00001eee(5): CALL 0x000019b0
00001ef3(7): MOV RDI,qword ptr [0x00219100]
00001efa(7): LEA RCX,[0x145ad]
00001f01(3): MOV R8,RAX
00001f04(3): XOR R9D,R9D
00001f07(5): MOV EDX,0x7fffffff
00001f0c(5): MOV ESI,0x1
00001f11(5): CALL 0x00005730
00001f16(6): MOV dword ptr [0x00219010],EAX
00001f1c(5): JMP 0x00001d10
00001f28(7): LEA RSI,[0x14477]
00001f2f(5): MOV EDX,0x5
00001f34(2): XOR EDI,EDI
00001f36(5): CALL 0x000019b0
00001f3b(7): MOV RDI,qword ptr [0x00219100]
00001f42(7): LEA RCX,[0x145ad]
00001f49(3): MOV R8,RAX
00001f4c(3): XOR R9D,R9D
00001f4f(10): MOV RDX,0x7fffffffffffffff
00001f59(10): MOV RSI,-0x8000000000000000
00001f63(5): CALL 0x00005730
00001f68(7): MOV qword ptr [0x00219030],RAX
00001f6f(5): JMP 0x00001d10
00001f78(7): LEA RSI,[0x14494]
00001f7f(5): MOV EDX,0x5
00001f84(2): XOR EDI,EDI
00001f86(5): CALL 0x000019b0
00001f8b(7): MOV RDI,qword ptr [0x00219100]
00001f92(7): LEA RCX,[0x145ad]
00001f99(3): MOV R8,RAX
00001f9c(3): XOR R9D,R9D
00001f9f(10): MOV RDX,0x7fffffffffffffff
00001fa9(5): MOV ESI,0x1
00001fae(5): CALL 0x00005730
00001fb3(7): MOV qword ptr [0x00219028],RAX
00001fba(5): JMP 0x00001d10
00001fc0(7): MOV RAX,qword ptr [0x00219100]
00001fc7(7): MOV qword ptr [0x00219048],RAX
00001fce(5): JMP 0x00001d10
00001fd8(7): LEA RDX,[0x2193c0]
00001fdf(7): LEA RSI,[0x219540]
00001fe6(7): LEA RDI,[0x219060]
00001fed(5): CALL 0x00002420
00001ff2(2): TEST AL,AL
00001ff4(6): JNZ 0x00001d10
00001ffa(7): MOV RDI,qword ptr [0x00219100]
00002001(5): CALL 0x00004d40
00002006(7): LEA RSI,[0x14d78]
0000200d(3): MOV R13,RAX
00002010(5): MOV EDX,0x5
00002015(2): XOR EDI,EDI
00002017(5): CALL 0x000019b0
0000201c(3): MOV RCX,R13
0000201f(3): MOV RDX,RAX
00002022(2): XOR ESI,ESI
00002024(2): XOR EDI,EDI
00002026(2): XOR EAX,EAX
00002028(3): XOR R13D,R13D
0000202b(5): CALL 0x00001bb0
00002038(7): LEA RSI,[0x14dc8]
0000203f(5): MOV EDX,0x5
00002044(2): XOR EDI,EDI
00002046(5): CALL 0x000019b0
0000204b(7): MOV RDI,qword ptr [0x00219100]
00002052(7): LEA RCX,[0x145ad]
00002059(3): MOV R8,RAX
0000205c(3): XOR R9D,R9D
0000205f(10): MOV RDX,0x7fffffffffffffff
00002069(5): MOV ESI,0x1
0000206e(5): CALL 0x00005730
00002073(7): MOV qword ptr [0x00219018],RAX
0000207a(5): JMP 0x00001d10
0000207f(7): LEA RSI,[0x144b5]
00002086(3): MOV RDI,RDX
00002089(4): MOV qword ptr [RSP],RDX
0000208d(5): CALL 0x00001ac0
00002092(2): TEST EAX,EAX
00002094(4): MOV RDX,qword ptr [RSP]
00002098(6): JZ 0x00002293
0000209e(7): LEA RSI,[0x144b8]
000020a5(3): MOV RDI,RDX
000020a8(4): MOV qword ptr [RSP],RDX
000020ac(5): CALL 0x00001ac0
000020b1(2): TEST EAX,EAX
000020b3(4): MOV RDX,qword ptr [RSP]
000020b7(6): JNZ 0x000022ca
000020bd(7): LEA RAX,[0x14e48]
000020c4(7): MOV qword ptr [0x00219038],RAX
000020cb(5): JMP 0x00001d10
000020d0(3): TEST R13B,R13B
000020d3(6): JZ 0x000022fa
000020d9(7): MOV RDI,qword ptr [0x00219040]
000020e0(4): OR R8,-0x1
000020e4(2): XOR EDX,EDX
000020e6(3): MOV RCX,R8
000020e9(5): MOV qword ptr [RSP + 0x8],R8
000020ee(2): MOV EAX,EDX
000020f0(3): MOV byte ptr [RSP],DL
000020f3(2): SCASB.REPNE RDI
000020f5(3): NOT RCX
000020f8(4): LEA R12,[RCX + R8*0x1]
000020fc(3): MOV R14,RCX
000020ff(4): LEA RDI,[R12 + R12*0x2]
00002103(7): MOV qword ptr [0x00219198],RDI
0000210a(4): ADD RDI,0x1
0000210e(5): CALL 0x00005380
00002113(7): MOV R15,qword ptr [0x00219040]
0000211a(3): MOV RDI,RAX
0000211d(7): MOV qword ptr [0x002191a0],RAX
00002124(3): MOV RSI,R15
00002127(5): CALL 0x000019a0
0000212c(3): MOV RSI,R15
0000212f(3): MOV RDI,RAX
00002132(5): CALL 0x000019a0
00002137(3): MOV RSI,R15
0000213a(3): MOV RDI,RAX
0000213d(5): CALL 0x00001920
00002142(4): LEA RDI,[R12 + R12*0x1]
00002146(7): MOV qword ptr [0x00219188],RDI
0000214d(4): ADD RDI,0x1
00002151(5): CALL 0x00005380
00002156(7): MOV R15,qword ptr [0x00219040]
0000215d(3): MOV RDI,RAX
00002160(7): MOV qword ptr [0x00219190],RAX
00002167(3): MOV RSI,R15
0000216a(5): CALL 0x000019a0
0000216f(3): MOV RSI,R15
00002172(3): MOV RDI,RAX
00002175(5): CALL 0x00001920
0000217a(3): MOV RDI,R14
0000217d(7): MOV qword ptr [0x00219178],R12
00002184(5): CALL 0x00005380
00002189(7): MOV RSI,qword ptr [0x00219040]
00002190(3): MOV RDI,RAX
00002193(7): MOV qword ptr [0x00219180],RAX
0000219a(5): CALL 0x00001920
0000219f(7): LEA RDI,[0x219160]
000021a6(5): CALL 0x00002ef0
000021ab(4): MOVZX EDX,byte ptr [RSP]
000021af(5): MOV R8,qword ptr [RSP + 0x8]
000021b4(7): MOV RDI,qword ptr [0x00219048]
000021bb(3): MOV RCX,R8
000021be(2): MOV EAX,EDX
000021c0(2): SCASB.REPNE RDI
000021c2(7): MOVSXD RAX,dword ptr [0x00219010]
000021c9(3): MOV R12,RCX
000021cc(3): NOT R12
000021cf(4): SUB R12,0x1
000021d3(5): LEA RDI,[R12 + RAX*0x1 + 0x1]
000021d8(5): CALL 0x00005380
000021dd(3): MOV RCX,RAX
000021e0(7): MOV qword ptr [0x00219158],RAX
000021e7(7): MOVSXD RAX,dword ptr [0x00219010]
000021ee(5): MOV ESI,0x20
000021f3(3): MOV RDI,RCX
000021f6(3): ADD R12,RAX
000021f9(3): MOV RDX,R12
000021fc(5): CALL 0x00001a60
00002201(5): MOV byte ptr [RAX + R12*0x1],0x0
00002206(7): MOV RAX,qword ptr [0x00219030]
0000220d(7): MOV qword ptr [0x00219150],RAX
00002214(7): MOV RAX,qword ptr [0x00219060]
0000221b(7): MOV qword ptr [0x00219580],RAX
00002222(7): LEA RAX,[0x219540]
00002229(7): MOV qword ptr [0x002191a8],RAX
00002230(6): MOV EAX,dword ptr [0x002190f8]
00002236(2): CMP EAX,EBP
00002238(6): JZ 0x000022e6
0000223e(2): JGE 0x00002261
00002240(2): CDQE
00002242(4): MOV RDI,qword ptr [RBX + RAX*0x8]
00002246(5): CALL 0x00002560
0000224b(3): AND R13D,EAX
0000224e(6): MOV EAX,dword ptr [0x002190f8]
00002254(3): ADD EAX,0x1
00002257(2): CMP EAX,EBP
00002259(6): MOV dword ptr [0x002190f8],EAX
0000225f(2): JL 0x00002240
00002261(7): CMP byte ptr [0x00219148],0x0
00002268(2): JNZ 0x0000229f
0000226a(4): ADD RSP,0x18
0000226e(4): XOR R13D,0x1
00002272(1): POP RBX
00002273(4): MOVZX EAX,R13B
00002277(1): POP RBP
00002278(2): POP R12
0000227a(2): POP R13
0000227c(2): POP R14
0000227e(2): POP R15
00002280(1): RET
00002281(5): CMP EAX,0xffffff7e
00002286(6): JNZ 0x00001d61
0000228c(2): XOR EDI,EDI
0000228e(5): CALL 0x00002970
00002293(7): MOV qword ptr [0x00219038],R15
0000229a(5): JMP 0x00001d10
0000229f(7): MOV RDI,qword ptr [0x002190f0]
000022a6(5): CALL 0x00005e20
000022ab(3): ADD EAX,0x1
000022ae(2): JNZ 0x0000226a
000022b0(5): CALL 0x000018f0
000022b5(2): MOV ESI,dword ptr [RAX]
000022b7(7): LEA RDX,[0x14eb2]
000022be(5): MOV EDI,0x1
000022c3(2): XOR EAX,EAX
000022c5(5): CALL 0x00001bb0
000022ca(3): MOV RDI,RDX
000022cd(5): CALL 0x00004d40
000022d2(5): MOV EDX,0x5
000022d7(3): MOV R13,RAX
000022da(7): LEA RSI,[0x14e10]
000022e1(5): JMP 0x00002015
000022e6(7): LEA RDI,[0x14eb2]
000022ed(5): CALL 0x00002560
000022f2(3): MOV R13D,EAX
000022f5(5): JMP 0x00002261
000022fa(5): MOV EDI,0x1
000022ff(5): CALL 0x00002970
00002304(10): NOP word ptr CS:[RAX + RAX*0x1]
0000230e(2): NOP
00002310(2): XOR EBP,EBP
00002312(3): MOV R9,RDX
00002315(1): POP RSI
00002316(3): MOV RDX,RSP
00002319(4): AND RSP,-0x10
0000231d(1): PUSH RAX
0000231e(1): PUSH RSP
0000231f(7): LEA R8,[0x14370]
00002326(7): LEA RCX,[0x14300]
0000232d(7): LEA RDI,[0x1c90]
00002334(6): CALL qword ptr [0x00218fd0]
0000233a(1): HLT
00002340(7): LEA RDI,[0x2190e0]
00002347(1): PUSH RBP
00002348(7): LEA RAX,[0x2190e0]
0000234f(3): CMP RAX,RDI
00002352(3): MOV RBP,RSP
00002355(2): JZ 0x00002370
00002357(7): MOV RAX,qword ptr [0x00218fc8]
0000235e(3): TEST RAX,RAX
00002361(2): JZ 0x00002370
00002363(1): POP RBP
00002364(2): JMP RAX
00002370(1): POP RBP
00002371(1): RET
00002380(7): LEA RDI,[0x2190e0]
00002387(7): LEA RSI,[0x2190e0]
0000238e(1): PUSH RBP
0000238f(3): SUB RSI,RDI
00002392(3): MOV RBP,RSP
00002395(4): SAR RSI,0x3
00002399(3): MOV RAX,RSI
0000239c(4): SHR RAX,0x3f
000023a0(3): ADD RSI,RAX
000023a3(3): SAR RSI,1
000023a6(2): JZ 0x000023c0
000023a8(7): MOV RAX,qword ptr [0x00218fe0]
000023af(3): TEST RAX,RAX
000023b2(2): JZ 0x000023c0
000023b4(1): POP RBP
000023b5(2): JMP RAX
000023c0(1): POP RBP
000023c1(1): RET
000023d0(7): CMP byte ptr [0x00219128],0x0
000023d7(2): JNZ 0x00002408
000023d9(8): CMP qword ptr [0x00218fe8],0x0
000023e1(1): PUSH RBP
000023e2(3): MOV RBP,RSP
000023e5(2): JZ 0x000023f3
000023e7(7): MOV RDI,qword ptr [0x00219008]
000023ee(5): CALL 0x00001c80
000023f3(5): CALL 0x00002340
000023f8(7): MOV byte ptr [0x00219128],0x1
000023ff(1): POP RBP
00002400(1): RET
00002408(2): RET
00002410(1): PUSH RBP
00002411(3): MOV RBP,RSP
00002414(1): POP RBP
00002415(5): JMP 0x00002380
00002420(7): MOV RCX,qword ptr [0x00219100]
00002427(3): MOVZX EAX,byte ptr [RCX]
0000242a(2): CMP AL,0x6e
0000242c(6): JZ 0x000024b4
00002432(2): JLE 0x000024b0
00002434(2): CMP AL,0x70
00002436(2): JNZ 0x000024a8
00002438(1): PUSH RBP
00002439(4): LEA RAX,[RCX + 0x1]
0000243d(1): PUSH RBX
0000243e(3): MOV RBX,RSI
00002441(4): SUB RSP,0x8
00002445(7): MOV qword ptr [0x00219100],RAX
0000244c(3): MOV qword ptr [RDI],RCX
0000244f(7): MOV RBP,qword ptr [0x00219100]
00002456(7): MOV qword ptr [RSI],0x0
0000245d(4): MOV qword ptr [RSI + 0x20],RDX
00002461(8): MOV qword ptr [RSI + 0x8],0x0
00002469(8): MOV qword ptr [RSI + 0x28],0x0
00002471(11): MOV qword ptr [0x002196d8],0x2c6
0000247c(3): MOV RDI,RBP
0000247f(5): CALL 0x000019d0
00002484(3): MOV RDX,RBX
00002487(3): MOV RSI,RAX
0000248a(3): MOV RDI,RBP
0000248d(5): CALL 0x00013790
00002492(3): TEST RAX,RAX
00002495(2): JNZ 0x000024bd
00002497(4): ADD RSP,0x8
0000249b(5): MOV EAX,0x1
000024a0(1): POP RBX
000024a1(1): POP RBP
000024a2(1): RET
000024a8(2): CMP AL,0x74
000024aa(2): JZ 0x000024b4
000024ac(2): XOR EAX,EAX
000024ae(1): RET
000024b0(2): CMP AL,0x61
000024b2(2): JNZ 0x000024ac
000024b4(3): MOV qword ptr [RDI],RCX
000024b7(5): MOV EAX,0x1
000024bc(1): RET
000024bd(7): LEA RDX,[0x14e6c]
000024c4(3): MOV RCX,RAX
000024c7(2): XOR ESI,ESI
000024c9(5): MOV EDI,0x1
000024ce(2): XOR EAX,EAX
000024d0(5): CALL 0x00001bb0
000024d5(1): NOP
000024d6(10): NOP word ptr CS:[RAX + RAX*0x1]
000024e0(4): SUB RSP,0x8
000024e4(6): MOV EDX,dword ptr [0x00219010]
000024ea(7): MOV R8,qword ptr [0x00219048]
000024f1(7): MOV RCX,qword ptr [0x00219150]
000024f8(7): MOV RSI,qword ptr [0x00219038]
000024ff(2): XOR EAX,EAX
00002501(5): MOV EDI,0x1
00002506(5): CALL 0x00001b80
0000250b(7): MOV RAX,qword ptr [0x00219150]
00002512(7): MOV RDX,qword ptr [0x00219028]
00002519(3): ADD RDX,RAX
0000251c(3): CMP RAX,RDX
0000251f(2): JG 0x0000252d
00002521(7): MOV qword ptr [0x00219150],RDX
00002528(4): ADD RSP,0x8
0000252c(1): RET
0000252d(7): LEA RSI,[0x143a4]
00002534(5): MOV EDX,0x5
00002539(2): XOR EDI,EDI
0000253b(5): CALL 0x000019b0
00002540(2): XOR ESI,ESI
00002542(3): MOV RDX,RAX
00002545(5): MOV EDI,0x1
0000254a(2): XOR EAX,EAX
0000254c(5): CALL 0x00001bb0
00002551(5): NOP dword ptr [RAX + RAX*0x1]
00002556(10): NOP word ptr CS:[RAX + RAX*0x1]
00002560(2): PUSH R15
00002562(2): PUSH R14
00002564(3): MOV RSI,RDI
00002567(2): PUSH R13
00002569(2): PUSH R12
0000256b(5): MOV ECX,0x2
00002570(1): PUSH RBP
00002571(1): PUSH RBX
00002572(4): SUB RSP,0x18
00002576(5): MOV qword ptr [RSP + 0x8],RDI
0000257b(7): LEA RDI,[0x14eb2]
00002582(2): CMPSB.REPE RDI,RSI
00002584(3): SETA AL
00002587(2): SBB AL,0x0
00002589(2): TEST AL,AL
0000258b(6): JNZ 0x000028e0
00002591(7): MOV RBX,qword ptr [0x002190f0]
00002598(7): MOV byte ptr [0x00219148],0x1
0000259f(7): LEA RBP,[0x219160]
000025a6(7): LEA R12,[0x2194c0]
000025ad(5): MOV ESI,0x2
000025b2(3): MOV RDI,RBX
000025b5(5): CALL 0x00002ec0
000025ba(6): NOP word ptr [RAX + RAX*0x1]
000025c0(3): MOV RSI,RBX
000025c3(3): MOV RDI,RBP
000025c6(5): CALL 0x00003010
000025cb(3): TEST RAX,RAX
000025ce(6): JZ 0x000026a6
000025d4(7): MOV R14,qword ptr [0x00219168]
000025db(4): LEA R15,[R14 + -0x1]
000025df(4): CMP R15,0x1
000025e3(6): JBE 0x00002700
000025e9(7): MOV RAX,qword ptr [0x00219040]
000025f0(7): MOV R13,qword ptr [0x00219170]
000025f7(3): MOVZX EAX,word ptr [RAX]
000025fa(5): CMP word ptr [R13],AX
000025ff(6): JNZ 0x00002700
00002605(7): CMP R15,qword ptr [0x00219198]
0000260c(6): JZ 0x00002760
00002612(7): CMP R15,qword ptr [0x00219188]
00002619(6): JZ 0x000027b0
0000261f(7): CMP R15,qword ptr [0x00219178]
00002626(6): JNZ 0x00002700
0000262c(7): MOV RSI,qword ptr [0x00219180]
00002633(3): MOV RDX,R15
00002636(3): MOV RDI,R13
00002639(5): CALL 0x00001a80
0000263e(2): TEST EAX,EAX
00002640(6): JNZ 0x00002700
00002646(7): CMP byte ptr [0x00219020],0x0
0000264d(7): MOV RAX,qword ptr [0x00219050]
00002654(7): MOV qword ptr [0x002191a8],R12
0000265b(7): MOV qword ptr [0x00219580],RAX
00002662(2): JZ 0x00002672
00002664(7): MOV RAX,qword ptr [0x00219030]
0000266b(7): MOV qword ptr [0x00219150],RAX
00002672(7): MOV RDI,qword ptr [0x002190e8]
00002679(4): MOV RAX,qword ptr [RDI + 0x28]
0000267d(4): CMP RAX,qword ptr [RDI + 0x30]
00002681(6): JNC 0x00002858
00002687(4): LEA RDX,[RAX + 0x1]
0000268b(3): MOV RSI,RBX
0000268e(4): MOV qword ptr [RDI + 0x28],RDX
00002692(3): MOV byte ptr [RAX],0xa
00002695(3): MOV RDI,RBP
00002698(5): CALL 0x00003010
0000269d(3): TEST RAX,RAX
000026a0(6): JNZ 0x000025d4
000026a6(3): TEST byte ptr [RBX],0x20
000026a9(6): JNZ 0x000028fd
000026af(5): MOV RSI,qword ptr [RSP + 0x8]
000026b4(7): LEA RDI,[0x14eb2]
000026bb(5): MOV ECX,0x2
000026c0(2): CMPSB.REPE RDI,RSI
000026c2(3): MOV RDI,RBX
000026c5(3): SETA AL
000026c8(2): SBB AL,0x0
000026ca(2): TEST AL,AL
000026cc(6): JZ 0x000028c2
000026d2(5): CALL 0x00005e20
000026d7(2): MOV EDX,EAX
000026d9(5): MOV EAX,0x1
000026de(3): CMP EDX,-0x1
000026e1(6): JZ 0x000028fd
000026e7(4): ADD RSP,0x18
000026eb(1): POP RBX
000026ec(1): POP RBP
000026ed(2): POP R12
000026ef(2): POP R13
000026f1(2): POP R14
000026f3(2): POP R15
000026f5(1): RET
00002700(7): MOV RAX,qword ptr [0x00219580]
00002707(3): MOVZX EAX,byte ptr [RAX]
0000270a(2): CMP AL,0x6e
0000270c(6): JZ 0x00002832
00002712(6): JLE 0x00002870
00002718(2): CMP AL,0x70
0000271a(6): JZ 0x00002800
00002720(2): CMP AL,0x74
00002722(2): JNZ 0x0000273a
00002724(4): CMP R14,0x1
00002728(6): JBE 0x00002832
0000272e(5): CALL 0x000024e0
00002733(7): MOV R14,qword ptr [0x00219168]
0000273a(7): MOV RCX,qword ptr [0x002190e8]
00002741(7): MOV RDI,qword ptr [0x00219170]
00002748(3): MOV RDX,R14
0000274b(5): MOV ESI,0x1
00002750(5): CALL 0x00001b50
00002755(5): JMP 0x000025c0
00002760(7): MOV RSI,qword ptr [0x002191a0]
00002767(3): MOV RDX,R15
0000276a(3): MOV RDI,R13
0000276d(5): CALL 0x00001a80
00002772(2): TEST EAX,EAX
00002774(6): JNZ 0x00002612
0000277a(7): MOV RAX,qword ptr [0x00219058]
00002781(7): CMP byte ptr [0x00219020],0x0
00002788(7): MOV qword ptr [0x00219580],RAX
0000278f(7): LEA RAX,[0x219500]
00002796(7): MOV qword ptr [0x002191a8],RAX
0000279d(6): JZ 0x00002672
000027a3(5): JMP 0x00002664
000027b0(7): MOV RSI,qword ptr [0x00219190]
000027b7(3): MOV RDX,R15
000027ba(3): MOV RDI,R13
000027bd(5): CALL 0x00001a80
000027c2(2): TEST EAX,EAX
000027c4(6): JNZ 0x0000261f
000027ca(7): MOV RAX,qword ptr [0x00219060]
000027d1(7): CMP byte ptr [0x00219020],0x0
000027d8(7): MOV qword ptr [0x00219580],RAX
000027df(7): LEA RAX,[0x219540]
000027e6(7): MOV qword ptr [0x002191a8],RAX
000027ed(6): JNZ 0x00002664
000027f3(5): JMP 0x00002672
00002800(7): MOV RSI,qword ptr [0x00219170]
00002807(7): MOV RDI,qword ptr [0x002191a8]
0000280e(3): XOR R9D,R9D
00002811(2): XOR ECX,ECX
00002813(3): MOV R8,R15
00002816(3): MOV RDX,R15
00002819(5): CALL 0x00014130
0000281e(4): CMP RAX,-0x2
00002822(6): JZ 0x0000293c
00002828(4): CMP RAX,-0x1
0000282c(6): JNZ 0x0000272e
00002832(7): MOV RSI,qword ptr [0x002190e8]
00002839(7): MOV RDI,qword ptr [0x00219158]
00002840(5): CALL 0x00001aa0
00002845(7): MOV R14,qword ptr [0x00219168]
0000284c(5): JMP 0x0000273a
00002858(5): MOV ESI,0xa
0000285d(5): CALL 0x00001a20
00002862(5): JMP 0x000025c0
00002870(2): CMP AL,0x61
00002872(6): JNZ 0x0000273a
00002878(7): MOV RAX,qword ptr [0x00219018]
0000287f(4): CMP RAX,0x1
00002883(6): JLE 0x0000272e
00002889(4): CMP R14,0x1
0000288d(2): JA 0x000028a6
0000288f(7): MOV RCX,qword ptr [0x00219140]
00002896(4): LEA RDX,[RCX + 0x1]
0000289a(3): CMP RAX,RDX
0000289d(7): MOV qword ptr [0x00219140],RDX
000028a4(2): JNZ 0x00002832
000028a6(5): CALL 0x000024e0
000028ab(11): MOV qword ptr [0x00219140],0x0
000028b6(7): MOV R14,qword ptr [0x00219168]
000028bd(5): JMP 0x0000273a
000028c2(5): CALL 0x00001940
000028c7(4): ADD RSP,0x18
000028cb(5): MOV EAX,0x1
000028d0(1): POP RBX
000028d1(1): POP RBP
000028d2(2): POP R12
000028d4(2): POP R13
000028d6(2): POP R14
000028d8(2): POP R15
000028da(1): RET
000028e0(5): MOV RDI,qword ptr [RSP + 0x8]
000028e5(7): LEA RSI,[0x14492]
000028ec(5): CALL 0x00001bd0
000028f1(3): TEST RAX,RAX
000028f4(3): MOV RBX,RAX
000028f7(6): JNZ 0x0000259f
000028fd(5): MOV RDX,qword ptr [RSP + 0x8]
00002902(5): MOV ESI,0x3
00002907(2): XOR EDI,EDI
00002909(5): CALL 0x00004b70
0000290e(3): MOV RBX,RAX
00002911(5): CALL 0x000018f0
00002916(2): MOV ESI,dword ptr [RAX]
00002918(7): LEA RDX,[0x14e6c]
0000291f(3): MOV RCX,RBX
00002922(2): XOR EAX,EAX
00002924(2): XOR EDI,EDI
00002926(5): CALL 0x00001bb0
0000293c(7): LEA RSI,[0x145b0]
00002943(5): MOV EDX,0x5
00002948(2): XOR EDI,EDI
0000294a(5): CALL 0x000019b0
0000294f(3): MOV RBX,RAX
00002952(5): CALL 0x000018f0
00002957(2): MOV ESI,dword ptr [RAX]
00002959(3): MOV RDX,RBX
0000295c(5): MOV EDI,0x1
00002961(2): XOR EAX,EAX
00002963(5): CALL 0x00001bb0
00002968(8): NOP dword ptr [RAX + RAX*0x1]
00002970(2): PUSH R13
00002972(2): PUSH R12
00002974(5): MOV EDX,0x5
00002979(1): PUSH RBP
0000297a(1): PUSH RBX
0000297b(2): MOV EBP,EDI
0000297d(7): SUB RSP,0x88
00002984(7): MOV RBX,qword ptr [0x00219598]
0000298b(9): MOV RAX,qword ptr FS:[0x28]
00002994(5): MOV qword ptr [RSP + 0x78],RAX
00002999(2): XOR EAX,EAX
0000299b(2): TEST EDI,EDI
0000299d(2): JZ 0x000029cd
0000299f(7): LEA RSI,[0x145d8]
000029a6(2): XOR EDI,EDI
000029a8(5): CALL 0x000019b0
000029ad(7): MOV RDI,qword ptr [0x00219120]
000029b4(3): MOV RDX,RAX
000029b7(3): MOV RCX,RBX
000029ba(5): MOV ESI,0x1
000029bf(2): XOR EAX,EAX
000029c1(5): CALL 0x00001c30
000029c6(2): MOV EDI,EBP
000029c8(5): CALL 0x00001c10
000029cd(7): LEA RSI,[0x14600]
000029d4(2): XOR EDI,EDI
000029d6(5): CALL 0x000019b0
000029db(3): MOV RDX,RBX
000029de(3): MOV RSI,RAX
000029e1(5): MOV EDI,0x1
000029e6(2): XOR EAX,EAX
000029e8(5): CALL 0x00001b80
000029ed(7): MOV RBX,qword ptr [0x002190e8]
000029f4(7): LEA RSI,[0x14628]
000029fb(5): MOV EDX,0x5
00002a00(2): XOR EDI,EDI
00002a02(5): CALL 0x000019b0
00002a07(3): MOV RSI,RBX
00002a0a(3): MOV RDI,RAX
00002a0d(5): CALL 0x00001aa0
00002a12(7): MOV RBX,qword ptr [0x002190e8]
00002a19(7): LEA RSI,[0x14668]
00002a20(5): MOV EDX,0x5
00002a25(2): XOR EDI,EDI
00002a27(5): CALL 0x000019b0
00002a2c(3): MOV RSI,RBX
00002a2f(3): MOV RDI,RAX
00002a32(5): CALL 0x00001aa0
00002a37(7): MOV RBX,qword ptr [0x002190e8]
00002a3e(7): LEA RSI,[0x146a0]
00002a45(5): MOV EDX,0x5
00002a4a(2): XOR EDI,EDI
00002a4c(5): CALL 0x000019b0
00002a51(3): MOV RSI,RBX
00002a54(3): MOV RDI,RAX
00002a57(5): CALL 0x00001aa0
00002a5c(7): MOV RBX,qword ptr [0x002190e8]
00002a63(7): LEA RSI,[0x146f0]
00002a6a(5): MOV EDX,0x5
00002a6f(2): XOR EDI,EDI
00002a71(5): CALL 0x000019b0
00002a76(3): MOV RSI,RBX
00002a79(3): MOV RDI,RAX
00002a7c(5): CALL 0x00001aa0
00002a81(7): MOV RBX,qword ptr [0x002190e8]
00002a88(7): LEA RSI,[0x147c8]
00002a8f(5): MOV EDX,0x5
00002a94(2): XOR EDI,EDI
00002a96(5): CALL 0x000019b0
00002a9b(3): MOV RSI,RBX
00002a9e(3): MOV RDI,RAX
00002aa1(5): CALL 0x00001aa0
00002aa6(7): MOV RBX,qword ptr [0x002190e8]
00002aad(7): LEA RSI,[0x14988]
00002ab4(5): MOV EDX,0x5
00002ab9(2): XOR EDI,EDI
00002abb(5): CALL 0x000019b0
00002ac0(3): MOV RSI,RBX
00002ac3(3): MOV RDI,RAX
00002ac6(5): CALL 0x00001aa0
00002acb(7): MOV RBX,qword ptr [0x002190e8]
00002ad2(7): LEA RSI,[0x14a18]
00002ad9(5): MOV EDX,0x5
00002ade(2): XOR EDI,EDI
00002ae0(5): CALL 0x000019b0
00002ae5(3): MOV RSI,RBX
00002ae8(3): MOV RDI,RAX
00002aeb(5): CALL 0x00001aa0
00002af0(7): MOV RBX,qword ptr [0x002190e8]
00002af7(7): LEA RSI,[0x14a48]
00002afe(5): MOV EDX,0x5
00002b03(2): XOR EDI,EDI
00002b05(5): CALL 0x000019b0
00002b0a(3): MOV RSI,RBX
00002b0d(3): MOV RDI,RAX
00002b10(5): CALL 0x00001aa0
00002b15(7): MOV RBX,qword ptr [0x002190e8]
00002b1c(7): LEA RSI,[0x14a80]
00002b23(5): MOV EDX,0x5
00002b28(2): XOR EDI,EDI
00002b2a(5): CALL 0x000019b0
00002b2f(3): MOV RSI,RBX
00002b32(3): MOV RDI,RAX
00002b35(5): CALL 0x00001aa0
00002b3a(7): MOV RBX,qword ptr [0x002190e8]
00002b41(7): LEA RSI,[0x14b40]
00002b48(5): MOV EDX,0x5
00002b4d(2): XOR EDI,EDI
00002b4f(5): CALL 0x000019b0
00002b54(3): MOV RSI,RBX
00002b57(3): MOV RDI,RAX
00002b5a(5): CALL 0x00001aa0
00002b5f(7): MOV RBX,qword ptr [0x002190e8]
00002b66(7): LEA RSI,[0x14c10]
00002b6d(5): MOV EDX,0x5
00002b72(2): XOR EDI,EDI
00002b74(5): CALL 0x000019b0
00002b79(3): MOV RSI,RBX
00002b7c(3): MOV RDI,RAX
00002b7f(7): LEA RBX,[0x143b9]
00002b86(5): CALL 0x00001aa0
00002b8b(7): LEA RAX,[0x143bc]
00002b92(7): LEA RCX,[0x143fd]
00002b99(9): MOV qword ptr [RSP + 0x60],0x0
00002ba2(9): MOV qword ptr [RSP + 0x68],0x0
00002bab(3): MOV RDX,RSP
00002bae(4): MOV qword ptr [RSP],RAX
00002bb2(7): LEA RAX,[0x143be]
00002bb9(5): MOV qword ptr [RSP + 0x30],RCX
00002bbe(7): LEA RCX,[0x14407]
00002bc5(5): MOV qword ptr [RSP + 0x8],RAX
00002bca(7): LEA RAX,[0x14436]
00002bd1(5): MOV qword ptr [RSP + 0x40],RCX
00002bd6(7): LEA RCX,[0x14411]
00002bdd(5): MOV qword ptr [RSP + 0x10],RAX
00002be2(7): LEA RAX,[0x143ce]
00002be9(5): MOV qword ptr [RSP + 0x50],RCX
00002bee(5): MOV qword ptr [RSP + 0x18],RAX
00002bf3(7): LEA RAX,[0x143e4]
00002bfa(5): MOV qword ptr [RSP + 0x20],RAX
00002bff(7): LEA RAX,[0x143ee]
00002c06(5): MOV qword ptr [RSP + 0x28],RAX
00002c0b(5): MOV qword ptr [RSP + 0x38],RAX
00002c10(5): MOV qword ptr [RSP + 0x48],RAX
00002c15(5): MOV qword ptr [RSP + 0x58],RAX
00002c1a(6): NOP word ptr [RAX + RAX*0x1]
00002c20(4): ADD RDX,0x10
00002c24(3): MOV RDI,qword ptr [RDX]
00002c27(3): TEST RDI,RDI
00002c2a(2): JZ 0x00002c3f
00002c2c(5): MOV ECX,0x3
00002c31(3): MOV RSI,RBX
00002c34(2): CMPSB.REPE RDI,RSI
00002c36(3): SETA AL
00002c39(2): SBB AL,0x0
00002c3b(2): TEST AL,AL
00002c3d(2): JNZ 0x00002c20
00002c3f(4): MOV R12,qword ptr [RDX + 0x8]
00002c43(2): XOR EDI,EDI
00002c45(5): MOV EDX,0x5
00002c4a(7): LEA RSI,[0x1441b]
00002c51(3): TEST R12,R12
00002c54(6): JZ 0x00002d1b
00002c5a(5): CALL 0x000019b0
00002c5f(7): LEA RCX,[0x14ca8]
00002c66(7): LEA RDX,[0x14432]
00002c6d(3): MOV RSI,RAX
00002c70(5): MOV EDI,0x1
00002c75(2): XOR EAX,EAX
00002c77(5): CALL 0x00001b80
00002c7c(2): XOR ESI,ESI
00002c7e(5): MOV EDI,0x5
00002c83(5): CALL 0x00001b70
00002c88(3): TEST RAX,RAX
00002c8b(2): JZ 0x00002ca9
00002c8d(7): LEA RSI,[0x14440]
00002c94(5): MOV EDX,0x3
00002c99(3): MOV RDI,RAX
00002c9c(5): CALL 0x00001900
00002ca1(2): TEST EAX,EAX
00002ca3(6): JNZ 0x00002db0
00002ca9(7): LEA RSI,[0x14444]
00002cb0(2): XOR EDI,EDI
00002cb2(5): MOV EDX,0x5
00002cb7(5): CALL 0x000019b0
00002cbc(7): LEA RCX,[0x143b9]
00002cc3(7): LEA RDX,[0x14ca8]
00002cca(3): MOV RSI,RAX
00002ccd(5): MOV EDI,0x1
00002cd2(2): XOR EAX,EAX
00002cd4(5): CALL 0x00001b80
00002cd9(3): CMP R12,RBX
00002cdc(7): LEA RCX,[0x143d8]
00002ce3(7): LEA RBX,[0x145ad]
00002cea(4): CMOVZ RBX,RCX
00002cee(7): LEA RSI,[0x14d18]
00002cf5(2): XOR EDI,EDI
00002cf7(5): MOV EDX,0x5
00002cfc(5): CALL 0x000019b0
00002d01(3): MOV RCX,RBX
00002d04(3): MOV RSI,RAX
00002d07(3): MOV RDX,R12
00002d0a(5): MOV EDI,0x1
00002d0f(2): XOR EAX,EAX
00002d11(5): CALL 0x00001b80
00002d16(5): JMP 0x000029c6
00002d1b(5): CALL 0x000019b0
00002d20(7): LEA RCX,[0x14ca8]
00002d27(7): LEA RDX,[0x14432]
00002d2e(3): MOV RSI,RAX
00002d31(5): MOV EDI,0x1
00002d36(2): XOR EAX,EAX
00002d38(5): CALL 0x00001b80
00002d3d(2): XOR ESI,ESI
00002d3f(5): MOV EDI,0x5
00002d44(5): CALL 0x00001b70
00002d49(3): TEST RAX,RAX
00002d4c(2): JZ 0x00002d66
00002d4e(7): LEA RSI,[0x14440]
00002d55(5): MOV EDX,0x3
00002d5a(3): MOV RDI,RAX
00002d5d(5): CALL 0x00001900
00002d62(2): TEST EAX,EAX
00002d64(2): JNZ 0x00002da9
00002d66(7): LEA RSI,[0x14444]
00002d6d(5): MOV EDX,0x5
00002d72(2): XOR EDI,EDI
00002d74(7): LEA R12,[0x143b9]
00002d7b(7): LEA RBX,[0x143d8]
00002d82(5): CALL 0x000019b0
00002d87(7): LEA RCX,[0x143b9]
00002d8e(7): LEA RDX,[0x14ca8]
00002d95(3): MOV RSI,RAX
00002d98(5): MOV EDI,0x1
00002d9d(2): XOR EAX,EAX
00002d9f(5): CALL 0x00001b80
00002da4(5): JMP 0x00002cee
00002da9(7): LEA R12,[0x143b9]
00002db0(7): MOV R13,qword ptr [0x002190e8]
00002db7(7): LEA RSI,[0x14cd0]
00002dbe(2): XOR EDI,EDI
00002dc0(5): MOV EDX,0x5
00002dc5(5): CALL 0x000019b0
00002dca(3): MOV RSI,R13
00002dcd(3): MOV RDI,RAX
00002dd0(5): CALL 0x00001aa0
00002dd5(5): JMP 0x00002ca9
00002de0(7): MOV qword ptr [0x00219590],RDI
00002de7(1): RET
00002df0(7): MOV byte ptr [0x00219588],DIL
00002df7(1): RET
00002e00(1): PUSH RBP
00002e01(1): PUSH RBX
00002e02(4): SUB RSP,0x8
00002e06(7): MOV RDI,qword ptr [0x002190e8]
00002e0d(5): CALL 0x000141e0
00002e12(2): TEST EAX,EAX
00002e14(2): JZ 0x00002e2c
00002e16(5): CALL 0x000018f0
00002e1b(7): CMP byte ptr [0x00219588],0x0
00002e22(3): MOV RBX,RAX
00002e25(2): JZ 0x00002e43
00002e27(3): CMP dword ptr [RAX],0x20
00002e2a(2): JNZ 0x00002e43
00002e2c(7): MOV RDI,qword ptr [0x00219120]
00002e33(5): CALL 0x000141e0
00002e38(2): TEST EAX,EAX
00002e3a(2): JNZ 0x00002e82
00002e3c(4): ADD RSP,0x8
00002e40(1): POP RBX
00002e41(1): POP RBP
00002e42(1): RET
00002e43(7): LEA RSI,[0x14e5c]
00002e4a(2): XOR EDI,EDI
00002e4c(5): MOV EDX,0x5
00002e51(5): CALL 0x000019b0
00002e56(7): MOV RDI,qword ptr [0x00219590]
00002e5d(3): MOV RBP,RAX
00002e60(3): TEST RDI,RDI
00002e63(2): JZ 0x00002e8d
00002e65(5): CALL 0x00004b40
00002e6a(2): MOV ESI,dword ptr [RBX]
00002e6c(7): LEA RDX,[0x14e68]
00002e73(3): MOV RCX,RAX
00002e76(3): MOV R8,RBP
00002e79(2): XOR EDI,EDI
00002e7b(2): XOR EAX,EAX
00002e7d(5): CALL 0x00001bb0
00002e82(6): MOV EDI,dword ptr [0x00219070]
00002e88(5): CALL 0x00001910
00002e8d(2): MOV ESI,dword ptr [RBX]
00002e8f(7): LEA RDX,[0x14e6c]
00002e96(3): MOV RCX,RAX
00002e99(2): XOR EDI,EDI
00002e9b(2): XOR EAX,EAX
00002e9d(5): CALL 0x00001bb0
00002eb0(5): JMP 0x00001a70
00002ec0(3): TEST RDI,RDI
00002ec3(2): JZ 0x00002ee0
00002ec5(1): PUSH RBX
00002ec6(2): MOV EBX,ESI
00002ec8(5): CALL 0x00001ae0
00002ecd(2): MOV ECX,EBX
00002ecf(2): XOR EDX,EDX
00002ed1(2): XOR ESI,ESI
00002ed3(1): POP RBX
00002ed4(2): MOV EDI,EAX
00002ed6(5): JMP 0x00001a70
00002ee0(2): RET
00002ef0(4): PXOR XMM0,XMM0
00002ef4(8): MOV qword ptr [RDI + 0x10],0x0
00002efc(3): MOVUPS xmmword ptr [RDI],XMM0
00002eff(1): RET
00002f00(2): PUSH R15
00002f02(2): PUSH R14
00002f04(2): PUSH R13
00002f06(2): PUSH R12
00002f08(1): PUSH RBP
00002f09(1): PUSH RBX
00002f0a(4): SUB RSP,0x18
00002f0e(4): MOV R13,qword ptr [RDI + 0x10]
00002f12(3): MOV R8,qword ptr [RDI]
00002f15(3): ADD R8,R13
00002f18(3): TEST byte ptr [RSI],0x10
00002f1b(6): JNZ 0x00002ff0
00002f21(3): MOV R14,RDI
00002f24(3): MOV RBP,RSI
00002f27(3): MOV RBX,R13
00002f2a(4): MOVSX R15D,DL
00002f2e(2): JMP 0x00002f3b
00002f30(3): CMP R12D,R15D
00002f33(4): LEA RBX,[RSI + 0x1]
00002f37(2): MOV byte ptr [RSI],CL
00002f39(2): JZ 0x00002f96
00002f3b(4): MOV RCX,qword ptr [RBP + 0x8]
00002f3f(4): CMP RCX,qword ptr [RBP + 0x10]
00002f43(2): JNC 0x00002fb0
00002f45(4): LEA RAX,[RCX + 0x1]
00002f49(4): MOV qword ptr [RBP + 0x8],RAX
00002f4d(4): MOVZX R12D,byte ptr [RCX]
00002f51(3): MOV ECX,R12D
00002f54(3): CMP RBX,R8
00002f57(3): MOV RSI,RBX
00002f5a(2): JNZ 0x00002f30
00002f5c(3): MOV RBX,qword ptr [R14]
00002f5f(3): MOV RSI,R14
00002f62(3): MOV RDI,R13
00002f65(4): MOV byte ptr [RSP + 0xf],DL
00002f69(3): MOV byte ptr [RSP],CL
00002f6c(5): CALL 0x000054e0
00002f71(3): MOV R8,qword ptr [R14]
00002f74(4): MOVZX ECX,byte ptr [RSP]
00002f78(4): LEA RSI,[RAX + RBX*0x1]
00002f7c(4): MOV qword ptr [R14 + 0x10],RAX
00002f80(3): MOV R13,RAX
00002f83(5): MOVZX EDX,byte ptr [RSP + 0xf]
00002f88(4): LEA RBX,[RSI + 0x1]
00002f8c(3): ADD R8,RAX
00002f8f(3): CMP R12D,R15D
00002f92(2): MOV byte ptr [RSI],CL
00002f94(2): JNZ 0x00002f3b
00002f96(3): SUB RBX,R13
00002f99(3): MOV RAX,R14
00002f9c(4): MOV qword ptr [R14 + 0x8],RBX
00002fa0(4): ADD RSP,0x18
00002fa4(1): POP RBX
00002fa5(1): POP RBP
00002fa6(2): POP R12
00002fa8(2): POP R13
00002faa(2): POP R14
00002fac(2): POP R15
00002fae(1): RET
00002fb0(3): MOV RDI,RBP
00002fb3(4): MOV byte ptr [RSP + 0xf],DL
00002fb7(4): MOV qword ptr [RSP],R8
00002fbb(5): CALL 0x000018c0
00002fc0(3): CMP EAX,-0x1
00002fc3(3): MOV R12D,EAX
00002fc6(4): MOV R8,qword ptr [RSP]
00002fca(5): MOVZX EDX,byte ptr [RSP + 0xf]
00002fcf(2): JNZ 0x00003001
00002fd1(3): CMP R13,RBX
00002fd4(2): JZ 0x00002ff0
00002fd6(4): TEST byte ptr [RBP],0x20
00002fda(2): JNZ 0x00002ff0
00002fdc(3): CMP byte ptr [RBX + -0x1],DL
00002fdf(2): JZ 0x00002f96
00002fe1(3): MOV R12D,R15D
00002fe4(2): MOV ECX,EDX
00002fe6(5): JMP 0x00002f54
00002ff0(4): ADD RSP,0x18
00002ff4(2): XOR EAX,EAX
00002ff6(1): POP RBX
00002ff7(1): POP RBP
00002ff8(2): POP R12
00002ffa(2): POP R13
00002ffc(2): POP R14
00002ffe(2): POP R15
00003000(1): RET
00003001(2): MOV ECX,EAX
00003003(5): JMP 0x00002f54
00003010(5): MOV EDX,0xa
00003015(5): JMP 0x00002f00
00003020(4): MOV RDI,qword ptr [RDI + 0x10]
00003024(5): JMP 0x000018d0
00003030(3): TEST RDI,RDI
00003033(1): PUSH RBX
00003034(2): JZ 0x000030ad
00003036(5): MOV ESI,0x2f
0000303b(3): MOV RBX,RDI
0000303e(5): CALL 0x00001a30
00003043(3): TEST RAX,RAX
00003046(2): JZ 0x0000309d
00003048(4): LEA R8,[RAX + 0x1]
0000304c(3): MOV RDX,R8
0000304f(3): SUB RDX,RBX
00003052(4): CMP RDX,0x6
00003056(2): JLE 0x0000309d
00003058(4): LEA RSI,[RAX + -0x6]
0000305c(7): LEA RDI,[0x14ea8]
00003063(5): MOV ECX,0x7
00003068(2): CMPSB.REPE RDI,RSI
0000306a(3): SETA DL
0000306d(3): SBB DL,0x0
00003070(2): TEST DL,DL
00003072(2): JNZ 0x0000309d
00003074(7): LEA RDI,[0x14eb0]
0000307b(5): MOV ECX,0x3
00003080(3): MOV RSI,R8
00003083(3): MOV RBX,R8
00003086(2): CMPSB.REPE RDI,RSI
00003088(3): SETA DL
0000308b(3): SBB DL,0x0
0000308e(2): TEST DL,DL
00003090(2): JNZ 0x0000309d
00003092(4): LEA RBX,[RAX + 0x4]
00003096(7): MOV qword ptr [0x002190e0],RBX
0000309d(7): MOV qword ptr [0x00219598],RBX
000030a4(7): MOV qword ptr [0x00219108],RBX
000030ab(1): POP RBX
000030ac(1): RET
000030ad(7): MOV RCX,qword ptr [0x00219120]
000030b4(7): LEA RDI,[0x14e70]
000030bb(5): MOV EDX,0x37
000030c0(5): MOV ESI,0x1
000030c5(5): CALL 0x00001c20
000030ca(5): CALL 0x000018e0
000030cf(1): NOP
000030d0(1): PUSH RBP
000030d1(1): PUSH RBX
000030d2(3): MOV RBP,RDI
000030d5(2): MOV EBX,ESI
000030d7(4): SUB RSP,0x8
000030db(5): CALL 0x000142c0
000030e0(3): MOVZX EDX,byte ptr [RAX]
000030e3(3): AND EDX,0xffffffdf
000030e6(3): CMP DL,0x55
000030e9(2): JZ 0x00003160
000030eb(3): CMP DL,0x47
000030ee(2): JZ 0x00003110
000030f0(7): LEA RAX,[0x14ec3]
000030f7(7): LEA RDX,[0x14ec5]
000030fe(3): CMP EBX,0x9
00003101(4): CMOVNZ RAX,RDX
00003105(4): ADD RSP,0x8
00003109(1): POP RBX
0000310a(1): POP RBP
0000310b(1): RET
00003110(4): MOVZX EDX,byte ptr [RAX + 0x1]
00003114(3): AND EDX,0xffffffdf
00003117(3): CMP DL,0x42
0000311a(2): JNZ 0x000030f0
0000311c(4): CMP byte ptr [RAX + 0x2],0x31
00003120(2): JNZ 0x000030f0
00003122(4): CMP byte ptr [RAX + 0x3],0x38
00003126(2): JNZ 0x000030f0
00003128(4): CMP byte ptr [RAX + 0x4],0x30
0000312c(2): JNZ 0x000030f0
0000312e(4): CMP byte ptr [RAX + 0x5],0x33
00003132(2): JNZ 0x000030f0
00003134(4): CMP byte ptr [RAX + 0x6],0x30
00003138(2): JNZ 0x000030f0
0000313a(4): CMP byte ptr [RAX + 0x7],0x0
0000313e(2): JNZ 0x000030f0
00003140(4): CMP byte ptr [RBP],0x60
00003144(7): LEA RAX,[0x14ebc]
0000314b(7): LEA RDX,[0x14ec0]
00003152(4): CMOVNZ RAX,RDX
00003156(4): ADD RSP,0x8
0000315a(1): POP RBX
0000315b(1): POP RBP
0000315c(1): RET
00003160(4): MOVZX EDX,byte ptr [RAX + 0x1]
00003164(3): AND EDX,0xffffffdf
00003167(3): CMP DL,0x54
0000316a(2): JNZ 0x000030f0
0000316c(4): MOVZX EDX,byte ptr [RAX + 0x2]
00003170(3): AND EDX,0xffffffdf
00003173(3): CMP DL,0x46
00003176(6): JNZ 0x000030f0
0000317c(4): CMP byte ptr [RAX + 0x3],0x2d
00003180(6): JNZ 0x000030f0
00003186(4): CMP byte ptr [RAX + 0x4],0x38
0000318a(6): JNZ 0x000030f0
00003190(4): CMP byte ptr [RAX + 0x5],0x0
00003194(6): JNZ 0x000030f0
0000319a(4): CMP byte ptr [RBP],0x60
0000319e(7): LEA RAX,[0x14eb4]
000031a5(7): LEA RDX,[0x14eb8]
000031ac(4): CMOVNZ RAX,RDX
000031b0(4): ADD RSP,0x8
000031b4(1): POP RBX
000031b5(1): POP RBP
000031b6(1): RET
000031c0(2): PUSH R15
000031c2(2): PUSH R14
000031c4(3): MOV R15D,R8D
000031c7(2): PUSH R13
000031c9(2): PUSH R12
000031cb(3): MOV R14,RDI
000031ce(1): PUSH RBP
000031cf(1): PUSH RBX
000031d0(3): MOV EBX,R9D
000031d3(3): MOV R13,RSI
000031d6(3): MOV RBP,RCX
000031d9(3): AND EBX,0x2
000031dc(7): SUB RSP,0xb8
000031e3(8): MOV RAX,qword ptr [0xf0 + RSP]
000031eb(5): MOV qword ptr [RSP + 0x10],RDX
000031f0(5): MOV dword ptr [RSP + 0x8],R8D
000031f5(5): MOV dword ptr [RSP + 0x78],R9D
000031fa(5): MOV qword ptr [RSP + 0x20],RAX
000031ff(8): MOV RAX,qword ptr [0xf8 + RSP]
00003207(5): MOV qword ptr [RSP + 0x68],RAX
0000320c(8): MOV RAX,qword ptr [0x100 + RSP]
00003214(5): MOV qword ptr [RSP + 0x60],RAX
00003219(9): MOV RAX,qword ptr FS:[0x28]
00003222(8): MOV qword ptr [0xa8 + RSP],RAX
0000322a(2): XOR EAX,EAX
0000322c(5): CALL 0x000019c0
00003231(4): CMP R15D,0xa
00003235(5): MOV qword ptr [RSP + 0x58],RAX
0000323a(6): JA 0x000043ef
00003240(7): LEA RCX,[0x14f20]
00003247(3): MOV EDX,R15D
0000324a(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
0000324e(3): ADD RAX,RCX
00003251(2): JMP RAX
00003253(5): MOV byte ptr [RSP + 0xe],0x1
00003258(5): MOV byte ptr [RSP + 0x7c],0x0
0000325d(3): XOR R12D,R12D
00003260(9): MOV qword ptr [RSP + 0x50],0x0
00003269(5): MOV byte ptr [RSP + 0xf],0x1
0000326e(5): MOV byte ptr [RSP + 0xd],0x0
00003273(7): LEA RAX,[0x14ec5]
0000327a(9): MOV qword ptr [RSP + 0x18],0x1
00003283(3): XOR R15D,R15D
00003286(8): MOV dword ptr [RSP + 0x8],0x2
0000328e(5): MOV qword ptr [RSP + 0x48],RAX
00003293(3): XOR R11D,R11D
00003296(3): MOV RAX,RBP
00003299(3): MOV R8D,R12D
0000329c(3): MOV RBP,R11
0000329f(3): MOV R11,RAX
000032a2(6): NOP word ptr [RAX + RAX*0x1]
000032a8(3): CMP R11,RBP
000032ab(4): SETNZ R12B
000032af(4): CMP R11,-0x1
000032b3(2): JNZ 0x000032c2
000032b5(5): MOV RAX,qword ptr [RSP + 0x10]
000032ba(4): CMP byte ptr [RAX + RBP*0x1],0x0
000032be(4): SETNZ R12B
000032c2(3): TEST R12B,R12B
000032c5(6): JZ 0x00003920
000032cb(5): CMP dword ptr [RSP + 0x8],0x2
000032d0(5): MOV RDI,qword ptr [RSP + 0x10]
000032d5(4): LEA R9,[RDI + RBP*0x1]
000032d9(3): SETNZ AL
000032dc(4): AND AL,byte ptr [RSP + 0xd]
000032e0(3): MOV R10D,EAX
000032e3(6): JZ 0x00003390
000032e9(5): MOV RAX,qword ptr [RSP + 0x18]
000032ee(3): TEST RAX,RAX
000032f1(6): JZ 0x00003720
000032f7(4): CMP R11,-0x1
000032fb(5): LEA RBX,[RBP + RAX*0x1]
00003300(2): JNZ 0x00003330
00003302(4): CMP RAX,0x1
00003306(2): JBE 0x00003330
00003308(5): MOV byte ptr [RSP + 0x38],R8B
0000330d(5): MOV byte ptr [RSP + 0x30],R10B
00003312(5): MOV qword ptr [RSP + 0x28],R9
00003317(5): CALL 0x000019d0
0000331c(6): MOVZX R8D,byte ptr [RSP + 0x38]
00003322(6): MOVZX R10D,byte ptr [RSP + 0x30]
00003328(3): MOV R11,RAX
0000332b(5): MOV R9,qword ptr [RSP + 0x28]
00003330(3): CMP RBX,R11
00003333(5): MOV byte ptr [RSP + 0x28],R10B
00003338(6): JA 0x000038f0
0000333e(5): MOV RDX,qword ptr [RSP + 0x18]
00003343(5): MOV RSI,qword ptr [RSP + 0x48]
00003348(3): MOV RDI,R9
0000334b(5): MOV qword ptr [RSP + 0x40],R11
00003350(5): MOV byte ptr [RSP + 0x38],R8B
00003355(5): MOV qword ptr [RSP + 0x30],R9
0000335a(5): CALL 0x00001a80
0000335f(2): TEST EAX,EAX
00003361(5): MOV R9,qword ptr [RSP + 0x30]
00003366(6): MOVZX R8D,byte ptr [RSP + 0x38]
0000336c(5): MOV R11,qword ptr [RSP + 0x40]
00003371(6): JNZ 0x000038f0
00003377(5): CMP byte ptr [RSP + 0xf],0x0
0000337c(6): MOVZX R10D,byte ptr [RSP + 0x28]
00003382(6): JNZ 0x00004305
00003388(8): NOP dword ptr [RAX + RAX*0x1]
00003390(4): MOVZX EBX,byte ptr [R9]
00003394(3): CMP BL,0x7e
00003397(6): JA 0x000036b8
0000339d(7): LEA RCX,[0x14f4c]
000033a4(3): MOVZX EDX,BL
000033a7(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
000033ab(3): ADD RAX,RCX
000033ae(2): JMP RAX
000033b0(3): XOR R10D,R10D
000033b3(4): CMP R11,0x1
000033b7(3): SETNZ AL
000033ba(4): CMP R11,-0x1
000033be(2): JNZ 0x000033cc
000033c0(5): MOV RAX,qword ptr [RSP + 0x10]
000033c5(4): CMP byte ptr [RAX + 0x1],0x0
000033c9(3): SETNZ AL
000033cc(5): CMP dword ptr [RSP + 0x8],0x2
000033d1(3): SETZ DL
000033d4(2): TEST AL,AL
000033d6(6): JZ 0x00003628
000033dc(3): XOR R12D,R12D
000033df(2): XOR EAX,EAX
000033e1(7): NOP dword ptr [RAX]
000033e8(5): CMP byte ptr [RSP + 0xd],0x1
000033ed(6): JNZ 0x00003502
000033f3(2): TEST DL,DL
000033f5(6): JNZ 0x00003502
000033fb(5): MOV RSI,qword ptr [RSP + 0x20]
00003400(3): TEST RSI,RSI
00003403(2): JZ 0x00003419
00003405(2): MOV EDX,EBX
00003407(3): SHR DL,0x5
0000340a(3): MOVZX EDX,DL
0000340d(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00003410(3): BT EDX,EBX
00003413(6): JC 0x00003563
00003419(3): TEST R10B,R10B
0000341c(6): JNZ 0x00003563
00003422(3): XOR EAX,0x1
00003425(4): ADD RBP,0x1
00003429(3): AND EAX,R8D
0000342c(2): TEST AL,AL
0000342e(2): JZ 0x00003450
00003430(3): CMP R13,R15
00003433(2): JBE 0x0000343a
00003435(5): MOV byte ptr [R14 + R15*0x1],0x27
0000343a(4): LEA RAX,[R15 + 0x1]
0000343e(3): CMP R13,RAX
00003441(2): JBE 0x00003449
00003443(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
00003449(4): ADD R15,0x2
0000344d(3): XOR R8D,R8D
00003450(3): CMP R15,R13
00003453(2): JNC 0x00003459
00003455(4): MOV byte ptr [R14 + R15*0x1],BL
00003459(5): MOVZX EDI,byte ptr [RSP + 0xe]
0000345e(4): ADD R15,0x1
00003462(5): MOV EAX,0x0
00003467(3): TEST R12B,R12B
0000346a(3): CMOVZ EDI,EAX
0000346d(5): MOV byte ptr [RSP + 0xe],DIL
00003472(5): JMP 0x000032a8
00003480(3): XOR R10D,R10D
00003483(4): MOV EAX,dword ptr [RSP + 0x8]
00003487(3): CMP EAX,0x2
0000348a(6): JZ 0x00003a48
00003490(3): CMP EAX,0x5
00003493(6): JZ 0x00003a08
00003499(3): CMP EAX,0x2
0000349c(5): MOV EBX,0x3f
000034a1(3): SETZ DL
000034a4(3): XOR R12D,R12D
000034a7(2): XOR EAX,EAX
000034a9(5): JMP 0x000033e8
000034b0(3): XOR R10D,R10D
000034b3(5): CMP dword ptr [RSP + 0x8],0x2
000034b8(6): JZ 0x000039c0
000034be(5): MOV byte ptr [RSP + 0x7c],R12B
000034c3(2): XOR EDX,EDX
000034c5(2): XOR EAX,EAX
000034c7(5): MOV EBX,0x27
000034cc(5): JMP 0x000033e8
000034d8(5): MOV EDX,0x9
000034dd(5): MOV EBX,0x74
000034e2(5): CMP dword ptr [RSP + 0x8],0x2
000034e7(3): SETZ AL
000034ea(4): AND AL,byte ptr [RSP + 0xf]
000034ee(6): JNZ 0x0000363e
000034f4(5): CMP byte ptr [RSP + 0xd],0x0
000034f9(2): JNZ 0x00003560
000034fb(2): MOV EBX,EDX
000034fd(3): XOR R12D,R12D
00003500(2): XOR EAX,EAX
00003502(5): CMP byte ptr [RSP + 0xf],0x0
00003507(6): JNZ 0x000033fb
0000350d(5): JMP 0x00003419
00003518(5): MOV EDX,0x8
0000351d(5): MOV EBX,0x62
00003522(2): JMP 0x000034f4
00003528(5): CMP dword ptr [RSP + 0x8],0x2
0000352d(6): JZ 0x00003900
00003533(5): CMP byte ptr [RSP + 0xd],0x0
00003538(6): JZ 0x00003750
0000353e(5): CMP byte ptr [RSP + 0xf],0x0
00003543(6): JZ 0x00003750
00003549(6): CMP qword ptr [RSP + 0x18],0x0
0000354f(6): JNZ 0x0000390b
00003555(5): MOV EBX,0x5c
0000355a(6): NOP word ptr [RAX + RAX*0x1]
00003560(3): XOR R12D,R12D
00003563(5): CMP dword ptr [RSP + 0x8],0x2
00003568(3): SETZ DL
0000356b(5): CMP byte ptr [RSP + 0xf],0x0
00003570(2): MOV EAX,EDX
00003572(6): JNZ 0x00003dc8
00003578(3): MOV EAX,R8D
0000357b(3): XOR EAX,0x1
0000357e(2): AND AL,DL
00003580(2): JZ 0x000035b1
00003582(3): CMP R13,R15
00003585(2): JBE 0x0000358c
00003587(5): MOV byte ptr [R14 + R15*0x1],0x27
0000358c(4): LEA RDX,[R15 + 0x1]
00003590(3): CMP R13,RDX
00003593(2): JBE 0x0000359b
00003595(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
0000359b(4): LEA RDX,[R15 + 0x2]
0000359f(3): CMP R13,RDX
000035a2(2): JBE 0x000035aa
000035a4(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
000035aa(4): ADD R15,0x3
000035ae(3): MOV R8D,EAX
000035b1(3): CMP R13,R15
000035b4(2): JBE 0x000035bb
000035b6(5): MOV byte ptr [R14 + R15*0x1],0x5c
000035bb(4): ADD R15,0x1
000035bf(4): ADD RBP,0x1
000035c3(5): JMP 0x00003450
000035d0(5): CMP byte ptr [RSP + 0xd],0x0
000035d5(6): JNZ 0x000037a3
000035db(2): XOR EDX,EDX
000035dd(5): TEST byte ptr [RSP + 0x78],0x1
000035e2(6): JZ 0x000034fb
000035e8(4): ADD RBP,0x1
000035ec(5): JMP 0x000032a8
000035f8(5): CMP dword ptr [RSP + 0x8],0x2
000035fd(3): SETZ DL
00003600(2): XOR EAX,EAX
00003602(5): JMP 0x000033e8
00003610(5): MOV EDX,0x7
00003615(5): MOV EBX,0x61
0000361a(5): JMP 0x000034f4
00003620(5): CMP dword ptr [RSP + 0x8],0x2
00003625(3): SETZ DL
00003628(3): TEST RBP,RBP
0000362b(6): JNZ 0x000033dc
00003631(5): MOVZX EAX,byte ptr [RSP + 0xf]
00003636(2): AND AL,DL
00003638(6): JZ 0x000033e8
0000363e(3): MOV RBP,R11
00003641(8): MOV dword ptr [RSP + 0x8],0x2
00003649(5): JMP 0x00003d49
00003650(5): CMP dword ptr [RSP + 0x8],0x2
00003655(3): SETZ DL
00003658(3): XOR R12D,R12D
0000365b(2): JMP 0x00003631
00003660(5): CMP dword ptr [RSP + 0x8],0x2
00003665(5): MOV EBX,0x20
0000366a(3): SETZ DL
0000366d(2): JMP 0x00003631
00003670(5): MOV EDX,0xd
00003675(5): MOV EBX,0x72
0000367a(5): JMP 0x000034e2
00003680(5): MOV EDX,0xc
00003685(5): MOV EBX,0x66
0000368a(5): JMP 0x000034f4
00003690(5): MOV EDX,0xb
00003695(5): MOV EBX,0x76
0000369a(5): JMP 0x000034f4
000036a0(5): MOV EDX,0xa
000036a5(5): MOV EBX,0x6e
000036aa(5): JMP 0x000034e2
000036b0(3): XOR R10D,R10D
000036b3(5): NOP dword ptr [RAX + RAX*0x1]
000036b8(6): CMP qword ptr [RSP + 0x58],0x1
000036be(6): JNZ 0x00003a68
000036c4(5): MOV qword ptr [RSP + 0x38],R11
000036c9(5): MOV byte ptr [RSP + 0x30],R8B
000036ce(5): MOV byte ptr [RSP + 0x28],R10B
000036d3(5): CALL 0x00001c70
000036d8(3): MOV RCX,qword ptr [RAX]
000036db(3): MOVZX EDX,BL
000036de(6): MOVZX R10D,byte ptr [RSP + 0x28]
000036e4(6): MOVZX R8D,byte ptr [RSP + 0x30]
000036ea(5): MOV R11,qword ptr [RSP + 0x38]
000036ef(5): MOV EDI,0x1
000036f4(4): MOVZX EAX,word ptr [RCX + RDX*0x2]
000036f8(4): AND AX,0x4000
000036fc(4): SETNZ R12B
00003700(3): SETZ AL
00003703(4): AND AL,byte ptr [RSP + 0xd]
00003707(2): TEST AL,AL
00003709(6): JNZ 0x000040a1
0000370f(5): CMP dword ptr [RSP + 0x8],0x2
00003714(3): SETZ DL
00003717(5): JMP 0x000033e8
00003720(4): MOVZX EBX,byte ptr [R9]
00003724(3): CMP BL,0x7e
00003727(2): JA 0x000036b0
00003729(7): LEA RCX,[0x15148]
00003730(3): MOVZX EDX,BL
00003733(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00003737(3): ADD RAX,RCX
0000373a(2): JMP RAX
00003740(3): XOR R10D,R10D
00003743(5): CMP byte ptr [RSP + 0xd],0x0
00003748(6): JNZ 0x0000353e
0000374e(2): NOP
00003750(5): MOV EDX,0x5c
00003755(5): MOV EBX,0x5c
0000375a(5): JMP 0x000034f4
00003760(5): MOV EDX,0xc
00003765(3): XOR R10D,R10D
00003768(5): MOV EBX,0x66
0000376d(5): JMP 0x000034f4
00003778(5): MOV EDX,0xa
0000377d(3): XOR R10D,R10D
00003780(5): MOV EBX,0x6e
00003785(5): JMP 0x000034e2
00003790(5): MOV EBX,0x61
00003795(5): JMP 0x00003560
000037a0(3): XOR R10D,R10D
000037a3(5): CMP dword ptr [RSP + 0x8],0x2
000037a8(3): SETZ DL
000037ab(5): CMP byte ptr [RSP + 0xf],0x0
000037b0(6): JNZ 0x0000434a
000037b6(3): MOV EAX,R8D
000037b9(3): MOV RCX,R15
000037bc(3): XOR EAX,0x1
000037bf(2): AND AL,DL
000037c1(2): JZ 0x000037f0
000037c3(3): CMP R13,R15
000037c6(2): JBE 0x000037cd
000037c8(5): MOV byte ptr [R14 + R15*0x1],0x27
000037cd(4): LEA RCX,[R15 + 0x1]
000037d1(3): CMP R13,RCX
000037d4(2): JBE 0x000037dc
000037d6(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
000037dc(4): LEA RCX,[R15 + 0x2]
000037e0(3): CMP R13,RCX
000037e3(6): JA 0x00003e19
000037e9(4): LEA RCX,[R15 + 0x3]
000037ed(3): MOV R8D,EAX
000037f0(3): CMP R13,RCX
000037f3(2): JBE 0x000037fa
000037f5(5): MOV byte ptr [R14 + RCX*0x1],0x5c
000037fa(5): CMP dword ptr [RSP + 0x8],0x2
000037ff(4): LEA R15,[RCX + 0x1]
00003803(6): JZ 0x00003e09
00003809(4): LEA RAX,[RBP + 0x1]
0000380d(3): CMP RAX,R11
00003810(2): JNC 0x0000382b
00003812(5): MOV RAX,qword ptr [RSP + 0x10]
00003817(5): MOVZX EAX,byte ptr [RAX + RBP*0x1 + 0x1]
0000381c(4): MOV byte ptr [RSP + 0x28],AL
00003820(3): SUB EAX,0x30
00003823(2): CMP AL,0x9
00003825(6): JBE 0x00004059
0000382b(3): MOV EAX,R12D
0000382e(5): MOV EBX,0x30
00003833(3): XOR R12D,R12D
00003836(5): JMP 0x000033e8
00003840(5): CMP dword ptr [RSP + 0x8],0x2
00003845(3): MOV R12D,R10D
00003848(3): SETZ DL
0000384b(3): XOR R10D,R10D
0000384e(2): XOR EAX,EAX
00003850(5): JMP 0x000033e8
00003858(5): CMP dword ptr [RSP + 0x8],0x2
0000385d(3): SETZ DL
00003860(3): XOR R10D,R10D
00003863(5): JMP 0x00003628
00003870(5): CMP dword ptr [RSP + 0x8],0x2
00003875(3): SETZ DL
00003878(3): XOR R10D,R10D
0000387b(3): XOR R12D,R12D
0000387e(5): JMP 0x00003631
00003888(5): CMP dword ptr [RSP + 0x8],0x2
0000388d(3): MOV R12D,R10D
00003890(5): MOV EBX,0x20
00003895(3): SETZ DL
00003898(3): XOR R10D,R10D
0000389b(5): JMP 0x00003631
000038a0(5): MOV EDX,0xd
000038a5(3): XOR R10D,R10D
000038a8(5): MOV EBX,0x72
000038ad(5): JMP 0x000034e2
000038b8(5): MOV EBX,0x76
000038bd(5): JMP 0x00003560
000038c8(5): MOV EDX,0x9
000038cd(3): XOR R10D,R10D
000038d0(5): MOV EBX,0x74
000038d5(5): JMP 0x000034e2
000038e0(5): MOV EBX,0x62
000038e5(5): JMP 0x00003560
000038f0(3): XOR R10D,R10D
000038f3(5): JMP 0x00003390
00003900(5): CMP byte ptr [RSP + 0xf],0x0
00003905(6): JNZ 0x00004270
0000390b(4): ADD RBP,0x1
0000390f(3): MOV EAX,R8D
00003912(3): XOR R12D,R12D
00003915(5): MOV EBX,0x5c
0000391a(5): JMP 0x0000342c
00003920(5): CMP dword ptr [RSP + 0x8],0x2
00003925(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000392a(3): MOV R12D,R8D
0000392d(3): MOV RBP,R11
00003930(3): SETZ DL
00003933(2): MOV EAX,EBX
00003935(3): TEST R15,R15
00003938(3): SETZ CL
0000393b(2): AND EAX,EDX
0000393d(2): AND AL,CL
0000393f(6): JNZ 0x000043a6
00003945(2): MOV EAX,EBX
00003947(3): XOR EAX,0x1
0000394a(2): AND DL,AL
0000394c(6): JZ 0x000042bc
00003952(5): CMP byte ptr [RSP + 0x7c],0x0
00003957(6): JZ 0x000042ba
0000395d(5): CMP byte ptr [RSP + 0xe],0x0
00003962(6): JNZ 0x0000435d
00003968(3): TEST R13,R13
0000396b(3): SETZ AL
0000396e(6): CMP qword ptr [RSP + 0x50],0x0
00003974(3): SETNZ DL
00003977(2): AND AL,DL
00003979(6): JZ 0x0000439c
0000397f(5): MOV R13,qword ptr [RSP + 0x50]
00003984(7): LEA RBX,[0x14ec5]
0000398b(4): MOV byte ptr [R14],0x27
0000398f(8): MOV dword ptr [RSP + 0x8],0x2
00003997(6): MOV R15D,0x1
0000399d(9): MOV qword ptr [RSP + 0x18],0x1
000039a6(5): MOV byte ptr [RSP + 0xf],0x0
000039ab(5): MOV qword ptr [RSP + 0x48],RBX
000039b0(4): MOV byte ptr [RSP + 0x7c],AL
000039b4(5): JMP 0x00003293
000039c0(5): CMP byte ptr [RSP + 0xf],0x0
000039c5(6): JNZ 0x00004270
000039cb(3): TEST R13,R13
000039ce(6): JZ 0x00003dd0
000039d4(2): XOR EDX,EDX
000039d6(6): CMP qword ptr [RSP + 0x50],0x0
000039dc(6): JNZ 0x00003dd0
000039e2(5): MOV qword ptr [RSP + 0x50],R13
000039e7(4): ADD R15,0x3
000039eb(2): XOR EAX,EAX
000039ed(5): MOV byte ptr [RSP + 0x7c],R12B
000039f2(3): XOR R8D,R8D
000039f5(3): MOV R13,RDX
000039f8(5): MOV EBX,0x27
000039fd(5): JMP 0x00003419
00003a08(5): TEST byte ptr [RSP + 0x78],0x4
00003a0d(2): JZ 0x00003a30
00003a0f(4): LEA RCX,[RBP + 0x2]
00003a13(3): CMP RCX,R11
00003a16(2): JNC 0x00003a30
00003a18(5): MOV RAX,qword ptr [RSP + 0x10]
00003a1d(5): CMP byte ptr [RAX + RBP*0x1 + 0x1],0x3f
00003a22(6): JZ 0x000041b2
00003a28(8): NOP dword ptr [RAX + RAX*0x1]
00003a30(2): XOR EDX,EDX
00003a32(3): XOR R12D,R12D
00003a35(2): XOR EAX,EAX
00003a37(5): MOV EBX,0x3f
00003a3c(5): JMP 0x000033e8
00003a48(5): CMP byte ptr [RSP + 0xf],0x0
00003a4d(6): JNZ 0x00004270
00003a53(3): XOR R12D,R12D
00003a56(2): XOR EAX,EAX
00003a58(5): MOV EBX,0x3f
00003a5d(5): JMP 0x00003419
00003a68(8): LEA RAX,[0xa0 + RSP]
00003a70(4): CMP R11,-0x1
00003a74(12): MOV qword ptr [0xa0 + RSP],0x0
00003a80(5): MOV qword ptr [RSP + 0x28],RAX
00003a85(2): JNZ 0x00003ab4
00003a87(5): MOV RDI,qword ptr [RSP + 0x10]
00003a8c(5): MOV byte ptr [RSP + 0x40],R8B
00003a91(5): MOV byte ptr [RSP + 0x38],R10B
00003a96(5): MOV qword ptr [RSP + 0x30],R9
00003a9b(5): CALL 0x000019d0
00003aa0(6): MOVZX R8D,byte ptr [RSP + 0x40]
00003aa6(6): MOVZX R10D,byte ptr [RSP + 0x38]
00003aac(3): MOV R11,RAX
00003aaf(5): MOV R9,qword ptr [RSP + 0x30]
00003ab4(8): LEA RAX,[0x9c + RSP]
00003abc(2): XOR ECX,ECX
00003abe(4): MOV byte ptr [RSP + 0x7e],BL
00003ac2(5): MOV byte ptr [RSP + 0x7d],R8B
00003ac7(3): MOV RBX,RCX
00003aca(8): MOV qword ptr [0x88 + RSP],R9
00003ad2(5): MOV qword ptr [RSP + 0x38],RAX
00003ad7(5): MOV byte ptr [RSP + 0x7f],R10B
00003adc(8): MOV qword ptr [0x80 + RSP],R15
00003ae4(5): MOV qword ptr [RSP + 0x40],R14
00003ae9(5): MOV qword ptr [RSP + 0x70],R13
00003aee(5): MOV qword ptr [RSP + 0x30],R11
00003af3(5): MOV RAX,qword ptr [RSP + 0x10]
00003af8(5): LEA R14,[RBP + RBX*0x1]
00003afd(5): MOV RDX,qword ptr [RSP + 0x30]
00003b02(5): MOV RCX,qword ptr [RSP + 0x28]
00003b07(5): MOV RDI,qword ptr [RSP + 0x38]
00003b0c(4): LEA R13,[RAX + R14*0x1]
00003b10(3): SUB RDX,R14
00003b13(3): MOV RSI,R13
00003b16(5): CALL 0x00005f40
00003b1b(3): TEST RAX,RAX
00003b1e(3): MOV R15,RAX
00003b21(2): JZ 0x00003b71
00003b23(4): CMP RAX,-0x1
00003b27(6): JZ 0x00004145
00003b2d(4): CMP RAX,-0x2
00003b31(6): JZ 0x000040d1
00003b37(5): CMP dword ptr [RSP + 0x8],0x2
00003b3c(3): SETZ AL
00003b3f(4): AND AL,byte ptr [RSP + 0xf]
00003b43(6): JNZ 0x00003ce0
00003b49(7): MOV EDI,dword ptr [0x9c + RSP]
00003b50(5): CALL 0x00001c50
00003b55(5): MOV RDI,qword ptr [RSP + 0x28]
00003b5a(2): TEST EAX,EAX
00003b5c(5): MOV EAX,0x0
00003b61(4): CMOVZ R12D,EAX
00003b65(3): ADD RBX,R15
00003b68(5): CALL 0x00001c40
00003b6d(2): TEST EAX,EAX
00003b6f(2): JZ 0x00003af3
00003b71(3): MOV EDX,R12D
00003b74(3): MOV RDI,RBX
00003b77(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00003b7d(3): XOR EDX,0x1
00003b80(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00003b85(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00003b8b(4): AND DL,byte ptr [RSP + 0xd]
00003b8f(8): MOV R15,qword ptr [0x80 + RSP]
00003b97(5): MOV R14,qword ptr [RSP + 0x40]
00003b9c(5): MOV R13,qword ptr [RSP + 0x70]
00003ba1(5): MOV R11,qword ptr [RSP + 0x30]
00003ba6(4): CMP RDI,0x1
00003baa(6): JBE 0x000041ab
00003bb0(3): MOV RCX,RDI
00003bb3(2): XOR ESI,ESI
00003bb5(6): MOVZX R9D,byte ptr [RSP + 0xf]
00003bbb(3): ADD RCX,RBP
00003bbe(5): MOV RDI,qword ptr [RSP + 0x10]
00003bc3(5): JMP 0x00003c7e
00003bd0(5): CMP dword ptr [RSP + 0x8],0x2
00003bd5(3): SETZ AL
00003bd8(3): TEST R9B,R9B
00003bdb(6): JNZ 0x00004090
00003be1(3): MOV ESI,R8D
00003be4(3): XOR ESI,0x1
00003be7(3): AND AL,SIL
00003bea(2): JZ 0x00003c1b
00003bec(3): CMP R13,R15
00003bef(2): JBE 0x00003bf6
00003bf1(5): MOV byte ptr [R14 + R15*0x1],0x27
00003bf6(4): LEA RSI,[R15 + 0x1]
00003bfa(3): CMP R13,RSI
00003bfd(2): JBE 0x00003c05
00003bff(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00003c05(4): LEA RSI,[R15 + 0x2]
00003c09(3): CMP R13,RSI
00003c0c(2): JBE 0x00003c14
00003c0e(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00003c14(4): ADD R15,0x3
00003c18(3): MOV R8D,EAX
00003c1b(3): CMP R13,R15
00003c1e(2): JBE 0x00003c25
00003c20(5): MOV byte ptr [R14 + R15*0x1],0x5c
00003c25(4): LEA RAX,[R15 + 0x1]
00003c29(3): CMP R13,RAX
00003c2c(2): JBE 0x00003c3b
00003c2e(2): MOV EAX,EBX
00003c30(3): SHR AL,0x6
00003c33(3): ADD EAX,0x30
00003c36(5): MOV byte ptr [R14 + R15*0x1 + 0x1],AL
00003c3b(4): LEA RAX,[R15 + 0x2]
00003c3f(3): CMP R13,RAX
00003c42(2): JBE 0x00003c54
00003c44(2): MOV EAX,EBX
00003c46(3): SHR AL,0x3
00003c49(3): AND EAX,0x7
00003c4c(3): ADD EAX,0x30
00003c4f(5): MOV byte ptr [R14 + R15*0x1 + 0x2],AL
00003c54(3): AND EBX,0x7
00003c57(4): ADD RBP,0x1
00003c5b(4): ADD R15,0x3
00003c5f(3): ADD EBX,0x30
00003c62(3): CMP RBP,RCX
00003c65(6): JNC 0x00003450
00003c6b(2): MOV ESI,EDX
00003c6d(3): CMP R13,R15
00003c70(2): JBE 0x00003c76
00003c72(4): MOV byte ptr [R14 + R15*0x1],BL
00003c76(4): MOVZX EBX,byte ptr [RDI + RBP*0x1]
00003c7a(4): ADD R15,0x1
00003c7e(2): TEST DL,DL
00003c80(6): JNZ 0x00003bd0
00003c86(2): MOV EAX,ESI
00003c88(3): XOR EAX,0x1
00003c8b(3): AND EAX,R8D
00003c8e(3): TEST R10B,R10B
00003c91(2): JZ 0x00003ca1
00003c93(3): CMP R13,R15
00003c96(2): JBE 0x00003c9d
00003c98(5): MOV byte ptr [R14 + R15*0x1],0x5c
00003c9d(4): ADD R15,0x1
00003ca1(4): ADD RBP,0x1
00003ca5(3): CMP RBP,RCX
00003ca8(6): JNC 0x0000342c
00003cae(2): TEST AL,AL
00003cb0(6): JZ 0x000040ae
00003cb6(3): CMP R13,R15
00003cb9(2): JBE 0x00003cc0
00003cbb(5): MOV byte ptr [R14 + R15*0x1],0x27
00003cc0(4): LEA RAX,[R15 + 0x1]
00003cc4(3): CMP R13,RAX
00003cc7(2): JBE 0x00003ccf
00003cc9(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
00003ccf(4): ADD R15,0x2
00003cd3(3): XOR R10D,R10D
00003cd6(3): XOR R8D,R8D
00003cd9(2): JMP 0x00003c6d
00003ce0(4): CMP R15,0x1
00003ce4(6): JZ 0x00003b49
00003cea(5): MOV RDI,qword ptr [RSP + 0x10]
00003cef(4): LEA RCX,[RDI + R15*0x1]
00003cf3(5): LEA RDX,[RDI + R14*0x1 + 0x1]
00003cf8(4): LEA R8,[RCX + R14*0x1]
00003cfc(2): JMP 0x00003d0d
00003d00(4): ADD RDX,0x1
00003d04(3): CMP R8,RDX
00003d07(6): JZ 0x00003b49
00003d0d(3): MOVZX ECX,byte ptr [RDX]
00003d10(3): SUB ECX,0x5b
00003d13(3): CMP CL,0x21
00003d16(2): JA 0x00003d00
00003d18(5): MOV ESI,0x1
00003d1d(3): SHL RSI,CL
00003d20(3): MOV RCX,RSI
00003d23(10): MOV RSI,0x20000002b
00003d2d(3): TEST RCX,RSI
00003d30(2): JZ 0x00003d00
00003d32(5): MOV R14,qword ptr [RSP + 0x40]
00003d37(5): MOV R13,qword ptr [RSP + 0x70]
00003d3c(5): MOV RBP,qword ptr [RSP + 0x30]
00003d41(8): MOV dword ptr [RSP + 0x8],0x2
00003d49(5): CMP byte ptr [RSP + 0xd],0x0
00003d4e(2): JZ 0x00003d60
00003d50(2): TEST AL,AL
00003d52(5): MOV EAX,0x4
00003d57(5): CMOVZ EAX,dword ptr [RSP + 0x8]
00003d5c(4): MOV dword ptr [RSP + 0x8],EAX
00003d60(4): SUB RSP,0x8
00003d64(3): MOV RCX,RBP
00003d67(3): MOV RSI,R13
00003d6a(4): PUSH qword ptr [RSP + 0x68]
00003d6e(4): PUSH qword ptr [RSP + 0x78]
00003d72(3): MOV RDI,R14
00003d75(2): PUSH 0x0
00003d77(8): MOV R9D,dword ptr [0x98 + RSP]
00003d7f(5): MOV R8D,dword ptr [RSP + 0x28]
00003d84(5): MOV RDX,qword ptr [RSP + 0x30]
00003d89(4): AND R9D,0xfffffffd
00003d8d(5): CALL 0x000031c0
00003d92(4): ADD RSP,0x20
00003d96(3): MOV R15,RAX
00003d99(8): MOV RBX,qword ptr [0xa8 + RSP]
00003da1(9): XOR RBX,qword ptr FS:[0x28]
00003daa(3): MOV RAX,R15
00003dad(6): JNZ 0x000043b3
00003db3(7): ADD RSP,0xb8
00003dba(1): POP RBX
00003dbb(1): POP RBP
00003dbc(2): POP R12
00003dbe(2): POP R13
00003dc0(2): POP R14
00003dc2(2): POP R15
00003dc4(1): RET
00003dc8(3): MOV RBP,R11
00003dcb(5): JMP 0x00003d49
00003dd0(3): CMP R13,R15
00003dd3(2): JBE 0x00003dda
00003dd5(5): MOV byte ptr [R14 + R15*0x1],0x27
00003dda(4): LEA RAX,[R15 + 0x1]
00003dde(3): CMP R13,RAX
00003de1(2): JBE 0x00003de9
00003de3(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x5c
00003de9(4): LEA RAX,[R15 + 0x2]
00003ded(3): CMP R13,RAX
00003df0(6): JBE 0x000043e2
00003df6(3): MOV RDX,R13
00003df9(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00003dff(5): MOV R13,qword ptr [RSP + 0x50]
00003e04(5): JMP 0x000039e2
00003e09(3): MOV EAX,R12D
00003e0c(5): MOV EBX,0x30
00003e11(3): XOR R12D,R12D
00003e14(5): JMP 0x00003419
00003e19(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00003e1f(5): JMP 0x000037e9
00003e24(2): TEST EBX,EBX
00003e26(6): JNZ 0x00003253
00003e2c(5): MOV byte ptr [RSP + 0xd],0x1
00003e31(3): TEST R13,R13
00003e34(6): JNZ 0x000043ca
00003e3a(7): LEA RAX,[0x14ec5]
00003e41(9): MOV qword ptr [RSP + 0x50],0x0
00003e4a(5): MOV byte ptr [RSP + 0xe],0x1
00003e4f(5): MOV byte ptr [RSP + 0x7c],0x0
00003e54(3): XOR R12D,R12D
00003e57(5): MOV byte ptr [RSP + 0xf],0x0
00003e5c(9): MOV qword ptr [RSP + 0x18],0x1
00003e65(5): MOV qword ptr [RSP + 0x48],RAX
00003e6a(6): MOV R15D,0x1
00003e70(8): MOV dword ptr [RSP + 0x8],0x2
00003e78(5): JMP 0x00003293
00003e80(2): TEST EBX,EBX
00003e82(6): JNZ 0x0000427d
00003e88(3): TEST R13,R13
00003e8b(6): JZ 0x000040b6
00003e91(4): MOV byte ptr [R14],0x22
00003e95(5): MOV byte ptr [RSP + 0xe],0x1
00003e9a(3): XOR R12D,R12D
00003e9d(5): MOV byte ptr [RSP + 0x7c],0x0
00003ea2(9): MOV qword ptr [RSP + 0x50],0x0
00003eab(7): LEA RAX,[0x14ec3]
00003eb2(5): MOV byte ptr [RSP + 0xf],0x0
00003eb7(5): MOV byte ptr [RSP + 0xd],0x1
00003ebc(9): MOV qword ptr [RSP + 0x18],0x1
00003ec5(6): MOV R15D,0x1
00003ecb(5): MOV qword ptr [RSP + 0x48],RAX
00003ed0(5): JMP 0x00003293
00003ed5(7): LEA RAX,[0x14ec3]
00003edc(5): MOV byte ptr [RSP + 0xe],0x1
00003ee1(5): MOV byte ptr [RSP + 0x7c],0x0
00003ee6(3): XOR R12D,R12D
00003ee9(9): MOV qword ptr [RSP + 0x50],0x0
00003ef2(5): MOV byte ptr [RSP + 0xf],0x1
00003ef7(5): MOV byte ptr [RSP + 0xd],0x1
00003efc(9): MOV qword ptr [RSP + 0x18],0x1
00003f05(3): XOR R15D,R15D
00003f08(5): MOV qword ptr [RSP + 0x48],RAX
00003f0d(8): MOV dword ptr [RSP + 0x8],0x5
00003f15(5): JMP 0x00003293
00003f1a(5): MOV byte ptr [RSP + 0xe],0x1
00003f1f(5): MOV byte ptr [RSP + 0x7c],0x0
00003f24(3): XOR R12D,R12D
00003f27(9): MOV qword ptr [RSP + 0x50],0x0
00003f30(5): MOV byte ptr [RSP + 0xf],0x0
00003f35(3): XOR R15D,R15D
00003f38(5): MOV byte ptr [RSP + 0xd],0x1
00003f3d(9): MOV qword ptr [RSP + 0x18],0x0
00003f46(9): MOV qword ptr [RSP + 0x48],0x0
00003f4f(5): JMP 0x00003293
00003f54(5): CMP dword ptr [RSP + 0x8],0xa
00003f59(2): JZ 0x00003fb1
00003f5b(7): LEA RSI,[0x14ec7]
00003f62(2): XOR EDI,EDI
00003f64(5): MOV EDX,0x5
00003f69(5): CALL 0x000019b0
00003f6e(3): MOV RCX,RAX
00003f71(5): MOV qword ptr [RSP + 0x68],RAX
00003f76(7): LEA RAX,[0x14ec7]
00003f7d(3): CMP RCX,RAX
00003f80(6): JZ 0x0000431e
00003f86(7): LEA RSI,[0x14ec5]
00003f8d(2): XOR EDI,EDI
00003f8f(5): MOV EDX,0x5
00003f94(5): CALL 0x000019b0
00003f99(3): MOV RCX,RAX
00003f9c(5): MOV qword ptr [RSP + 0x60],RAX
00003fa1(7): LEA RAX,[0x14ec5]
00003fa8(3): CMP RCX,RAX
00003fab(6): JZ 0x00004334
00003fb1(3): XOR R15D,R15D
00003fb4(2): TEST EBX,EBX
00003fb6(6): JZ 0x0000417d
00003fbc(2): TEST EBX,EBX
00003fbe(5): MOV RBX,qword ptr [RSP + 0x60]
00003fc3(5): SETNZ byte ptr [RSP + 0xf]
00003fc8(3): XOR R12D,R12D
00003fcb(3): MOV RDI,RBX
00003fce(5): CALL 0x000019d0
00003fd3(5): MOV qword ptr [RSP + 0x48],RBX
00003fd8(5): MOV qword ptr [RSP + 0x18],RAX
00003fdd(5): MOV byte ptr [RSP + 0xe],0x1
00003fe2(5): MOV byte ptr [RSP + 0x7c],0x0
00003fe7(9): MOV qword ptr [RSP + 0x50],0x0
00003ff0(5): MOV byte ptr [RSP + 0xd],0x1
00003ff5(5): JMP 0x00003293
00003ffa(5): MOV byte ptr [RSP + 0xe],0x1
00003fff(5): MOV byte ptr [RSP + 0x7c],0x0
00004004(3): XOR R12D,R12D
00004007(9): MOV qword ptr [RSP + 0x50],0x0
00004010(5): MOV byte ptr [RSP + 0xf],0x0
00004015(3): XOR R15D,R15D
00004018(5): MOV byte ptr [RSP + 0xd],0x0
0000401d(9): MOV qword ptr [RSP + 0x18],0x0
00004026(9): MOV qword ptr [RSP + 0x48],0x0
0000402f(5): JMP 0x00003293
00004034(5): MOV byte ptr [RSP + 0xe],0x1
00004039(5): MOV byte ptr [RSP + 0x7c],0x0
0000403e(3): XOR R12D,R12D
00004041(9): MOV qword ptr [RSP + 0x50],0x0
0000404a(5): MOV byte ptr [RSP + 0xf],0x1
0000404f(5): MOV byte ptr [RSP + 0xd],0x1
00004054(5): JMP 0x00003273
00004059(3): CMP R13,R15
0000405c(2): JBE 0x00004063
0000405e(5): MOV byte ptr [R14 + R15*0x1],0x30
00004063(4): LEA RAX,[RCX + 0x2]
00004067(3): CMP R13,RAX
0000406a(2): JBE 0x00004072
0000406c(6): MOV byte ptr [R14 + RCX*0x1 + 0x2],0x30
00004072(3): MOV EAX,R12D
00004075(4): LEA R15,[RCX + 0x3]
00004079(3): XOR R12D,R12D
0000407c(5): MOV EBX,0x30
00004081(5): JMP 0x000033e8
00004090(5): MOVZX EBX,byte ptr [RSP + 0xf]
00004095(3): MOV RBP,R11
00004098(4): MOV byte ptr [RSP + 0xd],BL
0000409c(5): JMP 0x00003d49
000040a1(5): MOVZX EDX,byte ptr [RSP + 0xd]
000040a6(3): XOR R12D,R12D
000040a9(5): JMP 0x00003bb0
000040ae(3): XOR R10D,R10D
000040b1(5): JMP 0x00003c6d
000040b6(9): MOV qword ptr [RSP + 0x50],0x0
000040bf(5): MOV byte ptr [RSP + 0xe],0x1
000040c4(3): XOR R12D,R12D
000040c7(5): MOV byte ptr [RSP + 0x7c],0x0
000040cc(5): JMP 0x00003eab
000040d1(5): MOV R11,qword ptr [RSP + 0x30]
000040d6(3): MOV RSI,R14
000040d9(3): MOV RCX,R13
000040dc(3): MOV RAX,RBX
000040df(3): MOV RDI,RBX
000040e2(6): MOVZX R8D,byte ptr [RSP + 0x7d]
000040e8(5): MOVZX EBX,byte ptr [RSP + 0x7e]
000040ed(8): MOV R9,qword ptr [0x88 + RSP]
000040f5(3): CMP RSI,R11
000040f8(6): MOVZX R10D,byte ptr [RSP + 0x7f]
000040fe(8): MOV R15,qword ptr [0x80 + RSP]
00004106(5): MOV R14,qword ptr [RSP + 0x40]
0000410b(5): MOV R13,qword ptr [RSP + 0x70]
00004110(2): JNC 0x00004138
00004112(3): CMP byte ptr [RCX],0x0
00004115(2): JNZ 0x00004127
00004117(2): JMP 0x00004138
00004120(5): CMP byte ptr [R9 + RAX*0x1],0x0
00004125(2): JZ 0x00004135
00004127(4): ADD RAX,0x1
0000412b(5): LEA RDX,[RBP + RAX*0x1]
00004130(3): CMP R11,RDX
00004133(2): JA 0x00004120
00004135(3): MOV RDI,RAX
00004138(5): MOVZX EDX,byte ptr [RSP + 0xd]
0000413d(3): XOR R12D,R12D
00004140(5): JMP 0x00003ba6
00004145(3): MOV RDI,RBX
00004148(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000414e(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00004153(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00004159(8): MOV R15,qword ptr [0x80 + RSP]
00004161(3): XOR R12D,R12D
00004164(5): MOV R14,qword ptr [RSP + 0x40]
00004169(5): MOV R13,qword ptr [RSP + 0x70]
0000416e(5): MOV R11,qword ptr [RSP + 0x30]
00004173(5): MOVZX EDX,byte ptr [RSP + 0xd]
00004178(5): JMP 0x00003ba6
0000417d(5): MOV RDX,qword ptr [RSP + 0x68]
00004182(3): MOVZX EAX,byte ptr [RDX]
00004185(2): TEST AL,AL
00004187(6): JZ 0x00003fbc
0000418d(3): NOP dword ptr [RAX]
00004190(3): CMP R13,R15
00004193(2): JBE 0x00004199
00004195(4): MOV byte ptr [R14 + R15*0x1],AL
00004199(4): ADD R15,0x1
0000419d(5): MOVZX EAX,byte ptr [RDX + R15*0x1]
000041a2(2): TEST AL,AL
000041a4(2): JNZ 0x00004190
000041a6(5): JMP 0x00003fbc
000041ab(2): MOV EAX,EDX
000041ad(5): JMP 0x00003707
000041b2(4): MOVZX EBX,byte ptr [RAX + RCX*0x1]
000041b6(3): CMP BL,0x3e
000041b9(6): JA 0x00003a30
000041bf(10): MOV RAX,0x7000a38200000000
000041c9(4): BT RAX,RBX
000041cd(6): JNC 0x00003a30
000041d3(5): CMP byte ptr [RSP + 0xf],0x0
000041d8(6): JNZ 0x000043c2
000041de(3): CMP R13,R15
000041e1(2): JBE 0x000041e8
000041e3(5): MOV byte ptr [R14 + R15*0x1],0x3f
000041e8(4): LEA RAX,[R15 + 0x1]
000041ec(3): CMP R13,RAX
000041ef(2): JBE 0x000041f7
000041f1(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x22
000041f7(4): LEA RAX,[R15 + 0x2]
000041fb(3): CMP R13,RAX
000041fe(2): JBE 0x00004206
00004200(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x22
00004206(4): LEA RAX,[R15 + 0x3]
0000420a(3): CMP R13,RAX
0000420d(2): JBE 0x00004215
0000420f(6): MOV byte ptr [R14 + R15*0x1 + 0x3],0x3f
00004215(4): ADD R15,0x4
00004219(2): XOR EDX,EDX
0000421b(3): XOR R12D,R12D
0000421e(2): XOR EAX,EAX
00004220(3): MOV RBP,RCX
00004223(5): JMP 0x000033e8
00004228(2): TEST EBX,EBX
0000422a(6): JZ 0x000043b8
00004230(7): LEA RAX,[0x14ec5]
00004237(5): MOV byte ptr [RSP + 0xe],0x1
0000423c(5): MOV byte ptr [RSP + 0x7c],0x0
00004241(3): XOR R12D,R12D
00004244(9): MOV qword ptr [RSP + 0x50],0x0
0000424d(5): MOV byte ptr [RSP + 0xf],0x1
00004252(5): MOV byte ptr [RSP + 0xd],0x0
00004257(9): MOV qword ptr [RSP + 0x18],0x1
00004260(3): XOR R15D,R15D
00004263(5): MOV qword ptr [RSP + 0x48],RAX
00004268(5): JMP 0x00003293
00004270(3): MOV RBP,R11
00004273(5): MOVZX EAX,byte ptr [RSP + 0xf]
00004278(5): JMP 0x00003d49
0000427d(7): LEA RAX,[0x14ec3]
00004284(5): MOV byte ptr [RSP + 0xe],0x1
00004289(5): MOV byte ptr [RSP + 0x7c],0x0
0000428e(3): XOR R12D,R12D
00004291(9): MOV qword ptr [RSP + 0x50],0x0
0000429a(5): MOV byte ptr [RSP + 0xf],0x1
0000429f(5): MOV byte ptr [RSP + 0xd],0x1
000042a4(9): MOV qword ptr [RSP + 0x18],0x1
000042ad(3): XOR R15D,R15D
000042b0(5): MOV qword ptr [RSP + 0x48],RAX
000042b5(5): JMP 0x00003293
000042ba(2): MOV EAX,EDX
000042bc(5): MOV RBX,qword ptr [RSP + 0x48]
000042c1(3): TEST RBX,RBX
000042c4(2): JZ 0x000042f2
000042c6(2): TEST AL,AL
000042c8(2): JZ 0x000042f2
000042ca(3): MOVZX ECX,byte ptr [RBX]
000042cd(3): MOV RAX,RBX
000042d0(2): TEST CL,CL
000042d2(2): JZ 0x000042f2
000042d4(3): MOV RDX,R15
000042d7(3): SUB RAX,R15
000042da(3): CMP R13,RDX
000042dd(2): JBE 0x000042e3
000042df(4): MOV byte ptr [R14 + RDX*0x1],CL
000042e3(4): ADD RDX,0x1
000042e7(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
000042eb(2): TEST CL,CL
000042ed(2): JNZ 0x000042da
000042ef(3): MOV R15,RDX
000042f2(3): CMP R13,R15
000042f5(6): JBE 0x00003d99
000042fb(5): MOV byte ptr [R14 + R15*0x1],0x0
00004300(5): JMP 0x00003d99
00004305(5): CMP dword ptr [RSP + 0x8],0x2
0000430a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000430f(3): MOV RBP,R11
00004312(3): SETZ AL
00004315(4): MOV byte ptr [RSP + 0xd],BL
00004319(5): JMP 0x00003d49
0000431e(4): MOV ESI,dword ptr [RSP + 0x8]
00004322(3): MOV RDI,RCX
00004325(5): CALL 0x000030d0
0000432a(5): MOV qword ptr [RSP + 0x68],RAX
0000432f(5): JMP 0x00003f86
00004334(4): MOV ESI,dword ptr [RSP + 0x8]
00004338(3): MOV RDI,RCX
0000433b(5): CALL 0x000030d0
00004340(5): MOV qword ptr [RSP + 0x60],RAX
00004345(5): JMP 0x00003fb1
0000434a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000434f(3): MOV RBP,R11
00004352(2): MOV EAX,EDX
00004354(4): MOV byte ptr [RSP + 0xd],BL
00004358(5): JMP 0x00003d49
0000435d(4): SUB RSP,0x8
00004361(6): MOV R8D,0x5
00004367(3): MOV RCX,R11
0000436a(4): PUSH qword ptr [RSP + 0x68]
0000436e(4): PUSH qword ptr [RSP + 0x78]
00004372(3): MOV RDI,R14
00004375(4): PUSH qword ptr [RSP + 0x38]
00004379(8): MOV R9D,dword ptr [0x98 + RSP]
00004381(5): MOV RDX,qword ptr [RSP + 0x30]
00004386(5): MOV RSI,qword ptr [RSP + 0x70]
0000438b(5): CALL 0x000031c0
00004390(4): ADD RSP,0x20
00004394(3): MOV R15,RAX
00004397(5): JMP 0x00003d99
0000439c(5): MOVZX EAX,byte ptr [RSP + 0x7c]
000043a1(5): JMP 0x000042bc
000043a6(8): MOV dword ptr [RSP + 0x8],0x2
000043ae(5): JMP 0x00003d49
000043b3(5): CALL 0x000019e0
000043b8(5): MOV byte ptr [RSP + 0xd],0x0
000043bd(5): JMP 0x00003e31
000043c2(3): MOV RBP,R11
000043c5(5): JMP 0x00003d60
000043ca(5): MOV byte ptr [RSP + 0xe],0x1
000043cf(2): XOR EAX,EAX
000043d1(3): XOR R12D,R12D
000043d4(9): MOV qword ptr [RSP + 0x50],0x0
000043dd(5): JMP 0x00003984
000043e2(3): MOV RDX,R13
000043e5(5): MOV R13,qword ptr [RSP + 0x50]
000043ea(5): JMP 0x000039e2
000043ef(5): CALL 0x000018e0
000043f4(2): NOP
000043f6(10): NOP word ptr CS:[RAX + RAX*0x1]
00004400(2): PUSH R15
00004402(2): PUSH R14
00004404(3): MOVSXD R15,EDI
00004407(2): PUSH R13
00004409(2): PUSH R12
0000440b(3): MOV R14,RDX
0000440e(1): PUSH RBP
0000440f(1): PUSH RBX
00004410(3): MOV RBP,RCX
00004413(4): SUB RSP,0x28
00004417(5): MOV qword ptr [RSP + 0x8],RSI
0000441c(5): CALL 0x000018f0
00004421(3): MOV R13,RAX
00004424(2): MOV EAX,dword ptr [RAX]
00004426(3): TEST R15D,R15D
00004429(7): MOV RBX,qword ptr [0x002190c0]
00004430(4): MOV dword ptr [RSP + 0x18],EAX
00004434(6): JS 0x000045a1
0000443a(7): CMP dword ptr [0x002190b8],R15D
00004441(2): JG 0x000044a5
00004443(7): CMP R15D,0x7fffffff
0000444a(6): JZ 0x000045a6
00004450(4): LEA R12D,[R15 + 0x1]
00004454(7): LEA RAX,[0x2190d0]
0000445b(3): MOVSXD RSI,R12D
0000445e(4): SHL RSI,0x4
00004462(3): CMP RBX,RAX
00004465(6): JZ 0x00004580
0000446b(3): MOV RDI,RBX
0000446e(5): CALL 0x000053e0
00004473(3): MOV RBX,RAX
00004476(7): MOV qword ptr [0x002190c0],RAX
0000447d(7): MOVSXD RDI,dword ptr [0x002190b8]
00004484(3): MOV EDX,R12D
00004487(2): XOR ESI,ESI
00004489(2): SUB EDX,EDI
0000448b(4): SHL RDI,0x4
0000448f(3): MOVSXD RDX,EDX
00004492(3): ADD RDI,RBX
00004495(4): SHL RDX,0x4
00004499(5): CALL 0x00001a60
0000449e(7): MOV dword ptr [0x002190b8],R12D
000044a5(3): MOV EAX,dword ptr [RBP + 0x4]
000044a8(4): SHL R15,0x4
000044ac(4): SUB RSP,0x8
000044b0(3): ADD RBX,R15
000044b3(4): LEA R15,[RBP + 0x8]
000044b7(4): MOV R8D,dword ptr [RBP]
000044bb(3): MOV R11,qword ptr [RBX]
000044be(4): MOV R12,qword ptr [RBX + 0x8]
000044c2(3): MOV RCX,R14
000044c5(3): OR EAX,0x1
000044c8(4): MOV dword ptr [RSP + 0x24],EAX
000044cc(3): PUSH qword ptr [RBP + 0x30]
000044cf(3): MOV R9D,EAX
000044d2(3): PUSH qword ptr [RBP + 0x28]
000044d5(2): PUSH R15
000044d7(3): MOV RSI,R11
000044da(5): MOV RDX,qword ptr [RSP + 0x28]
000044df(3): MOV RDI,R12
000044e2(5): MOV qword ptr [RSP + 0x30],R11
000044e7(5): CALL 0x000031c0
000044ec(4): ADD RSP,0x20
000044f0(5): MOV R11,qword ptr [RSP + 0x10]
000044f5(3): CMP R11,RAX
000044f8(2): JA 0x00004561
000044fa(4): LEA RSI,[RAX + 0x1]
000044fe(7): LEA RAX,[0x2195a0]
00004505(3): CMP R12,RAX
00004508(3): MOV qword ptr [RBX],RSI
0000450b(2): JZ 0x0000451f
0000450d(3): MOV RDI,R12
00004510(5): MOV qword ptr [RSP + 0x10],RSI
00004515(5): CALL 0x000018d0
0000451a(5): MOV RSI,qword ptr [RSP + 0x10]
0000451f(3): MOV RDI,RSI
00004522(5): MOV qword ptr [RSP + 0x10],RSI
00004527(5): CALL 0x00005380
0000452c(4): SUB RSP,0x8
00004530(4): MOV qword ptr [RBX + 0x8],RAX
00004534(4): MOV R8D,dword ptr [RBP]
00004538(3): PUSH qword ptr [RBP + 0x30]
0000453b(3): PUSH qword ptr [RBP + 0x28]
0000453e(3): MOV RCX,R14
00004541(2): PUSH R15
00004543(5): MOV R9D,dword ptr [RSP + 0x3c]
00004548(3): MOV RDI,RAX
0000454b(5): MOV RDX,qword ptr [RSP + 0x28]
00004550(5): MOV RSI,qword ptr [RSP + 0x30]
00004555(3): MOV R12,RAX
00004558(5): CALL 0x000031c0
0000455d(4): ADD RSP,0x20
00004561(4): MOV EAX,dword ptr [RSP + 0x18]
00004565(4): MOV dword ptr [R13],EAX
00004569(4): ADD RSP,0x28
0000456d(3): MOV RAX,R12
00004570(1): POP RBX
00004571(1): POP RBP
00004572(2): POP R12
00004574(2): POP R13
00004576(2): POP R14
00004578(2): POP R15
0000457a(1): RET
00004580(2): XOR EDI,EDI
00004582(5): CALL 0x000053e0
00004587(8): MOVDQA XMM0,xmmword ptr [0x002190d0]
0000458f(3): MOV RBX,RAX
00004592(7): MOV qword ptr [0x002190c0],RAX
00004599(3): MOVUPS xmmword ptr [RAX],XMM0
0000459c(5): JMP 0x0000447d
000045a1(5): CALL 0x000018e0
000045a6(5): CALL 0x000055d0
000045ab(5): NOP dword ptr [RAX + RAX*0x1]
000045b0(2): PUSH R12
000045b2(1): PUSH RBP
000045b3(1): PUSH RBX
000045b4(3): MOV RBX,RDI
000045b7(5): CALL 0x000018f0
000045bc(3): MOV R12D,dword ptr [RAX]
000045bf(3): MOV RBP,RAX
000045c2(7): LEA RAX,[0x2196a0]
000045c9(3): TEST RBX,RBX
000045cc(5): MOV ESI,0x38
000045d1(4): CMOVZ RBX,RAX
000045d5(3): MOV RDI,RBX
000045d8(5): CALL 0x00005580
000045dd(4): MOV dword ptr [RBP],R12D
000045e1(1): POP RBX
000045e2(1): POP RBP
000045e3(2): POP R12
000045e5(1): RET
000045f0(7): LEA RAX,[0x2196a0]
000045f7(3): TEST RDI,RDI
000045fa(4): CMOVZ RDI,RAX
000045fe(2): MOV EAX,dword ptr [RDI]
00004600(1): RET
00004610(7): LEA RAX,[0x2196a0]
00004617(3): TEST RDI,RDI
0000461a(4): CMOVZ RDI,RAX
0000461e(2): MOV dword ptr [RDI],ESI
00004620(1): RET
00004630(7): LEA RAX,[0x2196a0]
00004637(3): TEST RDI,RDI
0000463a(2): MOV ECX,ESI
0000463c(4): CMOVZ RDI,RAX
00004640(2): MOV EAX,ESI
00004642(3): AND ECX,0x1f
00004645(3): SHR AL,0x5
00004648(3): MOVZX EAX,AL
0000464b(5): LEA RDI,[RDI + RAX*0x4 + 0x8]
00004650(2): MOV ESI,dword ptr [RDI]
00004652(2): MOV EAX,ESI
00004654(2): SHR EAX,CL
00004656(2): XOR EDX,EAX
00004658(3): AND EAX,0x1
0000465b(3): AND EDX,0x1
0000465e(2): SHL EDX,CL
00004660(2): XOR EDX,ESI
00004662(2): MOV dword ptr [RDI],EDX
00004664(1): RET
00004670(7): LEA RAX,[0x2196a0]
00004677(3): TEST RDI,RDI
0000467a(4): CMOVZ RDI,RAX
0000467e(3): MOV EAX,dword ptr [RDI + 0x4]
00004681(3): MOV dword ptr [RDI + 0x4],ESI
00004684(1): RET
00004690(7): LEA RAX,[0x2196a0]
00004697(3): TEST RDI,RDI
0000469a(4): CMOVZ RDI,RAX
0000469e(3): TEST RSI,RSI
000046a1(6): MOV dword ptr [RDI],0xa
000046a7(2): JZ 0x000046b7
000046a9(3): TEST RDX,RDX
000046ac(2): JZ 0x000046b7
000046ae(4): MOV qword ptr [RDI + 0x28],RSI
000046b2(4): MOV qword ptr [RDI + 0x30],RDX
000046b6(1): RET
000046b7(4): SUB RSP,0x8
000046bb(5): CALL 0x000018e0
000046c0(2): PUSH R15
000046c2(2): PUSH R14
000046c4(7): LEA RAX,[0x2196a0]
000046cb(2): PUSH R13
000046cd(2): PUSH R12
000046cf(3): MOV R13,RDI
000046d2(1): PUSH RBP
000046d3(1): PUSH RBX
000046d4(3): MOV RBX,R8
000046d7(3): MOV R14,RSI
000046da(3): MOV R15,RDX
000046dd(4): SUB RSP,0x18
000046e1(3): TEST R8,R8
000046e4(4): CMOVZ RBX,RAX
000046e8(5): MOV qword ptr [RSP + 0x8],RCX
000046ed(5): CALL 0x000018f0
000046f2(3): MOV R12D,dword ptr [RAX]
000046f5(3): MOV RBP,RAX
000046f8(4): LEA RAX,[RBX + 0x8]
000046fc(4): SUB RSP,0x8
00004700(4): MOV R9D,dword ptr [RBX + 0x4]
00004704(3): PUSH qword ptr [RBX + 0x30]
00004707(3): MOV R8D,dword ptr [RBX]
0000470a(3): PUSH qword ptr [RBX + 0x28]
0000470d(3): MOV RDX,R15
00004710(1): PUSH RAX
00004711(5): MOV RCX,qword ptr [RSP + 0x28]
00004716(3): MOV RSI,R14
00004719(3): MOV RDI,R13
0000471c(5): CALL 0x000031c0
00004721(4): MOV dword ptr [RBP],R12D
00004725(4): ADD RSP,0x38
00004729(1): POP RBX
0000472a(1): POP RBP
0000472b(2): POP R12
0000472d(2): POP R13
0000472f(2): POP R14
00004731(2): POP R15
00004733(1): RET
00004740(2): PUSH R15
00004742(2): PUSH R14
00004744(7): LEA RAX,[0x2196a0]
0000474b(2): PUSH R13
0000474d(2): PUSH R12
0000474f(3): MOV R12,RDX
00004752(1): PUSH RBP
00004753(1): PUSH RBX
00004754(3): MOV RBX,RCX
00004757(3): MOV R14,RDI
0000475a(3): MOV R15,RSI
0000475d(4): SUB RSP,0x38
00004761(3): TEST RCX,RCX
00004764(4): CMOVZ RBX,RAX
00004768(2): XOR EBP,EBP
0000476a(5): CALL 0x000018f0
0000476f(3): TEST R12,R12
00004772(3): MOV R13,RAX
00004775(2): MOV EAX,dword ptr [RAX]
00004777(4): SETZ BPL
0000477b(3): OR EBP,dword ptr [RBX + 0x4]
0000477e(4): LEA R10,[RBX + 0x8]
00004782(4): SUB RSP,0x8
00004786(3): MOV R8D,dword ptr [RBX]
00004789(3): MOV RCX,R15
0000478c(4): MOV dword ptr [RSP + 0x14],EAX
00004790(3): PUSH qword ptr [RBX + 0x30]
00004793(3): MOV RDX,R14
00004796(3): PUSH qword ptr [RBX + 0x28]
00004799(2): PUSH R10
0000479b(2): XOR ESI,ESI
0000479d(3): MOV R9D,EBP
000047a0(2): XOR EDI,EDI
000047a2(5): MOV qword ptr [RSP + 0x40],R10
000047a7(5): CALL 0x000031c0
000047ac(4): LEA RSI,[RAX + 0x1]
000047b0(5): MOV qword ptr [RSP + 0x48],RAX
000047b5(4): ADD RSP,0x20
000047b9(3): MOV RDI,RSI
000047bc(5): MOV qword ptr [RSP + 0x18],RSI
000047c1(5): CALL 0x00005380
000047c6(5): MOV qword ptr [RSP + 0x10],RAX
000047cb(4): SUB RSP,0x8
000047cf(3): PUSH qword ptr [RBX + 0x30]
000047d2(3): PUSH qword ptr [RBX + 0x28]
000047d5(5): MOV R10,qword ptr [RSP + 0x38]
000047da(3): MOV R9D,EBP
000047dd(3): MOV R8D,dword ptr [RBX]
000047e0(3): MOV RCX,R15
000047e3(3): MOV RDX,R14
000047e6(3): MOV RDI,RAX
000047e9(2): PUSH R10
000047eb(5): MOV RSI,qword ptr [RSP + 0x38]
000047f0(5): CALL 0x000031c0
000047f5(4): MOV EAX,dword ptr [RSP + 0x2c]
000047f9(4): ADD RSP,0x20
000047fd(3): TEST R12,R12
00004800(4): MOV dword ptr [R13],EAX
00004804(2): JZ 0x0000480f
00004806(5): MOV R11,qword ptr [RSP + 0x28]
0000480b(4): MOV qword ptr [R12],R11
0000480f(5): MOV RAX,qword ptr [RSP + 0x10]
00004814(4): ADD RSP,0x38
00004818(1): POP RBX
00004819(1): POP RBP
0000481a(2): POP R12
0000481c(2): POP R13
0000481e(2): POP R14
00004820(2): POP R15
00004822(1): RET
00004830(3): MOV RCX,RDX
00004833(2): XOR EDX,EDX
00004835(5): JMP 0x00004740
00004840(6): MOV EAX,dword ptr [0x002190b8]
00004846(2): PUSH R12
00004848(7): MOV R12,qword ptr [0x002190c0]
0000484f(1): PUSH RBP
00004850(1): PUSH RBX
00004851(3): CMP EAX,0x1
00004854(2): JLE 0x00004881
00004856(3): SUB EAX,0x2
00004859(5): LEA RBX,[R12 + 0x18]
0000485e(4): SHL RAX,0x4
00004862(5): LEA RBP,[R12 + RAX*0x1 + 0x28]
00004867(9): NOP word ptr [RAX + RAX*0x1]
00004870(3): MOV RDI,qword ptr [RBX]
00004873(4): ADD RBX,0x10
00004877(5): CALL 0x000018d0
0000487c(3): CMP RBX,RBP
0000487f(2): JNZ 0x00004870
00004881(5): MOV RDI,qword ptr [R12 + 0x8]
00004886(7): LEA RBX,[0x2195a0]
0000488d(3): CMP RDI,RBX
00004890(2): JZ 0x000048a9
00004892(5): CALL 0x000018d0
00004897(11): MOV qword ptr [0x002190d0],0x100
000048a2(7): MOV qword ptr [0x002190d8],RBX
000048a9(7): LEA RBX,[0x2190d0]
000048b0(3): CMP R12,RBX
000048b3(2): JZ 0x000048c4
000048b5(3): MOV RDI,R12
000048b8(5): CALL 0x000018d0
000048bd(7): MOV qword ptr [0x002190c0],RBX
000048c4(1): POP RBX
000048c5(10): MOV dword ptr [0x002190b8],0x1
000048cf(1): POP RBP
000048d0(2): POP R12
000048d2(1): RET
000048e0(7): LEA RCX,[0x2196a0]
000048e7(7): MOV RDX,-0x1
000048ee(5): JMP 0x00004400
00004900(7): LEA RCX,[0x2196a0]
00004907(5): JMP 0x00004400
00004910(7): LEA RCX,[0x2196a0]
00004917(3): MOV RSI,RDI
0000491a(7): MOV RDX,-0x1
00004921(2): XOR EDI,EDI
00004923(5): JMP 0x00004400
00004930(7): LEA RCX,[0x2196a0]
00004937(3): MOV RDX,RSI
0000493a(3): MOV RSI,RDI
0000493d(2): XOR EDI,EDI
0000493f(5): JMP 0x00004400
00004950(4): SUB RSP,0x48
00004954(3): MOV RAX,RDX
00004957(9): MOV RDX,qword ptr FS:[0x28]
00004960(5): MOV qword ptr [RSP + 0x38],RDX
00004965(2): XOR EDX,EDX
00004967(3): CMP ESI,0xa
0000496a(2): JZ 0x000049d4
0000496c(3): MOV dword ptr [RSP],ESI
0000496f(3): MOV RCX,RSP
00004972(7): MOV RDX,-0x1
00004979(3): MOV RSI,RAX
0000497c(9): MOV qword ptr [RSP + 0x4],0x0
00004985(9): MOV qword ptr [RSP + 0xc],0x0
0000498e(9): MOV qword ptr [RSP + 0x14],0x0
00004997(9): MOV qword ptr [RSP + 0x1c],0x0
000049a0(9): MOV qword ptr [RSP + 0x24],0x0
000049a9(9): MOV qword ptr [RSP + 0x2c],0x0
000049b2(8): MOV dword ptr [RSP + 0x34],0x0
000049ba(5): CALL 0x00004400
000049bf(5): MOV RCX,qword ptr [RSP + 0x38]
000049c4(9): XOR RCX,qword ptr FS:[0x28]
000049cd(2): JNZ 0x000049d9
000049cf(4): ADD RSP,0x48
000049d3(1): RET
000049d4(5): CALL 0x000018e0
000049d9(5): CALL 0x000019e0
000049de(2): NOP
000049e0(4): SUB RSP,0x48
000049e4(3): MOV RAX,RDX
000049e7(3): MOV RDX,RCX
000049ea(9): MOV RCX,qword ptr FS:[0x28]
000049f3(5): MOV qword ptr [RSP + 0x38],RCX
000049f8(2): XOR ECX,ECX
000049fa(3): CMP ESI,0xa
000049fd(2): JZ 0x00004a60
000049ff(3): MOV dword ptr [RSP],ESI
00004a02(3): MOV RCX,RSP
00004a05(3): MOV RSI,RAX
00004a08(9): MOV qword ptr [RSP + 0x4],0x0
00004a11(9): MOV qword ptr [RSP + 0xc],0x0
00004a1a(9): MOV qword ptr [RSP + 0x14],0x0
00004a23(9): MOV qword ptr [RSP + 0x1c],0x0
00004a2c(9): MOV qword ptr [RSP + 0x24],0x0
00004a35(9): MOV qword ptr [RSP + 0x2c],0x0
00004a3e(8): MOV dword ptr [RSP + 0x34],0x0
00004a46(5): CALL 0x00004400
00004a4b(5): MOV RDX,qword ptr [RSP + 0x38]
00004a50(9): XOR RDX,qword ptr FS:[0x28]
00004a59(2): JNZ 0x00004a65
00004a5b(4): ADD RSP,0x48
00004a5f(1): RET
00004a60(5): CALL 0x000018e0
00004a65(5): CALL 0x000019e0
00004a6a(6): NOP word ptr [RAX + RAX*0x1]
00004a70(3): MOV RDX,RSI
00004a73(2): MOV ESI,EDI
00004a75(2): XOR EDI,EDI
00004a77(5): JMP 0x00004950
00004a80(3): MOV RCX,RDX
00004a83(3): MOV RDX,RSI
00004a86(2): MOV ESI,EDI
00004a88(2): XOR EDI,EDI
00004a8a(5): JMP 0x000049e0
00004a90(4): SUB RSP,0x48
00004a94(2): MOV ECX,EDX
00004a96(9): MOV RAX,qword ptr FS:[0x28]
00004a9f(5): MOV qword ptr [RSP + 0x38],RAX
00004aa4(2): XOR EAX,EAX
00004aa6(7): MOV RAX,qword ptr [0x002196d0]
00004aad(3): MOV R8,RSP
00004ab0(3): AND ECX,0x1f
00004ab3(8): MOVDQA XMM0,xmmword ptr [0x002196a0]
00004abb(5): MOV qword ptr [RSP + 0x30],RAX
00004ac0(2): MOV EAX,EDX
00004ac2(4): MOVAPS xmmword ptr [RSP],XMM0
00004ac6(3): SHR AL,0x5
00004ac9(3): MOVZX EAX,AL
00004acc(5): LEA R9,[R8 + RAX*0x4 + 0x8]
00004ad1(8): MOVDQA XMM0,xmmword ptr [0x002196b0]
00004ad9(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00004ade(8): MOVDQA XMM0,xmmword ptr [0x002196c0]
00004ae6(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00004aeb(3): MOV EDX,dword ptr [R9]
00004aee(2): MOV EAX,EDX
00004af0(2): SHR EAX,CL
00004af2(2): NOT EAX
00004af4(3): AND EAX,0x1
00004af7(2): SHL EAX,CL
00004af9(3): MOV RCX,R8
00004afc(2): XOR EAX,EDX
00004afe(3): MOV RDX,RSI
00004b01(3): MOV RSI,RDI
00004b04(3): MOV dword ptr [R9],EAX
00004b07(2): XOR EDI,EDI
00004b09(5): CALL 0x00004400
00004b0e(5): MOV RSI,qword ptr [RSP + 0x38]
00004b13(9): XOR RSI,qword ptr FS:[0x28]
00004b1c(2): JNZ 0x00004b23
00004b1e(4): ADD RSP,0x48
00004b22(1): RET
00004b23(5): CALL 0x000019e0
00004b28(8): NOP dword ptr [RAX + RAX*0x1]
00004b30(4): MOVSX EDX,SIL
00004b34(7): MOV RSI,-0x1
00004b3b(5): JMP 0x00004a90
00004b40(5): MOV EDX,0x3a
00004b45(7): MOV RSI,-0x1
00004b4c(5): JMP 0x00004a90
00004b60(5): MOV EDX,0x3a
00004b65(5): JMP 0x00004a90
00004b70(4): SUB RSP,0x48
00004b74(3): MOV RAX,RDX
00004b77(9): MOV RDX,qword ptr FS:[0x28]
00004b80(5): MOV qword ptr [RSP + 0x38],RDX
00004b85(2): XOR EDX,EDX
00004b87(3): CMP ESI,0xa
00004b8a(2): JZ 0x00004bf4
00004b8c(3): MOV dword ptr [RSP],ESI
00004b8f(3): MOV RCX,RSP
00004b92(7): MOV RDX,-0x1
00004b99(3): MOV RSI,RAX
00004b9c(9): MOV qword ptr [RSP + 0x4],0x0
00004ba5(9): MOV qword ptr [RSP + 0xc],0x4000000
00004bae(9): MOV qword ptr [RSP + 0x14],0x0
00004bb7(9): MOV qword ptr [RSP + 0x1c],0x0
00004bc0(9): MOV qword ptr [RSP + 0x24],0x0
00004bc9(9): MOV qword ptr [RSP + 0x2c],0x0
00004bd2(8): MOV dword ptr [RSP + 0x34],0x0
00004bda(5): CALL 0x00004400
00004bdf(5): MOV RCX,qword ptr [RSP + 0x38]
00004be4(9): XOR RCX,qword ptr FS:[0x28]
00004bed(2): JNZ 0x00004bf9
00004bef(4): ADD RSP,0x48
00004bf3(1): RET
00004bf4(5): CALL 0x000018e0
00004bf9(5): CALL 0x000019e0
00004bfe(2): NOP
00004c00(4): SUB RSP,0x48
00004c04(3): MOV R9,RCX
00004c07(7): MOV RCX,qword ptr [0x002196d0]
00004c0e(8): MOVDQA XMM0,xmmword ptr [0x002196a0]
00004c16(9): MOV RAX,qword ptr FS:[0x28]
00004c1f(5): MOV qword ptr [RSP + 0x38],RAX
00004c24(2): XOR EAX,EAX
00004c26(4): MOVAPS xmmword ptr [RSP],XMM0
00004c2a(3): TEST RSI,RSI
00004c2d(5): MOV qword ptr [RSP + 0x30],RCX
00004c32(7): MOV dword ptr [RSP],0xa
00004c39(8): MOVDQA XMM0,xmmword ptr [0x002196b0]
00004c41(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00004c46(8): MOVDQA XMM0,xmmword ptr [0x002196c0]
00004c4e(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00004c53(2): JZ 0x00004c87
00004c55(3): TEST RDX,RDX
00004c58(2): JZ 0x00004c87
00004c5a(5): MOV qword ptr [RSP + 0x28],RSI
00004c5f(5): MOV qword ptr [RSP + 0x30],RDX
00004c64(3): MOV RCX,RSP
00004c67(3): MOV RDX,R8
00004c6a(3): MOV RSI,R9
00004c6d(5): CALL 0x00004400
00004c72(5): MOV RDI,qword ptr [RSP + 0x38]
00004c77(9): XOR RDI,qword ptr FS:[0x28]
00004c80(2): JNZ 0x00004c8c
00004c82(4): ADD RSP,0x48
00004c86(1): RET
00004c87(5): CALL 0x000018e0
00004c8c(5): CALL 0x000019e0
00004c91(5): NOP dword ptr [RAX + RAX*0x1]
00004c96(10): NOP word ptr CS:[RAX + RAX*0x1]
00004ca0(7): MOV R8,-0x1
00004ca7(5): JMP 0x00004c00
00004cb0(3): MOV RCX,RDX
00004cb3(7): MOV R8,-0x1
00004cba(3): MOV RDX,RSI
00004cbd(3): MOV RSI,RDI
00004cc0(2): XOR EDI,EDI
00004cc2(5): JMP 0x00004c00
00004cd0(3): MOV R8,RCX
00004cd3(3): MOV RCX,RDX
00004cd6(3): MOV RDX,RSI
00004cd9(3): MOV RSI,RDI
00004cdc(2): XOR EDI,EDI
00004cde(5): JMP 0x00004c00
00004cf0(7): LEA RCX,[0x219080]
00004cf7(5): JMP 0x00004400
00004d00(7): LEA RCX,[0x219080]
00004d07(3): MOV RDX,RSI
00004d0a(3): MOV RSI,RDI
00004d0d(2): XOR EDI,EDI
00004d0f(5): JMP 0x00004400
00004d20(7): LEA RCX,[0x219080]
00004d27(7): MOV RDX,-0x1
00004d2e(5): JMP 0x00004400
00004d40(7): LEA RCX,[0x219080]
00004d47(3): MOV RSI,RDI
00004d4a(7): MOV RDX,-0x1
00004d51(2): XOR EDI,EDI
00004d53(5): JMP 0x00004400
00004d60(2): PUSH R15
00004d62(2): PUSH R14
00004d64(2): PUSH R13
00004d66(2): PUSH R12
00004d68(3): MOV R12,R9
00004d6b(1): PUSH RBP
00004d6c(1): PUSH RBX
00004d6d(3): MOV RBP,RDI
00004d70(3): MOV RBX,R8
00004d73(4): SUB RSP,0x28
00004d77(3): TEST RSI,RSI
00004d7a(6): JZ 0x00004e98
00004d80(3): MOV R8,RDX
00004d83(7): LEA RDX,[0x15388]
00004d8a(3): MOV R9,RCX
00004d8d(2): XOR EAX,EAX
00004d8f(3): MOV RCX,RSI
00004d92(5): MOV ESI,0x1
00004d97(5): CALL 0x00001c30
00004d9c(7): LEA RSI,[0x1539b]
00004da3(2): XOR EDI,EDI
00004da5(5): MOV EDX,0x5
00004daa(5): CALL 0x000019b0
00004daf(7): LEA RDX,[0x156c0]
00004db6(3): MOV RCX,RAX
00004db9(6): MOV R8D,0x7e3
00004dbf(5): MOV ESI,0x1
00004dc4(3): MOV RDI,RBP
00004dc7(2): XOR EAX,EAX
00004dc9(5): CALL 0x00001c30
00004dce(7): LEA RSI,[0x15428]
00004dd5(2): XOR EDI,EDI
00004dd7(5): MOV EDX,0x5
00004ddc(5): CALL 0x000019b0
00004de1(3): MOV RSI,RBP
00004de4(3): MOV RDI,RAX
00004de7(5): CALL 0x00001aa0
00004dec(4): CMP R12,0x9
00004df0(6): JA 0x00005130
00004df6(7): LEA RDX,[0x15684]
00004dfd(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
00004e01(3): ADD RAX,RDX
00004e04(2): JMP RAX
00004e10(4): MOV R9,qword ptr [RBX + 0x38]
00004e14(4): MOV RAX,qword ptr [RBX + 0x10]
00004e18(7): LEA RSI,[0x15598]
00004e1f(4): MOV R8,qword ptr [RBX + 0x8]
00004e23(5): MOV EDX,0x5
00004e28(2): XOR EDI,EDI
00004e2a(4): MOV R13,qword ptr [RBX + 0x30]
00004e2e(4): MOV R12,qword ptr [RBX + 0x28]
00004e32(5): MOV qword ptr [RSP + 0x10],R9
00004e37(4): MOV R15,qword ptr [RBX + 0x20]
00004e3b(4): MOV R14,qword ptr [RBX + 0x18]
00004e3f(4): MOV qword ptr [RSP],RAX
00004e43(5): MOV qword ptr [RSP + 0x8],R8
00004e48(3): MOV RBX,qword ptr [RBX]
00004e4b(5): CALL 0x000019b0
00004e50(4): SUB RSP,0x8
00004e54(5): MOV R9,qword ptr [RSP + 0x18]
00004e59(3): MOV RDX,RAX
00004e5c(3): MOV RCX,RBX
00004e5f(5): MOV ESI,0x1
00004e64(3): MOV RDI,RBP
00004e67(2): XOR EAX,EAX
00004e69(2): PUSH R9
00004e6b(2): PUSH R13
00004e6d(2): PUSH R12
00004e6f(2): PUSH R15
00004e71(2): PUSH R14
00004e73(5): MOV R9,qword ptr [RSP + 0x30]
00004e78(5): MOV R8,qword ptr [RSP + 0x38]
00004e7d(5): CALL 0x00001c30
00004e82(4): ADD RSP,0x30
00004e86(4): ADD RSP,0x28
00004e8a(1): POP RBX
00004e8b(1): POP RBP
00004e8c(2): POP R12
00004e8e(2): POP R13
00004e90(2): POP R14
00004e92(2): POP R15
00004e94(1): RET
00004e98(3): MOV R8,RCX
00004e9b(3): MOV RCX,RDX
00004e9e(7): LEA RDX,[0x15394]
00004ea5(5): MOV ESI,0x1
00004eaa(2): XOR EAX,EAX
00004eac(5): CALL 0x00001c30
00004eb1(5): JMP 0x00004d9c
00004ec0(4): MOV R10,qword ptr [RBX + 0x40]
00004ec4(4): MOV R9,qword ptr [RBX + 0x38]
00004ec8(7): LEA RSI,[0x155c8]
00004ecf(4): MOV RAX,qword ptr [RBX + 0x10]
00004ed3(4): MOV R8,qword ptr [RBX + 0x8]
00004ed7(5): MOV EDX,0x5
00004edc(4): MOV R13,qword ptr [RBX + 0x30]
00004ee0(4): MOV R12,qword ptr [RBX + 0x28]
00004ee4(4): MOV R15,qword ptr [RBX + 0x20]
00004ee8(4): MOV R14,qword ptr [RBX + 0x18]
00004eec(3): MOV RBX,qword ptr [RBX]
00004eef(5): MOV qword ptr [RSP + 0x18],R10
00004ef4(5): MOV qword ptr [RSP + 0x10],R9
00004ef9(4): MOV qword ptr [RSP],RAX
00004efd(5): MOV qword ptr [RSP + 0x8],R8
00004f02(2): XOR EDI,EDI
00004f04(5): CALL 0x000019b0
00004f09(5): MOV R10,qword ptr [RSP + 0x18]
00004f0e(2): PUSH R10
00004f10(5): JMP 0x00004e54
00004f18(3): MOV RBX,qword ptr [RBX]
00004f1b(7): LEA RSI,[0x1539f]
00004f22(5): MOV EDX,0x5
00004f27(2): XOR EDI,EDI
00004f29(5): CALL 0x000019b0
00004f2e(4): ADD RSP,0x28
00004f32(3): MOV RCX,RBX
00004f35(3): MOV RDI,RBP
00004f38(1): POP RBX
00004f39(1): POP RBP
00004f3a(2): POP R12
00004f3c(2): POP R13
00004f3e(2): POP R14
00004f40(2): POP R15
00004f42(3): MOV RDX,RAX
00004f45(5): MOV ESI,0x1
00004f4a(2): XOR EAX,EAX
00004f4c(5): JMP 0x00001c30
00004f58(4): MOV R12,qword ptr [RBX + 0x8]
00004f5c(7): LEA RSI,[0x153af]
00004f63(3): MOV RBX,qword ptr [RBX]
00004f66(5): MOV EDX,0x5
00004f6b(2): XOR EDI,EDI
00004f6d(5): CALL 0x000019b0
00004f72(4): ADD RSP,0x28
00004f76(3): MOV R8,R12
00004f79(3): MOV RCX,RBX
00004f7c(3): MOV RDI,RBP
00004f7f(3): MOV RDX,RAX
00004f82(5): MOV ESI,0x1
00004f87(1): POP RBX
00004f88(1): POP RBP
00004f89(2): POP R12
00004f8b(2): POP R13
00004f8d(2): POP R14
00004f8f(2): POP R15
00004f91(2): XOR EAX,EAX
00004f93(5): JMP 0x00001c30
00004fa0(4): MOV R13,qword ptr [RBX + 0x10]
00004fa4(4): MOV R12,qword ptr [RBX + 0x8]
00004fa8(7): LEA RSI,[0x153c6]
00004faf(3): MOV RBX,qword ptr [RBX]
00004fb2(5): MOV EDX,0x5
00004fb7(2): XOR EDI,EDI
00004fb9(5): CALL 0x000019b0
00004fbe(4): ADD RSP,0x28
00004fc2(3): MOV R9,R13
00004fc5(3): MOV R8,R12
00004fc8(3): MOV RCX,RBX
00004fcb(3): MOV RDI,RBP
00004fce(3): MOV RDX,RAX
00004fd1(1): POP RBX
00004fd2(1): POP RBP
00004fd3(2): POP R12
00004fd5(2): POP R13
00004fd7(2): POP R14
00004fd9(2): POP R15
00004fdb(5): MOV ESI,0x1
00004fe0(2): XOR EAX,EAX
00004fe2(5): JMP 0x00001c30
00004ff0(7): LEA RSI,[0x154f8]
00004ff7(5): MOV EDX,0x5
00004ffc(2): XOR EDI,EDI
00004ffe(4): MOV R14,qword ptr [RBX + 0x18]
00005002(4): MOV R13,qword ptr [RBX + 0x10]
00005006(4): MOV R12,qword ptr [RBX + 0x8]
0000500a(3): MOV RBX,qword ptr [RBX]
0000500d(5): CALL 0x000019b0
00005012(4): SUB RSP,0x8
00005016(2): PUSH R14
00005018(3): MOV RDX,RAX
0000501b(3): MOV R9,R13
0000501e(3): MOV R8,R12
00005021(3): MOV RCX,RBX
00005024(3): MOV RDI,RBP
00005027(5): MOV ESI,0x1
0000502c(2): XOR EAX,EAX
0000502e(5): CALL 0x00001c30
00005033(1): POP RAX
00005034(1): POP RDX
00005035(4): ADD RSP,0x28
00005039(1): POP RBX
0000503a(1): POP RBP
0000503b(2): POP R12
0000503d(2): POP R13
0000503f(2): POP R14
00005041(2): POP R15
00005043(1): RET
00005048(4): MOV R15,qword ptr [RBX + 0x20]
0000504c(7): LEA RSI,[0x15518]
00005053(5): MOV EDX,0x5
00005058(2): XOR EDI,EDI
0000505a(4): MOV R14,qword ptr [RBX + 0x18]
0000505e(4): MOV R13,qword ptr [RBX + 0x10]
00005062(4): MOV R12,qword ptr [RBX + 0x8]
00005066(3): MOV RBX,qword ptr [RBX]
00005069(5): CALL 0x000019b0
0000506e(2): PUSH R15
00005070(2): JMP 0x00005016
00005078(4): MOV R8,qword ptr [RBX + 0x8]
0000507c(4): MOV R12,qword ptr [RBX + 0x28]
00005080(7): LEA RSI,[0x15540]
00005087(4): MOV R15,qword ptr [RBX + 0x20]
0000508b(4): MOV R14,qword ptr [RBX + 0x18]
0000508f(5): MOV EDX,0x5
00005094(4): MOV R13,qword ptr [RBX + 0x10]
00005098(2): XOR EDI,EDI
0000509a(3): MOV RBX,qword ptr [RBX]
0000509d(4): MOV qword ptr [RSP],R8
000050a1(5): CALL 0x000019b0
000050a6(4): SUB RSP,0x8
000050aa(3): MOV R9,R13
000050ad(2): PUSH R12
000050af(2): PUSH R15
000050b1(2): PUSH R14
000050b3(5): MOV R8,qword ptr [RSP + 0x20]
000050b8(3): MOV RCX,RBX
000050bb(3): MOV RDX,RAX
000050be(3): MOV RDI,RBP
000050c1(5): MOV ESI,0x1
000050c6(2): XOR EAX,EAX
000050c8(5): CALL 0x00001c30
000050cd(4): ADD RSP,0x20
000050d1(4): ADD RSP,0x28
000050d5(1): POP RBX
000050d6(1): POP RBP
000050d7(2): POP R12
000050d9(2): POP R13
000050db(2): POP R14
000050dd(2): POP R15
000050df(1): RET
000050e0(4): MOV R9,qword ptr [RBX + 0x10]
000050e4(4): MOV R13,qword ptr [RBX + 0x30]
000050e8(7): LEA RSI,[0x15568]
000050ef(4): MOV R12,qword ptr [RBX + 0x28]
000050f3(4): MOV R15,qword ptr [RBX + 0x20]
000050f7(5): MOV EDX,0x5
000050fc(4): MOV R14,qword ptr [RBX + 0x18]
00005100(4): MOV R8,qword ptr [RBX + 0x8]
00005104(2): XOR EDI,EDI
00005106(5): MOV qword ptr [RSP + 0x8],R9
0000510b(3): MOV RBX,qword ptr [RBX]
0000510e(4): MOV qword ptr [RSP],R8
00005112(5): CALL 0x000019b0
00005117(2): PUSH R13
00005119(2): PUSH R12
0000511b(2): PUSH R15
0000511d(2): PUSH R14
0000511f(5): MOV R9,qword ptr [RSP + 0x28]
00005124(2): JMP 0x000050b3
00005130(4): MOV R10,qword ptr [RBX + 0x40]
00005134(4): MOV R9,qword ptr [RBX + 0x38]
00005138(5): MOV EDX,0x5
0000513d(4): MOV RAX,qword ptr [RBX + 0x10]
00005141(4): MOV R8,qword ptr [RBX + 0x8]
00005145(7): LEA RSI,[0x15600]
0000514c(4): MOV R13,qword ptr [RBX + 0x30]
00005150(4): MOV R12,qword ptr [RBX + 0x28]
00005154(4): MOV R15,qword ptr [RBX + 0x20]
00005158(4): MOV R14,qword ptr [RBX + 0x18]
0000515c(5): MOV qword ptr [RSP + 0x18],R10
00005161(5): MOV qword ptr [RSP + 0x10],R9
00005166(4): MOV qword ptr [RSP],RAX
0000516a(5): MOV qword ptr [RSP + 0x8],R8
0000516f(3): MOV RBX,qword ptr [RBX]
00005172(5): JMP 0x00004f02
00005180(3): XOR R9D,R9D
00005183(4): CMP qword ptr [R8],0x0
00005187(2): JZ 0x0000519b
00005189(7): NOP dword ptr [RAX]
00005190(4): ADD R9,0x1
00005194(5): CMP qword ptr [R8 + R9*0x8],0x0
00005199(2): JNZ 0x00005190
0000519b(5): JMP 0x00004d60
000051a0(4): SUB RSP,0x68
000051a4(3): MOV R10,R8
000051a7(3): XOR R9D,R9D
000051aa(9): MOV RAX,qword ptr FS:[0x28]
000051b3(5): MOV qword ptr [RSP + 0x58],RAX
000051b8(2): XOR EAX,EAX
000051ba(3): MOV R8,RSP
000051bd(3): NOP dword ptr [RAX]
000051c0(3): MOV EAX,dword ptr [R10]
000051c3(3): CMP EAX,0x2f
000051c6(2): JA 0x0000520a
000051c8(3): MOV R11D,EAX
000051cb(4): ADD R11,qword ptr [R10 + 0x10]
000051cf(3): ADD EAX,0x8
000051d2(3): MOV dword ptr [R10],EAX
000051d5(3): MOV RAX,qword ptr [R11]
000051d8(3): TEST RAX,RAX
000051db(4): MOV qword ptr [R8 + R9*0x8],RAX
000051df(2): JZ 0x000051eb
000051e1(4): ADD R9,0x1
000051e5(4): CMP R9,0xa
000051e9(2): JNZ 0x000051c0
000051eb(5): CALL 0x00004d60
000051f0(5): MOV RAX,qword ptr [RSP + 0x58]
000051f5(9): XOR RAX,qword ptr FS:[0x28]
000051fe(2): JNZ 0x00005205
00005200(4): ADD RSP,0x68
00005204(1): RET
00005205(5): CALL 0x000019e0
0000520a(4): MOV R11,qword ptr [R10 + 0x8]
0000520e(4): LEA RAX,[R11 + 0x8]
00005212(4): MOV qword ptr [R10 + 0x8],RAX
00005216(2): JMP 0x000051d5
00005220(1): PUSH RBP
00005221(1): PUSH RBX
00005222(6): MOV R10D,0x20
00005228(3): XOR R11D,R11D
0000522b(7): SUB RSP,0xb8
00005232(9): MOV RAX,qword ptr FS:[0x28]
0000523b(5): MOV qword ptr [RSP + 0x78],RAX
00005240(2): XOR EAX,EAX
00005242(8): LEA RAX,[0xd0 + RSP]
0000524a(8): MOV qword ptr [0xa0 + RSP],R8
00005252(8): LEA RBX,[0xd0 + RSP]
0000525a(5): LEA R8,[RSP + 0x20]
0000525f(8): MOV qword ptr [0xa8 + RSP],R9
00005267(8): MOV dword ptr [RSP + 0x8],0x20
0000526f(5): MOV qword ptr [RSP + 0x10],RAX
00005274(8): LEA RAX,[0x80 + RSP]
0000527c(3): XOR R9D,R9D
0000527f(5): MOV qword ptr [RSP + 0x18],RAX
00005284(3): MOV RBP,RAX
00005287(9): NOP word ptr [RAX + RAX*0x1]
00005290(4): CMP R10D,0x2f
00005294(2): JA 0x000052ec
00005296(3): MOV EAX,R10D
00005299(6): MOV R11D,0x1
0000529f(4): ADD R10D,0x8
000052a3(3): ADD RAX,RBP
000052a6(3): MOV RAX,qword ptr [RAX]
000052a9(3): TEST RAX,RAX
000052ac(4): MOV qword ptr [R8 + R9*0x8],RAX
000052b0(2): JZ 0x000052bc
000052b2(4): ADD R9,0x1
000052b6(4): CMP R9,0xa
000052ba(2): JNZ 0x00005290
000052bc(3): TEST R11B,R11B
000052bf(2): JNZ 0x000052e5
000052c1(5): CALL 0x00004d60
000052c6(5): MOV RAX,qword ptr [RSP + 0x78]
000052cb(9): XOR RAX,qword ptr FS:[0x28]
000052d4(2): JNZ 0x000052e0
000052d6(7): ADD RSP,0xb8
000052dd(1): POP RBX
000052de(1): POP RBP
000052df(1): RET
000052e0(5): CALL 0x000019e0
000052e5(5): MOV dword ptr [RSP + 0x8],R10D
000052ea(2): JMP 0x000052c1
000052ec(3): MOV RAX,RBX
000052ef(4): ADD RBX,0x8
000052f3(2): JMP 0x000052a6
00005300(1): PUSH RBX
00005301(7): LEA RSI,[0x153e2]
00005308(5): MOV EDX,0x5
0000530d(2): XOR EDI,EDI
0000530f(5): CALL 0x000019b0
00005314(7): LEA RDX,[0x153f7]
0000531b(3): MOV RSI,RAX
0000531e(5): MOV EDI,0x1
00005323(2): XOR EAX,EAX
00005325(5): CALL 0x00001b80
0000532a(7): LEA RSI,[0x1540d]
00005331(5): MOV EDX,0x5
00005336(2): XOR EDI,EDI
00005338(5): CALL 0x000019b0
0000533d(7): LEA RCX,[0x14ca8]
00005344(7): LEA RDX,[0x14432]
0000534b(3): MOV RSI,RAX
0000534e(5): MOV EDI,0x1
00005353(2): XOR EAX,EAX
00005355(5): CALL 0x00001b80
0000535a(7): MOV RBX,qword ptr [0x002190e8]
00005361(7): LEA RSI,[0x15640]
00005368(2): XOR EDI,EDI
0000536a(5): MOV EDX,0x5
0000536f(5): CALL 0x000019b0
00005374(3): MOV RSI,RBX
00005377(3): MOV RDI,RAX
0000537a(1): POP RBX
0000537b(5): JMP 0x00001aa0
00005380(1): PUSH RBX
00005381(3): MOV RBX,RDI
00005384(5): CALL 0x00001b00
00005389(3): TEST RAX,RAX
0000538c(2): JNZ 0x00005393
0000538e(3): TEST RBX,RBX
00005391(2): JNZ 0x00005395
00005393(1): POP RBX
00005394(1): RET
00005395(5): CALL 0x000055d0
0000539a(6): NOP word ptr [RAX + RAX*0x1]
000053a0(3): MOV RAX,RDI
000053a3(3): MUL RSI
000053a6(3): MOV RDI,RAX
000053a9(3): SETO AL
000053ac(3): TEST RDI,RDI
000053af(2): JS 0x000053bb
000053b1(3): MOVZX EAX,AL
000053b4(3): TEST RAX,RAX
000053b7(2): JNZ 0x000053bb
000053b9(2): JMP 0x00005380
000053bb(4): SUB RSP,0x8
000053bf(5): CALL 0x000055d0
000053c4(2): NOP
000053c6(10): NOP word ptr CS:[RAX + RAX*0x1]
000053d0(2): JMP 0x00005380
000053e0(3): TEST RSI,RSI
000053e3(1): PUSH RBX
000053e4(3): MOV RBX,RSI
000053e7(2): JNZ 0x000053ee
000053e9(3): TEST RDI,RDI
000053ec(2): JNZ 0x00005408
000053ee(3): MOV RSI,RBX
000053f1(5): CALL 0x00001b60
000053f6(3): TEST RAX,RAX
000053f9(2): JNZ 0x00005400
000053fb(3): TEST RBX,RBX
000053fe(2): JNZ 0x00005411
00005400(1): POP RBX
00005401(1): RET
00005408(5): CALL 0x000018d0
0000540d(2): XOR EAX,EAX
0000540f(1): POP RBX
00005410(1): RET
00005411(5): CALL 0x000055d0
00005416(10): NOP word ptr CS:[RAX + RAX*0x1]
00005420(3): MOV RAX,RSI
00005423(3): MUL RDX
00005426(3): MOV RSI,RAX
00005429(3): SETO AL
0000542c(3): TEST RSI,RSI
0000542f(2): JS 0x0000543b
00005431(3): MOVZX EAX,AL
00005434(3): TEST RAX,RAX
00005437(2): JNZ 0x0000543b
00005439(2): JMP 0x000053e0
0000543b(4): SUB RSP,0x8
0000543f(5): CALL 0x000055d0
00005444(2): NOP
00005446(10): NOP word ptr CS:[RAX + RAX*0x1]
00005450(3): TEST RDI,RDI
00005453(3): MOV R9,RDX
00005456(3): MOV RCX,qword ptr [RSI]
00005459(2): JZ 0x00005490
0000545b(2): XOR EDX,EDX
0000545d(10): MOV RAX,0x5555555555555554
00005467(3): DIV R9
0000546a(3): CMP RAX,RCX
0000546d(2): JBE 0x000054ab
0000546f(3): MOV RAX,RCX
00005472(3): SHR RAX,1
00005475(5): LEA RCX,[RAX + RCX*0x1 + 0x1]
0000547a(3): MOV qword ptr [RSI],RCX
0000547d(4): IMUL RCX,R9
00005481(3): MOV RSI,RCX
00005484(5): JMP 0x000053e0
00005490(3): TEST RCX,RCX
00005493(2): JZ 0x000054b8
00005495(3): MOV RAX,RCX
00005498(3): MUL R9
0000549b(3): SETO DL
0000549e(3): TEST RAX,RAX
000054a1(3): MOVZX EDX,DL
000054a4(2): JS 0x000054ab
000054a6(3): TEST RDX,RDX
000054a9(2): JZ 0x0000547a
000054ab(4): SUB RSP,0x8
000054af(5): CALL 0x000055d0
000054b4(4): NOP dword ptr [RAX]
000054b8(2): XOR EDX,EDX
000054ba(5): MOV EAX,0x80
000054bf(3): XOR R8D,R8D
000054c2(3): DIV R9
000054c5(3): TEST RAX,RAX
000054c8(4): SETZ R8B
000054cc(4): LEA RCX,[R8 + RAX*0x1]
000054d0(2): JMP 0x00005495
000054e0(3): TEST RDI,RDI
000054e3(3): MOV RAX,qword ptr [RSI]
000054e6(2): JZ 0x00005510
000054e8(10): MOV RDX,0x5555555555555553
000054f2(3): CMP RAX,RDX
000054f5(2): JA 0x00005521
000054f7(3): MOV RDX,RAX
000054fa(3): SHR RDX,1
000054fd(5): LEA RAX,[RDX + RAX*0x1 + 0x1]
00005502(3): MOV qword ptr [RSI],RAX
00005505(3): MOV RSI,RAX
00005508(5): JMP 0x000053e0
00005510(3): TEST RAX,RAX
00005513(5): MOV EDX,0x80
00005518(4): CMOVZ RAX,RDX
0000551c(3): TEST RAX,RAX
0000551f(2): JNS 0x00005502
00005521(4): SUB RSP,0x8
00005525(5): CALL 0x000055d0
0000552a(6): NOP word ptr [RAX + RAX*0x1]
00005530(1): PUSH RBX
00005531(3): MOV RBX,RDI
00005534(5): CALL 0x00005380
00005539(3): MOV RDX,RBX
0000553c(2): XOR ESI,ESI
0000553e(3): MOV RDI,RAX
00005541(1): POP RBX
00005542(5): JMP 0x00001a60
00005550(3): MOV RAX,RDI
00005553(4): SUB RSP,0x8
00005557(3): MUL RSI
0000555a(3): SETO DL
0000555d(3): TEST RAX,RAX
00005560(2): JS 0x00005579
00005562(3): MOVZX EDX,DL
00005565(3): TEST RDX,RDX
00005568(2): JNZ 0x00005579
0000556a(5): CALL 0x00001ab0
0000556f(3): TEST RAX,RAX
00005572(2): JZ 0x00005579
00005574(4): ADD RSP,0x8
00005578(1): RET
00005579(5): CALL 0x000055d0
0000557e(2): NOP
00005580(1): PUSH RBP
00005581(1): PUSH RBX
00005582(3): MOV RBP,RDI
00005585(3): MOV RDI,RSI
00005588(3): MOV RBX,RSI
0000558b(4): SUB RSP,0x8
0000558f(5): CALL 0x00005380
00005594(4): ADD RSP,0x8
00005598(3): MOV RDX,RBX
0000559b(3): MOV RSI,RBP
0000559e(1): POP RBX
0000559f(1): POP RBP
000055a0(3): MOV RDI,RAX
000055a3(5): JMP 0x00001ad0
000055b0(1): PUSH RBX
000055b1(3): MOV RBX,RDI
000055b4(5): CALL 0x000019d0
000055b9(3): MOV RDI,RBX
000055bc(4): LEA RSI,[RAX + 0x1]
000055c0(1): POP RBX
000055c1(2): JMP 0x00005580
000055d0(7): LEA RSI,[0x156ef]
000055d7(4): SUB RSP,0x8
000055db(5): MOV EDX,0x5
000055e0(2): XOR EDI,EDI
000055e2(5): CALL 0x000019b0
000055e7(6): MOV EDI,dword ptr [0x00219070]
000055ed(7): LEA RDX,[0x14e6c]
000055f4(3): MOV RCX,RAX
000055f7(2): XOR ESI,ESI
000055f9(2): XOR EAX,EAX
000055fb(5): CALL 0x00001bb0
00005605(10): NOP word ptr CS:[RAX + RAX*0x1]
0000560f(1): NOP
00005610(2): PUSH R15
00005612(2): PUSH R14
00005614(3): MOV R15,RCX
00005617(2): PUSH R13
00005619(2): PUSH R12
0000561b(3): MOV R14,RDX
0000561e(1): PUSH RBP
0000561f(1): PUSH RBX
00005620(2): MOV EDX,ESI
00005622(2): XOR ESI,ESI
00005624(3): MOV R12,RDI
00005627(3): MOV R13,R9
0000562a(4): SUB RSP,0x18
0000562e(3): MOV RCX,RSP
00005631(4): MOV EBX,dword ptr [RSP + 0x50]
00005635(9): MOV RAX,qword ptr FS:[0x28]
0000563e(5): MOV qword ptr [RSP + 0x8],RAX
00005643(2): XOR EAX,EAX
00005645(5): CALL 0x00005760
0000564a(2): TEST EAX,EAX
0000564c(6): JNZ 0x000056e0
00005652(4): MOV RBP,qword ptr [RSP]
00005656(3): CMP RBP,R14
00005659(2): JL 0x00005660
0000565b(3): CMP RBP,R15
0000565e(2): JLE 0x000056b6
00005660(5): CALL 0x000018f0
00005665(7): CMP RBP,0x3fffffff
0000566c(3): MOV R14,RAX
0000566f(6): JLE 0x00005700
00005675(7): MOV dword ptr [R14],0x4b
0000567c(3): MOV RDI,R12
0000567f(5): CALL 0x00004d40
00005684(3): MOV ESI,dword ptr [R14]
00005687(3): MOV R8,RAX
0000568a(5): MOV EAX,0x0
0000568f(7): LEA RDX,[0x14e68]
00005696(3): MOV RCX,R13
00005699(3): CMP ESI,0x16
0000569c(3): CMOVZ ESI,EAX
0000569f(2): TEST EBX,EBX
000056a1(5): MOV EAX,0x1
000056a6(3): CMOVZ EBX,EAX
000056a9(2): XOR EAX,EAX
000056ab(2): MOV EDI,EBX
000056ad(5): CALL 0x00001bb0
000056b6(5): MOV RDX,qword ptr [RSP + 0x8]
000056bb(9): XOR RDX,qword ptr FS:[0x28]
000056c4(3): MOV RAX,RBP
000056c7(2): JNZ 0x0000571c
000056c9(4): ADD RSP,0x18
000056cd(1): POP RBX
000056ce(1): POP RBP
000056cf(2): POP R12
000056d1(2): POP R13
000056d3(2): POP R14
000056d5(2): POP R15
000056d7(1): RET
000056e0(2): MOV EBP,EAX
000056e2(5): CALL 0x000018f0
000056e7(3): CMP EBP,0x1
000056ea(3): MOV R14,RAX
000056ed(2): JZ 0x00005675
000056ef(3): CMP EBP,0x3
000056f2(2): JNZ 0x0000567c
000056f4(6): MOV dword ptr [RAX],0x0
000056fa(2): JMP 0x0000567c
00005700(7): CMP RBP,0xbfffffff
00005707(5): MOV EAX,0x22
0000570c(5): MOV EDX,0x4b
00005711(3): CMOVLE EAX,EDX
00005714(3): MOV dword ptr [R14],EAX
00005717(5): JMP 0x0000567c
0000571c(5): CALL 0x000019e0
00005721(5): NOP dword ptr [RAX + RAX*0x1]
00005726(10): NOP word ptr CS:[RAX + RAX*0x1]
00005730(4): SUB RSP,0x10
00005734(2): PUSH R9
00005736(3): MOV R9,R8
00005739(3): MOV R8,RCX
0000573c(3): MOV RCX,RDX
0000573f(3): MOV RDX,RSI
00005742(5): MOV ESI,0xa
00005747(5): CALL 0x00005610
0000574c(4): ADD RSP,0x18
00005750(1): RET
00005760(2): PUSH R15
00005762(2): PUSH R14
00005764(2): PUSH R13
00005766(2): PUSH R12
00005768(1): PUSH RBP
00005769(1): PUSH RBX
0000576a(4): SUB RSP,0x28
0000576e(9): MOV RAX,qword ptr FS:[0x28]
00005777(5): MOV qword ptr [RSP + 0x18],RAX
0000577c(2): XOR EAX,EAX
0000577e(3): CMP EDX,0x24
00005781(6): JA 0x00005def
00005787(5): LEA RAX,[RSP + 0x10]
0000578c(3): TEST RSI,RSI
0000578f(3): MOV RBX,RSI
00005792(3): MOV R12,RDI
00005795(2): MOV EBP,EDX
00005797(3): MOV R14,RCX
0000579a(4): CMOVZ RBX,RAX
0000579e(3): MOV R15,R8
000057a1(5): CALL 0x000018f0
000057a6(2): XOR ECX,ECX
000057a8(2): MOV EDX,EBP
000057aa(6): MOV dword ptr [RAX],0x0
000057b0(3): MOV RSI,RBX
000057b3(3): MOV RDI,R12
000057b6(3): MOV R13,RAX
000057b9(5): CALL 0x00001960
000057be(3): MOV RCX,qword ptr [RBX]
000057c1(3): MOV RBP,RAX
000057c4(3): CMP RCX,R12
000057c7(2): JZ 0x00005828
000057c9(4): MOV EAX,dword ptr [R13]
000057cd(2): TEST EAX,EAX
000057cf(2): JNZ 0x00005810
000057d1(3): XOR R12D,R12D
000057d4(3): TEST R15,R15
000057d7(2): JZ 0x000057e6
000057d9(4): MOVZX R13D,byte ptr [RCX]
000057dd(3): TEST R13B,R13B
000057e0(6): JNZ 0x00005863
000057e6(3): MOV qword ptr [R14],RBP
000057e9(5): MOV RDI,qword ptr [RSP + 0x18]
000057ee(9): XOR RDI,qword ptr FS:[0x28]
000057f7(3): MOV EAX,R12D
000057fa(6): JNZ 0x00005e0e
00005800(4): ADD RSP,0x28
00005804(1): POP RBX
00005805(1): POP RBP
00005806(2): POP R12
00005808(2): POP R13
0000580a(2): POP R14
0000580c(2): POP R15
0000580e(1): RET
00005810(3): CMP EAX,0x22
00005813(6): MOV R12D,0x4
00005819(2): JNZ 0x000057e9
0000581b(6): MOV R12D,0x1
00005821(2): JMP 0x000057d4
00005828(3): TEST R15,R15
0000582b(6): JZ 0x00005cc0
00005831(4): MOVZX R13D,byte ptr [RCX]
00005835(5): MOV qword ptr [RSP + 0x8],RCX
0000583a(6): MOV R12D,0x4
00005840(3): TEST R13B,R13B
00005843(2): JZ 0x000057e9
00005845(4): MOVSX ESI,R13B
00005849(3): MOV RDI,R15
0000584c(5): CALL 0x00001a10
00005851(3): TEST RAX,RAX
00005854(5): MOV RCX,qword ptr [RSP + 0x8]
00005859(2): JZ 0x000057e9
0000585b(5): MOV EBP,0x1
00005860(3): XOR R12D,R12D
00005863(4): MOVSX ESI,R13B
00005867(3): MOV RDI,R15
0000586a(5): MOV qword ptr [RSP + 0x8],RCX
0000586f(5): CALL 0x00001a10
00005874(3): TEST RAX,RAX
00005877(5): MOV RCX,qword ptr [RSP + 0x8]
0000587c(2): JZ 0x000058d8
0000587e(4): LEA EAX,[R13 + -0x45]
00005882(2): CMP AL,0x2f
00005884(2): JA 0x000058e8
00005886(10): MOV RDX,0x814400308945
00005890(4): BT RDX,RAX
00005894(2): JNC 0x000058e8
00005896(5): MOV ESI,0x30
0000589b(3): MOV RDI,R15
0000589e(5): MOV qword ptr [RSP + 0x8],RCX
000058a3(5): CALL 0x00001a10
000058a8(3): TEST RAX,RAX
000058ab(5): MOV RCX,qword ptr [RSP + 0x8]
000058b0(2): JZ 0x000058e8
000058b2(4): MOVZX EAX,byte ptr [RCX + 0x1]
000058b6(2): CMP AL,0x44
000058b8(2): JZ 0x000058c6
000058ba(2): CMP AL,0x69
000058bc(6): JZ 0x00005da8
000058c2(2): CMP AL,0x42
000058c4(2): JNZ 0x000058e8
000058c6(5): MOV EDI,0x2
000058cb(5): MOV EAX,0x3e8
000058d0(2): JMP 0x000058f2
000058d8(3): MOV qword ptr [R14],RBP
000058db(4): OR R12D,0x2
000058df(5): JMP 0x000057e9
000058e8(5): MOV EDI,0x1
000058ed(5): MOV EAX,0x400
000058f2(4): SUB R13D,0x42
000058f6(4): CMP R13B,0x35
000058fa(2): JA 0x000058d8
000058fc(7): LEA RSI,[0x15748]
00005903(4): MOVZX R13D,R13B
00005907(4): MOVSXD RDX,dword ptr [RSI + R13*0x4]
0000590b(3): ADD RDX,RSI
0000590e(2): JMP RDX
00005910(10): MOV R8,-0x8000000000000000
0000591a(3): MOVSXD RSI,EAX
0000591d(3): MOV RAX,R8
00005920(2): CQO
00005922(3): IDIV RSI
00005925(3): CMP RBP,RAX
00005928(3): MOV R9,RAX
0000592b(6): JL 0x00005dd5
00005931(10): MOV R10,0x7fffffffffffffff
0000593b(3): MOV RAX,R10
0000593e(2): CQO
00005940(3): IDIV RSI
00005943(3): CMP RBP,RAX
00005946(6): JG 0x00005de2
0000594c(4): IMUL RBP,RSI
00005950(3): CMP R9,RBP
00005953(6): JG 0x00005dd5
00005959(3): CMP RAX,RBP
0000595c(6): JL 0x00005de2
00005962(4): IMUL RBP,RSI
00005966(2): XOR EAX,EAX
00005968(3): OR R12D,EAX
0000596b(5): NOP dword ptr [RAX + RAX*0x1]
00005970(3): MOVSXD RAX,EDI
00005973(3): ADD RCX,RAX
00005976(3): MOV EAX,R12D
00005979(3): OR EAX,0x2
0000597c(3): MOV qword ptr [RBX],RCX
0000597f(3): CMP byte ptr [RCX],0x0
00005982(4): CMOVNZ R12D,EAX
00005986(5): JMP 0x000057e6
00005990(10): MOV RAX,-0x4000000000000000
0000599a(3): CMP RBP,RAX
0000599d(6): JL 0x00005cd0
000059a3(10): MOV RAX,0x3fffffffffffffff
000059ad(3): CMP RBP,RAX
000059b0(6): JG 0x00005d90
000059b6(3): ADD RBP,RBP
000059b9(2): JMP 0x00005970
000059c0(10): MOV RAX,-0x40000000000000
000059ca(3): CMP RBP,RAX
000059cd(6): JL 0x00005cd0
000059d3(10): MOV RAX,0x3fffffffffffff
000059dd(3): CMP RBP,RAX
000059e0(6): JG 0x00005d90
000059e6(4): SHL RBP,0x9
000059ea(2): JMP 0x00005970
000059f0(3): MOVSXD RSI,EAX
000059f3(10): MOV RAX,-0x8000000000000000
000059fd(6): MOV R8D,0x7
00005a03(2): CQO
00005a05(3): XOR R11D,R11D
00005a08(10): MOV R9,0x7fffffffffffffff
00005a12(3): IDIV RSI
00005a15(3): MOV R10,RAX
00005a18(2): JMP 0x00005a3f
00005a20(3): MOV RAX,R9
00005a23(2): CQO
00005a25(3): IDIV RSI
00005a28(3): CMP RAX,RBP
00005a2b(6): JL 0x00005d18
00005a31(4): IMUL RBP,RSI
00005a35(4): SUB R8D,0x1
00005a39(6): JZ 0x00005b60
00005a3f(3): CMP R10,RBP
00005a42(2): JLE 0x00005a20
00005a44(6): MOV R11D,0x1
00005a4a(10): MOV RBP,-0x8000000000000000
00005a54(2): JMP 0x00005a35
00005a60(3): MOVSXD RSI,EAX
00005a63(10): MOV RAX,-0x8000000000000000
00005a6d(6): MOV R8D,0x8
00005a73(2): CQO
00005a75(3): XOR R11D,R11D
00005a78(10): MOV R9,0x7fffffffffffffff
00005a82(3): IDIV RSI
00005a85(3): MOV R10,RAX
00005a88(2): JMP 0x00005aaf
00005a90(3): MOV RAX,R9
00005a93(2): CQO
00005a95(3): IDIV RSI
00005a98(3): CMP RAX,RBP
00005a9b(6): JL 0x00005ce8
00005aa1(4): IMUL RBP,RSI
00005aa5(4): SUB R8D,0x1
00005aa9(6): JZ 0x00005b60
00005aaf(3): CMP R10,RBP
00005ab2(2): JLE 0x00005a90
00005ab4(6): MOV R11D,0x1
00005aba(10): MOV RBP,-0x8000000000000000
00005ac4(2): JMP 0x00005aa5
00005ad0(10): MOV R8,-0x8000000000000000
00005ada(3): MOVSXD RSI,EAX
00005add(3): MOV RAX,R8
00005ae0(2): CQO
00005ae2(3): IDIV RSI
00005ae5(3): CMP RBP,RAX
00005ae8(6): JL 0x00005cd0
00005aee(4): SUB R8,0x1
00005af2(3): MOV RAX,R8
00005af5(2): CQO
00005af7(3): IDIV RSI
00005afa(3): CMP RBP,RAX
00005afd(6): JG 0x00005d90
00005b03(4): IMUL RBP,RSI
00005b07(5): JMP 0x00005970
00005b10(3): MOVSXD RSI,EAX
00005b13(10): MOV RAX,-0x8000000000000000
00005b1d(6): MOV R8D,0x3
00005b23(2): CQO
00005b25(3): XOR R11D,R11D
00005b28(10): MOV R9,0x7fffffffffffffff
00005b32(3): IDIV RSI
00005b35(3): MOV R10,RAX
00005b38(3): CMP R10,RBP
00005b3b(6): JG 0x00005d30
00005b41(3): MOV RAX,R9
00005b44(2): CQO
00005b46(3): IDIV RSI
00005b49(3): CMP RAX,RBP
00005b4c(6): JL 0x00005dc0
00005b52(4): IMUL RBP,RSI
00005b56(4): SUB R8D,0x1
00005b5a(2): JNZ 0x00005b38
00005b5c(4): NOP dword ptr [RAX]
00005b60(3): OR R12D,R11D
00005b63(5): JMP 0x00005970
00005b70(3): MOVSXD RSI,EAX
00005b73(10): MOV RAX,-0x8000000000000000
00005b7d(6): MOV R8D,0x6
00005b83(2): CQO
00005b85(3): XOR R11D,R11D
00005b88(10): MOV R9,0x7fffffffffffffff
00005b92(3): IDIV RSI
00005b95(3): MOV R10,RAX
00005b98(2): JMP 0x00005bbb
00005ba0(3): MOV RAX,R9
00005ba3(2): CQO
00005ba5(3): IDIV RSI
00005ba8(3): CMP RAX,RBP
00005bab(6): JL 0x00005d48
00005bb1(4): IMUL RBP,RSI
00005bb5(4): SUB R8D,0x1
00005bb9(2): JZ 0x00005b60
00005bbb(3): CMP R10,RBP
00005bbe(2): JLE 0x00005ba0
00005bc0(6): MOV R11D,0x1
00005bc6(10): MOV RBP,-0x8000000000000000
00005bd0(2): JMP 0x00005bb5
00005bd8(3): MOVSXD RSI,EAX
00005bdb(10): MOV RAX,-0x8000000000000000
00005be5(6): MOV R8D,0x5
00005beb(2): CQO
00005bed(3): XOR R11D,R11D
00005bf0(10): MOV R9,0x7fffffffffffffff
00005bfa(3): IDIV RSI
00005bfd(3): MOV R10,RAX
00005c00(2): JMP 0x00005c27
00005c08(3): MOV RAX,R9
00005c0b(2): CQO
00005c0d(3): IDIV RSI
00005c10(3): CMP RAX,RBP
00005c13(6): JL 0x00005d60
00005c19(4): IMUL RBP,RSI
00005c1d(4): SUB R8D,0x1
00005c21(6): JZ 0x00005b60
00005c27(3): CMP R10,RBP
00005c2a(2): JLE 0x00005c08
00005c2c(6): MOV R11D,0x1
00005c32(10): MOV RBP,-0x8000000000000000
00005c3c(2): JMP 0x00005c1d
00005c40(10): MOV RAX,-0x20000000000000
00005c4a(3): CMP RBP,RAX
00005c4d(6): JL 0x00005cd0
00005c53(10): MOV RAX,0x1fffffffffffff
00005c5d(3): CMP RBP,RAX
00005c60(6): JG 0x00005d90
00005c66(4): SHL RBP,0xa
00005c6a(5): JMP 0x00005970
00005c70(3): MOVSXD RSI,EAX
00005c73(10): MOV RAX,-0x8000000000000000
00005c7d(6): MOV R8D,0x4
00005c83(2): CQO
00005c85(3): XOR R11D,R11D
00005c88(10): MOV R9,0x7fffffffffffffff
00005c92(3): IDIV RSI
00005c95(3): MOV R10,RAX
00005c98(3): CMP R10,RBP
00005c9b(2): JG 0x00005d00
00005c9d(3): MOV RAX,R9
00005ca0(2): CQO
00005ca2(3): IDIV RSI
00005ca5(3): CMP RAX,RBP
00005ca8(6): JL 0x00005d78
00005cae(4): IMUL RBP,RSI
00005cb2(4): SUB R8D,0x1
00005cb6(2): JNZ 0x00005c98
00005cb8(5): JMP 0x00005b60
00005cc0(6): MOV R12D,0x4
00005cc6(5): JMP 0x000057e9
00005cd0(6): MOV R12D,0x1
00005cd6(10): MOV RBP,-0x8000000000000000
00005ce0(5): JMP 0x00005970
00005ce8(6): MOV R11D,0x1
00005cee(10): MOV RBP,0x7fffffffffffffff
00005cf8(5): JMP 0x00005aa5
00005d00(6): MOV R11D,0x1
00005d06(10): MOV RBP,-0x8000000000000000
00005d10(2): JMP 0x00005cb2
00005d18(6): MOV R11D,0x1
00005d1e(10): MOV RBP,0x7fffffffffffffff
00005d28(5): JMP 0x00005a35
00005d30(6): MOV R11D,0x1
00005d36(10): MOV RBP,-0x8000000000000000
00005d40(5): JMP 0x00005b56
00005d48(6): MOV R11D,0x1
00005d4e(10): MOV RBP,0x7fffffffffffffff
00005d58(5): JMP 0x00005bb5
00005d60(6): MOV R11D,0x1
00005d66(10): MOV RBP,0x7fffffffffffffff
00005d70(5): JMP 0x00005c1d
00005d78(6): MOV R11D,0x1
00005d7e(10): MOV RBP,0x7fffffffffffffff
00005d88(5): JMP 0x00005cb2
00005d90(6): MOV R12D,0x1
00005d96(10): MOV RBP,0x7fffffffffffffff
00005da0(5): JMP 0x00005970
00005da8(2): XOR EDI,EDI
00005daa(4): CMP byte ptr [RCX + 0x2],0x42
00005dae(5): MOV EAX,0x400
00005db3(4): SETZ DIL
00005db7(4): LEA EDI,[RDI + RDI*0x1 + 0x1]
00005dbb(5): JMP 0x000058f2
00005dc0(6): MOV R11D,0x1
00005dc6(10): MOV RBP,0x7fffffffffffffff
00005dd0(5): JMP 0x00005b56
00005dd5(5): MOV EAX,0x1
00005dda(3): MOV RBP,R8
00005ddd(5): JMP 0x00005968
00005de2(5): MOV EAX,0x1
00005de7(3): MOV RBP,R10
00005dea(5): JMP 0x00005968
00005def(7): LEA RCX,[0x15820]
00005df6(7): LEA RSI,[0x15700]
00005dfd(7): LEA RDI,[0x15720]
00005e04(5): MOV EDX,0x54
00005e09(5): CALL 0x00001a50
00005e0e(5): CALL 0x000019e0
00005e13(10): NOP word ptr CS:[RAX + RAX*0x1]
00005e1d(3): NOP dword ptr [RAX]
00005e20(2): PUSH R12
00005e22(1): PUSH RBP
00005e23(1): PUSH RBX
00005e24(3): MOV RBX,RDI
00005e27(5): CALL 0x00001ae0
00005e2c(2): TEST EAX,EAX
00005e2e(3): MOV RDI,RBX
00005e31(2): JS 0x00005e87
00005e33(5): CALL 0x00001b40
00005e38(2): TEST EAX,EAX
00005e3a(2): JNZ 0x00005e68
00005e3c(3): MOV RDI,RBX
00005e3f(5): CALL 0x00005ea0
00005e44(2): TEST EAX,EAX
00005e46(2): JZ 0x00005e84
00005e48(5): CALL 0x000018f0
00005e4d(3): MOV R12D,dword ptr [RAX]
00005e50(3): MOV RDI,RBX
00005e53(3): MOV RBP,RAX
00005e56(5): CALL 0x00001980
00005e5b(3): TEST R12D,R12D
00005e5e(2): JNZ 0x00005e90
00005e60(1): POP RBX
00005e61(1): POP RBP
00005e62(2): POP R12
00005e64(1): RET
00005e68(3): MOV RDI,RBX
00005e6b(5): CALL 0x00001ae0
00005e70(2): XOR ESI,ESI
00005e72(5): MOV EDX,0x1
00005e77(2): MOV EDI,EAX
00005e79(5): CALL 0x00001a40
00005e7e(4): CMP RAX,-0x1
00005e82(2): JNZ 0x00005e3c
00005e84(3): MOV RDI,RBX
00005e87(1): POP RBX
00005e88(1): POP RBP
00005e89(2): POP R12
00005e8b(5): JMP 0x00001980
00005e90(4): MOV dword ptr [RBP],R12D
00005e94(5): MOV EAX,0xffffffff
00005e99(2): JMP 0x00005e60
00005ea0(3): TEST RDI,RDI
00005ea3(1): PUSH RBX
00005ea4(3): MOV RBX,RDI
00005ea7(2): JZ 0x00005eba
00005ea9(5): CALL 0x00001b40
00005eae(2): TEST EAX,EAX
00005eb0(2): JZ 0x00005eba
00005eb2(6): TEST dword ptr [RBX],0x100
00005eb8(2): JNZ 0x00005ec8
00005eba(3): MOV RDI,RBX
00005ebd(1): POP RBX
00005ebe(5): JMP 0x00001b20
00005ec8(3): MOV RDI,RBX
00005ecb(5): MOV EDX,0x1
00005ed0(2): XOR ESI,ESI
00005ed2(5): CALL 0x00005ee0
00005ed7(3): MOV RDI,RBX
00005eda(1): POP RBX
00005edb(5): JMP 0x00001b20
00005ee0(4): MOV RAX,qword ptr [RDI + 0x8]
00005ee4(4): CMP qword ptr [RDI + 0x10],RAX
00005ee8(2): JZ 0x00005ef0
00005eea(5): JMP 0x00001bc0
00005ef0(4): MOV RAX,qword ptr [RDI + 0x20]
00005ef4(4): CMP qword ptr [RDI + 0x28],RAX
00005ef8(2): JNZ 0x00005eea
00005efa(5): CMP qword ptr [RDI + 0x48],0x0
00005eff(2): JNZ 0x00005eea
00005f01(2): PUSH R12
00005f03(1): PUSH RBP
00005f04(3): MOV R12D,EDX
00005f07(1): PUSH RBX
00005f08(3): MOV RBP,RSI
00005f0b(3): MOV RBX,RDI
00005f0e(5): CALL 0x00001ae0
00005f13(3): MOV EDX,R12D
00005f16(3): MOV RSI,RBP
00005f19(2): MOV EDI,EAX
00005f1b(5): CALL 0x00001a40
00005f20(4): CMP RAX,-0x1
00005f24(2): JZ 0x00005f32
00005f26(3): AND dword ptr [RBX],0xffffffef
00005f29(7): MOV qword ptr [0x90 + RBX],RAX
00005f30(2): XOR EAX,EAX
00005f32(1): POP RBX
00005f33(1): POP RBP
00005f34(2): POP R12
00005f36(1): RET
00005f40(2): PUSH R13
00005f42(2): PUSH R12
00005f44(3): MOV R13,RSI
00005f47(1): PUSH RBP
00005f48(1): PUSH RBX
00005f49(3): MOV RBX,RDI
00005f4c(3): MOV R12,RDX
00005f4f(4): SUB RSP,0x18
00005f53(9): MOV RAX,qword ptr FS:[0x28]
00005f5c(5): MOV qword ptr [RSP + 0x8],RAX
00005f61(2): XOR EAX,EAX
00005f63(5): LEA RAX,[RSP + 0x4]
00005f68(3): TEST RDI,RDI
00005f6b(4): CMOVZ RBX,RAX
00005f6f(3): MOV RDI,RBX
00005f72(5): CALL 0x00001a00
00005f77(4): CMP RAX,-0x3
00005f7b(3): MOV RBP,RAX
00005f7e(2): JBE 0x00005fa0
00005f80(3): TEST R12,R12
00005f83(2): JZ 0x00005fa0
00005f85(2): XOR EDI,EDI
00005f87(5): CALL 0x00014260
00005f8c(2): TEST AL,AL
00005f8e(2): JNZ 0x00005fa0
00005f90(5): MOVZX EAX,byte ptr [R13]
00005f95(5): MOV EBP,0x1
00005f9a(2): MOV dword ptr [RBX],EAX
00005f9c(4): NOP dword ptr [RAX]
00005fa0(5): MOV RDX,qword ptr [RSP + 0x8]
00005fa5(9): XOR RDX,qword ptr FS:[0x28]
00005fae(3): MOV RAX,RBP
00005fb1(2): JNZ 0x00005fbe
00005fb3(4): ADD RSP,0x18
00005fb7(1): POP RBX
00005fb8(1): POP RBP
00005fb9(2): POP R12
00005fbb(2): POP R13
00005fbd(1): RET
00005fbe(5): CALL 0x000019e0
00005fc3(10): NOP word ptr CS:[RAX + RAX*0x1]
00005fcd(3): NOP dword ptr [RAX]
00005fd0(4): MOV RAX,qword ptr [RSI + 0x48]
00005fd4(4): CMP qword ptr [RSI + 0x68],RAX
00005fd8(2): JLE 0x00006030
00005fda(4): MOV R8,qword ptr [RSI + 0x8]
00005fde(7): CMP dword ptr [0x90 + RSI],0x1
00005fe5(5): MOVZX ECX,byte ptr [R8 + RAX*0x1]
00005fea(2): MOV byte ptr [RDI],CL
00005fec(2): JLE 0x00006003
00005fee(4): CMP RAX,qword ptr [RSI + 0x30]
00005ff2(2): JZ 0x00006003
00005ff4(4): MOV R9,qword ptr [RSI + 0x10]
00005ff8(5): CMP dword ptr [R9 + RAX*0x4],-0x1
00005ffd(6): JZ 0x0000607f
00006003(3): CMP CL,0x5c
00006006(2): JZ 0x00006070
00006008(3): CMP CL,0x5b
0000600b(2): JZ 0x00006040
0000600d(3): CMP CL,0x5d
00006010(6): JZ 0x000060b0
00006016(3): CMP CL,0x5e
00006019(6): JZ 0x000060a0
0000601f(3): CMP CL,0x2d
00006022(2): JNZ 0x0000607f
00006024(4): MOV byte ptr [RDI + 0x8],0x16
00006028(5): MOV EAX,0x1
0000602d(1): RET
00006030(4): MOV byte ptr [RDI + 0x8],0x2
00006034(2): XOR EAX,EAX
00006036(1): RET
00006040(4): LEA RCX,[RAX + 0x1]
00006044(4): CMP RCX,qword ptr [RSI + 0x58]
00006048(2): JGE 0x00006090
0000604a(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
00006050(2): CMP AL,0x3a
00006052(2): MOV byte ptr [RDI],AL
00006054(6): JZ 0x000060f0
0000605a(2): CMP AL,0x3d
0000605c(6): JZ 0x000060e0
00006062(2): CMP AL,0x2e
00006064(2): JNZ 0x00006090
00006066(4): MOV byte ptr [RDI + 0x8],0x1a
0000606a(5): MOV EAX,0x2
0000606f(1): RET
00006070(3): AND EDX,0x1
00006073(2): JZ 0x0000607f
00006075(4): LEA RDX,[RAX + 0x1]
00006079(4): CMP RDX,qword ptr [RSI + 0x58]
0000607d(2): JL 0x000060c0
0000607f(4): MOV byte ptr [RDI + 0x8],0x1
00006083(5): MOV EAX,0x1
00006088(1): RET
00006090(4): MOV byte ptr [RDI + 0x8],0x1
00006094(3): MOV byte ptr [RDI],0x5b
00006097(5): MOV EAX,0x1
0000609c(1): RET
000060a0(4): MOV byte ptr [RDI + 0x8],0x19
000060a4(5): MOV EAX,0x1
000060a9(1): RET
000060b0(4): MOV byte ptr [RDI + 0x8],0x15
000060b4(5): MOV EAX,0x1
000060b9(1): RET
000060c0(4): MOV qword ptr [RSI + 0x48],RDX
000060c4(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
000060ca(4): MOV byte ptr [RDI + 0x8],0x1
000060ce(2): MOV byte ptr [RDI],AL
000060d0(5): MOV EAX,0x1
000060d5(1): RET
000060e0(4): MOV byte ptr [RDI + 0x8],0x1c
000060e4(5): MOV EAX,0x2
000060e9(1): RET
000060f0(3): AND EDX,0x4
000060f3(2): JZ 0x00006090
000060f5(4): MOV byte ptr [RDI + 0x8],0x1e
000060f9(5): MOV EAX,0x2
000060fe(1): RET
00006100(4): CMP byte ptr [RSI + 0x30],0x11
00006104(2): JZ 0x00006110
00006106(2): XOR EAX,EAX
00006108(1): RET
00006110(4): CMP RDI,qword ptr [RSI + 0x28]
00006114(2): JNZ 0x00006106
00006116(4): OR byte ptr [RSI + 0x32],0x8
0000611a(2): XOR EAX,EAX
0000611c(1): RET
00006120(2): PUSH R15
00006122(2): PUSH R14
00006124(3): MOV R9,RDX
00006127(2): PUSH R13
00006129(2): PUSH R12
0000612b(4): LEA RDX,[RCX + RCX*0x2]
0000612f(1): PUSH RBP
00006130(1): PUSH RBX
00006131(3): MOV R15D,ESI
00006134(4): SUB RSP,0x48
00006138(7): MOV R14,qword ptr [0x98 + RDI]
0000613f(4): MOV qword ptr [RSP],RDI
00006143(4): MOV RAX,qword ptr [R14 + 0x30]
00006147(4): LEA R12,[RAX + RDX*0x8]
0000614b(6): CMP qword ptr [R12 + 0x8],0x0
00006151(6): JLE 0x000062e5
00006157(4): LEA RAX,[R8 + R8*0x4]
0000615b(3): MOV R11,RCX
0000615e(3): MOV ECX,R9D
00006161(3): MOV R10,R8
00006164(2): XOR EBX,EBX
00006166(4): MOV dword ptr [RSP + 0x20],ESI
0000616a(4): SHL RAX,0x3
0000616e(3): MOV R15,R9
00006171(5): MOV qword ptr [RSP + 0x10],R11
00006176(5): MOV qword ptr [RSP + 0x28],RAX
0000617b(5): MOV EAX,0x1
00006180(3): SHL RAX,CL
00006183(5): MOV qword ptr [RSP + 0x18],RAX
00006188(2): NOT EAX
0000618a(5): MOV word ptr [RSP + 0x26],AX
0000618f(2): MOV EAX,ESI
00006191(3): AND EAX,0x1
00006194(4): MOV dword ptr [RSP + 0xc],EAX
00006198(2): MOV EAX,ESI
0000619a(3): AND EAX,0x2
0000619d(4): MOV dword ptr [RSP + 0x8],EAX
000061a1(2): JMP 0x000061c5
000061a8(3): CMP DL,0x9
000061ab(6): JZ 0x00006300
000061b1(3): CMP DL,0x4
000061b4(2): JZ 0x00006208
000061b6(4): ADD RBX,0x1
000061ba(5): CMP qword ptr [R12 + 0x8],RBX
000061bf(6): JLE 0x000062e0
000061c5(5): MOV RAX,qword ptr [R12 + 0x10]
000061ca(4): MOV RBP,qword ptr [RAX + RBX*0x8]
000061ce(3): MOV RAX,RBP
000061d1(4): SHL RAX,0x4
000061d5(3): ADD RAX,qword ptr [R14]
000061d8(4): MOVZX EDX,byte ptr [RAX + 0x8]
000061dc(3): CMP DL,0x8
000061df(2): JNZ 0x000061a8
000061e1(4): MOV ECX,dword ptr [RSP + 0xc]
000061e5(2): TEST ECX,ECX
000061e7(2): JZ 0x000061b6
000061e9(3): CMP qword ptr [RAX],R15
000061ec(2): JNZ 0x000061b6
000061ee(4): ADD RSP,0x48
000061f2(5): MOV EAX,0xffffffff
000061f7(1): POP RBX
000061f8(1): POP RBP
000061f9(2): POP R12
000061fb(2): POP R13
000061fd(2): POP R14
000061ff(2): POP R15
00006201(1): RET
00006208(4): CMP R10,-0x1
0000620c(2): JZ 0x000061b6
0000620e(4): MOV RAX,qword ptr [RSP]
00006212(5): MOV R13,qword ptr [RSP + 0x28]
00006217(3): MOV RDI,RBP
0000621a(5): MOV qword ptr [RSP + 0x30],R12
0000621f(5): MOV qword ptr [RSP + 0x38],RBX
00006224(3): MOV R12,R10
00006227(7): ADD R13,qword ptr [0xd8 + RAX]
0000622e(5): LEA RAX,[RBP + RBP*0x2]
00006233(3): MOV RBP,R14
00006236(3): MOV R14,RDI
00006239(4): SHL RAX,0x3
0000623d(3): MOV RBX,RAX
00006240(4): CMP qword ptr [R13],R14
00006244(2): JNZ 0x000062b0
00006246(4): CMP R15,0x3f
0000624a(2): JG 0x00006258
0000624c(5): MOVZX EAX,word ptr [R13 + 0x22]
00006251(5): TEST qword ptr [RSP + 0x18],RAX
00006256(2): JZ 0x000062b0
00006258(4): MOV RAX,qword ptr [RBP + 0x28]
0000625c(5): MOV RAX,qword ptr [RAX + RBX*0x1 + 0x10]
00006261(3): MOV RCX,qword ptr [RAX]
00006264(5): CMP qword ptr [RSP + 0x10],RCX
00006269(6): JZ 0x00006330
0000626f(4): MOV ESI,dword ptr [RSP + 0x20]
00006273(4): MOV RDI,qword ptr [RSP]
00006277(3): MOV R8,R12
0000627a(3): MOV RDX,R15
0000627d(5): CALL 0x00006120
00006282(3): CMP EAX,-0x1
00006285(6): JZ 0x000061ee
0000628b(2): TEST EAX,EAX
0000628d(2): JNZ 0x00006297
0000628f(4): MOV ESI,dword ptr [RSP + 0x8]
00006293(2): TEST ESI,ESI
00006295(2): JNZ 0x00006315
00006297(4): CMP R15,0x3f
0000629b(2): JG 0x000062b0
0000629d(5): MOVZX EAX,word ptr [RSP + 0x26]
000062a2(5): AND word ptr [R13 + 0x22],AX
000062a7(9): NOP word ptr [RAX + RAX*0x1]
000062b0(4): ADD R13,0x28
000062b4(5): CMP byte ptr [R13 + -0x8],0x0
000062b9(2): JNZ 0x00006240
000062bb(5): MOV RBX,qword ptr [RSP + 0x38]
000062c0(3): MOV R10,R12
000062c3(5): MOV R12,qword ptr [RSP + 0x30]
000062c8(3): MOV R14,RBP
000062cb(4): ADD RBX,0x1
000062cf(5): CMP qword ptr [R12 + 0x8],RBX
000062d4(6): JG 0x000061c5
000062da(6): NOP word ptr [RAX + RAX*0x1]
000062e0(5): MOV R15D,dword ptr [RSP + 0x20]
000062e5(4): ADD RSP,0x48
000062e9(3): MOV EAX,R15D
000062ec(1): POP RBX
000062ed(2): SAR EAX,1
000062ef(1): POP RBP
000062f0(2): POP R12
000062f2(2): POP R13
000062f4(2): POP R14
000062f6(2): POP R15
000062f8(1): RET
00006300(4): MOV EDX,dword ptr [RSP + 0x8]
00006304(2): TEST EDX,EDX
00006306(6): JZ 0x000061b6
0000630c(3): CMP qword ptr [RAX],R15
0000630f(6): JNZ 0x000061b6
00006315(4): ADD RSP,0x48
00006319(2): XOR EAX,EAX
0000631b(1): POP RBX
0000631c(1): POP RBP
0000631d(2): POP R12
0000631f(2): POP R13
00006321(2): POP R14
00006323(2): POP R15
00006325(1): RET
00006330(5): MOV R15D,dword ptr [RSP + 0x20]
00006335(4): ADD RSP,0x48
00006339(1): POP RBX
0000633a(1): POP RBP
0000633b(3): MOV EAX,R15D
0000633e(3): AND EAX,0x1
00006341(2): POP R12
00006343(2): NEG EAX
00006345(2): POP R13
00006347(2): POP R14
00006349(2): POP R15
0000634b(1): RET
00006350(7): MOV RAX,qword ptr [0xd8 + RDI]
00006357(4): LEA RSI,[RSI + RSI*0x4]
0000635b(4): LEA RAX,[RAX + RSI*0x8]
0000635f(4): MOV R10,qword ptr [RAX + 0x10]
00006363(3): CMP R10,R8
00006366(2): JG 0x000063b0
00006368(4): MOV RAX,qword ptr [RAX + 0x18]
0000636c(3): CMP RAX,R8
0000636f(2): JL 0x00006390
00006371(2): XOR ESI,ESI
00006373(3): CMP R10,R8
00006376(4): SETZ SIL
0000637a(3): OR ESI,0x2
0000637d(3): CMP RAX,R8
00006380(2): JZ 0x000063a5
00006382(2): XOR EAX,EAX
00006384(3): CMP R10,R8
00006387(2): JZ 0x000063a0
00006389(2): RET
00006390(5): MOV EAX,0x1
00006395(1): RET
000063a0(5): MOV ESI,0x1
000063a5(3): MOV R8,R9
000063a8(5): JMP 0x00006120
000063b0(5): MOV EAX,0xffffffff
000063b5(1): RET
000063c0(2): PUSH R12
000063c2(3): MOV R12,RSI
000063c5(1): PUSH RBP
000063c6(3): MOV RBP,RDX
000063c9(1): PUSH RBX
000063ca(3): MOV RBX,RDI
000063cd(2): JMP 0x000063d3
000063d0(3): MOV RBX,RAX
000063d3(4): MOV RAX,qword ptr [RBX + 0x8]
000063d7(3): TEST RAX,RAX
000063da(2): JNZ 0x000063d0
000063dc(4): MOV RAX,qword ptr [RBX + 0x10]
000063e0(3): TEST RAX,RAX
000063e3(2): JNZ 0x000063d0
000063e5(3): MOV RSI,RBX
000063e8(3): MOV RDI,RBP
000063eb(3): CALL R12
000063ee(2): TEST EAX,EAX
000063f0(2): JNZ 0x00006426
000063f2(6): NOP word ptr [RAX + RAX*0x1]
000063f8(3): MOV RDX,qword ptr [RBX]
000063fb(3): TEST RDX,RDX
000063fe(2): JZ 0x00006426
00006400(4): MOV RAX,qword ptr [RDX + 0x10]
00006404(3): CMP RAX,RBX
00006407(3): MOV RBX,RDX
0000640a(4): SETZ SIL
0000640e(3): TEST RAX,RAX
00006411(3): SETZ CL
00006414(3): OR SIL,CL
00006417(2): JZ 0x000063d0
00006419(3): MOV RSI,RBX
0000641c(3): MOV RDI,RBP
0000641f(3): CALL R12
00006422(2): TEST EAX,EAX
00006424(2): JZ 0x000063f8
00006426(1): POP RBX
00006427(1): POP RBP
00006428(2): POP R12
0000642a(1): RET
00006430(2): PUSH R12
00006432(3): MOV R12,RSI
00006435(1): PUSH RBP
00006436(3): MOV RBP,RDX
00006439(1): PUSH RBX
0000643a(3): MOV RBX,RDI
0000643d(2): JMP 0x00006443
00006440(3): MOV RBX,RDX
00006443(3): MOV RSI,RBX
00006446(3): MOV RDI,RBP
00006449(3): CALL R12
0000644c(2): TEST EAX,EAX
0000644e(2): JNZ 0x0000647c
00006450(4): MOV RDX,qword ptr [RBX + 0x8]
00006454(2): XOR ECX,ECX
00006456(3): TEST RDX,RDX
00006459(2): JNZ 0x00006440
0000645b(2): JMP 0x00006463
00006460(3): MOV RBX,RDX
00006463(4): MOV RDX,qword ptr [RBX + 0x10]
00006467(3): CMP RDX,RCX
0000646a(2): JZ 0x00006471
0000646c(3): TEST RDX,RDX
0000646f(2): JNZ 0x00006440
00006471(3): MOV RDX,qword ptr [RBX]
00006474(3): MOV RCX,RBX
00006477(3): TEST RDX,RDX
0000647a(2): JNZ 0x00006460
0000647c(1): POP RBX
0000647d(1): POP RBP
0000647e(2): POP R12
00006480(1): RET
00006490(1): PUSH RBP
00006491(1): PUSH RBX
00006492(3): MOV RBP,RSI
00006495(3): MOV RBX,RDI
00006498(4): SUB RSP,0x8
0000649c(7): CMP dword ptr [0x90 + RDI],0x1
000064a3(2): JLE 0x000064ed
000064a5(10): MOV RAX,0x1fffffffffffffff
000064af(3): CMP RSI,RAX
000064b2(2): JA 0x00006520
000064b4(4): MOV RDI,qword ptr [RDI + 0x10]
000064b8(8): LEA RSI,[RSI*0x4]
000064c0(5): CALL 0x00001b60
000064c5(3): TEST RAX,RAX
000064c8(2): JZ 0x00006520
000064ca(4): MOV RDI,qword ptr [RBX + 0x18]
000064ce(4): MOV qword ptr [RBX + 0x10],RAX
000064d2(3): TEST RDI,RDI
000064d5(2): JZ 0x000064ed
000064d7(8): LEA RSI,[RBP*0x8]
000064df(5): CALL 0x00001b60
000064e4(3): TEST RAX,RAX
000064e7(2): JZ 0x00006520
000064e9(4): MOV qword ptr [RBX + 0x18],RAX
000064ed(7): CMP byte ptr [0x8b + RBX],0x0
000064f4(2): JNZ 0x00006508
000064f6(4): MOV qword ptr [RBX + 0x40],RBP
000064fa(4): ADD RSP,0x8
000064fe(2): XOR EAX,EAX
00006500(1): POP RBX
00006501(1): POP RBP
00006502(1): RET
00006508(4): MOV RDI,qword ptr [RBX + 0x8]
0000650c(3): MOV RSI,RBP
0000650f(5): CALL 0x00001b60
00006514(3): TEST RAX,RAX
00006517(2): JZ 0x00006520
00006519(4): MOV qword ptr [RBX + 0x8],RAX
0000651d(2): JMP 0x000064f6
00006520(4): ADD RSP,0x8
00006524(5): MOV EAX,0xc
00006529(1): POP RBX
0000652a(1): POP RBP
0000652b(1): RET
00006530(1): PUSH RBP
00006531(1): PUSH RBX
00006532(3): MOV RBP,RSI
00006535(3): MOV RBX,RDI
00006538(4): SUB RSP,0x8
0000653c(4): MOV RSI,qword ptr [RDI + 0x8]
00006540(3): CMP qword ptr [RDI],RSI
00006543(4): MOV RAX,qword ptr [RDI + 0x10]
00006547(2): JZ 0x00006568
00006549(4): LEA RDX,[RSI + 0x1]
0000654d(4): MOV qword ptr [RBX + 0x8],RDX
00006551(4): MOV qword ptr [RAX + RSI*0x8],RBP
00006555(5): MOV EAX,0x1
0000655a(4): ADD RSP,0x8
0000655e(1): POP RBX
0000655f(1): POP RBP
00006560(1): RET
00006568(4): ADD RSI,0x1
0000656c(4): LEA RDX,[RSI + RSI*0x1]
00006570(4): SHL RSI,0x4
00006574(3): MOV qword ptr [RDI],RDX
00006577(3): MOV RDI,RAX
0000657a(5): CALL 0x00001b60
0000657f(3): TEST RAX,RAX
00006582(2): JZ 0x00006590
00006584(4): MOV qword ptr [RBX + 0x10],RAX
00006588(4): MOV RSI,qword ptr [RBX + 0x8]
0000658c(2): JMP 0x00006549
00006590(2): XOR EAX,EAX
00006592(2): JMP 0x0000655a
000065a0(1): PUSH RBP
000065a1(1): PUSH RBX
000065a2(3): MOV RBP,RSI
000065a5(3): MOV RBX,RDI
000065a8(4): SUB RSP,0x8
000065ac(3): MOV RDX,qword ptr [RDI]
000065af(3): TEST RDX,RDX
000065b2(2): JZ 0x000065d8
000065b4(4): MOV RSI,qword ptr [RDI + 0x8]
000065b8(4): MOV RAX,qword ptr [RDI + 0x10]
000065bc(3): TEST RSI,RSI
000065bf(2): JNZ 0x00006610
000065c1(3): MOV qword ptr [RAX],RBP
000065c4(5): ADD qword ptr [RDI + 0x8],0x1
000065c9(5): MOV EAX,0x1
000065ce(4): ADD RSP,0x8
000065d2(1): POP RBX
000065d3(1): POP RBP
000065d4(1): RET
000065d8(7): MOV qword ptr [RDI],0x1
000065df(8): MOV qword ptr [RDI + 0x8],0x1
000065e7(5): MOV EDI,0x8
000065ec(5): CALL 0x00001b00
000065f1(3): TEST RAX,RAX
000065f4(4): MOV qword ptr [RBX + 0x10],RAX
000065f8(6): JZ 0x00006688
000065fe(3): MOV qword ptr [RAX],RBP
00006601(4): ADD RSP,0x8
00006605(5): MOV EAX,0x1
0000660a(1): POP RBX
0000660b(1): POP RBP
0000660c(1): RET
00006610(3): CMP RDX,RSI
00006613(6): JZ 0x000066a0
00006619(3): CMP qword ptr [RAX],RBP
0000661c(8): LEA RDX,[RSI*0x8]
00006624(2): JLE 0x00006660
00006626(3): TEST RSI,RSI
00006629(2): JLE 0x00006643
0000662b(3): ADD RDX,RAX
0000662e(2): NOP
00006630(4): MOV RCX,qword ptr [RDX + -0x8]
00006634(4): SUB RDX,0x8
00006638(4): MOV qword ptr [RDX + 0x8],RCX
0000663c(3): CMP RAX,RDX
0000663f(2): JNZ 0x00006630
00006641(2): XOR EDX,EDX
00006643(4): MOV qword ptr [RAX + RDX*0x1],RBP
00006647(5): MOV EAX,0x1
0000664c(5): ADD qword ptr [RBX + 0x8],0x1
00006651(5): JMP 0x000065ce
00006660(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
00006665(3): CMP RBP,RCX
00006668(2): JGE 0x00006643
0000666a(6): NOP word ptr [RAX + RAX*0x1]
00006670(4): MOV qword ptr [RAX + RDX*0x1],RCX
00006674(4): SUB RDX,0x8
00006678(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
0000667d(3): CMP RCX,RBP
00006680(2): JG 0x00006670
00006682(2): JMP 0x00006643
00006688(8): MOV qword ptr [RBX + 0x8],0x0
00006690(7): MOV qword ptr [RBX],0x0
00006697(5): JMP 0x000065ce
000066a0(4): LEA RDX,[RSI + RSI*0x1]
000066a4(4): SHL RSI,0x4
000066a8(3): MOV qword ptr [RDI],RDX
000066ab(3): MOV RDI,RAX
000066ae(5): CALL 0x00001b60
000066b3(3): TEST RAX,RAX
000066b6(2): JZ 0x000066c5
000066b8(4): MOV qword ptr [RBX + 0x10],RAX
000066bc(4): MOV RSI,qword ptr [RBX + 0x8]
000066c0(5): JMP 0x00006619
000066c5(2): XOR EAX,EAX
000066c7(5): JMP 0x000065ce
000066d0(2): PUSH R14
000066d2(2): PUSH R13
000066d4(3): MOV R14,RDI
000066d7(2): PUSH R12
000066d9(1): PUSH RBP
000066da(3): MOV R12,RDX
000066dd(1): PUSH RBX
000066de(4): MOV RBX,qword ptr [RSI + 0x10]
000066e2(3): MOV RBP,RSI
000066e5(3): MOV qword ptr [RSI],RDX
000066e8(8): MOV qword ptr [RSI + 0x28],0x0
000066f0(4): LEA R13,[RSI + 0x20]
000066f4(8): LEA RDI,[RBX*0x8]
000066fc(4): MOV qword ptr [RSI + 0x20],RBX
00006700(5): CALL 0x00001b00
00006705(3): TEST RAX,RAX
00006708(4): MOV qword ptr [RBP + 0x30],RAX
0000670c(2): JZ 0x0000674e
0000670e(3): TEST RBX,RBX
00006711(2): JLE 0x00006760
00006713(2): XOR EBX,EBX
00006715(2): JMP 0x0000672a
00006720(4): ADD RBX,0x1
00006724(4): CMP qword ptr [RBP + 0x10],RBX
00006728(2): JLE 0x00006760
0000672a(4): MOV RAX,qword ptr [RBP + 0x18]
0000672e(4): MOV RSI,qword ptr [RAX + RBX*0x8]
00006732(3): MOV RAX,RSI
00006735(4): SHL RAX,0x4
00006739(3): ADD RAX,qword ptr [R14]
0000673c(4): TEST byte ptr [RAX + 0x8],0x8
00006740(2): JNZ 0x00006720
00006742(3): MOV RDI,R13
00006745(5): CALL 0x00006530
0000674a(2): TEST AL,AL
0000674c(2): JNZ 0x00006720
0000674e(1): POP RBX
0000674f(5): MOV EAX,0xc
00006754(1): POP RBP
00006755(2): POP R12
00006757(2): POP R13
00006759(2): POP R14
0000675b(1): RET
00006760(7): AND R12,qword ptr [0x88 + R14]
00006767(4): MOV RAX,qword ptr [R14 + 0x40]
0000676b(4): LEA RDX,[R12 + R12*0x2]
0000676f(4): LEA RBX,[RAX + RDX*0x8]
00006773(3): MOV RDX,qword ptr [RBX]
00006776(4): CMP qword ptr [RBX + 0x8],RDX
0000677a(4): MOV RAX,qword ptr [RBX + 0x10]
0000677e(4): LEA RSI,[RDX + 0x1]
00006782(2): JLE 0x00006796
00006784(3): MOV qword ptr [RBX],RSI
00006787(4): MOV qword ptr [RAX + RDX*0x8],RBP
0000678b(2): XOR EAX,EAX
0000678d(1): POP RBX
0000678e(1): POP RBP
0000678f(2): POP R12
00006791(2): POP R13
00006793(2): POP R14
00006795(1): RET
00006796(4): LEA R12,[RSI + RSI*0x1]
0000679a(3): MOV RDI,RAX
0000679d(4): SHL RSI,0x4
000067a1(5): CALL 0x00001b60
000067a6(3): TEST RAX,RAX
000067a9(2): JZ 0x0000674e
000067ab(3): MOV RDX,qword ptr [RBX]
000067ae(4): MOV qword ptr [RBX + 0x10],RAX
000067b2(4): MOV qword ptr [RBX + 0x8],R12
000067b6(4): LEA RSI,[RDX + 0x1]
000067ba(2): JMP 0x00006784
000067c0(2): PUSH R12
000067c2(4): MOV R12,qword ptr [RDI + 0x58]
000067c6(4): CMP qword ptr [RDI + 0x40],R12
000067ca(1): PUSH RBP
000067cb(3): MOV RBP,RDI
000067ce(5): CMOVLE R12,qword ptr [RDI + 0x40]
000067d3(1): PUSH RBX
000067d4(4): MOV RBX,qword ptr [RDI + 0x30]
000067d8(3): CMP R12,RBX
000067db(2): JLE 0x00006815
000067dd(5): CALL 0x000018b0
000067e2(6): NOP word ptr [RAX + RAX*0x1]
000067e8(4): MOV RDX,qword ptr [RBP]
000067ec(4): MOV RCX,qword ptr [RBP + 0x78]
000067f0(3): ADD RDX,RBX
000067f3(4): ADD RDX,qword ptr [RBP + 0x28]
000067f7(3): TEST RCX,RCX
000067fa(3): MOVZX EDX,byte ptr [RDX]
000067fd(2): JNZ 0x00006828
000067ff(3): MOV RSI,qword ptr [RAX]
00006802(4): MOV RCX,qword ptr [RBP + 0x8]
00006806(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00006809(3): MOV byte ptr [RCX + RBX*0x1],DL
0000680c(4): ADD RBX,0x1
00006810(3): CMP R12,RBX
00006813(2): JNZ 0x000067e8
00006815(4): MOV qword ptr [RBP + 0x30],RBX
00006819(4): MOV qword ptr [RBP + 0x38],RBX
0000681d(1): POP RBX
0000681e(1): POP RBP
0000681f(2): POP R12
00006821(1): RET
00006828(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
0000682c(2): JMP 0x000067ff
00006830(2): PUSH R15
00006832(2): PUSH R14
00006834(2): PUSH R13
00006836(2): PUSH R12
00006838(1): PUSH RBP
00006839(1): PUSH RBX
0000683a(3): MOV RBX,RDI
0000683d(4): SUB RSP,0x68
00006841(4): MOV R12,qword ptr [RDI + 0x58]
00006845(4): MOV RBP,qword ptr [RDI + 0x30]
00006849(9): MOV RAX,qword ptr FS:[0x28]
00006852(5): MOV qword ptr [RSP + 0x58],RAX
00006857(2): XOR EAX,EAX
00006859(4): CMP qword ptr [RDI + 0x40],R12
0000685d(5): CMOVLE R12,qword ptr [RDI + 0x40]
00006862(3): CMP R12,RBP
00006865(6): JLE 0x000068f4
0000686b(4): LEA R14,[RDI + 0x20]
0000686f(5): LEA R13,[RSP + 0xc]
00006874(4): NOP dword ptr [RAX]
00006878(4): MOV RDI,qword ptr [RBX + 0x78]
0000687c(3): MOV RDX,R12
0000687f(4): MOV R15,qword ptr [RBX + 0x20]
00006883(3): SUB RDX,RBP
00006886(3): TEST RDI,RDI
00006889(6): JNZ 0x00006970
0000688f(4): MOV RSI,qword ptr [RBX + 0x28]
00006893(3): ADD RSI,RBP
00006896(3): ADD RSI,qword ptr [RBX]
00006899(3): MOV RCX,R14
0000689c(3): MOV RDI,R13
0000689f(5): CALL 0x00005f40
000068a4(4): LEA RDX,[RAX + -0x1]
000068a8(4): CMP RDX,-0x3
000068ac(6): JA 0x00006940
000068b2(4): CMP RAX,-0x2
000068b6(4): MOV EDX,dword ptr [RSP + 0xc]
000068ba(2): JZ 0x00006930
000068bc(4): MOV RCX,qword ptr [RBX + 0x10]
000068c0(4): LEA RSI,[RBP + 0x1]
000068c4(8): LEA RDI,[RBP*0x4]
000068cc(3): MOV dword ptr [RCX + RBP*0x4],EDX
000068cf(3): ADD RBP,RAX
000068d2(3): CMP RSI,RBP
000068d5(2): JGE 0x00006920
000068d7(5): LEA RDX,[RCX + RDI*0x1 + 0x4]
000068dc(4): LEA RAX,[RCX + RBP*0x4]
000068e0(6): MOV dword ptr [RDX],0xffffffff
000068e6(4): ADD RDX,0x4
000068ea(3): CMP RAX,RDX
000068ed(2): JNZ 0x000068e0
000068ef(3): CMP RBP,R12
000068f2(2): JL 0x00006878
000068f4(5): MOV RAX,qword ptr [RSP + 0x58]
000068f9(9): XOR RAX,qword ptr FS:[0x28]
00006902(4): MOV qword ptr [RBX + 0x30],RBP
00006906(4): MOV qword ptr [RBX + 0x38],RBP
0000690a(6): JNZ 0x000069ee
00006910(4): ADD RSP,0x68
00006914(1): POP RBX
00006915(1): POP RBP
00006916(2): POP R12
00006918(2): POP R13
0000691a(2): POP R14
0000691c(2): POP R15
0000691e(1): RET
00006920(3): MOV RBP,RSI
00006923(3): CMP RBP,R12
00006926(6): JL 0x00006878
0000692c(2): JMP 0x000068f4
00006930(4): MOV RAX,qword ptr [RBX + 0x58]
00006934(4): CMP qword ptr [RBX + 0x40],RAX
00006938(6): JL 0x000069d8
0000693e(2): NOP
00006940(3): MOV RAX,qword ptr [RBX]
00006943(4): MOV RCX,qword ptr [RBX + 0x78]
00006947(3): ADD RAX,RBP
0000694a(4): ADD RAX,qword ptr [RBX + 0x28]
0000694e(3): TEST RCX,RCX
00006951(3): MOVZX EDX,byte ptr [RAX]
00006954(4): MOV dword ptr [RSP + 0xc],EDX
00006958(6): JNZ 0x000069e1
0000695e(4): MOV qword ptr [RBX + 0x20],R15
00006962(5): MOV EAX,0x1
00006967(5): JMP 0x000068bc
00006970(6): MOV ECX,dword ptr [0x90 + RBX]
00006976(2): XOR EAX,EAX
00006978(5): LEA RSI,[RSP + 0x10]
0000697d(2): TEST ECX,ECX
0000697f(2): JG 0x000069a1
00006981(5): JMP 0x00006899
00006990(4): ADD RAX,0x1
00006994(3): CMP RDX,RAX
00006997(6): JZ 0x00006899
0000699d(4): MOV RDI,qword ptr [RBX + 0x78]
000069a1(3): MOV RCX,qword ptr [RBX]
000069a4(3): ADD RCX,RBP
000069a7(3): ADD RCX,RAX
000069aa(4): ADD RCX,qword ptr [RBX + 0x28]
000069ae(3): MOVZX ECX,byte ptr [RCX]
000069b1(4): MOVZX ECX,byte ptr [RDI + RCX*0x1]
000069b5(4): MOV RDI,qword ptr [RBX + 0x8]
000069b9(3): ADD RDI,RBP
000069bc(3): MOV byte ptr [RDI + RAX*0x1],CL
000069bf(3): MOV byte ptr [RSI + RAX*0x1],CL
000069c2(3): LEA ECX,[RAX + 0x1]
000069c5(6): CMP ECX,dword ptr [0x90 + RBX]
000069cb(2): JL 0x00006990
000069cd(5): JMP 0x00006899
000069d8(4): MOV qword ptr [RBX + 0x20],R15
000069dc(5): JMP 0x000068f4
000069e1(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
000069e5(4): MOV dword ptr [RSP + 0xc],EDX
000069e9(5): JMP 0x0000695e
000069ee(5): CALL 0x000019e0
000069f3(3): NOP dword ptr [RAX]
000069f6(10): NOP word ptr CS:[RAX + RAX*0x1]
00006a00(2): PUSH R15
00006a02(2): PUSH R14
00006a04(3): MOV R14,RDI
00006a07(2): PUSH R13
00006a09(2): PUSH R12
00006a0b(1): PUSH RBP
00006a0c(1): PUSH RBX
00006a0d(7): SUB RSP,0xa8
00006a14(4): MOV RBX,qword ptr [RDI + 0x58]
00006a18(4): MOV R15,qword ptr [RDI + 0x30]
00006a1c(9): MOV RAX,qword ptr FS:[0x28]
00006a25(8): MOV qword ptr [0x98 + RSP],RAX
00006a2d(2): XOR EAX,EAX
00006a2f(4): CMP qword ptr [RDI + 0x40],RBX
00006a33(5): CMOVLE RBX,qword ptr [RDI + 0x40]
00006a38(7): CMP byte ptr [0x8a + RDI],0x0
00006a3f(2): JNZ 0x00006a4c
00006a41(5): CMP qword ptr [RDI + 0x78],0x0
00006a46(6): JZ 0x00006bd0
00006a4c(4): MOV R13,qword ptr [R14 + 0x38]
00006a50(3): CMP R15,RBX
00006a53(2): JL 0x00006a90
00006a55(4): MOV qword ptr [R14 + 0x30],R15
00006a59(4): MOV qword ptr [R14 + 0x38],R13
00006a5d(2): XOR EAX,EAX
00006a5f(8): MOV RCX,qword ptr [0x98 + RSP]
00006a67(9): XOR RCX,qword ptr FS:[0x28]
00006a70(6): JNZ 0x00006ffa
00006a76(7): ADD RSP,0xa8
00006a7d(1): POP RBX
00006a7e(1): POP RBP
00006a7f(2): POP R12
00006a81(2): POP R13
00006a83(2): POP R14
00006a85(2): POP R15
00006a87(1): RET
00006a90(4): LEA RAX,[R14 + 0x20]
00006a94(5): MOV qword ptr [RSP + 0x8],RAX
00006a99(3): MOV RAX,RBX
00006a9c(3): SUB RAX,R15
00006a9f(5): MOV qword ptr [RSP + 0x10],RAX
00006aa4(5): LEA RAX,[RSP + 0x44]
00006aa9(5): MOV qword ptr [RSP + 0x20],RAX
00006aae(4): MOV RDX,qword ptr [R14 + 0x78]
00006ab2(4): MOV RAX,qword ptr [R14 + 0x20]
00006ab6(3): TEST RDX,RDX
00006ab9(5): MOV qword ptr [RSP + 0x48],RAX
00006abe(6): JNZ 0x00006dc9
00006ac4(4): MOV RBP,qword ptr [R14 + 0x28]
00006ac8(3): ADD RBP,R13
00006acb(3): ADD RBP,qword ptr [R14]
00006ace(5): MOV qword ptr [RSP + 0x18],RBP
00006ad3(5): MOV RCX,qword ptr [RSP + 0x8]
00006ad8(5): MOV RDX,qword ptr [RSP + 0x10]
00006add(5): MOV RSI,qword ptr [RSP + 0x18]
00006ae2(5): MOV RDI,qword ptr [RSP + 0x20]
00006ae7(5): CALL 0x00005f40
00006aec(3): MOV RBP,RAX
00006aef(4): LEA RAX,[RAX + -0x1]
00006af3(4): CMP RAX,-0x4
00006af7(5): MOV qword ptr [RSP + 0x20],RAX
00006afc(6): JA 0x00006e39
00006b02(4): MOV EDX,dword ptr [RSP + 0x44]
00006b06(2): MOV EDI,EDX
00006b08(4): MOV dword ptr [RSP + 0x10],EDX
00006b0c(5): CALL 0x00001bf0
00006b11(4): MOV EDX,dword ptr [RSP + 0x10]
00006b15(3): MOV R12D,EAX
00006b18(5): MOV qword ptr [RSP + 0x8],R15
00006b1d(2): CMP EDX,EAX
00006b1f(6): JZ 0x00006e20
00006b25(5): LEA RCX,[RSP + 0x50]
00006b2a(5): LEA RDX,[RSP + 0x48]
00006b2f(2): MOV ESI,EAX
00006b31(3): MOV RDI,RCX
00006b34(5): MOV qword ptr [RSP + 0x10],RCX
00006b39(5): CALL 0x00001b10
00006b3e(3): CMP RBP,RAX
00006b41(3): MOV R11,RAX
00006b44(5): MOV RCX,qword ptr [RSP + 0x10]
00006b49(6): JNZ 0x00006ed6
00006b4f(4): MOV RDI,qword ptr [R14 + 0x8]
00006b53(3): MOV RDX,RBP
00006b56(3): MOV RSI,RCX
00006b59(3): ADD RDI,R15
00006b5c(5): CALL 0x00001ad0
00006b61(8): CMP byte ptr [0x8c + R14],0x0
00006b69(5): LEA RAX,[RBP + R13*0x1]
00006b6e(6): JNZ 0x00006ea5
00006b74(4): ADD R15,0x1
00006b78(5): MOV RSI,qword ptr [RSP + 0x8]
00006b7d(4): MOV RDX,qword ptr [R14 + 0x10]
00006b81(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
00006b86(3): MOV R13,RAX
00006b89(3): CMP R15,RCX
00006b8c(8): LEA RAX,[RSI*0x4]
00006b94(4): MOV dword ptr [RDX + RSI*0x4],R12D
00006b98(6): JGE 0x00006a50
00006b9e(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
00006ba3(4): LEA RDX,[RDX + RCX*0x4]
00006ba7(9): NOP word ptr [RAX + RAX*0x1]
00006bb0(6): MOV dword ptr [RAX],0xffffffff
00006bb6(4): ADD RAX,0x4
00006bba(3): CMP RDX,RAX
00006bbd(2): JNZ 0x00006bb0
00006bbf(3): MOV R15,RCX
00006bc2(5): JMP 0x00006a50
00006bd0(7): CMP byte ptr [0x8c + RDI],0x0
00006bd7(6): JNZ 0x00006a4c
00006bdd(3): CMP R15,RBX
00006be0(6): JGE 0x00006d78
00006be6(4): LEA RAX,[RDI + 0x20]
00006bea(5): MOV qword ptr [RSP + 0x8],RAX
00006bef(5): LEA RAX,[RSP + 0x44]
00006bf4(5): MOV qword ptr [RSP + 0x30],RAX
00006bf9(5): LEA RAX,[RSP + 0x48]
00006bfe(5): MOV qword ptr [RSP + 0x38],RAX
00006c03(5): LEA RAX,[RSP + 0x50]
00006c08(5): MOV qword ptr [RSP + 0x28],RAX
00006c0d(3): NOP dword ptr [RAX]
00006c10(4): MOV RBP,qword ptr [R14 + 0x28]
00006c14(3): MOV R13,R15
00006c17(3): ADD RBP,R15
00006c1a(3): ADD RBP,qword ptr [R14]
00006c1d(5): MOVZX R12D,byte ptr [RBP]
00006c22(4): TEST R12B,0x80
00006c26(2): JNZ 0x00006c3a
00006c28(5): MOV RDI,qword ptr [RSP + 0x8]
00006c2d(5): CALL 0x00001c40
00006c32(2): TEST EAX,EAX
00006c34(6): JNZ 0x00006d28
00006c3a(4): MOV RAX,qword ptr [R14 + 0x20]
00006c3e(5): MOV RDI,qword ptr [RSP + 0x30]
00006c43(3): MOV RDX,RBX
00006c46(5): MOV RCX,qword ptr [RSP + 0x8]
00006c4b(3): SUB RDX,R15
00006c4e(3): MOV RSI,RBP
00006c51(5): MOV qword ptr [RSP + 0x10],RDX
00006c56(5): MOV qword ptr [RSP + 0x48],RAX
00006c5b(5): MOV qword ptr [RSP + 0x20],RDI
00006c60(5): CALL 0x00005f40
00006c65(3): MOV RBP,RAX
00006c68(4): LEA RAX,[RAX + -0x1]
00006c6c(4): CMP RAX,-0x4
00006c70(6): JA 0x00006d58
00006c76(4): MOV EDX,dword ptr [RSP + 0x44]
00006c7a(2): MOV EDI,EDX
00006c7c(4): MOV dword ptr [RSP + 0x18],EDX
00006c80(5): CALL 0x00001bf0
00006c85(4): MOV EDX,dword ptr [RSP + 0x18]
00006c89(3): MOV R12D,EAX
00006c8c(2): CMP EDX,EAX
00006c8e(2): JZ 0x00006d08
00006c90(5): MOV RDX,qword ptr [RSP + 0x38]
00006c95(5): MOV RDI,qword ptr [RSP + 0x28]
00006c9a(2): MOV ESI,EAX
00006c9c(5): CALL 0x00001b10
00006ca1(3): CMP RBP,RAX
00006ca4(6): JNZ 0x00006e18
00006caa(4): MOV RDI,qword ptr [R14 + 0x8]
00006cae(5): MOV RSI,qword ptr [RSP + 0x28]
00006cb3(3): MOV RDX,RBP
00006cb6(3): ADD RDI,R15
00006cb9(5): CALL 0x00001ad0
00006cbe(4): ADD R15,0x1
00006cc2(4): MOV RDX,qword ptr [R14 + 0x10]
00006cc6(8): LEA RAX,[R13*0x4]
00006cce(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
00006cd3(3): CMP R15,RCX
00006cd6(4): MOV dword ptr [RDX + R13*0x4],R12D
00006cda(2): JGE 0x00006cfa
00006cdc(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
00006ce1(4): LEA RDX,[RDX + RCX*0x4]
00006ce5(3): NOP dword ptr [RAX]
00006ce8(6): MOV dword ptr [RAX],0xffffffff
00006cee(4): ADD RAX,0x4
00006cf2(3): CMP RDX,RAX
00006cf5(2): JNZ 0x00006ce8
00006cf7(3): MOV R15,RCX
00006cfa(3): CMP RBX,R15
00006cfd(6): JG 0x00006c10
00006d03(2): JMP 0x00006d78
00006d08(4): MOV RSI,qword ptr [R14 + 0x28]
00006d0c(4): MOV RDI,qword ptr [R14 + 0x8]
00006d10(3): MOV RDX,RBP
00006d13(3): ADD RSI,R15
00006d16(3): ADD RSI,qword ptr [R14]
00006d19(3): ADD RDI,R15
00006d1c(5): CALL 0x00001ad0
00006d21(2): JMP 0x00006cbe
00006d28(5): CALL 0x000018b0
00006d2d(3): MOV RAX,qword ptr [RAX]
00006d30(4): MOV RDX,qword ptr [R14 + 0x8]
00006d34(4): MOV EAX,dword ptr [RAX + R12*0x4]
00006d38(4): MOV byte ptr [RDX + R15*0x1],AL
00006d3c(4): MOV RDX,qword ptr [R14 + 0x8]
00006d40(4): MOV RAX,qword ptr [R14 + 0x10]
00006d44(5): MOVZX EDX,byte ptr [RDX + R15*0x1]
00006d49(4): MOV dword ptr [RAX + R15*0x4],EDX
00006d4d(4): ADD R15,0x1
00006d51(2): JMP 0x00006cfa
00006d58(4): CMP RAX,-0x3
00006d5c(2): JNZ 0x00006d90
00006d5e(4): MOV RAX,qword ptr [R14 + 0x58]
00006d62(4): CMP qword ptr [R14 + 0x40],RAX
00006d66(2): JGE 0x00006d90
00006d68(5): MOV RAX,qword ptr [RSP + 0x48]
00006d6d(4): MOV qword ptr [R14 + 0x20],RAX
00006d71(7): NOP dword ptr [RAX]
00006d78(4): MOV qword ptr [R14 + 0x30],R15
00006d7c(4): MOV qword ptr [R14 + 0x38],R15
00006d80(2): XOR EAX,EAX
00006d82(5): JMP 0x00006a5f
00006d90(3): MOV RAX,qword ptr [R14]
00006d93(4): MOV RDX,qword ptr [R14 + 0x8]
00006d97(3): ADD RAX,R15
00006d9a(4): ADD RAX,qword ptr [R14 + 0x28]
00006d9e(3): MOVZX EAX,byte ptr [RAX]
00006da1(4): MOV byte ptr [RDX + R15*0x1],AL
00006da5(4): MOV RDX,qword ptr [R14 + 0x10]
00006da9(4): ADD R15,0x1
00006dad(4): CMP RBP,-0x1
00006db1(4): MOV dword ptr [RDX + R13*0x4],EAX
00006db5(6): JNZ 0x00006cfa
00006dbb(5): MOV RAX,qword ptr [RSP + 0x48]
00006dc0(4): MOV qword ptr [R14 + 0x20],RAX
00006dc4(5): JMP 0x00006cfa
00006dc9(7): MOV EAX,dword ptr [0x90 + R14]
00006dd0(2): TEST EAX,EAX
00006dd2(6): JLE 0x00006ff0
00006dd8(4): MOV RDI,qword ptr [R14 + 0x28]
00006ddc(4): LEA R11D,[RAX + -0x1]
00006de0(5): LEA RCX,[RSP + 0x50]
00006de5(2): XOR EAX,EAX
00006de7(3): ADD RDI,R13
00006dea(3): ADD RDI,qword ptr [R14]
00006ded(2): JMP 0x00006dfa
00006def(4): ADD RAX,0x1
00006df3(5): CMP qword ptr [RSP + 0x10],RAX
00006df8(2): JZ 0x00006e0b
00006dfa(4): MOVZX ESI,byte ptr [RDI + RAX*0x1]
00006dfe(3): CMP R11,RAX
00006e01(4): MOVZX ESI,byte ptr [RDX + RSI*0x1]
00006e05(4): MOV byte ptr [RCX + RAX*0x1],SIL
00006e09(2): JNZ 0x00006def
00006e0b(5): MOV qword ptr [RSP + 0x18],RCX
00006e10(5): JMP 0x00006ad3
00006e18(3): MOV R13,R15
00006e1b(5): JMP 0x00006aae
00006e20(4): MOV RDI,qword ptr [R14 + 0x8]
00006e24(5): MOV RSI,qword ptr [RSP + 0x18]
00006e29(3): MOV RDX,RBP
00006e2c(3): ADD RDI,R15
00006e2f(5): CALL 0x00001ad0
00006e34(5): JMP 0x00006b61
00006e39(6): CMP qword ptr [RSP + 0x20],-0x3
00006e3f(2): JNZ 0x00006e4b
00006e41(4): MOV RAX,qword ptr [R14 + 0x58]
00006e45(4): CMP qword ptr [R14 + 0x40],RAX
00006e49(2): JL 0x00006ec8
00006e4b(3): MOV RAX,qword ptr [R14]
00006e4e(4): MOV RDX,qword ptr [R14 + 0x78]
00006e52(3): ADD RAX,R13
00006e55(4): ADD RAX,qword ptr [R14 + 0x28]
00006e59(3): TEST RDX,RDX
00006e5c(3): MOVZX EAX,byte ptr [RAX]
00006e5f(6): JNZ 0x0000700c
00006e65(4): MOV RDX,qword ptr [R14 + 0x8]
00006e69(3): MOV RCX,R15
00006e6c(4): MOV byte ptr [RDX + R15*0x1],AL
00006e70(8): CMP byte ptr [0x8c + R14],0x0
00006e78(6): JNZ 0x00006fff
00006e7e(4): MOV RDX,qword ptr [R14 + 0x10]
00006e82(4): ADD R13,0x1
00006e86(4): ADD R15,0x1
00006e8a(4): CMP RBP,-0x1
00006e8e(3): MOV dword ptr [RDX + RCX*0x4],EAX
00006e91(6): JNZ 0x00006a50
00006e97(5): MOV RAX,qword ptr [RSP + 0x48]
00006e9c(4): MOV qword ptr [R14 + 0x20],RAX
00006ea0(5): JMP 0x00006a50
00006ea5(4): MOV RDX,qword ptr [R14 + 0x18]
00006ea9(3): MOV RCX,R15
00006eac(3): MOV R10,R13
00006eaf(3): SUB RCX,R13
00006eb2(4): LEA RDX,[RDX + RCX*0x8]
00006eb6(4): MOV qword ptr [RDX + R10*0x8],R10
00006eba(4): ADD R10,0x1
00006ebe(3): CMP RAX,R10
00006ec1(2): JNZ 0x00006eb6
00006ec3(5): JMP 0x00006b74
00006ec8(5): MOV RAX,qword ptr [RSP + 0x48]
00006ecd(4): MOV qword ptr [R14 + 0x20],RAX
00006ed1(5): JMP 0x00006a55
00006ed6(4): CMP RAX,-0x1
00006eda(6): JZ 0x00006e20
00006ee0(4): LEA RAX,[RAX + R15*0x1]
00006ee4(3): MOV RSI,RAX
00006ee7(5): MOV qword ptr [RSP + 0x8],RAX
00006eec(4): MOV RAX,qword ptr [R14 + 0x40]
00006ef0(3): CMP RSI,RAX
00006ef3(2): JA 0x00006ec8
00006ef5(5): CMP qword ptr [R14 + 0x18],0x0
00006efa(6): JZ 0x00006fb8
00006f00(8): CMP byte ptr [0x8c + R14],0x0
00006f08(2): JNZ 0x00006f2a
00006f0a(3): TEST R15,R15
00006f0d(2): JZ 0x00006f22
00006f0f(4): MOV RDX,qword ptr [R14 + 0x18]
00006f13(2): XOR EAX,EAX
00006f15(4): MOV qword ptr [RDX + RAX*0x8],RAX
00006f19(4): ADD RAX,0x1
00006f1d(3): CMP RAX,R15
00006f20(2): JNZ 0x00006f15
00006f22(8): MOV byte ptr [0x8c + R14],0x1
00006f2a(4): MOV RDI,qword ptr [R14 + 0x8]
00006f2e(3): MOV RSI,RCX
00006f31(3): MOV RDX,R11
00006f34(5): MOV qword ptr [RSP + 0x10],R11
00006f39(3): ADD RDI,R15
00006f3c(5): CALL 0x00001ad0
00006f41(4): MOV RAX,qword ptr [R14 + 0x10]
00006f45(5): MOV R11,qword ptr [RSP + 0x10]
00006f4a(4): LEA RCX,[RAX + R15*0x4]
00006f4e(4): MOV RAX,qword ptr [R14 + 0x18]
00006f52(4): CMP R11,0x1
00006f56(3): MOV dword ptr [RCX],R12D
00006f59(4): LEA RSI,[RAX + R15*0x8]
00006f5d(3): MOV qword ptr [RSI],R13
00006f60(2): JBE 0x00006f8a
00006f62(5): MOV EAX,0x1
00006f67(5): MOV RDX,qword ptr [RSP + 0x20]
00006f6c(3): CMP RAX,RBP
00006f6f(4): CMOVC RDX,RAX
00006f73(3): ADD RDX,R13
00006f76(4): MOV qword ptr [RSI + RAX*0x8],RDX
00006f7a(7): MOV dword ptr [RCX + RAX*0x4],0xffffffff
00006f81(4): ADD RAX,0x1
00006f85(3): CMP RAX,R11
00006f88(2): JNZ 0x00006f67
00006f8a(4): MOV RBX,qword ptr [R14 + 0x58]
00006f8e(3): SUB R11,RBP
00006f91(3): ADD RBX,R11
00006f94(4): CMP R13,qword ptr [R14 + 0x60]
00006f98(4): MOV qword ptr [R14 + 0x58],RBX
00006f9c(2): JGE 0x00006fa2
00006f9e(4): ADD qword ptr [R14 + 0x68],R11
00006fa2(4): CMP qword ptr [R14 + 0x40],RBX
00006fa6(5): MOV R15,qword ptr [RSP + 0x8]
00006fab(5): CMOVLE RBX,qword ptr [R14 + 0x40]
00006fb0(3): ADD R13,RBP
00006fb3(5): JMP 0x00006a50
00006fb8(8): LEA RDI,[RAX*0x8]
00006fc0(5): MOV qword ptr [RSP + 0x18],RCX
00006fc5(5): MOV qword ptr [RSP + 0x10],R11
00006fca(5): CALL 0x00001b00
00006fcf(3): TEST RAX,RAX
00006fd2(4): MOV qword ptr [R14 + 0x18],RAX
00006fd6(5): MOV R11,qword ptr [RSP + 0x10]
00006fdb(5): MOV RCX,qword ptr [RSP + 0x18]
00006fe0(6): JNZ 0x00006f00
00006fe6(5): MOV EAX,0xc
00006feb(5): JMP 0x00006a5f
00006ff0(5): LEA RCX,[RSP + 0x50]
00006ff5(5): JMP 0x00006e0b
00006ffa(5): CALL 0x000019e0
00006fff(4): MOV RDX,qword ptr [R14 + 0x18]
00007003(4): MOV qword ptr [RDX + R15*0x8],R13
00007007(5): JMP 0x00006e7e
0000700c(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
00007010(5): JMP 0x00006e65
00007020(1): PUSH RBP
00007021(1): PUSH RBX
00007022(10): MOV RDX,0xffffffffffffffe
0000702c(4): SUB RSP,0x8
00007030(4): MOV RAX,qword ptr [RDI + 0x40]
00007034(3): CMP RAX,RDX
00007037(6): JA 0x00007148
0000703d(4): MOV RDX,qword ptr [RDI + 0x58]
00007041(3): ADD RAX,RAX
00007044(3): MOVSXD RSI,ESI
00007047(3): MOV RBX,RDI
0000704a(3): CMP RAX,RDX
0000704d(4): CMOVG RAX,RDX
00007051(3): CMP RAX,RSI
00007054(4): CMOVGE RSI,RAX
00007058(5): CALL 0x00006490
0000705d(2): TEST EAX,EAX
0000705f(2): MOV EBP,EAX
00007061(6): JNZ 0x0000711d
00007067(7): MOV RDI,qword ptr [0xb8 + RBX]
0000706e(3): TEST RDI,RDI
00007071(2): JZ 0x00007094
00007073(4): MOV RAX,qword ptr [RBX + 0x40]
00007077(8): LEA RSI,[0x8 + RAX*0x8]
0000707f(5): CALL 0x00001b60
00007084(3): TEST RAX,RAX
00007087(6): JZ 0x00007148
0000708d(7): MOV qword ptr [0xb8 + RBX],RAX
00007094(7): CMP byte ptr [0x88 + RBX],0x0
0000709b(6): MOV EAX,dword ptr [0x90 + RBX]
000070a1(2): JZ 0x000070c0
000070a3(3): CMP EAX,0x1
000070a6(3): MOV RDI,RBX
000070a9(6): JLE 0x00007160
000070af(4): ADD RSP,0x8
000070b3(1): POP RBX
000070b4(1): POP RBP
000070b5(5): JMP 0x00006a00
000070c0(3): CMP EAX,0x1
000070c3(2): JG 0x00007130
000070c5(4): MOV RCX,qword ptr [RBX + 0x78]
000070c9(3): TEST RCX,RCX
000070cc(2): JZ 0x0000711d
000070ce(4): MOV RSI,qword ptr [RBX + 0x58]
000070d2(4): CMP qword ptr [RBX + 0x40],RSI
000070d6(5): CMOVLE RSI,qword ptr [RBX + 0x40]
000070db(4): MOV RAX,qword ptr [RBX + 0x30]
000070df(3): CMP RSI,RAX
000070e2(2): JG 0x000070f4
000070e4(2): JMP 0x00007115
000070f0(4): MOV RCX,qword ptr [RBX + 0x78]
000070f4(3): MOV RDX,qword ptr [RBX]
000070f7(3): ADD RDX,RAX
000070fa(4): ADD RDX,qword ptr [RBX + 0x28]
000070fe(3): MOVZX EDX,byte ptr [RDX]
00007101(4): MOVZX ECX,byte ptr [RCX + RDX*0x1]
00007105(4): MOV RDX,qword ptr [RBX + 0x8]
00007109(3): MOV byte ptr [RDX + RAX*0x1],CL
0000710c(4): ADD RAX,0x1
00007110(3): CMP RSI,RAX
00007113(2): JNZ 0x000070f0
00007115(4): MOV qword ptr [RBX + 0x30],RAX
00007119(4): MOV qword ptr [RBX + 0x38],RAX
0000711d(4): ADD RSP,0x8
00007121(2): MOV EAX,EBP
00007123(1): POP RBX
00007124(1): POP RBP
00007125(1): RET
00007130(3): MOV RDI,RBX
00007133(5): CALL 0x00006830
00007138(4): ADD RSP,0x8
0000713c(2): MOV EAX,EBP
0000713e(1): POP RBX
0000713f(1): POP RBP
00007140(1): RET
00007148(5): MOV EBP,0xc
0000714d(4): ADD RSP,0x8
00007151(2): MOV EAX,EBP
00007153(1): POP RBX
00007154(1): POP RBP
00007155(1): RET
00007160(5): CALL 0x000067c0
00007165(4): ADD RSP,0x8
00007169(2): MOV EAX,EBP
0000716b(1): POP RBX
0000716c(1): POP RBP
0000716d(1): RET
00007170(2): PUSH R12
00007172(1): PUSH RBP
00007173(3): MOV RBP,RSI
00007176(1): PUSH RBX
00007177(4): MOV RAX,qword ptr [RDI + 0x40]
0000717b(3): MOV RBX,RDI
0000717e(7): MOV R12,qword ptr [0xc0 + RDI]
00007185(3): CMP RAX,RSI
00007188(2): JG 0x000071b0
0000718a(4): CMP RAX,qword ptr [RDI + 0x58]
0000718e(2): JGE 0x000071b0
00007190(3): LEA ESI,[RBP + 0x1]
00007193(3): MOV RDI,RBX
00007196(5): CALL 0x00007020
0000719b(2): TEST EAX,EAX
0000719d(2): JNZ 0x000071a6
0000719f(3): CMP R12,RBP
000071a2(2): JL 0x000071d0
000071a4(2): XOR EAX,EAX
000071a6(1): POP RBX
000071a7(1): POP RBP
000071a8(2): POP R12
000071aa(1): RET
000071b0(4): MOV RAX,qword ptr [RBX + 0x30]
000071b4(3): CMP RAX,RBP
000071b7(2): JG 0x0000719f
000071b9(4): CMP RAX,qword ptr [RBX + 0x58]
000071bd(2): JGE 0x0000719f
000071bf(3): LEA ESI,[RBP + 0x1]
000071c2(3): MOV RDI,RBX
000071c5(5): CALL 0x00007020
000071ca(2): TEST EAX,EAX
000071cc(2): JZ 0x0000719f
000071ce(2): JMP 0x000071a6
000071d0(7): MOV RAX,qword ptr [0xb8 + RBX]
000071d7(3): MOV RDX,RBP
000071da(2): XOR ESI,ESI
000071dc(3): SUB RDX,R12
000071df(4): SHL RDX,0x3
000071e3(5): LEA RDI,[RAX + R12*0x8 + 0x8]
000071e8(5): CALL 0x00001a60
000071ed(7): MOV qword ptr [0xc0 + RBX],RBP
000071f4(2): JMP 0x000071a4
00007200(1): PUSH RBX
00007201(3): MOV RBX,RDI
00007204(3): MOV RDI,qword ptr [RDI]
00007207(5): CALL 0x000018d0
0000720c(4): MOV RDI,qword ptr [RBX + 0x8]
00007210(5): CALL 0x000018d0
00007215(4): MOV RDI,qword ptr [RBX + 0x10]
00007219(5): CALL 0x000018d0
0000721e(4): MOV RDI,qword ptr [RBX + 0x18]
00007222(5): CALL 0x000018d0
00007227(3): MOV RDI,RBX
0000722a(1): POP RBX
0000722b(5): JMP 0x000018d0
00007230(3): MOV EAX,dword ptr [RDI + 0x8]
00007233(5): AND EAX,0x400ff
00007238(3): CMP EAX,0x6
0000723b(2): JZ 0x00007250
0000723d(3): CMP EAX,0x3
00007240(2): JZ 0x00007248
00007242(2): RET
00007248(3): MOV RDI,qword ptr [RDI]
0000724b(5): JMP 0x000018d0
00007250(3): MOV RDI,qword ptr [RDI]
00007253(2): JMP 0x00007200
00007260(4): LEA RDI,[RSI + 0x28]
00007264(4): SUB RSP,0x8
00007268(5): CALL 0x00007230
0000726d(2): XOR EAX,EAX
0000726f(4): ADD RSP,0x8
00007273(1): RET
00007280(2): PUSH R15
00007282(2): PUSH R14
00007284(3): MOV R14,RSI
00007287(2): PUSH R13
00007289(2): PUSH R12
0000728b(1): PUSH RBP
0000728c(1): PUSH RBX
0000728d(3): MOV RBX,RDI
00007290(4): SUB RSP,0x18
00007294(4): MOV RSI,qword ptr [RDI + 0x10]
00007298(4): MOV RBP,qword ptr [RDI + 0x8]
0000729c(3): CMP RSI,RBP
0000729f(6): JNC 0x00007350
000072a5(4): MOV R12,qword ptr [RDI + 0x18]
000072a9(4): MOV RBP,qword ptr [RDI + 0x28]
000072ad(3): MOV RAX,RSI
000072b0(2): MOV ECX,EDX
000072b2(4): SHL RAX,0x4
000072b6(3): ADD RAX,qword ptr [RBX]
000072b9(6): AND ECX,0xfffc00ff
000072bf(4): MOV qword ptr [RAX + 0x8],RDX
000072c3(3): MOV dword ptr [RAX + 0x8],ECX
000072c6(2): XOR ECX,ECX
000072c8(3): CMP DL,0x6
000072cb(3): MOV qword ptr [RAX],R14
000072ce(3): SETZ CL
000072d1(3): CMP DL,0x5
000072d4(2): JNZ 0x000072e2
000072d6(2): XOR ECX,ECX
000072d8(7): CMP dword ptr [0xb4 + RBX],0x1
000072df(3): SETG CL
000072e2(4): MOVZX EDX,byte ptr [RAX + 0xa]
000072e6(3): SHL ECX,0x4
000072e9(4): PXOR XMM0,XMM0
000072ed(3): AND EDX,0xffffffef
000072f0(2): OR EDX,ECX
000072f2(3): MOV byte ptr [RAX + 0xa],DL
000072f5(8): MOV qword ptr [R12 + RSI*0x8],-0x1
000072fd(4): MOV RAX,qword ptr [RBX + 0x10]
00007301(4): LEA RAX,[RAX + RAX*0x2]
00007305(5): LEA RAX,[RBP + RAX*0x8]
0000730a(3): MOVUPS xmmword ptr [RAX],XMM0
0000730d(8): MOV qword ptr [RAX + 0x10],0x0
00007315(4): MOV RAX,qword ptr [RBX + 0x10]
00007319(4): LEA RDX,[RAX + RAX*0x2]
0000731d(4): MOV RAX,qword ptr [RBX + 0x30]
00007321(4): LEA RAX,[RAX + RDX*0x8]
00007325(3): MOVUPS xmmword ptr [RAX],XMM0
00007328(8): MOV qword ptr [RAX + 0x10],0x0
00007330(4): MOV RAX,qword ptr [RBX + 0x10]
00007334(4): LEA RDX,[RAX + 0x1]
00007338(4): MOV qword ptr [RBX + 0x10],RDX
0000733c(4): ADD RSP,0x18
00007340(1): POP RBX
00007341(1): POP RBP
00007342(2): POP R12
00007344(2): POP R13
00007346(2): POP R14
00007348(2): POP R15
0000734a(1): RET
00007350(5): LEA R13,[RBP + RBP*0x1]
00007355(10): MOV RAX,0xaaaaaaaaaaaaaaa
0000735f(3): CMP R13,RAX
00007362(6): JA 0x00007442
00007368(3): MOV RDI,qword ptr [RDI]
0000736b(3): MOV RSI,RBP
0000736e(5): MOV qword ptr [RSP + 0x8],RDX
00007373(4): SHL RSI,0x5
00007377(5): CALL 0x00001b60
0000737c(3): TEST RAX,RAX
0000737f(6): JZ 0x00007442
00007385(3): MOV R15,RBP
00007388(4): MOV RDI,qword ptr [RBX + 0x18]
0000738c(3): MOV qword ptr [RBX],RAX
0000738f(4): SHL R15,0x4
00007393(3): MOV RSI,R15
00007396(5): CALL 0x00001b60
0000739b(4): MOV RDI,qword ptr [RBX + 0x20]
0000739f(3): MOV RSI,R15
000073a2(5): LEA R15,[R13 + RBP*0x4]
000073a7(3): MOV R12,RAX
000073aa(4): SHL R15,0x3
000073ae(5): CALL 0x00001b60
000073b3(4): MOV RDI,qword ptr [RBX + 0x28]
000073b7(3): MOV RSI,R15
000073ba(4): MOV qword ptr [RSP],RAX
000073be(5): CALL 0x00001b60
000073c3(4): MOV RDI,qword ptr [RBX + 0x30]
000073c7(3): MOV RSI,R15
000073ca(3): MOV RBP,RAX
000073cd(5): CALL 0x00001b60
000073d2(3): TEST R12,R12
000073d5(4): MOV RCX,qword ptr [RSP]
000073d9(2): JZ 0x00007410
000073db(3): TEST RCX,RCX
000073de(2): JZ 0x00007410
000073e0(3): TEST RBP,RBP
000073e3(2): JZ 0x00007410
000073e5(3): TEST RAX,RAX
000073e8(5): MOV RDX,qword ptr [RSP + 0x8]
000073ed(2): JZ 0x00007410
000073ef(4): MOV qword ptr [RBX + 0x18],R12
000073f3(4): MOV qword ptr [RBX + 0x20],RCX
000073f7(4): MOV qword ptr [RBX + 0x28],RBP
000073fb(4): MOV qword ptr [RBX + 0x30],RAX
000073ff(4): MOV qword ptr [RBX + 0x8],R13
00007403(4): MOV RSI,qword ptr [RBX + 0x10]
00007407(5): JMP 0x000072ad
00007410(3): MOV RDI,R12
00007413(5): MOV qword ptr [RSP + 0x8],RAX
00007418(4): MOV qword ptr [RSP],RCX
0000741c(5): CALL 0x000018d0
00007421(4): MOV RCX,qword ptr [RSP]
00007425(3): MOV RDI,RCX
00007428(5): CALL 0x000018d0
0000742d(3): MOV RDI,RBP
00007430(5): CALL 0x000018d0
00007435(5): MOV RAX,qword ptr [RSP + 0x8]
0000743a(3): MOV RDI,RAX
0000743d(5): CALL 0x000018d0
00007442(7): MOV RAX,-0x1
00007449(5): JMP 0x0000733c
00007450(2): PUSH R13
00007452(2): PUSH R12
00007454(3): MOV R13,RSI
00007457(1): PUSH RBP
00007458(1): PUSH RBX
00007459(4): SHL R13,0x4
0000745d(3): MOV RBP,RSI
00007460(3): MOV R12D,EDX
00007463(3): MOV RBX,RDI
00007466(4): SUB RSP,0x8
0000746a(3): MOV RAX,qword ptr [RDI]
0000746d(4): MOV RSI,qword ptr [RAX + R13*0x1]
00007471(5): MOV RDX,qword ptr [RAX + R13*0x1 + 0x8]
00007476(5): CALL 0x00007280
0000747b(4): CMP RAX,-0x1
0000747f(2): JZ 0x000074e4
00007481(3): MOV EDI,R12D
00007484(3): MOV R8,qword ptr [RBX]
00007487(3): MOV RSI,RAX
0000748a(5): AND DI,0x3ff
0000748f(4): SHL RSI,0x4
00007493(2): MOV ECX,EDI
00007495(6): AND ECX,0x3ff
0000749b(3): ADD RSI,R8
0000749e(3): SHL ECX,0x8
000074a1(2): MOV EDX,ECX
000074a3(3): MOV ECX,dword ptr [RSI + 0x8]
000074a6(6): AND ECX,0xfffc00ff
000074ac(2): OR ECX,EDX
000074ae(3): MOV dword ptr [RSI + 0x8],ECX
000074b1(5): MOV EDX,dword ptr [R8 + R13*0x1 + 0x8]
000074b6(6): AND ECX,0xfffc00ff
000074bc(3): SHR EDX,0x8
000074bf(2): OR EDX,EDI
000074c1(6): AND EDX,0x3ff
000074c7(3): SHL EDX,0x8
000074ca(2): OR EDX,ECX
000074cc(2): MOV ECX,EDX
000074ce(3): MOV dword ptr [RSI + 0x8],EDX
000074d1(3): SHR ECX,0x10
000074d4(2): MOV EDX,ECX
000074d6(3): OR EDX,0x4
000074d9(3): MOV byte ptr [RSI + 0xa],DL
000074dc(4): MOV RDX,qword ptr [RBX + 0x20]
000074e0(4): MOV qword ptr [RDX + RAX*0x8],RBP
000074e4(4): ADD RSP,0x8
000074e8(1): POP RBX
000074e9(1): POP RBP
000074ea(2): POP R12
000074ec(2): POP R13
000074ee(1): RET
000074f0(2): PUSH R15
000074f2(2): PUSH R14
000074f4(3): MOV R9,RSI
000074f7(2): PUSH R13
000074f9(2): PUSH R12
000074fb(3): MOV R14,RDI
000074fe(1): PUSH RBP
000074ff(1): PUSH RBX
00007500(3): MOV R13,RDX
00007503(3): MOV EBP,R8D
00007506(4): SUB RSP,0x18
0000750a(5): MOV qword ptr [RSP + 0x8],RCX
0000750f(3): MOV R8,qword ptr [R14]
00007512(3): MOV RAX,R9
00007515(4): MOV RDI,qword ptr [R14 + 0x28]
00007519(4): SHL RAX,0x4
0000751d(3): MOV R12,R13
00007520(3): ADD RAX,R8
00007523(4): CMP byte ptr [RAX + 0x8],0x4
00007527(6): JZ 0x000076e0
0000752d(4): LEA R12,[R9 + R9*0x2]
00007531(4): SHL R12,0x3
00007535(4): LEA RSI,[RDI + R12*0x1]
00007539(4): MOV RCX,qword ptr [RSI + 0x8]
0000753d(3): TEST RCX,RCX
00007540(6): JZ 0x00007739
00007546(5): LEA RBX,[R13 + R13*0x2]
0000754b(4): MOV RSI,qword ptr [RSI + 0x10]
0000754f(4): SHL RBX,0x3
00007553(3): ADD RDI,RBX
00007556(4): CMP RCX,0x1
0000755a(3): MOV R15,qword ptr [RSI]
0000755d(8): MOV qword ptr [RDI + 0x8],0x0
00007565(6): JZ 0x00007680
0000756b(4): MOV RDX,qword ptr [R14 + 0x10]
0000756f(4): LEA RSI,[RDX + -0x1]
00007573(3): MOV RAX,RSI
00007576(4): SHL RAX,0x4
0000757a(3): ADD RAX,R8
0000757d(4): TEST byte ptr [RAX + 0xa],0x4
00007581(6): JZ 0x00007630
00007587(3): TEST RSI,RSI
0000758a(6): JLE 0x00007630
00007590(4): SHL RDX,0x4
00007594(3): SUB R8,RAX
00007597(4): MOV RCX,qword ptr [R14 + 0x20]
0000759b(5): LEA R8,[R8 + RDX*0x1 + -0x20]
000075a0(2): JMP 0x000075ba
000075a8(3): ADD RAX,R8
000075ab(4): SUB RSI,0x1
000075af(4): TEST byte ptr [RAX + 0xa],0x4
000075b3(2): JZ 0x00007630
000075b5(3): TEST RSI,RSI
000075b8(2): JLE 0x00007630
000075ba(4): CMP qword ptr [RCX + RSI*0x8],R15
000075be(2): JNZ 0x000075a8
000075c0(3): MOV EDX,dword ptr [RAX + 0x8]
000075c3(3): SHR EDX,0x8
000075c6(6): AND EDX,0x3ff
000075cc(2): CMP EBP,EDX
000075ce(2): JNZ 0x000075a8
000075d0(5): CALL 0x000065a0
000075d5(2): TEST AL,AL
000075d7(2): JZ 0x0000761b
000075d9(4): MOV RAX,qword ptr [R14 + 0x28]
000075dd(2): MOV EDX,EBP
000075df(3): MOV RDI,R14
000075e2(5): MOV RAX,qword ptr [RAX + R12*0x1 + 0x10]
000075e7(4): MOV R9,qword ptr [RAX + 0x8]
000075eb(3): MOV RSI,R9
000075ee(4): MOV qword ptr [RSP],R9
000075f2(5): CALL 0x00007450
000075f7(4): CMP RAX,-0x1
000075fb(3): MOV R13,RAX
000075fe(2): JZ 0x0000761b
00007600(4): ADD RBX,qword ptr [R14 + 0x28]
00007604(3): MOV RSI,R13
00007607(3): MOV RDI,RBX
0000760a(5): CALL 0x000065a0
0000760f(2): TEST AL,AL
00007611(4): MOV R9,qword ptr [RSP]
00007615(6): JNZ 0x0000750f
0000761b(5): MOV EAX,0xc
00007620(4): ADD RSP,0x18
00007624(1): POP RBX
00007625(1): POP RBP
00007626(2): POP R12
00007628(2): POP R13
0000762a(2): POP R14
0000762c(2): POP R15
0000762e(1): RET
00007630(2): MOV EDX,EBP
00007632(3): MOV RSI,R15
00007635(3): MOV RDI,R14
00007638(5): CALL 0x00007450
0000763d(4): CMP RAX,-0x1
00007641(3): MOV R13,RAX
00007644(2): JZ 0x0000761b
00007646(4): MOV RDI,qword ptr [R14 + 0x28]
0000764a(3): MOV RSI,R13
0000764d(3): ADD RDI,RBX
00007650(5): CALL 0x000065a0
00007655(2): TEST AL,AL
00007657(2): JZ 0x0000761b
00007659(5): MOV RCX,qword ptr [RSP + 0x8]
0000765e(3): MOV R8D,EBP
00007661(3): MOV RDX,R13
00007664(3): MOV RSI,R15
00007667(3): MOV RDI,R14
0000766a(5): CALL 0x000074f0
0000766f(2): TEST EAX,EAX
00007671(6): JZ 0x000075d9
00007677(2): JMP 0x00007620
00007680(5): CMP R9,qword ptr [RSP + 0x8]
00007685(2): JNZ 0x00007690
00007687(3): CMP R9,R13
0000768a(6): JNZ 0x0000774c
00007690(3): MOV EAX,dword ptr [RAX + 0x8]
00007693(3): MOV RSI,R15
00007696(3): MOV RDI,R14
00007699(3): SHR EAX,0x8
0000769c(5): AND EAX,0x3ff
000076a1(2): OR EBP,EAX
000076a3(2): MOV EDX,EBP
000076a5(5): CALL 0x00007450
000076aa(4): CMP RAX,-0x1
000076ae(3): MOV R13,RAX
000076b1(6): JZ 0x0000761b
000076b7(4): ADD RBX,qword ptr [R14 + 0x28]
000076bb(3): MOV RSI,RAX
000076be(3): MOV RDI,RBX
000076c1(5): CALL 0x000065a0
000076c6(2): TEST AL,AL
000076c8(6): JZ 0x0000761b
000076ce(3): MOV R9,R15
000076d1(5): JMP 0x0000750f
000076e0(4): MOV RAX,qword ptr [R14 + 0x18]
000076e4(5): LEA RBX,[R13 + R13*0x2]
000076e9(8): LEA R15,[R9*0x8]
000076f1(2): MOV EDX,EBP
000076f3(4): SHL RBX,0x3
000076f7(4): MOV R9,qword ptr [RAX + R9*0x8]
000076fb(9): MOV qword ptr [RDI + RBX*0x1 + 0x8],0x0
00007704(3): MOV RDI,R14
00007707(3): MOV RSI,R9
0000770a(4): MOV qword ptr [RSP],R9
0000770e(5): CALL 0x00007450
00007713(4): CMP RAX,-0x1
00007717(3): MOV R13,RAX
0000771a(4): MOV R9,qword ptr [RSP]
0000771e(6): JZ 0x0000761b
00007724(4): MOV RAX,qword ptr [R14 + 0x18]
00007728(4): MOV qword ptr [RSP],R9
0000772c(4): MOV RCX,qword ptr [RAX + R15*0x1]
00007730(4): MOV qword ptr [RAX + R12*0x8],RCX
00007734(5): JMP 0x00007600
00007739(4): MOV RAX,qword ptr [R14 + 0x18]
0000773d(4): MOV RCX,qword ptr [RAX + R9*0x8]
00007741(4): MOV qword ptr [RAX + R13*0x8],RCX
00007745(2): XOR EAX,EAX
00007747(5): JMP 0x00007620
0000774c(3): MOV RSI,R15
0000774f(5): CALL 0x000065a0
00007754(2): MOV EDX,EAX
00007756(2): XOR EAX,EAX
00007758(2): TEST DL,DL
0000775a(6): JNZ 0x00007620
00007760(5): JMP 0x0000761b
00007770(1): PUSH RBX
00007771(3): MOV RBX,RDI
00007774(4): MOV RDI,qword ptr [RDI + 0x30]
00007778(5): CALL 0x000018d0
0000777d(4): MOV RDI,qword ptr [RBX + 0x48]
00007781(5): CALL 0x000018d0
00007786(4): MOV RAX,qword ptr [RBX + 0x50]
0000778a(4): LEA RDX,[RBX + 0x8]
0000778e(3): CMP RAX,RDX
00007791(2): JZ 0x000077a5
00007793(4): MOV RDI,qword ptr [RAX + 0x10]
00007797(5): CALL 0x000018d0
0000779c(4): MOV RDI,qword ptr [RBX + 0x50]
000077a0(5): CALL 0x000018d0
000077a5(4): MOV RDI,qword ptr [RBX + 0x18]
000077a9(5): CALL 0x000018d0
000077ae(4): MOV RDI,qword ptr [RBX + 0x60]
000077b2(5): CALL 0x000018d0
000077b7(4): MOV RDI,qword ptr [RBX + 0x58]
000077bb(5): CALL 0x000018d0
000077c0(3): MOV RDI,RBX
000077c3(1): POP RBX
000077c4(5): JMP 0x000018d0
000077d0(1): PUSH RBX
000077d1(3): MOV RBX,RDI
000077d4(4): MOV RDI,qword ptr [RDI + 0x10]
000077d8(5): CALL 0x000018d0
000077dd(4): MOV RDI,qword ptr [RBX + 0x18]
000077e1(5): CALL 0x000018d0
000077e6(7): CMP byte ptr [0x8b + RBX],0x0
000077ed(2): JNZ 0x000077f8
000077ef(1): POP RBX
000077f0(1): RET
000077f8(4): MOV RDI,qword ptr [RBX + 0x8]
000077fc(1): POP RBX
000077fd(5): JMP 0x000018d0
00007810(2): PUSH R14
00007812(2): PUSH R13
00007814(2): PUSH R12
00007816(3): MOV R12,RDI
00007819(1): PUSH RBP
0000781a(1): PUSH RBX
0000781b(3): MOV RDI,qword ptr [RDI]
0000781e(3): TEST RDI,RDI
00007821(2): JZ 0x0000784e
00007823(6): CMP qword ptr [R12 + 0x10],0x0
00007829(2): JZ 0x0000784e
0000782b(2): XOR EBX,EBX
0000782d(2): JMP 0x00007834
00007830(4): MOV RDI,qword ptr [R12]
00007834(3): MOV RAX,RBX
00007837(4): ADD RBX,0x1
0000783b(4): SHL RAX,0x4
0000783f(3): ADD RDI,RAX
00007842(5): CALL 0x00007230
00007847(5): CMP qword ptr [R12 + 0x10],RBX
0000784c(2): JA 0x00007830
0000784e(5): MOV RDI,qword ptr [R12 + 0x18]
00007853(5): CALL 0x000018d0
00007858(6): CMP qword ptr [R12 + 0x10],0x0
0000785e(2): JZ 0x000078b3
00007860(2): XOR EBX,EBX
00007862(2): XOR EBP,EBP
00007864(4): NOP dword ptr [RAX]
00007868(5): MOV RAX,qword ptr [R12 + 0x30]
0000786d(3): TEST RAX,RAX
00007870(2): JZ 0x0000787c
00007872(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
00007877(5): CALL 0x000018d0
0000787c(5): MOV RAX,qword ptr [R12 + 0x38]
00007881(3): TEST RAX,RAX
00007884(2): JZ 0x00007890
00007886(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000788b(5): CALL 0x000018d0
00007890(5): MOV RAX,qword ptr [R12 + 0x28]
00007895(3): TEST RAX,RAX
00007898(2): JZ 0x000078a4
0000789a(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000789f(5): CALL 0x000018d0
000078a4(4): ADD RBP,0x1
000078a8(4): ADD RBX,0x18
000078ac(5): CMP qword ptr [R12 + 0x10],RBP
000078b1(2): JA 0x00007868
000078b3(5): MOV RDI,qword ptr [R12 + 0x28]
000078b8(5): CALL 0x000018d0
000078bd(5): MOV RDI,qword ptr [R12 + 0x30]
000078c2(5): CALL 0x000018d0
000078c7(5): MOV RDI,qword ptr [R12 + 0x38]
000078cc(5): CALL 0x000018d0
000078d1(4): MOV RDI,qword ptr [R12]
000078d5(5): CALL 0x000018d0
000078da(5): MOV RDI,qword ptr [R12 + 0x40]
000078df(3): TEST RDI,RDI
000078e2(2): JZ 0x00007937
000078e4(3): XOR R14D,R14D
000078e7(3): XOR R13D,R13D
000078ea(6): NOP word ptr [RAX + RAX*0x1]
000078f0(4): LEA RBP,[RDI + R14*0x1]
000078f4(5): CMP qword ptr [RBP],0x0
000078f9(2): JLE 0x00007917
000078fb(2): XOR EBX,EBX
000078fd(3): NOP dword ptr [RAX]
00007900(4): MOV RAX,qword ptr [RBP + 0x10]
00007904(4): MOV RDI,qword ptr [RAX + RBX*0x8]
00007908(4): ADD RBX,0x1
0000790c(5): CALL 0x00007770
00007911(4): CMP qword ptr [RBP],RBX
00007915(2): JG 0x00007900
00007917(4): MOV RDI,qword ptr [RBP + 0x10]
0000791b(4): ADD R13,0x1
0000791f(4): ADD R14,0x18
00007923(5): CALL 0x000018d0
00007928(8): CMP qword ptr [0x88 + R12],R13
00007930(5): MOV RDI,qword ptr [R12 + 0x40]
00007935(2): JNC 0x000078f0
00007937(5): CALL 0x000018d0
0000793c(5): MOV RDI,qword ptr [R12 + 0x78]
00007941(7): LEA RAX,[0x15e60]
00007948(3): CMP RDI,RAX
0000794b(2): JZ 0x00007952
0000794d(5): CALL 0x000018d0
00007952(8): MOV RDI,qword ptr [0xe0 + R12]
0000795a(5): CALL 0x000018d0
0000795f(1): POP RBX
00007960(3): MOV RDI,R12
00007963(1): POP RBP
00007964(2): POP R12
00007966(2): POP R13
00007968(2): POP R14
0000796a(5): JMP 0x000018d0
00007970(2): PUSH R14
00007972(2): PUSH R13
00007974(3): MOV R14,RDI
00007977(2): PUSH R12
00007979(1): PUSH RBP
0000797a(1): PUSH RBX
0000797b(8): CMP qword ptr [0xe8 + RDI],0x0
00007983(6): JLE 0x00007a09
00007989(3): XOR R13D,R13D
0000798c(4): NOP dword ptr [RAX]
00007990(7): MOV RAX,qword ptr [0xf8 + R14]
00007997(4): MOV R12,qword ptr [RAX + R13*0x8]
0000799b(6): CMP qword ptr [R12 + 0x20],0x0
000079a1(2): JLE 0x000079cd
000079a3(2): XOR EBX,EBX
000079a5(3): NOP dword ptr [RAX]
000079a8(5): MOV RAX,qword ptr [R12 + 0x28]
000079ad(4): MOV RBP,qword ptr [RAX + RBX*0x8]
000079b1(4): ADD RBX,0x1
000079b5(4): MOV RDI,qword ptr [RBP + 0x20]
000079b9(5): CALL 0x000018d0
000079be(3): MOV RDI,RBP
000079c1(5): CALL 0x000018d0
000079c6(5): CMP qword ptr [R12 + 0x20],RBX
000079cb(2): JG 0x000079a8
000079cd(5): MOV RDI,qword ptr [R12 + 0x28]
000079d2(5): CALL 0x000018d0
000079d7(5): MOV RAX,qword ptr [R12 + 0x10]
000079dc(3): TEST RAX,RAX
000079df(2): JZ 0x000079f4
000079e1(4): MOV RDI,qword ptr [RAX + 0x10]
000079e5(5): CALL 0x000018d0
000079ea(5): MOV RDI,qword ptr [R12 + 0x10]
000079ef(5): CALL 0x000018d0
000079f4(3): MOV RDI,R12
000079f7(4): ADD R13,0x1
000079fb(5): CALL 0x000018d0
00007a00(7): CMP qword ptr [0xe8 + R14],R13
00007a07(2): JG 0x00007990
00007a09(1): POP RBX
00007a0a(11): MOV qword ptr [0xe8 + R14],0x0
00007a15(11): MOV qword ptr [0xc8 + R14],0x0
00007a20(1): POP RBP
00007a21(2): POP R12
00007a23(2): POP R13
00007a25(2): POP R14
00007a27(1): RET
00007a30(4): MOV RCX,qword ptr [RDI + 0x30]
00007a34(4): LEA RAX,[RSI + 0x1]
00007a38(3): CMP RAX,RCX
00007a3b(2): JGE 0x00007a78
00007a3d(4): MOV RDX,qword ptr [RDI + 0x10]
00007a41(8): LEA RDI,[RAX*0x4]
00007a49(4): CMP dword ptr [RDX + RAX*0x4],-0x1
00007a4d(2): JNZ 0x00007a78
00007a4f(3): SUB RCX,RSI
00007a52(5): LEA RSI,[RDX + RDI*0x1 + -0x4]
00007a57(5): MOV EDX,0x2
00007a5c(2): JMP 0x00007a6b
00007a60(4): ADD RDX,0x1
00007a64(5): CMP dword ptr [RSI + RDX*0x4 + -0x4],-0x1
00007a69(2): JNZ 0x00007a7d
00007a6b(3): CMP RDX,RCX
00007a6e(2): MOV EAX,EDX
00007a70(2): JNZ 0x00007a60
00007a72(2): RET
00007a78(5): MOV EAX,0x1
00007a7d(2): RET
00007a80(4): MOV RDX,qword ptr [RDI + 0x8]
00007a84(2): XOR EAX,EAX
00007a86(4): CMP RDX,qword ptr [RSI + 0x8]
00007a8a(2): JZ 0x00007a90
00007a8c(2): RET
00007a90(4): LEA RAX,[RDX + -0x1]
00007a94(8): LEA RDX,[RAX*0x8]
00007a9c(2): JMP 0x00007abd
00007aa0(4): MOV RCX,qword ptr [RDI + 0x10]
00007aa4(4): MOV R8,qword ptr [RCX + RDX*0x1]
00007aa8(4): MOV RCX,qword ptr [RSI + 0x10]
00007aac(4): MOV RCX,qword ptr [RCX + RDX*0x1]
00007ab0(4): SUB RDX,0x8
00007ab4(3): CMP R8,RCX
00007ab7(2): JNZ 0x00007ad0
00007ab9(4): SUB RAX,0x1
00007abd(3): TEST RAX,RAX
00007ac0(2): JNS 0x00007aa0
00007ac2(5): MOV EAX,0x1
00007ac7(1): RET
00007ad0(2): XOR EAX,EAX
00007ad2(1): RET
00007ae0(2): XOR EAX,EAX
00007ae2(3): TEST RDI,RDI
00007ae5(2): JLE 0x00007b25
00007ae7(3): MOV R8,qword ptr [RSI]
00007aea(4): SUB RDI,0x1
00007aee(2): XOR ESI,ESI
00007af0(3): CMP RSI,RDI
00007af3(2): JNC 0x00007b1d
00007af5(4): LEA RCX,[RSI + RDI*0x1]
00007af9(3): SHR RCX,1
00007afc(4): CMP RDX,qword ptr [R8 + RCX*0x8]
00007b00(2): JLE 0x00007b18
00007b02(2): JMP 0x00007b30
00007b08(4): LEA RAX,[RSI + RCX*0x1]
00007b0c(3): SHR RAX,1
00007b0f(4): CMP qword ptr [R8 + RAX*0x8],RDX
00007b13(2): JL 0x00007b40
00007b15(3): MOV RCX,RAX
00007b18(3): CMP RSI,RCX
00007b1b(2): JC 0x00007b08
00007b1d(2): XOR EAX,EAX
00007b1f(4): CMP RDX,qword ptr [R8 + RSI*0x8]
00007b23(2): JZ 0x00007b50
00007b25(2): RET
00007b30(3): MOV RAX,RCX
00007b33(3): MOV RCX,RDI
00007b36(10): NOP word ptr CS:[RAX + RAX*0x1]
00007b40(4): LEA RSI,[RAX + 0x1]
00007b44(3): MOV RDI,RCX
00007b47(2): JMP 0x00007af0
00007b50(4): LEA RAX,[RSI + 0x1]
00007b54(1): RET
00007b60(2): PUSH R15
00007b62(2): PUSH R14
00007b64(4): LEA R14,[RSI + 0x10]
00007b68(2): PUSH R13
00007b6a(2): PUSH R12
00007b6c(3): MOV R15,RCX
00007b6f(1): PUSH RBP
00007b70(1): PUSH RBX
00007b71(3): MOV R12,RDI
00007b74(3): MOV RBP,RSI
00007b77(3): MOV RBX,RDX
00007b7a(3): MOV R13D,R8D
00007b7d(4): SUB RSP,0x8
00007b81(4): MOV RDI,qword ptr [RBP + 0x8]
00007b85(3): MOV RDX,RBX
00007b88(3): MOV RSI,R14
00007b8b(5): CALL 0x00007ae0
00007b90(3): TEST RAX,RAX
00007b93(2): JNZ 0x00007c00
00007b95(3): MOV RAX,RBX
00007b98(4): SHL RAX,0x4
00007b9c(4): ADD RAX,qword ptr [R12]
00007ba0(4): MOVZX EDX,byte ptr [RAX + 0x8]
00007ba4(3): CMP EDX,R13D
00007ba7(2): JNZ 0x00007bae
00007ba9(3): CMP qword ptr [RAX],R15
00007bac(2): JZ 0x00007be8
00007bae(3): MOV RSI,RBX
00007bb1(3): MOV RDI,RBP
00007bb4(5): CALL 0x000065a0
00007bb9(2): TEST AL,AL
00007bbb(2): JZ 0x00007c18
00007bbd(4): LEA RBX,[RBX + RBX*0x2]
00007bc1(5): MOV RDX,qword ptr [R12 + 0x28]
00007bc6(4): SHL RBX,0x3
00007bca(3): ADD RDX,RBX
00007bcd(4): MOV RAX,qword ptr [RDX + 0x8]
00007bd1(3): TEST RAX,RAX
00007bd4(2): JZ 0x00007c00
00007bd6(4): CMP RAX,0x2
00007bda(4): MOV RDX,qword ptr [RDX + 0x10]
00007bde(2): JZ 0x00007c30
00007be0(3): MOV RBX,qword ptr [RDX]
00007be3(2): JMP 0x00007b81
00007be8(4): CMP R13D,0x9
00007bec(2): JNZ 0x00007c00
00007bee(3): MOV RSI,RBX
00007bf1(3): MOV RDI,RBP
00007bf4(5): CALL 0x000065a0
00007bf9(2): TEST AL,AL
00007bfb(2): JZ 0x00007c18
00007bfd(3): NOP dword ptr [RAX]
00007c00(2): XOR EAX,EAX
00007c02(4): ADD RSP,0x8
00007c06(1): POP RBX
00007c07(1): POP RBP
00007c08(2): POP R12
00007c0a(2): POP R13
00007c0c(2): POP R14
00007c0e(2): POP R15
00007c10(1): RET
00007c18(4): ADD RSP,0x8
00007c1c(5): MOV EAX,0xc
00007c21(1): POP RBX
00007c22(1): POP RBP
00007c23(2): POP R12
00007c25(2): POP R13
00007c27(2): POP R14
00007c29(2): POP R15
00007c2b(1): RET
00007c30(4): MOV RDX,qword ptr [RDX + 0x8]
00007c34(3): MOV R8D,R13D
00007c37(3): MOV RCX,R15
00007c3a(3): MOV RSI,RBP
00007c3d(3): MOV RDI,R12
00007c40(5): CALL 0x00007b60
00007c45(2): TEST EAX,EAX
00007c47(2): JNZ 0x00007c02
00007c49(5): MOV RAX,qword ptr [R12 + 0x28]
00007c4e(5): MOV RDX,qword ptr [RAX + RBX*0x1 + 0x10]
00007c53(2): JMP 0x00007be0
00007c60(3): MOV RAX,qword ptr [RDI]
00007c63(3): CMP RAX,RDX
00007c66(2): JLE 0x00007c92
00007c68(4): SUB RAX,0x1
00007c6c(3): CMP RDX,RAX
00007c6f(3): MOV qword ptr [RDI],RAX
00007c72(2): JGE 0x00007c92
00007c74(3): MOV RAX,qword ptr [RSI]
00007c77(9): NOP word ptr [RAX + RAX*0x1]
00007c80(5): MOV RCX,qword ptr [RAX + RDX*0x8 + 0x8]
00007c85(4): MOV qword ptr [RAX + RDX*0x8],RCX
00007c89(4): ADD RDX,0x1
00007c8d(3): CMP RDX,qword ptr [RDI]
00007c90(2): JL 0x00007c80
00007c92(2): RET
00007ca0(4): MOVZX EAX,byte ptr [RSI + 0x30]
00007ca4(2): CMP AL,0x4
00007ca6(2): JZ 0x00007d00
00007ca8(2): CMP AL,0x11
00007caa(2): JZ 0x00007cb0
00007cac(2): XOR EAX,EAX
00007cae(1): RET
00007cb0(4): MOV RAX,qword ptr [RSI + 0x8]
00007cb4(3): TEST RAX,RAX
00007cb7(2): JZ 0x00007cac
00007cb9(4): CMP byte ptr [RAX + 0x30],0x11
00007cbd(2): JNZ 0x00007cac
00007cbf(4): MOV RCX,qword ptr [RAX + 0x28]
00007cc3(4): MOV RAX,qword ptr [RAX + 0x8]
00007cc7(3): TEST RAX,RAX
00007cca(4): MOV qword ptr [RSI + 0x8],RAX
00007cce(2): JZ 0x00007cd3
00007cd0(3): MOV qword ptr [RAX],RSI
00007cd3(7): MOV RAX,qword ptr [0xe0 + RDI]
00007cda(4): MOV RDX,qword ptr [RSI + 0x28]
00007cde(4): CMP RCX,0x3f
00007ce2(4): MOV RDX,qword ptr [RAX + RDX*0x8]
00007ce6(4): MOV qword ptr [RAX + RCX*0x8],RDX
00007cea(2): JG 0x00007cac
00007cec(7): MOV RAX,-0x2
00007cf3(3): ROL RAX,CL
00007cf6(7): AND qword ptr [0xa0 + RDI],RAX
00007cfd(2): JMP 0x00007cac
00007d00(7): MOV RAX,qword ptr [0xe0 + RDI]
00007d07(3): TEST RAX,RAX
00007d0a(2): JZ 0x00007cac
00007d0c(4): MOVSXD RDX,dword ptr [RSI + 0x28]
00007d10(4): MOV RCX,qword ptr [RAX + RDX*0x8]
00007d14(5): MOV EAX,0x1
00007d19(2): SHL EAX,CL
00007d1b(4): MOV qword ptr [RSI + 0x28],RCX
00007d1f(2): CDQE
00007d21(7): OR qword ptr [0xa0 + RDI],RAX
00007d28(2): XOR EAX,EAX
00007d2a(1): RET
00007d30(4): MOVZX EAX,byte ptr [RSI + 0x30]
00007d34(4): MOV RDX,qword ptr [RSI + 0x8]
00007d38(2): CMP AL,0xb
00007d3a(2): JZ 0x00007d80
00007d3c(2): CMP AL,0x10
00007d3e(2): JZ 0x00007d68
00007d40(3): TEST RDX,RDX
00007d43(2): JZ 0x00007d4d
00007d45(4): MOV RAX,qword ptr [RSI + 0x20]
00007d49(4): MOV qword ptr [RDX + 0x20],RAX
00007d4d(4): MOV RAX,qword ptr [RSI + 0x10]
00007d51(3): TEST RAX,RAX
00007d54(2): JZ 0x00007d5e
00007d56(4): MOV RDX,qword ptr [RSI + 0x20]
00007d5a(4): MOV qword ptr [RAX + 0x20],RDX
00007d5e(2): XOR EAX,EAX
00007d60(1): RET
00007d68(4): MOV RAX,qword ptr [RSI + 0x10]
00007d6c(4): MOV RCX,qword ptr [RAX + 0x18]
00007d70(4): MOV qword ptr [RDX + 0x20],RCX
00007d74(4): MOV RDX,qword ptr [RSI + 0x20]
00007d78(4): MOV qword ptr [RAX + 0x20],RDX
00007d7c(2): XOR EAX,EAX
00007d7e(1): RET
00007d80(4): MOV qword ptr [RDX + 0x20],RSI
00007d84(2): XOR EAX,EAX
00007d86(1): RET
00007d90(2): PUSH R15
00007d92(2): PUSH R14
00007d94(2): PUSH R13
00007d96(2): PUSH R12
00007d98(1): PUSH RBP
00007d99(1): PUSH RBX
00007d9a(2): XOR EBX,EBX
00007d9c(4): SUB RSP,0x48
00007da0(7): MOV RAX,qword ptr [0x98 + RDI]
00007da7(7): MOV R15,qword ptr [0xc8 + RDI]
00007dae(8): MOV R12,qword ptr [0x80 + RSP]
00007db6(5): MOV qword ptr [RSP + 0x8],RAX
00007dbb(3): MOV RBP,R15
00007dbe(3): CMP RBX,RBP
00007dc1(2): JGE 0x00007e1b
00007dc3(4): LEA RAX,[RBX + RBP*0x1]
00007dc7(7): MOV R13,qword ptr [0xd8 + RDI]
00007dce(3): MOV R10,RAX
00007dd1(4): SHR R10,0x3f
00007dd5(3): ADD R10,RAX
00007dd8(3): SAR R10,1
00007ddb(4): LEA RAX,[R10 + R10*0x4]
00007ddf(5): CMP R8,qword ptr [R13 + RAX*0x8 + 0x8]
00007de4(2): JLE 0x00007e16
00007de6(5): JMP 0x00007f80
00007df0(4): LEA R11,[RBX + R10*0x1]
00007df4(3): MOV RAX,R11
00007df7(4): SHR RAX,0x3f
00007dfb(3): ADD RAX,R11
00007dfe(3): SAR RAX,1
00007e01(4): LEA R11,[RAX + RAX*0x4]
00007e05(3): MOV R14,RAX
00007e08(5): CMP qword ptr [R13 + R11*0x8 + 0x8],R8
00007e0d(6): JL 0x00007f90
00007e13(3): MOV R10,RAX
00007e16(3): CMP RBX,R10
00007e19(2): JL 0x00007df0
00007e1b(3): CMP R15,RBX
00007e1e(6): JLE 0x00007fc0
00007e24(7): MOV R11,qword ptr [0xd8 + RDI]
00007e2b(4): LEA RAX,[RBX + RBX*0x4]
00007e2f(4): LEA RAX,[R11 + RAX*0x8]
00007e33(4): CMP R8,qword ptr [RAX + 0x8]
00007e37(7): MOV RAX,-0x1
00007e3e(4): CMOVNZ RBX,RAX
00007e42(3): MOV RAX,R15
00007e45(2): XOR EBP,EBP
00007e47(3): CMP RBP,RAX
00007e4a(2): JGE 0x00007ea4
00007e4c(5): LEA R11,[RBP + RAX*0x1]
00007e51(3): MOV R10,R11
00007e54(4): SHR R10,0x3f
00007e58(3): ADD R10,R11
00007e5b(7): MOV R11,qword ptr [0xd8 + RDI]
00007e62(3): SAR R10,1
00007e65(4): LEA R13,[R10 + R10*0x4]
00007e69(5): CMP R12,qword ptr [R11 + R13*0x8 + 0x8]
00007e6e(2): JLE 0x00007e9f
00007e70(5): JMP 0x00007fa0
00007e78(5): LEA R13,[RBP + R10*0x1]
00007e7d(3): MOV RAX,R13
00007e80(4): SHR RAX,0x3f
00007e84(3): ADD RAX,R13
00007e87(3): SAR RAX,1
00007e8a(4): LEA R13,[RAX + RAX*0x4]
00007e8e(3): MOV R14,RAX
00007e91(5): CMP qword ptr [R11 + R13*0x8 + 0x8],R12
00007e96(6): JL 0x00007fb0
00007e9c(3): MOV R10,RAX
00007e9f(3): CMP RBP,R10
00007ea2(2): JL 0x00007e78
00007ea4(3): CMP R15,RBP
00007ea7(6): JLE 0x00007fd0
00007ead(7): MOV R10,qword ptr [0xd8 + RDI]
00007eb4(5): LEA RAX,[RBP + RBP*0x4]
00007eb9(4): LEA RAX,[R10 + RAX*0x8]
00007ebd(4): CMP R12,qword ptr [RAX + 0x8]
00007ec1(7): MOV RAX,-0x1
00007ec8(4): CMOVNZ RBP,RAX
00007ecc(4): CMP qword ptr [RSI],0x0
00007ed0(6): JLE 0x00007ff2
00007ed6(5): MOV qword ptr [RSP + 0x30],RBP
00007edb(5): MOV qword ptr [RSP + 0x20],R9
00007ee0(3): MOV R13,RDI
00007ee3(5): MOV qword ptr [RSP + 0x18],R8
00007ee8(5): MOV qword ptr [RSP + 0x10],RCX
00007eed(3): XOR R14D,R14D
00007ef0(5): MOV qword ptr [RSP + 0x38],RSI
00007ef5(5): MOV qword ptr [RSP + 0x28],RBX
00007efa(3): MOV RBP,RDX
00007efd(3): MOV R15,R12
00007f00(4): MOV RAX,qword ptr [RBP]
00007f04(7): MOV RDX,qword ptr [0xd8 + R13]
00007f0b(3): MOV RDI,R13
00007f0e(5): MOV R9,qword ptr [RSP + 0x28]
00007f13(5): MOV R8,qword ptr [RSP + 0x18]
00007f18(5): MOV RCX,qword ptr [RSP + 0x10]
00007f1d(4): MOV RSI,qword ptr [RAX + R14*0x8]
00007f21(4): LEA RAX,[RSI + RSI*0x4]
00007f25(4): LEA RAX,[RDX + RAX*0x8]
00007f29(5): MOV RDX,qword ptr [RSP + 0x8]
00007f2e(3): MOV RAX,qword ptr [RAX]
00007f31(4): SHL RAX,0x4
00007f35(3): ADD RAX,qword ptr [RDX]
00007f38(3): MOV R12,qword ptr [RAX]
00007f3b(3): MOV RDX,R12
00007f3e(5): CALL 0x00006350
00007f43(2): MOV EBX,EAX
00007f45(4): MOV RAX,qword ptr [RBP]
00007f49(5): MOV R9,qword ptr [RSP + 0x30]
00007f4e(5): MOV RCX,qword ptr [RSP + 0x20]
00007f53(3): MOV R8,R15
00007f56(3): MOV RDX,R12
00007f59(3): MOV RDI,R13
00007f5c(4): MOV RSI,qword ptr [RAX + R14*0x8]
00007f60(5): CALL 0x00006350
00007f65(2): CMP EBX,EAX
00007f67(2): JZ 0x00007fe0
00007f69(5): MOV EAX,0x1
00007f6e(4): ADD RSP,0x48
00007f72(1): POP RBX
00007f73(1): POP RBP
00007f74(2): POP R12
00007f76(2): POP R13
00007f78(2): POP R14
00007f7a(2): POP R15
00007f7c(1): RET
00007f80(3): MOV R14,R10
00007f83(3): MOV R10,RBP
00007f86(10): NOP word ptr CS:[RAX + RAX*0x1]
00007f90(4): LEA RBX,[R14 + 0x1]
00007f94(3): MOV RBP,R10
00007f97(5): JMP 0x00007dbe
00007fa0(3): MOV R14,R10
00007fa3(3): MOV R10,RAX
00007fa6(10): NOP word ptr CS:[RAX + RAX*0x1]
00007fb0(4): LEA RBP,[R14 + 0x1]
00007fb4(3): MOV RAX,R10
00007fb7(5): JMP 0x00007e47
00007fc0(7): MOV RBX,-0x1
00007fc7(5): JMP 0x00007e42
00007fd0(7): MOV RBP,-0x1
00007fd7(5): JMP 0x00007ecc
00007fe0(5): MOV RAX,qword ptr [RSP + 0x38]
00007fe5(4): ADD R14,0x1
00007fe9(3): CMP R14,qword ptr [RAX]
00007fec(6): JL 0x00007f00
00007ff2(2): XOR EAX,EAX
00007ff4(5): JMP 0x00007f6e
00008000(3): TEST RSI,RSI
00008003(6): JZ 0x000080f8
00008009(4): MOV RDX,qword ptr [RSI + 0x8]
0000800d(3): TEST RDX,RDX
00008010(6): JZ 0x000080f8
00008016(2): PUSH R12
00008018(1): PUSH RBP
00008019(3): MOV R12,RSI
0000801c(1): PUSH RBX
0000801d(4): MOV RAX,qword ptr [RDI + 0x8]
00008021(3): MOV RBX,RDI
00008024(3): MOV RSI,qword ptr [RDI]
00008027(4): LEA RCX,[RAX + RDX*0x2]
0000802b(3): CMP RSI,RCX
0000802e(6): JL 0x00008178
00008034(3): TEST RAX,RAX
00008037(6): JZ 0x000081b0
0000803d(4): LEA RBP,[RAX + RDX*0x2]
00008041(4): SUB RDX,0x1
00008045(4): SUB RAX,0x1
00008049(3): MOV RDI,RDX
0000804c(3): NOT RDI
0000804f(3): TEST RDI,RDI
00008052(2): JNS 0x00008090
00008054(3): TEST RAX,RAX
00008057(2): JS 0x00008090
00008059(4): MOV RCX,qword ptr [RBX + 0x10]
0000805d(5): MOV RSI,qword ptr [R12 + 0x10]
00008062(4): MOV RSI,qword ptr [RSI + RDX*0x8]
00008066(4): CMP qword ptr [RCX + RAX*0x8],RSI
0000806a(6): JZ 0x00008100
00008070(6): JGE 0x00008118
00008076(4): SUB RDX,0x1
0000807a(4): SUB RBP,0x1
0000807e(3): MOV RDI,RDX
00008081(4): MOV qword ptr [RCX + RBP*0x8],RSI
00008085(3): NOT RDI
00008088(3): TEST RDI,RDI
0000808b(2): JS 0x00008054
0000808d(3): NOP dword ptr [RAX]
00008090(3): TEST RDX,RDX
00008093(6): JNS 0x00008128
00008099(4): MOV RCX,qword ptr [RBX + 0x8]
0000809d(5): MOV RAX,qword ptr [R12 + 0x8]
000080a2(5): LEA R8,[RCX + RAX*0x2 + -0x1]
000080a7(3): MOV RDX,R8
000080aa(3): SUB RDX,RBP
000080ad(4): ADD RDX,0x1
000080b1(2): JZ 0x000080ea
000080b3(4): MOV RDI,qword ptr [RBX + 0x10]
000080b7(4): LEA RAX,[RCX + -0x1]
000080bb(3): ADD RCX,RDX
000080be(4): MOV qword ptr [RBX + 0x8],RCX
000080c2(6): NOP word ptr [RAX + RAX*0x1]
000080c8(4): MOV RSI,qword ptr [RDI + R8*0x8]
000080cc(4): MOV RCX,qword ptr [RDI + RAX*0x8]
000080d0(4): LEA R9,[RAX + RDX*0x1]
000080d4(4): LEA R9,[RDI + R9*0x8]
000080d8(3): CMP RSI,RCX
000080db(2): JLE 0x00008150
000080dd(4): SUB R8,0x1
000080e1(4): SUB RDX,0x1
000080e5(3): MOV qword ptr [R9],RSI
000080e8(2): JNZ 0x000080c8
000080ea(2): XOR EAX,EAX
000080ec(1): POP RBX
000080ed(1): POP RBP
000080ee(2): POP R12
000080f0(1): RET
000080f8(2): XOR EAX,EAX
000080fa(1): RET
00008100(4): SUB RDX,0x1
00008104(4): SUB RAX,0x1
00008108(3): MOV RDI,RDX
0000810b(3): NOT RDI
0000810e(5): JMP 0x0000804f
00008118(4): SUB RAX,0x1
0000811c(5): JMP 0x0000804f
00008128(4): MOV RAX,qword ptr [RBX + 0x10]
0000812c(4): ADD RDX,0x1
00008130(5): MOV RSI,qword ptr [R12 + 0x10]
00008135(3): SUB RBP,RDX
00008138(4): SHL RDX,0x3
0000813c(4): LEA RDI,[RAX + RBP*0x8]
00008140(5): CALL 0x00001ad0
00008145(5): JMP 0x00008099
00008150(4): SUB RAX,0x1
00008154(3): MOV qword ptr [R9],RCX
00008157(6): JNS 0x000080c8
0000815d(4): LEA RSI,[RDI + RBP*0x8]
00008161(4): SHL RDX,0x3
00008165(5): CALL 0x00001ad0
0000816a(2): XOR EAX,EAX
0000816c(5): JMP 0x000080ec
00008178(3): ADD RDX,RSI
0000817b(4): MOV RDI,qword ptr [RDI + 0x10]
0000817f(4): LEA RBP,[RDX + RDX*0x1]
00008183(4): SHL RDX,0x4
00008187(3): MOV RSI,RDX
0000818a(5): CALL 0x00001b60
0000818f(3): TEST RAX,RAX
00008192(2): JZ 0x000081d4
00008194(4): MOV qword ptr [RBX + 0x10],RAX
00008198(3): MOV qword ptr [RBX],RBP
0000819b(4): MOV RAX,qword ptr [RBX + 0x8]
0000819f(5): MOV RDX,qword ptr [R12 + 0x8]
000081a4(5): JMP 0x00008034
000081b0(4): MOV qword ptr [RBX + 0x8],RDX
000081b4(5): MOV RAX,qword ptr [R12 + 0x8]
000081b9(4): MOV RDI,qword ptr [RBX + 0x10]
000081bd(5): MOV RSI,qword ptr [R12 + 0x10]
000081c2(8): LEA RDX,[RAX*0x8]
000081ca(5): CALL 0x00001ad0
000081cf(5): JMP 0x000080ea
000081d4(5): MOV EAX,0xc
000081d9(5): JMP 0x000080ec
000081e0(2): PUSH R15
000081e2(2): PUSH R14
000081e4(3): MOV R15,RSI
000081e7(2): PUSH R13
000081e9(2): PUSH R12
000081eb(1): PUSH RBP
000081ec(1): PUSH RBX
000081ed(4): LEA RBX,[RDX + RDX*0x2]
000081f1(3): MOV RBP,RDX
000081f4(4): SUB RSP,0x68
000081f8(4): MOV R12,qword ptr [RSI + 0x28]
000081fc(4): SHL RBX,0x3
00008200(9): MOV RAX,qword ptr FS:[0x28]
00008209(5): MOV qword ptr [RSP + 0x58],RAX
0000820e(2): XOR EAX,EAX
00008210(5): MOV qword ptr [RSP + 0x10],RDI
00008215(4): MOV dword ptr [RSP + 0x1c],ECX
00008219(3): ADD R12,RBX
0000821c(5): MOV RAX,qword ptr [R12 + 0x8]
00008221(9): MOV qword ptr [RSP + 0x28],0x0
0000822a(4): LEA RDI,[RAX + 0x1]
0000822e(5): MOV qword ptr [RSP + 0x20],RDI
00008233(4): SHL RDI,0x3
00008237(5): CALL 0x00001b00
0000823c(3): TEST RAX,RAX
0000823f(5): MOV qword ptr [RSP + 0x30],RAX
00008244(6): JZ 0x00008480
0000824a(4): MOV RAX,qword ptr [R15 + 0x30]
0000824e(3): MOV RDX,qword ptr [R15]
00008251(3): MOV R13,RBP
00008254(4): SHL R13,0x4
00008258(9): MOV qword ptr [RAX + RBX*0x1 + 0x8],-0x1
00008261(4): LEA RAX,[RDX + R13*0x1]
00008265(4): MOV R8D,dword ptr [RAX + 0x8]
00008269(7): TEST R8D,0x3ff00
00008270(6): JNZ 0x00008410
00008276(4): TEST byte ptr [RAX + 0x8],0x8
0000827a(6): JZ 0x00008340
00008280(4): MOV RSI,qword ptr [R15 + 0x28]
00008284(4): LEA RAX,[RSI + RBX*0x1]
00008288(5): CMP qword ptr [RAX + 0x8],0x0
0000828d(6): JLE 0x00008340
00008293(5): LEA RDX,[RSP + 0x20]
00008298(5): MOV byte ptr [RSP + 0x1b],0x0
0000829d(3): XOR R14D,R14D
000082a0(5): LEA R12,[RSP + 0x40]
000082a5(5): MOV qword ptr [RSP + 0x8],RDX
000082aa(2): JMP 0x000082c6
000082b0(4): MOV RSI,qword ptr [R15 + 0x28]
000082b4(4): ADD R14,0x1
000082b8(4): LEA RAX,[RSI + RBX*0x1]
000082bc(4): CMP qword ptr [RAX + 0x8],R14
000082c0(6): JLE 0x000083c7
000082c6(4): MOV RAX,qword ptr [RAX + 0x10]
000082ca(4): MOV RDX,qword ptr [RAX + R14*0x8]
000082ce(4): MOV RAX,qword ptr [R15 + 0x30]
000082d2(4): LEA R8,[RDX + RDX*0x2]
000082d6(8): LEA R13,[R8*0x8]
000082de(3): ADD RAX,R13
000082e1(4): MOV RCX,qword ptr [RAX + 0x8]
000082e5(4): CMP RCX,-0x1
000082e9(6): JZ 0x000083b0
000082ef(3): TEST RCX,RCX
000082f2(6): JZ 0x00008468
000082f8(4): MOVDQU XMM0,xmmword ptr [RAX]
000082fc(5): MOVAPS xmmword ptr [RSP + 0x40],XMM0
00008301(4): MOV RAX,qword ptr [RAX + 0x10]
00008305(5): MOV qword ptr [RSP + 0x50],RAX
0000830a(5): MOV RDI,qword ptr [RSP + 0x8]
0000830f(3): MOV RSI,R12
00008312(5): CALL 0x00008000
00008317(2): TEST EAX,EAX
00008319(2): JNZ 0x00008386
0000831b(4): MOV RAX,qword ptr [R15 + 0x30]
0000831f(6): CMP qword ptr [RAX + R13*0x1 + 0x8],0x0
00008325(2): JNZ 0x000082b0
00008327(5): MOV RDI,qword ptr [RSP + 0x50]
0000832c(5): CALL 0x000018d0
00008331(5): MOV byte ptr [RSP + 0x1b],0x1
00008336(5): JMP 0x000082b0
00008340(5): LEA RDI,[RSP + 0x20]
00008345(3): MOV RSI,RBP
00008348(5): CALL 0x000065a0
0000834d(2): TEST AL,AL
0000834f(6): JZ 0x00008480
00008355(4): MOV RAX,qword ptr [R15 + 0x30]
00008359(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
0000835f(4): MOVUPS xmmword ptr [RAX + RBX*0x1],XMM0
00008363(5): MOV RDX,qword ptr [RSP + 0x30]
00008368(5): MOV qword ptr [RAX + RBX*0x1 + 0x10],RDX
0000836d(5): MOV RBX,qword ptr [RSP + 0x10]
00008372(5): MOV RAX,qword ptr [RSP + 0x30]
00008377(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
0000837d(3): MOVAPS xmmword ptr [RBX],XMM0
00008380(4): MOV qword ptr [RBX + 0x10],RAX
00008384(2): XOR EAX,EAX
00008386(5): MOV RSI,qword ptr [RSP + 0x58]
0000838b(9): XOR RSI,qword ptr FS:[0x28]
00008394(6): JNZ 0x0000848a
0000839a(4): ADD RSP,0x68
0000839e(1): POP RBX
0000839f(1): POP RBP
000083a0(2): POP R12
000083a2(2): POP R13
000083a4(2): POP R14
000083a6(2): POP R15
000083a8(1): RET
000083b0(4): LEA RAX,[RSI + RBX*0x1]
000083b4(4): ADD R14,0x1
000083b8(5): MOV byte ptr [RSP + 0x1b],0x1
000083bd(4): CMP qword ptr [RAX + 0x8],R14
000083c1(6): JG 0x000082c6
000083c7(5): LEA RDI,[RSP + 0x20]
000083cc(3): MOV RSI,RBP
000083cf(5): CALL 0x000065a0
000083d4(2): TEST AL,AL
000083d6(6): JZ 0x00008480
000083dc(5): CMP byte ptr [RSP + 0x1c],0x1
000083e1(4): MOV RAX,qword ptr [R15 + 0x30]
000083e5(4): LEA RDX,[RAX + RBX*0x1]
000083e9(6): JZ 0x00008359
000083ef(5): CMP byte ptr [RSP + 0x1b],0x0
000083f4(6): JZ 0x00008359
000083fa(8): MOV qword ptr [RDX + 0x8],0x0
00008402(5): JMP 0x0000836d
00008410(6): CMP qword ptr [R12 + 0x8],0x0
00008416(6): JZ 0x00008340
0000841c(5): MOV RCX,qword ptr [R12 + 0x10]
00008421(3): MOV RCX,qword ptr [RCX]
00008424(4): SHL RCX,0x4
00008428(5): TEST byte ptr [RDX + RCX*0x1 + 0xa],0x4
0000842d(6): JNZ 0x00008276
00008433(4): SHR R8D,0x8
00008437(3): MOV RCX,RBP
0000843a(3): MOV RDX,RBP
0000843d(7): AND R8D,0x3ff
00008444(3): MOV RSI,RBP
00008447(3): MOV RDI,R15
0000844a(5): CALL 0x000074f0
0000844f(2): TEST EAX,EAX
00008451(6): JNZ 0x00008386
00008457(3): MOV RAX,qword ptr [R15]
0000845a(3): ADD RAX,R13
0000845d(5): JMP 0x00008276
00008468(3): MOV RSI,R15
0000846b(3): MOV RDI,R12
0000846e(5): CALL 0x000081e0
00008473(2): TEST EAX,EAX
00008475(6): JZ 0x0000830a
0000847b(5): JMP 0x00008386
00008480(5): MOV EAX,0xc
00008485(5): JMP 0x00008386
0000848a(5): CALL 0x000019e0
0000848f(1): NOP
00008490(2): PUSH R15
00008492(2): PUSH R14
00008494(3): MOV R14,RDI
00008497(2): PUSH R13
00008499(2): PUSH R12
0000849b(3): MOV R15,RSI
0000849e(1): PUSH RBP
0000849f(1): PUSH RBX
000084a0(3): MOV RBP,RDX
000084a3(2): MOV EBX,ECX
000084a5(4): SUB RSP,0x38
000084a9(4): MOV R12,qword ptr [RSI + 0x8]
000084ad(9): MOV RAX,qword ptr FS:[0x28]
000084b6(5): MOV qword ptr [RSP + 0x28],RAX
000084bb(2): XOR EAX,EAX
000084bd(9): MOV qword ptr [RSP + 0x18],0x0
000084c6(8): LEA RDI,[R12*0x8]
000084ce(5): MOV qword ptr [RSP + 0x10],R12
000084d3(5): CALL 0x00001b00
000084d8(3): TEST RAX,RAX
000084db(5): MOV qword ptr [RSP + 0x20],RAX
000084e0(6): JZ 0x000085dd
000084e6(3): TEST R12,R12
000084e9(6): JLE 0x0000857b
000084ef(5): LEA R12,[RSP + 0x10]
000084f4(3): XOR R13D,R13D
000084f7(9): NOP word ptr [RAX + RAX*0x1]
00008500(4): MOV RAX,qword ptr [R15 + 0x10]
00008504(4): MOV RDX,qword ptr [RAX + R13*0x8]
00008508(4): MOV RAX,qword ptr [R14 + 0x30]
0000850c(4): LEA RCX,[RDX + RDX*0x2]
00008510(4): LEA RSI,[RAX + RCX*0x8]
00008514(4): MOV R8,qword ptr [RSI + 0x8]
00008518(3): TEST R8,R8
0000851b(6): JLE 0x000085a0
00008521(4): MOV R10,qword ptr [RSI + 0x10]
00008525(3): MOV R9,qword ptr [R14]
00008528(2): XOR ECX,ECX
0000852a(2): JMP 0x00008539
00008530(4): ADD RCX,0x1
00008534(3): CMP R8,RCX
00008537(2): JZ 0x000085a0
00008539(4): MOV RDI,qword ptr [R10 + RCX*0x8]
0000853d(3): MOV RAX,RDI
00008540(4): SHL RAX,0x4
00008544(3): ADD RAX,R9
00008547(5): MOVZX R11D,byte ptr [RAX + 0x8]
0000854c(3): CMP EBX,R11D
0000854f(2): JNZ 0x00008530
00008551(3): CMP RBP,qword ptr [RAX]
00008554(2): JNZ 0x00008530
00008556(4): CMP RDI,-0x1
0000855a(2): JZ 0x000085a0
0000855c(3): MOV R8D,EBX
0000855f(3): MOV RCX,RBP
00008562(3): MOV RSI,R12
00008565(3): MOV RDI,R14
00008568(5): CALL 0x00007b60
0000856d(2): TEST EAX,EAX
0000856f(2): JNZ 0x000085ac
00008571(4): ADD R13,0x1
00008575(4): CMP qword ptr [R15 + 0x8],R13
00008579(2): JG 0x00008500
0000857b(4): MOV RDI,qword ptr [R15 + 0x10]
0000857f(5): CALL 0x000018d0
00008584(5): MOV RAX,qword ptr [RSP + 0x20]
00008589(6): MOVDQA XMM0,xmmword ptr [RSP + 0x10]
0000858f(4): MOV qword ptr [R15 + 0x10],RAX
00008593(2): XOR EAX,EAX
00008595(4): MOVAPS xmmword ptr [R15],XMM0
00008599(2): JMP 0x000085be
000085a0(3): MOV RDI,R12
000085a3(5): CALL 0x00008000
000085a8(2): TEST EAX,EAX
000085aa(2): JZ 0x00008571
000085ac(5): MOV RDI,qword ptr [RSP + 0x20]
000085b1(4): MOV dword ptr [RSP + 0xc],EAX
000085b5(5): CALL 0x000018d0
000085ba(4): MOV EAX,dword ptr [RSP + 0xc]
000085be(5): MOV RDX,qword ptr [RSP + 0x28]
000085c3(9): XOR RDX,qword ptr FS:[0x28]
000085cc(2): JNZ 0x000085e4
000085ce(4): ADD RSP,0x38
000085d2(1): POP RBX
000085d3(1): POP RBP
000085d4(2): POP R12
000085d6(2): POP R13
000085d8(2): POP R14
000085da(2): POP R15
000085dc(1): RET
000085dd(5): MOV EAX,0xc
000085e2(2): JMP 0x000085be
000085e4(5): CALL 0x000019e0
000085e9(7): NOP dword ptr [RAX]
000085f0(4): MOV R9,qword ptr [RSI + 0x8]
000085f4(2): XOR EAX,EAX
000085f6(3): TEST R9,R9
000085f9(6): JZ 0x000086b8
000085ff(4): MOV R11,qword ptr [RDX + 0x8]
00008603(3): TEST R11,R11
00008606(6): JZ 0x000086b8
0000860c(2): PUSH R13
0000860e(2): PUSH R12
00008610(4): LEA RAX,[R9 + R11*0x1]
00008614(1): PUSH RBP
00008615(1): PUSH RBX
00008616(3): MOV R12,RDX
00008619(3): MOV RBX,RDI
0000861c(3): MOV RBP,RSI
0000861f(4): SUB RSP,0x8
00008623(4): MOV RCX,qword ptr [RDI + 0x8]
00008627(3): MOV R13,qword ptr [RDI]
0000862a(4): MOV RDI,qword ptr [RDI + 0x10]
0000862e(4): LEA RDX,[RAX + RCX*0x1]
00008632(3): CMP RDX,R13
00008635(6): JG 0x00008760
0000863b(4): LEA RSI,[RCX + R9*0x1]
0000863f(4): MOV R13,qword ptr [RBP + 0x10]
00008643(5): MOV RDX,qword ptr [R12 + 0x10]
00008648(4): SUB R9,0x1
0000864c(4): SUB RCX,0x1
00008650(3): ADD RSI,R11
00008653(4): SUB R11,0x1
00008657(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000865c(4): MOV R8,qword ptr [RDX + R11*0x8]
00008660(3): CMP RAX,R8
00008663(2): JZ 0x00008676
00008665(2): JGE 0x000086c0
00008667(4): SUB R11,0x1
0000866b(2): JS 0x000086d0
0000866d(4): MOV R8,qword ptr [RDX + R11*0x8]
00008671(3): CMP RAX,R8
00008674(2): JNZ 0x00008665
00008676(3): TEST RCX,RCX
00008679(2): JNS 0x0000868a
0000867b(2): JMP 0x00008698
00008680(4): SUB RCX,0x1
00008684(4): CMP RCX,-0x1
00008688(2): JZ 0x00008698
0000868a(4): MOV R10,qword ptr [RDI + RCX*0x8]
0000868e(3): CMP R10,R8
00008691(2): JG 0x00008680
00008693(3): CMP R10,R8
00008696(2): JZ 0x000086a0
00008698(4): SUB RSI,0x1
0000869c(4): MOV qword ptr [RDI + RSI*0x8],R8
000086a0(4): SUB R9,0x1
000086a4(2): JS 0x000086d0
000086a6(4): SUB R11,0x1
000086aa(2): JS 0x000086d0
000086ac(5): MOV RAX,qword ptr [R13 + R9*0x8]
000086b1(2): JMP 0x0000866d
000086b8(2): RET
000086c0(4): SUB R9,0x1
000086c4(2): JS 0x000086d0
000086c6(5): MOV RAX,qword ptr [R13 + R9*0x8]
000086cb(2): JMP 0x00008660
000086d0(4): MOV RCX,qword ptr [RBX + 0x8]
000086d4(4): MOV RDX,qword ptr [RBP + 0x8]
000086d8(3): ADD RDX,RCX
000086db(5): ADD RDX,qword ptr [R12 + 0x8]
000086e0(4): LEA RAX,[RCX + -0x1]
000086e4(4): LEA R9,[RDX + -0x1]
000086e8(3): SUB RDX,RSI
000086eb(3): ADD RCX,RDX
000086ee(3): TEST RDX,RDX
000086f1(4): MOV qword ptr [RBX + 0x8],RCX
000086f5(2): JLE 0x0000873d
000086f7(3): TEST RAX,RAX
000086fa(2): JS 0x0000873d
000086fc(4): NOP dword ptr [RAX]
00008700(4): MOV R8,qword ptr [RDI + R9*0x8]
00008704(4): MOV RCX,qword ptr [RDI + RAX*0x8]
00008708(4): LEA R10,[RAX + RDX*0x1]
0000870c(4): LEA R10,[RDI + R10*0x8]
00008710(3): CMP R8,RCX
00008713(2): JLE 0x00008730
00008715(4): SUB R9,0x1
00008719(4): SUB RDX,0x1
0000871d(3): MOV qword ptr [R10],R8
00008720(2): JNZ 0x00008700
00008722(2): XOR EDX,EDX
00008724(2): JMP 0x00008741
00008730(4): SUB RAX,0x1
00008734(3): MOV qword ptr [R10],RCX
00008737(4): CMP RAX,-0x1
0000873b(2): JNZ 0x00008700
0000873d(4): SHL RDX,0x3
00008741(4): LEA RSI,[RDI + RSI*0x8]
00008745(5): CALL 0x00001ad0
0000874a(2): XOR EAX,EAX
0000874c(4): ADD RSP,0x8
00008750(1): POP RBX
00008751(1): POP RBP
00008752(2): POP R12
00008754(2): POP R13
00008756(1): RET
00008760(3): ADD R13,RAX
00008763(8): LEA RSI,[R13*0x8]
0000876b(5): CALL 0x00001b60
00008770(3): TEST RAX,RAX
00008773(3): MOV RDI,RAX
00008776(2): JZ 0x00008791
00008778(4): MOV qword ptr [RBX + 0x10],RAX
0000877c(3): MOV qword ptr [RBX],R13
0000877f(4): MOV RCX,qword ptr [RBX + 0x8]
00008783(4): MOV R9,qword ptr [RBP + 0x8]
00008787(5): MOV R11,qword ptr [R12 + 0x8]
0000878c(5): JMP 0x0000863b
00008791(5): MOV EAX,0xc
00008796(2): JMP 0x0000874c
000087a0(1): PUSH RBX
000087a1(3): MOV RBX,RDI
000087a4(4): SUB RSP,0x20
000087a8(2): MOV EAX,dword ptr [RSI]
000087aa(3): CMP EAX,0xf
000087ad(2): JZ 0x00008828
000087af(3): MOVSXD R9,EAX
000087b2(4): LEA R10D,[RAX + 0x1]
000087b6(3): MOV RDI,qword ptr [RDI]
000087b9(3): MOV RAX,R9
000087bc(4): SHL RAX,0x6
000087c0(4): ADD RAX,0x8
000087c4(4): SHL R9,0x6
000087c8(3): MOV dword ptr [RSI],R10D
000087cb(3): ADD RAX,RDI
000087ce(4): LEA RSI,[RDI + R9*0x1]
000087d2(8): MOV qword ptr [RSI + 0x8],0x0
000087da(4): MOV qword ptr [RSI + 0x10],RDX
000087de(4): LEA RDI,[RSI + 0x20]
000087e2(4): MOV qword ptr [RSI + 0x18],RCX
000087e6(5): MOVDQU XMM0,xmmword ptr [R8]
000087eb(4): MOVUPS xmmword ptr [RSI + 0x30],XMM0
000087ef(4): AND byte ptr [RDI + 0x1a],0xf3
000087f3(3): TEST RDX,RDX
000087f6(8): MOV qword ptr [RSI + 0x20],0x0
000087fe(8): MOV qword ptr [RSI + 0x28],0x0
00008806(8): MOV qword ptr [RSI + 0x40],-0x1
0000880e(2): JZ 0x00008813
00008810(3): MOV qword ptr [RDX],RAX
00008813(3): TEST RCX,RCX
00008816(2): JZ 0x0000881b
00008818(3): MOV qword ptr [RCX],RAX
0000881b(4): ADD RSP,0x20
0000881f(1): POP RBX
00008820(1): RET
00008828(5): MOV EDI,0x3c8
0000882d(5): MOV qword ptr [RSP + 0x18],R8
00008832(5): MOV qword ptr [RSP + 0x10],RCX
00008837(5): MOV qword ptr [RSP + 0x8],RDX
0000883c(4): MOV qword ptr [RSP],RSI
00008840(5): CALL 0x00001b00
00008845(3): TEST RAX,RAX
00008848(3): MOV RDI,RAX
0000884b(2): JZ 0x0000887c
0000884d(3): MOV RAX,qword ptr [RBX]
00008850(6): MOV R10D,0x1
00008856(3): MOV qword ptr [RBX],RDI
00008859(3): XOR R9D,R9D
0000885c(5): MOV R8,qword ptr [RSP + 0x18]
00008861(5): MOV RCX,qword ptr [RSP + 0x10]
00008866(5): MOV RDX,qword ptr [RSP + 0x8]
0000886b(4): MOV RSI,qword ptr [RSP]
0000886f(3): MOV qword ptr [RDI],RAX
00008872(5): MOV EAX,0x8
00008877(5): JMP 0x000087c4
0000887c(2): XOR EAX,EAX
0000887e(2): JMP 0x0000881b
00008880(2): PUSH R14
00008882(2): PUSH R13
00008884(4): LEA R13,[RSI + 0x70]
00008888(2): PUSH R12
0000888a(1): PUSH RBP
0000888b(7): LEA R12,[0x80 + RSI]
00008892(1): PUSH RBX
00008893(3): MOV RBX,RDI
00008896(4): SUB RSP,0x10
0000889a(3): MOV RBP,qword ptr [RDI]
0000889d(9): MOV RAX,qword ptr FS:[0x28]
000088a6(5): MOV qword ptr [RSP + 0x8],RAX
000088ab(2): XOR EAX,EAX
000088ad(3): MOV R14,RSP
000088b0(4): LEA R8,[RBX + 0x28]
000088b4(2): XOR ECX,ECX
000088b6(2): XOR EDX,EDX
000088b8(3): MOV RSI,R12
000088bb(3): MOV RDI,R13
000088be(5): CALL 0x000087a0
000088c3(3): TEST RAX,RAX
000088c6(3): MOV qword ptr [R14],RAX
000088c9(2): JZ 0x0000891c
000088cb(3): MOV qword ptr [RAX],RBP
000088ce(3): MOV RBP,qword ptr [R14]
000088d1(4): OR byte ptr [RBP + 0x32],0x4
000088d5(4): MOV RAX,qword ptr [RBX + 0x8]
000088d9(3): TEST RAX,RAX
000088dc(2): JZ 0x000088f0
000088de(4): LEA R14,[RBP + 0x8]
000088e2(3): MOV RBX,RAX
000088e5(2): JMP 0x000088b0
000088f0(2): XOR EDX,EDX
000088f2(2): JMP 0x000088fb
000088f8(3): MOV RBX,RAX
000088fb(4): MOV RAX,qword ptr [RBX + 0x10]
000088ff(3): TEST RAX,RAX
00008902(2): JZ 0x00008909
00008904(3): CMP RAX,RDX
00008907(2): JNZ 0x00008940
00008909(3): MOV RAX,qword ptr [RBX]
0000890c(4): MOV RBP,qword ptr [RBP]
00008910(3): MOV RDX,RBX
00008913(3): TEST RAX,RAX
00008916(2): JNZ 0x000088f8
00008918(4): MOV RAX,qword ptr [RSP]
0000891c(5): MOV RCX,qword ptr [RSP + 0x8]
00008921(9): XOR RCX,qword ptr FS:[0x28]
0000892a(2): JNZ 0x0000894c
0000892c(4): ADD RSP,0x10
00008930(1): POP RBX
00008931(1): POP RBP
00008932(2): POP R12
00008934(2): POP R13
00008936(2): POP R14
00008938(1): RET
00008940(4): LEA R14,[RBP + 0x10]
00008944(3): MOV RBX,RAX
00008947(5): JMP 0x000088b0
0000894c(5): CALL 0x000019e0
00008951(5): NOP dword ptr [RAX + RAX*0x1]
00008956(10): NOP word ptr CS:[RAX + RAX*0x1]
00008960(2): PUSH R15
00008962(2): PUSH R14
00008964(2): PUSH R13
00008966(2): PUSH R12
00008968(3): MOV R13,RDX
0000896b(1): PUSH RBP
0000896c(1): PUSH RBX
0000896d(4): SUB RSP,0x48
00008971(3): MOV RBX,qword ptr [RSI]
00008974(4): MOV RBP,qword ptr [RDX + 0x8]
00008978(9): MOV RAX,qword ptr FS:[0x28]
00008981(5): MOV qword ptr [RSP + 0x38],RAX
00008986(2): XOR EAX,EAX
00008988(4): TEST byte ptr [RSI + 0x38],0x10
0000898c(5): MOV qword ptr [RSP + 0x18],RDI
00008991(6): JZ 0x00008b08
00008997(3): TEST RBP,RBP
0000899a(2): JZ 0x00008a10
0000899c(4): MOV RAX,qword ptr [RDX + 0x28]
000089a0(4): CMP RAX,0x3f
000089a4(6): JG 0x00008add
000089aa(7): MOV RDX,qword ptr [0xa0 + RBX]
000089b1(4): BT RDX,RAX
000089b5(6): JNC 0x00008add
000089bb(4): LEA RAX,[RBX + 0x70]
000089bf(5): LEA R14,[RSP + 0x20]
000089c4(4): SUB RBX,-0x80
000089c8(2): XOR ECX,ECX
000089ca(2): XOR EDX,EDX
000089cc(3): MOV RSI,RBX
000089cf(3): MOV R15,RAX
000089d2(3): MOV R8,R14
000089d5(3): MOV RDI,RAX
000089d8(5): MOV byte ptr [RSP + 0x28],0x8
000089dd(5): MOV qword ptr [RSP + 0x8],RAX
000089e2(5): CALL 0x000087a0
000089e7(3): MOV RDI,R15
000089ea(3): MOV R8,R14
000089ed(2): XOR ECX,ECX
000089ef(2): XOR EDX,EDX
000089f1(3): MOV RSI,RBX
000089f4(3): MOV R12,RAX
000089f7(5): MOV byte ptr [RSP + 0x28],0x9
000089fc(5): CALL 0x000087a0
00008a01(3): MOV R15,RAX
00008a04(5): JMP 0x00008b5d
00008a10(4): LEA RAX,[RBX + 0x70]
00008a14(5): LEA R14,[RSP + 0x20]
00008a19(4): SUB RBX,-0x80
00008a1d(2): XOR ECX,ECX
00008a1f(2): XOR EDX,EDX
00008a21(3): MOV RSI,RBX
00008a24(3): MOV R15,RAX
00008a27(3): MOV R8,R14
00008a2a(3): MOV RDI,RAX
00008a2d(5): MOV byte ptr [RSP + 0x28],0x8
00008a32(5): MOV qword ptr [RSP + 0x8],RAX
00008a37(5): CALL 0x000087a0
00008a3c(3): MOV RDI,R15
00008a3f(3): MOV R8,R14
00008a42(2): XOR ECX,ECX
00008a44(2): XOR EDX,EDX
00008a46(3): MOV RSI,RBX
00008a49(3): MOV R12,RAX
00008a4c(5): MOV byte ptr [RSP + 0x28],0x9
00008a51(5): CALL 0x000087a0
00008a56(3): MOV R11,RAX
00008a59(3): MOV R15,RAX
00008a5c(5): MOV RDI,qword ptr [RSP + 0x8]
00008a61(3): MOV R8,R14
00008a64(3): MOV RCX,R11
00008a67(3): MOV RDX,R12
00008a6a(3): MOV RSI,RBX
00008a6d(5): MOV byte ptr [RSP + 0x28],0x10
00008a72(5): MOV qword ptr [RSP + 0x10],R11
00008a77(5): CALL 0x000087a0
00008a7c(3): TEST RAX,RAX
00008a7f(3): MOV RBP,RAX
00008a82(6): JZ 0x00008b80
00008a88(5): MOV R11,qword ptr [RSP + 0x10]
00008a8d(3): TEST R11,R11
00008a90(6): JZ 0x00008b80
00008a96(3): TEST R12,R12
00008a99(6): JZ 0x00008b80
00008a9f(3): TEST R15,R15
00008aa2(6): JZ 0x00008b80
00008aa8(4): MOV RAX,qword ptr [R13 + 0x28]
00008aac(4): MOV qword ptr [R15 + 0x28],RAX
00008ab0(5): MOV qword ptr [R12 + 0x28],RAX
00008ab5(5): MOVZX EAX,byte ptr [R13 + 0x32]
00008aba(5): MOVZX EDX,byte ptr [R15 + 0x32]
00008abf(3): AND EAX,0x8
00008ac2(3): AND EDX,0xfffffff7
00008ac5(2): MOV ECX,EAX
00008ac7(2): OR EDX,ECX
00008ac9(4): MOV byte ptr [R15 + 0x32],DL
00008acd(6): MOVZX EAX,byte ptr [R12 + 0x32]
00008ad3(3): AND EAX,0xfffffff7
00008ad6(2): OR EAX,ECX
00008ad8(5): MOV byte ptr [R12 + 0x32],AL
00008add(5): MOV RDI,qword ptr [RSP + 0x38]
00008ae2(9): XOR RDI,qword ptr FS:[0x28]
00008aeb(3): MOV RAX,RBP
00008aee(6): JNZ 0x00008b92
00008af4(4): ADD RSP,0x48
00008af8(1): POP RBX
00008af9(1): POP RBP
00008afa(2): POP R12
00008afc(2): POP R13
00008afe(2): POP R14
00008b00(2): POP R15
00008b02(1): RET
00008b08(4): LEA RAX,[RBX + 0x70]
00008b0c(5): LEA R14,[RSP + 0x20]
00008b11(4): SUB RBX,-0x80
00008b15(2): XOR ECX,ECX
00008b17(2): XOR EDX,EDX
00008b19(3): MOV RSI,RBX
00008b1c(3): MOV R15,RAX
00008b1f(3): MOV R8,R14
00008b22(3): MOV RDI,RAX
00008b25(5): MOV byte ptr [RSP + 0x28],0x8
00008b2a(5): MOV qword ptr [RSP + 0x8],RAX
00008b2f(5): CALL 0x000087a0
00008b34(2): XOR ECX,ECX
00008b36(2): XOR EDX,EDX
00008b38(3): MOV RDI,R15
00008b3b(3): MOV R8,R14
00008b3e(3): MOV RSI,RBX
00008b41(3): MOV R12,RAX
00008b44(5): MOV byte ptr [RSP + 0x28],0x9
00008b49(5): CALL 0x000087a0
00008b4e(3): TEST RBP,RBP
00008b51(3): MOV R15,RAX
00008b54(3): MOV R11,RAX
00008b57(6): JZ 0x00008a5c
00008b5d(5): MOV RDI,qword ptr [RSP + 0x8]
00008b62(3): MOV R8,R14
00008b65(3): MOV RCX,R15
00008b68(3): MOV RDX,RBP
00008b6b(3): MOV RSI,RBX
00008b6e(5): MOV byte ptr [RSP + 0x28],0x10
00008b73(5): CALL 0x000087a0
00008b78(3): MOV R11,RAX
00008b7b(5): JMP 0x00008a5c
00008b80(5): MOV RAX,qword ptr [RSP + 0x18]
00008b85(2): XOR EBP,EBP
00008b87(6): MOV dword ptr [RAX],0xc
00008b8d(5): JMP 0x00008add
00008b92(5): CALL 0x000019e0
00008b97(9): NOP word ptr [RAX + RAX*0x1]
00008ba0(1): PUSH RBP
00008ba1(1): PUSH RBX
00008ba2(3): MOV RBP,RDI
00008ba5(3): MOV RBX,RSI
00008ba8(4): SUB RSP,0x18
00008bac(4): MOV RDX,qword ptr [RSI + 0x8]
00008bb0(9): MOV RAX,qword ptr FS:[0x28]
00008bb9(5): MOV qword ptr [RSP + 0x8],RAX
00008bbe(2): XOR EAX,EAX
00008bc0(8): MOV dword ptr [RSP + 0x4],0x0
00008bc8(3): TEST RDX,RDX
00008bcb(2): JZ 0x00008bd3
00008bcd(4): CMP byte ptr [RDX + 0x30],0x11
00008bd1(2): JZ 0x00008c20
00008bd3(4): MOV RDX,qword ptr [RBX + 0x10]
00008bd7(3): TEST RDX,RDX
00008bda(2): JZ 0x00008be2
00008bdc(4): CMP byte ptr [RDX + 0x30],0x11
00008be0(2): JZ 0x00008c00
00008be2(5): MOV RCX,qword ptr [RSP + 0x8]
00008be7(9): XOR RCX,qword ptr FS:[0x28]
00008bf0(4): MOV EAX,dword ptr [RSP + 0x4]
00008bf4(2): JNZ 0x00008c3b
00008bf6(4): ADD RSP,0x18
00008bfa(1): POP RBX
00008bfb(1): POP RBP
00008bfc(1): RET
00008c00(5): LEA RDI,[RSP + 0x4]
00008c05(3): MOV RSI,RBP
00008c08(5): CALL 0x00008960
00008c0d(3): TEST RAX,RAX
00008c10(4): MOV qword ptr [RBX + 0x10],RAX
00008c14(2): JZ 0x00008be2
00008c16(3): MOV qword ptr [RAX],RBX
00008c19(2): JMP 0x00008be2
00008c20(5): LEA RDI,[RSP + 0x4]
00008c25(3): MOV RSI,RBP
00008c28(5): CALL 0x00008960
00008c2d(3): TEST RAX,RAX
00008c30(4): MOV qword ptr [RBX + 0x8],RAX
00008c34(2): JZ 0x00008bd3
00008c36(3): MOV qword ptr [RAX],RBX
00008c39(2): JMP 0x00008bd3
00008c3b(5): CALL 0x000019e0
00008c40(2): PUSH R12
00008c42(1): PUSH RBP
00008c43(1): PUSH RBX
00008c44(4): MOV RAX,qword ptr [RSI + 0x8]
00008c48(4): MOV qword ptr [RDI + 0x8],RAX
00008c4c(4): MOV R12,qword ptr [RSI + 0x8]
00008c50(3): TEST R12,R12
00008c53(2): JLE 0x00008c90
00008c55(3): MOV RBX,RDI
00008c58(3): MOV qword ptr [RDI],RAX
00008c5b(8): LEA RDI,[RAX*0x8]
00008c63(3): MOV RBP,RSI
00008c66(5): CALL 0x00001b00
00008c6b(3): TEST RAX,RAX
00008c6e(4): MOV qword ptr [RBX + 0x10],RAX
00008c72(2): JZ 0x00008cb0
00008c74(4): MOV RSI,qword ptr [RBP + 0x10]
00008c78(8): LEA RDX,[R12*0x8]
00008c80(3): MOV RDI,RAX
00008c83(5): CALL 0x00001ad0
00008c88(2): XOR EAX,EAX
00008c8a(1): POP RBX
00008c8b(1): POP RBP
00008c8c(2): POP R12
00008c8e(1): RET
00008c90(4): PXOR XMM0,XMM0
00008c94(8): MOV qword ptr [RDI + 0x10],0x0
00008c9c(2): XOR EAX,EAX
00008c9e(3): MOVUPS xmmword ptr [RDI],XMM0
00008ca1(1): POP RBX
00008ca2(1): POP RBP
00008ca3(2): POP R12
00008ca5(1): RET
00008cb0(8): MOV qword ptr [RBX + 0x8],0x0
00008cb8(7): MOV qword ptr [RBX],0x0
00008cbf(5): MOV EAX,0xc
00008cc4(2): JMP 0x00008c8a
00008cd0(3): TEST RSI,RSI
00008cd3(2): PUSH R14
00008cd5(2): PUSH R13
00008cd7(2): PUSH R12
00008cd9(1): PUSH RBP
00008cda(1): PUSH RBX
00008cdb(6): JZ 0x00008d85
00008ce1(3): TEST RDX,RDX
00008ce4(4): MOV R13,qword ptr [RSI + 0x8]
00008ce8(6): JZ 0x00008d80
00008cee(3): TEST R13,R13
00008cf1(6): JLE 0x00008d80
00008cf7(4): MOV R14,qword ptr [RDX + 0x8]
00008cfb(3): TEST R14,R14
00008cfe(6): JLE 0x00008db3
00008d04(3): MOV R12,RDI
00008d07(5): LEA RDI,[R13 + R14*0x1]
00008d0c(3): MOV RBX,RDX
00008d0f(3): MOV RBP,RSI
00008d12(4): MOV qword ptr [R12],RDI
00008d16(4): SHL RDI,0x3
00008d1a(5): CALL 0x00001b00
00008d1f(3): TEST RAX,RAX
00008d22(5): MOV qword ptr [R12 + 0x10],RAX
00008d27(6): JZ 0x00008e18
00008d2d(4): MOV R9,qword ptr [RBX + 0x10]
00008d31(4): MOV R8,qword ptr [RBP + 0x10]
00008d35(2): XOR EBX,EBX
00008d37(2): XOR ECX,ECX
00008d39(2): XOR ESI,ESI
00008d3b(2): JMP 0x00008d5e
00008d40(4): SETZ DIL
00008d44(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDX
00008d49(4): ADD RSI,0x1
00008d4d(4): MOVZX EDI,DIL
00008d51(3): ADD RCX,RDI
00008d54(3): CMP R13,RSI
00008d57(2): JLE 0x00008dc0
00008d59(3): CMP R14,RCX
00008d5c(2): JLE 0x00008dd8
00008d5e(4): MOV RDX,qword ptr [R8 + RSI*0x8]
00008d62(4): MOV RDI,qword ptr [R9 + RCX*0x8]
00008d66(4): ADD RBX,0x1
00008d6a(3): CMP RDX,RDI
00008d6d(2): JLE 0x00008d40
00008d6f(4): ADD RCX,0x1
00008d73(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDI
00008d78(2): JMP 0x00008d54
00008d80(3): TEST R13,R13
00008d83(2): JG 0x00008db3
00008d85(3): TEST RDX,RDX
00008d88(2): JZ 0x00008d91
00008d8a(5): CMP qword ptr [RDX + 0x8],0x0
00008d8f(2): JG 0x00008db0
00008d91(4): PXOR XMM0,XMM0
00008d95(8): MOV qword ptr [RDI + 0x10],0x0
00008d9d(2): XOR EAX,EAX
00008d9f(3): MOVAPS xmmword ptr [RDI],XMM0
00008da2(1): POP RBX
00008da3(1): POP RBP
00008da4(2): POP R12
00008da6(2): POP R13
00008da8(2): POP R14
00008daa(1): RET
00008db0(3): MOV RSI,RDX
00008db3(1): POP RBX
00008db4(1): POP RBP
00008db5(2): POP R12
00008db7(2): POP R13
00008db9(2): POP R14
00008dbb(5): JMP 0x00008c40
00008dc0(3): CMP R14,RCX
00008dc3(2): JG 0x00008df8
00008dc5(5): MOV qword ptr [R12 + 0x8],RBX
00008dca(2): XOR EAX,EAX
00008dcc(1): POP RBX
00008dcd(1): POP RBP
00008dce(2): POP R12
00008dd0(2): POP R13
00008dd2(2): POP R14
00008dd4(1): RET
00008dd8(3): SUB R13,RSI
00008ddb(4): LEA RDI,[RAX + RBX*0x8]
00008ddf(4): LEA RSI,[R8 + RSI*0x8]
00008de3(8): LEA RDX,[R13*0x8]
00008deb(3): ADD RBX,R13
00008dee(5): CALL 0x00001ad0
00008df3(2): JMP 0x00008dc5
00008df8(3): SUB R14,RCX
00008dfb(4): LEA RDI,[RAX + RBX*0x8]
00008dff(4): LEA RSI,[R9 + RCX*0x8]
00008e03(8): LEA RDX,[R14*0x8]
00008e0b(3): ADD RBX,R14
00008e0e(5): CALL 0x00001ad0
00008e13(2): JMP 0x00008dc5
00008e18(5): MOV EAX,0xc
00008e1d(5): JMP 0x00008da2
00008e30(2): PUSH R15
00008e32(2): PUSH R14
00008e34(2): PUSH R13
00008e36(2): PUSH R12
00008e38(1): PUSH RBP
00008e39(1): PUSH RBX
00008e3a(4): SUB RSP,0x28
00008e3e(4): MOV R10,qword ptr [RDX + 0x8]
00008e42(3): TEST R10,R10
00008e45(6): JZ 0x000090cf
00008e4b(3): MOV R8D,ECX
00008e4e(3): TEST R10,R10
00008e51(4): LEA R12,[R8 + R10*0x1]
00008e55(2): JLE 0x00008e6c
00008e57(4): MOV RAX,qword ptr [RDX + 0x10]
00008e5b(4): LEA R10,[RAX + R10*0x8]
00008e5f(1): NOP
00008e60(3): ADD R12,qword ptr [RAX]
00008e63(4): ADD RAX,0x8
00008e67(3): CMP R10,RAX
00008e6a(2): JNZ 0x00008e60
00008e6c(7): MOV RAX,qword ptr [0x88 + RSI]
00008e73(3): MOV RBP,RDX
00008e76(4): MOV dword ptr [RSP + 0x4],ECX
00008e7a(3): MOV R13,RSI
00008e7d(5): MOV qword ptr [RSP + 0x18],RDI
00008e82(3): AND RAX,R12
00008e85(4): LEA RDX,[RAX + RAX*0x2]
00008e89(4): MOV RAX,qword ptr [RSI + 0x40]
00008e8d(4): LEA RAX,[RAX + RDX*0x8]
00008e91(3): MOV R11,qword ptr [RAX]
00008e94(3): TEST R11,R11
00008e97(2): JLE 0x00008ef0
00008e99(4): MOV RBX,qword ptr [RAX + 0x10]
00008e9d(3): XOR R10D,R10D
00008ea0(3): MOV R9D,ECX
00008ea3(2): JMP 0x00008eb1
00008ea8(4): ADD R10,0x1
00008eac(3): CMP R10,R11
00008eaf(2): JZ 0x00008ef0
00008eb1(4): MOV R14,qword ptr [RBX + R10*0x8]
00008eb5(3): CMP qword ptr [R14],R12
00008eb8(2): JNZ 0x00008ea8
00008eba(5): MOVZX EAX,byte ptr [R14 + 0x68]
00008ebf(3): AND EAX,0xf
00008ec2(3): CMP EAX,R9D
00008ec5(2): JNZ 0x00008ea8
00008ec7(4): MOV RDI,qword ptr [R14 + 0x50]
00008ecb(3): TEST RDI,RDI
00008ece(2): JZ 0x00008ea8
00008ed0(3): MOV RSI,RBP
00008ed3(5): CALL 0x00007a80
00008ed8(2): TEST AL,AL
00008eda(2): JZ 0x00008ea8
00008edc(4): ADD RSP,0x28
00008ee0(3): MOV RAX,R14
00008ee3(1): POP RBX
00008ee4(1): POP RBP
00008ee5(2): POP R12
00008ee7(2): POP R13
00008ee9(2): POP R14
00008eeb(2): POP R15
00008eed(1): RET
00008ef0(5): MOV ESI,0x1
00008ef5(5): MOV EDI,0x70
00008efa(5): CALL 0x00001ab0
00008eff(3): TEST RAX,RAX
00008f02(3): MOV R14,RAX
00008f05(6): JZ 0x00009046
00008f0b(4): LEA RAX,[RAX + 0x8]
00008f0f(3): MOV RSI,RBP
00008f12(3): MOV RDI,RAX
00008f15(3): MOV RBX,RAX
00008f18(5): CALL 0x00008c40
00008f1d(2): TEST EAX,EAX
00008f1f(6): JNZ 0x000090dd
00008f25(5): MOVZX EAX,byte ptr [R14 + 0x68]
00008f2a(5): MOVZX EDX,byte ptr [RSP + 0x4]
00008f2f(4): MOV qword ptr [R14 + 0x50],RBX
00008f33(3): AND EDX,0xf
00008f36(3): AND EAX,0xfffffff0
00008f39(2): OR EAX,EDX
00008f3b(5): CMP qword ptr [RBP + 0x8],0x0
00008f40(4): MOV byte ptr [R14 + 0x68],AL
00008f44(6): JLE 0x00009028
00008f4a(4): LEA RCX,[R14 + 0x18]
00008f4e(3): XOR R15D,R15D
00008f51(5): MOV qword ptr [RSP + 0x10],R12
00008f56(3): XOR R10D,R10D
00008f59(3): MOV R12,R13
00008f5c(3): MOV R13,R15
00008f5f(5): MOV qword ptr [RSP + 0x8],RCX
00008f64(3): MOV R15,RBX
00008f67(9): NOP word ptr [RAX + RAX*0x1]
00008f70(4): MOV RAX,qword ptr [RBP + 0x10]
00008f74(4): MOV RAX,qword ptr [RAX + R13*0x8]
00008f78(4): SHL RAX,0x4
00008f7c(4): ADD RAX,qword ptr [R12]
00008f80(4): MOVZX ESI,byte ptr [RAX + 0x8]
00008f84(3): MOV EBX,dword ptr [RAX + 0x8]
00008f87(3): SHR EBX,0x8
00008f8a(5): AND BX,0x3ff
00008f8f(3): CMP ESI,0x1
00008f92(3): MOVZX EDI,BX
00008f95(2): JNZ 0x00008f9b
00008f97(2): TEST EDI,EDI
00008f99(2): JZ 0x00009012
00008f9b(5): MOVZX EDX,byte ptr [R14 + 0x68]
00008fa0(4): MOVZX EAX,byte ptr [RAX + 0xa]
00008fa4(3): MOV R9D,EDX
00008fa7(3): SHR AL,0x4
00008faa(3): AND EDX,0xffffffdf
00008fad(4): SHR R9B,0x5
00008fb1(3): OR EAX,R9D
00008fb4(3): AND EAX,0x1
00008fb7(3): SHL EAX,0x5
00008fba(2): OR EAX,EDX
00008fbc(3): CMP ESI,0x2
00008fbf(4): MOV byte ptr [R14 + 0x68],AL
00008fc3(6): JZ 0x00009090
00008fc9(3): CMP ESI,0x4
00008fcc(2): JNZ 0x00008fd5
00008fce(3): OR EAX,0x40
00008fd1(4): MOV byte ptr [R14 + 0x68],AL
00008fd5(2): TEST EDI,EDI
00008fd7(2): JZ 0x00009012
00008fd9(4): CMP R15,qword ptr [R14 + 0x50]
00008fdd(6): JZ 0x000090a0
00008fe3(3): TEST BL,0x1
00008fe6(2): JZ 0x00009060
00008fe8(5): TEST byte ptr [RSP + 0x4],0x1
00008fed(2): JZ 0x00008ff8
00008fef(3): TEST BL,0x2
00008ff2(2): JZ 0x0000906c
00008ff4(4): NOP dword ptr [RAX]
00008ff8(3): MOV RDX,R13
00008ffb(3): SUB RDX,R10
00008ffe(2): JS 0x0000900e
00009000(5): MOV RSI,qword ptr [RSP + 0x8]
00009005(4): LEA RDI,[R14 + 0x10]
00009009(5): CALL 0x00007c60
0000900e(4): ADD R10,0x1
00009012(4): ADD R13,0x1
00009016(4): CMP R13,qword ptr [RBP + 0x8]
0000901a(6): JL 0x00008f70
00009020(3): MOV R13,R12
00009023(5): MOV R12,qword ptr [RSP + 0x10]
00009028(3): MOV RDX,R12
0000902b(3): MOV RSI,R14
0000902e(3): MOV RDI,R13
00009031(5): CALL 0x000066d0
00009036(2): TEST EAX,EAX
00009038(6): JZ 0x00008edc
0000903e(3): MOV RDI,R14
00009041(5): CALL 0x00007770
00009046(5): MOV RAX,qword ptr [RSP + 0x18]
0000904b(3): XOR R14D,R14D
0000904e(6): MOV dword ptr [RAX],0xc
00009054(5): JMP 0x00008edc
00009060(3): TEST BL,0x2
00009063(2): JZ 0x0000906c
00009065(5): TEST byte ptr [RSP + 0x4],0x1
0000906a(2): JNZ 0x00008ff8
0000906c(3): TEST BL,0x10
0000906f(2): JZ 0x00009078
00009071(5): TEST byte ptr [RSP + 0x4],0x2
00009076(2): JZ 0x00008ff8
00009078(3): AND EBX,0x40
0000907b(2): JZ 0x00009012
0000907d(5): TEST byte ptr [RSP + 0x4],0x4
00009082(2): JNZ 0x00009012
00009084(5): JMP 0x00008ff8
00009090(3): OR EAX,0x10
00009093(4): MOV byte ptr [R14 + 0x68],AL
00009097(5): JMP 0x00008fd5
000090a0(5): MOV EDI,0x18
000090a5(5): CALL 0x00001b00
000090aa(3): TEST RAX,RAX
000090ad(4): MOV qword ptr [R14 + 0x50],RAX
000090b1(2): JZ 0x0000903e
000090b3(3): MOV RSI,RBP
000090b6(3): MOV RDI,RAX
000090b9(5): CALL 0x00008c40
000090be(2): TEST EAX,EAX
000090c0(2): JNZ 0x00009046
000090c2(5): OR byte ptr [R14 + 0x68],0x80
000090c7(3): XOR R10D,R10D
000090ca(5): JMP 0x00008fe3
000090cf(6): MOV dword ptr [RDI],0x0
000090d5(3): XOR R14D,R14D
000090d8(5): JMP 0x00008edc
000090dd(3): MOV RDI,R14
000090e0(5): CALL 0x000018d0
000090e5(5): JMP 0x00009046
000090f0(2): PUSH R15
000090f2(2): PUSH R14
000090f4(2): PUSH R13
000090f6(2): PUSH R12
000090f8(1): PUSH RBP
000090f9(1): PUSH RBX
000090fa(4): SUB RSP,0x8
000090fe(4): MOV RBP,qword ptr [RDX + 0x8]
00009102(3): TEST RBP,RBP
00009105(6): JZ 0x000092e0
0000910b(3): TEST RBP,RBP
0000910e(2): JLE 0x0000912c
00009110(4): MOV RAX,qword ptr [RDX + 0x10]
00009114(4): LEA RCX,[RAX + RBP*0x8]
00009118(8): NOP dword ptr [RAX + RAX*0x1]
00009120(3): ADD RBP,qword ptr [RAX]
00009123(4): ADD RAX,0x8
00009127(3): CMP RCX,RAX
0000912a(2): JNZ 0x00009120
0000912c(7): MOV RAX,qword ptr [0x88 + RSI]
00009133(3): MOV R14,RDX
00009136(3): MOV R12,RSI
00009139(3): MOV R13,RDI
0000913c(3): AND RAX,RBP
0000913f(4): LEA RDX,[RAX + RAX*0x2]
00009143(4): MOV RAX,qword ptr [RSI + 0x40]
00009147(4): LEA RAX,[RAX + RDX*0x8]
0000914b(3): MOV R10,qword ptr [RAX]
0000914e(3): TEST R10,R10
00009151(2): JLE 0x00009186
00009153(4): MOV R11,qword ptr [RAX + 0x10]
00009157(3): XOR R9D,R9D
0000915a(6): NOP word ptr [RAX + RAX*0x1]
00009160(4): MOV RBX,qword ptr [R11 + R9*0x8]
00009164(3): CMP qword ptr [RBX],RBP
00009167(2): JNZ 0x0000917d
00009169(4): LEA RDI,[RBX + 0x8]
0000916d(3): MOV RSI,R14
00009170(5): CALL 0x00007a80
00009175(2): TEST AL,AL
00009177(6): JNZ 0x0000927f
0000917d(4): ADD R9,0x1
00009181(3): CMP R10,R9
00009184(2): JNZ 0x00009160
00009186(5): MOV ESI,0x1
0000918b(5): MOV EDI,0x70
00009190(5): CALL 0x00001ab0
00009195(3): TEST RAX,RAX
00009198(3): MOV RBX,RAX
0000919b(6): JZ 0x000092c8
000091a1(4): LEA R15,[RAX + 0x8]
000091a5(3): MOV RSI,R14
000091a8(3): MOV RDI,R15
000091ab(5): CALL 0x00008c40
000091b0(2): TEST EAX,EAX
000091b2(6): JNZ 0x000092c0
000091b8(4): MOV RAX,qword ptr [R14 + 0x8]
000091bc(4): MOV qword ptr [RBX + 0x50],R15
000091c0(3): TEST RAX,RAX
000091c3(6): JLE 0x0000926d
000091c9(4): MOV RSI,qword ptr [R14 + 0x10]
000091cd(4): MOV R8,qword ptr [R12]
000091d1(4): LEA R9,[RSI + RAX*0x8]
000091d5(2): JMP 0x00009224
000091e0(4): MOVZX ECX,byte ptr [RBX + 0x68]
000091e4(4): MOVZX EDX,byte ptr [RAX + 0xa]
000091e8(3): MOV R10D,ECX
000091eb(3): SHR DL,0x4
000091ee(3): AND ECX,0xffffffdf
000091f1(4): SHR R10B,0x5
000091f5(3): OR EDX,R10D
000091f8(3): AND EDX,0x1
000091fb(3): SHL EDX,0x5
000091fe(2): OR EDX,ECX
00009200(3): CMP EDI,0x2
00009203(3): MOV byte ptr [RBX + 0x68],DL
00009206(6): JZ 0x00009298
0000920c(3): CMP EDI,0x4
0000920f(6): JNZ 0x000092a8
00009215(3): OR EDX,0x40
00009218(3): MOV byte ptr [RBX + 0x68],DL
0000921b(4): ADD RSI,0x8
0000921f(3): CMP R9,RSI
00009222(2): JZ 0x0000926d
00009224(3): MOV RAX,qword ptr [RSI]
00009227(4): SHL RAX,0x4
0000922b(3): ADD RAX,R8
0000922e(4): MOVZX EDI,byte ptr [RAX + 0x8]
00009232(3): CMP EDI,0x1
00009235(2): JNZ 0x000091e0
00009237(7): TEST dword ptr [RAX + 0x8],0x3ff00
0000923e(2): JZ 0x0000921b
00009240(4): MOVZX EDX,byte ptr [RBX + 0x68]
00009244(4): MOVZX EAX,byte ptr [RAX + 0xa]
00009248(2): MOV ECX,EDX
0000924a(3): SHR AL,0x4
0000924d(3): AND EDX,0xffffffdf
00009250(3): SHR CL,0x5
00009253(2): OR EAX,ECX
00009255(3): AND EAX,0x1
00009258(3): SHL EAX,0x5
0000925b(2): OR EAX,EDX
0000925d(3): MOV byte ptr [RBX + 0x68],AL
00009260(4): ADD RSI,0x8
00009264(4): OR byte ptr [RBX + 0x68],0x80
00009268(3): CMP R9,RSI
0000926b(2): JNZ 0x00009224
0000926d(3): MOV RDX,RBP
00009270(3): MOV RSI,RBX
00009273(3): MOV RDI,R12
00009276(5): CALL 0x000066d0
0000927b(2): TEST EAX,EAX
0000927d(2): JNZ 0x000092d4
0000927f(4): ADD RSP,0x8
00009283(3): MOV RAX,RBX
00009286(1): POP RBX
00009287(1): POP RBP
00009288(2): POP R12
0000928a(2): POP R13
0000928c(2): POP R14
0000928e(2): POP R15
00009290(1): RET
00009298(3): OR EDX,0x10
0000929b(3): MOV byte ptr [RBX + 0x68],DL
0000929e(5): JMP 0x0000921b
000092a8(3): CMP EDI,0xc
000092ab(2): JZ 0x00009260
000092ad(7): TEST dword ptr [RAX + 0x8],0x3ff00
000092b4(6): JZ 0x0000921b
000092ba(2): JMP 0x00009260
000092c0(3): MOV RDI,RBX
000092c3(5): CALL 0x000018d0
000092c8(8): MOV dword ptr [R13],0xc
000092d0(2): XOR EBX,EBX
000092d2(2): JMP 0x0000927f
000092d4(3): MOV RDI,RBX
000092d7(5): CALL 0x00007770
000092dc(2): JMP 0x000092c8
000092e0(6): MOV dword ptr [RDI],0x0
000092e6(2): XOR EBX,EBX
000092e8(2): JMP 0x0000927f
000092f0(2): PUSH R15
000092f2(2): PUSH R14
000092f4(2): PUSH R13
000092f6(2): PUSH R12
000092f8(1): PUSH RBP
000092f9(1): PUSH RBX
000092fa(4): SUB RSP,0x48
000092fe(9): MOV RAX,qword ptr FS:[0x28]
00009307(5): MOV qword ptr [RSP + 0x38],RAX
0000930c(2): XOR EAX,EAX
0000930e(3): TEST RCX,RCX
00009311(6): JLE 0x000093a6
00009317(5): LEA RAX,[RSP + 0x1c]
0000931c(3): MOV R14,RDI
0000931f(3): MOV RBX,RSI
00009322(3): MOV R12,RDX
00009325(3): MOV RBP,RCX
00009328(3): XOR R15D,R15D
0000932b(5): LEA R13,[RSP + 0x20]
00009330(5): MOV qword ptr [RSP + 0x8],RAX
00009335(2): JMP 0x0000938c
00009340(3): TEST RDX,RDX
00009343(2): JZ 0x00009383
00009345(4): ADD RDX,0x8
00009349(4): ADD RSI,0x8
0000934d(3): MOV RDI,R13
00009350(5): CALL 0x00008cd0
00009355(2): TEST EAX,EAX
00009357(4): MOV dword ptr [RSP + 0x1c],EAX
0000935b(2): JNZ 0x000093a8
0000935d(5): MOV RDI,qword ptr [RSP + 0x8]
00009362(3): MOV RDX,R13
00009365(3): MOV RSI,R14
00009368(5): CALL 0x000090f0
0000936d(5): MOV RDI,qword ptr [RSP + 0x30]
00009372(4): MOV qword ptr [RBX + R15*0x8],RAX
00009376(5): CALL 0x000018d0
0000937b(4): MOV EAX,dword ptr [RSP + 0x1c]
0000937f(2): TEST EAX,EAX
00009381(2): JNZ 0x000093a8
00009383(4): ADD R15,0x1
00009387(3): CMP RBP,R15
0000938a(2): JZ 0x000093a6
0000938c(4): MOV RSI,qword ptr [RBX + R15*0x8]
00009390(4): MOV RDX,qword ptr [R12 + R15*0x8]
00009394(3): TEST RSI,RSI
00009397(2): JNZ 0x00009340
00009399(4): MOV qword ptr [RBX + R15*0x8],RDX
0000939d(4): ADD R15,0x1
000093a1(3): CMP RBP,R15
000093a4(2): JNZ 0x0000938c
000093a6(2): XOR EAX,EAX
000093a8(5): MOV RCX,qword ptr [RSP + 0x38]
000093ad(9): XOR RCX,qword ptr FS:[0x28]
000093b6(2): JNZ 0x000093c7
000093b8(4): ADD RSP,0x48
000093bc(1): POP RBX
000093bd(1): POP RBP
000093be(2): POP R12
000093c0(2): POP R13
000093c2(2): POP R14
000093c4(2): POP R15
000093c6(1): RET
000093c7(5): CALL 0x000019e0
000093cc(4): NOP dword ptr [RAX]
000093d0(2): PUSH R15
000093d2(2): PUSH R14
000093d4(2): PUSH R13
000093d6(2): PUSH R12
000093d8(3): MOV R12,RDX
000093db(1): PUSH RBP
000093dc(1): PUSH RBX
000093dd(3): MOV RBX,RDI
000093e0(3): MOV RBP,RSI
000093e3(2): XOR ESI,ESI
000093e5(4): SUB RSP,0x78
000093e9(7): MOV RDI,qword ptr [0xc8 + RDI]
000093f0(9): MOV RAX,qword ptr FS:[0x28]
000093f9(5): MOV qword ptr [RSP + 0x68],RAX
000093fe(2): XOR EAX,EAX
00009400(5): MOV qword ptr [RSP + 0x20],RCX
00009405(5): MOV dword ptr [RSP + 0x2c],R8D
0000940a(3): MOV RDX,RDI
0000940d(3): CMP RSI,RDX
00009410(2): JGE 0x00009467
00009412(4): LEA RAX,[RSI + RDX*0x1]
00009416(7): MOV R8,qword ptr [0xd8 + RBX]
0000941d(3): MOV RCX,RAX
00009420(4): SHR RCX,0x3f
00009424(3): ADD RCX,RAX
00009427(3): SAR RCX,1
0000942a(4): LEA RAX,[RCX + RCX*0x4]
0000942e(5): CMP R12,qword ptr [R8 + RAX*0x8 + 0x8]
00009433(2): JLE 0x00009462
00009435(5): JMP 0x000094b8
00009440(4): LEA RDX,[RSI + RCX*0x1]
00009444(3): MOV RAX,RDX
00009447(4): SHR RAX,0x3f
0000944b(3): ADD RAX,RDX
0000944e(3): SAR RAX,1
00009451(4): LEA RDX,[RAX + RAX*0x4]
00009455(3): MOV R9,RAX
00009458(5): CMP R12,qword ptr [R8 + RDX*0x8 + 0x8]
0000945d(2): JG 0x000094c0
0000945f(3): MOV RCX,RAX
00009462(3): CMP RSI,RCX
00009465(2): JL 0x00009440
00009467(3): CMP RDI,RSI
0000946a(2): JLE 0x0000948d
0000946c(7): MOV RCX,qword ptr [0xd8 + RBX]
00009473(4): LEA RAX,[RSI + RSI*0x4]
00009477(4): SHL RAX,0x3
0000947b(5): CMP qword ptr [RCX + RAX*0x1 + 0x8],R12
00009480(5): MOV qword ptr [RSP + 0x30],RAX
00009485(2): JNZ 0x0000948d
00009487(4): CMP RSI,-0x1
0000948b(2): JNZ 0x000094d0
0000948d(2): XOR EAX,EAX
0000948f(5): MOV RBX,qword ptr [RSP + 0x68]
00009494(9): XOR RBX,qword ptr FS:[0x28]
0000949d(6): JNZ 0x00009769
000094a3(4): ADD RSP,0x78
000094a7(1): POP RBX
000094a8(1): POP RBP
000094a9(2): POP R12
000094ab(2): POP R13
000094ad(2): POP R14
000094af(2): POP R15
000094b1(1): RET
000094b8(3): MOV R9,RCX
000094bb(3): MOV RCX,RDX
000094be(2): NOP
000094c0(4): LEA RSI,[R9 + 0x1]
000094c4(3): MOV RDX,RCX
000094c7(5): JMP 0x0000940d
000094d0(4): LEA RAX,[RBP + 0x10]
000094d4(7): MOV R13,qword ptr [0x98 + RBX]
000094db(4): MOV qword ptr [RSP],RAX
000094df(5): LEA RAX,[RSP + 0x4c]
000094e4(5): MOV qword ptr [RSP + 0x38],RAX
000094e9(5): LEA RAX,[RSP + 0x50]
000094ee(5): MOV qword ptr [RSP + 0x10],RAX
000094f3(5): MOV RAX,qword ptr [RSP + 0x30]
000094f8(4): LEA R15,[RCX + RAX*0x1]
000094fc(5): JMP 0x000095d8
00009508(4): MOV RAX,qword ptr [R13 + 0x18]
0000950c(4): MOV RCX,qword ptr [RAX + R10*0x8]
00009510(7): MOV R10,qword ptr [0xb8 + RBX]
00009517(8): LEA RAX,[R14*0x8]
0000951f(5): MOV qword ptr [RSP + 0x18],RAX
00009524(3): ADD R10,RAX
00009527(5): MOV qword ptr [RSP + 0x8],RCX
0000952c(3): MOV R9,qword ptr [R10]
0000952f(3): TEST R9,R9
00009532(6): JZ 0x000096c0
00009538(4): MOV RDI,qword ptr [R9 + 0x10]
0000953c(4): LEA RSI,[R9 + 0x18]
00009540(3): MOV RDX,RCX
00009543(5): CALL 0x00007ae0
00009548(3): TEST RAX,RAX
0000954b(2): JNZ 0x000095c9
0000954d(5): MOV RDI,qword ptr [RSP + 0x10]
00009552(4): LEA RSI,[R9 + 0x8]
00009556(5): CALL 0x00008c40
0000955b(5): MOV RSI,qword ptr [RSP + 0x8]
00009560(5): MOV RDI,qword ptr [RSP + 0x10]
00009565(4): MOV dword ptr [RSP + 0x4c],EAX
00009569(5): CALL 0x000065a0
0000956e(4): MOV EDX,dword ptr [RSP + 0x4c]
00009572(2): TEST EDX,EDX
00009574(6): JNZ 0x00009716
0000957a(2): CMP AL,0x1
0000957c(6): JNZ 0x00009716
00009582(5): MOV R10,qword ptr [RSP + 0x18]
00009587(7): ADD R10,qword ptr [0xb8 + RBX]
0000958e(5): MOV RDX,qword ptr [RSP + 0x10]
00009593(5): MOV RDI,qword ptr [RSP + 0x38]
00009598(3): MOV RSI,R13
0000959b(5): MOV qword ptr [RSP + 0x8],R10
000095a0(5): CALL 0x000090f0
000095a5(5): MOV R10,qword ptr [RSP + 0x8]
000095aa(5): MOV RDI,qword ptr [RSP + 0x60]
000095af(3): MOV qword ptr [R10],RAX
000095b2(5): CALL 0x000018d0
000095b7(7): MOV RAX,qword ptr [0xb8 + RBX]
000095be(5): CMP qword ptr [RAX + R14*0x8],0x0
000095c3(6): JZ 0x00009705
000095c9(4): ADD R15,0x28
000095cd(5): CMP byte ptr [R15 + -0x8],0x0
000095d2(6): JZ 0x0000948d
000095d8(3): MOV R10,qword ptr [R15]
000095db(4): MOV R9,qword ptr [RBP + 0x8]
000095df(4): MOV RSI,qword ptr [RSP]
000095e3(3): MOV RDX,R10
000095e6(3): MOV RDI,R9
000095e9(5): CALL 0x00007ae0
000095ee(3): TEST RAX,RAX
000095f1(2): JZ 0x000095c9
000095f3(4): MOV R8,qword ptr [R15 + 0x18]
000095f7(3): ADD R8,R12
000095fa(3): MOV R14,R8
000095fd(4): SUB R14,qword ptr [R15 + 0x10]
00009601(3): CMP R12,R14
00009604(6): JNZ 0x00009508
0000960a(4): MOV RCX,qword ptr [R13 + 0x28]
0000960e(4): LEA RAX,[R10 + R10*0x2]
00009612(4): MOV RSI,qword ptr [RSP]
00009616(3): MOV RDI,R9
00009619(4): LEA RAX,[RCX + RAX*0x8]
0000961d(4): MOV RAX,qword ptr [RAX + 0x10]
00009621(3): MOV R14,qword ptr [RAX]
00009624(3): MOV RDX,R14
00009627(5): CALL 0x00007ae0
0000962c(3): TEST RAX,RAX
0000962f(2): JNZ 0x000095c9
00009631(5): MOV EDI,0x8
00009636(9): MOV qword ptr [RSP + 0x50],0x1
0000963f(9): MOV qword ptr [RSP + 0x58],0x1
00009648(5): CALL 0x00001b00
0000964d(3): TEST RAX,RAX
00009650(5): MOV qword ptr [RSP + 0x60],RAX
00009655(6): JZ 0x0000974d
0000965b(3): MOV qword ptr [RAX],R14
0000965e(2): XOR EAX,EAX
00009660(5): MOV R15,qword ptr [RSP + 0x10]
00009665(5): MOV RDX,qword ptr [RSP + 0x20]
0000966a(3): MOV RDI,R13
0000966d(4): MOV ECX,dword ptr [RSP + 0x2c]
00009671(4): MOV dword ptr [RSP + 0x4c],EAX
00009675(3): MOV RSI,R15
00009678(5): CALL 0x00008490
0000967d(3): MOV RSI,R15
00009680(3): MOV RDI,RBP
00009683(3): MOV R14D,EAX
00009686(5): CALL 0x00008000
0000968b(5): MOV RDI,qword ptr [RSP + 0x60]
00009690(3): MOV R15D,EAX
00009693(5): CALL 0x000018d0
00009698(4): MOV EAX,dword ptr [RSP + 0x4c]
0000969c(3): MOV EDX,R14D
0000969f(3): OR EDX,R15D
000096a2(2): OR EDX,EAX
000096a4(6): JNZ 0x00009736
000096aa(7): MOV RCX,qword ptr [0xd8 + RBX]
000096b1(5): JMP 0x000094f3
000096c0(5): MOV EDI,0x8
000096c5(5): MOV qword ptr [RSP + 0x18],R10
000096ca(9): MOV qword ptr [RSP + 0x50],0x1
000096d3(9): MOV qword ptr [RSP + 0x58],0x1
000096dc(5): CALL 0x00001b00
000096e1(3): TEST RAX,RAX
000096e4(5): MOV qword ptr [RSP + 0x60],RAX
000096e9(2): JZ 0x0000972c
000096eb(5): MOV RDI,qword ptr [RSP + 0x8]
000096f0(8): MOV dword ptr [RSP + 0x4c],0x0
000096f8(5): MOV R10,qword ptr [RSP + 0x18]
000096fd(3): MOV qword ptr [RAX],RDI
00009700(5): JMP 0x0000958e
00009705(4): MOV EAX,dword ptr [RSP + 0x4c]
00009709(2): TEST EAX,EAX
0000970b(6): JZ 0x000095c9
00009711(5): JMP 0x0000948f
00009716(5): MOV RDI,qword ptr [RSP + 0x60]
0000971b(5): CALL 0x000018d0
00009720(4): MOV EAX,dword ptr [RSP + 0x4c]
00009724(2): TEST EAX,EAX
00009726(6): JNZ 0x0000948f
0000972c(5): MOV EAX,0xc
00009731(5): JMP 0x0000948f
00009736(2): TEST EAX,EAX
00009738(6): JNZ 0x0000948f
0000973e(3): TEST R14D,R14D
00009741(3): MOV EAX,R14D
00009744(4): CMOVZ EAX,R15D
00009748(5): JMP 0x0000948f
0000974d(9): MOV qword ptr [RSP + 0x58],0x0
00009756(9): MOV qword ptr [RSP + 0x50],0x0
0000975f(5): MOV EAX,0xc
00009764(5): JMP 0x00009660
00009769(5): CALL 0x000019e0
0000976e(2): NOP
00009770(2): PUSH R15
00009772(2): PUSH R14
00009774(2): PUSH R13
00009776(2): PUSH R12
00009778(1): PUSH RBP
00009779(1): PUSH RBX
0000977a(4): SUB RSP,0x28
0000977e(4): CMP qword ptr [RSI],0x0
00009782(7): MOV R13,qword ptr [0x98 + RDI]
00009789(6): JLE 0x00009850
0000978f(3): MOV R14,RDX
00009792(3): MOV R12,RSI
00009795(3): MOV R15,RDI
00009798(2): XOR EBX,EBX
0000979a(2): JMP 0x000097ae
000097a0(4): ADD RBX,0x1
000097a4(4): CMP RBX,qword ptr [R12]
000097a8(6): JGE 0x00009850
000097ae(3): MOV RAX,qword ptr [R14]
000097b1(4): MOV RBP,qword ptr [RAX + RBX*0x8]
000097b5(3): MOV RAX,RBP
000097b8(4): SHL RAX,0x4
000097bc(4): ADD RAX,qword ptr [R13]
000097c0(4): CMP byte ptr [RAX + 0x8],0x8
000097c4(2): JNZ 0x000097a0
000097c6(3): MOV RAX,qword ptr [RAX]
000097c9(4): CMP RAX,0x3f
000097cd(2): JG 0x000097a0
000097cf(7): MOV RSI,qword ptr [0xa0 + R13]
000097d6(4): BT RSI,RAX
000097da(2): JNC 0x000097a0
000097dc(7): MOV R8,qword ptr [0xe8 + R15]
000097e3(7): CMP R8,qword ptr [0xf0 + R15]
000097ea(7): MOV R9,qword ptr [0xf8 + R15]
000097f1(2): JZ 0x00009868
000097f3(5): MOV ESI,0x30
000097f8(5): MOV EDI,0x1
000097fd(5): MOV qword ptr [RSP + 0x10],R9
00009802(5): MOV qword ptr [RSP + 0x8],R8
00009807(5): MOV qword ptr [RSP + 0x18],RCX
0000980c(5): CALL 0x00001ab0
00009811(5): MOV R8,qword ptr [RSP + 0x8]
00009816(5): MOV R9,qword ptr [RSP + 0x10]
0000981b(3): TEST RAX,RAX
0000981e(4): MOV qword ptr [R9 + R8*0x8],RAX
00009822(2): JZ 0x00009861
00009824(4): ADD R8,0x1
00009828(4): ADD RBX,0x1
0000982c(5): MOV RCX,qword ptr [RSP + 0x18]
00009831(7): MOV qword ptr [0xe8 + R15],R8
00009838(4): CMP RBX,qword ptr [R12]
0000983c(4): MOV qword ptr [RAX + 0x8],RBP
00009840(3): MOV qword ptr [RAX],RCX
00009843(6): JL 0x000097ae
00009849(7): NOP dword ptr [RAX]
00009850(2): XOR EAX,EAX
00009852(4): ADD RSP,0x28
00009856(1): POP RBX
00009857(1): POP RBP
00009858(2): POP R12
0000985a(2): POP R13
0000985c(2): POP R14
0000985e(2): POP R15
00009860(1): RET
00009861(5): MOV EAX,0xc
00009866(2): JMP 0x00009852
00009868(4): LEA RAX,[R8 + R8*0x1]
0000986c(3): MOV RSI,R8
0000986f(3): MOV RDI,R9
00009872(4): SHL RSI,0x4
00009876(5): MOV qword ptr [RSP + 0x8],RCX
0000987b(5): MOV qword ptr [RSP + 0x10],RAX
00009880(5): CALL 0x00001b60
00009885(3): TEST RAX,RAX
00009888(3): MOV R9,RAX
0000988b(5): MOV RCX,qword ptr [RSP + 0x8]
00009890(2): JZ 0x00009861
00009892(7): MOV qword ptr [0xf8 + R15],RAX
00009899(5): MOV RAX,qword ptr [RSP + 0x10]
0000989e(7): MOV R8,qword ptr [0xe8 + R15]
000098a5(7): MOV qword ptr [0xf0 + R15],RAX
000098ac(5): JMP 0x000097f3
000098c0(1): PUSH RBP
000098c1(1): PUSH RBX
000098c2(3): MOV RBP,RDI
000098c5(4): SUB RSP,0x8
000098c9(3): TEST RSI,RSI
000098cc(2): JS 0x00009920
000098ce(4): CMP qword ptr [RDI + 0x58],RSI
000098d2(6): JZ 0x00009978
000098d8(7): CMP dword ptr [0x90 + RDI],0x1
000098df(2): JLE 0x00009930
000098e1(4): MOV RAX,qword ptr [RDI + 0x10]
000098e5(2): JMP 0x000098fa
000098f0(4): SUB RSI,0x1
000098f4(4): CMP RSI,-0x1
000098f8(2): JZ 0x00009920
000098fa(3): MOV EBX,dword ptr [RAX + RSI*0x4]
000098fd(3): CMP EBX,-0x1
00009900(2): JZ 0x000098f0
00009902(7): CMP byte ptr [0x8e + RBP],0x0
00009909(2): JNZ 0x00009988
0000990b(2): XOR EAX,EAX
0000990d(3): CMP EBX,0xa
00009910(2): JZ 0x0000995c
00009912(4): ADD RSP,0x8
00009916(1): POP RBX
00009917(1): POP RBP
00009918(1): RET
00009920(3): MOV EAX,dword ptr [RBP + 0x70]
00009923(4): ADD RSP,0x8
00009927(1): POP RBX
00009928(1): POP RBP
00009929(1): RET
00009930(4): MOV RAX,qword ptr [RDI + 0x8]
00009934(7): MOV RCX,qword ptr [0x80 + RDI]
0000993b(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
0000993f(3): MOV RDX,RAX
00009942(4): SAR RAX,0x6
00009946(4): MOV RCX,qword ptr [RCX + RAX*0x8]
0000994a(5): MOV EAX,0x1
0000994f(4): BT RCX,RDX
00009953(2): JC 0x00009912
00009955(2): XOR EAX,EAX
00009957(3): CMP DL,0xa
0000995a(2): JNZ 0x00009912
0000995c(2): XOR EAX,EAX
0000995e(7): CMP byte ptr [0x8d + RBP],0x0
00009965(3): SETNZ AL
00009968(4): ADD RSP,0x8
0000996c(2): ADD EAX,EAX
0000996e(1): POP RBX
0000996f(1): POP RBP
00009970(1): RET
00009978(3): AND EDX,0x2
0000997b(3): CMP EDX,0x1
0000997e(2): SBB EAX,EAX
00009980(3): AND EAX,0x2
00009983(3): ADD EAX,0x8
00009986(2): JMP 0x00009912
00009988(2): MOV EDI,EBX
0000998a(5): CALL 0x00001af0
0000998f(2): TEST EAX,EAX
00009991(2): JNZ 0x0000999c
00009993(3): CMP EBX,0x5f
00009996(6): JNZ 0x0000990b
0000999c(5): MOV EAX,0x1
000099a1(5): JMP 0x00009912
000099b0(4): MOV RAX,qword ptr [RDI + 0x8]
000099b4(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
000099b8(4): MOVZX EAX,byte ptr [RSI + 0x8]
000099bc(2): CMP AL,0x3
000099be(6): JZ 0x00009a78
000099c4(6): JBE 0x00009a60
000099ca(2): CMP AL,0x5
000099cc(2): JZ 0x000099e0
000099ce(2): CMP AL,0x7
000099d0(6): JNZ 0x00009a70
000099d6(2): XOR EAX,EAX
000099d8(2): TEST CL,CL
000099da(6): JS 0x00009a6a
000099e0(3): CMP CL,0xa
000099e3(6): JZ 0x00009aa8
000099e9(2): TEST CL,CL
000099eb(2): JNZ 0x00009a00
000099ed(7): MOV RCX,qword ptr [0x98 + RDI]
000099f4(2): XOR EAX,EAX
000099f6(7): TEST byte ptr [0xd8 + RCX],0x80
000099fd(2): JNZ 0x00009a6a
000099ff(1): NOP
00009a00(1): PUSH RBX
00009a01(3): MOV EBX,dword ptr [RSI + 0x8]
00009a04(5): MOV EAX,0x1
00009a09(6): TEST EBX,0x3ff00
00009a0f(2): JZ 0x00009a5c
00009a11(3): MOV RSI,RDX
00009a14(6): MOV EDX,dword ptr [0xa0 + RDI]
00009a1a(3): SHR EBX,0x8
00009a1d(5): CALL 0x000098c0
00009a22(2): MOV ECX,EBX
00009a24(2): MOV EDX,EAX
00009a26(5): AND CX,0x3ff
00009a2b(3): TEST BL,0x4
00009a2e(2): JZ 0x00009a98
00009a30(2): XOR EAX,EAX
00009a32(3): TEST DL,0x1
00009a35(2): JZ 0x00009a5c
00009a37(3): AND EBX,0x8
00009a3a(2): JNZ 0x00009a5c
00009a3c(3): TEST CL,0x20
00009a3f(2): JZ 0x00009a48
00009a41(2): XOR EAX,EAX
00009a43(3): TEST DL,0x2
00009a46(2): JZ 0x00009a5c
00009a48(3): SHR EDX,0x3
00009a4b(5): MOV EAX,0x1
00009a50(3): AND EDX,0x1
00009a53(6): AND ECX,0x80
00009a59(3): CMOVNZ EAX,EDX
00009a5c(1): POP RBX
00009a5d(1): RET
00009a60(2): CMP AL,0x1
00009a62(2): JNZ 0x00009a70
00009a64(2): XOR EAX,EAX
00009a66(2): CMP byte ptr [RSI],CL
00009a68(2): JZ 0x00009a00
00009a6a(2): RET
00009a70(2): XOR EAX,EAX
00009a72(1): RET
00009a78(3): MOV R8,qword ptr [RSI]
00009a7b(3): MOVZX EAX,CL
00009a7e(4): SAR RAX,0x6
00009a82(4): MOV R8,qword ptr [R8 + RAX*0x8]
00009a86(2): XOR EAX,EAX
00009a88(4): BT RAX,RCX
00009a8c(6): JC 0x00009a00
00009a92(2): RET
00009a98(3): AND EBX,0x8
00009a9b(2): JZ 0x00009a3c
00009a9d(2): TEST AL,0x1
00009a9f(2): JZ 0x00009a3c
00009aa1(2): XOR EAX,EAX
00009aa3(1): POP RBX
00009aa4(1): RET
00009aa8(7): MOV RCX,qword ptr [0x98 + RDI]
00009aaf(2): XOR EAX,EAX
00009ab1(7): TEST byte ptr [0xd8 + RCX],0x40
00009ab8(6): JNZ 0x00009a00
00009abe(2): RET
00009ac0(2): PUSH R12
00009ac2(3): MOV R12,RDX
00009ac5(1): PUSH RBP
00009ac6(1): PUSH RBX
00009ac7(6): MOV EDX,dword ptr [0xa0 + RDI]
00009acd(3): MOV RBX,RSI
00009ad0(3): MOV RSI,RCX
00009ad3(3): MOV RBP,RDI
00009ad6(5): CALL 0x000098c0
00009adb(3): TEST RBX,RBX
00009ade(6): JLE 0x00009b88
00009ae4(7): MOV RDX,qword ptr [0x98 + RBP]
00009aeb(3): MOV R11D,EAX
00009aee(2): MOV EBP,EAX
00009af0(3): AND EAX,0x1
00009af3(4): MOV R9,qword ptr [R12]
00009af7(2): XOR ESI,ESI
00009af9(3): AND EBP,0x8
00009afc(4): AND R11D,0x2
00009b00(3): MOV R10D,EAX
00009b03(3): MOV R8,qword ptr [RDX]
00009b06(2): JMP 0x00009b19
00009b10(4): ADD RSI,0x1
00009b14(3): CMP RSI,RBX
00009b17(2): JZ 0x00009b88
00009b19(4): MOV RAX,qword ptr [R9 + RSI*0x8]
00009b1d(3): MOV RDX,RAX
00009b20(4): SHL RDX,0x4
00009b24(3): ADD RDX,R8
00009b27(3): MOV ECX,dword ptr [RDX + 0x8]
00009b2a(3): SHR ECX,0x8
00009b2d(2): MOV EDI,ECX
00009b2f(5): AND DI,0x3ff
00009b34(4): CMP byte ptr [RDX + 0x8],0x2
00009b38(2): JNZ 0x00009b10
00009b3a(3): TEST DI,DI
00009b3d(2): JZ 0x00009b65
00009b3f(3): TEST CL,0x4
00009b42(2): JZ 0x00009b70
00009b44(3): TEST R10D,R10D
00009b47(2): JZ 0x00009b10
00009b49(3): AND ECX,0x8
00009b4c(2): JNZ 0x00009b10
00009b4e(4): TEST DIL,0x20
00009b52(2): JZ 0x00009b59
00009b54(3): TEST R11D,R11D
00009b57(2): JZ 0x00009b10
00009b59(6): AND EDI,0x80
00009b5f(2): JZ 0x00009b65
00009b61(2): TEST EBP,EBP
00009b63(2): JZ 0x00009b10
00009b65(1): POP RBX
00009b66(1): POP RBP
00009b67(2): POP R12
00009b69(1): RET
00009b70(3): AND ECX,0x8
00009b73(2): JZ 0x00009b4e
00009b75(3): TEST R10D,R10D
00009b78(2): JNZ 0x00009b10
00009b7a(4): TEST DIL,0x20
00009b7e(2): JZ 0x00009b59
00009b80(2): JMP 0x00009b54
00009b88(1): POP RBX
00009b89(2): XOR EAX,EAX
00009b8b(1): POP RBP
00009b8c(2): POP R12
00009b8e(1): RET
00009b90(2): PUSH R15
00009b92(2): PUSH R14
00009b94(3): MOV R15,RSI
00009b97(2): PUSH R13
00009b99(2): PUSH R12
00009b9b(3): MOV R10D,EDX
00009b9e(1): PUSH RBP
00009b9f(1): PUSH RBX
00009ba0(3): MOV RBP,RSI
00009ba3(3): MOV RBX,RDI
00009ba6(4): SUB RSP,0x48
00009baa(9): MOV RAX,qword ptr FS:[0x28]
00009bb3(5): MOV qword ptr [RSP + 0x38],RAX
00009bb8(2): XOR EAX,EAX
00009bba(4): MOV RAX,qword ptr [RDI + 0x28]
00009bbe(3): SUB RBP,RAX
00009bc1(3): CMP RAX,RSI
00009bc4(2): JLE 0x00009c26
00009bc6(7): CMP dword ptr [0x90 + RDI],0x1
00009bcd(6): JG 0x00009d00
00009bd3(4): MOV RAX,qword ptr [RBX + 0x50]
00009bd7(8): MOV qword ptr [RBX + 0x30],0x0
00009bdf(3): MOV RBP,R15
00009be2(8): MOV qword ptr [RBX + 0x28],0x0
00009bea(8): MOV qword ptr [RBX + 0x38],0x0
00009bf2(7): MOV byte ptr [0x8c + RBX],0x0
00009bf9(4): MOV qword ptr [RBX + 0x58],RAX
00009bfd(4): MOV RAX,qword ptr [RBX + 0x60]
00009c01(4): MOV qword ptr [RBX + 0x68],RAX
00009c05(3): MOV EAX,R10D
00009c08(3): AND EAX,0x1
00009c0b(3): CMP EAX,0x1
00009c0e(2): SBB EAX,EAX
00009c10(3): AND EAX,0x2
00009c13(3): ADD EAX,0x4
00009c16(7): CMP byte ptr [0x8b + RBX],0x0
00009c1d(3): MOV dword ptr [RBX + 0x70],EAX
00009c20(6): JZ 0x00009cf0
00009c26(3): TEST RBP,RBP
00009c29(2): JZ 0x00009c8e
00009c2b(4): MOV RAX,qword ptr [RBX + 0x38]
00009c2f(7): MOVZX EDX,byte ptr [0x8c + RBX]
00009c36(4): MOV R8,qword ptr [RBX + 0x30]
00009c3a(3): CMP RAX,RBP
00009c3d(6): JLE 0x00009d60
00009c43(2): TEST DL,DL
00009c45(6): JNZ 0x00009e58
00009c4b(4): LEA RSI,[RBP + -0x1]
00009c4f(3): MOV EDX,R10D
00009c52(3): MOV RDI,RBX
00009c55(4): MOV qword ptr [RSP],R8
00009c59(5): CALL 0x000098c0
00009c5e(4): MOV R8,qword ptr [RSP]
00009c62(3): MOV dword ptr [RBX + 0x70],EAX
00009c65(3): SUB R8,RBP
00009c68(7): CMP dword ptr [0x90 + RBX],0x1
00009c6f(6): JG 0x00009d10
00009c75(7): CMP byte ptr [0x8b + RBX],0x0
00009c7c(6): JNZ 0x0000a020
00009c82(4): SUB qword ptr [RBX + 0x38],RBP
00009c86(4): MOV qword ptr [RBX + 0x30],R8
00009c8a(4): ADD qword ptr [RBX + 0x8],RBP
00009c8e(4): MOV RAX,qword ptr [RBX + 0x58]
00009c92(4): SUB qword ptr [RBX + 0x68],RBP
00009c96(4): MOV qword ptr [RBX + 0x28],R15
00009c9a(3): SUB RAX,RBP
00009c9d(7): CMP dword ptr [0x90 + RBX],0x1
00009ca4(4): MOV qword ptr [RBX + 0x58],RAX
00009ca8(6): JLE 0x00009d48
00009cae(7): CMP byte ptr [0x88 + RBX],0x0
00009cb5(3): MOV RDI,RBX
00009cb8(2): JZ 0x00009d38
00009cba(5): CALL 0x00006a00
00009cbf(2): TEST EAX,EAX
00009cc1(2): JNZ 0x00009ccd
00009cc3(8): MOV qword ptr [RBX + 0x48],0x0
00009ccb(2): XOR EAX,EAX
00009ccd(5): MOV RCX,qword ptr [RSP + 0x38]
00009cd2(9): XOR RCX,qword ptr FS:[0x28]
00009cdb(6): JNZ 0x0000a32a
00009ce1(4): ADD RSP,0x48
00009ce5(1): POP RBX
00009ce6(1): POP RBP
00009ce7(2): POP R12
00009ce9(2): POP R13
00009ceb(2): POP R14
00009ced(2): POP R15
00009cef(1): RET
00009cf0(3): MOV RAX,qword ptr [RBX]
00009cf3(4): MOV qword ptr [RBX + 0x8],RAX
00009cf7(5): JMP 0x00009c26
00009d00(8): MOV qword ptr [RDI + 0x20],0x0
00009d08(5): JMP 0x00009bd3
00009d10(4): MOV RDI,qword ptr [RBX + 0x10]
00009d14(8): LEA RDX,[R8*0x4]
00009d1c(4): LEA RSI,[RDI + RBP*0x4]
00009d20(5): CALL 0x00001ba0
00009d25(4): MOV R8,qword ptr [RBX + 0x30]
00009d29(3): SUB R8,RBP
00009d2c(5): JMP 0x00009c75
00009d38(5): CALL 0x00006830
00009d3d(5): JMP 0x00009cc3
00009d48(7): CMP byte ptr [0x8b + RBX],0x0
00009d4f(6): JNZ 0x0000a100
00009d55(4): MOV qword ptr [RBX + 0x30],RAX
00009d59(5): JMP 0x00009cc3
00009d60(2): TEST DL,DL
00009d62(6): JNZ 0x0000a20d
00009d68(7): MOVSXD RDX,dword ptr [0x90 + RBX]
00009d6f(8): MOV qword ptr [RBX + 0x30],0x0
00009d77(4): MOV R11,qword ptr [RBX + 0x28]
00009d7b(3): CMP EDX,0x1
00009d7e(6): JLE 0x0000a168
00009d84(7): CMP byte ptr [0x89 + RBX],0x0
00009d8b(6): JNZ 0x0000a048
00009d91(4): LEA R14,[R11 + RAX*0x1]
00009d95(3): CMP R15,R14
00009d98(6): JLE 0x0000a1df
00009d9e(4): LEA RAX,[RBX + 0x20]
00009da2(5): LEA R13,[RSP + 0x24]
00009da7(5): MOV qword ptr [RSP + 0x10],RAX
00009dac(4): NOP dword ptr [RAX]
00009db0(4): MOV R12,qword ptr [RBX + 0x50]
00009db4(3): MOV RSI,qword ptr [RBX]
00009db7(3): MOV RDI,R13
00009dba(4): MOV RAX,qword ptr [RBX + 0x20]
00009dbe(5): MOV RCX,qword ptr [RSP + 0x10]
00009dc3(5): MOV dword ptr [RSP + 0xc],R10D
00009dc8(4): MOV qword ptr [RSP],R8
00009dcc(3): SUB R12,R14
00009dcf(3): ADD RSI,R14
00009dd2(3): MOV RDX,R12
00009dd5(5): MOV qword ptr [RSP + 0x18],RAX
00009dda(5): CALL 0x00005f40
00009ddf(4): LEA RCX,[RAX + -0x1]
00009de3(4): MOV EDX,dword ptr [RSP + 0x24]
00009de7(4): MOV R8,qword ptr [RSP]
00009deb(5): MOV R10D,dword ptr [RSP + 0xc]
00009df0(4): CMP RCX,-0x4
00009df4(6): JA 0x0000a235
00009dfa(3): ADD R14,RAX
00009dfd(3): CMP R15,R14
00009e00(2): JG 0x00009db0
00009e02(3): SUB R14,R15
00009e05(3): CMP EDX,-0x1
00009e08(3): MOV R12,R14
00009e0b(4): MOV qword ptr [RBX + 0x30],R14
00009e0f(6): JZ 0x0000a1e9
00009e15(7): CMP byte ptr [0x8e + RBX],0x0
00009e1c(6): JNZ 0x0000a289
00009e22(2): XOR EAX,EAX
00009e24(3): CMP EDX,0xa
00009e27(2): JNZ 0x00009e37
00009e29(2): XOR EAX,EAX
00009e2b(7): CMP byte ptr [0x8d + RBX],0x0
00009e32(3): SETNZ AL
00009e35(2): ADD EAX,EAX
00009e37(3): MOV dword ptr [RBX + 0x70],EAX
00009e3a(4): CMP R12,0x0
00009e3e(6): JNZ 0x0000a25a
00009e44(7): MOVZX EAX,byte ptr [0x8b + RBX]
00009e4b(4): MOV qword ptr [RBX + 0x38],R12
00009e4f(5): JMP 0x0000a00c
00009e58(4): MOV R14,qword ptr [RBX + 0x18]
00009e5c(3): MOV RCX,R8
00009e5f(2): XOR ESI,ESI
00009e61(2): JMP 0x00009e73
00009e68(2): JGE 0x00009ea3
00009e6a(4): LEA RSI,[RAX + 0x1]
00009e6e(3): CMP RSI,RCX
00009e71(2): JGE 0x00009e98
00009e73(4): LEA RDX,[RSI + RCX*0x1]
00009e77(3): MOV RAX,RDX
00009e7a(4): SHR RAX,0x3f
00009e7e(3): ADD RAX,RDX
00009e81(3): SAR RAX,1
00009e84(4): MOV RDX,qword ptr [R14 + RAX*0x8]
00009e88(3): MOV R12,RAX
00009e8b(3): CMP RDX,RBP
00009e8e(2): JLE 0x00009e68
00009e90(3): MOV RCX,RAX
00009e93(2): JMP 0x00009e6e
00009e98(4): LEA R12,[RAX + 0x1]
00009e9c(3): CMP RDX,RBP
00009e9f(4): CMOVGE R12,RAX
00009ea3(5): LEA R13,[R12 + -0x1]
00009ea8(3): MOV EDX,R10D
00009eab(3): MOV RDI,RBX
00009eae(4): MOV qword ptr [RSP],R8
00009eb2(3): MOV RSI,R13
00009eb5(5): CALL 0x000098c0
00009eba(3): CMP RBP,R12
00009ebd(3): MOV dword ptr [RBX + 0x70],EAX
00009ec0(4): MOV R8,qword ptr [RSP]
00009ec4(6): JNZ 0x00009f48
00009eca(3): CMP RBP,R8
00009ecd(2): JGE 0x00009f48
00009ecf(4): CMP qword ptr [R14 + R12*0x8],RBP
00009ed3(2): JNZ 0x00009f48
00009ed5(4): MOV RDI,qword ptr [RBX + 0x10]
00009ed9(3): SUB R8,RBP
00009edc(8): LEA RDX,[R8*0x4]
00009ee4(4): LEA RSI,[RDI + RBP*0x4]
00009ee8(5): CALL 0x00001ba0
00009eed(4): MOV RDI,qword ptr [RBX + 0x8]
00009ef1(4): MOV RDX,qword ptr [RBX + 0x30]
00009ef5(4): LEA RSI,[RDI + RBP*0x1]
00009ef9(3): SUB RDX,RBP
00009efc(5): CALL 0x00001ba0
00009f01(4): MOV RAX,qword ptr [RBX + 0x30]
00009f05(4): SUB qword ptr [RBX + 0x38],RBP
00009f09(3): SUB RAX,RBP
00009f0c(3): TEST RAX,RAX
00009f0f(4): MOV qword ptr [RBX + 0x30],RAX
00009f13(2): JLE 0x00009f38
00009f15(4): MOV RCX,qword ptr [RBX + 0x18]
00009f19(2): XOR EAX,EAX
00009f1b(4): LEA RSI,[RCX + RBP*0x8]
00009f1f(1): NOP
00009f20(4): MOV RDX,qword ptr [RSI + RAX*0x8]
00009f24(3): SUB RDX,RBP
00009f27(4): MOV qword ptr [RCX + RAX*0x8],RDX
00009f2b(4): ADD RAX,0x1
00009f2f(4): CMP qword ptr [RBX + 0x30],RAX
00009f33(2): JG 0x00009f20
00009f35(3): NOP dword ptr [RAX]
00009f38(7): MOVZX EAX,byte ptr [0x8b + RBX]
00009f3f(5): JMP 0x0000a00c
00009f48(4): MOV RAX,qword ptr [RBX + 0x50]
00009f4c(7): MOV byte ptr [0x8c + RBX],0x0
00009f53(3): ADD RAX,RBP
00009f56(3): SUB RAX,R15
00009f59(4): MOV qword ptr [RBX + 0x58],RAX
00009f5d(4): MOV RAX,qword ptr [RBX + 0x60]
00009f61(3): ADD RAX,RBP
00009f64(3): SUB RAX,R15
00009f67(3): TEST R12,R12
00009f6a(4): MOV qword ptr [RBX + 0x68],RAX
00009f6e(2): JLE 0x00009f93
00009f70(5): CMP qword ptr [R14 + R12*0x8 + -0x8],RBP
00009f75(2): JZ 0x00009f8b
00009f77(2): JMP 0x00009f93
00009f80(5): CMP qword ptr [R14 + R13*0x8 + -0x8],RBP
00009f85(2): JNZ 0x00009f93
00009f87(4): SUB R13,0x1
00009f8b(3): TEST R13,R13
00009f8e(3): MOV R12,R13
00009f91(2): JNZ 0x00009f80
00009f93(3): CMP R12,R8
00009f96(6): JGE 0x0000a1c8
00009f9c(4): MOV RAX,qword ptr [RBX + 0x10]
00009fa0(2): JMP 0x00009fb5
00009fa8(4): ADD R12,0x1
00009fac(3): CMP R12,R8
00009faf(6): JZ 0x0000a1d0
00009fb5(5): CMP dword ptr [RAX + R12*0x4],-0x1
00009fba(2): JZ 0x00009fa8
00009fbc(4): MOV RDX,qword ptr [R14 + R12*0x8]
00009fc0(3): SUB RDX,RBP
00009fc3(4): CMP RDX,0x0
00009fc7(4): MOV qword ptr [RBX + 0x30],RDX
00009fcb(2): JZ 0x0000a001
00009fcd(2): JLE 0x00009fef
00009fcf(4): MOV RAX,qword ptr [RBX + 0x10]
00009fd3(4): LEA RCX,[RAX + RDX*0x4]
00009fd7(9): NOP word ptr [RAX + RAX*0x1]
00009fe0(6): MOV dword ptr [RAX],0xffffffff
00009fe6(4): ADD RAX,0x4
00009fea(3): CMP RCX,RAX
00009fed(2): JNZ 0x00009fe0
00009fef(4): MOV RDI,qword ptr [RBX + 0x8]
00009ff3(5): MOV ESI,0xff
00009ff8(5): CALL 0x00001a60
00009ffd(4): MOV RDX,qword ptr [RBX + 0x30]
0000a001(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000a008(4): MOV qword ptr [RBX + 0x38],RDX
0000a00c(2): TEST AL,AL
0000a00e(6): JZ 0x00009c8a
0000a014(5): JMP 0x00009c8e
0000a020(4): MOV RDI,qword ptr [RBX + 0x8]
0000a024(3): MOV RDX,R8
0000a027(4): LEA RSI,[RDI + RBP*0x1]
0000a02b(5): CALL 0x00001ba0
0000a030(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000a037(4): SUB qword ptr [RBX + 0x30],RBP
0000a03b(4): SUB qword ptr [RBX + 0x38],RBP
0000a03f(2): JMP 0x0000a00c
0000a048(3): MOV RCX,qword ptr [RBX]
0000a04b(3): MOV RDI,RBP
0000a04e(3): SUB RDI,RDX
0000a051(3): MOV RDX,RDI
0000a054(4): LEA R12,[RCX + R11*0x1]
0000a058(3): ADD RDX,R12
0000a05b(5): LEA RSI,[R12 + RBP*0x1 + -0x1]
0000a060(3): CMP RCX,RDX
0000a063(4): CMOVC RCX,RDX
0000a067(3): CMP RCX,RSI
0000a06a(2): JBE 0x0000a085
0000a06c(5): JMP 0x00009d91
0000a078(4): SUB RSI,0x1
0000a07c(3): CMP RCX,RSI
0000a07f(6): JA 0x00009d91
0000a085(3): MOVZX EDX,byte ptr [RSI]
0000a088(3): AND EDX,0xffffffc0
0000a08b(3): CMP DL,0x80
0000a08e(2): JZ 0x0000a078
0000a090(4): MOV RDX,qword ptr [RBX + 0x58]
0000a094(4): MOV RCX,qword ptr [RBX + 0x78]
0000a098(3): MOV R14,RSI
0000a09b(3): ADD RDX,R12
0000a09e(3): SUB RDX,RSI
0000a0a1(3): TEST RCX,RCX
0000a0a4(6): JNZ 0x0000a2f2
0000a0aa(5): LEA R13,[RSP + 0x24]
0000a0af(3): ADD R12,RBP
0000a0b2(5): LEA RCX,[RSP + 0x28]
0000a0b7(3): SUB R12,R14
0000a0ba(5): MOV dword ptr [RSP + 0xc],R10D
0000a0bf(4): MOV qword ptr [RSP],R8
0000a0c3(3): MOV RDI,R13
0000a0c6(9): MOV qword ptr [RSP + 0x28],0x0
0000a0cf(5): CALL 0x00005f40
0000a0d4(3): CMP R12,RAX
0000a0d7(4): MOV R8,qword ptr [RSP]
0000a0db(5): MOV R10D,dword ptr [RSP + 0xc]
0000a0e0(2): JA 0x0000a0ec
0000a0e2(4): CMP RAX,-0x3
0000a0e6(6): JBE 0x0000a2b1
0000a0ec(4): MOV R11,qword ptr [RBX + 0x28]
0000a0f0(4): MOV RAX,qword ptr [RBX + 0x38]
0000a0f4(5): JMP 0x00009d91
0000a100(7): CMP byte ptr [0x88 + RBX],0x0
0000a107(6): JNZ 0x0000a200
0000a10d(4): MOV RCX,qword ptr [RBX + 0x78]
0000a111(3): TEST RCX,RCX
0000a114(6): JZ 0x00009cc3
0000a11a(4): CMP qword ptr [RBX + 0x40],RAX
0000a11e(4): MOV RDX,qword ptr [RBX + 0x30]
0000a122(5): CMOVLE RAX,qword ptr [RBX + 0x40]
0000a127(3): CMP RAX,RDX
0000a12a(2): JG 0x0000a138
0000a12c(2): JMP 0x0000a158
0000a130(4): MOV R15,qword ptr [RBX + 0x28]
0000a134(4): MOV RCX,qword ptr [RBX + 0x78]
0000a138(3): MOV RSI,qword ptr [RBX]
0000a13b(3): ADD RSI,RDX
0000a13e(5): MOVZX ESI,byte ptr [RSI + R15*0x1]
0000a143(4): MOVZX ESI,byte ptr [RCX + RSI*0x1]
0000a147(4): MOV RCX,qword ptr [RBX + 0x8]
0000a14b(4): MOV byte ptr [RCX + RDX*0x1],SIL
0000a14f(4): ADD RDX,0x1
0000a153(3): CMP RAX,RDX
0000a156(2): JNZ 0x0000a130
0000a158(4): MOV qword ptr [RBX + 0x30],RDX
0000a15c(4): MOV qword ptr [RBX + 0x38],RDX
0000a160(5): JMP 0x00009cc3
0000a168(3): MOV RAX,qword ptr [RBX]
0000a16b(4): MOV RDX,qword ptr [RBX + 0x78]
0000a16f(3): ADD RAX,RBP
0000a172(3): TEST RDX,RDX
0000a175(6): MOVZX EAX,byte ptr [R11 + RAX*0x1 + -0x1]
0000a17b(8): MOV qword ptr [RBX + 0x38],0x0
0000a183(2): JZ 0x0000a189
0000a185(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
0000a189(7): MOV RCX,qword ptr [0x80 + RBX]
0000a190(3): MOVZX EDX,AL
0000a193(4): SAR RDX,0x6
0000a197(4): MOV RCX,qword ptr [RCX + RDX*0x8]
0000a19b(5): MOV EDX,0x1
0000a1a0(4): BT RCX,RAX
0000a1a4(2): JC 0x0000a1c0
0000a1a6(2): XOR EDX,EDX
0000a1a8(2): CMP AL,0xa
0000a1aa(2): JNZ 0x0000a1c0
0000a1ac(2): XOR EDX,EDX
0000a1ae(7): CMP byte ptr [0x8d + RBX],0x0
0000a1b5(3): SETNZ DL
0000a1b8(2): ADD EDX,EDX
0000a1ba(6): NOP word ptr [RAX + RAX*0x1]
0000a1c0(3): MOV dword ptr [RBX + 0x70],EDX
0000a1c3(5): JMP 0x00009f38
0000a1c8(6): JNZ 0x00009fbc
0000a1ce(2): NOP
0000a1d0(8): MOV qword ptr [RBX + 0x30],0x0
0000a1d8(2): XOR EDX,EDX
0000a1da(5): JMP 0x0000a001
0000a1df(3): SUB R14,R15
0000a1e2(3): MOV R12,R14
0000a1e5(4): MOV qword ptr [RBX + 0x30],R14
0000a1e9(4): LEA RSI,[R8 + -0x1]
0000a1ed(3): MOV EDX,R10D
0000a1f0(3): MOV RDI,RBX
0000a1f3(5): CALL 0x000098c0
0000a1f8(3): MOV dword ptr [RBX + 0x70],EAX
0000a1fb(5): JMP 0x00009e3a
0000a200(3): MOV RDI,RBX
0000a203(5): CALL 0x000067c0
0000a208(5): JMP 0x00009cc3
0000a20d(4): MOV RDX,qword ptr [RBX + 0x50]
0000a211(7): MOV byte ptr [0x8c + RBX],0x0
0000a218(3): ADD RDX,RBP
0000a21b(3): SUB RDX,R15
0000a21e(4): MOV qword ptr [RBX + 0x58],RDX
0000a222(4): MOV RDX,qword ptr [RBX + 0x60]
0000a226(3): ADD RDX,RBP
0000a229(3): SUB RDX,R15
0000a22c(4): MOV qword ptr [RBX + 0x68],RDX
0000a230(5): JMP 0x00009d68
0000a235(3): TEST RAX,RAX
0000a238(2): JZ 0x0000a2ad
0000a23a(3): TEST R12,R12
0000a23d(2): JZ 0x0000a2ad
0000a23f(3): MOV RAX,qword ptr [RBX]
0000a242(5): MOVZX EDX,byte ptr [RAX + R14*0x1]
0000a247(5): MOV RAX,qword ptr [RSP + 0x18]
0000a24c(4): MOV qword ptr [RBX + 0x20],RAX
0000a250(5): MOV EAX,0x1
0000a255(5): JMP 0x00009dfa
0000a25a(2): JLE 0x0000a277
0000a25c(4): MOV RAX,qword ptr [RBX + 0x10]
0000a260(4): LEA RDX,[RAX + R12*0x4]
0000a264(4): NOP dword ptr [RAX]
0000a268(6): MOV dword ptr [RAX],0xffffffff
0000a26e(4): ADD RAX,0x4
0000a272(3): CMP RDX,RAX
0000a275(2): JNZ 0x0000a268
0000a277(7): CMP byte ptr [0x8b + RBX],0x0
0000a27e(2): JNZ 0x0000a2d8
0000a280(4): MOV qword ptr [RBX + 0x38],R12
0000a284(5): JMP 0x00009c8a
0000a289(2): MOV EDI,EDX
0000a28b(3): MOV dword ptr [RSP],EDX
0000a28e(5): CALL 0x00001af0
0000a293(2): TEST EAX,EAX
0000a295(2): JNZ 0x0000a2a3
0000a297(3): MOV EDX,dword ptr [RSP]
0000a29a(3): CMP EDX,0x5f
0000a29d(6): JNZ 0x00009e22
0000a2a3(5): MOV EAX,0x1
0000a2a8(5): JMP 0x00009e37
0000a2ad(2): XOR EDX,EDX
0000a2af(2): JMP 0x0000a247
0000a2b1(4): MOV EDX,dword ptr [RSP + 0x24]
0000a2b5(3): SUB RAX,R12
0000a2b8(8): MOV qword ptr [RBX + 0x20],0x0
0000a2c0(3): MOV R12,RAX
0000a2c3(4): MOV qword ptr [RBX + 0x30],RAX
0000a2c7(3): CMP EDX,-0x1
0000a2ca(6): JNZ 0x00009e15
0000a2d0(5): JMP 0x0000a0ec
0000a2d8(4): MOV RDI,qword ptr [RBX + 0x8]
0000a2dc(3): MOV RDX,R12
0000a2df(5): MOV ESI,0xff
0000a2e4(5): CALL 0x00001a60
0000a2e9(4): MOV R12,qword ptr [RBX + 0x30]
0000a2ed(5): JMP 0x00009e44
0000a2f2(4): CMP RDX,0x6
0000a2f6(5): MOV EDI,0x6
0000a2fb(5): LEA R11,[RSP + 0x32]
0000a300(4): CMOVLE RDI,RDX
0000a304(3): SUB EDI,0x1
0000a307(2): TEST EDI,EDI
0000a309(3): MOVSXD RAX,EDI
0000a30c(2): JS 0x0000a322
0000a30e(4): MOVZX EDI,byte ptr [RSI + RAX*0x1]
0000a312(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
0000a316(4): MOV byte ptr [R11 + RAX*0x1],DIL
0000a31a(4): SUB RAX,0x1
0000a31e(2): TEST EAX,EAX
0000a320(2): JNS 0x0000a30e
0000a322(3): MOV RSI,R11
0000a325(5): JMP 0x0000a0aa
0000a32a(5): CALL 0x000019e0
0000a32f(1): NOP
0000a330(2): PUSH R15
0000a332(2): PUSH R14
0000a334(3): MOV R14,RDX
0000a337(2): PUSH R13
0000a339(2): PUSH R12
0000a33b(4): LEA RDX,[RSI + RSI*0x2]
0000a33f(1): PUSH RBP
0000a340(1): PUSH RBX
0000a341(4): PXOR XMM0,XMM0
0000a345(4): SUB RSP,0x48
0000a349(9): MOV RAX,qword ptr FS:[0x28]
0000a352(5): MOV qword ptr [RSP + 0x38],RAX
0000a357(2): XOR EAX,EAX
0000a359(4): MOV RAX,qword ptr [RDI + 0x38]
0000a35d(9): MOV qword ptr [RSP + 0x30],0x0
0000a366(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
0000a36b(5): MOV qword ptr [RSP + 0x10],RCX
0000a370(4): LEA RBP,[RAX + RDX*0x8]
0000a374(4): MOV R10,qword ptr [RBP + 0x8]
0000a378(3): TEST R10,R10
0000a37b(6): JLE 0x0000a562
0000a381(5): LEA RAX,[RSP + 0x20]
0000a386(3): MOV R12,RDI
0000a389(3): MOV R13,RSI
0000a38c(2): XOR EBX,EBX
0000a38e(5): MOV qword ptr [RSP + 0x18],RAX
0000a393(2): JMP 0x0000a3ed
0000a398(3): TEST RAX,RAX
0000a39b(6): JNZ 0x0000a478
0000a3a1(4): MOV RDI,qword ptr [R14 + 0x8]
0000a3a5(4): LEA RSI,[R14 + 0x10]
0000a3a9(3): MOV RDX,R8
0000a3ac(5): CALL 0x00007ae0
0000a3b1(3): TEST RAX,RAX
0000a3b4(6): JZ 0x0000a478
0000a3ba(5): MOV RDX,qword ptr [R12 + 0x38]
0000a3bf(5): MOV RSI,qword ptr [RSP + 0x10]
0000a3c4(5): MOV RDI,qword ptr [RSP + 0x18]
0000a3c9(3): ADD RDX,R9
0000a3cc(5): CALL 0x000085f0
0000a3d1(2): TEST EAX,EAX
0000a3d3(6): JNZ 0x0000a550
0000a3d9(4): MOV R10,qword ptr [RBP + 0x8]
0000a3dd(3): NOP dword ptr [RAX]
0000a3e0(4): ADD RBX,0x1
0000a3e4(3): CMP R10,RBX
0000a3e7(6): JLE 0x0000a4c0
0000a3ed(4): MOV RAX,qword ptr [RBP + 0x10]
0000a3f1(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000a3f5(3): CMP R13,RAX
0000a3f8(2): JZ 0x0000a3e0
0000a3fa(3): MOV RDX,RAX
0000a3fd(4): SHL RDX,0x4
0000a401(4): ADD RDX,qword ptr [R12]
0000a405(4): TEST byte ptr [RDX + 0x8],0x8
0000a409(2): JZ 0x0000a3e0
0000a40b(4): LEA R9,[RAX + RAX*0x2]
0000a40f(5): MOV RCX,qword ptr [R12 + 0x28]
0000a414(4): LEA R11,[RBP + 0x10]
0000a418(3): MOV RDI,R10
0000a41b(4): SHL R9,0x3
0000a41f(3): MOV RSI,R11
0000a422(3): ADD RCX,R9
0000a425(4): MOV R15,qword ptr [RCX + 0x10]
0000a429(5): MOV qword ptr [RSP + 0x8],RCX
0000a42e(3): MOV R8,qword ptr [R15]
0000a431(3): MOV RDX,R8
0000a434(4): MOV qword ptr [RSP],R8
0000a438(5): CALL 0x00007ae0
0000a43d(5): MOV RCX,qword ptr [RSP + 0x8]
0000a442(4): MOV R8,qword ptr [RSP]
0000a446(5): CMP qword ptr [RCX + 0x8],0x1
0000a44b(6): JG 0x0000a398
0000a451(3): TEST RAX,RAX
0000a454(2): JNZ 0x0000a3e0
0000a456(4): MOV RDI,qword ptr [R14 + 0x8]
0000a45a(4): LEA RSI,[R14 + 0x10]
0000a45e(3): MOV RDX,R8
0000a461(5): CALL 0x00007ae0
0000a466(3): TEST RAX,RAX
0000a469(6): JNZ 0x0000a3ba
0000a46f(5): JMP 0x0000a3e0
0000a478(4): MOV R15,qword ptr [R15 + 0x8]
0000a47c(3): TEST R15,R15
0000a47f(6): JLE 0x0000a3e0
0000a485(3): MOV RDX,R15
0000a488(3): MOV RSI,R11
0000a48b(3): MOV RDI,R10
0000a48e(5): CALL 0x00007ae0
0000a493(3): TEST RAX,RAX
0000a496(6): JNZ 0x0000a3e0
0000a49c(4): MOV RDI,qword ptr [R14 + 0x8]
0000a4a0(4): LEA RSI,[R14 + 0x10]
0000a4a4(5): CALL 0x00007ae0
0000a4a9(3): TEST RAX,RAX
0000a4ac(6): JZ 0x0000a3e0
0000a4b2(5): JMP 0x0000a3ba
0000a4c0(3): XOR R9D,R9D
0000a4c3(3): TEST R10,R10
0000a4c6(5): LEA R11,[RSP + 0x30]
0000a4cb(2): JLE 0x0000a51c
0000a4cd(3): NOP dword ptr [RAX]
0000a4d0(4): MOV RAX,qword ptr [RBP + 0x10]
0000a4d4(5): MOV RDI,qword ptr [RSP + 0x28]
0000a4d9(3): MOV RSI,R11
0000a4dc(4): MOV R10,qword ptr [RAX + R9*0x8]
0000a4e0(3): MOV RDX,R10
0000a4e3(5): CALL 0x00007ae0
0000a4e8(3): TEST RAX,RAX
0000a4eb(2): JNZ 0x0000a512
0000a4ed(4): LEA RBX,[R14 + 0x10]
0000a4f1(4): MOV RDI,qword ptr [R14 + 0x8]
0000a4f5(3): MOV RSI,RBX
0000a4f8(5): CALL 0x00007ae0
0000a4fd(4): SUB RAX,0x1
0000a501(3): MOV RDX,RAX
0000a504(2): JS 0x0000a512
0000a506(4): LEA RDI,[R14 + 0x8]
0000a50a(3): MOV RSI,RBX
0000a50d(5): CALL 0x00007c60
0000a512(4): ADD R9,0x1
0000a516(4): CMP qword ptr [RBP + 0x8],R9
0000a51a(2): JG 0x0000a4d0
0000a51c(5): MOV RDI,qword ptr [RSP + 0x30]
0000a521(5): CALL 0x000018d0
0000a526(2): XOR EAX,EAX
0000a528(5): MOV RSI,qword ptr [RSP + 0x38]
0000a52d(9): XOR RSI,qword ptr FS:[0x28]
0000a536(2): JNZ 0x0000a566
0000a538(4): ADD RSP,0x48
0000a53c(1): POP RBX
0000a53d(1): POP RBP
0000a53e(2): POP R12
0000a540(2): POP R13
0000a542(2): POP R14
0000a544(2): POP R15
0000a546(1): RET
0000a550(5): MOV RDI,qword ptr [RSP + 0x30]
0000a555(3): MOV dword ptr [RSP],EAX
0000a558(5): CALL 0x000018d0
0000a55d(3): MOV EAX,dword ptr [RSP]
0000a560(2): JMP 0x0000a528
0000a562(2): XOR EDI,EDI
0000a564(2): JMP 0x0000a521
0000a566(5): CALL 0x000019e0
0000a56b(5): NOP dword ptr [RAX + RAX*0x1]
0000a570(2): PUSH R15
0000a572(2): PUSH R14
0000a574(3): MOV R15,RDI
0000a577(2): PUSH R13
0000a579(2): PUSH R12
0000a57b(5): MOV EDI,0x3800
0000a580(1): PUSH RBP
0000a581(1): PUSH RBX
0000a582(7): SUB RSP,0x108
0000a589(9): MOV RAX,qword ptr FS:[0x28]
0000a592(8): MOV qword ptr [0xf8 + RSP],RAX
0000a59a(2): XOR EAX,EAX
0000a59c(5): MOV qword ptr [RSP + 0x8],RSI
0000a5a1(5): CALL 0x00001b00
0000a5a6(3): TEST RAX,RAX
0000a5a9(5): MOV qword ptr [RSP + 0x18],RAX
0000a5ae(6): JZ 0x0000a980
0000a5b4(5): MOV RAX,qword ptr [RSP + 0x18]
0000a5b9(4): PXOR XMM0,XMM0
0000a5bd(7): LEA RBX,[0x1800 + RAX]
0000a5c4(5): MOV RAX,qword ptr [RSP + 0x8]
0000a5c9(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000a5d1(5): MOV qword ptr [RSP + 0x40],RBX
0000a5d6(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000a5de(5): CMP qword ptr [RAX + 0x10],0x0
0000a5e3(8): MOV qword ptr [RAX + 0x58],0x0
0000a5eb(8): MOV qword ptr [RAX + 0x60],0x0
0000a5f3(6): JLE 0x0000b06a
0000a5f9(5): MOV qword ptr [RSP + 0x30],R15
0000a5fe(2): XOR EBP,EBP
0000a600(9): MOV qword ptr [RSP + 0x10],0x0
0000a609(3): MOV R15,RBX
0000a60c(5): MOV RBX,qword ptr [RSP + 0x10]
0000a611(8): LEA RAX,[RBX*0x8]
0000a619(5): MOV qword ptr [RSP + 0x20],RAX
0000a61e(5): MOV RAX,qword ptr [RSP + 0x8]
0000a623(4): MOV RAX,qword ptr [RAX + 0x18]
0000a627(4): MOV R13,qword ptr [RAX + RBX*0x8]
0000a62b(5): MOV RAX,qword ptr [RSP + 0x30]
0000a630(4): SHL R13,0x4
0000a634(3): ADD R13,qword ptr [RAX]
0000a637(5): MOVZX R14D,byte ptr [R13 + 0x8]
0000a63c(4): MOV EAX,dword ptr [R13 + 0x8]
0000a640(3): SHR EAX,0x8
0000a643(4): AND AX,0x3ff
0000a647(4): CMP R14D,0x1
0000a64b(6): JZ 0x0000a9b0
0000a651(4): CMP R14D,0x3
0000a655(6): JZ 0x0000ae20
0000a65b(4): CMP R14D,0x5
0000a65f(6): JZ 0x0000ace0
0000a665(4): CMP R14D,0x7
0000a669(6): JZ 0x0000ae49
0000a66f(5): MOV RBX,qword ptr [RSP + 0x8]
0000a674(6): ADD qword ptr [RSP + 0x10],0x1
0000a67a(5): MOV RAX,qword ptr [RSP + 0x10]
0000a67f(4): CMP RAX,qword ptr [RBX + 0x10]
0000a683(2): JL 0x0000a60c
0000a685(3): TEST RBP,RBP
0000a688(5): MOV R15,qword ptr [RSP + 0x30]
0000a68d(6): JLE 0x0000b0e9
0000a693(4): LEA RBX,[RBP + 0x1]
0000a697(9): MOV qword ptr [RSP + 0x78],0x0
0000a6a0(5): MOV qword ptr [RSP + 0x70],RBX
0000a6a5(4): SHL RBX,0x3
0000a6a9(3): MOV RDI,RBX
0000a6ac(5): CALL 0x00001b00
0000a6b1(3): TEST RAX,RAX
0000a6b4(3): MOV R12,RAX
0000a6b7(8): MOV qword ptr [0x80 + RSP],RAX
0000a6bf(6): JZ 0x0000aebf
0000a6c5(10): MOV RAX,0xaaaaaaaaaaaa855
0000a6cf(8): MOV dword ptr [RSP + 0x6c],0x0
0000a6d7(3): CMP RBP,RAX
0000a6da(6): JG 0x0000aebf
0000a6e0(5): LEA RAX,[RBP + RBP*0x2]
0000a6e5(4): SHL RAX,0x3
0000a6e9(3): MOV RDI,RAX
0000a6ec(5): MOV qword ptr [RSP + 0x58],RAX
0000a6f1(5): CALL 0x00001b00
0000a6f6(3): TEST RAX,RAX
0000a6f9(5): MOV qword ptr [RSP + 0x10],RAX
0000a6fe(6): JZ 0x0000aebf
0000a704(5): MOV RAX,qword ptr [RSP + 0x10]
0000a709(4): SUB RBX,0x8
0000a70d(5): MOV R12,qword ptr [RSP + 0x40]
0000a712(4): PXOR XMM0,XMM0
0000a716(5): LEA R14,[RSP + 0x70]
0000a71b(5): MOV qword ptr [RSP + 0x20],RBP
0000a720(5): MOV byte ptr [RSP + 0x4f],0x0
0000a725(3): MOV RBP,R15
0000a728(3): ADD RAX,RBX
0000a72b(5): MOV qword ptr [RSP + 0x50],R12
0000a730(3): ADD RBX,RAX
0000a733(5): MOV qword ptr [RSP + 0x30],RAX
0000a738(5): MOV RAX,qword ptr [RSP + 0x18]
0000a73d(8): MOVAPS xmmword ptr [0xd0 + RSP],XMM0
0000a745(5): MOV qword ptr [RSP + 0x38],RBX
0000a74a(2): XOR EBX,EBX
0000a74c(4): LEA R13,[RAX + 0x8]
0000a750(5): LEA RAX,[RSP + 0x6c]
0000a755(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0000a75d(5): MOV qword ptr [RSP + 0x28],RAX
0000a762(9): MOV qword ptr [RSP + 0x78],0x0
0000a76b(5): CMP qword ptr [R13],0x0
0000a770(2): JLE 0x0000a7b8
0000a772(3): XOR R15D,R15D
0000a775(3): NOP dword ptr [RAX]
0000a778(4): MOV RAX,qword ptr [R13 + 0x8]
0000a77c(4): MOV RDX,qword ptr [RAX + R15*0x8]
0000a780(4): MOV RAX,qword ptr [RBP + 0x18]
0000a784(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000a788(4): CMP RAX,-0x1
0000a78c(2): JZ 0x0000a7ae
0000a78e(4): LEA RDX,[RAX + RAX*0x2]
0000a792(4): MOV RAX,qword ptr [RBP + 0x30]
0000a796(3): MOV RDI,R14
0000a799(4): LEA RSI,[RAX + RDX*0x8]
0000a79d(5): CALL 0x00008000
0000a7a2(2): TEST EAX,EAX
0000a7a4(4): MOV dword ptr [RSP + 0x6c],EAX
0000a7a8(6): JNZ 0x0000aea8
0000a7ae(4): ADD R15,0x1
0000a7b2(4): CMP qword ptr [R13],R15
0000a7b6(2): JG 0x0000a778
0000a7b8(5): MOV RDI,qword ptr [RSP + 0x28]
0000a7bd(2): XOR ECX,ECX
0000a7bf(3): MOV RSI,RBP
0000a7c2(3): MOV RDX,R14
0000a7c5(5): CALL 0x00008e30
0000a7ca(5): MOV RSI,qword ptr [RSP + 0x10]
0000a7cf(3): TEST RAX,RAX
0000a7d2(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000a7d6(6): JZ 0x0000af88
0000a7dc(4): CMP byte ptr [RAX + 0x68],0x0
0000a7e0(6): JS 0x0000af00
0000a7e6(5): MOV RDI,qword ptr [RSP + 0x30]
0000a7eb(5): MOV RSI,qword ptr [RSP + 0x38]
0000a7f0(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000a7f4(5): MOV RAX,qword ptr [RSP + 0x10]
0000a7f9(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000a7fd(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000a801(8): LEA RDX,[0xd0 + RSP]
0000a809(2): XOR EAX,EAX
0000a80b(4): MOV RCX,qword ptr [RDX + RAX*0x1]
0000a80f(4): OR RCX,qword ptr [R12 + RAX*0x1]
0000a813(4): MOV qword ptr [RDX + RAX*0x1],RCX
0000a817(4): ADD RAX,0x8
0000a81b(4): CMP RAX,0x20
0000a81f(2): JNZ 0x0000a80b
0000a821(4): ADD RBX,0x1
0000a825(4): ADD R13,0x18
0000a829(4): ADD R12,0x20
0000a82d(5): CMP RBX,qword ptr [RSP + 0x20]
0000a832(6): JNZ 0x0000a762
0000a838(5): CMP byte ptr [RSP + 0x4f],0x0
0000a83d(3): MOV R15,RBP
0000a840(5): MOV RBP,qword ptr [RSP + 0x20]
0000a845(5): MOV qword ptr [RSP + 0x20],RDX
0000a84a(6): JNZ 0x0000af99
0000a850(5): MOV ESI,0x100
0000a855(5): MOV EDI,0x8
0000a85a(5): CALL 0x00001ab0
0000a85f(3): MOV R11,RAX
0000a862(5): MOV RAX,qword ptr [RSP + 0x8]
0000a867(3): TEST R11,R11
0000a86a(4): MOV qword ptr [RAX + 0x58],R11
0000a86e(6): JZ 0x0000aead
0000a874(5): MOV RBX,qword ptr [RSP + 0x40]
0000a879(5): MOV R12,qword ptr [RSP + 0x10]
0000a87e(3): XOR R9D,R9D
0000a881(5): MOV R13,qword ptr [RSP + 0x30]
0000a886(5): MOV RDX,qword ptr [RSP + 0x20]
0000a88b(4): ADD RBX,0x20
0000a88f(4): MOV RAX,qword ptr [RDX + R9*0x1]
0000a893(3): TEST RAX,RAX
0000a896(2): JZ 0x0000a8c4
0000a898(3): MOV RSI,R9
0000a89b(5): MOV ECX,0x1
0000a8a0(4): SHL RSI,0x6
0000a8a4(3): ADD RSI,R11
0000a8a7(9): NOP word ptr [RAX + RAX*0x1]
0000a8b0(2): TEST AL,0x1
0000a8b2(6): JNZ 0x0000b018
0000a8b8(3): ADD RCX,RCX
0000a8bb(4): ADD RSI,0x8
0000a8bf(3): SHR RAX,1
0000a8c2(2): JNZ 0x0000a8b0
0000a8c4(4): ADD R9,0x8
0000a8c8(4): CMP R9,0x20
0000a8cc(2): JNZ 0x0000a88f
0000a8ce(8): TEST byte ptr [0xd1 + RSP],0x4
0000a8d6(2): JZ 0x0000a912
0000a8d8(2): XOR EAX,EAX
0000a8da(5): MOV RDX,qword ptr [RSP + 0x50]
0000a8df(2): JMP 0x0000a8ee
0000a8e1(4): ADD RAX,0x1
0000a8e5(4): ADD RDX,0x20
0000a8e9(3): CMP RAX,RBP
0000a8ec(2): JZ 0x0000a912
0000a8ee(7): TEST qword ptr [RDX],0x400
0000a8f5(2): JZ 0x0000a8e1
0000a8f7(5): MOV RBX,qword ptr [RSP + 0x38]
0000a8fc(5): CMP byte ptr [RSP + 0x4f],0x0
0000a901(4): MOV RAX,qword ptr [RBX + RAX*0x8]
0000a905(4): MOV qword ptr [R11 + 0x50],RAX
0000a909(2): JZ 0x0000a912
0000a90b(7): MOV qword ptr [0x850 + R11],RAX
0000a912(5): MOV RDI,qword ptr [RSP + 0x10]
0000a917(5): CALL 0x000018d0
0000a91c(8): MOV RDI,qword ptr [0x80 + RSP]
0000a924(5): CALL 0x000018d0
0000a929(5): MOV RAX,qword ptr [RSP + 0x18]
0000a92e(5): MOV RBX,qword ptr [RSP + 0x58]
0000a933(4): LEA RBP,[RAX + 0x10]
0000a937(3): ADD RBX,RBP
0000a93a(4): MOV RDI,qword ptr [RBP]
0000a93e(4): ADD RBP,0x18
0000a942(5): CALL 0x000018d0
0000a947(3): CMP RBX,RBP
0000a94a(2): JNZ 0x0000a93a
0000a94c(5): MOV RDI,qword ptr [RSP + 0x18]
0000a951(5): CALL 0x000018d0
0000a956(5): MOV EAX,0x1
0000a95b(2): JMP 0x0000a982
0000a95d(3): TEST RBP,RBP
0000a960(8): MOV qword ptr [RBX + 0x8],0x0
0000a968(7): MOV qword ptr [RBX],0x0
0000a96f(6): JNZ 0x0000aca0
0000a975(5): MOV RDI,qword ptr [RSP + 0x18]
0000a97a(5): CALL 0x000018d0
0000a97f(1): NOP
0000a980(2): XOR EAX,EAX
0000a982(8): MOV RBX,qword ptr [0xf8 + RSP]
0000a98a(9): XOR RBX,qword ptr FS:[0x28]
0000a993(6): JNZ 0x0000b0e4
0000a999(7): ADD RSP,0x108
0000a9a0(1): POP RBX
0000a9a1(1): POP RBP
0000a9a2(2): POP R12
0000a9a4(2): POP R13
0000a9a6(2): POP R14
0000a9a8(2): POP R15
0000a9aa(1): RET
0000a9b0(5): MOVZX ECX,byte ptr [R13]
0000a9b5(8): LEA R12,[0x90 + RSP]
0000a9bd(5): MOV EDI,0x1
0000a9c2(3): MOV RDX,RCX
0000a9c5(3): AND ECX,0x3f
0000a9c8(4): SHR RDX,0x3
0000a9cc(3): SHL RDI,CL
0000a9cf(3): AND EDX,0x18
0000a9d2(4): OR qword ptr [R12 + RDX*0x1],RDI
0000a9d6(3): TEST AX,AX
0000a9d9(6): JZ 0x0000aaa0
0000a9df(2): TEST AL,0x20
0000a9e1(6): JNZ 0x0000ad50
0000a9e7(2): TEST AL,0x80
0000a9e9(6): JNZ 0x0000ac84
0000a9ef(2): TEST AL,0x4
0000a9f1(2): JZ 0x0000aa45
0000a9f3(4): CMP R14D,0x1
0000a9f7(6): JZ 0x0000add5
0000a9fd(5): MOV R8,qword ptr [RSP + 0x30]
0000aa02(8): CMP dword ptr [0xb4 + R8],0x1
0000aa0a(6): JLE 0x0000ae62
0000aa10(4): MOV RDI,qword ptr [R8 + 0x78]
0000aa14(2): XOR ESI,ESI
0000aa16(2): XOR ECX,ECX
0000aa18(4): MOV RDX,qword ptr [RDI + RCX*0x8]
0000aa1c(3): NOT RDX
0000aa1f(8): OR RDX,qword ptr [0xb8 + R8 + RCX*0x8]
0000aa27(4): AND RDX,qword ptr [R12 + RCX*0x8]
0000aa2b(4): MOV qword ptr [R12 + RCX*0x8],RDX
0000aa2f(4): ADD RCX,0x1
0000aa33(3): OR RSI,RDX
0000aa36(4): CMP RCX,0x4
0000aa3a(2): JNZ 0x0000aa18
0000aa3c(3): TEST RSI,RSI
0000aa3f(6): JZ 0x0000a66f
0000aa45(2): TEST AL,0x8
0000aa47(2): JZ 0x0000aaa0
0000aa49(4): CMP R14D,0x1
0000aa4d(6): JZ 0x0000ad81
0000aa53(5): MOV RDI,qword ptr [RSP + 0x30]
0000aa58(7): CMP dword ptr [0xb4 + RDI],0x1
0000aa5f(6): JLE 0x0000ad9e
0000aa65(4): MOV RSI,qword ptr [RDI + 0x78]
0000aa69(2): XOR ECX,ECX
0000aa6b(2): XOR EDX,EDX
0000aa6d(8): MOV RAX,qword ptr [0xb8 + RDI + RDX*0x8]
0000aa75(4): AND RAX,qword ptr [RSI + RDX*0x8]
0000aa79(3): NOT RAX
0000aa7c(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000aa80(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000aa84(4): ADD RDX,0x1
0000aa88(3): OR RCX,RAX
0000aa8b(4): CMP RDX,0x4
0000aa8f(2): JNZ 0x0000aa6d
0000aa91(3): TEST RCX,RCX
0000aa94(6): JZ 0x0000a66f
0000aa9a(6): NOP word ptr [RAX + RAX*0x1]
0000aaa0(2): XOR EBX,EBX
0000aaa2(3): TEST RBP,RBP
0000aaa5(6): JLE 0x0000ac0b
0000aaab(5): MOV qword ptr [RSP + 0x28],R13
0000aab0(3): MOV R13,R15
0000aab3(5): NOP dword ptr [RAX + RAX*0x1]
0000aab8(3): MOV R10,RBX
0000aabb(4): SHL R10,0x5
0000aabf(4): CMP R14D,0x1
0000aac3(2): JNZ 0x0000aae8
0000aac5(5): MOV RAX,qword ptr [RSP + 0x28]
0000aaca(3): MOVZX EDX,byte ptr [RAX]
0000aacd(3): MOV RAX,RDX
0000aad0(4): SHR RAX,0x3
0000aad4(3): AND EAX,0x18
0000aad7(3): ADD RAX,R13
0000aada(4): MOV RAX,qword ptr [RAX + R10*0x1]
0000aade(4): BT RAX,RDX
0000aae2(6): JNC 0x0000abfb
0000aae8(5): LEA RDI,[R13 + R10*0x1]
0000aaed(8): LEA RSI,[0xb0 + RSP]
0000aaf5(2): XOR ECX,ECX
0000aaf7(2): XOR EAX,EAX
0000aaf9(4): MOV RDX,qword ptr [R12 + RAX*0x8]
0000aafd(4): AND RDX,qword ptr [RDI + RAX*0x8]
0000ab01(4): MOV qword ptr [RSI + RAX*0x8],RDX
0000ab05(4): ADD RAX,0x1
0000ab09(3): OR RCX,RDX
0000ab0c(4): CMP RAX,0x4
0000ab10(2): JNZ 0x0000aaf9
0000ab12(3): TEST RCX,RCX
0000ab15(6): JZ 0x0000abfb
0000ab1b(8): LEA R11,[0xd0 + RSP]
0000ab23(3): XOR R15D,R15D
0000ab26(3): XOR R9D,R9D
0000ab29(2): XOR ECX,ECX
0000ab2b(4): MOV RSI,qword ptr [R12 + RCX*0x8]
0000ab2f(4): MOV RAX,qword ptr [RDI + RCX*0x8]
0000ab33(3): MOV RDX,RSI
0000ab36(3): NOT RDX
0000ab39(3): AND RDX,RAX
0000ab3c(3): NOT RAX
0000ab3f(3): AND RAX,RSI
0000ab42(4): MOV qword ptr [R11 + RCX*0x8],RDX
0000ab46(3): OR R9,RDX
0000ab49(4): MOV qword ptr [R12 + RCX*0x8],RAX
0000ab4d(4): ADD RCX,0x1
0000ab51(3): OR R15,RAX
0000ab54(4): CMP RCX,0x4
0000ab58(2): JNZ 0x0000ab2b
0000ab5a(5): MOV RDI,qword ptr [RSP + 0x18]
0000ab5f(4): LEA RAX,[RBX + RBX*0x2]
0000ab63(3): TEST R9,R9
0000ab66(4): LEA RDX,[RDI + RAX*0x8]
0000ab6a(2): JZ 0x0000abd4
0000ab6c(3): MOV RAX,RBP
0000ab6f(9): MOVDQA XMM0,xmmword ptr [0xd0 + RSP]
0000ab78(4): SHL RAX,0x5
0000ab7c(3): MOV RSI,RDX
0000ab7f(5): MOV qword ptr [RSP + 0x38],RDX
0000ab84(3): ADD RAX,R13
0000ab87(3): MOVUPS xmmword ptr [RAX],XMM0
0000ab8a(9): MOVDQA XMM0,xmmword ptr [0xe0 + RSP]
0000ab93(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000ab97(5): LEA RAX,[RBP + RBP*0x2]
0000ab9c(4): LEA RDI,[RDI + RAX*0x8]
0000aba0(9): MOVDQA XMM0,xmmword ptr [0xb0 + RSP]
0000aba9(6): MOVUPS xmmword ptr [R13 + R10*0x1],XMM0
0000abaf(9): MOVDQA XMM0,xmmword ptr [0xc0 + RSP]
0000abb8(6): MOVUPS xmmword ptr [R13 + R10*0x1 + 0x10],XMM0
0000abbe(5): CALL 0x00008c40
0000abc3(2): TEST EAX,EAX
0000abc5(6): JNZ 0x0000aca0
0000abcb(5): MOV RDX,qword ptr [RSP + 0x38]
0000abd0(4): ADD RBP,0x1
0000abd4(5): MOV RAX,qword ptr [RSP + 0x8]
0000abd9(5): MOV RSI,qword ptr [RSP + 0x20]
0000abde(3): MOV RDI,RDX
0000abe1(4): MOV RAX,qword ptr [RAX + 0x18]
0000abe5(4): MOV RSI,qword ptr [RAX + RSI*0x1]
0000abe9(5): CALL 0x000065a0
0000abee(2): TEST AL,AL
0000abf0(6): JZ 0x0000aca0
0000abf6(3): TEST R15,R15
0000abf9(2): JZ 0x0000ac08
0000abfb(4): ADD RBX,0x1
0000abff(3): CMP RBX,RBP
0000ac02(6): JL 0x0000aab8
0000ac08(3): MOV R15,R13
0000ac0b(3): CMP RBP,RBX
0000ac0e(6): JNZ 0x0000a66f
0000ac14(3): MOV RAX,RBP
0000ac17(9): MOVDQA XMM0,xmmword ptr [0x90 + RSP]
0000ac20(4): SHL RAX,0x5
0000ac24(5): MOV RBX,qword ptr [RSP + 0x20]
0000ac29(5): MOV EDI,0x8
0000ac2e(3): ADD RAX,R15
0000ac31(3): MOVUPS xmmword ptr [RAX],XMM0
0000ac34(9): MOVDQA XMM0,xmmword ptr [0xa0 + RSP]
0000ac3d(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000ac41(5): MOV RAX,qword ptr [RSP + 0x8]
0000ac46(4): MOV RAX,qword ptr [RAX + 0x18]
0000ac4a(4): MOV R13,qword ptr [RAX + RBX*0x1]
0000ac4e(5): MOV RBX,qword ptr [RSP + 0x18]
0000ac53(5): LEA RAX,[RBP + RBP*0x2]
0000ac58(4): LEA RBX,[RBX + RAX*0x8]
0000ac5c(7): MOV qword ptr [RBX],0x1
0000ac63(8): MOV qword ptr [RBX + 0x8],0x1
0000ac6b(5): CALL 0x00001b00
0000ac70(3): TEST RAX,RAX
0000ac73(4): MOV qword ptr [RBX + 0x10],RAX
0000ac77(6): JZ 0x0000a95d
0000ac7d(3): MOV qword ptr [RAX],R13
0000ac80(4): ADD RBP,0x1
0000ac84(4): PXOR XMM0,XMM0
0000ac88(5): MOVAPS xmmword ptr [R12],XMM0
0000ac8d(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000ac93(5): JMP 0x0000a66f
0000aca0(5): MOV RAX,qword ptr [RSP + 0x18]
0000aca5(4): LEA RBX,[RAX + 0x10]
0000aca9(5): LEA RAX,[RBP + RBP*0x2]
0000acae(4): LEA RBP,[RBX + RAX*0x8]
0000acb2(6): NOP word ptr [RAX + RAX*0x1]
0000acb8(3): MOV RDI,qword ptr [RBX]
0000acbb(4): ADD RBX,0x18
0000acbf(5): CALL 0x000018d0
0000acc4(3): CMP RBP,RBX
0000acc7(2): JNZ 0x0000acb8
0000acc9(5): MOV RDI,qword ptr [RSP + 0x18]
0000acce(5): CALL 0x000018d0
0000acd3(5): JMP 0x0000a980
0000ace0(5): MOV RSI,qword ptr [RSP + 0x30]
0000ace5(7): CMP dword ptr [0xb4 + RSI],0x1
0000acec(6): JLE 0x0000adf5
0000acf2(4): MOV RSI,qword ptr [RSI + 0x78]
0000acf6(8): LEA R12,[0x90 + RSP]
0000acfe(2): XOR EDX,EDX
0000ad00(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000ad04(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000ad08(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000ad0c(4): ADD RDX,0x8
0000ad10(4): CMP RDX,0x20
0000ad14(2): JNZ 0x0000ad00
0000ad16(5): MOV RBX,qword ptr [RSP + 0x30]
0000ad1b(7): MOV RDX,qword ptr [0xd8 + RBX]
0000ad22(3): TEST DL,0x40
0000ad25(2): JNZ 0x0000ad33
0000ad27(12): AND qword ptr [0x90 + RSP],0xfffffbff
0000ad33(6): AND EDX,0x80
0000ad39(6): JZ 0x0000a9d6
0000ad3f(9): AND qword ptr [0x90 + RSP],-0x2
0000ad48(5): JMP 0x0000a9d6
0000ad50(8): MOV RDX,qword ptr [0x90 + RSP]
0000ad58(4): PXOR XMM0,XMM0
0000ad5c(3): AND DH,0x4
0000ad5f(5): MOVAPS xmmword ptr [R12],XMM0
0000ad64(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000ad6a(6): JZ 0x0000a66f
0000ad70(12): MOV qword ptr [0x90 + RSP],0x400
0000ad7c(5): JMP 0x0000a9e7
0000ad81(5): TEST byte ptr [R13 + 0xa],0x40
0000ad86(6): JNZ 0x0000ac84
0000ad8c(5): MOV RDI,qword ptr [RSP + 0x30]
0000ad91(7): CMP dword ptr [0xb4 + RDI],0x1
0000ad98(6): JG 0x0000aa65
0000ad9e(5): MOV RSI,qword ptr [RSP + 0x30]
0000ada3(2): XOR ECX,ECX
0000ada5(2): XOR EDX,EDX
0000ada7(8): MOV RAX,qword ptr [0xb8 + RSI + RDX*0x8]
0000adaf(3): NOT RAX
0000adb2(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000adb6(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000adba(4): ADD RDX,0x1
0000adbe(3): OR RCX,RAX
0000adc1(4): CMP RDX,0x4
0000adc5(2): JNZ 0x0000ada7
0000adc7(3): TEST RCX,RCX
0000adca(6): JNZ 0x0000aaa0
0000add0(5): JMP 0x0000a66f
0000add5(5): TEST byte ptr [R13 + 0xa],0x40
0000adda(6): JZ 0x0000ac84
0000ade0(5): MOV R8,qword ptr [RSP + 0x30]
0000ade5(8): CMP dword ptr [0xb4 + R8],0x1
0000aded(6): JG 0x0000aa10
0000adf3(2): JMP 0x0000ae62
0000adf5(4): PCMPEQD XMM0,XMM0
0000adf9(8): LEA R12,[0x90 + RSP]
0000ae01(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000ae09(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000ae11(5): JMP 0x0000ad16
0000ae20(4): MOV RSI,qword ptr [R13]
0000ae24(8): LEA R12,[0x90 + RSP]
0000ae2c(2): XOR EDX,EDX
0000ae2e(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000ae32(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000ae36(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000ae3a(4): ADD RDX,0x8
0000ae3e(4): CMP RDX,0x20
0000ae42(2): JNZ 0x0000ae2e
0000ae44(5): JMP 0x0000a9d6
0000ae49(4): PCMPEQD XMM0,XMM0
0000ae4d(8): LEA R12,[0x90 + RSP]
0000ae55(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000ae5d(5): JMP 0x0000ad16
0000ae62(5): MOV RDI,qword ptr [RSP + 0x30]
0000ae67(2): XOR ESI,ESI
0000ae69(2): XOR EDX,EDX
0000ae6b(4): MOV RCX,qword ptr [R12 + RDX*0x8]
0000ae6f(8): AND RCX,qword ptr [0xb8 + RDI + RDX*0x8]
0000ae77(4): MOV qword ptr [R12 + RDX*0x8],RCX
0000ae7b(4): ADD RDX,0x1
0000ae7f(3): OR RSI,RCX
0000ae82(4): CMP RDX,0x4
0000ae86(2): JNZ 0x0000ae6b
0000ae88(3): TEST RSI,RSI
0000ae8b(6): JNZ 0x0000aa45
0000ae91(5): JMP 0x0000a66f
0000ae96(4): MOV EDX,dword ptr [RSP + 0x6c]
0000ae9a(2): TEST EDX,EDX
0000ae9c(6): JZ 0x0000af27
0000aea2(6): NOP word ptr [RAX + RAX*0x1]
0000aea8(5): MOV RBP,qword ptr [RSP + 0x20]
0000aead(5): MOV RDI,qword ptr [RSP + 0x10]
0000aeb2(5): CALL 0x000018d0
0000aeb7(8): MOV R12,qword ptr [0x80 + RSP]
0000aebf(3): MOV RDI,R12
0000aec2(5): CALL 0x000018d0
0000aec7(5): MOV RAX,qword ptr [RSP + 0x18]
0000aecc(4): LEA RBX,[RAX + 0x10]
0000aed0(5): LEA RAX,[RBP + RBP*0x2]
0000aed5(4): LEA RBP,[RBX + RAX*0x8]
0000aed9(7): NOP dword ptr [RAX]
0000aee0(3): MOV RDI,qword ptr [RBX]
0000aee3(4): ADD RBX,0x18
0000aee7(5): CALL 0x000018d0
0000aeec(3): CMP RBP,RBX
0000aeef(2): JNZ 0x0000aee0
0000aef1(5): MOV RDI,qword ptr [RSP + 0x18]
0000aef6(5): CALL 0x000018d0
0000aefb(5): JMP 0x0000a980
0000af00(5): MOV RDI,qword ptr [RSP + 0x28]
0000af05(5): MOV ECX,0x1
0000af0a(3): MOV RDX,R14
0000af0d(3): MOV RSI,RBP
0000af10(5): CALL 0x00008e30
0000af15(5): MOV RDI,qword ptr [RSP + 0x30]
0000af1a(3): TEST RAX,RAX
0000af1d(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000af21(6): JZ 0x0000ae96
0000af27(5): MOV RDI,qword ptr [RSP + 0x10]
0000af2c(4): CMP RAX,qword ptr [RDI + RBX*0x8]
0000af30(2): JZ 0x0000af4b
0000af32(5): MOVZX EDI,byte ptr [RSP + 0x4f]
0000af37(7): CMP dword ptr [0xb4 + RBP],0x2
0000af3e(5): MOV EAX,0x1
0000af43(3): CMOVGE EDI,EAX
0000af46(5): MOV byte ptr [RSP + 0x4f],DIL
0000af4b(5): MOV RDI,qword ptr [RSP + 0x28]
0000af50(3): MOV RSI,RBP
0000af53(5): MOV ECX,0x2
0000af58(3): MOV RDX,R14
0000af5b(5): CALL 0x00008e30
0000af60(5): MOV RSI,qword ptr [RSP + 0x38]
0000af65(3): TEST RAX,RAX
0000af68(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000af6c(6): JNZ 0x0000a801
0000af72(4): MOV EAX,dword ptr [RSP + 0x6c]
0000af76(2): TEST EAX,EAX
0000af78(6): JZ 0x0000a801
0000af7e(5): JMP 0x0000aea8
0000af88(4): MOV ECX,dword ptr [RSP + 0x6c]
0000af8c(2): TEST ECX,ECX
0000af8e(6): JZ 0x0000a7dc
0000af94(5): JMP 0x0000aea8
0000af99(5): MOV ESI,0x200
0000af9e(5): MOV EDI,0x8
0000afa3(5): CALL 0x00001ab0
0000afa8(3): MOV R11,RAX
0000afab(5): MOV RAX,qword ptr [RSP + 0x8]
0000afb0(3): TEST R11,R11
0000afb3(4): MOV qword ptr [RAX + 0x60],R11
0000afb7(6): JZ 0x0000aead
0000afbd(5): MOV R13,qword ptr [RSP + 0x40]
0000afc2(5): MOV R10,qword ptr [RSP + 0x10]
0000afc7(3): MOV R12,R11
0000afca(5): MOV R14,qword ptr [RSP + 0x30]
0000afcf(5): MOV RDX,qword ptr [RSP + 0x20]
0000afd4(2): XOR EBX,EBX
0000afd6(4): ADD R13,0x20
0000afda(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000afde(3): TEST RAX,RAX
0000afe1(2): JZ 0x0000afff
0000afe3(3): MOV RSI,R12
0000afe6(5): MOV ECX,0x1
0000afeb(2): TEST AL,0x1
0000afed(6): JNZ 0x0000b09c
0000aff3(3): ADD RCX,RCX
0000aff6(4): ADD RSI,0x8
0000affa(3): SHR RAX,1
0000affd(2): JNZ 0x0000afeb
0000afff(4): ADD RBX,0x8
0000b003(7): ADD R12,0x200
0000b00a(4): CMP RBX,0x20
0000b00e(2): JNZ 0x0000afda
0000b010(5): JMP 0x0000a8ce
0000b018(5): MOV RDI,qword ptr [RSP + 0x18]
0000b01d(8): TEST qword ptr [0x1800 + RDI + R9*0x1],RCX
0000b025(2): JNZ 0x0000b097
0000b027(4): LEA RDI,[RBX + R9*0x1]
0000b02b(3): XOR R8D,R8D
0000b02e(2): NOP
0000b030(3): MOV R10,qword ptr [RDI]
0000b033(4): ADD R8,0x1
0000b037(4): ADD RDI,0x20
0000b03b(3): AND R10,RCX
0000b03e(3): TEST R10,R10
0000b041(2): JZ 0x0000b030
0000b043(4): SHL R8,0x3
0000b047(8): TEST qword ptr [0xb8 + R15 + R9*0x1],RCX
0000b04f(2): JZ 0x0000b05e
0000b051(5): MOV RDI,qword ptr [R13 + R8*0x1]
0000b056(3): MOV qword ptr [RSI],RDI
0000b059(5): JMP 0x0000a8b8
0000b05e(4): MOV RDI,qword ptr [R12 + R8*0x1]
0000b062(3): MOV qword ptr [RSI],RDI
0000b065(5): JMP 0x0000a8b8
0000b06a(5): MOV RDI,qword ptr [RSP + 0x18]
0000b06f(5): CALL 0x000018d0
0000b074(5): MOV ESI,0x100
0000b079(5): MOV EDI,0x8
0000b07e(5): CALL 0x00001ab0
0000b083(5): MOV RBX,qword ptr [RSP + 0x8]
0000b088(3): TEST RAX,RAX
0000b08b(4): MOV qword ptr [RBX + 0x58],RAX
0000b08f(3): SETNZ AL
0000b092(5): JMP 0x0000a982
0000b097(3): XOR R8D,R8D
0000b09a(2): JMP 0x0000b047
0000b09c(5): MOV RDI,qword ptr [RSP + 0x18]
0000b0a1(8): TEST qword ptr [0x1800 + RDI + RBX*0x1],RCX
0000b0a9(2): JNZ 0x0000b0e0
0000b0ab(5): LEA R9,[R13 + RBX*0x1]
0000b0b0(3): XOR R8D,R8D
0000b0b3(3): MOV R15,qword ptr [R9]
0000b0b6(4): ADD R8,0x1
0000b0ba(4): ADD R9,0x20
0000b0be(3): MOV RDI,R8
0000b0c1(3): AND R15,RCX
0000b0c4(3): TEST R15,R15
0000b0c7(2): JZ 0x0000b0b3
0000b0c9(4): MOV R8,qword ptr [R10 + RDI*0x8]
0000b0cd(3): MOV qword ptr [RSI],R8
0000b0d0(4): MOV RDI,qword ptr [R14 + RDI*0x8]
0000b0d4(7): MOV qword ptr [0x800 + RSI],RDI
0000b0db(5): JMP 0x0000aff3
0000b0e0(2): XOR EDI,EDI
0000b0e2(2): JMP 0x0000b0c9
0000b0e4(5): CALL 0x000019e0
0000b0e9(5): MOV RDI,qword ptr [RSP + 0x18]
0000b0ee(5): CALL 0x000018d0
0000b0f3(3): TEST RBP,RBP
0000b0f6(6): JNZ 0x0000a980
0000b0fc(5): JMP 0x0000b074
0000b110(4): CMP byte ptr [RSI + 0x30],0x10
0000b114(2): JZ 0x0000b178
0000b116(1): PUSH RBP
0000b117(1): PUSH RBX
0000b118(3): MOV RBX,RSI
0000b11b(3): MOV RBP,RDI
0000b11e(4): SUB RSP,0x8
0000b122(4): MOV qword ptr [RBX + 0x18],RSI
0000b126(4): MOV RDX,qword ptr [RBX + 0x30]
0000b12a(4): MOV RSI,qword ptr [RSI + 0x28]
0000b12e(5): CALL 0x00007280
0000b133(4): CMP RAX,-0x1
0000b137(3): MOV RDX,RAX
0000b13a(4): MOV qword ptr [RBX + 0x38],RAX
0000b13e(2): JZ 0x0000b190
0000b140(2): XOR EAX,EAX
0000b142(4): CMP byte ptr [RBX + 0x30],0xc
0000b146(2): JNZ 0x0000b16c
0000b148(3): MOV ECX,dword ptr [RBX + 0x28]
0000b14b(4): SHL RDX,0x4
0000b14f(4): ADD RDX,qword ptr [RBP]
0000b153(6): AND ECX,0x3ff
0000b159(3): SHL ECX,0x8
0000b15c(2): MOV ESI,ECX
0000b15e(3): MOV ECX,dword ptr [RDX + 0x8]
0000b161(6): AND ECX,0xfffc00ff
0000b167(2): OR ECX,ESI
0000b169(3): MOV dword ptr [RDX + 0x8],ECX
0000b16c(4): ADD RSP,0x8
0000b170(1): POP RBX
0000b171(1): POP RBP
0000b172(1): RET
0000b178(4): MOV RAX,qword ptr [RSI + 0x8]
0000b17c(4): MOV RDX,qword ptr [RAX + 0x18]
0000b180(4): MOV RAX,qword ptr [RAX + 0x38]
0000b184(4): MOV qword ptr [RSI + 0x18],RDX
0000b188(4): MOV qword ptr [RSI + 0x38],RAX
0000b18c(2): XOR EAX,EAX
0000b18e(1): RET
0000b190(5): MOV EAX,0xc
0000b195(2): JMP 0x0000b16c
0000b1a0(2): PUSH R12
0000b1a2(1): PUSH RBP
0000b1a3(3): MOV RBP,RDI
0000b1a6(1): PUSH RBX
0000b1a7(4): CMP qword ptr [RDI],0x0
0000b1ab(2): JLE 0x0000b1e2
0000b1ad(2): XOR EBX,EBX
0000b1af(3): XOR R12D,R12D
0000b1b2(6): NOP word ptr [RAX + RAX*0x1]
0000b1b8(4): MOV RAX,qword ptr [RBP + 0x10]
0000b1bc(4): ADD R12,0x1
0000b1c0(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x28]
0000b1c5(5): CALL 0x000018d0
0000b1ca(4): MOV RAX,qword ptr [RBP + 0x10]
0000b1ce(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000b1d3(4): ADD RBX,0x30
0000b1d7(5): CALL 0x000018d0
0000b1dc(4): CMP R12,qword ptr [RBP]
0000b1e0(2): JL 0x0000b1b8
0000b1e2(1): POP RBX
0000b1e3(4): MOV RDI,qword ptr [RBP + 0x10]
0000b1e7(1): POP RBP
0000b1e8(2): POP R12
0000b1ea(5): JMP 0x000018d0
0000b1f0(2): PUSH R12
0000b1f2(1): PUSH RBP
0000b1f3(1): PUSH RBX
0000b1f4(3): MOV RAX,qword ptr [RDI]
0000b1f7(4): SUB RAX,0x1
0000b1fb(3): TEST RAX,RAX
0000b1fe(3): MOV qword ptr [RDI],RAX
0000b201(2): JS 0x0000b265
0000b203(4): LEA RBX,[RAX + RAX*0x2]
0000b207(3): MOV RAX,qword ptr [RSI]
0000b20a(3): MOV R12,RSI
0000b20d(4): SHL RCX,0x4
0000b211(3): MOV RBP,R9
0000b214(3): MOV RDI,R8
0000b217(4): SHL RBX,0x4
0000b21b(3): ADD RAX,RBX
0000b21e(3): MOV RSI,qword ptr [RAX]
0000b221(3): MOV qword ptr [RDX],RSI
0000b224(4): MOV RSI,qword ptr [RAX + 0x10]
0000b228(3): MOV RDX,RCX
0000b22b(5): CALL 0x00001ad0
0000b230(4): MOV RDI,qword ptr [RBP + 0x10]
0000b234(5): CALL 0x000018d0
0000b239(4): MOV RAX,qword ptr [R12]
0000b23d(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000b242(5): CALL 0x000018d0
0000b247(4): ADD RBX,qword ptr [R12]
0000b24b(5): MOVDQU XMM0,xmmword ptr [RBX + 0x18]
0000b250(4): MOVAPS xmmword ptr [RBP],XMM0
0000b254(4): MOV RAX,qword ptr [RBX + 0x28]
0000b258(4): MOV qword ptr [RBP + 0x10],RAX
0000b25c(4): MOV RAX,qword ptr [RBX + 0x8]
0000b260(1): POP RBX
0000b261(1): POP RBP
0000b262(2): POP R12
0000b264(1): RET
0000b265(7): LEA RCX,[0x15e00]
0000b26c(7): LEA RSI,[0x15830]
0000b273(7): LEA RDI,[0x15898]
0000b27a(5): MOV EDX,0x555
0000b27f(5): CALL 0x00001a50
0000b284(2): NOP
0000b286(10): NOP word ptr CS:[RAX + RAX*0x1]
0000b290(1): PUSH RBP
0000b291(1): PUSH RBX
0000b292(3): MOV RBP,RDI
0000b295(3): MOV RDI,RSI
0000b298(3): MOV RBX,RSI
0000b29b(4): SUB RSP,0x8
0000b29f(5): CALL 0x000019d0
0000b2a4(4): CMP RAX,0x1
0000b2a8(2): JNZ 0x0000b2d0
0000b2aa(3): MOVZX ECX,byte ptr [RBX]
0000b2ad(3): MOV RDX,RCX
0000b2b0(3): AND ECX,0x3f
0000b2b3(4): SHR RDX,0x3
0000b2b7(3): SHL RAX,CL
0000b2ba(3): AND EDX,0x18
0000b2bd(5): OR qword ptr [RBP + RDX*0x1],RAX
0000b2c2(4): ADD RSP,0x8
0000b2c6(2): XOR EAX,EAX
0000b2c8(1): POP RBX
0000b2c9(1): POP RBP
0000b2ca(1): RET
0000b2d0(4): ADD RSP,0x8
0000b2d4(5): MOV EAX,0x3
0000b2d9(1): POP RBX
0000b2da(1): POP RBP
0000b2db(1): RET
0000b2e0(2): PUSH R14
0000b2e2(2): PUSH R13
0000b2e4(3): MOV R13,RCX
0000b2e7(2): PUSH R12
0000b2e9(1): PUSH RBP
0000b2ea(3): MOV R12,R9
0000b2ed(1): PUSH RBX
0000b2ee(3): MOV RBP,RDI
0000b2f1(3): MOV RBX,RSI
0000b2f4(4): SUB RSP,0x10
0000b2f8(9): TEST qword ptr [RSP + 0x40],0x400000
0000b301(2): JZ 0x0000b328
0000b303(7): LEA RDI,[0x158a7]
0000b30a(5): MOV ECX,0x6
0000b30f(3): MOV RSI,R9
0000b312(2): CMPSB.REPE RDI,RSI
0000b314(3): SETA AL
0000b317(2): SBB AL,0x0
0000b319(2): TEST AL,AL
0000b31b(6): JNZ 0x0000b416
0000b321(7): LEA R12,[0x158a1]
0000b328(4): MOV RCX,qword ptr [R13]
0000b32c(3): CMP qword ptr [R8],RCX
0000b32f(3): MOV RAX,qword ptr [RDX]
0000b332(6): JZ 0x0000b449
0000b338(4): LEA RDX,[RCX + 0x1]
0000b33c(3): MOV RDI,R12
0000b33f(4): MOV qword ptr [R13],RDX
0000b343(4): LEA R13,[RAX + RCX*0x8]
0000b347(5): CALL 0x00001a90
0000b34c(7): LEA RDI,[0x158b3]
0000b353(4): MOV qword ptr [R13],RAX
0000b357(5): MOV ECX,0x6
0000b35c(3): MOV RSI,R12
0000b35f(2): CMPSB.REPE RDI,RSI
0000b361(3): SETA AL
0000b364(2): SBB AL,0x0
0000b366(2): TEST AL,AL
0000b368(2): JZ 0x0000b3d8
0000b36a(7): LEA RDI,[0x158b9]
0000b371(5): MOV ECX,0x6
0000b376(3): MOV RSI,R12
0000b379(2): CMPSB.REPE RDI,RSI
0000b37b(3): SETA AL
0000b37e(2): SBB AL,0x0
0000b380(2): TEST AL,AL
0000b382(6): JNZ 0x0000b488
0000b388(5): CALL 0x00001c70
0000b38d(2): XOR ECX,ECX
0000b38f(3): TEST RBP,RBP
0000b392(3): MOV RDX,qword ptr [RAX]
0000b395(5): MOV EDI,0x1
0000b39a(6): JNZ 0x0000b65a
0000b3a0(4): TEST byte ptr [RDX + RCX*0x2],0x2
0000b3a4(2): JZ 0x0000b3b7
0000b3a6(3): MOV RAX,RCX
0000b3a9(3): MOV RSI,RDI
0000b3ac(4): SAR RAX,0x6
0000b3b0(3): SHL RSI,CL
0000b3b3(4): OR qword ptr [RBX + RAX*0x8],RSI
0000b3b7(4): ADD RCX,0x1
0000b3bb(7): CMP RCX,0x100
0000b3c2(2): JNZ 0x0000b3a0
0000b3c4(2): XOR EAX,EAX
0000b3c6(4): ADD RSP,0x10
0000b3ca(1): POP RBX
0000b3cb(1): POP RBP
0000b3cc(2): POP R12
0000b3ce(2): POP R13
0000b3d0(2): POP R14
0000b3d2(1): RET
0000b3d8(5): CALL 0x00001c70
0000b3dd(2): XOR ECX,ECX
0000b3df(3): TEST RBP,RBP
0000b3e2(3): MOV RDX,qword ptr [RAX]
0000b3e5(5): MOV EDI,0x1
0000b3ea(6): JNZ 0x0000b5da
0000b3f0(4): TEST byte ptr [RDX + RCX*0x2],0x8
0000b3f4(2): JZ 0x0000b407
0000b3f6(3): MOV RAX,RCX
0000b3f9(3): MOV RSI,RDI
0000b3fc(4): SAR RAX,0x6
0000b400(3): SHL RSI,CL
0000b403(4): OR qword ptr [RBX + RAX*0x8],RSI
0000b407(4): ADD RCX,0x1
0000b40b(7): CMP RCX,0x100
0000b412(2): JNZ 0x0000b3f0
0000b414(2): JMP 0x0000b3c4
0000b416(7): LEA RDI,[0x158ad]
0000b41d(5): MOV ECX,0x6
0000b422(3): MOV RSI,R9
0000b425(2): CMPSB.REPE RDI,RSI
0000b427(4): MOV RCX,qword ptr [R13]
0000b42b(3): SETA AL
0000b42e(2): SBB AL,0x0
0000b430(2): TEST AL,AL
0000b432(7): LEA RAX,[0x158a1]
0000b439(4): CMOVZ R12,RAX
0000b43d(3): CMP qword ptr [R8],RCX
0000b440(3): MOV RAX,qword ptr [RDX]
0000b443(6): JNZ 0x0000b338
0000b449(5): LEA R14,[RCX + RCX*0x1 + 0x1]
0000b44e(3): MOV RDI,RAX
0000b451(5): MOV qword ptr [RSP + 0x8],R8
0000b456(4): MOV qword ptr [RSP],RDX
0000b45a(8): LEA RSI,[R14*0x8]
0000b462(5): CALL 0x00001b60
0000b467(3): TEST RAX,RAX
0000b46a(6): JZ 0x0000b788
0000b470(4): MOV RDX,qword ptr [RSP]
0000b474(5): MOV R8,qword ptr [RSP + 0x8]
0000b479(3): MOV qword ptr [RDX],RAX
0000b47c(3): MOV qword ptr [R8],R14
0000b47f(4): MOV RCX,qword ptr [R13]
0000b483(5): JMP 0x0000b338
0000b488(7): LEA RDI,[0x158ad]
0000b48f(5): MOV ECX,0x6
0000b494(3): MOV RSI,R12
0000b497(2): CMPSB.REPE RDI,RSI
0000b499(3): SETA AL
0000b49c(2): SBB AL,0x0
0000b49e(2): TEST AL,AL
0000b4a0(2): JZ 0x0000b50a
0000b4a2(7): LEA RDI,[0x158bf]
0000b4a9(5): MOV ECX,0x6
0000b4ae(3): MOV RSI,R12
0000b4b1(2): CMPSB.REPE RDI,RSI
0000b4b3(3): SETA AL
0000b4b6(2): SBB AL,0x0
0000b4b8(2): TEST AL,AL
0000b4ba(6): JNZ 0x0000b552
0000b4c0(5): CALL 0x00001c70
0000b4c5(2): XOR ECX,ECX
0000b4c7(3): TEST RBP,RBP
0000b4ca(3): MOV RDX,qword ptr [RAX]
0000b4cd(5): MOV EDI,0x1
0000b4d2(6): JNZ 0x0000b82e
0000b4d8(8): NOP dword ptr [RAX + RAX*0x1]
0000b4e0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x20
0000b4e5(2): JZ 0x0000b4f8
0000b4e7(3): MOV RAX,RCX
0000b4ea(3): MOV RSI,RDI
0000b4ed(4): SAR RAX,0x6
0000b4f1(3): SHL RSI,CL
0000b4f4(4): OR qword ptr [RBX + RAX*0x8],RSI
0000b4f8(4): ADD RCX,0x1
0000b4fc(7): CMP RCX,0x100
0000b503(2): JNZ 0x0000b4e0
0000b505(5): JMP 0x0000b3c4
0000b50a(5): CALL 0x00001c70
0000b50f(2): XOR ECX,ECX
0000b511(3): TEST RBP,RBP
0000b514(3): MOV RDX,qword ptr [RAX]
0000b517(5): MOV EDI,0x1
0000b51c(6): JNZ 0x0000b6f2
0000b522(6): NOP word ptr [RAX + RAX*0x1]
0000b528(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x2
0000b52d(2): JZ 0x0000b540
0000b52f(3): MOV RAX,RCX
0000b532(3): MOV RSI,RDI
0000b535(4): SAR RAX,0x6
0000b539(3): SHL RSI,CL
0000b53c(4): OR qword ptr [RBX + RAX*0x8],RSI
0000b540(4): ADD RCX,0x1
0000b544(7): CMP RCX,0x100
0000b54b(2): JNZ 0x0000b528
0000b54d(5): JMP 0x0000b3c4
0000b552(7): LEA RDI,[0x158a1]
0000b559(5): MOV ECX,0x6
0000b55e(3): MOV RSI,R12
0000b561(2): CMPSB.REPE RDI,RSI
0000b563(3): SETA AL
0000b566(2): SBB AL,0x0
0000b568(2): TEST AL,AL
0000b56a(6): JZ 0x0000b613
0000b570(7): LEA RDI,[0x158de]
0000b577(5): MOV ECX,0x6
0000b57c(3): MOV RSI,R12
0000b57f(2): CMPSB.REPE RDI,RSI
0000b581(3): SETA AL
0000b584(2): SBB AL,0x0
0000b586(2): TEST AL,AL
0000b588(6): JNZ 0x0000b693
0000b58e(5): CALL 0x00001c70
0000b593(2): XOR ECX,ECX
0000b595(3): TEST RBP,RBP
0000b598(3): MOV RDX,qword ptr [RAX]
0000b59b(5): MOV EDI,0x1
0000b5a0(6): JNZ 0x0000ba4a
0000b5a6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000b5b0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x8
0000b5b5(2): JZ 0x0000b5c8
0000b5b7(3): MOV RAX,RCX
0000b5ba(3): MOV RSI,RDI
0000b5bd(4): SAR RAX,0x6
0000b5c1(3): SHL RSI,CL
0000b5c4(4): OR qword ptr [RBX + RAX*0x8],RSI
0000b5c8(4): ADD RCX,0x1
0000b5cc(7): CMP RCX,0x100
0000b5d3(2): JNZ 0x0000b5b0
0000b5d5(5): JMP 0x0000b3c4
0000b5da(2): XOR EAX,EAX
0000b5dc(4): NOP dword ptr [RAX]
0000b5e0(4): TEST byte ptr [RDX + RAX*0x2],0x8
0000b5e4(2): JZ 0x0000b602
0000b5e6(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b5eb(3): MOV R10,RDI
0000b5ee(3): MOV RSI,RCX
0000b5f1(3): AND ECX,0x3f
0000b5f4(4): SHR RSI,0x3
0000b5f8(3): SHL R10,CL
0000b5fb(3): AND ESI,0x18
0000b5fe(4): OR qword ptr [RBX + RSI*0x1],R10
0000b602(4): ADD RAX,0x1
0000b606(6): CMP RAX,0x100
0000b60c(2): JNZ 0x0000b5e0
0000b60e(5): JMP 0x0000b3c4
0000b613(5): CALL 0x00001c70
0000b618(2): XOR ECX,ECX
0000b61a(3): TEST RBP,RBP
0000b61d(3): MOV RDX,qword ptr [RAX]
0000b620(5): MOV EDI,0x1
0000b625(6): JNZ 0x0000b7f8
0000b62b(5): NOP dword ptr [RAX + RAX*0x1]
0000b630(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x4
0000b635(2): JZ 0x0000b648
0000b637(3): MOV RAX,RCX
0000b63a(3): MOV RSI,RDI
0000b63d(4): SAR RAX,0x6
0000b641(3): SHL RSI,CL
0000b644(4): OR qword ptr [RBX + RAX*0x8],RSI
0000b648(4): ADD RCX,0x1
0000b64c(7): CMP RCX,0x100
0000b653(2): JNZ 0x0000b630
0000b655(5): JMP 0x0000b3c4
0000b65a(2): XOR EAX,EAX
0000b65c(4): NOP dword ptr [RAX]
0000b660(4): TEST byte ptr [RDX + RAX*0x2],0x2
0000b664(2): JZ 0x0000b682
0000b666(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b66b(3): MOV R11,RDI
0000b66e(3): MOV RSI,RCX
0000b671(3): AND ECX,0x3f
0000b674(4): SHR RSI,0x3
0000b678(3): SHL R11,CL
0000b67b(3): AND ESI,0x18
0000b67e(4): OR qword ptr [RBX + RSI*0x1],R11
0000b682(4): ADD RAX,0x1
0000b686(6): CMP RAX,0x100
0000b68c(2): JNZ 0x0000b660
0000b68e(5): JMP 0x0000b3c4
0000b693(7): LEA RDI,[0x158c5]
0000b69a(5): MOV ECX,0x6
0000b69f(3): MOV RSI,R12
0000b6a2(2): CMPSB.REPE RDI,RSI
0000b6a4(3): SETA AL
0000b6a7(2): SBB AL,0x0
0000b6a9(2): TEST AL,AL
0000b6ab(2): JNZ 0x0000b72c
0000b6ad(5): CALL 0x00001c70
0000b6b2(2): XOR ECX,ECX
0000b6b4(3): TEST RBP,RBP
0000b6b7(3): MOV RDX,qword ptr [RAX]
0000b6ba(5): MOV EDI,0x1
0000b6bf(6): JNZ 0x0000bab7
0000b6c5(3): NOP dword ptr [RAX]
0000b6c8(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x40
0000b6cd(2): JZ 0x0000b6e0
0000b6cf(3): MOV RAX,RCX
0000b6d2(3): MOV RSI,RDI
0000b6d5(4): SAR RAX,0x6
0000b6d9(3): SHL RSI,CL
0000b6dc(4): OR qword ptr [RBX + RAX*0x8],RSI
0000b6e0(4): ADD RCX,0x1
0000b6e4(7): CMP RCX,0x100
0000b6eb(2): JNZ 0x0000b6c8
0000b6ed(5): JMP 0x0000b3c4
0000b6f2(2): XOR EAX,EAX
0000b6f4(4): NOP dword ptr [RAX]
0000b6f8(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x2
0000b6fd(2): JZ 0x0000b71b
0000b6ff(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b704(3): MOV R14,RDI
0000b707(3): MOV RSI,RCX
0000b70a(3): AND ECX,0x3f
0000b70d(4): SHR RSI,0x3
0000b711(3): SHL R14,CL
0000b714(3): AND ESI,0x18
0000b717(4): OR qword ptr [RBX + RSI*0x1],R14
0000b71b(4): ADD RAX,0x1
0000b71f(6): CMP RAX,0x100
0000b725(2): JNZ 0x0000b6f8
0000b727(5): JMP 0x0000b3c4
0000b72c(7): LEA RDI,[0x158a7]
0000b733(5): MOV ECX,0x6
0000b738(3): MOV RSI,R12
0000b73b(2): CMPSB.REPE RDI,RSI
0000b73d(3): SETA AL
0000b740(2): SBB AL,0x0
0000b742(2): TEST AL,AL
0000b744(2): JNZ 0x0000b792
0000b746(5): CALL 0x00001c70
0000b74b(2): XOR ECX,ECX
0000b74d(3): TEST RBP,RBP
0000b750(3): MOV RAX,qword ptr [RAX]
0000b753(5): MOV EDI,0x1
0000b758(6): JNZ 0x0000ba80
0000b75e(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x1
0000b763(2): JZ 0x0000b776
0000b765(3): MOV RDX,RCX
0000b768(3): MOV RSI,RDI
0000b76b(4): SAR RDX,0x6
0000b76f(3): SHL RSI,CL
0000b772(4): OR qword ptr [RBX + RDX*0x8],RSI
0000b776(4): ADD RCX,0x1
0000b77a(7): CMP RCX,0x100
0000b781(2): JNZ 0x0000b75e
0000b783(5): JMP 0x0000b3c4
0000b788(5): MOV EAX,0xc
0000b78d(5): JMP 0x0000b3c6
0000b792(7): LEA RDI,[0x158cb]
0000b799(5): MOV ECX,0x6
0000b79e(3): MOV RSI,R12
0000b7a1(2): CMPSB.REPE RDI,RSI
0000b7a3(3): SETA AL
0000b7a6(2): SBB AL,0x0
0000b7a8(2): TEST AL,AL
0000b7aa(6): JNZ 0x0000b89e
0000b7b0(5): CALL 0x00001c70
0000b7b5(2): XOR ECX,ECX
0000b7b7(3): TEST RBP,RBP
0000b7ba(3): MOV RDX,qword ptr [RAX]
0000b7bd(5): MOV ESI,0x1
0000b7c2(6): JNZ 0x0000b864
0000b7c8(4): TEST byte ptr [RDX + RCX*0x2],0x1
0000b7cc(2): JZ 0x0000b7df
0000b7ce(3): MOV RAX,RCX
0000b7d1(3): MOV RDI,RSI
0000b7d4(4): SAR RAX,0x6
0000b7d8(3): SHL RDI,CL
0000b7db(4): OR qword ptr [RBX + RAX*0x8],RDI
0000b7df(4): ADD RCX,0x1
0000b7e3(7): CMP RCX,0x100
0000b7ea(2): JNZ 0x0000b7c8
0000b7ec(5): JMP 0x0000b3c4
0000b7f8(2): XOR EAX,EAX
0000b7fa(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x4
0000b7ff(2): JZ 0x0000b81d
0000b801(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b806(3): MOV R9,RDI
0000b809(3): MOV RSI,RCX
0000b80c(3): AND ECX,0x3f
0000b80f(4): SHR RSI,0x3
0000b813(3): SHL R9,CL
0000b816(3): AND ESI,0x18
0000b819(4): OR qword ptr [RBX + RSI*0x1],R9
0000b81d(4): ADD RAX,0x1
0000b821(6): CMP RAX,0x100
0000b827(2): JNZ 0x0000b7fa
0000b829(5): JMP 0x0000b3c4
0000b82e(2): XOR EAX,EAX
0000b830(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x20
0000b835(2): JZ 0x0000b853
0000b837(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b83c(3): MOV R9,RDI
0000b83f(3): MOV RSI,RCX
0000b842(3): AND ECX,0x3f
0000b845(4): SHR RSI,0x3
0000b849(3): SHL R9,CL
0000b84c(3): AND ESI,0x18
0000b84f(4): OR qword ptr [RBX + RSI*0x1],R9
0000b853(4): ADD RAX,0x1
0000b857(6): CMP RAX,0x100
0000b85d(2): JNZ 0x0000b830
0000b85f(5): JMP 0x0000b3c4
0000b864(2): XOR EAX,EAX
0000b866(5): MOV EDI,0x1
0000b86b(4): TEST byte ptr [RDX + RAX*0x2],0x1
0000b86f(2): JZ 0x0000b88d
0000b871(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b876(3): MOV R14,RDI
0000b879(3): MOV RSI,RCX
0000b87c(3): AND ECX,0x3f
0000b87f(4): SHR RSI,0x3
0000b883(3): SHL R14,CL
0000b886(3): AND ESI,0x18
0000b889(4): OR qword ptr [RBX + RSI*0x1],R14
0000b88d(4): ADD RAX,0x1
0000b891(6): CMP RAX,0x100
0000b897(2): JNZ 0x0000b86b
0000b899(5): JMP 0x0000b3c4
0000b89e(7): LEA RSI,[0x158d1]
0000b8a5(3): MOV RDI,R12
0000b8a8(5): CALL 0x00001ac0
0000b8ad(2): TEST EAX,EAX
0000b8af(2): JNZ 0x0000b92a
0000b8b1(5): CALL 0x00001c70
0000b8b6(2): XOR ECX,ECX
0000b8b8(3): TEST RBP,RBP
0000b8bb(3): MOV RSI,qword ptr [RAX]
0000b8be(5): MOV EDX,0x1
0000b8c3(2): JNZ 0x0000b8ef
0000b8c5(5): CMP word ptr [RSI + RCX*0x2],0x0
0000b8ca(2): JNS 0x0000b8dd
0000b8cc(3): MOV RAX,RCX
0000b8cf(3): MOV RDI,RDX
0000b8d2(4): SAR RAX,0x6
0000b8d6(3): SHL RDI,CL
0000b8d9(4): OR qword ptr [RBX + RAX*0x8],RDI
0000b8dd(4): ADD RCX,0x1
0000b8e1(7): CMP RCX,0x100
0000b8e8(2): JNZ 0x0000b8c5
0000b8ea(5): JMP 0x0000b3c4
0000b8ef(2): XOR EAX,EAX
0000b8f1(5): MOV EDI,0x1
0000b8f6(5): CMP word ptr [RSI + RAX*0x2],0x0
0000b8fb(2): JNS 0x0000b919
0000b8fd(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b902(3): MOV R9,RDI
0000b905(3): MOV RDX,RCX
0000b908(3): AND ECX,0x3f
0000b90b(4): SHR RDX,0x3
0000b90f(3): SHL R9,CL
0000b912(3): AND EDX,0x18
0000b915(4): OR qword ptr [RBX + RDX*0x1],R9
0000b919(4): ADD RAX,0x1
0000b91d(6): CMP RAX,0x100
0000b923(2): JNZ 0x0000b8f6
0000b925(5): JMP 0x0000b3c4
0000b92a(7): LEA RSI,[0x158d7]
0000b931(3): MOV RDI,R12
0000b934(5): CALL 0x00001ac0
0000b939(2): TEST EAX,EAX
0000b93b(2): JNZ 0x0000b9b4
0000b93d(5): CALL 0x00001c70
0000b942(2): XOR ECX,ECX
0000b944(3): TEST RBP,RBP
0000b947(3): MOV RSI,qword ptr [RAX]
0000b94a(5): MOV EDX,0x1
0000b94f(2): JNZ 0x0000b97a
0000b951(4): TEST byte ptr [RSI + RCX*0x2],0x4
0000b955(2): JZ 0x0000b968
0000b957(3): MOV RAX,RCX
0000b95a(3): MOV RDI,RDX
0000b95d(4): SAR RAX,0x6
0000b961(3): SHL RDI,CL
0000b964(4): OR qword ptr [RBX + RAX*0x8],RDI
0000b968(4): ADD RCX,0x1
0000b96c(7): CMP RCX,0x100
0000b973(2): JNZ 0x0000b951
0000b975(5): JMP 0x0000b3c4
0000b97a(2): XOR EAX,EAX
0000b97c(5): MOV EDI,0x1
0000b981(4): TEST byte ptr [RSI + RAX*0x2],0x4
0000b985(2): JZ 0x0000b9a3
0000b987(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b98c(3): MOV R14,RDI
0000b98f(3): MOV RDX,RCX
0000b992(3): AND ECX,0x3f
0000b995(4): SHR RDX,0x3
0000b999(3): SHL R14,CL
0000b99c(3): AND EDX,0x18
0000b99f(4): OR qword ptr [RBX + RDX*0x1],R14
0000b9a3(4): ADD RAX,0x1
0000b9a7(6): CMP RAX,0x100
0000b9ad(2): JNZ 0x0000b981
0000b9af(5): JMP 0x0000b3c4
0000b9b4(7): LEA RSI,[0x158dd]
0000b9bb(3): MOV RDI,R12
0000b9be(5): CALL 0x00001ac0
0000b9c3(2): TEST EAX,EAX
0000b9c5(2): JNZ 0x0000ba40
0000b9c7(5): CALL 0x00001c70
0000b9cc(2): XOR ECX,ECX
0000b9ce(3): TEST RBP,RBP
0000b9d1(3): MOV RSI,qword ptr [RAX]
0000b9d4(5): MOV EDX,0x1
0000b9d9(2): JNZ 0x0000ba05
0000b9db(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x10
0000b9e0(2): JZ 0x0000b9f3
0000b9e2(3): MOV RAX,RCX
0000b9e5(3): MOV RDI,RDX
0000b9e8(4): SAR RAX,0x6
0000b9ec(3): SHL RDI,CL
0000b9ef(4): OR qword ptr [RBX + RAX*0x8],RDI
0000b9f3(4): ADD RCX,0x1
0000b9f7(7): CMP RCX,0x100
0000b9fe(2): JNZ 0x0000b9db
0000ba00(5): JMP 0x0000b3c4
0000ba05(2): XOR EAX,EAX
0000ba07(5): MOV EDI,0x1
0000ba0c(5): TEST byte ptr [RSI + RAX*0x2 + 0x1],0x10
0000ba11(2): JZ 0x0000ba2f
0000ba13(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000ba18(3): MOV R9,RDI
0000ba1b(3): MOV RDX,RCX
0000ba1e(3): AND ECX,0x3f
0000ba21(4): SHR RDX,0x3
0000ba25(3): SHL R9,CL
0000ba28(3): AND EDX,0x18
0000ba2b(4): OR qword ptr [RBX + RDX*0x1],R9
0000ba2f(4): ADD RAX,0x1
0000ba33(6): CMP RAX,0x100
0000ba39(2): JNZ 0x0000ba0c
0000ba3b(5): JMP 0x0000b3c4
0000ba40(5): MOV EAX,0x4
0000ba45(5): JMP 0x0000b3c6
0000ba4a(2): XOR EAX,EAX
0000ba4c(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x8
0000ba51(2): JZ 0x0000ba6f
0000ba53(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000ba58(3): MOV R14,RDI
0000ba5b(3): MOV RSI,RCX
0000ba5e(3): AND ECX,0x3f
0000ba61(4): SHR RSI,0x3
0000ba65(3): SHL R14,CL
0000ba68(3): AND ESI,0x18
0000ba6b(4): OR qword ptr [RBX + RSI*0x1],R14
0000ba6f(4): ADD RAX,0x1
0000ba73(6): CMP RAX,0x100
0000ba79(2): JNZ 0x0000ba4c
0000ba7b(5): JMP 0x0000b3c4
0000ba80(2): XOR EDX,EDX
0000ba82(5): TEST byte ptr [RAX + RDX*0x2 + 0x1],0x1
0000ba87(2): JZ 0x0000baa5
0000ba89(5): MOVZX ECX,byte ptr [RBP + RDX*0x1]
0000ba8e(3): MOV R9,RDI
0000ba91(3): MOV RSI,RCX
0000ba94(3): AND ECX,0x3f
0000ba97(4): SHR RSI,0x3
0000ba9b(3): SHL R9,CL
0000ba9e(3): AND ESI,0x18
0000baa1(4): OR qword ptr [RBX + RSI*0x1],R9
0000baa5(4): ADD RDX,0x1
0000baa9(7): CMP RDX,0x100
0000bab0(2): JNZ 0x0000ba82
0000bab2(5): JMP 0x0000b3c4
0000bab7(2): XOR EAX,EAX
0000bab9(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x40
0000babe(2): JZ 0x0000badc
0000bac0(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000bac5(3): MOV R14,RDI
0000bac8(3): MOV RSI,RCX
0000bacb(3): AND ECX,0x3f
0000bace(4): SHR RSI,0x3
0000bad2(3): SHL R14,CL
0000bad5(3): AND ESI,0x18
0000bad8(4): OR qword ptr [RBX + RSI*0x1],R14
0000badc(4): ADD RAX,0x1
0000bae0(6): CMP RAX,0x100
0000bae6(2): JNZ 0x0000bab9
0000bae8(5): JMP 0x0000b3c4
0000baf0(2): PUSH R15
0000baf2(2): PUSH R14
0000baf4(3): MOV R14,RDX
0000baf7(2): PUSH R13
0000baf9(2): PUSH R12
0000bafb(3): MOV R13,RCX
0000bafe(1): PUSH RBP
0000baff(1): PUSH RBX
0000bb00(3): MOV RBP,RDI
0000bb03(5): MOV EDI,0x20
0000bb08(3): MOV R12D,R8D
0000bb0b(4): SUB RSP,0x58
0000bb0f(4): MOV qword ptr [RSP],RSI
0000bb13(5): MOV ESI,0x1
0000bb18(5): MOV qword ptr [RSP + 0x8],R9
0000bb1d(9): MOV RAX,qword ptr FS:[0x28]
0000bb26(5): MOV qword ptr [RSP + 0x48],RAX
0000bb2b(2): XOR EAX,EAX
0000bb2d(9): MOV qword ptr [RSP + 0x18],0x0
0000bb36(5): CALL 0x00001ab0
0000bb3b(3): TEST RAX,RAX
0000bb3e(6): JZ 0x0000bd00
0000bb44(5): MOV ESI,0x1
0000bb49(5): MOV EDI,0x50
0000bb4e(3): MOV RBX,RAX
0000bb51(5): CALL 0x00001ab0
0000bb56(3): TEST RAX,RAX
0000bb59(3): MOV R15,RAX
0000bb5c(6): JZ 0x0000bd10
0000bb62(4): MOVZX EAX,byte ptr [RAX + 0x20]
0000bb66(4): SUB RSP,0x8
0000bb6a(3): MOV EDX,R12D
0000bb6d(2): PUSH 0x0
0000bb6f(3): AND EDX,0x1
0000bb72(5): MOV RDI,qword ptr [RSP + 0x10]
0000bb77(4): LEA RCX,[R15 + 0x48]
0000bb7b(3): MOV R9,R14
0000bb7e(3): MOV RSI,RBX
0000bb81(5): LEA R8,[RSP + 0x28]
0000bb86(3): AND EAX,0xfffffffe
0000bb89(2): OR EAX,EDX
0000bb8b(4): LEA RDX,[R15 + 0x18]
0000bb8f(4): MOV byte ptr [R15 + 0x20],AL
0000bb93(5): CALL 0x0000b2e0
0000bb98(2): TEST EAX,EAX
0000bb9a(1): POP RDX
0000bb9b(1): POP RCX
0000bb9c(6): JNZ 0x0000bd30
0000bba2(5): MOVSX RCX,byte ptr [R13]
0000bba7(5): MOV ESI,0x1
0000bbac(2): TEST CL,CL
0000bbae(2): JZ 0x0000bbea
0000bbb0(4): LEA RAX,[RCX + 0x3f]
0000bbb4(3): TEST RCX,RCX
0000bbb7(3): MOV RDX,RCX
0000bbba(4): CMOVNS RAX,RCX
0000bbbe(4): SAR RDX,0x3f
0000bbc2(4): ADD R13,0x1
0000bbc6(4): SHR RDX,0x3a
0000bbca(4): SAR RAX,0x6
0000bbce(3): ADD RCX,RDX
0000bbd1(3): AND ECX,0x3f
0000bbd4(3): SUB RCX,RDX
0000bbd7(3): MOV RDX,RSI
0000bbda(3): SHL RDX,CL
0000bbdd(5): MOVSX RCX,byte ptr [R13]
0000bbe2(4): OR qword ptr [RBX + RAX*0x8],RDX
0000bbe6(2): TEST CL,CL
0000bbe8(2): JNZ 0x0000bbb0
0000bbea(3): TEST R12B,R12B
0000bbed(2): JZ 0x0000bc02
0000bbef(4): LEA RDX,[RBX + 0x20]
0000bbf3(3): MOV RAX,RBX
0000bbf6(3): NOT qword ptr [RAX]
0000bbf9(4): ADD RAX,0x8
0000bbfd(3): CMP RDX,RAX
0000bc00(2): JNZ 0x0000bbf6
0000bc02(7): CMP dword ptr [0xb4 + RBP],0x1
0000bc09(2): JLE 0x0000bc23
0000bc0b(4): MOV RCX,qword ptr [RBP + 0x78]
0000bc0f(2): XOR EAX,EAX
0000bc11(4): MOV RDX,qword ptr [RCX + RAX*0x1]
0000bc15(4): AND qword ptr [RBX + RAX*0x1],RDX
0000bc19(4): ADD RAX,0x8
0000bc1d(4): CMP RAX,0x20
0000bc21(2): JNZ 0x0000bc11
0000bc23(5): LEA R9,[RSP + 0x20]
0000bc28(4): LEA R12,[RBP + 0x70]
0000bc2c(7): LEA R13,[0x80 + RBP]
0000bc33(2): XOR ECX,ECX
0000bc35(2): XOR EDX,EDX
0000bc37(5): MOV byte ptr [RSP + 0x28],0x3
0000bc3c(3): MOV R8,R9
0000bc3f(3): MOV RSI,R13
0000bc42(3): MOV RDI,R12
0000bc45(5): MOV qword ptr [RSP + 0x20],RBX
0000bc4a(4): MOV qword ptr [RSP],R9
0000bc4e(5): CALL 0x000087a0
0000bc53(3): TEST RAX,RAX
0000bc56(3): MOV R14,RAX
0000bc59(6): JZ 0x0000bcf0
0000bc5f(7): CMP dword ptr [0xb4 + RBP],0x1
0000bc66(2): JLE 0x0000bce0
0000bc68(7): OR byte ptr [0xb0 + RBP],0x2
0000bc6f(4): MOV R9,qword ptr [RSP]
0000bc73(2): XOR ECX,ECX
0000bc75(2): XOR EDX,EDX
0000bc77(3): MOV RSI,R13
0000bc7a(3): MOV RDI,R12
0000bc7d(5): MOV byte ptr [RSP + 0x28],0x6
0000bc82(5): MOV qword ptr [RSP + 0x20],R15
0000bc87(3): MOV R8,R9
0000bc8a(5): CALL 0x000087a0
0000bc8f(3): TEST RAX,RAX
0000bc92(2): JZ 0x0000bcf0
0000bc94(5): LEA R8,[RSP + 0x30]
0000bc99(3): MOV RDX,R14
0000bc9c(3): MOV RCX,RAX
0000bc9f(3): MOV RSI,R13
0000bca2(3): MOV RDI,R12
0000bca5(5): MOV byte ptr [RSP + 0x38],0xa
0000bcaa(5): CALL 0x000087a0
0000bcaf(3): MOV R14,RAX
0000bcb2(5): MOV RDI,qword ptr [RSP + 0x48]
0000bcb7(9): XOR RDI,qword ptr FS:[0x28]
0000bcc0(3): MOV RAX,R14
0000bcc3(6): JNZ 0x0000bd55
0000bcc9(4): ADD RSP,0x58
0000bccd(1): POP RBX
0000bcce(1): POP RBP
0000bccf(2): POP R12
0000bcd1(2): POP R13
0000bcd3(2): POP R14
0000bcd5(2): POP R15
0000bcd7(1): RET
0000bce0(3): MOV RDI,R15
0000bce3(5): CALL 0x00007200
0000bce8(2): JMP 0x0000bcb2
0000bcf0(3): MOV RDI,RBX
0000bcf3(5): CALL 0x000018d0
0000bcf8(3): MOV RDI,R15
0000bcfb(5): CALL 0x00007200
0000bd00(5): MOV RAX,qword ptr [RSP + 0x8]
0000bd05(3): XOR R14D,R14D
0000bd08(6): MOV dword ptr [RAX],0xc
0000bd0e(2): JMP 0x0000bcb2
0000bd10(3): MOV RDI,RBX
0000bd13(3): XOR R14D,R14D
0000bd16(5): CALL 0x000018d0
0000bd1b(5): MOV RAX,qword ptr [RSP + 0x8]
0000bd20(6): MOV dword ptr [RAX],0xc
0000bd26(2): JMP 0x0000bcb2
0000bd30(3): MOV RDI,RBX
0000bd33(3): MOV dword ptr [RSP],EAX
0000bd36(3): XOR R14D,R14D
0000bd39(5): CALL 0x000018d0
0000bd3e(3): MOV RDI,R15
0000bd41(5): CALL 0x00007200
0000bd46(5): MOV RDI,qword ptr [RSP + 0x8]
0000bd4b(3): MOV EAX,dword ptr [RSP]
0000bd4e(2): MOV dword ptr [RDI],EAX
0000bd50(5): JMP 0x0000bcb2
0000bd55(5): CALL 0x000019e0
0000bd5a(6): NOP word ptr [RAX + RAX*0x1]
0000bd60(2): PUSH R15
0000bd62(2): PUSH R14
0000bd64(3): MOV RAX,RDI
0000bd67(2): PUSH R13
0000bd69(2): PUSH R12
0000bd6b(1): PUSH RBP
0000bd6c(1): PUSH RBX
0000bd6d(2): XOR EBX,EBX
0000bd6f(3): MOV RBP,RCX
0000bd72(7): SUB RSP,0x178
0000bd79(3): MOV RAX,qword ptr [RAX]
0000bd7c(5): MOV qword ptr [RSP + 0x30],RDI
0000bd81(5): MOV qword ptr [RSP + 0x20],RSI
0000bd86(9): MOV RDI,qword ptr FS:[0x28]
0000bd8f(8): MOV qword ptr [0x168 + RSP],RDI
0000bd97(2): XOR EDI,EDI
0000bd99(7): CMP dword ptr [0xb4 + RAX],0x1
0000bda0(5): MOV qword ptr [RSP + 0x28],RDX
0000bda5(5): MOV qword ptr [RSP + 0x8],RAX
0000bdaa(2): JNZ 0x0000bdc3
0000bdac(5): MOV RAX,qword ptr [RSP + 0x30]
0000bdb1(4): MOV RAX,qword ptr [RAX + 0x18]
0000bdb5(3): MOV RBX,RAX
0000bdb8(4): MOV qword ptr [RSP],RAX
0000bdbc(4): SHR RBX,0x16
0000bdc0(3): AND EBX,0x1
0000bdc3(5): MOV RAX,qword ptr [RSP + 0x20]
0000bdc8(4): CMP qword ptr [RAX],0x0
0000bdcc(6): JLE 0x0000c1dd
0000bdd2(5): LEA RAX,[RSP + 0x58]
0000bdd7(8): MOV qword ptr [RSP],0x0
0000bddf(5): MOV qword ptr [RSP + 0x40],RAX
0000bde4(5): LEA RAX,[RSP + 0x54]
0000bde9(5): MOV qword ptr [RSP + 0x48],RAX
0000bdee(5): LEA RAX,[RSP + 0x60]
0000bdf3(5): MOV qword ptr [RSP + 0x38],RAX
0000bdf8(2): JMP 0x0000be3e
0000be00(3): CMP EAX,0x3
0000be03(6): JZ 0x0000c0f6
0000be09(3): CMP EAX,0x6
0000be0c(6): JZ 0x0000bf98
0000be12(3): AND EDX,0xfffffffd
0000be15(3): CMP DL,0x5
0000be18(6): JZ 0x0000c214
0000be1e(3): CMP EAX,0x2
0000be21(6): JZ 0x0000c174
0000be27(5): MOV RDI,qword ptr [RSP + 0x20]
0000be2c(5): ADD qword ptr [RSP],0x1
0000be31(4): MOV RAX,qword ptr [RSP]
0000be35(3): CMP RAX,qword ptr [RDI]
0000be38(6): JGE 0x0000c1dd
0000be3e(5): MOV RAX,qword ptr [RSP + 0x28]
0000be43(4): MOV RDI,qword ptr [RSP]
0000be47(3): MOV RAX,qword ptr [RAX]
0000be4a(4): MOV R12,qword ptr [RAX + RDI*0x8]
0000be4e(5): MOV RAX,qword ptr [RSP + 0x8]
0000be53(3): MOV RCX,qword ptr [RAX]
0000be56(3): MOV RAX,R12
0000be59(4): SHL RAX,0x4
0000be5d(5): MOV qword ptr [RSP + 0x10],RAX
0000be62(4): LEA RSI,[RCX + RAX*0x1]
0000be66(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000be6a(3): CMP EAX,0x1
0000be6d(2): MOV EDX,EAX
0000be6f(2): JNZ 0x0000be00
0000be71(4): MOVZX R13D,byte ptr [RSI]
0000be75(2): TEST EBX,EBX
0000be77(6): MOV byte ptr [RBP + R13*0x1],0x1
0000be7d(2): JZ 0x0000be90
0000be7f(5): CALL 0x00001c60
0000be84(3): MOV RAX,qword ptr [RAX]
0000be87(4): MOVSXD RAX,dword ptr [RAX + R13*0x4]
0000be8b(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000be90(5): MOV RAX,qword ptr [RSP + 0x30]
0000be95(4): TEST byte ptr [RAX + 0x1a],0x40
0000be99(2): JZ 0x0000be27
0000be9b(5): MOV RSI,qword ptr [RSP + 0x8]
0000bea0(7): CMP dword ptr [0xb4 + RSI],0x1
0000bea7(6): JLE 0x0000be27
0000bead(3): MOV RAX,qword ptr [RSI]
0000beb0(5): MOV RDI,qword ptr [RSP + 0x10]
0000beb5(4): MOVZX EDX,byte ptr [RAX + RDI*0x1]
0000beb9(4): MOV byte ptr [RSP + 0x60],DL
0000bebd(5): LEA RDX,[R12 + 0x1]
0000bec2(4): CMP qword ptr [RSI + 0x10],RDX
0000bec6(6): JBE 0x0000c206
0000becc(5): LEA RCX,[RAX + RDI*0x1 + 0x10]
0000bed1(3): MOV EAX,dword ptr [RCX + 0x8]
0000bed4(5): AND EAX,0x2000ff
0000bed9(5): CMP EAX,0x200001
0000bede(6): JNZ 0x0000c206
0000bee4(4): ADD RDI,0x20
0000bee8(3): MOV R13,RDI
0000beeb(5): MOV RDI,qword ptr [RSP + 0x38]
0000bef0(4): LEA RAX,[RDI + 0x1]
0000bef4(2): JMP 0x0000bf1b
0000bf00(3): MOV RCX,qword ptr [RSI]
0000bf03(3): ADD RCX,R13
0000bf06(4): ADD R13,0x10
0000bf0a(3): MOV EDX,dword ptr [RCX + 0x8]
0000bf0d(6): AND EDX,0x2000ff
0000bf13(6): CMP EDX,0x200001
0000bf19(2): JNZ 0x0000bf34
0000bf1b(3): MOVZX EDX,byte ptr [RCX]
0000bf1e(4): ADD RAX,0x1
0000bf22(3): MOV byte ptr [RAX + -0x1],DL
0000bf25(3): MOV RDX,RAX
0000bf28(3): SUB RDX,RDI
0000bf2b(3): ADD RDX,R12
0000bf2e(4): CMP qword ptr [RSI + 0x10],RDX
0000bf32(2): JA 0x0000bf00
0000bf34(5): MOV RSI,qword ptr [RSP + 0x38]
0000bf39(5): MOV RCX,qword ptr [RSP + 0x40]
0000bf3e(5): MOV RDI,qword ptr [RSP + 0x48]
0000bf43(3): SUB RAX,RSI
0000bf46(7): MOV qword ptr [RCX],0x0
0000bf4d(3): MOV R12,RAX
0000bf50(3): MOV RDX,RAX
0000bf53(5): CALL 0x00005f40
0000bf58(3): CMP R12,RAX
0000bf5b(6): JNZ 0x0000be27
0000bf61(4): MOV EDI,dword ptr [RSP + 0x54]
0000bf65(5): CALL 0x00001be0
0000bf6a(5): MOV RDX,qword ptr [RSP + 0x40]
0000bf6f(5): MOV RDI,qword ptr [RSP + 0x38]
0000bf74(2): MOV ESI,EAX
0000bf76(5): CALL 0x00001b10
0000bf7b(4): CMP RAX,-0x1
0000bf7f(6): JZ 0x0000be27
0000bf85(5): MOVZX EAX,byte ptr [RSP + 0x60]
0000bf8a(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000bf8f(5): JMP 0x0000be27
0000bf98(5): MOV RAX,qword ptr [RSP + 0x8]
0000bf9d(3): MOV R12,qword ptr [RSI]
0000bfa0(7): CMP dword ptr [0xb4 + RAX],0x1
0000bfa7(2): JLE 0x0000bfcd
0000bfa9(6): CMP qword ptr [R12 + 0x48],0x0
0000bfaf(6): JNZ 0x0000c0af
0000bfb5(6): TEST byte ptr [R12 + 0x20],0x1
0000bfbb(6): JNZ 0x0000c0af
0000bfc1(6): CMP qword ptr [R12 + 0x40],0x0
0000bfc7(6): JNZ 0x0000c0af
0000bfcd(3): XOR R13D,R13D
0000bfd0(6): CMP qword ptr [R12 + 0x28],0x0
0000bfd6(6): JLE 0x0000be27
0000bfdc(3): MOV R15,R12
0000bfdf(5): MOV R14,qword ptr [RSP + 0x40]
0000bfe4(3): MOV R12,RBP
0000bfe7(3): MOV RBP,R13
0000bfea(3): MOV R13D,EBX
0000bfed(2): JMP 0x0000bffd
0000bfef(4): ADD RBP,0x1
0000bff3(4): CMP RBP,qword ptr [R15 + 0x28]
0000bff7(6): JGE 0x0000c0a4
0000bffd(7): MOV qword ptr [R14],0x0
0000c004(3): MOV RAX,qword ptr [R15]
0000c007(3): MOV RDX,R14
0000c00a(5): MOV RDI,qword ptr [RSP + 0x38]
0000c00f(8): LEA RBX,[RBP*0x4]
0000c017(3): MOV ESI,dword ptr [RAX + RBP*0x4]
0000c01a(5): CALL 0x00001b10
0000c01f(4): CMP RAX,-0x1
0000c023(2): JZ 0x0000c04f
0000c025(5): MOVZX EDX,byte ptr [RSP + 0x60]
0000c02a(3): TEST R13D,R13D
0000c02d(5): MOV byte ptr [R12 + RDX*0x1],0x1
0000c032(5): MOV qword ptr [RSP + 0x10],RDX
0000c037(2): JZ 0x0000c04f
0000c039(5): CALL 0x00001c60
0000c03e(5): MOV RDX,qword ptr [RSP + 0x10]
0000c043(3): MOV RAX,qword ptr [RAX]
0000c046(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
0000c04a(5): MOV byte ptr [R12 + RAX*0x1],0x1
0000c04f(5): MOV RAX,qword ptr [RSP + 0x30]
0000c054(4): TEST byte ptr [RAX + 0x1a],0x40
0000c058(2): JZ 0x0000bfef
0000c05a(5): MOV RAX,qword ptr [RSP + 0x8]
0000c05f(7): CMP dword ptr [0xb4 + RAX],0x1
0000c066(2): JLE 0x0000bfef
0000c068(3): MOV RAX,qword ptr [R15]
0000c06b(3): MOV EDI,dword ptr [RAX + RBX*0x1]
0000c06e(5): CALL 0x00001be0
0000c073(5): MOV RDI,qword ptr [RSP + 0x38]
0000c078(3): MOV RDX,R14
0000c07b(2): MOV ESI,EAX
0000c07d(5): CALL 0x00001b10
0000c082(4): CMP RAX,-0x1
0000c086(6): JZ 0x0000bfef
0000c08c(5): MOVZX EAX,byte ptr [RSP + 0x60]
0000c091(4): ADD RBP,0x1
0000c095(5): MOV byte ptr [R12 + RAX*0x1],0x1
0000c09a(4): CMP RBP,qword ptr [R15 + 0x28]
0000c09e(6): JL 0x0000bffd
0000c0a4(3): MOV EBX,R13D
0000c0a7(3): MOV RBP,R12
0000c0aa(5): JMP 0x0000be27
0000c0af(5): MOV R12,qword ptr [RSP + 0x40]
0000c0b4(5): MOV R13,qword ptr [RSP + 0x48]
0000c0b9(5): MOV byte ptr [RSP + 0x54],0x0
0000c0be(2): NOP
0000c0c0(2): XOR EDI,EDI
0000c0c2(8): MOV qword ptr [R12],0x0
0000c0ca(3): MOV RCX,R12
0000c0cd(5): MOV EDX,0x1
0000c0d2(3): MOV RSI,R13
0000c0d5(5): CALL 0x00005f40
0000c0da(4): CMP RAX,-0x2
0000c0de(2): JNZ 0x0000c0ea
0000c0e0(5): MOVZX EAX,byte ptr [RSP + 0x54]
0000c0e5(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000c0ea(5): ADD byte ptr [RSP + 0x54],0x1
0000c0ef(2): JNZ 0x0000c0c0
0000c0f1(5): JMP 0x0000be27
0000c0f6(3): MOV R13,RBP
0000c0f9(3): XOR R12D,R12D
0000c0fc(9): MOV qword ptr [RSP + 0x18],0x0
0000c105(5): MOV RAX,qword ptr [RSP + 0x10]
0000c10a(5): MOV RSI,qword ptr [RSP + 0x18]
0000c10f(3): XOR R14D,R14D
0000c112(4): MOV RAX,qword ptr [RCX + RAX*0x1]
0000c116(4): MOV R15,qword ptr [RAX + RSI*0x1]
0000c11a(6): NOP word ptr [RAX + RAX*0x1]
0000c120(4): BT RDI,R14
0000c124(2): JNC 0x0000c145
0000c126(2): TEST EBX,EBX
0000c128(6): MOV byte ptr [R13 + R14*0x1],0x1
0000c12e(2): JZ 0x0000c145
0000c130(5): CALL 0x00001c60
0000c135(3): MOV RAX,qword ptr [RAX]
0000c138(4): LEA RDX,[R12 + R14*0x1]
0000c13c(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
0000c140(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000c145(4): ADD R14,0x1
0000c149(4): CMP R14,0x40
0000c14d(2): JNZ 0x0000c120
0000c14f(4): ADD R12,0x40
0000c153(6): ADD qword ptr [RSP + 0x18],0x8
0000c159(4): ADD R13,0x40
0000c15d(7): CMP R12,0x100
0000c164(6): JZ 0x0000be27
0000c16a(5): MOV RAX,qword ptr [RSP + 0x8]
0000c16f(3): MOV RCX,qword ptr [RAX]
0000c172(2): JMP 0x0000c105
0000c174(8): MOVDQA XMM0,xmmword ptr [0x000160a0]
0000c17c(4): MOVUPS xmmword ptr [RBP],XMM0
0000c180(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
0000c184(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0000c188(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0000c18c(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
0000c190(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
0000c194(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
0000c198(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0000c19c(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
0000c1a3(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0000c1aa(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
0000c1b1(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
0000c1b8(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0000c1bf(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
0000c1c6(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0000c1cd(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
0000c1d4(5): MOV RAX,qword ptr [RSP + 0x30]
0000c1d9(4): OR byte ptr [RAX + 0x38],0x1
0000c1dd(8): MOV RAX,qword ptr [0x168 + RSP]
0000c1e5(9): XOR RAX,qword ptr FS:[0x28]
0000c1ee(6): JNZ 0x0000c282
0000c1f4(7): ADD RSP,0x178
0000c1fb(1): POP RBX
0000c1fc(1): POP RBP
0000c1fd(2): POP R12
0000c1ff(2): POP R13
0000c201(2): POP R14
0000c203(2): POP R15
0000c205(1): RET
0000c206(5): MOV RAX,qword ptr [RSP + 0x38]
0000c20b(4): ADD RAX,0x1
0000c20f(5): JMP 0x0000bf34
0000c214(8): MOVDQA XMM0,xmmword ptr [0x000160a0]
0000c21c(3): CMP EAX,0x2
0000c21f(4): MOVUPS xmmword ptr [RBP],XMM0
0000c223(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
0000c227(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0000c22b(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0000c22f(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
0000c233(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
0000c237(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
0000c23b(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0000c23f(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
0000c246(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0000c24d(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
0000c254(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
0000c25b(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0000c262(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
0000c269(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0000c270(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
0000c277(6): JNZ 0x0000c1dd
0000c27d(5): JMP 0x0000c1d4
0000c282(5): CALL 0x000019e0
0000c287(9): NOP word ptr [RAX + RAX*0x1]
0000c290(4): SHL RDX,0x4
0000c294(2): PUSH R13
0000c296(2): PUSH R12
0000c298(4): LEA R9,[RDI + RDX*0x1]
0000c29c(1): PUSH RBP
0000c29d(1): PUSH RBX
0000c29e(4): SUB RSP,0x8
0000c2a2(5): MOVZX R11D,byte ptr [R9 + 0x8]
0000c2a7(4): CMP R11B,0x7
0000c2ab(6): JZ 0x0000c3c0
0000c2b1(7): CMP dword ptr [0x90 + RCX],0x1
0000c2b8(6): JZ 0x0000c380
0000c2be(3): MOV RBX,RSI
0000c2c1(3): MOV RDI,RCX
0000c2c4(3): MOV RSI,R8
0000c2c7(3): MOV R10,RCX
0000c2ca(5): CALL 0x00007a30
0000c2cf(4): CMP R11B,0x5
0000c2d3(2): MOV EBP,EAX
0000c2d5(6): JZ 0x0000c390
0000c2db(4): CMP R11B,0x6
0000c2df(6): JNZ 0x0000c380
0000c2e5(3): CMP EAX,0x1
0000c2e8(6): JLE 0x0000c380
0000c2ee(3): MOV R13,qword ptr [R9]
0000c2f1(4): MOV RSI,qword ptr [R13 + 0x40]
0000c2f5(4): MOV RDX,qword ptr [R13 + 0x28]
0000c2f9(3): TEST RSI,RSI
0000c2fc(2): JNZ 0x0000c309
0000c2fe(5): CMP qword ptr [R13 + 0x48],0x0
0000c303(6): JZ 0x0000c3f8
0000c309(4): MOV RAX,qword ptr [R10 + 0x10]
0000c30d(3): TEST RDX,RDX
0000c310(4): MOV R12D,dword ptr [RAX + R8*0x4]
0000c314(2): JLE 0x0000c337
0000c316(4): MOV RCX,qword ptr [R13]
0000c31a(3): CMP R12D,dword ptr [RCX]
0000c31d(2): JZ 0x0000c372
0000c31f(2): XOR EAX,EAX
0000c321(2): JMP 0x0000c32e
0000c328(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0000c32c(2): JZ 0x0000c372
0000c32e(4): ADD RAX,0x1
0000c332(3): CMP RAX,RDX
0000c335(2): JNZ 0x0000c328
0000c337(4): MOV RAX,qword ptr [R13 + 0x48]
0000c33b(3): TEST RAX,RAX
0000c33e(6): JLE 0x0000c41c
0000c344(2): XOR EBX,EBX
0000c346(2): JMP 0x0000c35e
0000c350(4): ADD RBX,0x1
0000c354(4): CMP RBX,qword ptr [R13 + 0x48]
0000c358(6): JGE 0x0000c418
0000c35e(4): MOV RAX,qword ptr [R13 + 0x18]
0000c362(3): MOV EDI,R12D
0000c365(4): MOV RSI,qword ptr [RAX + RBX*0x8]
0000c369(5): CALL 0x00001970
0000c36e(2): TEST EAX,EAX
0000c370(2): JZ 0x0000c350
0000c372(5): TEST byte ptr [R13 + 0x20],0x1
0000c377(2): JZ 0x0000c382
0000c379(7): NOP dword ptr [RAX]
0000c380(2): XOR EBP,EBP
0000c382(4): ADD RSP,0x8
0000c386(2): MOV EAX,EBP
0000c388(1): POP RBX
0000c389(1): POP RBP
0000c38a(2): POP R12
0000c38c(2): POP R13
0000c38e(1): RET
0000c390(3): CMP EAX,0x1
0000c393(2): JLE 0x0000c380
0000c395(3): MOV RAX,qword ptr [RBX]
0000c398(2): TEST AL,0x40
0000c39a(2): JZ 0x0000c3b0
0000c39c(2): TEST AL,0x80
0000c39e(2): JZ 0x0000c382
0000c3a0(4): MOV RAX,qword ptr [R10 + 0x8]
0000c3a4(5): CMP byte ptr [RAX + R8*0x1],0x0
0000c3a9(2): JZ 0x0000c380
0000c3ab(2): JMP 0x0000c382
0000c3b0(4): MOV RDX,qword ptr [R10 + 0x8]
0000c3b4(5): CMP byte ptr [RDX + R8*0x1],0xa
0000c3b9(2): JNZ 0x0000c39c
0000c3bb(2): JMP 0x0000c380
0000c3c0(4): MOV RDX,qword ptr [RCX + 0x8]
0000c3c4(4): LEA RSI,[RDX + R8*0x1]
0000c3c8(3): MOVZX EAX,byte ptr [RSI]
0000c3cb(2): CMP AL,0xc1
0000c3cd(2): JBE 0x0000c380
0000c3cf(4): MOV RCX,qword ptr [RCX + 0x58]
0000c3d3(4): LEA RDI,[R8 + 0x1]
0000c3d7(3): CMP RDI,RCX
0000c3da(2): JGE 0x0000c380
0000c3dc(2): CMP AL,0xdf
0000c3de(6): MOVZX EDX,byte ptr [RDX + R8*0x1 + 0x1]
0000c3e4(2): JA 0x0000c44e
0000c3e6(3): ADD EDX,-0x80
0000c3e9(5): MOV EBP,0x2
0000c3ee(3): CMP DL,0x3f
0000c3f1(2): JA 0x0000c380
0000c3f3(2): JMP 0x0000c382
0000c3f8(3): TEST RDX,RDX
0000c3fb(6): JNZ 0x0000c309
0000c401(5): TEST byte ptr [R13 + 0x20],0x1
0000c406(6): JNZ 0x0000c382
0000c40c(5): JMP 0x0000c380
0000c418(4): MOV RSI,qword ptr [R13 + 0x40]
0000c41c(3): TEST RSI,RSI
0000c41f(2): JLE 0x0000c401
0000c421(4): MOV RDX,qword ptr [R13 + 0x8]
0000c425(2): XOR EAX,EAX
0000c427(2): JMP 0x0000c439
0000c430(4): ADD RAX,0x1
0000c434(3): CMP RAX,RSI
0000c437(2): JZ 0x0000c401
0000c439(4): CMP R12D,dword ptr [RDX + RAX*0x4]
0000c43d(2): JL 0x0000c430
0000c43f(4): MOV RCX,qword ptr [R13 + 0x10]
0000c443(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0000c447(2): JG 0x0000c430
0000c449(5): JMP 0x0000c372
0000c44e(2): CMP AL,0xef
0000c450(2): JA 0x0000c498
0000c452(2): CMP AL,0xe0
0000c454(2): JNZ 0x0000c45f
0000c456(3): CMP DL,0x9f
0000c459(6): JBE 0x0000c380
0000c45f(5): MOV EBP,0x3
0000c464(3): MOVSXD RDI,EBP
0000c467(3): ADD R8,RDI
0000c46a(3): CMP RCX,R8
0000c46d(6): JL 0x0000c380
0000c473(5): MOV EAX,0x1
0000c478(2): JMP 0x0000c487
0000c47a(4): ADD RAX,0x1
0000c47e(3): CMP RDI,RAX
0000c481(6): JLE 0x0000c382
0000c487(4): MOVZX EBX,byte ptr [RSI + RAX*0x1]
0000c48b(3): LEA EDX,[RBX + -0x80]
0000c48e(3): CMP DL,0x3f
0000c491(2): JBE 0x0000c47a
0000c493(5): JMP 0x0000c380
0000c498(2): CMP AL,0xf7
0000c49a(2): JA 0x0000c4b0
0000c49c(2): CMP AL,0xf0
0000c49e(2): JNZ 0x0000c4a9
0000c4a0(3): CMP DL,0x8f
0000c4a3(6): JBE 0x0000c380
0000c4a9(5): MOV EBP,0x4
0000c4ae(2): JMP 0x0000c464
0000c4b0(2): CMP AL,0xfb
0000c4b2(2): JA 0x0000c4c8
0000c4b4(2): CMP AL,0xf8
0000c4b6(2): JNZ 0x0000c4c1
0000c4b8(3): CMP DL,0x87
0000c4bb(6): JBE 0x0000c380
0000c4c1(5): MOV EBP,0x5
0000c4c6(2): JMP 0x0000c464
0000c4c8(2): CMP AL,0xfd
0000c4ca(6): JA 0x0000c380
0000c4d0(2): CMP AL,0xfc
0000c4d2(2): JNZ 0x0000c4dd
0000c4d4(3): CMP DL,0x83
0000c4d7(6): JBE 0x0000c380
0000c4dd(5): MOV EBP,0x6
0000c4e2(2): JMP 0x0000c464
0000c4f0(2): PUSH R15
0000c4f2(2): PUSH R14
0000c4f4(3): MOV R15,RDI
0000c4f7(2): PUSH R13
0000c4f9(2): PUSH R12
0000c4fb(1): PUSH RBP
0000c4fc(1): PUSH RBX
0000c4fd(3): MOV RBP,RCX
0000c500(3): MOV RBX,RDX
0000c503(7): SUB RSP,0xd8
0000c50a(7): MOV RCX,qword ptr [0x98 + RDI]
0000c511(4): MOV R13,qword ptr [RSI + 0x8]
0000c515(9): MOV RAX,qword ptr FS:[0x28]
0000c51e(8): MOV qword ptr [0xc8 + RSP],RAX
0000c526(2): XOR EAX,EAX
0000c528(3): MOV RAX,RDX
0000c52b(5): MOV qword ptr [RSP + 0x60],RSI
0000c530(5): MOV qword ptr [RSP + 0x78],R8
0000c535(4): SHL RAX,0x4
0000c539(3): ADD RAX,qword ptr [RCX]
0000c53c(5): MOV qword ptr [RSP + 0x40],R9
0000c541(5): MOV qword ptr [RSP + 0x30],RCX
0000c546(11): MOV dword ptr [0x88 + RSP],0x0
0000c551(3): MOV RAX,qword ptr [RAX]
0000c554(5): MOV qword ptr [RSP + 0x48],RAX
0000c559(7): MOVSXD RAX,dword ptr [0xe0 + RDI]
0000c560(3): ADD RAX,R9
0000c563(3): CMP RAX,R13
0000c566(6): JGE 0x0000cb86
0000c56c(5): MOV RAX,qword ptr [RSP + 0x60]
0000c571(7): MOV RDX,qword ptr [0xb8 + R15]
0000c578(4): MOV RCX,qword ptr [R15 + 0x48]
0000c57c(3): MOV R12,qword ptr [RAX]
0000c57f(4): MOV R14,qword ptr [RAX + 0x10]
0000c583(5): MOV qword ptr [RSP + 0x68],RDX
0000c588(5): MOV qword ptr [RSP + 0x70],RCX
0000c58d(7): MOV EDX,dword ptr [0xa0 + R15]
0000c594(3): TEST R12,R12
0000c597(7): MOV qword ptr [0xb8 + R15],R14
0000c59e(6): JZ 0x0000c980
0000c5a4(5): LEA RSI,[R12 + -0x1]
0000c5a9(4): MOV qword ptr [R15 + 0x48],R12
0000c5ad(3): MOV RDI,R15
0000c5b0(5): CALL 0x000098c0
0000c5b5(3): CMP R12,RBP
0000c5b8(3): MOV R13D,EAX
0000c5bb(6): JZ 0x0000c993
0000c5c1(4): MOV RBP,qword ptr [R14 + R12*0x8]
0000c5c5(3): TEST RBP,RBP
0000c5c8(2): JZ 0x0000c5d4
0000c5ca(4): TEST byte ptr [RBP + 0x68],0x40
0000c5ce(6): JNZ 0x0000caf0
0000c5d4(4): PXOR XMM0,XMM0
0000c5d8(12): MOV qword ptr [0xa0 + RSP],0x0
0000c5e4(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000c5ec(5): CMP R12,qword ptr [RSP + 0x40]
0000c5f1(6): JGE 0x0000c918
0000c5f7(7): MOV ECX,dword ptr [0xe0 + R15]
0000c5fe(2): TEST ECX,ECX
0000c600(6): JS 0x0000c918
0000c606(8): LEA RBX,[0x90 + RSP]
0000c60e(8): LEA RAX,[0x8 + R12*0x8]
0000c616(4): MOV qword ptr [RSP],R12
0000c61a(9): MOV qword ptr [RSP + 0x20],0x0
0000c623(5): MOV qword ptr [RSP + 0x8],RBX
0000c628(8): LEA RBX,[0xb0 + RSP]
0000c630(5): MOV qword ptr [RSP + 0x10],RAX
0000c635(7): MOV RAX,qword ptr [0xb8 + R15]
0000c63c(5): MOV qword ptr [RSP + 0x18],RBX
0000c641(8): LEA RBX,[0x8c + RSP]
0000c649(5): MOV qword ptr [RSP + 0x58],RBX
0000c64e(5): MOV RCX,qword ptr [RSP + 0x10]
0000c653(12): MOV qword ptr [0x98 + RSP],0x0
0000c65f(4): MOV RSI,qword ptr [RAX + RCX*0x1]
0000c663(3): TEST RSI,RSI
0000c666(6): JZ 0x0000ca28
0000c66c(5): MOV RDI,qword ptr [RSP + 0x8]
0000c671(4): ADD RSI,0x8
0000c675(5): CALL 0x00008000
0000c67a(2): TEST EAX,EAX
0000c67c(7): MOV dword ptr [0x88 + RSP],EAX
0000c683(6): JNZ 0x0000ca60
0000c689(3): TEST RBP,RBP
0000c68c(6): JZ 0x0000c838
0000c692(5): CMP qword ptr [RBP + 0x28],0x0
0000c697(5): MOV RAX,qword ptr [RSP + 0x18]
0000c69c(4): PXOR XMM0,XMM0
0000c6a0(7): MOV R12,qword ptr [0x98 + R15]
0000c6a7(11): MOV dword ptr [0x8c + RSP],0x0
0000c6b2(8): MOV qword ptr [RAX + 0x10],0x0
0000c6ba(3): MOVAPS xmmword ptr [RAX],XMM0
0000c6bd(6): JLE 0x0000cbf0
0000c6c3(8): LEA RAX,[0xd8 + R12]
0000c6cb(2): XOR EBX,EBX
0000c6cd(5): MOV qword ptr [RSP + 0x28],RAX
0000c6d2(2): JMP 0x0000c719
0000c6d8(4): MOV RDX,qword ptr [RSP]
0000c6dc(3): MOV RDI,R15
0000c6df(5): CALL 0x000099b0
0000c6e4(2): TEST AL,AL
0000c6e6(2): JZ 0x0000c70b
0000c6e8(8): LEA R13,[R14*0x8]
0000c6f0(5): MOV RAX,qword ptr [R12 + 0x18]
0000c6f5(5): MOV RDI,qword ptr [RSP + 0x8]
0000c6fa(4): MOV RSI,qword ptr [RAX + R13*0x1]
0000c6fe(5): CALL 0x000065a0
0000c703(2): TEST AL,AL
0000c705(6): JZ 0x0000ca48
0000c70b(4): ADD RBX,0x1
0000c70f(4): CMP RBX,qword ptr [RBP + 0x28]
0000c713(6): JGE 0x0000caa0
0000c719(4): MOV RAX,qword ptr [RBP + 0x30]
0000c71d(4): MOV RDI,qword ptr [R12]
0000c721(4): MOV R14,qword ptr [RAX + RBX*0x8]
0000c725(3): MOV R13,R14
0000c728(4): SHL R13,0x4
0000c72c(4): LEA RSI,[RDI + R13*0x1]
0000c730(4): TEST byte ptr [RSI + 0xa],0x10
0000c734(2): JZ 0x0000c6d8
0000c736(4): MOV R8,qword ptr [RSP]
0000c73a(5): MOV RSI,qword ptr [RSP + 0x28]
0000c73f(3): MOV RCX,R15
0000c742(3): MOV RDX,R14
0000c745(5): CALL 0x0000c290
0000c74a(3): CMP EAX,0x1
0000c74d(6): JLE 0x0000ca10
0000c753(2): CDQE
0000c755(4): ADD RAX,qword ptr [RSP]
0000c759(5): MOV RDX,qword ptr [R12 + 0x18]
0000c75e(8): LEA R13,[R14*0x8]
0000c766(4): MOV RDX,qword ptr [RDX + R14*0x8]
0000c76a(3): MOV RCX,RAX
0000c76d(5): MOV qword ptr [RSP + 0x38],RAX
0000c772(8): LEA R14,[RAX*0x8]
0000c77a(7): MOV RAX,qword ptr [0xb8 + R15]
0000c781(4): MOV RSI,qword ptr [RAX + RCX*0x8]
0000c785(12): MOV qword ptr [0xb8 + RSP],0x0
0000c791(3): TEST RSI,RSI
0000c794(2): JZ 0x0000c7b9
0000c796(5): MOV RDI,qword ptr [RSP + 0x18]
0000c79b(4): ADD RSI,0x8
0000c79f(5): MOV qword ptr [RSP + 0x50],RDX
0000c7a4(5): CALL 0x00008000
0000c7a9(2): TEST EAX,EAX
0000c7ab(7): MOV dword ptr [0x8c + RSP],EAX
0000c7b2(5): MOV RDX,qword ptr [RSP + 0x50]
0000c7b7(2): JNZ 0x0000c810
0000c7b9(5): MOV RDI,qword ptr [RSP + 0x18]
0000c7be(3): MOV RSI,RDX
0000c7c1(5): CALL 0x000065a0
0000c7c6(2): TEST AL,AL
0000c7c8(6): JZ 0x0000ca48
0000c7ce(7): ADD R14,qword ptr [0xb8 + R15]
0000c7d5(5): MOV RDX,qword ptr [RSP + 0x18]
0000c7da(3): MOV RSI,R12
0000c7dd(5): MOV RDI,qword ptr [RSP + 0x58]
0000c7e2(5): CALL 0x000090f0
0000c7e7(5): MOV RDX,qword ptr [RSP + 0x38]
0000c7ec(3): MOV qword ptr [R14],RAX
0000c7ef(7): MOV RAX,qword ptr [0xb8 + R15]
0000c7f6(5): CMP qword ptr [RAX + RDX*0x8],0x0
0000c7fb(6): JNZ 0x0000c6f0
0000c801(7): MOV EDX,dword ptr [0x8c + RSP]
0000c808(2): TEST EDX,EDX
0000c80a(6): JZ 0x0000c6f0
0000c810(8): MOV RDI,qword ptr [0xc0 + RSP]
0000c818(5): CALL 0x000018d0
0000c81d(7): MOV EAX,dword ptr [0x8c + RSP]
0000c824(2): TEST EAX,EAX
0000c826(7): MOV dword ptr [0x88 + RSP],EAX
0000c82d(6): JNZ 0x0000ca60
0000c833(5): NOP dword ptr [RAX + RAX*0x1]
0000c838(4): MOV RAX,qword ptr [RSP]
0000c83c(9): CMP qword ptr [0x98 + RSP],0x0
0000c845(4): LEA RBX,[RAX + 0x1]
0000c849(3): MOV R12,RBX
0000c84c(2): JZ 0x0000c8a4
0000c84e(7): MOV ECX,dword ptr [0x110 + RSP]
0000c855(5): MOV RDX,qword ptr [RSP + 0x48]
0000c85a(5): MOV RSI,qword ptr [RSP + 0x8]
0000c85f(5): MOV RDI,qword ptr [RSP + 0x30]
0000c864(5): CALL 0x00008490
0000c869(2): TEST EAX,EAX
0000c86b(7): MOV dword ptr [0x88 + RSP],EAX
0000c872(6): JNZ 0x0000ca60
0000c878(8): MOV R8D,dword ptr [0x110 + RSP]
0000c880(5): MOV RCX,qword ptr [RSP + 0x48]
0000c885(3): MOV RDX,RBX
0000c888(5): MOV RSI,qword ptr [RSP + 0x8]
0000c88d(3): MOV RDI,R15
0000c890(5): CALL 0x000093d0
0000c895(2): TEST EAX,EAX
0000c897(7): MOV dword ptr [0x88 + RSP],EAX
0000c89e(6): JNZ 0x0000ca60
0000c8a4(7): MOV EDX,dword ptr [0xa0 + R15]
0000c8ab(4): MOV RSI,qword ptr [RSP]
0000c8af(3): MOV RDI,R15
0000c8b2(5): CALL 0x000098c0
0000c8b7(5): MOV RDX,qword ptr [RSP + 0x8]
0000c8bc(5): MOV RSI,qword ptr [RSP + 0x30]
0000c8c1(8): LEA RDI,[0x88 + RSP]
0000c8c9(2): MOV ECX,EAX
0000c8cb(5): CALL 0x00008e30
0000c8d0(3): TEST RAX,RAX
0000c8d3(3): MOV RBP,RAX
0000c8d6(6): JZ 0x0000cac0
0000c8dc(7): MOV RAX,qword ptr [0xb8 + R15]
0000c8e3(5): MOV RDX,qword ptr [RSP + 0x10]
0000c8e8(9): MOV qword ptr [RSP + 0x20],0x0
0000c8f1(4): MOV qword ptr [RAX + RDX*0x1],RBP
0000c8f5(5): CMP qword ptr [RSP + 0x40],RBX
0000c8fa(2): JLE 0x0000c918
0000c8fc(7): MOVSXD RDX,dword ptr [0xe0 + R15]
0000c903(6): ADD qword ptr [RSP + 0x10],0x8
0000c909(5): CMP RDX,qword ptr [RSP + 0x20]
0000c90e(4): MOV qword ptr [RSP],RBX
0000c912(6): JGE 0x0000c64e
0000c918(8): MOV RDI,qword ptr [0xa0 + RSP]
0000c920(5): CALL 0x000018d0
0000c925(7): MOV RAX,qword ptr [0xb8 + R15]
0000c92c(5): MOV RBX,qword ptr [RSP + 0x40]
0000c931(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000c935(3): TEST RAX,RAX
0000c938(6): JZ 0x0000cc15
0000c93e(5): MOV RBX,qword ptr [RSP + 0x60]
0000c943(5): MOV RDX,qword ptr [RSP + 0x78]
0000c948(4): LEA RSI,[RAX + 0x18]
0000c94c(3): MOV qword ptr [RBX],R12
0000c94f(5): MOV RBX,qword ptr [RSP + 0x68]
0000c954(7): MOV qword ptr [0xb8 + R15],RBX
0000c95b(5): MOV RBX,qword ptr [RSP + 0x70]
0000c960(4): MOV qword ptr [R15 + 0x48],RBX
0000c964(4): MOV RDI,qword ptr [RAX + 0x10]
0000c968(5): CALL 0x00007ae0
0000c96d(3): TEST RAX,RAX
0000c970(3): SETZ AL
0000c973(3): MOVZX EAX,AL
0000c976(5): JMP 0x0000ca74
0000c980(4): LEA RSI,[RBP + -0x1]
0000c984(4): MOV qword ptr [R15 + 0x48],RBP
0000c988(3): MOV RDI,R15
0000c98b(5): CALL 0x000098c0
0000c990(3): MOV R13D,EAX
0000c993(5): MOV EDI,0x8
0000c998(12): MOV qword ptr [0x90 + RSP],0x1
0000c9a4(12): MOV qword ptr [0x98 + RSP],0x1
0000c9b0(5): CALL 0x00001b00
0000c9b5(3): TEST RAX,RAX
0000c9b8(8): MOV qword ptr [0xa0 + RSP],RAX
0000c9c0(6): JZ 0x0000cc0b
0000c9c6(3): MOV qword ptr [RAX],RBX
0000c9c9(7): MOV ECX,dword ptr [0x110 + RSP]
0000c9d0(8): LEA RBX,[0x90 + RSP]
0000c9d8(5): MOV RDX,qword ptr [RSP + 0x48]
0000c9dd(5): MOV RDI,qword ptr [RSP + 0x30]
0000c9e2(3): MOV R12,RBP
0000c9e5(3): MOV RSI,RBX
0000c9e8(11): MOV dword ptr [0x88 + RSP],0x0
0000c9f3(5): CALL 0x00008490
0000c9f8(2): TEST EAX,EAX
0000c9fa(7): MOV dword ptr [0x88 + RSP],EAX
0000ca01(6): JZ 0x0000cb1d
0000ca07(2): JMP 0x0000ca60
0000ca10(2): TEST EAX,EAX
0000ca12(6): JNZ 0x0000c6e8
0000ca18(4): MOV RSI,qword ptr [R12]
0000ca1c(3): ADD RSI,R13
0000ca1f(5): JMP 0x0000c6d8
0000ca28(3): TEST RBP,RBP
0000ca2b(6): JNZ 0x0000c692
0000ca31(4): MOV RAX,qword ptr [RSP]
0000ca35(4): LEA RBX,[RAX + 0x1]
0000ca39(3): MOV R12,RBX
0000ca3c(5): JMP 0x0000c8a4
0000ca48(8): MOV RDI,qword ptr [0xc0 + RSP]
0000ca50(5): CALL 0x000018d0
0000ca55(11): MOV dword ptr [0x88 + RSP],0xc
0000ca60(8): MOV RDI,qword ptr [0xa0 + RSP]
0000ca68(5): CALL 0x000018d0
0000ca6d(7): MOV EAX,dword ptr [0x88 + RSP]
0000ca74(8): MOV RBX,qword ptr [0xc8 + RSP]
0000ca7c(9): XOR RBX,qword ptr FS:[0x28]
0000ca85(6): JNZ 0x0000cc3c
0000ca8b(7): ADD RSP,0xd8
0000ca92(1): POP RBX
0000ca93(1): POP RBP
0000ca94(2): POP R12
0000ca96(2): POP R13
0000ca98(2): POP R14
0000ca9a(2): POP R15
0000ca9c(1): RET
0000caa0(8): MOV RDI,qword ptr [0xc0 + RSP]
0000caa8(5): CALL 0x000018d0
0000caad(11): MOV dword ptr [0x88 + RSP],0x0
0000cab8(5): JMP 0x0000c838
0000cac0(7): MOV EAX,dword ptr [0x88 + RSP]
0000cac7(2): TEST EAX,EAX
0000cac9(2): JNZ 0x0000ca60
0000cacb(7): MOV RAX,qword ptr [0xb8 + R15]
0000cad2(5): MOV RDX,qword ptr [RSP + 0x10]
0000cad7(6): ADD qword ptr [RSP + 0x20],0x1
0000cadd(8): MOV qword ptr [RAX + RDX*0x1],0x0
0000cae5(5): JMP 0x0000c8f5
0000caf0(8): LEA RBX,[0x90 + RSP]
0000caf8(4): LEA RSI,[RBP + 0x8]
0000cafc(3): MOV RDI,RBX
0000caff(5): CALL 0x00008c40
0000cb04(2): TEST EAX,EAX
0000cb06(7): MOV dword ptr [0x88 + RSP],EAX
0000cb0d(6): JNZ 0x0000ca74
0000cb13(4): TEST byte ptr [RBP + 0x68],0x40
0000cb17(6): JZ 0x0000c5ec
0000cb1d(9): CMP qword ptr [0x98 + RSP],0x0
0000cb26(2): JZ 0x0000cb52
0000cb28(8): MOV R8D,dword ptr [0x110 + RSP]
0000cb30(5): MOV RCX,qword ptr [RSP + 0x48]
0000cb35(3): MOV RDX,R12
0000cb38(3): MOV RSI,RBX
0000cb3b(3): MOV RDI,R15
0000cb3e(5): CALL 0x000093d0
0000cb43(2): TEST EAX,EAX
0000cb45(7): MOV dword ptr [0x88 + RSP],EAX
0000cb4c(6): JNZ 0x0000ca60
0000cb52(5): MOV RSI,qword ptr [RSP + 0x30]
0000cb57(8): LEA RDI,[0x88 + RSP]
0000cb5f(3): MOV ECX,R13D
0000cb62(3): MOV RDX,RBX
0000cb65(5): CALL 0x00008e30
0000cb6a(3): TEST RAX,RAX
0000cb6d(3): MOV RBP,RAX
0000cb70(6): JZ 0x0000cbf7
0000cb76(7): MOV RAX,qword ptr [0xb8 + R15]
0000cb7d(4): MOV qword ptr [RAX + R12*0x8],RBP
0000cb81(5): JMP 0x0000c5ec
0000cb86(4): LEA R12,[RAX + 0x1]
0000cb8a(10): MOV RAX,0x7fffffffffffffff
0000cb94(3): SUB RAX,R13
0000cb97(3): CMP RAX,R12
0000cb9a(2): JL 0x0000cc0b
0000cb9c(5): LEA R14,[R13 + R12*0x1]
0000cba1(10): MOV RAX,0x1fffffffffffffff
0000cbab(3): CMP R14,RAX
0000cbae(2): JA 0x0000cc0b
0000cbb0(5): MOV RAX,qword ptr [RSP + 0x60]
0000cbb5(8): LEA RSI,[R14*0x8]
0000cbbd(4): MOV RDI,qword ptr [RAX + 0x10]
0000cbc1(5): CALL 0x00001b60
0000cbc6(3): TEST RAX,RAX
0000cbc9(2): JZ 0x0000cc0b
0000cbcb(5): MOV RCX,qword ptr [RSP + 0x60]
0000cbd0(8): LEA RDX,[R12*0x8]
0000cbd8(4): LEA RDI,[RAX + R13*0x8]
0000cbdc(2): XOR ESI,ESI
0000cbde(4): MOV qword ptr [RCX + 0x10],RAX
0000cbe2(4): MOV qword ptr [RCX + 0x8],R14
0000cbe6(5): CALL 0x00001a60
0000cbeb(5): JMP 0x0000c56c
0000cbf0(2): XOR EDI,EDI
0000cbf2(5): JMP 0x0000caa8
0000cbf7(7): MOV ESI,dword ptr [0x88 + RSP]
0000cbfe(2): TEST ESI,ESI
0000cc00(6): JZ 0x0000cb76
0000cc06(5): JMP 0x0000ca60
0000cc0b(5): MOV EAX,0xc
0000cc10(5): JMP 0x0000ca74
0000cc15(5): MOV RAX,qword ptr [RSP + 0x60]
0000cc1a(3): MOV qword ptr [RAX],R12
0000cc1d(5): MOV RAX,qword ptr [RSP + 0x68]
0000cc22(7): MOV qword ptr [0xb8 + R15],RAX
0000cc29(5): MOV RAX,qword ptr [RSP + 0x70]
0000cc2e(4): MOV qword ptr [R15 + 0x48],RAX
0000cc32(5): MOV EAX,0x1
0000cc37(5): JMP 0x0000ca74
0000cc3c(5): CALL 0x000019e0
0000cc41(5): NOP dword ptr [RAX + RAX*0x1]
0000cc46(10): NOP word ptr CS:[RAX + RAX*0x1]
0000cc50(1): PUSH RBP
0000cc51(3): MOV RBP,RSP
0000cc54(2): PUSH R15
0000cc56(2): PUSH R14
0000cc58(2): PUSH R13
0000cc5a(2): PUSH R12
0000cc5c(3): MOV R13,RCX
0000cc5f(1): PUSH RBX
0000cc60(3): MOV R12,RSI
0000cc63(7): SUB RSP,0xb8
0000cc6a(7): MOV qword ptr [-0x98 + RBP],RDX
0000cc71(8): MOV qword ptr [RBP + -0x50],0x0
0000cc79(9): MOV RAX,qword ptr FS:[0x28]
0000cc82(4): MOV qword ptr [RBP + -0x38],RAX
0000cc86(2): XOR EAX,EAX
0000cc88(3): MOV RAX,qword ptr [RDI]
0000cc8b(3): TEST R8B,R8B
0000cc8e(8): MOV qword ptr [RBP + -0x48],0x2
0000cc96(8): MOV qword ptr [RBP + -0x40],0x0
0000cc9e(7): MOV qword ptr [-0x90 + RBP],RAX
0000cca5(6): JZ 0x0000d44d
0000ccab(5): MOV EDI,0x60
0000ccb0(5): CALL 0x00001b00
0000ccb5(4): LEA RCX,[RBP + -0x50]
0000ccb9(3): TEST RAX,RAX
0000ccbc(4): MOV qword ptr [RBP + -0x40],RAX
0000ccc0(7): MOV qword ptr [-0x88 + RBP],RCX
0000ccc7(6): JZ 0x0000d3ec
0000cccd(7): MOV RAX,qword ptr [-0x90 + RBP]
0000ccd4(4): PXOR XMM0,XMM0
0000ccd8(8): MOV qword ptr [RBP + -0x60],0x0
0000cce0(7): MOV RBX,qword ptr [0x90 + RAX]
0000cce7(7): MOV RAX,qword ptr [-0x98 + RBP]
0000ccee(4): MOVAPS xmmword ptr [RBP + -0x70],XMM0
0000ccf2(4): SHL RAX,0x4
0000ccf6(6): CMP RAX,0xfbf
0000ccfc(7): MOV qword ptr [-0xb8 + RBP],RAX
0000cd03(6): JA 0x0000d3f6
0000cd09(4): ADD RAX,0x10
0000cd0d(7): MOV byte ptr [-0xc9 + RBP],0x0
0000cd14(3): SUB RSP,RAX
0000cd17(5): LEA RAX,[RSP + 0xf]
0000cd1c(4): AND RAX,-0x10
0000cd20(7): MOV qword ptr [-0xc0 + RBP],RAX
0000cd27(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000cd2e(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000cd35(3): MOV RSI,R13
0000cd38(5): CALL 0x00001ad0
0000cd3d(4): LEA RAX,[RBP + -0x70]
0000cd41(4): MOV RCX,qword ptr [R13]
0000cd45(7): MOV qword ptr [-0xa8 + RBP],RAX
0000cd4c(4): ADD RAX,0x10
0000cd50(4): MOV qword ptr [RBP + -0x78],RCX
0000cd54(7): MOV qword ptr [-0xc8 + RBP],RAX
0000cd5b(4): LEA RAX,[RBP + -0x78]
0000cd5f(7): MOV qword ptr [-0xb0 + RBP],RAX
0000cd66(5): JMP 0x0000ce49
0000cd70(3): CMP ESI,0x9
0000cd73(6): JZ 0x0000cf60
0000cd79(3): CMP RAX,RCX
0000cd7c(2): JNZ 0x0000cd8c
0000cd7e(8): CMP qword ptr [0xb0 + R12],RBX
0000cd86(6): JZ 0x0000d160
0000cd8c(8): MOV R14,qword ptr [0x98 + R12]
0000cd94(3): MOV RDI,qword ptr [R14]
0000cd97(4): LEA RSI,[RDI + R9*0x1]
0000cd9b(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000cd9f(2): TEST AL,0x8
0000cda1(6): JNZ 0x0000ceb0
0000cda7(4): TEST byte ptr [RSI + 0xa],0x10
0000cdab(6): JNZ 0x0000cfb0
0000cdb1(2): CMP AL,0x4
0000cdb3(6): JZ 0x0000cff0
0000cdb9(4): MOV RCX,qword ptr [RBP + -0x78]
0000cdbd(3): MOV RDX,RCX
0000cdc0(3): MOV RDI,R12
0000cdc3(7): MOV qword ptr [-0xa0 + RBP],RCX
0000cdca(5): CALL 0x000099b0
0000cdcf(2): TEST AL,AL
0000cdd1(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000cdd8(6): JZ 0x0000d228
0000cdde(4): MOV RAX,qword ptr [R14 + 0x18]
0000cde2(4): LEA RDX,[RCX + 0x1]
0000cde6(4): MOV RBX,qword ptr [RAX + R15*0x8]
0000cdea(8): CMP qword ptr [-0x88 + RBP],0x0
0000cdf2(4): MOV qword ptr [RBP + -0x78],RDX
0000cdf6(2): JZ 0x0000ce34
0000cdf8(8): CMP RDX,qword ptr [0xa8 + R12]
0000ce00(6): JG 0x0000d236
0000ce06(8): MOV RAX,qword ptr [0xb8 + R12]
0000ce0e(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000ce12(3): TEST RAX,RAX
0000ce15(6): JZ 0x0000d236
0000ce1b(4): MOV RDI,qword ptr [RAX + 0x10]
0000ce1f(4): LEA RSI,[RAX + 0x18]
0000ce23(3): MOV RDX,RBX
0000ce26(5): CALL 0x00007ae0
0000ce2b(3): TEST RAX,RAX
0000ce2e(6): JZ 0x0000d236
0000ce34(8): MOV qword ptr [RBP + -0x68],0x0
0000ce3c(3): TEST RBX,RBX
0000ce3f(6): JS 0x0000d21a
0000ce45(4): MOV RCX,qword ptr [RBP + -0x78]
0000ce49(4): MOV RAX,qword ptr [R13 + 0x8]
0000ce4d(3): CMP RAX,RCX
0000ce50(6): JL 0x0000d340
0000ce56(7): MOV RDI,qword ptr [-0x90 + RBP]
0000ce5d(3): MOV R9,RBX
0000ce60(3): MOV R15,RBX
0000ce63(4): SHL R9,0x4
0000ce67(3): MOV RDX,qword ptr [RDI]
0000ce6a(3): ADD RDX,R9
0000ce6d(4): MOVZX ESI,byte ptr [RDX + 0x8]
0000ce71(3): CMP ESI,0x8
0000ce74(6): JNZ 0x0000cd70
0000ce7a(3): MOV RDX,qword ptr [RDX]
0000ce7d(4): ADD RDX,0x1
0000ce81(7): CMP qword ptr [-0x98 + RBP],RDX
0000ce88(6): JLE 0x0000cd79
0000ce8e(4): SHL RDX,0x4
0000ce92(3): ADD RDX,R13
0000ce95(8): MOV qword ptr [RDX + 0x8],-0x1
0000ce9d(3): MOV qword ptr [RDX],RCX
0000cea0(4): MOV RAX,qword ptr [R13 + 0x8]
0000cea4(5): JMP 0x0000cd79
0000ceb0(8): MOV RAX,qword ptr [0xb8 + R12]
0000ceb8(4): MOV RDX,qword ptr [RBP + -0x78]
0000cebc(3): MOV RSI,RBX
0000cebf(7): MOV RDI,qword ptr [-0xa8 + RBP]
0000cec6(4): MOV R9,qword ptr [RAX + RDX*0x8]
0000ceca(4): MOV RAX,qword ptr [R14 + 0x28]
0000cece(4): LEA RDX,[RBX + RBX*0x2]
0000ced2(7): MOV qword ptr [-0xa0 + RBP],R9
0000ced9(4): LEA R15,[RAX + RDX*0x8]
0000cedd(5): CALL 0x000065a0
0000cee2(2): TEST AL,AL
0000cee4(7): MOV R9,qword ptr [-0xa0 + RBP]
0000ceeb(6): JZ 0x0000d3c8
0000cef1(4): MOV R10,qword ptr [R15 + 0x8]
0000cef5(3): TEST R10,R10
0000cef8(6): JLE 0x0000d228
0000cefe(4): MOV R15,qword ptr [R15 + 0x10]
0000cf02(4): MOV R11,qword ptr [R9 + 0x10]
0000cf06(4): LEA R14,[R9 + 0x18]
0000cf0a(7): MOV RBX,-0x1
0000cf11(3): XOR R9D,R9D
0000cf14(7): MOV qword ptr [-0xa0 + RBP],R12
0000cf1b(5): NOP dword ptr [RAX + RAX*0x1]
0000cf20(4): MOV R12,qword ptr [R15 + R9*0x8]
0000cf24(3): MOV RSI,R14
0000cf27(3): MOV RDI,R11
0000cf2a(3): MOV RDX,R12
0000cf2d(5): CALL 0x00007ae0
0000cf32(3): TEST RAX,RAX
0000cf35(2): JZ 0x0000cf44
0000cf37(4): CMP RBX,-0x1
0000cf3b(6): JNZ 0x0000d090
0000cf41(3): MOV RBX,R12
0000cf44(4): ADD R9,0x1
0000cf48(3): CMP R10,R9
0000cf4b(2): JNZ 0x0000cf20
0000cf4d(7): MOV R12,qword ptr [-0xa0 + RBP]
0000cf54(5): JMP 0x0000ce3c
0000cf60(3): MOV RDI,qword ptr [RDX]
0000cf63(4): LEA RSI,[RDI + 0x1]
0000cf67(7): CMP qword ptr [-0x98 + RBP],RSI
0000cf6e(6): JLE 0x0000cd79
0000cf74(4): SHL RSI,0x4
0000cf78(5): LEA RAX,[R13 + RSI*0x1]
0000cf7d(3): CMP qword ptr [RAX],RCX
0000cf80(6): JL 0x0000d300
0000cf86(4): TEST byte ptr [RDX + 0xa],0x8
0000cf8a(2): JZ 0x0000cf9e
0000cf8c(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000cf93(5): CMP qword ptr [RDI + RSI*0x1],-0x1
0000cf98(6): JNZ 0x0000d38b
0000cf9e(4): MOV qword ptr [RAX + 0x8],RCX
0000cfa2(4): MOV RAX,qword ptr [R13 + 0x8]
0000cfa6(5): JMP 0x0000cd79
0000cfb0(4): MOV R8,qword ptr [RBP + -0x78]
0000cfb4(7): LEA RSI,[0xd8 + R14]
0000cfbb(3): MOV RCX,R12
0000cfbe(3): MOV RDX,RBX
0000cfc1(7): MOV qword ptr [-0xa0 + RBP],R9
0000cfc8(5): CALL 0x0000c290
0000cfcd(3): MOVSXD RCX,EAX
0000cfd0(3): TEST RCX,RCX
0000cfd3(6): JNZ 0x0000d1d1
0000cfd9(7): MOV R9,qword ptr [-0xa0 + RBP]
0000cfe0(3): MOV RSI,qword ptr [R14]
0000cfe3(4): MOV RCX,qword ptr [RBP + -0x78]
0000cfe7(3): ADD RSI,R9
0000cfea(5): JMP 0x0000cdbd
0000cff0(3): MOV RAX,qword ptr [RSI]
0000cff3(4): ADD RAX,0x1
0000cff7(4): SHL RAX,0x4
0000cffb(3): ADD RAX,R13
0000cffe(4): MOV RDX,qword ptr [RAX + 0x8]
0000d002(3): MOV RDI,qword ptr [RAX]
0000d005(3): MOV RCX,RDX
0000d008(3): SUB RCX,RDI
0000d00b(8): CMP qword ptr [-0x88 + RBP],0x0
0000d013(6): JZ 0x0000d1c8
0000d019(4): CMP RDI,-0x1
0000d01d(6): JZ 0x0000d236
0000d023(4): CMP RDX,-0x1
0000d027(6): JZ 0x0000d236
0000d02d(3): TEST RCX,RCX
0000d030(6): JZ 0x0000d280
0000d036(4): MOV R15,qword ptr [RBP + -0x78]
0000d03a(5): MOV RDX,qword ptr [R12 + 0x30]
0000d03f(5): MOV RAX,qword ptr [R12 + 0x8]
0000d044(3): SUB RDX,R15
0000d047(3): CMP RCX,RDX
0000d04a(6): JG 0x0000d236
0000d050(4): LEA RSI,[RAX + R15*0x1]
0000d054(3): ADD RDI,RAX
0000d057(3): MOV RDX,RCX
0000d05a(7): MOV qword ptr [-0xa0 + RBP],RCX
0000d061(5): CALL 0x00001a80
0000d066(2): TEST EAX,EAX
0000d068(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000d06f(6): JNZ 0x0000d236
0000d075(4): MOV RAX,qword ptr [R14 + 0x18]
0000d079(4): LEA RDX,[R15 + RCX*0x1]
0000d07d(4): MOV RBX,qword ptr [RAX + RBX*0x8]
0000d081(5): JMP 0x0000cdea
0000d090(7): MOV RSI,qword ptr [-0xc8 + RBP]
0000d097(4): MOV RDI,qword ptr [RBP + -0x68]
0000d09b(3): MOV RDX,RBX
0000d09e(3): MOV R14,R12
0000d0a1(7): MOV R12,qword ptr [-0xa0 + RBP]
0000d0a8(5): CALL 0x00007ae0
0000d0ad(3): TEST RAX,RAX
0000d0b0(6): JNZ 0x0000d270
0000d0b6(7): MOV RCX,qword ptr [-0x88 + RBP]
0000d0bd(3): TEST RCX,RCX
0000d0c0(6): JZ 0x0000ce3c
0000d0c6(3): MOV R15,qword ptr [RCX]
0000d0c9(4): MOV RDX,qword ptr [RBP + -0x78]
0000d0cd(4): LEA RAX,[R15 + 0x1]
0000d0d1(4): CMP RAX,qword ptr [RCX + 0x8]
0000d0d5(3): MOV qword ptr [RCX],RAX
0000d0d8(6): JZ 0x0000d45d
0000d0de(4): MOV RAX,qword ptr [RCX + 0x10]
0000d0e2(4): LEA R15,[R15 + R15*0x2]
0000d0e6(4): SHL R15,0x4
0000d0ea(3): ADD R15,RAX
0000d0ed(4): MOV qword ptr [R15 + 0x8],R14
0000d0f1(7): MOV R14,qword ptr [-0xb8 + RBP]
0000d0f8(3): MOV qword ptr [R15],RDX
0000d0fb(3): MOV RDI,R14
0000d0fe(5): CALL 0x00001b00
0000d103(3): TEST RAX,RAX
0000d106(4): MOV qword ptr [R15 + 0x10],RAX
0000d10a(2): JZ 0x0000d132
0000d10c(3): MOV RDX,R14
0000d10f(3): MOV RSI,R13
0000d112(3): MOV RDI,RAX
0000d115(5): CALL 0x00001ad0
0000d11a(7): MOV RSI,qword ptr [-0xa8 + RBP]
0000d121(4): LEA RDI,[R15 + 0x18]
0000d125(5): CALL 0x00008c40
0000d12a(2): TEST EAX,EAX
0000d12c(6): JZ 0x0000ce3c
0000d132(4): MOV RDI,qword ptr [RBP + -0x60]
0000d136(5): CALL 0x000018d0
0000d13b(7): CMP byte ptr [-0xc9 + RBP],0x0
0000d142(6): JNZ 0x0000d4db
0000d148(7): MOV RDI,qword ptr [-0x88 + RBP]
0000d14f(5): CALL 0x0000b1a0
0000d154(5): MOV EAX,0xc
0000d159(5): JMP 0x0000d369
0000d160(8): CMP qword ptr [-0x88 + RBP],0x0
0000d168(6): JZ 0x0000d49c
0000d16e(7): MOV RCX,qword ptr [-0x98 + RBP]
0000d175(3): TEST RCX,RCX
0000d178(2): JZ 0x0000d19a
0000d17a(3): MOV RAX,R13
0000d17d(2): XOR EDX,EDX
0000d17f(1): NOP
0000d180(4): CMP qword ptr [RAX],0x0
0000d184(2): JS 0x0000d18d
0000d186(5): CMP qword ptr [RAX + 0x8],-0x1
0000d18b(2): JZ 0x0000d1e0
0000d18d(4): ADD RDX,0x1
0000d191(4): ADD RAX,0x10
0000d195(3): CMP RCX,RDX
0000d198(2): JNZ 0x0000d180
0000d19a(4): MOV RDI,qword ptr [RBP + -0x60]
0000d19e(5): CALL 0x000018d0
0000d1a3(7): CMP byte ptr [-0xc9 + RBP],0x0
0000d1aa(6): JNZ 0x0000d524
0000d1b0(7): MOV RDI,qword ptr [-0x88 + RBP]
0000d1b7(5): CALL 0x0000b1a0
0000d1bc(2): XOR EAX,EAX
0000d1be(5): JMP 0x0000d369
0000d1c8(3): TEST RCX,RCX
0000d1cb(6): JZ 0x0000d280
0000d1d1(4): MOV R15,qword ptr [RBP + -0x78]
0000d1d5(5): JMP 0x0000d075
0000d1e0(7): MOV RDI,qword ptr [-0x88 + RBP]
0000d1e7(7): MOV R9,qword ptr [-0xa8 + RBP]
0000d1ee(3): MOV R8,R13
0000d1f1(7): MOV RCX,qword ptr [-0x98 + RBP]
0000d1f8(7): MOV RDX,qword ptr [-0xb0 + RBP]
0000d1ff(4): LEA RSI,[RDI + 0x10]
0000d203(5): CALL 0x0000b1f0
0000d208(3): MOV R9,RAX
0000d20b(3): MOV RBX,RAX
0000d20e(3): MOV R15,RAX
0000d211(4): SHL R9,0x4
0000d215(5): JMP 0x0000cd8c
0000d21a(4): CMP RBX,-0x2
0000d21e(6): JZ 0x0000d3c8
0000d224(4): NOP dword ptr [RAX]
0000d228(8): CMP qword ptr [-0x88 + RBP],0x0
0000d230(6): JZ 0x0000d4ec
0000d236(7): MOV RDI,qword ptr [-0x88 + RBP]
0000d23d(7): MOV RCX,qword ptr [-0x98 + RBP]
0000d244(4): LEA RDX,[RBP + -0x78]
0000d248(7): MOV R9,qword ptr [-0xa8 + RBP]
0000d24f(3): MOV R8,R13
0000d252(4): LEA RSI,[RDI + 0x10]
0000d256(5): CALL 0x0000b1f0
0000d25b(4): MOV RCX,qword ptr [RBP + -0x78]
0000d25f(3): MOV RBX,RAX
0000d262(5): JMP 0x0000cd5b
0000d270(3): MOV RBX,R14
0000d273(5): JMP 0x0000ce3c
0000d280(7): MOV RDI,qword ptr [-0xa8 + RBP]
0000d287(3): MOV RSI,RBX
0000d28a(7): MOV qword ptr [-0xa0 + RBP],R9
0000d291(5): CALL 0x000065a0
0000d296(2): TEST AL,AL
0000d298(6): JZ 0x0000d3c8
0000d29e(4): MOV RDX,qword ptr [R14 + 0x28]
0000d2a2(4): LEA RAX,[RBX + RBX*0x2]
0000d2a6(4): MOV RCX,qword ptr [RBP + -0x78]
0000d2aa(4): LEA RAX,[RDX + RAX*0x8]
0000d2ae(7): MOV qword ptr [-0xd8 + RBP],RCX
0000d2b5(4): MOV RAX,qword ptr [RAX + 0x10]
0000d2b9(3): MOV RBX,qword ptr [RAX]
0000d2bc(8): MOV RAX,qword ptr [0xb8 + R12]
0000d2c4(4): MOV RAX,qword ptr [RAX + RCX*0x8]
0000d2c8(3): MOV RDX,RBX
0000d2cb(4): MOV RDI,qword ptr [RAX + 0x10]
0000d2cf(4): LEA RSI,[RAX + 0x18]
0000d2d3(5): CALL 0x00007ae0
0000d2d8(3): TEST RAX,RAX
0000d2db(6): JNZ 0x0000ce3c
0000d2e1(7): MOV R9,qword ptr [-0xa0 + RBP]
0000d2e8(3): MOV RSI,qword ptr [R14]
0000d2eb(7): MOV RCX,qword ptr [-0xd8 + RBP]
0000d2f2(3): ADD RSI,R9
0000d2f5(5): JMP 0x0000cdbd
0000d300(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000d307(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000d30e(3): MOV RSI,R13
0000d311(4): MOV qword ptr [RAX + 0x8],RCX
0000d315(7): MOV qword ptr [-0xd8 + RBP],R9
0000d31c(7): MOV qword ptr [-0xa0 + RBP],RCX
0000d323(5): CALL 0x00001ad0
0000d328(4): MOV RAX,qword ptr [R13 + 0x8]
0000d32c(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000d333(7): MOV R9,qword ptr [-0xd8 + RBP]
0000d33a(5): JMP 0x0000cd79
0000d340(4): MOV RDI,qword ptr [RBP + -0x60]
0000d344(5): CALL 0x000018d0
0000d349(7): CMP byte ptr [-0xc9 + RBP],0x0
0000d350(6): JNZ 0x0000d42c
0000d356(7): MOV RDI,qword ptr [-0x88 + RBP]
0000d35d(3): TEST RDI,RDI
0000d360(2): JZ 0x0000d367
0000d362(5): CALL 0x0000b1a0
0000d367(2): XOR EAX,EAX
0000d369(4): MOV RBX,qword ptr [RBP + -0x38]
0000d36d(9): XOR RBX,qword ptr FS:[0x28]
0000d376(6): JNZ 0x0000d535
0000d37c(4): LEA RSP,[RBP + -0x28]
0000d380(1): POP RBX
0000d381(2): POP R12
0000d383(2): POP R13
0000d385(2): POP R14
0000d387(2): POP R15
0000d389(1): POP RBP
0000d38a(1): RET
0000d38b(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000d392(3): MOV RSI,RDI
0000d395(3): MOV RDI,R13
0000d398(7): MOV qword ptr [-0xd8 + RBP],RCX
0000d39f(7): MOV qword ptr [-0xa0 + RBP],R9
0000d3a6(5): CALL 0x00001ad0
0000d3ab(4): MOV RAX,qword ptr [R13 + 0x8]
0000d3af(7): MOV R9,qword ptr [-0xa0 + RBP]
0000d3b6(7): MOV RCX,qword ptr [-0xd8 + RBP]
0000d3bd(5): JMP 0x0000cd79
0000d3c8(4): MOV RDI,qword ptr [RBP + -0x60]
0000d3cc(5): CALL 0x000018d0
0000d3d1(7): CMP byte ptr [-0xc9 + RBP],0x0
0000d3d8(6): JNZ 0x0000d4db
0000d3de(8): CMP qword ptr [-0x88 + RBP],0x0
0000d3e6(6): JNZ 0x0000d148
0000d3ec(5): MOV EAX,0xc
0000d3f1(5): JMP 0x0000d369
0000d3f6(7): MOV RDI,qword ptr [-0xb8 + RBP]
0000d3fd(5): CALL 0x00001b00
0000d402(3): TEST RAX,RAX
0000d405(7): MOV qword ptr [-0xc0 + RBP],RAX
0000d40c(7): MOV byte ptr [-0xc9 + RBP],0x1
0000d413(6): JNZ 0x0000cd27
0000d419(7): MOV RDI,qword ptr [-0x88 + RBP]
0000d420(3): TEST RDI,RDI
0000d423(2): JZ 0x0000d3ec
0000d425(5): CALL 0x0000b1a0
0000d42a(2): JMP 0x0000d3ec
0000d42c(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000d433(5): CALL 0x000018d0
0000d438(7): MOV RDI,qword ptr [-0x88 + RBP]
0000d43f(3): TEST RDI,RDI
0000d442(6): JNZ 0x0000d362
0000d448(5): JMP 0x0000d367
0000d44d(11): MOV qword ptr [-0x88 + RBP],0x0
0000d458(5): JMP 0x0000cccd
0000d45d(4): LEA RSI,[RAX + RAX*0x2]
0000d461(7): MOV RAX,qword ptr [-0x88 + RBP]
0000d468(7): MOV qword ptr [-0xa0 + RBP],RDX
0000d46f(4): SHL RSI,0x5
0000d473(4): MOV RDI,qword ptr [RAX + 0x10]
0000d477(5): CALL 0x00001b60
0000d47c(3): TEST RAX,RAX
0000d47f(2): JZ 0x0000d4c5
0000d481(7): MOV RCX,qword ptr [-0x88 + RBP]
0000d488(7): MOV RDX,qword ptr [-0xa0 + RBP]
0000d48f(4): SHL qword ptr [RCX + 0x8],1
0000d493(4): MOV qword ptr [RCX + 0x10],RAX
0000d497(5): JMP 0x0000d0e2
0000d49c(4): MOV RDI,qword ptr [RBP + -0x60]
0000d4a0(5): CALL 0x000018d0
0000d4a5(7): CMP byte ptr [-0xc9 + RBP],0x0
0000d4ac(6): JZ 0x0000d367
0000d4b2(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000d4b9(5): CALL 0x000018d0
0000d4be(2): XOR EAX,EAX
0000d4c0(5): JMP 0x0000d369
0000d4c5(4): MOV RDI,qword ptr [RBP + -0x60]
0000d4c9(5): CALL 0x000018d0
0000d4ce(7): CMP byte ptr [-0xc9 + RBP],0x0
0000d4d5(6): JZ 0x0000d148
0000d4db(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000d4e2(5): CALL 0x000018d0
0000d4e7(5): JMP 0x0000d3de
0000d4ec(4): MOV RDI,qword ptr [RBP + -0x60]
0000d4f0(5): CALL 0x000018d0
0000d4f5(7): CMP byte ptr [-0xc9 + RBP],0x0
0000d4fc(5): MOV EAX,0x1
0000d501(6): JZ 0x0000d369
0000d507(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000d50e(6): MOV dword ptr [-0x88 + RBP],EAX
0000d514(5): CALL 0x000018d0
0000d519(6): MOV EAX,dword ptr [-0x88 + RBP]
0000d51f(5): JMP 0x0000d369
0000d524(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000d52b(5): CALL 0x000018d0
0000d530(5): JMP 0x0000d1b0
0000d535(5): CALL 0x000019e0
0000d53a(6): NOP word ptr [RAX + RAX*0x1]
0000d540(2): PUSH R15
0000d542(2): PUSH R14
0000d544(3): MOV R14,RCX
0000d547(2): PUSH R13
0000d549(2): PUSH R12
0000d54b(3): MOV R13,RSI
0000d54e(1): PUSH RBP
0000d54f(1): PUSH RBX
0000d550(4): LEA RSI,[RDX + 0x10]
0000d554(3): MOV RBP,RDX
0000d557(3): MOV R9,R8
0000d55a(3): MOV R12,R8
0000d55d(4): SUB RSP,0x20
0000d561(4): MOV RCX,qword ptr [RDX + 0x8]
0000d565(3): MOV R8,R14
0000d568(2): PUSH 0x8
0000d56a(3): MOV RDX,qword ptr [RDX]
0000d56d(3): MOV RBX,RDI
0000d570(5): CALL 0x0000c4f0
0000d575(2): TEST EAX,EAX
0000d577(1): POP RDX
0000d578(1): POP RCX
0000d579(2): JZ 0x0000d590
0000d57b(4): ADD RSP,0x18
0000d57f(1): POP RBX
0000d580(1): POP RBP
0000d581(2): POP R12
0000d583(2): POP R13
0000d585(2): POP R14
0000d587(2): POP R15
0000d589(1): RET
0000d590(7): MOV RAX,qword ptr [0xc8 + RBX]
0000d597(7): MOV RDX,qword ptr [0xd0 + RBX]
0000d59e(4): MOV R15,qword ptr [RBP + 0x8]
0000d5a2(4): MOV RCX,qword ptr [R13]
0000d5a6(7): MOV RDI,qword ptr [0xd8 + RBX]
0000d5ad(3): CMP RAX,RDX
0000d5b0(3): MOV RSI,R15
0000d5b3(6): JGE 0x0000d650
0000d5b9(4): LEA RDX,[RAX + RAX*0x4]
0000d5bd(4): SHL RDX,0x3
0000d5c1(3): TEST RAX,RAX
0000d5c4(2): JLE 0x0000d5d1
0000d5c6(5): LEA R8,[RDI + RDX*0x1 + -0x28]
0000d5cb(4): CMP R12,qword ptr [R8 + 0x8]
0000d5cf(2): JZ 0x0000d640
0000d5d1(3): ADD RDI,RDX
0000d5d4(2): XOR EDX,EDX
0000d5d6(3): CMP R15,RCX
0000d5d9(3): SETZ DL
0000d5dc(4): ADD RAX,0x1
0000d5e0(3): MOV qword ptr [RDI],R14
0000d5e3(2): NEG EDX
0000d5e5(4): MOV qword ptr [RDI + 0x8],R12
0000d5e9(4): MOV qword ptr [RDI + 0x10],RCX
0000d5ed(4): MOV word ptr [RDI + 0x22],DX
0000d5f1(4): MOV qword ptr [RDI + 0x18],R15
0000d5f5(7): MOV qword ptr [0xc8 + RBX],RAX
0000d5fc(4): MOV byte ptr [RDI + 0x20],0x0
0000d600(3): MOV RAX,R15
0000d603(7): MOVSXD RDX,dword ptr [0xe0 + RBX]
0000d60a(3): SUB RAX,RCX
0000d60d(3): CMP RDX,RAX
0000d610(2): JGE 0x0000d61c
0000d612(3): SUB R15D,ECX
0000d615(7): MOV dword ptr [0xe0 + RBX],R15D
0000d61c(3): ADD RSI,R12
0000d61f(4): SUB RSI,qword ptr [R13]
0000d623(4): ADD RSP,0x18
0000d627(3): MOV RDI,RBX
0000d62a(1): POP RBX
0000d62b(1): POP RBP
0000d62c(2): POP R12
0000d62e(2): POP R13
0000d630(2): POP R14
0000d632(2): POP R15
0000d634(5): JMP 0x00007170
0000d640(5): MOV byte ptr [R8 + 0x20],0x1
0000d645(2): JMP 0x0000d5d1
0000d650(4): LEA RSI,[RDX + RDX*0x4]
0000d654(5): MOV qword ptr [RSP + 0x8],RCX
0000d659(4): SHL RSI,0x4
0000d65d(5): CALL 0x00001b60
0000d662(3): TEST RAX,RAX
0000d665(5): MOV RCX,qword ptr [RSP + 0x8]
0000d66a(2): JZ 0x0000d6c0
0000d66c(7): MOV RSI,qword ptr [0xc8 + RBX]
0000d673(7): MOV RDX,qword ptr [0xd0 + RBX]
0000d67a(7): MOV qword ptr [0xd8 + RBX],RAX
0000d681(5): MOV qword ptr [RSP + 0x8],RCX
0000d686(4): LEA RSI,[RSI + RSI*0x4]
0000d68a(4): LEA RDX,[RDX + RDX*0x4]
0000d68e(4): LEA RDI,[RAX + RSI*0x8]
0000d692(4): SHL RDX,0x3
0000d696(2): XOR ESI,ESI
0000d698(5): CALL 0x00001a60
0000d69d(7): SHL qword ptr [0xd0 + RBX],1
0000d6a4(7): MOV RAX,qword ptr [0xc8 + RBX]
0000d6ab(7): MOV RDI,qword ptr [0xd8 + RBX]
0000d6b2(4): MOV RSI,qword ptr [RBP + 0x8]
0000d6b6(5): MOV RCX,qword ptr [RSP + 0x8]
0000d6bb(5): JMP 0x0000d5b9
0000d6c0(7): MOV RDI,qword ptr [0xd8 + RBX]
0000d6c7(5): CALL 0x000018d0
0000d6cc(5): MOV EAX,0xc
0000d6d1(5): JMP 0x0000d57b
0000d6e0(2): PUSH R15
0000d6e2(2): PUSH R14
0000d6e4(2): PUSH R13
0000d6e6(2): PUSH R12
0000d6e8(1): PUSH RBP
0000d6e9(1): PUSH RBX
0000d6ea(7): SUB RSP,0xb8
0000d6f1(4): MOV R15,qword ptr [RDI + 0x48]
0000d6f5(9): MOV RAX,qword ptr FS:[0x28]
0000d6fe(8): MOV qword ptr [0xa8 + RSP],RAX
0000d706(2): XOR EAX,EAX
0000d708(4): CMP qword ptr [RSI],0x0
0000d70c(7): MOV RAX,qword ptr [0x98 + RDI]
0000d713(5): MOV qword ptr [RSP + 0x48],RSI
0000d718(5): MOV qword ptr [RSP + 0x40],RDX
0000d71d(5): MOV qword ptr [RSP + 0x38],RAX
0000d722(6): JLE 0x0000da50
0000d728(8): LEA RAX,[R15*0x8]
0000d730(3): MOV R14,RDI
0000d733(8): MOV qword ptr [RSP],0x0
0000d73b(5): MOV qword ptr [RSP + 0x8],R15
0000d740(5): MOV qword ptr [RSP + 0x60],RAX
0000d745(8): LEA RAX,[0x90 + RSP]
0000d74d(5): MOV qword ptr [RSP + 0x68],RAX
0000d752(8): LEA RAX,[0x8c + RSP]
0000d75a(5): MOV qword ptr [RSP + 0x78],RAX
0000d75f(2): JMP 0x0000d7a7
0000d768(2): TEST AL,0x1
0000d76a(2): JZ 0x0000d790
0000d76c(3): AND EDX,0x8
0000d76f(2): JNZ 0x0000d790
0000d771(3): TEST CL,0x20
0000d774(2): JZ 0x0000d77a
0000d776(2): TEST AL,0x2
0000d778(2): JZ 0x0000d790
0000d77a(6): AND ECX,0x80
0000d780(6): JZ 0x0000d820
0000d786(2): TEST AL,0x8
0000d788(6): JNZ 0x0000d820
0000d78e(2): NOP
0000d790(5): MOV RDI,qword ptr [RSP + 0x48]
0000d795(5): ADD qword ptr [RSP],0x1
0000d79a(4): MOV RAX,qword ptr [RSP]
0000d79e(3): CMP RAX,qword ptr [RDI]
0000d7a1(6): JGE 0x0000da50
0000d7a7(5): MOV RAX,qword ptr [RSP + 0x40]
0000d7ac(4): MOV RDI,qword ptr [RSP]
0000d7b0(3): MOV RAX,qword ptr [RAX]
0000d7b3(4): MOV R13,qword ptr [RAX + RDI*0x8]
0000d7b7(5): MOV RDI,qword ptr [RSP + 0x38]
0000d7bc(3): MOV RAX,qword ptr [RDI]
0000d7bf(3): MOV RBX,R13
0000d7c2(4): SHL RBX,0x4
0000d7c6(3): ADD RAX,RBX
0000d7c9(4): CMP byte ptr [RAX + 0x8],0x4
0000d7cd(2): JNZ 0x0000d790
0000d7cf(3): MOV EBP,dword ptr [RAX + 0x8]
0000d7d2(6): TEST EBP,0x3ff00
0000d7d8(2): JZ 0x0000d820
0000d7da(7): MOV EDX,dword ptr [0xa0 + R14]
0000d7e1(5): MOV RSI,qword ptr [RSP + 0x8]
0000d7e6(3): MOV RDI,R14
0000d7e9(5): CALL 0x000098c0
0000d7ee(2): MOV EDX,EBP
0000d7f0(3): SHR EDX,0x8
0000d7f3(2): MOV ECX,EDX
0000d7f5(5): AND CX,0x3ff
0000d7fa(3): TEST DL,0x4
0000d7fd(6): JNZ 0x0000d768
0000d803(3): AND EDX,0x8
0000d806(6): JZ 0x0000d771
0000d80c(2): TEST AL,0x1
0000d80e(6): JZ 0x0000d771
0000d814(5): JMP 0x0000d790
0000d820(7): MOV RDI,qword ptr [0xc8 + R14]
0000d827(7): MOV RAX,qword ptr [0x98 + R14]
0000d82e(2): XOR ECX,ECX
0000d830(4): MOV R10,qword ptr [R14 + 0x8]
0000d834(5): MOV R9,qword ptr [RSP + 0x8]
0000d839(5): MOV qword ptr [RSP + 0x70],RDI
0000d83e(5): MOV qword ptr [RSP + 0x50],RAX
0000d843(3): CMP RCX,RDI
0000d846(2): JGE 0x0000d89b
0000d848(4): LEA RAX,[RCX + RDI*0x1]
0000d84c(7): MOV R11,qword ptr [0xd8 + R14]
0000d853(3): MOV RSI,RAX
0000d856(4): SHR RSI,0x3f
0000d85a(3): ADD RSI,RAX
0000d85d(3): SAR RSI,1
0000d860(4): LEA RAX,[RSI + RSI*0x4]
0000d864(5): CMP R9,qword ptr [R11 + RAX*0x8 + 0x8]
0000d869(2): JLE 0x0000d896
0000d86b(5): JMP 0x0000da38
0000d870(4): LEA RDX,[RSI + RCX*0x1]
0000d874(3): MOV RAX,RDX
0000d877(4): SHR RAX,0x3f
0000d87b(3): ADD RAX,RDX
0000d87e(3): SAR RAX,1
0000d881(4): LEA RDX,[RAX + RAX*0x4]
0000d885(3): MOV R8,RAX
0000d888(5): CMP R9,qword ptr [R11 + RDX*0x8 + 0x8]
0000d88d(6): JG 0x0000da40
0000d893(3): MOV RSI,RAX
0000d896(3): CMP RSI,RCX
0000d899(2): JG 0x0000d870
0000d89b(5): CMP qword ptr [RSP + 0x70],RCX
0000d8a0(2): JLE 0x0000d8c6
0000d8a2(7): MOV RDX,qword ptr [0xd8 + R14]
0000d8a9(4): LEA RAX,[RCX + RCX*0x4]
0000d8ad(5): MOV RDI,qword ptr [RSP + 0x8]
0000d8b2(4): LEA RAX,[RDX + RAX*0x8]
0000d8b6(4): CMP qword ptr [RAX + 0x8],RDI
0000d8ba(2): JNZ 0x0000d8c6
0000d8bc(4): CMP RCX,-0x1
0000d8c0(6): JNZ 0x0000da96
0000d8c6(5): MOV RAX,qword ptr [RSP + 0x50]
0000d8cb(8): CMP qword ptr [0xe8 + R14],0x0
0000d8d3(3): MOV RDX,qword ptr [RAX]
0000d8d6(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000d8da(5): MOV qword ptr [RSP + 0x58],RAX
0000d8df(6): JLE 0x0000da9b
0000d8e5(5): MOV qword ptr [RSP + 0x30],R13
0000d8ea(9): MOV qword ptr [RSP + 0x28],0x0
0000d8f3(3): MOV R13,R10
0000d8f6(7): MOV RAX,qword ptr [0xf8 + R14]
0000d8fd(5): MOV RBX,qword ptr [RSP + 0x28]
0000d902(5): MOV RDI,qword ptr [RSP + 0x58]
0000d907(4): MOV RBX,qword ptr [RAX + RBX*0x8]
0000d90b(4): MOV RAX,qword ptr [RBX + 0x8]
0000d90f(4): SHL RAX,0x4
0000d913(4): CMP RDI,qword ptr [RDX + RAX*0x1]
0000d917(2): JZ 0x0000d940
0000d919(6): ADD qword ptr [RSP + 0x28],0x1
0000d91f(5): MOV RAX,qword ptr [RSP + 0x28]
0000d924(7): CMP RAX,qword ptr [0xe8 + R14]
0000d92b(6): JGE 0x0000dfa1
0000d931(5): MOV RAX,qword ptr [RSP + 0x50]
0000d936(3): MOV RDX,qword ptr [RAX]
0000d939(2): JMP 0x0000d8f6
0000d940(5): CMP qword ptr [RBX + 0x20],0x0
0000d945(3): MOV R11,qword ptr [RBX]
0000d948(6): JLE 0x0000dfb2
0000d94e(5): MOV RCX,qword ptr [RSP + 0x8]
0000d953(3): MOV R8,R13
0000d956(2): XOR EBP,EBP
0000d958(3): MOV R13,RBX
0000d95b(3): MOV RBX,RCX
0000d95e(2): JMP 0x0000d9cc
0000d960(4): LEA RSI,[R8 + R11*0x1]
0000d964(4): LEA RDI,[R8 + RBX*0x1]
0000d968(5): MOV qword ptr [RSP + 0x20],R9
0000d96d(5): MOV qword ptr [RSP + 0x18],R11
0000d972(5): MOV qword ptr [RSP + 0x10],R8
0000d977(5): CALL 0x00001a80
0000d97c(2): TEST EAX,EAX
0000d97e(5): MOV R8,qword ptr [RSP + 0x10]
0000d983(5): MOV R11,qword ptr [RSP + 0x18]
0000d988(5): MOV R9,qword ptr [RSP + 0x20]
0000d98d(6): JNZ 0x0000de58
0000d993(5): MOV R8,qword ptr [RSP + 0x8]
0000d998(5): MOV RCX,qword ptr [RSP + 0x30]
0000d99d(3): MOV RDX,R9
0000d9a0(3): MOV RSI,R13
0000d9a3(3): MOV RDI,R14
0000d9a6(5): CALL 0x0000d540
0000d9ab(3): CMP EAX,0x1
0000d9ae(4): MOV R8,qword ptr [R14 + 0x8]
0000d9b2(6): JA 0x0000da58
0000d9b8(4): ADD RBP,0x1
0000d9bc(4): CMP RBP,qword ptr [R13 + 0x20]
0000d9c0(3): MOV R11,R15
0000d9c3(3): MOV RBX,R12
0000d9c6(6): JGE 0x0000dc78
0000d9cc(4): MOV RAX,qword ptr [R13 + 0x28]
0000d9d0(4): MOV R9,qword ptr [RAX + RBP*0x8]
0000d9d4(4): MOV R15,qword ptr [R9 + 0x8]
0000d9d8(3): MOV RDX,R15
0000d9db(3): SUB RDX,R11
0000d9de(3): TEST RDX,RDX
0000d9e1(4): LEA R12,[RDX + RBX*0x1]
0000d9e5(2): JLE 0x0000d993
0000d9e7(4): CMP qword ptr [R14 + 0x30],R12
0000d9eb(6): JGE 0x0000d960
0000d9f1(4): CMP qword ptr [R14 + 0x58],R12
0000d9f5(5): MOV qword ptr [RSP + 0x18],RDX
0000d9fa(5): MOV qword ptr [RSP + 0x10],R9
0000d9ff(6): JL 0x0000de58
0000da05(3): MOV RSI,R12
0000da08(3): MOV RDI,R14
0000da0b(5): MOV qword ptr [RSP + 0x20],R11
0000da10(5): CALL 0x00007170
0000da15(2): TEST EAX,EAX
0000da17(2): JNZ 0x0000da58
0000da19(4): MOV R8,qword ptr [R14 + 0x8]
0000da1d(5): MOV RDX,qword ptr [RSP + 0x18]
0000da22(5): MOV R9,qword ptr [RSP + 0x10]
0000da27(5): MOV R11,qword ptr [RSP + 0x20]
0000da2c(5): JMP 0x0000d960
0000da38(3): MOV R8,RSI
0000da3b(3): MOV RSI,RDI
0000da3e(2): NOP
0000da40(4): LEA RCX,[R8 + 0x1]
0000da44(3): MOV RDI,RSI
0000da47(5): JMP 0x0000d843
0000da50(2): XOR EAX,EAX
0000da52(6): NOP word ptr [RAX + RAX*0x1]
0000da58(8): MOV RBX,qword ptr [0xa8 + RSP]
0000da60(9): XOR RBX,qword ptr FS:[0x28]
0000da69(6): JNZ 0x0000dfbc
0000da6f(7): ADD RSP,0xb8
0000da76(1): POP RBX
0000da77(1): POP RBP
0000da78(2): POP R12
0000da7a(2): POP R13
0000da7c(2): POP R14
0000da7e(2): POP R15
0000da80(1): RET
0000da88(4): ADD RAX,0x28
0000da8c(4): CMP byte ptr [RAX + -0x8],0x0
0000da90(6): JZ 0x0000d8c6
0000da96(3): CMP R13,qword ptr [RAX]
0000da99(2): JNZ 0x0000da88
0000da9b(5): MOV RAX,qword ptr [RSP + 0x70]
0000daa0(5): CMP qword ptr [RSP + 0x70],RAX
0000daa5(11): MOV dword ptr [0x8c + RSP],0x0
0000dab0(6): JGE 0x0000d790
0000dab6(8): LEA RAX,[R13*0x8]
0000dabe(5): MOV R12,qword ptr [RSP + 0x70]
0000dac3(5): MOV RBP,qword ptr [RSP + 0x38]
0000dac8(5): MOV qword ptr [RSP + 0x50],RAX
0000dacd(5): LEA RAX,[R13 + R13*0x2]
0000dad2(4): LEA R8,[R12 + R12*0x4]
0000dad6(4): SHL RAX,0x3
0000dada(5): MOV qword ptr [RSP + 0x58],RAX
0000dadf(8): LEA R15,[R8*0x8]
0000dae7(5): JMP 0x0000dc1d
0000daf0(4): MOV RCX,qword ptr [RBP + 0x28]
0000daf4(5): MOV RDI,qword ptr [RSP + 0x58]
0000daf9(5): MOV RCX,qword ptr [RCX + RDI*0x1 + 0x10]
0000dafe(3): MOV RCX,qword ptr [RCX]
0000db01(4): LEA RCX,[RCX + RCX*0x2]
0000db05(4): LEA RCX,[RDX + RCX*0x8]
0000db09(5): MOV qword ptr [RSP + 0x18],RCX
0000db0e(5): ADD RBX,qword ptr [RSP + 0x8]
0000db13(7): MOV EDX,dword ptr [0xa0 + R14]
0000db1a(3): MOV RDI,R14
0000db1d(3): SUB RBX,RAX
0000db20(4): LEA RSI,[RBX + -0x1]
0000db24(5): CALL 0x000098c0
0000db29(5): MOV RSI,qword ptr [RSP + 0x60]
0000db2e(2): MOV ECX,EAX
0000db30(7): MOV RAX,qword ptr [0xb8 + R14]
0000db37(8): LEA R10,[RBX*0x8]
0000db3f(9): MOV qword ptr [RSP + 0x10],0x0
0000db48(4): LEA R11,[RAX + R10*0x1]
0000db4c(4): MOV RAX,qword ptr [RAX + RSI*0x1]
0000db50(3): MOV RDX,qword ptr [R11]
0000db53(3): TEST RAX,RAX
0000db56(2): JZ 0x0000db61
0000db58(4): MOV RAX,qword ptr [RAX + 0x10]
0000db5c(5): MOV qword ptr [RSP + 0x10],RAX
0000db61(3): TEST RDX,RDX
0000db64(6): JZ 0x0000de80
0000db6a(4): MOV RSI,qword ptr [RDX + 0x50]
0000db6e(5): MOV RDI,qword ptr [RSP + 0x68]
0000db73(5): MOV RDX,qword ptr [RSP + 0x18]
0000db78(5): MOV qword ptr [RSP + 0x30],R10
0000db7d(4): MOV dword ptr [RSP + 0x28],ECX
0000db81(5): CALL 0x00008cd0
0000db86(2): TEST EAX,EAX
0000db88(7): MOV dword ptr [0x8c + RSP],EAX
0000db8f(4): MOV ECX,dword ptr [RSP + 0x28]
0000db93(5): MOV R10,qword ptr [RSP + 0x30]
0000db98(6): JNZ 0x0000df28
0000db9e(7): ADD R10,qword ptr [0xb8 + R14]
0000dba5(5): MOV RDX,qword ptr [RSP + 0x68]
0000dbaa(3): MOV RSI,RBP
0000dbad(5): MOV RDI,qword ptr [RSP + 0x78]
0000dbb2(5): MOV qword ptr [RSP + 0x28],R10
0000dbb7(5): CALL 0x00008e30
0000dbbc(5): MOV R10,qword ptr [RSP + 0x28]
0000dbc1(8): MOV RDI,qword ptr [0xa0 + RSP]
0000dbc9(3): MOV qword ptr [R10],RAX
0000dbcc(5): CALL 0x000018d0
0000dbd1(7): MOV RDX,qword ptr [0xb8 + R14]
0000dbd8(5): CMP qword ptr [RDX + RBX*0x8],0x0
0000dbdd(6): JZ 0x0000deb1
0000dbe3(6): CMP qword ptr [RSP + 0x20],0x0
0000dbe9(2): JNZ 0x0000dc08
0000dbeb(5): MOV RAX,qword ptr [RSP + 0x60]
0000dbf0(5): MOV RBX,qword ptr [RSP + 0x10]
0000dbf5(4): MOV RAX,qword ptr [RDX + RAX*0x1]
0000dbf9(4): CMP qword ptr [RAX + 0x10],RBX
0000dbfd(6): JG 0x0000dec8
0000dc03(5): NOP dword ptr [RAX + RAX*0x1]
0000dc08(4): ADD R12,0x1
0000dc0c(4): ADD R15,0x28
0000dc10(7): CMP R12,qword ptr [0xc8 + R14]
0000dc17(6): JGE 0x0000d790
0000dc1d(7): MOV RAX,qword ptr [0xd8 + R14]
0000dc24(3): ADD RAX,R15
0000dc27(3): CMP R13,qword ptr [RAX]
0000dc2a(2): JNZ 0x0000dc08
0000dc2c(5): MOV RDI,qword ptr [RSP + 0x8]
0000dc31(4): CMP RDI,qword ptr [RAX + 0x8]
0000dc35(2): JNZ 0x0000dc08
0000dc37(4): MOV RBX,qword ptr [RAX + 0x18]
0000dc3b(4): MOV RAX,qword ptr [RAX + 0x10]
0000dc3f(4): MOV RDX,qword ptr [RBP + 0x30]
0000dc43(3): MOV RCX,RBX
0000dc46(3): SUB RCX,RAX
0000dc49(5): MOV qword ptr [RSP + 0x20],RCX
0000dc4e(6): JZ 0x0000daf0
0000dc54(4): MOV RCX,qword ptr [RBP + 0x18]
0000dc58(5): MOV RDI,qword ptr [RSP + 0x50]
0000dc5d(4): MOV RCX,qword ptr [RCX + RDI*0x1]
0000dc61(4): LEA RCX,[RCX + RCX*0x2]
0000dc65(4): LEA RCX,[RDX + RCX*0x8]
0000dc69(5): MOV qword ptr [RSP + 0x18],RCX
0000dc6e(5): JMP 0x0000db0e
0000dc78(3): MOV RBX,R13
0000dc7b(3): MOV R13,R8
0000dc7e(4): LEA R11,[R15 + 0x1]
0000dc82(5): CMP qword ptr [RSP + 0x8],R11
0000dc87(6): JL 0x0000d919
0000dc8d(3): MOV RAX,R12
0000dc90(8): LEA R15,[R11*0x8]
0000dc98(3): MOV R12,RBX
0000dc9b(3): MOV RBX,R11
0000dc9e(3): MOV R11,R13
0000dca1(3): MOV R13,RAX
0000dca4(4): NOP dword ptr [RAX]
0000dca8(3): MOV RAX,RBX
0000dcab(4): SUB RAX,qword ptr [R12]
0000dcaf(3): TEST RAX,RAX
0000dcb2(2): JLE 0x0000dcd5
0000dcb4(4): CMP qword ptr [R14 + 0x30],R13
0000dcb8(6): JLE 0x0000df41
0000dcbe(6): MOVZX ECX,byte ptr [R11 + RBX*0x1 + -0x1]
0000dcc4(4): LEA RAX,[R13 + 0x1]
0000dcc8(4): CMP byte ptr [R11 + R13*0x1],CL
0000dccc(6): JNZ 0x0000de02
0000dcd2(3): MOV R13,RAX
0000dcd5(7): MOV RAX,qword ptr [0xb8 + R14]
0000dcdc(4): MOV RAX,qword ptr [RAX + R15*0x1]
0000dce0(3): TEST RAX,RAX
0000dce3(6): JZ 0x0000ddef
0000dce9(4): MOV RCX,qword ptr [RAX + 0x10]
0000dced(3): TEST RCX,RCX
0000dcf0(6): JLE 0x0000ddef
0000dcf6(4): MOV RDI,qword ptr [RAX + 0x18]
0000dcfa(5): MOV RAX,qword ptr [RSP + 0x50]
0000dcff(2): XOR EDX,EDX
0000dd01(5): MOV R8,qword ptr [RSP + 0x58]
0000dd06(3): MOV RSI,qword ptr [RAX]
0000dd09(2): JMP 0x0000dd1d
0000dd10(4): ADD RDX,0x1
0000dd14(3): CMP RCX,RDX
0000dd17(6): JZ 0x0000ddef
0000dd1d(4): MOV RBP,qword ptr [RDI + RDX*0x8]
0000dd21(3): MOV RAX,RBP
0000dd24(4): SHL RAX,0x4
0000dd28(3): ADD RAX,RSI
0000dd2b(4): CMP byte ptr [RAX + 0x8],0x9
0000dd2f(2): JNZ 0x0000dd10
0000dd31(3): CMP R8,qword ptr [RAX]
0000dd34(2): JNZ 0x0000dd10
0000dd36(4): CMP RBP,-0x1
0000dd3a(6): JZ 0x0000ddef
0000dd40(5): MOV RSI,qword ptr [R12 + 0x10]
0000dd45(4): MOV RCX,qword ptr [R12]
0000dd49(3): TEST RSI,RSI
0000dd4c(6): JZ 0x0000de10
0000dd52(5): MOV qword ptr [RSP + 0x10],R11
0000dd57(5): MOV RDX,qword ptr [R12 + 0x8]
0000dd5c(4): SUB RSP,0x8
0000dd60(2): PUSH 0x9
0000dd62(3): MOV R9,RBX
0000dd65(3): MOV R8,RBP
0000dd68(3): MOV RDI,R14
0000dd6b(5): CALL 0x0000c4f0
0000dd70(1): POP RDX
0000dd71(3): CMP EAX,0x1
0000dd74(1): POP RCX
0000dd75(5): MOV R11,qword ptr [RSP + 0x10]
0000dd7a(2): JZ 0x0000ddef
0000dd7c(2): TEST EAX,EAX
0000dd7e(6): JNZ 0x0000da58
0000dd84(5): MOV RAX,qword ptr [R12 + 0x20]
0000dd89(5): CMP RAX,qword ptr [R12 + 0x18]
0000dd8e(6): JZ 0x0000df68
0000dd94(5): MOV ESI,0x28
0000dd99(5): MOV EDI,0x1
0000dd9e(5): CALL 0x00001ab0
0000dda3(3): TEST RAX,RAX
0000dda6(6): JZ 0x0000de49
0000ddac(5): MOV RDX,qword ptr [R12 + 0x20]
0000ddb1(5): MOV RCX,qword ptr [R12 + 0x28]
0000ddb6(3): MOV RSI,R12
0000ddb9(5): MOV R8,qword ptr [RSP + 0x8]
0000ddbe(3): MOV RDI,R14
0000ddc1(4): MOV qword ptr [RCX + RDX*0x8],RAX
0000ddc5(5): MOV RCX,qword ptr [RSP + 0x30]
0000ddca(4): ADD RDX,0x1
0000ddce(3): MOV qword ptr [RAX],RBP
0000ddd1(4): MOV qword ptr [RAX + 0x8],RBX
0000ddd5(5): MOV qword ptr [R12 + 0x20],RDX
0000ddda(3): MOV RDX,RAX
0000dddd(5): CALL 0x0000d540
0000dde2(3): CMP EAX,0x1
0000dde5(4): MOV R11,qword ptr [R14 + 0x8]
0000dde9(6): JA 0x0000da58
0000ddef(4): ADD RBX,0x1
0000ddf3(4): ADD R15,0x8
0000ddf7(5): CMP qword ptr [RSP + 0x8],RBX
0000ddfc(6): JGE 0x0000dca8
0000de02(3): MOV R13,R11
0000de05(5): JMP 0x0000d919
0000de10(3): MOV RSI,RBX
0000de13(5): MOV EDI,0x18
0000de18(5): MOV qword ptr [RSP + 0x18],R11
0000de1d(3): SUB RSI,RCX
0000de20(5): MOV qword ptr [RSP + 0x10],RCX
0000de25(4): ADD RSI,0x1
0000de29(5): CALL 0x00001ab0
0000de2e(3): TEST RAX,RAX
0000de31(3): MOV RSI,RAX
0000de34(5): MOV qword ptr [R12 + 0x10],RAX
0000de39(5): MOV RCX,qword ptr [RSP + 0x10]
0000de3e(5): MOV R11,qword ptr [RSP + 0x18]
0000de43(6): JNZ 0x0000dd52
0000de49(5): MOV EAX,0xc
0000de4e(5): JMP 0x0000da58
0000de58(3): MOV RCX,RBX
0000de5b(3): MOV RBX,R13
0000de5e(3): MOV R13,R8
0000de61(4): CMP qword ptr [RBX + 0x20],RBP
0000de65(6): JG 0x0000d919
0000de6b(3): TEST RBP,RBP
0000de6e(3): MOV R12,RCX
0000de71(6): JZ 0x0000dc82
0000de77(3): MOV R15,R11
0000de7a(5): JMP 0x0000dc7e
0000de80(5): MOV RDX,qword ptr [RSP + 0x18]
0000de85(5): MOV RDI,qword ptr [RSP + 0x78]
0000de8a(3): MOV RSI,RBP
0000de8d(5): MOV qword ptr [RSP + 0x28],R11
0000de92(5): CALL 0x00008e30
0000de97(5): MOV R11,qword ptr [RSP + 0x28]
0000de9c(7): MOV RDX,qword ptr [0xb8 + R14]
0000dea3(3): MOV qword ptr [R11],RAX
0000dea6(5): CMP qword ptr [RDX + RBX*0x8],0x0
0000deab(6): JNZ 0x0000dbe3
0000deb1(7): MOV EAX,dword ptr [0x8c + RSP]
0000deb8(2): TEST EAX,EAX
0000deba(6): JZ 0x0000dbe3
0000dec0(5): JMP 0x0000da58
0000dec8(5): MOV RAX,qword ptr [RSP + 0x18]
0000decd(5): MOV RCX,qword ptr [RSP + 0x8]
0000ded2(3): MOV RDI,R14
0000ded5(4): LEA R8,[RAX + 0x10]
0000ded9(4): LEA RBX,[RAX + 0x8]
0000dedd(3): MOV RDX,R8
0000dee0(3): MOV RSI,RBX
0000dee3(5): MOV qword ptr [RSP + 0x10],R8
0000dee8(5): CALL 0x00009770
0000deed(2): TEST EAX,EAX
0000deef(7): MOV dword ptr [0x8c + RSP],EAX
0000def6(6): JNZ 0x0000da58
0000defc(5): MOV R8,qword ptr [RSP + 0x10]
0000df01(3): MOV RSI,RBX
0000df04(3): MOV RDI,R14
0000df07(3): MOV RDX,R8
0000df0a(5): CALL 0x0000d6e0
0000df0f(2): TEST EAX,EAX
0000df11(7): MOV dword ptr [0x8c + RSP],EAX
0000df18(6): JZ 0x0000dc08
0000df1e(5): JMP 0x0000da58
0000df28(8): MOV RDI,qword ptr [0xa0 + RSP]
0000df30(5): CALL 0x000018d0
0000df35(7): MOV EAX,dword ptr [0x8c + RSP]
0000df3c(5): JMP 0x0000da58
0000df41(4): CMP qword ptr [R14 + 0x58],R13
0000df45(6): JLE 0x0000de02
0000df4b(4): LEA ESI,[R13 + 0x1]
0000df4f(3): MOV RDI,R14
0000df52(5): CALL 0x00007020
0000df57(2): TEST EAX,EAX
0000df59(6): JNZ 0x0000da58
0000df5f(4): MOV R11,qword ptr [R14 + 0x8]
0000df63(5): JMP 0x0000dcbe
0000df68(5): LEA RDX,[RAX + RAX*0x1 + 0x1]
0000df6d(5): MOV RDI,qword ptr [R12 + 0x28]
0000df72(8): LEA RSI,[RDX*0x8]
0000df7a(5): MOV qword ptr [RSP + 0x10],RDX
0000df7f(5): CALL 0x00001b60
0000df84(3): TEST RAX,RAX
0000df87(6): JZ 0x0000de49
0000df8d(5): MOV RDX,qword ptr [RSP + 0x10]
0000df92(5): MOV qword ptr [R12 + 0x28],RAX
0000df97(5): MOV qword ptr [R12 + 0x18],RDX
0000df9c(5): JMP 0x0000dd94
0000dfa1(5): MOV R13,qword ptr [RSP + 0x30]
0000dfa6(7): MOV RAX,qword ptr [0xc8 + R14]
0000dfad(5): JMP 0x0000daa0
0000dfb2(5): MOV R12,qword ptr [RSP + 0x8]
0000dfb7(5): JMP 0x0000dc82
0000dfbc(5): CALL 0x000019e0
0000dfc1(5): NOP dword ptr [RAX + RAX*0x1]
0000dfc6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000dfd0(2): PUSH R15
0000dfd2(2): PUSH R14
0000dfd4(2): PUSH R13
0000dfd6(2): PUSH R12
0000dfd8(3): MOV R13,RDI
0000dfdb(1): PUSH RBP
0000dfdc(1): PUSH RBX
0000dfdd(3): MOV RBX,RSI
0000dfe0(4): SUB RSP,0x38
0000dfe4(4): MOV R12,qword ptr [RSI + 0x48]
0000dfe8(7): MOV R14,qword ptr [0xb8 + RSI]
0000dfef(9): MOV RAX,qword ptr FS:[0x28]
0000dff8(5): MOV qword ptr [RSP + 0x28],RAX
0000dffd(2): XOR EAX,EAX
0000dfff(7): MOV R15,qword ptr [0x98 + RSI]
0000e006(8): LEA RBP,[R12*0x8]
0000e00e(3): ADD R14,RBP
0000e011(7): CMP qword ptr [0xc0 + RSI],R12
0000e018(2): JGE 0x0000e060
0000e01a(3): MOV qword ptr [R14],RDX
0000e01d(3): MOV RBP,RDX
0000e020(7): MOV qword ptr [0xc0 + RSI],R12
0000e027(8): CMP qword ptr [0x98 + R15],0x0
0000e02f(6): JNZ 0x0000e158
0000e035(5): MOV RCX,qword ptr [RSP + 0x28]
0000e03a(9): XOR RCX,qword ptr FS:[0x28]
0000e043(3): MOV RAX,RBP
0000e046(6): JNZ 0x0000e1b7
0000e04c(4): ADD RSP,0x38
0000e050(1): POP RBX
0000e051(1): POP RBP
0000e052(2): POP R12
0000e054(2): POP R13
0000e056(2): POP R14
0000e058(2): POP R15
0000e05a(1): RET
0000e060(3): MOV RAX,qword ptr [R14]
0000e063(3): TEST RAX,RAX
0000e066(6): JZ 0x0000e148
0000e06c(3): TEST RDX,RDX
0000e06f(4): MOV RAX,qword ptr [RAX + 0x50]
0000e073(6): JZ 0x0000e100
0000e079(4): MOV R14,qword ptr [RDX + 0x50]
0000e07d(5): LEA RDI,[RSP + 0x10]
0000e082(3): MOV RDX,RAX
0000e085(4): MOV qword ptr [RSP],RDI
0000e089(3): MOV RSI,R14
0000e08c(5): CALL 0x00008cd0
0000e091(2): TEST EAX,EAX
0000e093(4): MOV dword ptr [R13],EAX
0000e097(6): JNZ 0x0000e1b0
0000e09d(4): MOV RAX,qword ptr [RBX + 0x48]
0000e0a1(6): MOV EDX,dword ptr [0xa0 + RBX]
0000e0a7(3): MOV RDI,RBX
0000e0aa(4): LEA RSI,[RAX + -0x1]
0000e0ae(5): CALL 0x000098c0
0000e0b3(7): MOV R8,qword ptr [0xb8 + RBX]
0000e0ba(4): MOV RDX,qword ptr [RSP]
0000e0be(2): MOV ECX,EAX
0000e0c0(3): MOV RSI,R15
0000e0c3(3): MOV RDI,R13
0000e0c6(3): ADD R8,RBP
0000e0c9(5): MOV qword ptr [RSP + 0x8],R8
0000e0ce(5): CALL 0x00008e30
0000e0d3(5): MOV R8,qword ptr [RSP + 0x8]
0000e0d8(3): TEST R14,R14
0000e0db(3): MOV RBP,RAX
0000e0de(3): MOV qword ptr [R8],RAX
0000e0e1(6): JZ 0x0000e027
0000e0e7(5): MOV RDI,qword ptr [RSP + 0x20]
0000e0ec(5): CALL 0x000018d0
0000e0f1(5): JMP 0x0000e027
0000e100(4): MOVDQU XMM0,xmmword ptr [RAX]
0000e104(3): MOV RDI,RBX
0000e107(6): MOV EDX,dword ptr [0xa0 + RSI]
0000e10d(5): LEA RSI,[R12 + -0x1]
0000e112(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
0000e117(4): MOV RAX,qword ptr [RAX + 0x10]
0000e11b(5): MOV qword ptr [RSP + 0x20],RAX
0000e120(5): CALL 0x000098c0
0000e125(5): LEA RDX,[RSP + 0x10]
0000e12a(2): MOV ECX,EAX
0000e12c(3): MOV RSI,R15
0000e12f(3): MOV RDI,R13
0000e132(5): CALL 0x00008e30
0000e137(3): MOV RBP,RAX
0000e13a(3): MOV qword ptr [R14],RAX
0000e13d(5): JMP 0x0000e027
0000e148(3): MOV qword ptr [R14],RDX
0000e14b(3): MOV RBP,RDX
0000e14e(5): JMP 0x0000e027
0000e158(3): TEST RBP,RBP
0000e15b(2): JZ 0x0000e1b0
0000e15d(4): LEA R14,[RBP + 0x10]
0000e161(4): LEA R15,[RBP + 0x18]
0000e165(3): MOV RCX,R12
0000e168(3): MOV RDI,RBX
0000e16b(3): MOV RDX,R15
0000e16e(3): MOV RSI,R14
0000e171(5): CALL 0x00009770
0000e176(2): TEST EAX,EAX
0000e178(4): MOV dword ptr [R13],EAX
0000e17c(2): JNZ 0x0000e1b0
0000e17e(4): TEST byte ptr [RBP + 0x68],0x40
0000e182(6): JZ 0x0000e035
0000e188(3): MOV RDX,R15
0000e18b(3): MOV RSI,R14
0000e18e(3): MOV RDI,RBX
0000e191(5): CALL 0x0000d6e0
0000e196(2): TEST EAX,EAX
0000e198(4): MOV dword ptr [R13],EAX
0000e19c(2): JNZ 0x0000e1b0
0000e19e(7): MOV RAX,qword ptr [0xb8 + RBX]
0000e1a5(4): MOV RBP,qword ptr [RAX + R12*0x8]
0000e1a9(5): JMP 0x0000e035
0000e1b0(2): XOR EBP,EBP
0000e1b2(5): JMP 0x0000e035
0000e1b7(5): CALL 0x000019e0
0000e1bc(4): NOP dword ptr [RAX]
0000e1c0(2): PUSH R15
0000e1c2(2): PUSH R14
0000e1c4(3): MOV R14,RDI
0000e1c7(2): PUSH R13
0000e1c9(2): PUSH R12
0000e1cb(3): MOV R13,RSI
0000e1ce(1): PUSH RBP
0000e1cf(1): PUSH RBX
0000e1d0(4): SUB RSP,0x68
0000e1d4(4): MOV R15,qword ptr [RSI + 0x18]
0000e1d8(4): MOV RBX,qword ptr [RSI + 0x10]
0000e1dc(4): MOV qword ptr [RSP],RDI
0000e1e0(5): MOV EDI,0x8
0000e1e5(9): MOV qword ptr [RSP + 0x40],0x1
0000e1ee(9): MOV RAX,qword ptr FS:[0x28]
0000e1f7(5): MOV qword ptr [RSP + 0x58],RAX
0000e1fc(2): XOR EAX,EAX
0000e1fe(9): MOV qword ptr [RSP + 0x48],0x1
0000e207(5): CALL 0x00001b00
0000e20c(3): TEST RAX,RAX
0000e20f(5): MOV qword ptr [RSP + 0x50],RAX
0000e214(6): JZ 0x0000e4f4
0000e21a(5): LEA RCX,[RSP + 0x40]
0000e21f(3): MOV qword ptr [RAX],RBX
0000e222(3): MOV RDX,R15
0000e225(3): MOV RSI,R13
0000e228(3): MOV RDI,R14
0000e22b(5): MOV qword ptr [RSP + 0x10],RCX
0000e230(5): CALL 0x0000fc30
0000e235(2): TEST EAX,EAX
0000e237(6): JNZ 0x0000e4c5
0000e23d(8): LEA RAX,[R15*0x8]
0000e245(3): TEST R15,R15
0000e248(8): MOV dword ptr [RSP + 0x2c],0x0
0000e250(5): MOV qword ptr [RSP + 0x8],RAX
0000e255(4): LEA RAX,[R13 + 0x30]
0000e259(5): MOV qword ptr [RSP + 0x38],RAX
0000e25e(6): JLE 0x0000e467
0000e264(4): MOV RDI,qword ptr [R13]
0000e268(5): MOV RAX,qword ptr [RSP + 0x8]
0000e26d(5): CMP qword ptr [RDI + RAX*0x1],0x0
0000e272(6): JZ 0x0000e488
0000e278(4): MOV RAX,qword ptr [RSP]
0000e27c(8): MOV dword ptr [RSP + 0x2c],0x0
0000e284(4): MOV ECX,dword ptr [RSP + 0x2c]
0000e288(6): CMP dword ptr [0xe0 + RAX],ECX
0000e28e(6): JL 0x0000e4a1
0000e294(4): MOV RBX,qword ptr [RSP]
0000e298(5): MOV RDI,qword ptr [RSP + 0x8]
0000e29d(4): SUB R15,0x1
0000e2a1(9): MOV qword ptr [RSP + 0x48],0x0
0000e2aa(7): MOV RAX,qword ptr [0xb8 + RBX]
0000e2b1(5): MOV R12,qword ptr [RAX + RDI*0x1 + -0x8]
0000e2b6(3): TEST R12,R12
0000e2b9(6): JZ 0x0000e440
0000e2bf(6): CMP qword ptr [R12 + 0x28],0x0
0000e2c5(7): MOV R14,qword ptr [0x98 + RBX]
0000e2cc(6): JLE 0x0000e440
0000e2d2(2): XOR EBX,EBX
0000e2d4(5): JMP 0x0000e37b
0000e2e0(4): MOV RDI,qword ptr [RSP]
0000e2e4(3): MOV RDX,R15
0000e2e7(5): CALL 0x000099b0
0000e2ec(2): TEST AL,AL
0000e2ee(2): JZ 0x0000e36c
0000e2f0(4): MOV RAX,qword ptr [R13]
0000e2f4(5): MOV RCX,qword ptr [RSP + 0x8]
0000e2f9(4): MOV RAX,qword ptr [RAX + RCX*0x1]
0000e2fd(3): TEST RAX,RAX
0000e300(2): JZ 0x0000e36c
0000e302(4): MOV RDX,qword ptr [R14 + 0x18]
0000e306(4): MOV RDI,qword ptr [RAX + 0x10]
0000e30a(4): LEA RSI,[RAX + 0x18]
0000e30e(4): MOV RDX,qword ptr [RDX + RBP*0x8]
0000e312(5): CALL 0x00007ae0
0000e317(3): TEST RAX,RAX
0000e31a(2): JZ 0x0000e36c
0000e31c(6): MOV R10D,0x1
0000e322(5): CMP qword ptr [R13 + 0x28],0x0
0000e327(2): JZ 0x0000e357
0000e329(4): MOV RAX,qword ptr [R14 + 0x18]
0000e32d(4): SUB RSP,0x8
0000e331(4): LEA RSI,[R13 + 0x28]
0000e335(4): LEA R8,[R10 + R15*0x1]
0000e339(3): MOV R9,RBP
0000e33c(4): MOV RCX,qword ptr [RAX + RBP*0x8]
0000e340(2): PUSH R15
0000e342(5): MOV RDX,qword ptr [RSP + 0x48]
0000e347(5): MOV RDI,qword ptr [RSP + 0x10]
0000e34c(5): CALL 0x00007d90
0000e351(2): TEST AL,AL
0000e353(1): POP RDX
0000e354(1): POP RCX
0000e355(2): JNZ 0x0000e36c
0000e357(5): MOV RDI,qword ptr [RSP + 0x10]
0000e35c(3): MOV RSI,RBP
0000e35f(5): CALL 0x000065a0
0000e364(2): TEST AL,AL
0000e366(6): JZ 0x0000e4c0
0000e36c(4): ADD RBX,0x1
0000e370(5): CMP RBX,qword ptr [R12 + 0x28]
0000e375(6): JGE 0x0000e440
0000e37b(5): MOV RAX,qword ptr [R12 + 0x30]
0000e380(3): MOV RSI,qword ptr [R14]
0000e383(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000e387(3): MOV R9,RBP
0000e38a(4): SHL R9,0x4
0000e38e(3): ADD RSI,R9
0000e391(4): TEST byte ptr [RSI + 0xa],0x10
0000e395(6): JZ 0x0000e2e0
0000e39b(4): MOV RCX,qword ptr [RSP]
0000e39f(4): MOV RAX,qword ptr [R13 + 0x18]
0000e3a3(3): MOV R8,R15
0000e3a6(3): MOV RDX,RBP
0000e3a9(5): MOV qword ptr [RSP + 0x18],R9
0000e3ae(7): MOV R11,qword ptr [0x98 + RCX]
0000e3b5(5): MOV qword ptr [RSP + 0x20],RAX
0000e3ba(3): MOV RDI,qword ptr [R11]
0000e3bd(7): LEA RSI,[0xd8 + R11]
0000e3c4(5): MOV qword ptr [RSP + 0x30],R11
0000e3c9(5): CALL 0x0000c290
0000e3ce(3): MOVSXD R10,EAX
0000e3d1(5): MOV R9,qword ptr [RSP + 0x18]
0000e3d6(4): CMP R10D,0x0
0000e3da(6): JLE 0x0000e470
0000e3e0(3): MOVSXD RAX,R10D
0000e3e3(3): ADD RAX,R15
0000e3e6(5): CMP qword ptr [RSP + 0x20],RAX
0000e3eb(6): JL 0x0000e322
0000e3f1(4): MOV RDX,qword ptr [R13]
0000e3f5(5): MOV R11,qword ptr [RSP + 0x30]
0000e3fa(4): MOV RAX,qword ptr [RDX + RAX*0x8]
0000e3fe(3): TEST RAX,RAX
0000e401(2): JZ 0x0000e476
0000e403(4): MOV RDX,qword ptr [R11 + 0x18]
0000e407(4): MOV RDI,qword ptr [RAX + 0x10]
0000e40b(4): LEA RSI,[RAX + 0x18]
0000e40f(5): MOV qword ptr [RSP + 0x18],R9
0000e414(4): MOV RDX,qword ptr [RDX + RBP*0x8]
0000e418(5): CALL 0x00007ae0
0000e41d(3): TEST RAX,RAX
0000e420(6): JNZ 0x0000e322
0000e426(5): MOV R9,qword ptr [RSP + 0x18]
0000e42b(3): MOV RSI,qword ptr [R14]
0000e42e(3): ADD RSI,R9
0000e431(5): JMP 0x0000e2e0
0000e440(5): MOV RCX,qword ptr [RSP + 0x10]
0000e445(4): MOV RDI,qword ptr [RSP]
0000e449(3): MOV RDX,R15
0000e44c(3): MOV RSI,R13
0000e44f(5): CALL 0x0000fc30
0000e454(2): TEST EAX,EAX
0000e456(2): JNZ 0x0000e4c5
0000e458(6): SUB qword ptr [RSP + 0x8],0x8
0000e45e(3): TEST R15,R15
0000e461(6): JNZ 0x0000e264
0000e467(2): XOR EAX,EAX
0000e469(2): JMP 0x0000e4c5
0000e470(6): JNZ 0x0000e322
0000e476(3): MOV RSI,qword ptr [R14]
0000e479(3): ADD RSI,R9
0000e47c(5): JMP 0x0000e2e0
0000e488(4): MOV RAX,qword ptr [RSP]
0000e48c(5): ADD dword ptr [RSP + 0x2c],0x1
0000e491(4): MOV ECX,dword ptr [RSP + 0x2c]
0000e495(6): CMP dword ptr [0xe0 + RAX],ECX
0000e49b(6): JGE 0x0000e294
0000e4a1(5): MOV RDX,qword ptr [RSP + 0x8]
0000e4a6(2): XOR ESI,ESI
0000e4a8(5): CALL 0x00001a60
0000e4ad(5): MOV RDI,qword ptr [RSP + 0x50]
0000e4b2(5): CALL 0x000018d0
0000e4b7(2): XOR EAX,EAX
0000e4b9(2): JMP 0x0000e4d5
0000e4c0(5): MOV EAX,0xc
0000e4c5(5): MOV RDI,qword ptr [RSP + 0x50]
0000e4ca(3): MOV dword ptr [RSP],EAX
0000e4cd(5): CALL 0x000018d0
0000e4d2(3): MOV EAX,dword ptr [RSP]
0000e4d5(5): MOV RDX,qword ptr [RSP + 0x58]
0000e4da(9): XOR RDX,qword ptr FS:[0x28]
0000e4e3(2): JNZ 0x0000e4fb
0000e4e5(4): ADD RSP,0x68
0000e4e9(1): POP RBX
0000e4ea(1): POP RBP
0000e4eb(2): POP R12
0000e4ed(2): POP R13
0000e4ef(2): POP R14
0000e4f1(2): POP R15
0000e4f3(1): RET
0000e4f4(5): MOV EAX,0xc
0000e4f9(2): JMP 0x0000e4d5
0000e4fb(5): CALL 0x000019e0
0000e500(2): PUSH R15
0000e502(2): PUSH R14
0000e504(2): PUSH R13
0000e506(2): PUSH R12
0000e508(3): MOV R13,R9
0000e50b(1): PUSH RBP
0000e50c(1): PUSH RBX
0000e50d(3): MOV RBP,RCX
0000e510(5): MOV ECX,0x20
0000e515(3): MOV R12,R8
0000e518(7): SUB RSP,0x238
0000e51f(3): MOV RBX,qword ptr [RDI]
0000e522(8): MOV RAX,qword ptr [0x278 + RSP]
0000e52a(5): MOV qword ptr [RSP + 0x48],RDI
0000e52f(5): MOV qword ptr [RSP + 0x78],RSI
0000e534(3): MOV RSI,RDI
0000e537(8): LEA RDI,[0x120 + RSP]
0000e53f(8): MOV qword ptr [0x88 + RSP],RDX
0000e547(5): MOV qword ptr [RSP + 0x38],RBX
0000e54c(8): MOV qword ptr [0xb8 + RSP],RAX
0000e554(4): MOV qword ptr [RSP],RDI
0000e558(9): MOV RAX,qword ptr FS:[0x28]
0000e561(8): MOV qword ptr [0x228 + RSP],RAX
0000e569(2): XOR EAX,EAX
0000e56b(3): STOSQ.REP RDI
0000e56e(4): MOV RDI,qword ptr [RSI + 0x20]
0000e572(8): MOV qword ptr [0x1b8 + RSP],RBX
0000e57a(3): TEST RDI,RDI
0000e57d(5): MOV qword ptr [RSP + 0x68],RDI
0000e582(2): JZ 0x0000e5a6
0000e584(4): MOVZX EDX,byte ptr [RSI + 0x38]
0000e588(3): TEST DL,0x8
0000e58b(6): JZ 0x0000ea20
0000e591(3): CMP RBP,R8
0000e594(6): JZ 0x0000ea20
0000e59a(3): AND EDX,0x1
0000e59d(4): CMOVZ RAX,RDI
0000e5a1(5): MOV qword ptr [RSP + 0x68],RAX
0000e5a6(5): MOV RAX,qword ptr [RSP + 0x48]
0000e5ab(12): MOV qword ptr [0x98 + RSP],0x0
0000e5b7(4): MOV RAX,qword ptr [RAX + 0x30]
0000e5bb(8): CMP RAX,qword ptr [0x270 + RSP]
0000e5c3(2): JNC 0x0000e5e4
0000e5c5(8): MOV RCX,qword ptr [0x270 + RSP]
0000e5cd(4): LEA RDX,[RCX + -0x1]
0000e5d1(3): SUB RDX,RAX
0000e5d4(8): SUB qword ptr [0x270 + RSP],RDX
0000e5dc(8): MOV qword ptr [0x98 + RSP],RDX
0000e5e4(5): MOV RSI,qword ptr [RSP + 0x48]
0000e5e9(5): CMP qword ptr [RSI + 0x10],0x0
0000e5ee(6): JZ 0x0000f480
0000e5f4(5): MOV RDI,qword ptr [RSP + 0x38]
0000e5f9(4): MOV RAX,qword ptr [RDI + 0x48]
0000e5fd(3): TEST RAX,RAX
0000e600(6): JZ 0x0000f480
0000e606(4): MOV RDX,qword ptr [RDI + 0x50]
0000e60a(3): TEST RDX,RDX
0000e60d(6): JZ 0x0000f480
0000e613(4): MOV RCX,qword ptr [RDI + 0x58]
0000e617(3): TEST RCX,RCX
0000e61a(6): JZ 0x0000f480
0000e620(5): CMP qword ptr [RDI + 0x60],0x0
0000e625(6): JZ 0x0000f480
0000e62b(5): CMP qword ptr [RAX + 0x10],0x0
0000e630(2): JNZ 0x0000e668
0000e632(5): CMP qword ptr [RDX + 0x10],0x0
0000e637(2): JNZ 0x0000e668
0000e639(5): CMP qword ptr [RCX + 0x10],0x0
0000e63e(2): JZ 0x0000e646
0000e640(4): CMP byte ptr [RSI + 0x38],0x0
0000e644(2): JS 0x0000e668
0000e646(3): TEST RBP,RBP
0000e649(2): JZ 0x0000e65c
0000e64b(3): TEST R12,R12
0000e64e(8): MOV dword ptr [RSP + 0x5c],0x1
0000e656(6): JNZ 0x0000f079
0000e65c(3): XOR R12D,R12D
0000e65f(2): XOR EBP,EBP
0000e661(7): NOP dword ptr [RAX]
0000e668(9): CMP qword ptr [0x270 + RSP],0x0
0000e671(8): MOV dword ptr [RSP + 0x58],0x1
0000e679(6): JZ 0x0000ea00
0000e67f(5): MOV R11,qword ptr [RSP + 0x38]
0000e684(5): MOV RAX,qword ptr [RSP + 0x48]
0000e689(8): MOV RDI,qword ptr [0x88 + RSP]
0000e691(4): MOV RSI,qword ptr [R11 + 0x10]
0000e695(4): MOV RBX,qword ptr [RAX + 0x28]
0000e699(7): MOV EDX,dword ptr [0xb4 + R11]
0000e6a0(4): MOV RAX,qword ptr [RAX + 0x18]
0000e6a4(8): MOV qword ptr [0x178 + RSP],RDI
0000e6ac(8): MOV qword ptr [0x170 + RSP],RDI
0000e6b4(5): MOV qword ptr [RSP + 0x8],RSI
0000e6b9(4): LEA RSI,[RSI + 0x1]
0000e6bd(8): MOV qword ptr [0xb0 + RSP],RBX
0000e6c5(3): MOVSXD RCX,EDX
0000e6c8(4): SHR RAX,0x16
0000e6cc(8): MOV qword ptr [0x198 + RSP],RBX
0000e6d4(3): AND EAX,0x1
0000e6d7(3): CMP RSI,RCX
0000e6da(7): MOV dword ptr [0x1b0 + RSP],EDX
0000e6e1(4): CMOVL RSI,RCX
0000e6e5(4): LEA RCX,[RDI + 0x1]
0000e6e9(7): MOV byte ptr [0x1a8 + RSP],AL
0000e6f0(8): MOV qword ptr [0x188 + RSP],RDI
0000e6f8(8): MOV qword ptr [0x180 + RSP],RDI
0000e700(3): CMP RSI,RCX
0000e703(4): MOV RDI,qword ptr [RSP]
0000e707(4): CMOVG RSI,RCX
0000e70b(3): TEST RBX,RBX
0000e70e(5): MOV RCX,qword ptr [RSP + 0x78]
0000e713(3): SETNZ BL
0000e716(2): OR EAX,EBX
0000e718(7): MOV byte ptr [0x1ab + RSP],AL
0000e71f(8): MOVZX EAX,byte ptr [0xb0 + R11]
0000e727(8): MOV qword ptr [0x120 + RSP],RCX
0000e72f(2): MOV EDX,EAX
0000e731(3): SHR AL,0x3
0000e734(3): SHR DL,0x2
0000e737(3): AND EAX,0x1
0000e73a(3): AND EDX,0x1
0000e73d(7): MOV byte ptr [0x1aa + RSP],AL
0000e744(7): MOV byte ptr [0x1a9 + RSP],DL
0000e74b(5): CALL 0x00006490
0000e750(2): TEST EAX,EAX
0000e752(4): MOV dword ptr [RSP + 0x5c],EAX
0000e756(6): JNZ 0x0000f050
0000e75c(5): MOV RDI,qword ptr [RSP + 0x38]
0000e761(7): LEA RAX,[0xb8 + RDI]
0000e768(8): MOV qword ptr [0x1a0 + RSP],RAX
0000e770(7): MOVZX EAX,byte ptr [0xb0 + RDI]
0000e777(4): MOV byte ptr [RSP + 0x8],AL
0000e77b(3): SHR AL,0x4
0000e77e(3): AND EAX,0x1
0000e781(8): CMP byte ptr [0x1ab + RSP],0x0
0000e789(7): MOV byte ptr [0x1ae + RSP],AL
0000e790(2): JNZ 0x0000e7b5
0000e792(5): MOV RSI,qword ptr [RSP + 0x38]
0000e797(5): MOV RAX,qword ptr [RSP + 0x78]
0000e79c(7): CMP dword ptr [0xb4 + RSI],0x1
0000e7a3(8): MOV qword ptr [0x128 + RSP],RAX
0000e7ab(8): MOV RAX,qword ptr [0x88 + RSP]
0000e7b3(2): JLE 0x0000e7b7
0000e7b5(2): XOR EAX,EAX
0000e7b7(8): MOV qword ptr [0x150 + RSP],RAX
0000e7bf(8): MOV qword ptr [0x158 + RSP],RAX
0000e7c7(5): MOV RAX,qword ptr [RSP + 0x48]
0000e7cc(8): MOV qword ptr [0x188 + RSP],R13
0000e7d4(8): MOV qword ptr [0x180 + RSP],R13
0000e7dc(4): MOVZX EAX,byte ptr [RAX + 0x38]
0000e7e0(4): MOV byte ptr [RSP + 0x8],AL
0000e7e4(3): SHR AL,0x7
0000e7e7(7): MOV byte ptr [0x1ad + RSP],AL
0000e7ee(5): MOV RAX,qword ptr [RSP + 0x38]
0000e7f3(7): MOV R14,qword ptr [0x98 + RAX]
0000e7fa(7): MOV EAX,dword ptr [0x280 + RSP]
0000e801(12): MOV qword ptr [0x1c8 + RSP],-0x1
0000e80d(4): LEA R13,[R14 + R14*0x1]
0000e811(7): MOV dword ptr [0x1c0 + RSP],EAX
0000e818(3): TEST R13,R13
0000e81b(2): JLE 0x0000e86f
0000e81d(10): MOV RAX,0x666666666666666
0000e827(3): CMP R13,RAX
0000e82a(6): JG 0x0000f570
0000e830(5): LEA RDI,[R13 + R14*0x8]
0000e835(4): SHL RDI,0x3
0000e839(5): CALL 0x00001b00
0000e83e(3): MOV RDI,R14
0000e841(3): MOV R15,RAX
0000e844(8): MOV qword ptr [0x1f8 + RSP],RAX
0000e84c(4): SHL RDI,0x4
0000e850(5): CALL 0x00001b00
0000e855(3): TEST RAX,RAX
0000e858(8): MOV qword ptr [0x218 + RSP],RAX
0000e860(6): JZ 0x0000f570
0000e866(3): TEST R15,R15
0000e869(6): JZ 0x0000f570
0000e86f(9): CMP qword ptr [0x270 + RSP],0x1
0000e878(8): MOV qword ptr [0x1f0 + RSP],R13
0000e880(11): MOV dword ptr [0x200 + RSP],0x1
0000e88b(8): MOV qword ptr [0x210 + RSP],R13
0000e893(6): JBE 0x0000f9b8
0000e899(8): MOV RAX,qword ptr [0x160 + RSP]
0000e8a1(10): MOV RDX,0x1ffffffffffffffe
0000e8ab(3): CMP RAX,RDX
0000e8ae(6): JA 0x0000f570
0000e8b4(8): LEA RDI,[0x8 + RAX*0x8]
0000e8bc(5): CALL 0x00001b00
0000e8c1(3): TEST RAX,RAX
0000e8c4(3): MOV RDI,RAX
0000e8c7(8): MOV qword ptr [0x1d8 + RSP],RAX
0000e8cf(6): JZ 0x0000f5c0
0000e8d5(7): MOV EAX,dword ptr [0x280 + RSP]
0000e8dc(8): MOV qword ptr [0xd8 + RSP],RBP
0000e8e4(3): AND EAX,0x1
0000e8e7(3): CMP EAX,0x1
0000e8ea(2): SBB EAX,EAX
0000e8ec(3): AND EAX,0x2
0000e8ef(3): ADD EAX,0x4
0000e8f2(7): MOV dword ptr [0x190 + RSP],EAX
0000e8f9(2): XOR EAX,EAX
0000e8fb(3): CMP RBP,R12
0000e8fe(3): SETLE AL
0000e901(4): LEA EAX,[RAX + RAX*0x1 + -0x1]
0000e905(7): MOV dword ptr [0xac + RSP],EAX
0000e90c(3): MOV RAX,R12
0000e90f(4): CMOVLE RAX,RBP
0000e913(8): MOV qword ptr [0x90 + RSP],RAX
0000e91b(3): MOV RAX,R12
0000e91e(4): CMOVGE RAX,RBP
0000e922(6): CMP qword ptr [RSP + 0x68],0x0
0000e928(5): MOV qword ptr [RSP + 0x70],RAX
0000e92d(5): MOV RAX,qword ptr [RSP + 0x38]
0000e932(6): MOV ESI,dword ptr [0xb4 + RAX]
0000e938(5): MOV EAX,0x8
0000e93d(7): MOV dword ptr [0xc8 + RSP],ESI
0000e944(2): JZ 0x0000e97f
0000e946(3): CMP ESI,0x1
0000e949(5): MOV ECX,0x4
0000e94e(2): JZ 0x0000e96e
0000e950(5): MOV RAX,qword ptr [RSP + 0x48]
0000e955(4): TEST byte ptr [RAX + 0x1a],0x40
0000e959(6): JNZ 0x0000f6de
0000e95f(9): CMP qword ptr [0xb0 + RSP],0x0
0000e968(6): JNZ 0x0000f6de
0000e96e(2): XOR EDX,EDX
0000e970(3): CMP RBP,R12
0000e973(3): MOVZX EAX,BL
0000e976(3): SETLE DL
0000e979(2): OR EAX,ECX
0000e97b(2): ADD EDX,EDX
0000e97d(2): OR EAX,EDX
0000e97f(5): CMP RBP,qword ptr [RSP + 0x70]
0000e984(3): SETG CL
0000e987(8): CMP RBP,qword ptr [0x90 + RSP]
0000e98f(3): SETL DL
0000e992(2): OR CL,DL
0000e994(6): JNZ 0x0000f469
0000e99a(8): LEA RCX,[0xd8 + RSP]
0000e9a2(3): CMP RBP,R12
0000e9a5(5): MOV EDX,0x0
0000e9aa(4): CMOVLE RDX,RCX
0000e9ae(3): TEST RDX,RDX
0000e9b1(8): MOV qword ptr [0xc0 + RSP],RDX
0000e9b9(8): SETNZ byte ptr [0xcf + RSP]
0000e9c1(3): SUB EAX,0x4
0000e9c4(7): MOV dword ptr [0xa8 + RSP],EAX
0000e9cb(8): LEA RAX,[0xd0 + RSP]
0000e9d3(5): MOV qword ptr [RSP + 0x28],RAX
0000e9d8(7): MOV EAX,dword ptr [0xa8 + RSP]
0000e9df(3): CMP EAX,0x4
0000e9e2(6): JA 0x0000f5cd
0000e9e8(7): LEA RCX,[0x15980]
0000e9ef(4): MOVSXD RAX,dword ptr [RCX + RAX*0x4]
0000e9f3(3): ADD RAX,RCX
0000e9f6(2): JMP RAX
0000ea00(5): MOV RAX,qword ptr [RSP + 0x38]
0000ea05(8): CMP qword ptr [0x98 + RAX],0x0
0000ea0d(3): SETNZ AL
0000ea10(3): MOVZX EAX,AL
0000ea13(4): MOV dword ptr [RSP + 0x58],EAX
0000ea17(5): JMP 0x0000e67f
0000ea20(9): MOV qword ptr [RSP + 0x68],0x0
0000ea29(5): JMP 0x0000e5a6
0000ea2e(5): CMP qword ptr [RSP + 0x70],RBP
0000ea33(2): JLE 0x0000ea8f
0000ea35(5): MOV RAX,qword ptr [RSP + 0x78]
0000ea3a(5): MOV RDI,qword ptr [RSP + 0x68]
0000ea3f(4): MOVZX EDX,byte ptr [RAX + RBP*0x1]
0000ea43(4): LEA RAX,[RBP + 0x1]
0000ea47(4): CMP byte ptr [RDI + RDX*0x1],0x0
0000ea4b(6): JNZ 0x0000ead8
0000ea51(5): MOV RSI,qword ptr [RSP + 0x68]
0000ea56(5): MOV RCX,qword ptr [RSP + 0x70]
0000ea5b(5): MOV RDI,qword ptr [RSP + 0x78]
0000ea60(2): JMP 0x0000ea7a
0000ea68(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0000ea6c(4): LEA RAX,[RAX + 0x1]
0000ea70(4): CMP byte ptr [RSI + RDX*0x1],0x0
0000ea74(6): JNZ 0x0000fc11
0000ea7a(3): CMP RCX,RAX
0000ea7d(3): MOV RBP,RAX
0000ea80(2): JNZ 0x0000ea68
0000ea82(5): MOV RAX,qword ptr [RSP + 0x70]
0000ea87(8): MOV qword ptr [0xd8 + RSP],RAX
0000ea8f(5): CMP qword ptr [RSP + 0x70],RBP
0000ea94(2): JNZ 0x0000ead8
0000ea96(2): XOR EAX,EAX
0000ea98(5): MOV RSI,qword ptr [RSP + 0x70]
0000ea9d(8): CMP qword ptr [0x88 + RSP],RSI
0000eaa5(2): JLE 0x0000eab0
0000eaa7(5): MOV RAX,qword ptr [RSP + 0x78]
0000eaac(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
0000eab0(8): MOV RSI,qword ptr [0xb0 + RSP]
0000eab8(3): TEST RSI,RSI
0000eabb(2): JZ 0x0000eac1
0000eabd(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
0000eac1(5): MOV RDI,qword ptr [RSP + 0x68]
0000eac6(4): CMP byte ptr [RDI + RAX*0x1],0x0
0000eaca(6): JZ 0x0000f469
0000ead0(5): MOV RBP,qword ptr [RSP + 0x70]
0000ead5(3): NOP dword ptr [RAX]
0000ead8(7): MOV EDX,dword ptr [0x280 + RSP]
0000eadf(4): MOV RDI,qword ptr [RSP]
0000eae3(3): MOV RSI,RBP
0000eae6(5): CALL 0x00009b90
0000eaeb(2): TEST EAX,EAX
0000eaed(4): MOV dword ptr [RSP + 0x5c],EAX
0000eaf1(6): JNZ 0x0000f050
0000eaf7(8): CMP dword ptr [0xc8 + RSP],0x1
0000eaff(2): JZ 0x0000eb1d
0000eb01(9): CMP qword ptr [0x150 + RSP],0x0
0000eb0a(2): JZ 0x0000eb1d
0000eb0c(8): MOV RAX,qword ptr [0x130 + RSP]
0000eb14(3): CMP dword ptr [RAX],-0x1
0000eb17(6): JZ 0x0000f441
0000eb1d(8): MOV RBX,qword ptr [0x1b8 + RSP]
0000eb25(5): MOVZX EAX,byte ptr [RSP + 0x58]
0000eb2a(11): MOV dword ptr [0x200 + RSP],0x0
0000eb35(12): MOV qword ptr [0x1e8 + RSP],0x0
0000eb41(12): MOV qword ptr [0x1e0 + RSP],0x0
0000eb4d(11): MOV dword ptr [0xd0 + RSP],0x0
0000eb58(4): MOV R14,qword ptr [RBX + 0x48]
0000eb5c(3): AND EAX,0x1
0000eb5f(7): MOV byte ptr [0xce + RSP],AL
0000eb66(8): MOV RAX,qword ptr [0x168 + RSP]
0000eb6e(5): CMP byte ptr [R14 + 0x68],0x0
0000eb73(5): MOV qword ptr [RSP + 0x8],RAX
0000eb78(6): JS 0x0000f4f0
0000eb7e(8): MOV RAX,qword ptr [0x1d8 + RSP]
0000eb86(3): TEST RAX,RAX
0000eb89(2): JZ 0x0000eba2
0000eb8b(8): CMP qword ptr [0x98 + RBX],0x0
0000eb93(5): MOV RDI,qword ptr [RSP + 0x8]
0000eb98(4): MOV qword ptr [RAX + RDI*0x8],R14
0000eb9c(6): JNZ 0x0000fa8b
0000eba2(8): MOVZX EAX,byte ptr [0xcf + RSP]
0000ebaa(4): MOV byte ptr [RSP + 0x18],AL
0000ebae(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000ebb3(2): TEST AL,0x10
0000ebb5(9): MOV qword ptr [RSP + 0x20],-0x1
0000ebbe(9): MOV qword ptr [RSP + 0x30],0x0
0000ebc7(6): JNZ 0x0000fa50
0000ebcd(8): MOV RAX,qword ptr [0xc0 + RSP]
0000ebd5(8): MOV R8,qword ptr [0x168 + RSP]
0000ebdd(5): MOV qword ptr [RSP + 0x50],RAX
0000ebe2(8): LEA RAX,[0xe0 + RSP]
0000ebea(5): MOV qword ptr [RSP + 0x60],RAX
0000ebef(8): LEA RAX,[0xd4 + RSP]
0000ebf7(8): MOV qword ptr [0x80 + RSP],RAX
0000ebff(2): JMP 0x0000ec5c
0000ec08(3): CMP R14,R13
0000ec0b(8): MOV R8,qword ptr [0x168 + RSP]
0000ec13(3): SETZ AL
0000ec16(4): AND byte ptr [RSP + 0x18],AL
0000ec1a(5): MOVZX EAX,byte ptr [R13 + 0x68]
0000ec1f(6): CMOVZ RBX,qword ptr [RSP + 0x8]
0000ec25(2): TEST AL,0x10
0000ec27(5): MOV qword ptr [RSP + 0x8],RBX
0000ec2c(2): JZ 0x0000ec59
0000ec2e(2): TEST AL,AL
0000ec30(6): JS 0x0000f0f0
0000ec36(4): MOV EAX,dword ptr [RSP + 0x58]
0000ec3a(5): MOV qword ptr [RSP + 0x20],R8
0000ec3f(2): TEST EAX,EAX
0000ec41(6): JZ 0x0000ed66
0000ec47(9): MOV qword ptr [RSP + 0x30],0x1
0000ec50(9): MOV qword ptr [RSP + 0x50],0x0
0000ec59(3): MOV R14,R13
0000ec5c(8): CMP qword ptr [0x188 + RSP],R8
0000ec64(6): JLE 0x0000ed54
0000ec6a(8): MOV RAX,qword ptr [0x160 + RSP]
0000ec72(4): LEA RBX,[R8 + 0x1]
0000ec76(3): CMP RBX,RAX
0000ec79(6): JGE 0x0000f120
0000ec7f(8): MOV RAX,qword ptr [0x150 + RSP]
0000ec87(3): CMP RBX,RAX
0000ec8a(6): JGE 0x0000f410
0000ec90(5): TEST byte ptr [R14 + 0x68],0x20
0000ec95(6): JNZ 0x0000f160
0000ec9b(4): LEA RAX,[R8 + 0x1]
0000ec9f(8): MOV qword ptr [0x168 + RSP],RAX
0000eca7(8): MOV RAX,qword ptr [0x128 + RSP]
0000ecaf(5): MOVZX R13D,byte ptr [RAX + R8*0x1]
0000ecb4(4): MOV RAX,qword ptr [R14 + 0x58]
0000ecb8(3): TEST RAX,RAX
0000ecbb(6): JZ 0x0000f3d0
0000ecc1(4): MOV R13,qword ptr [RAX + R13*0x8]
0000ecc5(9): CMP qword ptr [0x1d8 + RSP],0x0
0000ecce(2): JZ 0x0000ece4
0000ecd0(4): MOV RSI,qword ptr [RSP]
0000ecd4(5): MOV RDI,qword ptr [RSP + 0x28]
0000ecd9(3): MOV RDX,R13
0000ecdc(5): CALL 0x0000dfd0
0000ece1(3): MOV R13,RAX
0000ece4(3): TEST R13,R13
0000ece7(6): JNZ 0x0000ec08
0000eced(7): MOV ECX,dword ptr [0xd0 + RSP]
0000ecf4(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000ecfc(2): TEST ECX,ECX
0000ecfe(6): JNZ 0x0000f5c0
0000ed04(3): TEST RDI,RDI
0000ed07(2): JZ 0x0000ed54
0000ed09(8): MOVZX EAX,byte ptr [0xce + RSP]
0000ed11(3): XOR EAX,0x1
0000ed14(4): TEST byte ptr [RSP + 0x30],AL
0000ed18(2): JNZ 0x0000ed54
0000ed1a(8): MOV RSI,qword ptr [0x1e0 + RSP]
0000ed22(8): MOV RAX,qword ptr [0x168 + RSP]
0000ed2a(2): XOR ECX,ECX
0000ed2c(2): JMP 0x0000ed43
0000ed30(5): CMP qword ptr [RDI + RDX*0x8],0x0
0000ed35(3): MOV RAX,RDX
0000ed38(5): MOV ECX,0x1
0000ed3d(6): JNZ 0x0000f0b0
0000ed43(4): LEA RDX,[RAX + 0x1]
0000ed47(3): CMP RSI,RDX
0000ed4a(2): JGE 0x0000ed30
0000ed4c(2): TEST CL,CL
0000ed4e(6): JNZ 0x0000fc1e
0000ed54(5): MOV RAX,qword ptr [RSP + 0x50]
0000ed59(3): TEST RAX,RAX
0000ed5c(2): JZ 0x0000ed66
0000ed5e(5): MOV RDI,qword ptr [RSP + 0x8]
0000ed63(3): ADD qword ptr [RAX],RDI
0000ed66(5): MOV RAX,qword ptr [RSP + 0x20]
0000ed6b(4): CMP RAX,-0x1
0000ed6f(6): JZ 0x0000f430
0000ed75(4): CMP RAX,-0x2
0000ed79(6): JZ 0x0000f570
0000ed7f(5): MOV RAX,qword ptr [RSP + 0x20]
0000ed84(8): MOV qword ptr [0x1c8 + RSP],RAX
0000ed8c(5): MOV RAX,qword ptr [RSP + 0x48]
0000ed91(4): TEST byte ptr [RAX + 0x38],0x10
0000ed95(6): JNZ 0x0000f550
0000ed9b(9): CMP qword ptr [0x270 + RSP],0x1
0000eda4(6): JBE 0x0000f69c
0000edaa(5): MOV RCX,qword ptr [RSP + 0x20]
0000edaf(8): MOV RBX,qword ptr [0x1d8 + RSP]
0000edb7(4): MOV RDI,qword ptr [RSP]
0000edbb(4): MOV RAX,qword ptr [RBX + RCX*0x8]
0000edbf(4): MOV RSI,qword ptr [RAX + 0x10]
0000edc3(4): LEA RDX,[RAX + 0x18]
0000edc7(5): CALL 0x00009ac0
0000edcc(3): MOV R13,RAX
0000edcf(8): MOV qword ptr [0x1d0 + RSP],RAX
0000edd7(5): MOV RAX,qword ptr [RSP + 0x38]
0000eddc(7): TEST byte ptr [0xb0 + RAX],0x1
0000ede3(2): JNZ 0x0000ee00
0000ede5(5): MOV RAX,qword ptr [RSP + 0x38]
0000edea(8): CMP qword ptr [0x98 + RAX],0x0
0000edf2(6): JZ 0x0000f78c
0000edf8(8): MOV R13,qword ptr [0x1d0 + RSP]
0000ee00(10): MOV RSI,0x1ffffffffffffffe
0000ee0a(5): CMP qword ptr [RSP + 0x20],RSI
0000ee0f(8): MOV R15,qword ptr [0x1b8 + RSP]
0000ee17(6): JA 0x0000fa7b
0000ee1d(5): MOV RAX,qword ptr [RSP + 0x20]
0000ee22(4): ADD RAX,0x1
0000ee26(8): LEA RBX,[RAX*0x8]
0000ee2e(5): MOV qword ptr [RSP + 0x8],RAX
0000ee33(3): MOV RDI,RBX
0000ee36(5): CALL 0x00001b00
0000ee3b(3): TEST RAX,RAX
0000ee3e(3): MOV R12,RAX
0000ee41(6): JZ 0x0000f570
0000ee47(8): CMP qword ptr [0x98 + R15],0x0
0000ee4f(6): JZ 0x0000f6e5
0000ee55(3): MOV RDI,RBX
0000ee58(5): CALL 0x00001b00
0000ee5d(3): TEST RAX,RAX
0000ee60(3): MOV RBP,RAX
0000ee63(6): JZ 0x0000f568
0000ee69(5): MOV R14,qword ptr [RSP + 0x20]
0000ee6e(8): LEA RBX,[0xe0 + RSP]
0000ee76(5): MOV qword ptr [RSP + 0x10],R15
0000ee7b(5): MOV qword ptr [RSP + 0x18],RAX
0000ee80(5): MOV RAX,qword ptr [RSP + 0x8]
0000ee85(2): XOR ESI,ESI
0000ee87(3): MOV RDI,RBP
0000ee8a(8): LEA RDX,[RAX*0x8]
0000ee92(5): CALL 0x00001a60
0000ee97(4): PXOR XMM0,XMM0
0000ee9b(8): MOV qword ptr [0xe0 + RSP],R12
0000eea3(8): MOV qword ptr [0xe8 + RSP],RBP
0000eeab(8): MOV qword ptr [0xf0 + RSP],R13
0000eeb3(3): MOV RSI,RBX
0000eeb6(8): MOV qword ptr [0xf8 + RSP],R14
0000eebe(4): MOV RDI,qword ptr [RSP]
0000eec2(4): MOVAPS xmmword ptr [RBX + 0x20],XMM0
0000eec6(8): MOV qword ptr [RBX + 0x30],0x0
0000eece(5): CALL 0x0000e1c0
0000eed3(8): MOV RDI,qword ptr [0x110 + RSP]
0000eedb(3): MOV R15D,EAX
0000eede(5): CALL 0x000018d0
0000eee3(3): TEST R15D,R15D
0000eee6(6): JNZ 0x0000fb04
0000eeec(5): CMP qword ptr [R12],0x0
0000eef1(6): JNZ 0x0000fb63
0000eef7(5): CMP qword ptr [RBP],0x0
0000eefc(6): JNZ 0x0000fb63
0000ef02(8): MOV RDX,qword ptr [0x1d8 + RSP]
0000ef0a(6): NOP word ptr [RAX + RAX*0x1]
0000ef10(4): SUB R14,0x1
0000ef14(4): CMP R14,-0x1
0000ef18(6): JZ 0x0000f9db
0000ef1e(4): MOV RAX,qword ptr [RDX + R14*0x8]
0000ef22(3): TEST RAX,RAX
0000ef25(2): JZ 0x0000ef10
0000ef27(4): TEST byte ptr [RAX + 0x68],0x10
0000ef2b(2): JZ 0x0000ef10
0000ef2d(4): MOV RSI,qword ptr [RAX + 0x10]
0000ef31(4): MOV RDI,qword ptr [RSP]
0000ef35(4): LEA RDX,[RAX + 0x18]
0000ef39(3): MOV RCX,R14
0000ef3c(5): CALL 0x00009ac0
0000ef41(3): MOV R13,RAX
0000ef44(4): LEA RAX,[R14 + 0x1]
0000ef48(5): MOV qword ptr [RSP + 0x8],RAX
0000ef4d(5): JMP 0x0000ee80
0000ef52(5): CMP qword ptr [RSP + 0x70],RBP
0000ef57(6): JLE 0x0000ea8f
0000ef5d(5): MOV RAX,qword ptr [RSP + 0x78]
0000ef62(8): MOV RDI,qword ptr [0xb0 + RSP]
0000ef6a(5): MOV RSI,qword ptr [RSP + 0x68]
0000ef6f(4): MOVZX EAX,byte ptr [RAX + RBP*0x1]
0000ef73(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0000ef77(4): LEA RAX,[RBP + 0x1]
0000ef7b(4): CMP byte ptr [RSI + RDX*0x1],0x0
0000ef7f(6): JNZ 0x0000ead8
0000ef85(5): MOV RSI,qword ptr [RSP + 0x68]
0000ef8a(8): MOV RDI,qword ptr [0xb0 + RSP]
0000ef92(5): MOV RCX,qword ptr [RSP + 0x70]
0000ef97(5): MOV R8,qword ptr [RSP + 0x78]
0000ef9c(2): JMP 0x0000efb7
0000efa0(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
0000efa5(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0000efa9(4): LEA RAX,[RBP + 0x1]
0000efad(4): CMP byte ptr [RSI + RDX*0x1],0x0
0000efb1(6): JNZ 0x0000fc11
0000efb7(3): CMP RCX,RAX
0000efba(3): MOV RBP,RAX
0000efbd(2): JNZ 0x0000efa0
0000efbf(5): JMP 0x0000ea82
0000efc4(8): CMP qword ptr [0x90 + RSP],RBP
0000efcc(6): JG 0x0000f469
0000efd2(2): XOR ECX,ECX
0000efd4(3): MOV RAX,RBP
0000efd7(5): MOV RDI,qword ptr [RSP + 0x68]
0000efdc(8): MOV RSI,qword ptr [0xb0 + RSP]
0000efe4(8): MOV R9,qword ptr [0x90 + RSP]
0000efec(5): MOV R10,qword ptr [RSP + 0x78]
0000eff1(8): MOV R8,qword ptr [0x88 + RSP]
0000eff9(2): JMP 0x0000f012
0000f000(4): SUB RAX,0x1
0000f004(5): MOV ECX,0x1
0000f009(3): CMP RAX,R9
0000f00c(6): JL 0x0000f9f0
0000f012(2): XOR EDX,EDX
0000f014(3): CMP R8,RAX
0000f017(2): JLE 0x0000f01e
0000f019(5): MOVZX EDX,byte ptr [R10 + RAX*0x1]
0000f01e(3): TEST RSI,RSI
0000f021(2): JZ 0x0000f027
0000f023(4): MOVZX EDX,byte ptr [RSI + RDX*0x1]
0000f027(4): CMP byte ptr [RDI + RDX*0x1],0x0
0000f02b(2): JZ 0x0000f000
0000f02d(2): TEST CL,CL
0000f02f(6): JZ 0x0000ead8
0000f035(8): MOV qword ptr [0xd8 + RSP],RAX
0000f03d(3): MOV RBP,RAX
0000f040(5): JMP 0x0000ead8
0000f048(4): MOV dword ptr [RSP + 0x5c],EAX
0000f04c(4): NOP dword ptr [RAX]
0000f050(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f058(5): CALL 0x000018d0
0000f05d(5): MOV RAX,qword ptr [RSP + 0x38]
0000f062(8): CMP qword ptr [0x98 + RAX],0x0
0000f06a(6): JNZ 0x0000f990
0000f070(4): MOV RDI,qword ptr [RSP]
0000f074(5): CALL 0x000077d0
0000f079(8): MOV RSI,qword ptr [0x228 + RSP]
0000f081(9): XOR RSI,qword ptr FS:[0x28]
0000f08a(4): MOV EAX,dword ptr [RSP + 0x5c]
0000f08e(6): JNZ 0x0000fc2b
0000f094(7): ADD RSP,0x238
0000f09b(1): POP RBX
0000f09c(1): POP RBP
0000f09d(2): POP R12
0000f09f(2): POP R13
0000f0a1(2): POP R14
0000f0a3(2): POP R15
0000f0a5(1): RET
0000f0b0(4): MOV RSI,qword ptr [RSP]
0000f0b4(5): MOV RDI,qword ptr [RSP + 0x28]
0000f0b9(8): MOV qword ptr [0x168 + RSP],RDX
0000f0c1(2): XOR EDX,EDX
0000f0c3(5): CALL 0x0000dfd0
0000f0c8(7): MOV EDX,dword ptr [0xd0 + RSP]
0000f0cf(2): TEST EDX,EDX
0000f0d1(6): JNZ 0x0000fa0d
0000f0d7(3): TEST RAX,RAX
0000f0da(6): JNZ 0x0000fa20
0000f0e0(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f0e8(5): JMP 0x0000ed1a
0000f0f0(4): MOV RSI,qword ptr [R13 + 0x10]
0000f0f4(4): MOV RDI,qword ptr [RSP]
0000f0f8(4): LEA RDX,[R13 + 0x18]
0000f0fc(3): MOV RCX,R8
0000f0ff(5): MOV qword ptr [RSP + 0x10],R8
0000f104(5): CALL 0x00009ac0
0000f109(3): TEST RAX,RAX
0000f10c(5): MOV R8,qword ptr [RSP + 0x10]
0000f111(6): JZ 0x0000ec59
0000f117(5): JMP 0x0000ec36
0000f120(8): CMP RAX,qword ptr [0x178 + RSP]
0000f128(6): JGE 0x0000ec7f
0000f12e(4): MOV RDI,qword ptr [RSP]
0000f132(3): LEA ESI,[RBX + 0x1]
0000f135(5): CALL 0x00007020
0000f13a(2): TEST EAX,EAX
0000f13c(7): MOV dword ptr [0xd0 + RSP],EAX
0000f143(6): JNZ 0x0000fa28
0000f149(5): TEST byte ptr [R14 + 0x68],0x20
0000f14e(8): MOV R8,qword ptr [0x168 + RSP]
0000f156(6): JZ 0x0000ec9b
0000f15c(4): NOP dword ptr [RAX]
0000f160(5): CMP qword ptr [R14 + 0x10],0x0
0000f165(8): MOV R13,qword ptr [0x1b8 + RSP]
0000f16d(6): JLE 0x0000f49b
0000f173(7): LEA RAX,[0xd8 + R13]
0000f17a(3): XOR R12D,R12D
0000f17d(8): MOV qword ptr [0xa0 + RSP],RBX
0000f185(3): MOV RBX,R12
0000f188(3): MOV R12,R8
0000f18b(5): MOV qword ptr [RSP + 0x40],RAX
0000f190(5): JMP 0x0000f2e8
0000f198(2): TEST AL,0x1
0000f19a(6): JZ 0x0000f2da
0000f1a0(3): AND ECX,0x8
0000f1a3(6): JNZ 0x0000f2da
0000f1a9(3): TEST DL,0x20
0000f1ac(2): JZ 0x0000f1b6
0000f1ae(2): TEST AL,0x2
0000f1b0(6): JZ 0x0000f2da
0000f1b6(6): AND EDX,0x80
0000f1bc(2): JZ 0x0000f1d0
0000f1be(2): TEST AL,0x8
0000f1c0(6): JZ 0x0000f2da
0000f1c6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000f1d0(4): MOV RCX,qword ptr [RSP]
0000f1d4(5): MOV RSI,qword ptr [RSP + 0x40]
0000f1d9(3): MOV R8,R12
0000f1dc(3): MOV RDX,R15
0000f1df(3): MOV RDI,RBP
0000f1e2(5): CALL 0x0000c290
0000f1e7(2): TEST EAX,EAX
0000f1e9(6): JZ 0x0000f2d2
0000f1ef(3): MOVSXD RBP,EAX
0000f1f2(8): ADD RBP,qword ptr [0x168 + RSP]
0000f1fa(7): CMP dword ptr [0x200 + RSP],EAX
0000f201(8): CMOVGE EAX,dword ptr [0x200 + RSP]
0000f209(4): MOV RDI,qword ptr [RSP]
0000f20d(3): MOV RSI,RBP
0000f210(7): MOV dword ptr [0x200 + RSP],EAX
0000f217(5): CALL 0x00007170
0000f21c(2): TEST EAX,EAX
0000f21e(7): MOV dword ptr [0xd4 + RSP],EAX
0000f225(6): JNZ 0x0000f4c0
0000f22b(4): MOV RAX,qword ptr [R13 + 0x18]
0000f22f(8): LEA R12,[RBP*0x8]
0000f237(4): MOV RAX,qword ptr [RAX + R15*0x8]
0000f23b(8): MOV R15,qword ptr [0x1d8 + RSP]
0000f243(4): LEA RDX,[RAX + RAX*0x2]
0000f247(4): MOV RAX,qword ptr [R13 + 0x30]
0000f24b(3): ADD R15,R12
0000f24e(4): LEA RDX,[RAX + RDX*0x8]
0000f252(3): MOV RAX,qword ptr [R15]
0000f255(3): TEST RAX,RAX
0000f258(6): JZ 0x0000f358
0000f25e(4): MOV RSI,qword ptr [RAX + 0x50]
0000f262(5): MOV RDI,qword ptr [RSP + 0x60]
0000f267(5): CALL 0x00008cd0
0000f26c(2): TEST EAX,EAX
0000f26e(7): MOV dword ptr [0xd4 + RSP],EAX
0000f275(6): JNZ 0x0000f4c0
0000f27b(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000f282(4): MOV RDI,qword ptr [RSP]
0000f286(4): LEA RSI,[RBP + -0x1]
0000f28a(5): CALL 0x000098c0
0000f28f(5): MOV RDX,qword ptr [RSP + 0x60]
0000f294(8): MOV RDI,qword ptr [0x80 + RSP]
0000f29c(2): MOV ECX,EAX
0000f29e(8): ADD R12,qword ptr [0x1d8 + RSP]
0000f2a6(3): MOV RSI,R13
0000f2a9(5): CALL 0x00008e30
0000f2ae(8): MOV RDI,qword ptr [0xf0 + RSP]
0000f2b6(4): MOV qword ptr [R12],RAX
0000f2ba(5): CALL 0x000018d0
0000f2bf(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f2c7(5): CMP qword ptr [RDI + RBP*0x8],0x0
0000f2cc(6): JZ 0x0000f3b1
0000f2d2(8): MOV R12,qword ptr [0x168 + RSP]
0000f2da(4): ADD RBX,0x1
0000f2de(4): CMP RBX,qword ptr [R14 + 0x10]
0000f2e2(6): JGE 0x0000f490
0000f2e8(4): MOV RAX,qword ptr [R14 + 0x18]
0000f2ec(4): MOV RBP,qword ptr [R13]
0000f2f0(4): MOV R15,qword ptr [RAX + RBX*0x8]
0000f2f4(3): MOV RAX,R15
0000f2f7(4): SHL RAX,0x4
0000f2fb(3): ADD RAX,RBP
0000f2fe(4): TEST byte ptr [RAX + 0xa],0x10
0000f302(2): JZ 0x0000f2da
0000f304(3): MOV ECX,dword ptr [RAX + 0x8]
0000f307(6): TEST ECX,0x3ff00
0000f30d(4): MOV dword ptr [RSP + 0x10],ECX
0000f311(6): JZ 0x0000f1d0
0000f317(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000f31e(4): MOV RDI,qword ptr [RSP]
0000f322(3): MOV RSI,R12
0000f325(5): CALL 0x000098c0
0000f32a(4): MOV ECX,dword ptr [RSP + 0x10]
0000f32e(3): SHR ECX,0x8
0000f331(2): MOV EDX,ECX
0000f333(5): AND DX,0x3ff
0000f338(3): TEST CL,0x4
0000f33b(6): JNZ 0x0000f198
0000f341(3): AND ECX,0x8
0000f344(6): JZ 0x0000f1a9
0000f34a(2): TEST AL,0x1
0000f34c(6): JZ 0x0000f1a9
0000f352(2): JMP 0x0000f2da
0000f358(4): MOVDQU XMM0,xmmword ptr [RDX]
0000f35c(4): LEA RSI,[RBP + -0x1]
0000f360(4): MOV RDI,qword ptr [RSP]
0000f364(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0000f36c(4): MOV RAX,qword ptr [RDX + 0x10]
0000f370(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000f377(8): MOV qword ptr [0xf0 + RSP],RAX
0000f37f(5): CALL 0x000098c0
0000f384(8): MOV RDI,qword ptr [0x80 + RSP]
0000f38c(5): MOV RDX,qword ptr [RSP + 0x60]
0000f391(2): MOV ECX,EAX
0000f393(3): MOV RSI,R13
0000f396(5): CALL 0x00008e30
0000f39b(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f3a3(3): MOV qword ptr [R15],RAX
0000f3a6(5): CMP qword ptr [RDI + RBP*0x8],0x0
0000f3ab(6): JNZ 0x0000f2d2
0000f3b1(7): MOV EAX,dword ptr [0xd4 + RSP]
0000f3b8(2): TEST EAX,EAX
0000f3ba(6): JZ 0x0000f2d2
0000f3c0(8): MOV RBX,qword ptr [0xa0 + RSP]
0000f3c8(5): JMP 0x0000f4d0
0000f3d0(4): MOV RBP,qword ptr [R14 + 0x60]
0000f3d4(3): TEST RBP,RBP
0000f3d7(6): JZ 0x0000f585
0000f3dd(8): MOV RAX,qword ptr [0x168 + RSP]
0000f3e5(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000f3ec(4): MOV RDI,qword ptr [RSP]
0000f3f0(4): LEA RSI,[RAX + -0x1]
0000f3f4(5): CALL 0x000098c0
0000f3f9(2): TEST AL,0x1
0000f3fb(6): JZ 0x0000f4b0
0000f401(8): MOV R13,qword ptr [0x800 + RBP + R13*0x8]
0000f409(5): JMP 0x0000ecc5
0000f410(8): CMP RAX,qword ptr [0x178 + RSP]
0000f418(6): JGE 0x0000ec90
0000f41e(5): JMP 0x0000f12e
0000f423(3): MOV RDI,R12
0000f426(5): CALL 0x000018d0
0000f42b(5): NOP dword ptr [RAX + RAX*0x1]
0000f430(4): MOV RDI,qword ptr [RSP]
0000f434(5): CALL 0x00007970
0000f439(8): MOV RBP,qword ptr [0xd8 + RSP]
0000f441(8): MOVSXD RAX,dword ptr [0xac + RSP]
0000f449(3): ADD RBP,RAX
0000f44c(8): CMP RBP,qword ptr [0x90 + RSP]
0000f454(8): MOV qword ptr [0xd8 + RSP],RBP
0000f45c(2): JL 0x0000f469
0000f45e(5): CMP RBP,qword ptr [RSP + 0x70]
0000f463(6): JLE 0x0000e9d8
0000f469(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f471(8): MOV dword ptr [RSP + 0x5c],0x1
0000f479(5): JMP 0x0000f058
0000f480(8): MOV dword ptr [RSP + 0x5c],0x1
0000f488(5): JMP 0x0000f079
0000f490(8): MOV RBX,qword ptr [0xa0 + RSP]
0000f498(3): MOV R8,R12
0000f49b(11): MOV dword ptr [0xd0 + RSP],0x0
0000f4a6(5): JMP 0x0000ec9b
0000f4b0(5): MOV R13,qword ptr [RBP + R13*0x8]
0000f4b5(5): JMP 0x0000ecc5
0000f4c0(8): MOV RBX,qword ptr [0xa0 + RSP]
0000f4c8(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f4d0(3): TEST RDI,RDI
0000f4d3(7): MOV dword ptr [0xd0 + RSP],EAX
0000f4da(6): JZ 0x0000f5c0
0000f4e0(3): XOR R13D,R13D
0000f4e3(5): JMP 0x0000ecd0
0000f4f0(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000f4f7(4): MOV RDI,qword ptr [RSP]
0000f4fb(4): LEA RSI,[RAX + -0x1]
0000f4ff(5): CALL 0x000098c0
0000f504(2): TEST AL,0x1
0000f506(6): JZ 0x0000f675
0000f50c(4): MOV R14,qword ptr [RBX + 0x50]
0000f510(3): TEST R14,R14
0000f513(6): JNZ 0x0000eb7e
0000f519(7): MOV EAX,dword ptr [0xd0 + RSP]
0000f520(3): CMP EAX,0xc
0000f523(4): MOV dword ptr [RSP + 0x5c],EAX
0000f527(6): JZ 0x0000f050
0000f52d(7): LEA RCX,[0x15e10]
0000f534(7): LEA RSI,[0x15830]
0000f53b(7): LEA RDI,[0x158e4]
0000f542(5): MOV EDX,0x435
0000f547(5): CALL 0x00001a50
0000f54c(4): NOP dword ptr [RAX]
0000f550(5): MOV RAX,qword ptr [RSP + 0x38]
0000f555(8): CMP qword ptr [0x98 + RAX],0x0
0000f55d(6): JZ 0x0000f78c
0000f563(5): JMP 0x0000f6af
0000f568(3): MOV RDI,R12
0000f56b(5): CALL 0x000018d0
0000f570(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f578(8): MOV dword ptr [RSP + 0x5c],0xc
0000f580(5): JMP 0x0000f058
0000f585(8): MOV RDI,qword ptr [0x1b8 + RSP]
0000f58d(3): MOV RSI,R14
0000f590(5): CALL 0x0000a570
0000f595(2): TEST AL,AL
0000f597(6): JNZ 0x0000ecb4
0000f59d(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f5a5(11): MOV dword ptr [0xd0 + RSP],0xc
0000f5b0(3): TEST RDI,RDI
0000f5b3(6): JNZ 0x0000f4e0
0000f5b9(7): NOP dword ptr [RAX]
0000f5c0(8): MOV dword ptr [RSP + 0x5c],0xc
0000f5c8(5): JMP 0x0000f058
0000f5cd(5): MOV RBX,qword ptr [RSP + 0x68]
0000f5d2(8): MOV R13D,dword ptr [0xac + RSP]
0000f5da(8): MOV R14,qword ptr [0x90 + RSP]
0000f5e2(5): MOV R15,qword ptr [RSP + 0x70]
0000f5e7(8): MOV R12,qword ptr [0x88 + RSP]
0000f5ef(2): JMP 0x0000f638
0000f5f8(3): CMP R12,RBP
0000f5fb(3): MOV RAX,RBX
0000f5fe(2): JLE 0x0000f60f
0000f600(8): MOV RAX,qword ptr [0x128 + RSP]
0000f608(4): MOVZX EAX,byte ptr [RAX + RDX*0x1]
0000f60c(3): ADD RAX,RBX
0000f60f(3): CMP byte ptr [RAX],0x0
0000f612(6): JNZ 0x0000ead8
0000f618(3): MOVSXD RAX,R13D
0000f61b(3): ADD RBP,RAX
0000f61e(3): CMP RBP,R14
0000f621(8): MOV qword ptr [0xd8 + RSP],RBP
0000f629(6): JL 0x0000f469
0000f62f(3): CMP RBP,R15
0000f632(6): JG 0x0000f469
0000f638(3): MOV RDX,RBP
0000f63b(8): SUB RDX,qword ptr [0x148 + RSP]
0000f643(8): CMP qword ptr [0x158 + RSP],RDX
0000f64b(2): JA 0x0000f5f8
0000f64d(7): MOV EDX,dword ptr [0x280 + RSP]
0000f654(4): MOV RDI,qword ptr [RSP]
0000f658(3): MOV RSI,RBP
0000f65b(5): CALL 0x00009b90
0000f660(2): TEST EAX,EAX
0000f662(6): JNZ 0x0000f048
0000f668(3): MOV RDX,RBP
0000f66b(8): SUB RDX,qword ptr [0x148 + RSP]
0000f673(2): JMP 0x0000f5f8
0000f675(2): TEST EAX,EAX
0000f677(6): JZ 0x0000eb7e
0000f67d(2): MOV EDX,EAX
0000f67f(3): AND EDX,0x6
0000f682(3): CMP EDX,0x6
0000f685(6): JZ 0x0000faef
0000f68b(2): TEST AL,0x2
0000f68d(6): JZ 0x0000fb40
0000f693(4): MOV R14,qword ptr [RBX + 0x58]
0000f697(5): JMP 0x0000f510
0000f69c(5): MOV RAX,qword ptr [RSP + 0x38]
0000f6a1(8): CMP qword ptr [0x98 + RAX],0x0
0000f6a9(6): JZ 0x0000f78c
0000f6af(5): MOV RCX,qword ptr [RSP + 0x20]
0000f6b4(8): MOV RBX,qword ptr [0x1d8 + RSP]
0000f6bc(4): MOV RDI,qword ptr [RSP]
0000f6c0(4): MOV RAX,qword ptr [RBX + RCX*0x8]
0000f6c4(4): MOV RSI,qword ptr [RAX + 0x10]
0000f6c8(4): LEA RDX,[RAX + 0x18]
0000f6cc(5): CALL 0x00009ac0
0000f6d1(8): MOV qword ptr [0x1d0 + RSP],RAX
0000f6d9(5): JMP 0x0000edf8
0000f6de(2): XOR ECX,ECX
0000f6e0(5): JMP 0x0000e96e
0000f6e5(4): PXOR XMM0,XMM0
0000f6e9(8): MOV qword ptr [0xe0 + RSP],RAX
0000f6f1(4): MOV RDI,qword ptr [RSP]
0000f6f5(5): MOV RAX,qword ptr [RSP + 0x20]
0000f6fa(8): LEA RBX,[0xe0 + RSP]
0000f702(12): MOV qword ptr [0xe8 + RSP],0x0
0000f70e(8): MOV qword ptr [0xf0 + RSP],R13
0000f716(3): MOV RSI,RBX
0000f719(12): MOV qword ptr [0x110 + RSP],0x0
0000f725(8): MOVAPS xmmword ptr [0x100 + RSP],XMM0
0000f72d(8): MOV qword ptr [0xf8 + RSP],RAX
0000f735(5): CALL 0x0000e1c0
0000f73a(8): MOV RDI,qword ptr [0x110 + RSP]
0000f742(4): MOV dword ptr [RSP + 0x8],EAX
0000f746(5): CALL 0x000018d0
0000f74b(4): MOV EAX,dword ptr [RSP + 0x8]
0000f74f(2): TEST EAX,EAX
0000f751(6): JNZ 0x0000fb98
0000f757(5): CMP qword ptr [R12],0x0
0000f75c(6): JZ 0x0000f423
0000f762(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f76a(5): CALL 0x000018d0
0000f76f(5): MOV RAX,qword ptr [RSP + 0x20]
0000f774(8): MOV qword ptr [0x1d8 + RSP],R12
0000f77c(8): MOV qword ptr [0x1d0 + RSP],R13
0000f784(8): MOV qword ptr [0x1c8 + RSP],RAX
0000f78c(9): CMP qword ptr [0x270 + RSP],0x0
0000f795(6): JZ 0x0000f050
0000f79b(9): CMP qword ptr [0x270 + RSP],0x1
0000f7a4(6): JZ 0x0000fbc8
0000f7aa(8): MOV RSI,qword ptr [0xb8 + RSP]
0000f7b2(8): MOV RCX,qword ptr [0x270 + RSP]
0000f7ba(7): MOV RDX,-0x1
0000f7c1(4): SHL RCX,0x4
0000f7c5(4): LEA RAX,[RSI + 0x10]
0000f7c9(3): ADD RCX,RSI
0000f7cc(4): MOV qword ptr [RAX + 0x8],RDX
0000f7d0(3): MOV qword ptr [RAX],RDX
0000f7d3(4): ADD RAX,0x10
0000f7d7(3): CMP RCX,RAX
0000f7da(2): JNZ 0x0000f7cc
0000f7dc(8): MOV RDI,qword ptr [0xb8 + RSP]
0000f7e4(8): MOV RAX,qword ptr [0x1c8 + RSP]
0000f7ec(4): MOV qword ptr [RDI + 0x8],RAX
0000f7f0(5): MOV RAX,qword ptr [RSP + 0x48]
0000f7f5(7): MOV qword ptr [RDI],0x0
0000f7fc(4): TEST byte ptr [RAX + 0x38],0x10
0000f800(6): JNZ 0x0000fbe3
0000f806(9): CMP qword ptr [0x270 + RSP],0x1
0000f80f(6): JZ 0x0000fbe3
0000f815(5): MOV RAX,qword ptr [RSP + 0x38]
0000f81a(3): XOR R8D,R8D
0000f81d(7): TEST byte ptr [0xb0 + RAX],0x1
0000f824(2): JZ 0x0000f835
0000f826(3): XOR R8D,R8D
0000f829(8): CMP qword ptr [0x98 + RAX],0x0
0000f831(4): SETG R8B
0000f835(8): MOV RBX,qword ptr [0xb8 + RSP]
0000f83d(8): MOV RDX,qword ptr [0x270 + RSP]
0000f845(4): MOV RSI,qword ptr [RSP]
0000f849(5): MOV RDI,qword ptr [RSP + 0x48]
0000f84e(3): MOV RCX,RBX
0000f851(5): CALL 0x0000cc50
0000f856(2): TEST EAX,EAX
0000f858(6): JNZ 0x0000fb2d
0000f85e(3): MOV RAX,qword ptr [RBX]
0000f861(9): MOVZX R11D,byte ptr [0x1ac + RSP]
0000f86a(8): MOV R10,qword ptr [0x150 + RSP]
0000f872(2): XOR ECX,ECX
0000f874(8): MOV R9,qword ptr [0x138 + RSP]
0000f87c(8): MOV R8,qword ptr [0x158 + RSP]
0000f884(8): MOV RDI,qword ptr [0xd8 + RSP]
0000f88c(8): MOV RDX,qword ptr [0xb8 + RSP]
0000f894(2): JMP 0x0000f899
0000f896(3): MOV RAX,qword ptr [RDX]
0000f899(4): CMP RAX,-0x1
0000f89d(2): JZ 0x0000f8b9
0000f89f(3): TEST R11B,R11B
0000f8a2(4): MOV RSI,qword ptr [RDX + 0x8]
0000f8a6(6): JNZ 0x0000fbea
0000f8ac(3): ADD RAX,RDI
0000f8af(3): ADD RSI,RDI
0000f8b2(3): MOV qword ptr [RDX],RAX
0000f8b5(4): MOV qword ptr [RDX + 0x8],RSI
0000f8b9(4): ADD RCX,0x1
0000f8bd(4): ADD RDX,0x10
0000f8c1(8): CMP RCX,qword ptr [0x270 + RSP]
0000f8c9(2): JNZ 0x0000f896
0000f8cb(9): CMP qword ptr [0x98 + RSP],0x0
0000f8d4(2): JLE 0x0000f915
0000f8d6(8): MOV RDX,qword ptr [0x98 + RSP]
0000f8de(8): MOV RDI,qword ptr [0xb8 + RSP]
0000f8e6(3): MOV RAX,RCX
0000f8e9(4): SHL RAX,0x4
0000f8ed(3): ADD RDX,RCX
0000f8f0(5): LEA RAX,[RDI + RAX*0x1 + 0x8]
0000f8f5(4): SHL RDX,0x4
0000f8f9(5): LEA RSI,[RDI + RDX*0x1 + 0x8]
0000f8fe(7): MOV RDX,-0x1
0000f905(4): MOV qword ptr [RAX + -0x8],RDX
0000f909(3): MOV qword ptr [RAX],RDX
0000f90c(4): ADD RAX,0x10
0000f910(3): CMP RSI,RAX
0000f913(2): JNZ 0x0000f905
0000f915(5): MOV RAX,qword ptr [RSP + 0x38]
0000f91a(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f922(7): MOV R9,qword ptr [0xe0 + RAX]
0000f929(3): TEST R9,R9
0000f92c(6): JZ 0x0000f058
0000f932(8): MOV R10,qword ptr [0xb8 + RSP]
0000f93a(3): XOR R8D,R8D
0000f93d(4): LEA RDX,[R10 + 0x10]
0000f941(2): JMP 0x0000f979
0000f943(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
0000f948(3): CMP RAX,R8
0000f94b(2): JZ 0x0000f972
0000f94d(4): ADD RAX,0x1
0000f951(4): SHL RAX,0x4
0000f955(4): MOV RAX,qword ptr [R10 + RAX*0x1]
0000f959(3): MOV qword ptr [RDX],RAX
0000f95c(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
0000f961(4): ADD RAX,0x1
0000f965(4): SHL RAX,0x4
0000f969(5): MOV RAX,qword ptr [R10 + RAX*0x1 + 0x8]
0000f96e(4): MOV qword ptr [RDX + 0x8],RAX
0000f972(4): ADD RDX,0x10
0000f976(3): MOV R8,RSI
0000f979(4): LEA RSI,[R8 + 0x1]
0000f97d(3): CMP RSI,RCX
0000f980(2): JNZ 0x0000f943
0000f982(5): JMP 0x0000f058
0000f990(4): MOV RDI,qword ptr [RSP]
0000f994(5): CALL 0x00007970
0000f999(8): MOV RDI,qword ptr [0x218 + RSP]
0000f9a1(5): CALL 0x000018d0
0000f9a6(8): MOV RDI,qword ptr [0x1f8 + RSP]
0000f9ae(5): CALL 0x000018d0
0000f9b3(5): JMP 0x0000f070
0000f9b8(5): MOV RAX,qword ptr [RSP + 0x38]
0000f9bd(7): TEST byte ptr [0xb0 + RAX],0x2
0000f9c4(6): JNZ 0x0000e899
0000f9ca(12): MOV qword ptr [0x1d8 + RSP],0x0
0000f9d6(5): JMP 0x0000e8d5
0000f9db(3): MOV RDI,R12
0000f9de(5): CALL 0x000018d0
0000f9e3(3): MOV RDI,RBP
0000f9e6(5): CALL 0x000018d0
0000f9eb(5): JMP 0x0000f430
0000f9f0(8): MOV qword ptr [0xd8 + RSP],RAX
0000f9f8(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000fa00(8): MOV dword ptr [RSP + 0x5c],0x1
0000fa08(5): JMP 0x0000f058
0000fa0d(3): TEST RAX,RAX
0000fa10(3): MOV R13,RAX
0000fa13(6): JNZ 0x0000ec08
0000fa19(5): JMP 0x0000ed54
0000fa20(3): MOV R13,RAX
0000fa23(5): JMP 0x0000ec08
0000fa28(3): CMP EAX,0xc
0000fa2b(6): JZ 0x0000f570
0000fa31(7): LEA RCX,[0x15e10]
0000fa38(7): LEA RSI,[0x15830]
0000fa3f(7): LEA RDI,[0x158e4]
0000fa46(5): MOV EDX,0x46c
0000fa4b(5): CALL 0x00001a50
0000fa50(5): CMP byte ptr [R14 + 0x68],0x0
0000fa55(2): JS 0x0000fac6
0000fa57(4): MOV ESI,dword ptr [RSP + 0x58]
0000fa5b(5): MOV RAX,qword ptr [RSP + 0x8]
0000fa60(2): TEST ESI,ESI
0000fa62(5): MOV qword ptr [RSP + 0x20],RAX
0000fa67(6): JZ 0x0000ed66
0000fa6d(9): MOV qword ptr [RSP + 0x30],0x1
0000fa76(5): JMP 0x0000ebcd
0000fa7b(3): MOV RDI,RBX
0000fa7e(8): MOV dword ptr [RSP + 0x5c],0xc
0000fa86(5): JMP 0x0000f058
0000fa8b(4): LEA RBX,[R14 + 0x10]
0000fa8f(4): LEA RBP,[R14 + 0x18]
0000fa93(4): MOV RDI,qword ptr [RSP]
0000fa97(2): XOR ECX,ECX
0000fa99(3): MOV RDX,RBP
0000fa9c(3): MOV RSI,RBX
0000fa9f(5): CALL 0x00009770
0000faa4(2): TEST EAX,EAX
0000faa6(7): MOV dword ptr [0xd0 + RSP],EAX
0000faad(2): JNZ 0x0000faf8
0000faaf(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000fab4(2): TEST AL,0x40
0000fab6(6): JNZ 0x0000fba0
0000fabc(5): MOV byte ptr [RSP + 0x18],0x0
0000fac1(5): JMP 0x0000ebb3
0000fac6(4): MOV RSI,qword ptr [R14 + 0x10]
0000faca(5): MOV RCX,qword ptr [RSP + 0x8]
0000facf(4): LEA RDX,[R14 + 0x18]
0000fad3(4): MOV RDI,qword ptr [RSP]
0000fad7(5): CALL 0x00009ac0
0000fadc(3): TEST RAX,RAX
0000fadf(5): MOV qword ptr [RSP + 0x30],RAX
0000fae4(6): JZ 0x0000ebcd
0000faea(5): JMP 0x0000fa57
0000faef(4): MOV R14,qword ptr [RBX + 0x60]
0000faf3(5): JMP 0x0000f510
0000faf8(2): CDQE
0000fafa(5): MOV qword ptr [RSP + 0x20],RAX
0000faff(5): JMP 0x0000ed66
0000fb04(5): MOV R14,qword ptr [RSP + 0x18]
0000fb09(3): MOV EAX,R15D
0000fb0c(3): MOV RDI,R12
0000fb0f(4): MOV dword ptr [RSP + 0x8],EAX
0000fb13(5): CALL 0x000018d0
0000fb18(3): MOV RDI,R14
0000fb1b(5): CALL 0x000018d0
0000fb20(4): MOV EAX,dword ptr [RSP + 0x8]
0000fb24(3): CMP EAX,0x1
0000fb27(6): JZ 0x0000f430
0000fb2d(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000fb35(4): MOV dword ptr [RSP + 0x5c],EAX
0000fb39(5): JMP 0x0000f058
0000fb40(2): TEST AL,0x4
0000fb42(6): JZ 0x0000eb7e
0000fb48(4): MOV RDX,qword ptr [R14 + 0x50]
0000fb4c(5): MOV RDI,qword ptr [RSP + 0x28]
0000fb51(2): MOV ECX,EAX
0000fb53(3): MOV RSI,RBX
0000fb56(5): CALL 0x00008e30
0000fb5b(3): MOV R14,RAX
0000fb5e(5): JMP 0x0000f510
0000fb63(5): MOV R15,qword ptr [RSP + 0x10]
0000fb68(5): MOV RCX,qword ptr [RSP + 0x8]
0000fb6d(3): MOV RDX,RBP
0000fb70(3): MOV RSI,R12
0000fb73(5): MOV qword ptr [RSP + 0x20],R14
0000fb78(3): MOV RDI,R15
0000fb7b(5): CALL 0x000092f0
0000fb80(3): MOV RDI,RBP
0000fb83(4): MOV dword ptr [RSP + 0x8],EAX
0000fb87(5): CALL 0x000018d0
0000fb8c(4): MOV EAX,dword ptr [RSP + 0x8]
0000fb90(2): TEST EAX,EAX
0000fb92(6): JZ 0x0000f762
0000fb98(3): XOR R14D,R14D
0000fb9b(5): JMP 0x0000fb0c
0000fba0(4): MOV RDI,qword ptr [RSP]
0000fba4(3): MOV RDX,RBP
0000fba7(3): MOV RSI,RBX
0000fbaa(5): CALL 0x0000d6e0
0000fbaf(2): TEST EAX,EAX
0000fbb1(7): MOV dword ptr [0xd0 + RSP],EAX
0000fbb8(6): JNZ 0x0000faf8
0000fbbe(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000fbc3(5): JMP 0x0000fabc
0000fbc8(8): MOV RSI,qword ptr [0xb8 + RSP]
0000fbd0(8): MOV RAX,qword ptr [0x1c8 + RSP]
0000fbd8(7): MOV qword ptr [RSI],0x0
0000fbdf(4): MOV qword ptr [RSI + 0x8],RAX
0000fbe3(2): XOR EAX,EAX
0000fbe5(5): JMP 0x0000f861
0000fbea(3): CMP R10,RAX
0000fbed(2): JZ 0x0000fc0c
0000fbef(4): MOV RAX,qword ptr [R9 + RAX*0x8]
0000fbf3(3): CMP R10,RSI
0000fbf6(3): MOV qword ptr [RDX],RAX
0000fbf9(2): JZ 0x0000fc04
0000fbfb(4): MOV RSI,qword ptr [R9 + RSI*0x8]
0000fbff(5): JMP 0x0000f8ac
0000fc04(3): MOV RSI,R8
0000fc07(5): JMP 0x0000f8ac
0000fc0c(3): MOV RAX,R8
0000fc0f(2): JMP 0x0000fbf3
0000fc11(8): MOV qword ptr [0xd8 + RSP],RBP
0000fc19(5): JMP 0x0000ead8
0000fc1e(8): MOV qword ptr [0x168 + RSP],RAX
0000fc26(5): JMP 0x0000ed54
0000fc2b(5): CALL 0x000019e0
0000fc30(2): PUSH R15
0000fc32(2): PUSH R14
0000fc34(3): MOV RAX,RDI
0000fc37(2): PUSH R13
0000fc39(2): PUSH R12
0000fc3b(3): MOV R13,RSI
0000fc3e(1): PUSH RBP
0000fc3f(1): PUSH RBX
0000fc40(3): MOV RBP,RDX
0000fc43(3): MOV RBX,RCX
0000fc46(8): LEA RCX,[RDX*0x8]
0000fc4e(7): SUB RSP,0xa8
0000fc55(7): MOV R12,qword ptr [0x98 + RAX]
0000fc5c(7): MOV RAX,qword ptr [0xb8 + RAX]
0000fc63(5): MOV qword ptr [RSP + 0x8],RDI
0000fc68(5): MOV qword ptr [RSP + 0x18],RCX
0000fc6d(9): MOV RDI,qword ptr FS:[0x28]
0000fc76(8): MOV qword ptr [0x98 + RSP],RDI
0000fc7e(2): XOR EDI,EDI
0000fc80(4): MOV RDX,qword ptr [RAX + RDX*0x8]
0000fc84(8): MOV dword ptr [RSP + 0x5c],0x0
0000fc8c(4): MOV RCX,qword ptr [RBX + 0x8]
0000fc90(3): TEST RDX,RDX
0000fc93(6): JZ 0x0000fee8
0000fc99(4): LEA RDI,[RDX + 0x8]
0000fc9d(3): TEST RCX,RCX
0000fca0(5): MOV qword ptr [RSP + 0x10],RDI
0000fca5(2): JNZ 0x0000fcf8
0000fca7(3): MOV RDX,qword ptr [RSI]
0000fcaa(8): MOV qword ptr [RDX + RBP*0x8],0x0
0000fcb2(4): MOV RDX,qword ptr [RAX + RBP*0x8]
0000fcb6(2): XOR EAX,EAX
0000fcb8(4): TEST byte ptr [RDX + 0x68],0x40
0000fcbc(6): JNZ 0x0000fd9f
0000fcc2(6): NOP word ptr [RAX + RAX*0x1]
0000fcc8(8): MOV RDI,qword ptr [0x98 + RSP]
0000fcd0(9): XOR RDI,qword ptr FS:[0x28]
0000fcd9(6): JNZ 0x0001047b
0000fcdf(7): ADD RSP,0xa8
0000fce6(1): POP RBX
0000fce7(1): POP RBP
0000fce8(2): POP R12
0000fcea(2): POP R13
0000fcec(2): POP R14
0000fcee(2): POP R15
0000fcf0(1): RET
0000fcf8(5): LEA RDI,[RSP + 0x60]
0000fcfd(3): MOV RDX,RBX
0000fd00(3): MOV RSI,R12
0000fd03(8): MOV dword ptr [RSP + 0x60],0x0
0000fd0b(5): CALL 0x000090f0
0000fd10(3): MOV RDX,RAX
0000fd13(4): MOV EAX,dword ptr [RSP + 0x60]
0000fd17(2): TEST EAX,EAX
0000fd19(2): JNZ 0x0000fcc8
0000fd1b(4): MOV R15,qword ptr [RDX + 0x38]
0000fd1f(4): LEA R14,[RDX + 0x38]
0000fd23(3): TEST R15,R15
0000fd26(6): JZ 0x0000ff30
0000fd2c(5): MOV RSI,qword ptr [RSP + 0x10]
0000fd31(3): MOV RDX,R14
0000fd34(3): MOV RDI,RBX
0000fd37(5): CALL 0x000085f0
0000fd3c(2): TEST EAX,EAX
0000fd3e(4): MOV dword ptr [RSP + 0x5c],EAX
0000fd42(2): JNZ 0x0000fcc8
0000fd44(5): CMP qword ptr [R13 + 0x28],0x0
0000fd49(6): JNZ 0x0000ffc0
0000fd4f(5): MOV R14,qword ptr [RSP + 0x18]
0000fd54(4): ADD R14,qword ptr [R13]
0000fd58(5): LEA RDI,[RSP + 0x5c]
0000fd5d(3): MOV RDX,RBX
0000fd60(3): MOV RSI,R12
0000fd63(5): CALL 0x000090f0
0000fd68(3): MOV qword ptr [R14],RAX
0000fd6b(4): MOV EAX,dword ptr [RSP + 0x5c]
0000fd6f(2): TEST EAX,EAX
0000fd71(6): JNZ 0x0000fcc8
0000fd77(6): CMP qword ptr [RSP + 0x10],0x0
0000fd7d(6): JZ 0x0000fcc8
0000fd83(5): MOV RAX,qword ptr [RSP + 0x8]
0000fd88(7): MOV RAX,qword ptr [0xb8 + RAX]
0000fd8f(4): MOV RDX,qword ptr [RAX + RBP*0x8]
0000fd93(2): XOR EAX,EAX
0000fd95(4): TEST byte ptr [RDX + 0x68],0x40
0000fd99(6): JZ 0x0000fcc8
0000fd9f(5): MOV RAX,qword ptr [RSP + 0x8]
0000fda4(2): XOR EBX,EBX
0000fda6(7): MOV RSI,qword ptr [0xc8 + RAX]
0000fdad(3): MOV RDX,RSI
0000fdb0(3): CMP RBX,RDX
0000fdb3(2): JGE 0x0000fe13
0000fdb5(4): LEA RAX,[RBX + RDX*0x1]
0000fdb9(3): MOV RCX,RAX
0000fdbc(4): SHR RCX,0x3f
0000fdc0(3): ADD RCX,RAX
0000fdc3(5): MOV RAX,qword ptr [RSP + 0x8]
0000fdc8(3): SAR RCX,1
0000fdcb(7): MOV RDI,qword ptr [0xd8 + RAX]
0000fdd2(4): LEA RAX,[RCX + RCX*0x4]
0000fdd6(5): CMP RBP,qword ptr [RDI + RAX*0x8 + 0x8]
0000fddb(2): JLE 0x0000fe0e
0000fddd(5): JMP 0x0000ff17
0000fde8(4): LEA RDX,[RBX + RCX*0x1]
0000fdec(3): MOV RAX,RDX
0000fdef(4): SHR RAX,0x3f
0000fdf3(3): ADD RAX,RDX
0000fdf6(3): SAR RAX,1
0000fdf9(4): LEA RDX,[RAX + RAX*0x4]
0000fdfd(3): MOV R8,RAX
0000fe00(5): CMP RBP,qword ptr [RDI + RDX*0x8 + 0x8]
0000fe05(6): JG 0x0000ff20
0000fe0b(3): MOV RCX,RAX
0000fe0e(3): CMP RBX,RCX
0000fe11(2): JL 0x0000fde8
0000fe13(3): CMP RSI,RBX
0000fe16(6): JLE 0x0000ff10
0000fe1c(4): LEA RAX,[RBX + RBX*0x4]
0000fe20(8): LEA RSI,[RAX*0x8]
0000fe28(5): MOV RAX,qword ptr [RSP + 0x8]
0000fe2d(5): MOV qword ptr [RSP + 0x40],RSI
0000fe32(7): MOV RAX,qword ptr [0xd8 + RAX]
0000fe39(5): CMP RBP,qword ptr [RAX + RSI*0x1 + 0x8]
0000fe3e(6): JNZ 0x0000ff10
0000fe44(4): CMP RBX,-0x1
0000fe48(6): JZ 0x0000ff10
0000fe4e(5): MOV RAX,qword ptr [RSP + 0x8]
0000fe53(9): MOV qword ptr [RSP + 0x60],0x0
0000fe5c(7): MOV R12,qword ptr [0x98 + RAX]
0000fe63(5): MOV RAX,qword ptr [RSP + 0x10]
0000fe68(5): CMP qword ptr [RAX + 0x8],0x0
0000fe6d(6): JLE 0x0000ff10
0000fe73(5): LEA RAX,[RSP + 0x60]
0000fe78(9): MOV qword ptr [RSP + 0x20],0x0
0000fe81(5): MOV qword ptr [RSP + 0x48],RBX
0000fe86(3): MOV R15,R13
0000fe89(5): MOV qword ptr [RSP + 0x38],RAX
0000fe8e(2): JMP 0x0000feb2
0000fe90(2): CMP AL,0x4
0000fe92(6): JZ 0x00010218
0000fe98(5): MOV RCX,qword ptr [RSP + 0x10]
0000fe9d(6): ADD qword ptr [RSP + 0x20],0x1
0000fea3(5): MOV RAX,qword ptr [RSP + 0x20]
0000fea8(4): CMP RAX,qword ptr [RCX + 0x8]
0000feac(6): JGE 0x0001046b
0000feb2(5): MOV RAX,qword ptr [RSP + 0x10]
0000feb7(5): MOV RDI,qword ptr [RSP + 0x20]
0000febc(4): MOV RAX,qword ptr [RAX + 0x10]
0000fec0(4): MOV R14,qword ptr [RAX + RDI*0x8]
0000fec4(3): MOV RAX,R14
0000fec7(4): SHL RAX,0x4
0000fecb(4): ADD RAX,qword ptr [R12]
0000fecf(4): CMP R14,qword ptr [R15 + 0x10]
0000fed3(4): MOVZX EAX,byte ptr [RAX + 0x8]
0000fed7(2): JNZ 0x0000fe90
0000fed9(4): CMP RBP,qword ptr [R15 + 0x18]
0000fedd(2): JNZ 0x0000fe90
0000fedf(2): JMP 0x0000fe98
0000fee8(8): LEA R14,[RBP*0x8]
0000fef0(3): ADD R14,qword ptr [RSI]
0000fef3(3): TEST RCX,RCX
0000fef6(6): JNZ 0x0000ffb0
0000fefc(7): MOV qword ptr [R14],0x0
0000ff03(2): XOR EAX,EAX
0000ff05(5): JMP 0x0000fcc8
0000ff10(2): XOR EAX,EAX
0000ff12(5): JMP 0x0000fcc8
0000ff17(3): MOV R8,RCX
0000ff1a(3): MOV RCX,RDX
0000ff1d(3): NOP dword ptr [RAX]
0000ff20(4): LEA RBX,[R8 + 0x1]
0000ff24(3): MOV RDX,RCX
0000ff27(5): JMP 0x0000fdb0
0000ff30(4): MOV RDI,qword ptr [RBX + 0x8]
0000ff34(8): MOV qword ptr [RDX + 0x40],0x0
0000ff3c(5): MOV qword ptr [RSP + 0x20],RDX
0000ff41(4): MOV qword ptr [RDX + 0x38],RDI
0000ff45(4): SHL RDI,0x3
0000ff49(5): CALL 0x00001b00
0000ff4e(5): MOV RDX,qword ptr [RSP + 0x20]
0000ff53(3): TEST RAX,RAX
0000ff56(4): MOV qword ptr [RDX + 0x48],RAX
0000ff5a(2): JZ 0x0000ffa3
0000ff5c(5): CMP qword ptr [RBX + 0x8],0x0
0000ff61(8): MOV dword ptr [RSP + 0x60],0x0
0000ff69(2): JG 0x0000ff7e
0000ff6b(5): JMP 0x0000fd2c
0000ff70(4): ADD R15,0x1
0000ff74(4): CMP R15,qword ptr [RBX + 0x8]
0000ff78(6): JGE 0x0000fd2c
0000ff7e(4): MOV RAX,qword ptr [RBX + 0x10]
0000ff82(3): MOV RDI,R14
0000ff85(4): MOV RAX,qword ptr [RAX + R15*0x8]
0000ff89(4): LEA RDX,[RAX + RAX*0x2]
0000ff8d(5): MOV RAX,qword ptr [R12 + 0x38]
0000ff92(4): LEA RSI,[RAX + RDX*0x8]
0000ff96(5): CALL 0x00008000
0000ff9b(2): TEST EAX,EAX
0000ff9d(4): MOV dword ptr [RSP + 0x60],EAX
0000ffa1(2): JZ 0x0000ff70
0000ffa3(5): MOV EAX,0xc
0000ffa8(5): JMP 0x0000fcc8
0000ffb0(9): MOV qword ptr [RSP + 0x10],0x0
0000ffb9(5): JMP 0x0000fd58
0000ffc0(5): MOV RAX,qword ptr [RSP + 0x8]
0000ffc5(7): MOV RAX,qword ptr [0xd8 + RAX]
0000ffcc(5): MOV qword ptr [RSP + 0x20],RAX
0000ffd1(6): JLE 0x000100ab
0000ffd7(3): XOR R15D,R15D
0000ffda(6): NOP word ptr [RAX + RAX*0x1]
0000ffe0(4): MOV RAX,qword ptr [R13 + 0x30]
0000ffe4(5): MOV RDI,qword ptr [RSP + 0x20]
0000ffe9(4): MOV RAX,qword ptr [RAX + R15*0x8]
0000ffed(4): LEA RAX,[RAX + RAX*0x4]
0000fff1(4): LEA RDX,[RDI + RAX*0x8]
0000fff5(4): CMP RBP,qword ptr [RDX + 0x10]
0000fff9(6): JLE 0x0001009d
0000ffff(4): CMP RBP,qword ptr [RDX + 0x8]
00010003(6): JG 0x0001009d
00010009(3): MOV RCX,qword ptr [RDX]
0001000c(4): MOV RAX,qword ptr [R12]
00010010(4): MOV RSI,qword ptr [RBX + 0x8]
00010014(4): SHL RCX,0x4
00010018(4): CMP RBP,qword ptr [RDX + 0x18]
0001001c(4): MOV R8,qword ptr [RAX + RCX*0x1]
00010020(6): JZ 0x000100c0
00010026(3): XOR R14D,R14D
00010029(3): TEST RSI,RSI
0001002c(2): JLE 0x0001009d
0001002e(5): MOV qword ptr [RSP + 0x28],RBP
00010033(3): MOV RBP,R8
00010036(2): JMP 0x0001004e
00010040(4): ADD R14,0x1
00010044(4): CMP R14,qword ptr [RBX + 0x8]
00010048(2): JGE 0x00010098
0001004a(4): MOV RAX,qword ptr [R12]
0001004e(4): MOV RDX,qword ptr [RBX + 0x10]
00010052(4): MOV RSI,qword ptr [RDX + R14*0x8]
00010056(3): MOV RDX,RSI
00010059(4): SHL RDX,0x4
0001005d(3): ADD RAX,RDX
00010060(4): MOVZX EDX,byte ptr [RAX + 0x8]
00010064(3): SUB EDX,0x8
00010067(3): CMP EDX,0x1
0001006a(2): JA 0x00010040
0001006c(3): CMP RBP,qword ptr [RAX]
0001006f(2): JNZ 0x00010040
00010071(5): MOV RCX,qword ptr [RSP + 0x10]
00010076(3): MOV RDX,RBX
00010079(3): MOV RDI,R12
0001007c(5): CALL 0x0000a330
00010081(2): TEST EAX,EAX
00010083(6): JNZ 0x0000fcc8
00010089(4): ADD R14,0x1
0001008d(4): CMP R14,qword ptr [RBX + 0x8]
00010091(2): JL 0x0001004a
00010093(5): NOP dword ptr [RAX + RAX*0x1]
00010098(5): MOV RBP,qword ptr [RSP + 0x28]
0001009d(4): ADD R15,0x1
000100a1(4): CMP R15,qword ptr [R13 + 0x28]
000100a5(6): JL 0x0000ffe0
000100ab(8): MOV dword ptr [RSP + 0x5c],0x0
000100b3(5): JMP 0x0000fd4f
000100c0(3): TEST RSI,RSI
000100c3(2): JLE 0x0001009d
000100c5(4): MOV R10,qword ptr [RBX + 0x10]
000100c9(7): MOV R9,-0x1
000100d0(4): LEA R11,[R10 + RSI*0x8]
000100d4(3): MOV RCX,R10
000100d7(3): MOV RSI,R9
000100da(2): JMP 0x000100f6
000100e0(4): CMP R14D,0x9
000100e4(2): JNZ 0x000100ed
000100e6(3): CMP R8,qword ptr [RDX]
000100e9(4): CMOVZ R9,RDI
000100ed(4): ADD RCX,0x8
000100f1(3): CMP R11,RCX
000100f4(2): JZ 0x0001011e
000100f6(3): MOV RDI,qword ptr [RCX]
000100f9(3): MOV RDX,RDI
000100fc(4): SHL RDX,0x4
00010100(3): ADD RDX,RAX
00010103(5): MOVZX R14D,byte ptr [RDX + 0x8]
00010108(4): CMP R14D,0x8
0001010c(2): JNZ 0x000100e0
0001010e(3): CMP R8,qword ptr [RDX]
00010111(4): CMOVZ RSI,RDI
00010115(4): ADD RCX,0x8
00010119(3): CMP R11,RCX
0001011c(2): JNZ 0x000100f6
0001011e(3): TEST RSI,RSI
00010121(3): MOV R14,R9
00010124(5): MOV qword ptr [RSP + 0x28],R9
00010129(6): JS 0x000101f0
0001012f(5): MOV RCX,qword ptr [RSP + 0x10]
00010134(3): MOV RDX,RBX
00010137(3): MOV RDI,R12
0001013a(5): CALL 0x0000a330
0001013f(2): TEST EAX,EAX
00010141(6): JNZ 0x0000fcc8
00010147(3): TEST R14,R14
0001014a(6): JS 0x0001009d
00010150(5): CMP qword ptr [RBX + 0x8],0x0
00010155(6): JLE 0x0001009d
0001015b(4): MOV R10,qword ptr [RBX + 0x10]
0001015f(3): XOR R14D,R14D
00010162(5): MOV qword ptr [RSP + 0x30],RBP
00010167(3): MOV RBP,R14
0001016a(5): MOV R14,qword ptr [RSP + 0x28]
0001016f(2): JMP 0x0001018a
00010178(4): ADD RBP,0x1
0001017c(4): CMP RBP,qword ptr [RBX + 0x8]
00010180(6): JGE 0x00010208
00010186(4): MOV R10,qword ptr [RBX + 0x10]
0001018a(4): MOV R10,qword ptr [R10 + RBP*0x8]
0001018e(5): MOV RAX,qword ptr [R12 + 0x38]
00010193(3): MOV RDX,R14
00010196(4): LEA R9,[R10 + R10*0x2]
0001019a(4): SHL R9,0x3
0001019e(3): ADD RAX,R9
000101a1(4): MOV RDI,qword ptr [RAX + 0x8]
000101a5(4): LEA RSI,[RAX + 0x10]
000101a9(5): CALL 0x00007ae0
000101ae(3): TEST RAX,RAX
000101b1(2): JNZ 0x00010178
000101b3(5): ADD R9,qword ptr [R12 + 0x30]
000101b8(4): MOV RDI,qword ptr [R9 + 0x8]
000101bc(4): LEA RSI,[R9 + 0x10]
000101c0(5): CALL 0x00007ae0
000101c5(3): TEST RAX,RAX
000101c8(2): JNZ 0x00010178
000101ca(5): MOV RCX,qword ptr [RSP + 0x10]
000101cf(3): MOV RDX,RBX
000101d2(3): MOV RSI,R10
000101d5(3): MOV RDI,R12
000101d8(5): CALL 0x0000a330
000101dd(2): TEST EAX,EAX
000101df(6): JNZ 0x0000fcc8
000101e5(4): SUB RBP,0x1
000101e9(2): JMP 0x00010178
000101f0(6): CMP qword ptr [RSP + 0x28],0x0
000101f6(6): JNS 0x0001015f
000101fc(5): JMP 0x0001009d
00010208(5): MOV RBP,qword ptr [RSP + 0x30]
0001020d(5): JMP 0x0001009d
00010218(5): MOV RAX,qword ptr [RSP + 0x8]
0001021d(5): MOV R13,qword ptr [RSP + 0x40]
00010222(5): MOV RBX,qword ptr [RSP + 0x48]
00010227(7): ADD R13,qword ptr [0xd8 + RAX]
0001022e(4): LEA RAX,[R14 + R14*0x2]
00010232(4): SHL RAX,0x3
00010236(5): MOV qword ptr [RSP + 0x30],RAX
0001023b(8): LEA RAX,[R14*0x8]
00010243(5): MOV qword ptr [RSP + 0x28],RAX
00010248(3): MOV RAX,R15
0001024b(3): MOV R15,R13
0001024e(3): MOV R13,RBX
00010251(3): MOV RBX,RAX
00010254(5): JMP 0x000103be
00010260(4): MOV RAX,qword ptr [R15 + 0x18]
00010264(4): SUB RAX,qword ptr [R15 + 0x10]
00010268(3): TEST RAX,RAX
0001026b(5): LEA R9,[RBP + RAX*0x1]
00010270(6): JZ 0x000103d0
00010276(5): MOV RAX,qword ptr [R12 + 0x18]
0001027b(5): MOV RSI,qword ptr [RSP + 0x28]
00010280(4): MOV R10,qword ptr [RAX + RSI*0x1]
00010284(4): CMP R9,qword ptr [RBX + 0x18]
00010288(6): JG 0x000103c7
0001028e(3): MOV RAX,qword ptr [RBX]
00010291(4): MOV RAX,qword ptr [RAX + R9*0x8]
00010295(3): TEST RAX,RAX
00010298(6): JZ 0x000103c7
0001029e(4): MOV RDI,qword ptr [RAX + 0x10]
000102a2(4): LEA RSI,[RAX + 0x18]
000102a6(3): MOV RDX,R10
000102a9(5): CALL 0x00007ae0
000102ae(3): TEST RAX,RAX
000102b1(6): JZ 0x000103c7
000102b7(4): SUB RSP,0x8
000102bb(4): LEA RDX,[RBX + 0x30]
000102bf(4): LEA RSI,[RBX + 0x28]
000102c3(2): PUSH R9
000102c5(5): MOV RDI,qword ptr [RSP + 0x18]
000102ca(3): MOV RCX,R14
000102cd(3): MOV R9,R10
000102d0(3): MOV R8,RBP
000102d3(5): CALL 0x00007d90
000102d8(2): TEST AL,AL
000102da(1): POP RDX
000102db(1): POP RCX
000102dc(6): JNZ 0x000103c7
000102e2(6): CMP qword ptr [RSP + 0x60],0x0
000102e8(6): JZ 0x000103f8
000102ee(5): MOV RAX,qword ptr [RSP + 0x38]
000102f3(3): MOV RSI,R13
000102f6(5): MOV qword ptr [RSP + 0x70],R14
000102fb(5): MOV qword ptr [RSP + 0x78],RBP
00010300(4): LEA RDI,[RAX + 0x20]
00010304(5): CALL 0x000065a0
00010309(2): TEST AL,AL
0001030b(6): JZ 0x00010464
00010311(5): MOV RDI,qword ptr [RSP + 0x18]
00010316(5): MOV RAX,qword ptr [RSP + 0x60]
0001031b(5): MOV RSI,qword ptr [RSP + 0x38]
00010320(4): MOV R15,qword ptr [RAX + RDI*0x1]
00010324(5): MOV RDI,qword ptr [RSP + 0x8]
00010329(5): CALL 0x0000e1c0
0001032e(2): TEST EAX,EAX
00010330(6): JNZ 0x0001043e
00010336(4): MOV RSI,qword ptr [RBX + 0x8]
0001033a(5): MOV RDX,qword ptr [RSP + 0x60]
0001033f(3): TEST RSI,RSI
00010342(2): JZ 0x0001035d
00010344(4): LEA RCX,[RBP + 0x1]
00010348(3): MOV RDI,R12
0001034b(5): CALL 0x000092f0
00010350(2): TEST EAX,EAX
00010352(6): JNZ 0x0001043e
00010358(5): MOV RDX,qword ptr [RSP + 0x60]
0001035d(5): MOV R11,qword ptr [RSP + 0x38]
00010362(5): MOV RAX,qword ptr [RSP + 0x18]
00010367(8): MOV RDI,qword ptr [0x88 + RSP]
0001036f(4): LEA R9,[R11 + 0x30]
00010373(4): MOV qword ptr [RDX + RAX*0x1],R15
00010377(3): MOV RDX,R13
0001037a(3): MOV RSI,R9
0001037d(5): CALL 0x00007ae0
00010382(4): SUB RAX,0x1
00010386(3): MOV RDX,RAX
00010389(2): JS 0x00010397
0001038b(4): LEA RDI,[R11 + 0x28]
0001038f(3): MOV RSI,R9
00010392(5): CALL 0x00007c60
00010397(5): MOV RCX,qword ptr [RSP + 0x8]
0001039c(5): LEA RAX,[R13 + R13*0x4]
000103a1(7): MOV RDX,qword ptr [0xd8 + RCX]
000103a8(4): LEA RAX,[RDX + RAX*0x8]
000103ac(4): NOP dword ptr [RAX]
000103b0(4): ADD R13,0x1
000103b4(4): CMP byte ptr [RAX + 0x20],0x0
000103b8(4): LEA R15,[RAX + 0x28]
000103bc(2): JZ 0x000103f0
000103be(3): CMP R14,qword ptr [R15]
000103c1(6): JZ 0x00010260
000103c7(3): MOV RAX,R15
000103ca(2): JMP 0x000103b0
000103d0(5): MOV RAX,qword ptr [R12 + 0x28]
000103d5(5): MOV RDI,qword ptr [RSP + 0x30]
000103da(5): MOV RAX,qword ptr [RAX + RDI*0x1 + 0x10]
000103df(3): MOV R10,qword ptr [RAX]
000103e2(5): JMP 0x00010284
000103f0(3): MOV R15,RBX
000103f3(5): JMP 0x0000fe98
000103f8(4): MOV RAX,qword ptr [RBX + 0x30]
000103fc(4): LEA RSI,[RBX + 0x20]
00010400(4): MOVDQA XMM0,xmmword ptr [RBX]
00010404(8): MOV qword ptr [0x90 + RSP],RAX
0001040c(5): MOV RAX,qword ptr [RSP + 0x38]
00010411(5): MOVAPS xmmword ptr [RSP + 0x60],XMM0
00010416(4): LEA RDI,[RAX + 0x20]
0001041a(5): MOVDQA XMM0,xmmword ptr [RBX + 0x10]
0001041f(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
00010424(5): MOVDQA XMM0,xmmword ptr [RBX + 0x20]
00010429(8): MOVAPS xmmword ptr [0x80 + RSP],XMM0
00010431(5): CALL 0x00008c40
00010436(2): TEST EAX,EAX
00010438(6): JZ 0x000102ee
0001043e(6): CMP qword ptr [RSP + 0x60],0x0
00010444(6): JZ 0x0000fcc8
0001044a(8): MOV RDI,qword ptr [0x90 + RSP]
00010452(4): MOV dword ptr [RSP + 0x8],EAX
00010456(5): CALL 0x000018d0
0001045b(4): MOV EAX,dword ptr [RSP + 0x8]
0001045f(5): JMP 0x0000fcc8
00010464(5): MOV EAX,0xc
00010469(2): JMP 0x0001043e
0001046b(6): CMP qword ptr [RSP + 0x60],0x0
00010471(6): JZ 0x0000ff10
00010477(2): XOR EAX,EAX
00010479(2): JMP 0x0001044a
0001047b(5): CALL 0x000019e0
00010480(2): PUSH R14
00010482(2): PUSH R13
00010484(3): MOV R10,RSI
00010487(2): PUSH R12
00010489(1): PUSH RBP
0001048a(3): MOVSXD R11,ECX
0001048d(1): PUSH RBX
0001048e(3): MOV RBP,RDX
00010491(3): MOV RBX,RDI
00010494(4): SUB RSP,0x20
00010498(4): MOV R12,qword ptr [RSI + 0x48]
0001049c(9): MOV RAX,qword ptr FS:[0x28]
000104a5(5): MOV qword ptr [RSP + 0x18],RAX
000104aa(2): XOR EAX,EAX
000104ac(7): CMP dword ptr [0x90 + RSI],0x1
000104b3(2): JZ 0x00010508
000104b5(3): MOV RSI,R12
000104b8(3): MOV RDI,R10
000104bb(5): CALL 0x00007a30
000104c0(3): CMP EAX,0x1
000104c3(2): JLE 0x00010508
000104c5(4): MOV RDX,qword ptr [R10 + 0x10]
000104c9(2): CDQE
000104cb(6): MOV dword ptr [RBX],0x1
000104d1(3): ADD RAX,R12
000104d4(4): MOV EDX,dword ptr [RDX + R12*0x4]
000104d8(3): MOV dword ptr [RBX + 0x8],EDX
000104db(4): MOV qword ptr [R10 + 0x48],RAX
000104df(2): XOR EAX,EAX
000104e1(5): MOV RCX,qword ptr [RSP + 0x18]
000104e6(9): XOR RCX,qword ptr FS:[0x28]
000104ef(6): JNZ 0x000106d8
000104f5(4): ADD RSP,0x20
000104f9(1): POP RBX
000104fa(1): POP RBP
000104fb(2): POP R12
000104fd(2): POP R13
000104ff(2): POP R14
00010501(1): RET
00010508(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001050c(3): ADD R11,R12
0001050f(4): MOV qword ptr [R10 + 0x48],R11
00010513(2): MOV EDX,EAX
00010515(3): AND EDX,0xfffffffb
00010518(3): CMP DL,0x1a
0001051b(2): JZ 0x00010540
0001051d(2): CMP AL,0x1c
0001051f(2): JZ 0x00010540
00010521(2): CMP AL,0x16
00010523(2): JNZ 0x0001052e
00010525(3): TEST R9B,R9B
00010528(6): JZ 0x00010672
0001052e(4): MOVZX EAX,byte ptr [RBP]
00010532(6): MOV dword ptr [RBX],0x0
00010538(3): MOV byte ptr [RBX + 0x8],AL
0001053b(2): XOR EAX,EAX
0001053d(2): JMP 0x000104e1
00010540(4): MOV R12,qword ptr [R10 + 0x68]
00010544(3): CMP R11,R12
00010547(6): JGE 0x00010668
0001054d(5): MOVZX R13D,byte ptr [RBP]
00010552(3): XOR R8D,R8D
00010555(2): JMP 0x00010582
00010560(4): MOV RAX,qword ptr [RBX + 0x8]
00010564(4): MOV byte ptr [RAX + R8*0x1],R9B
00010568(4): ADD R8,0x1
0001056c(4): CMP R8,0x20
00010570(6): JZ 0x00010668
00010576(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001057a(4): MOV R11,qword ptr [R10 + 0x48]
0001057e(4): MOV R12,qword ptr [R10 + 0x68]
00010582(2): CMP AL,0x1e
00010584(3): MOVSXD R14,R8D
00010587(2): JZ 0x000105f0
00010589(4): MOV RDX,qword ptr [R10 + 0x8]
0001058d(4): LEA RAX,[R11 + 0x1]
00010591(4): MOV qword ptr [R10 + 0x48],RAX
00010595(5): MOVZX R9D,byte ptr [RDX + R11*0x1]
0001059a(3): CMP RAX,R12
0001059d(6): JGE 0x00010668
000105a3(3): CMP R13B,R9B
000105a6(2): JNZ 0x00010560
000105a8(4): MOV RDX,qword ptr [R10 + 0x8]
000105ac(4): CMP byte ptr [RDX + RAX*0x1],0x5d
000105b0(2): JNZ 0x00010560
000105b2(4): ADD RAX,0x1
000105b6(4): MOV qword ptr [R10 + 0x48],RAX
000105ba(4): MOV RAX,qword ptr [RBX + 0x8]
000105be(5): MOV byte ptr [RAX + R14*0x1],0x0
000105c3(4): MOVZX EAX,byte ptr [RBP + 0x8]
000105c7(2): CMP AL,0x1c
000105c9(6): JZ 0x000106cb
000105cf(2): CMP AL,0x1e
000105d1(6): JZ 0x000106be
000105d7(2): CMP AL,0x1a
000105d9(6): JZ 0x000106b1
000105df(2): XOR EAX,EAX
000105e1(5): JMP 0x000104e1
000105f0(8): CMP byte ptr [0x8b + R10],0x0
000105f8(2): JZ 0x00010589
000105fa(8): CMP byte ptr [0x8c + R10],0x0
00010602(6): JZ 0x00010698
00010608(4): CMP R11,qword ptr [R10 + 0x30]
0001060c(2): JZ 0x0001061d
0001060e(4): MOV RAX,qword ptr [R10 + 0x10]
00010612(5): CMP dword ptr [RAX + R11*0x4],-0x1
00010617(6): JZ 0x00010589
0001061d(4): MOV RAX,qword ptr [R10 + 0x18]
00010621(4): MOV RAX,qword ptr [RAX + R11*0x8]
00010625(3): ADD RAX,qword ptr [R10]
00010628(4): ADD RAX,qword ptr [R10 + 0x28]
0001062c(4): MOVZX R9D,byte ptr [RAX]
00010630(4): TEST R9B,0x80
00010634(6): JNZ 0x00010589
0001063a(8): CMP dword ptr [0x90 + R10],0x1
00010642(5): MOV EAX,0x1
00010647(2): JZ 0x00010656
00010649(3): MOV RSI,R11
0001064c(3): MOV RDI,R10
0001064f(5): CALL 0x00007a30
00010654(2): CDQE
00010656(3): ADD RAX,R11
00010659(4): MOV qword ptr [R10 + 0x48],RAX
0001065d(5): JMP 0x0001059a
00010668(5): MOV EAX,0x7
0001066d(5): JMP 0x000104e1
00010672(3): MOV RDI,RSP
00010675(3): MOV RDX,R8
00010678(3): MOV RSI,R10
0001067b(5): CALL 0x00005fd0
00010680(5): CMP byte ptr [RSP + 0x8],0x15
00010685(5): MOV EAX,0xb
0001068a(6): JZ 0x0001052e
00010690(5): JMP 0x000104e1
00010698(4): LEA RAX,[R11 + 0x1]
0001069c(3): ADD R11,qword ptr [R10]
0001069f(4): MOV RDX,qword ptr [R10 + 0x28]
000106a3(4): MOV qword ptr [R10 + 0x48],RAX
000106a7(5): MOVZX R9D,byte ptr [R11 + RDX*0x1]
000106ac(5): JMP 0x0001059a
000106b1(6): MOV dword ptr [RBX],0x3
000106b7(2): XOR EAX,EAX
000106b9(5): JMP 0x000104e1
000106be(6): MOV dword ptr [RBX],0x4
000106c4(2): XOR EAX,EAX
000106c6(5): JMP 0x000104e1
000106cb(6): MOV dword ptr [RBX],0x2
000106d1(2): XOR EAX,EAX
000106d3(5): JMP 0x000104e1
000106d8(5): CALL 0x000019e0
000106dd(3): NOP dword ptr [RAX]
000106e0(2): PUSH R15
000106e2(2): PUSH R14
000106e4(2): PUSH R13
000106e6(2): PUSH R12
000106e8(1): PUSH RBP
000106e9(1): PUSH RBX
000106ea(3): MOV RBP,RDI
000106ed(4): SUB RSP,0x38
000106f1(4): MOV R14,qword ptr [RSI + 0x48]
000106f5(9): MOV RAX,qword ptr FS:[0x28]
000106fe(5): MOV qword ptr [RSP + 0x28],RAX
00010703(2): XOR EAX,EAX
00010705(4): CMP qword ptr [RSI + 0x68],R14
00010709(6): JLE 0x000107a0
0001070f(5): MOVZX R13D,byte ptr [RDI + 0xa]
00010714(3): MOV R15,RDX
00010717(4): MOV RDX,qword ptr [RSI + 0x8]
0001071b(3): MOV RBX,RSI
0001071e(5): MOVZX R12D,byte ptr [RDX + R14*0x1]
00010723(4): AND R13D,0xffffff9f
00010727(4): MOV byte ptr [RDI + 0xa],R13B
0001072b(6): MOV EAX,dword ptr [0x90 + RSI]
00010731(3): MOV byte ptr [RDI],R12B
00010734(3): CMP EAX,0x1
00010737(6): JLE 0x000107d0
0001073d(4): CMP R14,qword ptr [RSI + 0x30]
00010741(6): JZ 0x000108e0
00010747(4): MOV RCX,qword ptr [RSI + 0x10]
0001074b(4): MOV ECX,dword ptr [RCX + R14*0x4]
0001074f(3): CMP ECX,-0x1
00010752(6): JZ 0x00010830
00010758(4): CMP R12B,0x5c
0001075c(6): JZ 0x00010850
00010762(4): MOV byte ptr [RDI + 0x8],0x1
00010766(2): MOV EDI,ECX
00010768(5): MOV qword ptr [RSP + 0x8],RDX
0001076d(3): MOV dword ptr [RSP],ECX
00010770(5): CALL 0x00001af0
00010775(3): MOV ECX,dword ptr [RSP]
00010778(2): TEST EAX,EAX
0001077a(3): SETNZ AL
0001077d(3): CMP ECX,0x5f
00010780(3): SETZ CL
00010783(2): OR EAX,ECX
00010785(3): SHL EAX,0x6
00010788(3): OR R13D,EAX
0001078b(4): MOV byte ptr [RBP + 0xa],R13B
0001078f(5): MOV RDX,qword ptr [RSP + 0x8]
00010794(2): JMP 0x0001080c
000107a0(4): MOV byte ptr [RDI + 0x8],0x2
000107a4(5): MOV RDI,qword ptr [RSP + 0x28]
000107a9(9): XOR RDI,qword ptr FS:[0x28]
000107b2(6): JNZ 0x00010dd8
000107b8(4): ADD RSP,0x38
000107bc(1): POP RBX
000107bd(1): POP RBP
000107be(2): POP R12
000107c0(2): POP R13
000107c2(2): POP R14
000107c4(2): POP R15
000107c6(1): RET
000107d0(4): CMP R12B,0x5c
000107d4(2): JZ 0x00010850
000107d6(4): MOV byte ptr [RBP + 0x8],0x1
000107da(4): MOV qword ptr [RSP],RDX
000107de(5): CALL 0x00001c70
000107e3(3): MOV RSI,qword ptr [RAX]
000107e6(4): MOVZX ECX,R12B
000107ea(4): MOVZX EAX,word ptr [RSI + RCX*0x2]
000107ee(4): SHR AX,0x3
000107f2(3): AND EAX,0x1
000107f5(4): CMP R12B,0x5f
000107f9(3): SETZ CL
000107fc(2): OR EAX,ECX
000107fe(3): SHL EAX,0x6
00010801(3): OR R13D,EAX
00010804(4): MOV byte ptr [RBP + 0xa],R13B
00010808(4): MOV RDX,qword ptr [RSP]
0001080c(4): SUB R12D,0xa
00010810(4): CMP R12B,0x73
00010814(6): JA 0x0001094c
0001081a(7): LEA RCX,[0x15994]
00010821(4): MOVZX R12D,R12B
00010825(4): MOVSXD RAX,dword ptr [RCX + R12*0x4]
00010829(3): ADD RAX,RCX
0001082c(2): JMP RAX
00010830(4): OR R13D,0x20
00010834(4): MOV byte ptr [RDI + 0x8],0x1
00010838(5): MOV EAX,0x1
0001083d(4): MOV byte ptr [RDI + 0xa],R13B
00010841(5): JMP 0x000107a4
00010850(4): LEA RSI,[R14 + 0x1]
00010854(4): CMP RSI,qword ptr [RBX + 0x58]
00010858(6): JGE 0x00010900
0001085e(7): CMP byte ptr [0x8b + RBX],0x0
00010865(6): JNZ 0x00010cf0
0001086b(6): MOVZX EDI,byte ptr [RDX + R14*0x1 + 0x1]
00010871(3): MOV R12D,EDI
00010874(4): MOV dword ptr [RSP + 0x8],EDI
00010878(3): CMP EAX,0x1
0001087b(4): MOV byte ptr [RBP],R12B
0001087f(4): MOV byte ptr [RBP + 0x8],0x1
00010883(6): JLE 0x00010cd0
00010889(4): MOV RAX,qword ptr [RBX + 0x10]
0001088d(4): MOV R8D,dword ptr [RAX + RSI*0x4]
00010891(3): MOV EDI,R8D
00010894(4): MOV dword ptr [RSP],R8D
00010898(5): CALL 0x00001af0
0001089d(4): MOV R8D,dword ptr [RSP]
000108a1(2): TEST EAX,EAX
000108a3(3): SETNZ AL
000108a6(4): CMP R8D,0x5f
000108aa(3): SETZ DL
000108ad(5): LEA ECX,[R12 + -0x27]
000108b2(2): OR EAX,EDX
000108b4(3): SHL EAX,0x6
000108b7(3): OR R13D,EAX
000108ba(3): CMP CL,0x56
000108bd(4): MOV byte ptr [RBP + 0xa],R13B
000108c1(6): JA 0x00010cc5
000108c7(7): LEA RDX,[0x15b64]
000108ce(3): MOVZX ECX,CL
000108d1(4): MOVSXD RAX,dword ptr [RDX + RCX*0x4]
000108d5(3): ADD RAX,RDX
000108d8(2): JMP RAX
000108e0(4): CMP R12B,0x5c
000108e4(6): JZ 0x00010850
000108ea(4): MOV RAX,qword ptr [RBX + 0x10]
000108ee(4): MOV byte ptr [RBP + 0x8],0x1
000108f2(4): MOV ECX,dword ptr [RAX + R14*0x4]
000108f6(5): JMP 0x00010766
00010900(4): MOV byte ptr [RBP + 0x8],0x24
00010904(5): MOV EAX,0x1
00010909(5): JMP 0x000107a4
00010910(7): AND R15D,0x1200
00010917(5): MOV EAX,0x1
0001091c(7): CMP R15,0x1200
00010923(6): JNZ 0x000107a4
00010929(4): MOV byte ptr [RBP + 0x8],0x18
0001092d(5): JMP 0x000107a4
00010938(7): AND R15D,0x8400
0001093f(7): CMP R15,0x8000
00010946(6): JZ 0x00010a22
0001094c(5): MOV EAX,0x1
00010951(5): JMP 0x000107a4
00010960(7): AND R15D,0x1200
00010967(5): MOV EAX,0x1
0001096c(7): CMP R15,0x1200
00010973(6): JNZ 0x000107a4
00010979(4): MOV byte ptr [RBP + 0x8],0x17
0001097d(5): JMP 0x000107a4
00010988(7): TEST R15D,0x800008
0001098f(2): JNZ 0x0001099a
00010991(3): TEST R14,R14
00010994(6): JNZ 0x00010d5a
0001099a(4): MOV byte ptr [RBP + 0x8],0xc
0001099e(7): MOV dword ptr [RBP],0x10
000109a5(5): MOV EAX,0x1
000109aa(5): JMP 0x000107a4
000109b0(4): MOV byte ptr [RBP + 0x8],0x14
000109b4(5): MOV EAX,0x1
000109b9(5): JMP 0x000107a4
000109c0(7): TEST R15D,0x402
000109c7(5): MOV EAX,0x1
000109cc(6): JNZ 0x000107a4
000109d2(4): MOV byte ptr [RBP + 0x8],0x13
000109d6(5): JMP 0x000107a4
000109e0(4): MOV byte ptr [RBP + 0x8],0x5
000109e4(5): MOV EAX,0x1
000109e9(5): JMP 0x000107a4
000109f0(7): TEST R15D,0x402
000109f7(5): MOV EAX,0x1
000109fc(6): JNZ 0x000107a4
00010a02(4): MOV byte ptr [RBP + 0x8],0x12
00010a06(5): JMP 0x000107a4
00010a10(7): TEST R15D,0x800
00010a17(5): MOV EAX,0x1
00010a1c(6): JZ 0x000107a4
00010a22(4): MOV byte ptr [RBP + 0x8],0xa
00010a26(5): MOV EAX,0x1
00010a2b(5): JMP 0x000107a4
00010a30(4): MOV byte ptr [RBP + 0x8],0xb
00010a34(5): MOV EAX,0x1
00010a39(5): JMP 0x000107a4
00010a40(7): TEST R15D,0x2000
00010a47(5): MOV EAX,0x1
00010a4c(6): JZ 0x000107a4
00010a52(4): MOV byte ptr [RBP + 0x8],0x9
00010a56(5): JMP 0x000107a4
00010a60(7): TEST R15D,0x2000
00010a67(5): MOV EAX,0x1
00010a6c(6): JZ 0x000107a4
00010a72(4): MOV byte ptr [RBP + 0x8],0x8
00010a76(5): JMP 0x000107a4
00010a80(4): TEST R15B,0x8
00010a84(2): JNZ 0x00010a94
00010a86(4): ADD R14,0x1
00010a8a(4): CMP R14,qword ptr [RBX + 0x58]
00010a8e(6): JNZ 0x00010d8b
00010a94(4): MOV byte ptr [RBP + 0x8],0xc
00010a98(7): MOV dword ptr [RBP],0x20
00010a9f(5): MOV EAX,0x1
00010aa4(5): JMP 0x000107a4
00010aa9(7): TEST R15D,0x8400
00010ab0(5): MOV EAX,0x2
00010ab5(6): JNZ 0x000107a4
00010abb(4): MOV byte ptr [RBP + 0x8],0xa
00010abf(5): JMP 0x000107a4
00010ac4(7): AND R15D,0x1200
00010acb(5): MOV EAX,0x2
00010ad0(7): CMP R15,0x200
00010ad7(6): JNZ 0x000107a4
00010add(5): JMP 0x00010979
00010ae2(7): TEST R15D,0x80000
00010ae9(5): MOV EAX,0x2
00010aee(6): JNZ 0x000107a4
00010af4(4): MOV byte ptr [RBP + 0x8],0x20
00010af8(5): JMP 0x000107a4
00010afd(7): TEST R15D,0x80000
00010b04(5): MOV EAX,0x2
00010b09(6): JNZ 0x000107a4
00010b0f(4): MOV byte ptr [RBP + 0x8],0x22
00010b13(5): JMP 0x000107a4
00010b18(7): AND R15D,0x1200
00010b1f(5): MOV EAX,0x2
00010b24(7): CMP R15,0x200
00010b2b(6): JNZ 0x000107a4
00010b31(5): JMP 0x00010929
00010b36(7): TEST R15D,0x80000
00010b3d(5): MOV EAX,0x2
00010b42(6): JNZ 0x000107a4
00010b48(4): MOV byte ptr [RBP + 0x8],0xc
00010b4c(7): MOV dword ptr [RBP],0x100
00010b53(5): JMP 0x000107a4
00010b58(7): TEST R15D,0x80000
00010b5f(5): MOV EAX,0x2
00010b64(6): JNZ 0x000107a4
00010b6a(4): MOV byte ptr [RBP + 0x8],0xc
00010b6e(7): MOV dword ptr [RBP],0x40
00010b75(5): JMP 0x000107a4
00010b7a(7): TEST R15D,0x80000
00010b81(5): MOV EAX,0x2
00010b86(6): JNZ 0x000107a4
00010b8c(4): MOV byte ptr [RBP + 0x8],0x21
00010b90(5): JMP 0x000107a4
00010b95(7): TEST R15D,0x80000
00010b9c(5): MOV EAX,0x2
00010ba1(6): JNZ 0x000107a4
00010ba7(4): MOV byte ptr [RBP + 0x8],0x23
00010bab(5): JMP 0x000107a4
00010bb0(7): TEST R15D,0x80000
00010bb7(5): MOV EAX,0x2
00010bbc(6): JNZ 0x000107a4
00010bc2(4): MOV byte ptr [RBP + 0x8],0xc
00010bc6(7): MOV dword ptr [RBP],0x200
00010bcd(5): JMP 0x000107a4
00010bd2(7): AND R15D,0x402
00010bd9(5): MOV EAX,0x2
00010bde(4): CMP R15,0x2
00010be2(6): JNZ 0x000107a4
00010be8(5): JMP 0x000109d2
00010bed(7): TEST R15D,0x80000
00010bf4(5): MOV EAX,0x2
00010bf9(6): JNZ 0x000107a4
00010bff(4): MOV byte ptr [RBP + 0x8],0xc
00010c03(7): MOV dword ptr [RBP],0x9
00010c0a(5): JMP 0x000107a4
00010c0f(7): TEST R15D,0x80000
00010c16(5): MOV EAX,0x2
00010c1b(6): JNZ 0x000107a4
00010c21(4): MOV byte ptr [RBP + 0x8],0xc
00010c25(7): MOV dword ptr [RBP],0x6
00010c2c(5): JMP 0x000107a4
00010c31(7): TEST R15D,0x4000
00010c38(5): MOV EAX,0x2
00010c3d(6): JNZ 0x000107a4
00010c43(4): MOV EDX,dword ptr [RSP + 0x8]
00010c47(4): MOV byte ptr [RBP + 0x8],0x4
00010c4b(3): SUB EDX,0x31
00010c4e(3): MOVSXD RDX,EDX
00010c51(4): MOV qword ptr [RBP],RDX
00010c55(5): JMP 0x000107a4
00010c5a(7): AND R15D,0x402
00010c61(5): MOV EAX,0x2
00010c66(4): CMP R15,0x2
00010c6a(6): JNZ 0x000107a4
00010c70(5): JMP 0x00010a02
00010c75(7): TEST R15D,0x2000
00010c7c(5): MOV EAX,0x2
00010c81(6): JNZ 0x000107a4
00010c87(5): JMP 0x00010a52
00010c8c(7): TEST R15D,0x2000
00010c93(5): MOV EAX,0x2
00010c98(6): JNZ 0x000107a4
00010c9e(5): JMP 0x00010a72
00010ca3(7): TEST R15D,0x80000
00010caa(5): MOV EAX,0x2
00010caf(6): JNZ 0x000107a4
00010cb5(4): MOV byte ptr [RBP + 0x8],0xc
00010cb9(7): MOV dword ptr [RBP],0x80
00010cc0(5): JMP 0x000107a4
00010cc5(5): MOV EAX,0x2
00010cca(5): JMP 0x000107a4
00010cd0(5): CALL 0x00001c70
00010cd5(3): MOV RSI,qword ptr [RAX]
00010cd8(4): MOVZX EDX,R12B
00010cdc(4): MOVZX EAX,word ptr [RSI + RDX*0x2]
00010ce0(4): SHR AX,0x3
00010ce4(3): AND EAX,0x1
00010ce7(4): CMP R12B,0x5f
00010ceb(5): JMP 0x000108aa
00010cf0(3): CMP EAX,0x1
00010cf3(2): JLE 0x00010d24
00010cf5(4): MOV RCX,qword ptr [RBX + 0x10]
00010cf9(8): LEA RDI,[RSI*0x4]
00010d01(4): MOV R8D,dword ptr [RCX + RSI*0x4]
00010d05(4): CMP R8D,-0x1
00010d09(6): JZ 0x00010dbf
00010d0f(4): LEA R9,[R14 + 0x2]
00010d13(4): CMP qword ptr [RBX + 0x30],R9
00010d17(2): JZ 0x00010d24
00010d19(5): CMP dword ptr [RCX + RDI*0x1 + 0x4],-0x1
00010d1e(6): JZ 0x00010dbf
00010d24(7): CMP byte ptr [0x8c + RBX],0x0
00010d2b(3): MOV RCX,qword ptr [RBX]
00010d2e(4): MOV RDI,qword ptr [RBX + 0x28]
00010d32(2): JZ 0x00010d78
00010d34(4): MOV R8,qword ptr [RBX + 0x18]
00010d38(3): ADD RCX,RDI
00010d3b(4): ADD RCX,qword ptr [R8 + RSI*0x8]
00010d3f(3): MOVZX EDI,byte ptr [RCX]
00010d42(3): MOV R12D,EDI
00010d45(4): MOV dword ptr [RSP + 0x8],EDI
00010d49(6): AND EDI,0x80
00010d4f(6): JNZ 0x0001086b
00010d55(5): JMP 0x00010878
00010d5a(6): CMP byte ptr [RDX + R14*0x1 + -0x1],0xa
00010d60(6): JNZ 0x0001094c
00010d66(7): TEST R15D,0x800
00010d6d(6): JZ 0x0001094c
00010d73(5): JMP 0x0001099a
00010d78(3): ADD RCX,RSI
00010d7b(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
00010d7f(3): MOV R12D,EDI
00010d82(4): MOV dword ptr [RSP + 0x8],EDI
00010d86(5): JMP 0x00010878
00010d8b(5): LEA RDI,[RSP + 0x10]
00010d90(3): MOV RDX,R15
00010d93(4): MOV qword ptr [RBX + 0x48],R14
00010d97(3): MOV RSI,RBX
00010d9a(5): CALL 0x000106e0
00010d9f(5): MOVZX EAX,byte ptr [RSP + 0x18]
00010da4(5): SUB qword ptr [RBX + 0x48],0x1
00010da9(3): LEA EDX,[RAX + -0x9]
00010dac(5): MOV EAX,0x1
00010db1(3): CMP DL,0x1
00010db4(6): JA 0x000107a4
00010dba(5): JMP 0x00010a94
00010dbf(6): MOVZX EAX,byte ptr [RDX + R14*0x1 + 0x1]
00010dc5(4): MOV byte ptr [RBP + 0x8],0x1
00010dc9(3): MOV R12D,EAX
00010dcc(3): MOV byte ptr [RBP],AL
00010dcf(4): MOV dword ptr [RSP + 0x8],EAX
00010dd3(5): JMP 0x00010891
00010dd8(5): CALL 0x000019e0
00010ddd(3): NOP dword ptr [RAX]
00010de0(2): PUSH R14
00010de2(3): MOV R14,RDI
00010de5(2): PUSH R13
00010de7(3): MOV R13,RSI
00010dea(2): PUSH R12
00010dec(7): MOV R12,-0x2
00010df3(1): PUSH RBP
00010df4(3): MOV RBP,RDX
00010df7(1): PUSH RBX
00010df8(7): MOV RBX,-0x1
00010dff(1): NOP
00010e00(3): MOV RDX,RBP
00010e03(3): MOV RSI,R14
00010e06(3): MOV RDI,R13
00010e09(5): CALL 0x000106e0
00010e0e(2): CDQE
00010e10(4): ADD qword ptr [R14 + 0x48],RAX
00010e14(5): MOVZX EAX,byte ptr [R13 + 0x8]
00010e19(5): MOVZX EDX,byte ptr [R13]
00010e1e(2): CMP AL,0x2
00010e20(2): JZ 0x00010e70
00010e22(2): CMP AL,0x18
00010e24(2): JZ 0x00010e77
00010e26(3): CMP DL,0x2c
00010e29(2): JZ 0x00010e77
00010e2b(2): CMP AL,0x1
00010e2d(2): JZ 0x00010e38
00010e2f(3): MOV RBX,R12
00010e32(2): JMP 0x00010e00
00010e38(3): LEA EAX,[RDX + -0x30]
00010e3b(2): CMP AL,0x9
00010e3d(2): JA 0x00010e2f
00010e3f(4): CMP RBX,-0x2
00010e43(2): JZ 0x00010e2f
00010e45(4): CMP RBX,-0x1
00010e49(2): JZ 0x00010e88
00010e4b(4): LEA RAX,[RBX + RBX*0x4]
00010e4f(4): LEA RBX,[RDX + RAX*0x2]
00010e53(5): MOV EAX,0x8030
00010e58(7): CMP RBX,0x8030
00010e5f(4): CMOVG RBX,RAX
00010e63(4): SUB RBX,0x30
00010e67(2): JMP 0x00010e00
00010e70(7): MOV RBX,-0x2
00010e77(3): MOV RAX,RBX
00010e7a(1): POP RBX
00010e7b(1): POP RBP
00010e7c(2): POP R12
00010e7e(2): POP R13
00010e80(2): POP R14
00010e82(1): RET
00010e88(3): MOVZX EBX,DL
00010e8b(3): SUB EBX,0x30
00010e8e(3): MOVSXD RBX,EBX
00010e91(5): JMP 0x00010e00
00010ea0(2): PUSH R15
00010ea2(2): PUSH R14
00010ea4(2): PUSH R13
00010ea6(2): PUSH R12
00010ea8(1): PUSH RBP
00010ea9(1): PUSH RBX
00010eaa(7): SUB RSP,0x128
00010eb1(5): MOV qword ptr [RSP + 0x20],RCX
00010eb6(4): MOVZX ECX,byte ptr [RDX + 0x8]
00010eba(9): MOV RAX,qword ptr FS:[0x28]
00010ec3(8): MOV qword ptr [0x118 + RSP],RAX
00010ecb(2): XOR EAX,EAX
00010ecd(3): MOV RAX,qword ptr [RSI]
00010ed0(5): MOV qword ptr [RSP + 0x18],RDX
00010ed5(5): MOV qword ptr [RSP + 0x40],R9
00010eda(3): CMP CL,0x24
00010edd(5): MOV qword ptr [RSP + 0x10],RAX
00010ee2(6): JA 0x00010fa0
00010ee8(3): MOV RBP,RSI
00010eeb(7): LEA RSI,[0x15cc0]
00010ef2(3): MOVZX EDX,CL
00010ef5(3): MOV R14,RDI
00010ef8(4): MOVSXD RAX,dword ptr [RSI + RDX*0x4]
00010efc(3): ADD RAX,RSI
00010eff(2): JMP RAX
00010f01(4): MOV RBX,qword ptr [RBP + 0x30]
00010f05(5): MOV R15,qword ptr [RSP + 0x20]
00010f0a(3): MOV RSI,RDI
00010f0d(5): MOV R13,qword ptr [RSP + 0x18]
00010f12(4): MOV qword ptr [RSP],R8
00010f16(4): LEA RAX,[RBX + 0x1]
00010f1a(3): MOV RDX,R15
00010f1d(7): OR RDX,0x800000
00010f24(3): MOV RDI,R13
00010f27(4): MOV qword ptr [RBP + 0x30],RAX
00010f2b(5): CALL 0x000106e0
00010f30(2): CDQE
00010f32(4): ADD qword ptr [R14 + 0x48],RAX
00010f36(2): XOR EAX,EAX
00010f38(5): CMP byte ptr [R13 + 0x8],0x9
00010f3d(3): MOV RDX,R13
00010f40(6): JZ 0x00011a40
00010f46(5): MOV R13,qword ptr [RSP + 0x40]
00010f4b(4): MOV R8,qword ptr [RSP]
00010f4f(3): MOV RCX,R15
00010f52(3): MOV RSI,RBP
00010f55(3): MOV RDI,R14
00010f58(4): ADD R8,0x1
00010f5c(3): MOV R9,R13
00010f5f(5): CALL 0x00012510
00010f64(4): MOV R11D,dword ptr [R13]
00010f68(3): TEST R11D,R11D
00010f6b(2): JNZ 0x00010fa0
00010f6d(5): MOV RDX,qword ptr [RSP + 0x18]
00010f72(4): CMP byte ptr [RDX + 0x8],0x9
00010f76(6): JZ 0x00011a40
00010f7c(3): TEST RAX,RAX
00010f7f(2): JZ 0x00010f92
00010f81(7): LEA RSI,[0x7260]
00010f88(2): XOR EDX,EDX
00010f8a(3): MOV RDI,RAX
00010f8d(5): CALL 0x000063c0
00010f92(5): MOV RAX,qword ptr [RSP + 0x40]
00010f97(6): MOV dword ptr [RAX],0x8
00010f9d(3): NOP dword ptr [RAX]
00010fa0(9): MOV qword ptr [RSP + 0x28],0x0
00010fa9(7): NOP dword ptr [RAX]
00010fb0(8): MOV RDI,qword ptr [0x118 + RSP]
00010fb8(9): XOR RDI,qword ptr FS:[0x28]
00010fc1(5): MOV RAX,qword ptr [RSP + 0x28]
00010fc6(6): JNZ 0x0001233e
00010fcc(7): ADD RSP,0x128
00010fd3(1): POP RBX
00010fd4(1): POP RBP
00010fd5(2): POP R12
00010fd7(2): POP R13
00010fd9(2): POP R14
00010fdb(2): POP R15
00010fdd(1): RET
00010fde(9): TEST qword ptr [RSP + 0x20],0x1000000
00010fe7(6): JNZ 0x0001123d
00010fed(5): MOV RAX,qword ptr [RSP + 0x20]
00010ff2(2): TEST AL,0x20
00010ff4(6): JNZ 0x0001123d
00010ffa(2): TEST AL,0x10
00010ffc(6): JNZ 0x00011e65
00011002(3): CMP CL,0x9
00011005(6): JZ 0x00011a18
0001100b(5): MOV RAX,qword ptr [RSP + 0x10]
00011010(5): MOV R8,qword ptr [RSP + 0x18]
00011015(2): XOR ECX,ECX
00011017(2): XOR EDX,EDX
00011019(7): LEA RSI,[0x80 + RAX]
00011020(4): LEA RDI,[RAX + 0x70]
00011024(5): MOV byte ptr [R8 + 0x8],0x1
00011029(5): CALL 0x000087a0
0001102e(3): TEST RAX,RAX
00011031(5): MOV qword ptr [RSP + 0x28],RAX
00011036(6): JZ 0x00011a08
0001103c(5): MOV RBX,qword ptr [RSP + 0x18]
00011041(5): MOV RDX,qword ptr [RSP + 0x20]
00011046(3): MOV RSI,R14
00011049(8): LEA R15,[0xc0 + RSP]
00011051(3): MOV RDI,RBX
00011054(5): CALL 0x000106e0
00011059(2): CDQE
0001105b(4): ADD qword ptr [R14 + 0x48],RAX
0001105f(4): MOVZX EAX,byte ptr [RBX + 0x8]
00011063(5): NOP dword ptr [RAX + RAX*0x1]
00011068(2): CMP AL,0x17
0001106a(6): JA 0x00010fb0
00011070(2): CMP AL,0x12
00011072(5): MOV ECX,0x8c0800
00011077(3): SETZ BL
0001107a(4): BT RCX,RAX
0001107e(6): JNC 0x00010fb0
00011084(5): MOV RCX,qword ptr [RSP + 0x18]
00011089(2): CMP AL,0x17
0001108b(4): MOV RBP,qword ptr [R14 + 0x48]
0001108f(4): MOVDQA XMM0,xmmword ptr [RCX]
00011093(6): JZ 0x000113b8
00011099(2): CMP AL,0x13
0001109b(3): MOVZX EBX,BL
0001109e(6): JZ 0x00011350
000110a4(5): MOV RDX,qword ptr [RSP + 0x20]
000110a9(5): MOV RDI,qword ptr [RSP + 0x18]
000110ae(3): MOV RSI,R14
000110b1(5): CALL 0x000106e0
000110b6(2): CDQE
000110b8(4): ADD qword ptr [R14 + 0x48],RAX
000110bc(6): CMP qword ptr [RSP + 0x28],0x0
000110c2(6): JZ 0x00011450
000110c8(8): MOV qword ptr [RSP],-0x1
000110d0(3): TEST RBX,RBX
000110d3(5): MOV RBP,qword ptr [RSP + 0x28]
000110d8(9): MOV qword ptr [RSP + 0x30],0x0
000110e1(6): JG 0x00011260
000110e7(4): CMP byte ptr [RBP + 0x30],0x11
000110eb(6): JZ 0x00011430
000110f1(5): CMP qword ptr [RSP],-0x1
000110f6(3): MOV RDX,RBP
000110f9(3): MOV R8,R15
000110fc(3): SETZ AL
000110ff(2): XOR ECX,ECX
00011101(3): ADD EAX,0xa
00011104(7): MOV byte ptr [0xc8 + RSP],AL
0001110b(5): MOV RAX,qword ptr [RSP + 0x10]
00011110(4): LEA R12,[RAX + 0x70]
00011114(7): LEA R13,[0x80 + RAX]
0001111b(3): MOV RDI,R12
0001111e(3): MOV RSI,R13
00011121(5): CALL 0x000087a0
00011126(3): TEST RAX,RAX
00011129(3): MOV RDX,RAX
0001112c(6): JZ 0x00011320
00011132(4): ADD RBX,0x2
00011136(4): CMP RBX,qword ptr [RSP]
0001113a(2): JG 0x000111bb
0001113c(5): MOV qword ptr [RSP + 0x48],R14
00011141(3): MOV R14,RAX
00011144(5): MOV RSI,qword ptr [RSP + 0x10]
00011149(3): MOV RDI,RBP
0001114c(5): CALL 0x00008880
00011151(3): MOV R8,R15
00011154(3): MOV RBP,RAX
00011157(3): MOV RCX,RAX
0001115a(3): MOV RDX,R14
0001115d(3): MOV RSI,R13
00011160(3): MOV RDI,R12
00011163(8): MOV byte ptr [0xc8 + RSP],0x10
0001116b(5): CALL 0x000087a0
00011170(3): TEST RBP,RBP
00011173(6): JZ 0x00011320
00011179(3): TEST RAX,RAX
0001117c(6): JZ 0x00011320
00011182(2): XOR ECX,ECX
00011184(3): MOV R8,R15
00011187(3): MOV RDX,RAX
0001118a(3): MOV RSI,R13
0001118d(3): MOV RDI,R12
00011190(8): MOV byte ptr [0xc8 + RSP],0xa
00011198(5): CALL 0x000087a0
0001119d(3): TEST RAX,RAX
000111a0(3): MOV R14,RAX
000111a3(6): JZ 0x00011320
000111a9(4): ADD RBX,0x1
000111ad(4): CMP RBX,qword ptr [RSP]
000111b1(2): JLE 0x00011144
000111b3(5): MOV R14,qword ptr [RSP + 0x48]
000111b8(3): MOV RDX,RAX
000111bb(5): MOV RAX,qword ptr [RSP + 0x30]
000111c0(3): TEST RAX,RAX
000111c3(6): JZ 0x00011470
000111c9(3): MOV RCX,RDX
000111cc(3): MOV R8,R15
000111cf(3): MOV RDX,RAX
000111d2(3): MOV RSI,R13
000111d5(3): MOV RDI,R12
000111d8(8): MOV byte ptr [0xc8 + RSP],0x10
000111e0(5): CALL 0x000087a0
000111e5(5): MOV RDI,qword ptr [RSP + 0x40]
000111ea(2): MOV EDX,dword ptr [RDI]
000111ec(2): TEST EDX,EDX
000111ee(2): JZ 0x000111f9
000111f0(3): TEST RAX,RAX
000111f3(6): JZ 0x0001154b
000111f9(5): MOV qword ptr [RSP + 0x28],RAX
000111fe(9): TEST qword ptr [RSP + 0x20],0x1000000
00011207(5): MOV RAX,qword ptr [RSP + 0x18]
0001120c(4): MOVZX EAX,byte ptr [RAX + 0x8]
00011210(6): JZ 0x00011068
00011216(2): CMP AL,0xb
00011218(2): JZ 0x00011222
0001121a(2): CMP AL,0x17
0001121c(6): JNZ 0x00011068
00011222(5): MOV RAX,qword ptr [RSP + 0x28]
00011227(3): TEST RAX,RAX
0001122a(2): JZ 0x0001123d
0001122c(7): LEA RSI,[0x7260]
00011233(2): XOR EDX,EDX
00011235(3): MOV RDI,RAX
00011238(5): CALL 0x000063c0
0001123d(5): MOV RAX,qword ptr [RSP + 0x40]
00011242(9): MOV qword ptr [RSP + 0x28],0x0
0001124b(6): MOV dword ptr [RAX],0xd
00011251(5): JMP 0x00010fb0
00011260(4): CMP RBX,0x1
00011264(6): JZ 0x00011a9c
0001126a(5): MOV RAX,qword ptr [RSP + 0x10]
0001126f(3): MOV R13,RBP
00011272(5): MOV qword ptr [RSP + 0x48],R14
00011277(7): LEA R12,[0x80 + RAX]
0001127e(4): LEA RDI,[RAX + 0x70]
00011282(3): MOV RAX,RBP
00011285(3): MOV R14,RAX
00011288(5): MOV EBP,0x2
0001128d(3): MOV RSI,R12
00011290(5): MOV qword ptr [RSP + 0x30],RDI
00011295(3): MOV R12,R13
00011298(3): MOV R13,RBX
0001129b(3): MOV RBX,RSI
0001129e(2): NOP
000112a0(5): MOV RSI,qword ptr [RSP + 0x10]
000112a5(3): MOV RDI,R12
000112a8(5): CALL 0x00008880
000112ad(5): MOV RDI,qword ptr [RSP + 0x30]
000112b2(3): MOV R12,RAX
000112b5(3): MOV RDX,R14
000112b8(3): MOV R8,R15
000112bb(3): MOV RCX,RAX
000112be(3): MOV RSI,RBX
000112c1(8): MOV byte ptr [0xc8 + RSP],0x10
000112c9(5): CALL 0x000087a0
000112ce(3): TEST R12,R12
000112d1(3): MOV R14,RAX
000112d4(2): JZ 0x00011320
000112d6(3): TEST RAX,RAX
000112d9(2): JZ 0x00011320
000112db(4): ADD RBP,0x1
000112df(3): CMP RBP,R13
000112e2(2): JLE 0x000112a0
000112e4(5): MOV R14,qword ptr [RSP + 0x48]
000112e9(3): MOV RBX,R13
000112ec(5): MOV qword ptr [RSP + 0x30],RAX
000112f1(3): MOV R13,R12
000112f4(4): CMP qword ptr [RSP],RBX
000112f8(6): JZ 0x00011464
000112fe(5): MOV RSI,qword ptr [RSP + 0x10]
00011303(3): MOV RDI,R13
00011306(5): CALL 0x00008880
0001130b(3): TEST RAX,RAX
0001130e(3): MOV RBP,RAX
00011311(6): JNZ 0x000110e7
00011317(9): NOP word ptr [RAX + RAX*0x1]
00011320(5): MOV RAX,qword ptr [RSP + 0x40]
00011325(6): MOV dword ptr [RAX],0xc
0001132b(5): MOV RDI,qword ptr [RSP + 0x28]
00011330(7): LEA RSI,[0x7260]
00011337(2): XOR EDX,EDX
00011339(5): CALL 0x000063c0
0001133e(9): MOV qword ptr [RSP + 0x28],0x0
00011347(5): JMP 0x00010fb0
00011350(8): MOV qword ptr [RSP],0x1
00011358(5): MOV RDX,qword ptr [RSP + 0x20]
0001135d(5): MOV RDI,qword ptr [RSP + 0x18]
00011362(3): MOV RSI,R14
00011365(5): CALL 0x000106e0
0001136a(2): CDQE
0001136c(4): ADD qword ptr [R14 + 0x48],RAX
00011370(6): CMP qword ptr [RSP + 0x28],0x0
00011376(6): JZ 0x00011450
0001137c(4): MOV RAX,qword ptr [RSP]
00011380(3): OR RAX,RBX
00011383(6): JNZ 0x000110d0
00011389(5): MOV RDI,qword ptr [RSP + 0x28]
0001138e(7): LEA RSI,[0x7260]
00011395(2): XOR EDX,EDX
00011397(5): CALL 0x000063c0
0001139c(5): MOV RAX,qword ptr [RSP + 0x40]
000113a1(2): MOV ESI,dword ptr [RAX]
000113a3(2): TEST ESI,ESI
000113a5(2): JNZ 0x0001132b
000113a7(9): MOV qword ptr [RSP + 0x28],0x0
000113b0(5): JMP 0x000111fe
000113b8(5): MOV RDX,qword ptr [RSP + 0x20]
000113bd(3): MOV RSI,RCX
000113c0(3): MOV RDI,R14
000113c3(4): MOVAPS xmmword ptr [RSP],XMM0
000113c7(5): CALL 0x00010de0
000113cc(4): CMP RAX,-0x1
000113d0(3): MOV RBX,RAX
000113d3(5): MOVDQA XMM0,xmmword ptr [RSP]
000113d8(6): JZ 0x00011480
000113de(4): CMP RAX,-0x2
000113e2(2): JZ 0x000113fd
000113e4(5): MOV RAX,qword ptr [RSP + 0x18]
000113e9(4): MOVZX EAX,byte ptr [RAX + 0x8]
000113ed(2): CMP AL,0x18
000113ef(6): JZ 0x00011510
000113f5(2): CMP AL,0x1
000113f7(6): JZ 0x00011523
000113fd(9): TEST qword ptr [RSP + 0x20],0x200000
00011406(6): JZ 0x00012343
0001140c(5): MOV RAX,qword ptr [RSP + 0x18]
00011411(4): MOV qword ptr [R14 + 0x48],RBP
00011415(3): MOVAPS xmmword ptr [RAX],XMM0
00011418(4): MOV byte ptr [RAX + 0x8],0x1
0001141c(5): MOV RAX,qword ptr [RSP + 0x28]
00011421(5): JMP 0x000111e5
00011430(4): MOV RDX,qword ptr [RBP + 0x28]
00011434(7): LEA RSI,[0x6100]
0001143b(3): MOV RDI,RBP
0001143e(5): CALL 0x000063c0
00011443(5): JMP 0x000110f1
00011450(5): MOV RAX,qword ptr [RSP + 0x40]
00011455(2): MOV ECX,dword ptr [RAX]
00011457(2): TEST ECX,ECX
00011459(6): JZ 0x000113a7
0001145f(5): JMP 0x00010fa0
00011464(5): MOV RDX,qword ptr [RSP + 0x30]
00011469(7): NOP dword ptr [RAX]
00011470(5): MOV qword ptr [RSP + 0x28],RDX
00011475(5): JMP 0x000111fe
00011480(5): MOV RAX,qword ptr [RSP + 0x18]
00011485(4): CMP byte ptr [RAX + 0x8],0x1
00011489(6): JNZ 0x00011540
0001148f(5): MOV RAX,qword ptr [RSP + 0x18]
00011494(3): CMP byte ptr [RAX],0x2c
00011497(6): JNZ 0x00011540
0001149d(2): XOR EBX,EBX
0001149f(5): MOV RDX,qword ptr [RSP + 0x20]
000114a4(5): MOV RSI,qword ptr [RSP + 0x18]
000114a9(3): MOV RDI,R14
000114ac(5): MOVAPS xmmword ptr [RSP + 0x30],XMM0
000114b1(5): CALL 0x00010de0
000114b6(4): CMP RAX,-0x2
000114ba(4): MOV qword ptr [RSP],RAX
000114be(6): MOVDQA XMM0,xmmword ptr [RSP + 0x30]
000114c4(6): JZ 0x000113fd
000114ca(4): MOV RAX,qword ptr [RSP]
000114ce(4): CMP RAX,-0x1
000114d2(2): JZ 0x000114d9
000114d4(3): CMP RAX,RBX
000114d7(2): JL 0x00011540
000114d9(5): MOV RAX,qword ptr [RSP + 0x18]
000114de(4): CMP byte ptr [RAX + 0x8],0x18
000114e2(2): JNZ 0x00011540
000114e4(5): CMP qword ptr [RSP],-0x1
000114e9(2): JNZ 0x00011514
000114eb(2): XOR EAX,EAX
000114ed(7): CMP RBX,0x7fff
000114f4(3): SETG AL
000114f7(3): TEST RAX,RAX
000114fa(6): JZ 0x00011358
00011500(5): MOV RAX,qword ptr [RSP + 0x40]
00011505(6): MOV dword ptr [RAX],0xf
0001150b(2): JMP 0x0001154b
00011510(4): MOV qword ptr [RSP],RBX
00011514(2): XOR EAX,EAX
00011516(8): CMP qword ptr [RSP],0x7fff
0001151e(3): SETG AL
00011521(2): JMP 0x000114f7
00011523(5): MOV RAX,qword ptr [RSP + 0x18]
00011528(3): CMP byte ptr [RAX],0x2c
0001152b(6): JZ 0x0001149f
00011531(9): TEST qword ptr [RSP + 0x20],0x200000
0001153a(6): JNZ 0x0001140c
00011540(5): MOV RAX,qword ptr [RSP + 0x40]
00011545(6): MOV dword ptr [RAX],0xa
0001154b(6): CMP qword ptr [RSP + 0x28],0x0
00011551(6): JNZ 0x0001132b
00011557(5): JMP 0x00010fa0
00011560(5): MOV RAX,qword ptr [RSP + 0x18]
00011565(2): MOV EBP,dword ptr [RAX]
00011567(6): TEST EBP,0x30f
0001156d(2): JZ 0x000115d1
0001156f(5): MOV RAX,qword ptr [RSP + 0x10]
00011574(7): MOVZX EAX,byte ptr [0xb0 + RAX]
0001157b(2): TEST AL,0x10
0001157d(2): JNZ 0x000115d1
0001157f(5): MOV RDI,qword ptr [RSP + 0x10]
00011584(3): OR EAX,0x10
00011587(2): TEST AL,0x8
00011589(6): MOV byte ptr [0xb0 + RDI],AL
0001158f(6): JNZ 0x00012193
00011595(10): MOV RDX,0x3ff000000000000
0001159f(2): TEST AL,0x4
000115a1(7): MOV qword ptr [0xb8 + RDI],RDX
000115a8(10): MOV RDX,0x7fffffe87fffffe
000115b2(7): MOV qword ptr [0xc0 + RDI],RDX
000115b9(6): JZ 0x00012118
000115bf(4): PXOR XMM0,XMM0
000115c3(5): MOV RAX,qword ptr [RSP + 0x18]
000115c8(7): MOVUPS xmmword ptr [0xc8 + RDI],XMM0
000115cf(2): MOV EBP,dword ptr [RAX]
000115d1(5): MOV RAX,qword ptr [RSP + 0x10]
000115d6(4): LEA RBX,[RAX + 0x70]
000115da(7): LEA R12,[0x80 + RAX]
000115e1(6): LEA EAX,[-0x100 + RBP]
000115e7(5): TEST EAX,0xfffffeff
000115ec(6): JNZ 0x00011c5a
000115f2(6): CMP EBP,0x100
000115f8(5): MOV R15,qword ptr [RSP + 0x18]
000115fd(6): JZ 0x00011c32
00011603(7): MOV dword ptr [R15],0x5
0001160a(3): MOV R8,R15
0001160d(2): XOR ECX,ECX
0001160f(2): XOR EDX,EDX
00011611(3): MOV RSI,R12
00011614(3): MOV RDI,RBX
00011617(5): CALL 0x000087a0
0001161c(7): MOV dword ptr [R15],0xa
00011623(3): MOV RBP,RAX
00011626(5): MOV R8,qword ptr [RSP + 0x18]
0001162b(2): XOR ECX,ECX
0001162d(2): XOR EDX,EDX
0001162f(3): MOV RSI,R12
00011632(3): MOV RDI,RBX
00011635(5): CALL 0x000087a0
0001163a(8): LEA R8,[0xc0 + RSP]
00011642(3): MOV RDX,RBP
00011645(3): MOV RDI,RBX
00011648(3): MOV RCX,RAX
0001164b(3): MOV RSI,R12
0001164e(3): MOV R13,RAX
00011651(8): MOV byte ptr [0xc8 + RSP],0xa
00011659(5): CALL 0x000087a0
0001165e(3): TEST RBP,RBP
00011661(3): MOV RDI,RAX
00011664(5): MOV qword ptr [RSP + 0x28],RAX
00011669(3): SETZ DL
0001166c(3): TEST R13,R13
0001166f(3): SETZ AL
00011672(2): OR DL,AL
00011674(6): JNZ 0x00011a08
0001167a(3): TEST RDI,RDI
0001167d(6): JZ 0x00011a08
00011683(5): MOV RDX,qword ptr [RSP + 0x20]
00011688(5): MOV RDI,qword ptr [RSP + 0x18]
0001168d(3): MOV RSI,R14
00011690(5): CALL 0x000106e0
00011695(2): CDQE
00011697(4): ADD qword ptr [R14 + 0x48],RAX
0001169b(5): JMP 0x00010fb0
000116a0(5): MOV ESI,0x1
000116a5(5): MOV EDI,0x20
000116aa(12): MOV qword ptr [0x98 + RSP],0x0
000116b6(5): CALL 0x00001ab0
000116bb(5): MOV ESI,0x1
000116c0(3): MOV R12,RAX
000116c3(5): MOV EDI,0x50
000116c8(5): CALL 0x00001ab0
000116cd(3): TEST R12,R12
000116d0(3): MOV R13,RAX
000116d3(3): SETZ DL
000116d6(3): TEST RAX,RAX
000116d9(3): SETZ AL
000116dc(2): OR DL,AL
000116de(6): JNZ 0x00011eb9
000116e4(5): MOV R10,qword ptr [RSP + 0x18]
000116e9(5): MOV RDX,qword ptr [RSP + 0x20]
000116ee(3): MOV RSI,R14
000116f1(3): MOV RDI,R10
000116f4(5): CALL 0x00005fd0
000116f9(3): MOVSXD RBX,EAX
000116fc(5): MOVZX EAX,byte ptr [R10 + 0x8]
00011701(2): CMP AL,0x2
00011703(6): JZ 0x00011ea9
00011709(2): CMP AL,0x19
0001170b(5): MOV byte ptr [RSP + 0x57],0x0
00011710(6): JZ 0x00011bda
00011716(2): CMP AL,0x15
00011718(6): JZ 0x00011c24
0001171e(8): LEA RAX,[0xd0 + RSP]
00011726(5): MOV R15,qword ptr [RSP + 0x18]
0001172b(7): LEA RBP,[0x15d54]
00011732(9): MOV qword ptr [RSP + 0x48],0x0
0001173b(6): MOV R9D,0x1
00011741(9): MOV qword ptr [RSP + 0x30],0x0
0001174a(5): MOV qword ptr [RSP + 0x28],RAX
0001174f(8): LEA RAX,[0xa0 + RSP]
00011757(4): MOV qword ptr [RSP],RAX
0001175b(8): LEA RAX,[0x98 + RSP]
00011763(5): MOV qword ptr [RSP + 0x58],RAX
00011768(8): LEA RAX,[0xc0 + RSP]
00011770(5): MOV qword ptr [RSP + 0x60],RAX
00011775(8): LEA RAX,[0xf0 + RSP]
0001177d(5): MOV qword ptr [RSP + 0x68],RAX
00011782(5): MOV RAX,qword ptr [RSP + 0x28]
00011787(5): MOV R8,qword ptr [RSP + 0x20]
0001178c(4): AND R9D,0x1
00011790(4): MOV RDI,qword ptr [RSP]
00011794(2): MOV ECX,EBX
00011796(3): MOV RDX,R15
00011799(3): MOV RSI,R14
0001179c(11): MOV dword ptr [0xa0 + RSP],0x3
000117a7(8): MOV qword ptr [0xa8 + RSP],RAX
000117af(5): CALL 0x00010480
000117b4(2): TEST EAX,EAX
000117b6(6): JNZ 0x00011c9b
000117bc(5): MOV RDX,qword ptr [RSP + 0x20]
000117c1(3): MOV RSI,R14
000117c4(3): MOV RDI,R15
000117c7(5): CALL 0x00005fd0
000117cc(3): MOVSXD RBX,EAX
000117cf(7): MOV EAX,dword ptr [0xa0 + RSP]
000117d6(3): LEA EDX,[RAX + -0x2]
000117d9(3): AND EDX,0xfffffffd
000117dc(2): JZ 0x000117f5
000117de(5): MOVZX EDX,byte ptr [R15 + 0x8]
000117e3(3): CMP DL,0x2
000117e6(6): JZ 0x00011c81
000117ec(3): CMP DL,0x16
000117ef(6): JZ 0x00011ca7
000117f5(3): CMP EAX,0x4
000117f8(6): JA 0x0001219a
000117fe(5): MOVSXD RAX,dword ptr [RBP + RAX*0x4]
00011803(3): ADD RAX,RBP
00011806(2): JMP RAX
00011808(5): MOV RBX,qword ptr [RSP + 0x40]
0001180d(3): CMP CL,0x23
00011810(4): MOV RSI,qword ptr [RDI + 0x78]
00011814(4): SETZ R8B
00011818(7): LEA RCX,[0x145ad]
0001181f(7): LEA RDX,[0x158bf]
00011826(4): MOVZX R8D,R8B
0001182a(3): MOV R9,RBX
0001182d(5): MOV RDI,qword ptr [RSP + 0x10]
00011832(5): CALL 0x0000baf0
00011837(2): MOV EDI,dword ptr [RBX]
00011839(5): MOV qword ptr [RSP + 0x28],RAX
0001183e(2): TEST EDI,EDI
00011840(6): JZ 0x0001103c
00011846(3): TEST RAX,RAX
00011849(6): JNZ 0x0001103c
0001184f(5): JMP 0x00010fa0
00011858(5): MOV RBX,qword ptr [RSP + 0x40]
0001185d(3): CMP CL,0x21
00011860(4): MOV RSI,qword ptr [RDI + 0x78]
00011864(4): SETZ R8B
00011868(7): LEA RCX,[0x14442]
0001186f(7): LEA RDX,[0x158b3]
00011876(4): MOVZX R8D,R8B
0001187a(3): MOV R9,RBX
0001187d(2): JMP 0x0001182d
0001187f(5): MOV RAX,qword ptr [RSP + 0x18]
00011884(5): MOV RDI,qword ptr [RSP + 0x10]
00011889(3): MOV RCX,qword ptr [RAX]
0001188c(5): MOV EAX,0x1
00011891(2): SHL EAX,CL
00011893(2): CDQE
00011895(7): TEST qword ptr [0xa8 + RDI],RAX
0001189c(6): JZ 0x00011ece
000118a2(5): MOV RBX,qword ptr [RSP + 0x10]
000118a7(5): MOV R8,qword ptr [RSP + 0x18]
000118ac(2): XOR ECX,ECX
000118ae(2): XOR EDX,EDX
000118b0(7): OR qword ptr [0xa0 + RBX],RAX
000118b7(7): LEA RSI,[0x80 + RBX]
000118be(4): LEA RDI,[RBX + 0x70]
000118c2(5): CALL 0x000087a0
000118c7(3): TEST RAX,RAX
000118ca(5): MOV qword ptr [RSP + 0x28],RAX
000118cf(6): JZ 0x00011a08
000118d5(8): ADD qword ptr [0x98 + RBX],0x1
000118dd(7): OR byte ptr [0xb0 + RBX],0x2
000118e4(5): JMP 0x0001103c
000118e9(5): MOV RBX,qword ptr [RSP + 0x10]
000118ee(5): MOV R8,qword ptr [RSP + 0x18]
000118f3(2): XOR ECX,ECX
000118f5(2): XOR EDX,EDX
000118f7(7): LEA RSI,[0x80 + RBX]
000118fe(4): LEA RDI,[RBX + 0x70]
00011902(5): CALL 0x000087a0
00011907(3): TEST RAX,RAX
0001190a(5): MOV qword ptr [RSP + 0x28],RAX
0001190f(6): JZ 0x00011a08
00011915(7): CMP dword ptr [0xb4 + RBX],0x1
0001191c(6): JLE 0x0001103c
00011922(7): OR byte ptr [0xb0 + RBX],0x2
00011929(5): JMP 0x0001103c
0001192e(5): MOV RAX,qword ptr [RSP + 0x10]
00011933(5): MOV R8,qword ptr [RSP + 0x18]
00011938(2): XOR ECX,ECX
0001193a(2): XOR EDX,EDX
0001193c(4): LEA RBX,[RAX + 0x70]
00011940(7): LEA RBP,[0x80 + RAX]
00011947(3): MOV RDI,RBX
0001194a(3): MOV RSI,RBP
0001194d(5): CALL 0x000087a0
00011952(3): TEST RAX,RAX
00011955(5): MOV qword ptr [RSP + 0x28],RAX
0001195a(6): JZ 0x00011a08
00011960(5): MOV RAX,qword ptr [RSP + 0x10]
00011965(8): LEA R12,[0xc0 + RSP]
0001196d(5): MOV R15,qword ptr [RSP + 0x28]
00011972(7): CMP dword ptr [0xb4 + RAX],0x1
00011979(6): JLE 0x0001103c
0001197f(4): MOV RAX,qword ptr [R14 + 0x48]
00011983(4): CMP qword ptr [R14 + 0x68],RAX
00011987(6): JLE 0x00011c91
0001198d(4): CMP RAX,qword ptr [R14 + 0x30]
00011991(6): JZ 0x00011c91
00011997(4): MOV RDX,qword ptr [R14 + 0x10]
0001199b(4): CMP dword ptr [RDX + RAX*0x4],-0x1
0001199f(6): JNZ 0x00011c91
000119a5(5): MOV R13,qword ptr [RSP + 0x18]
000119aa(5): MOV RDX,qword ptr [RSP + 0x20]
000119af(3): MOV RSI,R14
000119b2(3): MOV RDI,R13
000119b5(5): CALL 0x000106e0
000119ba(2): CDQE
000119bc(4): ADD qword ptr [R14 + 0x48],RAX
000119c0(3): MOV R8,R13
000119c3(2): XOR ECX,ECX
000119c5(2): XOR EDX,EDX
000119c7(3): MOV RSI,RBP
000119ca(3): MOV RDI,RBX
000119cd(5): CALL 0x000087a0
000119d2(3): MOV RDX,R15
000119d5(3): MOV R13,RAX
000119d8(3): MOV R8,R12
000119db(3): MOV RCX,RAX
000119de(3): MOV RSI,RBP
000119e1(3): MOV RDI,RBX
000119e4(8): MOV byte ptr [0xc8 + RSP],0x10
000119ec(5): CALL 0x000087a0
000119f1(3): TEST R13,R13
000119f4(3): MOV R15,RAX
000119f7(3): SETZ DL
000119fa(3): TEST RAX,RAX
000119fd(3): SETZ AL
00011a00(2): OR DL,AL
00011a02(6): JZ 0x0001197f
00011a08(5): MOV RAX,qword ptr [RSP + 0x40]
00011a0d(6): MOV dword ptr [RAX],0xc
00011a13(5): JMP 0x00010fa0
00011a18(9): TEST qword ptr [RSP + 0x20],0x20000
00011a21(6): JNZ 0x0001100b
00011a27(5): MOV RAX,qword ptr [RSP + 0x40]
00011a2c(9): MOV qword ptr [RSP + 0x28],0x0
00011a35(6): MOV dword ptr [RAX],0x10
00011a3b(5): JMP 0x00010fb0
00011a40(4): CMP RBX,0x8
00011a44(2): JBE 0x00011aab
00011a46(5): MOV RDI,qword ptr [RSP + 0x10]
00011a4b(8): LEA R8,[0xc0 + RSP]
00011a53(2): XOR ECX,ECX
00011a55(3): MOV RDX,RAX
00011a58(8): MOV byte ptr [0xc8 + RSP],0x11
00011a60(7): LEA RSI,[0x80 + RDI]
00011a67(4): ADD RDI,0x70
00011a6b(5): CALL 0x000087a0
00011a70(3): TEST RAX,RAX
00011a73(5): MOV qword ptr [RSP + 0x28],RAX
00011a78(2): JZ 0x00011a08
00011a7a(4): MOV qword ptr [RAX + 0x28],RBX
00011a7e(5): JMP 0x0001103c
00011a83(5): MOV RAX,qword ptr [RSP + 0x40]
00011a88(9): MOV qword ptr [RSP + 0x28],0x0
00011a91(6): MOV dword ptr [RAX],0x5
00011a97(5): JMP 0x00010fb0
00011a9c(5): MOV R13,qword ptr [RSP + 0x28]
00011aa1(5): MOV qword ptr [RSP + 0x30],R13
00011aa6(5): JMP 0x000112f4
00011aab(5): MOV RSI,qword ptr [RSP + 0x10]
00011ab0(5): MOV EDX,0x1
00011ab5(2): MOV ECX,EBX
00011ab7(2): SHL EDX,CL
00011ab9(3): MOVSXD RDX,EDX
00011abc(7): OR qword ptr [0xa8 + RSI],RDX
00011ac3(2): JMP 0x00011a46
00011ac5(8): MOV RSI,qword ptr [0xa8 + RSP]
00011acd(3): MOV RDI,R12
00011ad0(5): CALL 0x0000b290
00011ad5(5): MOV RDX,qword ptr [RSP + 0x40]
00011ada(2): TEST EAX,EAX
00011adc(2): MOV dword ptr [RDX],EAX
00011ade(2): JNZ 0x00011b18
00011ae0(5): MOVZX EAX,byte ptr [R15 + 0x8]
00011ae5(2): CMP AL,0x2
00011ae7(6): JZ 0x00011c81
00011aed(2): CMP AL,0x15
00011aef(6): JZ 0x00011f02
00011af5(3): XOR R9D,R9D
00011af8(5): JMP 0x00011782
00011afd(8): MOV RSI,qword ptr [0xa8 + RSP]
00011b05(3): MOV RDI,R12
00011b08(5): CALL 0x0000b290
00011b0d(5): MOV RDX,qword ptr [RSP + 0x40]
00011b12(2): TEST EAX,EAX
00011b14(2): MOV dword ptr [RDX],EAX
00011b16(2): JZ 0x00011ae0
00011b18(3): MOV RDI,R12
00011b1b(5): CALL 0x000018d0
00011b20(3): MOV RDI,R13
00011b23(5): CALL 0x00007200
00011b28(5): MOV RAX,qword ptr [RSP + 0x40]
00011b2d(3): MOV R8D,dword ptr [RAX]
00011b30(3): TEST R8D,R8D
00011b33(6): JNZ 0x00010fa0
00011b39(9): MOV qword ptr [RSP + 0x28],0x0
00011b42(5): JMP 0x0001103c
00011b47(4): MOV RDX,qword ptr [R13 + 0x28]
00011b4b(5): CMP RDX,qword ptr [RSP + 0x30]
00011b50(4): MOV RAX,qword ptr [R13]
00011b54(6): JZ 0x0001204e
00011b5a(4): LEA RCX,[RDX + 0x1]
00011b5e(4): MOV qword ptr [R13 + 0x28],RCX
00011b62(7): MOV ECX,dword ptr [0xa8 + RSP]
00011b69(3): MOV dword ptr [RAX + RDX*0x4],ECX
00011b6c(5): JMP 0x00011ae0
00011b71(8): MOVZX EDX,byte ptr [0xa8 + RSP]
00011b79(5): MOV ESI,0x1
00011b7e(3): MOV RAX,RDX
00011b81(3): AND EDX,0x3f
00011b84(4): SHR RAX,0x3
00011b88(2): MOV ECX,EDX
00011b8a(3): AND EAX,0x18
00011b8d(3): SHL RSI,CL
00011b90(4): OR qword ptr [R12 + RAX*0x1],RSI
00011b94(5): JMP 0x00011ae0
00011b99(4): SUB RSP,0x8
00011b9d(4): MOV RDI,qword ptr [R14 + 0x78]
00011ba1(4): LEA RDX,[R13 + 0x18]
00011ba5(4): PUSH qword ptr [RSP + 0x28]
00011ba9(8): MOV R9,qword ptr [0xb8 + RSP]
00011bb1(4): LEA RCX,[R13 + 0x48]
00011bb5(5): MOV R8,qword ptr [RSP + 0x68]
00011bba(3): MOV RSI,R12
00011bbd(5): CALL 0x0000b2e0
00011bc2(5): MOV RDX,qword ptr [RSP + 0x50]
00011bc7(2): TEST EAX,EAX
00011bc9(2): MOV dword ptr [RDX],EAX
00011bcb(2): POP R9
00011bcd(2): POP R10
00011bcf(6): JZ 0x00011ae0
00011bd5(5): JMP 0x00011b18
00011bda(5): OR byte ptr [R13 + 0x20],0x1
00011bdf(9): TEST qword ptr [RSP + 0x20],0x100
00011be8(2): JZ 0x00011bf2
00011bea(8): OR qword ptr [R12],0x400
00011bf2(4): ADD qword ptr [R14 + 0x48],RBX
00011bf6(5): MOV R11,qword ptr [RSP + 0x18]
00011bfb(3): MOV RSI,R14
00011bfe(5): MOV RDX,qword ptr [RSP + 0x20]
00011c03(3): MOV RDI,R11
00011c06(5): CALL 0x00005fd0
00011c0b(2): MOV EBX,EAX
00011c0d(5): MOVZX EAX,byte ptr [R11 + 0x8]
00011c12(2): CMP AL,0x2
00011c14(6): JZ 0x00011ea9
00011c1a(5): MOV byte ptr [RSP + 0x57],0x1
00011c1f(5): JMP 0x00011716
00011c24(5): MOV RAX,qword ptr [RSP + 0x18]
00011c29(4): MOV byte ptr [RAX + 0x8],0x1
00011c2d(5): JMP 0x0001171e
00011c32(7): MOV dword ptr [R15],0x6
00011c39(3): MOV R8,R15
00011c3c(2): XOR ECX,ECX
00011c3e(2): XOR EDX,EDX
00011c40(3): MOV RSI,R12
00011c43(3): MOV RDI,RBX
00011c46(5): CALL 0x000087a0
00011c4b(7): MOV dword ptr [R15],0x9
00011c52(3): MOV RBP,RAX
00011c55(5): JMP 0x00011626
00011c5a(5): MOV R8,qword ptr [RSP + 0x18]
00011c5f(2): XOR ECX,ECX
00011c61(2): XOR EDX,EDX
00011c63(3): MOV RSI,R12
00011c66(3): MOV RDI,RBX
00011c69(5): CALL 0x000087a0
00011c6e(3): TEST RAX,RAX
00011c71(5): MOV qword ptr [RSP + 0x28],RAX
00011c76(6): JNZ 0x00011683
00011c7c(5): JMP 0x00011a08
00011c81(5): MOV RAX,qword ptr [RSP + 0x40]
00011c86(6): MOV dword ptr [RAX],0x7
00011c8c(5): JMP 0x00011b18
00011c91(5): MOV qword ptr [RSP + 0x28],R15
00011c96(5): JMP 0x0001103c
00011c9b(5): MOV RDX,qword ptr [RSP + 0x40]
00011ca0(2): MOV dword ptr [RDX],EAX
00011ca2(5): JMP 0x00011b18
00011ca7(3): MOVSXD RAX,EBX
00011caa(5): MOV R11,qword ptr [RSP + 0x20]
00011caf(4): ADD qword ptr [R14 + 0x48],RAX
00011cb3(5): MOV R10,qword ptr [RSP + 0x60]
00011cb8(3): MOV RDX,R11
00011cbb(3): MOV RDI,R10
00011cbe(5): CALL 0x00005fd0
00011cc3(8): MOVZX EDX,byte ptr [0xc8 + RSP]
00011ccb(3): CMP DL,0x2
00011cce(2): JZ 0x00011c81
00011cd0(3): CMP DL,0x15
00011cd3(6): JZ 0x00011ee7
00011cd9(5): MOV RDX,qword ptr [RSP + 0x68]
00011cde(8): LEA RDI,[0xb0 + RSP]
00011ce6(6): MOV R9D,0x1
00011cec(3): MOV R8,R11
00011cef(2): MOV ECX,EAX
00011cf1(11): MOV dword ptr [0xb0 + RSP],0x3
00011cfc(8): MOV qword ptr [0xb8 + RSP],RDX
00011d04(3): MOV RDX,R10
00011d07(5): CALL 0x00010480
00011d0c(2): TEST EAX,EAX
00011d0e(2): JNZ 0x00011c9b
00011d10(5): MOV RDX,qword ptr [RSP + 0x20]
00011d15(3): MOV RSI,R14
00011d18(3): MOV RDI,R15
00011d1b(5): CALL 0x00005fd0
00011d20(3): MOVSXD RBX,EAX
00011d23(5): MOV RAX,qword ptr [RSP + 0x10]
00011d28(7): MOV ESI,dword ptr [0xa0 + RSP]
00011d2f(6): MOV R9D,0x0
00011d35(7): CMP dword ptr [0xb4 + RAX],0x1
00011d3c(3): LEA EAX,[RSI + -0x2]
00011d3f(4): CMOVG R9,R13
00011d43(3): AND EAX,0xfffffffd
00011d46(6): JZ 0x000121b9
00011d4c(8): MOV R10D,dword ptr [0xb0 + RSP]
00011d54(4): LEA EAX,[R10 + -0x2]
00011d58(3): AND EAX,0xfffffffd
00011d5b(6): JZ 0x000121b9
00011d61(3): CMP ESI,0x3
00011d64(4): SETZ R11B
00011d68(6): JZ 0x000121fd
00011d6e(4): CMP R10D,0x3
00011d72(6): JZ 0x000121c9
00011d78(2): TEST ESI,ESI
00011d7a(6): JNZ 0x000120e9
00011d80(8): MOVZX EDX,byte ptr [0xa8 + RSP]
00011d88(3): TEST R10D,R10D
00011d8b(6): JNZ 0x000120cd
00011d91(9): MOVZX R8D,byte ptr [0xb8 + RSP]
00011d9a(2): TEST ESI,ESI
00011d9c(6): JZ 0x00012086
00011da2(3): TEST R11B,R11B
00011da5(6): JNZ 0x00012086
00011dab(3): TEST R9,R9
00011dae(7): MOV EDX,dword ptr [0xa8 + RSP]
00011db5(2): JZ 0x00011dd4
00011db7(3): MOV EDI,R8D
00011dba(4): MOV dword ptr [RSP + 0x78],EDX
00011dbe(5): MOV qword ptr [RSP + 0x70],R9
00011dc3(5): CALL 0x00001b90
00011dc8(5): MOV R9,qword ptr [RSP + 0x70]
00011dcd(4): MOV EDX,dword ptr [RSP + 0x78]
00011dd1(3): MOV R8D,EAX
00011dd4(3): CMP EDX,-0x1
00011dd7(6): JZ 0x000121ed
00011ddd(4): CMP R8D,-0x1
00011de1(6): JZ 0x000121ed
00011de7(9): TEST qword ptr [RSP + 0x20],0x10000
00011df0(2): JZ 0x00011dfb
00011df2(3): CMP R8D,EDX
00011df5(6): JC 0x000121b9
00011dfb(3): TEST R9,R9
00011dfe(2): JZ 0x00011e26
00011e00(4): MOV RAX,qword ptr [R9 + 0x40]
00011e04(5): CMP RAX,qword ptr [RSP + 0x48]
00011e09(4): MOV RCX,qword ptr [R9 + 0x8]
00011e0d(6): JZ 0x00012223
00011e13(3): MOV dword ptr [RCX + RAX*0x4],EDX
00011e16(4): MOV RCX,qword ptr [R9 + 0x10]
00011e1a(4): LEA RSI,[RAX + 0x1]
00011e1e(4): MOV qword ptr [R9 + 0x40],RSI
00011e22(4): MOV dword ptr [RCX + RAX*0x4],R8D
00011e26(2): XOR EAX,EAX
00011e28(5): MOV EDI,0x1
00011e2d(2): CMP EDX,EAX
00011e2f(2): MOV ECX,EAX
00011e31(2): JA 0x00011e49
00011e33(3): CMP R8D,EAX
00011e36(2): JC 0x00011e49
00011e38(3): MOV RSI,RAX
00011e3b(3): MOV R11,RDI
00011e3e(4): SAR RSI,0x6
00011e42(3): SHL R11,CL
00011e45(4): OR qword ptr [R12 + RSI*0x8],R11
00011e49(4): ADD RAX,0x1
00011e4d(6): CMP RAX,0x100
00011e53(2): JNZ 0x00011e2d
00011e55(5): MOV RAX,qword ptr [RSP + 0x40]
00011e5a(6): MOV dword ptr [RAX],0x0
00011e60(5): JMP 0x00011ae0
00011e65(5): MOV RBX,qword ptr [RSP + 0x18]
00011e6a(3): MOV RDX,RAX
00011e6d(3): MOV RSI,R14
00011e70(4): MOV qword ptr [RSP],R8
00011e74(3): MOV R15,RAX
00011e77(3): MOV RDI,RBX
00011e7a(5): CALL 0x000106e0
00011e7f(2): CDQE
00011e81(4): ADD qword ptr [R14 + 0x48],RAX
00011e85(5): MOV R9,qword ptr [RSP + 0x40]
00011e8a(4): MOV R8,qword ptr [RSP]
00011e8e(3): MOV RCX,R15
00011e91(3): MOV RDX,RBX
00011e94(3): MOV RSI,RBP
00011e97(3): MOV RDI,R14
00011e9a(5): CALL 0x00010ea0
00011e9f(5): MOV qword ptr [RSP + 0x28],RAX
00011ea4(5): JMP 0x00010fb0
00011ea9(5): MOV RAX,qword ptr [RSP + 0x40]
00011eae(6): MOV dword ptr [RAX],0x2
00011eb4(5): JMP 0x00011b18
00011eb9(3): MOV RDI,R12
00011ebc(5): CALL 0x000018d0
00011ec1(3): MOV RDI,R13
00011ec4(5): CALL 0x000018d0
00011ec9(5): JMP 0x00011a08
00011ece(5): MOV RAX,qword ptr [RSP + 0x40]
00011ed3(9): MOV qword ptr [RSP + 0x28],0x0
00011edc(6): MOV dword ptr [RAX],0x6
00011ee2(5): JMP 0x00010fb0
00011ee7(2): MOV EAX,EBX
00011ee9(2): NEG EAX
00011eeb(2): CDQE
00011eed(4): ADD qword ptr [R14 + 0x48],RAX
00011ef1(5): MOV byte ptr [R15 + 0x8],0x1
00011ef6(7): MOV EAX,dword ptr [0xa0 + RSP]
00011efd(5): JMP 0x000117f5
00011f02(4): ADD qword ptr [R14 + 0x48],RBX
00011f06(5): CMP byte ptr [RSP + 0x57],0x0
00011f0b(2): JZ 0x00011f21
00011f0d(5): LEA RDX,[R12 + 0x20]
00011f12(3): MOV RAX,R12
00011f15(3): NOT qword ptr [RAX]
00011f18(4): ADD RAX,0x8
00011f1c(3): CMP RDX,RAX
00011f1f(2): JNZ 0x00011f15
00011f21(5): MOV RAX,qword ptr [RSP + 0x10]
00011f26(6): MOV EDX,dword ptr [0xb4 + RAX]
00011f2c(3): CMP EDX,0x1
00011f2f(2): JLE 0x00011f49
00011f31(4): MOV RCX,qword ptr [RAX + 0x78]
00011f35(2): XOR EAX,EAX
00011f37(4): MOV RSI,qword ptr [RCX + RAX*0x1]
00011f3b(4): AND qword ptr [R12 + RAX*0x1],RSI
00011f3f(4): ADD RAX,0x8
00011f43(4): CMP RAX,0x20
00011f47(2): JNZ 0x00011f37
00011f49(5): CMP qword ptr [R13 + 0x28],0x0
00011f4e(6): JNZ 0x00011fd8
00011f54(5): CMP qword ptr [R13 + 0x30],0x0
00011f59(2): JNZ 0x00011fd8
00011f5b(5): CMP qword ptr [R13 + 0x38],0x0
00011f60(2): JNZ 0x00011fd8
00011f62(5): CMP qword ptr [R13 + 0x40],0x0
00011f67(2): JNZ 0x00011fd8
00011f69(3): SUB EDX,0x1
00011f6c(2): JLE 0x00011f7c
00011f6e(5): CMP qword ptr [R13 + 0x48],0x0
00011f73(2): JNZ 0x00011fd8
00011f75(5): TEST byte ptr [R13 + 0x20],0x1
00011f7a(2): JNZ 0x00011fd8
00011f7c(3): MOV RDI,R13
00011f7f(5): CALL 0x00007200
00011f84(5): MOV RAX,qword ptr [RSP + 0x10]
00011f89(8): LEA R8,[0xb0 + RSP]
00011f91(2): XOR ECX,ECX
00011f93(2): XOR EDX,EDX
00011f95(8): MOV byte ptr [0xb8 + RSP],0x3
00011f9d(8): MOV qword ptr [0xb0 + RSP],R12
00011fa5(7): LEA RSI,[0x80 + RAX]
00011fac(4): LEA RDI,[RAX + 0x70]
00011fb0(5): CALL 0x000087a0
00011fb5(3): TEST RAX,RAX
00011fb8(5): MOV qword ptr [RSP + 0x28],RAX
00011fbd(6): JNZ 0x0001103c
00011fc3(5): MOV RAX,qword ptr [RSP + 0x40]
00011fc8(6): MOV dword ptr [RAX],0xc
00011fce(5): JMP 0x00011b18
00011fd8(5): MOV RAX,qword ptr [RSP + 0x10]
00011fdd(8): LEA R15,[0xb0 + RSP]
00011fe5(2): XOR EDX,EDX
00011fe7(2): XOR ECX,ECX
00011fe9(3): MOV R8,R15
00011fec(7): OR byte ptr [0xb0 + RAX],0x2
00011ff3(4): LEA RBX,[RAX + 0x70]
00011ff7(7): LEA RBP,[0x80 + RAX]
00011ffe(8): MOV byte ptr [0xb8 + RSP],0x6
00012006(8): MOV qword ptr [0xb0 + RSP],R13
0001200e(3): MOV RDI,RBX
00012011(3): MOV RSI,RBP
00012014(5): CALL 0x000087a0
00012019(3): MOV RDI,RAX
0001201c(5): MOV qword ptr [RSP + 0x28],RAX
00012021(5): LEA RDX,[R12 + 0x20]
00012026(3): TEST RDI,RDI
00012029(3): MOV RAX,R12
0001202c(2): JZ 0x00011fc3
0001202e(4): CMP qword ptr [RAX],0x0
00012032(6): JNZ 0x000122dd
00012038(4): ADD RAX,0x8
0001203c(3): CMP RDX,RAX
0001203f(2): JNZ 0x0001202e
00012041(3): MOV RDI,R12
00012044(5): CALL 0x000018d0
00012049(5): JMP 0x0001103c
0001204e(5): MOV RDX,qword ptr [RSP + 0x30]
00012053(5): LEA RDI,[RDX + RDX*0x1 + 0x1]
00012058(8): LEA RSI,[RDI*0x4]
00012060(5): MOV qword ptr [RSP + 0x30],RDI
00012065(3): MOV RDI,RAX
00012068(5): CALL 0x00001b60
0001206d(3): TEST RAX,RAX
00012070(6): JZ 0x00011fc3
00012076(4): MOV qword ptr [R13],RAX
0001207a(4): MOV RDX,qword ptr [R13 + 0x28]
0001207e(5): JMP 0x00011b5a
00012083(3): XOR R8D,R8D
00012086(3): TEST R9,R9
00012089(2): JZ 0x00012104
0001208b(2): MOV EDI,EDX
0001208d(5): MOV dword ptr [RSP + 0x78],R8D
00012092(5): MOV qword ptr [RSP + 0x70],R9
00012097(5): CALL 0x00001b90
0001209c(2): MOV EDX,EAX
0001209e(7): MOV EAX,dword ptr [0xb0 + RSP]
000120a5(5): MOV R9,qword ptr [RSP + 0x70]
000120aa(5): MOV R8D,dword ptr [RSP + 0x78]
000120af(3): CMP EAX,0x3
000120b2(6): JZ 0x00011db7
000120b8(2): TEST EAX,EAX
000120ba(6): JZ 0x00011db7
000120c0(8): MOV R8D,dword ptr [0xb8 + RSP]
000120c8(5): JMP 0x00011dd4
000120cd(4): CMP R10D,0x3
000120d1(6): JZ 0x00012362
000120d7(2): TEST ESI,ESI
000120d9(2): JZ 0x00012083
000120db(3): TEST R11B,R11B
000120de(2): JNZ 0x00012083
000120e0(7): MOV EDX,dword ptr [0xa8 + RSP]
000120e7(2): JMP 0x000120c0
000120e9(2): XOR EDX,EDX
000120eb(3): CMP ESI,0x3
000120ee(6): JNZ 0x00011d88
000120f4(8): MOV RAX,qword ptr [0xa8 + RSP]
000120fc(3): MOVZX EDX,byte ptr [RAX]
000120ff(5): JMP 0x00011d88
00012104(3): TEST R10D,R10D
00012107(6): JZ 0x00011de7
0001210d(4): CMP R10D,0x3
00012111(2): JNZ 0x000120c0
00012113(5): JMP 0x00011de7
00012118(5): MOV EBX,0x80
0001211d(6): MOV R12D,0x2
00012123(5): CALL 0x00001c70
00012128(3): MOVSXD RDX,EBX
0001212b(3): MOVSXD R9,R12D
0001212e(6): MOV R8D,0x1
00012134(3): ADD RDX,RDX
00012137(3): ADD RDX,qword ptr [RAX]
0001213a(5): MOV RAX,qword ptr [RSP + 0x10]
0001213f(4): LEA RDI,[RAX + R9*0x8]
00012143(2): XOR EAX,EAX
00012145(2): JMP 0x00012162
00012150(3): LEA ESI,[RBX + RAX*0x1]
00012153(3): CMP ESI,0x5f
00012156(2): JZ 0x0001216a
00012158(4): ADD RAX,0x1
0001215c(4): CMP RAX,0x40
00012160(2): JZ 0x00012179
00012162(4): TEST byte ptr [RDX + RAX*0x2],0x8
00012166(2): MOV ECX,EAX
00012168(2): JZ 0x00012150
0001216a(3): MOV RSI,R8
0001216d(3): SHL RSI,CL
00012170(7): OR qword ptr [0xb8 + RDI],RSI
00012177(2): JMP 0x00012158
00012179(4): ADD R9,0x1
0001217d(3): ADD EBX,0x40
00012180(4): SUB RDX,-0x80
00012184(4): ADD RDI,0x8
00012188(4): CMP R9D,0x3
0001218c(2): JLE 0x00012143
0001218e(5): JMP 0x000115d1
00012193(2): XOR EBX,EBX
00012195(3): XOR R12D,R12D
00012198(2): JMP 0x00012123
0001219a(7): LEA RCX,[0x15e30]
000121a1(7): LEA RSI,[0x15850]
000121a8(7): LEA RDI,[0x1589f]
000121af(5): MOV EDX,0xced
000121b4(5): CALL 0x00001a50
000121b9(5): MOV RAX,qword ptr [RSP + 0x40]
000121be(6): MOV dword ptr [RAX],0xb
000121c4(5): JMP 0x00011b18
000121c9(8): MOV RDI,qword ptr [0xb8 + RSP]
000121d1(2): XOR EAX,EAX
000121d3(4): OR RCX,-0x1
000121d7(2): SCASB.REPNE RDI
000121d9(3): MOV RAX,RCX
000121dc(3): NOT RAX
000121df(4): SUB RAX,0x1
000121e3(4): CMP RAX,0x1
000121e7(6): JBE 0x00011d78
000121ed(5): MOV RAX,qword ptr [RSP + 0x40]
000121f2(6): MOV dword ptr [RAX],0x3
000121f8(5): JMP 0x00011b18
000121fd(8): MOV RDI,qword ptr [0xa8 + RSP]
00012205(2): XOR EAX,EAX
00012207(4): OR RCX,-0x1
0001220b(2): SCASB.REPNE RDI
0001220d(3): MOV RAX,RCX
00012210(3): NOT RAX
00012213(4): SUB RAX,0x1
00012217(4): CMP RAX,0x1
0001221b(6): JBE 0x00011d6e
00012221(2): JMP 0x000121ed
00012223(5): MOV RAX,qword ptr [RSP + 0x48]
00012228(3): MOV RDI,RCX
0001222b(8): MOV dword ptr [0x8c + RSP],R8D
00012233(7): MOV dword ptr [0x88 + RSP],EDX
0001223a(5): MOV qword ptr [RSP + 0x70],R9
0001223f(3): ADD RAX,RAX
00012242(4): ADD RAX,0x1
00012246(8): LEA R10,[RAX*0x4]
0001224e(5): MOV qword ptr [RSP + 0x48],RAX
00012253(3): MOV RSI,R10
00012256(8): MOV qword ptr [0x80 + RSP],R10
0001225e(5): CALL 0x00001b60
00012263(5): MOV R9,qword ptr [RSP + 0x70]
00012268(8): MOV R10,qword ptr [0x80 + RSP]
00012270(5): MOV qword ptr [RSP + 0x78],RAX
00012275(4): MOV RDI,qword ptr [R9 + 0x10]
00012279(3): MOV RSI,R10
0001227c(5): CALL 0x00001b60
00012281(5): MOV RCX,qword ptr [RSP + 0x78]
00012286(3): TEST RCX,RCX
00012289(2): JZ 0x000122b5
0001228b(3): TEST RAX,RAX
0001228e(5): MOV R9,qword ptr [RSP + 0x70]
00012293(7): MOV EDX,dword ptr [0x88 + RSP]
0001229a(8): MOV R8D,dword ptr [0x8c + RSP]
000122a2(2): JZ 0x000122b5
000122a4(4): MOV qword ptr [R9 + 0x10],RAX
000122a8(4): MOV qword ptr [R9 + 0x8],RCX
000122ac(4): MOV RAX,qword ptr [R9 + 0x40]
000122b0(5): JMP 0x00011e13
000122b5(3): MOV RDI,RCX
000122b8(4): MOV qword ptr [RSP],RAX
000122bc(5): CALL 0x000018d0
000122c1(4): MOV RAX,qword ptr [RSP]
000122c5(3): MOV RDI,RAX
000122c8(5): CALL 0x000018d0
000122cd(5): MOV RAX,qword ptr [RSP + 0x40]
000122d2(6): MOV dword ptr [RAX],0xc
000122d8(5): JMP 0x00011b18
000122dd(2): XOR ECX,ECX
000122df(2): XOR EDX,EDX
000122e1(3): MOV R8,R15
000122e4(3): MOV RSI,RBP
000122e7(3): MOV RDI,RBX
000122ea(8): MOV byte ptr [0xb8 + RSP],0x3
000122f2(8): MOV qword ptr [0xb0 + RSP],R12
000122fa(5): CALL 0x000087a0
000122ff(3): TEST RAX,RAX
00012302(6): JZ 0x00011fc3
00012308(5): MOV RCX,qword ptr [RSP + 0x28]
0001230d(8): LEA R8,[0xc0 + RSP]
00012315(3): MOV RDX,RAX
00012318(3): MOV RSI,RBP
0001231b(3): MOV RDI,RBX
0001231e(8): MOV byte ptr [0xc8 + RSP],0xa
00012326(5): CALL 0x000087a0
0001232b(3): TEST RAX,RAX
0001232e(5): MOV qword ptr [RSP + 0x28],RAX
00012333(6): JNZ 0x0001103c
00012339(5): JMP 0x00011fc3
0001233e(5): CALL 0x000019e0
00012343(5): MOV RAX,qword ptr [RSP + 0x18]
00012348(4): CMP byte ptr [RAX + 0x8],0x2
0001234c(6): JNZ 0x00011540
00012352(5): MOV RAX,qword ptr [RSP + 0x40]
00012357(6): MOV dword ptr [RAX],0x9
0001235d(5): JMP 0x0001154b
00012362(8): MOV RAX,qword ptr [0xb8 + RSP]
0001236a(4): MOVZX R8D,byte ptr [RAX]
0001236e(5): JMP 0x00011d9a
00012380(2): PUSH R15
00012382(2): PUSH R14
00012384(3): MOV R15,RCX
00012387(2): PUSH R13
00012389(2): PUSH R12
0001238b(3): MOV R13,RSI
0001238e(1): PUSH RBP
0001238f(1): PUSH RBX
00012390(3): MOV RBX,R9
00012393(3): MOV RBP,RDX
00012396(3): MOV R12,R8
00012399(4): SUB RSP,0x48
0001239d(9): MOV RAX,qword ptr FS:[0x28]
000123a6(5): MOV qword ptr [RSP + 0x38],RAX
000123ab(2): XOR EAX,EAX
000123ad(3): MOV RAX,qword ptr [RSI]
000123b0(4): MOV qword ptr [RSP],RDI
000123b4(5): MOV qword ptr [RSP + 0x10],RAX
000123b9(5): CALL 0x00010ea0
000123be(2): MOV EDX,dword ptr [RBX]
000123c0(3): MOV R14,RAX
000123c3(2): TEST EDX,EDX
000123c5(2): JZ 0x000123d0
000123c7(3): TEST RAX,RAX
000123ca(6): JZ 0x000124ca
000123d0(5): LEA RAX,[RSP + 0x20]
000123d5(5): MOV qword ptr [RSP + 0x18],RAX
000123da(6): NOP word ptr [RAX + RAX*0x1]
000123e0(4): MOVZX EAX,byte ptr [RBP + 0x8]
000123e4(2): MOV EDX,EAX
000123e6(3): AND EDX,0xfffffff7
000123e9(3): CMP DL,0x2
000123ec(6): JZ 0x00012480
000123f2(2): CMP AL,0x9
000123f4(2): JNZ 0x000123ff
000123f6(3): TEST R12,R12
000123f9(6): JNZ 0x00012480
000123ff(4): MOV RDI,qword ptr [RSP]
00012403(3): MOV R9,RBX
00012406(3): MOV R8,R12
00012409(3): MOV RCX,R15
0001240c(3): MOV RDX,RBP
0001240f(3): MOV RSI,R13
00012412(5): CALL 0x00010ea0
00012417(3): MOV R9,RAX
0001241a(2): MOV EAX,dword ptr [RBX]
0001241c(2): TEST EAX,EAX
0001241e(2): JZ 0x00012429
00012420(3): TEST R9,R9
00012423(6): JZ 0x000124b4
00012429(3): TEST R14,R14
0001242c(2): JZ 0x000124a8
0001242e(3): TEST R9,R9
00012431(2): JZ 0x000124a8
00012433(5): MOV RAX,qword ptr [RSP + 0x10]
00012438(5): MOV R8,qword ptr [RSP + 0x18]
0001243d(3): MOV RCX,R9
00012440(3): MOV RDX,R14
00012443(5): MOV qword ptr [RSP + 0x8],R9
00012448(5): MOV byte ptr [RSP + 0x28],0x10
0001244d(7): LEA RSI,[0x80 + RAX]
00012454(4): LEA RDI,[RAX + 0x70]
00012458(5): CALL 0x000087a0
0001245d(3): TEST RAX,RAX
00012460(5): MOV R9,qword ptr [RSP + 0x8]
00012465(2): JZ 0x000124d0
00012467(3): MOV R14,RAX
0001246a(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001246e(2): MOV EDX,EAX
00012470(3): AND EDX,0xfffffff7
00012473(3): CMP DL,0x2
00012476(6): JNZ 0x000123f2
0001247c(4): NOP dword ptr [RAX]
00012480(5): MOV RCX,qword ptr [RSP + 0x38]
00012485(9): XOR RCX,qword ptr FS:[0x28]
0001248e(3): MOV RAX,R14
00012491(2): JNZ 0x000124fd
00012493(4): ADD RSP,0x48
00012497(1): POP RBX
00012498(1): POP RBP
00012499(2): POP R12
0001249b(2): POP R13
0001249d(2): POP R14
0001249f(2): POP R15
000124a1(1): RET
000124a8(3): TEST R14,R14
000124ab(4): CMOVZ R14,R9
000124af(5): JMP 0x000123e0
000124b4(3): TEST R14,R14
000124b7(2): JZ 0x000124ca
000124b9(7): LEA RSI,[0x7260]
000124c0(2): XOR EDX,EDX
000124c2(3): MOV RDI,R14
000124c5(5): CALL 0x000063c0
000124ca(3): XOR R14D,R14D
000124cd(2): JMP 0x00012480
000124d0(7): LEA RSI,[0x7260]
000124d7(3): MOV RDI,R9
000124da(2): XOR EDX,EDX
000124dc(5): CALL 0x000063c0
000124e1(7): LEA RSI,[0x7260]
000124e8(3): MOV RDI,R14
000124eb(2): XOR EDX,EDX
000124ed(3): XOR R14D,R14D
000124f0(5): CALL 0x000063c0
000124f5(6): MOV dword ptr [RBX],0xc
000124fb(2): JMP 0x00012480
000124fd(5): CALL 0x000019e0
00012502(4): NOP dword ptr [RAX]
00012506(10): NOP word ptr CS:[RAX + RAX*0x1]
00012510(2): PUSH R15
00012512(2): PUSH R14
00012514(3): MOV R14,RCX
00012517(2): PUSH R13
00012519(2): PUSH R12
0001251b(3): MOV R13,R9
0001251e(1): PUSH RBP
0001251f(1): PUSH RBX
00012520(3): MOV RBP,RDX
00012523(3): MOV R12,RDI
00012526(4): SUB RSP,0x58
0001252a(3): MOV RBX,qword ptr [RSI]
0001252d(9): MOV RAX,qword ptr FS:[0x28]
00012536(5): MOV qword ptr [RSP + 0x48],RAX
0001253b(2): XOR EAX,EAX
0001253d(5): MOV qword ptr [RSP + 0x28],RSI
00012542(5): MOV qword ptr [RSP + 0x10],R8
00012547(7): MOV RAX,qword ptr [0xa8 + RBX]
0001254e(5): MOV qword ptr [RSP + 0x20],RAX
00012553(5): CALL 0x00012380
00012558(4): MOV EDX,dword ptr [R13]
0001255c(3): MOV R15,RAX
0001255f(2): TEST EDX,EDX
00012561(2): JZ 0x0001256c
00012563(3): TEST RAX,RAX
00012566(6): JZ 0x00012652
0001256c(5): LEA RAX,[RSP + 0x30]
00012571(5): MOV qword ptr [RSP + 0x8],RAX
00012576(5): JMP 0x00012604
00012580(2): CMP AL,0x9
00012582(2): JNZ 0x00012590
00012584(6): CMP qword ptr [RSP + 0x10],0x0
0001258a(6): JNZ 0x00012638
00012590(7): MOV RAX,qword ptr [0xa8 + RBX]
00012597(5): MOV R8,qword ptr [RSP + 0x10]
0001259c(3): MOV RCX,R14
0001259f(5): MOV RSI,qword ptr [RSP + 0x28]
000125a4(3): MOV R9,R13
000125a7(3): MOV RDX,RBP
000125aa(3): MOV RDI,R12
000125ad(5): MOV qword ptr [RSP + 0x18],RAX
000125b2(5): MOV RAX,qword ptr [RSP + 0x20]
000125b7(7): MOV qword ptr [0xa8 + RBX],RAX
000125be(5): CALL 0x00012380
000125c3(3): MOV RCX,RAX
000125c6(4): MOV EAX,dword ptr [R13]
000125ca(2): TEST EAX,EAX
000125cc(2): JZ 0x000125d3
000125ce(3): TEST RCX,RCX
000125d1(2): JZ 0x0001263c
000125d3(5): MOV RAX,qword ptr [RSP + 0x18]
000125d8(7): OR qword ptr [0xa8 + RBX],RAX
000125df(5): MOV R8,qword ptr [RSP + 0x8]
000125e4(7): LEA RSI,[0x80 + RBX]
000125eb(4): LEA RDI,[RBX + 0x70]
000125ef(3): MOV RDX,R15
000125f2(5): MOV byte ptr [RSP + 0x38],0xa
000125f7(5): CALL 0x000087a0
000125fc(3): TEST RAX,RAX
000125ff(3): MOV R15,RAX
00012602(2): JZ 0x00012680
00012604(4): CMP byte ptr [RBP + 0x8],0xa
00012608(2): JNZ 0x00012658
0001260a(3): MOV RDX,R14
0001260d(3): MOV RSI,R12
00012610(3): MOV RDI,RBP
00012613(7): OR RDX,0x800000
0001261a(5): CALL 0x000106e0
0001261f(2): CDQE
00012621(5): ADD qword ptr [R12 + 0x48],RAX
00012626(4): MOVZX EAX,byte ptr [RBP + 0x8]
0001262a(2): MOV EDX,EAX
0001262c(3): AND EDX,0xfffffff7
0001262f(3): CMP DL,0x2
00012632(6): JNZ 0x00012580
00012638(2): XOR ECX,ECX
0001263a(2): JMP 0x000125df
0001263c(3): TEST R15,R15
0001263f(2): JZ 0x00012652
00012641(7): LEA RSI,[0x7260]
00012648(2): XOR EDX,EDX
0001264a(3): MOV RDI,R15
0001264d(5): CALL 0x000063c0
00012652(3): XOR R15D,R15D
00012655(3): NOP dword ptr [RAX]
00012658(5): MOV RCX,qword ptr [RSP + 0x48]
0001265d(9): XOR RCX,qword ptr FS:[0x28]
00012666(3): MOV RAX,R15
00012669(2): JNZ 0x0001268a
0001266b(4): ADD RSP,0x58
0001266f(1): POP RBX
00012670(1): POP RBP
00012671(2): POP R12
00012673(2): POP R13
00012675(2): POP R14
00012677(2): POP R15
00012679(1): RET
00012680(8): MOV dword ptr [R13],0xc
00012688(2): JMP 0x00012658
0001268a(5): CALL 0x000019e0
0001268f(1): NOP
00012690(2): PUSH R15
00012692(2): PUSH R14
00012694(2): PUSH R13
00012696(2): PUSH R12
00012698(1): PUSH RBP
00012699(1): PUSH RBX
0001269a(7): SUB RSP,0x128
000126a1(4): MOV qword ptr [RDI + 0x18],RCX
000126a5(8): MOV qword ptr [RDI + 0x10],0x0
000126ad(9): MOV RAX,qword ptr FS:[0x28]
000126b6(8): MOV qword ptr [0x118 + RSP],RAX
000126be(2): XOR EAX,EAX
000126c0(4): MOVZX EAX,byte ptr [RDI + 0x38]
000126c4(5): MOV qword ptr [RSP + 0x8],RDI
000126c9(5): MOV qword ptr [RSP + 0x10],RSI
000126ce(4): MOV qword ptr [RSP],RDX
000126d2(5): MOV qword ptr [RSP + 0x18],RCX
000126d7(8): MOV dword ptr [RSP + 0x4c],0x0
000126df(8): MOV qword ptr [RDI + 0x30],0x0
000126e7(3): MOV RBX,qword ptr [RDI]
000126ea(4): MOV byte ptr [RSP + 0x20],AL
000126ee(3): AND EAX,0xffffff90
000126f1(8): CMP qword ptr [RDI + 0x8],0xe7
000126f9(3): MOV byte ptr [RDI + 0x38],AL
000126fc(6): JBE 0x000134f6
00012702(4): LEA RDI,[RBX + 0x8]
00012706(5): MOV RAX,qword ptr [RSP + 0x8]
0001270b(3): MOV RCX,RBX
0001270e(4): AND RDI,-0x8
00012712(3): SUB RCX,RDI
00012715(8): MOV qword ptr [RAX + 0x10],0xe8
0001271d(2): XOR EAX,EAX
0001271f(6): ADD ECX,0xe8
00012725(7): MOV qword ptr [RBX],0x0
0001272c(11): MOV qword ptr [0xe0 + RBX],0x0
00012737(3): SHR ECX,0x3
0001273a(3): STOSQ.REP RDI
0001273d(10): MOV RAX,0x555555555555554
00012747(10): MOV dword ptr [0x80 + RBX],0xf
00012751(4): CMP qword ptr [RSP],RAX
00012755(6): JA 0x00012d96
0001275b(4): MOV R14,qword ptr [RSP]
0001275f(4): LEA RAX,[R14 + 0x1]
00012763(3): MOV RDI,RAX
00012766(4): MOV qword ptr [RBX + 0x8],RAX
0001276a(5): MOV qword ptr [RSP + 0x28],RAX
0001276f(4): SHL RDI,0x4
00012773(5): CALL 0x00001b00
00012778(3): TEST R14,R14
0001277b(3): MOV qword ptr [RBX],RAX
0001277e(6): JZ 0x00013465
00012784(5): MOV ESI,0x1
00012789(7): NOP dword ptr [RAX]
00012790(3): ADD RSI,RSI
00012793(4): CMP qword ptr [RSP],RSI
00012797(2): JNC 0x00012790
00012799(4): LEA RBP,[RSI + -0x1]
0001279d(5): MOV EDI,0x18
000127a2(5): CALL 0x00001ab0
000127a7(7): MOV qword ptr [0x88 + RBX],RBP
000127ae(4): MOV qword ptr [RBX + 0x40],RAX
000127b2(5): CALL 0x000019c0
000127b7(5): MOV EDI,0xe
000127bc(6): MOV dword ptr [0xb4 + RBX],EAX
000127c2(5): CALL 0x00001b30
000127c7(3): MOVZX EDX,byte ptr [RAX]
000127ca(3): AND EDX,0xffffffdf
000127cd(3): CMP DL,0x55
000127d0(2): JNZ 0x00012820
000127d2(4): MOVZX EDX,byte ptr [RAX + 0x1]
000127d6(3): AND EDX,0xffffffdf
000127d9(3): CMP DL,0x54
000127dc(2): JNZ 0x00012820
000127de(4): MOVZX EDX,byte ptr [RAX + 0x2]
000127e2(3): AND EDX,0xffffffdf
000127e5(3): CMP DL,0x46
000127e8(2): JNZ 0x00012820
000127ea(2): XOR EDX,EDX
000127ec(4): CMP byte ptr [RAX + 0x3],0x2d
000127f0(7): LEA RDI,[0x158f6]
000127f7(5): MOV ECX,0x2
000127fc(3): SETZ DL
000127ff(5): LEA RSI,[RAX + RDX*0x1 + 0x3]
00012804(2): CMPSB.REPE RDI,RSI
00012806(3): SETA AL
00012809(2): SBB AL,0x0
0001280b(2): TEST AL,AL
0001280d(2): JNZ 0x00012820
0001280f(7): OR byte ptr [0xb0 + RBX],0x4
00012816(10): NOP word ptr CS:[RAX + RAX*0x1]
00012820(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00012827(2): MOV EDX,EAX
00012829(3): AND EDX,0xfffffff7
0001282c(7): CMP dword ptr [0xb4 + RBX],0x1
00012833(6): MOV byte ptr [0xb0 + RBX],DL
00012839(2): JLE 0x0001284e
0001283b(2): TEST AL,0x4
0001283d(6): JZ 0x00012da3
00012843(7): LEA RAX,[0x15e60]
0001284a(4): MOV qword ptr [RBX + 0x78],RAX
0001284e(4): CMP qword ptr [RBX],0x0
00012852(6): JZ 0x00012d96
00012858(5): CMP qword ptr [RBX + 0x40],0x0
0001285d(6): JZ 0x00012d96
00012863(5): MOV RAX,qword ptr [RSP + 0x18]
00012868(8): LEA RBP,[0x80 + RSP]
00012870(5): MOV ECX,0x12
00012875(8): MOV dword ptr [RSP + 0x4c],0x0
0001287d(4): LEA R8,[RBP + 0x8]
00012881(5): AND EAX,0x400000
00012886(5): MOV qword ptr [RSP + 0x20],RAX
0001288b(5): MOV RAX,qword ptr [RSP + 0x8]
00012890(3): SETNZ DL
00012893(3): MOV RDI,R8
00012896(4): MOV RSI,qword ptr [RAX + 0x28]
0001289a(2): XOR EAX,EAX
0001289c(3): STOSQ.REP RDI
0001289f(5): MOV RAX,qword ptr [RSP + 0x10]
000128a4(4): MOV RDI,qword ptr [RSP]
000128a8(3): TEST RSI,RSI
000128ab(7): MOV byte ptr [0x108 + RSP],DL
000128b2(6): MOV ECX,dword ptr [0xb4 + RBX]
000128b8(4): SETNZ R12B
000128bc(8): MOV qword ptr [0xf8 + RSP],RSI
000128c4(8): MOV qword ptr [0x80 + RSP],RAX
000128cc(7): MOVZX EAX,byte ptr [0xb0 + RBX]
000128d3(3): OR R12D,EDX
000128d6(8): MOV qword ptr [0xd8 + RSP],RDI
000128de(8): MOV qword ptr [0xd0 + RSP],RDI
000128e6(3): MOV ESI,R12D
000128e9(8): MOV byte ptr [0x10b + RSP],R12B
000128f1(7): MOV dword ptr [0x110 + RSP],ECX
000128f8(8): MOV qword ptr [0xe8 + RSP],RDI
00012900(8): MOV qword ptr [0xe0 + RSP],RDI
00012908(2): MOV EDX,EAX
0001290a(3): SHR AL,0x3
0001290d(3): SHR DL,0x2
00012910(3): AND EAX,0x1
00012913(3): AND EDX,0x1
00012916(3): TEST RDI,RDI
00012919(7): MOV byte ptr [0x10a + RSP],AL
00012920(7): MOV byte ptr [0x109 + RSP],DL
00012927(6): JNZ 0x00012d65
0001292d(3): TEST SIL,SIL
00012930(2): JZ 0x0001293f
00012932(8): MOV RAX,qword ptr [0x88 + RSP]
0001293a(5): MOV qword ptr [RSP + 0x10],RAX
0001293f(6): CMP qword ptr [RSP + 0x20],0x0
00012945(5): MOV RAX,qword ptr [RSP + 0x10]
0001294a(8): MOV qword ptr [0x88 + RSP],RAX
00012952(6): JZ 0x00012a55
00012958(3): CMP ECX,0x1
0001295b(6): JLE 0x0001354d
00012961(3): MOV RDI,RBP
00012964(5): CALL 0x00006a00
00012969(2): TEST EAX,EAX
0001296b(2): JNZ 0x000129b0
0001296d(4): MOV RAX,qword ptr [RSP]
00012971(8): CMP RAX,qword ptr [0xb8 + RSP]
00012979(6): JLE 0x00013530
0001297f(7): MOVSXD RAX,dword ptr [0xb4 + RBX]
00012986(8): MOV RSI,qword ptr [0xc0 + RSP]
0001298e(8): ADD RAX,qword ptr [0xb0 + RSP]
00012996(3): CMP RSI,RAX
00012999(6): JG 0x00013530
0001299f(3): ADD RSI,RSI
000129a2(3): MOV RDI,RBP
000129a5(5): CALL 0x00006490
000129aa(2): TEST EAX,EAX
000129ac(2): JZ 0x00012961
000129ae(2): NOP
000129b0(4): MOV dword ptr [RSP + 0x4c],EAX
000129b4(5): MOV RAX,qword ptr [RSP + 0x8]
000129b9(3): MOV R13,qword ptr [RAX]
000129bc(4): MOV RDI,qword ptr [R13 + 0x70]
000129c0(3): TEST RDI,RDI
000129c3(2): JZ 0x000129d8
000129c5(3): NOP dword ptr [RAX]
000129c8(3): MOV R12,qword ptr [RDI]
000129cb(5): CALL 0x000018d0
000129d0(3): TEST R12,R12
000129d3(3): MOV RDI,R12
000129d6(2): JNZ 0x000129c8
000129d8(4): MOV RDI,qword ptr [R13 + 0x20]
000129dc(8): MOV qword ptr [R13 + 0x70],0x0
000129e4(11): MOV dword ptr [0x80 + R13],0xf
000129ef(8): MOV qword ptr [R13 + 0x68],0x0
000129f7(5): CALL 0x000018d0
000129fc(8): MOV qword ptr [R13 + 0x20],0x0
00012a04(3): MOV RDI,RBP
00012a07(5): CALL 0x000077d0
00012a0c(3): MOV RDI,RBX
00012a0f(5): CALL 0x00007810
00012a14(5): MOV RAX,qword ptr [RSP + 0x8]
00012a19(7): MOV qword ptr [RAX],0x0
00012a20(8): MOV qword ptr [RAX + 0x8],0x0
00012a28(4): MOV EAX,dword ptr [RSP + 0x4c]
00012a2c(8): MOV RBX,qword ptr [0x118 + RSP]
00012a34(9): XOR RBX,qword ptr FS:[0x28]
00012a3d(6): JNZ 0x00013780
00012a43(7): ADD RSP,0x128
00012a4a(1): POP RBX
00012a4b(1): POP RBP
00012a4c(2): POP R12
00012a4e(2): POP R13
00012a50(2): POP R14
00012a52(2): POP R15
00012a54(1): RET
00012a55(3): CMP ECX,0x1
00012a58(6): JG 0x0001340a
00012a5e(3): TEST R12B,R12B
00012a61(8): MOV RSI,qword ptr [0xc0 + RSP]
00012a69(6): JZ 0x00013084
00012a6f(8): CMP qword ptr [0xd8 + RSP],RSI
00012a77(8): MOV RAX,qword ptr [0xb0 + RSP]
00012a7f(9): CMOVLE RSI,qword ptr [0xd8 + RSP]
00012a88(3): CMP RSI,RAX
00012a8b(2): JG 0x00012a9d
00012a8d(2): JMP 0x00012ad0
00012a90(8): MOV RDX,qword ptr [0x88 + RSP]
00012a98(5): MOV qword ptr [RSP + 0x10],RDX
00012a9d(8): MOV RDX,qword ptr [0x80 + RSP]
00012aa5(8): MOV RCX,qword ptr [0xf8 + RSP]
00012aad(3): ADD RDX,RAX
00012ab0(8): ADD RDX,qword ptr [0xa8 + RSP]
00012ab8(3): MOVZX EDX,byte ptr [RDX]
00012abb(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
00012abf(5): MOV RCX,qword ptr [RSP + 0x10]
00012ac4(3): MOV byte ptr [RCX + RAX*0x1],DL
00012ac7(4): ADD RAX,0x1
00012acb(3): CMP RSI,RAX
00012ace(2): JNZ 0x00012a90
00012ad0(8): MOV qword ptr [0xb0 + RSP],RAX
00012ad8(8): MOV qword ptr [0xb8 + RSP],RAX
00012ae0(8): MOV dword ptr [RSP + 0x4c],0x0
00012ae8(5): MOV R12,qword ptr [RSP + 0x8]
00012aed(5): MOV R14,qword ptr [RSP + 0x18]
00012af2(5): LEA R13,[RSP + 0x50]
00012af7(3): MOV RSI,RBP
00012afa(3): MOV RDI,R13
00012afd(5): MOV qword ptr [RSP + 0x28],R13
00012b02(4): MOV R15,qword ptr [R12]
00012b06(3): MOV RDX,R14
00012b09(9): MOV qword ptr [R12 + 0x30],0x0
00012b12(7): OR RDX,0x800000
00012b19(7): MOV qword ptr [0xd8 + R15],R14
00012b20(5): CALL 0x000106e0
00012b25(5): LEA R9,[RSP + 0x4c]
00012b2a(3): XOR R8D,R8D
00012b2d(3): MOV RCX,R14
00012b30(3): MOV RDX,R13
00012b33(3): MOV RSI,R12
00012b36(3): MOV RDI,RBP
00012b39(2): CDQE
00012b3b(8): ADD qword ptr [0xc8 + RSP],RAX
00012b43(5): CALL 0x00012510
00012b48(4): MOV ECX,dword ptr [RSP + 0x4c]
00012b4c(2): TEST ECX,ECX
00012b4e(6): JNZ 0x00013577
00012b54(4): LEA R13,[R15 + 0x70]
00012b58(5): LEA R12,[RSP + 0x60]
00012b5d(4): SUB R15,-0x80
00012b61(2): XOR EDX,EDX
00012b63(2): XOR ECX,ECX
00012b65(3): MOV RSI,R15
00012b68(3): MOV R8,R12
00012b6b(3): MOV RDI,R13
00012b6e(4): MOV qword ptr [RSP],RAX
00012b72(5): MOV byte ptr [RSP + 0x68],0x2
00012b77(5): CALL 0x000087a0
00012b7c(4): MOV R9,qword ptr [RSP]
00012b80(3): MOV R11,RAX
00012b83(3): MOV RDX,RAX
00012b86(3): TEST R9,R9
00012b89(2): JZ 0x00012bb2
00012b8b(3): MOV RCX,R11
00012b8e(3): MOV RDX,R9
00012b91(3): MOV R8,R12
00012b94(3): MOV RSI,R15
00012b97(3): MOV RDI,R13
00012b9a(4): MOV qword ptr [RSP],R11
00012b9e(5): MOV byte ptr [RSP + 0x68],0x10
00012ba3(5): CALL 0x000087a0
00012ba8(4): MOV R11,qword ptr [RSP]
00012bac(3): MOV RDX,R11
00012baf(3): MOV R11,RAX
00012bb2(3): TEST RDX,RDX
00012bb5(5): MOV RCX,qword ptr [RSP + 0x8]
00012bba(3): SETZ DL
00012bbd(3): TEST R11,R11
00012bc0(3): SETZ AL
00012bc3(2): OR DL,AL
00012bc5(3): MOV R13,qword ptr [RCX]
00012bc8(6): JNZ 0x00013562
00012bce(4): MOV R15,qword ptr [R13 + 0x8]
00012bd2(4): MOV qword ptr [RBX + 0x68],R11
00012bd6(8): LEA RCX,[R15*0x8]
00012bde(4): LEA R15,[R15 + R15*0x2]
00012be2(3): MOV RDI,RCX
00012be5(4): MOV qword ptr [RSP],RCX
00012be9(4): SHL R15,0x3
00012bed(5): CALL 0x00001b00
00012bf2(4): MOV RCX,qword ptr [RSP]
00012bf6(4): MOV qword ptr [R13 + 0x18],RAX
00012bfa(5): MOV qword ptr [RSP + 0x18],RAX
00012bff(3): MOV RDI,RCX
00012c02(5): CALL 0x00001b00
00012c07(3): MOV RDI,R15
00012c0a(4): MOV qword ptr [R13 + 0x20],RAX
00012c0e(5): MOV qword ptr [RSP + 0x10],RAX
00012c13(5): CALL 0x00001b00
00012c18(3): MOV RDI,R15
00012c1b(4): MOV qword ptr [R13 + 0x28],RAX
00012c1f(4): MOV qword ptr [RSP],RAX
00012c23(5): CALL 0x00001b00
00012c28(5): MOV RDX,qword ptr [RSP + 0x18]
00012c2d(4): MOV qword ptr [R13 + 0x30],RAX
00012c31(4): MOV RSI,qword ptr [RSP]
00012c35(5): MOV RCX,qword ptr [RSP + 0x10]
00012c3a(3): TEST RDX,RDX
00012c3d(6): JZ 0x000133fd
00012c43(3): TEST RCX,RCX
00012c46(6): JZ 0x000133fd
00012c4c(3): TEST RSI,RSI
00012c4f(6): JZ 0x000133fd
00012c55(3): TEST RAX,RAX
00012c58(6): JZ 0x000133fd
00012c5e(5): MOV RAX,qword ptr [RSP + 0x8]
00012c63(4): MOV R15,qword ptr [RAX + 0x30]
00012c67(8): LEA RDI,[R15*0x8]
00012c6f(5): CALL 0x00001b00
00012c74(3): TEST RAX,RAX
00012c77(7): MOV qword ptr [0xe0 + R13],RAX
00012c7e(2): JZ 0x00012ced
00012c80(3): TEST R15,R15
00012c83(2): JZ 0x00012c9d
00012c85(2): XOR EDX,EDX
00012c87(9): NOP word ptr [RAX + RAX*0x1]
00012c90(4): MOV qword ptr [RAX + RDX*0x8],RDX
00012c94(4): ADD RDX,0x1
00012c98(3): CMP RDX,R15
00012c9b(2): JNZ 0x00012c90
00012c9d(4): MOV RDI,qword ptr [R13 + 0x68]
00012ca1(7): LEA RSI,[0x7ca0]
00012ca8(3): MOV RDX,R13
00012cab(5): CALL 0x00006430
00012cb0(5): MOV RAX,qword ptr [RSP + 0x8]
00012cb5(7): MOV RDI,qword ptr [0xe0 + R13]
00012cbc(4): MOV RDX,qword ptr [RAX + 0x30]
00012cc0(3): TEST RDX,RDX
00012cc3(6): JZ 0x000135b4
00012cc9(3): MOV RAX,qword ptr [RDI]
00012ccc(3): TEST RAX,RAX
00012ccf(2): JZ 0x00012cde
00012cd1(2): JMP 0x00012ced
00012cd8(4): CMP qword ptr [RDI + RAX*0x8],RAX
00012cdc(2): JNZ 0x00012ced
00012cde(4): ADD RAX,0x1
00012ce2(3): CMP RDX,RAX
00012ce5(2): JA 0x00012cd8
00012ce7(6): JZ 0x000135b4
00012ced(4): MOV RDI,qword ptr [R13 + 0x68]
00012cf1(5): MOV RDX,qword ptr [RSP + 0x8]
00012cf6(7): LEA RSI,[0x8ba0]
00012cfd(5): CALL 0x000063c0
00012d02(2): TEST EAX,EAX
00012d04(6): JNZ 0x000129b0
00012d0a(4): MOV RDI,qword ptr [R13 + 0x68]
00012d0e(7): LEA RSI,[0xb110]
00012d15(3): MOV RDX,R13
00012d18(5): CALL 0x000063c0
00012d1d(2): TEST EAX,EAX
00012d1f(6): JNZ 0x000129b0
00012d25(4): MOV RDI,qword ptr [R13 + 0x68]
00012d29(7): LEA RSI,[0x7d30]
00012d30(3): MOV RDX,R13
00012d33(5): CALL 0x00006430
00012d38(4): MOV RDX,qword ptr [R13 + 0x68]
00012d3c(7): LEA RSI,[0x15d68]
00012d43(5): NOP dword ptr [RAX + RAX*0x1]
00012d48(4): MOVZX ECX,byte ptr [RDX + 0x30]
00012d4c(4): MOV RDI,qword ptr [RDX + 0x38]
00012d50(3): CMP CL,0x10
00012d53(6): JA 0x00012e28
00012d59(3): MOVZX EAX,CL
00012d5c(4): MOVSXD RAX,dword ptr [RSI + RAX*0x4]
00012d60(3): ADD RAX,RSI
00012d63(2): JMP RAX
00012d65(5): MOV RSI,qword ptr [RSP + 0x28]
00012d6a(3): MOV RDI,RBP
00012d6d(5): CALL 0x00006490
00012d72(2): TEST EAX,EAX
00012d74(6): JNZ 0x000129b0
00012d7a(8): MOVZX ESI,byte ptr [0x10b + RSP]
00012d82(6): MOV ECX,dword ptr [0xb4 + RBX]
00012d88(3): TEST SIL,SIL
00012d8b(6): JZ 0x0001293f
00012d91(5): JMP 0x00012932
00012d96(8): MOV dword ptr [RSP + 0x4c],0xc
00012d9e(5): JMP 0x00012a0c
00012da3(5): MOV ESI,0x1
00012da8(5): MOV EDI,0x20
00012dad(5): CALL 0x00001ab0
00012db2(3): TEST RAX,RAX
00012db5(4): MOV qword ptr [RBX + 0x78],RAX
00012db9(2): JZ 0x00012d96
00012dbb(3): XOR R12D,R12D
00012dbe(2): XOR EBP,EBP
00012dc0(6): MOV R13D,0x1
00012dc6(3): XOR R15D,R15D
00012dc9(7): NOP dword ptr [RAX]
00012dd0(5): LEA R14D,[RBP + R15*0x1]
00012dd5(3): MOV EDI,R14D
00012dd8(5): CALL 0x00001b90
00012ddd(3): CMP EAX,-0x1
00012de0(2): JZ 0x00012df5
00012de2(4): MOV RSI,qword ptr [RBX + 0x78]
00012de6(3): MOV RDI,R13
00012de9(3): MOV ECX,R15D
00012dec(3): SHL RDI,CL
00012def(3): ADD RSI,R12
00012df2(3): OR qword ptr [RSI],RDI
00012df5(7): TEST R14D,0xffffff80
00012dfc(2): JNZ 0x00012e0a
00012dfe(3): CMP EAX,R14D
00012e01(2): JZ 0x00012e0a
00012e03(7): OR byte ptr [0xb0 + RBX],0x8
00012e0a(4): ADD R15,0x1
00012e0e(4): CMP R15,0x40
00012e12(2): JNZ 0x00012dd0
00012e14(3): ADD EBP,0x40
00012e17(4): ADD R12,0x8
00012e1b(6): CMP EBP,0x100
00012e21(2): JNZ 0x00012dc6
00012e23(5): JMP 0x0001284e
00012e28(3): AND ECX,0x8
00012e2b(6): JNZ 0x00013742
00012e31(4): MOV RAX,qword ptr [RDX + 0x20]
00012e35(4): MOV RCX,qword ptr [RAX + 0x38]
00012e39(4): MOV RAX,qword ptr [R13 + 0x18]
00012e3d(4): MOV qword ptr [RAX + RDI*0x8],RCX
00012e41(4): MOV R15,qword ptr [RDX + 0x8]
00012e45(2): XOR EDI,EDI
00012e47(3): TEST R15,R15
00012e4a(2): JZ 0x00012e5b
00012e4c(3): MOV RDX,R15
00012e4f(5): JMP 0x00012d48
00012e58(3): MOV RDX,RAX
00012e5b(4): MOV R15,qword ptr [RDX + 0x10]
00012e5f(3): TEST R15,R15
00012e62(3): SETZ CL
00012e65(3): CMP R15,RDI
00012e68(3): SETZ AL
00012e6b(2): OR CL,AL
00012e6d(4): MOV byte ptr [RSP + 0x10],CL
00012e71(2): JZ 0x00012e4c
00012e73(3): MOV RAX,qword ptr [RDX]
00012e76(3): MOV RDI,RDX
00012e79(3): TEST RAX,RAX
00012e7c(2): JNZ 0x00012e58
00012e7e(3): XOR R14D,R14D
00012e81(3): XOR R15D,R15D
00012e84(4): NOP dword ptr [RAX]
00012e88(4): MOV RDX,qword ptr [R13 + 0x10]
00012e8c(3): CMP RDX,R15
00012e8f(2): JZ 0x00012eb6
00012e91(4): LEA R10,[R15 + R15*0x2]
00012e95(4): MOV RAX,qword ptr [R13 + 0x30]
00012e99(4): SHL R10,0x3
00012e9d(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
00012ea3(6): JZ 0x000130a8
00012ea9(4): MOV RDX,qword ptr [R13 + 0x10]
00012ead(4): ADD R15,0x1
00012eb1(3): CMP RDX,R15
00012eb4(2): JNZ 0x00012e91
00012eb6(3): TEST R14B,R14B
00012eb9(6): JZ 0x000130fe
00012ebf(3): XOR R14D,R14D
00012ec2(3): XOR R15D,R15D
00012ec5(2): JMP 0x00012e91
00012ec7(8): OR byte ptr [0xb0 + R13],0x1
00012ecf(4): MOV R15,qword ptr [RDX + 0x8]
00012ed3(3): TEST R15,R15
00012ed6(6): JZ 0x000134e9
00012edc(4): MOV RAX,qword ptr [R15 + 0x18]
00012ee0(4): MOV RCX,qword ptr [RAX + 0x38]
00012ee4(4): MOV RAX,qword ptr [RDX + 0x10]
00012ee8(3): TEST RAX,RAX
00012eeb(6): JZ 0x000134dc
00012ef1(4): MOV RAX,qword ptr [RAX + 0x18]
00012ef5(4): MOV R9,qword ptr [RAX + 0x38]
00012ef9(3): TEST RCX,RCX
00012efc(6): JS 0x00013761
00012f02(3): TEST R9,R9
00012f05(6): JS 0x00013723
00012f0b(4): MOV RAX,qword ptr [R13 + 0x28]
00012f0f(4): LEA RDI,[RDI + RDI*0x2]
00012f13(5): MOV qword ptr [RSP + 0x38],RSI
00012f18(5): MOV qword ptr [RSP + 0x30],R9
00012f1d(5): MOV qword ptr [RSP + 0x18],RCX
00012f22(5): MOV qword ptr [RSP + 0x10],RDX
00012f27(4): LEA R10,[RAX + RDI*0x8]
00012f2b(5): MOV EDI,0x10
00012f30(7): MOV qword ptr [R10],0x2
00012f37(4): MOV qword ptr [RSP],R10
00012f3b(5): CALL 0x00001b00
00012f40(4): MOV R10,qword ptr [RSP]
00012f44(3): TEST RAX,RAX
00012f47(5): MOV RDX,qword ptr [RSP + 0x10]
00012f4c(5): MOV RCX,qword ptr [RSP + 0x18]
00012f51(5): MOV R9,qword ptr [RSP + 0x30]
00012f56(5): MOV RSI,qword ptr [RSP + 0x38]
00012f5b(4): MOV qword ptr [R10 + 0x10],RAX
00012f5f(6): JZ 0x000131fa
00012f65(3): CMP RCX,R9
00012f68(6): JZ 0x0001353d
00012f6e(8): MOV qword ptr [R10 + 0x8],0x2
00012f76(6): JL 0x00013524
00012f7c(3): MOV qword ptr [RAX],R9
00012f7f(4): MOV qword ptr [RAX + 0x8],RCX
00012f83(5): JMP 0x00012e45
00012f88(4): MOV RAX,qword ptr [RDX + 0x20]
00012f8c(4): LEA RCX,[RDI + RDI*0x2]
00012f90(5): MOV EDI,0x8
00012f95(5): MOV qword ptr [RSP + 0x10],RSI
00012f9a(4): MOV qword ptr [RSP],RDX
00012f9e(4): MOV R14,qword ptr [RAX + 0x38]
00012fa2(4): MOV RAX,qword ptr [R13 + 0x28]
00012fa6(4): LEA R15,[RAX + RCX*0x8]
00012faa(7): MOV qword ptr [R15],0x1
00012fb1(8): MOV qword ptr [R15 + 0x8],0x1
00012fb9(5): CALL 0x00001b00
00012fbe(3): TEST RAX,RAX
00012fc1(4): MOV qword ptr [R15 + 0x10],RAX
00012fc5(4): MOV RDX,qword ptr [RSP]
00012fc9(5): MOV RSI,qword ptr [RSP + 0x10]
00012fce(6): JZ 0x00013678
00012fd4(3): MOV qword ptr [RAX],R14
00012fd7(4): MOV R15,qword ptr [RDX + 0x8]
00012fdb(5): JMP 0x00012e45
00012fe0(5): CMP qword ptr [RDX + 0x20],0x0
00012fe5(6): JZ 0x00012e41
00012feb(7): LEA RCX,[0x15e20]
00012ff2(7): LEA RSI,[0x15850]
00012ff9(7): LEA RDI,[0x158f8]
00013000(5): MOV EDX,0x59f
00013005(5): CALL 0x00001a50
00013010(4): MOV RAX,qword ptr [RDX + 0x20]
00013014(4): MOV R15,qword ptr [RAX + 0x38]
00013018(4): MOV RAX,qword ptr [R13 + 0x18]
0001301c(4): MOV qword ptr [RAX + RDI*0x8],R15
00013020(4): CMP byte ptr [RDX + 0x30],0x4
00013024(6): JNZ 0x00012e41
0001302a(4): MOV RAX,qword ptr [R13 + 0x28]
0001302e(4): LEA RCX,[RDI + RDI*0x2]
00013032(5): MOV EDI,0x8
00013037(5): MOV qword ptr [RSP + 0x18],RSI
0001303c(5): MOV qword ptr [RSP + 0x10],RDX
00013041(4): LEA RCX,[RAX + RCX*0x8]
00013045(7): MOV qword ptr [RCX],0x1
0001304c(8): MOV qword ptr [RCX + 0x8],0x1
00013054(4): MOV qword ptr [RSP],RCX
00013058(5): CALL 0x00001b00
0001305d(4): MOV RCX,qword ptr [RSP]
00013061(3): TEST RAX,RAX
00013064(5): MOV RDX,qword ptr [RSP + 0x10]
00013069(5): MOV RSI,qword ptr [RSP + 0x18]
0001306e(4): MOV qword ptr [RCX + 0x10],RAX
00013072(6): JZ 0x000136c0
00013078(3): MOV qword ptr [RAX],R15
0001307b(4): MOV R15,qword ptr [RDX + 0x8]
0001307f(5): JMP 0x00012e45
00013084(8): MOV qword ptr [0xb0 + RSP],RSI
0001308c(8): MOV qword ptr [0xb8 + RSP],RSI
00013094(8): MOV dword ptr [RSP + 0x4c],0x0
0001309c(5): JMP 0x00012ae8
000130a8(5): MOV ECX,0x1
000130ad(3): MOV RDX,R15
000130b0(3): MOV RSI,R13
000130b3(3): MOV RDI,R12
000130b6(4): MOV qword ptr [RSP],R10
000130ba(5): CALL 0x000081e0
000130bf(2): TEST EAX,EAX
000130c1(6): JNZ 0x000129b0
000130c7(4): MOV RAX,qword ptr [R13 + 0x30]
000130cb(4): MOV R10,qword ptr [RSP]
000130cf(4): ADD R15,0x1
000130d3(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
000130d9(6): JNZ 0x00012e88
000130df(5): MOV RDI,qword ptr [RSP + 0x70]
000130e4(5): CALL 0x000018d0
000130e9(4): CMP qword ptr [R13 + 0x10],R15
000130ed(6): JZ 0x00012ebf
000130f3(6): MOVZX R14D,byte ptr [RSP + 0x10]
000130f9(5): JMP 0x00012e91
000130fe(5): MOV RAX,qword ptr [RSP + 0x8]
00013103(4): TEST byte ptr [RAX + 0x38],0x10
00013107(2): JNZ 0x0001311a
00013109(5): CMP qword ptr [RAX + 0x30],0x0
0001310e(2): JZ 0x0001311a
00013110(8): TEST byte ptr [0xb0 + R13],0x1
00013118(2): JNZ 0x00013128
0001311a(8): CMP qword ptr [0x98 + R13],0x0
00013122(6): JZ 0x0001321b
00013128(4): LEA RDI,[RDX + RDX*0x2]
0001312c(4): MOV qword ptr [RSP],RDX
00013130(4): SHL RDI,0x3
00013134(5): CALL 0x00001b00
00013139(3): TEST RAX,RAX
0001313c(4): MOV qword ptr [R13 + 0x38],RAX
00013140(6): JZ 0x0001368c
00013146(4): MOV RDX,qword ptr [RSP]
0001314a(2): XOR ESI,ESI
0001314c(2): XOR ECX,ECX
0001314e(3): TEST RDX,RDX
00013151(2): JNZ 0x00013164
00013153(5): JMP 0x0001321b
00013160(4): MOV RAX,qword ptr [R13 + 0x38]
00013164(4): PXOR XMM0,XMM0
00013168(3): ADD RAX,RSI
0001316b(4): ADD RCX,0x1
0001316f(8): MOV qword ptr [RAX + 0x10],0x0
00013177(4): ADD RSI,0x18
0001317b(3): MOVUPS xmmword ptr [RAX],XMM0
0001317e(4): MOV RAX,qword ptr [R13 + 0x10]
00013182(3): CMP RCX,RAX
00013185(2): JC 0x00013160
00013187(3): TEST RAX,RAX
0001318a(6): JZ 0x0001321b
00013190(4): MOV RAX,qword ptr [R13 + 0x30]
00013194(9): MOV qword ptr [RSP + 0x18],0x0
0001319d(9): MOV qword ptr [RSP + 0x10],0x0
000131a6(5): MOV RCX,qword ptr [RSP + 0x18]
000131ab(4): LEA RDX,[RAX + RCX*0x1]
000131af(5): CMP qword ptr [RDX + 0x8],0x0
000131b4(4): MOV RCX,qword ptr [RDX + 0x10]
000131b8(2): JLE 0x00013204
000131ba(3): XOR R15D,R15D
000131bd(2): JMP 0x000131d8
000131c0(4): MOV RAX,qword ptr [R13 + 0x30]
000131c4(5): MOV RDX,qword ptr [RSP + 0x18]
000131c9(4): ADD R15,0x1
000131cd(4): MOV RCX,qword ptr [RSP]
000131d1(5): CMP R15,qword ptr [RAX + RDX*0x1 + 0x8]
000131d6(2): JGE 0x00013204
000131d8(4): MOV RAX,qword ptr [RCX + R15*0x8]
000131dc(4): MOV qword ptr [RSP],RCX
000131e0(4): LEA RSI,[RAX + RAX*0x2]
000131e4(4): MOV RAX,qword ptr [R13 + 0x38]
000131e8(4): LEA RDI,[RAX + RSI*0x8]
000131ec(5): MOV RSI,qword ptr [RSP + 0x10]
000131f1(5): CALL 0x00006530
000131f6(2): TEST AL,AL
000131f8(2): JNZ 0x000131c0
000131fa(5): MOV EAX,0xc
000131ff(5): JMP 0x000129b0
00013204(6): ADD qword ptr [RSP + 0x10],0x1
0001320a(6): ADD qword ptr [RSP + 0x18],0x18
00013210(5): MOV RDX,qword ptr [RSP + 0x10]
00013215(4): CMP RDX,qword ptr [R13 + 0x10]
00013219(2): JC 0x000131a6
0001321b(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00013222(8): MOV dword ptr [RSP + 0x4c],0x0
0001322a(3): SHR AL,0x2
0001322d(6): CMP qword ptr [RSP + 0x20],0x0
00013233(3): SETZ DL
00013236(2): AND AL,DL
00013238(6): JNZ 0x0001341f
0001323e(4): MOV RAX,qword ptr [RBX + 0x68]
00013242(3): MOV RDI,R12
00013245(4): MOV RAX,qword ptr [RAX + 0x18]
00013249(4): MOV RAX,qword ptr [RAX + 0x38]
0001324d(4): LEA RDX,[RAX + RAX*0x2]
00013251(7): MOV qword ptr [0x90 + RBX],RAX
00013258(4): MOV RAX,qword ptr [RBX + 0x30]
0001325c(4): LEA RSI,[RAX + RDX*0x8]
00013260(5): CALL 0x00008c40
00013265(2): TEST EAX,EAX
00013267(3): MOV R15D,EAX
0001326a(4): MOV dword ptr [RSP + 0x50],EAX
0001326e(6): JNZ 0x0001338f
00013274(8): CMP qword ptr [0x98 + RBX],0x0
0001327c(6): JLE 0x00013350
00013282(5): MOV R9,qword ptr [RSP + 0x68]
00013287(3): TEST R9,R9
0001328a(6): JLE 0x00013350
00013290(3): XOR R10D,R10D
00013293(5): LEA R13,[R12 + 0x10]
00013298(2): JMP 0x000132ad
000132a0(4): ADD R10,0x1
000132a4(3): CMP R9,R10
000132a7(6): JLE 0x00013350
000132ad(5): MOV RCX,qword ptr [RSP + 0x70]
000132b2(3): MOV RSI,qword ptr [RBX]
000132b5(4): MOV R8,qword ptr [RCX + R10*0x8]
000132b9(3): MOV RDI,R8
000132bc(4): SHL RDI,0x4
000132c0(3): ADD RDI,RSI
000132c3(4): CMP byte ptr [RDI + 0x8],0x4
000132c7(2): JNZ 0x000132a0
000132c9(2): XOR EDX,EDX
000132cb(2): JMP 0x000132d9
000132d0(4): ADD RDX,0x1
000132d4(3): CMP R9,RDX
000132d7(2): JZ 0x000132a0
000132d9(4): MOV RAX,qword ptr [RCX + RDX*0x8]
000132dd(4): SHL RAX,0x4
000132e1(3): ADD RAX,RSI
000132e4(4): CMP byte ptr [RAX + 0x8],0x9
000132e8(2): JNZ 0x000132d0
000132ea(3): MOV R11,qword ptr [RDI]
000132ed(3): CMP qword ptr [RAX],R11
000132f0(2): JNZ 0x000132d0
000132f2(4): MOV RDX,qword ptr [RBX + 0x28]
000132f6(4): LEA RAX,[R8 + R8*0x2]
000132fa(3): MOV RSI,R13
000132fd(3): MOV RDI,R9
00013300(4): LEA RAX,[RDX + RAX*0x8]
00013304(4): MOV RAX,qword ptr [RAX + 0x10]
00013308(3): MOV R11,qword ptr [RAX]
0001330b(3): MOV RDX,R11
0001330e(5): CALL 0x00007ae0
00013313(3): TEST RAX,RAX
00013316(2): JNZ 0x000132a0
00013318(4): MOV RAX,qword ptr [RBX + 0x30]
0001331c(4): LEA RDX,[R11 + R11*0x2]
00013320(3): MOV RDI,R12
00013323(4): LEA RSI,[RAX + RDX*0x8]
00013327(5): CALL 0x00008000
0001332c(2): TEST EAX,EAX
0001332e(6): JNZ 0x00013670
00013334(5): MOV R9,qword ptr [RSP + 0x68]
00013339(6): MOV R10D,0x1
0001333f(3): CMP R9,R10
00013342(6): JG 0x000132ad
00013348(8): NOP dword ptr [RAX + RAX*0x1]
00013350(5): MOV RDI,qword ptr [RSP + 0x28]
00013355(2): XOR ECX,ECX
00013357(3): MOV RDX,R12
0001335a(3): MOV RSI,RBX
0001335d(5): CALL 0x00008e30
00013362(3): TEST RAX,RAX
00013365(4): MOV qword ptr [RBX + 0x48],RAX
00013369(6): JZ 0x000134d2
0001336f(4): CMP byte ptr [RAX + 0x68],0x0
00013373(6): JS 0x00013471
00013379(4): MOV qword ptr [RBX + 0x60],RAX
0001337d(4): MOV qword ptr [RBX + 0x58],RAX
00013381(4): MOV qword ptr [RBX + 0x50],RAX
00013385(5): MOV RDI,qword ptr [RSP + 0x70]
0001338a(5): CALL 0x000018d0
0001338f(5): MOV RAX,qword ptr [RSP + 0x8]
00013394(5): MOV dword ptr [RSP + 0x4c],R15D
00013399(3): MOV R13,qword ptr [RAX]
0001339c(4): MOV RDI,qword ptr [R13 + 0x70]
000133a0(3): TEST RDI,RDI
000133a3(2): JZ 0x000133b8
000133a5(3): NOP dword ptr [RAX]
000133a8(3): MOV R12,qword ptr [RDI]
000133ab(5): CALL 0x000018d0
000133b0(3): TEST R12,R12
000133b3(3): MOV RDI,R12
000133b6(2): JNZ 0x000133a8
000133b8(4): MOV RDI,qword ptr [R13 + 0x20]
000133bc(8): MOV qword ptr [R13 + 0x70],0x0
000133c4(11): MOV dword ptr [0x80 + R13],0xf
000133cf(8): MOV qword ptr [R13 + 0x68],0x0
000133d7(5): CALL 0x000018d0
000133dc(8): MOV qword ptr [R13 + 0x20],0x0
000133e4(3): MOV RDI,RBP
000133e7(5): CALL 0x000077d0
000133ec(4): MOV EAX,dword ptr [RSP + 0x4c]
000133f0(2): TEST EAX,EAX
000133f2(6): JZ 0x00012a2c
000133f8(5): JMP 0x00012a0c
000133fd(8): MOV dword ptr [RSP + 0x4c],0xc
00013405(5): JMP 0x000129bc
0001340a(3): MOV RDI,RBP
0001340d(5): CALL 0x00006830
00013412(8): MOV dword ptr [RSP + 0x4c],0x0
0001341a(5): JMP 0x00012ae8
0001341f(5): MOV RCX,qword ptr [RSP + 0x8]
00013424(5): CMP qword ptr [RCX + 0x28],0x0
00013429(6): JNZ 0x0001323e
0001342f(4): MOV R10,qword ptr [RBX + 0x10]
00013433(3): TEST R10,R10
00013436(6): JZ 0x000136ea
0001343c(3): MOV RSI,qword ptr [RBX]
0001343f(7): LEA R9,[0x15dac]
00013446(3): XOR R8D,R8D
00013449(2): XOR EDX,EDX
0001344b(3): MOV RCX,RSI
0001344e(4): CMP byte ptr [RCX + 0x8],0xc
00013452(6): JA 0x0001371e
00013458(4): MOVZX EDI,byte ptr [RCX + 0x8]
0001345c(4): MOVSXD RDI,dword ptr [R9 + RDI*0x4]
00013460(3): ADD RDI,R9
00013463(2): JMP RDI
00013465(2): XOR EBP,EBP
00013467(5): MOV ESI,0x1
0001346c(5): JMP 0x0001279d
00013471(5): MOV R14,qword ptr [RSP + 0x28]
00013476(5): MOV ECX,0x1
0001347b(3): MOV RDX,R12
0001347e(3): MOV RSI,RBX
00013481(3): MOV RDI,R14
00013484(5): CALL 0x00008e30
00013489(5): MOV ECX,0x2
0001348e(3): MOV RDX,R12
00013491(3): MOV RSI,RBX
00013494(3): MOV RDI,R14
00013497(4): MOV qword ptr [RBX + 0x50],RAX
0001349b(5): CALL 0x00008e30
000134a0(5): MOV ECX,0x6
000134a5(4): MOV qword ptr [RBX + 0x58],RAX
000134a9(3): MOV RDX,R12
000134ac(3): MOV RSI,RBX
000134af(3): MOV RDI,R14
000134b2(5): CALL 0x00008e30
000134b7(5): CMP qword ptr [RBX + 0x50],0x0
000134bc(4): MOV qword ptr [RBX + 0x60],RAX
000134c0(2): JZ 0x000134d2
000134c2(5): CMP qword ptr [RBX + 0x58],0x0
000134c7(2): JZ 0x000134d2
000134c9(3): TEST RAX,RAX
000134cc(6): JNZ 0x00013385
000134d2(5): MOV R15D,dword ptr [RSP + 0x50]
000134d7(5): JMP 0x0001338f
000134dc(4): MOV RAX,qword ptr [RDX + 0x20]
000134e0(4): MOV R9,qword ptr [RAX + 0x38]
000134e4(5): JMP 0x00012ef9
000134e9(4): MOV RAX,qword ptr [RDX + 0x20]
000134ed(4): MOV RCX,qword ptr [RAX + 0x38]
000134f1(5): JMP 0x00012ee4
000134f6(3): MOV RDI,RBX
000134f9(5): MOV ESI,0xe8
000134fe(5): CALL 0x00001b60
00013503(3): TEST RAX,RAX
00013506(3): MOV RBX,RAX
00013509(6): JZ 0x000136a1
0001350f(5): MOV RAX,qword ptr [RSP + 0x8]
00013514(8): MOV qword ptr [RAX + 0x8],0xe8
0001351c(3): MOV qword ptr [RAX],RBX
0001351f(5): JMP 0x00012702
00013524(3): MOV qword ptr [RAX],RCX
00013527(4): MOV qword ptr [RAX + 0x8],R9
0001352b(5): JMP 0x00012e45
00013530(8): MOV dword ptr [RSP + 0x4c],0x0
00013538(5): JMP 0x00012ae8
0001353d(8): MOV qword ptr [R10 + 0x8],0x1
00013545(3): MOV qword ptr [RAX],RCX
00013548(5): JMP 0x00012e45
0001354d(3): MOV RDI,RBP
00013550(5): CALL 0x000067c0
00013555(8): MOV dword ptr [RSP + 0x4c],0x0
0001355d(5): JMP 0x00012ae8
00013562(8): MOV dword ptr [RSP + 0x4c],0xc
0001356a(8): MOV qword ptr [RBX + 0x68],0x0
00013572(5): JMP 0x000129bc
00013577(3): TEST RAX,RAX
0001357a(6): JZ 0x000136ab
00013580(4): LEA R13,[R15 + 0x70]
00013584(5): LEA R12,[RSP + 0x60]
00013589(4): SUB R15,-0x80
0001358d(2): XOR ECX,ECX
0001358f(2): XOR EDX,EDX
00013591(3): MOV RSI,R15
00013594(3): MOV R8,R12
00013597(3): MOV RDI,R13
0001359a(4): MOV qword ptr [RSP],RAX
0001359e(5): MOV byte ptr [RSP + 0x68],0x2
000135a3(5): CALL 0x000087a0
000135a8(4): MOV R9,qword ptr [RSP]
000135ac(3): MOV R11,RAX
000135af(5): JMP 0x00012b8b
000135b4(5): CALL 0x000018d0
000135b9(11): MOV qword ptr [0xe0 + R13],0x0
000135c4(5): JMP 0x00012ced
000135c9(3): MOV R8D,EAX
000135cc(4): ADD RDX,0x1
000135d0(4): ADD RCX,0x10
000135d4(3): CMP RDX,R10
000135d7(6): JNZ 0x0001344e
000135dd(3): OR R14B,R8B
000135e0(6): JZ 0x000136ea
000135e6(3): MOV RAX,RDX
000135e9(4): SHL RAX,0x4
000135ed(3): ADD RAX,RSI
000135f0(2): JMP 0x00013608
000135f2(3): CMP DL,0x5
000135f5(2): JNZ 0x000135fb
000135f7(4): MOV byte ptr [RSI + 0x8],0x7
000135fb(4): ADD RSI,0x10
000135ff(3): CMP RAX,RSI
00013602(6): JZ 0x000136e7
00013608(4): MOVZX EDX,byte ptr [RSI + 0x8]
0001360c(3): CMP DL,0x1
0001360f(2): JNZ 0x000135f2
00013611(3): CMP byte ptr [RSI],0x0
00013614(2): JNS 0x000135fb
00013616(4): AND byte ptr [RSI + 0xa],0xdf
0001361a(2): JMP 0x000135fb
00013620(3): CMP byte ptr [RCX],0x0
00013623(4): CMOVS R14D,EAX
00013627(2): JMP 0x000135cc
00013629(2): MOV EDI,dword ptr [RCX]
0001362b(3): CMP EDI,0x20
0001362e(2): JZ 0x000135cc
00013630(6): JBE 0x000136d9
00013636(3): CMP EDI,0x40
00013639(2): JZ 0x000135cc
0001363b(3): ADD EDI,-0x80
0001363e(2): JZ 0x000135cc
00013640(5): JMP 0x0001323e
00013648(3): MOV RDI,qword ptr [RCX]
0001364b(5): CMP qword ptr [RDI + 0x10],0x0
00013650(6): JNZ 0x0001323e
00013656(5): CMP qword ptr [RDI + 0x18],0x0
0001365b(6): JZ 0x000135cc
00013661(5): JMP 0x0001323e
00013670(3): MOV R15D,EAX
00013673(5): JMP 0x0001338f
00013678(8): MOV qword ptr [R15 + 0x8],0x0
00013680(7): MOV qword ptr [R15],0x0
00013687(5): JMP 0x000131fa
0001368c(5): MOV RAX,qword ptr [RSP + 0x8]
00013691(8): MOV dword ptr [RSP + 0x4c],0xc
00013699(3): MOV R13,qword ptr [RAX]
0001369c(5): JMP 0x000129bc
000136a1(5): MOV EAX,0xc
000136a6(5): JMP 0x00012a2c
000136ab(5): MOV RAX,qword ptr [RSP + 0x8]
000136b0(8): MOV qword ptr [RBX + 0x68],0x0
000136b8(3): MOV R13,qword ptr [RAX]
000136bb(5): JMP 0x000129bc
000136c0(8): MOV qword ptr [RCX + 0x8],0x0
000136c8(7): MOV qword ptr [RCX],0x0
000136cf(5): MOV EAX,0xc
000136d4(5): JMP 0x000129b0
000136d9(3): CMP EDI,0x10
000136dc(6): JZ 0x000135cc
000136e2(5): JMP 0x0001323e
000136e7(3): MOV R14D,R8D
000136ea(8): CMP qword ptr [0x98 + RBX],0x0
000136f2(7): MOVZX EDX,byte ptr [0xb0 + RBX]
000136f9(10): MOV dword ptr [0xb4 + RBX],0x1
00013703(3): SETG AL
00013706(3): AND EDX,0xfffffff9
00013709(3): OR EAX,R14D
0001370c(3): AND EAX,0x1
0001370f(2): ADD EAX,EAX
00013711(2): OR EAX,EDX
00013713(6): MOV byte ptr [0xb0 + RBX],AL
00013719(5): JMP 0x0001323e
0001371e(5): CALL 0x000018e0
00013723(7): LEA RCX,[0x15e20]
0001372a(7): LEA RSI,[0x15850]
00013731(7): LEA RDI,[0x15915]
00013738(5): MOV EDX,0x5b0
0001373d(5): CALL 0x00001a50
00013742(7): LEA RCX,[0x15e20]
00013749(7): LEA RSI,[0x15850]
00013750(7): LEA RDI,[0x15870]
00013757(5): MOV EDX,0x5c2
0001375c(5): CALL 0x00001a50
00013761(7): LEA RCX,[0x15e20]
00013768(7): LEA RSI,[0x15850]
0001376f(7): LEA RDI,[0x1590b]
00013776(5): MOV EDX,0x5af
0001377b(5): CALL 0x00001a50
00013780(5): CALL 0x000019e0
00013785(1): NOP
00013786(10): NOP word ptr CS:[RAX + RAX*0x1]
00013790(4): SUB RSP,0x8
00013794(7): MOV RCX,qword ptr [0x002196d8]
0001379b(3): MOV R8,RDI
0001379e(3): MOV RDI,RDX
000137a1(3): MOV RAX,RCX
000137a4(4): SHR RAX,0x19
000137a8(3): AND EAX,0x1
000137ab(3): SHL EAX,0x4
000137ae(2): MOV EDX,EAX
000137b0(4): MOVZX EAX,byte ptr [RDI + 0x38]
000137b4(3): AND EAX,0xffffffef
000137b7(2): OR EAX,EDX
000137b9(3): MOV RDX,RSI
000137bc(3): MOV RSI,R8
000137bf(3): OR EAX,0xffffff80
000137c2(3): MOV byte ptr [RDI + 0x38],AL
000137c5(5): CALL 0x00012690
000137ca(2): TEST EAX,EAX
000137cc(2): JZ 0x000137f8
000137ce(7): LEA RDX,[0x15e80]
000137d5(2): CDQE
000137d7(7): LEA RSI,[0x15f20]
000137de(2): XOR EDI,EDI
000137e0(4): ADD RSI,qword ptr [RDX + RAX*0x8]
000137e4(5): MOV EDX,0x5
000137e9(4): ADD RSP,0x8
000137ed(5): JMP 0x000019b0
000137f8(2): XOR EAX,EAX
000137fa(4): ADD RSP,0x8
000137fe(1): RET
00013800(7): MOV RAX,qword ptr [0x002196d8]
00013807(7): MOV qword ptr [0x002196d8],RDI
0001380e(1): RET
00013810(2): PUSH R12
00013812(1): PUSH RBP
00013813(2): XOR EAX,EAX
00013815(1): PUSH RBX
00013816(4): MOV RBP,qword ptr [RDI + 0x20]
0001381a(3): MOV RBX,RDI
0001381d(3): MOV R12,qword ptr [RDI]
00013820(4): LEA RDI,[RBP + 0x8]
00013824(3): MOV RCX,RBP
00013827(8): MOV qword ptr [RBP],0x0
0001382f(11): MOV qword ptr [0xf8 + RBP],0x0
0001383a(4): AND RDI,-0x8
0001383e(3): SUB RCX,RDI
00013841(6): ADD ECX,0x100
00013847(3): SHR ECX,0x3
0001384a(3): STOSQ.REP RDI
0001384d(3): MOV RCX,RBP
00013850(3): MOV RDI,RBX
00013853(5): MOV RSI,qword ptr [R12 + 0x48]
00013858(4): LEA RDX,[RSI + 0x18]
0001385c(4): ADD RSI,0x10
00013860(5): CALL 0x0000bd60
00013865(5): MOV RAX,qword ptr [R12 + 0x50]
0001386a(5): CMP qword ptr [R12 + 0x48],RAX
0001386f(2): JZ 0x00013889
00013871(4): LEA RDX,[RAX + 0x18]
00013875(4): LEA RSI,[RAX + 0x10]
00013879(3): MOV RCX,RBP
0001387c(3): MOV RDI,RBX
0001387f(5): CALL 0x0000bd60
00013884(5): MOV RAX,qword ptr [R12 + 0x48]
00013889(5): MOV RSI,qword ptr [R12 + 0x58]
0001388e(3): CMP RSI,RAX
00013891(2): JZ 0x000138ab
00013893(4): LEA RDX,[RSI + 0x18]
00013897(3): MOV RCX,RBP
0001389a(4): ADD RSI,0x10
0001389e(3): MOV RDI,RBX
000138a1(5): CALL 0x0000bd60
000138a6(5): MOV RAX,qword ptr [R12 + 0x48]
000138ab(5): MOV RSI,qword ptr [R12 + 0x60]
000138b0(3): CMP RSI,RAX
000138b3(2): JZ 0x000138c8
000138b5(4): LEA RDX,[RSI + 0x18]
000138b9(3): MOV RCX,RBP
000138bc(4): ADD RSI,0x10
000138c0(3): MOV RDI,RBX
000138c3(5): CALL 0x0000bd60
000138c8(4): OR byte ptr [RBX + 0x38],0x8
000138cc(2): XOR EAX,EAX
000138ce(1): POP RBX
000138cf(1): POP RBP
000138d0(2): POP R12
000138d2(1): RET
000138e0(2): PUSH R15
000138e2(2): PUSH R14
000138e4(3): MOV RAX,R8
000138e7(2): PUSH R13
000138e9(2): PUSH R12
000138eb(3): ADD R8,RCX
000138ee(1): PUSH RBP
000138ef(1): PUSH RBX
000138f0(4): SUB RSP,0x38
000138f4(3): TEST RCX,RCX
000138f7(4): MOV EBX,dword ptr [RSP + 0x78]
000138fb(5): MOV R12,qword ptr [RSP + 0x70]
00013900(4): MOV dword ptr [RSP + 0x28],EBX
00013904(6): JS 0x00013c40
0001390a(3): CMP RCX,RDX
0001390d(6): JG 0x00013c40
00013913(3): CMP R8,RDX
00013916(3): MOV RBX,RCX
00013919(3): MOV R15,RDI
0001391c(6): JG 0x00013ba0
00013922(3): TEST RAX,RAX
00013925(2): JS 0x00013930
00013927(3): CMP RCX,R8
0001392a(6): JG 0x00013ba0
00013930(3): TEST R8,R8
00013933(6): JS 0x00013c18
00013939(3): TEST RAX,RAX
0001393c(2): JNS 0x00013947
0001393e(3): CMP RBX,R8
00013941(6): JLE 0x00013c18
00013947(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001394c(3): MOV R13D,EAX
0001394f(4): SHR R13B,0x5
00013953(3): MOV EDI,R13D
00013956(3): AND EDI,0x3
00013959(3): CMP R8,RBX
0001395c(4): MOV dword ptr [RSP + 0x2c],EDI
00013960(2): JLE 0x00013971
00013962(5): CMP qword ptr [R15 + 0x20],0x0
00013967(2): JZ 0x00013971
00013969(2): TEST AL,0x8
0001396b(6): JZ 0x00013b60
00013971(2): TEST AL,0x10
00013973(6): JNZ 0x00013b40
00013979(3): TEST R12,R12
0001397c(6): JZ 0x00013b40
00013982(3): AND EAX,0x6
00013985(4): MOV RCX,qword ptr [R15 + 0x30]
00013989(2): CMP AL,0x4
0001398b(6): JZ 0x00013b20
00013991(4): LEA R14,[RCX + 0x1]
00013995(3): MOV R13,R14
00013998(3): MOV RDI,R14
0001399b(4): SHL RDI,0x4
0001399f(5): MOV qword ptr [RSP + 0x20],R9
000139a4(5): MOV qword ptr [RSP + 0x18],RDX
000139a9(5): MOV qword ptr [RSP + 0x10],RSI
000139ae(5): MOV qword ptr [RSP + 0x8],R8
000139b3(5): CALL 0x00001b00
000139b8(3): TEST RAX,RAX
000139bb(3): MOV RBP,RAX
000139be(6): JZ 0x00013c50
000139c4(4): SUB RSP,0x8
000139c8(3): MOV RCX,RBX
000139cb(3): MOV RDI,R15
000139ce(4): MOV EAX,dword ptr [RSP + 0x34]
000139d2(1): PUSH RAX
000139d3(1): PUSH RBP
000139d4(2): PUSH R14
000139d6(5): MOV R9,qword ptr [RSP + 0x40]
000139db(5): MOV R8,qword ptr [RSP + 0x28]
000139e0(5): MOV RDX,qword ptr [RSP + 0x38]
000139e5(5): MOV RSI,qword ptr [RSP + 0x30]
000139ea(5): CALL 0x0000e500
000139ef(4): ADD RSP,0x20
000139f3(2): TEST EAX,EAX
000139f5(2): JZ 0x00013a28
000139f7(3): CMP EAX,0x1
000139fa(7): MOV R12,-0x1
00013a01(2): JZ 0x00013a0a
00013a03(7): MOV R12,-0x2
00013a0a(3): MOV RDI,RBP
00013a0d(5): CALL 0x000018d0
00013a12(4): ADD RSP,0x38
00013a16(3): MOV RAX,R12
00013a19(1): POP RBX
00013a1a(1): POP RBP
00013a1b(2): POP R12
00013a1d(2): POP R13
00013a1f(2): POP R14
00013a21(2): POP R15
00013a23(1): RET
00013a28(3): TEST R12,R12
00013a2b(6): JZ 0x00013af8
00013a31(5): MOVZX EAX,byte ptr [R15 + 0x38]
00013a36(4): LEA RDX,[R13 + 0x1]
00013a3a(2): SHR AL,1
00013a3c(3): AND EAX,0x3
00013a3f(6): JZ 0x00013bb0
00013a45(3): CMP EAX,0x1
00013a48(6): JZ 0x00013c60
00013a4e(3): CMP EAX,0x2
00013a51(6): JNZ 0x00013d40
00013a57(4): CMP R14,qword ptr [R12]
00013a5b(6): JA 0x00013d21
00013a61(6): MOV R9D,0x2
00013a67(3): TEST R13,R13
00013a6a(6): JLE 0x00013cd8
00013a70(5): MOV R8,qword ptr [R12 + 0x8]
00013a75(5): MOV RDI,qword ptr [R12 + 0x10]
00013a7a(8): LEA RSI,[R13*0x8]
00013a82(3): MOV RDX,R13
00013a85(2): XOR EAX,EAX
00013a87(9): NOP word ptr [RAX + RAX*0x1]
00013a90(5): MOV RCX,qword ptr [RBP + RAX*0x2]
00013a95(4): MOV qword ptr [R8 + RAX*0x1],RCX
00013a99(5): MOV RCX,qword ptr [RBP + RAX*0x2 + 0x8]
00013a9e(4): MOV qword ptr [RDI + RAX*0x1],RCX
00013aa2(4): ADD RAX,0x8
00013aa6(3): CMP RSI,RAX
00013aa9(2): JNZ 0x00013a90
00013aab(4): CMP qword ptr [R12],RDX
00013aaf(2): JBE 0x00013add
00013ab1(5): MOV RSI,qword ptr [R12 + 0x10]
00013ab6(5): MOV RCX,qword ptr [R12 + 0x8]
00013abb(7): MOV RAX,-0x1
00013ac2(6): NOP word ptr [RAX + RAX*0x1]
00013ac8(4): MOV qword ptr [RSI + RDX*0x8],RAX
00013acc(4): ADD R13,0x1
00013ad0(4): MOV qword ptr [RCX + RDX*0x8],RAX
00013ad4(4): CMP R13,qword ptr [R12]
00013ad8(3): MOV RDX,R13
00013adb(2): JC 0x00013ac8
00013add(5): MOVZX EAX,byte ptr [R15 + 0x38]
00013ae2(4): LEA R13D,[R9 + R9*0x1]
00013ae6(3): AND EAX,0xfffffff9
00013ae9(3): OR EAX,R13D
00013aec(2): TEST AL,0x6
00013aee(4): MOV byte ptr [R15 + 0x38],AL
00013af2(6): JZ 0x00013a03
00013af8(5): CMP byte ptr [RSP + 0x28],0x0
00013afd(4): MOV R12,qword ptr [RBP]
00013b01(6): JZ 0x00013a0a
00013b07(3): CMP R12,RBX
00013b0a(6): JNZ 0x00013d02
00013b10(4): MOV R12,qword ptr [RBP + 0x8]
00013b14(3): SUB R12,RBX
00013b17(5): JMP 0x00013a0a
00013b20(4): MOV R14,qword ptr [R12]
00013b24(3): CMP R14,RCX
00013b27(6): JA 0x00013991
00013b2d(3): TEST R14,R14
00013b30(3): MOV R13,R14
00013b33(6): JG 0x00013998
00013b39(7): NOP dword ptr [RAX]
00013b40(5): MOV EDI,0x10
00013b45(6): MOV R14D,0x1
00013b4b(6): MOV R13D,0x1
00013b51(3): XOR R12D,R12D
00013b54(5): JMP 0x0001399f
00013b60(3): MOV RDI,R15
00013b63(5): MOV qword ptr [RSP + 0x20],R9
00013b68(5): MOV qword ptr [RSP + 0x18],RDX
00013b6d(5): MOV qword ptr [RSP + 0x10],RSI
00013b72(5): MOV qword ptr [RSP + 0x8],R8
00013b77(5): CALL 0x00013810
00013b7c(5): MOVZX EAX,byte ptr [R15 + 0x38]
00013b81(5): MOV R9,qword ptr [RSP + 0x20]
00013b86(5): MOV RDX,qword ptr [RSP + 0x18]
00013b8b(5): MOV RSI,qword ptr [RSP + 0x10]
00013b90(5): MOV R8,qword ptr [RSP + 0x8]
00013b95(5): JMP 0x00013971
00013ba0(3): MOV R8,RDX
00013ba3(5): JMP 0x00013947
00013bb0(8): LEA R14,[RDX*0x8]
00013bb8(5): MOV qword ptr [RSP + 0x8],RDX
00013bbd(3): MOV RDI,R14
00013bc0(5): CALL 0x00001b00
00013bc5(3): TEST RAX,RAX
00013bc8(5): MOV qword ptr [R12 + 0x8],RAX
00013bcd(5): MOV RDX,qword ptr [RSP + 0x8]
00013bd2(6): JZ 0x00013cea
00013bd8(3): MOV RDI,R14
00013bdb(5): MOV qword ptr [RSP + 0x8],RDX
00013be0(5): MOV qword ptr [RSP + 0x10],RAX
00013be5(5): CALL 0x00001b00
00013bea(3): TEST RAX,RAX
00013bed(5): MOV qword ptr [R12 + 0x10],RAX
00013bf2(5): MOV RDX,qword ptr [RSP + 0x8]
00013bf7(5): MOV RCX,qword ptr [RSP + 0x10]
00013bfc(6): JZ 0x00013ce2
00013c02(4): MOV qword ptr [R12],RDX
00013c06(6): MOV R9D,0x1
00013c0c(5): JMP 0x00013a67
00013c18(5): MOVZX EAX,byte ptr [R15 + 0x38]
00013c1d(3): XOR R8D,R8D
00013c20(3): MOV R13D,EAX
00013c23(4): SHR R13B,0x5
00013c27(3): MOV EDI,R13D
00013c2a(3): AND EDI,0x3
00013c2d(4): MOV dword ptr [RSP + 0x2c],EDI
00013c31(5): JMP 0x00013971
00013c40(7): MOV R12,-0x1
00013c47(5): JMP 0x00013a12
00013c50(7): MOV R12,-0x2
00013c57(5): JMP 0x00013a12
00013c60(4): CMP qword ptr [R12],RDX
00013c64(6): MOV R9D,0x1
00013c6a(6): JNC 0x00013a67
00013c70(8): LEA RCX,[RDX*0x8]
00013c78(5): MOV RDI,qword ptr [R12 + 0x8]
00013c7d(5): MOV byte ptr [RSP + 0x18],R9B
00013c82(5): MOV qword ptr [RSP + 0x10],RDX
00013c87(3): MOV RSI,RCX
00013c8a(5): MOV qword ptr [RSP + 0x8],RCX
00013c8f(5): CALL 0x00001b60
00013c94(3): TEST RAX,RAX
00013c97(3): MOV R14,RAX
00013c9a(2): JZ 0x00013cea
00013c9c(5): MOV RCX,qword ptr [RSP + 0x8]
00013ca1(5): MOV RDI,qword ptr [R12 + 0x10]
00013ca6(3): MOV RSI,RCX
00013ca9(5): CALL 0x00001b60
00013cae(3): TEST RAX,RAX
00013cb1(5): MOV RDX,qword ptr [RSP + 0x10]
00013cb6(6): MOVZX R9D,byte ptr [RSP + 0x18]
00013cbc(2): JZ 0x00013cf2
00013cbe(5): MOV qword ptr [R12 + 0x8],R14
00013cc3(5): MOV qword ptr [R12 + 0x10],RAX
00013cc8(4): MOV qword ptr [R12],RDX
00013ccc(5): JMP 0x00013a67
00013cd8(2): XOR EDX,EDX
00013cda(3): XOR R13D,R13D
00013cdd(5): JMP 0x00013aab
00013ce2(3): MOV RDI,RCX
00013ce5(5): CALL 0x000018d0
00013cea(3): XOR R9D,R9D
00013ced(5): JMP 0x00013add
00013cf2(3): MOV RDI,R14
00013cf5(5): CALL 0x000018d0
00013cfa(3): XOR R9D,R9D
00013cfd(5): JMP 0x00013add
00013d02(7): LEA RCX,[0x15df0]
00013d09(7): LEA RSI,[0x15830]
00013d10(7): LEA RDI,[0x15955]
00013d17(5): MOV EDX,0x1be
00013d1c(5): CALL 0x00001a50
00013d21(7): LEA RCX,[0x15de0]
00013d28(7): LEA RSI,[0x15830]
00013d2f(7): LEA RDI,[0x1593d]
00013d36(5): MOV EDX,0x1fb
00013d3b(5): CALL 0x00001a50
00013d40(7): LEA RCX,[0x15de0]
00013d47(7): LEA RSI,[0x15830]
00013d4e(7): LEA RDI,[0x15920]
00013d55(5): MOV EDX,0x1f9
00013d5a(5): CALL 0x00001a50
00013d5f(1): NOP
00013d60(2): PUSH R15
00013d62(2): PUSH R14
00013d64(2): PUSH R13
00013d66(2): PUSH R12
00013d68(3): MOV R12,RDI
00013d6b(1): PUSH RBP
00013d6c(1): PUSH RBX
00013d6d(3): MOV RBP,R8
00013d70(3): MOV RBX,RDX
00013d73(3): MOV RDX,RBP
00013d76(4): SUB RSP,0x28
00013d7a(4): SHR RDX,0x3f
00013d7e(5): MOV RAX,qword ptr [RSP + 0x70]
00013d83(2): MOV EDI,EDX
00013d85(5): MOV R8D,dword ptr [RSP + 0x78]
00013d8a(4): SHR RAX,0x3f
00013d8e(3): OR DIL,AL
00013d91(6): JNZ 0x00013e60
00013d97(3): TEST RBX,RBX
00013d9a(6): JS 0x00013e60
00013da0(3): MOV R15,RBX
00013da3(3): ADD R15,RBP
00013da6(6): JO 0x00013e60
00013dac(3): TEST RBP,RBP
00013daf(3): MOV R14,RCX
00013db2(3): MOV RCX,R9
00013db5(6): JZ 0x00013e70
00013dbb(3): XOR R13D,R13D
00013dbe(3): TEST RBX,RBX
00013dc1(5): MOV qword ptr [RSP + 0x8],RSI
00013dc6(2): JNZ 0x00013e10
00013dc8(4): MOVZX R8D,R8B
00013dcc(3): MOV RDX,R15
00013dcf(3): MOV RSI,R14
00013dd2(2): PUSH R8
00013dd4(4): PUSH qword ptr [RSP + 0x70]
00013dd8(3): MOV RDI,R12
00013ddb(8): MOV R9,qword ptr [0x80 + RSP]
00013de3(5): MOV R8,qword ptr [RSP + 0x70]
00013de8(5): CALL 0x000138e0
00013ded(3): MOV RDI,R13
00013df0(3): MOV RBX,RAX
00013df3(5): CALL 0x000018d0
00013df8(1): POP RAX
00013df9(1): POP RDX
00013dfa(4): ADD RSP,0x28
00013dfe(3): MOV RAX,RBX
00013e01(1): POP RBX
00013e02(1): POP RBP
00013e03(2): POP R12
00013e05(2): POP R13
00013e07(2): POP R14
00013e09(2): POP R15
00013e0b(1): RET
00013e10(3): MOV RDI,R15
00013e13(5): MOV dword ptr [RSP + 0x1c],R8D
00013e18(5): MOV qword ptr [RSP + 0x10],R9
00013e1d(5): CALL 0x00001b00
00013e22(3): TEST RAX,RAX
00013e25(3): MOV R13,RAX
00013e28(2): JZ 0x00013e60
00013e2a(5): MOV RSI,qword ptr [RSP + 0x8]
00013e2f(3): MOV RDX,RBX
00013e32(3): MOV RDI,RAX
00013e35(5): CALL 0x00001ad0
00013e3a(5): LEA RDI,[R13 + RBX*0x1]
00013e3f(3): MOV RSI,R14
00013e42(3): MOV RDX,RBP
00013e45(3): MOV R14,R13
00013e48(5): CALL 0x00001ad0
00013e4d(5): MOV RCX,qword ptr [RSP + 0x10]
00013e52(5): MOV R8D,dword ptr [RSP + 0x1c]
00013e57(5): JMP 0x00013dc8
00013e60(7): MOV RBX,-0x2
00013e67(2): JMP 0x00013dfa
00013e70(3): MOV R14,RSI
00013e73(3): XOR R13D,R13D
00013e76(5): JMP 0x00013dc8
00013e80(2): MOV EAX,EDX
00013e82(2): PUSH R14
00013e84(2): PUSH R13
00013e86(3): AND EAX,0x1
00013e89(2): PUSH R12
00013e8b(1): PUSH RBP
00013e8c(3): CMP EAX,0x1
00013e8f(1): PUSH RBX
00013e90(3): MOV RBX,RDI
00013e93(3): SBB R14,R14
00013e96(7): MOV qword ptr [RDI],0x0
00013e9d(8): MOV qword ptr [RDI + 0x8],0x0
00013ea5(7): AND R14D,0xfd4fca
00013eac(8): MOV qword ptr [RDI + 0x10],0x0
00013eb4(5): MOV EDI,0x100
00013eb9(3): MOV R12,RSI
00013ebc(2): MOV EBP,EDX
00013ebe(7): ADD R14,0x3b2fc
00013ec5(5): CALL 0x00001b00
00013eca(3): TEST RAX,RAX
00013ecd(4): MOV qword ptr [RBX + 0x20],RAX
00013ed1(6): JZ 0x00013f80
00013ed7(3): MOV R13,RBP
00013eda(4): SHL R13,0x15
00013ede(7): AND R13D,0x400000
00013ee5(3): OR R13,R14
00013ee8(4): TEST BPL,0x4
00013eec(2): JNZ 0x00013f50
00013eee(4): AND byte ptr [RBX + 0x38],0x7f
00013ef2(4): MOVZX EDX,byte ptr [RBX + 0x38]
00013ef6(3): SHR EBP,0x3
00013ef9(3): MOV RDI,R12
00013efc(3): AND EBP,0x1
00013eff(8): MOV qword ptr [RBX + 0x28],0x0
00013f07(3): SHL EBP,0x4
00013f0a(3): AND EDX,0xffffffef
00013f0d(2): OR EBP,EDX
00013f0f(4): MOV byte ptr [RBX + 0x38],BPL
00013f13(5): CALL 0x000019d0
00013f18(3): MOV RCX,R13
00013f1b(3): MOV RDX,RAX
00013f1e(3): MOV RSI,R12
00013f21(3): MOV RDI,RBX
00013f24(5): CALL 0x00012690
00013f29(3): CMP EAX,0x10
00013f2c(2): MOV EBP,EAX
00013f2e(2): JZ 0x00013f68
00013f30(2): TEST EAX,EAX
00013f32(2): JNZ 0x00013f6d
00013f34(3): MOV RDI,RBX
00013f37(5): CALL 0x00013810
00013f3c(1): POP RBX
00013f3d(2): MOV EAX,EBP
00013f3f(1): POP RBP
00013f40(2): POP R12
00013f42(2): POP R13
00013f44(2): POP R14
00013f46(1): RET
00013f50(4): AND R13,-0x41
00013f54(4): OR byte ptr [RBX + 0x38],0x80
00013f58(7): OR R13,0x100
00013f5f(2): JMP 0x00013ef2
00013f68(5): MOV EBP,0x8
00013f6d(4): MOV RDI,qword ptr [RBX + 0x20]
00013f71(5): CALL 0x000018d0
00013f76(8): MOV qword ptr [RBX + 0x20],0x0
00013f7e(2): JMP 0x00013f3c
00013f80(5): MOV EBP,0xc
00013f85(1): POP RBX
00013f86(2): MOV EAX,EBP
00013f88(1): POP RBP
00013f89(2): POP R12
00013f8b(2): POP R13
00013f8d(2): POP R14
00013f8f(1): RET
00013f90(2): PUSH R13
00013f92(2): PUSH R12
00013f94(1): PUSH RBP
00013f95(1): PUSH RBX
00013f96(4): SUB RSP,0x8
00013f9a(3): CMP EDI,0x10
00013f9d(2): JA 0x00014000
00013f9f(7): LEA RAX,[0x15e80]
00013fa6(3): MOVSXD RDI,EDI
00013fa9(7): LEA RSI,[0x15f20]
00013fb0(3): MOV RBP,RDX
00013fb3(5): MOV EDX,0x5
00013fb8(3): MOV R12,RCX
00013fbb(4): ADD RSI,qword ptr [RAX + RDI*0x8]
00013fbf(2): XOR EDI,EDI
00013fc1(5): CALL 0x000019b0
00013fc6(3): MOV RDI,RAX
00013fc9(3): MOV R13,RAX
00013fcc(5): CALL 0x000019d0
00013fd1(3): TEST R12,R12
00013fd4(4): LEA RBX,[RAX + 0x1]
00013fd8(2): JZ 0x00013fed
00013fda(3): CMP RBX,R12
00013fdd(3): MOV RDX,RBX
00013fe0(2): JA 0x00014008
00013fe2(3): MOV RSI,R13
00013fe5(3): MOV RDI,RBP
00013fe8(5): CALL 0x00001ad0
00013fed(4): ADD RSP,0x8
00013ff1(3): MOV RAX,RBX
00013ff4(1): POP RBX
00013ff5(1): POP RBP
00013ff6(2): POP R12
00013ff8(2): POP R13
00013ffa(1): RET
00014000(5): CALL 0x000018e0
00014005(3): NOP dword ptr [RAX]
00014008(5): LEA RDX,[R12 + -0x1]
0001400d(6): MOV byte ptr [RBP + R12*0x1 + -0x1],0x0
00014013(2): JMP 0x00013fe2
00014020(1): PUSH RBX
00014021(3): MOV RBX,RDI
00014024(3): MOV RDI,qword ptr [RDI]
00014027(3): TEST RDI,RDI
0001402a(2): JZ 0x00014031
0001402c(5): CALL 0x00007810
00014031(4): MOV RDI,qword ptr [RBX + 0x20]
00014035(7): MOV qword ptr [RBX],0x0
0001403c(8): MOV qword ptr [RBX + 0x8],0x0
00014044(5): CALL 0x000018d0
00014049(4): MOV RDI,qword ptr [RBX + 0x28]
0001404d(8): MOV qword ptr [RBX + 0x20],0x0
00014055(5): CALL 0x000018d0
0001405a(8): MOV qword ptr [RBX + 0x28],0x0
00014062(1): POP RBX
00014063(1): RET
00014070(7): TEST R8D,0xfffffff8
00014077(6): JNZ 0x00014108
0001407d(2): PUSH R13
0001407f(2): PUSH R12
00014081(3): MOV R13,RDX
00014084(1): PUSH RBP
00014085(1): PUSH RBX
00014086(3): MOV R12,RCX
00014089(3): MOV EBX,R8D
0001408c(3): MOV RBP,RDI
0001408f(4): SUB RSP,0x18
00014093(4): TEST R8B,0x4
00014097(2): JNZ 0x000140e8
00014099(3): MOV RDI,RSI
0001409c(5): MOV qword ptr [RSP + 0x8],RSI
000140a1(5): CALL 0x000019d0
000140a6(2): XOR ECX,ECX
000140a8(4): TEST byte ptr [RBP + 0x38],0x10
000140ac(3): MOV RDX,RAX
000140af(5): MOV RSI,qword ptr [RSP + 0x8]
000140b4(2): JZ 0x000140f6
000140b6(4): SUB RSP,0x8
000140ba(1): PUSH RBX
000140bb(2): PUSH 0x0
000140bd(2): PUSH 0x0
000140bf(3): MOV RDI,RBP
000140c2(3): MOV R9,RDX
000140c5(3): MOV R8,RDX
000140c8(5): CALL 0x0000e500
000140cd(4): ADD RSP,0x20
000140d1(2): TEST EAX,EAX
000140d3(3): SETNZ AL
000140d6(4): ADD RSP,0x18
000140da(1): POP RBX
000140db(3): MOVZX EAX,AL
000140de(1): POP RBP
000140df(2): POP R12
000140e1(2): POP R13
000140e3(1): RET
000140e8(4): TEST byte ptr [RBP + 0x38],0x10
000140ec(3): MOV RCX,qword ptr [RCX]
000140ef(5): MOV RDX,qword ptr [R12 + 0x8]
000140f4(2): JNZ 0x000140b6
000140f6(4): SUB RSP,0x8
000140fa(1): PUSH RBX
000140fb(2): PUSH R12
000140fd(2): PUSH R13
000140ff(2): JMP 0x000140bf
00014108(5): MOV EAX,0x2
0001410d(1): RET
00014110(4): SUB RSP,0x8
00014114(3): MOV R9,RDX
00014117(2): PUSH 0x1
00014119(2): PUSH R8
0001411b(3): XOR R8D,R8D
0001411e(5): CALL 0x000138e0
00014123(4): ADD RSP,0x18
00014127(1): RET
00014130(4): SUB RSP,0x8
00014134(2): PUSH 0x0
00014136(2): PUSH R9
00014138(3): MOV R9,RDX
0001413b(5): CALL 0x000138e0
00014140(4): ADD RSP,0x18
00014144(1): RET
00014150(4): SUB RSP,0x8
00014154(2): PUSH 0x1
00014156(4): PUSH qword ptr [RSP + 0x20]
0001415a(4): PUSH qword ptr [RSP + 0x20]
0001415e(2): PUSH 0x0
00014160(5): CALL 0x00013d60
00014165(4): ADD RSP,0x28
00014169(1): RET
00014170(4): SUB RSP,0x8
00014174(2): PUSH 0x0
00014176(4): PUSH qword ptr [RSP + 0x28]
0001417a(4): PUSH qword ptr [RSP + 0x28]
0001417e(4): PUSH qword ptr [RSP + 0x28]
00014182(5): CALL 0x00013d60
00014187(4): ADD RSP,0x28
0001418b(1): RET
00014190(3): TEST RDX,RDX
00014193(2): JNZ 0x000141b8
00014195(4): AND byte ptr [RDI + 0x38],0xf9
00014199(7): MOV qword ptr [RSI],0x0
000141a0(8): MOV qword ptr [RSI + 0x10],0x0
000141a8(8): MOV qword ptr [RSI + 0x8],0x0
000141b0(1): RET
000141b8(4): MOVZX EAX,byte ptr [RDI + 0x38]
000141bc(3): AND EAX,0xfffffff9
000141bf(3): OR EAX,0x2
000141c2(3): MOV byte ptr [RDI + 0x38],AL
000141c5(3): MOV qword ptr [RSI],RDX
000141c8(4): MOV qword ptr [RSI + 0x8],RCX
000141cc(4): MOV qword ptr [RSI + 0x10],R8
000141d0(1): RET
000141e0(2): PUSH R12
000141e2(1): PUSH RBP
000141e3(3): MOV RBP,RDI
000141e6(1): PUSH RBX
000141e7(5): CALL 0x00001930
000141ec(3): MOV EBX,dword ptr [RBP]
000141ef(3): MOV RDI,RBP
000141f2(3): MOV R12,RAX
000141f5(5): CALL 0x00005e20
000141fa(3): AND EBX,0x20
000141fd(2): TEST EBX,EBX
000141ff(2): JNZ 0x00014218
00014201(2): TEST EAX,EAX
00014203(2): JZ 0x0001420f
00014205(3): TEST R12,R12
00014208(5): MOV EAX,0xffffffff
0001420d(2): JZ 0x00014248
0001420f(1): POP RBX
00014210(1): POP RBP
00014211(2): POP R12
00014213(1): RET
00014218(2): TEST EAX,EAX
0001421a(2): JNZ 0x00014238
0001421c(5): CALL 0x000018f0
00014221(6): MOV dword ptr [RAX],0x0
00014227(5): MOV EAX,0xffffffff
0001422c(1): POP RBX
0001422d(1): POP RBP
0001422e(2): POP R12
00014230(1): RET
00014238(1): POP RBX
00014239(5): MOV EAX,0xffffffff
0001423e(1): POP RBP
0001423f(2): POP R12
00014241(1): RET
00014248(5): CALL 0x000018f0
0001424d(3): CMP dword ptr [RAX],0x9
00014250(1): POP RBX
00014251(1): POP RBP
00014252(2): POP R12
00014254(3): SETNZ AL
00014257(3): MOVZX EAX,AL
0001425a(2): NEG EAX
0001425c(1): RET
00014260(4): SUB RSP,0x8
00014264(2): XOR ESI,ESI
00014266(5): CALL 0x00001b70
0001426b(3): MOV RDX,RAX
0001426e(5): MOV EAX,0x1
00014273(3): TEST RDX,RDX
00014276(2): JZ 0x00014295
00014278(7): LEA RDI,[0x160b0]
0001427f(5): MOV ECX,0x2
00014284(3): MOV RSI,RDX
00014287(2): CMPSB.REPE RDI,RSI
00014289(3): SETA CL
0001428c(3): SBB CL,0x0
0001428f(2): XOR EAX,EAX
00014291(2): TEST CL,CL
00014293(2): JNZ 0x000142a0
00014295(4): ADD RSP,0x8
00014299(1): RET
000142a0(7): LEA RDI,[0x160b2]
000142a7(5): MOV ECX,0x6
000142ac(3): MOV RSI,RDX
000142af(2): CMPSB.REPE RDI,RSI
000142b1(3): SETA AL
000142b4(2): SBB AL,0x0
000142b6(2): TEST AL,AL
000142b8(3): SETNZ AL
000142bb(4): ADD RSP,0x8
000142bf(1): RET
000142c0(4): SUB RSP,0x8
000142c4(5): MOV EDI,0xe
000142c9(5): CALL 0x00001b30
000142ce(3): TEST RAX,RAX
000142d1(2): JZ 0x000142f0
000142d3(3): CMP byte ptr [RAX],0x0
000142d6(7): LEA RDX,[0x160b8]
000142dd(4): CMOVZ RAX,RDX
000142e1(4): ADD RSP,0x8
000142e5(1): RET
000142f0(7): LEA RAX,[0x160b8]
000142f7(4): ADD RSP,0x8
000142fb(1): RET
00014300(2): PUSH R15
00014302(2): PUSH R14
00014304(3): MOV R15,RDX
00014307(2): PUSH R13
00014309(2): PUSH R12
0001430b(7): LEA R12,[0x2189b0]
00014312(1): PUSH RBP
00014313(7): LEA RBP,[0x2189b8]
0001431a(1): PUSH RBX
0001431b(3): MOV R13D,EDI
0001431e(3): MOV R14,RSI
00014321(3): SUB RBP,R12
00014324(4): SUB RSP,0x8
00014328(4): SAR RBP,0x3
0001432c(5): CALL 0x00001888
00014331(3): TEST RBP,RBP
00014334(2): JZ 0x00014356
00014336(2): XOR EBX,EBX
00014338(8): NOP dword ptr [RAX + RAX*0x1]
00014340(3): MOV RDX,R15
00014343(3): MOV RSI,R14
00014346(3): MOV EDI,R13D
00014349(4): CALL qword ptr [R12 + RBX*0x8]
0001434d(4): ADD RBX,0x1
00014351(3): CMP RBP,RBX
00014354(2): JNZ 0x00014340
00014356(4): ADD RSP,0x8
0001435a(1): POP RBX
0001435b(1): POP RBP
0001435c(2): POP R12
0001435e(2): POP R13
00014360(2): POP R14
00014362(2): POP R15
00014364(1): RET
00014370(2): RET
00014380(7): MOV RDX,qword ptr [0x00219008]
00014387(2): XOR ESI,ESI
00014389(5): JMP 0x00001c00
00014390(4): SUB RSP,0x8
00014394(4): ADD RSP,0x8
00014398(1): RET

