00001568(4): SUB RSP,0x8
0000156c(7): MOV RAX,qword ptr [0x0020afe0]
00001573(3): TEST RAX,RAX
00001576(2): JZ 0x0000157a
00001578(2): CALL RAX
0000157a(4): ADD RSP,0x8
0000157e(1): RET
00001580(6): PUSH qword ptr [0x0020ae30]
00001586(6): JMP qword ptr [0x0020ae38]
00001590(6): JMP qword ptr [0x0020ae40]
00001596(5): PUSH 0x0
0000159b(5): JMP 0x00001580
000015a0(6): JMP qword ptr [0x0020ae48]
000015a6(5): PUSH 0x1
000015ab(5): JMP 0x00001580
000015b0(6): JMP qword ptr [0x0020ae50]
000015b6(5): PUSH 0x2
000015bb(5): JMP 0x00001580
000015c0(6): JMP qword ptr [0x0020ae58]
000015c6(5): PUSH 0x3
000015cb(5): JMP 0x00001580
000015d0(6): JMP qword ptr [0x0020ae60]
000015d6(5): PUSH 0x4
000015db(5): JMP 0x00001580
000015e0(6): JMP qword ptr [0x0020ae68]
000015e6(5): PUSH 0x5
000015eb(5): JMP 0x00001580
000015f0(6): JMP qword ptr [0x0020ae70]
000015f6(5): PUSH 0x6
000015fb(5): JMP 0x00001580
00001600(6): JMP qword ptr [0x0020ae78]
00001606(5): PUSH 0x7
0000160b(5): JMP 0x00001580
00001610(6): JMP qword ptr [0x0020ae80]
00001616(5): PUSH 0x8
0000161b(5): JMP 0x00001580
00001620(6): JMP qword ptr [0x0020ae88]
00001626(5): PUSH 0x9
0000162b(5): JMP 0x00001580
00001630(6): JMP qword ptr [0x0020ae90]
00001636(5): PUSH 0xa
0000163b(5): JMP 0x00001580
00001640(6): JMP qword ptr [0x0020ae98]
00001646(5): PUSH 0xb
0000164b(5): JMP 0x00001580
00001650(6): JMP qword ptr [0x0020aea0]
00001656(5): PUSH 0xc
0000165b(5): JMP 0x00001580
00001660(6): JMP qword ptr [0x0020aea8]
00001666(5): PUSH 0xd
0000166b(5): JMP 0x00001580
00001670(6): JMP qword ptr [0x0020aeb0]
00001676(5): PUSH 0xe
0000167b(5): JMP 0x00001580
00001680(6): JMP qword ptr [0x0020aeb8]
00001686(5): PUSH 0xf
0000168b(5): JMP 0x00001580
00001690(6): JMP qword ptr [0x0020aec0]
00001696(5): PUSH 0x10
0000169b(5): JMP 0x00001580
000016a0(6): JMP qword ptr [0x0020aec8]
000016a6(5): PUSH 0x11
000016ab(5): JMP 0x00001580
000016b0(6): JMP qword ptr [0x0020aed0]
000016b6(5): PUSH 0x12
000016bb(5): JMP 0x00001580
000016c0(6): JMP qword ptr [0x0020aed8]
000016c6(5): PUSH 0x13
000016cb(5): JMP 0x00001580
000016d0(6): JMP qword ptr [0x0020aee0]
000016d6(5): PUSH 0x14
000016db(5): JMP 0x00001580
000016e0(6): JMP qword ptr [0x0020aee8]
000016e6(5): PUSH 0x15
000016eb(5): JMP 0x00001580
000016f0(6): JMP qword ptr [0x0020aef0]
000016f6(5): PUSH 0x16
000016fb(5): JMP 0x00001580
00001700(6): JMP qword ptr [0x0020aef8]
00001706(5): PUSH 0x17
0000170b(5): JMP 0x00001580
00001710(6): JMP qword ptr [0x0020af00]
00001716(5): PUSH 0x18
0000171b(5): JMP 0x00001580
00001720(6): JMP qword ptr [0x0020af08]
00001726(5): PUSH 0x19
0000172b(5): JMP 0x00001580
00001730(6): JMP qword ptr [0x0020af10]
00001736(5): PUSH 0x1a
0000173b(5): JMP 0x00001580
00001740(6): JMP qword ptr [0x0020af18]
00001746(5): PUSH 0x1b
0000174b(5): JMP 0x00001580
00001750(6): JMP qword ptr [0x0020af20]
00001756(5): PUSH 0x1c
0000175b(5): JMP 0x00001580
00001760(6): JMP qword ptr [0x0020af28]
00001766(5): PUSH 0x1d
0000176b(5): JMP 0x00001580
00001770(6): JMP qword ptr [0x0020af30]
00001776(5): PUSH 0x1e
0000177b(5): JMP 0x00001580
00001780(6): JMP qword ptr [0x0020af38]
00001786(5): PUSH 0x1f
0000178b(5): JMP 0x00001580
00001790(6): JMP qword ptr [0x0020af40]
00001796(5): PUSH 0x20
0000179b(5): JMP 0x00001580
000017a0(6): JMP qword ptr [0x0020af48]
000017a6(5): PUSH 0x21
000017ab(5): JMP 0x00001580
000017b0(6): JMP qword ptr [0x0020af50]
000017b6(5): PUSH 0x22
000017bb(5): JMP 0x00001580
000017c0(6): JMP qword ptr [0x0020af58]
000017c6(5): PUSH 0x23
000017cb(5): JMP 0x00001580
000017d0(6): JMP qword ptr [0x0020af60]
000017d6(5): PUSH 0x24
000017db(5): JMP 0x00001580
000017e0(6): JMP qword ptr [0x0020af68]
000017e6(5): PUSH 0x25
000017eb(5): JMP 0x00001580
000017f0(6): JMP qword ptr [0x0020af70]
000017f6(5): PUSH 0x26
000017fb(5): JMP 0x00001580
00001800(6): JMP qword ptr [0x0020af78]
00001806(5): PUSH 0x27
0000180b(5): JMP 0x00001580
00001810(6): JMP qword ptr [0x0020af80]
00001816(5): PUSH 0x28
0000181b(5): JMP 0x00001580
00001820(6): JMP qword ptr [0x0020af88]
00001826(5): PUSH 0x29
0000182b(5): JMP 0x00001580
00001830(6): JMP qword ptr [0x0020af90]
00001836(5): PUSH 0x2a
0000183b(5): JMP 0x00001580
00001840(6): JMP qword ptr [0x0020af98]
00001846(5): PUSH 0x2b
0000184b(5): JMP 0x00001580
00001850(6): JMP qword ptr [0x0020afa0]
00001856(5): PUSH 0x2c
0000185b(5): JMP 0x00001580
00001860(6): JMP qword ptr [0x0020afa8]
00001866(5): PUSH 0x2d
0000186b(5): JMP 0x00001580
00001870(6): JMP qword ptr [0x0020afb0]
00001876(5): PUSH 0x2e
0000187b(5): JMP 0x00001580
00001880(6): JMP qword ptr [0x0020afb8]
00001886(5): PUSH 0x2f
0000188b(5): JMP 0x00001580
00001890(6): JMP qword ptr [0x0020afc0]
00001896(5): PUSH 0x30
0000189b(5): JMP 0x00001580
000018a0(6): JMP qword ptr [0x0020afc8]
000018a6(5): PUSH 0x31
000018ab(5): JMP 0x00001580
000018b0(6): JMP qword ptr [0x0020aff0]
000018c0(2): PUSH R15
000018c2(2): PUSH R14
000018c4(3): XOR R14D,R14D
000018c7(2): PUSH R13
000018c9(2): PUSH R12
000018cb(6): MOV R13D,0x4c
000018d1(1): PUSH RBP
000018d2(1): PUSH RBX
000018d3(2): MOV EBP,EDI
000018d5(3): MOV RBX,RSI
000018d8(3): XOR R12D,R12D
000018db(7): SUB RSP,0x88
000018e2(3): MOV RDI,qword ptr [RSI]
000018e5(9): MOV RAX,qword ptr FS:[0x28]
000018ee(5): MOV qword ptr [RSP + 0x78],RAX
000018f3(2): XOR EAX,EAX
000018f5(5): CALL 0x00004470
000018fa(7): LEA RSI,[0x85c1]
00001901(5): MOV EDI,0x6
00001906(5): CALL 0x000017e0
0000190b(7): LEA RSI,[0x741d]
00001912(7): LEA RDI,[0x73f4]
00001919(5): CALL 0x00001620
0000191e(7): LEA RDI,[0x73f4]
00001925(5): CALL 0x00001600
0000192a(7): LEA RDI,[0x4380]
00001931(5): CALL 0x000072f0
00001936(5): MOV byte ptr [RSP + 0x20],0x0
0000193b(7): LEA RCX,[0x20aa20]
00001942(7): LEA RDX,[0x7464]
00001949(3): XOR R8D,R8D
0000194c(3): MOV RSI,RBX
0000194f(2): MOV EDI,EBP
00001951(5): CALL 0x00001670
00001956(3): CMP EAX,-0x1
00001959(6): JZ 0x00001a4d
0000195f(3): CMP EAX,0x69
00001962(6): JZ 0x00001a00
00001968(2): JG 0x000019d0
0000196a(5): CMP EAX,0xffffff7e
0000196f(6): JZ 0x000022dd
00001975(3): CMP EAX,0x64
00001978(2): JZ 0x000019f0
0000197a(5): CMP EAX,0xffffff7d
0000197f(2): JZ 0x00001990
00001981(5): MOV EDI,0x1
00001986(5): CALL 0x00002f60
0000198b(5): NOP dword ptr [RAX + RAX*0x1]
00001990(4): SUB RSP,0x8
00001994(7): MOV RDI,qword ptr [0x0020b088]
0000199b(7): MOV RCX,qword ptr [0x0020b010]
000019a2(2): PUSH 0x0
000019a4(7): LEA R9,[0x7447]
000019ab(7): LEA R8,[0x7454]
000019b2(7): LEA RDX,[0x73f0]
000019b9(7): LEA RSI,[0x7355]
000019c0(2): XOR EAX,EAX
000019c2(5): CALL 0x00006660
000019c7(2): XOR EDI,EDI
000019c9(5): CALL 0x00001850
000019d0(3): CMP EAX,0x77
000019d3(2): JZ 0x00001a10
000019d5(2): JL 0x00001981
000019d7(3): LEA EDX,[RAX + -0x80]
000019da(3): CMP EDX,0x7
000019dd(2): JA 0x00001981
000019df(3): MOV R14D,EAX
000019e2(5): JMP 0x0000193b
000019f0(6): MOV R12D,0x1
000019f6(5): JMP 0x0000193b
00001a00(5): MOV byte ptr [RSP + 0x20],0x1
00001a05(5): JMP 0x0000193b
00001a10(7): LEA RSI,[0x7435]
00001a17(5): MOV EDX,0x5
00001a1c(2): XOR EDI,EDI
00001a1e(5): CALL 0x00001630
00001a23(7): MOV RDI,qword ptr [0x0020b0a0]
00001a2a(7): LEA RCX,[0x85c1]
00001a31(3): MOV R8,RAX
00001a34(3): XOR R9D,R9D
00001a37(7): MOV RDX,-0x1
00001a3e(2): XOR ESI,ESI
00001a40(5): CALL 0x00006b50
00001a45(3): MOV R13,RAX
00001a48(5): JMP 0x0000193b
00001a4d(4): ADD R14D,-0x80
00001a51(4): CMP R14D,0x7
00001a55(6): JA 0x000022e4
00001a5b(7): LEA RDX,[0x7c40]
00001a62(4): MOVSXD RAX,dword ptr [RDX + R14*0x4]
00001a66(3): ADD RAX,RDX
00001a69(2): JMP RAX
00001a6b(7): LEA RAX,[0x25f0]
00001a72(7): MOV qword ptr [0x0020b0f0],RAX
00001a79(7): LEA RAX,[0x25e0]
00001a80(7): MOV qword ptr [0x0020b0e8],RAX
00001a87(7): LEA RAX,[0x2650]
00001a8e(7): MOV qword ptr [0x0020b0e0],RAX
00001a95(7): LEA RAX,[0x2750]
00001a9c(7): MOV qword ptr [0x0020b0d8],RAX
00001aa3(7): LEA RAX,[0x2a90]
00001aaa(7): MOV qword ptr [0x0020b0d0],RAX
00001ab1(7): MOVSXD RAX,dword ptr [0x0020b098]
00001ab8(2): MOV EDX,EBP
00001aba(2): SUB EDX,EAX
00001abc(3): SUB EDX,0x1
00001abf(6): JG 0x00002367
00001ac5(2): CMP EAX,EBP
00001ac7(6): JGE 0x00001f73
00001acd(4): MOV RAX,qword ptr [RBX + RAX*0x8]
00001ad1(7): LEA RSI,[0x808a]
00001ad8(3): MOV RDI,RAX
00001adb(5): MOV qword ptr [RSP + 0x38],RAX
00001ae0(5): CALL 0x00001750
00001ae5(2): TEST EAX,EAX
00001ae7(6): JZ 0x00001f7f
00001aed(5): MOV RDI,qword ptr [RSP + 0x38]
00001af2(7): LEA RSI,[0x7490]
00001af9(5): CALL 0x00001830
00001afe(3): TEST RAX,RAX
00001b01(3): MOV RBP,RAX
00001b04(6): JZ 0x00002336
00001b0a(5): MOV ESI,0x2
00001b0f(3): MOV RDI,RBP
00001b12(5): CALL 0x00004440
00001b17(3): TEST R12B,R12B
00001b1a(6): JZ 0x00001f8b
00001b20(7): MOV RAX,qword ptr [0x0020b088]
00001b27(5): MOV EDI,0x1400
00001b2c(5): MOV qword ptr [RSP + 0x28],RAX
00001b31(6): CALL qword ptr [0x0020b0f0]
00001b37(3): MOVSXD RDI,EAX
00001b3a(5): CALL 0x000067c0
00001b3f(5): MOV EDI,0x1400
00001b44(3): MOV R12,RAX
00001b47(5): CALL 0x000067c0
00001b4c(5): MOV qword ptr [RSP + 0x30],RAX
00001b51(5): LEA RAX,[RSP + 0x50]
00001b56(9): MOV qword ptr [RSP + 0x60],0x0
00001b5f(5): MOV qword ptr [RSP + 0x10],RAX
00001b64(3): MOV RDI,RAX
00001b67(6): CALL qword ptr [0x0020b0d8]
00001b6d(5): LEA RAX,[RSP + 0x48]
00001b72(5): MOV qword ptr [RSP + 0x18],RAX
00001b77(9): NOP word ptr [RAX + RAX*0x1]
00001b80(2): XOR EBX,EBX
00001b82(5): MOV qword ptr [RSP + 0x8],RBP
00001b87(2): JMP 0x00001bc6
00001b90(5): MOV RAX,qword ptr [RSP + 0x8]
00001b95(3): ADD RBX,R13
00001b98(3): TEST byte ptr [RAX],0x20
00001b9b(6): JNZ 0x000022b1
00001ba1(5): MOV EDI,0x1400
00001ba6(6): CALL qword ptr [0x0020b0f0]
00001bac(2): CDQE
00001bae(3): CMP RBX,RAX
00001bb1(6): JNC 0x00001e80
00001bb7(5): MOV RAX,qword ptr [RSP + 0x8]
00001bbc(2): MOV EAX,dword ptr [RAX]
00001bbe(2): TEST AL,0x10
00001bc0(6): JNZ 0x00001f30
00001bc6(5): MOV EDI,0x1400
00001bcb(6): CALL qword ptr [0x0020b0f0]
00001bd1(5): MOV RCX,qword ptr [RSP + 0x8]
00001bd6(3): MOVSXD RDX,EAX
00001bd9(4): LEA RDI,[R12 + RBX*0x1]
00001bdd(3): SUB RDX,RBX
00001be0(5): MOV ESI,0x1
00001be5(5): CALL 0x000015f0
00001bea(5): CMP byte ptr [RSP + 0x20],0x0
00001bef(3): MOV R13,RAX
00001bf2(5): MOV qword ptr [RSP + 0x48],RAX
00001bf7(2): JZ 0x00001b90
00001bf9(3): XOR R14D,R14D
00001bfc(4): NOP dword ptr [RAX]
00001c00(3): TEST R13,R13
00001c03(2): JZ 0x00001b90
00001c05(3): CMP R14,R13
00001c08(2): JNC 0x00001b90
00001c0a(4): LEA RBP,[RBX + R14*0x1]
00001c0e(4): LEA R15,[R12 + RBP*0x1]
00001c12(4): MOVSX EDI,byte ptr [R15]
00001c16(6): CALL qword ptr [0x0020b0e8]
00001c1c(2): TEST AL,AL
00001c1e(5): MOV R13,qword ptr [RSP + 0x48]
00001c23(6): JNZ 0x00001e70
00001c29(4): CMP byte ptr [R15],0x3d
00001c2d(6): JZ 0x00001e70
00001c33(4): SUB R13,0x1
00001c37(5): LEA RSI,[R12 + RBP*0x1 + 0x1]
00001c3c(3): MOV RDI,R15
00001c3f(3): MOV RDX,R13
00001c42(5): MOV qword ptr [RSP + 0x48],R13
00001c47(3): SUB RDX,R14
00001c4a(5): CALL 0x00001800
00001c4f(3): TEST R13,R13
00001c52(2): JNZ 0x00001c05
00001c54(5): JMP 0x00001b90
00001c59(7): LEA RAX,[0x25f0]
00001c60(7): MOV qword ptr [0x0020b0f0],RAX
00001c67(7): LEA RAX,[0x25e0]
00001c6e(7): MOV qword ptr [0x0020b0e8],RAX
00001c75(7): LEA RAX,[0x2600]
00001c7c(7): MOV qword ptr [0x0020b0e0],RAX
00001c83(7): LEA RAX,[0x2750]
00001c8a(7): MOV qword ptr [0x0020b0d8],RAX
00001c91(7): LEA RAX,[0x2b20]
00001c98(7): MOV qword ptr [0x0020b0d0],RAX
00001c9f(5): JMP 0x00001ab1
00001ca4(7): LEA RAX,[0x2500]
00001cab(7): MOV qword ptr [0x0020b0f0],RAX
00001cb2(7): LEA RAX,[0x26a0]
00001cb9(7): MOV qword ptr [0x0020b0e8],RAX
00001cc0(7): LEA RAX,[0x26d0]
00001cc7(7): MOV qword ptr [0x0020b0e0],RAX
00001cce(7): LEA RAX,[0x2880]
00001cd5(7): MOV qword ptr [0x0020b0d8],RAX
00001cdc(7): LEA RAX,[0x2d90]
00001ce3(7): MOV qword ptr [0x0020b0d0],RAX
00001cea(5): JMP 0x00001ab1
00001cef(7): LEA RAX,[0x2500]
00001cf6(7): MOV qword ptr [0x0020b0f0],RAX
00001cfd(7): LEA RAX,[0x3fc0]
00001d04(7): MOV qword ptr [0x0020b0e8],RAX
00001d0b(7): LEA RAX,[0x3d70]
00001d12(7): MOV qword ptr [0x0020b0e0],RAX
00001d19(7): LEA RAX,[0x28b0]
00001d20(7): MOV qword ptr [0x0020b0d8],RAX
00001d27(7): LEA RAX,[0x2860]
00001d2e(7): MOV qword ptr [0x0020b0d0],RAX
00001d35(5): JMP 0x00001ab1
00001d3a(7): LEA RAX,[0x25d0]
00001d41(7): MOV qword ptr [0x0020b0f0],RAX
00001d48(7): LEA RAX,[0x27b0]
00001d4f(7): MOV qword ptr [0x0020b0e8],RAX
00001d56(7): LEA RAX,[0x2bd0]
00001d5d(7): MOV qword ptr [0x0020b0e0],RAX
00001d64(7): LEA RAX,[0x2720]
00001d6b(7): MOV qword ptr [0x0020b0d8],RAX
00001d72(7): LEA RAX,[0x2970]
00001d79(7): MOV qword ptr [0x0020b0d0],RAX
00001d80(5): JMP 0x00001ab1
00001d85(7): LEA RAX,[0x2520]
00001d8c(7): MOV qword ptr [0x0020b0f0],RAX
00001d93(7): LEA RAX,[0x2540]
00001d9a(7): MOV qword ptr [0x0020b0e8],RAX
00001da1(7): LEA RAX,[0x2d10]
00001da8(7): MOV qword ptr [0x0020b0e0],RAX
00001daf(7): LEA RAX,[0x2820]
00001db6(7): MOV qword ptr [0x0020b0d8],RAX
00001dbd(7): LEA RAX,[0x2e80]
00001dc4(7): MOV qword ptr [0x0020b0d0],RAX
00001dcb(5): JMP 0x00001ab1
00001dd0(7): LEA RAX,[0x2520]
00001dd7(7): MOV qword ptr [0x0020b0f0],RAX
00001dde(7): LEA RAX,[0x38c0]
00001de5(7): MOV qword ptr [0x0020b0e8],RAX
00001dec(7): LEA RAX,[0x3610]
00001df3(7): MOV qword ptr [0x0020b0e0],RAX
00001dfa(7): LEA RAX,[0x2850]
00001e01(7): MOV qword ptr [0x0020b0d8],RAX
00001e08(7): LEA RAX,[0x2800]
00001e0f(7): MOV qword ptr [0x0020b0d0],RAX
00001e16(5): JMP 0x00001ab1
00001e1b(7): LEA RAX,[0x2580]
00001e22(7): MOV qword ptr [0x0020b0f0],RAX
00001e29(7): LEA RAX,[0x2560]
00001e30(7): MOV qword ptr [0x0020b0e8],RAX
00001e37(7): LEA RAX,[0x2590]
00001e3e(7): MOV qword ptr [0x0020b0e0],RAX
00001e45(7): LEA RAX,[0x2780]
00001e4c(7): MOV qword ptr [0x0020b0d8],RAX
00001e53(7): LEA RAX,[0x28c0]
00001e5a(7): MOV qword ptr [0x0020b0d0],RAX
00001e61(5): JMP 0x00001ab1
00001e70(4): ADD R14,0x1
00001e74(5): JMP 0x00001c00
00001e80(5): MOV RBP,qword ptr [RSP + 0x8]
00001e85(3): MOV EAX,dword ptr [RBP]
00001e88(3): XOR R15D,R15D
00001e8b(5): MOV qword ptr [RSP + 0x8],RBX
00001e90(5): MOV R13,qword ptr [RSP + 0x30]
00001e95(3): MOV EBX,R15D
00001e98(5): MOV R15,qword ptr [RSP + 0x28]
00001e9d(2): JMP 0x00001f01
00001ea0(2): TEST EBX,EBX
00001ea2(6): JNZ 0x00001b80
00001ea8(7): MOV RAX,qword ptr [0x0020b0d0]
00001eaf(5): MOV RDX,qword ptr [RSP + 0x8]
00001eb4(9): MOV qword ptr [RSP + 0x48],0x1400
00001ebd(5): MOV R8,qword ptr [RSP + 0x18]
00001ec2(3): MOV RCX,R13
00001ec5(3): MOV RSI,R12
00001ec8(5): MOV RDI,qword ptr [RSP + 0x10]
00001ecd(2): CALL RAX
00001ecf(5): MOV RDX,qword ptr [RSP + 0x48]
00001ed4(3): MOV RCX,R15
00001ed7(5): MOV ESI,0x1
00001edc(3): MOV RDI,R13
00001edf(3): MOV R14D,EAX
00001ee2(5): CALL 0x000017c0
00001ee7(5): CMP RAX,qword ptr [RSP + 0x48]
00001eec(6): JC 0x00002285
00001ef2(3): TEST R14B,R14B
00001ef5(6): JZ 0x00002261
00001efb(3): MOV EAX,dword ptr [RBP]
00001efe(3): ADD EBX,0x1
00001f01(2): TEST AL,0x10
00001f03(2): JZ 0x00001ea0
00001f05(3): CMP EBX,0x1
00001f08(2): JA 0x00001f3a
00001f0a(2): JNZ 0x00001ea8
00001f0c(4): MOV EAX,dword ptr [RSP + 0x50]
00001f10(2): TEST EAX,EAX
00001f12(2): JZ 0x00001f3a
00001f14(9): MOV qword ptr [RSP + 0x48],0x1400
00001f1d(7): MOV RAX,qword ptr [0x0020b0d0]
00001f24(2): XOR EDX,EDX
00001f26(2): JMP 0x00001ebd
00001f30(5): MOV RBP,qword ptr [RSP + 0x8]
00001f35(5): JMP 0x00001e88
00001f3a(3): MOV RDI,RBP
00001f3d(5): CALL 0x00006fa0
00001f42(3): ADD EAX,0x1
00001f45(6): JZ 0x000021d1
00001f4b(2): XOR EAX,EAX
00001f4d(5): MOV RCX,qword ptr [RSP + 0x78]
00001f52(9): XOR RCX,qword ptr FS:[0x28]
00001f5b(6): JNZ 0x000023a2
00001f61(7): ADD RSP,0x88
00001f68(1): POP RBX
00001f69(1): POP RBP
00001f6a(2): POP R12
00001f6c(2): POP R13
00001f6e(2): POP R14
00001f70(2): POP R15
00001f72(1): RET
00001f73(7): LEA RAX,[0x808a]
00001f7a(5): MOV qword ptr [RSP + 0x38],RAX
00001f7f(7): MOV RBP,qword ptr [0x0020b090]
00001f86(5): JMP 0x00001b0a
00001f8b(5): MOV EDI,0x7800
00001f90(7): MOV R12,qword ptr [0x0020b088]
00001f97(2): XOR EBX,EBX
00001f99(5): CALL 0x000067c0
00001f9e(5): MOV EDI,0x7800
00001fa3(5): MOV qword ptr [RSP + 0x10],RAX
00001fa8(6): CALL qword ptr [0x0020b0f0]
00001fae(3): MOVSXD RDI,EAX
00001fb1(5): CALL 0x000067c0
00001fb6(5): MOV qword ptr [RSP + 0x18],R13
00001fbb(5): MOV qword ptr [RSP + 0x8],RAX
00001fc0(3): XOR R15D,R15D
00001fc3(5): MOV R13,qword ptr [RSP + 0x10]
00001fc8(2): JMP 0x00001fd9
00001fd0(7): CMP R15,0x77ff
00001fd7(2): JA 0x00002006
00001fd9(5): LEA RDI,[R13 + R15*0x1]
00001fde(5): MOV EDX,0x7800
00001fe3(3): MOV RCX,RBP
00001fe6(3): SUB RDX,R15
00001fe9(5): MOV ESI,0x1
00001fee(5): CALL 0x000015f0
00001ff3(3): ADD R15,RAX
00001ff6(3): MOV EAX,dword ptr [RBP]
00001ff9(2): TEST AL,0x30
00001ffb(2): JZ 0x00001fd0
00001ffd(3): TEST R15,R15
00002000(6): JZ 0x000020c0
00002006(7): MOV R13,qword ptr [0x0020b0e0]
0000200d(3): MOV EDI,R15D
00002010(6): CALL qword ptr [0x0020b0f0]
00002016(5): MOV RDX,qword ptr [RSP + 0x8]
0000201b(3): MOVSXD RCX,EAX
0000201e(3): MOV RSI,R15
00002021(5): MOV RDI,qword ptr [RSP + 0x10]
00002026(3): CALL R13
00002029(3): MOV EDI,R15D
0000202c(6): CALL qword ptr [0x0020b0f0]
00002032(6): CMP qword ptr [RSP + 0x18],0x0
00002038(3): MOVSXD R13,EAX
0000203b(6): JZ 0x00002141
00002041(3): XOR R14D,R14D
00002044(3): TEST R13,R13
00002047(2): JZ 0x000020ac
00002049(5): MOV qword ptr [RSP + 0x20],RBP
0000204e(3): MOV RBP,RBX
00002051(5): MOV RBX,qword ptr [RSP + 0x18]
00002056(5): MOV qword ptr [RSP + 0x28],R15
0000205b(3): MOV R15,R13
0000205e(2): NOP
00002060(3): MOV R13,RBX
00002063(3): MOV RAX,R15
00002066(3): SUB R13,RBP
00002069(3): SUB RAX,R14
0000206c(3): CMP R13,RAX
0000206f(4): CMOVA R13,RAX
00002073(3): TEST R13,R13
00002076(6): JNZ 0x00002110
0000207c(5): MOV RAX,qword ptr [R12 + 0x28]
00002081(5): CMP RAX,qword ptr [R12 + 0x30]
00002086(6): JNC 0x0000218f
0000208c(4): LEA RDX,[RAX + 0x1]
00002090(5): MOV qword ptr [R12 + 0x28],RDX
00002095(3): MOV byte ptr [RAX],0xa
00002098(2): XOR EBP,EBP
0000209a(3): CMP R15,R14
0000209d(2): JA 0x00002060
0000209f(3): MOV RBX,RBP
000020a2(5): MOV R15,qword ptr [RSP + 0x28]
000020a7(5): MOV RBP,qword ptr [RSP + 0x20]
000020ac(3): MOV EAX,dword ptr [RBP]
000020af(2): TEST AL,0x30
000020b1(2): JNZ 0x000020c0
000020b3(7): CMP R15,0x7800
000020ba(6): JZ 0x00001fc0
000020c0(5): MOV R13,qword ptr [RSP + 0x18]
000020c5(3): TEST R13,R13
000020c8(2): JZ 0x000020d3
000020ca(3): TEST RBX,RBX
000020cd(6): JNZ 0x00002214
000020d3(2): TEST AL,0x20
000020d5(6): JZ 0x00001f3a
000020db(7): LEA RSI,[0x7493]
000020e2(5): MOV EDX,0x5
000020e7(2): XOR EDI,EDI
000020e9(5): CALL 0x00001630
000020ee(3): MOV RBX,RAX
000020f1(5): CALL 0x000015b0
000020f6(2): MOV ESI,dword ptr [RAX]
000020f8(3): MOV RDX,RBX
000020fb(5): MOV EDI,0x1
00002100(2): XOR EAX,EAX
00002102(5): CALL 0x00001810
00002107(9): NOP word ptr [RAX + RAX*0x1]
00002110(5): MOV RAX,qword ptr [RSP + 0x8]
00002115(7): MOV RCX,qword ptr [0x0020b088]
0000211c(3): MOV RDX,R13
0000211f(5): MOV ESI,0x1
00002124(4): LEA RDI,[RAX + R14*0x1]
00002128(5): CALL 0x000017c0
0000212d(3): CMP R13,RAX
00002130(6): JA 0x0000230a
00002136(3): ADD RBP,R13
00002139(3): ADD R14,R13
0000213c(5): JMP 0x0000209a
00002141(7): MOV RCX,qword ptr [0x0020b088]
00002148(5): MOV RDI,qword ptr [RSP + 0x8]
0000214d(3): MOV RDX,R13
00002150(5): MOV ESI,0x1
00002155(5): CALL 0x000017c0
0000215a(3): CMP R13,RAX
0000215d(6): JBE 0x000020ac
00002163(7): LEA RSI,[0x749e]
0000216a(5): MOV EDX,0x5
0000216f(2): XOR EDI,EDI
00002171(5): CALL 0x00001630
00002176(3): MOV RBX,RAX
00002179(5): CALL 0x000015b0
0000217e(2): MOV ESI,dword ptr [RAX]
00002180(3): MOV RDX,RBX
00002183(5): MOV EDI,0x1
00002188(2): XOR EAX,EAX
0000218a(5): CALL 0x00001810
0000218f(5): MOV ESI,0xa
00002194(3): MOV RDI,R12
00002197(5): CALL 0x000016a0
0000219c(3): ADD EAX,0x1
0000219f(6): JNZ 0x00002098
000021a5(7): LEA RSI,[0x749e]
000021ac(5): MOV EDX,0x5
000021b1(2): XOR EDI,EDI
000021b3(5): CALL 0x00001630
000021b8(3): MOV RBX,RAX
000021bb(5): CALL 0x000015b0
000021c0(2): MOV ESI,dword ptr [RAX]
000021c2(3): MOV RDX,RBX
000021c5(5): MOV EDI,0x1
000021ca(2): XOR EAX,EAX
000021cc(5): CALL 0x00001810
000021d1(5): MOV RDI,qword ptr [RSP + 0x38]
000021d6(7): LEA RSI,[0x808a]
000021dd(5): CALL 0x00001750
000021e2(2): MOV EBP,EAX
000021e4(5): CALL 0x000015b0
000021e9(2): TEST EBP,EBP
000021eb(3): MOV RBX,RAX
000021ee(2): JNZ 0x00002238
000021f0(7): LEA RSI,[0x74b8]
000021f7(5): MOV EDX,0x5
000021fc(2): XOR EDI,EDI
000021fe(5): CALL 0x00001630
00002203(2): MOV ESI,dword ptr [RBX]
00002205(3): MOV RDX,RAX
00002208(5): MOV EDI,0x1
0000220d(2): XOR EAX,EAX
0000220f(5): CALL 0x00001810
00002214(5): MOV RAX,qword ptr [R12 + 0x28]
00002219(5): CMP RAX,qword ptr [R12 + 0x30]
0000221e(6): JNC 0x000023a7
00002224(4): LEA RDX,[RAX + 0x1]
00002228(5): MOV qword ptr [R12 + 0x28],RDX
0000222d(3): MOV byte ptr [RAX],0xa
00002230(3): MOV EAX,dword ptr [RBP]
00002233(5): JMP 0x000020d3
00002238(5): MOV RDX,qword ptr [RSP + 0x38]
0000223d(5): MOV ESI,0x3
00002242(2): XOR EDI,EDI
00002244(5): CALL 0x00005fb0
00002249(2): MOV ESI,dword ptr [RBX]
0000224b(7): LEA RDX,[0x8044]
00002252(3): MOV RCX,RAX
00002255(5): MOV EDI,0x1
0000225a(2): XOR EAX,EAX
0000225c(5): CALL 0x00001810
00002261(7): LEA RSI,[0x74aa]
00002268(5): MOV EDX,0x5
0000226d(2): XOR EDI,EDI
0000226f(5): CALL 0x00001630
00002274(2): XOR ESI,ESI
00002276(3): MOV RDX,RAX
00002279(5): MOV EDI,0x1
0000227e(2): XOR EAX,EAX
00002280(5): CALL 0x00001810
00002285(7): LEA RSI,[0x749e]
0000228c(5): MOV EDX,0x5
00002291(2): XOR EDI,EDI
00002293(5): CALL 0x00001630
00002298(3): MOV RBX,RAX
0000229b(5): CALL 0x000015b0
000022a0(2): MOV ESI,dword ptr [RAX]
000022a2(3): MOV RDX,RBX
000022a5(5): MOV EDI,0x1
000022aa(2): XOR EAX,EAX
000022ac(5): CALL 0x00001810
000022b1(7): LEA RSI,[0x7493]
000022b8(5): MOV EDX,0x5
000022bd(2): XOR EDI,EDI
000022bf(5): CALL 0x00001630
000022c4(3): MOV RBX,RAX
000022c7(5): CALL 0x000015b0
000022cc(2): MOV ESI,dword ptr [RAX]
000022ce(3): MOV RDX,RBX
000022d1(5): MOV EDI,0x1
000022d6(2): XOR EAX,EAX
000022d8(5): CALL 0x00001810
000022dd(2): XOR EDI,EDI
000022df(5): CALL 0x00002f60
000022e4(7): LEA RSI,[0x7469]
000022eb(2): XOR EDI,EDI
000022ed(5): MOV EDX,0x5
000022f2(5): CALL 0x00001630
000022f7(2): XOR ESI,ESI
000022f9(3): MOV RDX,RAX
000022fc(2): XOR EDI,EDI
000022fe(2): XOR EAX,EAX
00002300(5): CALL 0x00001810
00002305(5): JMP 0x00001981
0000230a(7): LEA RSI,[0x749e]
00002311(5): MOV EDX,0x5
00002316(2): XOR EDI,EDI
00002318(5): CALL 0x00001630
0000231d(3): MOV RBX,RAX
00002320(5): CALL 0x000015b0
00002325(2): MOV ESI,dword ptr [RAX]
00002327(3): MOV RDX,RBX
0000232a(5): MOV EDI,0x1
0000232f(2): XOR EAX,EAX
00002331(5): CALL 0x00001810
00002336(5): MOV RDX,qword ptr [RSP + 0x38]
0000233b(5): MOV ESI,0x3
00002340(2): XOR EDI,EDI
00002342(5): CALL 0x00005fb0
00002347(3): MOV RBX,RAX
0000234a(5): CALL 0x000015b0
0000234f(2): MOV ESI,dword ptr [RAX]
00002351(7): LEA RDX,[0x8044]
00002358(3): MOV RCX,RBX
0000235b(5): MOV EDI,0x1
00002360(2): XOR EAX,EAX
00002362(5): CALL 0x00001810
00002367(5): MOV RDI,qword ptr [RBX + RAX*0x8 + 0x8]
0000236c(5): CALL 0x00006180
00002371(7): LEA RSI,[0x747f]
00002378(3): MOV RBX,RAX
0000237b(5): MOV EDX,0x5
00002380(2): XOR EDI,EDI
00002382(5): CALL 0x00001630
00002387(2): XOR EDI,EDI
00002389(3): MOV RDX,RAX
0000238c(3): MOV RCX,RBX
0000238f(2): XOR ESI,ESI
00002391(2): XOR EAX,EAX
00002393(5): CALL 0x00001810
00002398(5): MOV EDI,0x1
0000239d(5): CALL 0x00002f60
000023a2(5): CALL 0x00001660
000023a7(5): MOV ESI,0xa
000023ac(3): MOV RDI,R12
000023af(5): CALL 0x000016a0
000023b4(3): ADD EAX,0x1
000023b7(6): JNZ 0x00002230
000023bd(7): LEA RSI,[0x749e]
000023c4(5): MOV EDX,0x5
000023c9(2): XOR EDI,EDI
000023cb(5): CALL 0x00001630
000023d0(3): MOV RBX,RAX
000023d3(5): CALL 0x000015b0
000023d8(2): MOV ESI,dword ptr [RAX]
000023da(3): MOV RDX,RBX
000023dd(5): MOV EDI,0x1
000023e2(2): XOR EAX,EAX
000023e4(5): CALL 0x00001810
000023e9(7): NOP dword ptr [RAX]
000023f0(2): XOR EBP,EBP
000023f2(3): MOV R9,RDX
000023f5(1): POP RSI
000023f6(3): MOV RDX,RSP
000023f9(4): AND RSP,-0x10
000023fd(1): PUSH RAX
000023fe(1): PUSH RSP
000023ff(7): LEA R8,[0x72e0]
00002406(7): LEA RCX,[0x7270]
0000240d(7): LEA RDI,[0x18c0]
00002414(6): CALL qword ptr [0x0020afd8]
0000241a(1): HLT
00002420(7): LEA RDI,[0x20b080]
00002427(1): PUSH RBP
00002428(7): LEA RAX,[0x20b080]
0000242f(3): CMP RAX,RDI
00002432(3): MOV RBP,RSP
00002435(2): JZ 0x00002450
00002437(7): MOV RAX,qword ptr [0x0020afd0]
0000243e(3): TEST RAX,RAX
00002441(2): JZ 0x00002450
00002443(1): POP RBP
00002444(2): JMP RAX
00002450(1): POP RBP
00002451(1): RET
00002460(7): LEA RDI,[0x20b080]
00002467(7): LEA RSI,[0x20b080]
0000246e(1): PUSH RBP
0000246f(3): SUB RSI,RDI
00002472(3): MOV RBP,RSP
00002475(4): SAR RSI,0x3
00002479(3): MOV RAX,RSI
0000247c(4): SHR RAX,0x3f
00002480(3): ADD RSI,RAX
00002483(3): SAR RSI,1
00002486(2): JZ 0x000024a0
00002488(7): MOV RAX,qword ptr [0x0020afe8]
0000248f(3): TEST RAX,RAX
00002492(2): JZ 0x000024a0
00002494(1): POP RBP
00002495(2): JMP RAX
000024a0(1): POP RBP
000024a1(1): RET
000024b0(7): CMP byte ptr [0x0020b0c8],0x0
000024b7(2): JNZ 0x000024e8
000024b9(8): CMP qword ptr [0x0020aff0],0x0
000024c1(1): PUSH RBP
000024c2(3): MOV RBP,RSP
000024c5(2): JZ 0x000024d3
000024c7(7): MOV RDI,qword ptr [0x0020b008]
000024ce(5): CALL 0x000018b0
000024d3(5): CALL 0x00002420
000024d8(7): MOV byte ptr [0x0020b0c8],0x1
000024df(1): POP RBP
000024e0(1): RET
000024e8(2): RET
000024f0(1): PUSH RBP
000024f1(3): MOV RBP,RSP
000024f4(1): POP RBP
000024f5(5): JMP 0x00002460
00002500(3): ADD EDI,0x2
00002503(5): MOV EDX,0x55555556
00002508(2): MOV EAX,EDI
0000250a(3): SAR EDI,0x1f
0000250d(2): IMUL EDX
0000250f(2): SUB EDX,EDI
00002511(7): LEA EAX,[RDX*0x4]
00002518(1): RET
00002520(3): ADD EDI,0x4
00002523(5): MOV EDX,0x66666667
00002528(2): MOV EAX,EDI
0000252a(3): SAR EDI,0x1f
0000252d(2): IMUL EDX
0000252f(2): SAR EDX,1
00002531(2): SUB EDX,EDI
00002533(7): LEA EAX,[RDX*0x8]
0000253a(1): RET
00002540(3): LEA EAX,[RDI + -0x30]
00002543(2): CMP AL,0x9
00002545(3): SETBE AL
00002548(3): SUB EDI,0x41
0000254b(4): CMP DIL,0x15
0000254f(3): SETBE DL
00002552(2): OR EAX,EDX
00002554(1): RET
00002560(3): LEA EAX,[RDI + -0x30]
00002563(2): CMP AL,0x9
00002565(3): SETBE AL
00002568(3): SUB EDI,0x41
0000256b(4): CMP DIL,0x5
0000256f(3): SETBE DL
00002572(2): OR EAX,EDX
00002574(1): RET
00002580(3): LEA EAX,[RDI + RDI*0x1]
00002583(1): RET
00002590(3): TEST RSI,RSI
00002593(2): JZ 0x000025cb
00002595(7): LEA R8,[0x7d40]
0000259c(3): ADD RSI,RDI
0000259f(1): NOP
000025a0(3): MOVZX EAX,byte ptr [RDI]
000025a3(4): ADD RDI,0x1
000025a7(4): ADD RDX,0x2
000025ab(2): MOV ECX,EAX
000025ad(3): AND EAX,0xf
000025b0(3): SHR CL,0x4
000025b3(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
000025b8(3): AND ECX,0xf
000025bb(5): MOVZX ECX,byte ptr [R8 + RCX*0x1]
000025c0(3): MOV byte ptr [RDX + -0x2],CL
000025c3(3): CMP RDI,RSI
000025c6(3): MOV byte ptr [RDX + -0x1],AL
000025c9(2): JNZ 0x000025a0
000025cb(2): RET
000025d0(3): LEA EDX,[RDI + RDI*0x4]
000025d3(3): LEA EAX,[RDX + 0x3]
000025d6(2): TEST EDX,EDX
000025d8(3): CMOVNS EAX,EDX
000025db(3): SAR EAX,0x2
000025de(1): RET
000025e0(3): SUB EDI,0x30
000025e3(4): CMP DIL,0x1
000025e7(3): SETBE AL
000025ea(1): RET
000025f0(7): LEA EAX,[RDI*0x8]
000025f7(1): RET
00002600(3): TEST RSI,RSI
00002603(2): JZ 0x00002642
00002605(4): LEA R8,[RDI + RSI*0x1]
00002609(7): NOP dword ptr [RAX]
00002610(3): MOVZX ECX,byte ptr [RDI]
00002613(4): LEA RSI,[RDX + 0x8]
00002617(9): NOP word ptr [RAX + RAX*0x1]
00002620(2): MOV EAX,ECX
00002622(4): ADD RDX,0x1
00002626(2): ADD ECX,ECX
00002628(3): SHR AL,0x7
0000262b(3): ADD EAX,0x30
0000262e(3): CMP RSI,RDX
00002631(3): MOV byte ptr [RDX + -0x1],AL
00002634(2): JNZ 0x00002620
00002636(4): ADD RDI,0x1
0000263a(3): MOV RDX,RSI
0000263d(3): CMP R8,RDI
00002640(2): JNZ 0x00002610
00002642(2): RET
00002650(3): TEST RSI,RSI
00002653(2): JZ 0x00002692
00002655(4): LEA R8,[RDI + RSI*0x1]
00002659(7): NOP dword ptr [RAX]
00002660(3): MOVZX ECX,byte ptr [RDI]
00002663(4): LEA RSI,[RDX + 0x8]
00002667(9): NOP word ptr [RAX + RAX*0x1]
00002670(2): MOV EAX,ECX
00002672(4): ADD RDX,0x1
00002676(2): SHR CL,1
00002678(3): AND EAX,0x1
0000267b(3): ADD EAX,0x30
0000267e(3): CMP RSI,RDX
00002681(3): MOV byte ptr [RDX + -0x1],AL
00002684(2): JNZ 0x00002670
00002686(4): ADD RDI,0x1
0000268a(3): MOV RDX,RSI
0000268d(3): CMP R8,RDI
00002690(2): JNZ 0x00002660
00002692(2): RET
000026a0(4): CMP DIL,0x2d
000026a4(3): SETZ AL
000026a7(4): CMP DIL,0x5f
000026ab(3): SETZ DL
000026ae(2): OR AL,DL
000026b0(2): JNZ 0x000026c8
000026b2(2): MOV EDX,EDI
000026b4(3): AND EDX,0xfffffffb
000026b7(3): CMP DL,0x2b
000026ba(2): JZ 0x000026c8
000026bc(4): MOVSX EDI,DIL
000026c0(5): JMP 0x00003fc0
000026c8(2): RET
000026d0(1): PUSH RBP
000026d1(1): PUSH RBX
000026d2(3): MOV RBP,RCX
000026d5(3): MOV RBX,RDX
000026d8(4): SUB RSP,0x8
000026dc(5): CALL 0x00003d70
000026e1(3): TEST RBP,RBP
000026e4(2): JZ 0x00002713
000026e6(4): LEA RCX,[RBX + RBP*0x1]
000026ea(2): JMP 0x00002700
000026f0(2): CMP AL,0x2f
000026f2(2): JNZ 0x000026f7
000026f4(3): MOV byte ptr [RBX],0x5f
000026f7(4): ADD RBX,0x1
000026fb(3): CMP RBX,RCX
000026fe(2): JZ 0x00002713
00002700(3): MOVZX EAX,byte ptr [RBX]
00002703(2): CMP AL,0x2b
00002705(2): JNZ 0x000026f0
00002707(3): MOV byte ptr [RBX],0x2d
0000270a(4): ADD RBX,0x1
0000270e(3): CMP RBX,RCX
00002711(2): JNZ 0x00002700
00002713(4): ADD RSP,0x8
00002717(1): POP RBX
00002718(1): POP RBP
00002719(1): RET
00002720(1): PUSH RBX
00002721(3): MOV RBX,RDI
00002724(8): MOV qword ptr [RDI + 0x18],0x1400
0000272c(5): MOV EDI,0x1400
00002731(5): CALL 0x000067c0
00002736(7): MOV qword ptr [RBX],0x1
0000273d(4): MOV qword ptr [RBX + 0x10],RAX
00002741(1): POP RBX
00002742(1): RET
00002750(1): PUSH RBX
00002751(3): MOV RBX,RDI
00002754(8): MOV qword ptr [RDI + 0x18],0x1400
0000275c(5): MOV EDI,0x1400
00002761(5): CALL 0x000067c0
00002766(7): MOV qword ptr [RBX],0x0
0000276d(4): MOV qword ptr [RBX + 0x10],RAX
00002771(1): POP RBX
00002772(1): RET
00002780(1): PUSH RBX
00002781(3): MOV RBX,RDI
00002784(8): MOV qword ptr [RDI + 0x18],0x1400
0000278c(5): MOV EDI,0x1400
00002791(5): CALL 0x000067c0
00002796(4): MOV byte ptr [RBX + 0x5],0x0
0000279a(4): MOV qword ptr [RBX + 0x10],RAX
0000279e(6): MOV dword ptr [RBX],0x1
000027a4(1): POP RBX
000027a5(1): RET
000027b0(4): CMP DIL,0x5a
000027b4(2): JG 0x000027e8
000027b6(4): CMP DIL,0x41
000027ba(2): JGE 0x000027ef
000027bc(3): LEA EAX,[RDI + -0x30]
000027bf(2): CMP AL,0x9
000027c1(2): JBE 0x000027ef
000027c3(4): MOVSX ESI,DIL
000027c7(7): LEA RDI,[0x7324]
000027ce(4): SUB RSP,0x8
000027d2(5): CALL 0x00001690
000027d7(3): TEST RAX,RAX
000027da(3): SETNZ AL
000027dd(4): ADD RSP,0x8
000027e1(1): RET
000027e8(3): LEA EAX,[RDI + -0x61]
000027eb(2): CMP AL,0x19
000027ed(2): JA 0x000027c3
000027ef(5): MOV EAX,0x1
000027f4(1): RET
00002800(1): PUSH RBX
00002801(3): MOV RBX,RDI
00002804(4): LEA RDI,[RDI + 0x4]
00002808(5): CALL 0x000038f0
0000280d(3): MOV EDX,dword ptr [RBX + 0x4]
00002810(2): MOV dword ptr [RBX],EDX
00002812(1): POP RBX
00002813(1): RET
00002820(1): PUSH RBX
00002821(3): MOV RBX,RDI
00002824(4): LEA RDI,[RDI + 0x4]
00002828(5): CALL 0x000038e0
0000282d(8): MOV qword ptr [RBX + 0x18],0x1400
00002835(5): MOV EDI,0x1400
0000283a(5): CALL 0x000067c0
0000283f(4): MOV qword ptr [RBX + 0x10],RAX
00002843(1): POP RBX
00002844(1): RET
00002850(4): ADD RDI,0x4
00002854(5): JMP 0x000038e0
00002860(1): PUSH RBX
00002861(3): MOV RBX,RDI
00002864(4): LEA RDI,[RDI + 0x4]
00002868(5): CALL 0x00003ff0
0000286d(3): MOV EDX,dword ptr [RBX + 0x4]
00002870(2): MOV dword ptr [RBX],EDX
00002872(1): POP RBX
00002873(1): RET
00002880(1): PUSH RBX
00002881(3): MOV RBX,RDI
00002884(4): LEA RDI,[RDI + 0x4]
00002888(5): CALL 0x00003fe0
0000288d(8): MOV qword ptr [RBX + 0x18],0x1400
00002895(5): MOV EDI,0x1400
0000289a(5): CALL 0x000067c0
0000289f(4): MOV qword ptr [RBX + 0x10],RAX
000028a3(1): POP RBX
000028a4(1): RET
000028b0(4): ADD RDI,0x4
000028b4(5): JMP 0x00003fe0
000028c0(3): TEST RDX,RDX
000028c3(7): MOV qword ptr [R8],0x0
000028ca(2): JZ 0x00002940
000028cc(4): LEA R9,[RSI + 0x1]
000028d0(5): LEA R10,[RSI + RDX*0x1 + 0x1]
000028d5(2): JMP 0x0000290e
000028e0(4): MOVZX EDX,byte ptr [RDI + 0x5]
000028e4(3): SUB EAX,0x37
000028e7(2): TEST DL,DL
000028e9(2): JZ 0x00002932
000028eb(4): MOVZX ESI,byte ptr [RDI + 0x4]
000028ef(4): ADD qword ptr [R8],0x1
000028f3(4): ADD RCX,0x1
000028f7(3): SHL ESI,0x4
000028fa(2): ADD EAX,ESI
000028fc(3): MOV byte ptr [RCX + -0x1],AL
000028ff(3): XOR EDX,0x1
00002902(3): MOV byte ptr [RDI + 0x5],DL
00002905(4): ADD R9,0x1
00002909(3): CMP R10,R9
0000290c(2): JZ 0x00002950
0000290e(5): MOVSX EAX,byte ptr [R9 + -0x1]
00002913(2): CMP AL,0xa
00002915(2): JZ 0x00002905
00002917(3): LEA EDX,[RAX + -0x41]
0000291a(3): CMP DL,0x5
0000291d(2): JBE 0x000028e0
0000291f(3): LEA EDX,[RAX + -0x30]
00002922(3): CMP DL,0x9
00002925(2): JA 0x00002960
00002927(4): MOVZX EDX,byte ptr [RDI + 0x5]
0000292b(3): SUB EAX,0x30
0000292e(2): TEST DL,DL
00002930(2): JNZ 0x000028eb
00002932(3): MOV byte ptr [RDI + 0x4],AL
00002935(2): JMP 0x000028ff
00002940(4): MOVZX EAX,byte ptr [RDI + 0x5]
00002944(3): XOR EAX,0x1
00002947(1): RET
00002950(5): MOV EAX,0x1
00002955(1): RET
00002960(2): XOR EAX,EAX
00002962(1): RET
00002970(3): TEST RDX,RDX
00002973(7): MOV qword ptr [R8],0x0
0000297a(2): JNZ 0x00002988
0000297c(3): MOV EAX,dword ptr [RDI + 0x4]
0000297f(2): TEST EAX,EAX
00002981(3): SETLE AL
00002984(1): RET
00002988(4): LEA R9,[RSI + 0x1]
0000298c(7): LEA R10,[0x7c80]
00002993(5): LEA RSI,[RSI + RDX*0x1 + 0x1]
00002998(2): JMP 0x000029ad
000029a0(4): ADD R9,0x1
000029a4(3): CMP R9,RSI
000029a7(6): JZ 0x00002a6f
000029ad(5): MOVZX EAX,byte ptr [R9 + -0x1]
000029b2(2): CMP AL,0xa
000029b4(2): JZ 0x000029a0
000029b6(3): LEA EDX,[RAX + -0x21]
000029b9(3): CMP DL,0x5c
000029bc(6): JA 0x00002a80
000029c2(3): SUB EAX,0x21
000029c5(2): CDQE
000029c7(5): MOVZX EDX,byte ptr [R10 + RAX*0x1]
000029cc(3): CMP DL,0xff
000029cf(6): JZ 0x00002a80
000029d5(4): MOVSXD RAX,dword ptr [RDI + 0x4]
000029d9(4): LEA R11D,[RAX + 0x1]
000029dd(4): CMP R11D,0x5
000029e1(4): MOV dword ptr [RDI + 0x4],R11D
000029e5(4): MOV byte ptr [RDI + RAX*0x1 + 0x8],DL
000029e9(2): JNZ 0x000029a0
000029eb(4): MOVZX EAX,byte ptr [RDI + 0x9]
000029ef(5): MOVZX R11D,byte ptr [RDI + 0xa]
000029f4(4): MOVZX EDX,byte ptr [RDI + 0x8]
000029f8(7): IMUL R11D,R11D,0x1c39
000029ff(6): IMUL EAX,EAX,0x95eed
00002a05(3): ADD EAX,R11D
00002a08(5): MOVZX R11D,byte ptr [RDI + 0xb]
00002a0d(4): IMUL R11D,R11D,0x55
00002a11(3): ADD EAX,R11D
00002a14(5): MOVZX R11D,byte ptr [RDI + 0xc]
00002a19(3): ADD R11D,EAX
00002a1c(3): LEA EAX,[RDX + -0x53]
00002a1f(2): CMP AL,0x1
00002a21(2): JBE 0x00002a80
00002a23(3): CMP DL,0x52
00002a26(2): JNZ 0x00002a31
00002a28(7): CMP R11D,0xdd7f4d
00002a2f(2): JG 0x00002a80
00002a31(3): MOVZX EAX,DL
00002a34(4): ADD R9,0x1
00002a38(4): ADD qword ptr [R8],0x4
00002a3c(6): IMUL EAX,EAX,0x31c84b1
00002a42(4): ADD RCX,0x4
00002a46(7): MOV dword ptr [RDI + 0x4],0x0
00002a4d(3): ADD EAX,R11D
00002a50(2): MOV EDX,EAX
00002a52(3): MOV byte ptr [RCX + -0x2],AH
00002a55(3): MOV byte ptr [RCX + -0x1],AL
00002a58(3): SHR EDX,0x18
00002a5b(3): MOV byte ptr [RCX + -0x4],DL
00002a5e(2): MOV EDX,EAX
00002a60(3): SHR EDX,0x10
00002a63(3): MOV byte ptr [RCX + -0x3],DL
00002a66(3): CMP R9,RSI
00002a69(6): JNZ 0x000029ad
00002a6f(3): MOV EAX,dword ptr [RDI + 0x4]
00002a72(2): MOV dword ptr [RDI],EAX
00002a74(5): MOV EAX,0x1
00002a79(1): RET
00002a80(2): XOR EAX,EAX
00002a82(1): RET
00002a90(3): TEST RDX,RDX
00002a93(3): MOV R10,RCX
00002a96(7): MOV qword ptr [R8],0x0
00002a9d(2): JZ 0x00002b08
00002a9f(4): LEA R9,[RSI + 0x1]
00002aa3(5): LEA RSI,[RSI + RDX*0x1 + 0x1]
00002aa8(8): NOP dword ptr [RAX + RAX*0x1]
00002ab0(5): MOVZX EAX,byte ptr [R9 + -0x1]
00002ab5(2): CMP AL,0xa
00002ab7(2): JZ 0x00002af5
00002ab9(3): LEA EDX,[RAX + -0x30]
00002abc(3): CMP DL,0x1
00002abf(2): JA 0x00002b10
00002ac1(2): CMP AL,0x31
00002ac3(2): MOV ECX,dword ptr [RDI]
00002ac5(3): SETZ AL
00002ac8(3): MOVZX EAX,AL
00002acb(2): SHL EAX,CL
00002acd(3): OR EAX,dword ptr [RDI + 0x4]
00002ad0(3): ADD ECX,0x1
00002ad3(3): CMP ECX,0x8
00002ad6(2): MOV dword ptr [RDI],ECX
00002ad8(3): MOV dword ptr [RDI + 0x4],EAX
00002adb(2): JNZ 0x00002af5
00002add(3): MOV byte ptr [R10],AL
00002ae0(7): MOV dword ptr [RDI + 0x4],0x0
00002ae7(4): ADD R10,0x1
00002aeb(4): ADD qword ptr [R8],0x1
00002aef(6): MOV dword ptr [RDI],0x0
00002af5(4): ADD R9,0x1
00002af9(3): CMP RSI,R9
00002afc(2): JNZ 0x00002ab0
00002afe(5): MOV EAX,0x1
00002b03(1): RET
00002b08(2): MOV EAX,dword ptr [RDI]
00002b0a(2): TEST EAX,EAX
00002b0c(3): SETZ AL
00002b0f(1): RET
00002b10(2): XOR EAX,EAX
00002b12(1): RET
00002b20(3): TEST RDX,RDX
00002b23(3): MOV R10,RCX
00002b26(7): MOV qword ptr [R8],0x0
00002b2d(6): JZ 0x00002bb8
00002b33(4): LEA R9,[RSI + 0x1]
00002b37(5): LEA RSI,[RSI + RDX*0x1 + 0x1]
00002b3c(2): JMP 0x00002b58
00002b40(3): SHL EAX,0x7
00002b43(6): MOV dword ptr [RDI],0x7
00002b49(3): OR EAX,R11D
00002b4c(3): MOV dword ptr [RDI + 0x4],EAX
00002b4f(4): ADD R9,0x1
00002b53(3): CMP R9,RSI
00002b56(2): JZ 0x00002bad
00002b58(5): MOVZX EDX,byte ptr [R9 + -0x1]
00002b5d(3): CMP DL,0xa
00002b60(2): JZ 0x00002b4f
00002b62(3): LEA EAX,[RDX + -0x30]
00002b65(2): CMP AL,0x1
00002b67(2): JA 0x00002bc0
00002b69(2): MOV ECX,dword ptr [RDI]
00002b6b(2): XOR EAX,EAX
00002b6d(3): CMP DL,0x31
00002b70(3): SETZ AL
00002b73(4): MOV R11D,dword ptr [RDI + 0x4]
00002b77(2): TEST ECX,ECX
00002b79(2): JZ 0x00002b40
00002b7b(3): SUB ECX,0x1
00002b7e(2): SHL EAX,CL
00002b80(2): MOV dword ptr [RDI],ECX
00002b82(3): OR EAX,R11D
00002b85(2): TEST ECX,ECX
00002b87(3): MOV dword ptr [RDI + 0x4],EAX
00002b8a(2): JNZ 0x00002b4f
00002b8c(4): ADD R9,0x1
00002b90(3): MOV byte ptr [R10],AL
00002b93(7): MOV dword ptr [RDI + 0x4],0x0
00002b9a(4): ADD R10,0x1
00002b9e(4): ADD qword ptr [R8],0x1
00002ba2(3): CMP R9,RSI
00002ba5(6): MOV dword ptr [RDI],0x0
00002bab(2): JNZ 0x00002b58
00002bad(5): MOV EAX,0x1
00002bb2(1): RET
00002bb8(2): MOV EAX,dword ptr [RDI]
00002bba(2): TEST EAX,EAX
00002bbc(3): SETZ AL
00002bbf(1): RET
00002bc0(2): XOR EAX,EAX
00002bc2(1): RET
00002bd0(2): PUSH R13
00002bd2(2): PUSH R12
00002bd4(1): PUSH RBP
00002bd5(1): PUSH RBX
00002bd6(4): SUB RSP,0x18
00002bda(9): MOV RAX,qword ptr FS:[0x28]
00002be3(5): MOV qword ptr [RSP + 0x8],RAX
00002be8(2): XOR EAX,EAX
00002bea(3): TEST RSI,RSI
00002bed(6): JZ 0x00002cc4
00002bf3(3): MOVZX EAX,byte ptr [RDI]
00002bf6(4): LEA R9,[RDI + 0x1]
00002bfa(3): ADD RSI,RDI
00002bfd(3): MOV R11,RDX
00002c00(3): XOR R10D,R10D
00002c03(5): MOV EDI,0xc0c0c0c1
00002c08(7): LEA RBX,[0x7ce0]
00002c0f(4): MOV byte ptr [RSP + 0x4],AL
00002c13(5): MOV EAX,0x1
00002c18(2): JMP 0x00002c23
00002c20(3): MOVSXD RAX,EDX
00002c23(3): CMP RSI,R9
00002c26(6): JZ 0x00002cc0
00002c2c(4): ADD R9,0x1
00002c30(5): MOVZX R8D,byte ptr [R9 + -0x1]
00002c35(3): LEA EDX,[RAX + 0x1]
00002c38(3): CMP EDX,0x4
00002c3b(5): MOV byte ptr [RSP + RAX*0x1 + 0x4],R8B
00002c40(2): JNZ 0x00002c20
00002c42(5): MOVZX EAX,byte ptr [RSP + 0x4]
00002c47(6): MOVZX R8D,byte ptr [RSP + 0x5]
00002c4d(3): MOV R13,R11
00002c50(4): LEA RBP,[R10 + 0x4]
00002c54(4): LEA R12,[R10 + -0x1]
00002c58(3): SUB R13,R10
00002c5b(4): SHL R8D,0x10
00002c5f(3): SHL EAX,0x18
00002c62(4): LEA EAX,[RAX + R8*0x1]
00002c66(6): MOVZX R8D,byte ptr [RSP + 0x6]
00002c6c(4): SHL R8D,0x8
00002c70(3): ADD R8D,EAX
00002c73(5): MOVZX EAX,byte ptr [RSP + 0x7]
00002c78(3): ADD R8D,EAX
00002c7b(3): MOV EAX,R8D
00002c7e(2): MUL EDI
00002c80(3): SHR EDX,0x6
00002c83(3): CMP RBP,RCX
00002c86(2): JNC 0x00002c9b
00002c88(3): IMUL EAX,EDX,0x55
00002c8b(3): SUB R8D,EAX
00002c8e(3): MOVSXD R8,R8D
00002c91(5): MOVZX EAX,byte ptr [RBX + R8*0x1]
00002c96(5): MOV byte ptr [R13 + RBP*0x1],AL
00002c9b(4): SUB RBP,0x1
00002c9f(3): MOV R8D,EDX
00002ca2(3): CMP RBP,R12
00002ca5(2): JNZ 0x00002c7b
00002ca7(4): ADD R11,0x5
00002cab(4): ADD R10,0x5
00002caf(2): XOR EDX,EDX
00002cb1(5): JMP 0x00002c20
00002cc0(2): TEST EAX,EAX
00002cc2(2): JNZ 0x00002cdf
00002cc4(5): MOV RAX,qword ptr [RSP + 0x8]
00002cc9(9): XOR RAX,qword ptr FS:[0x28]
00002cd2(2): JNZ 0x00002d03
00002cd4(4): ADD RSP,0x18
00002cd8(1): POP RBX
00002cd9(1): POP RBP
00002cda(2): POP R12
00002cdc(2): POP R13
00002cde(1): RET
00002cdf(7): LEA RSI,[0x7538]
00002ce6(5): MOV EDX,0x5
00002ceb(2): XOR EDI,EDI
00002ced(5): CALL 0x00001630
00002cf2(2): XOR ESI,ESI
00002cf4(3): MOV RDX,RAX
00002cf7(5): MOV EDI,0x1
00002cfc(2): XOR EAX,EAX
00002cfe(5): CALL 0x00001810
00002d03(5): CALL 0x00001660
00002d08(8): NOP dword ptr [RAX + RAX*0x1]
00002d10(1): PUSH RBP
00002d11(1): PUSH RBX
00002d12(3): MOV RBP,RCX
00002d15(3): MOV RBX,RDX
00002d18(4): SUB RSP,0x8
00002d1c(5): CALL 0x00003610
00002d21(3): TEST RBP,RBP
00002d24(2): JZ 0x00002d60
00002d26(3): MOVSX EAX,byte ptr [RBX]
00002d29(3): LEA EDX,[RAX + -0x32]
00002d2c(3): CMP DL,0x28
00002d2f(2): JA 0x00002d67
00002d31(4): LEA RCX,[RBX + RBP*0x1]
00002d35(7): LEA RSI,[0x7da0]
00002d3c(2): JMP 0x00002d4b
00002d40(3): MOVSX EAX,byte ptr [RBX]
00002d43(3): LEA EDX,[RAX + -0x32]
00002d46(3): CMP DL,0x28
00002d49(2): JA 0x00002d67
00002d4b(3): SUB EAX,0x32
00002d4e(4): ADD RBX,0x1
00002d52(2): CDQE
00002d54(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
00002d58(3): MOV byte ptr [RBX + -0x1],AL
00002d5b(3): CMP RBX,RCX
00002d5e(2): JNZ 0x00002d40
00002d60(4): ADD RSP,0x8
00002d64(1): POP RBX
00002d65(1): POP RBP
00002d66(1): RET
00002d67(7): LEA RCX,[0x7c60]
00002d6e(7): LEA RSI,[0x7570]
00002d75(7): LEA RDI,[0x733c]
00002d7c(5): MOV EDX,0x1c2
00002d81(5): CALL 0x000016d0
00002d86(10): NOP word ptr CS:[RAX + RAX*0x1]
00002d90(2): PUSH R14
00002d92(2): PUSH R13
00002d94(3): MOV R14,RSI
00002d97(2): PUSH R12
00002d99(1): PUSH RBP
00002d9a(3): MOV R13,RDX
00002d9d(1): PUSH RBX
00002d9e(3): MOV RBX,RDI
00002da1(3): MOV RBP,RCX
00002da4(4): CMP RDX,qword ptr [RBX + 0x18]
00002da8(3): MOV R12,R8
00002dab(4): MOV RDI,qword ptr [RDI + 0x10]
00002daf(6): JA 0x00002e50
00002db5(3): MOV RSI,R14
00002db8(3): MOV RDX,R13
00002dbb(5): CALL 0x00001760
00002dc0(3): TEST R13,R13
00002dc3(4): MOV RSI,qword ptr [RBX + 0x10]
00002dc7(2): JZ 0x00002e11
00002dc9(3): MOVZX EAX,byte ptr [RSI]
00002dcc(4): LEA RCX,[RSI + R13*0x1]
00002dd0(2): MOV EDX,EAX
00002dd2(3): AND EDX,0xfffffffb
00002dd5(3): CMP DL,0x2b
00002dd8(2): JNZ 0x00002dfd
00002dda(2): JMP 0x00002e38
00002de0(2): CMP AL,0x5f
00002de2(2): JNZ 0x00002de7
00002de4(3): MOV byte ptr [RSI],0x2f
00002de7(4): ADD RSI,0x1
00002deb(3): CMP RSI,RCX
00002dee(2): JZ 0x00002e0d
00002df0(3): MOVZX EAX,byte ptr [RSI]
00002df3(2): MOV EDX,EAX
00002df5(3): AND EDX,0xfffffffb
00002df8(3): CMP DL,0x2b
00002dfb(2): JZ 0x00002e38
00002dfd(2): CMP AL,0x2d
00002dff(2): JNZ 0x00002de0
00002e01(3): MOV byte ptr [RSI],0x2b
00002e04(4): ADD RSI,0x1
00002e08(3): CMP RSI,RCX
00002e0b(2): JNZ 0x00002df0
00002e0d(4): MOV RSI,qword ptr [RBX + 0x10]
00002e11(4): LEA RDI,[RBX + 0x4]
00002e15(3): MOV RDX,R13
00002e18(3): MOV R8,R12
00002e1b(3): MOV RCX,RBP
00002e1e(5): CALL 0x00003ff0
00002e23(3): MOV EDX,dword ptr [RBX + 0x4]
00002e26(2): MOV dword ptr [RBX],EDX
00002e28(1): POP RBX
00002e29(1): POP RBP
00002e2a(2): POP R12
00002e2c(2): POP R13
00002e2e(2): POP R14
00002e30(1): RET
00002e38(1): POP RBX
00002e39(8): MOV qword ptr [R12],0x0
00002e41(2): XOR EAX,EAX
00002e43(1): POP RBP
00002e44(2): POP R12
00002e46(2): POP R13
00002e48(2): POP R14
00002e4a(1): RET
00002e50(4): LEA RSI,[RDX + RDX*0x1]
00002e54(3): TEST RSI,RSI
00002e57(4): MOV qword ptr [RBX + 0x18],RSI
00002e5b(2): JS 0x00002e6e
00002e5d(5): CALL 0x00006820
00002e62(3): MOV RDI,RAX
00002e65(4): MOV qword ptr [RBX + 0x10],RAX
00002e69(5): JMP 0x00002db5
00002e6e(5): CALL 0x00006a10
00002e73(3): NOP dword ptr [RAX]
00002e76(10): NOP word ptr CS:[RAX + RAX*0x1]
00002e80(1): PUSH RBP
00002e81(1): PUSH RBX
00002e82(3): MOV RBP,RSI
00002e85(3): MOV RBX,RDI
00002e88(4): SUB RSP,0x28
00002e8c(4): CMP RDX,qword ptr [RDI + 0x18]
00002e90(4): MOV RAX,qword ptr [RDI + 0x10]
00002e94(2): JA 0x00002f10
00002e96(3): TEST RDX,RDX
00002e99(2): JZ 0x00002ef2
00002e9b(3): XOR R9D,R9D
00002e9e(7): LEA R11,[0x7d60]
00002ea5(2): JMP 0x00002ec6
00002eb0(3): LEA EDI,[RSI + -0x41]
00002eb3(4): CMP DIL,0x15
00002eb7(2): JBE 0x00002ed6
00002eb9(4): MOV byte ptr [RAX + R9*0x1],SIL
00002ebd(4): ADD R9,0x1
00002ec1(3): CMP RDX,R9
00002ec4(2): JZ 0x00002eee
00002ec6(6): MOVSX ESI,byte ptr [RBP + R9*0x1]
00002ecc(4): LEA R10D,[RSI + -0x30]
00002ed0(4): CMP R10B,0x9
00002ed4(2): JA 0x00002eb0
00002ed6(3): SUB ESI,0x30
00002ed9(3): MOVSXD RSI,ESI
00002edc(5): MOVZX ESI,byte ptr [R11 + RSI*0x1]
00002ee1(4): MOV byte ptr [RAX + R9*0x1],SIL
00002ee5(4): ADD R9,0x1
00002ee9(3): CMP RDX,R9
00002eec(2): JNZ 0x00002ec6
00002eee(4): MOV RAX,qword ptr [RBX + 0x10]
00002ef2(4): LEA RDI,[RBX + 0x4]
00002ef6(3): MOV RSI,RAX
00002ef9(5): CALL 0x000038f0
00002efe(3): MOV EDX,dword ptr [RBX + 0x4]
00002f01(2): MOV dword ptr [RBX],EDX
00002f03(4): ADD RSP,0x28
00002f07(1): POP RBX
00002f08(1): POP RBP
00002f09(1): RET
00002f10(4): LEA RSI,[RDX + RDX*0x1]
00002f14(5): MOV qword ptr [RSP + 0x18],R8
00002f19(5): MOV qword ptr [RSP + 0x10],RCX
00002f1e(5): MOV qword ptr [RSP + 0x8],RDX
00002f23(3): TEST RSI,RSI
00002f26(4): MOV qword ptr [RDI + 0x18],RSI
00002f2a(2): JS 0x00002f4c
00002f2c(3): MOV RDI,RAX
00002f2f(5): CALL 0x00006820
00002f34(5): MOV RDX,qword ptr [RSP + 0x8]
00002f39(4): MOV qword ptr [RBX + 0x10],RAX
00002f3d(5): MOV RCX,qword ptr [RSP + 0x10]
00002f42(5): MOV R8,qword ptr [RSP + 0x18]
00002f47(5): JMP 0x00002e96
00002f4c(5): CALL 0x00006a10
00002f51(5): NOP dword ptr [RAX + RAX*0x1]
00002f56(10): NOP word ptr CS:[RAX + RAX*0x1]
00002f60(2): PUSH R13
00002f62(2): PUSH R12
00002f64(5): MOV EDX,0x5
00002f69(1): PUSH RBP
00002f6a(1): PUSH RBX
00002f6b(2): MOV EBP,EDI
00002f6d(7): SUB RSP,0x88
00002f74(7): MOV RBX,qword ptr [0x0020b108]
00002f7b(9): MOV RAX,qword ptr FS:[0x28]
00002f84(5): MOV qword ptr [RSP + 0x78],RAX
00002f89(2): XOR EAX,EAX
00002f8b(2): TEST EDI,EDI
00002f8d(2): JZ 0x00002fbd
00002f8f(7): LEA RSI,[0x7590]
00002f96(2): XOR EDI,EDI
00002f98(5): CALL 0x00001630
00002f9d(7): MOV RDI,qword ptr [0x0020b0c0]
00002fa4(3): MOV RDX,RAX
00002fa7(3): MOV RCX,RBX
00002faa(5): MOV ESI,0x1
00002faf(2): XOR EAX,EAX
00002fb1(5): CALL 0x00001870
00002fb6(2): MOV EDI,EBP
00002fb8(5): CALL 0x00001850
00002fbd(7): LEA RSI,[0x735c]
00002fc4(2): XOR EDI,EDI
00002fc6(5): CALL 0x00001630
00002fcb(3): MOV RDX,RBX
00002fce(3): MOV RSI,RAX
00002fd1(5): MOV EDI,0x1
00002fd6(2): XOR EAX,EAX
00002fd8(5): CALL 0x000017f0
00002fdd(7): MOV RBX,qword ptr [0x0020b088]
00002fe4(7): LEA RSI,[0x75b8]
00002feb(5): MOV EDX,0x5
00002ff0(2): XOR EDI,EDI
00002ff2(5): CALL 0x00001630
00002ff7(3): MOV RSI,RBX
00002ffa(3): MOV RDI,RAX
00002ffd(5): CALL 0x00001730
00003002(7): MOV RBX,qword ptr [0x0020b088]
00003009(7): LEA RSI,[0x7600]
00003010(5): MOV EDX,0x5
00003015(2): XOR EDI,EDI
00003017(5): CALL 0x00001630
0000301c(3): MOV RSI,RBX
0000301f(3): MOV RDI,RAX
00003022(5): CALL 0x00001730
00003027(7): MOV RBX,qword ptr [0x0020b088]
0000302e(7): LEA RSI,[0x7638]
00003035(5): MOV EDX,0x5
0000303a(2): XOR EDI,EDI
0000303c(5): CALL 0x00001630
00003041(3): MOV RSI,RBX
00003044(3): MOV RDI,RAX
00003047(5): CALL 0x00001730
0000304c(7): MOV RBX,qword ptr [0x0020b088]
00003053(7): LEA RSI,[0x7688]
0000305a(5): MOV EDX,0x5
0000305f(2): XOR EDI,EDI
00003061(5): CALL 0x00001630
00003066(3): MOV RSI,RBX
00003069(3): MOV RDI,RAX
0000306c(5): CALL 0x00001730
00003071(7): MOV RBX,qword ptr [0x0020b088]
00003078(7): LEA RSI,[0x76d0]
0000307f(5): MOV EDX,0x5
00003084(2): XOR EDI,EDI
00003086(5): CALL 0x00001630
0000308b(3): MOV RSI,RBX
0000308e(3): MOV RDI,RAX
00003091(5): CALL 0x00001730
00003096(7): MOV RBX,qword ptr [0x0020b088]
0000309d(7): LEA RSI,[0x7718]
000030a4(5): MOV EDX,0x5
000030a9(2): XOR EDI,EDI
000030ab(5): CALL 0x00001630
000030b0(3): MOV RSI,RBX
000030b3(3): MOV RDI,RAX
000030b6(5): CALL 0x00001730
000030bb(7): MOV RBX,qword ptr [0x0020b088]
000030c2(7): LEA RSI,[0x7760]
000030c9(5): MOV EDX,0x5
000030ce(2): XOR EDI,EDI
000030d0(5): CALL 0x00001630
000030d5(3): MOV RSI,RBX
000030d8(3): MOV RDI,RAX
000030db(5): CALL 0x00001730
000030e0(7): MOV RBX,qword ptr [0x0020b088]
000030e7(7): LEA RSI,[0x77b0]
000030ee(5): MOV EDX,0x5
000030f3(2): XOR EDI,EDI
000030f5(5): CALL 0x00001630
000030fa(3): MOV RSI,RBX
000030fd(3): MOV RDI,RAX
00003100(5): CALL 0x00001730
00003105(7): MOV RBX,qword ptr [0x0020b088]
0000310c(7): LEA RSI,[0x77f0]
00003113(5): MOV EDX,0x5
00003118(2): XOR EDI,EDI
0000311a(5): CALL 0x00001630
0000311f(3): MOV RSI,RBX
00003122(3): MOV RDI,RAX
00003125(5): CALL 0x00001730
0000312a(7): MOV RBX,qword ptr [0x0020b088]
00003131(7): LEA RSI,[0x7840]
00003138(5): MOV EDX,0x5
0000313d(2): XOR EDI,EDI
0000313f(5): CALL 0x00001630
00003144(3): MOV RSI,RBX
00003147(3): MOV RDI,RAX
0000314a(5): CALL 0x00001730
0000314f(7): MOV RBX,qword ptr [0x0020b088]
00003156(7): LEA RSI,[0x7890]
0000315d(5): MOV EDX,0x5
00003162(2): XOR EDI,EDI
00003164(5): CALL 0x00001630
00003169(3): MOV RSI,RBX
0000316c(3): MOV RDI,RAX
0000316f(5): CALL 0x00001730
00003174(7): MOV RBX,qword ptr [0x0020b088]
0000317b(7): LEA RSI,[0x7988]
00003182(5): MOV EDX,0x5
00003187(2): XOR EDI,EDI
00003189(5): CALL 0x00001630
0000318e(3): MOV RSI,RBX
00003191(3): MOV RDI,RAX
00003194(5): CALL 0x00001730
00003199(7): MOV RBX,qword ptr [0x0020b088]
000031a0(7): LEA RSI,[0x7a68]
000031a7(5): MOV EDX,0x5
000031ac(2): XOR EDI,EDI
000031ae(5): CALL 0x00001630
000031b3(3): MOV RSI,RBX
000031b6(3): MOV RDI,RAX
000031b9(5): CALL 0x00001730
000031be(7): MOV RBX,qword ptr [0x0020b088]
000031c5(7): LEA RSI,[0x7a98]
000031cc(5): MOV EDX,0x5
000031d1(2): XOR EDI,EDI
000031d3(5): CALL 0x00001630
000031d8(3): MOV RSI,RBX
000031db(3): MOV RDI,RAX
000031de(5): CALL 0x00001730
000031e3(7): MOV RBX,qword ptr [0x0020b088]
000031ea(7): LEA RSI,[0x7ad0]
000031f1(5): MOV EDX,0x5
000031f6(2): XOR EDI,EDI
000031f8(5): CALL 0x00001630
000031fd(3): MOV RSI,RBX
00003200(3): MOV RDI,RAX
00003203(7): LEA RBX,[0x7355]
0000320a(5): CALL 0x00001730
0000320f(7): LEA RAX,[0x737a]
00003216(7): LEA RCX,[0x73bb]
0000321d(9): MOV qword ptr [RSP + 0x60],0x0
00003226(9): MOV qword ptr [RSP + 0x68],0x0
0000322f(3): MOV RDX,RSP
00003232(4): MOV qword ptr [RSP],RAX
00003236(7): LEA RAX,[0x737c]
0000323d(5): MOV qword ptr [RSP + 0x30],RCX
00003242(7): LEA RCX,[0x73c5]
00003249(5): MOV qword ptr [RSP + 0x8],RAX
0000324e(7): LEA RAX,[0x73f4]
00003255(5): MOV qword ptr [RSP + 0x40],RCX
0000325a(7): LEA RCX,[0x73cf]
00003261(5): MOV qword ptr [RSP + 0x10],RAX
00003266(7): LEA RAX,[0x738c]
0000326d(5): MOV qword ptr [RSP + 0x50],RCX
00003272(5): MOV qword ptr [RSP + 0x18],RAX
00003277(7): LEA RAX,[0x73a2]
0000327e(5): MOV qword ptr [RSP + 0x20],RAX
00003283(7): LEA RAX,[0x73ac]
0000328a(5): MOV qword ptr [RSP + 0x28],RAX
0000328f(5): MOV qword ptr [RSP + 0x38],RAX
00003294(5): MOV qword ptr [RSP + 0x48],RAX
00003299(5): MOV qword ptr [RSP + 0x58],RAX
0000329e(2): NOP
000032a0(4): ADD RDX,0x10
000032a4(3): MOV RDI,qword ptr [RDX]
000032a7(3): TEST RDI,RDI
000032aa(2): JZ 0x000032bf
000032ac(5): MOV ECX,0x7
000032b1(3): MOV RSI,RBX
000032b4(2): CMPSB.REPE RDI,RSI
000032b6(3): SETA AL
000032b9(2): SBB AL,0x0
000032bb(2): TEST AL,AL
000032bd(2): JNZ 0x000032a0
000032bf(4): MOV R12,qword ptr [RDX + 0x8]
000032c3(2): XOR EDI,EDI
000032c5(5): MOV EDX,0x5
000032ca(7): LEA RSI,[0x73d9]
000032d1(3): TEST R12,R12
000032d4(6): JZ 0x0000339b
000032da(5): CALL 0x00001630
000032df(7): LEA RCX,[0x7b98]
000032e6(7): LEA RDX,[0x73f0]
000032ed(3): MOV RSI,RAX
000032f0(5): MOV EDI,0x1
000032f5(2): XOR EAX,EAX
000032f7(5): CALL 0x000017f0
000032fc(2): XOR ESI,ESI
000032fe(5): MOV EDI,0x5
00003303(5): CALL 0x000017e0
00003308(3): TEST RAX,RAX
0000330b(2): JZ 0x00003329
0000330d(7): LEA RSI,[0x73fe]
00003314(5): MOV EDX,0x3
00003319(3): MOV RDI,RAX
0000331c(5): CALL 0x000015c0
00003321(2): TEST EAX,EAX
00003323(6): JNZ 0x00003430
00003329(7): LEA RSI,[0x7402]
00003330(2): XOR EDI,EDI
00003332(5): MOV EDX,0x5
00003337(5): CALL 0x00001630
0000333c(7): LEA RCX,[0x7355]
00003343(7): LEA RDX,[0x7b98]
0000334a(3): MOV RSI,RAX
0000334d(5): MOV EDI,0x1
00003352(2): XOR EAX,EAX
00003354(5): CALL 0x000017f0
00003359(3): CMP R12,RBX
0000335c(7): LEA RCX,[0x7396]
00003363(7): LEA RBX,[0x85c1]
0000336a(4): CMOVZ RBX,RCX
0000336e(7): LEA RSI,[0x7c08]
00003375(2): XOR EDI,EDI
00003377(5): MOV EDX,0x5
0000337c(5): CALL 0x00001630
00003381(3): MOV RCX,RBX
00003384(3): MOV RSI,RAX
00003387(3): MOV RDX,R12
0000338a(5): MOV EDI,0x1
0000338f(2): XOR EAX,EAX
00003391(5): CALL 0x000017f0
00003396(5): JMP 0x00002fb6
0000339b(5): CALL 0x00001630
000033a0(7): LEA RCX,[0x7b98]
000033a7(7): LEA RDX,[0x73f0]
000033ae(3): MOV RSI,RAX
000033b1(5): MOV EDI,0x1
000033b6(2): XOR EAX,EAX
000033b8(5): CALL 0x000017f0
000033bd(2): XOR ESI,ESI
000033bf(5): MOV EDI,0x5
000033c4(5): CALL 0x000017e0
000033c9(3): TEST RAX,RAX
000033cc(2): JZ 0x000033e6
000033ce(7): LEA RSI,[0x73fe]
000033d5(5): MOV EDX,0x3
000033da(3): MOV RDI,RAX
000033dd(5): CALL 0x000015c0
000033e2(2): TEST EAX,EAX
000033e4(2): JNZ 0x00003429
000033e6(7): LEA RSI,[0x7402]
000033ed(5): MOV EDX,0x5
000033f2(2): XOR EDI,EDI
000033f4(7): LEA R12,[0x7355]
000033fb(7): LEA RBX,[0x7396]
00003402(5): CALL 0x00001630
00003407(7): LEA RCX,[0x7355]
0000340e(7): LEA RDX,[0x7b98]
00003415(3): MOV RSI,RAX
00003418(5): MOV EDI,0x1
0000341d(2): XOR EAX,EAX
0000341f(5): CALL 0x000017f0
00003424(5): JMP 0x0000336e
00003429(7): LEA R12,[0x7355]
00003430(7): MOV R13,qword ptr [0x0020b088]
00003437(7): LEA RSI,[0x7bc0]
0000343e(2): XOR EDI,EDI
00003440(5): MOV EDX,0x5
00003445(5): CALL 0x00001630
0000344a(3): MOV RSI,R13
0000344d(3): MOV RDI,RAX
00003450(5): CALL 0x00001730
00003455(5): JMP 0x00003329
00003460(2): XOR EAX,EAX
00003462(4): CMP RSI,0x7
00003466(6): JBE 0x000035d8
0000346c(4): MOVZX R8D,byte ptr [RDI]
00003470(7): LEA RSI,[0x7e00]
00003477(5): MOVZX R8D,byte ptr [RSI + R8*0x1]
0000347c(3): TEST R8B,R8B
0000347f(6): JS 0x000035d8
00003485(5): MOVZX R9D,byte ptr [RDI + 0x1]
0000348a(5): MOVZX R9D,byte ptr [RSI + R9*0x1]
0000348f(3): TEST R9B,R9B
00003492(6): JS 0x000035d8
00003498(4): CMP qword ptr [RCX],0x0
0000349c(3): MOV RAX,qword ptr [RDX]
0000349f(2): JZ 0x000034bb
000034a1(3): MOV R10D,R9D
000034a4(4): SHL R8D,0x3
000034a8(4): ADD RAX,0x1
000034ac(4): SAR R10B,0x2
000034b0(3): OR R8D,R10D
000034b3(4): MOV byte ptr [RAX + -0x1],R8B
000034b7(4): SUB qword ptr [RCX],0x1
000034bb(5): MOVZX R8D,byte ptr [RDI + 0x2]
000034c0(4): CMP R8B,0x3d
000034c4(6): JZ 0x000035e0
000034ca(5): MOVZX R8D,byte ptr [RSI + R8*0x1]
000034cf(3): TEST R8B,R8B
000034d2(6): JS 0x000035e6
000034d8(5): MOVZX R10D,byte ptr [RDI + 0x3]
000034dd(5): MOVZX R10D,byte ptr [RSI + R10*0x1]
000034e2(3): TEST R10B,R10B
000034e5(6): JS 0x000035e6
000034eb(4): CMP qword ptr [RCX],0x0
000034ef(2): JZ 0x00003511
000034f1(3): ADD R8D,R8D
000034f4(4): SHL R9D,0x6
000034f8(4): ADD RAX,0x1
000034fc(3): OR R9D,R8D
000034ff(3): MOV R8D,R10D
00003502(4): SAR R8B,0x4
00003506(3): OR R9D,R8D
00003509(4): MOV byte ptr [RAX + -0x1],R9B
0000350d(4): SUB qword ptr [RCX],0x1
00003511(5): MOVZX R8D,byte ptr [RDI + 0x4]
00003516(4): CMP R8B,0x3d
0000351a(6): JZ 0x000035f6
00003520(5): MOVZX R8D,byte ptr [RSI + R8*0x1]
00003525(3): TEST R8B,R8B
00003528(6): JS 0x000035e6
0000352e(4): CMP qword ptr [RCX],0x0
00003532(2): JZ 0x0000354d
00003534(3): MOV R9D,R8D
00003537(4): SHL R10D,0x4
0000353b(4): ADD RAX,0x1
0000353f(3): SAR R9B,1
00003542(3): OR R10D,R9D
00003545(4): MOV byte ptr [RAX + -0x1],R10B
00003549(4): SUB qword ptr [RCX],0x1
0000354d(5): MOVZX R9D,byte ptr [RDI + 0x5]
00003552(4): CMP R9B,0x3d
00003556(6): JZ 0x000035fc
0000355c(5): MOVZX R9D,byte ptr [RSI + R9*0x1]
00003561(3): TEST R9B,R9B
00003564(6): JS 0x000035e6
0000356a(5): MOVZX R10D,byte ptr [RDI + 0x6]
0000356f(5): MOVZX R10D,byte ptr [RSI + R10*0x1]
00003574(3): TEST R10B,R10B
00003577(2): JS 0x000035e6
00003579(4): CMP qword ptr [RCX],0x0
0000357d(2): JZ 0x000035a0
0000357f(4): SHL R9D,0x2
00003583(4): SHL R8D,0x7
00003587(4): ADD RAX,0x1
0000358b(3): OR R8D,R9D
0000358e(3): MOV R9D,R10D
00003591(4): SAR R9B,0x3
00003595(3): OR R8D,R9D
00003598(4): MOV byte ptr [RAX + -0x1],R8B
0000359c(4): SUB qword ptr [RCX],0x1
000035a0(4): MOVZX EDI,byte ptr [RDI + 0x7]
000035a4(4): CMP DIL,0x3d
000035a8(2): JZ 0x000035d0
000035aa(4): MOVZX ESI,byte ptr [RSI + RDI*0x1]
000035ae(3): TEST SIL,SIL
000035b1(2): JS 0x000035e6
000035b3(4): CMP qword ptr [RCX],0x0
000035b7(2): JZ 0x000035d0
000035b9(4): SHL R10D,0x5
000035bd(4): ADD RAX,0x1
000035c1(3): OR R10D,ESI
000035c4(4): MOV byte ptr [RAX + -0x1],R10B
000035c8(4): SUB qword ptr [RCX],0x1
000035cc(4): NOP dword ptr [RAX]
000035d0(3): MOV qword ptr [RDX],RAX
000035d3(5): MOV EAX,0x1
000035d8(2): RET
000035e0(4): CMP byte ptr [RDI + 0x3],0x3d
000035e4(2): JZ 0x000035f0
000035e6(3): MOV qword ptr [RDX],RAX
000035e9(2): XOR EAX,EAX
000035eb(1): RET
000035f0(4): CMP byte ptr [RDI + 0x4],0x3d
000035f4(2): JNZ 0x000035e6
000035f6(4): CMP byte ptr [RDI + 0x5],0x3d
000035fa(2): JNZ 0x000035e6
000035fc(4): CMP byte ptr [RDI + 0x6],0x3d
00003600(2): JNZ 0x000035e6
00003602(4): CMP byte ptr [RDI + 0x7],0x3d
00003606(2): JNZ 0x000035e6
00003608(2): JMP 0x000035d0
00003610(7): LEA R8,[0x7de0]
00003617(5): JMP 0x0000373b
00003620(5): MOVZX R9D,byte ptr [RDI + 0x1]
00003625(3): MOV R10D,R9D
00003628(4): SHR R10B,0x6
0000362c(3): ADD EAX,R10D
0000362f(3): AND EAX,0x1f
00003632(4): CMP RCX,0x2
00003636(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
0000363b(3): MOV byte ptr [RDX + 0x1],AL
0000363e(6): JZ 0x000037e5
00003644(3): MOV EAX,R9D
00003647(2): SHR AL,1
00003649(3): AND EAX,0x1f
0000364c(4): CMP RCX,0x3
00003650(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
00003655(3): MOV byte ptr [RDX + 0x2],AL
00003658(6): JZ 0x000037e5
0000365e(4): SHL R9D,0x4
00003662(4): CMP RSI,0x2
00003666(6): JZ 0x000037d0
0000366c(4): MOVZX EAX,byte ptr [RDI + 0x2]
00003670(3): MOV R10D,EAX
00003673(4): SHR R10B,0x4
00003677(3): ADD R9D,R10D
0000367a(4): AND R9D,0x1f
0000367e(4): CMP RCX,0x4
00003682(5): MOVZX R9D,byte ptr [R8 + R9*0x1]
00003687(4): MOV byte ptr [RDX + 0x3],R9B
0000368b(6): JZ 0x000037e5
00003691(4): CMP RSI,0x3
00003695(4): LEA R9D,[RAX + RAX*0x1]
00003699(6): JZ 0x000037f0
0000369f(4): MOVZX EAX,byte ptr [RDI + 0x3]
000036a3(3): MOV R10D,EAX
000036a6(4): SHR R10B,0x7
000036aa(3): ADD R9D,R10D
000036ad(4): AND R9D,0x1f
000036b1(4): CMP RCX,0x5
000036b5(5): MOVZX R9D,byte ptr [R8 + R9*0x1]
000036ba(4): MOV byte ptr [RDX + 0x4],R9B
000036be(6): JZ 0x000037e5
000036c4(3): MOV R9D,EAX
000036c7(4): SHR R9B,0x2
000036cb(4): AND R9D,0x1f
000036cf(4): CMP RCX,0x6
000036d3(5): MOVZX R9D,byte ptr [R8 + R9*0x1]
000036d8(4): MOV byte ptr [RDX + 0x5],R9B
000036dc(6): JZ 0x000037e5
000036e2(3): SHL EAX,0x3
000036e5(4): CMP RSI,0x4
000036e9(6): JZ 0x00003808
000036ef(5): MOVZX R9D,byte ptr [RDI + 0x4]
000036f4(3): MOV R10D,R9D
000036f7(4): SHR R10B,0x5
000036fb(3): ADD EAX,R10D
000036fe(3): AND EAX,0x1f
00003701(4): CMP RCX,0x7
00003705(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
0000370a(3): MOV byte ptr [RDX + 0x6],AL
0000370d(6): JZ 0x000037e5
00003713(4): AND R9D,0x1f
00003717(4): CMP RCX,0x8
0000371b(5): MOVZX EAX,byte ptr [R8 + R9*0x1]
00003720(3): MOV byte ptr [RDX + 0x7],AL
00003723(6): JZ 0x000037e5
00003729(4): SUB RSI,0x5
0000372d(2): JZ 0x00003733
0000372f(4): ADD RDI,0x5
00003733(4): ADD RDX,0x8
00003737(4): SUB RCX,0x8
0000373b(3): TEST RSI,RSI
0000373e(6): JZ 0x00003820
00003744(3): TEST RCX,RCX
00003747(6): JZ 0x00003820
0000374d(3): MOVZX EAX,byte ptr [RDI]
00003750(3): MOV R9D,EAX
00003753(4): SHR R9B,0x3
00003757(4): AND R9D,0x1f
0000375b(4): CMP RCX,0x1
0000375f(5): MOVZX R9D,byte ptr [R8 + R9*0x1]
00003764(3): MOV byte ptr [RDX],R9B
00003767(2): JZ 0x000037e5
00003769(3): SHL EAX,0x2
0000376c(4): CMP RSI,0x1
00003770(6): JNZ 0x00003620
00003776(3): AND EAX,0x1c
00003779(4): CMP RCX,0x2
0000377d(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
00003782(3): MOV byte ptr [RDX + 0x1],AL
00003785(2): JZ 0x000037e5
00003787(4): CMP RCX,0x3
0000378b(4): MOV byte ptr [RDX + 0x2],0x3d
0000378f(2): JZ 0x000037e5
00003791(4): CMP RCX,0x4
00003795(4): MOV byte ptr [RDX + 0x3],0x3d
00003799(2): JZ 0x000037e5
0000379b(4): CMP RCX,0x5
0000379f(4): MOV byte ptr [RDX + 0x4],0x3d
000037a3(2): JZ 0x000037e5
000037a5(4): CMP RCX,0x6
000037a9(4): MOV byte ptr [RDX + 0x5],0x3d
000037ad(2): JZ 0x000037e5
000037af(4): CMP RCX,0x7
000037b3(4): MOV byte ptr [RDX + 0x6],0x3d
000037b7(2): JZ 0x000037e5
000037b9(4): CMP RCX,0x8
000037bd(4): MOV byte ptr [RDX + 0x7],0x3d
000037c1(2): JZ 0x000037e5
000037c3(2): XOR ESI,ESI
000037c5(5): JMP 0x00003733
000037d0(4): AND R9D,0x1f
000037d4(4): CMP RCX,0x4
000037d8(3): MOVSXD R9,R9D
000037db(5): MOVZX EAX,byte ptr [R8 + R9*0x1]
000037e0(3): MOV byte ptr [RDX + 0x3],AL
000037e3(2): JNZ 0x0000379b
000037e5(1): RET
000037f0(4): AND R9D,0x1e
000037f4(4): CMP RCX,0x5
000037f8(5): MOVZX EAX,byte ptr [R8 + R9*0x1]
000037fd(3): MOV byte ptr [RDX + 0x4],AL
00003800(2): JNZ 0x000037a5
00003802(2): RET
00003808(3): AND EAX,0x18
0000380b(4): CMP RCX,0x7
0000380f(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
00003814(3): MOV byte ptr [RDX + 0x6],AL
00003817(2): JZ 0x000037e5
00003819(2): JMP 0x000037b9
00003820(3): TEST RCX,RCX
00003823(2): JZ 0x000037e5
00003825(3): MOV byte ptr [RDX],0x0
00003828(1): RET
00003830(2): PUSH R14
00003832(2): PUSH R13
00003834(3): MOV R13,RDX
00003837(4): LEA RDX,[RSI + 0x4]
0000383b(2): PUSH R12
0000383d(1): PUSH RBP
0000383e(1): PUSH RBX
0000383f(10): MOV RBX,-0x3333333333333333
00003849(3): MOV RAX,RDX
0000384c(3): MUL RBX
0000384f(4): SHR RDX,0x2
00003853(8): LEA RBX,[RDX*0x8]
0000385b(4): LEA RBP,[RBX + 0x1]
0000385f(3): CMP RSI,RBP
00003862(2): JBE 0x00003880
00003864(8): MOV qword ptr [R13],0x0
0000386c(2): XOR EBP,EBP
0000386e(1): POP RBX
0000386f(3): MOV RAX,RBP
00003872(1): POP RBP
00003873(2): POP R12
00003875(2): POP R13
00003877(2): POP R14
00003879(1): RET
00003880(3): MOV R14,RDI
00003883(3): MOV RDI,RBP
00003886(3): MOV R12,RSI
00003889(5): CALL 0x00001780
0000388e(3): TEST RAX,RAX
00003891(4): MOV qword ptr [R13],RAX
00003895(2): JZ 0x0000386e
00003897(3): MOV RCX,RBP
0000389a(3): MOV RDX,RAX
0000389d(3): MOV RBP,RBX
000038a0(3): MOV RSI,R12
000038a3(3): MOV RDI,R14
000038a6(5): CALL 0x00003610
000038ab(1): POP RBX
000038ac(3): MOV RAX,RBP
000038af(1): POP RBP
000038b0(2): POP R12
000038b2(2): POP R13
000038b4(2): POP R14
000038b6(1): RET
000038c0(7): LEA RAX,[0x7e00]
000038c7(4): MOVZX EDI,DIL
000038cb(4): MOVZX EAX,byte ptr [RAX + RDI*0x1]
000038cf(2): NOT EAX
000038d1(3): SHR AL,0x7
000038d4(1): RET
000038e0(6): MOV dword ptr [RDI],0x0
000038e6(1): RET
000038f0(2): PUSH R15
000038f2(2): PUSH R14
000038f4(3): MOV R11,RDX
000038f7(2): PUSH R13
000038f9(2): PUSH R12
000038fb(3): MOV R14,RDI
000038fe(1): PUSH RBP
000038ff(1): PUSH RBX
00003900(3): MOV R12,RSI
00003903(4): SUB RSP,0x38
00003907(3): MOV R15,qword ptr [R8]
0000390a(9): MOV RBX,qword ptr FS:[0x28]
00003913(5): MOV qword ptr [RSP + 0x28],RBX
00003918(2): XOR EBX,EBX
0000391a(3): TEST RDI,RDI
0000391d(5): MOV qword ptr [RSP + 0x18],RCX
00003922(5): MOV qword ptr [RSP + 0x10],R8
00003927(5): MOV qword ptr [RSP + 0x20],R15
0000392c(5): SETNZ byte ptr [RSP + 0x7]
00003931(6): JZ 0x00003b60
00003937(3): TEST RDX,RDX
0000393a(2): MOV EDX,dword ptr [RDI]
0000393c(5): SETNZ byte ptr [RSP + 0x6]
00003941(5): MOVZX EAX,byte ptr [RSP + 0x6]
00003946(2): TEST EDX,EDX
00003948(4): SETZ R13B
0000394c(3): AND R13D,EAX
0000394f(4): LEA RAX,[R14 + 0x4]
00003953(5): LEA RBP,[RSP + 0x20]
00003958(5): LEA RBX,[RSP + 0x18]
0000395d(5): MOV qword ptr [RSP + 0x8],RAX
00003962(3): TEST R13B,R13B
00003965(3): MOV RDX,R15
00003968(6): JNZ 0x00003a3d
0000396e(3): TEST R11,R11
00003971(3): SETZ AL
00003974(4): AND AL,byte ptr [RSP + 0x6]
00003978(6): JNZ 0x00003a00
0000397e(3): TEST R11,R11
00003981(6): JZ 0x00003a60
00003987(5): CMP byte ptr [R12],0xa
0000398c(6): JZ 0x00003b30
00003992(3): SUB RDX,R15
00003995(5): ADD qword ptr [RSP + 0x18],RDX
0000399a(3): TEST R14,R14
0000399d(5): MOV qword ptr [RSP + 0x20],R15
000039a2(4): LEA R15,[R12 + R11*0x1]
000039a6(6): JNZ 0x00003a79
000039ac(3): MOV RDI,R12
000039af(4): CMP R11,0x7
000039b3(2): JA 0x000039c7
000039b5(5): CMP byte ptr [RSP + 0x7],0x0
000039ba(2): JZ 0x000039c7
000039bc(5): CMP byte ptr [RSP + 0x6],0x0
000039c1(6): JNZ 0x00003ac7
000039c7(3): MOV RCX,RBP
000039ca(3): MOV RDX,RBX
000039cd(3): MOV RSI,R11
000039d0(5): CALL 0x00003460
000039d5(2): TEST AL,AL
000039d7(6): JZ 0x00003b8f
000039dd(3): MOV R11,R15
000039e0(5): MOV R15,qword ptr [RSP + 0x20]
000039e5(3): SUB R11,R12
000039e8(3): TEST R13B,R13B
000039eb(3): MOV RDX,R15
000039ee(2): JNZ 0x00003a3d
000039f0(3): TEST R11,R11
000039f3(3): SETZ AL
000039f6(4): AND AL,byte ptr [RSP + 0x6]
000039fa(2): JZ 0x0000397e
000039fc(4): NOP dword ptr [RAX]
00003a00(5): MOV RBX,qword ptr [RSP + 0x10]
00003a05(3): SUB qword ptr [RBX],RDX
00003a08(5): MOV RBX,qword ptr [RSP + 0x28]
00003a0d(9): XOR RBX,qword ptr FS:[0x28]
00003a16(6): JNZ 0x00003b99
00003a1c(4): ADD RSP,0x38
00003a20(1): POP RBX
00003a21(1): POP RBP
00003a22(2): POP R12
00003a24(2): POP R13
00003a26(2): POP R14
00003a28(2): POP R15
00003a2a(1): RET
00003a30(5): MOV R15,qword ptr [RSP + 0x20]
00003a35(4): ADD R12,0x8
00003a39(4): SUB R11,0x8
00003a3d(3): MOV RCX,RBP
00003a40(3): MOV RDX,RBX
00003a43(3): MOV RSI,R11
00003a46(3): MOV RDI,R12
00003a49(5): CALL 0x00003460
00003a4e(2): TEST AL,AL
00003a50(2): JNZ 0x00003a30
00003a52(5): MOV RDX,qword ptr [RSP + 0x20]
00003a57(5): JMP 0x0000396e
00003a60(3): SUB RDX,R15
00003a63(5): ADD qword ptr [RSP + 0x18],RDX
00003a68(3): TEST R14,R14
00003a6b(5): MOV qword ptr [RSP + 0x20],R15
00003a70(6): JZ 0x00003b70
00003a76(3): MOV R15,R12
00003a79(3): MOV EAX,dword ptr [R14]
00003a7c(3): CMP EAX,0x8
00003a7f(2): JZ 0x00003ae0
00003a81(2): TEST EAX,EAX
00003a83(2): JZ 0x00003ae7
00003a85(3): CMP R12,R15
00003a88(2): JNC 0x00003ab6
00003a8a(6): NOP word ptr [RAX + RAX*0x1]
00003a90(4): ADD R12,0x1
00003a94(6): MOVZX EDX,byte ptr [R12 + -0x1]
00003a9a(3): CMP DL,0xa
00003a9d(2): JZ 0x00003ab1
00003a9f(3): LEA ECX,[RAX + 0x1]
00003aa2(3): CMP ECX,0x8
00003aa5(3): MOV dword ptr [R14],ECX
00003aa8(5): MOV byte ptr [R14 + RAX*0x1 + 0x4],DL
00003aad(2): JZ 0x00003b10
00003aaf(2): MOV EAX,ECX
00003ab1(3): CMP R12,R15
00003ab4(2): JNZ 0x00003a90
00003ab6(3): MOV R11D,EAX
00003ab9(5): MOV RDI,qword ptr [RSP + 0x8]
00003abe(3): TEST R11,R11
00003ac1(6): JNZ 0x000039af
00003ac7(5): MOV RDX,qword ptr [RSP + 0x20]
00003acc(5): MOV EAX,0x1
00003ad1(5): JMP 0x00003a00
00003ae0(7): MOV dword ptr [R14],0x0
00003ae7(4): CMP R11,0x7
00003aeb(2): JLE 0x00003b04
00003aed(5): MOV EDX,0x8
00003af2(5): MOV ESI,0xa
00003af7(3): MOV RDI,R12
00003afa(5): CALL 0x00001710
00003aff(3): TEST RAX,RAX
00003b02(2): JZ 0x00003b7d
00003b04(3): MOV EAX,dword ptr [R14]
00003b07(5): JMP 0x00003a85
00003b10(5): MOV EAX,0x8
00003b15(5): MOV RDI,qword ptr [RSP + 0x8]
00003b1a(3): MOV R11D,EAX
00003b1d(3): TEST R11,R11
00003b20(6): JNZ 0x000039af
00003b26(2): JMP 0x00003ac7
00003b30(3): TEST R14,R14
00003b33(2): JZ 0x00003b48
00003b35(4): ADD R12,0x1
00003b39(4): SUB R11,0x1
00003b3d(3): MOV R15,RDX
00003b40(5): JMP 0x00003962
00003b48(3): SUB RDX,R15
00003b4b(5): MOV qword ptr [RSP + 0x20],R15
00003b50(5): ADD qword ptr [RSP + 0x18],RDX
00003b55(4): LEA R15,[R12 + R11*0x1]
00003b59(5): JMP 0x000039ac
00003b60(6): MOV R13D,0x1
00003b66(5): MOV byte ptr [RSP + 0x6],0x1
00003b6b(5): JMP 0x0000394f
00003b70(3): MOV RDX,R15
00003b73(5): MOV EAX,0x1
00003b78(5): JMP 0x00003a00
00003b7d(3): MOV RDI,R12
00003b80(6): MOV R11D,0x8
00003b86(4): ADD R12,0x8
00003b8a(5): JMP 0x000039c7
00003b8f(5): MOV RDX,qword ptr [RSP + 0x20]
00003b94(5): JMP 0x00003a00
00003b99(5): CALL 0x00001660
00003b9e(2): NOP
00003ba0(2): PUSH R14
00003ba2(2): PUSH R13
00003ba4(3): MOV R14,RDX
00003ba7(2): PUSH R12
00003ba9(1): PUSH RBP
00003baa(3): MOV R12,RDI
00003bad(1): PUSH RBX
00003bae(3): MOV R13,RSI
00003bb1(3): MOV RBX,RCX
00003bb4(3): MOV RBP,R8
00003bb7(4): SUB RSP,0x20
00003bbb(9): MOV RAX,qword ptr FS:[0x28]
00003bc4(5): MOV qword ptr [RSP + 0x18],RAX
00003bc9(2): XOR EAX,EAX
00003bcb(3): MOV RAX,RDX
00003bce(4): SHR RAX,0x3
00003bd2(5): LEA RDI,[RAX + RAX*0x4 + 0x5]
00003bd7(5): MOV qword ptr [RSP + 0x10],RDI
00003bdc(5): CALL 0x00001780
00003be1(3): TEST RAX,RAX
00003be4(3): MOV qword ptr [RBX],RAX
00003be7(2): JZ 0x00003c18
00003be9(5): LEA R8,[RSP + 0x10]
00003bee(3): MOV RCX,RAX
00003bf1(3): MOV RDX,R14
00003bf4(3): MOV RSI,R13
00003bf7(3): MOV RDI,R12
00003bfa(5): CALL 0x000038f0
00003bff(2): TEST AL,AL
00003c01(2): JZ 0x00003c40
00003c03(3): TEST RBP,RBP
00003c06(2): JZ 0x00003c18
00003c08(5): MOV RDX,qword ptr [RSP + 0x10]
00003c0d(4): MOV qword ptr [RBP],RDX
00003c11(2): JMP 0x00003c1d
00003c18(5): MOV EAX,0x1
00003c1d(5): MOV RCX,qword ptr [RSP + 0x18]
00003c22(9): XOR RCX,qword ptr FS:[0x28]
00003c2b(2): JNZ 0x00003c5a
00003c2d(4): ADD RSP,0x20
00003c31(1): POP RBX
00003c32(1): POP RBP
00003c33(2): POP R12
00003c35(2): POP R13
00003c37(2): POP R14
00003c39(1): RET
00003c40(3): MOV RDI,qword ptr [RBX]
00003c43(4): MOV byte ptr [RSP + 0xf],AL
00003c47(5): CALL 0x00001590
00003c4c(7): MOV qword ptr [RBX],0x0
00003c53(5): MOVZX EAX,byte ptr [RSP + 0xf]
00003c58(2): JMP 0x00003c1d
00003c5a(5): CALL 0x00001660
00003c5f(1): NOP
00003c60(2): XOR EAX,EAX
00003c62(4): CMP RSI,0x1
00003c66(6): JBE 0x00003cf9
00003c6c(4): MOVZX R8D,byte ptr [RDI]
00003c70(7): LEA R9,[0x7f00]
00003c77(5): MOVZX R8D,byte ptr [R9 + R8*0x1]
00003c7c(3): TEST R8B,R8B
00003c7f(2): JS 0x00003cf9
00003c81(5): MOVZX R10D,byte ptr [RDI + 0x1]
00003c86(5): MOVZX R10D,byte ptr [R9 + R10*0x1]
00003c8b(3): TEST R10B,R10B
00003c8e(2): JS 0x00003cf9
00003c90(4): CMP qword ptr [RCX],0x0
00003c94(3): MOV RAX,qword ptr [RDX]
00003c97(2): JNZ 0x00003d10
00003c99(4): CMP RSI,0x2
00003c9d(2): JZ 0x00003d06
00003c9f(5): MOVZX R8D,byte ptr [RDI + 0x2]
00003ca4(4): CMP R8B,0x3d
00003ca8(2): JZ 0x00003d00
00003caa(5): MOVZX R8D,byte ptr [R9 + R8*0x1]
00003caf(3): TEST R8B,R8B
00003cb2(2): JS 0x00003d06
00003cb4(4): CMP qword ptr [RCX],0x0
00003cb8(2): JNZ 0x00003d30
00003cba(4): CMP RSI,0x3
00003cbe(2): JZ 0x00003d06
00003cc0(4): MOVZX EDI,byte ptr [RDI + 0x3]
00003cc4(4): CMP DIL,0x3d
00003cc8(6): JZ 0x00003d60
00003cce(5): MOVZX ESI,byte ptr [R9 + RDI*0x1]
00003cd3(3): TEST SIL,SIL
00003cd6(2): JS 0x00003d06
00003cd8(4): CMP qword ptr [RCX],0x0
00003cdc(2): JZ 0x00003cf1
00003cde(4): SHL R8D,0x6
00003ce2(4): ADD RAX,0x1
00003ce6(3): OR R8D,ESI
00003ce9(4): MOV byte ptr [RAX + -0x1],R8B
00003ced(4): SUB qword ptr [RCX],0x1
00003cf1(3): MOV qword ptr [RDX],RAX
00003cf4(5): MOV EAX,0x1
00003cf9(2): RET
00003d00(4): CMP RSI,0x4
00003d04(2): JZ 0x00003d50
00003d06(3): MOV qword ptr [RDX],RAX
00003d09(2): XOR EAX,EAX
00003d0b(1): RET
00003d10(3): MOV R11D,R10D
00003d13(4): SHL R8D,0x2
00003d17(4): ADD RAX,0x1
00003d1b(4): SAR R11B,0x4
00003d1f(3): OR R8D,R11D
00003d22(4): MOV byte ptr [RAX + -0x1],R8B
00003d26(4): SUB qword ptr [RCX],0x1
00003d2a(5): JMP 0x00003c99
00003d30(3): MOV R11D,R8D
00003d33(4): SHL R10D,0x4
00003d37(4): ADD RAX,0x1
00003d3b(4): SAR R11B,0x2
00003d3f(3): OR R10D,R11D
00003d42(4): MOV byte ptr [RAX + -0x1],R10B
00003d46(4): SUB qword ptr [RCX],0x1
00003d4a(5): JMP 0x00003cba
00003d50(4): CMP byte ptr [RDI + 0x3],0x3d
00003d54(2): JNZ 0x00003d06
00003d56(2): JMP 0x00003cf1
00003d60(4): CMP RSI,0x4
00003d64(2): JNZ 0x00003d06
00003d66(2): JMP 0x00003cf1
00003d70(3): TEST CL,0x3
00003d73(2): JNZ 0x00003d89
00003d75(3): MOV RAX,RCX
00003d78(4): SHR RAX,0x2
00003d7c(4): LEA RAX,[RAX + RAX*0x2]
00003d80(3): CMP RAX,RSI
00003d83(6): JZ 0x00003e98
00003d89(7): LEA R9,[0x8000]
00003d90(5): JMP 0x00003e16
00003d98(5): MOVZX R8D,byte ptr [RDI + 0x1]
00003d9d(3): MOV R10D,R8D
00003da0(4): SHR R10B,0x4
00003da4(3): ADD EAX,R10D
00003da7(3): AND EAX,0x3f
00003daa(4): CMP RCX,0x2
00003dae(5): MOVZX EAX,byte ptr [R9 + RAX*0x1]
00003db3(3): MOV byte ptr [RDX + 0x1],AL
00003db6(6): JZ 0x00003e92
00003dbc(4): SHL R8D,0x2
00003dc0(4): CMP RSI,0x2
00003dc4(6): JZ 0x00003e80
00003dca(4): MOVZX EAX,byte ptr [RDI + 0x2]
00003dce(3): MOV R10D,EAX
00003dd1(4): SHR R10B,0x6
00003dd5(3): ADD R8D,R10D
00003dd8(4): AND R8D,0x3f
00003ddc(4): CMP RCX,0x3
00003de0(5): MOVZX R8D,byte ptr [R9 + R8*0x1]
00003de5(4): MOV byte ptr [RDX + 0x2],R8B
00003de9(6): JZ 0x00003e92
00003def(3): AND EAX,0x3f
00003df2(4): CMP RCX,0x4
00003df6(5): MOVZX EAX,byte ptr [R9 + RAX*0x1]
00003dfb(3): MOV byte ptr [RDX + 0x3],AL
00003dfe(6): JZ 0x00003e92
00003e04(4): SUB RSI,0x3
00003e08(2): JZ 0x00003e0e
00003e0a(4): ADD RDI,0x3
00003e0e(4): ADD RDX,0x4
00003e12(4): SUB RCX,0x4
00003e16(3): TEST RSI,RSI
00003e19(6): JZ 0x00003f18
00003e1f(3): TEST RCX,RCX
00003e22(6): JZ 0x00003f18
00003e28(3): MOVZX EAX,byte ptr [RDI]
00003e2b(3): MOV R8D,EAX
00003e2e(4): SHR R8B,0x2
00003e32(4): AND R8D,0x3f
00003e36(4): CMP RCX,0x1
00003e3a(5): MOVZX R8D,byte ptr [R9 + R8*0x1]
00003e3f(3): MOV byte ptr [RDX],R8B
00003e42(2): JZ 0x00003e92
00003e44(3): SHL EAX,0x4
00003e47(4): CMP RSI,0x1
00003e4b(6): JNZ 0x00003d98
00003e51(3): AND EAX,0x30
00003e54(4): CMP RCX,0x2
00003e58(5): MOVZX EAX,byte ptr [R9 + RAX*0x1]
00003e5d(3): MOV byte ptr [RDX + 0x1],AL
00003e60(2): JZ 0x00003e92
00003e62(4): CMP RCX,0x3
00003e66(4): MOV byte ptr [RDX + 0x2],0x3d
00003e6a(2): JZ 0x00003e92
00003e6c(4): CMP RCX,0x4
00003e70(4): MOV byte ptr [RDX + 0x3],0x3d
00003e74(2): JZ 0x00003e92
00003e76(2): XOR ESI,ESI
00003e78(2): JMP 0x00003e0e
00003e80(4): AND R8D,0x3c
00003e84(4): CMP RCX,0x3
00003e88(5): MOVZX EAX,byte ptr [R9 + R8*0x1]
00003e8d(3): MOV byte ptr [RDX + 0x2],AL
00003e90(2): JNZ 0x00003e6c
00003e92(2): RET
00003e98(3): TEST RAX,RAX
00003e9b(4): LEA R8,[RDI + RAX*0x1]
00003e9f(7): LEA RCX,[0x8000]
00003ea6(2): JZ 0x00003e92
00003ea8(8): NOP dword ptr [RAX + RAX*0x1]
00003eb0(3): MOVZX EAX,byte ptr [RDI]
00003eb3(4): ADD RDI,0x3
00003eb7(4): ADD RDX,0x4
00003ebb(2): MOV ESI,EAX
00003ebd(3): SHL EAX,0x4
00003ec0(4): SHR SIL,0x2
00003ec4(3): AND ESI,0x3f
00003ec7(4): MOVZX ESI,byte ptr [RCX + RSI*0x1]
00003ecb(4): MOV byte ptr [RDX + -0x4],SIL
00003ecf(4): MOVZX ESI,byte ptr [RDI + -0x2]
00003ed3(3): MOV R9D,ESI
00003ed6(4): SHR R9B,0x4
00003eda(3): ADD EAX,R9D
00003edd(3): AND EAX,0x3f
00003ee0(4): MOVZX EAX,byte ptr [RCX + RAX*0x1]
00003ee4(3): MOV byte ptr [RDX + -0x3],AL
00003ee7(4): MOVZX EAX,byte ptr [RDI + -0x1]
00003eeb(3): MOV R9D,EAX
00003eee(3): AND EAX,0x3f
00003ef1(4): SHR R9B,0x6
00003ef5(4): MOVZX EAX,byte ptr [RCX + RAX*0x1]
00003ef9(4): LEA ESI,[R9 + RSI*0x4]
00003efd(3): AND ESI,0x3f
00003f00(4): MOVZX ESI,byte ptr [RCX + RSI*0x1]
00003f04(4): MOV byte ptr [RDX + -0x2],SIL
00003f08(3): CMP R8,RDI
00003f0b(3): MOV byte ptr [RDX + -0x1],AL
00003f0e(2): JNZ 0x00003eb0
00003f10(2): RET
00003f18(3): TEST RCX,RCX
00003f1b(6): JZ 0x00003e92
00003f21(3): MOV byte ptr [RDX],0x0
00003f24(1): RET
00003f30(2): PUSH R14
00003f32(2): PUSH R13
00003f34(3): MOV R13,RDX
00003f37(4): LEA RDX,[RSI + 0x2]
00003f3b(2): PUSH R12
00003f3d(1): PUSH RBP
00003f3e(1): PUSH RBX
00003f3f(10): MOV RBX,-0x5555555555555555
00003f49(3): MOV RAX,RDX
00003f4c(3): MUL RBX
00003f4f(3): SHR RDX,1
00003f52(8): LEA RBX,[RDX*0x4]
00003f5a(4): LEA RBP,[RBX + 0x1]
00003f5e(3): CMP RSI,RBP
00003f61(2): JBE 0x00003f80
00003f63(8): MOV qword ptr [R13],0x0
00003f6b(2): XOR EBP,EBP
00003f6d(1): POP RBX
00003f6e(3): MOV RAX,RBP
00003f71(1): POP RBP
00003f72(2): POP R12
00003f74(2): POP R13
00003f76(2): POP R14
00003f78(1): RET
00003f80(3): MOV R14,RDI
00003f83(3): MOV RDI,RBP
00003f86(3): MOV R12,RSI
00003f89(5): CALL 0x00001780
00003f8e(3): TEST RAX,RAX
00003f91(4): MOV qword ptr [R13],RAX
00003f95(2): JZ 0x00003f6d
00003f97(3): MOV RCX,RBP
00003f9a(3): MOV RDX,RAX
00003f9d(3): MOV RBP,RBX
00003fa0(3): MOV RSI,R12
00003fa3(3): MOV RDI,R14
00003fa6(5): CALL 0x00003d70
00003fab(1): POP RBX
00003fac(3): MOV RAX,RBP
00003faf(1): POP RBP
00003fb0(2): POP R12
00003fb2(2): POP R13
00003fb4(2): POP R14
00003fb6(1): RET
00003fc0(7): LEA RAX,[0x7f00]
00003fc7(4): MOVZX EDI,DIL
00003fcb(4): MOVZX EAX,byte ptr [RAX + RDI*0x1]
00003fcf(2): NOT EAX
00003fd1(3): SHR AL,0x7
00003fd4(1): RET
00003fe0(6): MOV dword ptr [RDI],0x0
00003fe6(1): RET
00003ff0(2): PUSH R15
00003ff2(2): PUSH R14
00003ff4(3): MOV R14,RDI
00003ff7(2): PUSH R13
00003ff9(2): PUSH R12
00003ffb(3): MOV R13,RDX
00003ffe(1): PUSH RBP
00003fff(1): PUSH RBX
00004000(3): MOV R12,RSI
00004003(4): SUB RSP,0x38
00004007(3): MOV R15,qword ptr [R8]
0000400a(9): MOV RBX,qword ptr FS:[0x28]
00004013(5): MOV qword ptr [RSP + 0x28],RBX
00004018(2): XOR EBX,EBX
0000401a(3): TEST RDI,RDI
0000401d(5): MOV qword ptr [RSP + 0x18],RCX
00004022(5): MOV qword ptr [RSP + 0x10],R8
00004027(5): MOV qword ptr [RSP + 0x20],R15
0000402c(5): SETNZ byte ptr [RSP + 0x7]
00004031(6): JZ 0x00004260
00004037(3): TEST RDX,RDX
0000403a(2): MOV EAX,dword ptr [RDI]
0000403c(5): SETNZ byte ptr [RSP + 0x5]
00004041(5): MOVZX EBX,byte ptr [RSP + 0x5]
00004046(2): TEST EAX,EAX
00004048(3): SETZ AL
0000404b(2): AND EAX,EBX
0000404d(4): MOV byte ptr [RSP + 0x6],AL
00004051(4): LEA RAX,[R14 + 0x4]
00004055(5): LEA RBP,[RSP + 0x20]
0000405a(5): LEA RBX,[RSP + 0x18]
0000405f(5): MOV qword ptr [RSP + 0x8],RAX
00004064(5): CMP byte ptr [RSP + 0x6],0x0
00004069(3): MOV RDX,R15
0000406c(6): JNZ 0x00004145
00004072(3): TEST R13,R13
00004075(3): SETZ AL
00004078(4): AND AL,byte ptr [RSP + 0x5]
0000407c(6): JNZ 0x00004108
00004082(3): TEST R13,R13
00004085(6): JZ 0x00004168
0000408b(5): CMP byte ptr [R12],0xa
00004090(6): JZ 0x00004230
00004096(3): SUB RDX,R15
00004099(5): ADD qword ptr [RSP + 0x18],RDX
0000409e(3): TEST R14,R14
000040a1(5): MOV qword ptr [RSP + 0x20],R15
000040a6(4): LEA R15,[R12 + R13*0x1]
000040aa(6): JNZ 0x00004181
000040b0(3): MOV RDI,R12
000040b3(4): CMP R13,0x3
000040b7(2): JA 0x000040cb
000040b9(5): CMP byte ptr [RSP + 0x7],0x0
000040be(2): JZ 0x000040cb
000040c0(5): CMP byte ptr [RSP + 0x5],0x0
000040c5(6): JNZ 0x000041cf
000040cb(3): MOV RCX,RBP
000040ce(3): MOV RDX,RBX
000040d1(3): MOV RSI,R13
000040d4(5): CALL 0x00003c60
000040d9(2): TEST AL,AL
000040db(6): JZ 0x0000428e
000040e1(3): SUB R15,R12
000040e4(5): CMP byte ptr [RSP + 0x6],0x0
000040e9(3): MOV R13,R15
000040ec(5): MOV R15,qword ptr [RSP + 0x20]
000040f1(3): MOV RDX,R15
000040f4(2): JNZ 0x00004145
000040f6(3): TEST R13,R13
000040f9(3): SETZ AL
000040fc(4): AND AL,byte ptr [RSP + 0x5]
00004100(2): JZ 0x00004082
00004102(6): NOP word ptr [RAX + RAX*0x1]
00004108(5): MOV RBX,qword ptr [RSP + 0x10]
0000410d(3): SUB qword ptr [RBX],RDX
00004110(5): MOV RBX,qword ptr [RSP + 0x28]
00004115(9): XOR RBX,qword ptr FS:[0x28]
0000411e(6): JNZ 0x00004298
00004124(4): ADD RSP,0x38
00004128(1): POP RBX
00004129(1): POP RBP
0000412a(2): POP R12
0000412c(2): POP R13
0000412e(2): POP R14
00004130(2): POP R15
00004132(1): RET
00004138(5): MOV R15,qword ptr [RSP + 0x20]
0000413d(4): ADD R12,0x4
00004141(4): SUB R13,0x4
00004145(3): MOV RCX,RBP
00004148(3): MOV RDX,RBX
0000414b(3): MOV RSI,R13
0000414e(3): MOV RDI,R12
00004151(5): CALL 0x00003c60
00004156(2): TEST AL,AL
00004158(2): JNZ 0x00004138
0000415a(5): MOV RDX,qword ptr [RSP + 0x20]
0000415f(5): JMP 0x00004072
00004168(3): SUB RDX,R15
0000416b(5): ADD qword ptr [RSP + 0x18],RDX
00004170(3): TEST R14,R14
00004173(5): MOV qword ptr [RSP + 0x20],R15
00004178(6): JZ 0x0000426f
0000417e(3): MOV R15,R12
00004181(3): MOV EAX,dword ptr [R14]
00004184(3): CMP EAX,0x4
00004187(2): JZ 0x000041e0
00004189(2): TEST EAX,EAX
0000418b(2): JZ 0x000041e7
0000418d(3): CMP R12,R15
00004190(2): JNC 0x000041be
00004192(6): NOP word ptr [RAX + RAX*0x1]
00004198(4): ADD R12,0x1
0000419c(6): MOVZX EDX,byte ptr [R12 + -0x1]
000041a2(3): CMP DL,0xa
000041a5(2): JZ 0x000041b9
000041a7(3): LEA ECX,[RAX + 0x1]
000041aa(3): CMP ECX,0x4
000041ad(3): MOV dword ptr [R14],ECX
000041b0(5): MOV byte ptr [R14 + RAX*0x1 + 0x4],DL
000041b5(2): JZ 0x00004210
000041b7(2): MOV EAX,ECX
000041b9(3): CMP R12,R15
000041bc(2): JNZ 0x00004198
000041be(3): MOV R13D,EAX
000041c1(5): MOV RDI,qword ptr [RSP + 0x8]
000041c6(3): TEST R13,R13
000041c9(6): JNZ 0x000040b3
000041cf(5): MOV RDX,qword ptr [RSP + 0x20]
000041d4(5): MOV EAX,0x1
000041d9(5): JMP 0x00004108
000041e0(7): MOV dword ptr [R14],0x0
000041e7(4): CMP R13,0x3
000041eb(2): JLE 0x00004204
000041ed(5): MOV EDX,0x4
000041f2(5): MOV ESI,0xa
000041f7(3): MOV RDI,R12
000041fa(5): CALL 0x00001710
000041ff(3): TEST RAX,RAX
00004202(2): JZ 0x0000427c
00004204(3): MOV EAX,dword ptr [R14]
00004207(5): JMP 0x0000418d
00004210(5): MOV EAX,0x4
00004215(5): MOV RDI,qword ptr [RSP + 0x8]
0000421a(3): MOV R13D,EAX
0000421d(3): TEST R13,R13
00004220(6): JNZ 0x000040b3
00004226(2): JMP 0x000041cf
00004230(3): TEST R14,R14
00004233(2): JZ 0x00004248
00004235(4): ADD R12,0x1
00004239(4): SUB R13,0x1
0000423d(3): MOV R15,RDX
00004240(5): JMP 0x00004064
00004248(3): SUB RDX,R15
0000424b(5): MOV qword ptr [RSP + 0x20],R15
00004250(5): ADD qword ptr [RSP + 0x18],RDX
00004255(4): LEA R15,[R12 + R13*0x1]
00004259(5): JMP 0x000040b0
00004260(5): MOV byte ptr [RSP + 0x6],0x1
00004265(5): MOV byte ptr [RSP + 0x5],0x1
0000426a(5): JMP 0x00004051
0000426f(3): MOV RDX,R15
00004272(5): MOV EAX,0x1
00004277(5): JMP 0x00004108
0000427c(3): MOV RDI,R12
0000427f(6): MOV R13D,0x4
00004285(4): ADD R12,0x4
00004289(5): JMP 0x000040cb
0000428e(5): MOV RDX,qword ptr [RSP + 0x20]
00004293(5): JMP 0x00004108
00004298(5): CALL 0x00001660
0000429d(3): NOP dword ptr [RAX]
000042a0(2): PUSH R14
000042a2(2): PUSH R13
000042a4(3): MOV R14,RDX
000042a7(2): PUSH R12
000042a9(1): PUSH RBP
000042aa(3): MOV R12,RDI
000042ad(1): PUSH RBX
000042ae(3): MOV R13,RSI
000042b1(3): MOV RBX,RCX
000042b4(3): MOV RBP,R8
000042b7(4): SUB RSP,0x20
000042bb(9): MOV RAX,qword ptr FS:[0x28]
000042c4(5): MOV qword ptr [RSP + 0x18],RAX
000042c9(2): XOR EAX,EAX
000042cb(3): MOV RAX,RDX
000042ce(4): SHR RAX,0x2
000042d2(5): LEA RDI,[RAX + RAX*0x2 + 0x3]
000042d7(5): MOV qword ptr [RSP + 0x10],RDI
000042dc(5): CALL 0x00001780
000042e1(3): TEST RAX,RAX
000042e4(3): MOV qword ptr [RBX],RAX
000042e7(2): JZ 0x00004318
000042e9(5): LEA R8,[RSP + 0x10]
000042ee(3): MOV RCX,RAX
000042f1(3): MOV RDX,R14
000042f4(3): MOV RSI,R13
000042f7(3): MOV RDI,R12
000042fa(5): CALL 0x00003ff0
000042ff(2): TEST AL,AL
00004301(2): JZ 0x00004340
00004303(3): TEST RBP,RBP
00004306(2): JZ 0x00004318
00004308(5): MOV RDX,qword ptr [RSP + 0x10]
0000430d(4): MOV qword ptr [RBP],RDX
00004311(2): JMP 0x0000431d
00004318(5): MOV EAX,0x1
0000431d(5): MOV RCX,qword ptr [RSP + 0x18]
00004322(9): XOR RCX,qword ptr FS:[0x28]
0000432b(2): JNZ 0x0000435a
0000432d(4): ADD RSP,0x20
00004331(1): POP RBX
00004332(1): POP RBP
00004333(2): POP R12
00004335(2): POP R13
00004337(2): POP R14
00004339(1): RET
00004340(3): MOV RDI,qword ptr [RBX]
00004343(4): MOV byte ptr [RSP + 0xf],AL
00004347(5): CALL 0x00001590
0000434c(7): MOV qword ptr [RBX],0x0
00004353(5): MOVZX EAX,byte ptr [RSP + 0xf]
00004358(2): JMP 0x0000431d
0000435a(5): CALL 0x00001660
0000435f(1): NOP
00004360(7): MOV qword ptr [0x0020b100],RDI
00004367(1): RET
00004370(7): MOV byte ptr [0x0020b0f8],DIL
00004377(1): RET
00004380(1): PUSH RBP
00004381(1): PUSH RBX
00004382(4): SUB RSP,0x8
00004386(7): MOV RDI,qword ptr [0x0020b088]
0000438d(5): CALL 0x00007150
00004392(2): TEST EAX,EAX
00004394(2): JZ 0x000043ac
00004396(5): CALL 0x000015b0
0000439b(7): CMP byte ptr [0x0020b0f8],0x0
000043a2(3): MOV RBX,RAX
000043a5(2): JZ 0x000043c3
000043a7(3): CMP dword ptr [RAX],0x20
000043aa(2): JNZ 0x000043c3
000043ac(7): MOV RDI,qword ptr [0x0020b0c0]
000043b3(5): CALL 0x00007150
000043b8(2): TEST EAX,EAX
000043ba(2): JNZ 0x00004402
000043bc(4): ADD RSP,0x8
000043c0(1): POP RBX
000043c1(1): POP RBP
000043c2(1): RET
000043c3(7): LEA RSI,[0x749e]
000043ca(2): XOR EDI,EDI
000043cc(5): MOV EDX,0x5
000043d1(5): CALL 0x00001630
000043d6(7): MOV RDI,qword ptr [0x0020b100]
000043dd(3): MOV RBP,RAX
000043e0(3): TEST RDI,RDI
000043e3(2): JZ 0x0000440d
000043e5(5): CALL 0x00005f80
000043ea(2): MOV ESI,dword ptr [RBX]
000043ec(7): LEA RDX,[0x8040]
000043f3(3): MOV RCX,RAX
000043f6(3): MOV R8,RBP
000043f9(2): XOR EDI,EDI
000043fb(2): XOR EAX,EAX
000043fd(5): CALL 0x00001810
00004402(6): MOV EDI,dword ptr [0x0020b018]
00004408(5): CALL 0x000015d0
0000440d(2): MOV ESI,dword ptr [RBX]
0000440f(7): LEA RDX,[0x8044]
00004416(3): MOV RCX,RAX
00004419(2): XOR EDI,EDI
0000441b(2): XOR EAX,EAX
0000441d(5): CALL 0x00001810
00004422(2): JMP 0x00004402
00004430(5): JMP 0x00001700
00004440(3): TEST RDI,RDI
00004443(2): JZ 0x00004460
00004445(1): PUSH RBX
00004446(2): MOV EBX,ESI
00004448(5): CALL 0x00001770
0000444d(2): MOV ECX,EBX
0000444f(2): XOR EDX,EDX
00004451(2): XOR ESI,ESI
00004453(1): POP RBX
00004454(2): MOV EDI,EAX
00004456(5): JMP 0x00001700
00004460(2): RET
00004470(3): TEST RDI,RDI
00004473(1): PUSH RBX
00004474(2): JZ 0x000044ed
00004476(5): MOV ESI,0x2f
0000447b(3): MOV RBX,RDI
0000447e(5): CALL 0x000016b0
00004483(3): TEST RAX,RAX
00004486(2): JZ 0x000044dd
00004488(4): LEA R8,[RAX + 0x1]
0000448c(3): MOV RDX,R8
0000448f(3): SUB RDX,RBX
00004492(4): CMP RDX,0x6
00004496(2): JLE 0x000044dd
00004498(4): LEA RSI,[RAX + -0x6]
0000449c(7): LEA RDI,[0x8080]
000044a3(5): MOV ECX,0x7
000044a8(2): CMPSB.REPE RDI,RSI
000044aa(3): SETA DL
000044ad(3): SBB DL,0x0
000044b0(2): TEST DL,DL
000044b2(2): JNZ 0x000044dd
000044b4(7): LEA RDI,[0x8088]
000044bb(5): MOV ECX,0x3
000044c0(3): MOV RSI,R8
000044c3(3): MOV RBX,R8
000044c6(2): CMPSB.REPE RDI,RSI
000044c8(3): SETA DL
000044cb(3): SBB DL,0x0
000044ce(2): TEST DL,DL
000044d0(2): JNZ 0x000044dd
000044d2(4): LEA RBX,[RAX + 0x4]
000044d6(7): MOV qword ptr [0x0020b080],RBX
000044dd(7): MOV qword ptr [0x0020b108],RBX
000044e4(7): MOV qword ptr [0x0020b0a8],RBX
000044eb(1): POP RBX
000044ec(1): RET
000044ed(7): MOV RCX,qword ptr [0x0020b0c0]
000044f4(7): LEA RDI,[0x8048]
000044fb(5): MOV EDX,0x37
00004500(5): MOV ESI,0x1
00004505(5): CALL 0x00001860
0000450a(5): CALL 0x000015a0
0000450f(1): NOP
00004510(1): PUSH RBP
00004511(1): PUSH RBX
00004512(3): MOV RBP,RDI
00004515(2): MOV EBX,ESI
00004517(4): SUB RSP,0x8
0000451b(5): CALL 0x00007230
00004520(3): MOVZX EDX,byte ptr [RAX]
00004523(3): AND EDX,0xffffffdf
00004526(3): CMP DL,0x55
00004529(2): JZ 0x000045a0
0000452b(3): CMP DL,0x47
0000452e(2): JZ 0x00004550
00004530(7): LEA RAX,[0x809b]
00004537(7): LEA RDX,[0x809d]
0000453e(3): CMP EBX,0x9
00004541(4): CMOVNZ RAX,RDX
00004545(4): ADD RSP,0x8
00004549(1): POP RBX
0000454a(1): POP RBP
0000454b(1): RET
00004550(4): MOVZX EDX,byte ptr [RAX + 0x1]
00004554(3): AND EDX,0xffffffdf
00004557(3): CMP DL,0x42
0000455a(2): JNZ 0x00004530
0000455c(4): CMP byte ptr [RAX + 0x2],0x31
00004560(2): JNZ 0x00004530
00004562(4): CMP byte ptr [RAX + 0x3],0x38
00004566(2): JNZ 0x00004530
00004568(4): CMP byte ptr [RAX + 0x4],0x30
0000456c(2): JNZ 0x00004530
0000456e(4): CMP byte ptr [RAX + 0x5],0x33
00004572(2): JNZ 0x00004530
00004574(4): CMP byte ptr [RAX + 0x6],0x30
00004578(2): JNZ 0x00004530
0000457a(4): CMP byte ptr [RAX + 0x7],0x0
0000457e(2): JNZ 0x00004530
00004580(4): CMP byte ptr [RBP],0x60
00004584(7): LEA RAX,[0x8094]
0000458b(7): LEA RDX,[0x8098]
00004592(4): CMOVNZ RAX,RDX
00004596(4): ADD RSP,0x8
0000459a(1): POP RBX
0000459b(1): POP RBP
0000459c(1): RET
000045a0(4): MOVZX EDX,byte ptr [RAX + 0x1]
000045a4(3): AND EDX,0xffffffdf
000045a7(3): CMP DL,0x54
000045aa(2): JNZ 0x00004530
000045ac(4): MOVZX EDX,byte ptr [RAX + 0x2]
000045b0(3): AND EDX,0xffffffdf
000045b3(3): CMP DL,0x46
000045b6(6): JNZ 0x00004530
000045bc(4): CMP byte ptr [RAX + 0x3],0x2d
000045c0(6): JNZ 0x00004530
000045c6(4): CMP byte ptr [RAX + 0x4],0x38
000045ca(6): JNZ 0x00004530
000045d0(4): CMP byte ptr [RAX + 0x5],0x0
000045d4(6): JNZ 0x00004530
000045da(4): CMP byte ptr [RBP],0x60
000045de(7): LEA RAX,[0x808c]
000045e5(7): LEA RDX,[0x8090]
000045ec(4): CMOVNZ RAX,RDX
000045f0(4): ADD RSP,0x8
000045f4(1): POP RBX
000045f5(1): POP RBP
000045f6(1): RET
00004600(2): PUSH R15
00004602(2): PUSH R14
00004604(3): MOV R15D,R8D
00004607(2): PUSH R13
00004609(2): PUSH R12
0000460b(3): MOV R14,RDI
0000460e(1): PUSH RBP
0000460f(1): PUSH RBX
00004610(3): MOV EBX,R9D
00004613(3): MOV R13,RSI
00004616(3): MOV RBP,RCX
00004619(3): AND EBX,0x2
0000461c(7): SUB RSP,0xb8
00004623(8): MOV RAX,qword ptr [0xf0 + RSP]
0000462b(5): MOV qword ptr [RSP + 0x10],RDX
00004630(5): MOV dword ptr [RSP + 0x8],R8D
00004635(5): MOV dword ptr [RSP + 0x78],R9D
0000463a(5): MOV qword ptr [RSP + 0x20],RAX
0000463f(8): MOV RAX,qword ptr [0xf8 + RSP]
00004647(5): MOV qword ptr [RSP + 0x68],RAX
0000464c(8): MOV RAX,qword ptr [0x100 + RSP]
00004654(5): MOV qword ptr [RSP + 0x60],RAX
00004659(9): MOV RAX,qword ptr FS:[0x28]
00004662(8): MOV qword ptr [0xa8 + RSP],RAX
0000466a(2): XOR EAX,EAX
0000466c(5): CALL 0x00001640
00004671(4): CMP R15D,0xa
00004675(5): MOV qword ptr [RSP + 0x58],RAX
0000467a(6): JA 0x0000582f
00004680(7): LEA RCX,[0x8100]
00004687(3): MOV EDX,R15D
0000468a(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
0000468e(3): ADD RAX,RCX
00004691(2): JMP RAX
00004693(5): MOV byte ptr [RSP + 0xe],0x1
00004698(5): MOV byte ptr [RSP + 0x7c],0x0
0000469d(3): XOR R12D,R12D
000046a0(9): MOV qword ptr [RSP + 0x50],0x0
000046a9(5): MOV byte ptr [RSP + 0xf],0x1
000046ae(5): MOV byte ptr [RSP + 0xd],0x0
000046b3(7): LEA RAX,[0x809d]
000046ba(9): MOV qword ptr [RSP + 0x18],0x1
000046c3(3): XOR R15D,R15D
000046c6(8): MOV dword ptr [RSP + 0x8],0x2
000046ce(5): MOV qword ptr [RSP + 0x48],RAX
000046d3(3): XOR R11D,R11D
000046d6(3): MOV RAX,RBP
000046d9(3): MOV R8D,R12D
000046dc(3): MOV RBP,R11
000046df(3): MOV R11,RAX
000046e2(6): NOP word ptr [RAX + RAX*0x1]
000046e8(3): CMP R11,RBP
000046eb(4): SETNZ R12B
000046ef(4): CMP R11,-0x1
000046f3(2): JNZ 0x00004702
000046f5(5): MOV RAX,qword ptr [RSP + 0x10]
000046fa(4): CMP byte ptr [RAX + RBP*0x1],0x0
000046fe(4): SETNZ R12B
00004702(3): TEST R12B,R12B
00004705(6): JZ 0x00004d60
0000470b(5): CMP dword ptr [RSP + 0x8],0x2
00004710(5): MOV RDI,qword ptr [RSP + 0x10]
00004715(4): LEA R9,[RDI + RBP*0x1]
00004719(3): SETNZ AL
0000471c(4): AND AL,byte ptr [RSP + 0xd]
00004720(3): MOV R10D,EAX
00004723(6): JZ 0x000047d0
00004729(5): MOV RAX,qword ptr [RSP + 0x18]
0000472e(3): TEST RAX,RAX
00004731(6): JZ 0x00004b60
00004737(4): CMP R11,-0x1
0000473b(5): LEA RBX,[RBP + RAX*0x1]
00004740(2): JNZ 0x00004770
00004742(4): CMP RAX,0x1
00004746(2): JBE 0x00004770
00004748(5): MOV byte ptr [RSP + 0x38],R8B
0000474d(5): MOV byte ptr [RSP + 0x30],R10B
00004752(5): MOV qword ptr [RSP + 0x28],R9
00004757(5): CALL 0x00001650
0000475c(6): MOVZX R8D,byte ptr [RSP + 0x38]
00004762(6): MOVZX R10D,byte ptr [RSP + 0x30]
00004768(3): MOV R11,RAX
0000476b(5): MOV R9,qword ptr [RSP + 0x28]
00004770(3): CMP RBX,R11
00004773(5): MOV byte ptr [RSP + 0x28],R10B
00004778(6): JA 0x00004d30
0000477e(5): MOV RDX,qword ptr [RSP + 0x18]
00004783(5): MOV RSI,qword ptr [RSP + 0x48]
00004788(3): MOV RDI,R9
0000478b(5): MOV qword ptr [RSP + 0x40],R11
00004790(5): MOV byte ptr [RSP + 0x38],R8B
00004795(5): MOV qword ptr [RSP + 0x30],R9
0000479a(5): CALL 0x00001720
0000479f(2): TEST EAX,EAX
000047a1(5): MOV R9,qword ptr [RSP + 0x30]
000047a6(6): MOVZX R8D,byte ptr [RSP + 0x38]
000047ac(5): MOV R11,qword ptr [RSP + 0x40]
000047b1(6): JNZ 0x00004d30
000047b7(5): CMP byte ptr [RSP + 0xf],0x0
000047bc(6): MOVZX R10D,byte ptr [RSP + 0x28]
000047c2(6): JNZ 0x00005745
000047c8(8): NOP dword ptr [RAX + RAX*0x1]
000047d0(4): MOVZX EBX,byte ptr [R9]
000047d4(3): CMP BL,0x7e
000047d7(6): JA 0x00004af8
000047dd(7): LEA RCX,[0x812c]
000047e4(3): MOVZX EDX,BL
000047e7(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
000047eb(3): ADD RAX,RCX
000047ee(2): JMP RAX
000047f0(3): XOR R10D,R10D
000047f3(4): CMP R11,0x1
000047f7(3): SETNZ AL
000047fa(4): CMP R11,-0x1
000047fe(2): JNZ 0x0000480c
00004800(5): MOV RAX,qword ptr [RSP + 0x10]
00004805(4): CMP byte ptr [RAX + 0x1],0x0
00004809(3): SETNZ AL
0000480c(5): CMP dword ptr [RSP + 0x8],0x2
00004811(3): SETZ DL
00004814(2): TEST AL,AL
00004816(6): JZ 0x00004a68
0000481c(3): XOR R12D,R12D
0000481f(2): XOR EAX,EAX
00004821(7): NOP dword ptr [RAX]
00004828(5): CMP byte ptr [RSP + 0xd],0x1
0000482d(6): JNZ 0x00004942
00004833(2): TEST DL,DL
00004835(6): JNZ 0x00004942
0000483b(5): MOV RSI,qword ptr [RSP + 0x20]
00004840(3): TEST RSI,RSI
00004843(2): JZ 0x00004859
00004845(2): MOV EDX,EBX
00004847(3): SHR DL,0x5
0000484a(3): MOVZX EDX,DL
0000484d(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00004850(3): BT EDX,EBX
00004853(6): JC 0x000049a3
00004859(3): TEST R10B,R10B
0000485c(6): JNZ 0x000049a3
00004862(3): XOR EAX,0x1
00004865(4): ADD RBP,0x1
00004869(3): AND EAX,R8D
0000486c(2): TEST AL,AL
0000486e(2): JZ 0x00004890
00004870(3): CMP R13,R15
00004873(2): JBE 0x0000487a
00004875(5): MOV byte ptr [R14 + R15*0x1],0x27
0000487a(4): LEA RAX,[R15 + 0x1]
0000487e(3): CMP R13,RAX
00004881(2): JBE 0x00004889
00004883(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
00004889(4): ADD R15,0x2
0000488d(3): XOR R8D,R8D
00004890(3): CMP R15,R13
00004893(2): JNC 0x00004899
00004895(4): MOV byte ptr [R14 + R15*0x1],BL
00004899(5): MOVZX EDI,byte ptr [RSP + 0xe]
0000489e(4): ADD R15,0x1
000048a2(5): MOV EAX,0x0
000048a7(3): TEST R12B,R12B
000048aa(3): CMOVZ EDI,EAX
000048ad(5): MOV byte ptr [RSP + 0xe],DIL
000048b2(5): JMP 0x000046e8
000048c0(3): XOR R10D,R10D
000048c3(4): MOV EAX,dword ptr [RSP + 0x8]
000048c7(3): CMP EAX,0x2
000048ca(6): JZ 0x00004e88
000048d0(3): CMP EAX,0x5
000048d3(6): JZ 0x00004e48
000048d9(3): CMP EAX,0x2
000048dc(5): MOV EBX,0x3f
000048e1(3): SETZ DL
000048e4(3): XOR R12D,R12D
000048e7(2): XOR EAX,EAX
000048e9(5): JMP 0x00004828
000048f0(3): XOR R10D,R10D
000048f3(5): CMP dword ptr [RSP + 0x8],0x2
000048f8(6): JZ 0x00004e00
000048fe(5): MOV byte ptr [RSP + 0x7c],R12B
00004903(2): XOR EDX,EDX
00004905(2): XOR EAX,EAX
00004907(5): MOV EBX,0x27
0000490c(5): JMP 0x00004828
00004918(5): MOV EDX,0x9
0000491d(5): MOV EBX,0x74
00004922(5): CMP dword ptr [RSP + 0x8],0x2
00004927(3): SETZ AL
0000492a(4): AND AL,byte ptr [RSP + 0xf]
0000492e(6): JNZ 0x00004a7e
00004934(5): CMP byte ptr [RSP + 0xd],0x0
00004939(2): JNZ 0x000049a0
0000493b(2): MOV EBX,EDX
0000493d(3): XOR R12D,R12D
00004940(2): XOR EAX,EAX
00004942(5): CMP byte ptr [RSP + 0xf],0x0
00004947(6): JNZ 0x0000483b
0000494d(5): JMP 0x00004859
00004958(5): MOV EDX,0x8
0000495d(5): MOV EBX,0x62
00004962(2): JMP 0x00004934
00004968(5): CMP dword ptr [RSP + 0x8],0x2
0000496d(6): JZ 0x00004d40
00004973(5): CMP byte ptr [RSP + 0xd],0x0
00004978(6): JZ 0x00004b90
0000497e(5): CMP byte ptr [RSP + 0xf],0x0
00004983(6): JZ 0x00004b90
00004989(6): CMP qword ptr [RSP + 0x18],0x0
0000498f(6): JNZ 0x00004d4b
00004995(5): MOV EBX,0x5c
0000499a(6): NOP word ptr [RAX + RAX*0x1]
000049a0(3): XOR R12D,R12D
000049a3(5): CMP dword ptr [RSP + 0x8],0x2
000049a8(3): SETZ DL
000049ab(5): CMP byte ptr [RSP + 0xf],0x0
000049b0(2): MOV EAX,EDX
000049b2(6): JNZ 0x00005208
000049b8(3): MOV EAX,R8D
000049bb(3): XOR EAX,0x1
000049be(2): AND AL,DL
000049c0(2): JZ 0x000049f1
000049c2(3): CMP R13,R15
000049c5(2): JBE 0x000049cc
000049c7(5): MOV byte ptr [R14 + R15*0x1],0x27
000049cc(4): LEA RDX,[R15 + 0x1]
000049d0(3): CMP R13,RDX
000049d3(2): JBE 0x000049db
000049d5(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
000049db(4): LEA RDX,[R15 + 0x2]
000049df(3): CMP R13,RDX
000049e2(2): JBE 0x000049ea
000049e4(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
000049ea(4): ADD R15,0x3
000049ee(3): MOV R8D,EAX
000049f1(3): CMP R13,R15
000049f4(2): JBE 0x000049fb
000049f6(5): MOV byte ptr [R14 + R15*0x1],0x5c
000049fb(4): ADD R15,0x1
000049ff(4): ADD RBP,0x1
00004a03(5): JMP 0x00004890
00004a10(5): CMP byte ptr [RSP + 0xd],0x0
00004a15(6): JNZ 0x00004be3
00004a1b(2): XOR EDX,EDX
00004a1d(5): TEST byte ptr [RSP + 0x78],0x1
00004a22(6): JZ 0x0000493b
00004a28(4): ADD RBP,0x1
00004a2c(5): JMP 0x000046e8
00004a38(5): CMP dword ptr [RSP + 0x8],0x2
00004a3d(3): SETZ DL
00004a40(2): XOR EAX,EAX
00004a42(5): JMP 0x00004828
00004a50(5): MOV EDX,0x7
00004a55(5): MOV EBX,0x61
00004a5a(5): JMP 0x00004934
00004a60(5): CMP dword ptr [RSP + 0x8],0x2
00004a65(3): SETZ DL
00004a68(3): TEST RBP,RBP
00004a6b(6): JNZ 0x0000481c
00004a71(5): MOVZX EAX,byte ptr [RSP + 0xf]
00004a76(2): AND AL,DL
00004a78(6): JZ 0x00004828
00004a7e(3): MOV RBP,R11
00004a81(8): MOV dword ptr [RSP + 0x8],0x2
00004a89(5): JMP 0x00005189
00004a90(5): CMP dword ptr [RSP + 0x8],0x2
00004a95(3): SETZ DL
00004a98(3): XOR R12D,R12D
00004a9b(2): JMP 0x00004a71
00004aa0(5): CMP dword ptr [RSP + 0x8],0x2
00004aa5(5): MOV EBX,0x20
00004aaa(3): SETZ DL
00004aad(2): JMP 0x00004a71
00004ab0(5): MOV EDX,0xd
00004ab5(5): MOV EBX,0x72
00004aba(5): JMP 0x00004922
00004ac0(5): MOV EDX,0xc
00004ac5(5): MOV EBX,0x66
00004aca(5): JMP 0x00004934
00004ad0(5): MOV EDX,0xb
00004ad5(5): MOV EBX,0x76
00004ada(5): JMP 0x00004934
00004ae0(5): MOV EDX,0xa
00004ae5(5): MOV EBX,0x6e
00004aea(5): JMP 0x00004922
00004af0(3): XOR R10D,R10D
00004af3(5): NOP dword ptr [RAX + RAX*0x1]
00004af8(6): CMP qword ptr [RSP + 0x58],0x1
00004afe(6): JNZ 0x00004ea8
00004b04(5): MOV qword ptr [RSP + 0x38],R11
00004b09(5): MOV byte ptr [RSP + 0x30],R8B
00004b0e(5): MOV byte ptr [RSP + 0x28],R10B
00004b13(5): CALL 0x000018a0
00004b18(3): MOV RCX,qword ptr [RAX]
00004b1b(3): MOVZX EDX,BL
00004b1e(6): MOVZX R10D,byte ptr [RSP + 0x28]
00004b24(6): MOVZX R8D,byte ptr [RSP + 0x30]
00004b2a(5): MOV R11,qword ptr [RSP + 0x38]
00004b2f(5): MOV EDI,0x1
00004b34(4): MOVZX EAX,word ptr [RCX + RDX*0x2]
00004b38(4): AND AX,0x4000
00004b3c(4): SETNZ R12B
00004b40(3): SETZ AL
00004b43(4): AND AL,byte ptr [RSP + 0xd]
00004b47(2): TEST AL,AL
00004b49(6): JNZ 0x000054e1
00004b4f(5): CMP dword ptr [RSP + 0x8],0x2
00004b54(3): SETZ DL
00004b57(5): JMP 0x00004828
00004b60(4): MOVZX EBX,byte ptr [R9]
00004b64(3): CMP BL,0x7e
00004b67(2): JA 0x00004af0
00004b69(7): LEA RCX,[0x8328]
00004b70(3): MOVZX EDX,BL
00004b73(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00004b77(3): ADD RAX,RCX
00004b7a(2): JMP RAX
00004b80(3): XOR R10D,R10D
00004b83(5): CMP byte ptr [RSP + 0xd],0x0
00004b88(6): JNZ 0x0000497e
00004b8e(2): NOP
00004b90(5): MOV EDX,0x5c
00004b95(5): MOV EBX,0x5c
00004b9a(5): JMP 0x00004934
00004ba0(5): MOV EDX,0xc
00004ba5(3): XOR R10D,R10D
00004ba8(5): MOV EBX,0x66
00004bad(5): JMP 0x00004934
00004bb8(5): MOV EDX,0xa
00004bbd(3): XOR R10D,R10D
00004bc0(5): MOV EBX,0x6e
00004bc5(5): JMP 0x00004922
00004bd0(5): MOV EBX,0x61
00004bd5(5): JMP 0x000049a0
00004be0(3): XOR R10D,R10D
00004be3(5): CMP dword ptr [RSP + 0x8],0x2
00004be8(3): SETZ DL
00004beb(5): CMP byte ptr [RSP + 0xf],0x0
00004bf0(6): JNZ 0x0000578a
00004bf6(3): MOV EAX,R8D
00004bf9(3): MOV RCX,R15
00004bfc(3): XOR EAX,0x1
00004bff(2): AND AL,DL
00004c01(2): JZ 0x00004c30
00004c03(3): CMP R13,R15
00004c06(2): JBE 0x00004c0d
00004c08(5): MOV byte ptr [R14 + R15*0x1],0x27
00004c0d(4): LEA RCX,[R15 + 0x1]
00004c11(3): CMP R13,RCX
00004c14(2): JBE 0x00004c1c
00004c16(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00004c1c(4): LEA RCX,[R15 + 0x2]
00004c20(3): CMP R13,RCX
00004c23(6): JA 0x00005259
00004c29(4): LEA RCX,[R15 + 0x3]
00004c2d(3): MOV R8D,EAX
00004c30(3): CMP R13,RCX
00004c33(2): JBE 0x00004c3a
00004c35(5): MOV byte ptr [R14 + RCX*0x1],0x5c
00004c3a(5): CMP dword ptr [RSP + 0x8],0x2
00004c3f(4): LEA R15,[RCX + 0x1]
00004c43(6): JZ 0x00005249
00004c49(4): LEA RAX,[RBP + 0x1]
00004c4d(3): CMP RAX,R11
00004c50(2): JNC 0x00004c6b
00004c52(5): MOV RAX,qword ptr [RSP + 0x10]
00004c57(5): MOVZX EAX,byte ptr [RAX + RBP*0x1 + 0x1]
00004c5c(4): MOV byte ptr [RSP + 0x28],AL
00004c60(3): SUB EAX,0x30
00004c63(2): CMP AL,0x9
00004c65(6): JBE 0x00005499
00004c6b(3): MOV EAX,R12D
00004c6e(5): MOV EBX,0x30
00004c73(3): XOR R12D,R12D
00004c76(5): JMP 0x00004828
00004c80(5): CMP dword ptr [RSP + 0x8],0x2
00004c85(3): MOV R12D,R10D
00004c88(3): SETZ DL
00004c8b(3): XOR R10D,R10D
00004c8e(2): XOR EAX,EAX
00004c90(5): JMP 0x00004828
00004c98(5): CMP dword ptr [RSP + 0x8],0x2
00004c9d(3): SETZ DL
00004ca0(3): XOR R10D,R10D
00004ca3(5): JMP 0x00004a68
00004cb0(5): CMP dword ptr [RSP + 0x8],0x2
00004cb5(3): SETZ DL
00004cb8(3): XOR R10D,R10D
00004cbb(3): XOR R12D,R12D
00004cbe(5): JMP 0x00004a71
00004cc8(5): CMP dword ptr [RSP + 0x8],0x2
00004ccd(3): MOV R12D,R10D
00004cd0(5): MOV EBX,0x20
00004cd5(3): SETZ DL
00004cd8(3): XOR R10D,R10D
00004cdb(5): JMP 0x00004a71
00004ce0(5): MOV EDX,0xd
00004ce5(3): XOR R10D,R10D
00004ce8(5): MOV EBX,0x72
00004ced(5): JMP 0x00004922
00004cf8(5): MOV EBX,0x76
00004cfd(5): JMP 0x000049a0
00004d08(5): MOV EDX,0x9
00004d0d(3): XOR R10D,R10D
00004d10(5): MOV EBX,0x74
00004d15(5): JMP 0x00004922
00004d20(5): MOV EBX,0x62
00004d25(5): JMP 0x000049a0
00004d30(3): XOR R10D,R10D
00004d33(5): JMP 0x000047d0
00004d40(5): CMP byte ptr [RSP + 0xf],0x0
00004d45(6): JNZ 0x000056b0
00004d4b(4): ADD RBP,0x1
00004d4f(3): MOV EAX,R8D
00004d52(3): XOR R12D,R12D
00004d55(5): MOV EBX,0x5c
00004d5a(5): JMP 0x0000486c
00004d60(5): CMP dword ptr [RSP + 0x8],0x2
00004d65(5): MOVZX EBX,byte ptr [RSP + 0xf]
00004d6a(3): MOV R12D,R8D
00004d6d(3): MOV RBP,R11
00004d70(3): SETZ DL
00004d73(2): MOV EAX,EBX
00004d75(3): TEST R15,R15
00004d78(3): SETZ CL
00004d7b(2): AND EAX,EDX
00004d7d(2): AND AL,CL
00004d7f(6): JNZ 0x000057e6
00004d85(2): MOV EAX,EBX
00004d87(3): XOR EAX,0x1
00004d8a(2): AND DL,AL
00004d8c(6): JZ 0x000056fc
00004d92(5): CMP byte ptr [RSP + 0x7c],0x0
00004d97(6): JZ 0x000056fa
00004d9d(5): CMP byte ptr [RSP + 0xe],0x0
00004da2(6): JNZ 0x0000579d
00004da8(3): TEST R13,R13
00004dab(3): SETZ AL
00004dae(6): CMP qword ptr [RSP + 0x50],0x0
00004db4(3): SETNZ DL
00004db7(2): AND AL,DL
00004db9(6): JZ 0x000057dc
00004dbf(5): MOV R13,qword ptr [RSP + 0x50]
00004dc4(7): LEA RBX,[0x809d]
00004dcb(4): MOV byte ptr [R14],0x27
00004dcf(8): MOV dword ptr [RSP + 0x8],0x2
00004dd7(6): MOV R15D,0x1
00004ddd(9): MOV qword ptr [RSP + 0x18],0x1
00004de6(5): MOV byte ptr [RSP + 0xf],0x0
00004deb(5): MOV qword ptr [RSP + 0x48],RBX
00004df0(4): MOV byte ptr [RSP + 0x7c],AL
00004df4(5): JMP 0x000046d3
00004e00(5): CMP byte ptr [RSP + 0xf],0x0
00004e05(6): JNZ 0x000056b0
00004e0b(3): TEST R13,R13
00004e0e(6): JZ 0x00005210
00004e14(2): XOR EDX,EDX
00004e16(6): CMP qword ptr [RSP + 0x50],0x0
00004e1c(6): JNZ 0x00005210
00004e22(5): MOV qword ptr [RSP + 0x50],R13
00004e27(4): ADD R15,0x3
00004e2b(2): XOR EAX,EAX
00004e2d(5): MOV byte ptr [RSP + 0x7c],R12B
00004e32(3): XOR R8D,R8D
00004e35(3): MOV R13,RDX
00004e38(5): MOV EBX,0x27
00004e3d(5): JMP 0x00004859
00004e48(5): TEST byte ptr [RSP + 0x78],0x4
00004e4d(2): JZ 0x00004e70
00004e4f(4): LEA RCX,[RBP + 0x2]
00004e53(3): CMP RCX,R11
00004e56(2): JNC 0x00004e70
00004e58(5): MOV RAX,qword ptr [RSP + 0x10]
00004e5d(5): CMP byte ptr [RAX + RBP*0x1 + 0x1],0x3f
00004e62(6): JZ 0x000055f2
00004e68(8): NOP dword ptr [RAX + RAX*0x1]
00004e70(2): XOR EDX,EDX
00004e72(3): XOR R12D,R12D
00004e75(2): XOR EAX,EAX
00004e77(5): MOV EBX,0x3f
00004e7c(5): JMP 0x00004828
00004e88(5): CMP byte ptr [RSP + 0xf],0x0
00004e8d(6): JNZ 0x000056b0
00004e93(3): XOR R12D,R12D
00004e96(2): XOR EAX,EAX
00004e98(5): MOV EBX,0x3f
00004e9d(5): JMP 0x00004859
00004ea8(8): LEA RAX,[0xa0 + RSP]
00004eb0(4): CMP R11,-0x1
00004eb4(12): MOV qword ptr [0xa0 + RSP],0x0
00004ec0(5): MOV qword ptr [RSP + 0x28],RAX
00004ec5(2): JNZ 0x00004ef4
00004ec7(5): MOV RDI,qword ptr [RSP + 0x10]
00004ecc(5): MOV byte ptr [RSP + 0x40],R8B
00004ed1(5): MOV byte ptr [RSP + 0x38],R10B
00004ed6(5): MOV qword ptr [RSP + 0x30],R9
00004edb(5): CALL 0x00001650
00004ee0(6): MOVZX R8D,byte ptr [RSP + 0x40]
00004ee6(6): MOVZX R10D,byte ptr [RSP + 0x38]
00004eec(3): MOV R11,RAX
00004eef(5): MOV R9,qword ptr [RSP + 0x30]
00004ef4(8): LEA RAX,[0x9c + RSP]
00004efc(2): XOR ECX,ECX
00004efe(4): MOV byte ptr [RSP + 0x7e],BL
00004f02(5): MOV byte ptr [RSP + 0x7d],R8B
00004f07(3): MOV RBX,RCX
00004f0a(8): MOV qword ptr [0x88 + RSP],R9
00004f12(5): MOV qword ptr [RSP + 0x38],RAX
00004f17(5): MOV byte ptr [RSP + 0x7f],R10B
00004f1c(8): MOV qword ptr [0x80 + RSP],R15
00004f24(5): MOV qword ptr [RSP + 0x40],R14
00004f29(5): MOV qword ptr [RSP + 0x70],R13
00004f2e(5): MOV qword ptr [RSP + 0x30],R11
00004f33(5): MOV RAX,qword ptr [RSP + 0x10]
00004f38(5): LEA R14,[RBP + RBX*0x1]
00004f3d(5): MOV RDX,qword ptr [RSP + 0x30]
00004f42(5): MOV RCX,qword ptr [RSP + 0x28]
00004f47(5): MOV RDI,qword ptr [RSP + 0x38]
00004f4c(4): LEA R13,[RAX + R14*0x1]
00004f50(3): SUB RDX,R14
00004f53(3): MOV RSI,R13
00004f56(5): CALL 0x000070c0
00004f5b(3): TEST RAX,RAX
00004f5e(3): MOV R15,RAX
00004f61(2): JZ 0x00004fb1
00004f63(4): CMP RAX,-0x1
00004f67(6): JZ 0x00005585
00004f6d(4): CMP RAX,-0x2
00004f71(6): JZ 0x00005511
00004f77(5): CMP dword ptr [RSP + 0x8],0x2
00004f7c(3): SETZ AL
00004f7f(4): AND AL,byte ptr [RSP + 0xf]
00004f83(6): JNZ 0x00005120
00004f89(7): MOV EDI,dword ptr [0x9c + RSP]
00004f90(5): CALL 0x00001890
00004f95(5): MOV RDI,qword ptr [RSP + 0x28]
00004f9a(2): TEST EAX,EAX
00004f9c(5): MOV EAX,0x0
00004fa1(4): CMOVZ R12D,EAX
00004fa5(3): ADD RBX,R15
00004fa8(5): CALL 0x00001880
00004fad(2): TEST EAX,EAX
00004faf(2): JZ 0x00004f33
00004fb1(3): MOV EDX,R12D
00004fb4(3): MOV RDI,RBX
00004fb7(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00004fbd(3): XOR EDX,0x1
00004fc0(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00004fc5(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00004fcb(4): AND DL,byte ptr [RSP + 0xd]
00004fcf(8): MOV R15,qword ptr [0x80 + RSP]
00004fd7(5): MOV R14,qword ptr [RSP + 0x40]
00004fdc(5): MOV R13,qword ptr [RSP + 0x70]
00004fe1(5): MOV R11,qword ptr [RSP + 0x30]
00004fe6(4): CMP RDI,0x1
00004fea(6): JBE 0x000055eb
00004ff0(3): MOV RCX,RDI
00004ff3(2): XOR ESI,ESI
00004ff5(6): MOVZX R9D,byte ptr [RSP + 0xf]
00004ffb(3): ADD RCX,RBP
00004ffe(5): MOV RDI,qword ptr [RSP + 0x10]
00005003(5): JMP 0x000050be
00005010(5): CMP dword ptr [RSP + 0x8],0x2
00005015(3): SETZ AL
00005018(3): TEST R9B,R9B
0000501b(6): JNZ 0x000054d0
00005021(3): MOV ESI,R8D
00005024(3): XOR ESI,0x1
00005027(3): AND AL,SIL
0000502a(2): JZ 0x0000505b
0000502c(3): CMP R13,R15
0000502f(2): JBE 0x00005036
00005031(5): MOV byte ptr [R14 + R15*0x1],0x27
00005036(4): LEA RSI,[R15 + 0x1]
0000503a(3): CMP R13,RSI
0000503d(2): JBE 0x00005045
0000503f(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00005045(4): LEA RSI,[R15 + 0x2]
00005049(3): CMP R13,RSI
0000504c(2): JBE 0x00005054
0000504e(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00005054(4): ADD R15,0x3
00005058(3): MOV R8D,EAX
0000505b(3): CMP R13,R15
0000505e(2): JBE 0x00005065
00005060(5): MOV byte ptr [R14 + R15*0x1],0x5c
00005065(4): LEA RAX,[R15 + 0x1]
00005069(3): CMP R13,RAX
0000506c(2): JBE 0x0000507b
0000506e(2): MOV EAX,EBX
00005070(3): SHR AL,0x6
00005073(3): ADD EAX,0x30
00005076(5): MOV byte ptr [R14 + R15*0x1 + 0x1],AL
0000507b(4): LEA RAX,[R15 + 0x2]
0000507f(3): CMP R13,RAX
00005082(2): JBE 0x00005094
00005084(2): MOV EAX,EBX
00005086(3): SHR AL,0x3
00005089(3): AND EAX,0x7
0000508c(3): ADD EAX,0x30
0000508f(5): MOV byte ptr [R14 + R15*0x1 + 0x2],AL
00005094(3): AND EBX,0x7
00005097(4): ADD RBP,0x1
0000509b(4): ADD R15,0x3
0000509f(3): ADD EBX,0x30
000050a2(3): CMP RBP,RCX
000050a5(6): JNC 0x00004890
000050ab(2): MOV ESI,EDX
000050ad(3): CMP R13,R15
000050b0(2): JBE 0x000050b6
000050b2(4): MOV byte ptr [R14 + R15*0x1],BL
000050b6(4): MOVZX EBX,byte ptr [RDI + RBP*0x1]
000050ba(4): ADD R15,0x1
000050be(2): TEST DL,DL
000050c0(6): JNZ 0x00005010
000050c6(2): MOV EAX,ESI
000050c8(3): XOR EAX,0x1
000050cb(3): AND EAX,R8D
000050ce(3): TEST R10B,R10B
000050d1(2): JZ 0x000050e1
000050d3(3): CMP R13,R15
000050d6(2): JBE 0x000050dd
000050d8(5): MOV byte ptr [R14 + R15*0x1],0x5c
000050dd(4): ADD R15,0x1
000050e1(4): ADD RBP,0x1
000050e5(3): CMP RBP,RCX
000050e8(6): JNC 0x0000486c
000050ee(2): TEST AL,AL
000050f0(6): JZ 0x000054ee
000050f6(3): CMP R13,R15
000050f9(2): JBE 0x00005100
000050fb(5): MOV byte ptr [R14 + R15*0x1],0x27
00005100(4): LEA RAX,[R15 + 0x1]
00005104(3): CMP R13,RAX
00005107(2): JBE 0x0000510f
00005109(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
0000510f(4): ADD R15,0x2
00005113(3): XOR R10D,R10D
00005116(3): XOR R8D,R8D
00005119(2): JMP 0x000050ad
00005120(4): CMP R15,0x1
00005124(6): JZ 0x00004f89
0000512a(5): MOV RDI,qword ptr [RSP + 0x10]
0000512f(4): LEA RCX,[RDI + R15*0x1]
00005133(5): LEA RDX,[RDI + R14*0x1 + 0x1]
00005138(4): LEA R8,[RCX + R14*0x1]
0000513c(2): JMP 0x0000514d
00005140(4): ADD RDX,0x1
00005144(3): CMP R8,RDX
00005147(6): JZ 0x00004f89
0000514d(3): MOVZX ECX,byte ptr [RDX]
00005150(3): SUB ECX,0x5b
00005153(3): CMP CL,0x21
00005156(2): JA 0x00005140
00005158(5): MOV ESI,0x1
0000515d(3): SHL RSI,CL
00005160(3): MOV RCX,RSI
00005163(10): MOV RSI,0x20000002b
0000516d(3): TEST RCX,RSI
00005170(2): JZ 0x00005140
00005172(5): MOV R14,qword ptr [RSP + 0x40]
00005177(5): MOV R13,qword ptr [RSP + 0x70]
0000517c(5): MOV RBP,qword ptr [RSP + 0x30]
00005181(8): MOV dword ptr [RSP + 0x8],0x2
00005189(5): CMP byte ptr [RSP + 0xd],0x0
0000518e(2): JZ 0x000051a0
00005190(2): TEST AL,AL
00005192(5): MOV EAX,0x4
00005197(5): CMOVZ EAX,dword ptr [RSP + 0x8]
0000519c(4): MOV dword ptr [RSP + 0x8],EAX
000051a0(4): SUB RSP,0x8
000051a4(3): MOV RCX,RBP
000051a7(3): MOV RSI,R13
000051aa(4): PUSH qword ptr [RSP + 0x68]
000051ae(4): PUSH qword ptr [RSP + 0x78]
000051b2(3): MOV RDI,R14
000051b5(2): PUSH 0x0
000051b7(8): MOV R9D,dword ptr [0x98 + RSP]
000051bf(5): MOV R8D,dword ptr [RSP + 0x28]
000051c4(5): MOV RDX,qword ptr [RSP + 0x30]
000051c9(4): AND R9D,0xfffffffd
000051cd(5): CALL 0x00004600
000051d2(4): ADD RSP,0x20
000051d6(3): MOV R15,RAX
000051d9(8): MOV RBX,qword ptr [0xa8 + RSP]
000051e1(9): XOR RBX,qword ptr FS:[0x28]
000051ea(3): MOV RAX,R15
000051ed(6): JNZ 0x000057f3
000051f3(7): ADD RSP,0xb8
000051fa(1): POP RBX
000051fb(1): POP RBP
000051fc(2): POP R12
000051fe(2): POP R13
00005200(2): POP R14
00005202(2): POP R15
00005204(1): RET
00005208(3): MOV RBP,R11
0000520b(5): JMP 0x00005189
00005210(3): CMP R13,R15
00005213(2): JBE 0x0000521a
00005215(5): MOV byte ptr [R14 + R15*0x1],0x27
0000521a(4): LEA RAX,[R15 + 0x1]
0000521e(3): CMP R13,RAX
00005221(2): JBE 0x00005229
00005223(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x5c
00005229(4): LEA RAX,[R15 + 0x2]
0000522d(3): CMP R13,RAX
00005230(6): JBE 0x00005822
00005236(3): MOV RDX,R13
00005239(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000523f(5): MOV R13,qword ptr [RSP + 0x50]
00005244(5): JMP 0x00004e22
00005249(3): MOV EAX,R12D
0000524c(5): MOV EBX,0x30
00005251(3): XOR R12D,R12D
00005254(5): JMP 0x00004859
00005259(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
0000525f(5): JMP 0x00004c29
00005264(2): TEST EBX,EBX
00005266(6): JNZ 0x00004693
0000526c(5): MOV byte ptr [RSP + 0xd],0x1
00005271(3): TEST R13,R13
00005274(6): JNZ 0x0000580a
0000527a(7): LEA RAX,[0x809d]
00005281(9): MOV qword ptr [RSP + 0x50],0x0
0000528a(5): MOV byte ptr [RSP + 0xe],0x1
0000528f(5): MOV byte ptr [RSP + 0x7c],0x0
00005294(3): XOR R12D,R12D
00005297(5): MOV byte ptr [RSP + 0xf],0x0
0000529c(9): MOV qword ptr [RSP + 0x18],0x1
000052a5(5): MOV qword ptr [RSP + 0x48],RAX
000052aa(6): MOV R15D,0x1
000052b0(8): MOV dword ptr [RSP + 0x8],0x2
000052b8(5): JMP 0x000046d3
000052c0(2): TEST EBX,EBX
000052c2(6): JNZ 0x000056bd
000052c8(3): TEST R13,R13
000052cb(6): JZ 0x000054f6
000052d1(4): MOV byte ptr [R14],0x22
000052d5(5): MOV byte ptr [RSP + 0xe],0x1
000052da(3): XOR R12D,R12D
000052dd(5): MOV byte ptr [RSP + 0x7c],0x0
000052e2(9): MOV qword ptr [RSP + 0x50],0x0
000052eb(7): LEA RAX,[0x809b]
000052f2(5): MOV byte ptr [RSP + 0xf],0x0
000052f7(5): MOV byte ptr [RSP + 0xd],0x1
000052fc(9): MOV qword ptr [RSP + 0x18],0x1
00005305(6): MOV R15D,0x1
0000530b(5): MOV qword ptr [RSP + 0x48],RAX
00005310(5): JMP 0x000046d3
00005315(7): LEA RAX,[0x809b]
0000531c(5): MOV byte ptr [RSP + 0xe],0x1
00005321(5): MOV byte ptr [RSP + 0x7c],0x0
00005326(3): XOR R12D,R12D
00005329(9): MOV qword ptr [RSP + 0x50],0x0
00005332(5): MOV byte ptr [RSP + 0xf],0x1
00005337(5): MOV byte ptr [RSP + 0xd],0x1
0000533c(9): MOV qword ptr [RSP + 0x18],0x1
00005345(3): XOR R15D,R15D
00005348(5): MOV qword ptr [RSP + 0x48],RAX
0000534d(8): MOV dword ptr [RSP + 0x8],0x5
00005355(5): JMP 0x000046d3
0000535a(5): MOV byte ptr [RSP + 0xe],0x1
0000535f(5): MOV byte ptr [RSP + 0x7c],0x0
00005364(3): XOR R12D,R12D
00005367(9): MOV qword ptr [RSP + 0x50],0x0
00005370(5): MOV byte ptr [RSP + 0xf],0x0
00005375(3): XOR R15D,R15D
00005378(5): MOV byte ptr [RSP + 0xd],0x1
0000537d(9): MOV qword ptr [RSP + 0x18],0x0
00005386(9): MOV qword ptr [RSP + 0x48],0x0
0000538f(5): JMP 0x000046d3
00005394(5): CMP dword ptr [RSP + 0x8],0xa
00005399(2): JZ 0x000053f1
0000539b(7): LEA RSI,[0x809f]
000053a2(2): XOR EDI,EDI
000053a4(5): MOV EDX,0x5
000053a9(5): CALL 0x00001630
000053ae(3): MOV RCX,RAX
000053b1(5): MOV qword ptr [RSP + 0x68],RAX
000053b6(7): LEA RAX,[0x809f]
000053bd(3): CMP RCX,RAX
000053c0(6): JZ 0x0000575e
000053c6(7): LEA RSI,[0x809d]
000053cd(2): XOR EDI,EDI
000053cf(5): MOV EDX,0x5
000053d4(5): CALL 0x00001630
000053d9(3): MOV RCX,RAX
000053dc(5): MOV qword ptr [RSP + 0x60],RAX
000053e1(7): LEA RAX,[0x809d]
000053e8(3): CMP RCX,RAX
000053eb(6): JZ 0x00005774
000053f1(3): XOR R15D,R15D
000053f4(2): TEST EBX,EBX
000053f6(6): JZ 0x000055bd
000053fc(2): TEST EBX,EBX
000053fe(5): MOV RBX,qword ptr [RSP + 0x60]
00005403(5): SETNZ byte ptr [RSP + 0xf]
00005408(3): XOR R12D,R12D
0000540b(3): MOV RDI,RBX
0000540e(5): CALL 0x00001650
00005413(5): MOV qword ptr [RSP + 0x48],RBX
00005418(5): MOV qword ptr [RSP + 0x18],RAX
0000541d(5): MOV byte ptr [RSP + 0xe],0x1
00005422(5): MOV byte ptr [RSP + 0x7c],0x0
00005427(9): MOV qword ptr [RSP + 0x50],0x0
00005430(5): MOV byte ptr [RSP + 0xd],0x1
00005435(5): JMP 0x000046d3
0000543a(5): MOV byte ptr [RSP + 0xe],0x1
0000543f(5): MOV byte ptr [RSP + 0x7c],0x0
00005444(3): XOR R12D,R12D
00005447(9): MOV qword ptr [RSP + 0x50],0x0
00005450(5): MOV byte ptr [RSP + 0xf],0x0
00005455(3): XOR R15D,R15D
00005458(5): MOV byte ptr [RSP + 0xd],0x0
0000545d(9): MOV qword ptr [RSP + 0x18],0x0
00005466(9): MOV qword ptr [RSP + 0x48],0x0
0000546f(5): JMP 0x000046d3
00005474(5): MOV byte ptr [RSP + 0xe],0x1
00005479(5): MOV byte ptr [RSP + 0x7c],0x0
0000547e(3): XOR R12D,R12D
00005481(9): MOV qword ptr [RSP + 0x50],0x0
0000548a(5): MOV byte ptr [RSP + 0xf],0x1
0000548f(5): MOV byte ptr [RSP + 0xd],0x1
00005494(5): JMP 0x000046b3
00005499(3): CMP R13,R15
0000549c(2): JBE 0x000054a3
0000549e(5): MOV byte ptr [R14 + R15*0x1],0x30
000054a3(4): LEA RAX,[RCX + 0x2]
000054a7(3): CMP R13,RAX
000054aa(2): JBE 0x000054b2
000054ac(6): MOV byte ptr [R14 + RCX*0x1 + 0x2],0x30
000054b2(3): MOV EAX,R12D
000054b5(4): LEA R15,[RCX + 0x3]
000054b9(3): XOR R12D,R12D
000054bc(5): MOV EBX,0x30
000054c1(5): JMP 0x00004828
000054d0(5): MOVZX EBX,byte ptr [RSP + 0xf]
000054d5(3): MOV RBP,R11
000054d8(4): MOV byte ptr [RSP + 0xd],BL
000054dc(5): JMP 0x00005189
000054e1(5): MOVZX EDX,byte ptr [RSP + 0xd]
000054e6(3): XOR R12D,R12D
000054e9(5): JMP 0x00004ff0
000054ee(3): XOR R10D,R10D
000054f1(5): JMP 0x000050ad
000054f6(9): MOV qword ptr [RSP + 0x50],0x0
000054ff(5): MOV byte ptr [RSP + 0xe],0x1
00005504(3): XOR R12D,R12D
00005507(5): MOV byte ptr [RSP + 0x7c],0x0
0000550c(5): JMP 0x000052eb
00005511(5): MOV R11,qword ptr [RSP + 0x30]
00005516(3): MOV RSI,R14
00005519(3): MOV RCX,R13
0000551c(3): MOV RAX,RBX
0000551f(3): MOV RDI,RBX
00005522(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00005528(5): MOVZX EBX,byte ptr [RSP + 0x7e]
0000552d(8): MOV R9,qword ptr [0x88 + RSP]
00005535(3): CMP RSI,R11
00005538(6): MOVZX R10D,byte ptr [RSP + 0x7f]
0000553e(8): MOV R15,qword ptr [0x80 + RSP]
00005546(5): MOV R14,qword ptr [RSP + 0x40]
0000554b(5): MOV R13,qword ptr [RSP + 0x70]
00005550(2): JNC 0x00005578
00005552(3): CMP byte ptr [RCX],0x0
00005555(2): JNZ 0x00005567
00005557(2): JMP 0x00005578
00005560(5): CMP byte ptr [R9 + RAX*0x1],0x0
00005565(2): JZ 0x00005575
00005567(4): ADD RAX,0x1
0000556b(5): LEA RDX,[RBP + RAX*0x1]
00005570(3): CMP R11,RDX
00005573(2): JA 0x00005560
00005575(3): MOV RDI,RAX
00005578(5): MOVZX EDX,byte ptr [RSP + 0xd]
0000557d(3): XOR R12D,R12D
00005580(5): JMP 0x00004fe6
00005585(3): MOV RDI,RBX
00005588(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000558e(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00005593(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00005599(8): MOV R15,qword ptr [0x80 + RSP]
000055a1(3): XOR R12D,R12D
000055a4(5): MOV R14,qword ptr [RSP + 0x40]
000055a9(5): MOV R13,qword ptr [RSP + 0x70]
000055ae(5): MOV R11,qword ptr [RSP + 0x30]
000055b3(5): MOVZX EDX,byte ptr [RSP + 0xd]
000055b8(5): JMP 0x00004fe6
000055bd(5): MOV RDX,qword ptr [RSP + 0x68]
000055c2(3): MOVZX EAX,byte ptr [RDX]
000055c5(2): TEST AL,AL
000055c7(6): JZ 0x000053fc
000055cd(3): NOP dword ptr [RAX]
000055d0(3): CMP R13,R15
000055d3(2): JBE 0x000055d9
000055d5(4): MOV byte ptr [R14 + R15*0x1],AL
000055d9(4): ADD R15,0x1
000055dd(5): MOVZX EAX,byte ptr [RDX + R15*0x1]
000055e2(2): TEST AL,AL
000055e4(2): JNZ 0x000055d0
000055e6(5): JMP 0x000053fc
000055eb(2): MOV EAX,EDX
000055ed(5): JMP 0x00004b47
000055f2(4): MOVZX EBX,byte ptr [RAX + RCX*0x1]
000055f6(3): CMP BL,0x3e
000055f9(6): JA 0x00004e70
000055ff(10): MOV RAX,0x7000a38200000000
00005609(4): BT RAX,RBX
0000560d(6): JNC 0x00004e70
00005613(5): CMP byte ptr [RSP + 0xf],0x0
00005618(6): JNZ 0x00005802
0000561e(3): CMP R13,R15
00005621(2): JBE 0x00005628
00005623(5): MOV byte ptr [R14 + R15*0x1],0x3f
00005628(4): LEA RAX,[R15 + 0x1]
0000562c(3): CMP R13,RAX
0000562f(2): JBE 0x00005637
00005631(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x22
00005637(4): LEA RAX,[R15 + 0x2]
0000563b(3): CMP R13,RAX
0000563e(2): JBE 0x00005646
00005640(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x22
00005646(4): LEA RAX,[R15 + 0x3]
0000564a(3): CMP R13,RAX
0000564d(2): JBE 0x00005655
0000564f(6): MOV byte ptr [R14 + R15*0x1 + 0x3],0x3f
00005655(4): ADD R15,0x4
00005659(2): XOR EDX,EDX
0000565b(3): XOR R12D,R12D
0000565e(2): XOR EAX,EAX
00005660(3): MOV RBP,RCX
00005663(5): JMP 0x00004828
00005668(2): TEST EBX,EBX
0000566a(6): JZ 0x000057f8
00005670(7): LEA RAX,[0x809d]
00005677(5): MOV byte ptr [RSP + 0xe],0x1
0000567c(5): MOV byte ptr [RSP + 0x7c],0x0
00005681(3): XOR R12D,R12D
00005684(9): MOV qword ptr [RSP + 0x50],0x0
0000568d(5): MOV byte ptr [RSP + 0xf],0x1
00005692(5): MOV byte ptr [RSP + 0xd],0x0
00005697(9): MOV qword ptr [RSP + 0x18],0x1
000056a0(3): XOR R15D,R15D
000056a3(5): MOV qword ptr [RSP + 0x48],RAX
000056a8(5): JMP 0x000046d3
000056b0(3): MOV RBP,R11
000056b3(5): MOVZX EAX,byte ptr [RSP + 0xf]
000056b8(5): JMP 0x00005189
000056bd(7): LEA RAX,[0x809b]
000056c4(5): MOV byte ptr [RSP + 0xe],0x1
000056c9(5): MOV byte ptr [RSP + 0x7c],0x0
000056ce(3): XOR R12D,R12D
000056d1(9): MOV qword ptr [RSP + 0x50],0x0
000056da(5): MOV byte ptr [RSP + 0xf],0x1
000056df(5): MOV byte ptr [RSP + 0xd],0x1
000056e4(9): MOV qword ptr [RSP + 0x18],0x1
000056ed(3): XOR R15D,R15D
000056f0(5): MOV qword ptr [RSP + 0x48],RAX
000056f5(5): JMP 0x000046d3
000056fa(2): MOV EAX,EDX
000056fc(5): MOV RBX,qword ptr [RSP + 0x48]
00005701(3): TEST RBX,RBX
00005704(2): JZ 0x00005732
00005706(2): TEST AL,AL
00005708(2): JZ 0x00005732
0000570a(3): MOVZX ECX,byte ptr [RBX]
0000570d(3): MOV RAX,RBX
00005710(2): TEST CL,CL
00005712(2): JZ 0x00005732
00005714(3): MOV RDX,R15
00005717(3): SUB RAX,R15
0000571a(3): CMP R13,RDX
0000571d(2): JBE 0x00005723
0000571f(4): MOV byte ptr [R14 + RDX*0x1],CL
00005723(4): ADD RDX,0x1
00005727(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
0000572b(2): TEST CL,CL
0000572d(2): JNZ 0x0000571a
0000572f(3): MOV R15,RDX
00005732(3): CMP R13,R15
00005735(6): JBE 0x000051d9
0000573b(5): MOV byte ptr [R14 + R15*0x1],0x0
00005740(5): JMP 0x000051d9
00005745(5): CMP dword ptr [RSP + 0x8],0x2
0000574a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000574f(3): MOV RBP,R11
00005752(3): SETZ AL
00005755(4): MOV byte ptr [RSP + 0xd],BL
00005759(5): JMP 0x00005189
0000575e(4): MOV ESI,dword ptr [RSP + 0x8]
00005762(3): MOV RDI,RCX
00005765(5): CALL 0x00004510
0000576a(5): MOV qword ptr [RSP + 0x68],RAX
0000576f(5): JMP 0x000053c6
00005774(4): MOV ESI,dword ptr [RSP + 0x8]
00005778(3): MOV RDI,RCX
0000577b(5): CALL 0x00004510
00005780(5): MOV qword ptr [RSP + 0x60],RAX
00005785(5): JMP 0x000053f1
0000578a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000578f(3): MOV RBP,R11
00005792(2): MOV EAX,EDX
00005794(4): MOV byte ptr [RSP + 0xd],BL
00005798(5): JMP 0x00005189
0000579d(4): SUB RSP,0x8
000057a1(6): MOV R8D,0x5
000057a7(3): MOV RCX,R11
000057aa(4): PUSH qword ptr [RSP + 0x68]
000057ae(4): PUSH qword ptr [RSP + 0x78]
000057b2(3): MOV RDI,R14
000057b5(4): PUSH qword ptr [RSP + 0x38]
000057b9(8): MOV R9D,dword ptr [0x98 + RSP]
000057c1(5): MOV RDX,qword ptr [RSP + 0x30]
000057c6(5): MOV RSI,qword ptr [RSP + 0x70]
000057cb(5): CALL 0x00004600
000057d0(4): ADD RSP,0x20
000057d4(3): MOV R15,RAX
000057d7(5): JMP 0x000051d9
000057dc(5): MOVZX EAX,byte ptr [RSP + 0x7c]
000057e1(5): JMP 0x000056fc
000057e6(8): MOV dword ptr [RSP + 0x8],0x2
000057ee(5): JMP 0x00005189
000057f3(5): CALL 0x00001660
000057f8(5): MOV byte ptr [RSP + 0xd],0x0
000057fd(5): JMP 0x00005271
00005802(3): MOV RBP,R11
00005805(5): JMP 0x000051a0
0000580a(5): MOV byte ptr [RSP + 0xe],0x1
0000580f(2): XOR EAX,EAX
00005811(3): XOR R12D,R12D
00005814(9): MOV qword ptr [RSP + 0x50],0x0
0000581d(5): JMP 0x00004dc4
00005822(3): MOV RDX,R13
00005825(5): MOV R13,qword ptr [RSP + 0x50]
0000582a(5): JMP 0x00004e22
0000582f(5): CALL 0x000015a0
00005834(2): NOP
00005836(10): NOP word ptr CS:[RAX + RAX*0x1]
00005840(2): PUSH R15
00005842(2): PUSH R14
00005844(3): MOVSXD R15,EDI
00005847(2): PUSH R13
00005849(2): PUSH R12
0000584b(3): MOV R14,RDX
0000584e(1): PUSH RBP
0000584f(1): PUSH RBX
00005850(3): MOV RBP,RCX
00005853(4): SUB RSP,0x28
00005857(5): MOV qword ptr [RSP + 0x8],RSI
0000585c(5): CALL 0x000015b0
00005861(3): MOV R13,RAX
00005864(2): MOV EAX,dword ptr [RAX]
00005866(3): TEST R15D,R15D
00005869(7): MOV RBX,qword ptr [0x0020b060]
00005870(4): MOV dword ptr [RSP + 0x18],EAX
00005874(6): JS 0x000059e1
0000587a(7): CMP dword ptr [0x0020b058],R15D
00005881(2): JG 0x000058e5
00005883(7): CMP R15D,0x7fffffff
0000588a(6): JZ 0x000059e6
00005890(4): LEA R12D,[R15 + 0x1]
00005894(7): LEA RAX,[0x20b070]
0000589b(3): MOVSXD RSI,R12D
0000589e(4): SHL RSI,0x4
000058a2(3): CMP RBX,RAX
000058a5(6): JZ 0x000059c0
000058ab(3): MOV RDI,RBX
000058ae(5): CALL 0x00006820
000058b3(3): MOV RBX,RAX
000058b6(7): MOV qword ptr [0x0020b060],RAX
000058bd(7): MOVSXD RDI,dword ptr [0x0020b058]
000058c4(3): MOV EDX,R12D
000058c7(2): XOR ESI,ESI
000058c9(2): SUB EDX,EDI
000058cb(4): SHL RDI,0x4
000058cf(3): MOVSXD RDX,EDX
000058d2(3): ADD RDI,RBX
000058d5(4): SHL RDX,0x4
000058d9(5): CALL 0x000016f0
000058de(7): MOV dword ptr [0x0020b058],R12D
000058e5(3): MOV EAX,dword ptr [RBP + 0x4]
000058e8(4): SHL R15,0x4
000058ec(4): SUB RSP,0x8
000058f0(3): ADD RBX,R15
000058f3(4): LEA R15,[RBP + 0x8]
000058f7(4): MOV R8D,dword ptr [RBP]
000058fb(3): MOV R11,qword ptr [RBX]
000058fe(4): MOV R12,qword ptr [RBX + 0x8]
00005902(3): MOV RCX,R14
00005905(3): OR EAX,0x1
00005908(4): MOV dword ptr [RSP + 0x24],EAX
0000590c(3): PUSH qword ptr [RBP + 0x30]
0000590f(3): MOV R9D,EAX
00005912(3): PUSH qword ptr [RBP + 0x28]
00005915(2): PUSH R15
00005917(3): MOV RSI,R11
0000591a(5): MOV RDX,qword ptr [RSP + 0x28]
0000591f(3): MOV RDI,R12
00005922(5): MOV qword ptr [RSP + 0x30],R11
00005927(5): CALL 0x00004600
0000592c(4): ADD RSP,0x20
00005930(5): MOV R11,qword ptr [RSP + 0x10]
00005935(3): CMP R11,RAX
00005938(2): JA 0x000059a1
0000593a(4): LEA RSI,[RAX + 0x1]
0000593e(7): LEA RAX,[0x20b120]
00005945(3): CMP R12,RAX
00005948(3): MOV qword ptr [RBX],RSI
0000594b(2): JZ 0x0000595f
0000594d(3): MOV RDI,R12
00005950(5): MOV qword ptr [RSP + 0x10],RSI
00005955(5): CALL 0x00001590
0000595a(5): MOV RSI,qword ptr [RSP + 0x10]
0000595f(3): MOV RDI,RSI
00005962(5): MOV qword ptr [RSP + 0x10],RSI
00005967(5): CALL 0x000067c0
0000596c(4): SUB RSP,0x8
00005970(4): MOV qword ptr [RBX + 0x8],RAX
00005974(4): MOV R8D,dword ptr [RBP]
00005978(3): PUSH qword ptr [RBP + 0x30]
0000597b(3): PUSH qword ptr [RBP + 0x28]
0000597e(3): MOV RCX,R14
00005981(2): PUSH R15
00005983(5): MOV R9D,dword ptr [RSP + 0x3c]
00005988(3): MOV RDI,RAX
0000598b(5): MOV RDX,qword ptr [RSP + 0x28]
00005990(5): MOV RSI,qword ptr [RSP + 0x30]
00005995(3): MOV R12,RAX
00005998(5): CALL 0x00004600
0000599d(4): ADD RSP,0x20
000059a1(4): MOV EAX,dword ptr [RSP + 0x18]
000059a5(4): MOV dword ptr [R13],EAX
000059a9(4): ADD RSP,0x28
000059ad(3): MOV RAX,R12
000059b0(1): POP RBX
000059b1(1): POP RBP
000059b2(2): POP R12
000059b4(2): POP R13
000059b6(2): POP R14
000059b8(2): POP R15
000059ba(1): RET
000059c0(2): XOR EDI,EDI
000059c2(5): CALL 0x00006820
000059c7(8): MOVDQA XMM0,xmmword ptr [0x0020b070]
000059cf(3): MOV RBX,RAX
000059d2(7): MOV qword ptr [0x0020b060],RAX
000059d9(3): MOVUPS xmmword ptr [RAX],XMM0
000059dc(5): JMP 0x000058bd
000059e1(5): CALL 0x000015a0
000059e6(5): CALL 0x00006a10
000059eb(5): NOP dword ptr [RAX + RAX*0x1]
000059f0(2): PUSH R12
000059f2(1): PUSH RBP
000059f3(1): PUSH RBX
000059f4(3): MOV RBX,RDI
000059f7(5): CALL 0x000015b0
000059fc(3): MOV R12D,dword ptr [RAX]
000059ff(3): MOV RBP,RAX
00005a02(7): LEA RAX,[0x20b220]
00005a09(3): TEST RBX,RBX
00005a0c(5): MOV ESI,0x38
00005a11(4): CMOVZ RBX,RAX
00005a15(3): MOV RDI,RBX
00005a18(5): CALL 0x000069c0
00005a1d(4): MOV dword ptr [RBP],R12D
00005a21(1): POP RBX
00005a22(1): POP RBP
00005a23(2): POP R12
00005a25(1): RET
00005a30(7): LEA RAX,[0x20b220]
00005a37(3): TEST RDI,RDI
00005a3a(4): CMOVZ RDI,RAX
00005a3e(2): MOV EAX,dword ptr [RDI]
00005a40(1): RET
00005a50(7): LEA RAX,[0x20b220]
00005a57(3): TEST RDI,RDI
00005a5a(4): CMOVZ RDI,RAX
00005a5e(2): MOV dword ptr [RDI],ESI
00005a60(1): RET
00005a70(7): LEA RAX,[0x20b220]
00005a77(3): TEST RDI,RDI
00005a7a(2): MOV ECX,ESI
00005a7c(4): CMOVZ RDI,RAX
00005a80(2): MOV EAX,ESI
00005a82(3): AND ECX,0x1f
00005a85(3): SHR AL,0x5
00005a88(3): MOVZX EAX,AL
00005a8b(5): LEA RDI,[RDI + RAX*0x4 + 0x8]
00005a90(2): MOV ESI,dword ptr [RDI]
00005a92(2): MOV EAX,ESI
00005a94(2): SHR EAX,CL
00005a96(2): XOR EDX,EAX
00005a98(3): AND EAX,0x1
00005a9b(3): AND EDX,0x1
00005a9e(2): SHL EDX,CL
00005aa0(2): XOR EDX,ESI
00005aa2(2): MOV dword ptr [RDI],EDX
00005aa4(1): RET
00005ab0(7): LEA RAX,[0x20b220]
00005ab7(3): TEST RDI,RDI
00005aba(4): CMOVZ RDI,RAX
00005abe(3): MOV EAX,dword ptr [RDI + 0x4]
00005ac1(3): MOV dword ptr [RDI + 0x4],ESI
00005ac4(1): RET
00005ad0(7): LEA RAX,[0x20b220]
00005ad7(3): TEST RDI,RDI
00005ada(4): CMOVZ RDI,RAX
00005ade(3): TEST RSI,RSI
00005ae1(6): MOV dword ptr [RDI],0xa
00005ae7(2): JZ 0x00005af7
00005ae9(3): TEST RDX,RDX
00005aec(2): JZ 0x00005af7
00005aee(4): MOV qword ptr [RDI + 0x28],RSI
00005af2(4): MOV qword ptr [RDI + 0x30],RDX
00005af6(1): RET
00005af7(4): SUB RSP,0x8
00005afb(5): CALL 0x000015a0
00005b00(2): PUSH R15
00005b02(2): PUSH R14
00005b04(7): LEA RAX,[0x20b220]
00005b0b(2): PUSH R13
00005b0d(2): PUSH R12
00005b0f(3): MOV R13,RDI
00005b12(1): PUSH RBP
00005b13(1): PUSH RBX
00005b14(3): MOV RBX,R8
00005b17(3): MOV R14,RSI
00005b1a(3): MOV R15,RDX
00005b1d(4): SUB RSP,0x18
00005b21(3): TEST R8,R8
00005b24(4): CMOVZ RBX,RAX
00005b28(5): MOV qword ptr [RSP + 0x8],RCX
00005b2d(5): CALL 0x000015b0
00005b32(3): MOV R12D,dword ptr [RAX]
00005b35(3): MOV RBP,RAX
00005b38(4): LEA RAX,[RBX + 0x8]
00005b3c(4): SUB RSP,0x8
00005b40(4): MOV R9D,dword ptr [RBX + 0x4]
00005b44(3): PUSH qword ptr [RBX + 0x30]
00005b47(3): MOV R8D,dword ptr [RBX]
00005b4a(3): PUSH qword ptr [RBX + 0x28]
00005b4d(3): MOV RDX,R15
00005b50(1): PUSH RAX
00005b51(5): MOV RCX,qword ptr [RSP + 0x28]
00005b56(3): MOV RSI,R14
00005b59(3): MOV RDI,R13
00005b5c(5): CALL 0x00004600
00005b61(4): MOV dword ptr [RBP],R12D
00005b65(4): ADD RSP,0x38
00005b69(1): POP RBX
00005b6a(1): POP RBP
00005b6b(2): POP R12
00005b6d(2): POP R13
00005b6f(2): POP R14
00005b71(2): POP R15
00005b73(1): RET
00005b80(2): PUSH R15
00005b82(2): PUSH R14
00005b84(7): LEA RAX,[0x20b220]
00005b8b(2): PUSH R13
00005b8d(2): PUSH R12
00005b8f(3): MOV R12,RDX
00005b92(1): PUSH RBP
00005b93(1): PUSH RBX
00005b94(3): MOV RBX,RCX
00005b97(3): MOV R14,RDI
00005b9a(3): MOV R15,RSI
00005b9d(4): SUB RSP,0x38
00005ba1(3): TEST RCX,RCX
00005ba4(4): CMOVZ RBX,RAX
00005ba8(2): XOR EBP,EBP
00005baa(5): CALL 0x000015b0
00005baf(3): TEST R12,R12
00005bb2(3): MOV R13,RAX
00005bb5(2): MOV EAX,dword ptr [RAX]
00005bb7(4): SETZ BPL
00005bbb(3): OR EBP,dword ptr [RBX + 0x4]
00005bbe(4): LEA R10,[RBX + 0x8]
00005bc2(4): SUB RSP,0x8
00005bc6(3): MOV R8D,dword ptr [RBX]
00005bc9(3): MOV RCX,R15
00005bcc(4): MOV dword ptr [RSP + 0x14],EAX
00005bd0(3): PUSH qword ptr [RBX + 0x30]
00005bd3(3): MOV RDX,R14
00005bd6(3): PUSH qword ptr [RBX + 0x28]
00005bd9(2): PUSH R10
00005bdb(2): XOR ESI,ESI
00005bdd(3): MOV R9D,EBP
00005be0(2): XOR EDI,EDI
00005be2(5): MOV qword ptr [RSP + 0x40],R10
00005be7(5): CALL 0x00004600
00005bec(4): LEA RSI,[RAX + 0x1]
00005bf0(5): MOV qword ptr [RSP + 0x48],RAX
00005bf5(4): ADD RSP,0x20
00005bf9(3): MOV RDI,RSI
00005bfc(5): MOV qword ptr [RSP + 0x18],RSI
00005c01(5): CALL 0x000067c0
00005c06(5): MOV qword ptr [RSP + 0x10],RAX
00005c0b(4): SUB RSP,0x8
00005c0f(3): PUSH qword ptr [RBX + 0x30]
00005c12(3): PUSH qword ptr [RBX + 0x28]
00005c15(5): MOV R10,qword ptr [RSP + 0x38]
00005c1a(3): MOV R9D,EBP
00005c1d(3): MOV R8D,dword ptr [RBX]
00005c20(3): MOV RCX,R15
00005c23(3): MOV RDX,R14
00005c26(3): MOV RDI,RAX
00005c29(2): PUSH R10
00005c2b(5): MOV RSI,qword ptr [RSP + 0x38]
00005c30(5): CALL 0x00004600
00005c35(4): MOV EAX,dword ptr [RSP + 0x2c]
00005c39(4): ADD RSP,0x20
00005c3d(3): TEST R12,R12
00005c40(4): MOV dword ptr [R13],EAX
00005c44(2): JZ 0x00005c4f
00005c46(5): MOV R11,qword ptr [RSP + 0x28]
00005c4b(4): MOV qword ptr [R12],R11
00005c4f(5): MOV RAX,qword ptr [RSP + 0x10]
00005c54(4): ADD RSP,0x38
00005c58(1): POP RBX
00005c59(1): POP RBP
00005c5a(2): POP R12
00005c5c(2): POP R13
00005c5e(2): POP R14
00005c60(2): POP R15
00005c62(1): RET
00005c70(3): MOV RCX,RDX
00005c73(2): XOR EDX,EDX
00005c75(5): JMP 0x00005b80
00005c80(6): MOV EAX,dword ptr [0x0020b058]
00005c86(2): PUSH R12
00005c88(7): MOV R12,qword ptr [0x0020b060]
00005c8f(1): PUSH RBP
00005c90(1): PUSH RBX
00005c91(3): CMP EAX,0x1
00005c94(2): JLE 0x00005cc1
00005c96(3): SUB EAX,0x2
00005c99(5): LEA RBX,[R12 + 0x18]
00005c9e(4): SHL RAX,0x4
00005ca2(5): LEA RBP,[R12 + RAX*0x1 + 0x28]
00005ca7(9): NOP word ptr [RAX + RAX*0x1]
00005cb0(3): MOV RDI,qword ptr [RBX]
00005cb3(4): ADD RBX,0x10
00005cb7(5): CALL 0x00001590
00005cbc(3): CMP RBX,RBP
00005cbf(2): JNZ 0x00005cb0
00005cc1(5): MOV RDI,qword ptr [R12 + 0x8]
00005cc6(7): LEA RBX,[0x20b120]
00005ccd(3): CMP RDI,RBX
00005cd0(2): JZ 0x00005ce9
00005cd2(5): CALL 0x00001590
00005cd7(11): MOV qword ptr [0x0020b070],0x100
00005ce2(7): MOV qword ptr [0x0020b078],RBX
00005ce9(7): LEA RBX,[0x20b070]
00005cf0(3): CMP R12,RBX
00005cf3(2): JZ 0x00005d04
00005cf5(3): MOV RDI,R12
00005cf8(5): CALL 0x00001590
00005cfd(7): MOV qword ptr [0x0020b060],RBX
00005d04(1): POP RBX
00005d05(10): MOV dword ptr [0x0020b058],0x1
00005d0f(1): POP RBP
00005d10(2): POP R12
00005d12(1): RET
00005d20(7): LEA RCX,[0x20b220]
00005d27(7): MOV RDX,-0x1
00005d2e(5): JMP 0x00005840
00005d40(7): LEA RCX,[0x20b220]
00005d47(5): JMP 0x00005840
00005d50(7): LEA RCX,[0x20b220]
00005d57(3): MOV RSI,RDI
00005d5a(7): MOV RDX,-0x1
00005d61(2): XOR EDI,EDI
00005d63(5): JMP 0x00005840
00005d70(7): LEA RCX,[0x20b220]
00005d77(3): MOV RDX,RSI
00005d7a(3): MOV RSI,RDI
00005d7d(2): XOR EDI,EDI
00005d7f(5): JMP 0x00005840
00005d90(4): SUB RSP,0x48
00005d94(3): MOV RAX,RDX
00005d97(9): MOV RDX,qword ptr FS:[0x28]
00005da0(5): MOV qword ptr [RSP + 0x38],RDX
00005da5(2): XOR EDX,EDX
00005da7(3): CMP ESI,0xa
00005daa(2): JZ 0x00005e14
00005dac(3): MOV dword ptr [RSP],ESI
00005daf(3): MOV RCX,RSP
00005db2(7): MOV RDX,-0x1
00005db9(3): MOV RSI,RAX
00005dbc(9): MOV qword ptr [RSP + 0x4],0x0
00005dc5(9): MOV qword ptr [RSP + 0xc],0x0
00005dce(9): MOV qword ptr [RSP + 0x14],0x0
00005dd7(9): MOV qword ptr [RSP + 0x1c],0x0
00005de0(9): MOV qword ptr [RSP + 0x24],0x0
00005de9(9): MOV qword ptr [RSP + 0x2c],0x0
00005df2(8): MOV dword ptr [RSP + 0x34],0x0
00005dfa(5): CALL 0x00005840
00005dff(5): MOV RCX,qword ptr [RSP + 0x38]
00005e04(9): XOR RCX,qword ptr FS:[0x28]
00005e0d(2): JNZ 0x00005e19
00005e0f(4): ADD RSP,0x48
00005e13(1): RET
00005e14(5): CALL 0x000015a0
00005e19(5): CALL 0x00001660
00005e1e(2): NOP
00005e20(4): SUB RSP,0x48
00005e24(3): MOV RAX,RDX
00005e27(3): MOV RDX,RCX
00005e2a(9): MOV RCX,qword ptr FS:[0x28]
00005e33(5): MOV qword ptr [RSP + 0x38],RCX
00005e38(2): XOR ECX,ECX
00005e3a(3): CMP ESI,0xa
00005e3d(2): JZ 0x00005ea0
00005e3f(3): MOV dword ptr [RSP],ESI
00005e42(3): MOV RCX,RSP
00005e45(3): MOV RSI,RAX
00005e48(9): MOV qword ptr [RSP + 0x4],0x0
00005e51(9): MOV qword ptr [RSP + 0xc],0x0
00005e5a(9): MOV qword ptr [RSP + 0x14],0x0
00005e63(9): MOV qword ptr [RSP + 0x1c],0x0
00005e6c(9): MOV qword ptr [RSP + 0x24],0x0
00005e75(9): MOV qword ptr [RSP + 0x2c],0x0
00005e7e(8): MOV dword ptr [RSP + 0x34],0x0
00005e86(5): CALL 0x00005840
00005e8b(5): MOV RDX,qword ptr [RSP + 0x38]
00005e90(9): XOR RDX,qword ptr FS:[0x28]
00005e99(2): JNZ 0x00005ea5
00005e9b(4): ADD RSP,0x48
00005e9f(1): RET
00005ea0(5): CALL 0x000015a0
00005ea5(5): CALL 0x00001660
00005eaa(6): NOP word ptr [RAX + RAX*0x1]
00005eb0(3): MOV RDX,RSI
00005eb3(2): MOV ESI,EDI
00005eb5(2): XOR EDI,EDI
00005eb7(5): JMP 0x00005d90
00005ec0(3): MOV RCX,RDX
00005ec3(3): MOV RDX,RSI
00005ec6(2): MOV ESI,EDI
00005ec8(2): XOR EDI,EDI
00005eca(5): JMP 0x00005e20
00005ed0(4): SUB RSP,0x48
00005ed4(2): MOV ECX,EDX
00005ed6(9): MOV RAX,qword ptr FS:[0x28]
00005edf(5): MOV qword ptr [RSP + 0x38],RAX
00005ee4(2): XOR EAX,EAX
00005ee6(7): MOV RAX,qword ptr [0x0020b250]
00005eed(3): MOV R8,RSP
00005ef0(3): AND ECX,0x1f
00005ef3(8): MOVDQA XMM0,xmmword ptr [0x0020b220]
00005efb(5): MOV qword ptr [RSP + 0x30],RAX
00005f00(2): MOV EAX,EDX
00005f02(4): MOVAPS xmmword ptr [RSP],XMM0
00005f06(3): SHR AL,0x5
00005f09(3): MOVZX EAX,AL
00005f0c(5): LEA R9,[R8 + RAX*0x4 + 0x8]
00005f11(8): MOVDQA XMM0,xmmword ptr [0x0020b230]
00005f19(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00005f1e(8): MOVDQA XMM0,xmmword ptr [0x0020b240]
00005f26(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00005f2b(3): MOV EDX,dword ptr [R9]
00005f2e(2): MOV EAX,EDX
00005f30(2): SHR EAX,CL
00005f32(2): NOT EAX
00005f34(3): AND EAX,0x1
00005f37(2): SHL EAX,CL
00005f39(3): MOV RCX,R8
00005f3c(2): XOR EAX,EDX
00005f3e(3): MOV RDX,RSI
00005f41(3): MOV RSI,RDI
00005f44(3): MOV dword ptr [R9],EAX
00005f47(2): XOR EDI,EDI
00005f49(5): CALL 0x00005840
00005f4e(5): MOV RSI,qword ptr [RSP + 0x38]
00005f53(9): XOR RSI,qword ptr FS:[0x28]
00005f5c(2): JNZ 0x00005f63
00005f5e(4): ADD RSP,0x48
00005f62(1): RET
00005f63(5): CALL 0x00001660
00005f68(8): NOP dword ptr [RAX + RAX*0x1]
00005f70(4): MOVSX EDX,SIL
00005f74(7): MOV RSI,-0x1
00005f7b(5): JMP 0x00005ed0
00005f80(5): MOV EDX,0x3a
00005f85(7): MOV RSI,-0x1
00005f8c(5): JMP 0x00005ed0
00005fa0(5): MOV EDX,0x3a
00005fa5(5): JMP 0x00005ed0
00005fb0(4): SUB RSP,0x48
00005fb4(3): MOV RAX,RDX
00005fb7(9): MOV RDX,qword ptr FS:[0x28]
00005fc0(5): MOV qword ptr [RSP + 0x38],RDX
00005fc5(2): XOR EDX,EDX
00005fc7(3): CMP ESI,0xa
00005fca(2): JZ 0x00006034
00005fcc(3): MOV dword ptr [RSP],ESI
00005fcf(3): MOV RCX,RSP
00005fd2(7): MOV RDX,-0x1
00005fd9(3): MOV RSI,RAX
00005fdc(9): MOV qword ptr [RSP + 0x4],0x0
00005fe5(9): MOV qword ptr [RSP + 0xc],0x4000000
00005fee(9): MOV qword ptr [RSP + 0x14],0x0
00005ff7(9): MOV qword ptr [RSP + 0x1c],0x0
00006000(9): MOV qword ptr [RSP + 0x24],0x0
00006009(9): MOV qword ptr [RSP + 0x2c],0x0
00006012(8): MOV dword ptr [RSP + 0x34],0x0
0000601a(5): CALL 0x00005840
0000601f(5): MOV RCX,qword ptr [RSP + 0x38]
00006024(9): XOR RCX,qword ptr FS:[0x28]
0000602d(2): JNZ 0x00006039
0000602f(4): ADD RSP,0x48
00006033(1): RET
00006034(5): CALL 0x000015a0
00006039(5): CALL 0x00001660
0000603e(2): NOP
00006040(4): SUB RSP,0x48
00006044(3): MOV R9,RCX
00006047(7): MOV RCX,qword ptr [0x0020b250]
0000604e(8): MOVDQA XMM0,xmmword ptr [0x0020b220]
00006056(9): MOV RAX,qword ptr FS:[0x28]
0000605f(5): MOV qword ptr [RSP + 0x38],RAX
00006064(2): XOR EAX,EAX
00006066(4): MOVAPS xmmword ptr [RSP],XMM0
0000606a(3): TEST RSI,RSI
0000606d(5): MOV qword ptr [RSP + 0x30],RCX
00006072(7): MOV dword ptr [RSP],0xa
00006079(8): MOVDQA XMM0,xmmword ptr [0x0020b230]
00006081(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00006086(8): MOVDQA XMM0,xmmword ptr [0x0020b240]
0000608e(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00006093(2): JZ 0x000060c7
00006095(3): TEST RDX,RDX
00006098(2): JZ 0x000060c7
0000609a(5): MOV qword ptr [RSP + 0x28],RSI
0000609f(5): MOV qword ptr [RSP + 0x30],RDX
000060a4(3): MOV RCX,RSP
000060a7(3): MOV RDX,R8
000060aa(3): MOV RSI,R9
000060ad(5): CALL 0x00005840
000060b2(5): MOV RDI,qword ptr [RSP + 0x38]
000060b7(9): XOR RDI,qword ptr FS:[0x28]
000060c0(2): JNZ 0x000060cc
000060c2(4): ADD RSP,0x48
000060c6(1): RET
000060c7(5): CALL 0x000015a0
000060cc(5): CALL 0x00001660
000060d1(5): NOP dword ptr [RAX + RAX*0x1]
000060d6(10): NOP word ptr CS:[RAX + RAX*0x1]
000060e0(7): MOV R8,-0x1
000060e7(5): JMP 0x00006040
000060f0(3): MOV RCX,RDX
000060f3(7): MOV R8,-0x1
000060fa(3): MOV RDX,RSI
000060fd(3): MOV RSI,RDI
00006100(2): XOR EDI,EDI
00006102(5): JMP 0x00006040
00006110(3): MOV R8,RCX
00006113(3): MOV RCX,RDX
00006116(3): MOV RDX,RSI
00006119(3): MOV RSI,RDI
0000611c(2): XOR EDI,EDI
0000611e(5): JMP 0x00006040
00006130(7): LEA RCX,[0x20b020]
00006137(5): JMP 0x00005840
00006140(7): LEA RCX,[0x20b020]
00006147(3): MOV RDX,RSI
0000614a(3): MOV RSI,RDI
0000614d(2): XOR EDI,EDI
0000614f(5): JMP 0x00005840
00006160(7): LEA RCX,[0x20b020]
00006167(7): MOV RDX,-0x1
0000616e(5): JMP 0x00005840
00006180(7): LEA RCX,[0x20b020]
00006187(3): MOV RSI,RDI
0000618a(7): MOV RDX,-0x1
00006191(2): XOR EDI,EDI
00006193(5): JMP 0x00005840
000061a0(2): PUSH R15
000061a2(2): PUSH R14
000061a4(2): PUSH R13
000061a6(2): PUSH R12
000061a8(3): MOV R12,R9
000061ab(1): PUSH RBP
000061ac(1): PUSH RBX
000061ad(3): MOV RBP,RDI
000061b0(3): MOV RBX,R8
000061b3(4): SUB RSP,0x28
000061b7(3): TEST RSI,RSI
000061ba(6): JZ 0x000062d8
000061c0(3): MOV R8,RDX
000061c3(7): LEA RDX,[0x8568]
000061ca(3): MOV R9,RCX
000061cd(2): XOR EAX,EAX
000061cf(3): MOV RCX,RSI
000061d2(5): MOV ESI,0x1
000061d7(5): CALL 0x00001870
000061dc(7): LEA RSI,[0x857b]
000061e3(2): XOR EDI,EDI
000061e5(5): MOV EDX,0x5
000061ea(5): CALL 0x00001630
000061ef(7): LEA RDX,[0x88a0]
000061f6(3): MOV RCX,RAX
000061f9(6): MOV R8D,0x7e3
000061ff(5): MOV ESI,0x1
00006204(3): MOV RDI,RBP
00006207(2): XOR EAX,EAX
00006209(5): CALL 0x00001870
0000620e(7): LEA RSI,[0x8608]
00006215(2): XOR EDI,EDI
00006217(5): MOV EDX,0x5
0000621c(5): CALL 0x00001630
00006221(3): MOV RSI,RBP
00006224(3): MOV RDI,RAX
00006227(5): CALL 0x00001730
0000622c(4): CMP R12,0x9
00006230(6): JA 0x00006570
00006236(7): LEA RDX,[0x8864]
0000623d(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
00006241(3): ADD RAX,RDX
00006244(2): JMP RAX
00006250(4): MOV R9,qword ptr [RBX + 0x38]
00006254(4): MOV RAX,qword ptr [RBX + 0x10]
00006258(7): LEA RSI,[0x8778]
0000625f(4): MOV R8,qword ptr [RBX + 0x8]
00006263(5): MOV EDX,0x5
00006268(2): XOR EDI,EDI
0000626a(4): MOV R13,qword ptr [RBX + 0x30]
0000626e(4): MOV R12,qword ptr [RBX + 0x28]
00006272(5): MOV qword ptr [RSP + 0x10],R9
00006277(4): MOV R15,qword ptr [RBX + 0x20]
0000627b(4): MOV R14,qword ptr [RBX + 0x18]
0000627f(4): MOV qword ptr [RSP],RAX
00006283(5): MOV qword ptr [RSP + 0x8],R8
00006288(3): MOV RBX,qword ptr [RBX]
0000628b(5): CALL 0x00001630
00006290(4): SUB RSP,0x8
00006294(5): MOV R9,qword ptr [RSP + 0x18]
00006299(3): MOV RDX,RAX
0000629c(3): MOV RCX,RBX
0000629f(5): MOV ESI,0x1
000062a4(3): MOV RDI,RBP
000062a7(2): XOR EAX,EAX
000062a9(2): PUSH R9
000062ab(2): PUSH R13
000062ad(2): PUSH R12
000062af(2): PUSH R15
000062b1(2): PUSH R14
000062b3(5): MOV R9,qword ptr [RSP + 0x30]
000062b8(5): MOV R8,qword ptr [RSP + 0x38]
000062bd(5): CALL 0x00001870
000062c2(4): ADD RSP,0x30
000062c6(4): ADD RSP,0x28
000062ca(1): POP RBX
000062cb(1): POP RBP
000062cc(2): POP R12
000062ce(2): POP R13
000062d0(2): POP R14
000062d2(2): POP R15
000062d4(1): RET
000062d8(3): MOV R8,RCX
000062db(3): MOV RCX,RDX
000062de(7): LEA RDX,[0x8574]
000062e5(5): MOV ESI,0x1
000062ea(2): XOR EAX,EAX
000062ec(5): CALL 0x00001870
000062f1(5): JMP 0x000061dc
00006300(4): MOV R10,qword ptr [RBX + 0x40]
00006304(4): MOV R9,qword ptr [RBX + 0x38]
00006308(7): LEA RSI,[0x87a8]
0000630f(4): MOV RAX,qword ptr [RBX + 0x10]
00006313(4): MOV R8,qword ptr [RBX + 0x8]
00006317(5): MOV EDX,0x5
0000631c(4): MOV R13,qword ptr [RBX + 0x30]
00006320(4): MOV R12,qword ptr [RBX + 0x28]
00006324(4): MOV R15,qword ptr [RBX + 0x20]
00006328(4): MOV R14,qword ptr [RBX + 0x18]
0000632c(3): MOV RBX,qword ptr [RBX]
0000632f(5): MOV qword ptr [RSP + 0x18],R10
00006334(5): MOV qword ptr [RSP + 0x10],R9
00006339(4): MOV qword ptr [RSP],RAX
0000633d(5): MOV qword ptr [RSP + 0x8],R8
00006342(2): XOR EDI,EDI
00006344(5): CALL 0x00001630
00006349(5): MOV R10,qword ptr [RSP + 0x18]
0000634e(2): PUSH R10
00006350(5): JMP 0x00006294
00006358(3): MOV RBX,qword ptr [RBX]
0000635b(7): LEA RSI,[0x857f]
00006362(5): MOV EDX,0x5
00006367(2): XOR EDI,EDI
00006369(5): CALL 0x00001630
0000636e(4): ADD RSP,0x28
00006372(3): MOV RCX,RBX
00006375(3): MOV RDI,RBP
00006378(1): POP RBX
00006379(1): POP RBP
0000637a(2): POP R12
0000637c(2): POP R13
0000637e(2): POP R14
00006380(2): POP R15
00006382(3): MOV RDX,RAX
00006385(5): MOV ESI,0x1
0000638a(2): XOR EAX,EAX
0000638c(5): JMP 0x00001870
00006398(4): MOV R12,qword ptr [RBX + 0x8]
0000639c(7): LEA RSI,[0x858f]
000063a3(3): MOV RBX,qword ptr [RBX]
000063a6(5): MOV EDX,0x5
000063ab(2): XOR EDI,EDI
000063ad(5): CALL 0x00001630
000063b2(4): ADD RSP,0x28
000063b6(3): MOV R8,R12
000063b9(3): MOV RCX,RBX
000063bc(3): MOV RDI,RBP
000063bf(3): MOV RDX,RAX
000063c2(5): MOV ESI,0x1
000063c7(1): POP RBX
000063c8(1): POP RBP
000063c9(2): POP R12
000063cb(2): POP R13
000063cd(2): POP R14
000063cf(2): POP R15
000063d1(2): XOR EAX,EAX
000063d3(5): JMP 0x00001870
000063e0(4): MOV R13,qword ptr [RBX + 0x10]
000063e4(4): MOV R12,qword ptr [RBX + 0x8]
000063e8(7): LEA RSI,[0x85a6]
000063ef(3): MOV RBX,qword ptr [RBX]
000063f2(5): MOV EDX,0x5
000063f7(2): XOR EDI,EDI
000063f9(5): CALL 0x00001630
000063fe(4): ADD RSP,0x28
00006402(3): MOV R9,R13
00006405(3): MOV R8,R12
00006408(3): MOV RCX,RBX
0000640b(3): MOV RDI,RBP
0000640e(3): MOV RDX,RAX
00006411(1): POP RBX
00006412(1): POP RBP
00006413(2): POP R12
00006415(2): POP R13
00006417(2): POP R14
00006419(2): POP R15
0000641b(5): MOV ESI,0x1
00006420(2): XOR EAX,EAX
00006422(5): JMP 0x00001870
00006430(7): LEA RSI,[0x86d8]
00006437(5): MOV EDX,0x5
0000643c(2): XOR EDI,EDI
0000643e(4): MOV R14,qword ptr [RBX + 0x18]
00006442(4): MOV R13,qword ptr [RBX + 0x10]
00006446(4): MOV R12,qword ptr [RBX + 0x8]
0000644a(3): MOV RBX,qword ptr [RBX]
0000644d(5): CALL 0x00001630
00006452(4): SUB RSP,0x8
00006456(2): PUSH R14
00006458(3): MOV RDX,RAX
0000645b(3): MOV R9,R13
0000645e(3): MOV R8,R12
00006461(3): MOV RCX,RBX
00006464(3): MOV RDI,RBP
00006467(5): MOV ESI,0x1
0000646c(2): XOR EAX,EAX
0000646e(5): CALL 0x00001870
00006473(1): POP RAX
00006474(1): POP RDX
00006475(4): ADD RSP,0x28
00006479(1): POP RBX
0000647a(1): POP RBP
0000647b(2): POP R12
0000647d(2): POP R13
0000647f(2): POP R14
00006481(2): POP R15
00006483(1): RET
00006488(4): MOV R15,qword ptr [RBX + 0x20]
0000648c(7): LEA RSI,[0x86f8]
00006493(5): MOV EDX,0x5
00006498(2): XOR EDI,EDI
0000649a(4): MOV R14,qword ptr [RBX + 0x18]
0000649e(4): MOV R13,qword ptr [RBX + 0x10]
000064a2(4): MOV R12,qword ptr [RBX + 0x8]
000064a6(3): MOV RBX,qword ptr [RBX]
000064a9(5): CALL 0x00001630
000064ae(2): PUSH R15
000064b0(2): JMP 0x00006456
000064b8(4): MOV R8,qword ptr [RBX + 0x8]
000064bc(4): MOV R12,qword ptr [RBX + 0x28]
000064c0(7): LEA RSI,[0x8720]
000064c7(4): MOV R15,qword ptr [RBX + 0x20]
000064cb(4): MOV R14,qword ptr [RBX + 0x18]
000064cf(5): MOV EDX,0x5
000064d4(4): MOV R13,qword ptr [RBX + 0x10]
000064d8(2): XOR EDI,EDI
000064da(3): MOV RBX,qword ptr [RBX]
000064dd(4): MOV qword ptr [RSP],R8
000064e1(5): CALL 0x00001630
000064e6(4): SUB RSP,0x8
000064ea(3): MOV R9,R13
000064ed(2): PUSH R12
000064ef(2): PUSH R15
000064f1(2): PUSH R14
000064f3(5): MOV R8,qword ptr [RSP + 0x20]
000064f8(3): MOV RCX,RBX
000064fb(3): MOV RDX,RAX
000064fe(3): MOV RDI,RBP
00006501(5): MOV ESI,0x1
00006506(2): XOR EAX,EAX
00006508(5): CALL 0x00001870
0000650d(4): ADD RSP,0x20
00006511(4): ADD RSP,0x28
00006515(1): POP RBX
00006516(1): POP RBP
00006517(2): POP R12
00006519(2): POP R13
0000651b(2): POP R14
0000651d(2): POP R15
0000651f(1): RET
00006520(4): MOV R9,qword ptr [RBX + 0x10]
00006524(4): MOV R13,qword ptr [RBX + 0x30]
00006528(7): LEA RSI,[0x8748]
0000652f(4): MOV R12,qword ptr [RBX + 0x28]
00006533(4): MOV R15,qword ptr [RBX + 0x20]
00006537(5): MOV EDX,0x5
0000653c(4): MOV R14,qword ptr [RBX + 0x18]
00006540(4): MOV R8,qword ptr [RBX + 0x8]
00006544(2): XOR EDI,EDI
00006546(5): MOV qword ptr [RSP + 0x8],R9
0000654b(3): MOV RBX,qword ptr [RBX]
0000654e(4): MOV qword ptr [RSP],R8
00006552(5): CALL 0x00001630
00006557(2): PUSH R13
00006559(2): PUSH R12
0000655b(2): PUSH R15
0000655d(2): PUSH R14
0000655f(5): MOV R9,qword ptr [RSP + 0x28]
00006564(2): JMP 0x000064f3
00006570(4): MOV R10,qword ptr [RBX + 0x40]
00006574(4): MOV R9,qword ptr [RBX + 0x38]
00006578(5): MOV EDX,0x5
0000657d(4): MOV RAX,qword ptr [RBX + 0x10]
00006581(4): MOV R8,qword ptr [RBX + 0x8]
00006585(7): LEA RSI,[0x87e0]
0000658c(4): MOV R13,qword ptr [RBX + 0x30]
00006590(4): MOV R12,qword ptr [RBX + 0x28]
00006594(4): MOV R15,qword ptr [RBX + 0x20]
00006598(4): MOV R14,qword ptr [RBX + 0x18]
0000659c(5): MOV qword ptr [RSP + 0x18],R10
000065a1(5): MOV qword ptr [RSP + 0x10],R9
000065a6(4): MOV qword ptr [RSP],RAX
000065aa(5): MOV qword ptr [RSP + 0x8],R8
000065af(3): MOV RBX,qword ptr [RBX]
000065b2(5): JMP 0x00006342
000065c0(3): XOR R9D,R9D
000065c3(4): CMP qword ptr [R8],0x0
000065c7(2): JZ 0x000065db
000065c9(7): NOP dword ptr [RAX]
000065d0(4): ADD R9,0x1
000065d4(5): CMP qword ptr [R8 + R9*0x8],0x0
000065d9(2): JNZ 0x000065d0
000065db(5): JMP 0x000061a0
000065e0(4): SUB RSP,0x68
000065e4(3): MOV R10,R8
000065e7(3): XOR R9D,R9D
000065ea(9): MOV RAX,qword ptr FS:[0x28]
000065f3(5): MOV qword ptr [RSP + 0x58],RAX
000065f8(2): XOR EAX,EAX
000065fa(3): MOV R8,RSP
000065fd(3): NOP dword ptr [RAX]
00006600(3): MOV EAX,dword ptr [R10]
00006603(3): CMP EAX,0x2f
00006606(2): JA 0x0000664a
00006608(3): MOV R11D,EAX
0000660b(4): ADD R11,qword ptr [R10 + 0x10]
0000660f(3): ADD EAX,0x8
00006612(3): MOV dword ptr [R10],EAX
00006615(3): MOV RAX,qword ptr [R11]
00006618(3): TEST RAX,RAX
0000661b(4): MOV qword ptr [R8 + R9*0x8],RAX
0000661f(2): JZ 0x0000662b
00006621(4): ADD R9,0x1
00006625(4): CMP R9,0xa
00006629(2): JNZ 0x00006600
0000662b(5): CALL 0x000061a0
00006630(5): MOV RAX,qword ptr [RSP + 0x58]
00006635(9): XOR RAX,qword ptr FS:[0x28]
0000663e(2): JNZ 0x00006645
00006640(4): ADD RSP,0x68
00006644(1): RET
00006645(5): CALL 0x00001660
0000664a(4): MOV R11,qword ptr [R10 + 0x8]
0000664e(4): LEA RAX,[R11 + 0x8]
00006652(4): MOV qword ptr [R10 + 0x8],RAX
00006656(2): JMP 0x00006615
00006660(1): PUSH RBP
00006661(1): PUSH RBX
00006662(6): MOV R10D,0x20
00006668(3): XOR R11D,R11D
0000666b(7): SUB RSP,0xb8
00006672(9): MOV RAX,qword ptr FS:[0x28]
0000667b(5): MOV qword ptr [RSP + 0x78],RAX
00006680(2): XOR EAX,EAX
00006682(8): LEA RAX,[0xd0 + RSP]
0000668a(8): MOV qword ptr [0xa0 + RSP],R8
00006692(8): LEA RBX,[0xd0 + RSP]
0000669a(5): LEA R8,[RSP + 0x20]
0000669f(8): MOV qword ptr [0xa8 + RSP],R9
000066a7(8): MOV dword ptr [RSP + 0x8],0x20
000066af(5): MOV qword ptr [RSP + 0x10],RAX
000066b4(8): LEA RAX,[0x80 + RSP]
000066bc(3): XOR R9D,R9D
000066bf(5): MOV qword ptr [RSP + 0x18],RAX
000066c4(3): MOV RBP,RAX
000066c7(9): NOP word ptr [RAX + RAX*0x1]
000066d0(4): CMP R10D,0x2f
000066d4(2): JA 0x0000672c
000066d6(3): MOV EAX,R10D
000066d9(6): MOV R11D,0x1
000066df(4): ADD R10D,0x8
000066e3(3): ADD RAX,RBP
000066e6(3): MOV RAX,qword ptr [RAX]
000066e9(3): TEST RAX,RAX
000066ec(4): MOV qword ptr [R8 + R9*0x8],RAX
000066f0(2): JZ 0x000066fc
000066f2(4): ADD R9,0x1
000066f6(4): CMP R9,0xa
000066fa(2): JNZ 0x000066d0
000066fc(3): TEST R11B,R11B
000066ff(2): JNZ 0x00006725
00006701(5): CALL 0x000061a0
00006706(5): MOV RAX,qword ptr [RSP + 0x78]
0000670b(9): XOR RAX,qword ptr FS:[0x28]
00006714(2): JNZ 0x00006720
00006716(7): ADD RSP,0xb8
0000671d(1): POP RBX
0000671e(1): POP RBP
0000671f(1): RET
00006720(5): CALL 0x00001660
00006725(5): MOV dword ptr [RSP + 0x8],R10D
0000672a(2): JMP 0x00006701
0000672c(3): MOV RAX,RBX
0000672f(4): ADD RBX,0x8
00006733(2): JMP 0x000066e6
00006740(1): PUSH RBX
00006741(7): LEA RSI,[0x85c2]
00006748(5): MOV EDX,0x5
0000674d(2): XOR EDI,EDI
0000674f(5): CALL 0x00001630
00006754(7): LEA RDX,[0x85d7]
0000675b(3): MOV RSI,RAX
0000675e(5): MOV EDI,0x1
00006763(2): XOR EAX,EAX
00006765(5): CALL 0x000017f0
0000676a(7): LEA RSI,[0x85ed]
00006771(5): MOV EDX,0x5
00006776(2): XOR EDI,EDI
00006778(5): CALL 0x00001630
0000677d(7): LEA RCX,[0x7b98]
00006784(7): LEA RDX,[0x73f0]
0000678b(3): MOV RSI,RAX
0000678e(5): MOV EDI,0x1
00006793(2): XOR EAX,EAX
00006795(5): CALL 0x000017f0
0000679a(7): MOV RBX,qword ptr [0x0020b088]
000067a1(7): LEA RSI,[0x8820]
000067a8(2): XOR EDI,EDI
000067aa(5): MOV EDX,0x5
000067af(5): CALL 0x00001630
000067b4(3): MOV RSI,RBX
000067b7(3): MOV RDI,RAX
000067ba(1): POP RBX
000067bb(5): JMP 0x00001730
000067c0(1): PUSH RBX
000067c1(3): MOV RBX,RDI
000067c4(5): CALL 0x00001780
000067c9(3): TEST RAX,RAX
000067cc(2): JNZ 0x000067d3
000067ce(3): TEST RBX,RBX
000067d1(2): JNZ 0x000067d5
000067d3(1): POP RBX
000067d4(1): RET
000067d5(5): CALL 0x00006a10
000067da(6): NOP word ptr [RAX + RAX*0x1]
000067e0(3): MOV RAX,RDI
000067e3(3): MUL RSI
000067e6(3): MOV RDI,RAX
000067e9(3): SETO AL
000067ec(3): TEST RDI,RDI
000067ef(2): JS 0x000067fb
000067f1(3): MOVZX EAX,AL
000067f4(3): TEST RAX,RAX
000067f7(2): JNZ 0x000067fb
000067f9(2): JMP 0x000067c0
000067fb(4): SUB RSP,0x8
000067ff(5): CALL 0x00006a10
00006804(2): NOP
00006806(10): NOP word ptr CS:[RAX + RAX*0x1]
00006810(2): JMP 0x000067c0
00006820(3): TEST RSI,RSI
00006823(1): PUSH RBX
00006824(3): MOV RBX,RSI
00006827(2): JNZ 0x0000682e
00006829(3): TEST RDI,RDI
0000682c(2): JNZ 0x00006848
0000682e(3): MOV RSI,RBX
00006831(5): CALL 0x000017d0
00006836(3): TEST RAX,RAX
00006839(2): JNZ 0x00006840
0000683b(3): TEST RBX,RBX
0000683e(2): JNZ 0x00006851
00006840(1): POP RBX
00006841(1): RET
00006848(5): CALL 0x00001590
0000684d(2): XOR EAX,EAX
0000684f(1): POP RBX
00006850(1): RET
00006851(5): CALL 0x00006a10
00006856(10): NOP word ptr CS:[RAX + RAX*0x1]
00006860(3): MOV RAX,RSI
00006863(3): MUL RDX
00006866(3): MOV RSI,RAX
00006869(3): SETO AL
0000686c(3): TEST RSI,RSI
0000686f(2): JS 0x0000687b
00006871(3): MOVZX EAX,AL
00006874(3): TEST RAX,RAX
00006877(2): JNZ 0x0000687b
00006879(2): JMP 0x00006820
0000687b(4): SUB RSP,0x8
0000687f(5): CALL 0x00006a10
00006884(2): NOP
00006886(10): NOP word ptr CS:[RAX + RAX*0x1]
00006890(3): TEST RDI,RDI
00006893(3): MOV R9,RDX
00006896(3): MOV RCX,qword ptr [RSI]
00006899(2): JZ 0x000068d0
0000689b(2): XOR EDX,EDX
0000689d(10): MOV RAX,0x5555555555555554
000068a7(3): DIV R9
000068aa(3): CMP RAX,RCX
000068ad(2): JBE 0x000068eb
000068af(3): MOV RAX,RCX
000068b2(3): SHR RAX,1
000068b5(5): LEA RCX,[RAX + RCX*0x1 + 0x1]
000068ba(3): MOV qword ptr [RSI],RCX
000068bd(4): IMUL RCX,R9
000068c1(3): MOV RSI,RCX
000068c4(5): JMP 0x00006820
000068d0(3): TEST RCX,RCX
000068d3(2): JZ 0x000068f8
000068d5(3): MOV RAX,RCX
000068d8(3): MUL R9
000068db(3): SETO DL
000068de(3): TEST RAX,RAX
000068e1(3): MOVZX EDX,DL
000068e4(2): JS 0x000068eb
000068e6(3): TEST RDX,RDX
000068e9(2): JZ 0x000068ba
000068eb(4): SUB RSP,0x8
000068ef(5): CALL 0x00006a10
000068f4(4): NOP dword ptr [RAX]
000068f8(2): XOR EDX,EDX
000068fa(5): MOV EAX,0x80
000068ff(3): XOR R8D,R8D
00006902(3): DIV R9
00006905(3): TEST RAX,RAX
00006908(4): SETZ R8B
0000690c(4): LEA RCX,[R8 + RAX*0x1]
00006910(2): JMP 0x000068d5
00006920(3): TEST RDI,RDI
00006923(3): MOV RAX,qword ptr [RSI]
00006926(2): JZ 0x00006950
00006928(10): MOV RDX,0x5555555555555553
00006932(3): CMP RAX,RDX
00006935(2): JA 0x00006961
00006937(3): MOV RDX,RAX
0000693a(3): SHR RDX,1
0000693d(5): LEA RAX,[RDX + RAX*0x1 + 0x1]
00006942(3): MOV qword ptr [RSI],RAX
00006945(3): MOV RSI,RAX
00006948(5): JMP 0x00006820
00006950(3): TEST RAX,RAX
00006953(5): MOV EDX,0x80
00006958(4): CMOVZ RAX,RDX
0000695c(3): TEST RAX,RAX
0000695f(2): JNS 0x00006942
00006961(4): SUB RSP,0x8
00006965(5): CALL 0x00006a10
0000696a(6): NOP word ptr [RAX + RAX*0x1]
00006970(1): PUSH RBX
00006971(3): MOV RBX,RDI
00006974(5): CALL 0x000067c0
00006979(3): MOV RDX,RBX
0000697c(2): XOR ESI,ESI
0000697e(3): MOV RDI,RAX
00006981(1): POP RBX
00006982(5): JMP 0x000016f0
00006990(3): MOV RAX,RDI
00006993(4): SUB RSP,0x8
00006997(3): MUL RSI
0000699a(3): SETO DL
0000699d(3): TEST RAX,RAX
000069a0(2): JS 0x000069b9
000069a2(3): MOVZX EDX,DL
000069a5(3): TEST RDX,RDX
000069a8(2): JNZ 0x000069b9
000069aa(5): CALL 0x00001740
000069af(3): TEST RAX,RAX
000069b2(2): JZ 0x000069b9
000069b4(4): ADD RSP,0x8
000069b8(1): RET
000069b9(5): CALL 0x00006a10
000069be(2): NOP
000069c0(1): PUSH RBP
000069c1(1): PUSH RBX
000069c2(3): MOV RBP,RDI
000069c5(3): MOV RDI,RSI
000069c8(3): MOV RBX,RSI
000069cb(4): SUB RSP,0x8
000069cf(5): CALL 0x000067c0
000069d4(4): ADD RSP,0x8
000069d8(3): MOV RDX,RBX
000069db(3): MOV RSI,RBP
000069de(1): POP RBX
000069df(1): POP RBP
000069e0(3): MOV RDI,RAX
000069e3(5): JMP 0x00001760
000069f0(1): PUSH RBX
000069f1(3): MOV RBX,RDI
000069f4(5): CALL 0x00001650
000069f9(3): MOV RDI,RBX
000069fc(4): LEA RSI,[RAX + 0x1]
00006a00(1): POP RBX
00006a01(2): JMP 0x000069c0
00006a10(7): LEA RSI,[0x88cf]
00006a17(4): SUB RSP,0x8
00006a1b(5): MOV EDX,0x5
00006a20(2): XOR EDI,EDI
00006a22(5): CALL 0x00001630
00006a27(6): MOV EDI,dword ptr [0x0020b018]
00006a2d(7): LEA RDX,[0x8044]
00006a34(3): MOV RCX,RAX
00006a37(2): XOR ESI,ESI
00006a39(2): XOR EAX,EAX
00006a3b(5): CALL 0x00001810
00006a40(5): CALL 0x000015a0
00006a45(10): NOP word ptr CS:[RAX + RAX*0x1]
00006a4f(1): NOP
00006a50(2): PUSH R15
00006a52(2): PUSH R14
00006a54(3): MOV R15,RCX
00006a57(2): PUSH R13
00006a59(2): PUSH R12
00006a5b(3): MOV R14,RDX
00006a5e(1): PUSH RBP
00006a5f(1): PUSH RBX
00006a60(2): MOV EDX,ESI
00006a62(2): XOR ESI,ESI
00006a64(3): MOV R12,RDI
00006a67(3): MOV R13,R9
00006a6a(4): SUB RSP,0x18
00006a6e(3): MOV RCX,RSP
00006a71(4): MOV EBX,dword ptr [RSP + 0x50]
00006a75(9): MOV RAX,qword ptr FS:[0x28]
00006a7e(5): MOV qword ptr [RSP + 0x8],RAX
00006a83(2): XOR EAX,EAX
00006a85(5): CALL 0x00006b80
00006a8a(2): TEST EAX,EAX
00006a8c(6): JNZ 0x00006b20
00006a92(4): MOV RBP,qword ptr [RSP]
00006a96(3): CMP RBP,R14
00006a99(2): JC 0x00006aa0
00006a9b(3): CMP RBP,R15
00006a9e(2): JBE 0x00006af4
00006aa0(5): CALL 0x000015b0
00006aa5(7): CMP RBP,0x40000000
00006aac(3): MOV R14,RAX
00006aaf(2): SBB EAX,EAX
00006ab1(3): AND EAX,0xffffffd7
00006ab4(3): ADD EAX,0x4b
00006ab7(3): MOV dword ptr [R14],EAX
00006aba(3): MOV RDI,R12
00006abd(5): CALL 0x00006180
00006ac2(3): MOV ESI,dword ptr [R14]
00006ac5(3): MOV R8,RAX
00006ac8(5): MOV EAX,0x0
00006acd(7): LEA RDX,[0x8040]
00006ad4(3): MOV RCX,R13
00006ad7(3): CMP ESI,0x16
00006ada(3): CMOVZ ESI,EAX
00006add(2): TEST EBX,EBX
00006adf(5): MOV EAX,0x1
00006ae4(3): CMOVZ EBX,EAX
00006ae7(2): XOR EAX,EAX
00006ae9(2): MOV EDI,EBX
00006aeb(5): CALL 0x00001810
00006af0(4): MOV RBP,qword ptr [RSP]
00006af4(5): MOV RDX,qword ptr [RSP + 0x8]
00006af9(9): XOR RDX,qword ptr FS:[0x28]
00006b02(3): MOV RAX,RBP
00006b05(2): JNZ 0x00006b4b
00006b07(4): ADD RSP,0x18
00006b0b(1): POP RBX
00006b0c(1): POP RBP
00006b0d(2): POP R12
00006b0f(2): POP R13
00006b11(2): POP R14
00006b13(2): POP R15
00006b15(1): RET
00006b20(2): MOV EBP,EAX
00006b22(5): CALL 0x000015b0
00006b27(3): CMP EBP,0x1
00006b2a(3): MOV R14,RAX
00006b2d(2): JZ 0x00006b40
00006b2f(3): CMP EBP,0x3
00006b32(2): JNZ 0x00006aba
00006b34(6): MOV dword ptr [RAX],0x0
00006b3a(5): JMP 0x00006aba
00006b40(6): MOV dword ptr [RAX],0x4b
00006b46(5): JMP 0x00006aba
00006b4b(5): CALL 0x00001660
00006b50(4): SUB RSP,0x10
00006b54(2): PUSH R9
00006b56(3): MOV R9,R8
00006b59(3): MOV R8,RCX
00006b5c(3): MOV RCX,RDX
00006b5f(3): MOV RDX,RSI
00006b62(5): MOV ESI,0xa
00006b67(5): CALL 0x00006a50
00006b6c(4): ADD RSP,0x18
00006b70(1): RET
00006b80(2): PUSH R15
00006b82(2): PUSH R14
00006b84(2): PUSH R13
00006b86(2): PUSH R12
00006b88(1): PUSH RBP
00006b89(1): PUSH RBX
00006b8a(4): SUB RSP,0x28
00006b8e(9): MOV RAX,qword ptr FS:[0x28]
00006b97(5): MOV qword ptr [RSP + 0x18],RAX
00006b9c(2): XOR EAX,EAX
00006b9e(3): CMP EDX,0x24
00006ba1(6): JA 0x00006f05
00006ba7(5): LEA RAX,[RSP + 0x10]
00006bac(3): MOV R15,RSI
00006baf(3): TEST RSI,RSI
00006bb2(3): MOV RBP,RDI
00006bb5(4): MOV dword ptr [RSP + 0x8],EDX
00006bb9(3): MOV R14,RCX
00006bbc(3): MOV R13,R8
00006bbf(4): CMOVZ R15,RAX
00006bc3(5): CALL 0x000015b0
00006bc8(6): MOV dword ptr [RAX],0x0
00006bce(3): MOV R12,RAX
00006bd1(4): MOVZX EBX,byte ptr [RBP]
00006bd5(5): CALL 0x000018a0
00006bda(4): MOV EDX,dword ptr [RSP + 0x8]
00006bde(3): MOV RSI,qword ptr [RAX]
00006be1(3): MOV RAX,RBP
00006be4(2): JMP 0x00006bf7
00006bf0(4): ADD RAX,0x1
00006bf4(3): MOVZX EBX,byte ptr [RAX]
00006bf7(3): MOVZX ECX,BL
00006bfa(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x20
00006bff(2): JNZ 0x00006bf0
00006c01(3): CMP BL,0x2d
00006c04(2): JZ 0x00006c58
00006c06(2): XOR ECX,ECX
00006c08(3): MOV RSI,R15
00006c0b(3): MOV RDI,RBP
00006c0e(5): CALL 0x000016e0
00006c13(3): MOV RCX,qword ptr [R15]
00006c16(3): MOV RBX,RAX
00006c19(3): CMP RCX,RBP
00006c1c(2): JZ 0x00006c48
00006c1e(4): MOV EAX,dword ptr [R12]
00006c22(2): TEST EAX,EAX
00006c24(2): JZ 0x00006c88
00006c26(3): CMP EAX,0x22
00006c29(5): MOV EBP,0x1
00006c2e(2): JNZ 0x00006c58
00006c30(3): TEST R13,R13
00006c33(2): JZ 0x00006c3e
00006c35(4): MOVZX R12D,byte ptr [RCX]
00006c39(3): TEST R12B,R12B
00006c3c(2): JNZ 0x00006cb7
00006c3e(3): MOV qword ptr [R14],RBX
00006c41(2): JMP 0x00006c5d
00006c48(3): TEST R13,R13
00006c4b(5): MOV qword ptr [RSP + 0x8],RCX
00006c50(2): JNZ 0x00006c90
00006c52(6): NOP word ptr [RAX + RAX*0x1]
00006c58(5): MOV EBP,0x4
00006c5d(5): MOV RDI,qword ptr [RSP + 0x18]
00006c62(9): XOR RDI,qword ptr FS:[0x28]
00006c6b(2): MOV EAX,EBP
00006c6d(6): JNZ 0x00006f00
00006c73(4): ADD RSP,0x28
00006c77(1): POP RBX
00006c78(1): POP RBP
00006c79(2): POP R12
00006c7b(2): POP R13
00006c7d(2): POP R14
00006c7f(2): POP R15
00006c81(1): RET
00006c88(2): XOR EBP,EBP
00006c8a(2): JMP 0x00006c30
00006c90(5): MOVZX R12D,byte ptr [RBP]
00006c95(3): TEST R12B,R12B
00006c98(2): JZ 0x00006c58
00006c9a(4): MOVSX ESI,R12B
00006c9e(3): MOV RDI,R13
00006ca1(2): XOR EBP,EBP
00006ca3(5): CALL 0x00001690
00006ca8(3): TEST RAX,RAX
00006cab(5): MOV EBX,0x1
00006cb0(5): MOV RCX,qword ptr [RSP + 0x8]
00006cb5(2): JZ 0x00006c58
00006cb7(4): MOVSX ESI,R12B
00006cbb(3): MOV RDI,R13
00006cbe(5): MOV qword ptr [RSP + 0x8],RCX
00006cc3(5): CALL 0x00001690
00006cc8(3): TEST RAX,RAX
00006ccb(5): MOV RCX,qword ptr [RSP + 0x8]
00006cd0(6): JZ 0x00006d9c
00006cd6(5): LEA EAX,[R12 + -0x45]
00006cdb(2): CMP AL,0x2f
00006cdd(2): JA 0x00006d30
00006cdf(10): MOV RDX,0x814400308945
00006ce9(4): BT RDX,RAX
00006ced(2): JNC 0x00006d30
00006cef(5): MOV ESI,0x30
00006cf4(3): MOV RDI,R13
00006cf7(5): MOV qword ptr [RSP + 0x8],RCX
00006cfc(5): CALL 0x00001690
00006d01(3): TEST RAX,RAX
00006d04(5): MOV RCX,qword ptr [RSP + 0x8]
00006d09(2): JZ 0x00006d30
00006d0b(4): MOVZX EAX,byte ptr [RCX + 0x1]
00006d0f(2): CMP AL,0x44
00006d11(2): JZ 0x00006d1f
00006d13(2): CMP AL,0x69
00006d15(6): JZ 0x00006ee8
00006d1b(2): CMP AL,0x42
00006d1d(2): JNZ 0x00006d30
00006d1f(5): MOV EDI,0x2
00006d24(5): MOV ESI,0x3e8
00006d29(2): JMP 0x00006d3a
00006d30(5): MOV EDI,0x1
00006d35(5): MOV ESI,0x400
00006d3a(4): SUB R12D,0x42
00006d3e(4): CMP R12B,0x35
00006d42(2): JA 0x00006d9c
00006d44(7): LEA RDX,[0x8928]
00006d4b(4): MOVZX R12D,R12B
00006d4f(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
00006d53(3): ADD RAX,RDX
00006d56(2): JMP RAX
00006d58(3): MOV RAX,RBX
00006d5b(3): MUL RSI
00006d5e(6): JO 0x00006f51
00006d64(3): XOR R8D,R8D
00006d67(3): MUL RSI
00006d6a(6): JO 0x00006f42
00006d70(3): MOV RBX,RAX
00006d73(3): OR EBP,R8D
00006d76(10): NOP word ptr CS:[RAX + RAX*0x1]
00006d80(3): MOVSXD RDI,EDI
00006d83(2): MOV EAX,EBP
00006d85(3): ADD RCX,RDI
00006d88(3): OR EAX,0x2
00006d8b(3): MOV qword ptr [R15],RCX
00006d8e(3): CMP byte ptr [RCX],0x0
00006d91(3): MOV qword ptr [R14],RBX
00006d94(3): CMOVNZ EBP,EAX
00006d97(5): JMP 0x00006c5d
00006d9c(3): MOV qword ptr [R14],RBX
00006d9f(3): OR EBP,0x2
00006da2(5): JMP 0x00006c5d
00006da7(5): MOV EDX,0x2
00006dac(3): MOV RAX,RDX
00006daf(3): MUL RBX
00006db2(6): JO 0x00006e4e
00006db8(3): ADD RBX,RBX
00006dbb(2): JMP 0x00006d80
00006dbd(5): MOV EDX,0x200
00006dc2(3): MOV RAX,RDX
00006dc5(3): MUL RBX
00006dc8(6): JO 0x00006e4e
00006dce(4): SHL RBX,0x9
00006dd2(2): JMP 0x00006d80
00006dd4(6): MOV R8D,0x7
00006dda(3): XOR R9D,R9D
00006ddd(3): NOP dword ptr [RAX]
00006de0(3): MOV RAX,RBX
00006de3(3): MUL RSI
00006de6(3): MOV RBX,RAX
00006de9(6): JO 0x00006f7e
00006def(4): SUB R8D,0x1
00006df3(2): JNZ 0x00006de0
00006df5(3): OR EBP,R9D
00006df8(2): JMP 0x00006d80
00006dfa(6): MOV R8D,0x8
00006e00(3): XOR R9D,R9D
00006e03(5): NOP dword ptr [RAX + RAX*0x1]
00006e08(3): MOV RAX,RBX
00006e0b(3): MUL RSI
00006e0e(3): MOV RBX,RAX
00006e11(6): JO 0x00006f60
00006e17(4): SUB R8D,0x1
00006e1b(2): JNZ 0x00006e08
00006e1d(2): JMP 0x00006df5
00006e1f(6): MOV R8D,0x4
00006e25(3): XOR R9D,R9D
00006e28(3): MOV RAX,RBX
00006e2b(3): MUL RSI
00006e2e(3): MOV RBX,RAX
00006e31(6): JO 0x00006f33
00006e37(4): SUB R8D,0x1
00006e3b(2): JNZ 0x00006e28
00006e3d(2): JMP 0x00006df5
00006e3f(3): MOV RAX,RBX
00006e42(3): MUL RSI
00006e45(3): MOV RBX,RAX
00006e48(6): JNO 0x00006d80
00006e4e(5): MOV EBP,0x1
00006e53(4): OR RBX,-0x1
00006e57(5): JMP 0x00006d80
00006e60(6): MOV R8D,0x5
00006e66(3): XOR R9D,R9D
00006e69(3): MOV RAX,RBX
00006e6c(3): MUL RSI
00006e6f(3): MOV RBX,RAX
00006e72(6): JO 0x00006f6f
00006e78(4): SUB R8D,0x1
00006e7c(2): JNZ 0x00006e69
00006e7e(5): JMP 0x00006df5
00006e83(6): MOV R8D,0x6
00006e89(3): XOR R9D,R9D
00006e8c(3): MOV RAX,RBX
00006e8f(3): MUL RSI
00006e92(3): MOV RBX,RAX
00006e95(6): JO 0x00006f24
00006e9b(4): SUB R8D,0x1
00006e9f(2): JNZ 0x00006e8c
00006ea1(5): JMP 0x00006df5
00006ea6(5): MOV EDX,0x400
00006eab(3): MOV RAX,RDX
00006eae(3): MUL RBX
00006eb1(2): JO 0x00006e4e
00006eb3(4): SHL RBX,0xa
00006eb7(5): JMP 0x00006d80
00006ebc(3): MOV RAX,RBX
00006ebf(3): MUL RSI
00006ec2(6): JO 0x00006f8d
00006ec8(3): XOR R8D,R8D
00006ecb(3): MUL RSI
00006ece(6): JNO 0x00006d67
00006ed4(6): MOV R8D,0x1
00006eda(4): OR RAX,-0x1
00006ede(5): JMP 0x00006d67
00006ee8(2): XOR EDI,EDI
00006eea(4): CMP byte ptr [RCX + 0x2],0x42
00006eee(5): MOV ESI,0x400
00006ef3(4): SETZ DIL
00006ef7(4): LEA EDI,[RDI + RDI*0x1 + 0x1]
00006efb(5): JMP 0x00006d3a
00006f00(5): CALL 0x00001660
00006f05(7): LEA RCX,[0x8a00]
00006f0c(7): LEA RSI,[0x88e0]
00006f13(7): LEA RDI,[0x8900]
00006f1a(5): MOV EDX,0x54
00006f1f(5): CALL 0x000016d0
00006f24(6): MOV R9D,0x1
00006f2a(4): OR RBX,-0x1
00006f2e(5): JMP 0x00006e9b
00006f33(6): MOV R9D,0x1
00006f39(4): OR RBX,-0x1
00006f3d(5): JMP 0x00006e37
00006f42(6): MOV R8D,0x1
00006f48(4): OR RBX,-0x1
00006f4c(5): JMP 0x00006d73
00006f51(4): OR RAX,-0x1
00006f55(6): MOV R8D,0x1
00006f5b(5): JMP 0x00006d67
00006f60(6): MOV R9D,0x1
00006f66(4): OR RBX,-0x1
00006f6a(5): JMP 0x00006e17
00006f6f(6): MOV R9D,0x1
00006f75(4): OR RBX,-0x1
00006f79(5): JMP 0x00006e78
00006f7e(6): MOV R9D,0x1
00006f84(4): OR RBX,-0x1
00006f88(5): JMP 0x00006def
00006f8d(6): MOV R8D,0x1
00006f93(4): OR RAX,-0x1
00006f97(5): JMP 0x00006ecb
00006fa0(2): PUSH R12
00006fa2(1): PUSH RBP
00006fa3(1): PUSH RBX
00006fa4(3): MOV RBX,RDI
00006fa7(5): CALL 0x00001770
00006fac(2): TEST EAX,EAX
00006fae(3): MOV RDI,RBX
00006fb1(2): JS 0x00007007
00006fb3(5): CALL 0x000017b0
00006fb8(2): TEST EAX,EAX
00006fba(2): JNZ 0x00006fe8
00006fbc(3): MOV RDI,RBX
00006fbf(5): CALL 0x00007020
00006fc4(2): TEST EAX,EAX
00006fc6(2): JZ 0x00007004
00006fc8(5): CALL 0x000015b0
00006fcd(3): MOV R12D,dword ptr [RAX]
00006fd0(3): MOV RDI,RBX
00006fd3(3): MOV RBP,RAX
00006fd6(5): CALL 0x00001610
00006fdb(3): TEST R12D,R12D
00006fde(2): JNZ 0x00007010
00006fe0(1): POP RBX
00006fe1(1): POP RBP
00006fe2(2): POP R12
00006fe4(1): RET
00006fe8(3): MOV RDI,RBX
00006feb(5): CALL 0x00001770
00006ff0(2): XOR ESI,ESI
00006ff2(5): MOV EDX,0x1
00006ff7(2): MOV EDI,EAX
00006ff9(5): CALL 0x000016c0
00006ffe(4): CMP RAX,-0x1
00007002(2): JNZ 0x00006fbc
00007004(3): MOV RDI,RBX
00007007(1): POP RBX
00007008(1): POP RBP
00007009(2): POP R12
0000700b(5): JMP 0x00001610
00007010(4): MOV dword ptr [RBP],R12D
00007014(5): MOV EAX,0xffffffff
00007019(2): JMP 0x00006fe0
00007020(3): TEST RDI,RDI
00007023(1): PUSH RBX
00007024(3): MOV RBX,RDI
00007027(2): JZ 0x0000703a
00007029(5): CALL 0x000017b0
0000702e(2): TEST EAX,EAX
00007030(2): JZ 0x0000703a
00007032(6): TEST dword ptr [RBX],0x100
00007038(2): JNZ 0x00007048
0000703a(3): MOV RDI,RBX
0000703d(1): POP RBX
0000703e(5): JMP 0x00001790
00007048(3): MOV RDI,RBX
0000704b(5): MOV EDX,0x1
00007050(2): XOR ESI,ESI
00007052(5): CALL 0x00007060
00007057(3): MOV RDI,RBX
0000705a(1): POP RBX
0000705b(5): JMP 0x00001790
00007060(4): MOV RAX,qword ptr [RDI + 0x8]
00007064(4): CMP qword ptr [RDI + 0x10],RAX
00007068(2): JZ 0x00007070
0000706a(5): JMP 0x00001820
00007070(4): MOV RAX,qword ptr [RDI + 0x20]
00007074(4): CMP qword ptr [RDI + 0x28],RAX
00007078(2): JNZ 0x0000706a
0000707a(5): CMP qword ptr [RDI + 0x48],0x0
0000707f(2): JNZ 0x0000706a
00007081(2): PUSH R12
00007083(1): PUSH RBP
00007084(3): MOV R12D,EDX
00007087(1): PUSH RBX
00007088(3): MOV RBP,RSI
0000708b(3): MOV RBX,RDI
0000708e(5): CALL 0x00001770
00007093(3): MOV EDX,R12D
00007096(3): MOV RSI,RBP
00007099(2): MOV EDI,EAX
0000709b(5): CALL 0x000016c0
000070a0(4): CMP RAX,-0x1
000070a4(2): JZ 0x000070b2
000070a6(3): AND dword ptr [RBX],0xffffffef
000070a9(7): MOV qword ptr [0x90 + RBX],RAX
000070b0(2): XOR EAX,EAX
000070b2(1): POP RBX
000070b3(1): POP RBP
000070b4(2): POP R12
000070b6(1): RET
000070c0(2): PUSH R13
000070c2(2): PUSH R12
000070c4(3): MOV R13,RSI
000070c7(1): PUSH RBP
000070c8(1): PUSH RBX
000070c9(3): MOV RBX,RDI
000070cc(3): MOV R12,RDX
000070cf(4): SUB RSP,0x18
000070d3(9): MOV RAX,qword ptr FS:[0x28]
000070dc(5): MOV qword ptr [RSP + 0x8],RAX
000070e1(2): XOR EAX,EAX
000070e3(5): LEA RAX,[RSP + 0x4]
000070e8(3): TEST RDI,RDI
000070eb(4): CMOVZ RBX,RAX
000070ef(3): MOV RDI,RBX
000070f2(5): CALL 0x00001680
000070f7(4): CMP RAX,-0x3
000070fb(3): MOV RBP,RAX
000070fe(2): JBE 0x00007120
00007100(3): TEST R12,R12
00007103(2): JZ 0x00007120
00007105(2): XOR EDI,EDI
00007107(5): CALL 0x000071d0
0000710c(2): TEST AL,AL
0000710e(2): JNZ 0x00007120
00007110(5): MOVZX EAX,byte ptr [R13]
00007115(5): MOV EBP,0x1
0000711a(2): MOV dword ptr [RBX],EAX
0000711c(4): NOP dword ptr [RAX]
00007120(5): MOV RDX,qword ptr [RSP + 0x8]
00007125(9): XOR RDX,qword ptr FS:[0x28]
0000712e(3): MOV RAX,RBP
00007131(2): JNZ 0x0000713e
00007133(4): ADD RSP,0x18
00007137(1): POP RBX
00007138(1): POP RBP
00007139(2): POP R12
0000713b(2): POP R13
0000713d(1): RET
0000713e(5): CALL 0x00001660
00007143(10): NOP word ptr CS:[RAX + RAX*0x1]
0000714d(3): NOP dword ptr [RAX]
00007150(2): PUSH R12
00007152(1): PUSH RBP
00007153(3): MOV RBP,RDI
00007156(1): PUSH RBX
00007157(5): CALL 0x000015e0
0000715c(3): MOV EBX,dword ptr [RBP]
0000715f(3): MOV RDI,RBP
00007162(3): MOV R12,RAX
00007165(5): CALL 0x00006fa0
0000716a(3): AND EBX,0x20
0000716d(2): TEST EBX,EBX
0000716f(2): JNZ 0x00007188
00007171(2): TEST EAX,EAX
00007173(2): JZ 0x0000717f
00007175(3): TEST R12,R12
00007178(5): MOV EAX,0xffffffff
0000717d(2): JZ 0x000071b8
0000717f(1): POP RBX
00007180(1): POP RBP
00007181(2): POP R12
00007183(1): RET
00007188(2): TEST EAX,EAX
0000718a(2): JNZ 0x000071a8
0000718c(5): CALL 0x000015b0
00007191(6): MOV dword ptr [RAX],0x0
00007197(5): MOV EAX,0xffffffff
0000719c(1): POP RBX
0000719d(1): POP RBP
0000719e(2): POP R12
000071a0(1): RET
000071a8(1): POP RBX
000071a9(5): MOV EAX,0xffffffff
000071ae(1): POP RBP
000071af(2): POP R12
000071b1(1): RET
000071b8(5): CALL 0x000015b0
000071bd(3): CMP dword ptr [RAX],0x9
000071c0(1): POP RBX
000071c1(1): POP RBP
000071c2(2): POP R12
000071c4(3): SETNZ AL
000071c7(3): MOVZX EAX,AL
000071ca(2): NEG EAX
000071cc(1): RET
000071d0(4): SUB RSP,0x8
000071d4(2): XOR ESI,ESI
000071d6(5): CALL 0x000017e0
000071db(3): MOV RDX,RAX
000071de(5): MOV EAX,0x1
000071e3(3): TEST RDX,RDX
000071e6(2): JZ 0x00007205
000071e8(7): LEA RDI,[0x8a0b]
000071ef(5): MOV ECX,0x2
000071f4(3): MOV RSI,RDX
000071f7(2): CMPSB.REPE RDI,RSI
000071f9(3): SETA CL
000071fc(3): SBB CL,0x0
000071ff(2): XOR EAX,EAX
00007201(2): TEST CL,CL
00007203(2): JNZ 0x00007210
00007205(4): ADD RSP,0x8
00007209(1): RET
00007210(7): LEA RDI,[0x8a0d]
00007217(5): MOV ECX,0x6
0000721c(3): MOV RSI,RDX
0000721f(2): CMPSB.REPE RDI,RSI
00007221(3): SETA AL
00007224(2): SBB AL,0x0
00007226(2): TEST AL,AL
00007228(3): SETNZ AL
0000722b(4): ADD RSP,0x8
0000722f(1): RET
00007230(4): SUB RSP,0x8
00007234(5): MOV EDI,0xe
00007239(5): CALL 0x000017a0
0000723e(3): TEST RAX,RAX
00007241(2): JZ 0x00007260
00007243(3): CMP byte ptr [RAX],0x0
00007246(7): LEA RDX,[0x8a13]
0000724d(4): CMOVZ RAX,RDX
00007251(4): ADD RSP,0x8
00007255(1): RET
00007260(7): LEA RAX,[0x8a13]
00007267(4): ADD RSP,0x8
0000726b(1): RET
00007270(2): PUSH R15
00007272(2): PUSH R14
00007274(3): MOV R15,RDX
00007277(2): PUSH R13
00007279(2): PUSH R12
0000727b(7): LEA R12,[0x20aa10]
00007282(1): PUSH RBP
00007283(7): LEA RBP,[0x20aa18]
0000728a(1): PUSH RBX
0000728b(3): MOV R13D,EDI
0000728e(3): MOV R14,RSI
00007291(3): SUB RBP,R12
00007294(4): SUB RSP,0x8
00007298(4): SAR RBP,0x3
0000729c(5): CALL 0x00001568
000072a1(3): TEST RBP,RBP
000072a4(2): JZ 0x000072c6
000072a6(2): XOR EBX,EBX
000072a8(8): NOP dword ptr [RAX + RAX*0x1]
000072b0(3): MOV RDX,R15
000072b3(3): MOV RSI,R14
000072b6(3): MOV EDI,R13D
000072b9(4): CALL qword ptr [R12 + RBX*0x8]
000072bd(4): ADD RBX,0x1
000072c1(3): CMP RBP,RBX
000072c4(2): JNZ 0x000072b0
000072c6(4): ADD RSP,0x8
000072ca(1): POP RBX
000072cb(1): POP RBP
000072cc(2): POP R12
000072ce(2): POP R13
000072d0(2): POP R14
000072d2(2): POP R15
000072d4(1): RET
000072e0(2): RET
000072f0(7): MOV RDX,qword ptr [0x0020b008]
000072f7(2): XOR ESI,ESI
000072f9(5): JMP 0x00001840
00007300(4): SUB RSP,0x8
00007304(4): ADD RSP,0x8
00007308(1): RET

