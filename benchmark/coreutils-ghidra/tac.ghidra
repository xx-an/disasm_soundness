00001838(4): SUB RSP,0x8
0000183c(7): MOV RAX,qword ptr [0x00218fe0]
00001843(3): TEST RAX,RAX
00001846(2): JZ 0x0000184a
00001848(2): CALL RAX
0000184a(4): ADD RSP,0x8
0000184e(1): RET
00001850(6): PUSH qword ptr [0x00218db0]
00001856(6): JMP qword ptr [0x00218db8]
00001860(6): JMP qword ptr [0x00218dc0]
00001866(5): PUSH 0x0
0000186b(5): JMP 0x00001850
00001870(6): JMP qword ptr [0x00218dc8]
00001876(5): PUSH 0x1
0000187b(5): JMP 0x00001850
00001880(6): JMP qword ptr [0x00218dd0]
00001886(5): PUSH 0x2
0000188b(5): JMP 0x00001850
00001890(6): JMP qword ptr [0x00218dd8]
00001896(5): PUSH 0x3
0000189b(5): JMP 0x00001850
000018a0(6): JMP qword ptr [0x00218de0]
000018a6(5): PUSH 0x4
000018ab(5): JMP 0x00001850
000018b0(6): JMP qword ptr [0x00218de8]
000018b6(5): PUSH 0x5
000018bb(5): JMP 0x00001850
000018c0(6): JMP qword ptr [0x00218df0]
000018c6(5): PUSH 0x6
000018cb(5): JMP 0x00001850
000018d0(6): JMP qword ptr [0x00218df8]
000018d6(5): PUSH 0x7
000018db(5): JMP 0x00001850
000018e0(6): JMP qword ptr [0x00218e00]
000018e6(5): PUSH 0x8
000018eb(5): JMP 0x00001850
000018f0(6): JMP qword ptr [0x00218e08]
000018f6(5): PUSH 0x9
000018fb(5): JMP 0x00001850
00001900(6): JMP qword ptr [0x00218e10]
00001906(5): PUSH 0xa
0000190b(5): JMP 0x00001850
00001910(6): JMP qword ptr [0x00218e18]
00001916(5): PUSH 0xb
0000191b(5): JMP 0x00001850
00001920(6): JMP qword ptr [0x00218e20]
00001926(5): PUSH 0xc
0000192b(5): JMP 0x00001850
00001930(6): JMP qword ptr [0x00218e28]
00001936(5): PUSH 0xd
0000193b(5): JMP 0x00001850
00001940(6): JMP qword ptr [0x00218e30]
00001946(5): PUSH 0xe
0000194b(5): JMP 0x00001850
00001950(6): JMP qword ptr [0x00218e38]
00001956(5): PUSH 0xf
0000195b(5): JMP 0x00001850
00001960(6): JMP qword ptr [0x00218e40]
00001966(5): PUSH 0x10
0000196b(5): JMP 0x00001850
00001970(6): JMP qword ptr [0x00218e48]
00001976(5): PUSH 0x11
0000197b(5): JMP 0x00001850
00001980(6): JMP qword ptr [0x00218e50]
00001986(5): PUSH 0x12
0000198b(5): JMP 0x00001850
00001990(6): JMP qword ptr [0x00218e58]
00001996(5): PUSH 0x13
0000199b(5): JMP 0x00001850
000019a0(6): JMP qword ptr [0x00218e60]
000019a6(5): PUSH 0x14
000019ab(5): JMP 0x00001850
000019b0(6): JMP qword ptr [0x00218e68]
000019b6(5): PUSH 0x15
000019bb(5): JMP 0x00001850
000019c0(6): JMP qword ptr [0x00218e70]
000019c6(5): PUSH 0x16
000019cb(5): JMP 0x00001850
000019d0(6): JMP qword ptr [0x00218e78]
000019d6(5): PUSH 0x17
000019db(5): JMP 0x00001850
000019e0(6): JMP qword ptr [0x00218e80]
000019e6(5): PUSH 0x18
000019eb(5): JMP 0x00001850
000019f0(6): JMP qword ptr [0x00218e88]
000019f6(5): PUSH 0x19
000019fb(5): JMP 0x00001850
00001a00(6): JMP qword ptr [0x00218e90]
00001a06(5): PUSH 0x1a
00001a0b(5): JMP 0x00001850
00001a10(6): JMP qword ptr [0x00218e98]
00001a16(5): PUSH 0x1b
00001a1b(5): JMP 0x00001850
00001a20(6): JMP qword ptr [0x00218ea0]
00001a26(5): PUSH 0x1c
00001a2b(5): JMP 0x00001850
00001a30(6): JMP qword ptr [0x00218ea8]
00001a36(5): PUSH 0x1d
00001a3b(5): JMP 0x00001850
00001a40(6): JMP qword ptr [0x00218eb0]
00001a46(5): PUSH 0x1e
00001a4b(5): JMP 0x00001850
00001a50(6): JMP qword ptr [0x00218eb8]
00001a56(5): PUSH 0x1f
00001a5b(5): JMP 0x00001850
00001a60(6): JMP qword ptr [0x00218ec0]
00001a66(5): PUSH 0x20
00001a6b(5): JMP 0x00001850
00001a70(6): JMP qword ptr [0x00218ec8]
00001a76(5): PUSH 0x21
00001a7b(5): JMP 0x00001850
00001a80(6): JMP qword ptr [0x00218ed0]
00001a86(5): PUSH 0x22
00001a8b(5): JMP 0x00001850
00001a90(6): JMP qword ptr [0x00218ed8]
00001a96(5): PUSH 0x23
00001a9b(5): JMP 0x00001850
00001aa0(6): JMP qword ptr [0x00218ee0]
00001aa6(5): PUSH 0x24
00001aab(5): JMP 0x00001850
00001ab0(6): JMP qword ptr [0x00218ee8]
00001ab6(5): PUSH 0x25
00001abb(5): JMP 0x00001850
00001ac0(6): JMP qword ptr [0x00218ef0]
00001ac6(5): PUSH 0x26
00001acb(5): JMP 0x00001850
00001ad0(6): JMP qword ptr [0x00218ef8]
00001ad6(5): PUSH 0x27
00001adb(5): JMP 0x00001850
00001ae0(6): JMP qword ptr [0x00218f00]
00001ae6(5): PUSH 0x28
00001aeb(5): JMP 0x00001850
00001af0(6): JMP qword ptr [0x00218f08]
00001af6(5): PUSH 0x29
00001afb(5): JMP 0x00001850
00001b00(6): JMP qword ptr [0x00218f10]
00001b06(5): PUSH 0x2a
00001b0b(5): JMP 0x00001850
00001b10(6): JMP qword ptr [0x00218f18]
00001b16(5): PUSH 0x2b
00001b1b(5): JMP 0x00001850
00001b20(6): JMP qword ptr [0x00218f20]
00001b26(5): PUSH 0x2c
00001b2b(5): JMP 0x00001850
00001b30(6): JMP qword ptr [0x00218f28]
00001b36(5): PUSH 0x2d
00001b3b(5): JMP 0x00001850
00001b40(6): JMP qword ptr [0x00218f30]
00001b46(5): PUSH 0x2e
00001b4b(5): JMP 0x00001850
00001b50(6): JMP qword ptr [0x00218f38]
00001b56(5): PUSH 0x2f
00001b5b(5): JMP 0x00001850
00001b60(6): JMP qword ptr [0x00218f40]
00001b66(5): PUSH 0x30
00001b6b(5): JMP 0x00001850
00001b70(6): JMP qword ptr [0x00218f48]
00001b76(5): PUSH 0x31
00001b7b(5): JMP 0x00001850
00001b80(6): JMP qword ptr [0x00218f50]
00001b86(5): PUSH 0x32
00001b8b(5): JMP 0x00001850
00001b90(6): JMP qword ptr [0x00218f58]
00001b96(5): PUSH 0x33
00001b9b(5): JMP 0x00001850
00001ba0(6): JMP qword ptr [0x00218f60]
00001ba6(5): PUSH 0x34
00001bab(5): JMP 0x00001850
00001bb0(6): JMP qword ptr [0x00218f68]
00001bb6(5): PUSH 0x35
00001bbb(5): JMP 0x00001850
00001bc0(6): JMP qword ptr [0x00218f70]
00001bc6(5): PUSH 0x36
00001bcb(5): JMP 0x00001850
00001bd0(6): JMP qword ptr [0x00218f78]
00001bd6(5): PUSH 0x37
00001bdb(5): JMP 0x00001850
00001be0(6): JMP qword ptr [0x00218f80]
00001be6(5): PUSH 0x38
00001beb(5): JMP 0x00001850
00001bf0(6): JMP qword ptr [0x00218f88]
00001bf6(5): PUSH 0x39
00001bfb(5): JMP 0x00001850
00001c00(6): JMP qword ptr [0x00218f90]
00001c06(5): PUSH 0x3a
00001c0b(5): JMP 0x00001850
00001c10(6): JMP qword ptr [0x00218f98]
00001c16(5): PUSH 0x3b
00001c1b(5): JMP 0x00001850
00001c20(6): JMP qword ptr [0x00218fa0]
00001c26(5): PUSH 0x3c
00001c2b(5): JMP 0x00001850
00001c30(6): JMP qword ptr [0x00218fa8]
00001c36(5): PUSH 0x3d
00001c3b(5): JMP 0x00001850
00001c40(6): JMP qword ptr [0x00218fb0]
00001c46(5): PUSH 0x3e
00001c4b(5): JMP 0x00001850
00001c50(6): JMP qword ptr [0x00218fb8]
00001c56(5): PUSH 0x3f
00001c5b(5): JMP 0x00001850
00001c60(6): JMP qword ptr [0x00218fc0]
00001c66(5): PUSH 0x40
00001c6b(5): JMP 0x00001850
00001c70(6): JMP qword ptr [0x00218fc8]
00001c76(5): PUSH 0x41
00001c7b(5): JMP 0x00001850
00001c80(6): JMP qword ptr [0x00218ff0]
00001c90(2): PUSH R15
00001c92(2): PUSH R14
00001c94(2): PUSH R13
00001c96(2): PUSH R12
00001c98(7): LEA R12,[0x218aa0]
00001c9f(1): PUSH RBP
00001ca0(1): PUSH RBX
00001ca1(2): MOV EBP,EDI
00001ca3(3): MOV RBX,RSI
00001ca6(4): SUB RSP,0x28
00001caa(3): MOV RDI,qword ptr [RSI]
00001cad(5): CALL 0x00003160
00001cb2(7): LEA RSI,[0x14c01]
00001cb9(5): MOV EDI,0x6
00001cbe(5): CALL 0x00001b50
00001cc3(7): LEA RSI,[0x14220]
00001cca(7): LEA RDI,[0x141f2]
00001cd1(5): CALL 0x00001950
00001cd6(7): LEA RDI,[0x141f2]
00001cdd(5): CALL 0x00001920
00001ce2(7): LEA RDI,[0x2fb0]
00001ce9(5): CALL 0x00014120
00001cee(7): LEA RAX,[0x14c00]
00001cf5(11): MOV qword ptr [0x0021b280],0x1
00001d00(7): MOV byte ptr [0x0021b288],0x1
00001d07(7): MOV qword ptr [0x0021b290],RAX
00001d0e(7): LEA RDX,[0x14254]
00001d15(3): XOR R8D,R8D
00001d18(3): MOV RCX,R12
00001d1b(3): MOV RSI,RBX
00001d1e(2): MOV EDI,EBP
00001d20(5): CALL 0x000019a0
00001d25(3): CMP EAX,-0x1
00001d28(6): JZ 0x00001dc8
00001d2e(3): CMP EAX,0x62
00001d31(2): JZ 0x00001da8
00001d33(2): JLE 0x00001d58
00001d35(3): CMP EAX,0x72
00001d38(2): JZ 0x00001db8
00001d3a(3): CMP EAX,0x73
00001d3d(6): JNZ 0x000023cb
00001d43(7): MOV RAX,qword ptr [0x00219098]
00001d4a(7): MOV qword ptr [0x0021b290],RAX
00001d51(2): JMP 0x00001d0e
00001d58(5): CMP EAX,0xffffff7d
00001d5d(6): JNZ 0x000023b1
00001d63(4): SUB RSP,0x8
00001d67(7): MOV RDI,qword ptr [0x00219088]
00001d6e(7): MOV RCX,qword ptr [0x00219010]
00001d75(2): PUSH 0x0
00001d77(7): LEA R9,[0x14238]
00001d7e(7): LEA R8,[0x14248]
00001d85(7): LEA RDX,[0x141ee]
00001d8c(7): LEA RSI,[0x14174]
00001d93(2): XOR EAX,EAX
00001d95(5): CALL 0x00005430
00001d9a(2): XOR EDI,EDI
00001d9c(5): CALL 0x00001c00
00001da8(7): MOV byte ptr [0x0021b288],0x0
00001daf(5): JMP 0x00001d0e
00001db8(11): MOV qword ptr [0x0021b280],0x0
00001dc3(5): JMP 0x00001d0e
00001dc8(8): CMP qword ptr [0x0021b280],0x0
00001dd0(7): MOV R8,qword ptr [0x0021b290]
00001dd7(4): MOVZX EDX,byte ptr [R8]
00001ddb(6): JNZ 0x00001f05
00001de1(2): TEST DL,DL
00001de3(6): JZ 0x000023d5
00001de9(7): LEA RAX,[0x21b120]
00001df0(3): MOV RDI,R8
00001df3(11): MOV qword ptr [0x0021b220],0x0
00001dfe(11): MOV qword ptr [0x0021b228],0x0
00001e09(11): MOV qword ptr [0x0021b248],0x0
00001e14(4): OR RCX,-0x1
00001e18(7): MOV qword ptr [0x0021b240],RAX
00001e1f(2): XOR EAX,EAX
00001e21(7): LEA RDX,[0x21b220]
00001e28(2): SCASB.REPNE RDI
00001e2a(3): MOV RDI,R8
00001e2d(3): MOV RAX,RCX
00001e30(3): NOT RAX
00001e33(4): LEA RSI,[RAX + -0x1]
00001e37(5): CALL 0x000130d0
00001e3c(3): TEST RAX,RAX
00001e3f(6): JNZ 0x000023f9
00001e45(7): MOV RSI,qword ptr [0x0021b280]
00001e4c(11): MOV qword ptr [0x0021b268],0x2000
00001e57(5): MOV EDX,0x32
00001e5c(5): MOV EAX,0x2000
00001e61(7): CMP RSI,0xfff
00001e68(2): JA 0x00001e79
00001e6a(2): JMP 0x00001e8e
00001e70(3): SUB EDX,0x1
00001e73(6): JZ 0x000023bf
00001e79(3): ADD RAX,RAX
00001e7c(3): MOV RCX,RAX
00001e7f(3): SHR RCX,1
00001e82(3): CMP RCX,RSI
00001e85(2): JBE 0x00001e70
00001e87(7): MOV qword ptr [0x0021b268],RAX
00001e8e(5): LEA RDX,[RAX + RSI*0x1 + 0x1]
00001e93(4): LEA RDI,[RDX + RDX*0x1]
00001e97(3): CMP RDX,RAX
00001e9a(3): SETBE CL
00001e9d(3): CMP RDI,RDX
00001ea0(7): MOV qword ptr [0x0021b260],RDI
00001ea7(3): SETBE AL
00001eaa(2): OR CL,AL
00001eac(6): JNZ 0x000023c6
00001eb2(5): CALL 0x00005590
00001eb7(7): MOV R12,qword ptr [0x0021b280]
00001ebe(3): MOV RCX,RAX
00001ec1(7): MOV qword ptr [0x0021b270],RAX
00001ec8(3): TEST R12,R12
00001ecb(6): JNZ 0x000022db
00001ed1(4): ADD RCX,0x1
00001ed5(7): MOV qword ptr [0x0021b270],RCX
00001edc(7): MOVSXD RAX,dword ptr [0x00219090]
00001ee3(2): CMP EAX,EBP
00001ee5(2): JGE 0x00001f36
00001ee7(4): LEA R15,[RBX + RAX*0x8]
00001eeb(3): MOV R14,qword ptr [R15]
00001eee(3): TEST R14,R14
00001ef1(6): JZ 0x000022d1
00001ef7(7): LEA RAX,[0x146ca]
00001efe(5): MOV qword ptr [RSP + 0x10],RAX
00001f03(2): JMP 0x00001f4c
00001f05(2): TEST DL,DL
00001f07(5): MOV EAX,0x1
00001f0c(2): JZ 0x00001f23
00001f0e(2): XOR EAX,EAX
00001f10(4): OR RCX,-0x1
00001f14(3): MOV RDI,R8
00001f17(2): SCASB.REPNE RDI
00001f19(3): MOV RAX,RCX
00001f1c(3): NOT RAX
00001f1f(4): SUB RAX,0x1
00001f23(7): MOV qword ptr [0x0021b280],RAX
00001f2a(7): MOV qword ptr [0x0021b278],RAX
00001f31(5): JMP 0x00001e45
00001f36(7): LEA RAX,[0x146ca]
00001f3d(7): LEA R15,[0x218a80]
00001f44(5): MOV qword ptr [RSP + 0x10],RAX
00001f49(3): MOV R14,RAX
00001f4c(4): LEA RAX,[R15 + 0x8]
00001f50(5): MOV byte ptr [RSP + 0xf],0x1
00001f55(4): MOV qword ptr [RSP],RAX
00001f59(7): NOP dword ptr [RAX]
00001f60(5): MOV RDI,qword ptr [RSP + 0x10]
00001f65(5): MOV ECX,0x2
00001f6a(3): MOV RSI,R14
00001f6d(2): CMPSB.REPE RDI,RSI
00001f6f(4): SETA R12B
00001f73(4): SBB R12B,0x0
00001f77(4): MOVSX R12D,R12B
00001f7b(3): TEST R12D,R12D
00001f7e(6): JNZ 0x00002146
00001f84(7): LEA RSI,[0x14273]
00001f8b(5): MOV EDX,0x5
00001f90(2): XOR EDI,EDI
00001f92(7): MOV byte ptr [0x0021b289],0x1
00001f99(2): XOR EBP,EBP
00001f9b(5): CALL 0x00001960
00001fa0(3): MOV R14,RAX
00001fa3(2): XOR ESI,ESI
00001fa5(5): MOV EDX,0x2
00001faa(2): MOV EDI,EBP
00001fac(5): CALL 0x000019f0
00001fb1(3): TEST RAX,RAX
00001fb4(3): MOV RBX,RAX
00001fb7(2): JS 0x00001fc8
00001fb9(2): MOV EDI,EBP
00001fbb(5): CALL 0x000018f0
00001fc0(2): TEST EAX,EAX
00001fc2(6): JZ 0x0000228d
00001fc8(8): CMP qword ptr [0x0021b0f0],0x0
00001fd0(6): JZ 0x00002216
00001fd6(7): MOV RBX,qword ptr [0x0021b0e8]
00001fdd(3): MOV RDI,RBX
00001fe0(5): CALL 0x00001910
00001fe5(2): XOR EDX,EDX
00001fe7(2): XOR ESI,ESI
00001fe9(3): MOV RDI,RBX
00001fec(5): CALL 0x00005820
00001ff1(2): TEST EAX,EAX
00001ff3(6): JS 0x000020ff
00001ff9(7): MOV RDI,qword ptr [0x0021b0e8]
00002000(5): CALL 0x00001aa0
00002005(2): XOR ESI,ESI
00002007(2): MOV EDI,EAX
00002009(5): CALL 0x000019d0
0000200e(2): TEST EAX,EAX
00002010(6): JS 0x000020ff
00002016(7): MOV RAX,qword ptr [0x0021b0f0]
0000201d(7): MOV R13,qword ptr [0x0021b0e8]
00002024(2): XOR EBX,EBX
00002026(5): MOV qword ptr [RSP + 0x18],RAX
0000202b(2): JMP 0x0000205d
00002030(4): CMP RAX,-0x1
00002034(6): JZ 0x000021ce
0000203a(7): MOV RDI,qword ptr [0x0021b270]
00002041(3): MOV RCX,R13
00002044(3): MOV RDX,RAX
00002047(5): MOV ESI,0x1
0000204c(5): CALL 0x00001b20
00002051(3): CMP R15,RAX
00002054(6): JNZ 0x000021f1
0000205a(3): ADD RBX,R15
0000205d(7): MOV RDX,qword ptr [0x0021b268]
00002064(7): MOV RSI,qword ptr [0x0021b270]
0000206b(2): MOV EDI,EBP
0000206d(5): CALL 0x00004e90
00002072(3): TEST RAX,RAX
00002075(3): MOV R15,RAX
00002078(2): JNZ 0x00002030
0000207a(3): MOV RDI,R13
0000207d(5): CALL 0x00001c30
00002082(2): TEST EAX,EAX
00002084(6): JNZ 0x000021f1
0000208a(3): TEST RBX,RBX
0000208d(6): JS 0x0000213f
00002093(3): MOV RDI,R13
00002096(5): CALL 0x00001aa0
0000209b(5): MOV RSI,qword ptr [RSP + 0x18]
000020a0(3): MOV RDX,RBX
000020a3(2): MOV EDI,EAX
000020a5(5): CALL 0x00002630
000020aa(2): MOV EBX,EAX
000020ac(3): TEST R12D,R12D
000020af(6): JNZ 0x0000219f
000020b5(5): ADD qword ptr [RSP],0x8
000020ba(4): AND byte ptr [RSP + 0xf],BL
000020be(4): MOV RAX,qword ptr [RSP]
000020c2(4): MOV R14,qword ptr [RAX + -0x8]
000020c6(3): TEST R14,R14
000020c9(6): JNZ 0x00001f60
000020cf(2): XOR ESI,ESI
000020d1(2): XOR EDI,EDI
000020d3(5): CALL 0x00002530
000020d8(7): CMP byte ptr [0x0021b289],0x0
000020df(6): JNZ 0x000022a1
000020e5(5): MOVZX EAX,byte ptr [RSP + 0xf]
000020ea(4): ADD RSP,0x28
000020ee(1): POP RBX
000020ef(1): POP RBP
000020f0(2): POP R12
000020f2(3): XOR EAX,0x1
000020f5(2): POP R13
000020f7(3): MOVZX EAX,AL
000020fa(2): POP R14
000020fc(2): POP R15
000020fe(1): RET
000020ff(7): MOV RSI,qword ptr [0x0021b0f0]
00002106(5): MOV EDI,0x4
0000210b(5): CALL 0x00004ba0
00002110(7): LEA RSI,[0x14658]
00002117(3): MOV RBX,RAX
0000211a(5): MOV EDX,0x5
0000211f(2): XOR EDI,EDI
00002121(5): CALL 0x00001960
00002126(3): MOV R13,RAX
00002129(5): CALL 0x000018a0
0000212e(2): MOV ESI,dword ptr [RAX]
00002130(3): MOV RCX,RBX
00002133(3): MOV RDX,R13
00002136(2): XOR EDI,EDI
00002138(2): XOR EAX,EAX
0000213a(5): CALL 0x00001ba0
0000213f(2): XOR EBX,EBX
00002141(5): JMP 0x000020ac
00002146(2): XOR ESI,ESI
00002148(2): XOR EAX,EAX
0000214a(3): MOV RDI,R14
0000214d(5): CALL 0x00001bb0
00002152(2): TEST EAX,EAX
00002154(2): MOV EBP,EAX
00002156(6): JNS 0x00001fa3
0000215c(3): MOV RSI,R14
0000215f(5): MOV EDI,0x4
00002164(5): CALL 0x00004ba0
00002169(7): LEA RSI,[0x14282]
00002170(3): MOV RBP,RAX
00002173(5): MOV EDX,0x5
00002178(2): XOR EDI,EDI
0000217a(5): CALL 0x00001960
0000217f(3): MOV RBX,RAX
00002182(5): CALL 0x000018a0
00002187(2): MOV ESI,dword ptr [RAX]
00002189(3): MOV RDX,RBX
0000218c(3): MOV RCX,RBP
0000218f(2): XOR EDI,EDI
00002191(2): XOR EAX,EAX
00002193(2): XOR EBX,EBX
00002195(5): CALL 0x00001ba0
0000219a(5): JMP 0x000020b5
0000219f(2): MOV EDI,EBP
000021a1(5): CALL 0x00001a20
000021a6(2): TEST EAX,EAX
000021a8(6): JZ 0x000020b5
000021ae(3): MOV RDX,R14
000021b1(5): MOV ESI,0x3
000021b6(2): XOR EDI,EDI
000021b8(5): CALL 0x00004ca0
000021bd(5): MOV EDX,0x5
000021c2(3): MOV RBP,RAX
000021c5(7): LEA RSI,[0x14154]
000021cc(2): JMP 0x00002178
000021ce(3): MOV RDX,R14
000021d1(5): MOV ESI,0x3
000021d6(2): XOR EDI,EDI
000021d8(5): CALL 0x00004ca0
000021dd(5): MOV EDX,0x5
000021e2(3): MOV RBX,RAX
000021e5(7): LEA RSI,[0x14154]
000021ec(5): JMP 0x0000211f
000021f1(5): MOV RDX,qword ptr [RSP + 0x18]
000021f6(5): MOV ESI,0x3
000021fb(2): XOR EDI,EDI
000021fd(5): CALL 0x00004ca0
00002202(5): MOV EDX,0x5
00002207(3): MOV RBX,RAX
0000220a(7): LEA RSI,[0x142c8]
00002211(5): JMP 0x0000211f
00002216(7): LEA RDI,[0x142a0]
0000221d(5): CALL 0x00001870
00002222(3): TEST RAX,RAX
00002225(3): MOV RBX,RAX
00002228(7): LEA RAX,[0x1421b]
0000222f(7): LEA RSI,[0x142d8]
00002236(4): CMOVZ RBX,RAX
0000223a(2): XOR EDX,EDX
0000223c(3): MOV RDI,RBX
0000223f(5): CALL 0x00003060
00002244(3): MOV RDI,RAX
00002247(7): MOV qword ptr [0x0021b0f0],RAX
0000224e(5): CALL 0x00004ef0
00002253(2): TEST EAX,EAX
00002255(3): MOV R13D,EAX
00002258(6): JS 0x00002301
0000225e(7): LEA RSI,[0x142a7]
00002265(2): MOV EDI,EAX
00002267(5): CALL 0x00001b40
0000226c(3): TEST RAX,RAX
0000226f(7): MOV qword ptr [0x0021b0e8],RAX
00002276(7): MOV RDI,qword ptr [0x0021b0f0]
0000227d(6): JZ 0x0000235b
00002283(5): CALL 0x000018b0
00002288(5): JMP 0x00002016
0000228d(3): MOV RDX,RBX
00002290(3): MOV RSI,R14
00002293(2): MOV EDI,EBP
00002295(5): CALL 0x00002630
0000229a(2): MOV EBX,EAX
0000229c(5): JMP 0x000020ac
000022a1(2): XOR EDI,EDI
000022a3(5): CALL 0x00001a20
000022a8(2): TEST EAX,EAX
000022aa(6): JNS 0x000020e5
000022b0(5): CALL 0x000018a0
000022b5(2): MOV ESI,dword ptr [RAX]
000022b7(7): LEA RDX,[0x146ca]
000022be(2): XOR EDI,EDI
000022c0(2): XOR EAX,EAX
000022c2(5): CALL 0x00001ba0
000022c7(5): MOV byte ptr [RSP + 0xf],0x0
000022cc(5): JMP 0x000020e5
000022d1(5): MOV byte ptr [RSP + 0xf],0x1
000022d6(5): JMP 0x000020cf
000022db(7): MOV RSI,qword ptr [0x0021b290]
000022e2(5): LEA RDX,[R12 + 0x1]
000022e7(3): MOV RDI,RAX
000022ea(5): CALL 0x00001a90
000022ef(3): MOV RCX,RAX
000022f2(3): ADD RCX,R12
000022f5(7): MOV qword ptr [0x0021b270],RCX
000022fc(5): JMP 0x00001edc
00002301(3): MOV RSI,RBX
00002304(5): MOV EDI,0x4
00002309(5): CALL 0x00004ba0
0000230e(7): LEA RSI,[0x14630]
00002315(5): MOV EDX,0x5
0000231a(2): XOR EDI,EDI
0000231c(3): MOV RBX,RAX
0000231f(5): CALL 0x00001960
00002324(3): MOV R13,RAX
00002327(5): CALL 0x000018a0
0000232c(2): MOV ESI,dword ptr [RAX]
0000232e(3): MOV RCX,RBX
00002331(3): MOV RDX,R13
00002334(2): XOR EDI,EDI
00002336(2): XOR EAX,EAX
00002338(5): CALL 0x00001ba0
0000233d(7): MOV RDI,qword ptr [0x0021b0f0]
00002344(2): XOR EBX,EBX
00002346(5): CALL 0x00001880
0000234b(11): MOV qword ptr [0x0021b0f0],0x0
00002356(5): JMP 0x000020ac
0000235b(3): MOV RSI,RDI
0000235e(5): MOV EDI,0x4
00002363(5): CALL 0x00004ba0
00002368(7): LEA RSI,[0x142aa]
0000236f(2): XOR EDI,EDI
00002371(5): MOV EDX,0x5
00002376(3): MOV RBX,RAX
00002379(5): CALL 0x00001960
0000237e(5): MOV qword ptr [RSP + 0x18],RAX
00002383(5): CALL 0x000018a0
00002388(5): MOV RDX,qword ptr [RSP + 0x18]
0000238d(2): MOV ESI,dword ptr [RAX]
0000238f(3): MOV RCX,RBX
00002392(2): XOR EDI,EDI
00002394(2): XOR EAX,EAX
00002396(5): CALL 0x00001ba0
0000239b(3): MOV EDI,R13D
0000239e(5): CALL 0x00001a20
000023a3(7): MOV RDI,qword ptr [0x0021b0f0]
000023aa(5): CALL 0x000018b0
000023af(2): JMP 0x0000233d
000023b1(5): CMP EAX,0xffffff7e
000023b6(2): JNZ 0x000023cb
000023b8(2): XOR EDI,EDI
000023ba(5): CALL 0x00002bd0
000023bf(7): MOV qword ptr [0x0021b268],RAX
000023c6(5): CALL 0x000057e0
000023cb(5): MOV EDI,0x1
000023d0(5): CALL 0x00002bd0
000023d5(7): LEA RSI,[0x14259]
000023dc(5): MOV EDX,0x5
000023e1(2): XOR EDI,EDI
000023e3(5): CALL 0x00001960
000023e8(2): XOR ESI,ESI
000023ea(3): MOV RDX,RAX
000023ed(5): MOV EDI,0x1
000023f2(2): XOR EAX,EAX
000023f4(5): CALL 0x00001ba0
000023f9(7): LEA RDX,[0x14680]
00002400(3): MOV RCX,RAX
00002403(2): XOR ESI,ESI
00002405(5): MOV EDI,0x1
0000240a(2): XOR EAX,EAX
0000240c(5): CALL 0x00001ba0
00002411(10): NOP word ptr CS:[RAX + RAX*0x1]
0000241b(5): NOP dword ptr [RAX + RAX*0x1]
00002420(2): XOR EBP,EBP
00002422(3): MOV R9,RDX
00002425(1): POP RSI
00002426(3): MOV RDX,RSP
00002429(4): AND RSP,-0x10
0000242d(1): PUSH RAX
0000242e(1): PUSH RSP
0000242f(7): LEA R8,[0x14110]
00002436(7): LEA RCX,[0x140a0]
0000243d(7): LEA RDI,[0x1c90]
00002444(6): CALL qword ptr [0x00218fd8]
0000244a(1): HLT
00002450(7): LEA RDI,[0x219080]
00002457(1): PUSH RBP
00002458(7): LEA RAX,[0x219080]
0000245f(3): CMP RAX,RDI
00002462(3): MOV RBP,RSP
00002465(2): JZ 0x00002480
00002467(7): MOV RAX,qword ptr [0x00218fd0]
0000246e(3): TEST RAX,RAX
00002471(2): JZ 0x00002480
00002473(1): POP RBP
00002474(2): JMP RAX
00002480(1): POP RBP
00002481(1): RET
00002490(7): LEA RDI,[0x219080]
00002497(7): LEA RSI,[0x219080]
0000249e(1): PUSH RBP
0000249f(3): SUB RSI,RDI
000024a2(3): MOV RBP,RSP
000024a5(4): SAR RSI,0x3
000024a9(3): MOV RAX,RSI
000024ac(4): SHR RAX,0x3f
000024b0(3): ADD RSI,RAX
000024b3(3): SAR RSI,1
000024b6(2): JZ 0x000024d0
000024b8(7): MOV RAX,qword ptr [0x00218fe8]
000024bf(3): TEST RAX,RAX
000024c2(2): JZ 0x000024d0
000024c4(1): POP RBP
000024c5(2): JMP RAX
000024d0(1): POP RBP
000024d1(1): RET
000024e0(7): CMP byte ptr [0x002190c8],0x0
000024e7(2): JNZ 0x00002518
000024e9(8): CMP qword ptr [0x00218ff0],0x0
000024f1(1): PUSH RBP
000024f2(3): MOV RBP,RSP
000024f5(2): JZ 0x00002503
000024f7(7): MOV RDI,qword ptr [0x00219008]
000024fe(5): CALL 0x00001c80
00002503(5): CALL 0x00002450
00002508(7): MOV byte ptr [0x002190c8],0x1
0000250f(1): POP RBP
00002510(1): RET
00002518(2): RET
00002520(1): PUSH RBP
00002521(3): MOV RBP,RSP
00002524(1): POP RBP
00002525(5): JMP 0x00002490
00002530(2): PUSH R15
00002532(2): PUSH R14
00002534(2): PUSH R13
00002536(2): PUSH R12
00002538(1): PUSH RBP
00002539(1): PUSH RBX
0000253a(4): SUB RSP,0x8
0000253e(3): TEST RDI,RDI
00002541(7): MOV RBX,qword ptr [0x0021b0e0]
00002548(6): JZ 0x000025f0
0000254e(6): MOV R15D,0x2000
00002554(3): SUB RSI,RDI
00002557(7): LEA R13,[0x2190e0]
0000255e(3): SUB R15,RBX
00002561(3): MOV R12,RDI
00002564(3): MOV RBP,RSI
00002567(3): CMP RSI,R15
0000256a(3): MOV R14,R13
0000256d(6): JC 0x00002628
00002573(5): NOP dword ptr [RAX + RAX*0x1]
00002578(5): LEA RDI,[R13 + RBX*0x1]
0000257d(3): MOV RDX,R15
00002580(3): MOV RSI,R12
00002583(3): SUB RBP,R15
00002586(3): ADD R12,R15
00002589(2): XOR EBX,EBX
0000258b(5): CALL 0x00001a90
00002590(7): MOV RCX,qword ptr [0x00219088]
00002597(5): MOV EDX,0x2000
0000259c(5): MOV ESI,0x1
000025a1(3): MOV RDI,R14
000025a4(6): MOV R15D,0x2000
000025aa(5): CALL 0x00001b20
000025af(7): CMP RBP,0x1fff
000025b6(11): MOV qword ptr [0x0021b0e0],0x0
000025c1(2): JA 0x00002578
000025c3(7): LEA RDI,[0x2190e0]
000025ca(3): ADD RBX,RBP
000025cd(3): MOV RDX,RBP
000025d0(3): MOV RSI,R12
000025d3(5): CALL 0x00001a90
000025d8(7): MOV qword ptr [0x0021b0e0],RBX
000025df(4): ADD RSP,0x8
000025e3(1): POP RBX
000025e4(1): POP RBP
000025e5(2): POP R12
000025e7(2): POP R13
000025e9(2): POP R14
000025eb(2): POP R15
000025ed(1): RET
000025f0(7): MOV RCX,qword ptr [0x00219088]
000025f7(7): LEA RDI,[0x2190e0]
000025fe(3): MOV RDX,RBX
00002601(5): MOV ESI,0x1
00002606(5): CALL 0x00001b20
0000260b(11): MOV qword ptr [0x0021b0e0],0x0
00002616(4): ADD RSP,0x8
0000261a(1): POP RBX
0000261b(1): POP RBP
0000261c(2): POP R12
0000261e(2): POP R13
00002620(2): POP R14
00002622(2): POP R15
00002624(1): RET
00002628(4): LEA RDI,[RBX + R13*0x1]
0000262c(2): JMP 0x000025ca
00002630(2): PUSH R15
00002632(2): PUSH R14
00002634(3): MOV R14,RDX
00002637(2): PUSH R13
00002639(2): PUSH R12
0000263b(1): PUSH RBP
0000263c(1): PUSH RBX
0000263d(4): SUB RSP,0x38
00002641(7): MOV R15,qword ptr [0x0021b290]
00002648(7): MOV RBX,qword ptr [0x0021b268]
0000264f(4): MOV dword ptr [RSP + 0x1c],EDI
00002653(5): MOV qword ptr [RSP + 0x28],RSI
00002658(4): LEA RAX,[R15 + 0x1]
0000265c(4): MOVZX EBP,byte ptr [R15]
00002660(5): MOV qword ptr [RSP + 0x8],RAX
00002665(7): MOV RAX,qword ptr [0x0021b278]
0000266c(5): MOV qword ptr [RSP + 0x20],RAX
00002671(4): LEA R13,[RAX + -0x1]
00002675(3): MOV RAX,RDX
00002678(2): XOR EDX,EDX
0000267a(3): DIV RBX
0000267d(3): TEST RDX,RDX
00002680(6): JNZ 0x00002b19
00002686(7): LEA R12,[0x14144]
0000268d(2): JMP 0x00002693
00002690(3): SUB R14,RBX
00002693(7): MOV RSI,qword ptr [0x0021b270]
0000269a(4): MOV EDI,dword ptr [RSP + 0x1c]
0000269e(3): MOV RDX,RBX
000026a1(5): CALL 0x00004e90
000026a6(3): TEST RAX,RAX
000026a9(3): MOV RDX,RAX
000026ac(7): MOV RBX,qword ptr [0x0021b268]
000026b3(2): JNZ 0x0000271f
000026b5(3): TEST R14,R14
000026b8(6): JZ 0x00002ade
000026be(4): MOV EDI,dword ptr [RSP + 0x1c]
000026c2(3): MOV RSI,RBX
000026c5(5): MOV EDX,0x1
000026ca(3): NEG RSI
000026cd(5): CALL 0x000019f0
000026d2(3): TEST RAX,RAX
000026d5(2): JNS 0x00002690
000026d7(5): MOV RDX,qword ptr [RSP + 0x28]
000026dc(5): MOV ESI,0x3
000026e1(2): XOR EDI,EDI
000026e3(5): CALL 0x00004ca0
000026e8(5): MOV EDX,0x5
000026ed(3): MOV RSI,R12
000026f0(2): XOR EDI,EDI
000026f2(3): MOV RBX,RAX
000026f5(5): CALL 0x00001960
000026fa(3): MOV R15,RAX
000026fd(5): CALL 0x000018a0
00002702(2): MOV ESI,dword ptr [RAX]
00002704(3): MOV RCX,RBX
00002707(3): MOV RDX,R15
0000270a(2): XOR EDI,EDI
0000270c(2): XOR EAX,EAX
0000270e(5): CALL 0x00001ba0
00002713(7): MOV RBX,qword ptr [0x0021b268]
0000271a(5): JMP 0x00002690
0000271f(3): CMP RAX,RBX
00002722(2): JZ 0x0000274c
00002724(5): JMP 0x00002b7b
00002730(4): CMP RAX,-0x1
00002734(6): JZ 0x00002a8d
0000273a(7): MOV RDX,qword ptr [0x0021b268]
00002741(3): ADD R14,RAX
00002744(3): MOV RBX,RAX
00002747(3): CMP RDX,RAX
0000274a(2): JNZ 0x0000276b
0000274c(7): MOV RSI,qword ptr [0x0021b270]
00002753(4): MOV EDI,dword ptr [RSP + 0x1c]
00002757(5): CALL 0x00004e90
0000275c(3): TEST RAX,RAX
0000275f(2): JNZ 0x00002730
00002761(4): CMP RBX,-0x1
00002765(6): JZ 0x00002a8d
0000276b(7): MOV R12,qword ptr [0x0021b270]
00002772(7): MOV RAX,qword ptr [0x0021b280]
00002779(4): LEA RCX,[R12 + RBX*0x1]
0000277d(3): MOV RDX,RCX
00002780(5): MOV qword ptr [RSP + 0x10],RCX
00002785(5): SUB RCX,qword ptr [RSP + 0x20]
0000278a(5): MOV byte ptr [RSP + 0x20],0x1
0000278f(4): ADD RCX,0x1
00002793(3): TEST RAX,RAX
00002796(4): CMOVNZ RDX,RCX
0000279a(3): MOV R15,RDX
0000279d(3): NOP dword ptr [RAX]
000027a0(3): TEST RAX,RAX
000027a3(6): JNZ 0x00002943
000027a9(3): SUB R15,R12
000027ac(6): MOV R8D,0x1
000027b2(3): SUB R8,R15
000027b5(4): CMP R8,0x1
000027b9(6): JG 0x00002bac
000027bf(6): JZ 0x000029d7
000027c5(4): LEA RCX,[R15 + -0x1]
000027c9(7): LEA R9,[0x21b100]
000027d0(7): LEA RDI,[0x21b220]
000027d7(3): MOV RDX,R15
000027da(3): MOV RSI,R12
000027dd(5): CALL 0x00013a70
000027e2(4): CMP RAX,-0x1
000027e6(6): JZ 0x000029d0
000027ec(4): CMP RAX,-0x2
000027f0(6): JZ 0x00002b88
000027f6(7): MOV RAX,qword ptr [0x0021b108]
000027fd(7): MOV R12,qword ptr [0x0021b270]
00002804(3): MOV RDX,qword ptr [RAX]
00002807(7): MOV RAX,qword ptr [0x0021b110]
0000280e(3): MOV RAX,qword ptr [RAX]
00002811(4): LEA RBX,[R12 + RDX*0x1]
00002815(3): SUB RAX,RDX
00002818(7): MOV qword ptr [0x0021b278],RAX
0000281f(3): CMP RBX,R12
00002822(6): JNC 0x00002978
00002828(3): TEST R14,R14
0000282b(6): JZ 0x00002af8
00002831(5): MOV RBX,qword ptr [RSP + 0x10]
00002836(7): MOV RAX,qword ptr [0x0021b268]
0000283d(3): SUB RBX,R12
00002840(3): CMP RAX,RBX
00002843(2): JNC 0x0000289c
00002845(7): MOV RDX,qword ptr [0x0021b280]
0000284c(4): LEA RSI,[RAX + RAX*0x1]
00002850(7): MOV RDI,qword ptr [0x0021b260]
00002857(6): MOV R15D,0x1
0000285d(7): MOV qword ptr [0x0021b268],RSI
00002864(5): LEA RSI,[RDX + RAX*0x4 + 0x2]
00002869(3): TEST RDX,RDX
0000286c(4): CMOVNZ R15,RDX
00002870(3): CMP RSI,RDI
00002873(7): MOV qword ptr [0x0021b260],RSI
0000287a(6): JC 0x00002b83
00002880(3): MOV RDI,R12
00002883(3): SUB RDI,R15
00002886(5): CALL 0x000055f0
0000288b(3): ADD RAX,R15
0000288e(7): MOV qword ptr [0x0021b270],RAX
00002895(7): MOV RAX,qword ptr [0x0021b268]
0000289c(3): CMP R14,RAX
0000289f(6): JC 0x000029e8
000028a5(3): SUB R14,RAX
000028a8(4): MOV EDI,dword ptr [RSP + 0x1c]
000028ac(2): XOR EDX,EDX
000028ae(3): MOV RSI,R14
000028b1(5): CALL 0x000019f0
000028b6(3): TEST RAX,RAX
000028b9(6): JS 0x00002a48
000028bf(7): MOV R12,qword ptr [0x0021b270]
000028c6(7): MOV R8,qword ptr [0x0021b268]
000028cd(3): MOV RDX,RBX
000028d0(4): LEA R15,[R12 + R8*0x1]
000028d4(3): MOV RSI,R12
000028d7(5): MOV qword ptr [RSP + 0x10],R8
000028dc(3): MOV RDI,R15
000028df(5): CALL 0x00001b90
000028e4(5): MOV R8,qword ptr [RSP + 0x10]
000028e9(4): MOV EDI,dword ptr [RSP + 0x1c]
000028ed(3): MOV RSI,R12
000028f0(3): ADD RBX,R8
000028f3(8): CMP qword ptr [0x0021b280],0x0
000028fb(3): MOV RDX,R8
000028fe(4): LEA RAX,[R12 + RBX*0x1]
00002902(5): MOV qword ptr [RSP + 0x10],RAX
00002907(4): CMOVZ R15,RAX
0000290b(5): CALL 0x00004e90
00002910(7): CMP RAX,qword ptr [0x0021b268]
00002917(6): JNZ 0x00002a8d
0000291d(7): MOV RAX,qword ptr [0x0021b280]
00002924(7): MOV R12,qword ptr [0x0021b270]
0000292b(3): TEST RAX,RAX
0000292e(6): JZ 0x000027a9
00002934(4): CMP byte ptr [R15 + -0x1],BPL
00002938(4): LEA RBX,[R15 + -0x1]
0000293c(2): JZ 0x0000294d
0000293e(2): NOP
00002940(3): MOV R15,RBX
00002943(4): CMP byte ptr [R15 + -0x1],BPL
00002947(4): LEA RBX,[R15 + -0x1]
0000294b(2): JNZ 0x00002940
0000294d(3): TEST R13,R13
00002950(6): JZ 0x0000281f
00002956(5): MOV RSI,qword ptr [RSP + 0x8]
0000295b(3): MOV RDX,R13
0000295e(3): MOV RDI,R15
00002961(5): CALL 0x000018c0
00002966(2): TEST EAX,EAX
00002968(2): JNZ 0x00002940
0000296a(3): CMP RBX,R12
0000296d(6): JC 0x00002828
00002973(5): NOP dword ptr [RAX + RAX*0x1]
00002978(7): CMP byte ptr [0x0021b288],0x0
0000297f(2): JZ 0x00002a00
00002981(5): MOVZX ECX,byte ptr [RSP + 0x20]
00002986(7): MOV R15,qword ptr [0x0021b278]
0000298d(3): ADD R15,RBX
00002990(3): XOR ECX,0x1
00002993(5): CMP qword ptr [RSP + 0x10],R15
00002998(3): SETNZ DL
0000299b(2): OR CL,DL
0000299d(4): MOV byte ptr [RSP + 0x20],CL
000029a1(2): JNZ 0x00002a20
000029a3(5): MOV qword ptr [RSP + 0x10],R15
000029a8(7): MOV RAX,qword ptr [0x0021b280]
000029af(3): MOV R15,RBX
000029b2(3): TEST RAX,RAX
000029b5(6): JZ 0x000027a9
000029bb(5): MOV EDX,0x1
000029c0(7): SUB RDX,qword ptr [0x0021b278]
000029c7(3): ADD R15,RDX
000029ca(5): JMP 0x000027a0
000029d0(7): MOV R12,qword ptr [0x0021b270]
000029d7(5): LEA RBX,[R12 + -0x1]
000029dc(5): JMP 0x0000281f
000029e8(7): MOV qword ptr [0x0021b268],R14
000029ef(3): XOR R14D,R14D
000029f2(5): JMP 0x000028a8
00002a00(5): MOV RSI,qword ptr [RSP + 0x10]
00002a05(3): MOV RDI,RBX
00002a08(5): CALL 0x00002530
00002a0d(7): MOV R12,qword ptr [0x0021b270]
00002a14(5): MOV qword ptr [RSP + 0x10],RBX
00002a19(2): JMP 0x000029a8
00002a20(5): MOV RSI,qword ptr [RSP + 0x10]
00002a25(3): MOV RDI,R15
00002a28(5): CALL 0x00002530
00002a2d(7): MOV R12,qword ptr [0x0021b270]
00002a34(5): MOV qword ptr [RSP + 0x10],R15
00002a39(5): MOV byte ptr [RSP + 0x20],0x0
00002a3e(5): JMP 0x000029a8
00002a48(5): MOV RDX,qword ptr [RSP + 0x28]
00002a4d(2): XOR EDI,EDI
00002a4f(5): MOV ESI,0x3
00002a54(5): CALL 0x00004ca0
00002a59(7): LEA RSI,[0x14144]
00002a60(2): XOR EDI,EDI
00002a62(5): MOV EDX,0x5
00002a67(3): MOV R12,RAX
00002a6a(5): CALL 0x00001960
00002a6f(3): MOV R15,RAX
00002a72(5): CALL 0x000018a0
00002a77(2): MOV ESI,dword ptr [RAX]
00002a79(3): MOV RCX,R12
00002a7c(3): MOV RDX,R15
00002a7f(2): XOR EDI,EDI
00002a81(2): XOR EAX,EAX
00002a83(5): CALL 0x00001ba0
00002a88(5): JMP 0x000028bf
00002a8d(5): MOV RDX,qword ptr [RSP + 0x28]
00002a92(5): MOV ESI,0x3
00002a97(2): XOR EDI,EDI
00002a99(5): CALL 0x00004ca0
00002a9e(7): LEA RSI,[0x14154]
00002aa5(5): MOV EDX,0x5
00002aaa(2): XOR EDI,EDI
00002aac(3): MOV RBP,RAX
00002aaf(5): CALL 0x00001960
00002ab4(3): MOV RBX,RAX
00002ab7(5): CALL 0x000018a0
00002abc(2): MOV ESI,dword ptr [RAX]
00002abe(3): MOV RCX,RBP
00002ac1(3): MOV RDX,RBX
00002ac4(2): XOR EAX,EAX
00002ac6(2): XOR EDI,EDI
00002ac8(5): CALL 0x00001ba0
00002acd(4): ADD RSP,0x38
00002ad1(2): XOR EAX,EAX
00002ad3(1): POP RBX
00002ad4(1): POP RBP
00002ad5(2): POP R12
00002ad7(2): POP R13
00002ad9(2): POP R14
00002adb(2): POP R15
00002add(1): RET
00002ade(3): TEST RBX,RBX
00002ae1(3): MOV RDX,R14
00002ae4(6): JZ 0x0000274c
00002aea(2): XOR EBX,EBX
00002aec(5): JMP 0x0000276b
00002af8(5): MOV RSI,qword ptr [RSP + 0x10]
00002afd(3): MOV RDI,R12
00002b00(5): CALL 0x00002530
00002b05(4): ADD RSP,0x38
00002b09(5): MOV EAX,0x1
00002b0e(1): POP RBX
00002b0f(1): POP RBP
00002b10(2): POP R12
00002b12(2): POP R13
00002b14(2): POP R14
00002b16(2): POP R15
00002b18(1): RET
00002b19(3): SUB R14,RDX
00002b1c(2): XOR EDX,EDX
00002b1e(3): MOV RSI,R14
00002b21(5): CALL 0x000019f0
00002b26(3): TEST RAX,RAX
00002b29(6): JNS 0x00002686
00002b2f(5): MOV RDX,qword ptr [RSP + 0x28]
00002b34(5): MOV ESI,0x3
00002b39(2): XOR EDI,EDI
00002b3b(5): CALL 0x00004ca0
00002b40(7): LEA RSI,[0x14144]
00002b47(5): MOV EDX,0x5
00002b4c(2): XOR EDI,EDI
00002b4e(3): MOV RBX,RAX
00002b51(5): CALL 0x00001960
00002b56(3): MOV R12,RAX
00002b59(5): CALL 0x000018a0
00002b5e(2): MOV ESI,dword ptr [RAX]
00002b60(3): MOV RCX,RBX
00002b63(3): MOV RDX,R12
00002b66(2): XOR EDI,EDI
00002b68(2): XOR EAX,EAX
00002b6a(5): CALL 0x00001ba0
00002b6f(7): MOV RBX,qword ptr [0x0021b268]
00002b76(5): JMP 0x00002686
00002b7b(3): MOV RBX,RAX
00002b7e(5): JMP 0x00002761
00002b83(5): CALL 0x000057e0
00002b88(7): LEA RSI,[0x14308]
00002b8f(5): MOV EDX,0x5
00002b94(2): XOR EDI,EDI
00002b96(5): CALL 0x00001960
00002b9b(2): XOR ESI,ESI
00002b9d(3): MOV RDX,RAX
00002ba0(5): MOV EDI,0x1
00002ba5(2): XOR EAX,EAX
00002ba7(5): CALL 0x00001ba0
00002bac(7): LEA RSI,[0x14163]
00002bb3(5): MOV EDX,0x5
00002bb8(2): XOR EDI,EDI
00002bba(5): CALL 0x00001960
00002bbf(2): XOR ESI,ESI
00002bc1(3): MOV RDX,RAX
00002bc4(5): MOV EDI,0x1
00002bc9(2): XOR EAX,EAX
00002bcb(5): CALL 0x00001ba0
00002bd0(2): PUSH R13
00002bd2(2): PUSH R12
00002bd4(5): MOV EDX,0x5
00002bd9(1): PUSH RBP
00002bda(1): PUSH RBX
00002bdb(2): MOV EBP,EDI
00002bdd(7): SUB RSP,0x88
00002be4(7): MOV RBX,qword ptr [0x0021b2a8]
00002beb(9): MOV RAX,qword ptr FS:[0x28]
00002bf4(5): MOV qword ptr [RSP + 0x78],RAX
00002bf9(2): XOR EAX,EAX
00002bfb(2): TEST EDI,EDI
00002bfd(2): JZ 0x00002c2d
00002bff(7): LEA RSI,[0x14330]
00002c06(2): XOR EDI,EDI
00002c08(5): CALL 0x00001960
00002c0d(7): MOV RDI,qword ptr [0x002190c0]
00002c14(3): MOV RDX,RAX
00002c17(3): MOV RCX,RBX
00002c1a(5): MOV ESI,0x1
00002c1f(2): XOR EAX,EAX
00002c21(5): CALL 0x00001c20
00002c26(2): MOV EDI,EBP
00002c28(5): CALL 0x00001c00
00002c2d(7): LEA RSI,[0x14358]
00002c34(2): XOR EDI,EDI
00002c36(5): CALL 0x00001960
00002c3b(3): MOV RDX,RBX
00002c3e(3): MOV RSI,RAX
00002c41(5): MOV EDI,0x1
00002c46(2): XOR EAX,EAX
00002c48(5): CALL 0x00001b60
00002c4d(7): MOV RBX,qword ptr [0x00219088]
00002c54(7): LEA RSI,[0x14380]
00002c5b(5): MOV EDX,0x5
00002c60(2): XOR EDI,EDI
00002c62(5): CALL 0x00001960
00002c67(3): MOV RSI,RBX
00002c6a(3): MOV RDI,RAX
00002c6d(5): CALL 0x00001a60
00002c72(7): MOV RBX,qword ptr [0x00219088]
00002c79(7): LEA RSI,[0x143b8]
00002c80(5): MOV EDX,0x5
00002c85(2): XOR EDI,EDI
00002c87(5): CALL 0x00001960
00002c8c(3): MOV RSI,RBX
00002c8f(3): MOV RDI,RAX
00002c92(5): CALL 0x00001a60
00002c97(7): MOV RBX,qword ptr [0x00219088]
00002c9e(7): LEA RSI,[0x143f0]
00002ca5(5): MOV EDX,0x5
00002caa(2): XOR EDI,EDI
00002cac(5): CALL 0x00001960
00002cb1(3): MOV RSI,RBX
00002cb4(3): MOV RDI,RAX
00002cb7(5): CALL 0x00001a60
00002cbc(7): MOV RBX,qword ptr [0x00219088]
00002cc3(7): LEA RSI,[0x14440]
00002cca(5): MOV EDX,0x5
00002ccf(2): XOR EDI,EDI
00002cd1(5): CALL 0x00001960
00002cd6(3): MOV RSI,RBX
00002cd9(3): MOV RDI,RAX
00002cdc(5): CALL 0x00001a60
00002ce1(7): MOV RBX,qword ptr [0x00219088]
00002ce8(7): LEA RSI,[0x14520]
00002cef(5): MOV EDX,0x5
00002cf4(2): XOR EDI,EDI
00002cf6(5): CALL 0x00001960
00002cfb(3): MOV RSI,RBX
00002cfe(3): MOV RDI,RAX
00002d01(5): CALL 0x00001a60
00002d06(7): MOV RBX,qword ptr [0x00219088]
00002d0d(7): LEA RSI,[0x14550]
00002d14(5): MOV EDX,0x5
00002d19(2): XOR EDI,EDI
00002d1b(5): CALL 0x00001960
00002d20(3): MOV RSI,RBX
00002d23(3): MOV RDI,RAX
00002d26(7): LEA RBX,[0x14174]
00002d2d(5): CALL 0x00001a60
00002d32(7): LEA RAX,[0x14178]
00002d39(7): LEA RCX,[0x141b9]
00002d40(9): MOV qword ptr [RSP + 0x60],0x0
00002d49(9): MOV qword ptr [RSP + 0x68],0x0
00002d52(3): MOV RDX,RSP
00002d55(4): MOV qword ptr [RSP],RAX
00002d59(7): LEA RAX,[0x1417a]
00002d60(5): MOV qword ptr [RSP + 0x30],RCX
00002d65(7): LEA RCX,[0x141c3]
00002d6c(5): MOV qword ptr [RSP + 0x8],RAX
00002d71(7): LEA RAX,[0x141f2]
00002d78(5): MOV qword ptr [RSP + 0x40],RCX
00002d7d(7): LEA RCX,[0x141cd]
00002d84(5): MOV qword ptr [RSP + 0x10],RAX
00002d89(7): LEA RAX,[0x1418a]
00002d90(5): MOV qword ptr [RSP + 0x50],RCX
00002d95(5): MOV qword ptr [RSP + 0x18],RAX
00002d9a(7): LEA RAX,[0x141a0]
00002da1(5): MOV qword ptr [RSP + 0x20],RAX
00002da6(7): LEA RAX,[0x141aa]
00002dad(5): MOV qword ptr [RSP + 0x28],RAX
00002db2(5): MOV qword ptr [RSP + 0x38],RAX
00002db7(5): MOV qword ptr [RSP + 0x48],RAX
00002dbc(5): MOV qword ptr [RSP + 0x58],RAX
00002dc1(7): NOP dword ptr [RAX]
00002dc8(4): ADD RDX,0x10
00002dcc(3): MOV RDI,qword ptr [RDX]
00002dcf(3): TEST RDI,RDI
00002dd2(2): JZ 0x00002de7
00002dd4(5): MOV ECX,0x4
00002dd9(3): MOV RSI,RBX
00002ddc(2): CMPSB.REPE RDI,RSI
00002dde(3): SETA AL
00002de1(2): SBB AL,0x0
00002de3(2): TEST AL,AL
00002de5(2): JNZ 0x00002dc8
00002de7(4): MOV R12,qword ptr [RDX + 0x8]
00002deb(2): XOR EDI,EDI
00002ded(5): MOV EDX,0x5
00002df2(7): LEA RSI,[0x141d7]
00002df9(3): TEST R12,R12
00002dfc(6): JZ 0x00002ec3
00002e02(5): CALL 0x00001960
00002e07(7): LEA RCX,[0x14588]
00002e0e(7): LEA RDX,[0x141ee]
00002e15(3): MOV RSI,RAX
00002e18(5): MOV EDI,0x1
00002e1d(2): XOR EAX,EAX
00002e1f(5): CALL 0x00001b60
00002e24(2): XOR ESI,ESI
00002e26(5): MOV EDI,0x5
00002e2b(5): CALL 0x00001b50
00002e30(3): TEST RAX,RAX
00002e33(2): JZ 0x00002e51
00002e35(7): LEA RSI,[0x141fc]
00002e3c(5): MOV EDX,0x3
00002e41(3): MOV RDI,RAX
00002e44(5): CALL 0x000018c0
00002e49(2): TEST EAX,EAX
00002e4b(6): JNZ 0x00002f58
00002e51(7): LEA RSI,[0x14200]
00002e58(2): XOR EDI,EDI
00002e5a(5): MOV EDX,0x5
00002e5f(5): CALL 0x00001960
00002e64(7): LEA RCX,[0x14174]
00002e6b(7): LEA RDX,[0x14588]
00002e72(3): MOV RSI,RAX
00002e75(5): MOV EDI,0x1
00002e7a(2): XOR EAX,EAX
00002e7c(5): CALL 0x00001b60
00002e81(3): CMP R12,RBX
00002e84(7): LEA RCX,[0x14194]
00002e8b(7): LEA RBX,[0x14c01]
00002e92(4): CMOVZ RBX,RCX
00002e96(7): LEA RSI,[0x145f8]
00002e9d(2): XOR EDI,EDI
00002e9f(5): MOV EDX,0x5
00002ea4(5): CALL 0x00001960
00002ea9(3): MOV RCX,RBX
00002eac(3): MOV RSI,RAX
00002eaf(3): MOV RDX,R12
00002eb2(5): MOV EDI,0x1
00002eb7(2): XOR EAX,EAX
00002eb9(5): CALL 0x00001b60
00002ebe(5): JMP 0x00002c26
00002ec3(5): CALL 0x00001960
00002ec8(7): LEA RCX,[0x14588]
00002ecf(7): LEA RDX,[0x141ee]
00002ed6(3): MOV RSI,RAX
00002ed9(5): MOV EDI,0x1
00002ede(2): XOR EAX,EAX
00002ee0(5): CALL 0x00001b60
00002ee5(2): XOR ESI,ESI
00002ee7(5): MOV EDI,0x5
00002eec(5): CALL 0x00001b50
00002ef1(3): TEST RAX,RAX
00002ef4(2): JZ 0x00002f0e
00002ef6(7): LEA RSI,[0x141fc]
00002efd(5): MOV EDX,0x3
00002f02(3): MOV RDI,RAX
00002f05(5): CALL 0x000018c0
00002f0a(2): TEST EAX,EAX
00002f0c(2): JNZ 0x00002f51
00002f0e(7): LEA RSI,[0x14200]
00002f15(5): MOV EDX,0x5
00002f1a(2): XOR EDI,EDI
00002f1c(7): LEA R12,[0x14174]
00002f23(7): LEA RBX,[0x14194]
00002f2a(5): CALL 0x00001960
00002f2f(7): LEA RCX,[0x14174]
00002f36(7): LEA RDX,[0x14588]
00002f3d(3): MOV RSI,RAX
00002f40(5): MOV EDI,0x1
00002f45(2): XOR EAX,EAX
00002f47(5): CALL 0x00001b60
00002f4c(5): JMP 0x00002e96
00002f51(7): LEA R12,[0x14174]
00002f58(7): MOV R13,qword ptr [0x00219088]
00002f5f(7): LEA RSI,[0x145b0]
00002f66(2): XOR EDI,EDI
00002f68(5): MOV EDX,0x5
00002f6d(5): CALL 0x00001960
00002f72(3): MOV RSI,R13
00002f75(3): MOV RDI,RAX
00002f78(5): CALL 0x00001a60
00002f7d(5): JMP 0x00002e51
00002f90(7): MOV qword ptr [0x0021b2a0],RDI
00002f97(1): RET
00002fa0(7): MOV byte ptr [0x0021b298],DIL
00002fa7(1): RET
00002fb0(1): PUSH RBP
00002fb1(1): PUSH RBX
00002fb2(4): SUB RSP,0x8
00002fb6(7): MOV RDI,qword ptr [0x00219088]
00002fbd(5): CALL 0x00013b20
00002fc2(2): TEST EAX,EAX
00002fc4(2): JZ 0x00002fdc
00002fc6(5): CALL 0x000018a0
00002fcb(7): CMP byte ptr [0x0021b298],0x0
00002fd2(3): MOV RBX,RAX
00002fd5(2): JZ 0x00002ff3
00002fd7(3): CMP dword ptr [RAX],0x20
00002fda(2): JNZ 0x00002ff3
00002fdc(7): MOV RDI,qword ptr [0x002190c0]
00002fe3(5): CALL 0x00013b20
00002fe8(2): TEST EAX,EAX
00002fea(2): JNZ 0x00003032
00002fec(4): ADD RSP,0x8
00002ff0(1): POP RBX
00002ff1(1): POP RBP
00002ff2(1): RET
00002ff3(7): LEA RSI,[0x142cc]
00002ffa(2): XOR EDI,EDI
00002ffc(5): MOV EDX,0x5
00003001(5): CALL 0x00001960
00003006(7): MOV RDI,qword ptr [0x0021b2a0]
0000300d(3): MOV RBP,RAX
00003010(3): TEST RDI,RDI
00003013(2): JZ 0x0000303d
00003015(5): CALL 0x00004c70
0000301a(2): MOV ESI,dword ptr [RBX]
0000301c(7): LEA RDX,[0x1467c]
00003023(3): MOV RCX,RAX
00003026(3): MOV R8,RBP
00003029(2): XOR EDI,EDI
0000302b(2): XOR EAX,EAX
0000302d(5): CALL 0x00001ba0
00003032(6): MOV EDI,dword ptr [0x00219018]
00003038(5): CALL 0x000018d0
0000303d(2): MOV ESI,dword ptr [RBX]
0000303f(7): LEA RDX,[0x14680]
00003046(3): MOV RCX,RAX
00003049(2): XOR EDI,EDI
0000304b(2): XOR EAX,EAX
0000304d(5): CALL 0x00001ba0
00003052(2): JMP 0x00003032
00003060(2): PUSH R15
00003062(2): PUSH R14
00003064(3): MOV R15,RDX
00003067(2): PUSH R13
00003069(2): PUSH R12
0000306b(3): MOV R12,RDI
0000306e(1): PUSH RBP
0000306f(1): PUSH RBX
00003070(3): MOV RBP,RSI
00003073(4): SUB RSP,0x18
00003077(5): CALL 0x00013ba0
0000307c(3): MOV RBX,RAX
0000307f(3): MOV RDI,RAX
00003082(5): CALL 0x00013c00
00003087(3): SUB RBX,R12
0000308a(3): MOV R13,RAX
0000308d(3): MOV RDI,RBP
00003090(3): ADD RBX,RAX
00003093(5): CALL 0x00001980
00003098(3): TEST R13,R13
0000309b(3): MOV R14,RAX
0000309e(2): JZ 0x000030d0
000030a0(6): CMP byte ptr [R12 + RBX*0x1 + -0x1],0x2f
000030a6(6): JZ 0x00003150
000030ac(2): XOR EAX,EAX
000030ae(4): CMP byte ptr [RBP],0x2f
000030b2(5): MOV EDX,0x0
000030b7(3): SETNZ AL
000030ba(4): MOV qword ptr [RSP],RAX
000030be(5): MOV EAX,0x2f
000030c3(3): CMOVZ EAX,EDX
000030c6(4): MOV byte ptr [RSP + 0xf],AL
000030ca(2): JMP 0x000030ee
000030d0(2): XOR EAX,EAX
000030d2(4): CMP byte ptr [RBP],0x2f
000030d6(5): MOV EDX,0x0
000030db(3): SETZ AL
000030de(4): MOV qword ptr [RSP],RAX
000030e2(5): MOV EAX,0x2e
000030e7(3): CMOVNZ EAX,EDX
000030ea(4): MOV byte ptr [RSP + 0xf],AL
000030ee(5): LEA RDI,[RBX + R14*0x1 + 0x1]
000030f3(4): ADD RDI,qword ptr [RSP]
000030f7(5): CALL 0x00001ac0
000030fc(3): TEST RAX,RAX
000030ff(3): MOV R13,RAX
00003102(2): JZ 0x00003136
00003104(3): MOV RDI,RAX
00003107(3): MOV RDX,RBX
0000310a(3): MOV RSI,R12
0000310d(5): CALL 0x00001b80
00003112(5): MOVZX ECX,byte ptr [RSP + 0xf]
00003117(4): MOV RDI,qword ptr [RSP]
0000311b(3): ADD RDI,RAX
0000311e(3): TEST R15,R15
00003121(2): MOV byte ptr [RAX],CL
00003123(2): JZ 0x00003128
00003125(3): MOV qword ptr [R15],RDI
00003128(3): MOV RDX,R14
0000312b(3): MOV RSI,RBP
0000312e(5): CALL 0x00001b80
00003133(3): MOV byte ptr [RAX],0x0
00003136(4): ADD RSP,0x18
0000313a(3): MOV RAX,R13
0000313d(1): POP RBX
0000313e(1): POP RBP
0000313f(2): POP R12
00003141(2): POP R13
00003143(2): POP R14
00003145(2): POP R15
00003147(1): RET
00003150(8): MOV qword ptr [RSP],0x0
00003158(5): MOV byte ptr [RSP + 0xf],0x0
0000315d(2): JMP 0x000030ee
00003160(3): TEST RDI,RDI
00003163(1): PUSH RBX
00003164(2): JZ 0x000031dd
00003166(5): MOV ESI,0x2f
0000316b(3): MOV RBX,RDI
0000316e(5): CALL 0x000019c0
00003173(3): TEST RAX,RAX
00003176(2): JZ 0x000031cd
00003178(4): LEA R8,[RAX + 0x1]
0000317c(3): MOV RDX,R8
0000317f(3): SUB RDX,RBX
00003182(4): CMP RDX,0x6
00003186(2): JLE 0x000031cd
00003188(4): LEA RSI,[RAX + -0x6]
0000318c(7): LEA RDI,[0x146c0]
00003193(5): MOV ECX,0x7
00003198(2): CMPSB.REPE RDI,RSI
0000319a(3): SETA DL
0000319d(3): SBB DL,0x0
000031a0(2): TEST DL,DL
000031a2(2): JNZ 0x000031cd
000031a4(7): LEA RDI,[0x146c8]
000031ab(5): MOV ECX,0x3
000031b0(3): MOV RSI,R8
000031b3(3): MOV RBX,R8
000031b6(2): CMPSB.REPE RDI,RSI
000031b8(3): SETA DL
000031bb(3): SBB DL,0x0
000031be(2): TEST DL,DL
000031c0(2): JNZ 0x000031cd
000031c2(4): LEA RBX,[RAX + 0x4]
000031c6(7): MOV qword ptr [0x00219080],RBX
000031cd(7): MOV qword ptr [0x0021b2a8],RBX
000031d4(7): MOV qword ptr [0x002190a0],RBX
000031db(1): POP RBX
000031dc(1): RET
000031dd(7): MOV RCX,qword ptr [0x002190c0]
000031e4(7): LEA RDI,[0x14688]
000031eb(5): MOV EDX,0x37
000031f0(5): MOV ESI,0x1
000031f5(5): CALL 0x00001c10
000031fa(5): CALL 0x00001890
000031ff(1): NOP
00003200(1): PUSH RBP
00003201(1): PUSH RBX
00003202(3): MOV RBP,RDI
00003205(2): MOV EBX,ESI
00003207(4): SUB RSP,0x8
0000320b(5): CALL 0x00013d10
00003210(3): MOVZX EDX,byte ptr [RAX]
00003213(3): AND EDX,0xffffffdf
00003216(3): CMP DL,0x55
00003219(2): JZ 0x00003290
0000321b(3): CMP DL,0x47
0000321e(2): JZ 0x00003240
00003220(7): LEA RAX,[0x146db]
00003227(7): LEA RDX,[0x146dd]
0000322e(3): CMP EBX,0x9
00003231(4): CMOVNZ RAX,RDX
00003235(4): ADD RSP,0x8
00003239(1): POP RBX
0000323a(1): POP RBP
0000323b(1): RET
00003240(4): MOVZX EDX,byte ptr [RAX + 0x1]
00003244(3): AND EDX,0xffffffdf
00003247(3): CMP DL,0x42
0000324a(2): JNZ 0x00003220
0000324c(4): CMP byte ptr [RAX + 0x2],0x31
00003250(2): JNZ 0x00003220
00003252(4): CMP byte ptr [RAX + 0x3],0x38
00003256(2): JNZ 0x00003220
00003258(4): CMP byte ptr [RAX + 0x4],0x30
0000325c(2): JNZ 0x00003220
0000325e(4): CMP byte ptr [RAX + 0x5],0x33
00003262(2): JNZ 0x00003220
00003264(4): CMP byte ptr [RAX + 0x6],0x30
00003268(2): JNZ 0x00003220
0000326a(4): CMP byte ptr [RAX + 0x7],0x0
0000326e(2): JNZ 0x00003220
00003270(4): CMP byte ptr [RBP],0x60
00003274(7): LEA RAX,[0x146d4]
0000327b(7): LEA RDX,[0x146d8]
00003282(4): CMOVNZ RAX,RDX
00003286(4): ADD RSP,0x8
0000328a(1): POP RBX
0000328b(1): POP RBP
0000328c(1): RET
00003290(4): MOVZX EDX,byte ptr [RAX + 0x1]
00003294(3): AND EDX,0xffffffdf
00003297(3): CMP DL,0x54
0000329a(2): JNZ 0x00003220
0000329c(4): MOVZX EDX,byte ptr [RAX + 0x2]
000032a0(3): AND EDX,0xffffffdf
000032a3(3): CMP DL,0x46
000032a6(6): JNZ 0x00003220
000032ac(4): CMP byte ptr [RAX + 0x3],0x2d
000032b0(6): JNZ 0x00003220
000032b6(4): CMP byte ptr [RAX + 0x4],0x38
000032ba(6): JNZ 0x00003220
000032c0(4): CMP byte ptr [RAX + 0x5],0x0
000032c4(6): JNZ 0x00003220
000032ca(4): CMP byte ptr [RBP],0x60
000032ce(7): LEA RAX,[0x146cc]
000032d5(7): LEA RDX,[0x146d0]
000032dc(4): CMOVNZ RAX,RDX
000032e0(4): ADD RSP,0x8
000032e4(1): POP RBX
000032e5(1): POP RBP
000032e6(1): RET
000032f0(2): PUSH R15
000032f2(2): PUSH R14
000032f4(3): MOV R15D,R8D
000032f7(2): PUSH R13
000032f9(2): PUSH R12
000032fb(3): MOV R14,RDI
000032fe(1): PUSH RBP
000032ff(1): PUSH RBX
00003300(3): MOV EBX,R9D
00003303(3): MOV R13,RSI
00003306(3): MOV RBP,RCX
00003309(3): AND EBX,0x2
0000330c(7): SUB RSP,0xb8
00003313(8): MOV RAX,qword ptr [0xf0 + RSP]
0000331b(5): MOV qword ptr [RSP + 0x10],RDX
00003320(5): MOV dword ptr [RSP + 0x8],R8D
00003325(5): MOV dword ptr [RSP + 0x78],R9D
0000332a(5): MOV qword ptr [RSP + 0x20],RAX
0000332f(8): MOV RAX,qword ptr [0xf8 + RSP]
00003337(5): MOV qword ptr [RSP + 0x68],RAX
0000333c(8): MOV RAX,qword ptr [0x100 + RSP]
00003344(5): MOV qword ptr [RSP + 0x60],RAX
00003349(9): MOV RAX,qword ptr FS:[0x28]
00003352(8): MOV qword ptr [0xa8 + RSP],RAX
0000335a(2): XOR EAX,EAX
0000335c(5): CALL 0x00001970
00003361(4): CMP R15D,0xa
00003365(5): MOV qword ptr [RSP + 0x58],RAX
0000336a(6): JA 0x0000451f
00003370(7): LEA RCX,[0x14740]
00003377(3): MOV EDX,R15D
0000337a(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
0000337e(3): ADD RAX,RCX
00003381(2): JMP RAX
00003383(5): MOV byte ptr [RSP + 0xe],0x1
00003388(5): MOV byte ptr [RSP + 0x7c],0x0
0000338d(3): XOR R12D,R12D
00003390(9): MOV qword ptr [RSP + 0x50],0x0
00003399(5): MOV byte ptr [RSP + 0xf],0x1
0000339e(5): MOV byte ptr [RSP + 0xd],0x0
000033a3(7): LEA RAX,[0x146dd]
000033aa(9): MOV qword ptr [RSP + 0x18],0x1
000033b3(3): XOR R15D,R15D
000033b6(8): MOV dword ptr [RSP + 0x8],0x2
000033be(5): MOV qword ptr [RSP + 0x48],RAX
000033c3(3): XOR R11D,R11D
000033c6(3): MOV RAX,RBP
000033c9(3): MOV R8D,R12D
000033cc(3): MOV RBP,R11
000033cf(3): MOV R11,RAX
000033d2(6): NOP word ptr [RAX + RAX*0x1]
000033d8(3): CMP R11,RBP
000033db(4): SETNZ R12B
000033df(4): CMP R11,-0x1
000033e3(2): JNZ 0x000033f2
000033e5(5): MOV RAX,qword ptr [RSP + 0x10]
000033ea(4): CMP byte ptr [RAX + RBP*0x1],0x0
000033ee(4): SETNZ R12B
000033f2(3): TEST R12B,R12B
000033f5(6): JZ 0x00003a50
000033fb(5): CMP dword ptr [RSP + 0x8],0x2
00003400(5): MOV RDI,qword ptr [RSP + 0x10]
00003405(4): LEA R9,[RDI + RBP*0x1]
00003409(3): SETNZ AL
0000340c(4): AND AL,byte ptr [RSP + 0xd]
00003410(3): MOV R10D,EAX
00003413(6): JZ 0x000034c0
00003419(5): MOV RAX,qword ptr [RSP + 0x18]
0000341e(3): TEST RAX,RAX
00003421(6): JZ 0x00003850
00003427(4): CMP R11,-0x1
0000342b(5): LEA RBX,[RBP + RAX*0x1]
00003430(2): JNZ 0x00003460
00003432(4): CMP RAX,0x1
00003436(2): JBE 0x00003460
00003438(5): MOV byte ptr [RSP + 0x38],R8B
0000343d(5): MOV byte ptr [RSP + 0x30],R10B
00003442(5): MOV qword ptr [RSP + 0x28],R9
00003447(5): CALL 0x00001980
0000344c(6): MOVZX R8D,byte ptr [RSP + 0x38]
00003452(6): MOVZX R10D,byte ptr [RSP + 0x30]
00003458(3): MOV R11,RAX
0000345b(5): MOV R9,qword ptr [RSP + 0x28]
00003460(3): CMP RBX,R11
00003463(5): MOV byte ptr [RSP + 0x28],R10B
00003468(6): JA 0x00003a20
0000346e(5): MOV RDX,qword ptr [RSP + 0x18]
00003473(5): MOV RSI,qword ptr [RSP + 0x48]
00003478(3): MOV RDI,R9
0000347b(5): MOV qword ptr [RSP + 0x40],R11
00003480(5): MOV byte ptr [RSP + 0x38],R8B
00003485(5): MOV qword ptr [RSP + 0x30],R9
0000348a(5): CALL 0x00001a40
0000348f(2): TEST EAX,EAX
00003491(5): MOV R9,qword ptr [RSP + 0x30]
00003496(6): MOVZX R8D,byte ptr [RSP + 0x38]
0000349c(5): MOV R11,qword ptr [RSP + 0x40]
000034a1(6): JNZ 0x00003a20
000034a7(5): CMP byte ptr [RSP + 0xf],0x0
000034ac(6): MOVZX R10D,byte ptr [RSP + 0x28]
000034b2(6): JNZ 0x00004435
000034b8(8): NOP dword ptr [RAX + RAX*0x1]
000034c0(4): MOVZX EBX,byte ptr [R9]
000034c4(3): CMP BL,0x7e
000034c7(6): JA 0x000037e8
000034cd(7): LEA RCX,[0x1476c]
000034d4(3): MOVZX EDX,BL
000034d7(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
000034db(3): ADD RAX,RCX
000034de(2): JMP RAX
000034e0(3): XOR R10D,R10D
000034e3(4): CMP R11,0x1
000034e7(3): SETNZ AL
000034ea(4): CMP R11,-0x1
000034ee(2): JNZ 0x000034fc
000034f0(5): MOV RAX,qword ptr [RSP + 0x10]
000034f5(4): CMP byte ptr [RAX + 0x1],0x0
000034f9(3): SETNZ AL
000034fc(5): CMP dword ptr [RSP + 0x8],0x2
00003501(3): SETZ DL
00003504(2): TEST AL,AL
00003506(6): JZ 0x00003758
0000350c(3): XOR R12D,R12D
0000350f(2): XOR EAX,EAX
00003511(7): NOP dword ptr [RAX]
00003518(5): CMP byte ptr [RSP + 0xd],0x1
0000351d(6): JNZ 0x00003632
00003523(2): TEST DL,DL
00003525(6): JNZ 0x00003632
0000352b(5): MOV RSI,qword ptr [RSP + 0x20]
00003530(3): TEST RSI,RSI
00003533(2): JZ 0x00003549
00003535(2): MOV EDX,EBX
00003537(3): SHR DL,0x5
0000353a(3): MOVZX EDX,DL
0000353d(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00003540(3): BT EDX,EBX
00003543(6): JC 0x00003693
00003549(3): TEST R10B,R10B
0000354c(6): JNZ 0x00003693
00003552(3): XOR EAX,0x1
00003555(4): ADD RBP,0x1
00003559(3): AND EAX,R8D
0000355c(2): TEST AL,AL
0000355e(2): JZ 0x00003580
00003560(3): CMP R13,R15
00003563(2): JBE 0x0000356a
00003565(5): MOV byte ptr [R14 + R15*0x1],0x27
0000356a(4): LEA RAX,[R15 + 0x1]
0000356e(3): CMP R13,RAX
00003571(2): JBE 0x00003579
00003573(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
00003579(4): ADD R15,0x2
0000357d(3): XOR R8D,R8D
00003580(3): CMP R15,R13
00003583(2): JNC 0x00003589
00003585(4): MOV byte ptr [R14 + R15*0x1],BL
00003589(5): MOVZX EDI,byte ptr [RSP + 0xe]
0000358e(4): ADD R15,0x1
00003592(5): MOV EAX,0x0
00003597(3): TEST R12B,R12B
0000359a(3): CMOVZ EDI,EAX
0000359d(5): MOV byte ptr [RSP + 0xe],DIL
000035a2(5): JMP 0x000033d8
000035b0(3): XOR R10D,R10D
000035b3(4): MOV EAX,dword ptr [RSP + 0x8]
000035b7(3): CMP EAX,0x2
000035ba(6): JZ 0x00003b78
000035c0(3): CMP EAX,0x5
000035c3(6): JZ 0x00003b38
000035c9(3): CMP EAX,0x2
000035cc(5): MOV EBX,0x3f
000035d1(3): SETZ DL
000035d4(3): XOR R12D,R12D
000035d7(2): XOR EAX,EAX
000035d9(5): JMP 0x00003518
000035e0(3): XOR R10D,R10D
000035e3(5): CMP dword ptr [RSP + 0x8],0x2
000035e8(6): JZ 0x00003af0
000035ee(5): MOV byte ptr [RSP + 0x7c],R12B
000035f3(2): XOR EDX,EDX
000035f5(2): XOR EAX,EAX
000035f7(5): MOV EBX,0x27
000035fc(5): JMP 0x00003518
00003608(5): MOV EDX,0x9
0000360d(5): MOV EBX,0x74
00003612(5): CMP dword ptr [RSP + 0x8],0x2
00003617(3): SETZ AL
0000361a(4): AND AL,byte ptr [RSP + 0xf]
0000361e(6): JNZ 0x0000376e
00003624(5): CMP byte ptr [RSP + 0xd],0x0
00003629(2): JNZ 0x00003690
0000362b(2): MOV EBX,EDX
0000362d(3): XOR R12D,R12D
00003630(2): XOR EAX,EAX
00003632(5): CMP byte ptr [RSP + 0xf],0x0
00003637(6): JNZ 0x0000352b
0000363d(5): JMP 0x00003549
00003648(5): MOV EDX,0x8
0000364d(5): MOV EBX,0x62
00003652(2): JMP 0x00003624
00003658(5): CMP dword ptr [RSP + 0x8],0x2
0000365d(6): JZ 0x00003a30
00003663(5): CMP byte ptr [RSP + 0xd],0x0
00003668(6): JZ 0x00003880
0000366e(5): CMP byte ptr [RSP + 0xf],0x0
00003673(6): JZ 0x00003880
00003679(6): CMP qword ptr [RSP + 0x18],0x0
0000367f(6): JNZ 0x00003a3b
00003685(5): MOV EBX,0x5c
0000368a(6): NOP word ptr [RAX + RAX*0x1]
00003690(3): XOR R12D,R12D
00003693(5): CMP dword ptr [RSP + 0x8],0x2
00003698(3): SETZ DL
0000369b(5): CMP byte ptr [RSP + 0xf],0x0
000036a0(2): MOV EAX,EDX
000036a2(6): JNZ 0x00003ef8
000036a8(3): MOV EAX,R8D
000036ab(3): XOR EAX,0x1
000036ae(2): AND AL,DL
000036b0(2): JZ 0x000036e1
000036b2(3): CMP R13,R15
000036b5(2): JBE 0x000036bc
000036b7(5): MOV byte ptr [R14 + R15*0x1],0x27
000036bc(4): LEA RDX,[R15 + 0x1]
000036c0(3): CMP R13,RDX
000036c3(2): JBE 0x000036cb
000036c5(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
000036cb(4): LEA RDX,[R15 + 0x2]
000036cf(3): CMP R13,RDX
000036d2(2): JBE 0x000036da
000036d4(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
000036da(4): ADD R15,0x3
000036de(3): MOV R8D,EAX
000036e1(3): CMP R13,R15
000036e4(2): JBE 0x000036eb
000036e6(5): MOV byte ptr [R14 + R15*0x1],0x5c
000036eb(4): ADD R15,0x1
000036ef(4): ADD RBP,0x1
000036f3(5): JMP 0x00003580
00003700(5): CMP byte ptr [RSP + 0xd],0x0
00003705(6): JNZ 0x000038d3
0000370b(2): XOR EDX,EDX
0000370d(5): TEST byte ptr [RSP + 0x78],0x1
00003712(6): JZ 0x0000362b
00003718(4): ADD RBP,0x1
0000371c(5): JMP 0x000033d8
00003728(5): CMP dword ptr [RSP + 0x8],0x2
0000372d(3): SETZ DL
00003730(2): XOR EAX,EAX
00003732(5): JMP 0x00003518
00003740(5): MOV EDX,0x7
00003745(5): MOV EBX,0x61
0000374a(5): JMP 0x00003624
00003750(5): CMP dword ptr [RSP + 0x8],0x2
00003755(3): SETZ DL
00003758(3): TEST RBP,RBP
0000375b(6): JNZ 0x0000350c
00003761(5): MOVZX EAX,byte ptr [RSP + 0xf]
00003766(2): AND AL,DL
00003768(6): JZ 0x00003518
0000376e(3): MOV RBP,R11
00003771(8): MOV dword ptr [RSP + 0x8],0x2
00003779(5): JMP 0x00003e79
00003780(5): CMP dword ptr [RSP + 0x8],0x2
00003785(3): SETZ DL
00003788(3): XOR R12D,R12D
0000378b(2): JMP 0x00003761
00003790(5): CMP dword ptr [RSP + 0x8],0x2
00003795(5): MOV EBX,0x20
0000379a(3): SETZ DL
0000379d(2): JMP 0x00003761
000037a0(5): MOV EDX,0xd
000037a5(5): MOV EBX,0x72
000037aa(5): JMP 0x00003612
000037b0(5): MOV EDX,0xc
000037b5(5): MOV EBX,0x66
000037ba(5): JMP 0x00003624
000037c0(5): MOV EDX,0xb
000037c5(5): MOV EBX,0x76
000037ca(5): JMP 0x00003624
000037d0(5): MOV EDX,0xa
000037d5(5): MOV EBX,0x6e
000037da(5): JMP 0x00003612
000037e0(3): XOR R10D,R10D
000037e3(5): NOP dword ptr [RAX + RAX*0x1]
000037e8(6): CMP qword ptr [RSP + 0x58],0x1
000037ee(6): JNZ 0x00003b98
000037f4(5): MOV qword ptr [RSP + 0x38],R11
000037f9(5): MOV byte ptr [RSP + 0x30],R8B
000037fe(5): MOV byte ptr [RSP + 0x28],R10B
00003803(5): CALL 0x00001c70
00003808(3): MOV RCX,qword ptr [RAX]
0000380b(3): MOVZX EDX,BL
0000380e(6): MOVZX R10D,byte ptr [RSP + 0x28]
00003814(6): MOVZX R8D,byte ptr [RSP + 0x30]
0000381a(5): MOV R11,qword ptr [RSP + 0x38]
0000381f(5): MOV EDI,0x1
00003824(4): MOVZX EAX,word ptr [RCX + RDX*0x2]
00003828(4): AND AX,0x4000
0000382c(4): SETNZ R12B
00003830(3): SETZ AL
00003833(4): AND AL,byte ptr [RSP + 0xd]
00003837(2): TEST AL,AL
00003839(6): JNZ 0x000041d1
0000383f(5): CMP dword ptr [RSP + 0x8],0x2
00003844(3): SETZ DL
00003847(5): JMP 0x00003518
00003850(4): MOVZX EBX,byte ptr [R9]
00003854(3): CMP BL,0x7e
00003857(2): JA 0x000037e0
00003859(7): LEA RCX,[0x14968]
00003860(3): MOVZX EDX,BL
00003863(4): MOVSXD RAX,dword ptr [RCX + RDX*0x4]
00003867(3): ADD RAX,RCX
0000386a(2): JMP RAX
00003870(3): XOR R10D,R10D
00003873(5): CMP byte ptr [RSP + 0xd],0x0
00003878(6): JNZ 0x0000366e
0000387e(2): NOP
00003880(5): MOV EDX,0x5c
00003885(5): MOV EBX,0x5c
0000388a(5): JMP 0x00003624
00003890(5): MOV EDX,0xc
00003895(3): XOR R10D,R10D
00003898(5): MOV EBX,0x66
0000389d(5): JMP 0x00003624
000038a8(5): MOV EDX,0xa
000038ad(3): XOR R10D,R10D
000038b0(5): MOV EBX,0x6e
000038b5(5): JMP 0x00003612
000038c0(5): MOV EBX,0x61
000038c5(5): JMP 0x00003690
000038d0(3): XOR R10D,R10D
000038d3(5): CMP dword ptr [RSP + 0x8],0x2
000038d8(3): SETZ DL
000038db(5): CMP byte ptr [RSP + 0xf],0x0
000038e0(6): JNZ 0x0000447a
000038e6(3): MOV EAX,R8D
000038e9(3): MOV RCX,R15
000038ec(3): XOR EAX,0x1
000038ef(2): AND AL,DL
000038f1(2): JZ 0x00003920
000038f3(3): CMP R13,R15
000038f6(2): JBE 0x000038fd
000038f8(5): MOV byte ptr [R14 + R15*0x1],0x27
000038fd(4): LEA RCX,[R15 + 0x1]
00003901(3): CMP R13,RCX
00003904(2): JBE 0x0000390c
00003906(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
0000390c(4): LEA RCX,[R15 + 0x2]
00003910(3): CMP R13,RCX
00003913(6): JA 0x00003f49
00003919(4): LEA RCX,[R15 + 0x3]
0000391d(3): MOV R8D,EAX
00003920(3): CMP R13,RCX
00003923(2): JBE 0x0000392a
00003925(5): MOV byte ptr [R14 + RCX*0x1],0x5c
0000392a(5): CMP dword ptr [RSP + 0x8],0x2
0000392f(4): LEA R15,[RCX + 0x1]
00003933(6): JZ 0x00003f39
00003939(4): LEA RAX,[RBP + 0x1]
0000393d(3): CMP RAX,R11
00003940(2): JNC 0x0000395b
00003942(5): MOV RAX,qword ptr [RSP + 0x10]
00003947(5): MOVZX EAX,byte ptr [RAX + RBP*0x1 + 0x1]
0000394c(4): MOV byte ptr [RSP + 0x28],AL
00003950(3): SUB EAX,0x30
00003953(2): CMP AL,0x9
00003955(6): JBE 0x00004189
0000395b(3): MOV EAX,R12D
0000395e(5): MOV EBX,0x30
00003963(3): XOR R12D,R12D
00003966(5): JMP 0x00003518
00003970(5): CMP dword ptr [RSP + 0x8],0x2
00003975(3): MOV R12D,R10D
00003978(3): SETZ DL
0000397b(3): XOR R10D,R10D
0000397e(2): XOR EAX,EAX
00003980(5): JMP 0x00003518
00003988(5): CMP dword ptr [RSP + 0x8],0x2
0000398d(3): SETZ DL
00003990(3): XOR R10D,R10D
00003993(5): JMP 0x00003758
000039a0(5): CMP dword ptr [RSP + 0x8],0x2
000039a5(3): SETZ DL
000039a8(3): XOR R10D,R10D
000039ab(3): XOR R12D,R12D
000039ae(5): JMP 0x00003761
000039b8(5): CMP dword ptr [RSP + 0x8],0x2
000039bd(3): MOV R12D,R10D
000039c0(5): MOV EBX,0x20
000039c5(3): SETZ DL
000039c8(3): XOR R10D,R10D
000039cb(5): JMP 0x00003761
000039d0(5): MOV EDX,0xd
000039d5(3): XOR R10D,R10D
000039d8(5): MOV EBX,0x72
000039dd(5): JMP 0x00003612
000039e8(5): MOV EBX,0x76
000039ed(5): JMP 0x00003690
000039f8(5): MOV EDX,0x9
000039fd(3): XOR R10D,R10D
00003a00(5): MOV EBX,0x74
00003a05(5): JMP 0x00003612
00003a10(5): MOV EBX,0x62
00003a15(5): JMP 0x00003690
00003a20(3): XOR R10D,R10D
00003a23(5): JMP 0x000034c0
00003a30(5): CMP byte ptr [RSP + 0xf],0x0
00003a35(6): JNZ 0x000043a0
00003a3b(4): ADD RBP,0x1
00003a3f(3): MOV EAX,R8D
00003a42(3): XOR R12D,R12D
00003a45(5): MOV EBX,0x5c
00003a4a(5): JMP 0x0000355c
00003a50(5): CMP dword ptr [RSP + 0x8],0x2
00003a55(5): MOVZX EBX,byte ptr [RSP + 0xf]
00003a5a(3): MOV R12D,R8D
00003a5d(3): MOV RBP,R11
00003a60(3): SETZ DL
00003a63(2): MOV EAX,EBX
00003a65(3): TEST R15,R15
00003a68(3): SETZ CL
00003a6b(2): AND EAX,EDX
00003a6d(2): AND AL,CL
00003a6f(6): JNZ 0x000044d6
00003a75(2): MOV EAX,EBX
00003a77(3): XOR EAX,0x1
00003a7a(2): AND DL,AL
00003a7c(6): JZ 0x000043ec
00003a82(5): CMP byte ptr [RSP + 0x7c],0x0
00003a87(6): JZ 0x000043ea
00003a8d(5): CMP byte ptr [RSP + 0xe],0x0
00003a92(6): JNZ 0x0000448d
00003a98(3): TEST R13,R13
00003a9b(3): SETZ AL
00003a9e(6): CMP qword ptr [RSP + 0x50],0x0
00003aa4(3): SETNZ DL
00003aa7(2): AND AL,DL
00003aa9(6): JZ 0x000044cc
00003aaf(5): MOV R13,qword ptr [RSP + 0x50]
00003ab4(7): LEA RBX,[0x146dd]
00003abb(4): MOV byte ptr [R14],0x27
00003abf(8): MOV dword ptr [RSP + 0x8],0x2
00003ac7(6): MOV R15D,0x1
00003acd(9): MOV qword ptr [RSP + 0x18],0x1
00003ad6(5): MOV byte ptr [RSP + 0xf],0x0
00003adb(5): MOV qword ptr [RSP + 0x48],RBX
00003ae0(4): MOV byte ptr [RSP + 0x7c],AL
00003ae4(5): JMP 0x000033c3
00003af0(5): CMP byte ptr [RSP + 0xf],0x0
00003af5(6): JNZ 0x000043a0
00003afb(3): TEST R13,R13
00003afe(6): JZ 0x00003f00
00003b04(2): XOR EDX,EDX
00003b06(6): CMP qword ptr [RSP + 0x50],0x0
00003b0c(6): JNZ 0x00003f00
00003b12(5): MOV qword ptr [RSP + 0x50],R13
00003b17(4): ADD R15,0x3
00003b1b(2): XOR EAX,EAX
00003b1d(5): MOV byte ptr [RSP + 0x7c],R12B
00003b22(3): XOR R8D,R8D
00003b25(3): MOV R13,RDX
00003b28(5): MOV EBX,0x27
00003b2d(5): JMP 0x00003549
00003b38(5): TEST byte ptr [RSP + 0x78],0x4
00003b3d(2): JZ 0x00003b60
00003b3f(4): LEA RCX,[RBP + 0x2]
00003b43(3): CMP RCX,R11
00003b46(2): JNC 0x00003b60
00003b48(5): MOV RAX,qword ptr [RSP + 0x10]
00003b4d(5): CMP byte ptr [RAX + RBP*0x1 + 0x1],0x3f
00003b52(6): JZ 0x000042e2
00003b58(8): NOP dword ptr [RAX + RAX*0x1]
00003b60(2): XOR EDX,EDX
00003b62(3): XOR R12D,R12D
00003b65(2): XOR EAX,EAX
00003b67(5): MOV EBX,0x3f
00003b6c(5): JMP 0x00003518
00003b78(5): CMP byte ptr [RSP + 0xf],0x0
00003b7d(6): JNZ 0x000043a0
00003b83(3): XOR R12D,R12D
00003b86(2): XOR EAX,EAX
00003b88(5): MOV EBX,0x3f
00003b8d(5): JMP 0x00003549
00003b98(8): LEA RAX,[0xa0 + RSP]
00003ba0(4): CMP R11,-0x1
00003ba4(12): MOV qword ptr [0xa0 + RSP],0x0
00003bb0(5): MOV qword ptr [RSP + 0x28],RAX
00003bb5(2): JNZ 0x00003be4
00003bb7(5): MOV RDI,qword ptr [RSP + 0x10]
00003bbc(5): MOV byte ptr [RSP + 0x40],R8B
00003bc1(5): MOV byte ptr [RSP + 0x38],R10B
00003bc6(5): MOV qword ptr [RSP + 0x30],R9
00003bcb(5): CALL 0x00001980
00003bd0(6): MOVZX R8D,byte ptr [RSP + 0x40]
00003bd6(6): MOVZX R10D,byte ptr [RSP + 0x38]
00003bdc(3): MOV R11,RAX
00003bdf(5): MOV R9,qword ptr [RSP + 0x30]
00003be4(8): LEA RAX,[0x9c + RSP]
00003bec(2): XOR ECX,ECX
00003bee(4): MOV byte ptr [RSP + 0x7e],BL
00003bf2(5): MOV byte ptr [RSP + 0x7d],R8B
00003bf7(3): MOV RBX,RCX
00003bfa(8): MOV qword ptr [0x88 + RSP],R9
00003c02(5): MOV qword ptr [RSP + 0x38],RAX
00003c07(5): MOV byte ptr [RSP + 0x7f],R10B
00003c0c(8): MOV qword ptr [0x80 + RSP],R15
00003c14(5): MOV qword ptr [RSP + 0x40],R14
00003c19(5): MOV qword ptr [RSP + 0x70],R13
00003c1e(5): MOV qword ptr [RSP + 0x30],R11
00003c23(5): MOV RAX,qword ptr [RSP + 0x10]
00003c28(5): LEA R14,[RBP + RBX*0x1]
00003c2d(5): MOV RDX,qword ptr [RSP + 0x30]
00003c32(5): MOV RCX,qword ptr [RSP + 0x28]
00003c37(5): MOV RDI,qword ptr [RSP + 0x38]
00003c3c(4): LEA R13,[RAX + R14*0x1]
00003c40(3): SUB RDX,R14
00003c43(3): MOV RSI,R13
00003c46(5): CALL 0x00005880
00003c4b(3): TEST RAX,RAX
00003c4e(3): MOV R15,RAX
00003c51(2): JZ 0x00003ca1
00003c53(4): CMP RAX,-0x1
00003c57(6): JZ 0x00004275
00003c5d(4): CMP RAX,-0x2
00003c61(6): JZ 0x00004201
00003c67(5): CMP dword ptr [RSP + 0x8],0x2
00003c6c(3): SETZ AL
00003c6f(4): AND AL,byte ptr [RSP + 0xf]
00003c73(6): JNZ 0x00003e10
00003c79(7): MOV EDI,dword ptr [0x9c + RSP]
00003c80(5): CALL 0x00001c50
00003c85(5): MOV RDI,qword ptr [RSP + 0x28]
00003c8a(2): TEST EAX,EAX
00003c8c(5): MOV EAX,0x0
00003c91(4): CMOVZ R12D,EAX
00003c95(3): ADD RBX,R15
00003c98(5): CALL 0x00001c40
00003c9d(2): TEST EAX,EAX
00003c9f(2): JZ 0x00003c23
00003ca1(3): MOV EDX,R12D
00003ca4(3): MOV RDI,RBX
00003ca7(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00003cad(3): XOR EDX,0x1
00003cb0(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00003cb5(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00003cbb(4): AND DL,byte ptr [RSP + 0xd]
00003cbf(8): MOV R15,qword ptr [0x80 + RSP]
00003cc7(5): MOV R14,qword ptr [RSP + 0x40]
00003ccc(5): MOV R13,qword ptr [RSP + 0x70]
00003cd1(5): MOV R11,qword ptr [RSP + 0x30]
00003cd6(4): CMP RDI,0x1
00003cda(6): JBE 0x000042db
00003ce0(3): MOV RCX,RDI
00003ce3(2): XOR ESI,ESI
00003ce5(6): MOVZX R9D,byte ptr [RSP + 0xf]
00003ceb(3): ADD RCX,RBP
00003cee(5): MOV RDI,qword ptr [RSP + 0x10]
00003cf3(5): JMP 0x00003dae
00003d00(5): CMP dword ptr [RSP + 0x8],0x2
00003d05(3): SETZ AL
00003d08(3): TEST R9B,R9B
00003d0b(6): JNZ 0x000041c0
00003d11(3): MOV ESI,R8D
00003d14(3): XOR ESI,0x1
00003d17(3): AND AL,SIL
00003d1a(2): JZ 0x00003d4b
00003d1c(3): CMP R13,R15
00003d1f(2): JBE 0x00003d26
00003d21(5): MOV byte ptr [R14 + R15*0x1],0x27
00003d26(4): LEA RSI,[R15 + 0x1]
00003d2a(3): CMP R13,RSI
00003d2d(2): JBE 0x00003d35
00003d2f(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x24
00003d35(4): LEA RSI,[R15 + 0x2]
00003d39(3): CMP R13,RSI
00003d3c(2): JBE 0x00003d44
00003d3e(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00003d44(4): ADD R15,0x3
00003d48(3): MOV R8D,EAX
00003d4b(3): CMP R13,R15
00003d4e(2): JBE 0x00003d55
00003d50(5): MOV byte ptr [R14 + R15*0x1],0x5c
00003d55(4): LEA RAX,[R15 + 0x1]
00003d59(3): CMP R13,RAX
00003d5c(2): JBE 0x00003d6b
00003d5e(2): MOV EAX,EBX
00003d60(3): SHR AL,0x6
00003d63(3): ADD EAX,0x30
00003d66(5): MOV byte ptr [R14 + R15*0x1 + 0x1],AL
00003d6b(4): LEA RAX,[R15 + 0x2]
00003d6f(3): CMP R13,RAX
00003d72(2): JBE 0x00003d84
00003d74(2): MOV EAX,EBX
00003d76(3): SHR AL,0x3
00003d79(3): AND EAX,0x7
00003d7c(3): ADD EAX,0x30
00003d7f(5): MOV byte ptr [R14 + R15*0x1 + 0x2],AL
00003d84(3): AND EBX,0x7
00003d87(4): ADD RBP,0x1
00003d8b(4): ADD R15,0x3
00003d8f(3): ADD EBX,0x30
00003d92(3): CMP RBP,RCX
00003d95(6): JNC 0x00003580
00003d9b(2): MOV ESI,EDX
00003d9d(3): CMP R13,R15
00003da0(2): JBE 0x00003da6
00003da2(4): MOV byte ptr [R14 + R15*0x1],BL
00003da6(4): MOVZX EBX,byte ptr [RDI + RBP*0x1]
00003daa(4): ADD R15,0x1
00003dae(2): TEST DL,DL
00003db0(6): JNZ 0x00003d00
00003db6(2): MOV EAX,ESI
00003db8(3): XOR EAX,0x1
00003dbb(3): AND EAX,R8D
00003dbe(3): TEST R10B,R10B
00003dc1(2): JZ 0x00003dd1
00003dc3(3): CMP R13,R15
00003dc6(2): JBE 0x00003dcd
00003dc8(5): MOV byte ptr [R14 + R15*0x1],0x5c
00003dcd(4): ADD R15,0x1
00003dd1(4): ADD RBP,0x1
00003dd5(3): CMP RBP,RCX
00003dd8(6): JNC 0x0000355c
00003dde(2): TEST AL,AL
00003de0(6): JZ 0x000041de
00003de6(3): CMP R13,R15
00003de9(2): JBE 0x00003df0
00003deb(5): MOV byte ptr [R14 + R15*0x1],0x27
00003df0(4): LEA RAX,[R15 + 0x1]
00003df4(3): CMP R13,RAX
00003df7(2): JBE 0x00003dff
00003df9(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x27
00003dff(4): ADD R15,0x2
00003e03(3): XOR R10D,R10D
00003e06(3): XOR R8D,R8D
00003e09(2): JMP 0x00003d9d
00003e10(4): CMP R15,0x1
00003e14(6): JZ 0x00003c79
00003e1a(5): MOV RDI,qword ptr [RSP + 0x10]
00003e1f(4): LEA RCX,[RDI + R15*0x1]
00003e23(5): LEA RDX,[RDI + R14*0x1 + 0x1]
00003e28(4): LEA R8,[RCX + R14*0x1]
00003e2c(2): JMP 0x00003e3d
00003e30(4): ADD RDX,0x1
00003e34(3): CMP R8,RDX
00003e37(6): JZ 0x00003c79
00003e3d(3): MOVZX ECX,byte ptr [RDX]
00003e40(3): SUB ECX,0x5b
00003e43(3): CMP CL,0x21
00003e46(2): JA 0x00003e30
00003e48(5): MOV ESI,0x1
00003e4d(3): SHL RSI,CL
00003e50(3): MOV RCX,RSI
00003e53(10): MOV RSI,0x20000002b
00003e5d(3): TEST RCX,RSI
00003e60(2): JZ 0x00003e30
00003e62(5): MOV R14,qword ptr [RSP + 0x40]
00003e67(5): MOV R13,qword ptr [RSP + 0x70]
00003e6c(5): MOV RBP,qword ptr [RSP + 0x30]
00003e71(8): MOV dword ptr [RSP + 0x8],0x2
00003e79(5): CMP byte ptr [RSP + 0xd],0x0
00003e7e(2): JZ 0x00003e90
00003e80(2): TEST AL,AL
00003e82(5): MOV EAX,0x4
00003e87(5): CMOVZ EAX,dword ptr [RSP + 0x8]
00003e8c(4): MOV dword ptr [RSP + 0x8],EAX
00003e90(4): SUB RSP,0x8
00003e94(3): MOV RCX,RBP
00003e97(3): MOV RSI,R13
00003e9a(4): PUSH qword ptr [RSP + 0x68]
00003e9e(4): PUSH qword ptr [RSP + 0x78]
00003ea2(3): MOV RDI,R14
00003ea5(2): PUSH 0x0
00003ea7(8): MOV R9D,dword ptr [0x98 + RSP]
00003eaf(5): MOV R8D,dword ptr [RSP + 0x28]
00003eb4(5): MOV RDX,qword ptr [RSP + 0x30]
00003eb9(4): AND R9D,0xfffffffd
00003ebd(5): CALL 0x000032f0
00003ec2(4): ADD RSP,0x20
00003ec6(3): MOV R15,RAX
00003ec9(8): MOV RBX,qword ptr [0xa8 + RSP]
00003ed1(9): XOR RBX,qword ptr FS:[0x28]
00003eda(3): MOV RAX,R15
00003edd(6): JNZ 0x000044e3
00003ee3(7): ADD RSP,0xb8
00003eea(1): POP RBX
00003eeb(1): POP RBP
00003eec(2): POP R12
00003eee(2): POP R13
00003ef0(2): POP R14
00003ef2(2): POP R15
00003ef4(1): RET
00003ef8(3): MOV RBP,R11
00003efb(5): JMP 0x00003e79
00003f00(3): CMP R13,R15
00003f03(2): JBE 0x00003f0a
00003f05(5): MOV byte ptr [R14 + R15*0x1],0x27
00003f0a(4): LEA RAX,[R15 + 0x1]
00003f0e(3): CMP R13,RAX
00003f11(2): JBE 0x00003f19
00003f13(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x5c
00003f19(4): LEA RAX,[R15 + 0x2]
00003f1d(3): CMP R13,RAX
00003f20(6): JBE 0x00004512
00003f26(3): MOV RDX,R13
00003f29(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00003f2f(5): MOV R13,qword ptr [RSP + 0x50]
00003f34(5): JMP 0x00003b12
00003f39(3): MOV EAX,R12D
00003f3c(5): MOV EBX,0x30
00003f41(3): XOR R12D,R12D
00003f44(5): JMP 0x00003549
00003f49(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x27
00003f4f(5): JMP 0x00003919
00003f54(2): TEST EBX,EBX
00003f56(6): JNZ 0x00003383
00003f5c(5): MOV byte ptr [RSP + 0xd],0x1
00003f61(3): TEST R13,R13
00003f64(6): JNZ 0x000044fa
00003f6a(7): LEA RAX,[0x146dd]
00003f71(9): MOV qword ptr [RSP + 0x50],0x0
00003f7a(5): MOV byte ptr [RSP + 0xe],0x1
00003f7f(5): MOV byte ptr [RSP + 0x7c],0x0
00003f84(3): XOR R12D,R12D
00003f87(5): MOV byte ptr [RSP + 0xf],0x0
00003f8c(9): MOV qword ptr [RSP + 0x18],0x1
00003f95(5): MOV qword ptr [RSP + 0x48],RAX
00003f9a(6): MOV R15D,0x1
00003fa0(8): MOV dword ptr [RSP + 0x8],0x2
00003fa8(5): JMP 0x000033c3
00003fb0(2): TEST EBX,EBX
00003fb2(6): JNZ 0x000043ad
00003fb8(3): TEST R13,R13
00003fbb(6): JZ 0x000041e6
00003fc1(4): MOV byte ptr [R14],0x22
00003fc5(5): MOV byte ptr [RSP + 0xe],0x1
00003fca(3): XOR R12D,R12D
00003fcd(5): MOV byte ptr [RSP + 0x7c],0x0
00003fd2(9): MOV qword ptr [RSP + 0x50],0x0
00003fdb(7): LEA RAX,[0x146db]
00003fe2(5): MOV byte ptr [RSP + 0xf],0x0
00003fe7(5): MOV byte ptr [RSP + 0xd],0x1
00003fec(9): MOV qword ptr [RSP + 0x18],0x1
00003ff5(6): MOV R15D,0x1
00003ffb(5): MOV qword ptr [RSP + 0x48],RAX
00004000(5): JMP 0x000033c3
00004005(7): LEA RAX,[0x146db]
0000400c(5): MOV byte ptr [RSP + 0xe],0x1
00004011(5): MOV byte ptr [RSP + 0x7c],0x0
00004016(3): XOR R12D,R12D
00004019(9): MOV qword ptr [RSP + 0x50],0x0
00004022(5): MOV byte ptr [RSP + 0xf],0x1
00004027(5): MOV byte ptr [RSP + 0xd],0x1
0000402c(9): MOV qword ptr [RSP + 0x18],0x1
00004035(3): XOR R15D,R15D
00004038(5): MOV qword ptr [RSP + 0x48],RAX
0000403d(8): MOV dword ptr [RSP + 0x8],0x5
00004045(5): JMP 0x000033c3
0000404a(5): MOV byte ptr [RSP + 0xe],0x1
0000404f(5): MOV byte ptr [RSP + 0x7c],0x0
00004054(3): XOR R12D,R12D
00004057(9): MOV qword ptr [RSP + 0x50],0x0
00004060(5): MOV byte ptr [RSP + 0xf],0x0
00004065(3): XOR R15D,R15D
00004068(5): MOV byte ptr [RSP + 0xd],0x1
0000406d(9): MOV qword ptr [RSP + 0x18],0x0
00004076(9): MOV qword ptr [RSP + 0x48],0x0
0000407f(5): JMP 0x000033c3
00004084(5): CMP dword ptr [RSP + 0x8],0xa
00004089(2): JZ 0x000040e1
0000408b(7): LEA RSI,[0x146df]
00004092(2): XOR EDI,EDI
00004094(5): MOV EDX,0x5
00004099(5): CALL 0x00001960
0000409e(3): MOV RCX,RAX
000040a1(5): MOV qword ptr [RSP + 0x68],RAX
000040a6(7): LEA RAX,[0x146df]
000040ad(3): CMP RCX,RAX
000040b0(6): JZ 0x0000444e
000040b6(7): LEA RSI,[0x146dd]
000040bd(2): XOR EDI,EDI
000040bf(5): MOV EDX,0x5
000040c4(5): CALL 0x00001960
000040c9(3): MOV RCX,RAX
000040cc(5): MOV qword ptr [RSP + 0x60],RAX
000040d1(7): LEA RAX,[0x146dd]
000040d8(3): CMP RCX,RAX
000040db(6): JZ 0x00004464
000040e1(3): XOR R15D,R15D
000040e4(2): TEST EBX,EBX
000040e6(6): JZ 0x000042ad
000040ec(2): TEST EBX,EBX
000040ee(5): MOV RBX,qword ptr [RSP + 0x60]
000040f3(5): SETNZ byte ptr [RSP + 0xf]
000040f8(3): XOR R12D,R12D
000040fb(3): MOV RDI,RBX
000040fe(5): CALL 0x00001980
00004103(5): MOV qword ptr [RSP + 0x48],RBX
00004108(5): MOV qword ptr [RSP + 0x18],RAX
0000410d(5): MOV byte ptr [RSP + 0xe],0x1
00004112(5): MOV byte ptr [RSP + 0x7c],0x0
00004117(9): MOV qword ptr [RSP + 0x50],0x0
00004120(5): MOV byte ptr [RSP + 0xd],0x1
00004125(5): JMP 0x000033c3
0000412a(5): MOV byte ptr [RSP + 0xe],0x1
0000412f(5): MOV byte ptr [RSP + 0x7c],0x0
00004134(3): XOR R12D,R12D
00004137(9): MOV qword ptr [RSP + 0x50],0x0
00004140(5): MOV byte ptr [RSP + 0xf],0x0
00004145(3): XOR R15D,R15D
00004148(5): MOV byte ptr [RSP + 0xd],0x0
0000414d(9): MOV qword ptr [RSP + 0x18],0x0
00004156(9): MOV qword ptr [RSP + 0x48],0x0
0000415f(5): JMP 0x000033c3
00004164(5): MOV byte ptr [RSP + 0xe],0x1
00004169(5): MOV byte ptr [RSP + 0x7c],0x0
0000416e(3): XOR R12D,R12D
00004171(9): MOV qword ptr [RSP + 0x50],0x0
0000417a(5): MOV byte ptr [RSP + 0xf],0x1
0000417f(5): MOV byte ptr [RSP + 0xd],0x1
00004184(5): JMP 0x000033a3
00004189(3): CMP R13,R15
0000418c(2): JBE 0x00004193
0000418e(5): MOV byte ptr [R14 + R15*0x1],0x30
00004193(4): LEA RAX,[RCX + 0x2]
00004197(3): CMP R13,RAX
0000419a(2): JBE 0x000041a2
0000419c(6): MOV byte ptr [R14 + RCX*0x1 + 0x2],0x30
000041a2(3): MOV EAX,R12D
000041a5(4): LEA R15,[RCX + 0x3]
000041a9(3): XOR R12D,R12D
000041ac(5): MOV EBX,0x30
000041b1(5): JMP 0x00003518
000041c0(5): MOVZX EBX,byte ptr [RSP + 0xf]
000041c5(3): MOV RBP,R11
000041c8(4): MOV byte ptr [RSP + 0xd],BL
000041cc(5): JMP 0x00003e79
000041d1(5): MOVZX EDX,byte ptr [RSP + 0xd]
000041d6(3): XOR R12D,R12D
000041d9(5): JMP 0x00003ce0
000041de(3): XOR R10D,R10D
000041e1(5): JMP 0x00003d9d
000041e6(9): MOV qword ptr [RSP + 0x50],0x0
000041ef(5): MOV byte ptr [RSP + 0xe],0x1
000041f4(3): XOR R12D,R12D
000041f7(5): MOV byte ptr [RSP + 0x7c],0x0
000041fc(5): JMP 0x00003fdb
00004201(5): MOV R11,qword ptr [RSP + 0x30]
00004206(3): MOV RSI,R14
00004209(3): MOV RCX,R13
0000420c(3): MOV RAX,RBX
0000420f(3): MOV RDI,RBX
00004212(6): MOVZX R8D,byte ptr [RSP + 0x7d]
00004218(5): MOVZX EBX,byte ptr [RSP + 0x7e]
0000421d(8): MOV R9,qword ptr [0x88 + RSP]
00004225(3): CMP RSI,R11
00004228(6): MOVZX R10D,byte ptr [RSP + 0x7f]
0000422e(8): MOV R15,qword ptr [0x80 + RSP]
00004236(5): MOV R14,qword ptr [RSP + 0x40]
0000423b(5): MOV R13,qword ptr [RSP + 0x70]
00004240(2): JNC 0x00004268
00004242(3): CMP byte ptr [RCX],0x0
00004245(2): JNZ 0x00004257
00004247(2): JMP 0x00004268
00004250(5): CMP byte ptr [R9 + RAX*0x1],0x0
00004255(2): JZ 0x00004265
00004257(4): ADD RAX,0x1
0000425b(5): LEA RDX,[RBP + RAX*0x1]
00004260(3): CMP R11,RDX
00004263(2): JA 0x00004250
00004265(3): MOV RDI,RAX
00004268(5): MOVZX EDX,byte ptr [RSP + 0xd]
0000426d(3): XOR R12D,R12D
00004270(5): JMP 0x00003cd6
00004275(3): MOV RDI,RBX
00004278(6): MOVZX R8D,byte ptr [RSP + 0x7d]
0000427e(5): MOVZX EBX,byte ptr [RSP + 0x7e]
00004283(6): MOVZX R10D,byte ptr [RSP + 0x7f]
00004289(8): MOV R15,qword ptr [0x80 + RSP]
00004291(3): XOR R12D,R12D
00004294(5): MOV R14,qword ptr [RSP + 0x40]
00004299(5): MOV R13,qword ptr [RSP + 0x70]
0000429e(5): MOV R11,qword ptr [RSP + 0x30]
000042a3(5): MOVZX EDX,byte ptr [RSP + 0xd]
000042a8(5): JMP 0x00003cd6
000042ad(5): MOV RDX,qword ptr [RSP + 0x68]
000042b2(3): MOVZX EAX,byte ptr [RDX]
000042b5(2): TEST AL,AL
000042b7(6): JZ 0x000040ec
000042bd(3): NOP dword ptr [RAX]
000042c0(3): CMP R13,R15
000042c3(2): JBE 0x000042c9
000042c5(4): MOV byte ptr [R14 + R15*0x1],AL
000042c9(4): ADD R15,0x1
000042cd(5): MOVZX EAX,byte ptr [RDX + R15*0x1]
000042d2(2): TEST AL,AL
000042d4(2): JNZ 0x000042c0
000042d6(5): JMP 0x000040ec
000042db(2): MOV EAX,EDX
000042dd(5): JMP 0x00003837
000042e2(4): MOVZX EBX,byte ptr [RAX + RCX*0x1]
000042e6(3): CMP BL,0x3e
000042e9(6): JA 0x00003b60
000042ef(10): MOV RAX,0x7000a38200000000
000042f9(4): BT RAX,RBX
000042fd(6): JNC 0x00003b60
00004303(5): CMP byte ptr [RSP + 0xf],0x0
00004308(6): JNZ 0x000044f2
0000430e(3): CMP R13,R15
00004311(2): JBE 0x00004318
00004313(5): MOV byte ptr [R14 + R15*0x1],0x3f
00004318(4): LEA RAX,[R15 + 0x1]
0000431c(3): CMP R13,RAX
0000431f(2): JBE 0x00004327
00004321(6): MOV byte ptr [R14 + R15*0x1 + 0x1],0x22
00004327(4): LEA RAX,[R15 + 0x2]
0000432b(3): CMP R13,RAX
0000432e(2): JBE 0x00004336
00004330(6): MOV byte ptr [R14 + R15*0x1 + 0x2],0x22
00004336(4): LEA RAX,[R15 + 0x3]
0000433a(3): CMP R13,RAX
0000433d(2): JBE 0x00004345
0000433f(6): MOV byte ptr [R14 + R15*0x1 + 0x3],0x3f
00004345(4): ADD R15,0x4
00004349(2): XOR EDX,EDX
0000434b(3): XOR R12D,R12D
0000434e(2): XOR EAX,EAX
00004350(3): MOV RBP,RCX
00004353(5): JMP 0x00003518
00004358(2): TEST EBX,EBX
0000435a(6): JZ 0x000044e8
00004360(7): LEA RAX,[0x146dd]
00004367(5): MOV byte ptr [RSP + 0xe],0x1
0000436c(5): MOV byte ptr [RSP + 0x7c],0x0
00004371(3): XOR R12D,R12D
00004374(9): MOV qword ptr [RSP + 0x50],0x0
0000437d(5): MOV byte ptr [RSP + 0xf],0x1
00004382(5): MOV byte ptr [RSP + 0xd],0x0
00004387(9): MOV qword ptr [RSP + 0x18],0x1
00004390(3): XOR R15D,R15D
00004393(5): MOV qword ptr [RSP + 0x48],RAX
00004398(5): JMP 0x000033c3
000043a0(3): MOV RBP,R11
000043a3(5): MOVZX EAX,byte ptr [RSP + 0xf]
000043a8(5): JMP 0x00003e79
000043ad(7): LEA RAX,[0x146db]
000043b4(5): MOV byte ptr [RSP + 0xe],0x1
000043b9(5): MOV byte ptr [RSP + 0x7c],0x0
000043be(3): XOR R12D,R12D
000043c1(9): MOV qword ptr [RSP + 0x50],0x0
000043ca(5): MOV byte ptr [RSP + 0xf],0x1
000043cf(5): MOV byte ptr [RSP + 0xd],0x1
000043d4(9): MOV qword ptr [RSP + 0x18],0x1
000043dd(3): XOR R15D,R15D
000043e0(5): MOV qword ptr [RSP + 0x48],RAX
000043e5(5): JMP 0x000033c3
000043ea(2): MOV EAX,EDX
000043ec(5): MOV RBX,qword ptr [RSP + 0x48]
000043f1(3): TEST RBX,RBX
000043f4(2): JZ 0x00004422
000043f6(2): TEST AL,AL
000043f8(2): JZ 0x00004422
000043fa(3): MOVZX ECX,byte ptr [RBX]
000043fd(3): MOV RAX,RBX
00004400(2): TEST CL,CL
00004402(2): JZ 0x00004422
00004404(3): MOV RDX,R15
00004407(3): SUB RAX,R15
0000440a(3): CMP R13,RDX
0000440d(2): JBE 0x00004413
0000440f(4): MOV byte ptr [R14 + RDX*0x1],CL
00004413(4): ADD RDX,0x1
00004417(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
0000441b(2): TEST CL,CL
0000441d(2): JNZ 0x0000440a
0000441f(3): MOV R15,RDX
00004422(3): CMP R13,R15
00004425(6): JBE 0x00003ec9
0000442b(5): MOV byte ptr [R14 + R15*0x1],0x0
00004430(5): JMP 0x00003ec9
00004435(5): CMP dword ptr [RSP + 0x8],0x2
0000443a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000443f(3): MOV RBP,R11
00004442(3): SETZ AL
00004445(4): MOV byte ptr [RSP + 0xd],BL
00004449(5): JMP 0x00003e79
0000444e(4): MOV ESI,dword ptr [RSP + 0x8]
00004452(3): MOV RDI,RCX
00004455(5): CALL 0x00003200
0000445a(5): MOV qword ptr [RSP + 0x68],RAX
0000445f(5): JMP 0x000040b6
00004464(4): MOV ESI,dword ptr [RSP + 0x8]
00004468(3): MOV RDI,RCX
0000446b(5): CALL 0x00003200
00004470(5): MOV qword ptr [RSP + 0x60],RAX
00004475(5): JMP 0x000040e1
0000447a(5): MOVZX EBX,byte ptr [RSP + 0xf]
0000447f(3): MOV RBP,R11
00004482(2): MOV EAX,EDX
00004484(4): MOV byte ptr [RSP + 0xd],BL
00004488(5): JMP 0x00003e79
0000448d(4): SUB RSP,0x8
00004491(6): MOV R8D,0x5
00004497(3): MOV RCX,R11
0000449a(4): PUSH qword ptr [RSP + 0x68]
0000449e(4): PUSH qword ptr [RSP + 0x78]
000044a2(3): MOV RDI,R14
000044a5(4): PUSH qword ptr [RSP + 0x38]
000044a9(8): MOV R9D,dword ptr [0x98 + RSP]
000044b1(5): MOV RDX,qword ptr [RSP + 0x30]
000044b6(5): MOV RSI,qword ptr [RSP + 0x70]
000044bb(5): CALL 0x000032f0
000044c0(4): ADD RSP,0x20
000044c4(3): MOV R15,RAX
000044c7(5): JMP 0x00003ec9
000044cc(5): MOVZX EAX,byte ptr [RSP + 0x7c]
000044d1(5): JMP 0x000043ec
000044d6(8): MOV dword ptr [RSP + 0x8],0x2
000044de(5): JMP 0x00003e79
000044e3(5): CALL 0x00001990
000044e8(5): MOV byte ptr [RSP + 0xd],0x0
000044ed(5): JMP 0x00003f61
000044f2(3): MOV RBP,R11
000044f5(5): JMP 0x00003e90
000044fa(5): MOV byte ptr [RSP + 0xe],0x1
000044ff(2): XOR EAX,EAX
00004501(3): XOR R12D,R12D
00004504(9): MOV qword ptr [RSP + 0x50],0x0
0000450d(5): JMP 0x00003ab4
00004512(3): MOV RDX,R13
00004515(5): MOV R13,qword ptr [RSP + 0x50]
0000451a(5): JMP 0x00003b12
0000451f(5): CALL 0x00001890
00004524(2): NOP
00004526(10): NOP word ptr CS:[RAX + RAX*0x1]
00004530(2): PUSH R15
00004532(2): PUSH R14
00004534(3): MOVSXD R15,EDI
00004537(2): PUSH R13
00004539(2): PUSH R12
0000453b(3): MOV R14,RDX
0000453e(1): PUSH RBP
0000453f(1): PUSH RBX
00004540(3): MOV RBP,RCX
00004543(4): SUB RSP,0x28
00004547(5): MOV qword ptr [RSP + 0x8],RSI
0000454c(5): CALL 0x000018a0
00004551(3): MOV R13,RAX
00004554(2): MOV EAX,dword ptr [RAX]
00004556(3): TEST R15D,R15D
00004559(7): MOV RBX,qword ptr [0x00219060]
00004560(4): MOV dword ptr [RSP + 0x18],EAX
00004564(6): JS 0x000046d1
0000456a(7): CMP dword ptr [0x00219058],R15D
00004571(2): JG 0x000045d5
00004573(7): CMP R15D,0x7fffffff
0000457a(6): JZ 0x000046d6
00004580(4): LEA R12D,[R15 + 0x1]
00004584(7): LEA RAX,[0x219070]
0000458b(3): MOVSXD RSI,R12D
0000458e(4): SHL RSI,0x4
00004592(3): CMP RBX,RAX
00004595(6): JZ 0x000046b0
0000459b(3): MOV RDI,RBX
0000459e(5): CALL 0x000055f0
000045a3(3): MOV RBX,RAX
000045a6(7): MOV qword ptr [0x00219060],RAX
000045ad(7): MOVSXD RDI,dword ptr [0x00219058]
000045b4(3): MOV EDX,R12D
000045b7(2): XOR ESI,ESI
000045b9(2): SUB EDX,EDI
000045bb(4): SHL RDI,0x4
000045bf(3): MOVSXD RDX,EDX
000045c2(3): ADD RDI,RBX
000045c5(4): SHL RDX,0x4
000045c9(5): CALL 0x00001a10
000045ce(7): MOV dword ptr [0x00219058],R12D
000045d5(3): MOV EAX,dword ptr [RBP + 0x4]
000045d8(4): SHL R15,0x4
000045dc(4): SUB RSP,0x8
000045e0(3): ADD RBX,R15
000045e3(4): LEA R15,[RBP + 0x8]
000045e7(4): MOV R8D,dword ptr [RBP]
000045eb(3): MOV R11,qword ptr [RBX]
000045ee(4): MOV R12,qword ptr [RBX + 0x8]
000045f2(3): MOV RCX,R14
000045f5(3): OR EAX,0x1
000045f8(4): MOV dword ptr [RSP + 0x24],EAX
000045fc(3): PUSH qword ptr [RBP + 0x30]
000045ff(3): MOV R9D,EAX
00004602(3): PUSH qword ptr [RBP + 0x28]
00004605(2): PUSH R15
00004607(3): MOV RSI,R11
0000460a(5): MOV RDX,qword ptr [RSP + 0x28]
0000460f(3): MOV RDI,R12
00004612(5): MOV qword ptr [RSP + 0x30],R11
00004617(5): CALL 0x000032f0
0000461c(4): ADD RSP,0x20
00004620(5): MOV R11,qword ptr [RSP + 0x10]
00004625(3): CMP R11,RAX
00004628(2): JA 0x00004691
0000462a(4): LEA RSI,[RAX + 0x1]
0000462e(7): LEA RAX,[0x21b2c0]
00004635(3): CMP R12,RAX
00004638(3): MOV qword ptr [RBX],RSI
0000463b(2): JZ 0x0000464f
0000463d(3): MOV RDI,R12
00004640(5): MOV qword ptr [RSP + 0x10],RSI
00004645(5): CALL 0x00001880
0000464a(5): MOV RSI,qword ptr [RSP + 0x10]
0000464f(3): MOV RDI,RSI
00004652(5): MOV qword ptr [RSP + 0x10],RSI
00004657(5): CALL 0x00005590
0000465c(4): SUB RSP,0x8
00004660(4): MOV qword ptr [RBX + 0x8],RAX
00004664(4): MOV R8D,dword ptr [RBP]
00004668(3): PUSH qword ptr [RBP + 0x30]
0000466b(3): PUSH qword ptr [RBP + 0x28]
0000466e(3): MOV RCX,R14
00004671(2): PUSH R15
00004673(5): MOV R9D,dword ptr [RSP + 0x3c]
00004678(3): MOV RDI,RAX
0000467b(5): MOV RDX,qword ptr [RSP + 0x28]
00004680(5): MOV RSI,qword ptr [RSP + 0x30]
00004685(3): MOV R12,RAX
00004688(5): CALL 0x000032f0
0000468d(4): ADD RSP,0x20
00004691(4): MOV EAX,dword ptr [RSP + 0x18]
00004695(4): MOV dword ptr [R13],EAX
00004699(4): ADD RSP,0x28
0000469d(3): MOV RAX,R12
000046a0(1): POP RBX
000046a1(1): POP RBP
000046a2(2): POP R12
000046a4(2): POP R13
000046a6(2): POP R14
000046a8(2): POP R15
000046aa(1): RET
000046b0(2): XOR EDI,EDI
000046b2(5): CALL 0x000055f0
000046b7(8): MOVDQA XMM0,xmmword ptr [0x00219070]
000046bf(3): MOV RBX,RAX
000046c2(7): MOV qword ptr [0x00219060],RAX
000046c9(3): MOVUPS xmmword ptr [RAX],XMM0
000046cc(5): JMP 0x000045ad
000046d1(5): CALL 0x00001890
000046d6(5): CALL 0x000057e0
000046db(5): NOP dword ptr [RAX + RAX*0x1]
000046e0(2): PUSH R12
000046e2(1): PUSH RBP
000046e3(1): PUSH RBX
000046e4(3): MOV RBX,RDI
000046e7(5): CALL 0x000018a0
000046ec(3): MOV R12D,dword ptr [RAX]
000046ef(3): MOV RBP,RAX
000046f2(7): LEA RAX,[0x21b3c0]
000046f9(3): TEST RBX,RBX
000046fc(5): MOV ESI,0x38
00004701(4): CMOVZ RBX,RAX
00004705(3): MOV RDI,RBX
00004708(5): CALL 0x00005790
0000470d(4): MOV dword ptr [RBP],R12D
00004711(1): POP RBX
00004712(1): POP RBP
00004713(2): POP R12
00004715(1): RET
00004720(7): LEA RAX,[0x21b3c0]
00004727(3): TEST RDI,RDI
0000472a(4): CMOVZ RDI,RAX
0000472e(2): MOV EAX,dword ptr [RDI]
00004730(1): RET
00004740(7): LEA RAX,[0x21b3c0]
00004747(3): TEST RDI,RDI
0000474a(4): CMOVZ RDI,RAX
0000474e(2): MOV dword ptr [RDI],ESI
00004750(1): RET
00004760(7): LEA RAX,[0x21b3c0]
00004767(3): TEST RDI,RDI
0000476a(2): MOV ECX,ESI
0000476c(4): CMOVZ RDI,RAX
00004770(2): MOV EAX,ESI
00004772(3): AND ECX,0x1f
00004775(3): SHR AL,0x5
00004778(3): MOVZX EAX,AL
0000477b(5): LEA RDI,[RDI + RAX*0x4 + 0x8]
00004780(2): MOV ESI,dword ptr [RDI]
00004782(2): MOV EAX,ESI
00004784(2): SHR EAX,CL
00004786(2): XOR EDX,EAX
00004788(3): AND EAX,0x1
0000478b(3): AND EDX,0x1
0000478e(2): SHL EDX,CL
00004790(2): XOR EDX,ESI
00004792(2): MOV dword ptr [RDI],EDX
00004794(1): RET
000047a0(7): LEA RAX,[0x21b3c0]
000047a7(3): TEST RDI,RDI
000047aa(4): CMOVZ RDI,RAX
000047ae(3): MOV EAX,dword ptr [RDI + 0x4]
000047b1(3): MOV dword ptr [RDI + 0x4],ESI
000047b4(1): RET
000047c0(7): LEA RAX,[0x21b3c0]
000047c7(3): TEST RDI,RDI
000047ca(4): CMOVZ RDI,RAX
000047ce(3): TEST RSI,RSI
000047d1(6): MOV dword ptr [RDI],0xa
000047d7(2): JZ 0x000047e7
000047d9(3): TEST RDX,RDX
000047dc(2): JZ 0x000047e7
000047de(4): MOV qword ptr [RDI + 0x28],RSI
000047e2(4): MOV qword ptr [RDI + 0x30],RDX
000047e6(1): RET
000047e7(4): SUB RSP,0x8
000047eb(5): CALL 0x00001890
000047f0(2): PUSH R15
000047f2(2): PUSH R14
000047f4(7): LEA RAX,[0x21b3c0]
000047fb(2): PUSH R13
000047fd(2): PUSH R12
000047ff(3): MOV R13,RDI
00004802(1): PUSH RBP
00004803(1): PUSH RBX
00004804(3): MOV RBX,R8
00004807(3): MOV R14,RSI
0000480a(3): MOV R15,RDX
0000480d(4): SUB RSP,0x18
00004811(3): TEST R8,R8
00004814(4): CMOVZ RBX,RAX
00004818(5): MOV qword ptr [RSP + 0x8],RCX
0000481d(5): CALL 0x000018a0
00004822(3): MOV R12D,dword ptr [RAX]
00004825(3): MOV RBP,RAX
00004828(4): LEA RAX,[RBX + 0x8]
0000482c(4): SUB RSP,0x8
00004830(4): MOV R9D,dword ptr [RBX + 0x4]
00004834(3): PUSH qword ptr [RBX + 0x30]
00004837(3): MOV R8D,dword ptr [RBX]
0000483a(3): PUSH qword ptr [RBX + 0x28]
0000483d(3): MOV RDX,R15
00004840(1): PUSH RAX
00004841(5): MOV RCX,qword ptr [RSP + 0x28]
00004846(3): MOV RSI,R14
00004849(3): MOV RDI,R13
0000484c(5): CALL 0x000032f0
00004851(4): MOV dword ptr [RBP],R12D
00004855(4): ADD RSP,0x38
00004859(1): POP RBX
0000485a(1): POP RBP
0000485b(2): POP R12
0000485d(2): POP R13
0000485f(2): POP R14
00004861(2): POP R15
00004863(1): RET
00004870(2): PUSH R15
00004872(2): PUSH R14
00004874(7): LEA RAX,[0x21b3c0]
0000487b(2): PUSH R13
0000487d(2): PUSH R12
0000487f(3): MOV R12,RDX
00004882(1): PUSH RBP
00004883(1): PUSH RBX
00004884(3): MOV RBX,RCX
00004887(3): MOV R14,RDI
0000488a(3): MOV R15,RSI
0000488d(4): SUB RSP,0x38
00004891(3): TEST RCX,RCX
00004894(4): CMOVZ RBX,RAX
00004898(2): XOR EBP,EBP
0000489a(5): CALL 0x000018a0
0000489f(3): TEST R12,R12
000048a2(3): MOV R13,RAX
000048a5(2): MOV EAX,dword ptr [RAX]
000048a7(4): SETZ BPL
000048ab(3): OR EBP,dword ptr [RBX + 0x4]
000048ae(4): LEA R10,[RBX + 0x8]
000048b2(4): SUB RSP,0x8
000048b6(3): MOV R8D,dword ptr [RBX]
000048b9(3): MOV RCX,R15
000048bc(4): MOV dword ptr [RSP + 0x14],EAX
000048c0(3): PUSH qword ptr [RBX + 0x30]
000048c3(3): MOV RDX,R14
000048c6(3): PUSH qword ptr [RBX + 0x28]
000048c9(2): PUSH R10
000048cb(2): XOR ESI,ESI
000048cd(3): MOV R9D,EBP
000048d0(2): XOR EDI,EDI
000048d2(5): MOV qword ptr [RSP + 0x40],R10
000048d7(5): CALL 0x000032f0
000048dc(4): LEA RSI,[RAX + 0x1]
000048e0(5): MOV qword ptr [RSP + 0x48],RAX
000048e5(4): ADD RSP,0x20
000048e9(3): MOV RDI,RSI
000048ec(5): MOV qword ptr [RSP + 0x18],RSI
000048f1(5): CALL 0x00005590
000048f6(5): MOV qword ptr [RSP + 0x10],RAX
000048fb(4): SUB RSP,0x8
000048ff(3): PUSH qword ptr [RBX + 0x30]
00004902(3): PUSH qword ptr [RBX + 0x28]
00004905(5): MOV R10,qword ptr [RSP + 0x38]
0000490a(3): MOV R9D,EBP
0000490d(3): MOV R8D,dword ptr [RBX]
00004910(3): MOV RCX,R15
00004913(3): MOV RDX,R14
00004916(3): MOV RDI,RAX
00004919(2): PUSH R10
0000491b(5): MOV RSI,qword ptr [RSP + 0x38]
00004920(5): CALL 0x000032f0
00004925(4): MOV EAX,dword ptr [RSP + 0x2c]
00004929(4): ADD RSP,0x20
0000492d(3): TEST R12,R12
00004930(4): MOV dword ptr [R13],EAX
00004934(2): JZ 0x0000493f
00004936(5): MOV R11,qword ptr [RSP + 0x28]
0000493b(4): MOV qword ptr [R12],R11
0000493f(5): MOV RAX,qword ptr [RSP + 0x10]
00004944(4): ADD RSP,0x38
00004948(1): POP RBX
00004949(1): POP RBP
0000494a(2): POP R12
0000494c(2): POP R13
0000494e(2): POP R14
00004950(2): POP R15
00004952(1): RET
00004960(3): MOV RCX,RDX
00004963(2): XOR EDX,EDX
00004965(5): JMP 0x00004870
00004970(6): MOV EAX,dword ptr [0x00219058]
00004976(2): PUSH R12
00004978(7): MOV R12,qword ptr [0x00219060]
0000497f(1): PUSH RBP
00004980(1): PUSH RBX
00004981(3): CMP EAX,0x1
00004984(2): JLE 0x000049b1
00004986(3): SUB EAX,0x2
00004989(5): LEA RBX,[R12 + 0x18]
0000498e(4): SHL RAX,0x4
00004992(5): LEA RBP,[R12 + RAX*0x1 + 0x28]
00004997(9): NOP word ptr [RAX + RAX*0x1]
000049a0(3): MOV RDI,qword ptr [RBX]
000049a3(4): ADD RBX,0x10
000049a7(5): CALL 0x00001880
000049ac(3): CMP RBX,RBP
000049af(2): JNZ 0x000049a0
000049b1(5): MOV RDI,qword ptr [R12 + 0x8]
000049b6(7): LEA RBX,[0x21b2c0]
000049bd(3): CMP RDI,RBX
000049c0(2): JZ 0x000049d9
000049c2(5): CALL 0x00001880
000049c7(11): MOV qword ptr [0x00219070],0x100
000049d2(7): MOV qword ptr [0x00219078],RBX
000049d9(7): LEA RBX,[0x219070]
000049e0(3): CMP R12,RBX
000049e3(2): JZ 0x000049f4
000049e5(3): MOV RDI,R12
000049e8(5): CALL 0x00001880
000049ed(7): MOV qword ptr [0x00219060],RBX
000049f4(1): POP RBX
000049f5(10): MOV dword ptr [0x00219058],0x1
000049ff(1): POP RBP
00004a00(2): POP R12
00004a02(1): RET
00004a10(7): LEA RCX,[0x21b3c0]
00004a17(7): MOV RDX,-0x1
00004a1e(5): JMP 0x00004530
00004a30(7): LEA RCX,[0x21b3c0]
00004a37(5): JMP 0x00004530
00004a40(7): LEA RCX,[0x21b3c0]
00004a47(3): MOV RSI,RDI
00004a4a(7): MOV RDX,-0x1
00004a51(2): XOR EDI,EDI
00004a53(5): JMP 0x00004530
00004a60(7): LEA RCX,[0x21b3c0]
00004a67(3): MOV RDX,RSI
00004a6a(3): MOV RSI,RDI
00004a6d(2): XOR EDI,EDI
00004a6f(5): JMP 0x00004530
00004a80(4): SUB RSP,0x48
00004a84(3): MOV RAX,RDX
00004a87(9): MOV RDX,qword ptr FS:[0x28]
00004a90(5): MOV qword ptr [RSP + 0x38],RDX
00004a95(2): XOR EDX,EDX
00004a97(3): CMP ESI,0xa
00004a9a(2): JZ 0x00004b04
00004a9c(3): MOV dword ptr [RSP],ESI
00004a9f(3): MOV RCX,RSP
00004aa2(7): MOV RDX,-0x1
00004aa9(3): MOV RSI,RAX
00004aac(9): MOV qword ptr [RSP + 0x4],0x0
00004ab5(9): MOV qword ptr [RSP + 0xc],0x0
00004abe(9): MOV qword ptr [RSP + 0x14],0x0
00004ac7(9): MOV qword ptr [RSP + 0x1c],0x0
00004ad0(9): MOV qword ptr [RSP + 0x24],0x0
00004ad9(9): MOV qword ptr [RSP + 0x2c],0x0
00004ae2(8): MOV dword ptr [RSP + 0x34],0x0
00004aea(5): CALL 0x00004530
00004aef(5): MOV RCX,qword ptr [RSP + 0x38]
00004af4(9): XOR RCX,qword ptr FS:[0x28]
00004afd(2): JNZ 0x00004b09
00004aff(4): ADD RSP,0x48
00004b03(1): RET
00004b04(5): CALL 0x00001890
00004b09(5): CALL 0x00001990
00004b0e(2): NOP
00004b10(4): SUB RSP,0x48
00004b14(3): MOV RAX,RDX
00004b17(3): MOV RDX,RCX
00004b1a(9): MOV RCX,qword ptr FS:[0x28]
00004b23(5): MOV qword ptr [RSP + 0x38],RCX
00004b28(2): XOR ECX,ECX
00004b2a(3): CMP ESI,0xa
00004b2d(2): JZ 0x00004b90
00004b2f(3): MOV dword ptr [RSP],ESI
00004b32(3): MOV RCX,RSP
00004b35(3): MOV RSI,RAX
00004b38(9): MOV qword ptr [RSP + 0x4],0x0
00004b41(9): MOV qword ptr [RSP + 0xc],0x0
00004b4a(9): MOV qword ptr [RSP + 0x14],0x0
00004b53(9): MOV qword ptr [RSP + 0x1c],0x0
00004b5c(9): MOV qword ptr [RSP + 0x24],0x0
00004b65(9): MOV qword ptr [RSP + 0x2c],0x0
00004b6e(8): MOV dword ptr [RSP + 0x34],0x0
00004b76(5): CALL 0x00004530
00004b7b(5): MOV RDX,qword ptr [RSP + 0x38]
00004b80(9): XOR RDX,qword ptr FS:[0x28]
00004b89(2): JNZ 0x00004b95
00004b8b(4): ADD RSP,0x48
00004b8f(1): RET
00004b90(5): CALL 0x00001890
00004b95(5): CALL 0x00001990
00004b9a(6): NOP word ptr [RAX + RAX*0x1]
00004ba0(3): MOV RDX,RSI
00004ba3(2): MOV ESI,EDI
00004ba5(2): XOR EDI,EDI
00004ba7(5): JMP 0x00004a80
00004bb0(3): MOV RCX,RDX
00004bb3(3): MOV RDX,RSI
00004bb6(2): MOV ESI,EDI
00004bb8(2): XOR EDI,EDI
00004bba(5): JMP 0x00004b10
00004bc0(4): SUB RSP,0x48
00004bc4(2): MOV ECX,EDX
00004bc6(9): MOV RAX,qword ptr FS:[0x28]
00004bcf(5): MOV qword ptr [RSP + 0x38],RAX
00004bd4(2): XOR EAX,EAX
00004bd6(7): MOV RAX,qword ptr [0x0021b3f0]
00004bdd(3): MOV R8,RSP
00004be0(3): AND ECX,0x1f
00004be3(8): MOVDQA XMM0,xmmword ptr [0x0021b3c0]
00004beb(5): MOV qword ptr [RSP + 0x30],RAX
00004bf0(2): MOV EAX,EDX
00004bf2(4): MOVAPS xmmword ptr [RSP],XMM0
00004bf6(3): SHR AL,0x5
00004bf9(3): MOVZX EAX,AL
00004bfc(5): LEA R9,[R8 + RAX*0x4 + 0x8]
00004c01(8): MOVDQA XMM0,xmmword ptr [0x0021b3d0]
00004c09(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00004c0e(8): MOVDQA XMM0,xmmword ptr [0x0021b3e0]
00004c16(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00004c1b(3): MOV EDX,dword ptr [R9]
00004c1e(2): MOV EAX,EDX
00004c20(2): SHR EAX,CL
00004c22(2): NOT EAX
00004c24(3): AND EAX,0x1
00004c27(2): SHL EAX,CL
00004c29(3): MOV RCX,R8
00004c2c(2): XOR EAX,EDX
00004c2e(3): MOV RDX,RSI
00004c31(3): MOV RSI,RDI
00004c34(3): MOV dword ptr [R9],EAX
00004c37(2): XOR EDI,EDI
00004c39(5): CALL 0x00004530
00004c3e(5): MOV RSI,qword ptr [RSP + 0x38]
00004c43(9): XOR RSI,qword ptr FS:[0x28]
00004c4c(2): JNZ 0x00004c53
00004c4e(4): ADD RSP,0x48
00004c52(1): RET
00004c53(5): CALL 0x00001990
00004c58(8): NOP dword ptr [RAX + RAX*0x1]
00004c60(4): MOVSX EDX,SIL
00004c64(7): MOV RSI,-0x1
00004c6b(5): JMP 0x00004bc0
00004c70(5): MOV EDX,0x3a
00004c75(7): MOV RSI,-0x1
00004c7c(5): JMP 0x00004bc0
00004c90(5): MOV EDX,0x3a
00004c95(5): JMP 0x00004bc0
00004ca0(4): SUB RSP,0x48
00004ca4(3): MOV RAX,RDX
00004ca7(9): MOV RDX,qword ptr FS:[0x28]
00004cb0(5): MOV qword ptr [RSP + 0x38],RDX
00004cb5(2): XOR EDX,EDX
00004cb7(3): CMP ESI,0xa
00004cba(2): JZ 0x00004d24
00004cbc(3): MOV dword ptr [RSP],ESI
00004cbf(3): MOV RCX,RSP
00004cc2(7): MOV RDX,-0x1
00004cc9(3): MOV RSI,RAX
00004ccc(9): MOV qword ptr [RSP + 0x4],0x0
00004cd5(9): MOV qword ptr [RSP + 0xc],0x4000000
00004cde(9): MOV qword ptr [RSP + 0x14],0x0
00004ce7(9): MOV qword ptr [RSP + 0x1c],0x0
00004cf0(9): MOV qword ptr [RSP + 0x24],0x0
00004cf9(9): MOV qword ptr [RSP + 0x2c],0x0
00004d02(8): MOV dword ptr [RSP + 0x34],0x0
00004d0a(5): CALL 0x00004530
00004d0f(5): MOV RCX,qword ptr [RSP + 0x38]
00004d14(9): XOR RCX,qword ptr FS:[0x28]
00004d1d(2): JNZ 0x00004d29
00004d1f(4): ADD RSP,0x48
00004d23(1): RET
00004d24(5): CALL 0x00001890
00004d29(5): CALL 0x00001990
00004d2e(2): NOP
00004d30(4): SUB RSP,0x48
00004d34(3): MOV R9,RCX
00004d37(7): MOV RCX,qword ptr [0x0021b3f0]
00004d3e(8): MOVDQA XMM0,xmmword ptr [0x0021b3c0]
00004d46(9): MOV RAX,qword ptr FS:[0x28]
00004d4f(5): MOV qword ptr [RSP + 0x38],RAX
00004d54(2): XOR EAX,EAX
00004d56(4): MOVAPS xmmword ptr [RSP],XMM0
00004d5a(3): TEST RSI,RSI
00004d5d(5): MOV qword ptr [RSP + 0x30],RCX
00004d62(7): MOV dword ptr [RSP],0xa
00004d69(8): MOVDQA XMM0,xmmword ptr [0x0021b3d0]
00004d71(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
00004d76(8): MOVDQA XMM0,xmmword ptr [0x0021b3e0]
00004d7e(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00004d83(2): JZ 0x00004db7
00004d85(3): TEST RDX,RDX
00004d88(2): JZ 0x00004db7
00004d8a(5): MOV qword ptr [RSP + 0x28],RSI
00004d8f(5): MOV qword ptr [RSP + 0x30],RDX
00004d94(3): MOV RCX,RSP
00004d97(3): MOV RDX,R8
00004d9a(3): MOV RSI,R9
00004d9d(5): CALL 0x00004530
00004da2(5): MOV RDI,qword ptr [RSP + 0x38]
00004da7(9): XOR RDI,qword ptr FS:[0x28]
00004db0(2): JNZ 0x00004dbc
00004db2(4): ADD RSP,0x48
00004db6(1): RET
00004db7(5): CALL 0x00001890
00004dbc(5): CALL 0x00001990
00004dc1(5): NOP dword ptr [RAX + RAX*0x1]
00004dc6(10): NOP word ptr CS:[RAX + RAX*0x1]
00004dd0(7): MOV R8,-0x1
00004dd7(5): JMP 0x00004d30
00004de0(3): MOV RCX,RDX
00004de3(7): MOV R8,-0x1
00004dea(3): MOV RDX,RSI
00004ded(3): MOV RSI,RDI
00004df0(2): XOR EDI,EDI
00004df2(5): JMP 0x00004d30
00004e00(3): MOV R8,RCX
00004e03(3): MOV RCX,RDX
00004e06(3): MOV RDX,RSI
00004e09(3): MOV RSI,RDI
00004e0c(2): XOR EDI,EDI
00004e0e(5): JMP 0x00004d30
00004e20(7): LEA RCX,[0x219020]
00004e27(5): JMP 0x00004530
00004e30(7): LEA RCX,[0x219020]
00004e37(3): MOV RDX,RSI
00004e3a(3): MOV RSI,RDI
00004e3d(2): XOR EDI,EDI
00004e3f(5): JMP 0x00004530
00004e50(7): LEA RCX,[0x219020]
00004e57(7): MOV RDX,-0x1
00004e5e(5): JMP 0x00004530
00004e70(7): LEA RCX,[0x219020]
00004e77(3): MOV RSI,RDI
00004e7a(7): MOV RDX,-0x1
00004e81(2): XOR EDI,EDI
00004e83(5): JMP 0x00004530
00004e90(2): PUSH R13
00004e92(2): PUSH R12
00004e94(3): MOV R13D,EDI
00004e97(1): PUSH RBP
00004e98(1): PUSH RBX
00004e99(3): MOV R12,RSI
00004e9c(3): MOV RBX,RDX
00004e9f(4): SUB RSP,0x8
00004ea3(5): NOP dword ptr [RAX + RAX*0x1]
00004ea8(3): MOV RDX,RBX
00004eab(3): MOV RSI,R12
00004eae(3): MOV EDI,R13D
00004eb1(5): CALL 0x00001a30
00004eb6(3): TEST RAX,RAX
00004eb9(3): MOV RBP,RAX
00004ebc(2): JNS 0x00004ee0
00004ebe(5): CALL 0x000018a0
00004ec3(2): MOV EAX,dword ptr [RAX]
00004ec5(3): CMP EAX,0x4
00004ec8(2): JZ 0x00004ea8
00004eca(7): CMP RBX,0x7ff00000
00004ed1(2): JBE 0x00004ee0
00004ed3(3): CMP EAX,0x16
00004ed6(2): JNZ 0x00004ee0
00004ed8(5): MOV EBX,0x7ff00000
00004edd(2): JMP 0x00004ea8
00004ee0(4): ADD RSP,0x8
00004ee4(3): MOV RAX,RBP
00004ee7(1): POP RBX
00004ee8(1): POP RBP
00004ee9(2): POP R12
00004eeb(2): POP R13
00004eed(1): RET
00004ef0(4): SUB RSP,0x8
00004ef4(5): CALL 0x00001b00
00004ef9(4): ADD RSP,0x8
00004efd(2): MOV EDI,EAX
00004eff(5): JMP 0x00004f30
00004f10(1): PUSH RBX
00004f11(2): MOV EBX,ESI
00004f13(5): CALL 0x000019e0
00004f18(2): MOV ESI,EBX
00004f1a(2): MOV EDI,EAX
00004f1c(1): POP RBX
00004f1d(5): JMP 0x00013c50
00004f30(2): PUSH R13
00004f32(2): PUSH R12
00004f34(1): PUSH RBP
00004f35(1): PUSH RBX
00004f36(2): MOV EBX,EDI
00004f38(4): SUB RSP,0x8
00004f3c(3): CMP EDI,0x2
00004f3f(2): JA 0x00004f62
00004f41(5): CALL 0x00013d50
00004f46(3): MOV R12D,EAX
00004f49(5): CALL 0x000018a0
00004f4e(3): MOV R13D,dword ptr [RAX]
00004f51(3): MOV RBP,RAX
00004f54(2): MOV EDI,EBX
00004f56(5): CALL 0x00001a20
00004f5b(3): MOV EBX,R12D
00004f5e(4): MOV dword ptr [RBP],R13D
00004f62(4): ADD RSP,0x8
00004f66(2): MOV EAX,EBX
00004f68(1): POP RBX
00004f69(1): POP RBP
00004f6a(2): POP R12
00004f6c(2): POP R13
00004f6e(1): RET
00004f70(2): PUSH R15
00004f72(2): PUSH R14
00004f74(2): PUSH R13
00004f76(2): PUSH R12
00004f78(3): MOV R12,R9
00004f7b(1): PUSH RBP
00004f7c(1): PUSH RBX
00004f7d(3): MOV RBP,RDI
00004f80(3): MOV RBX,R8
00004f83(4): SUB RSP,0x28
00004f87(3): TEST RSI,RSI
00004f8a(6): JZ 0x000050a8
00004f90(3): MOV R8,RDX
00004f93(7): LEA RDX,[0x14ba8]
00004f9a(3): MOV R9,RCX
00004f9d(2): XOR EAX,EAX
00004f9f(3): MOV RCX,RSI
00004fa2(5): MOV ESI,0x1
00004fa7(5): CALL 0x00001c20
00004fac(7): LEA RSI,[0x14bbb]
00004fb3(2): XOR EDI,EDI
00004fb5(5): MOV EDX,0x5
00004fba(5): CALL 0x00001960
00004fbf(7): LEA RDX,[0x14ee0]
00004fc6(3): MOV RCX,RAX
00004fc9(6): MOV R8D,0x7e3
00004fcf(5): MOV ESI,0x1
00004fd4(3): MOV RDI,RBP
00004fd7(2): XOR EAX,EAX
00004fd9(5): CALL 0x00001c20
00004fde(7): LEA RSI,[0x14c48]
00004fe5(2): XOR EDI,EDI
00004fe7(5): MOV EDX,0x5
00004fec(5): CALL 0x00001960
00004ff1(3): MOV RSI,RBP
00004ff4(3): MOV RDI,RAX
00004ff7(5): CALL 0x00001a60
00004ffc(4): CMP R12,0x9
00005000(6): JA 0x00005340
00005006(7): LEA RDX,[0x14ea4]
0000500d(4): MOVSXD RAX,dword ptr [RDX + R12*0x4]
00005011(3): ADD RAX,RDX
00005014(2): JMP RAX
00005020(4): MOV R9,qword ptr [RBX + 0x38]
00005024(4): MOV RAX,qword ptr [RBX + 0x10]
00005028(7): LEA RSI,[0x14db8]
0000502f(4): MOV R8,qword ptr [RBX + 0x8]
00005033(5): MOV EDX,0x5
00005038(2): XOR EDI,EDI
0000503a(4): MOV R13,qword ptr [RBX + 0x30]
0000503e(4): MOV R12,qword ptr [RBX + 0x28]
00005042(5): MOV qword ptr [RSP + 0x10],R9
00005047(4): MOV R15,qword ptr [RBX + 0x20]
0000504b(4): MOV R14,qword ptr [RBX + 0x18]
0000504f(4): MOV qword ptr [RSP],RAX
00005053(5): MOV qword ptr [RSP + 0x8],R8
00005058(3): MOV RBX,qword ptr [RBX]
0000505b(5): CALL 0x00001960
00005060(4): SUB RSP,0x8
00005064(5): MOV R9,qword ptr [RSP + 0x18]
00005069(3): MOV RDX,RAX
0000506c(3): MOV RCX,RBX
0000506f(5): MOV ESI,0x1
00005074(3): MOV RDI,RBP
00005077(2): XOR EAX,EAX
00005079(2): PUSH R9
0000507b(2): PUSH R13
0000507d(2): PUSH R12
0000507f(2): PUSH R15
00005081(2): PUSH R14
00005083(5): MOV R9,qword ptr [RSP + 0x30]
00005088(5): MOV R8,qword ptr [RSP + 0x38]
0000508d(5): CALL 0x00001c20
00005092(4): ADD RSP,0x30
00005096(4): ADD RSP,0x28
0000509a(1): POP RBX
0000509b(1): POP RBP
0000509c(2): POP R12
0000509e(2): POP R13
000050a0(2): POP R14
000050a2(2): POP R15
000050a4(1): RET
000050a8(3): MOV R8,RCX
000050ab(3): MOV RCX,RDX
000050ae(7): LEA RDX,[0x14bb4]
000050b5(5): MOV ESI,0x1
000050ba(2): XOR EAX,EAX
000050bc(5): CALL 0x00001c20
000050c1(5): JMP 0x00004fac
000050d0(4): MOV R10,qword ptr [RBX + 0x40]
000050d4(4): MOV R9,qword ptr [RBX + 0x38]
000050d8(7): LEA RSI,[0x14de8]
000050df(4): MOV RAX,qword ptr [RBX + 0x10]
000050e3(4): MOV R8,qword ptr [RBX + 0x8]
000050e7(5): MOV EDX,0x5
000050ec(4): MOV R13,qword ptr [RBX + 0x30]
000050f0(4): MOV R12,qword ptr [RBX + 0x28]
000050f4(4): MOV R15,qword ptr [RBX + 0x20]
000050f8(4): MOV R14,qword ptr [RBX + 0x18]
000050fc(3): MOV RBX,qword ptr [RBX]
000050ff(5): MOV qword ptr [RSP + 0x18],R10
00005104(5): MOV qword ptr [RSP + 0x10],R9
00005109(4): MOV qword ptr [RSP],RAX
0000510d(5): MOV qword ptr [RSP + 0x8],R8
00005112(2): XOR EDI,EDI
00005114(5): CALL 0x00001960
00005119(5): MOV R10,qword ptr [RSP + 0x18]
0000511e(2): PUSH R10
00005120(5): JMP 0x00005064
00005128(3): MOV RBX,qword ptr [RBX]
0000512b(7): LEA RSI,[0x14bbf]
00005132(5): MOV EDX,0x5
00005137(2): XOR EDI,EDI
00005139(5): CALL 0x00001960
0000513e(4): ADD RSP,0x28
00005142(3): MOV RCX,RBX
00005145(3): MOV RDI,RBP
00005148(1): POP RBX
00005149(1): POP RBP
0000514a(2): POP R12
0000514c(2): POP R13
0000514e(2): POP R14
00005150(2): POP R15
00005152(3): MOV RDX,RAX
00005155(5): MOV ESI,0x1
0000515a(2): XOR EAX,EAX
0000515c(5): JMP 0x00001c20
00005168(4): MOV R12,qword ptr [RBX + 0x8]
0000516c(7): LEA RSI,[0x14bcf]
00005173(3): MOV RBX,qword ptr [RBX]
00005176(5): MOV EDX,0x5
0000517b(2): XOR EDI,EDI
0000517d(5): CALL 0x00001960
00005182(4): ADD RSP,0x28
00005186(3): MOV R8,R12
00005189(3): MOV RCX,RBX
0000518c(3): MOV RDI,RBP
0000518f(3): MOV RDX,RAX
00005192(5): MOV ESI,0x1
00005197(1): POP RBX
00005198(1): POP RBP
00005199(2): POP R12
0000519b(2): POP R13
0000519d(2): POP R14
0000519f(2): POP R15
000051a1(2): XOR EAX,EAX
000051a3(5): JMP 0x00001c20
000051b0(4): MOV R13,qword ptr [RBX + 0x10]
000051b4(4): MOV R12,qword ptr [RBX + 0x8]
000051b8(7): LEA RSI,[0x14be6]
000051bf(3): MOV RBX,qword ptr [RBX]
000051c2(5): MOV EDX,0x5
000051c7(2): XOR EDI,EDI
000051c9(5): CALL 0x00001960
000051ce(4): ADD RSP,0x28
000051d2(3): MOV R9,R13
000051d5(3): MOV R8,R12
000051d8(3): MOV RCX,RBX
000051db(3): MOV RDI,RBP
000051de(3): MOV RDX,RAX
000051e1(1): POP RBX
000051e2(1): POP RBP
000051e3(2): POP R12
000051e5(2): POP R13
000051e7(2): POP R14
000051e9(2): POP R15
000051eb(5): MOV ESI,0x1
000051f0(2): XOR EAX,EAX
000051f2(5): JMP 0x00001c20
00005200(7): LEA RSI,[0x14d18]
00005207(5): MOV EDX,0x5
0000520c(2): XOR EDI,EDI
0000520e(4): MOV R14,qword ptr [RBX + 0x18]
00005212(4): MOV R13,qword ptr [RBX + 0x10]
00005216(4): MOV R12,qword ptr [RBX + 0x8]
0000521a(3): MOV RBX,qword ptr [RBX]
0000521d(5): CALL 0x00001960
00005222(4): SUB RSP,0x8
00005226(2): PUSH R14
00005228(3): MOV RDX,RAX
0000522b(3): MOV R9,R13
0000522e(3): MOV R8,R12
00005231(3): MOV RCX,RBX
00005234(3): MOV RDI,RBP
00005237(5): MOV ESI,0x1
0000523c(2): XOR EAX,EAX
0000523e(5): CALL 0x00001c20
00005243(1): POP RAX
00005244(1): POP RDX
00005245(4): ADD RSP,0x28
00005249(1): POP RBX
0000524a(1): POP RBP
0000524b(2): POP R12
0000524d(2): POP R13
0000524f(2): POP R14
00005251(2): POP R15
00005253(1): RET
00005258(4): MOV R15,qword ptr [RBX + 0x20]
0000525c(7): LEA RSI,[0x14d38]
00005263(5): MOV EDX,0x5
00005268(2): XOR EDI,EDI
0000526a(4): MOV R14,qword ptr [RBX + 0x18]
0000526e(4): MOV R13,qword ptr [RBX + 0x10]
00005272(4): MOV R12,qword ptr [RBX + 0x8]
00005276(3): MOV RBX,qword ptr [RBX]
00005279(5): CALL 0x00001960
0000527e(2): PUSH R15
00005280(2): JMP 0x00005226
00005288(4): MOV R8,qword ptr [RBX + 0x8]
0000528c(4): MOV R12,qword ptr [RBX + 0x28]
00005290(7): LEA RSI,[0x14d60]
00005297(4): MOV R15,qword ptr [RBX + 0x20]
0000529b(4): MOV R14,qword ptr [RBX + 0x18]
0000529f(5): MOV EDX,0x5
000052a4(4): MOV R13,qword ptr [RBX + 0x10]
000052a8(2): XOR EDI,EDI
000052aa(3): MOV RBX,qword ptr [RBX]
000052ad(4): MOV qword ptr [RSP],R8
000052b1(5): CALL 0x00001960
000052b6(4): SUB RSP,0x8
000052ba(3): MOV R9,R13
000052bd(2): PUSH R12
000052bf(2): PUSH R15
000052c1(2): PUSH R14
000052c3(5): MOV R8,qword ptr [RSP + 0x20]
000052c8(3): MOV RCX,RBX
000052cb(3): MOV RDX,RAX
000052ce(3): MOV RDI,RBP
000052d1(5): MOV ESI,0x1
000052d6(2): XOR EAX,EAX
000052d8(5): CALL 0x00001c20
000052dd(4): ADD RSP,0x20
000052e1(4): ADD RSP,0x28
000052e5(1): POP RBX
000052e6(1): POP RBP
000052e7(2): POP R12
000052e9(2): POP R13
000052eb(2): POP R14
000052ed(2): POP R15
000052ef(1): RET
000052f0(4): MOV R9,qword ptr [RBX + 0x10]
000052f4(4): MOV R13,qword ptr [RBX + 0x30]
000052f8(7): LEA RSI,[0x14d88]
000052ff(4): MOV R12,qword ptr [RBX + 0x28]
00005303(4): MOV R15,qword ptr [RBX + 0x20]
00005307(5): MOV EDX,0x5
0000530c(4): MOV R14,qword ptr [RBX + 0x18]
00005310(4): MOV R8,qword ptr [RBX + 0x8]
00005314(2): XOR EDI,EDI
00005316(5): MOV qword ptr [RSP + 0x8],R9
0000531b(3): MOV RBX,qword ptr [RBX]
0000531e(4): MOV qword ptr [RSP],R8
00005322(5): CALL 0x00001960
00005327(2): PUSH R13
00005329(2): PUSH R12
0000532b(2): PUSH R15
0000532d(2): PUSH R14
0000532f(5): MOV R9,qword ptr [RSP + 0x28]
00005334(2): JMP 0x000052c3
00005340(4): MOV R10,qword ptr [RBX + 0x40]
00005344(4): MOV R9,qword ptr [RBX + 0x38]
00005348(5): MOV EDX,0x5
0000534d(4): MOV RAX,qword ptr [RBX + 0x10]
00005351(4): MOV R8,qword ptr [RBX + 0x8]
00005355(7): LEA RSI,[0x14e20]
0000535c(4): MOV R13,qword ptr [RBX + 0x30]
00005360(4): MOV R12,qword ptr [RBX + 0x28]
00005364(4): MOV R15,qword ptr [RBX + 0x20]
00005368(4): MOV R14,qword ptr [RBX + 0x18]
0000536c(5): MOV qword ptr [RSP + 0x18],R10
00005371(5): MOV qword ptr [RSP + 0x10],R9
00005376(4): MOV qword ptr [RSP],RAX
0000537a(5): MOV qword ptr [RSP + 0x8],R8
0000537f(3): MOV RBX,qword ptr [RBX]
00005382(5): JMP 0x00005112
00005390(3): XOR R9D,R9D
00005393(4): CMP qword ptr [R8],0x0
00005397(2): JZ 0x000053ab
00005399(7): NOP dword ptr [RAX]
000053a0(4): ADD R9,0x1
000053a4(5): CMP qword ptr [R8 + R9*0x8],0x0
000053a9(2): JNZ 0x000053a0
000053ab(5): JMP 0x00004f70
000053b0(4): SUB RSP,0x68
000053b4(3): MOV R10,R8
000053b7(3): XOR R9D,R9D
000053ba(9): MOV RAX,qword ptr FS:[0x28]
000053c3(5): MOV qword ptr [RSP + 0x58],RAX
000053c8(2): XOR EAX,EAX
000053ca(3): MOV R8,RSP
000053cd(3): NOP dword ptr [RAX]
000053d0(3): MOV EAX,dword ptr [R10]
000053d3(3): CMP EAX,0x2f
000053d6(2): JA 0x0000541a
000053d8(3): MOV R11D,EAX
000053db(4): ADD R11,qword ptr [R10 + 0x10]
000053df(3): ADD EAX,0x8
000053e2(3): MOV dword ptr [R10],EAX
000053e5(3): MOV RAX,qword ptr [R11]
000053e8(3): TEST RAX,RAX
000053eb(4): MOV qword ptr [R8 + R9*0x8],RAX
000053ef(2): JZ 0x000053fb
000053f1(4): ADD R9,0x1
000053f5(4): CMP R9,0xa
000053f9(2): JNZ 0x000053d0
000053fb(5): CALL 0x00004f70
00005400(5): MOV RAX,qword ptr [RSP + 0x58]
00005405(9): XOR RAX,qword ptr FS:[0x28]
0000540e(2): JNZ 0x00005415
00005410(4): ADD RSP,0x68
00005414(1): RET
00005415(5): CALL 0x00001990
0000541a(4): MOV R11,qword ptr [R10 + 0x8]
0000541e(4): LEA RAX,[R11 + 0x8]
00005422(4): MOV qword ptr [R10 + 0x8],RAX
00005426(2): JMP 0x000053e5
00005430(1): PUSH RBP
00005431(1): PUSH RBX
00005432(6): MOV R10D,0x20
00005438(3): XOR R11D,R11D
0000543b(7): SUB RSP,0xb8
00005442(9): MOV RAX,qword ptr FS:[0x28]
0000544b(5): MOV qword ptr [RSP + 0x78],RAX
00005450(2): XOR EAX,EAX
00005452(8): LEA RAX,[0xd0 + RSP]
0000545a(8): MOV qword ptr [0xa0 + RSP],R8
00005462(8): LEA RBX,[0xd0 + RSP]
0000546a(5): LEA R8,[RSP + 0x20]
0000546f(8): MOV qword ptr [0xa8 + RSP],R9
00005477(8): MOV dword ptr [RSP + 0x8],0x20
0000547f(5): MOV qword ptr [RSP + 0x10],RAX
00005484(8): LEA RAX,[0x80 + RSP]
0000548c(3): XOR R9D,R9D
0000548f(5): MOV qword ptr [RSP + 0x18],RAX
00005494(3): MOV RBP,RAX
00005497(9): NOP word ptr [RAX + RAX*0x1]
000054a0(4): CMP R10D,0x2f
000054a4(2): JA 0x000054fc
000054a6(3): MOV EAX,R10D
000054a9(6): MOV R11D,0x1
000054af(4): ADD R10D,0x8
000054b3(3): ADD RAX,RBP
000054b6(3): MOV RAX,qword ptr [RAX]
000054b9(3): TEST RAX,RAX
000054bc(4): MOV qword ptr [R8 + R9*0x8],RAX
000054c0(2): JZ 0x000054cc
000054c2(4): ADD R9,0x1
000054c6(4): CMP R9,0xa
000054ca(2): JNZ 0x000054a0
000054cc(3): TEST R11B,R11B
000054cf(2): JNZ 0x000054f5
000054d1(5): CALL 0x00004f70
000054d6(5): MOV RAX,qword ptr [RSP + 0x78]
000054db(9): XOR RAX,qword ptr FS:[0x28]
000054e4(2): JNZ 0x000054f0
000054e6(7): ADD RSP,0xb8
000054ed(1): POP RBX
000054ee(1): POP RBP
000054ef(1): RET
000054f0(5): CALL 0x00001990
000054f5(5): MOV dword ptr [RSP + 0x8],R10D
000054fa(2): JMP 0x000054d1
000054fc(3): MOV RAX,RBX
000054ff(4): ADD RBX,0x8
00005503(2): JMP 0x000054b6
00005510(1): PUSH RBX
00005511(7): LEA RSI,[0x14c02]
00005518(5): MOV EDX,0x5
0000551d(2): XOR EDI,EDI
0000551f(5): CALL 0x00001960
00005524(7): LEA RDX,[0x14c17]
0000552b(3): MOV RSI,RAX
0000552e(5): MOV EDI,0x1
00005533(2): XOR EAX,EAX
00005535(5): CALL 0x00001b60
0000553a(7): LEA RSI,[0x14c2d]
00005541(5): MOV EDX,0x5
00005546(2): XOR EDI,EDI
00005548(5): CALL 0x00001960
0000554d(7): LEA RCX,[0x14588]
00005554(7): LEA RDX,[0x141ee]
0000555b(3): MOV RSI,RAX
0000555e(5): MOV EDI,0x1
00005563(2): XOR EAX,EAX
00005565(5): CALL 0x00001b60
0000556a(7): MOV RBX,qword ptr [0x00219088]
00005571(7): LEA RSI,[0x14e60]
00005578(2): XOR EDI,EDI
0000557a(5): MOV EDX,0x5
0000557f(5): CALL 0x00001960
00005584(3): MOV RSI,RBX
00005587(3): MOV RDI,RAX
0000558a(1): POP RBX
0000558b(5): JMP 0x00001a60
00005590(1): PUSH RBX
00005591(3): MOV RBX,RDI
00005594(5): CALL 0x00001ac0
00005599(3): TEST RAX,RAX
0000559c(2): JNZ 0x000055a3
0000559e(3): TEST RBX,RBX
000055a1(2): JNZ 0x000055a5
000055a3(1): POP RBX
000055a4(1): RET
000055a5(5): CALL 0x000057e0
000055aa(6): NOP word ptr [RAX + RAX*0x1]
000055b0(3): MOV RAX,RDI
000055b3(3): MUL RSI
000055b6(3): MOV RDI,RAX
000055b9(3): SETO AL
000055bc(3): TEST RDI,RDI
000055bf(2): JS 0x000055cb
000055c1(3): MOVZX EAX,AL
000055c4(3): TEST RAX,RAX
000055c7(2): JNZ 0x000055cb
000055c9(2): JMP 0x00005590
000055cb(4): SUB RSP,0x8
000055cf(5): CALL 0x000057e0
000055d4(2): NOP
000055d6(10): NOP word ptr CS:[RAX + RAX*0x1]
000055e0(2): JMP 0x00005590
000055f0(3): TEST RSI,RSI
000055f3(1): PUSH RBX
000055f4(3): MOV RBX,RSI
000055f7(2): JNZ 0x000055fe
000055f9(3): TEST RDI,RDI
000055fc(2): JNZ 0x00005618
000055fe(3): MOV RSI,RBX
00005601(5): CALL 0x00001b30
00005606(3): TEST RAX,RAX
00005609(2): JNZ 0x00005610
0000560b(3): TEST RBX,RBX
0000560e(2): JNZ 0x00005621
00005610(1): POP RBX
00005611(1): RET
00005618(5): CALL 0x00001880
0000561d(2): XOR EAX,EAX
0000561f(1): POP RBX
00005620(1): RET
00005621(5): CALL 0x000057e0
00005626(10): NOP word ptr CS:[RAX + RAX*0x1]
00005630(3): MOV RAX,RSI
00005633(3): MUL RDX
00005636(3): MOV RSI,RAX
00005639(3): SETO AL
0000563c(3): TEST RSI,RSI
0000563f(2): JS 0x0000564b
00005641(3): MOVZX EAX,AL
00005644(3): TEST RAX,RAX
00005647(2): JNZ 0x0000564b
00005649(2): JMP 0x000055f0
0000564b(4): SUB RSP,0x8
0000564f(5): CALL 0x000057e0
00005654(2): NOP
00005656(10): NOP word ptr CS:[RAX + RAX*0x1]
00005660(3): TEST RDI,RDI
00005663(3): MOV R9,RDX
00005666(3): MOV RCX,qword ptr [RSI]
00005669(2): JZ 0x000056a0
0000566b(2): XOR EDX,EDX
0000566d(10): MOV RAX,0x5555555555555554
00005677(3): DIV R9
0000567a(3): CMP RAX,RCX
0000567d(2): JBE 0x000056bb
0000567f(3): MOV RAX,RCX
00005682(3): SHR RAX,1
00005685(5): LEA RCX,[RAX + RCX*0x1 + 0x1]
0000568a(3): MOV qword ptr [RSI],RCX
0000568d(4): IMUL RCX,R9
00005691(3): MOV RSI,RCX
00005694(5): JMP 0x000055f0
000056a0(3): TEST RCX,RCX
000056a3(2): JZ 0x000056c8
000056a5(3): MOV RAX,RCX
000056a8(3): MUL R9
000056ab(3): SETO DL
000056ae(3): TEST RAX,RAX
000056b1(3): MOVZX EDX,DL
000056b4(2): JS 0x000056bb
000056b6(3): TEST RDX,RDX
000056b9(2): JZ 0x0000568a
000056bb(4): SUB RSP,0x8
000056bf(5): CALL 0x000057e0
000056c4(4): NOP dword ptr [RAX]
000056c8(2): XOR EDX,EDX
000056ca(5): MOV EAX,0x80
000056cf(3): XOR R8D,R8D
000056d2(3): DIV R9
000056d5(3): TEST RAX,RAX
000056d8(4): SETZ R8B
000056dc(4): LEA RCX,[R8 + RAX*0x1]
000056e0(2): JMP 0x000056a5
000056f0(3): TEST RDI,RDI
000056f3(3): MOV RAX,qword ptr [RSI]
000056f6(2): JZ 0x00005720
000056f8(10): MOV RDX,0x5555555555555553
00005702(3): CMP RAX,RDX
00005705(2): JA 0x00005731
00005707(3): MOV RDX,RAX
0000570a(3): SHR RDX,1
0000570d(5): LEA RAX,[RDX + RAX*0x1 + 0x1]
00005712(3): MOV qword ptr [RSI],RAX
00005715(3): MOV RSI,RAX
00005718(5): JMP 0x000055f0
00005720(3): TEST RAX,RAX
00005723(5): MOV EDX,0x80
00005728(4): CMOVZ RAX,RDX
0000572c(3): TEST RAX,RAX
0000572f(2): JNS 0x00005712
00005731(4): SUB RSP,0x8
00005735(5): CALL 0x000057e0
0000573a(6): NOP word ptr [RAX + RAX*0x1]
00005740(1): PUSH RBX
00005741(3): MOV RBX,RDI
00005744(5): CALL 0x00005590
00005749(3): MOV RDX,RBX
0000574c(2): XOR ESI,ESI
0000574e(3): MOV RDI,RAX
00005751(1): POP RBX
00005752(5): JMP 0x00001a10
00005760(3): MOV RAX,RDI
00005763(4): SUB RSP,0x8
00005767(3): MUL RSI
0000576a(3): SETO DL
0000576d(3): TEST RAX,RAX
00005770(2): JS 0x00005789
00005772(3): MOVZX EDX,DL
00005775(3): TEST RDX,RDX
00005778(2): JNZ 0x00005789
0000577a(5): CALL 0x00001a70
0000577f(3): TEST RAX,RAX
00005782(2): JZ 0x00005789
00005784(4): ADD RSP,0x8
00005788(1): RET
00005789(5): CALL 0x000057e0
0000578e(2): NOP
00005790(1): PUSH RBP
00005791(1): PUSH RBX
00005792(3): MOV RBP,RDI
00005795(3): MOV RDI,RSI
00005798(3): MOV RBX,RSI
0000579b(4): SUB RSP,0x8
0000579f(5): CALL 0x00005590
000057a4(4): ADD RSP,0x8
000057a8(3): MOV RDX,RBX
000057ab(3): MOV RSI,RBP
000057ae(1): POP RBX
000057af(1): POP RBP
000057b0(3): MOV RDI,RAX
000057b3(5): JMP 0x00001a90
000057c0(1): PUSH RBX
000057c1(3): MOV RBX,RDI
000057c4(5): CALL 0x00001980
000057c9(3): MOV RDI,RBX
000057cc(4): LEA RSI,[RAX + 0x1]
000057d0(1): POP RBX
000057d1(2): JMP 0x00005790
000057e0(7): LEA RSI,[0x14f0f]
000057e7(4): SUB RSP,0x8
000057eb(5): MOV EDX,0x5
000057f0(2): XOR EDI,EDI
000057f2(5): CALL 0x00001960
000057f7(6): MOV EDI,dword ptr [0x00219018]
000057fd(7): LEA RDX,[0x14680]
00005804(3): MOV RCX,RAX
00005807(2): XOR ESI,ESI
00005809(2): XOR EAX,EAX
0000580b(5): CALL 0x00001ba0
00005810(5): CALL 0x00001890
00005815(10): NOP word ptr CS:[RAX + RAX*0x1]
0000581f(1): NOP
00005820(4): MOV RAX,qword ptr [RDI + 0x8]
00005824(4): CMP qword ptr [RDI + 0x10],RAX
00005828(2): JZ 0x00005830
0000582a(5): JMP 0x00001bc0
00005830(4): MOV RAX,qword ptr [RDI + 0x20]
00005834(4): CMP qword ptr [RDI + 0x28],RAX
00005838(2): JNZ 0x0000582a
0000583a(5): CMP qword ptr [RDI + 0x48],0x0
0000583f(2): JNZ 0x0000582a
00005841(2): PUSH R12
00005843(1): PUSH RBP
00005844(3): MOV R12D,EDX
00005847(1): PUSH RBX
00005848(3): MOV RBP,RSI
0000584b(3): MOV RBX,RDI
0000584e(5): CALL 0x00001aa0
00005853(3): MOV EDX,R12D
00005856(3): MOV RSI,RBP
00005859(2): MOV EDI,EAX
0000585b(5): CALL 0x000019f0
00005860(4): CMP RAX,-0x1
00005864(2): JZ 0x00005872
00005866(3): AND dword ptr [RBX],0xffffffef
00005869(7): MOV qword ptr [0x90 + RBX],RAX
00005870(2): XOR EAX,EAX
00005872(1): POP RBX
00005873(1): POP RBP
00005874(2): POP R12
00005876(1): RET
00005880(2): PUSH R13
00005882(2): PUSH R12
00005884(3): MOV R13,RSI
00005887(1): PUSH RBP
00005888(1): PUSH RBX
00005889(3): MOV RBX,RDI
0000588c(3): MOV R12,RDX
0000588f(4): SUB RSP,0x18
00005893(9): MOV RAX,qword ptr FS:[0x28]
0000589c(5): MOV qword ptr [RSP + 0x8],RAX
000058a1(2): XOR EAX,EAX
000058a3(5): LEA RAX,[RSP + 0x4]
000058a8(3): TEST RDI,RDI
000058ab(4): CMOVZ RBX,RAX
000058af(3): MOV RDI,RBX
000058b2(5): CALL 0x000019b0
000058b7(4): CMP RAX,-0x3
000058bb(3): MOV RBP,RAX
000058be(2): JBE 0x000058e0
000058c0(3): TEST R12,R12
000058c3(2): JZ 0x000058e0
000058c5(2): XOR EDI,EDI
000058c7(5): CALL 0x00013cb0
000058cc(2): TEST AL,AL
000058ce(2): JNZ 0x000058e0
000058d0(5): MOVZX EAX,byte ptr [R13]
000058d5(5): MOV EBP,0x1
000058da(2): MOV dword ptr [RBX],EAX
000058dc(4): NOP dword ptr [RAX]
000058e0(5): MOV RDX,qword ptr [RSP + 0x8]
000058e5(9): XOR RDX,qword ptr FS:[0x28]
000058ee(3): MOV RAX,RBP
000058f1(2): JNZ 0x000058fe
000058f3(4): ADD RSP,0x18
000058f7(1): POP RBX
000058f8(1): POP RBP
000058f9(2): POP R12
000058fb(2): POP R13
000058fd(1): RET
000058fe(5): CALL 0x00001990
00005903(10): NOP word ptr CS:[RAX + RAX*0x1]
0000590d(3): NOP dword ptr [RAX]
00005910(4): MOV RAX,qword ptr [RSI + 0x48]
00005914(4): CMP qword ptr [RSI + 0x68],RAX
00005918(2): JLE 0x00005970
0000591a(4): MOV R8,qword ptr [RSI + 0x8]
0000591e(7): CMP dword ptr [0x90 + RSI],0x1
00005925(5): MOVZX ECX,byte ptr [R8 + RAX*0x1]
0000592a(2): MOV byte ptr [RDI],CL
0000592c(2): JLE 0x00005943
0000592e(4): CMP RAX,qword ptr [RSI + 0x30]
00005932(2): JZ 0x00005943
00005934(4): MOV R9,qword ptr [RSI + 0x10]
00005938(5): CMP dword ptr [R9 + RAX*0x4],-0x1
0000593d(6): JZ 0x000059bf
00005943(3): CMP CL,0x5c
00005946(2): JZ 0x000059b0
00005948(3): CMP CL,0x5b
0000594b(2): JZ 0x00005980
0000594d(3): CMP CL,0x5d
00005950(6): JZ 0x000059f0
00005956(3): CMP CL,0x5e
00005959(6): JZ 0x000059e0
0000595f(3): CMP CL,0x2d
00005962(2): JNZ 0x000059bf
00005964(4): MOV byte ptr [RDI + 0x8],0x16
00005968(5): MOV EAX,0x1
0000596d(1): RET
00005970(4): MOV byte ptr [RDI + 0x8],0x2
00005974(2): XOR EAX,EAX
00005976(1): RET
00005980(4): LEA RCX,[RAX + 0x1]
00005984(4): CMP RCX,qword ptr [RSI + 0x58]
00005988(2): JGE 0x000059d0
0000598a(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
00005990(2): CMP AL,0x3a
00005992(2): MOV byte ptr [RDI],AL
00005994(6): JZ 0x00005a30
0000599a(2): CMP AL,0x3d
0000599c(6): JZ 0x00005a20
000059a2(2): CMP AL,0x2e
000059a4(2): JNZ 0x000059d0
000059a6(4): MOV byte ptr [RDI + 0x8],0x1a
000059aa(5): MOV EAX,0x2
000059af(1): RET
000059b0(3): AND EDX,0x1
000059b3(2): JZ 0x000059bf
000059b5(4): LEA RDX,[RAX + 0x1]
000059b9(4): CMP RDX,qword ptr [RSI + 0x58]
000059bd(2): JL 0x00005a00
000059bf(4): MOV byte ptr [RDI + 0x8],0x1
000059c3(5): MOV EAX,0x1
000059c8(1): RET
000059d0(4): MOV byte ptr [RDI + 0x8],0x1
000059d4(3): MOV byte ptr [RDI],0x5b
000059d7(5): MOV EAX,0x1
000059dc(1): RET
000059e0(4): MOV byte ptr [RDI + 0x8],0x19
000059e4(5): MOV EAX,0x1
000059e9(1): RET
000059f0(4): MOV byte ptr [RDI + 0x8],0x15
000059f4(5): MOV EAX,0x1
000059f9(1): RET
00005a00(4): MOV qword ptr [RSI + 0x48],RDX
00005a04(6): MOVZX EAX,byte ptr [R8 + RAX*0x1 + 0x1]
00005a0a(4): MOV byte ptr [RDI + 0x8],0x1
00005a0e(2): MOV byte ptr [RDI],AL
00005a10(5): MOV EAX,0x1
00005a15(1): RET
00005a20(4): MOV byte ptr [RDI + 0x8],0x1c
00005a24(5): MOV EAX,0x2
00005a29(1): RET
00005a30(3): AND EDX,0x4
00005a33(2): JZ 0x000059d0
00005a35(4): MOV byte ptr [RDI + 0x8],0x1e
00005a39(5): MOV EAX,0x2
00005a3e(1): RET
00005a40(4): CMP byte ptr [RSI + 0x30],0x11
00005a44(2): JZ 0x00005a50
00005a46(2): XOR EAX,EAX
00005a48(1): RET
00005a50(4): CMP RDI,qword ptr [RSI + 0x28]
00005a54(2): JNZ 0x00005a46
00005a56(4): OR byte ptr [RSI + 0x32],0x8
00005a5a(2): XOR EAX,EAX
00005a5c(1): RET
00005a60(2): PUSH R15
00005a62(2): PUSH R14
00005a64(3): MOV R9,RDX
00005a67(2): PUSH R13
00005a69(2): PUSH R12
00005a6b(4): LEA RDX,[RCX + RCX*0x2]
00005a6f(1): PUSH RBP
00005a70(1): PUSH RBX
00005a71(3): MOV R15D,ESI
00005a74(4): SUB RSP,0x48
00005a78(7): MOV R14,qword ptr [0x98 + RDI]
00005a7f(4): MOV qword ptr [RSP],RDI
00005a83(4): MOV RAX,qword ptr [R14 + 0x30]
00005a87(4): LEA R12,[RAX + RDX*0x8]
00005a8b(6): CMP qword ptr [R12 + 0x8],0x0
00005a91(6): JLE 0x00005c25
00005a97(4): LEA RAX,[R8 + R8*0x4]
00005a9b(3): MOV R11,RCX
00005a9e(3): MOV ECX,R9D
00005aa1(3): MOV R10,R8
00005aa4(2): XOR EBX,EBX
00005aa6(4): MOV dword ptr [RSP + 0x20],ESI
00005aaa(4): SHL RAX,0x3
00005aae(3): MOV R15,R9
00005ab1(5): MOV qword ptr [RSP + 0x10],R11
00005ab6(5): MOV qword ptr [RSP + 0x28],RAX
00005abb(5): MOV EAX,0x1
00005ac0(3): SHL RAX,CL
00005ac3(5): MOV qword ptr [RSP + 0x18],RAX
00005ac8(2): NOT EAX
00005aca(5): MOV word ptr [RSP + 0x26],AX
00005acf(2): MOV EAX,ESI
00005ad1(3): AND EAX,0x1
00005ad4(4): MOV dword ptr [RSP + 0xc],EAX
00005ad8(2): MOV EAX,ESI
00005ada(3): AND EAX,0x2
00005add(4): MOV dword ptr [RSP + 0x8],EAX
00005ae1(2): JMP 0x00005b05
00005ae8(3): CMP DL,0x9
00005aeb(6): JZ 0x00005c40
00005af1(3): CMP DL,0x4
00005af4(2): JZ 0x00005b48
00005af6(4): ADD RBX,0x1
00005afa(5): CMP qword ptr [R12 + 0x8],RBX
00005aff(6): JLE 0x00005c20
00005b05(5): MOV RAX,qword ptr [R12 + 0x10]
00005b0a(4): MOV RBP,qword ptr [RAX + RBX*0x8]
00005b0e(3): MOV RAX,RBP
00005b11(4): SHL RAX,0x4
00005b15(3): ADD RAX,qword ptr [R14]
00005b18(4): MOVZX EDX,byte ptr [RAX + 0x8]
00005b1c(3): CMP DL,0x8
00005b1f(2): JNZ 0x00005ae8
00005b21(4): MOV ECX,dword ptr [RSP + 0xc]
00005b25(2): TEST ECX,ECX
00005b27(2): JZ 0x00005af6
00005b29(3): CMP qword ptr [RAX],R15
00005b2c(2): JNZ 0x00005af6
00005b2e(4): ADD RSP,0x48
00005b32(5): MOV EAX,0xffffffff
00005b37(1): POP RBX
00005b38(1): POP RBP
00005b39(2): POP R12
00005b3b(2): POP R13
00005b3d(2): POP R14
00005b3f(2): POP R15
00005b41(1): RET
00005b48(4): CMP R10,-0x1
00005b4c(2): JZ 0x00005af6
00005b4e(4): MOV RAX,qword ptr [RSP]
00005b52(5): MOV R13,qword ptr [RSP + 0x28]
00005b57(3): MOV RDI,RBP
00005b5a(5): MOV qword ptr [RSP + 0x30],R12
00005b5f(5): MOV qword ptr [RSP + 0x38],RBX
00005b64(3): MOV R12,R10
00005b67(7): ADD R13,qword ptr [0xd8 + RAX]
00005b6e(5): LEA RAX,[RBP + RBP*0x2]
00005b73(3): MOV RBP,R14
00005b76(3): MOV R14,RDI
00005b79(4): SHL RAX,0x3
00005b7d(3): MOV RBX,RAX
00005b80(4): CMP qword ptr [R13],R14
00005b84(2): JNZ 0x00005bf0
00005b86(4): CMP R15,0x3f
00005b8a(2): JG 0x00005b98
00005b8c(5): MOVZX EAX,word ptr [R13 + 0x22]
00005b91(5): TEST qword ptr [RSP + 0x18],RAX
00005b96(2): JZ 0x00005bf0
00005b98(4): MOV RAX,qword ptr [RBP + 0x28]
00005b9c(5): MOV RAX,qword ptr [RAX + RBX*0x1 + 0x10]
00005ba1(3): MOV RCX,qword ptr [RAX]
00005ba4(5): CMP qword ptr [RSP + 0x10],RCX
00005ba9(6): JZ 0x00005c70
00005baf(4): MOV ESI,dword ptr [RSP + 0x20]
00005bb3(4): MOV RDI,qword ptr [RSP]
00005bb7(3): MOV R8,R12
00005bba(3): MOV RDX,R15
00005bbd(5): CALL 0x00005a60
00005bc2(3): CMP EAX,-0x1
00005bc5(6): JZ 0x00005b2e
00005bcb(2): TEST EAX,EAX
00005bcd(2): JNZ 0x00005bd7
00005bcf(4): MOV ESI,dword ptr [RSP + 0x8]
00005bd3(2): TEST ESI,ESI
00005bd5(2): JNZ 0x00005c55
00005bd7(4): CMP R15,0x3f
00005bdb(2): JG 0x00005bf0
00005bdd(5): MOVZX EAX,word ptr [RSP + 0x26]
00005be2(5): AND word ptr [R13 + 0x22],AX
00005be7(9): NOP word ptr [RAX + RAX*0x1]
00005bf0(4): ADD R13,0x28
00005bf4(5): CMP byte ptr [R13 + -0x8],0x0
00005bf9(2): JNZ 0x00005b80
00005bfb(5): MOV RBX,qword ptr [RSP + 0x38]
00005c00(3): MOV R10,R12
00005c03(5): MOV R12,qword ptr [RSP + 0x30]
00005c08(3): MOV R14,RBP
00005c0b(4): ADD RBX,0x1
00005c0f(5): CMP qword ptr [R12 + 0x8],RBX
00005c14(6): JG 0x00005b05
00005c1a(6): NOP word ptr [RAX + RAX*0x1]
00005c20(5): MOV R15D,dword ptr [RSP + 0x20]
00005c25(4): ADD RSP,0x48
00005c29(3): MOV EAX,R15D
00005c2c(1): POP RBX
00005c2d(2): SAR EAX,1
00005c2f(1): POP RBP
00005c30(2): POP R12
00005c32(2): POP R13
00005c34(2): POP R14
00005c36(2): POP R15
00005c38(1): RET
00005c40(4): MOV EDX,dword ptr [RSP + 0x8]
00005c44(2): TEST EDX,EDX
00005c46(6): JZ 0x00005af6
00005c4c(3): CMP qword ptr [RAX],R15
00005c4f(6): JNZ 0x00005af6
00005c55(4): ADD RSP,0x48
00005c59(2): XOR EAX,EAX
00005c5b(1): POP RBX
00005c5c(1): POP RBP
00005c5d(2): POP R12
00005c5f(2): POP R13
00005c61(2): POP R14
00005c63(2): POP R15
00005c65(1): RET
00005c70(5): MOV R15D,dword ptr [RSP + 0x20]
00005c75(4): ADD RSP,0x48
00005c79(1): POP RBX
00005c7a(1): POP RBP
00005c7b(3): MOV EAX,R15D
00005c7e(3): AND EAX,0x1
00005c81(2): POP R12
00005c83(2): NEG EAX
00005c85(2): POP R13
00005c87(2): POP R14
00005c89(2): POP R15
00005c8b(1): RET
00005c90(7): MOV RAX,qword ptr [0xd8 + RDI]
00005c97(4): LEA RSI,[RSI + RSI*0x4]
00005c9b(4): LEA RAX,[RAX + RSI*0x8]
00005c9f(4): MOV R10,qword ptr [RAX + 0x10]
00005ca3(3): CMP R10,R8
00005ca6(2): JG 0x00005cf0
00005ca8(4): MOV RAX,qword ptr [RAX + 0x18]
00005cac(3): CMP RAX,R8
00005caf(2): JL 0x00005cd0
00005cb1(2): XOR ESI,ESI
00005cb3(3): CMP R10,R8
00005cb6(4): SETZ SIL
00005cba(3): OR ESI,0x2
00005cbd(3): CMP RAX,R8
00005cc0(2): JZ 0x00005ce5
00005cc2(2): XOR EAX,EAX
00005cc4(3): CMP R10,R8
00005cc7(2): JZ 0x00005ce0
00005cc9(2): RET
00005cd0(5): MOV EAX,0x1
00005cd5(1): RET
00005ce0(5): MOV ESI,0x1
00005ce5(3): MOV R8,R9
00005ce8(5): JMP 0x00005a60
00005cf0(5): MOV EAX,0xffffffff
00005cf5(1): RET
00005d00(2): PUSH R12
00005d02(3): MOV R12,RSI
00005d05(1): PUSH RBP
00005d06(3): MOV RBP,RDX
00005d09(1): PUSH RBX
00005d0a(3): MOV RBX,RDI
00005d0d(2): JMP 0x00005d13
00005d10(3): MOV RBX,RAX
00005d13(4): MOV RAX,qword ptr [RBX + 0x8]
00005d17(3): TEST RAX,RAX
00005d1a(2): JNZ 0x00005d10
00005d1c(4): MOV RAX,qword ptr [RBX + 0x10]
00005d20(3): TEST RAX,RAX
00005d23(2): JNZ 0x00005d10
00005d25(3): MOV RSI,RBX
00005d28(3): MOV RDI,RBP
00005d2b(3): CALL R12
00005d2e(2): TEST EAX,EAX
00005d30(2): JNZ 0x00005d66
00005d32(6): NOP word ptr [RAX + RAX*0x1]
00005d38(3): MOV RDX,qword ptr [RBX]
00005d3b(3): TEST RDX,RDX
00005d3e(2): JZ 0x00005d66
00005d40(4): MOV RAX,qword ptr [RDX + 0x10]
00005d44(3): CMP RAX,RBX
00005d47(3): MOV RBX,RDX
00005d4a(4): SETZ SIL
00005d4e(3): TEST RAX,RAX
00005d51(3): SETZ CL
00005d54(3): OR SIL,CL
00005d57(2): JZ 0x00005d10
00005d59(3): MOV RSI,RBX
00005d5c(3): MOV RDI,RBP
00005d5f(3): CALL R12
00005d62(2): TEST EAX,EAX
00005d64(2): JZ 0x00005d38
00005d66(1): POP RBX
00005d67(1): POP RBP
00005d68(2): POP R12
00005d6a(1): RET
00005d70(2): PUSH R12
00005d72(3): MOV R12,RSI
00005d75(1): PUSH RBP
00005d76(3): MOV RBP,RDX
00005d79(1): PUSH RBX
00005d7a(3): MOV RBX,RDI
00005d7d(2): JMP 0x00005d83
00005d80(3): MOV RBX,RDX
00005d83(3): MOV RSI,RBX
00005d86(3): MOV RDI,RBP
00005d89(3): CALL R12
00005d8c(2): TEST EAX,EAX
00005d8e(2): JNZ 0x00005dbc
00005d90(4): MOV RDX,qword ptr [RBX + 0x8]
00005d94(2): XOR ECX,ECX
00005d96(3): TEST RDX,RDX
00005d99(2): JNZ 0x00005d80
00005d9b(2): JMP 0x00005da3
00005da0(3): MOV RBX,RDX
00005da3(4): MOV RDX,qword ptr [RBX + 0x10]
00005da7(3): CMP RDX,RCX
00005daa(2): JZ 0x00005db1
00005dac(3): TEST RDX,RDX
00005daf(2): JNZ 0x00005d80
00005db1(3): MOV RDX,qword ptr [RBX]
00005db4(3): MOV RCX,RBX
00005db7(3): TEST RDX,RDX
00005dba(2): JNZ 0x00005da0
00005dbc(1): POP RBX
00005dbd(1): POP RBP
00005dbe(2): POP R12
00005dc0(1): RET
00005dd0(1): PUSH RBP
00005dd1(1): PUSH RBX
00005dd2(3): MOV RBP,RSI
00005dd5(3): MOV RBX,RDI
00005dd8(4): SUB RSP,0x8
00005ddc(7): CMP dword ptr [0x90 + RDI],0x1
00005de3(2): JLE 0x00005e2d
00005de5(10): MOV RAX,0x1fffffffffffffff
00005def(3): CMP RSI,RAX
00005df2(2): JA 0x00005e60
00005df4(4): MOV RDI,qword ptr [RDI + 0x10]
00005df8(8): LEA RSI,[RSI*0x4]
00005e00(5): CALL 0x00001b30
00005e05(3): TEST RAX,RAX
00005e08(2): JZ 0x00005e60
00005e0a(4): MOV RDI,qword ptr [RBX + 0x18]
00005e0e(4): MOV qword ptr [RBX + 0x10],RAX
00005e12(3): TEST RDI,RDI
00005e15(2): JZ 0x00005e2d
00005e17(8): LEA RSI,[RBP*0x8]
00005e1f(5): CALL 0x00001b30
00005e24(3): TEST RAX,RAX
00005e27(2): JZ 0x00005e60
00005e29(4): MOV qword ptr [RBX + 0x18],RAX
00005e2d(7): CMP byte ptr [0x8b + RBX],0x0
00005e34(2): JNZ 0x00005e48
00005e36(4): MOV qword ptr [RBX + 0x40],RBP
00005e3a(4): ADD RSP,0x8
00005e3e(2): XOR EAX,EAX
00005e40(1): POP RBX
00005e41(1): POP RBP
00005e42(1): RET
00005e48(4): MOV RDI,qword ptr [RBX + 0x8]
00005e4c(3): MOV RSI,RBP
00005e4f(5): CALL 0x00001b30
00005e54(3): TEST RAX,RAX
00005e57(2): JZ 0x00005e60
00005e59(4): MOV qword ptr [RBX + 0x8],RAX
00005e5d(2): JMP 0x00005e36
00005e60(4): ADD RSP,0x8
00005e64(5): MOV EAX,0xc
00005e69(1): POP RBX
00005e6a(1): POP RBP
00005e6b(1): RET
00005e70(1): PUSH RBP
00005e71(1): PUSH RBX
00005e72(3): MOV RBP,RSI
00005e75(3): MOV RBX,RDI
00005e78(4): SUB RSP,0x8
00005e7c(4): MOV RSI,qword ptr [RDI + 0x8]
00005e80(3): CMP qword ptr [RDI],RSI
00005e83(4): MOV RAX,qword ptr [RDI + 0x10]
00005e87(2): JZ 0x00005ea8
00005e89(4): LEA RDX,[RSI + 0x1]
00005e8d(4): MOV qword ptr [RBX + 0x8],RDX
00005e91(4): MOV qword ptr [RAX + RSI*0x8],RBP
00005e95(5): MOV EAX,0x1
00005e9a(4): ADD RSP,0x8
00005e9e(1): POP RBX
00005e9f(1): POP RBP
00005ea0(1): RET
00005ea8(4): ADD RSI,0x1
00005eac(4): LEA RDX,[RSI + RSI*0x1]
00005eb0(4): SHL RSI,0x4
00005eb4(3): MOV qword ptr [RDI],RDX
00005eb7(3): MOV RDI,RAX
00005eba(5): CALL 0x00001b30
00005ebf(3): TEST RAX,RAX
00005ec2(2): JZ 0x00005ed0
00005ec4(4): MOV qword ptr [RBX + 0x10],RAX
00005ec8(4): MOV RSI,qword ptr [RBX + 0x8]
00005ecc(2): JMP 0x00005e89
00005ed0(2): XOR EAX,EAX
00005ed2(2): JMP 0x00005e9a
00005ee0(1): PUSH RBP
00005ee1(1): PUSH RBX
00005ee2(3): MOV RBP,RSI
00005ee5(3): MOV RBX,RDI
00005ee8(4): SUB RSP,0x8
00005eec(3): MOV RDX,qword ptr [RDI]
00005eef(3): TEST RDX,RDX
00005ef2(2): JZ 0x00005f18
00005ef4(4): MOV RSI,qword ptr [RDI + 0x8]
00005ef8(4): MOV RAX,qword ptr [RDI + 0x10]
00005efc(3): TEST RSI,RSI
00005eff(2): JNZ 0x00005f50
00005f01(3): MOV qword ptr [RAX],RBP
00005f04(5): ADD qword ptr [RDI + 0x8],0x1
00005f09(5): MOV EAX,0x1
00005f0e(4): ADD RSP,0x8
00005f12(1): POP RBX
00005f13(1): POP RBP
00005f14(1): RET
00005f18(7): MOV qword ptr [RDI],0x1
00005f1f(8): MOV qword ptr [RDI + 0x8],0x1
00005f27(5): MOV EDI,0x8
00005f2c(5): CALL 0x00001ac0
00005f31(3): TEST RAX,RAX
00005f34(4): MOV qword ptr [RBX + 0x10],RAX
00005f38(6): JZ 0x00005fc8
00005f3e(3): MOV qword ptr [RAX],RBP
00005f41(4): ADD RSP,0x8
00005f45(5): MOV EAX,0x1
00005f4a(1): POP RBX
00005f4b(1): POP RBP
00005f4c(1): RET
00005f50(3): CMP RDX,RSI
00005f53(6): JZ 0x00005fe0
00005f59(3): CMP qword ptr [RAX],RBP
00005f5c(8): LEA RDX,[RSI*0x8]
00005f64(2): JLE 0x00005fa0
00005f66(3): TEST RSI,RSI
00005f69(2): JLE 0x00005f83
00005f6b(3): ADD RDX,RAX
00005f6e(2): NOP
00005f70(4): MOV RCX,qword ptr [RDX + -0x8]
00005f74(4): SUB RDX,0x8
00005f78(4): MOV qword ptr [RDX + 0x8],RCX
00005f7c(3): CMP RAX,RDX
00005f7f(2): JNZ 0x00005f70
00005f81(2): XOR EDX,EDX
00005f83(4): MOV qword ptr [RAX + RDX*0x1],RBP
00005f87(5): MOV EAX,0x1
00005f8c(5): ADD qword ptr [RBX + 0x8],0x1
00005f91(5): JMP 0x00005f0e
00005fa0(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
00005fa5(3): CMP RBP,RCX
00005fa8(2): JGE 0x00005f83
00005faa(6): NOP word ptr [RAX + RAX*0x1]
00005fb0(4): MOV qword ptr [RAX + RDX*0x1],RCX
00005fb4(4): SUB RDX,0x8
00005fb8(5): MOV RCX,qword ptr [RAX + RDX*0x1 + -0x8]
00005fbd(3): CMP RCX,RBP
00005fc0(2): JG 0x00005fb0
00005fc2(2): JMP 0x00005f83
00005fc8(8): MOV qword ptr [RBX + 0x8],0x0
00005fd0(7): MOV qword ptr [RBX],0x0
00005fd7(5): JMP 0x00005f0e
00005fe0(4): LEA RDX,[RSI + RSI*0x1]
00005fe4(4): SHL RSI,0x4
00005fe8(3): MOV qword ptr [RDI],RDX
00005feb(3): MOV RDI,RAX
00005fee(5): CALL 0x00001b30
00005ff3(3): TEST RAX,RAX
00005ff6(2): JZ 0x00006005
00005ff8(4): MOV qword ptr [RBX + 0x10],RAX
00005ffc(4): MOV RSI,qword ptr [RBX + 0x8]
00006000(5): JMP 0x00005f59
00006005(2): XOR EAX,EAX
00006007(5): JMP 0x00005f0e
00006010(2): PUSH R14
00006012(2): PUSH R13
00006014(3): MOV R14,RDI
00006017(2): PUSH R12
00006019(1): PUSH RBP
0000601a(3): MOV R12,RDX
0000601d(1): PUSH RBX
0000601e(4): MOV RBX,qword ptr [RSI + 0x10]
00006022(3): MOV RBP,RSI
00006025(3): MOV qword ptr [RSI],RDX
00006028(8): MOV qword ptr [RSI + 0x28],0x0
00006030(4): LEA R13,[RSI + 0x20]
00006034(8): LEA RDI,[RBX*0x8]
0000603c(4): MOV qword ptr [RSI + 0x20],RBX
00006040(5): CALL 0x00001ac0
00006045(3): TEST RAX,RAX
00006048(4): MOV qword ptr [RBP + 0x30],RAX
0000604c(2): JZ 0x0000608e
0000604e(3): TEST RBX,RBX
00006051(2): JLE 0x000060a0
00006053(2): XOR EBX,EBX
00006055(2): JMP 0x0000606a
00006060(4): ADD RBX,0x1
00006064(4): CMP qword ptr [RBP + 0x10],RBX
00006068(2): JLE 0x000060a0
0000606a(4): MOV RAX,qword ptr [RBP + 0x18]
0000606e(4): MOV RSI,qword ptr [RAX + RBX*0x8]
00006072(3): MOV RAX,RSI
00006075(4): SHL RAX,0x4
00006079(3): ADD RAX,qword ptr [R14]
0000607c(4): TEST byte ptr [RAX + 0x8],0x8
00006080(2): JNZ 0x00006060
00006082(3): MOV RDI,R13
00006085(5): CALL 0x00005e70
0000608a(2): TEST AL,AL
0000608c(2): JNZ 0x00006060
0000608e(1): POP RBX
0000608f(5): MOV EAX,0xc
00006094(1): POP RBP
00006095(2): POP R12
00006097(2): POP R13
00006099(2): POP R14
0000609b(1): RET
000060a0(7): AND R12,qword ptr [0x88 + R14]
000060a7(4): MOV RAX,qword ptr [R14 + 0x40]
000060ab(4): LEA RDX,[R12 + R12*0x2]
000060af(4): LEA RBX,[RAX + RDX*0x8]
000060b3(3): MOV RDX,qword ptr [RBX]
000060b6(4): CMP qword ptr [RBX + 0x8],RDX
000060ba(4): MOV RAX,qword ptr [RBX + 0x10]
000060be(4): LEA RSI,[RDX + 0x1]
000060c2(2): JLE 0x000060d6
000060c4(3): MOV qword ptr [RBX],RSI
000060c7(4): MOV qword ptr [RAX + RDX*0x8],RBP
000060cb(2): XOR EAX,EAX
000060cd(1): POP RBX
000060ce(1): POP RBP
000060cf(2): POP R12
000060d1(2): POP R13
000060d3(2): POP R14
000060d5(1): RET
000060d6(4): LEA R12,[RSI + RSI*0x1]
000060da(3): MOV RDI,RAX
000060dd(4): SHL RSI,0x4
000060e1(5): CALL 0x00001b30
000060e6(3): TEST RAX,RAX
000060e9(2): JZ 0x0000608e
000060eb(3): MOV RDX,qword ptr [RBX]
000060ee(4): MOV qword ptr [RBX + 0x10],RAX
000060f2(4): MOV qword ptr [RBX + 0x8],R12
000060f6(4): LEA RSI,[RDX + 0x1]
000060fa(2): JMP 0x000060c4
00006100(2): PUSH R12
00006102(4): MOV R12,qword ptr [RDI + 0x58]
00006106(4): CMP qword ptr [RDI + 0x40],R12
0000610a(1): PUSH RBP
0000610b(3): MOV RBP,RDI
0000610e(5): CMOVLE R12,qword ptr [RDI + 0x40]
00006113(1): PUSH RBX
00006114(4): MOV RBX,qword ptr [RDI + 0x30]
00006118(3): CMP R12,RBX
0000611b(2): JLE 0x00006155
0000611d(5): CALL 0x00001860
00006122(6): NOP word ptr [RAX + RAX*0x1]
00006128(4): MOV RDX,qword ptr [RBP]
0000612c(4): MOV RCX,qword ptr [RBP + 0x78]
00006130(3): ADD RDX,RBX
00006133(4): ADD RDX,qword ptr [RBP + 0x28]
00006137(3): TEST RCX,RCX
0000613a(3): MOVZX EDX,byte ptr [RDX]
0000613d(2): JNZ 0x00006168
0000613f(3): MOV RSI,qword ptr [RAX]
00006142(4): MOV RCX,qword ptr [RBP + 0x8]
00006146(3): MOV EDX,dword ptr [RSI + RDX*0x4]
00006149(3): MOV byte ptr [RCX + RBX*0x1],DL
0000614c(4): ADD RBX,0x1
00006150(3): CMP R12,RBX
00006153(2): JNZ 0x00006128
00006155(4): MOV qword ptr [RBP + 0x30],RBX
00006159(4): MOV qword ptr [RBP + 0x38],RBX
0000615d(1): POP RBX
0000615e(1): POP RBP
0000615f(2): POP R12
00006161(1): RET
00006168(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
0000616c(2): JMP 0x0000613f
00006170(2): PUSH R15
00006172(2): PUSH R14
00006174(2): PUSH R13
00006176(2): PUSH R12
00006178(1): PUSH RBP
00006179(1): PUSH RBX
0000617a(3): MOV RBX,RDI
0000617d(4): SUB RSP,0x68
00006181(4): MOV R12,qword ptr [RDI + 0x58]
00006185(4): MOV RBP,qword ptr [RDI + 0x30]
00006189(9): MOV RAX,qword ptr FS:[0x28]
00006192(5): MOV qword ptr [RSP + 0x58],RAX
00006197(2): XOR EAX,EAX
00006199(4): CMP qword ptr [RDI + 0x40],R12
0000619d(5): CMOVLE R12,qword ptr [RDI + 0x40]
000061a2(3): CMP R12,RBP
000061a5(6): JLE 0x00006234
000061ab(4): LEA R14,[RDI + 0x20]
000061af(5): LEA R13,[RSP + 0xc]
000061b4(4): NOP dword ptr [RAX]
000061b8(4): MOV RDI,qword ptr [RBX + 0x78]
000061bc(3): MOV RDX,R12
000061bf(4): MOV R15,qword ptr [RBX + 0x20]
000061c3(3): SUB RDX,RBP
000061c6(3): TEST RDI,RDI
000061c9(6): JNZ 0x000062b0
000061cf(4): MOV RSI,qword ptr [RBX + 0x28]
000061d3(3): ADD RSI,RBP
000061d6(3): ADD RSI,qword ptr [RBX]
000061d9(3): MOV RCX,R14
000061dc(3): MOV RDI,R13
000061df(5): CALL 0x00005880
000061e4(4): LEA RDX,[RAX + -0x1]
000061e8(4): CMP RDX,-0x3
000061ec(6): JA 0x00006280
000061f2(4): CMP RAX,-0x2
000061f6(4): MOV EDX,dword ptr [RSP + 0xc]
000061fa(2): JZ 0x00006270
000061fc(4): MOV RCX,qword ptr [RBX + 0x10]
00006200(4): LEA RSI,[RBP + 0x1]
00006204(8): LEA RDI,[RBP*0x4]
0000620c(3): MOV dword ptr [RCX + RBP*0x4],EDX
0000620f(3): ADD RBP,RAX
00006212(3): CMP RSI,RBP
00006215(2): JGE 0x00006260
00006217(5): LEA RDX,[RCX + RDI*0x1 + 0x4]
0000621c(4): LEA RAX,[RCX + RBP*0x4]
00006220(6): MOV dword ptr [RDX],0xffffffff
00006226(4): ADD RDX,0x4
0000622a(3): CMP RAX,RDX
0000622d(2): JNZ 0x00006220
0000622f(3): CMP RBP,R12
00006232(2): JL 0x000061b8
00006234(5): MOV RAX,qword ptr [RSP + 0x58]
00006239(9): XOR RAX,qword ptr FS:[0x28]
00006242(4): MOV qword ptr [RBX + 0x30],RBP
00006246(4): MOV qword ptr [RBX + 0x38],RBP
0000624a(6): JNZ 0x0000632e
00006250(4): ADD RSP,0x68
00006254(1): POP RBX
00006255(1): POP RBP
00006256(2): POP R12
00006258(2): POP R13
0000625a(2): POP R14
0000625c(2): POP R15
0000625e(1): RET
00006260(3): MOV RBP,RSI
00006263(3): CMP RBP,R12
00006266(6): JL 0x000061b8
0000626c(2): JMP 0x00006234
00006270(4): MOV RAX,qword ptr [RBX + 0x58]
00006274(4): CMP qword ptr [RBX + 0x40],RAX
00006278(6): JL 0x00006318
0000627e(2): NOP
00006280(3): MOV RAX,qword ptr [RBX]
00006283(4): MOV RCX,qword ptr [RBX + 0x78]
00006287(3): ADD RAX,RBP
0000628a(4): ADD RAX,qword ptr [RBX + 0x28]
0000628e(3): TEST RCX,RCX
00006291(3): MOVZX EDX,byte ptr [RAX]
00006294(4): MOV dword ptr [RSP + 0xc],EDX
00006298(6): JNZ 0x00006321
0000629e(4): MOV qword ptr [RBX + 0x20],R15
000062a2(5): MOV EAX,0x1
000062a7(5): JMP 0x000061fc
000062b0(6): MOV ECX,dword ptr [0x90 + RBX]
000062b6(2): XOR EAX,EAX
000062b8(5): LEA RSI,[RSP + 0x10]
000062bd(2): TEST ECX,ECX
000062bf(2): JG 0x000062e1
000062c1(5): JMP 0x000061d9
000062d0(4): ADD RAX,0x1
000062d4(3): CMP RDX,RAX
000062d7(6): JZ 0x000061d9
000062dd(4): MOV RDI,qword ptr [RBX + 0x78]
000062e1(3): MOV RCX,qword ptr [RBX]
000062e4(3): ADD RCX,RBP
000062e7(3): ADD RCX,RAX
000062ea(4): ADD RCX,qword ptr [RBX + 0x28]
000062ee(3): MOVZX ECX,byte ptr [RCX]
000062f1(4): MOVZX ECX,byte ptr [RDI + RCX*0x1]
000062f5(4): MOV RDI,qword ptr [RBX + 0x8]
000062f9(3): ADD RDI,RBP
000062fc(3): MOV byte ptr [RDI + RAX*0x1],CL
000062ff(3): MOV byte ptr [RSI + RAX*0x1],CL
00006302(3): LEA ECX,[RAX + 0x1]
00006305(6): CMP ECX,dword ptr [0x90 + RBX]
0000630b(2): JL 0x000062d0
0000630d(5): JMP 0x000061d9
00006318(4): MOV qword ptr [RBX + 0x20],R15
0000631c(5): JMP 0x00006234
00006321(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
00006325(4): MOV dword ptr [RSP + 0xc],EDX
00006329(5): JMP 0x0000629e
0000632e(5): CALL 0x00001990
00006333(3): NOP dword ptr [RAX]
00006336(10): NOP word ptr CS:[RAX + RAX*0x1]
00006340(2): PUSH R15
00006342(2): PUSH R14
00006344(3): MOV R14,RDI
00006347(2): PUSH R13
00006349(2): PUSH R12
0000634b(1): PUSH RBP
0000634c(1): PUSH RBX
0000634d(7): SUB RSP,0xa8
00006354(4): MOV RBX,qword ptr [RDI + 0x58]
00006358(4): MOV R15,qword ptr [RDI + 0x30]
0000635c(9): MOV RAX,qword ptr FS:[0x28]
00006365(8): MOV qword ptr [0x98 + RSP],RAX
0000636d(2): XOR EAX,EAX
0000636f(4): CMP qword ptr [RDI + 0x40],RBX
00006373(5): CMOVLE RBX,qword ptr [RDI + 0x40]
00006378(7): CMP byte ptr [0x8a + RDI],0x0
0000637f(2): JNZ 0x0000638c
00006381(5): CMP qword ptr [RDI + 0x78],0x0
00006386(6): JZ 0x00006510
0000638c(4): MOV R13,qword ptr [R14 + 0x38]
00006390(3): CMP R15,RBX
00006393(2): JL 0x000063d0
00006395(4): MOV qword ptr [R14 + 0x30],R15
00006399(4): MOV qword ptr [R14 + 0x38],R13
0000639d(2): XOR EAX,EAX
0000639f(8): MOV RCX,qword ptr [0x98 + RSP]
000063a7(9): XOR RCX,qword ptr FS:[0x28]
000063b0(6): JNZ 0x0000693a
000063b6(7): ADD RSP,0xa8
000063bd(1): POP RBX
000063be(1): POP RBP
000063bf(2): POP R12
000063c1(2): POP R13
000063c3(2): POP R14
000063c5(2): POP R15
000063c7(1): RET
000063d0(4): LEA RAX,[R14 + 0x20]
000063d4(5): MOV qword ptr [RSP + 0x8],RAX
000063d9(3): MOV RAX,RBX
000063dc(3): SUB RAX,R15
000063df(5): MOV qword ptr [RSP + 0x10],RAX
000063e4(5): LEA RAX,[RSP + 0x44]
000063e9(5): MOV qword ptr [RSP + 0x20],RAX
000063ee(4): MOV RDX,qword ptr [R14 + 0x78]
000063f2(4): MOV RAX,qword ptr [R14 + 0x20]
000063f6(3): TEST RDX,RDX
000063f9(5): MOV qword ptr [RSP + 0x48],RAX
000063fe(6): JNZ 0x00006709
00006404(4): MOV RBP,qword ptr [R14 + 0x28]
00006408(3): ADD RBP,R13
0000640b(3): ADD RBP,qword ptr [R14]
0000640e(5): MOV qword ptr [RSP + 0x18],RBP
00006413(5): MOV RCX,qword ptr [RSP + 0x8]
00006418(5): MOV RDX,qword ptr [RSP + 0x10]
0000641d(5): MOV RSI,qword ptr [RSP + 0x18]
00006422(5): MOV RDI,qword ptr [RSP + 0x20]
00006427(5): CALL 0x00005880
0000642c(3): MOV RBP,RAX
0000642f(4): LEA RAX,[RAX + -0x1]
00006433(4): CMP RAX,-0x4
00006437(5): MOV qword ptr [RSP + 0x20],RAX
0000643c(6): JA 0x00006779
00006442(4): MOV EDX,dword ptr [RSP + 0x44]
00006446(2): MOV EDI,EDX
00006448(4): MOV dword ptr [RSP + 0x10],EDX
0000644c(5): CALL 0x00001be0
00006451(4): MOV EDX,dword ptr [RSP + 0x10]
00006455(3): MOV R12D,EAX
00006458(5): MOV qword ptr [RSP + 0x8],R15
0000645d(2): CMP EDX,EAX
0000645f(6): JZ 0x00006760
00006465(5): LEA RCX,[RSP + 0x50]
0000646a(5): LEA RDX,[RSP + 0x48]
0000646f(2): MOV ESI,EAX
00006471(3): MOV RDI,RCX
00006474(5): MOV qword ptr [RSP + 0x10],RCX
00006479(5): CALL 0x00001ad0
0000647e(3): CMP RBP,RAX
00006481(3): MOV R11,RAX
00006484(5): MOV RCX,qword ptr [RSP + 0x10]
00006489(6): JNZ 0x00006816
0000648f(4): MOV RDI,qword ptr [R14 + 0x8]
00006493(3): MOV RDX,RBP
00006496(3): MOV RSI,RCX
00006499(3): ADD RDI,R15
0000649c(5): CALL 0x00001a90
000064a1(8): CMP byte ptr [0x8c + R14],0x0
000064a9(5): LEA RAX,[RBP + R13*0x1]
000064ae(6): JNZ 0x000067e5
000064b4(4): ADD R15,0x1
000064b8(5): MOV RSI,qword ptr [RSP + 0x8]
000064bd(4): MOV RDX,qword ptr [R14 + 0x10]
000064c1(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
000064c6(3): MOV R13,RAX
000064c9(3): CMP R15,RCX
000064cc(8): LEA RAX,[RSI*0x4]
000064d4(4): MOV dword ptr [RDX + RSI*0x4],R12D
000064d8(6): JGE 0x00006390
000064de(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
000064e3(4): LEA RDX,[RDX + RCX*0x4]
000064e7(9): NOP word ptr [RAX + RAX*0x1]
000064f0(6): MOV dword ptr [RAX],0xffffffff
000064f6(4): ADD RAX,0x4
000064fa(3): CMP RDX,RAX
000064fd(2): JNZ 0x000064f0
000064ff(3): MOV R15,RCX
00006502(5): JMP 0x00006390
00006510(7): CMP byte ptr [0x8c + RDI],0x0
00006517(6): JNZ 0x0000638c
0000651d(3): CMP R15,RBX
00006520(6): JGE 0x000066b8
00006526(4): LEA RAX,[RDI + 0x20]
0000652a(5): MOV qword ptr [RSP + 0x8],RAX
0000652f(5): LEA RAX,[RSP + 0x44]
00006534(5): MOV qword ptr [RSP + 0x30],RAX
00006539(5): LEA RAX,[RSP + 0x48]
0000653e(5): MOV qword ptr [RSP + 0x38],RAX
00006543(5): LEA RAX,[RSP + 0x50]
00006548(5): MOV qword ptr [RSP + 0x28],RAX
0000654d(3): NOP dword ptr [RAX]
00006550(4): MOV RBP,qword ptr [R14 + 0x28]
00006554(3): MOV R13,R15
00006557(3): ADD RBP,R15
0000655a(3): ADD RBP,qword ptr [R14]
0000655d(5): MOVZX R12D,byte ptr [RBP]
00006562(4): TEST R12B,0x80
00006566(2): JNZ 0x0000657a
00006568(5): MOV RDI,qword ptr [RSP + 0x8]
0000656d(5): CALL 0x00001c40
00006572(2): TEST EAX,EAX
00006574(6): JNZ 0x00006668
0000657a(4): MOV RAX,qword ptr [R14 + 0x20]
0000657e(5): MOV RDI,qword ptr [RSP + 0x30]
00006583(3): MOV RDX,RBX
00006586(5): MOV RCX,qword ptr [RSP + 0x8]
0000658b(3): SUB RDX,R15
0000658e(3): MOV RSI,RBP
00006591(5): MOV qword ptr [RSP + 0x10],RDX
00006596(5): MOV qword ptr [RSP + 0x48],RAX
0000659b(5): MOV qword ptr [RSP + 0x20],RDI
000065a0(5): CALL 0x00005880
000065a5(3): MOV RBP,RAX
000065a8(4): LEA RAX,[RAX + -0x1]
000065ac(4): CMP RAX,-0x4
000065b0(6): JA 0x00006698
000065b6(4): MOV EDX,dword ptr [RSP + 0x44]
000065ba(2): MOV EDI,EDX
000065bc(4): MOV dword ptr [RSP + 0x18],EDX
000065c0(5): CALL 0x00001be0
000065c5(4): MOV EDX,dword ptr [RSP + 0x18]
000065c9(3): MOV R12D,EAX
000065cc(2): CMP EDX,EAX
000065ce(2): JZ 0x00006648
000065d0(5): MOV RDX,qword ptr [RSP + 0x38]
000065d5(5): MOV RDI,qword ptr [RSP + 0x28]
000065da(2): MOV ESI,EAX
000065dc(5): CALL 0x00001ad0
000065e1(3): CMP RBP,RAX
000065e4(6): JNZ 0x00006758
000065ea(4): MOV RDI,qword ptr [R14 + 0x8]
000065ee(5): MOV RSI,qword ptr [RSP + 0x28]
000065f3(3): MOV RDX,RBP
000065f6(3): ADD RDI,R15
000065f9(5): CALL 0x00001a90
000065fe(4): ADD R15,0x1
00006602(4): MOV RDX,qword ptr [R14 + 0x10]
00006606(8): LEA RAX,[R13*0x4]
0000660e(5): LEA RCX,[R15 + RBP*0x1 + -0x1]
00006613(3): CMP R15,RCX
00006616(4): MOV dword ptr [RDX + R13*0x4],R12D
0000661a(2): JGE 0x0000663a
0000661c(5): LEA RAX,[RDX + RAX*0x1 + 0x4]
00006621(4): LEA RDX,[RDX + RCX*0x4]
00006625(3): NOP dword ptr [RAX]
00006628(6): MOV dword ptr [RAX],0xffffffff
0000662e(4): ADD RAX,0x4
00006632(3): CMP RDX,RAX
00006635(2): JNZ 0x00006628
00006637(3): MOV R15,RCX
0000663a(3): CMP RBX,R15
0000663d(6): JG 0x00006550
00006643(2): JMP 0x000066b8
00006648(4): MOV RSI,qword ptr [R14 + 0x28]
0000664c(4): MOV RDI,qword ptr [R14 + 0x8]
00006650(3): MOV RDX,RBP
00006653(3): ADD RSI,R15
00006656(3): ADD RSI,qword ptr [R14]
00006659(3): ADD RDI,R15
0000665c(5): CALL 0x00001a90
00006661(2): JMP 0x000065fe
00006668(5): CALL 0x00001860
0000666d(3): MOV RAX,qword ptr [RAX]
00006670(4): MOV RDX,qword ptr [R14 + 0x8]
00006674(4): MOV EAX,dword ptr [RAX + R12*0x4]
00006678(4): MOV byte ptr [RDX + R15*0x1],AL
0000667c(4): MOV RDX,qword ptr [R14 + 0x8]
00006680(4): MOV RAX,qword ptr [R14 + 0x10]
00006684(5): MOVZX EDX,byte ptr [RDX + R15*0x1]
00006689(4): MOV dword ptr [RAX + R15*0x4],EDX
0000668d(4): ADD R15,0x1
00006691(2): JMP 0x0000663a
00006698(4): CMP RAX,-0x3
0000669c(2): JNZ 0x000066d0
0000669e(4): MOV RAX,qword ptr [R14 + 0x58]
000066a2(4): CMP qword ptr [R14 + 0x40],RAX
000066a6(2): JGE 0x000066d0
000066a8(5): MOV RAX,qword ptr [RSP + 0x48]
000066ad(4): MOV qword ptr [R14 + 0x20],RAX
000066b1(7): NOP dword ptr [RAX]
000066b8(4): MOV qword ptr [R14 + 0x30],R15
000066bc(4): MOV qword ptr [R14 + 0x38],R15
000066c0(2): XOR EAX,EAX
000066c2(5): JMP 0x0000639f
000066d0(3): MOV RAX,qword ptr [R14]
000066d3(4): MOV RDX,qword ptr [R14 + 0x8]
000066d7(3): ADD RAX,R15
000066da(4): ADD RAX,qword ptr [R14 + 0x28]
000066de(3): MOVZX EAX,byte ptr [RAX]
000066e1(4): MOV byte ptr [RDX + R15*0x1],AL
000066e5(4): MOV RDX,qword ptr [R14 + 0x10]
000066e9(4): ADD R15,0x1
000066ed(4): CMP RBP,-0x1
000066f1(4): MOV dword ptr [RDX + R13*0x4],EAX
000066f5(6): JNZ 0x0000663a
000066fb(5): MOV RAX,qword ptr [RSP + 0x48]
00006700(4): MOV qword ptr [R14 + 0x20],RAX
00006704(5): JMP 0x0000663a
00006709(7): MOV EAX,dword ptr [0x90 + R14]
00006710(2): TEST EAX,EAX
00006712(6): JLE 0x00006930
00006718(4): MOV RDI,qword ptr [R14 + 0x28]
0000671c(4): LEA R11D,[RAX + -0x1]
00006720(5): LEA RCX,[RSP + 0x50]
00006725(2): XOR EAX,EAX
00006727(3): ADD RDI,R13
0000672a(3): ADD RDI,qword ptr [R14]
0000672d(2): JMP 0x0000673a
0000672f(4): ADD RAX,0x1
00006733(5): CMP qword ptr [RSP + 0x10],RAX
00006738(2): JZ 0x0000674b
0000673a(4): MOVZX ESI,byte ptr [RDI + RAX*0x1]
0000673e(3): CMP R11,RAX
00006741(4): MOVZX ESI,byte ptr [RDX + RSI*0x1]
00006745(4): MOV byte ptr [RCX + RAX*0x1],SIL
00006749(2): JNZ 0x0000672f
0000674b(5): MOV qword ptr [RSP + 0x18],RCX
00006750(5): JMP 0x00006413
00006758(3): MOV R13,R15
0000675b(5): JMP 0x000063ee
00006760(4): MOV RDI,qword ptr [R14 + 0x8]
00006764(5): MOV RSI,qword ptr [RSP + 0x18]
00006769(3): MOV RDX,RBP
0000676c(3): ADD RDI,R15
0000676f(5): CALL 0x00001a90
00006774(5): JMP 0x000064a1
00006779(6): CMP qword ptr [RSP + 0x20],-0x3
0000677f(2): JNZ 0x0000678b
00006781(4): MOV RAX,qword ptr [R14 + 0x58]
00006785(4): CMP qword ptr [R14 + 0x40],RAX
00006789(2): JL 0x00006808
0000678b(3): MOV RAX,qword ptr [R14]
0000678e(4): MOV RDX,qword ptr [R14 + 0x78]
00006792(3): ADD RAX,R13
00006795(4): ADD RAX,qword ptr [R14 + 0x28]
00006799(3): TEST RDX,RDX
0000679c(3): MOVZX EAX,byte ptr [RAX]
0000679f(6): JNZ 0x0000694c
000067a5(4): MOV RDX,qword ptr [R14 + 0x8]
000067a9(3): MOV RCX,R15
000067ac(4): MOV byte ptr [RDX + R15*0x1],AL
000067b0(8): CMP byte ptr [0x8c + R14],0x0
000067b8(6): JNZ 0x0000693f
000067be(4): MOV RDX,qword ptr [R14 + 0x10]
000067c2(4): ADD R13,0x1
000067c6(4): ADD R15,0x1
000067ca(4): CMP RBP,-0x1
000067ce(3): MOV dword ptr [RDX + RCX*0x4],EAX
000067d1(6): JNZ 0x00006390
000067d7(5): MOV RAX,qword ptr [RSP + 0x48]
000067dc(4): MOV qword ptr [R14 + 0x20],RAX
000067e0(5): JMP 0x00006390
000067e5(4): MOV RDX,qword ptr [R14 + 0x18]
000067e9(3): MOV RCX,R15
000067ec(3): MOV R10,R13
000067ef(3): SUB RCX,R13
000067f2(4): LEA RDX,[RDX + RCX*0x8]
000067f6(4): MOV qword ptr [RDX + R10*0x8],R10
000067fa(4): ADD R10,0x1
000067fe(3): CMP RAX,R10
00006801(2): JNZ 0x000067f6
00006803(5): JMP 0x000064b4
00006808(5): MOV RAX,qword ptr [RSP + 0x48]
0000680d(4): MOV qword ptr [R14 + 0x20],RAX
00006811(5): JMP 0x00006395
00006816(4): CMP RAX,-0x1
0000681a(6): JZ 0x00006760
00006820(4): LEA RAX,[RAX + R15*0x1]
00006824(3): MOV RSI,RAX
00006827(5): MOV qword ptr [RSP + 0x8],RAX
0000682c(4): MOV RAX,qword ptr [R14 + 0x40]
00006830(3): CMP RSI,RAX
00006833(2): JA 0x00006808
00006835(5): CMP qword ptr [R14 + 0x18],0x0
0000683a(6): JZ 0x000068f8
00006840(8): CMP byte ptr [0x8c + R14],0x0
00006848(2): JNZ 0x0000686a
0000684a(3): TEST R15,R15
0000684d(2): JZ 0x00006862
0000684f(4): MOV RDX,qword ptr [R14 + 0x18]
00006853(2): XOR EAX,EAX
00006855(4): MOV qword ptr [RDX + RAX*0x8],RAX
00006859(4): ADD RAX,0x1
0000685d(3): CMP RAX,R15
00006860(2): JNZ 0x00006855
00006862(8): MOV byte ptr [0x8c + R14],0x1
0000686a(4): MOV RDI,qword ptr [R14 + 0x8]
0000686e(3): MOV RSI,RCX
00006871(3): MOV RDX,R11
00006874(5): MOV qword ptr [RSP + 0x10],R11
00006879(3): ADD RDI,R15
0000687c(5): CALL 0x00001a90
00006881(4): MOV RAX,qword ptr [R14 + 0x10]
00006885(5): MOV R11,qword ptr [RSP + 0x10]
0000688a(4): LEA RCX,[RAX + R15*0x4]
0000688e(4): MOV RAX,qword ptr [R14 + 0x18]
00006892(4): CMP R11,0x1
00006896(3): MOV dword ptr [RCX],R12D
00006899(4): LEA RSI,[RAX + R15*0x8]
0000689d(3): MOV qword ptr [RSI],R13
000068a0(2): JBE 0x000068ca
000068a2(5): MOV EAX,0x1
000068a7(5): MOV RDX,qword ptr [RSP + 0x20]
000068ac(3): CMP RAX,RBP
000068af(4): CMOVC RDX,RAX
000068b3(3): ADD RDX,R13
000068b6(4): MOV qword ptr [RSI + RAX*0x8],RDX
000068ba(7): MOV dword ptr [RCX + RAX*0x4],0xffffffff
000068c1(4): ADD RAX,0x1
000068c5(3): CMP RAX,R11
000068c8(2): JNZ 0x000068a7
000068ca(4): MOV RBX,qword ptr [R14 + 0x58]
000068ce(3): SUB R11,RBP
000068d1(3): ADD RBX,R11
000068d4(4): CMP R13,qword ptr [R14 + 0x60]
000068d8(4): MOV qword ptr [R14 + 0x58],RBX
000068dc(2): JGE 0x000068e2
000068de(4): ADD qword ptr [R14 + 0x68],R11
000068e2(4): CMP qword ptr [R14 + 0x40],RBX
000068e6(5): MOV R15,qword ptr [RSP + 0x8]
000068eb(5): CMOVLE RBX,qword ptr [R14 + 0x40]
000068f0(3): ADD R13,RBP
000068f3(5): JMP 0x00006390
000068f8(8): LEA RDI,[RAX*0x8]
00006900(5): MOV qword ptr [RSP + 0x18],RCX
00006905(5): MOV qword ptr [RSP + 0x10],R11
0000690a(5): CALL 0x00001ac0
0000690f(3): TEST RAX,RAX
00006912(4): MOV qword ptr [R14 + 0x18],RAX
00006916(5): MOV R11,qword ptr [RSP + 0x10]
0000691b(5): MOV RCX,qword ptr [RSP + 0x18]
00006920(6): JNZ 0x00006840
00006926(5): MOV EAX,0xc
0000692b(5): JMP 0x0000639f
00006930(5): LEA RCX,[RSP + 0x50]
00006935(5): JMP 0x0000674b
0000693a(5): CALL 0x00001990
0000693f(4): MOV RDX,qword ptr [R14 + 0x18]
00006943(4): MOV qword ptr [RDX + R15*0x8],R13
00006947(5): JMP 0x000067be
0000694c(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
00006950(5): JMP 0x000067a5
00006960(1): PUSH RBP
00006961(1): PUSH RBX
00006962(10): MOV RDX,0xffffffffffffffe
0000696c(4): SUB RSP,0x8
00006970(4): MOV RAX,qword ptr [RDI + 0x40]
00006974(3): CMP RAX,RDX
00006977(6): JA 0x00006a88
0000697d(4): MOV RDX,qword ptr [RDI + 0x58]
00006981(3): ADD RAX,RAX
00006984(3): MOVSXD RSI,ESI
00006987(3): MOV RBX,RDI
0000698a(3): CMP RAX,RDX
0000698d(4): CMOVG RAX,RDX
00006991(3): CMP RAX,RSI
00006994(4): CMOVGE RSI,RAX
00006998(5): CALL 0x00005dd0
0000699d(2): TEST EAX,EAX
0000699f(2): MOV EBP,EAX
000069a1(6): JNZ 0x00006a5d
000069a7(7): MOV RDI,qword ptr [0xb8 + RBX]
000069ae(3): TEST RDI,RDI
000069b1(2): JZ 0x000069d4
000069b3(4): MOV RAX,qword ptr [RBX + 0x40]
000069b7(8): LEA RSI,[0x8 + RAX*0x8]
000069bf(5): CALL 0x00001b30
000069c4(3): TEST RAX,RAX
000069c7(6): JZ 0x00006a88
000069cd(7): MOV qword ptr [0xb8 + RBX],RAX
000069d4(7): CMP byte ptr [0x88 + RBX],0x0
000069db(6): MOV EAX,dword ptr [0x90 + RBX]
000069e1(2): JZ 0x00006a00
000069e3(3): CMP EAX,0x1
000069e6(3): MOV RDI,RBX
000069e9(6): JLE 0x00006aa0
000069ef(4): ADD RSP,0x8
000069f3(1): POP RBX
000069f4(1): POP RBP
000069f5(5): JMP 0x00006340
00006a00(3): CMP EAX,0x1
00006a03(2): JG 0x00006a70
00006a05(4): MOV RCX,qword ptr [RBX + 0x78]
00006a09(3): TEST RCX,RCX
00006a0c(2): JZ 0x00006a5d
00006a0e(4): MOV RSI,qword ptr [RBX + 0x58]
00006a12(4): CMP qword ptr [RBX + 0x40],RSI
00006a16(5): CMOVLE RSI,qword ptr [RBX + 0x40]
00006a1b(4): MOV RAX,qword ptr [RBX + 0x30]
00006a1f(3): CMP RSI,RAX
00006a22(2): JG 0x00006a34
00006a24(2): JMP 0x00006a55
00006a30(4): MOV RCX,qword ptr [RBX + 0x78]
00006a34(3): MOV RDX,qword ptr [RBX]
00006a37(3): ADD RDX,RAX
00006a3a(4): ADD RDX,qword ptr [RBX + 0x28]
00006a3e(3): MOVZX EDX,byte ptr [RDX]
00006a41(4): MOVZX ECX,byte ptr [RCX + RDX*0x1]
00006a45(4): MOV RDX,qword ptr [RBX + 0x8]
00006a49(3): MOV byte ptr [RDX + RAX*0x1],CL
00006a4c(4): ADD RAX,0x1
00006a50(3): CMP RSI,RAX
00006a53(2): JNZ 0x00006a30
00006a55(4): MOV qword ptr [RBX + 0x30],RAX
00006a59(4): MOV qword ptr [RBX + 0x38],RAX
00006a5d(4): ADD RSP,0x8
00006a61(2): MOV EAX,EBP
00006a63(1): POP RBX
00006a64(1): POP RBP
00006a65(1): RET
00006a70(3): MOV RDI,RBX
00006a73(5): CALL 0x00006170
00006a78(4): ADD RSP,0x8
00006a7c(2): MOV EAX,EBP
00006a7e(1): POP RBX
00006a7f(1): POP RBP
00006a80(1): RET
00006a88(5): MOV EBP,0xc
00006a8d(4): ADD RSP,0x8
00006a91(2): MOV EAX,EBP
00006a93(1): POP RBX
00006a94(1): POP RBP
00006a95(1): RET
00006aa0(5): CALL 0x00006100
00006aa5(4): ADD RSP,0x8
00006aa9(2): MOV EAX,EBP
00006aab(1): POP RBX
00006aac(1): POP RBP
00006aad(1): RET
00006ab0(2): PUSH R12
00006ab2(1): PUSH RBP
00006ab3(3): MOV RBP,RSI
00006ab6(1): PUSH RBX
00006ab7(4): MOV RAX,qword ptr [RDI + 0x40]
00006abb(3): MOV RBX,RDI
00006abe(7): MOV R12,qword ptr [0xc0 + RDI]
00006ac5(3): CMP RAX,RSI
00006ac8(2): JG 0x00006af0
00006aca(4): CMP RAX,qword ptr [RDI + 0x58]
00006ace(2): JGE 0x00006af0
00006ad0(3): LEA ESI,[RBP + 0x1]
00006ad3(3): MOV RDI,RBX
00006ad6(5): CALL 0x00006960
00006adb(2): TEST EAX,EAX
00006add(2): JNZ 0x00006ae6
00006adf(3): CMP R12,RBP
00006ae2(2): JL 0x00006b10
00006ae4(2): XOR EAX,EAX
00006ae6(1): POP RBX
00006ae7(1): POP RBP
00006ae8(2): POP R12
00006aea(1): RET
00006af0(4): MOV RAX,qword ptr [RBX + 0x30]
00006af4(3): CMP RAX,RBP
00006af7(2): JG 0x00006adf
00006af9(4): CMP RAX,qword ptr [RBX + 0x58]
00006afd(2): JGE 0x00006adf
00006aff(3): LEA ESI,[RBP + 0x1]
00006b02(3): MOV RDI,RBX
00006b05(5): CALL 0x00006960
00006b0a(2): TEST EAX,EAX
00006b0c(2): JZ 0x00006adf
00006b0e(2): JMP 0x00006ae6
00006b10(7): MOV RAX,qword ptr [0xb8 + RBX]
00006b17(3): MOV RDX,RBP
00006b1a(2): XOR ESI,ESI
00006b1c(3): SUB RDX,R12
00006b1f(4): SHL RDX,0x3
00006b23(5): LEA RDI,[RAX + R12*0x8 + 0x8]
00006b28(5): CALL 0x00001a10
00006b2d(7): MOV qword ptr [0xc0 + RBX],RBP
00006b34(2): JMP 0x00006ae4
00006b40(1): PUSH RBX
00006b41(3): MOV RBX,RDI
00006b44(3): MOV RDI,qword ptr [RDI]
00006b47(5): CALL 0x00001880
00006b4c(4): MOV RDI,qword ptr [RBX + 0x8]
00006b50(5): CALL 0x00001880
00006b55(4): MOV RDI,qword ptr [RBX + 0x10]
00006b59(5): CALL 0x00001880
00006b5e(4): MOV RDI,qword ptr [RBX + 0x18]
00006b62(5): CALL 0x00001880
00006b67(3): MOV RDI,RBX
00006b6a(1): POP RBX
00006b6b(5): JMP 0x00001880
00006b70(3): MOV EAX,dword ptr [RDI + 0x8]
00006b73(5): AND EAX,0x400ff
00006b78(3): CMP EAX,0x6
00006b7b(2): JZ 0x00006b90
00006b7d(3): CMP EAX,0x3
00006b80(2): JZ 0x00006b88
00006b82(2): RET
00006b88(3): MOV RDI,qword ptr [RDI]
00006b8b(5): JMP 0x00001880
00006b90(3): MOV RDI,qword ptr [RDI]
00006b93(2): JMP 0x00006b40
00006ba0(4): LEA RDI,[RSI + 0x28]
00006ba4(4): SUB RSP,0x8
00006ba8(5): CALL 0x00006b70
00006bad(2): XOR EAX,EAX
00006baf(4): ADD RSP,0x8
00006bb3(1): RET
00006bc0(2): PUSH R15
00006bc2(2): PUSH R14
00006bc4(3): MOV R14,RSI
00006bc7(2): PUSH R13
00006bc9(2): PUSH R12
00006bcb(1): PUSH RBP
00006bcc(1): PUSH RBX
00006bcd(3): MOV RBX,RDI
00006bd0(4): SUB RSP,0x18
00006bd4(4): MOV RSI,qword ptr [RDI + 0x10]
00006bd8(4): MOV RBP,qword ptr [RDI + 0x8]
00006bdc(3): CMP RSI,RBP
00006bdf(6): JNC 0x00006c90
00006be5(4): MOV R12,qword ptr [RDI + 0x18]
00006be9(4): MOV RBP,qword ptr [RDI + 0x28]
00006bed(3): MOV RAX,RSI
00006bf0(2): MOV ECX,EDX
00006bf2(4): SHL RAX,0x4
00006bf6(3): ADD RAX,qword ptr [RBX]
00006bf9(6): AND ECX,0xfffc00ff
00006bff(4): MOV qword ptr [RAX + 0x8],RDX
00006c03(3): MOV dword ptr [RAX + 0x8],ECX
00006c06(2): XOR ECX,ECX
00006c08(3): CMP DL,0x6
00006c0b(3): MOV qword ptr [RAX],R14
00006c0e(3): SETZ CL
00006c11(3): CMP DL,0x5
00006c14(2): JNZ 0x00006c22
00006c16(2): XOR ECX,ECX
00006c18(7): CMP dword ptr [0xb4 + RBX],0x1
00006c1f(3): SETG CL
00006c22(4): MOVZX EDX,byte ptr [RAX + 0xa]
00006c26(3): SHL ECX,0x4
00006c29(4): PXOR XMM0,XMM0
00006c2d(3): AND EDX,0xffffffef
00006c30(2): OR EDX,ECX
00006c32(3): MOV byte ptr [RAX + 0xa],DL
00006c35(8): MOV qword ptr [R12 + RSI*0x8],-0x1
00006c3d(4): MOV RAX,qword ptr [RBX + 0x10]
00006c41(4): LEA RAX,[RAX + RAX*0x2]
00006c45(5): LEA RAX,[RBP + RAX*0x8]
00006c4a(3): MOVUPS xmmword ptr [RAX],XMM0
00006c4d(8): MOV qword ptr [RAX + 0x10],0x0
00006c55(4): MOV RAX,qword ptr [RBX + 0x10]
00006c59(4): LEA RDX,[RAX + RAX*0x2]
00006c5d(4): MOV RAX,qword ptr [RBX + 0x30]
00006c61(4): LEA RAX,[RAX + RDX*0x8]
00006c65(3): MOVUPS xmmword ptr [RAX],XMM0
00006c68(8): MOV qword ptr [RAX + 0x10],0x0
00006c70(4): MOV RAX,qword ptr [RBX + 0x10]
00006c74(4): LEA RDX,[RAX + 0x1]
00006c78(4): MOV qword ptr [RBX + 0x10],RDX
00006c7c(4): ADD RSP,0x18
00006c80(1): POP RBX
00006c81(1): POP RBP
00006c82(2): POP R12
00006c84(2): POP R13
00006c86(2): POP R14
00006c88(2): POP R15
00006c8a(1): RET
00006c90(5): LEA R13,[RBP + RBP*0x1]
00006c95(10): MOV RAX,0xaaaaaaaaaaaaaaa
00006c9f(3): CMP R13,RAX
00006ca2(6): JA 0x00006d82
00006ca8(3): MOV RDI,qword ptr [RDI]
00006cab(3): MOV RSI,RBP
00006cae(5): MOV qword ptr [RSP + 0x8],RDX
00006cb3(4): SHL RSI,0x5
00006cb7(5): CALL 0x00001b30
00006cbc(3): TEST RAX,RAX
00006cbf(6): JZ 0x00006d82
00006cc5(3): MOV R15,RBP
00006cc8(4): MOV RDI,qword ptr [RBX + 0x18]
00006ccc(3): MOV qword ptr [RBX],RAX
00006ccf(4): SHL R15,0x4
00006cd3(3): MOV RSI,R15
00006cd6(5): CALL 0x00001b30
00006cdb(4): MOV RDI,qword ptr [RBX + 0x20]
00006cdf(3): MOV RSI,R15
00006ce2(5): LEA R15,[R13 + RBP*0x4]
00006ce7(3): MOV R12,RAX
00006cea(4): SHL R15,0x3
00006cee(5): CALL 0x00001b30
00006cf3(4): MOV RDI,qword ptr [RBX + 0x28]
00006cf7(3): MOV RSI,R15
00006cfa(4): MOV qword ptr [RSP],RAX
00006cfe(5): CALL 0x00001b30
00006d03(4): MOV RDI,qword ptr [RBX + 0x30]
00006d07(3): MOV RSI,R15
00006d0a(3): MOV RBP,RAX
00006d0d(5): CALL 0x00001b30
00006d12(3): TEST R12,R12
00006d15(4): MOV RCX,qword ptr [RSP]
00006d19(2): JZ 0x00006d50
00006d1b(3): TEST RCX,RCX
00006d1e(2): JZ 0x00006d50
00006d20(3): TEST RBP,RBP
00006d23(2): JZ 0x00006d50
00006d25(3): TEST RAX,RAX
00006d28(5): MOV RDX,qword ptr [RSP + 0x8]
00006d2d(2): JZ 0x00006d50
00006d2f(4): MOV qword ptr [RBX + 0x18],R12
00006d33(4): MOV qword ptr [RBX + 0x20],RCX
00006d37(4): MOV qword ptr [RBX + 0x28],RBP
00006d3b(4): MOV qword ptr [RBX + 0x30],RAX
00006d3f(4): MOV qword ptr [RBX + 0x8],R13
00006d43(4): MOV RSI,qword ptr [RBX + 0x10]
00006d47(5): JMP 0x00006bed
00006d50(3): MOV RDI,R12
00006d53(5): MOV qword ptr [RSP + 0x8],RAX
00006d58(4): MOV qword ptr [RSP],RCX
00006d5c(5): CALL 0x00001880
00006d61(4): MOV RCX,qword ptr [RSP]
00006d65(3): MOV RDI,RCX
00006d68(5): CALL 0x00001880
00006d6d(3): MOV RDI,RBP
00006d70(5): CALL 0x00001880
00006d75(5): MOV RAX,qword ptr [RSP + 0x8]
00006d7a(3): MOV RDI,RAX
00006d7d(5): CALL 0x00001880
00006d82(7): MOV RAX,-0x1
00006d89(5): JMP 0x00006c7c
00006d90(2): PUSH R13
00006d92(2): PUSH R12
00006d94(3): MOV R13,RSI
00006d97(1): PUSH RBP
00006d98(1): PUSH RBX
00006d99(4): SHL R13,0x4
00006d9d(3): MOV RBP,RSI
00006da0(3): MOV R12D,EDX
00006da3(3): MOV RBX,RDI
00006da6(4): SUB RSP,0x8
00006daa(3): MOV RAX,qword ptr [RDI]
00006dad(4): MOV RSI,qword ptr [RAX + R13*0x1]
00006db1(5): MOV RDX,qword ptr [RAX + R13*0x1 + 0x8]
00006db6(5): CALL 0x00006bc0
00006dbb(4): CMP RAX,-0x1
00006dbf(2): JZ 0x00006e24
00006dc1(3): MOV EDI,R12D
00006dc4(3): MOV R8,qword ptr [RBX]
00006dc7(3): MOV RSI,RAX
00006dca(5): AND DI,0x3ff
00006dcf(4): SHL RSI,0x4
00006dd3(2): MOV ECX,EDI
00006dd5(6): AND ECX,0x3ff
00006ddb(3): ADD RSI,R8
00006dde(3): SHL ECX,0x8
00006de1(2): MOV EDX,ECX
00006de3(3): MOV ECX,dword ptr [RSI + 0x8]
00006de6(6): AND ECX,0xfffc00ff
00006dec(2): OR ECX,EDX
00006dee(3): MOV dword ptr [RSI + 0x8],ECX
00006df1(5): MOV EDX,dword ptr [R8 + R13*0x1 + 0x8]
00006df6(6): AND ECX,0xfffc00ff
00006dfc(3): SHR EDX,0x8
00006dff(2): OR EDX,EDI
00006e01(6): AND EDX,0x3ff
00006e07(3): SHL EDX,0x8
00006e0a(2): OR EDX,ECX
00006e0c(2): MOV ECX,EDX
00006e0e(3): MOV dword ptr [RSI + 0x8],EDX
00006e11(3): SHR ECX,0x10
00006e14(2): MOV EDX,ECX
00006e16(3): OR EDX,0x4
00006e19(3): MOV byte ptr [RSI + 0xa],DL
00006e1c(4): MOV RDX,qword ptr [RBX + 0x20]
00006e20(4): MOV qword ptr [RDX + RAX*0x8],RBP
00006e24(4): ADD RSP,0x8
00006e28(1): POP RBX
00006e29(1): POP RBP
00006e2a(2): POP R12
00006e2c(2): POP R13
00006e2e(1): RET
00006e30(2): PUSH R15
00006e32(2): PUSH R14
00006e34(3): MOV R9,RSI
00006e37(2): PUSH R13
00006e39(2): PUSH R12
00006e3b(3): MOV R14,RDI
00006e3e(1): PUSH RBP
00006e3f(1): PUSH RBX
00006e40(3): MOV R13,RDX
00006e43(3): MOV EBP,R8D
00006e46(4): SUB RSP,0x18
00006e4a(5): MOV qword ptr [RSP + 0x8],RCX
00006e4f(3): MOV R8,qword ptr [R14]
00006e52(3): MOV RAX,R9
00006e55(4): MOV RDI,qword ptr [R14 + 0x28]
00006e59(4): SHL RAX,0x4
00006e5d(3): MOV R12,R13
00006e60(3): ADD RAX,R8
00006e63(4): CMP byte ptr [RAX + 0x8],0x4
00006e67(6): JZ 0x00007020
00006e6d(4): LEA R12,[R9 + R9*0x2]
00006e71(4): SHL R12,0x3
00006e75(4): LEA RSI,[RDI + R12*0x1]
00006e79(4): MOV RCX,qword ptr [RSI + 0x8]
00006e7d(3): TEST RCX,RCX
00006e80(6): JZ 0x00007079
00006e86(5): LEA RBX,[R13 + R13*0x2]
00006e8b(4): MOV RSI,qword ptr [RSI + 0x10]
00006e8f(4): SHL RBX,0x3
00006e93(3): ADD RDI,RBX
00006e96(4): CMP RCX,0x1
00006e9a(3): MOV R15,qword ptr [RSI]
00006e9d(8): MOV qword ptr [RDI + 0x8],0x0
00006ea5(6): JZ 0x00006fc0
00006eab(4): MOV RDX,qword ptr [R14 + 0x10]
00006eaf(4): LEA RSI,[RDX + -0x1]
00006eb3(3): MOV RAX,RSI
00006eb6(4): SHL RAX,0x4
00006eba(3): ADD RAX,R8
00006ebd(4): TEST byte ptr [RAX + 0xa],0x4
00006ec1(6): JZ 0x00006f70
00006ec7(3): TEST RSI,RSI
00006eca(6): JLE 0x00006f70
00006ed0(4): SHL RDX,0x4
00006ed4(3): SUB R8,RAX
00006ed7(4): MOV RCX,qword ptr [R14 + 0x20]
00006edb(5): LEA R8,[R8 + RDX*0x1 + -0x20]
00006ee0(2): JMP 0x00006efa
00006ee8(3): ADD RAX,R8
00006eeb(4): SUB RSI,0x1
00006eef(4): TEST byte ptr [RAX + 0xa],0x4
00006ef3(2): JZ 0x00006f70
00006ef5(3): TEST RSI,RSI
00006ef8(2): JLE 0x00006f70
00006efa(4): CMP qword ptr [RCX + RSI*0x8],R15
00006efe(2): JNZ 0x00006ee8
00006f00(3): MOV EDX,dword ptr [RAX + 0x8]
00006f03(3): SHR EDX,0x8
00006f06(6): AND EDX,0x3ff
00006f0c(2): CMP EBP,EDX
00006f0e(2): JNZ 0x00006ee8
00006f10(5): CALL 0x00005ee0
00006f15(2): TEST AL,AL
00006f17(2): JZ 0x00006f5b
00006f19(4): MOV RAX,qword ptr [R14 + 0x28]
00006f1d(2): MOV EDX,EBP
00006f1f(3): MOV RDI,R14
00006f22(5): MOV RAX,qword ptr [RAX + R12*0x1 + 0x10]
00006f27(4): MOV R9,qword ptr [RAX + 0x8]
00006f2b(3): MOV RSI,R9
00006f2e(4): MOV qword ptr [RSP],R9
00006f32(5): CALL 0x00006d90
00006f37(4): CMP RAX,-0x1
00006f3b(3): MOV R13,RAX
00006f3e(2): JZ 0x00006f5b
00006f40(4): ADD RBX,qword ptr [R14 + 0x28]
00006f44(3): MOV RSI,R13
00006f47(3): MOV RDI,RBX
00006f4a(5): CALL 0x00005ee0
00006f4f(2): TEST AL,AL
00006f51(4): MOV R9,qword ptr [RSP]
00006f55(6): JNZ 0x00006e4f
00006f5b(5): MOV EAX,0xc
00006f60(4): ADD RSP,0x18
00006f64(1): POP RBX
00006f65(1): POP RBP
00006f66(2): POP R12
00006f68(2): POP R13
00006f6a(2): POP R14
00006f6c(2): POP R15
00006f6e(1): RET
00006f70(2): MOV EDX,EBP
00006f72(3): MOV RSI,R15
00006f75(3): MOV RDI,R14
00006f78(5): CALL 0x00006d90
00006f7d(4): CMP RAX,-0x1
00006f81(3): MOV R13,RAX
00006f84(2): JZ 0x00006f5b
00006f86(4): MOV RDI,qword ptr [R14 + 0x28]
00006f8a(3): MOV RSI,R13
00006f8d(3): ADD RDI,RBX
00006f90(5): CALL 0x00005ee0
00006f95(2): TEST AL,AL
00006f97(2): JZ 0x00006f5b
00006f99(5): MOV RCX,qword ptr [RSP + 0x8]
00006f9e(3): MOV R8D,EBP
00006fa1(3): MOV RDX,R13
00006fa4(3): MOV RSI,R15
00006fa7(3): MOV RDI,R14
00006faa(5): CALL 0x00006e30
00006faf(2): TEST EAX,EAX
00006fb1(6): JZ 0x00006f19
00006fb7(2): JMP 0x00006f60
00006fc0(5): CMP R9,qword ptr [RSP + 0x8]
00006fc5(2): JNZ 0x00006fd0
00006fc7(3): CMP R9,R13
00006fca(6): JNZ 0x0000708c
00006fd0(3): MOV EAX,dword ptr [RAX + 0x8]
00006fd3(3): MOV RSI,R15
00006fd6(3): MOV RDI,R14
00006fd9(3): SHR EAX,0x8
00006fdc(5): AND EAX,0x3ff
00006fe1(2): OR EBP,EAX
00006fe3(2): MOV EDX,EBP
00006fe5(5): CALL 0x00006d90
00006fea(4): CMP RAX,-0x1
00006fee(3): MOV R13,RAX
00006ff1(6): JZ 0x00006f5b
00006ff7(4): ADD RBX,qword ptr [R14 + 0x28]
00006ffb(3): MOV RSI,RAX
00006ffe(3): MOV RDI,RBX
00007001(5): CALL 0x00005ee0
00007006(2): TEST AL,AL
00007008(6): JZ 0x00006f5b
0000700e(3): MOV R9,R15
00007011(5): JMP 0x00006e4f
00007020(4): MOV RAX,qword ptr [R14 + 0x18]
00007024(5): LEA RBX,[R13 + R13*0x2]
00007029(8): LEA R15,[R9*0x8]
00007031(2): MOV EDX,EBP
00007033(4): SHL RBX,0x3
00007037(4): MOV R9,qword ptr [RAX + R9*0x8]
0000703b(9): MOV qword ptr [RDI + RBX*0x1 + 0x8],0x0
00007044(3): MOV RDI,R14
00007047(3): MOV RSI,R9
0000704a(4): MOV qword ptr [RSP],R9
0000704e(5): CALL 0x00006d90
00007053(4): CMP RAX,-0x1
00007057(3): MOV R13,RAX
0000705a(4): MOV R9,qword ptr [RSP]
0000705e(6): JZ 0x00006f5b
00007064(4): MOV RAX,qword ptr [R14 + 0x18]
00007068(4): MOV qword ptr [RSP],R9
0000706c(4): MOV RCX,qword ptr [RAX + R15*0x1]
00007070(4): MOV qword ptr [RAX + R12*0x8],RCX
00007074(5): JMP 0x00006f40
00007079(4): MOV RAX,qword ptr [R14 + 0x18]
0000707d(4): MOV RCX,qword ptr [RAX + R9*0x8]
00007081(4): MOV qword ptr [RAX + R13*0x8],RCX
00007085(2): XOR EAX,EAX
00007087(5): JMP 0x00006f60
0000708c(3): MOV RSI,R15
0000708f(5): CALL 0x00005ee0
00007094(2): MOV EDX,EAX
00007096(2): XOR EAX,EAX
00007098(2): TEST DL,DL
0000709a(6): JNZ 0x00006f60
000070a0(5): JMP 0x00006f5b
000070b0(1): PUSH RBX
000070b1(3): MOV RBX,RDI
000070b4(4): MOV RDI,qword ptr [RDI + 0x30]
000070b8(5): CALL 0x00001880
000070bd(4): MOV RDI,qword ptr [RBX + 0x48]
000070c1(5): CALL 0x00001880
000070c6(4): MOV RAX,qword ptr [RBX + 0x50]
000070ca(4): LEA RDX,[RBX + 0x8]
000070ce(3): CMP RAX,RDX
000070d1(2): JZ 0x000070e5
000070d3(4): MOV RDI,qword ptr [RAX + 0x10]
000070d7(5): CALL 0x00001880
000070dc(4): MOV RDI,qword ptr [RBX + 0x50]
000070e0(5): CALL 0x00001880
000070e5(4): MOV RDI,qword ptr [RBX + 0x18]
000070e9(5): CALL 0x00001880
000070ee(4): MOV RDI,qword ptr [RBX + 0x60]
000070f2(5): CALL 0x00001880
000070f7(4): MOV RDI,qword ptr [RBX + 0x58]
000070fb(5): CALL 0x00001880
00007100(3): MOV RDI,RBX
00007103(1): POP RBX
00007104(5): JMP 0x00001880
00007110(1): PUSH RBX
00007111(3): MOV RBX,RDI
00007114(4): MOV RDI,qword ptr [RDI + 0x10]
00007118(5): CALL 0x00001880
0000711d(4): MOV RDI,qword ptr [RBX + 0x18]
00007121(5): CALL 0x00001880
00007126(7): CMP byte ptr [0x8b + RBX],0x0
0000712d(2): JNZ 0x00007138
0000712f(1): POP RBX
00007130(1): RET
00007138(4): MOV RDI,qword ptr [RBX + 0x8]
0000713c(1): POP RBX
0000713d(5): JMP 0x00001880
00007150(2): PUSH R14
00007152(2): PUSH R13
00007154(2): PUSH R12
00007156(3): MOV R12,RDI
00007159(1): PUSH RBP
0000715a(1): PUSH RBX
0000715b(3): MOV RDI,qword ptr [RDI]
0000715e(3): TEST RDI,RDI
00007161(2): JZ 0x0000718e
00007163(6): CMP qword ptr [R12 + 0x10],0x0
00007169(2): JZ 0x0000718e
0000716b(2): XOR EBX,EBX
0000716d(2): JMP 0x00007174
00007170(4): MOV RDI,qword ptr [R12]
00007174(3): MOV RAX,RBX
00007177(4): ADD RBX,0x1
0000717b(4): SHL RAX,0x4
0000717f(3): ADD RDI,RAX
00007182(5): CALL 0x00006b70
00007187(5): CMP qword ptr [R12 + 0x10],RBX
0000718c(2): JA 0x00007170
0000718e(5): MOV RDI,qword ptr [R12 + 0x18]
00007193(5): CALL 0x00001880
00007198(6): CMP qword ptr [R12 + 0x10],0x0
0000719e(2): JZ 0x000071f3
000071a0(2): XOR EBX,EBX
000071a2(2): XOR EBP,EBP
000071a4(4): NOP dword ptr [RAX]
000071a8(5): MOV RAX,qword ptr [R12 + 0x30]
000071ad(3): TEST RAX,RAX
000071b0(2): JZ 0x000071bc
000071b2(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
000071b7(5): CALL 0x00001880
000071bc(5): MOV RAX,qword ptr [R12 + 0x38]
000071c1(3): TEST RAX,RAX
000071c4(2): JZ 0x000071d0
000071c6(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
000071cb(5): CALL 0x00001880
000071d0(5): MOV RAX,qword ptr [R12 + 0x28]
000071d5(3): TEST RAX,RAX
000071d8(2): JZ 0x000071e4
000071da(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
000071df(5): CALL 0x00001880
000071e4(4): ADD RBP,0x1
000071e8(4): ADD RBX,0x18
000071ec(5): CMP qword ptr [R12 + 0x10],RBP
000071f1(2): JA 0x000071a8
000071f3(5): MOV RDI,qword ptr [R12 + 0x28]
000071f8(5): CALL 0x00001880
000071fd(5): MOV RDI,qword ptr [R12 + 0x30]
00007202(5): CALL 0x00001880
00007207(5): MOV RDI,qword ptr [R12 + 0x38]
0000720c(5): CALL 0x00001880
00007211(4): MOV RDI,qword ptr [R12]
00007215(5): CALL 0x00001880
0000721a(5): MOV RDI,qword ptr [R12 + 0x40]
0000721f(3): TEST RDI,RDI
00007222(2): JZ 0x00007277
00007224(3): XOR R14D,R14D
00007227(3): XOR R13D,R13D
0000722a(6): NOP word ptr [RAX + RAX*0x1]
00007230(4): LEA RBP,[RDI + R14*0x1]
00007234(5): CMP qword ptr [RBP],0x0
00007239(2): JLE 0x00007257
0000723b(2): XOR EBX,EBX
0000723d(3): NOP dword ptr [RAX]
00007240(4): MOV RAX,qword ptr [RBP + 0x10]
00007244(4): MOV RDI,qword ptr [RAX + RBX*0x8]
00007248(4): ADD RBX,0x1
0000724c(5): CALL 0x000070b0
00007251(4): CMP qword ptr [RBP],RBX
00007255(2): JG 0x00007240
00007257(4): MOV RDI,qword ptr [RBP + 0x10]
0000725b(4): ADD R13,0x1
0000725f(4): ADD R14,0x18
00007263(5): CALL 0x00001880
00007268(8): CMP qword ptr [0x88 + R12],R13
00007270(5): MOV RDI,qword ptr [R12 + 0x40]
00007275(2): JNC 0x00007230
00007277(5): CALL 0x00001880
0000727c(5): MOV RDI,qword ptr [R12 + 0x78]
00007281(7): LEA RAX,[0x15540]
00007288(3): CMP RDI,RAX
0000728b(2): JZ 0x00007292
0000728d(5): CALL 0x00001880
00007292(8): MOV RDI,qword ptr [0xe0 + R12]
0000729a(5): CALL 0x00001880
0000729f(1): POP RBX
000072a0(3): MOV RDI,R12
000072a3(1): POP RBP
000072a4(2): POP R12
000072a6(2): POP R13
000072a8(2): POP R14
000072aa(5): JMP 0x00001880
000072b0(2): PUSH R14
000072b2(2): PUSH R13
000072b4(3): MOV R14,RDI
000072b7(2): PUSH R12
000072b9(1): PUSH RBP
000072ba(1): PUSH RBX
000072bb(8): CMP qword ptr [0xe8 + RDI],0x0
000072c3(6): JLE 0x00007349
000072c9(3): XOR R13D,R13D
000072cc(4): NOP dword ptr [RAX]
000072d0(7): MOV RAX,qword ptr [0xf8 + R14]
000072d7(4): MOV R12,qword ptr [RAX + R13*0x8]
000072db(6): CMP qword ptr [R12 + 0x20],0x0
000072e1(2): JLE 0x0000730d
000072e3(2): XOR EBX,EBX
000072e5(3): NOP dword ptr [RAX]
000072e8(5): MOV RAX,qword ptr [R12 + 0x28]
000072ed(4): MOV RBP,qword ptr [RAX + RBX*0x8]
000072f1(4): ADD RBX,0x1
000072f5(4): MOV RDI,qword ptr [RBP + 0x20]
000072f9(5): CALL 0x00001880
000072fe(3): MOV RDI,RBP
00007301(5): CALL 0x00001880
00007306(5): CMP qword ptr [R12 + 0x20],RBX
0000730b(2): JG 0x000072e8
0000730d(5): MOV RDI,qword ptr [R12 + 0x28]
00007312(5): CALL 0x00001880
00007317(5): MOV RAX,qword ptr [R12 + 0x10]
0000731c(3): TEST RAX,RAX
0000731f(2): JZ 0x00007334
00007321(4): MOV RDI,qword ptr [RAX + 0x10]
00007325(5): CALL 0x00001880
0000732a(5): MOV RDI,qword ptr [R12 + 0x10]
0000732f(5): CALL 0x00001880
00007334(3): MOV RDI,R12
00007337(4): ADD R13,0x1
0000733b(5): CALL 0x00001880
00007340(7): CMP qword ptr [0xe8 + R14],R13
00007347(2): JG 0x000072d0
00007349(1): POP RBX
0000734a(11): MOV qword ptr [0xe8 + R14],0x0
00007355(11): MOV qword ptr [0xc8 + R14],0x0
00007360(1): POP RBP
00007361(2): POP R12
00007363(2): POP R13
00007365(2): POP R14
00007367(1): RET
00007370(4): MOV RCX,qword ptr [RDI + 0x30]
00007374(4): LEA RAX,[RSI + 0x1]
00007378(3): CMP RAX,RCX
0000737b(2): JGE 0x000073b8
0000737d(4): MOV RDX,qword ptr [RDI + 0x10]
00007381(8): LEA RDI,[RAX*0x4]
00007389(4): CMP dword ptr [RDX + RAX*0x4],-0x1
0000738d(2): JNZ 0x000073b8
0000738f(3): SUB RCX,RSI
00007392(5): LEA RSI,[RDX + RDI*0x1 + -0x4]
00007397(5): MOV EDX,0x2
0000739c(2): JMP 0x000073ab
000073a0(4): ADD RDX,0x1
000073a4(5): CMP dword ptr [RSI + RDX*0x4 + -0x4],-0x1
000073a9(2): JNZ 0x000073bd
000073ab(3): CMP RDX,RCX
000073ae(2): MOV EAX,EDX
000073b0(2): JNZ 0x000073a0
000073b2(2): RET
000073b8(5): MOV EAX,0x1
000073bd(2): RET
000073c0(4): MOV RDX,qword ptr [RDI + 0x8]
000073c4(2): XOR EAX,EAX
000073c6(4): CMP RDX,qword ptr [RSI + 0x8]
000073ca(2): JZ 0x000073d0
000073cc(2): RET
000073d0(4): LEA RAX,[RDX + -0x1]
000073d4(8): LEA RDX,[RAX*0x8]
000073dc(2): JMP 0x000073fd
000073e0(4): MOV RCX,qword ptr [RDI + 0x10]
000073e4(4): MOV R8,qword ptr [RCX + RDX*0x1]
000073e8(4): MOV RCX,qword ptr [RSI + 0x10]
000073ec(4): MOV RCX,qword ptr [RCX + RDX*0x1]
000073f0(4): SUB RDX,0x8
000073f4(3): CMP R8,RCX
000073f7(2): JNZ 0x00007410
000073f9(4): SUB RAX,0x1
000073fd(3): TEST RAX,RAX
00007400(2): JNS 0x000073e0
00007402(5): MOV EAX,0x1
00007407(1): RET
00007410(2): XOR EAX,EAX
00007412(1): RET
00007420(2): XOR EAX,EAX
00007422(3): TEST RDI,RDI
00007425(2): JLE 0x00007465
00007427(3): MOV R8,qword ptr [RSI]
0000742a(4): SUB RDI,0x1
0000742e(2): XOR ESI,ESI
00007430(3): CMP RSI,RDI
00007433(2): JNC 0x0000745d
00007435(4): LEA RCX,[RSI + RDI*0x1]
00007439(3): SHR RCX,1
0000743c(4): CMP RDX,qword ptr [R8 + RCX*0x8]
00007440(2): JLE 0x00007458
00007442(2): JMP 0x00007470
00007448(4): LEA RAX,[RSI + RCX*0x1]
0000744c(3): SHR RAX,1
0000744f(4): CMP qword ptr [R8 + RAX*0x8],RDX
00007453(2): JL 0x00007480
00007455(3): MOV RCX,RAX
00007458(3): CMP RSI,RCX
0000745b(2): JC 0x00007448
0000745d(2): XOR EAX,EAX
0000745f(4): CMP RDX,qword ptr [R8 + RSI*0x8]
00007463(2): JZ 0x00007490
00007465(2): RET
00007470(3): MOV RAX,RCX
00007473(3): MOV RCX,RDI
00007476(10): NOP word ptr CS:[RAX + RAX*0x1]
00007480(4): LEA RSI,[RAX + 0x1]
00007484(3): MOV RDI,RCX
00007487(2): JMP 0x00007430
00007490(4): LEA RAX,[RSI + 0x1]
00007494(1): RET
000074a0(2): PUSH R15
000074a2(2): PUSH R14
000074a4(4): LEA R14,[RSI + 0x10]
000074a8(2): PUSH R13
000074aa(2): PUSH R12
000074ac(3): MOV R15,RCX
000074af(1): PUSH RBP
000074b0(1): PUSH RBX
000074b1(3): MOV R12,RDI
000074b4(3): MOV RBP,RSI
000074b7(3): MOV RBX,RDX
000074ba(3): MOV R13D,R8D
000074bd(4): SUB RSP,0x8
000074c1(4): MOV RDI,qword ptr [RBP + 0x8]
000074c5(3): MOV RDX,RBX
000074c8(3): MOV RSI,R14
000074cb(5): CALL 0x00007420
000074d0(3): TEST RAX,RAX
000074d3(2): JNZ 0x00007540
000074d5(3): MOV RAX,RBX
000074d8(4): SHL RAX,0x4
000074dc(4): ADD RAX,qword ptr [R12]
000074e0(4): MOVZX EDX,byte ptr [RAX + 0x8]
000074e4(3): CMP EDX,R13D
000074e7(2): JNZ 0x000074ee
000074e9(3): CMP qword ptr [RAX],R15
000074ec(2): JZ 0x00007528
000074ee(3): MOV RSI,RBX
000074f1(3): MOV RDI,RBP
000074f4(5): CALL 0x00005ee0
000074f9(2): TEST AL,AL
000074fb(2): JZ 0x00007558
000074fd(4): LEA RBX,[RBX + RBX*0x2]
00007501(5): MOV RDX,qword ptr [R12 + 0x28]
00007506(4): SHL RBX,0x3
0000750a(3): ADD RDX,RBX
0000750d(4): MOV RAX,qword ptr [RDX + 0x8]
00007511(3): TEST RAX,RAX
00007514(2): JZ 0x00007540
00007516(4): CMP RAX,0x2
0000751a(4): MOV RDX,qword ptr [RDX + 0x10]
0000751e(2): JZ 0x00007570
00007520(3): MOV RBX,qword ptr [RDX]
00007523(2): JMP 0x000074c1
00007528(4): CMP R13D,0x9
0000752c(2): JNZ 0x00007540
0000752e(3): MOV RSI,RBX
00007531(3): MOV RDI,RBP
00007534(5): CALL 0x00005ee0
00007539(2): TEST AL,AL
0000753b(2): JZ 0x00007558
0000753d(3): NOP dword ptr [RAX]
00007540(2): XOR EAX,EAX
00007542(4): ADD RSP,0x8
00007546(1): POP RBX
00007547(1): POP RBP
00007548(2): POP R12
0000754a(2): POP R13
0000754c(2): POP R14
0000754e(2): POP R15
00007550(1): RET
00007558(4): ADD RSP,0x8
0000755c(5): MOV EAX,0xc
00007561(1): POP RBX
00007562(1): POP RBP
00007563(2): POP R12
00007565(2): POP R13
00007567(2): POP R14
00007569(2): POP R15
0000756b(1): RET
00007570(4): MOV RDX,qword ptr [RDX + 0x8]
00007574(3): MOV R8D,R13D
00007577(3): MOV RCX,R15
0000757a(3): MOV RSI,RBP
0000757d(3): MOV RDI,R12
00007580(5): CALL 0x000074a0
00007585(2): TEST EAX,EAX
00007587(2): JNZ 0x00007542
00007589(5): MOV RAX,qword ptr [R12 + 0x28]
0000758e(5): MOV RDX,qword ptr [RAX + RBX*0x1 + 0x10]
00007593(2): JMP 0x00007520
000075a0(3): MOV RAX,qword ptr [RDI]
000075a3(3): CMP RAX,RDX
000075a6(2): JLE 0x000075d2
000075a8(4): SUB RAX,0x1
000075ac(3): CMP RDX,RAX
000075af(3): MOV qword ptr [RDI],RAX
000075b2(2): JGE 0x000075d2
000075b4(3): MOV RAX,qword ptr [RSI]
000075b7(9): NOP word ptr [RAX + RAX*0x1]
000075c0(5): MOV RCX,qword ptr [RAX + RDX*0x8 + 0x8]
000075c5(4): MOV qword ptr [RAX + RDX*0x8],RCX
000075c9(4): ADD RDX,0x1
000075cd(3): CMP RDX,qword ptr [RDI]
000075d0(2): JL 0x000075c0
000075d2(2): RET
000075e0(4): MOVZX EAX,byte ptr [RSI + 0x30]
000075e4(2): CMP AL,0x4
000075e6(2): JZ 0x00007640
000075e8(2): CMP AL,0x11
000075ea(2): JZ 0x000075f0
000075ec(2): XOR EAX,EAX
000075ee(1): RET
000075f0(4): MOV RAX,qword ptr [RSI + 0x8]
000075f4(3): TEST RAX,RAX
000075f7(2): JZ 0x000075ec
000075f9(4): CMP byte ptr [RAX + 0x30],0x11
000075fd(2): JNZ 0x000075ec
000075ff(4): MOV RCX,qword ptr [RAX + 0x28]
00007603(4): MOV RAX,qword ptr [RAX + 0x8]
00007607(3): TEST RAX,RAX
0000760a(4): MOV qword ptr [RSI + 0x8],RAX
0000760e(2): JZ 0x00007613
00007610(3): MOV qword ptr [RAX],RSI
00007613(7): MOV RAX,qword ptr [0xe0 + RDI]
0000761a(4): MOV RDX,qword ptr [RSI + 0x28]
0000761e(4): CMP RCX,0x3f
00007622(4): MOV RDX,qword ptr [RAX + RDX*0x8]
00007626(4): MOV qword ptr [RAX + RCX*0x8],RDX
0000762a(2): JG 0x000075ec
0000762c(7): MOV RAX,-0x2
00007633(3): ROL RAX,CL
00007636(7): AND qword ptr [0xa0 + RDI],RAX
0000763d(2): JMP 0x000075ec
00007640(7): MOV RAX,qword ptr [0xe0 + RDI]
00007647(3): TEST RAX,RAX
0000764a(2): JZ 0x000075ec
0000764c(4): MOVSXD RDX,dword ptr [RSI + 0x28]
00007650(4): MOV RCX,qword ptr [RAX + RDX*0x8]
00007654(5): MOV EAX,0x1
00007659(2): SHL EAX,CL
0000765b(4): MOV qword ptr [RSI + 0x28],RCX
0000765f(2): CDQE
00007661(7): OR qword ptr [0xa0 + RDI],RAX
00007668(2): XOR EAX,EAX
0000766a(1): RET
00007670(4): MOVZX EAX,byte ptr [RSI + 0x30]
00007674(4): MOV RDX,qword ptr [RSI + 0x8]
00007678(2): CMP AL,0xb
0000767a(2): JZ 0x000076c0
0000767c(2): CMP AL,0x10
0000767e(2): JZ 0x000076a8
00007680(3): TEST RDX,RDX
00007683(2): JZ 0x0000768d
00007685(4): MOV RAX,qword ptr [RSI + 0x20]
00007689(4): MOV qword ptr [RDX + 0x20],RAX
0000768d(4): MOV RAX,qword ptr [RSI + 0x10]
00007691(3): TEST RAX,RAX
00007694(2): JZ 0x0000769e
00007696(4): MOV RDX,qword ptr [RSI + 0x20]
0000769a(4): MOV qword ptr [RAX + 0x20],RDX
0000769e(2): XOR EAX,EAX
000076a0(1): RET
000076a8(4): MOV RAX,qword ptr [RSI + 0x10]
000076ac(4): MOV RCX,qword ptr [RAX + 0x18]
000076b0(4): MOV qword ptr [RDX + 0x20],RCX
000076b4(4): MOV RDX,qword ptr [RSI + 0x20]
000076b8(4): MOV qword ptr [RAX + 0x20],RDX
000076bc(2): XOR EAX,EAX
000076be(1): RET
000076c0(4): MOV qword ptr [RDX + 0x20],RSI
000076c4(2): XOR EAX,EAX
000076c6(1): RET
000076d0(2): PUSH R15
000076d2(2): PUSH R14
000076d4(2): PUSH R13
000076d6(2): PUSH R12
000076d8(1): PUSH RBP
000076d9(1): PUSH RBX
000076da(2): XOR EBX,EBX
000076dc(4): SUB RSP,0x48
000076e0(7): MOV RAX,qword ptr [0x98 + RDI]
000076e7(7): MOV R15,qword ptr [0xc8 + RDI]
000076ee(8): MOV R12,qword ptr [0x80 + RSP]
000076f6(5): MOV qword ptr [RSP + 0x8],RAX
000076fb(3): MOV RBP,R15
000076fe(3): CMP RBX,RBP
00007701(2): JGE 0x0000775b
00007703(4): LEA RAX,[RBX + RBP*0x1]
00007707(7): MOV R13,qword ptr [0xd8 + RDI]
0000770e(3): MOV R10,RAX
00007711(4): SHR R10,0x3f
00007715(3): ADD R10,RAX
00007718(3): SAR R10,1
0000771b(4): LEA RAX,[R10 + R10*0x4]
0000771f(5): CMP R8,qword ptr [R13 + RAX*0x8 + 0x8]
00007724(2): JLE 0x00007756
00007726(5): JMP 0x000078c0
00007730(4): LEA R11,[RBX + R10*0x1]
00007734(3): MOV RAX,R11
00007737(4): SHR RAX,0x3f
0000773b(3): ADD RAX,R11
0000773e(3): SAR RAX,1
00007741(4): LEA R11,[RAX + RAX*0x4]
00007745(3): MOV R14,RAX
00007748(5): CMP qword ptr [R13 + R11*0x8 + 0x8],R8
0000774d(6): JL 0x000078d0
00007753(3): MOV R10,RAX
00007756(3): CMP RBX,R10
00007759(2): JL 0x00007730
0000775b(3): CMP R15,RBX
0000775e(6): JLE 0x00007900
00007764(7): MOV R11,qword ptr [0xd8 + RDI]
0000776b(4): LEA RAX,[RBX + RBX*0x4]
0000776f(4): LEA RAX,[R11 + RAX*0x8]
00007773(4): CMP R8,qword ptr [RAX + 0x8]
00007777(7): MOV RAX,-0x1
0000777e(4): CMOVNZ RBX,RAX
00007782(3): MOV RAX,R15
00007785(2): XOR EBP,EBP
00007787(3): CMP RBP,RAX
0000778a(2): JGE 0x000077e4
0000778c(5): LEA R11,[RBP + RAX*0x1]
00007791(3): MOV R10,R11
00007794(4): SHR R10,0x3f
00007798(3): ADD R10,R11
0000779b(7): MOV R11,qword ptr [0xd8 + RDI]
000077a2(3): SAR R10,1
000077a5(4): LEA R13,[R10 + R10*0x4]
000077a9(5): CMP R12,qword ptr [R11 + R13*0x8 + 0x8]
000077ae(2): JLE 0x000077df
000077b0(5): JMP 0x000078e0
000077b8(5): LEA R13,[RBP + R10*0x1]
000077bd(3): MOV RAX,R13
000077c0(4): SHR RAX,0x3f
000077c4(3): ADD RAX,R13
000077c7(3): SAR RAX,1
000077ca(4): LEA R13,[RAX + RAX*0x4]
000077ce(3): MOV R14,RAX
000077d1(5): CMP qword ptr [R11 + R13*0x8 + 0x8],R12
000077d6(6): JL 0x000078f0
000077dc(3): MOV R10,RAX
000077df(3): CMP RBP,R10
000077e2(2): JL 0x000077b8
000077e4(3): CMP R15,RBP
000077e7(6): JLE 0x00007910
000077ed(7): MOV R10,qword ptr [0xd8 + RDI]
000077f4(5): LEA RAX,[RBP + RBP*0x4]
000077f9(4): LEA RAX,[R10 + RAX*0x8]
000077fd(4): CMP R12,qword ptr [RAX + 0x8]
00007801(7): MOV RAX,-0x1
00007808(4): CMOVNZ RBP,RAX
0000780c(4): CMP qword ptr [RSI],0x0
00007810(6): JLE 0x00007932
00007816(5): MOV qword ptr [RSP + 0x30],RBP
0000781b(5): MOV qword ptr [RSP + 0x20],R9
00007820(3): MOV R13,RDI
00007823(5): MOV qword ptr [RSP + 0x18],R8
00007828(5): MOV qword ptr [RSP + 0x10],RCX
0000782d(3): XOR R14D,R14D
00007830(5): MOV qword ptr [RSP + 0x38],RSI
00007835(5): MOV qword ptr [RSP + 0x28],RBX
0000783a(3): MOV RBP,RDX
0000783d(3): MOV R15,R12
00007840(4): MOV RAX,qword ptr [RBP]
00007844(7): MOV RDX,qword ptr [0xd8 + R13]
0000784b(3): MOV RDI,R13
0000784e(5): MOV R9,qword ptr [RSP + 0x28]
00007853(5): MOV R8,qword ptr [RSP + 0x18]
00007858(5): MOV RCX,qword ptr [RSP + 0x10]
0000785d(4): MOV RSI,qword ptr [RAX + R14*0x8]
00007861(4): LEA RAX,[RSI + RSI*0x4]
00007865(4): LEA RAX,[RDX + RAX*0x8]
00007869(5): MOV RDX,qword ptr [RSP + 0x8]
0000786e(3): MOV RAX,qword ptr [RAX]
00007871(4): SHL RAX,0x4
00007875(3): ADD RAX,qword ptr [RDX]
00007878(3): MOV R12,qword ptr [RAX]
0000787b(3): MOV RDX,R12
0000787e(5): CALL 0x00005c90
00007883(2): MOV EBX,EAX
00007885(4): MOV RAX,qword ptr [RBP]
00007889(5): MOV R9,qword ptr [RSP + 0x30]
0000788e(5): MOV RCX,qword ptr [RSP + 0x20]
00007893(3): MOV R8,R15
00007896(3): MOV RDX,R12
00007899(3): MOV RDI,R13
0000789c(4): MOV RSI,qword ptr [RAX + R14*0x8]
000078a0(5): CALL 0x00005c90
000078a5(2): CMP EBX,EAX
000078a7(2): JZ 0x00007920
000078a9(5): MOV EAX,0x1
000078ae(4): ADD RSP,0x48
000078b2(1): POP RBX
000078b3(1): POP RBP
000078b4(2): POP R12
000078b6(2): POP R13
000078b8(2): POP R14
000078ba(2): POP R15
000078bc(1): RET
000078c0(3): MOV R14,R10
000078c3(3): MOV R10,RBP
000078c6(10): NOP word ptr CS:[RAX + RAX*0x1]
000078d0(4): LEA RBX,[R14 + 0x1]
000078d4(3): MOV RBP,R10
000078d7(5): JMP 0x000076fe
000078e0(3): MOV R14,R10
000078e3(3): MOV R10,RAX
000078e6(10): NOP word ptr CS:[RAX + RAX*0x1]
000078f0(4): LEA RBP,[R14 + 0x1]
000078f4(3): MOV RAX,R10
000078f7(5): JMP 0x00007787
00007900(7): MOV RBX,-0x1
00007907(5): JMP 0x00007782
00007910(7): MOV RBP,-0x1
00007917(5): JMP 0x0000780c
00007920(5): MOV RAX,qword ptr [RSP + 0x38]
00007925(4): ADD R14,0x1
00007929(3): CMP R14,qword ptr [RAX]
0000792c(6): JL 0x00007840
00007932(2): XOR EAX,EAX
00007934(5): JMP 0x000078ae
00007940(3): TEST RSI,RSI
00007943(6): JZ 0x00007a38
00007949(4): MOV RDX,qword ptr [RSI + 0x8]
0000794d(3): TEST RDX,RDX
00007950(6): JZ 0x00007a38
00007956(2): PUSH R12
00007958(1): PUSH RBP
00007959(3): MOV R12,RSI
0000795c(1): PUSH RBX
0000795d(4): MOV RAX,qword ptr [RDI + 0x8]
00007961(3): MOV RBX,RDI
00007964(3): MOV RSI,qword ptr [RDI]
00007967(4): LEA RCX,[RAX + RDX*0x2]
0000796b(3): CMP RSI,RCX
0000796e(6): JL 0x00007ab8
00007974(3): TEST RAX,RAX
00007977(6): JZ 0x00007af0
0000797d(4): LEA RBP,[RAX + RDX*0x2]
00007981(4): SUB RDX,0x1
00007985(4): SUB RAX,0x1
00007989(3): MOV RDI,RDX
0000798c(3): NOT RDI
0000798f(3): TEST RDI,RDI
00007992(2): JNS 0x000079d0
00007994(3): TEST RAX,RAX
00007997(2): JS 0x000079d0
00007999(4): MOV RCX,qword ptr [RBX + 0x10]
0000799d(5): MOV RSI,qword ptr [R12 + 0x10]
000079a2(4): MOV RSI,qword ptr [RSI + RDX*0x8]
000079a6(4): CMP qword ptr [RCX + RAX*0x8],RSI
000079aa(6): JZ 0x00007a40
000079b0(6): JGE 0x00007a58
000079b6(4): SUB RDX,0x1
000079ba(4): SUB RBP,0x1
000079be(3): MOV RDI,RDX
000079c1(4): MOV qword ptr [RCX + RBP*0x8],RSI
000079c5(3): NOT RDI
000079c8(3): TEST RDI,RDI
000079cb(2): JS 0x00007994
000079cd(3): NOP dword ptr [RAX]
000079d0(3): TEST RDX,RDX
000079d3(6): JNS 0x00007a68
000079d9(4): MOV RCX,qword ptr [RBX + 0x8]
000079dd(5): MOV RAX,qword ptr [R12 + 0x8]
000079e2(5): LEA R8,[RCX + RAX*0x2 + -0x1]
000079e7(3): MOV RDX,R8
000079ea(3): SUB RDX,RBP
000079ed(4): ADD RDX,0x1
000079f1(2): JZ 0x00007a2a
000079f3(4): MOV RDI,qword ptr [RBX + 0x10]
000079f7(4): LEA RAX,[RCX + -0x1]
000079fb(3): ADD RCX,RDX
000079fe(4): MOV qword ptr [RBX + 0x8],RCX
00007a02(6): NOP word ptr [RAX + RAX*0x1]
00007a08(4): MOV RSI,qword ptr [RDI + R8*0x8]
00007a0c(4): MOV RCX,qword ptr [RDI + RAX*0x8]
00007a10(4): LEA R9,[RAX + RDX*0x1]
00007a14(4): LEA R9,[RDI + R9*0x8]
00007a18(3): CMP RSI,RCX
00007a1b(2): JLE 0x00007a90
00007a1d(4): SUB R8,0x1
00007a21(4): SUB RDX,0x1
00007a25(3): MOV qword ptr [R9],RSI
00007a28(2): JNZ 0x00007a08
00007a2a(2): XOR EAX,EAX
00007a2c(1): POP RBX
00007a2d(1): POP RBP
00007a2e(2): POP R12
00007a30(1): RET
00007a38(2): XOR EAX,EAX
00007a3a(1): RET
00007a40(4): SUB RDX,0x1
00007a44(4): SUB RAX,0x1
00007a48(3): MOV RDI,RDX
00007a4b(3): NOT RDI
00007a4e(5): JMP 0x0000798f
00007a58(4): SUB RAX,0x1
00007a5c(5): JMP 0x0000798f
00007a68(4): MOV RAX,qword ptr [RBX + 0x10]
00007a6c(4): ADD RDX,0x1
00007a70(5): MOV RSI,qword ptr [R12 + 0x10]
00007a75(3): SUB RBP,RDX
00007a78(4): SHL RDX,0x3
00007a7c(4): LEA RDI,[RAX + RBP*0x8]
00007a80(5): CALL 0x00001a90
00007a85(5): JMP 0x000079d9
00007a90(4): SUB RAX,0x1
00007a94(3): MOV qword ptr [R9],RCX
00007a97(6): JNS 0x00007a08
00007a9d(4): LEA RSI,[RDI + RBP*0x8]
00007aa1(4): SHL RDX,0x3
00007aa5(5): CALL 0x00001a90
00007aaa(2): XOR EAX,EAX
00007aac(5): JMP 0x00007a2c
00007ab8(3): ADD RDX,RSI
00007abb(4): MOV RDI,qword ptr [RDI + 0x10]
00007abf(4): LEA RBP,[RDX + RDX*0x1]
00007ac3(4): SHL RDX,0x4
00007ac7(3): MOV RSI,RDX
00007aca(5): CALL 0x00001b30
00007acf(3): TEST RAX,RAX
00007ad2(2): JZ 0x00007b14
00007ad4(4): MOV qword ptr [RBX + 0x10],RAX
00007ad8(3): MOV qword ptr [RBX],RBP
00007adb(4): MOV RAX,qword ptr [RBX + 0x8]
00007adf(5): MOV RDX,qword ptr [R12 + 0x8]
00007ae4(5): JMP 0x00007974
00007af0(4): MOV qword ptr [RBX + 0x8],RDX
00007af4(5): MOV RAX,qword ptr [R12 + 0x8]
00007af9(4): MOV RDI,qword ptr [RBX + 0x10]
00007afd(5): MOV RSI,qword ptr [R12 + 0x10]
00007b02(8): LEA RDX,[RAX*0x8]
00007b0a(5): CALL 0x00001a90
00007b0f(5): JMP 0x00007a2a
00007b14(5): MOV EAX,0xc
00007b19(5): JMP 0x00007a2c
00007b20(2): PUSH R15
00007b22(2): PUSH R14
00007b24(3): MOV R15,RSI
00007b27(2): PUSH R13
00007b29(2): PUSH R12
00007b2b(1): PUSH RBP
00007b2c(1): PUSH RBX
00007b2d(4): LEA RBX,[RDX + RDX*0x2]
00007b31(3): MOV RBP,RDX
00007b34(4): SUB RSP,0x68
00007b38(4): MOV R12,qword ptr [RSI + 0x28]
00007b3c(4): SHL RBX,0x3
00007b40(9): MOV RAX,qword ptr FS:[0x28]
00007b49(5): MOV qword ptr [RSP + 0x58],RAX
00007b4e(2): XOR EAX,EAX
00007b50(5): MOV qword ptr [RSP + 0x10],RDI
00007b55(4): MOV dword ptr [RSP + 0x1c],ECX
00007b59(3): ADD R12,RBX
00007b5c(5): MOV RAX,qword ptr [R12 + 0x8]
00007b61(9): MOV qword ptr [RSP + 0x28],0x0
00007b6a(4): LEA RDI,[RAX + 0x1]
00007b6e(5): MOV qword ptr [RSP + 0x20],RDI
00007b73(4): SHL RDI,0x3
00007b77(5): CALL 0x00001ac0
00007b7c(3): TEST RAX,RAX
00007b7f(5): MOV qword ptr [RSP + 0x30],RAX
00007b84(6): JZ 0x00007dc0
00007b8a(4): MOV RAX,qword ptr [R15 + 0x30]
00007b8e(3): MOV RDX,qword ptr [R15]
00007b91(3): MOV R13,RBP
00007b94(4): SHL R13,0x4
00007b98(9): MOV qword ptr [RAX + RBX*0x1 + 0x8],-0x1
00007ba1(4): LEA RAX,[RDX + R13*0x1]
00007ba5(4): MOV R8D,dword ptr [RAX + 0x8]
00007ba9(7): TEST R8D,0x3ff00
00007bb0(6): JNZ 0x00007d50
00007bb6(4): TEST byte ptr [RAX + 0x8],0x8
00007bba(6): JZ 0x00007c80
00007bc0(4): MOV RSI,qword ptr [R15 + 0x28]
00007bc4(4): LEA RAX,[RSI + RBX*0x1]
00007bc8(5): CMP qword ptr [RAX + 0x8],0x0
00007bcd(6): JLE 0x00007c80
00007bd3(5): LEA RDX,[RSP + 0x20]
00007bd8(5): MOV byte ptr [RSP + 0x1b],0x0
00007bdd(3): XOR R14D,R14D
00007be0(5): LEA R12,[RSP + 0x40]
00007be5(5): MOV qword ptr [RSP + 0x8],RDX
00007bea(2): JMP 0x00007c06
00007bf0(4): MOV RSI,qword ptr [R15 + 0x28]
00007bf4(4): ADD R14,0x1
00007bf8(4): LEA RAX,[RSI + RBX*0x1]
00007bfc(4): CMP qword ptr [RAX + 0x8],R14
00007c00(6): JLE 0x00007d07
00007c06(4): MOV RAX,qword ptr [RAX + 0x10]
00007c0a(4): MOV RDX,qword ptr [RAX + R14*0x8]
00007c0e(4): MOV RAX,qword ptr [R15 + 0x30]
00007c12(4): LEA R8,[RDX + RDX*0x2]
00007c16(8): LEA R13,[R8*0x8]
00007c1e(3): ADD RAX,R13
00007c21(4): MOV RCX,qword ptr [RAX + 0x8]
00007c25(4): CMP RCX,-0x1
00007c29(6): JZ 0x00007cf0
00007c2f(3): TEST RCX,RCX
00007c32(6): JZ 0x00007da8
00007c38(4): MOVDQU XMM0,xmmword ptr [RAX]
00007c3c(5): MOVAPS xmmword ptr [RSP + 0x40],XMM0
00007c41(4): MOV RAX,qword ptr [RAX + 0x10]
00007c45(5): MOV qword ptr [RSP + 0x50],RAX
00007c4a(5): MOV RDI,qword ptr [RSP + 0x8]
00007c4f(3): MOV RSI,R12
00007c52(5): CALL 0x00007940
00007c57(2): TEST EAX,EAX
00007c59(2): JNZ 0x00007cc6
00007c5b(4): MOV RAX,qword ptr [R15 + 0x30]
00007c5f(6): CMP qword ptr [RAX + R13*0x1 + 0x8],0x0
00007c65(2): JNZ 0x00007bf0
00007c67(5): MOV RDI,qword ptr [RSP + 0x50]
00007c6c(5): CALL 0x00001880
00007c71(5): MOV byte ptr [RSP + 0x1b],0x1
00007c76(5): JMP 0x00007bf0
00007c80(5): LEA RDI,[RSP + 0x20]
00007c85(3): MOV RSI,RBP
00007c88(5): CALL 0x00005ee0
00007c8d(2): TEST AL,AL
00007c8f(6): JZ 0x00007dc0
00007c95(4): MOV RAX,qword ptr [R15 + 0x30]
00007c99(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
00007c9f(4): MOVUPS xmmword ptr [RAX + RBX*0x1],XMM0
00007ca3(5): MOV RDX,qword ptr [RSP + 0x30]
00007ca8(5): MOV qword ptr [RAX + RBX*0x1 + 0x10],RDX
00007cad(5): MOV RBX,qword ptr [RSP + 0x10]
00007cb2(5): MOV RAX,qword ptr [RSP + 0x30]
00007cb7(6): MOVDQA XMM0,xmmword ptr [RSP + 0x20]
00007cbd(3): MOVAPS xmmword ptr [RBX],XMM0
00007cc0(4): MOV qword ptr [RBX + 0x10],RAX
00007cc4(2): XOR EAX,EAX
00007cc6(5): MOV RSI,qword ptr [RSP + 0x58]
00007ccb(9): XOR RSI,qword ptr FS:[0x28]
00007cd4(6): JNZ 0x00007dca
00007cda(4): ADD RSP,0x68
00007cde(1): POP RBX
00007cdf(1): POP RBP
00007ce0(2): POP R12
00007ce2(2): POP R13
00007ce4(2): POP R14
00007ce6(2): POP R15
00007ce8(1): RET
00007cf0(4): LEA RAX,[RSI + RBX*0x1]
00007cf4(4): ADD R14,0x1
00007cf8(5): MOV byte ptr [RSP + 0x1b],0x1
00007cfd(4): CMP qword ptr [RAX + 0x8],R14
00007d01(6): JG 0x00007c06
00007d07(5): LEA RDI,[RSP + 0x20]
00007d0c(3): MOV RSI,RBP
00007d0f(5): CALL 0x00005ee0
00007d14(2): TEST AL,AL
00007d16(6): JZ 0x00007dc0
00007d1c(5): CMP byte ptr [RSP + 0x1c],0x1
00007d21(4): MOV RAX,qword ptr [R15 + 0x30]
00007d25(4): LEA RDX,[RAX + RBX*0x1]
00007d29(6): JZ 0x00007c99
00007d2f(5): CMP byte ptr [RSP + 0x1b],0x0
00007d34(6): JZ 0x00007c99
00007d3a(8): MOV qword ptr [RDX + 0x8],0x0
00007d42(5): JMP 0x00007cad
00007d50(6): CMP qword ptr [R12 + 0x8],0x0
00007d56(6): JZ 0x00007c80
00007d5c(5): MOV RCX,qword ptr [R12 + 0x10]
00007d61(3): MOV RCX,qword ptr [RCX]
00007d64(4): SHL RCX,0x4
00007d68(5): TEST byte ptr [RDX + RCX*0x1 + 0xa],0x4
00007d6d(6): JNZ 0x00007bb6
00007d73(4): SHR R8D,0x8
00007d77(3): MOV RCX,RBP
00007d7a(3): MOV RDX,RBP
00007d7d(7): AND R8D,0x3ff
00007d84(3): MOV RSI,RBP
00007d87(3): MOV RDI,R15
00007d8a(5): CALL 0x00006e30
00007d8f(2): TEST EAX,EAX
00007d91(6): JNZ 0x00007cc6
00007d97(3): MOV RAX,qword ptr [R15]
00007d9a(3): ADD RAX,R13
00007d9d(5): JMP 0x00007bb6
00007da8(3): MOV RSI,R15
00007dab(3): MOV RDI,R12
00007dae(5): CALL 0x00007b20
00007db3(2): TEST EAX,EAX
00007db5(6): JZ 0x00007c4a
00007dbb(5): JMP 0x00007cc6
00007dc0(5): MOV EAX,0xc
00007dc5(5): JMP 0x00007cc6
00007dca(5): CALL 0x00001990
00007dcf(1): NOP
00007dd0(2): PUSH R15
00007dd2(2): PUSH R14
00007dd4(3): MOV R14,RDI
00007dd7(2): PUSH R13
00007dd9(2): PUSH R12
00007ddb(3): MOV R15,RSI
00007dde(1): PUSH RBP
00007ddf(1): PUSH RBX
00007de0(3): MOV RBP,RDX
00007de3(2): MOV EBX,ECX
00007de5(4): SUB RSP,0x38
00007de9(4): MOV R12,qword ptr [RSI + 0x8]
00007ded(9): MOV RAX,qword ptr FS:[0x28]
00007df6(5): MOV qword ptr [RSP + 0x28],RAX
00007dfb(2): XOR EAX,EAX
00007dfd(9): MOV qword ptr [RSP + 0x18],0x0
00007e06(8): LEA RDI,[R12*0x8]
00007e0e(5): MOV qword ptr [RSP + 0x10],R12
00007e13(5): CALL 0x00001ac0
00007e18(3): TEST RAX,RAX
00007e1b(5): MOV qword ptr [RSP + 0x20],RAX
00007e20(6): JZ 0x00007f1d
00007e26(3): TEST R12,R12
00007e29(6): JLE 0x00007ebb
00007e2f(5): LEA R12,[RSP + 0x10]
00007e34(3): XOR R13D,R13D
00007e37(9): NOP word ptr [RAX + RAX*0x1]
00007e40(4): MOV RAX,qword ptr [R15 + 0x10]
00007e44(4): MOV RDX,qword ptr [RAX + R13*0x8]
00007e48(4): MOV RAX,qword ptr [R14 + 0x30]
00007e4c(4): LEA RCX,[RDX + RDX*0x2]
00007e50(4): LEA RSI,[RAX + RCX*0x8]
00007e54(4): MOV R8,qword ptr [RSI + 0x8]
00007e58(3): TEST R8,R8
00007e5b(6): JLE 0x00007ee0
00007e61(4): MOV R10,qword ptr [RSI + 0x10]
00007e65(3): MOV R9,qword ptr [R14]
00007e68(2): XOR ECX,ECX
00007e6a(2): JMP 0x00007e79
00007e70(4): ADD RCX,0x1
00007e74(3): CMP R8,RCX
00007e77(2): JZ 0x00007ee0
00007e79(4): MOV RDI,qword ptr [R10 + RCX*0x8]
00007e7d(3): MOV RAX,RDI
00007e80(4): SHL RAX,0x4
00007e84(3): ADD RAX,R9
00007e87(5): MOVZX R11D,byte ptr [RAX + 0x8]
00007e8c(3): CMP EBX,R11D
00007e8f(2): JNZ 0x00007e70
00007e91(3): CMP RBP,qword ptr [RAX]
00007e94(2): JNZ 0x00007e70
00007e96(4): CMP RDI,-0x1
00007e9a(2): JZ 0x00007ee0
00007e9c(3): MOV R8D,EBX
00007e9f(3): MOV RCX,RBP
00007ea2(3): MOV RSI,R12
00007ea5(3): MOV RDI,R14
00007ea8(5): CALL 0x000074a0
00007ead(2): TEST EAX,EAX
00007eaf(2): JNZ 0x00007eec
00007eb1(4): ADD R13,0x1
00007eb5(4): CMP qword ptr [R15 + 0x8],R13
00007eb9(2): JG 0x00007e40
00007ebb(4): MOV RDI,qword ptr [R15 + 0x10]
00007ebf(5): CALL 0x00001880
00007ec4(5): MOV RAX,qword ptr [RSP + 0x20]
00007ec9(6): MOVDQA XMM0,xmmword ptr [RSP + 0x10]
00007ecf(4): MOV qword ptr [R15 + 0x10],RAX
00007ed3(2): XOR EAX,EAX
00007ed5(4): MOVAPS xmmword ptr [R15],XMM0
00007ed9(2): JMP 0x00007efe
00007ee0(3): MOV RDI,R12
00007ee3(5): CALL 0x00007940
00007ee8(2): TEST EAX,EAX
00007eea(2): JZ 0x00007eb1
00007eec(5): MOV RDI,qword ptr [RSP + 0x20]
00007ef1(4): MOV dword ptr [RSP + 0xc],EAX
00007ef5(5): CALL 0x00001880
00007efa(4): MOV EAX,dword ptr [RSP + 0xc]
00007efe(5): MOV RDX,qword ptr [RSP + 0x28]
00007f03(9): XOR RDX,qword ptr FS:[0x28]
00007f0c(2): JNZ 0x00007f24
00007f0e(4): ADD RSP,0x38
00007f12(1): POP RBX
00007f13(1): POP RBP
00007f14(2): POP R12
00007f16(2): POP R13
00007f18(2): POP R14
00007f1a(2): POP R15
00007f1c(1): RET
00007f1d(5): MOV EAX,0xc
00007f22(2): JMP 0x00007efe
00007f24(5): CALL 0x00001990
00007f29(7): NOP dword ptr [RAX]
00007f30(4): MOV R9,qword ptr [RSI + 0x8]
00007f34(2): XOR EAX,EAX
00007f36(3): TEST R9,R9
00007f39(6): JZ 0x00007ff8
00007f3f(4): MOV R11,qword ptr [RDX + 0x8]
00007f43(3): TEST R11,R11
00007f46(6): JZ 0x00007ff8
00007f4c(2): PUSH R13
00007f4e(2): PUSH R12
00007f50(4): LEA RAX,[R9 + R11*0x1]
00007f54(1): PUSH RBP
00007f55(1): PUSH RBX
00007f56(3): MOV R12,RDX
00007f59(3): MOV RBX,RDI
00007f5c(3): MOV RBP,RSI
00007f5f(4): SUB RSP,0x8
00007f63(4): MOV RCX,qword ptr [RDI + 0x8]
00007f67(3): MOV R13,qword ptr [RDI]
00007f6a(4): MOV RDI,qword ptr [RDI + 0x10]
00007f6e(4): LEA RDX,[RAX + RCX*0x1]
00007f72(3): CMP RDX,R13
00007f75(6): JG 0x000080a0
00007f7b(4): LEA RSI,[RCX + R9*0x1]
00007f7f(4): MOV R13,qword ptr [RBP + 0x10]
00007f83(5): MOV RDX,qword ptr [R12 + 0x10]
00007f88(4): SUB R9,0x1
00007f8c(4): SUB RCX,0x1
00007f90(3): ADD RSI,R11
00007f93(4): SUB R11,0x1
00007f97(5): MOV RAX,qword ptr [R13 + R9*0x8]
00007f9c(4): MOV R8,qword ptr [RDX + R11*0x8]
00007fa0(3): CMP RAX,R8
00007fa3(2): JZ 0x00007fb6
00007fa5(2): JGE 0x00008000
00007fa7(4): SUB R11,0x1
00007fab(2): JS 0x00008010
00007fad(4): MOV R8,qword ptr [RDX + R11*0x8]
00007fb1(3): CMP RAX,R8
00007fb4(2): JNZ 0x00007fa5
00007fb6(3): TEST RCX,RCX
00007fb9(2): JNS 0x00007fca
00007fbb(2): JMP 0x00007fd8
00007fc0(4): SUB RCX,0x1
00007fc4(4): CMP RCX,-0x1
00007fc8(2): JZ 0x00007fd8
00007fca(4): MOV R10,qword ptr [RDI + RCX*0x8]
00007fce(3): CMP R10,R8
00007fd1(2): JG 0x00007fc0
00007fd3(3): CMP R10,R8
00007fd6(2): JZ 0x00007fe0
00007fd8(4): SUB RSI,0x1
00007fdc(4): MOV qword ptr [RDI + RSI*0x8],R8
00007fe0(4): SUB R9,0x1
00007fe4(2): JS 0x00008010
00007fe6(4): SUB R11,0x1
00007fea(2): JS 0x00008010
00007fec(5): MOV RAX,qword ptr [R13 + R9*0x8]
00007ff1(2): JMP 0x00007fad
00007ff8(2): RET
00008000(4): SUB R9,0x1
00008004(2): JS 0x00008010
00008006(5): MOV RAX,qword ptr [R13 + R9*0x8]
0000800b(2): JMP 0x00007fa0
00008010(4): MOV RCX,qword ptr [RBX + 0x8]
00008014(4): MOV RDX,qword ptr [RBP + 0x8]
00008018(3): ADD RDX,RCX
0000801b(5): ADD RDX,qword ptr [R12 + 0x8]
00008020(4): LEA RAX,[RCX + -0x1]
00008024(4): LEA R9,[RDX + -0x1]
00008028(3): SUB RDX,RSI
0000802b(3): ADD RCX,RDX
0000802e(3): TEST RDX,RDX
00008031(4): MOV qword ptr [RBX + 0x8],RCX
00008035(2): JLE 0x0000807d
00008037(3): TEST RAX,RAX
0000803a(2): JS 0x0000807d
0000803c(4): NOP dword ptr [RAX]
00008040(4): MOV R8,qword ptr [RDI + R9*0x8]
00008044(4): MOV RCX,qword ptr [RDI + RAX*0x8]
00008048(4): LEA R10,[RAX + RDX*0x1]
0000804c(4): LEA R10,[RDI + R10*0x8]
00008050(3): CMP R8,RCX
00008053(2): JLE 0x00008070
00008055(4): SUB R9,0x1
00008059(4): SUB RDX,0x1
0000805d(3): MOV qword ptr [R10],R8
00008060(2): JNZ 0x00008040
00008062(2): XOR EDX,EDX
00008064(2): JMP 0x00008081
00008070(4): SUB RAX,0x1
00008074(3): MOV qword ptr [R10],RCX
00008077(4): CMP RAX,-0x1
0000807b(2): JNZ 0x00008040
0000807d(4): SHL RDX,0x3
00008081(4): LEA RSI,[RDI + RSI*0x8]
00008085(5): CALL 0x00001a90
0000808a(2): XOR EAX,EAX
0000808c(4): ADD RSP,0x8
00008090(1): POP RBX
00008091(1): POP RBP
00008092(2): POP R12
00008094(2): POP R13
00008096(1): RET
000080a0(3): ADD R13,RAX
000080a3(8): LEA RSI,[R13*0x8]
000080ab(5): CALL 0x00001b30
000080b0(3): TEST RAX,RAX
000080b3(3): MOV RDI,RAX
000080b6(2): JZ 0x000080d1
000080b8(4): MOV qword ptr [RBX + 0x10],RAX
000080bc(3): MOV qword ptr [RBX],R13
000080bf(4): MOV RCX,qword ptr [RBX + 0x8]
000080c3(4): MOV R9,qword ptr [RBP + 0x8]
000080c7(5): MOV R11,qword ptr [R12 + 0x8]
000080cc(5): JMP 0x00007f7b
000080d1(5): MOV EAX,0xc
000080d6(2): JMP 0x0000808c
000080e0(1): PUSH RBX
000080e1(3): MOV RBX,RDI
000080e4(4): SUB RSP,0x20
000080e8(2): MOV EAX,dword ptr [RSI]
000080ea(3): CMP EAX,0xf
000080ed(2): JZ 0x00008168
000080ef(3): MOVSXD R9,EAX
000080f2(4): LEA R10D,[RAX + 0x1]
000080f6(3): MOV RDI,qword ptr [RDI]
000080f9(3): MOV RAX,R9
000080fc(4): SHL RAX,0x6
00008100(4): ADD RAX,0x8
00008104(4): SHL R9,0x6
00008108(3): MOV dword ptr [RSI],R10D
0000810b(3): ADD RAX,RDI
0000810e(4): LEA RSI,[RDI + R9*0x1]
00008112(8): MOV qword ptr [RSI + 0x8],0x0
0000811a(4): MOV qword ptr [RSI + 0x10],RDX
0000811e(4): LEA RDI,[RSI + 0x20]
00008122(4): MOV qword ptr [RSI + 0x18],RCX
00008126(5): MOVDQU XMM0,xmmword ptr [R8]
0000812b(4): MOVUPS xmmword ptr [RSI + 0x30],XMM0
0000812f(4): AND byte ptr [RDI + 0x1a],0xf3
00008133(3): TEST RDX,RDX
00008136(8): MOV qword ptr [RSI + 0x20],0x0
0000813e(8): MOV qword ptr [RSI + 0x28],0x0
00008146(8): MOV qword ptr [RSI + 0x40],-0x1
0000814e(2): JZ 0x00008153
00008150(3): MOV qword ptr [RDX],RAX
00008153(3): TEST RCX,RCX
00008156(2): JZ 0x0000815b
00008158(3): MOV qword ptr [RCX],RAX
0000815b(4): ADD RSP,0x20
0000815f(1): POP RBX
00008160(1): RET
00008168(5): MOV EDI,0x3c8
0000816d(5): MOV qword ptr [RSP + 0x18],R8
00008172(5): MOV qword ptr [RSP + 0x10],RCX
00008177(5): MOV qword ptr [RSP + 0x8],RDX
0000817c(4): MOV qword ptr [RSP],RSI
00008180(5): CALL 0x00001ac0
00008185(3): TEST RAX,RAX
00008188(3): MOV RDI,RAX
0000818b(2): JZ 0x000081bc
0000818d(3): MOV RAX,qword ptr [RBX]
00008190(6): MOV R10D,0x1
00008196(3): MOV qword ptr [RBX],RDI
00008199(3): XOR R9D,R9D
0000819c(5): MOV R8,qword ptr [RSP + 0x18]
000081a1(5): MOV RCX,qword ptr [RSP + 0x10]
000081a6(5): MOV RDX,qword ptr [RSP + 0x8]
000081ab(4): MOV RSI,qword ptr [RSP]
000081af(3): MOV qword ptr [RDI],RAX
000081b2(5): MOV EAX,0x8
000081b7(5): JMP 0x00008104
000081bc(2): XOR EAX,EAX
000081be(2): JMP 0x0000815b
000081c0(2): PUSH R14
000081c2(2): PUSH R13
000081c4(4): LEA R13,[RSI + 0x70]
000081c8(2): PUSH R12
000081ca(1): PUSH RBP
000081cb(7): LEA R12,[0x80 + RSI]
000081d2(1): PUSH RBX
000081d3(3): MOV RBX,RDI
000081d6(4): SUB RSP,0x10
000081da(3): MOV RBP,qword ptr [RDI]
000081dd(9): MOV RAX,qword ptr FS:[0x28]
000081e6(5): MOV qword ptr [RSP + 0x8],RAX
000081eb(2): XOR EAX,EAX
000081ed(3): MOV R14,RSP
000081f0(4): LEA R8,[RBX + 0x28]
000081f4(2): XOR ECX,ECX
000081f6(2): XOR EDX,EDX
000081f8(3): MOV RSI,R12
000081fb(3): MOV RDI,R13
000081fe(5): CALL 0x000080e0
00008203(3): TEST RAX,RAX
00008206(3): MOV qword ptr [R14],RAX
00008209(2): JZ 0x0000825c
0000820b(3): MOV qword ptr [RAX],RBP
0000820e(3): MOV RBP,qword ptr [R14]
00008211(4): OR byte ptr [RBP + 0x32],0x4
00008215(4): MOV RAX,qword ptr [RBX + 0x8]
00008219(3): TEST RAX,RAX
0000821c(2): JZ 0x00008230
0000821e(4): LEA R14,[RBP + 0x8]
00008222(3): MOV RBX,RAX
00008225(2): JMP 0x000081f0
00008230(2): XOR EDX,EDX
00008232(2): JMP 0x0000823b
00008238(3): MOV RBX,RAX
0000823b(4): MOV RAX,qword ptr [RBX + 0x10]
0000823f(3): TEST RAX,RAX
00008242(2): JZ 0x00008249
00008244(3): CMP RAX,RDX
00008247(2): JNZ 0x00008280
00008249(3): MOV RAX,qword ptr [RBX]
0000824c(4): MOV RBP,qword ptr [RBP]
00008250(3): MOV RDX,RBX
00008253(3): TEST RAX,RAX
00008256(2): JNZ 0x00008238
00008258(4): MOV RAX,qword ptr [RSP]
0000825c(5): MOV RCX,qword ptr [RSP + 0x8]
00008261(9): XOR RCX,qword ptr FS:[0x28]
0000826a(2): JNZ 0x0000828c
0000826c(4): ADD RSP,0x10
00008270(1): POP RBX
00008271(1): POP RBP
00008272(2): POP R12
00008274(2): POP R13
00008276(2): POP R14
00008278(1): RET
00008280(4): LEA R14,[RBP + 0x10]
00008284(3): MOV RBX,RAX
00008287(5): JMP 0x000081f0
0000828c(5): CALL 0x00001990
00008291(5): NOP dword ptr [RAX + RAX*0x1]
00008296(10): NOP word ptr CS:[RAX + RAX*0x1]
000082a0(2): PUSH R15
000082a2(2): PUSH R14
000082a4(2): PUSH R13
000082a6(2): PUSH R12
000082a8(3): MOV R13,RDX
000082ab(1): PUSH RBP
000082ac(1): PUSH RBX
000082ad(4): SUB RSP,0x48
000082b1(3): MOV RBX,qword ptr [RSI]
000082b4(4): MOV RBP,qword ptr [RDX + 0x8]
000082b8(9): MOV RAX,qword ptr FS:[0x28]
000082c1(5): MOV qword ptr [RSP + 0x38],RAX
000082c6(2): XOR EAX,EAX
000082c8(4): TEST byte ptr [RSI + 0x38],0x10
000082cc(5): MOV qword ptr [RSP + 0x18],RDI
000082d1(6): JZ 0x00008448
000082d7(3): TEST RBP,RBP
000082da(2): JZ 0x00008350
000082dc(4): MOV RAX,qword ptr [RDX + 0x28]
000082e0(4): CMP RAX,0x3f
000082e4(6): JG 0x0000841d
000082ea(7): MOV RDX,qword ptr [0xa0 + RBX]
000082f1(4): BT RDX,RAX
000082f5(6): JNC 0x0000841d
000082fb(4): LEA RAX,[RBX + 0x70]
000082ff(5): LEA R14,[RSP + 0x20]
00008304(4): SUB RBX,-0x80
00008308(2): XOR ECX,ECX
0000830a(2): XOR EDX,EDX
0000830c(3): MOV RSI,RBX
0000830f(3): MOV R15,RAX
00008312(3): MOV R8,R14
00008315(3): MOV RDI,RAX
00008318(5): MOV byte ptr [RSP + 0x28],0x8
0000831d(5): MOV qword ptr [RSP + 0x8],RAX
00008322(5): CALL 0x000080e0
00008327(3): MOV RDI,R15
0000832a(3): MOV R8,R14
0000832d(2): XOR ECX,ECX
0000832f(2): XOR EDX,EDX
00008331(3): MOV RSI,RBX
00008334(3): MOV R12,RAX
00008337(5): MOV byte ptr [RSP + 0x28],0x9
0000833c(5): CALL 0x000080e0
00008341(3): MOV R15,RAX
00008344(5): JMP 0x0000849d
00008350(4): LEA RAX,[RBX + 0x70]
00008354(5): LEA R14,[RSP + 0x20]
00008359(4): SUB RBX,-0x80
0000835d(2): XOR ECX,ECX
0000835f(2): XOR EDX,EDX
00008361(3): MOV RSI,RBX
00008364(3): MOV R15,RAX
00008367(3): MOV R8,R14
0000836a(3): MOV RDI,RAX
0000836d(5): MOV byte ptr [RSP + 0x28],0x8
00008372(5): MOV qword ptr [RSP + 0x8],RAX
00008377(5): CALL 0x000080e0
0000837c(3): MOV RDI,R15
0000837f(3): MOV R8,R14
00008382(2): XOR ECX,ECX
00008384(2): XOR EDX,EDX
00008386(3): MOV RSI,RBX
00008389(3): MOV R12,RAX
0000838c(5): MOV byte ptr [RSP + 0x28],0x9
00008391(5): CALL 0x000080e0
00008396(3): MOV R11,RAX
00008399(3): MOV R15,RAX
0000839c(5): MOV RDI,qword ptr [RSP + 0x8]
000083a1(3): MOV R8,R14
000083a4(3): MOV RCX,R11
000083a7(3): MOV RDX,R12
000083aa(3): MOV RSI,RBX
000083ad(5): MOV byte ptr [RSP + 0x28],0x10
000083b2(5): MOV qword ptr [RSP + 0x10],R11
000083b7(5): CALL 0x000080e0
000083bc(3): TEST RAX,RAX
000083bf(3): MOV RBP,RAX
000083c2(6): JZ 0x000084c0
000083c8(5): MOV R11,qword ptr [RSP + 0x10]
000083cd(3): TEST R11,R11
000083d0(6): JZ 0x000084c0
000083d6(3): TEST R12,R12
000083d9(6): JZ 0x000084c0
000083df(3): TEST R15,R15
000083e2(6): JZ 0x000084c0
000083e8(4): MOV RAX,qword ptr [R13 + 0x28]
000083ec(4): MOV qword ptr [R15 + 0x28],RAX
000083f0(5): MOV qword ptr [R12 + 0x28],RAX
000083f5(5): MOVZX EAX,byte ptr [R13 + 0x32]
000083fa(5): MOVZX EDX,byte ptr [R15 + 0x32]
000083ff(3): AND EAX,0x8
00008402(3): AND EDX,0xfffffff7
00008405(2): MOV ECX,EAX
00008407(2): OR EDX,ECX
00008409(4): MOV byte ptr [R15 + 0x32],DL
0000840d(6): MOVZX EAX,byte ptr [R12 + 0x32]
00008413(3): AND EAX,0xfffffff7
00008416(2): OR EAX,ECX
00008418(5): MOV byte ptr [R12 + 0x32],AL
0000841d(5): MOV RDI,qword ptr [RSP + 0x38]
00008422(9): XOR RDI,qword ptr FS:[0x28]
0000842b(3): MOV RAX,RBP
0000842e(6): JNZ 0x000084d2
00008434(4): ADD RSP,0x48
00008438(1): POP RBX
00008439(1): POP RBP
0000843a(2): POP R12
0000843c(2): POP R13
0000843e(2): POP R14
00008440(2): POP R15
00008442(1): RET
00008448(4): LEA RAX,[RBX + 0x70]
0000844c(5): LEA R14,[RSP + 0x20]
00008451(4): SUB RBX,-0x80
00008455(2): XOR ECX,ECX
00008457(2): XOR EDX,EDX
00008459(3): MOV RSI,RBX
0000845c(3): MOV R15,RAX
0000845f(3): MOV R8,R14
00008462(3): MOV RDI,RAX
00008465(5): MOV byte ptr [RSP + 0x28],0x8
0000846a(5): MOV qword ptr [RSP + 0x8],RAX
0000846f(5): CALL 0x000080e0
00008474(2): XOR ECX,ECX
00008476(2): XOR EDX,EDX
00008478(3): MOV RDI,R15
0000847b(3): MOV R8,R14
0000847e(3): MOV RSI,RBX
00008481(3): MOV R12,RAX
00008484(5): MOV byte ptr [RSP + 0x28],0x9
00008489(5): CALL 0x000080e0
0000848e(3): TEST RBP,RBP
00008491(3): MOV R15,RAX
00008494(3): MOV R11,RAX
00008497(6): JZ 0x0000839c
0000849d(5): MOV RDI,qword ptr [RSP + 0x8]
000084a2(3): MOV R8,R14
000084a5(3): MOV RCX,R15
000084a8(3): MOV RDX,RBP
000084ab(3): MOV RSI,RBX
000084ae(5): MOV byte ptr [RSP + 0x28],0x10
000084b3(5): CALL 0x000080e0
000084b8(3): MOV R11,RAX
000084bb(5): JMP 0x0000839c
000084c0(5): MOV RAX,qword ptr [RSP + 0x18]
000084c5(2): XOR EBP,EBP
000084c7(6): MOV dword ptr [RAX],0xc
000084cd(5): JMP 0x0000841d
000084d2(5): CALL 0x00001990
000084d7(9): NOP word ptr [RAX + RAX*0x1]
000084e0(1): PUSH RBP
000084e1(1): PUSH RBX
000084e2(3): MOV RBP,RDI
000084e5(3): MOV RBX,RSI
000084e8(4): SUB RSP,0x18
000084ec(4): MOV RDX,qword ptr [RSI + 0x8]
000084f0(9): MOV RAX,qword ptr FS:[0x28]
000084f9(5): MOV qword ptr [RSP + 0x8],RAX
000084fe(2): XOR EAX,EAX
00008500(8): MOV dword ptr [RSP + 0x4],0x0
00008508(3): TEST RDX,RDX
0000850b(2): JZ 0x00008513
0000850d(4): CMP byte ptr [RDX + 0x30],0x11
00008511(2): JZ 0x00008560
00008513(4): MOV RDX,qword ptr [RBX + 0x10]
00008517(3): TEST RDX,RDX
0000851a(2): JZ 0x00008522
0000851c(4): CMP byte ptr [RDX + 0x30],0x11
00008520(2): JZ 0x00008540
00008522(5): MOV RCX,qword ptr [RSP + 0x8]
00008527(9): XOR RCX,qword ptr FS:[0x28]
00008530(4): MOV EAX,dword ptr [RSP + 0x4]
00008534(2): JNZ 0x0000857b
00008536(4): ADD RSP,0x18
0000853a(1): POP RBX
0000853b(1): POP RBP
0000853c(1): RET
00008540(5): LEA RDI,[RSP + 0x4]
00008545(3): MOV RSI,RBP
00008548(5): CALL 0x000082a0
0000854d(3): TEST RAX,RAX
00008550(4): MOV qword ptr [RBX + 0x10],RAX
00008554(2): JZ 0x00008522
00008556(3): MOV qword ptr [RAX],RBX
00008559(2): JMP 0x00008522
00008560(5): LEA RDI,[RSP + 0x4]
00008565(3): MOV RSI,RBP
00008568(5): CALL 0x000082a0
0000856d(3): TEST RAX,RAX
00008570(4): MOV qword ptr [RBX + 0x8],RAX
00008574(2): JZ 0x00008513
00008576(3): MOV qword ptr [RAX],RBX
00008579(2): JMP 0x00008513
0000857b(5): CALL 0x00001990
00008580(2): PUSH R12
00008582(1): PUSH RBP
00008583(1): PUSH RBX
00008584(4): MOV RAX,qword ptr [RSI + 0x8]
00008588(4): MOV qword ptr [RDI + 0x8],RAX
0000858c(4): MOV R12,qword ptr [RSI + 0x8]
00008590(3): TEST R12,R12
00008593(2): JLE 0x000085d0
00008595(3): MOV RBX,RDI
00008598(3): MOV qword ptr [RDI],RAX
0000859b(8): LEA RDI,[RAX*0x8]
000085a3(3): MOV RBP,RSI
000085a6(5): CALL 0x00001ac0
000085ab(3): TEST RAX,RAX
000085ae(4): MOV qword ptr [RBX + 0x10],RAX
000085b2(2): JZ 0x000085f0
000085b4(4): MOV RSI,qword ptr [RBP + 0x10]
000085b8(8): LEA RDX,[R12*0x8]
000085c0(3): MOV RDI,RAX
000085c3(5): CALL 0x00001a90
000085c8(2): XOR EAX,EAX
000085ca(1): POP RBX
000085cb(1): POP RBP
000085cc(2): POP R12
000085ce(1): RET
000085d0(4): PXOR XMM0,XMM0
000085d4(8): MOV qword ptr [RDI + 0x10],0x0
000085dc(2): XOR EAX,EAX
000085de(3): MOVUPS xmmword ptr [RDI],XMM0
000085e1(1): POP RBX
000085e2(1): POP RBP
000085e3(2): POP R12
000085e5(1): RET
000085f0(8): MOV qword ptr [RBX + 0x8],0x0
000085f8(7): MOV qword ptr [RBX],0x0
000085ff(5): MOV EAX,0xc
00008604(2): JMP 0x000085ca
00008610(3): TEST RSI,RSI
00008613(2): PUSH R14
00008615(2): PUSH R13
00008617(2): PUSH R12
00008619(1): PUSH RBP
0000861a(1): PUSH RBX
0000861b(6): JZ 0x000086c5
00008621(3): TEST RDX,RDX
00008624(4): MOV R13,qword ptr [RSI + 0x8]
00008628(6): JZ 0x000086c0
0000862e(3): TEST R13,R13
00008631(6): JLE 0x000086c0
00008637(4): MOV R14,qword ptr [RDX + 0x8]
0000863b(3): TEST R14,R14
0000863e(6): JLE 0x000086f3
00008644(3): MOV R12,RDI
00008647(5): LEA RDI,[R13 + R14*0x1]
0000864c(3): MOV RBX,RDX
0000864f(3): MOV RBP,RSI
00008652(4): MOV qword ptr [R12],RDI
00008656(4): SHL RDI,0x3
0000865a(5): CALL 0x00001ac0
0000865f(3): TEST RAX,RAX
00008662(5): MOV qword ptr [R12 + 0x10],RAX
00008667(6): JZ 0x00008758
0000866d(4): MOV R9,qword ptr [RBX + 0x10]
00008671(4): MOV R8,qword ptr [RBP + 0x10]
00008675(2): XOR EBX,EBX
00008677(2): XOR ECX,ECX
00008679(2): XOR ESI,ESI
0000867b(2): JMP 0x0000869e
00008680(4): SETZ DIL
00008684(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDX
00008689(4): ADD RSI,0x1
0000868d(4): MOVZX EDI,DIL
00008691(3): ADD RCX,RDI
00008694(3): CMP R13,RSI
00008697(2): JLE 0x00008700
00008699(3): CMP R14,RCX
0000869c(2): JLE 0x00008718
0000869e(4): MOV RDX,qword ptr [R8 + RSI*0x8]
000086a2(4): MOV RDI,qword ptr [R9 + RCX*0x8]
000086a6(4): ADD RBX,0x1
000086aa(3): CMP RDX,RDI
000086ad(2): JLE 0x00008680
000086af(4): ADD RCX,0x1
000086b3(5): MOV qword ptr [RAX + RBX*0x8 + -0x8],RDI
000086b8(2): JMP 0x00008694
000086c0(3): TEST R13,R13
000086c3(2): JG 0x000086f3
000086c5(3): TEST RDX,RDX
000086c8(2): JZ 0x000086d1
000086ca(5): CMP qword ptr [RDX + 0x8],0x0
000086cf(2): JG 0x000086f0
000086d1(4): PXOR XMM0,XMM0
000086d5(8): MOV qword ptr [RDI + 0x10],0x0
000086dd(2): XOR EAX,EAX
000086df(3): MOVAPS xmmword ptr [RDI],XMM0
000086e2(1): POP RBX
000086e3(1): POP RBP
000086e4(2): POP R12
000086e6(2): POP R13
000086e8(2): POP R14
000086ea(1): RET
000086f0(3): MOV RSI,RDX
000086f3(1): POP RBX
000086f4(1): POP RBP
000086f5(2): POP R12
000086f7(2): POP R13
000086f9(2): POP R14
000086fb(5): JMP 0x00008580
00008700(3): CMP R14,RCX
00008703(2): JG 0x00008738
00008705(5): MOV qword ptr [R12 + 0x8],RBX
0000870a(2): XOR EAX,EAX
0000870c(1): POP RBX
0000870d(1): POP RBP
0000870e(2): POP R12
00008710(2): POP R13
00008712(2): POP R14
00008714(1): RET
00008718(3): SUB R13,RSI
0000871b(4): LEA RDI,[RAX + RBX*0x8]
0000871f(4): LEA RSI,[R8 + RSI*0x8]
00008723(8): LEA RDX,[R13*0x8]
0000872b(3): ADD RBX,R13
0000872e(5): CALL 0x00001a90
00008733(2): JMP 0x00008705
00008738(3): SUB R14,RCX
0000873b(4): LEA RDI,[RAX + RBX*0x8]
0000873f(4): LEA RSI,[R9 + RCX*0x8]
00008743(8): LEA RDX,[R14*0x8]
0000874b(3): ADD RBX,R14
0000874e(5): CALL 0x00001a90
00008753(2): JMP 0x00008705
00008758(5): MOV EAX,0xc
0000875d(5): JMP 0x000086e2
00008770(2): PUSH R15
00008772(2): PUSH R14
00008774(2): PUSH R13
00008776(2): PUSH R12
00008778(1): PUSH RBP
00008779(1): PUSH RBX
0000877a(4): SUB RSP,0x28
0000877e(4): MOV R10,qword ptr [RDX + 0x8]
00008782(3): TEST R10,R10
00008785(6): JZ 0x00008a0f
0000878b(3): MOV R8D,ECX
0000878e(3): TEST R10,R10
00008791(4): LEA R12,[R8 + R10*0x1]
00008795(2): JLE 0x000087ac
00008797(4): MOV RAX,qword ptr [RDX + 0x10]
0000879b(4): LEA R10,[RAX + R10*0x8]
0000879f(1): NOP
000087a0(3): ADD R12,qword ptr [RAX]
000087a3(4): ADD RAX,0x8
000087a7(3): CMP R10,RAX
000087aa(2): JNZ 0x000087a0
000087ac(7): MOV RAX,qword ptr [0x88 + RSI]
000087b3(3): MOV RBP,RDX
000087b6(4): MOV dword ptr [RSP + 0x4],ECX
000087ba(3): MOV R13,RSI
000087bd(5): MOV qword ptr [RSP + 0x18],RDI
000087c2(3): AND RAX,R12
000087c5(4): LEA RDX,[RAX + RAX*0x2]
000087c9(4): MOV RAX,qword ptr [RSI + 0x40]
000087cd(4): LEA RAX,[RAX + RDX*0x8]
000087d1(3): MOV R11,qword ptr [RAX]
000087d4(3): TEST R11,R11
000087d7(2): JLE 0x00008830
000087d9(4): MOV RBX,qword ptr [RAX + 0x10]
000087dd(3): XOR R10D,R10D
000087e0(3): MOV R9D,ECX
000087e3(2): JMP 0x000087f1
000087e8(4): ADD R10,0x1
000087ec(3): CMP R10,R11
000087ef(2): JZ 0x00008830
000087f1(4): MOV R14,qword ptr [RBX + R10*0x8]
000087f5(3): CMP qword ptr [R14],R12
000087f8(2): JNZ 0x000087e8
000087fa(5): MOVZX EAX,byte ptr [R14 + 0x68]
000087ff(3): AND EAX,0xf
00008802(3): CMP EAX,R9D
00008805(2): JNZ 0x000087e8
00008807(4): MOV RDI,qword ptr [R14 + 0x50]
0000880b(3): TEST RDI,RDI
0000880e(2): JZ 0x000087e8
00008810(3): MOV RSI,RBP
00008813(5): CALL 0x000073c0
00008818(2): TEST AL,AL
0000881a(2): JZ 0x000087e8
0000881c(4): ADD RSP,0x28
00008820(3): MOV RAX,R14
00008823(1): POP RBX
00008824(1): POP RBP
00008825(2): POP R12
00008827(2): POP R13
00008829(2): POP R14
0000882b(2): POP R15
0000882d(1): RET
00008830(5): MOV ESI,0x1
00008835(5): MOV EDI,0x70
0000883a(5): CALL 0x00001a70
0000883f(3): TEST RAX,RAX
00008842(3): MOV R14,RAX
00008845(6): JZ 0x00008986
0000884b(4): LEA RAX,[RAX + 0x8]
0000884f(3): MOV RSI,RBP
00008852(3): MOV RDI,RAX
00008855(3): MOV RBX,RAX
00008858(5): CALL 0x00008580
0000885d(2): TEST EAX,EAX
0000885f(6): JNZ 0x00008a1d
00008865(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000886a(5): MOVZX EDX,byte ptr [RSP + 0x4]
0000886f(4): MOV qword ptr [R14 + 0x50],RBX
00008873(3): AND EDX,0xf
00008876(3): AND EAX,0xfffffff0
00008879(2): OR EAX,EDX
0000887b(5): CMP qword ptr [RBP + 0x8],0x0
00008880(4): MOV byte ptr [R14 + 0x68],AL
00008884(6): JLE 0x00008968
0000888a(4): LEA RCX,[R14 + 0x18]
0000888e(3): XOR R15D,R15D
00008891(5): MOV qword ptr [RSP + 0x10],R12
00008896(3): XOR R10D,R10D
00008899(3): MOV R12,R13
0000889c(3): MOV R13,R15
0000889f(5): MOV qword ptr [RSP + 0x8],RCX
000088a4(3): MOV R15,RBX
000088a7(9): NOP word ptr [RAX + RAX*0x1]
000088b0(4): MOV RAX,qword ptr [RBP + 0x10]
000088b4(4): MOV RAX,qword ptr [RAX + R13*0x8]
000088b8(4): SHL RAX,0x4
000088bc(4): ADD RAX,qword ptr [R12]
000088c0(4): MOVZX ESI,byte ptr [RAX + 0x8]
000088c4(3): MOV EBX,dword ptr [RAX + 0x8]
000088c7(3): SHR EBX,0x8
000088ca(5): AND BX,0x3ff
000088cf(3): CMP ESI,0x1
000088d2(3): MOVZX EDI,BX
000088d5(2): JNZ 0x000088db
000088d7(2): TEST EDI,EDI
000088d9(2): JZ 0x00008952
000088db(5): MOVZX EDX,byte ptr [R14 + 0x68]
000088e0(4): MOVZX EAX,byte ptr [RAX + 0xa]
000088e4(3): MOV R9D,EDX
000088e7(3): SHR AL,0x4
000088ea(3): AND EDX,0xffffffdf
000088ed(4): SHR R9B,0x5
000088f1(3): OR EAX,R9D
000088f4(3): AND EAX,0x1
000088f7(3): SHL EAX,0x5
000088fa(2): OR EAX,EDX
000088fc(3): CMP ESI,0x2
000088ff(4): MOV byte ptr [R14 + 0x68],AL
00008903(6): JZ 0x000089d0
00008909(3): CMP ESI,0x4
0000890c(2): JNZ 0x00008915
0000890e(3): OR EAX,0x40
00008911(4): MOV byte ptr [R14 + 0x68],AL
00008915(2): TEST EDI,EDI
00008917(2): JZ 0x00008952
00008919(4): CMP R15,qword ptr [R14 + 0x50]
0000891d(6): JZ 0x000089e0
00008923(3): TEST BL,0x1
00008926(2): JZ 0x000089a0
00008928(5): TEST byte ptr [RSP + 0x4],0x1
0000892d(2): JZ 0x00008938
0000892f(3): TEST BL,0x2
00008932(2): JZ 0x000089ac
00008934(4): NOP dword ptr [RAX]
00008938(3): MOV RDX,R13
0000893b(3): SUB RDX,R10
0000893e(2): JS 0x0000894e
00008940(5): MOV RSI,qword ptr [RSP + 0x8]
00008945(4): LEA RDI,[R14 + 0x10]
00008949(5): CALL 0x000075a0
0000894e(4): ADD R10,0x1
00008952(4): ADD R13,0x1
00008956(4): CMP R13,qword ptr [RBP + 0x8]
0000895a(6): JL 0x000088b0
00008960(3): MOV R13,R12
00008963(5): MOV R12,qword ptr [RSP + 0x10]
00008968(3): MOV RDX,R12
0000896b(3): MOV RSI,R14
0000896e(3): MOV RDI,R13
00008971(5): CALL 0x00006010
00008976(2): TEST EAX,EAX
00008978(6): JZ 0x0000881c
0000897e(3): MOV RDI,R14
00008981(5): CALL 0x000070b0
00008986(5): MOV RAX,qword ptr [RSP + 0x18]
0000898b(3): XOR R14D,R14D
0000898e(6): MOV dword ptr [RAX],0xc
00008994(5): JMP 0x0000881c
000089a0(3): TEST BL,0x2
000089a3(2): JZ 0x000089ac
000089a5(5): TEST byte ptr [RSP + 0x4],0x1
000089aa(2): JNZ 0x00008938
000089ac(3): TEST BL,0x10
000089af(2): JZ 0x000089b8
000089b1(5): TEST byte ptr [RSP + 0x4],0x2
000089b6(2): JZ 0x00008938
000089b8(3): AND EBX,0x40
000089bb(2): JZ 0x00008952
000089bd(5): TEST byte ptr [RSP + 0x4],0x4
000089c2(2): JNZ 0x00008952
000089c4(5): JMP 0x00008938
000089d0(3): OR EAX,0x10
000089d3(4): MOV byte ptr [R14 + 0x68],AL
000089d7(5): JMP 0x00008915
000089e0(5): MOV EDI,0x18
000089e5(5): CALL 0x00001ac0
000089ea(3): TEST RAX,RAX
000089ed(4): MOV qword ptr [R14 + 0x50],RAX
000089f1(2): JZ 0x0000897e
000089f3(3): MOV RSI,RBP
000089f6(3): MOV RDI,RAX
000089f9(5): CALL 0x00008580
000089fe(2): TEST EAX,EAX
00008a00(2): JNZ 0x00008986
00008a02(5): OR byte ptr [R14 + 0x68],0x80
00008a07(3): XOR R10D,R10D
00008a0a(5): JMP 0x00008923
00008a0f(6): MOV dword ptr [RDI],0x0
00008a15(3): XOR R14D,R14D
00008a18(5): JMP 0x0000881c
00008a1d(3): MOV RDI,R14
00008a20(5): CALL 0x00001880
00008a25(5): JMP 0x00008986
00008a30(2): PUSH R15
00008a32(2): PUSH R14
00008a34(2): PUSH R13
00008a36(2): PUSH R12
00008a38(1): PUSH RBP
00008a39(1): PUSH RBX
00008a3a(4): SUB RSP,0x8
00008a3e(4): MOV RBP,qword ptr [RDX + 0x8]
00008a42(3): TEST RBP,RBP
00008a45(6): JZ 0x00008c20
00008a4b(3): TEST RBP,RBP
00008a4e(2): JLE 0x00008a6c
00008a50(4): MOV RAX,qword ptr [RDX + 0x10]
00008a54(4): LEA RCX,[RAX + RBP*0x8]
00008a58(8): NOP dword ptr [RAX + RAX*0x1]
00008a60(3): ADD RBP,qword ptr [RAX]
00008a63(4): ADD RAX,0x8
00008a67(3): CMP RCX,RAX
00008a6a(2): JNZ 0x00008a60
00008a6c(7): MOV RAX,qword ptr [0x88 + RSI]
00008a73(3): MOV R14,RDX
00008a76(3): MOV R12,RSI
00008a79(3): MOV R13,RDI
00008a7c(3): AND RAX,RBP
00008a7f(4): LEA RDX,[RAX + RAX*0x2]
00008a83(4): MOV RAX,qword ptr [RSI + 0x40]
00008a87(4): LEA RAX,[RAX + RDX*0x8]
00008a8b(3): MOV R10,qword ptr [RAX]
00008a8e(3): TEST R10,R10
00008a91(2): JLE 0x00008ac6
00008a93(4): MOV R11,qword ptr [RAX + 0x10]
00008a97(3): XOR R9D,R9D
00008a9a(6): NOP word ptr [RAX + RAX*0x1]
00008aa0(4): MOV RBX,qword ptr [R11 + R9*0x8]
00008aa4(3): CMP qword ptr [RBX],RBP
00008aa7(2): JNZ 0x00008abd
00008aa9(4): LEA RDI,[RBX + 0x8]
00008aad(3): MOV RSI,R14
00008ab0(5): CALL 0x000073c0
00008ab5(2): TEST AL,AL
00008ab7(6): JNZ 0x00008bbf
00008abd(4): ADD R9,0x1
00008ac1(3): CMP R10,R9
00008ac4(2): JNZ 0x00008aa0
00008ac6(5): MOV ESI,0x1
00008acb(5): MOV EDI,0x70
00008ad0(5): CALL 0x00001a70
00008ad5(3): TEST RAX,RAX
00008ad8(3): MOV RBX,RAX
00008adb(6): JZ 0x00008c08
00008ae1(4): LEA R15,[RAX + 0x8]
00008ae5(3): MOV RSI,R14
00008ae8(3): MOV RDI,R15
00008aeb(5): CALL 0x00008580
00008af0(2): TEST EAX,EAX
00008af2(6): JNZ 0x00008c00
00008af8(4): MOV RAX,qword ptr [R14 + 0x8]
00008afc(4): MOV qword ptr [RBX + 0x50],R15
00008b00(3): TEST RAX,RAX
00008b03(6): JLE 0x00008bad
00008b09(4): MOV RSI,qword ptr [R14 + 0x10]
00008b0d(4): MOV R8,qword ptr [R12]
00008b11(4): LEA R9,[RSI + RAX*0x8]
00008b15(2): JMP 0x00008b64
00008b20(4): MOVZX ECX,byte ptr [RBX + 0x68]
00008b24(4): MOVZX EDX,byte ptr [RAX + 0xa]
00008b28(3): MOV R10D,ECX
00008b2b(3): SHR DL,0x4
00008b2e(3): AND ECX,0xffffffdf
00008b31(4): SHR R10B,0x5
00008b35(3): OR EDX,R10D
00008b38(3): AND EDX,0x1
00008b3b(3): SHL EDX,0x5
00008b3e(2): OR EDX,ECX
00008b40(3): CMP EDI,0x2
00008b43(3): MOV byte ptr [RBX + 0x68],DL
00008b46(6): JZ 0x00008bd8
00008b4c(3): CMP EDI,0x4
00008b4f(6): JNZ 0x00008be8
00008b55(3): OR EDX,0x40
00008b58(3): MOV byte ptr [RBX + 0x68],DL
00008b5b(4): ADD RSI,0x8
00008b5f(3): CMP R9,RSI
00008b62(2): JZ 0x00008bad
00008b64(3): MOV RAX,qword ptr [RSI]
00008b67(4): SHL RAX,0x4
00008b6b(3): ADD RAX,R8
00008b6e(4): MOVZX EDI,byte ptr [RAX + 0x8]
00008b72(3): CMP EDI,0x1
00008b75(2): JNZ 0x00008b20
00008b77(7): TEST dword ptr [RAX + 0x8],0x3ff00
00008b7e(2): JZ 0x00008b5b
00008b80(4): MOVZX EDX,byte ptr [RBX + 0x68]
00008b84(4): MOVZX EAX,byte ptr [RAX + 0xa]
00008b88(2): MOV ECX,EDX
00008b8a(3): SHR AL,0x4
00008b8d(3): AND EDX,0xffffffdf
00008b90(3): SHR CL,0x5
00008b93(2): OR EAX,ECX
00008b95(3): AND EAX,0x1
00008b98(3): SHL EAX,0x5
00008b9b(2): OR EAX,EDX
00008b9d(3): MOV byte ptr [RBX + 0x68],AL
00008ba0(4): ADD RSI,0x8
00008ba4(4): OR byte ptr [RBX + 0x68],0x80
00008ba8(3): CMP R9,RSI
00008bab(2): JNZ 0x00008b64
00008bad(3): MOV RDX,RBP
00008bb0(3): MOV RSI,RBX
00008bb3(3): MOV RDI,R12
00008bb6(5): CALL 0x00006010
00008bbb(2): TEST EAX,EAX
00008bbd(2): JNZ 0x00008c14
00008bbf(4): ADD RSP,0x8
00008bc3(3): MOV RAX,RBX
00008bc6(1): POP RBX
00008bc7(1): POP RBP
00008bc8(2): POP R12
00008bca(2): POP R13
00008bcc(2): POP R14
00008bce(2): POP R15
00008bd0(1): RET
00008bd8(3): OR EDX,0x10
00008bdb(3): MOV byte ptr [RBX + 0x68],DL
00008bde(5): JMP 0x00008b5b
00008be8(3): CMP EDI,0xc
00008beb(2): JZ 0x00008ba0
00008bed(7): TEST dword ptr [RAX + 0x8],0x3ff00
00008bf4(6): JZ 0x00008b5b
00008bfa(2): JMP 0x00008ba0
00008c00(3): MOV RDI,RBX
00008c03(5): CALL 0x00001880
00008c08(8): MOV dword ptr [R13],0xc
00008c10(2): XOR EBX,EBX
00008c12(2): JMP 0x00008bbf
00008c14(3): MOV RDI,RBX
00008c17(5): CALL 0x000070b0
00008c1c(2): JMP 0x00008c08
00008c20(6): MOV dword ptr [RDI],0x0
00008c26(2): XOR EBX,EBX
00008c28(2): JMP 0x00008bbf
00008c30(2): PUSH R15
00008c32(2): PUSH R14
00008c34(2): PUSH R13
00008c36(2): PUSH R12
00008c38(1): PUSH RBP
00008c39(1): PUSH RBX
00008c3a(4): SUB RSP,0x48
00008c3e(9): MOV RAX,qword ptr FS:[0x28]
00008c47(5): MOV qword ptr [RSP + 0x38],RAX
00008c4c(2): XOR EAX,EAX
00008c4e(3): TEST RCX,RCX
00008c51(6): JLE 0x00008ce6
00008c57(5): LEA RAX,[RSP + 0x1c]
00008c5c(3): MOV R14,RDI
00008c5f(3): MOV RBX,RSI
00008c62(3): MOV R12,RDX
00008c65(3): MOV RBP,RCX
00008c68(3): XOR R15D,R15D
00008c6b(5): LEA R13,[RSP + 0x20]
00008c70(5): MOV qword ptr [RSP + 0x8],RAX
00008c75(2): JMP 0x00008ccc
00008c80(3): TEST RDX,RDX
00008c83(2): JZ 0x00008cc3
00008c85(4): ADD RDX,0x8
00008c89(4): ADD RSI,0x8
00008c8d(3): MOV RDI,R13
00008c90(5): CALL 0x00008610
00008c95(2): TEST EAX,EAX
00008c97(4): MOV dword ptr [RSP + 0x1c],EAX
00008c9b(2): JNZ 0x00008ce8
00008c9d(5): MOV RDI,qword ptr [RSP + 0x8]
00008ca2(3): MOV RDX,R13
00008ca5(3): MOV RSI,R14
00008ca8(5): CALL 0x00008a30
00008cad(5): MOV RDI,qword ptr [RSP + 0x30]
00008cb2(4): MOV qword ptr [RBX + R15*0x8],RAX
00008cb6(5): CALL 0x00001880
00008cbb(4): MOV EAX,dword ptr [RSP + 0x1c]
00008cbf(2): TEST EAX,EAX
00008cc1(2): JNZ 0x00008ce8
00008cc3(4): ADD R15,0x1
00008cc7(3): CMP RBP,R15
00008cca(2): JZ 0x00008ce6
00008ccc(4): MOV RSI,qword ptr [RBX + R15*0x8]
00008cd0(4): MOV RDX,qword ptr [R12 + R15*0x8]
00008cd4(3): TEST RSI,RSI
00008cd7(2): JNZ 0x00008c80
00008cd9(4): MOV qword ptr [RBX + R15*0x8],RDX
00008cdd(4): ADD R15,0x1
00008ce1(3): CMP RBP,R15
00008ce4(2): JNZ 0x00008ccc
00008ce6(2): XOR EAX,EAX
00008ce8(5): MOV RCX,qword ptr [RSP + 0x38]
00008ced(9): XOR RCX,qword ptr FS:[0x28]
00008cf6(2): JNZ 0x00008d07
00008cf8(4): ADD RSP,0x48
00008cfc(1): POP RBX
00008cfd(1): POP RBP
00008cfe(2): POP R12
00008d00(2): POP R13
00008d02(2): POP R14
00008d04(2): POP R15
00008d06(1): RET
00008d07(5): CALL 0x00001990
00008d0c(4): NOP dword ptr [RAX]
00008d10(2): PUSH R15
00008d12(2): PUSH R14
00008d14(2): PUSH R13
00008d16(2): PUSH R12
00008d18(3): MOV R12,RDX
00008d1b(1): PUSH RBP
00008d1c(1): PUSH RBX
00008d1d(3): MOV RBX,RDI
00008d20(3): MOV RBP,RSI
00008d23(2): XOR ESI,ESI
00008d25(4): SUB RSP,0x78
00008d29(7): MOV RDI,qword ptr [0xc8 + RDI]
00008d30(9): MOV RAX,qword ptr FS:[0x28]
00008d39(5): MOV qword ptr [RSP + 0x68],RAX
00008d3e(2): XOR EAX,EAX
00008d40(5): MOV qword ptr [RSP + 0x20],RCX
00008d45(5): MOV dword ptr [RSP + 0x2c],R8D
00008d4a(3): MOV RDX,RDI
00008d4d(3): CMP RSI,RDX
00008d50(2): JGE 0x00008da7
00008d52(4): LEA RAX,[RSI + RDX*0x1]
00008d56(7): MOV R8,qword ptr [0xd8 + RBX]
00008d5d(3): MOV RCX,RAX
00008d60(4): SHR RCX,0x3f
00008d64(3): ADD RCX,RAX
00008d67(3): SAR RCX,1
00008d6a(4): LEA RAX,[RCX + RCX*0x4]
00008d6e(5): CMP R12,qword ptr [R8 + RAX*0x8 + 0x8]
00008d73(2): JLE 0x00008da2
00008d75(5): JMP 0x00008df8
00008d80(4): LEA RDX,[RSI + RCX*0x1]
00008d84(3): MOV RAX,RDX
00008d87(4): SHR RAX,0x3f
00008d8b(3): ADD RAX,RDX
00008d8e(3): SAR RAX,1
00008d91(4): LEA RDX,[RAX + RAX*0x4]
00008d95(3): MOV R9,RAX
00008d98(5): CMP R12,qword ptr [R8 + RDX*0x8 + 0x8]
00008d9d(2): JG 0x00008e00
00008d9f(3): MOV RCX,RAX
00008da2(3): CMP RSI,RCX
00008da5(2): JL 0x00008d80
00008da7(3): CMP RDI,RSI
00008daa(2): JLE 0x00008dcd
00008dac(7): MOV RCX,qword ptr [0xd8 + RBX]
00008db3(4): LEA RAX,[RSI + RSI*0x4]
00008db7(4): SHL RAX,0x3
00008dbb(5): CMP qword ptr [RCX + RAX*0x1 + 0x8],R12
00008dc0(5): MOV qword ptr [RSP + 0x30],RAX
00008dc5(2): JNZ 0x00008dcd
00008dc7(4): CMP RSI,-0x1
00008dcb(2): JNZ 0x00008e10
00008dcd(2): XOR EAX,EAX
00008dcf(5): MOV RBX,qword ptr [RSP + 0x68]
00008dd4(9): XOR RBX,qword ptr FS:[0x28]
00008ddd(6): JNZ 0x000090a9
00008de3(4): ADD RSP,0x78
00008de7(1): POP RBX
00008de8(1): POP RBP
00008de9(2): POP R12
00008deb(2): POP R13
00008ded(2): POP R14
00008def(2): POP R15
00008df1(1): RET
00008df8(3): MOV R9,RCX
00008dfb(3): MOV RCX,RDX
00008dfe(2): NOP
00008e00(4): LEA RSI,[R9 + 0x1]
00008e04(3): MOV RDX,RCX
00008e07(5): JMP 0x00008d4d
00008e10(4): LEA RAX,[RBP + 0x10]
00008e14(7): MOV R13,qword ptr [0x98 + RBX]
00008e1b(4): MOV qword ptr [RSP],RAX
00008e1f(5): LEA RAX,[RSP + 0x4c]
00008e24(5): MOV qword ptr [RSP + 0x38],RAX
00008e29(5): LEA RAX,[RSP + 0x50]
00008e2e(5): MOV qword ptr [RSP + 0x10],RAX
00008e33(5): MOV RAX,qword ptr [RSP + 0x30]
00008e38(4): LEA R15,[RCX + RAX*0x1]
00008e3c(5): JMP 0x00008f18
00008e48(4): MOV RAX,qword ptr [R13 + 0x18]
00008e4c(4): MOV RCX,qword ptr [RAX + R10*0x8]
00008e50(7): MOV R10,qword ptr [0xb8 + RBX]
00008e57(8): LEA RAX,[R14*0x8]
00008e5f(5): MOV qword ptr [RSP + 0x18],RAX
00008e64(3): ADD R10,RAX
00008e67(5): MOV qword ptr [RSP + 0x8],RCX
00008e6c(3): MOV R9,qword ptr [R10]
00008e6f(3): TEST R9,R9
00008e72(6): JZ 0x00009000
00008e78(4): MOV RDI,qword ptr [R9 + 0x10]
00008e7c(4): LEA RSI,[R9 + 0x18]
00008e80(3): MOV RDX,RCX
00008e83(5): CALL 0x00007420
00008e88(3): TEST RAX,RAX
00008e8b(2): JNZ 0x00008f09
00008e8d(5): MOV RDI,qword ptr [RSP + 0x10]
00008e92(4): LEA RSI,[R9 + 0x8]
00008e96(5): CALL 0x00008580
00008e9b(5): MOV RSI,qword ptr [RSP + 0x8]
00008ea0(5): MOV RDI,qword ptr [RSP + 0x10]
00008ea5(4): MOV dword ptr [RSP + 0x4c],EAX
00008ea9(5): CALL 0x00005ee0
00008eae(4): MOV EDX,dword ptr [RSP + 0x4c]
00008eb2(2): TEST EDX,EDX
00008eb4(6): JNZ 0x00009056
00008eba(2): CMP AL,0x1
00008ebc(6): JNZ 0x00009056
00008ec2(5): MOV R10,qword ptr [RSP + 0x18]
00008ec7(7): ADD R10,qword ptr [0xb8 + RBX]
00008ece(5): MOV RDX,qword ptr [RSP + 0x10]
00008ed3(5): MOV RDI,qword ptr [RSP + 0x38]
00008ed8(3): MOV RSI,R13
00008edb(5): MOV qword ptr [RSP + 0x8],R10
00008ee0(5): CALL 0x00008a30
00008ee5(5): MOV R10,qword ptr [RSP + 0x8]
00008eea(5): MOV RDI,qword ptr [RSP + 0x60]
00008eef(3): MOV qword ptr [R10],RAX
00008ef2(5): CALL 0x00001880
00008ef7(7): MOV RAX,qword ptr [0xb8 + RBX]
00008efe(5): CMP qword ptr [RAX + R14*0x8],0x0
00008f03(6): JZ 0x00009045
00008f09(4): ADD R15,0x28
00008f0d(5): CMP byte ptr [R15 + -0x8],0x0
00008f12(6): JZ 0x00008dcd
00008f18(3): MOV R10,qword ptr [R15]
00008f1b(4): MOV R9,qword ptr [RBP + 0x8]
00008f1f(4): MOV RSI,qword ptr [RSP]
00008f23(3): MOV RDX,R10
00008f26(3): MOV RDI,R9
00008f29(5): CALL 0x00007420
00008f2e(3): TEST RAX,RAX
00008f31(2): JZ 0x00008f09
00008f33(4): MOV R8,qword ptr [R15 + 0x18]
00008f37(3): ADD R8,R12
00008f3a(3): MOV R14,R8
00008f3d(4): SUB R14,qword ptr [R15 + 0x10]
00008f41(3): CMP R12,R14
00008f44(6): JNZ 0x00008e48
00008f4a(4): MOV RCX,qword ptr [R13 + 0x28]
00008f4e(4): LEA RAX,[R10 + R10*0x2]
00008f52(4): MOV RSI,qword ptr [RSP]
00008f56(3): MOV RDI,R9
00008f59(4): LEA RAX,[RCX + RAX*0x8]
00008f5d(4): MOV RAX,qword ptr [RAX + 0x10]
00008f61(3): MOV R14,qword ptr [RAX]
00008f64(3): MOV RDX,R14
00008f67(5): CALL 0x00007420
00008f6c(3): TEST RAX,RAX
00008f6f(2): JNZ 0x00008f09
00008f71(5): MOV EDI,0x8
00008f76(9): MOV qword ptr [RSP + 0x50],0x1
00008f7f(9): MOV qword ptr [RSP + 0x58],0x1
00008f88(5): CALL 0x00001ac0
00008f8d(3): TEST RAX,RAX
00008f90(5): MOV qword ptr [RSP + 0x60],RAX
00008f95(6): JZ 0x0000908d
00008f9b(3): MOV qword ptr [RAX],R14
00008f9e(2): XOR EAX,EAX
00008fa0(5): MOV R15,qword ptr [RSP + 0x10]
00008fa5(5): MOV RDX,qword ptr [RSP + 0x20]
00008faa(3): MOV RDI,R13
00008fad(4): MOV ECX,dword ptr [RSP + 0x2c]
00008fb1(4): MOV dword ptr [RSP + 0x4c],EAX
00008fb5(3): MOV RSI,R15
00008fb8(5): CALL 0x00007dd0
00008fbd(3): MOV RSI,R15
00008fc0(3): MOV RDI,RBP
00008fc3(3): MOV R14D,EAX
00008fc6(5): CALL 0x00007940
00008fcb(5): MOV RDI,qword ptr [RSP + 0x60]
00008fd0(3): MOV R15D,EAX
00008fd3(5): CALL 0x00001880
00008fd8(4): MOV EAX,dword ptr [RSP + 0x4c]
00008fdc(3): MOV EDX,R14D
00008fdf(3): OR EDX,R15D
00008fe2(2): OR EDX,EAX
00008fe4(6): JNZ 0x00009076
00008fea(7): MOV RCX,qword ptr [0xd8 + RBX]
00008ff1(5): JMP 0x00008e33
00009000(5): MOV EDI,0x8
00009005(5): MOV qword ptr [RSP + 0x18],R10
0000900a(9): MOV qword ptr [RSP + 0x50],0x1
00009013(9): MOV qword ptr [RSP + 0x58],0x1
0000901c(5): CALL 0x00001ac0
00009021(3): TEST RAX,RAX
00009024(5): MOV qword ptr [RSP + 0x60],RAX
00009029(2): JZ 0x0000906c
0000902b(5): MOV RDI,qword ptr [RSP + 0x8]
00009030(8): MOV dword ptr [RSP + 0x4c],0x0
00009038(5): MOV R10,qword ptr [RSP + 0x18]
0000903d(3): MOV qword ptr [RAX],RDI
00009040(5): JMP 0x00008ece
00009045(4): MOV EAX,dword ptr [RSP + 0x4c]
00009049(2): TEST EAX,EAX
0000904b(6): JZ 0x00008f09
00009051(5): JMP 0x00008dcf
00009056(5): MOV RDI,qword ptr [RSP + 0x60]
0000905b(5): CALL 0x00001880
00009060(4): MOV EAX,dword ptr [RSP + 0x4c]
00009064(2): TEST EAX,EAX
00009066(6): JNZ 0x00008dcf
0000906c(5): MOV EAX,0xc
00009071(5): JMP 0x00008dcf
00009076(2): TEST EAX,EAX
00009078(6): JNZ 0x00008dcf
0000907e(3): TEST R14D,R14D
00009081(3): MOV EAX,R14D
00009084(4): CMOVZ EAX,R15D
00009088(5): JMP 0x00008dcf
0000908d(9): MOV qword ptr [RSP + 0x58],0x0
00009096(9): MOV qword ptr [RSP + 0x50],0x0
0000909f(5): MOV EAX,0xc
000090a4(5): JMP 0x00008fa0
000090a9(5): CALL 0x00001990
000090ae(2): NOP
000090b0(2): PUSH R15
000090b2(2): PUSH R14
000090b4(2): PUSH R13
000090b6(2): PUSH R12
000090b8(1): PUSH RBP
000090b9(1): PUSH RBX
000090ba(4): SUB RSP,0x28
000090be(4): CMP qword ptr [RSI],0x0
000090c2(7): MOV R13,qword ptr [0x98 + RDI]
000090c9(6): JLE 0x00009190
000090cf(3): MOV R14,RDX
000090d2(3): MOV R12,RSI
000090d5(3): MOV R15,RDI
000090d8(2): XOR EBX,EBX
000090da(2): JMP 0x000090ee
000090e0(4): ADD RBX,0x1
000090e4(4): CMP RBX,qword ptr [R12]
000090e8(6): JGE 0x00009190
000090ee(3): MOV RAX,qword ptr [R14]
000090f1(4): MOV RBP,qword ptr [RAX + RBX*0x8]
000090f5(3): MOV RAX,RBP
000090f8(4): SHL RAX,0x4
000090fc(4): ADD RAX,qword ptr [R13]
00009100(4): CMP byte ptr [RAX + 0x8],0x8
00009104(2): JNZ 0x000090e0
00009106(3): MOV RAX,qword ptr [RAX]
00009109(4): CMP RAX,0x3f
0000910d(2): JG 0x000090e0
0000910f(7): MOV RSI,qword ptr [0xa0 + R13]
00009116(4): BT RSI,RAX
0000911a(2): JNC 0x000090e0
0000911c(7): MOV R8,qword ptr [0xe8 + R15]
00009123(7): CMP R8,qword ptr [0xf0 + R15]
0000912a(7): MOV R9,qword ptr [0xf8 + R15]
00009131(2): JZ 0x000091a8
00009133(5): MOV ESI,0x30
00009138(5): MOV EDI,0x1
0000913d(5): MOV qword ptr [RSP + 0x10],R9
00009142(5): MOV qword ptr [RSP + 0x8],R8
00009147(5): MOV qword ptr [RSP + 0x18],RCX
0000914c(5): CALL 0x00001a70
00009151(5): MOV R8,qword ptr [RSP + 0x8]
00009156(5): MOV R9,qword ptr [RSP + 0x10]
0000915b(3): TEST RAX,RAX
0000915e(4): MOV qword ptr [R9 + R8*0x8],RAX
00009162(2): JZ 0x000091a1
00009164(4): ADD R8,0x1
00009168(4): ADD RBX,0x1
0000916c(5): MOV RCX,qword ptr [RSP + 0x18]
00009171(7): MOV qword ptr [0xe8 + R15],R8
00009178(4): CMP RBX,qword ptr [R12]
0000917c(4): MOV qword ptr [RAX + 0x8],RBP
00009180(3): MOV qword ptr [RAX],RCX
00009183(6): JL 0x000090ee
00009189(7): NOP dword ptr [RAX]
00009190(2): XOR EAX,EAX
00009192(4): ADD RSP,0x28
00009196(1): POP RBX
00009197(1): POP RBP
00009198(2): POP R12
0000919a(2): POP R13
0000919c(2): POP R14
0000919e(2): POP R15
000091a0(1): RET
000091a1(5): MOV EAX,0xc
000091a6(2): JMP 0x00009192
000091a8(4): LEA RAX,[R8 + R8*0x1]
000091ac(3): MOV RSI,R8
000091af(3): MOV RDI,R9
000091b2(4): SHL RSI,0x4
000091b6(5): MOV qword ptr [RSP + 0x8],RCX
000091bb(5): MOV qword ptr [RSP + 0x10],RAX
000091c0(5): CALL 0x00001b30
000091c5(3): TEST RAX,RAX
000091c8(3): MOV R9,RAX
000091cb(5): MOV RCX,qword ptr [RSP + 0x8]
000091d0(2): JZ 0x000091a1
000091d2(7): MOV qword ptr [0xf8 + R15],RAX
000091d9(5): MOV RAX,qword ptr [RSP + 0x10]
000091de(7): MOV R8,qword ptr [0xe8 + R15]
000091e5(7): MOV qword ptr [0xf0 + R15],RAX
000091ec(5): JMP 0x00009133
00009200(1): PUSH RBP
00009201(1): PUSH RBX
00009202(3): MOV RBP,RDI
00009205(4): SUB RSP,0x8
00009209(3): TEST RSI,RSI
0000920c(2): JS 0x00009260
0000920e(4): CMP qword ptr [RDI + 0x58],RSI
00009212(6): JZ 0x000092b8
00009218(7): CMP dword ptr [0x90 + RDI],0x1
0000921f(2): JLE 0x00009270
00009221(4): MOV RAX,qword ptr [RDI + 0x10]
00009225(2): JMP 0x0000923a
00009230(4): SUB RSI,0x1
00009234(4): CMP RSI,-0x1
00009238(2): JZ 0x00009260
0000923a(3): MOV EBX,dword ptr [RAX + RSI*0x4]
0000923d(3): CMP EBX,-0x1
00009240(2): JZ 0x00009230
00009242(7): CMP byte ptr [0x8e + RBP],0x0
00009249(2): JNZ 0x000092c8
0000924b(2): XOR EAX,EAX
0000924d(3): CMP EBX,0xa
00009250(2): JZ 0x0000929c
00009252(4): ADD RSP,0x8
00009256(1): POP RBX
00009257(1): POP RBP
00009258(1): RET
00009260(3): MOV EAX,dword ptr [RBP + 0x70]
00009263(4): ADD RSP,0x8
00009267(1): POP RBX
00009268(1): POP RBP
00009269(1): RET
00009270(4): MOV RAX,qword ptr [RDI + 0x8]
00009274(7): MOV RCX,qword ptr [0x80 + RDI]
0000927b(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
0000927f(3): MOV RDX,RAX
00009282(4): SAR RAX,0x6
00009286(4): MOV RCX,qword ptr [RCX + RAX*0x8]
0000928a(5): MOV EAX,0x1
0000928f(4): BT RCX,RDX
00009293(2): JC 0x00009252
00009295(2): XOR EAX,EAX
00009297(3): CMP DL,0xa
0000929a(2): JNZ 0x00009252
0000929c(2): XOR EAX,EAX
0000929e(7): CMP byte ptr [0x8d + RBP],0x0
000092a5(3): SETNZ AL
000092a8(4): ADD RSP,0x8
000092ac(2): ADD EAX,EAX
000092ae(1): POP RBX
000092af(1): POP RBP
000092b0(1): RET
000092b8(3): AND EDX,0x2
000092bb(3): CMP EDX,0x1
000092be(2): SBB EAX,EAX
000092c0(3): AND EAX,0x2
000092c3(3): ADD EAX,0x8
000092c6(2): JMP 0x00009252
000092c8(2): MOV EDI,EBX
000092ca(5): CALL 0x00001ab0
000092cf(2): TEST EAX,EAX
000092d1(2): JNZ 0x000092dc
000092d3(3): CMP EBX,0x5f
000092d6(6): JNZ 0x0000924b
000092dc(5): MOV EAX,0x1
000092e1(5): JMP 0x00009252
000092f0(4): MOV RAX,qword ptr [RDI + 0x8]
000092f4(4): MOVZX ECX,byte ptr [RAX + RDX*0x1]
000092f8(4): MOVZX EAX,byte ptr [RSI + 0x8]
000092fc(2): CMP AL,0x3
000092fe(6): JZ 0x000093b8
00009304(6): JBE 0x000093a0
0000930a(2): CMP AL,0x5
0000930c(2): JZ 0x00009320
0000930e(2): CMP AL,0x7
00009310(6): JNZ 0x000093b0
00009316(2): XOR EAX,EAX
00009318(2): TEST CL,CL
0000931a(6): JS 0x000093aa
00009320(3): CMP CL,0xa
00009323(6): JZ 0x000093e8
00009329(2): TEST CL,CL
0000932b(2): JNZ 0x00009340
0000932d(7): MOV RCX,qword ptr [0x98 + RDI]
00009334(2): XOR EAX,EAX
00009336(7): TEST byte ptr [0xd8 + RCX],0x80
0000933d(2): JNZ 0x000093aa
0000933f(1): NOP
00009340(1): PUSH RBX
00009341(3): MOV EBX,dword ptr [RSI + 0x8]
00009344(5): MOV EAX,0x1
00009349(6): TEST EBX,0x3ff00
0000934f(2): JZ 0x0000939c
00009351(3): MOV RSI,RDX
00009354(6): MOV EDX,dword ptr [0xa0 + RDI]
0000935a(3): SHR EBX,0x8
0000935d(5): CALL 0x00009200
00009362(2): MOV ECX,EBX
00009364(2): MOV EDX,EAX
00009366(5): AND CX,0x3ff
0000936b(3): TEST BL,0x4
0000936e(2): JZ 0x000093d8
00009370(2): XOR EAX,EAX
00009372(3): TEST DL,0x1
00009375(2): JZ 0x0000939c
00009377(3): AND EBX,0x8
0000937a(2): JNZ 0x0000939c
0000937c(3): TEST CL,0x20
0000937f(2): JZ 0x00009388
00009381(2): XOR EAX,EAX
00009383(3): TEST DL,0x2
00009386(2): JZ 0x0000939c
00009388(3): SHR EDX,0x3
0000938b(5): MOV EAX,0x1
00009390(3): AND EDX,0x1
00009393(6): AND ECX,0x80
00009399(3): CMOVNZ EAX,EDX
0000939c(1): POP RBX
0000939d(1): RET
000093a0(2): CMP AL,0x1
000093a2(2): JNZ 0x000093b0
000093a4(2): XOR EAX,EAX
000093a6(2): CMP byte ptr [RSI],CL
000093a8(2): JZ 0x00009340
000093aa(2): RET
000093b0(2): XOR EAX,EAX
000093b2(1): RET
000093b8(3): MOV R8,qword ptr [RSI]
000093bb(3): MOVZX EAX,CL
000093be(4): SAR RAX,0x6
000093c2(4): MOV R8,qword ptr [R8 + RAX*0x8]
000093c6(2): XOR EAX,EAX
000093c8(4): BT RAX,RCX
000093cc(6): JC 0x00009340
000093d2(2): RET
000093d8(3): AND EBX,0x8
000093db(2): JZ 0x0000937c
000093dd(2): TEST AL,0x1
000093df(2): JZ 0x0000937c
000093e1(2): XOR EAX,EAX
000093e3(1): POP RBX
000093e4(1): RET
000093e8(7): MOV RCX,qword ptr [0x98 + RDI]
000093ef(2): XOR EAX,EAX
000093f1(7): TEST byte ptr [0xd8 + RCX],0x40
000093f8(6): JNZ 0x00009340
000093fe(2): RET
00009400(2): PUSH R12
00009402(3): MOV R12,RDX
00009405(1): PUSH RBP
00009406(1): PUSH RBX
00009407(6): MOV EDX,dword ptr [0xa0 + RDI]
0000940d(3): MOV RBX,RSI
00009410(3): MOV RSI,RCX
00009413(3): MOV RBP,RDI
00009416(5): CALL 0x00009200
0000941b(3): TEST RBX,RBX
0000941e(6): JLE 0x000094c8
00009424(7): MOV RDX,qword ptr [0x98 + RBP]
0000942b(3): MOV R11D,EAX
0000942e(2): MOV EBP,EAX
00009430(3): AND EAX,0x1
00009433(4): MOV R9,qword ptr [R12]
00009437(2): XOR ESI,ESI
00009439(3): AND EBP,0x8
0000943c(4): AND R11D,0x2
00009440(3): MOV R10D,EAX
00009443(3): MOV R8,qword ptr [RDX]
00009446(2): JMP 0x00009459
00009450(4): ADD RSI,0x1
00009454(3): CMP RSI,RBX
00009457(2): JZ 0x000094c8
00009459(4): MOV RAX,qword ptr [R9 + RSI*0x8]
0000945d(3): MOV RDX,RAX
00009460(4): SHL RDX,0x4
00009464(3): ADD RDX,R8
00009467(3): MOV ECX,dword ptr [RDX + 0x8]
0000946a(3): SHR ECX,0x8
0000946d(2): MOV EDI,ECX
0000946f(5): AND DI,0x3ff
00009474(4): CMP byte ptr [RDX + 0x8],0x2
00009478(2): JNZ 0x00009450
0000947a(3): TEST DI,DI
0000947d(2): JZ 0x000094a5
0000947f(3): TEST CL,0x4
00009482(2): JZ 0x000094b0
00009484(3): TEST R10D,R10D
00009487(2): JZ 0x00009450
00009489(3): AND ECX,0x8
0000948c(2): JNZ 0x00009450
0000948e(4): TEST DIL,0x20
00009492(2): JZ 0x00009499
00009494(3): TEST R11D,R11D
00009497(2): JZ 0x00009450
00009499(6): AND EDI,0x80
0000949f(2): JZ 0x000094a5
000094a1(2): TEST EBP,EBP
000094a3(2): JZ 0x00009450
000094a5(1): POP RBX
000094a6(1): POP RBP
000094a7(2): POP R12
000094a9(1): RET
000094b0(3): AND ECX,0x8
000094b3(2): JZ 0x0000948e
000094b5(3): TEST R10D,R10D
000094b8(2): JNZ 0x00009450
000094ba(4): TEST DIL,0x20
000094be(2): JZ 0x00009499
000094c0(2): JMP 0x00009494
000094c8(1): POP RBX
000094c9(2): XOR EAX,EAX
000094cb(1): POP RBP
000094cc(2): POP R12
000094ce(1): RET
000094d0(2): PUSH R15
000094d2(2): PUSH R14
000094d4(3): MOV R15,RSI
000094d7(2): PUSH R13
000094d9(2): PUSH R12
000094db(3): MOV R10D,EDX
000094de(1): PUSH RBP
000094df(1): PUSH RBX
000094e0(3): MOV RBP,RSI
000094e3(3): MOV RBX,RDI
000094e6(4): SUB RSP,0x48
000094ea(9): MOV RAX,qword ptr FS:[0x28]
000094f3(5): MOV qword ptr [RSP + 0x38],RAX
000094f8(2): XOR EAX,EAX
000094fa(4): MOV RAX,qword ptr [RDI + 0x28]
000094fe(3): SUB RBP,RAX
00009501(3): CMP RAX,RSI
00009504(2): JLE 0x00009566
00009506(7): CMP dword ptr [0x90 + RDI],0x1
0000950d(6): JG 0x00009640
00009513(4): MOV RAX,qword ptr [RBX + 0x50]
00009517(8): MOV qword ptr [RBX + 0x30],0x0
0000951f(3): MOV RBP,R15
00009522(8): MOV qword ptr [RBX + 0x28],0x0
0000952a(8): MOV qword ptr [RBX + 0x38],0x0
00009532(7): MOV byte ptr [0x8c + RBX],0x0
00009539(4): MOV qword ptr [RBX + 0x58],RAX
0000953d(4): MOV RAX,qword ptr [RBX + 0x60]
00009541(4): MOV qword ptr [RBX + 0x68],RAX
00009545(3): MOV EAX,R10D
00009548(3): AND EAX,0x1
0000954b(3): CMP EAX,0x1
0000954e(2): SBB EAX,EAX
00009550(3): AND EAX,0x2
00009553(3): ADD EAX,0x4
00009556(7): CMP byte ptr [0x8b + RBX],0x0
0000955d(3): MOV dword ptr [RBX + 0x70],EAX
00009560(6): JZ 0x00009630
00009566(3): TEST RBP,RBP
00009569(2): JZ 0x000095ce
0000956b(4): MOV RAX,qword ptr [RBX + 0x38]
0000956f(7): MOVZX EDX,byte ptr [0x8c + RBX]
00009576(4): MOV R8,qword ptr [RBX + 0x30]
0000957a(3): CMP RAX,RBP
0000957d(6): JLE 0x000096a0
00009583(2): TEST DL,DL
00009585(6): JNZ 0x00009798
0000958b(4): LEA RSI,[RBP + -0x1]
0000958f(3): MOV EDX,R10D
00009592(3): MOV RDI,RBX
00009595(4): MOV qword ptr [RSP],R8
00009599(5): CALL 0x00009200
0000959e(4): MOV R8,qword ptr [RSP]
000095a2(3): MOV dword ptr [RBX + 0x70],EAX
000095a5(3): SUB R8,RBP
000095a8(7): CMP dword ptr [0x90 + RBX],0x1
000095af(6): JG 0x00009650
000095b5(7): CMP byte ptr [0x8b + RBX],0x0
000095bc(6): JNZ 0x00009960
000095c2(4): SUB qword ptr [RBX + 0x38],RBP
000095c6(4): MOV qword ptr [RBX + 0x30],R8
000095ca(4): ADD qword ptr [RBX + 0x8],RBP
000095ce(4): MOV RAX,qword ptr [RBX + 0x58]
000095d2(4): SUB qword ptr [RBX + 0x68],RBP
000095d6(4): MOV qword ptr [RBX + 0x28],R15
000095da(3): SUB RAX,RBP
000095dd(7): CMP dword ptr [0x90 + RBX],0x1
000095e4(4): MOV qword ptr [RBX + 0x58],RAX
000095e8(6): JLE 0x00009688
000095ee(7): CMP byte ptr [0x88 + RBX],0x0
000095f5(3): MOV RDI,RBX
000095f8(2): JZ 0x00009678
000095fa(5): CALL 0x00006340
000095ff(2): TEST EAX,EAX
00009601(2): JNZ 0x0000960d
00009603(8): MOV qword ptr [RBX + 0x48],0x0
0000960b(2): XOR EAX,EAX
0000960d(5): MOV RCX,qword ptr [RSP + 0x38]
00009612(9): XOR RCX,qword ptr FS:[0x28]
0000961b(6): JNZ 0x00009c6a
00009621(4): ADD RSP,0x48
00009625(1): POP RBX
00009626(1): POP RBP
00009627(2): POP R12
00009629(2): POP R13
0000962b(2): POP R14
0000962d(2): POP R15
0000962f(1): RET
00009630(3): MOV RAX,qword ptr [RBX]
00009633(4): MOV qword ptr [RBX + 0x8],RAX
00009637(5): JMP 0x00009566
00009640(8): MOV qword ptr [RDI + 0x20],0x0
00009648(5): JMP 0x00009513
00009650(4): MOV RDI,qword ptr [RBX + 0x10]
00009654(8): LEA RDX,[R8*0x4]
0000965c(4): LEA RSI,[RDI + RBP*0x4]
00009660(5): CALL 0x00001b90
00009665(4): MOV R8,qword ptr [RBX + 0x30]
00009669(3): SUB R8,RBP
0000966c(5): JMP 0x000095b5
00009678(5): CALL 0x00006170
0000967d(5): JMP 0x00009603
00009688(7): CMP byte ptr [0x8b + RBX],0x0
0000968f(6): JNZ 0x00009a40
00009695(4): MOV qword ptr [RBX + 0x30],RAX
00009699(5): JMP 0x00009603
000096a0(2): TEST DL,DL
000096a2(6): JNZ 0x00009b4d
000096a8(7): MOVSXD RDX,dword ptr [0x90 + RBX]
000096af(8): MOV qword ptr [RBX + 0x30],0x0
000096b7(4): MOV R11,qword ptr [RBX + 0x28]
000096bb(3): CMP EDX,0x1
000096be(6): JLE 0x00009aa8
000096c4(7): CMP byte ptr [0x89 + RBX],0x0
000096cb(6): JNZ 0x00009988
000096d1(4): LEA R14,[R11 + RAX*0x1]
000096d5(3): CMP R15,R14
000096d8(6): JLE 0x00009b1f
000096de(4): LEA RAX,[RBX + 0x20]
000096e2(5): LEA R13,[RSP + 0x24]
000096e7(5): MOV qword ptr [RSP + 0x10],RAX
000096ec(4): NOP dword ptr [RAX]
000096f0(4): MOV R12,qword ptr [RBX + 0x50]
000096f4(3): MOV RSI,qword ptr [RBX]
000096f7(3): MOV RDI,R13
000096fa(4): MOV RAX,qword ptr [RBX + 0x20]
000096fe(5): MOV RCX,qword ptr [RSP + 0x10]
00009703(5): MOV dword ptr [RSP + 0xc],R10D
00009708(4): MOV qword ptr [RSP],R8
0000970c(3): SUB R12,R14
0000970f(3): ADD RSI,R14
00009712(3): MOV RDX,R12
00009715(5): MOV qword ptr [RSP + 0x18],RAX
0000971a(5): CALL 0x00005880
0000971f(4): LEA RCX,[RAX + -0x1]
00009723(4): MOV EDX,dword ptr [RSP + 0x24]
00009727(4): MOV R8,qword ptr [RSP]
0000972b(5): MOV R10D,dword ptr [RSP + 0xc]
00009730(4): CMP RCX,-0x4
00009734(6): JA 0x00009b75
0000973a(3): ADD R14,RAX
0000973d(3): CMP R15,R14
00009740(2): JG 0x000096f0
00009742(3): SUB R14,R15
00009745(3): CMP EDX,-0x1
00009748(3): MOV R12,R14
0000974b(4): MOV qword ptr [RBX + 0x30],R14
0000974f(6): JZ 0x00009b29
00009755(7): CMP byte ptr [0x8e + RBX],0x0
0000975c(6): JNZ 0x00009bc9
00009762(2): XOR EAX,EAX
00009764(3): CMP EDX,0xa
00009767(2): JNZ 0x00009777
00009769(2): XOR EAX,EAX
0000976b(7): CMP byte ptr [0x8d + RBX],0x0
00009772(3): SETNZ AL
00009775(2): ADD EAX,EAX
00009777(3): MOV dword ptr [RBX + 0x70],EAX
0000977a(4): CMP R12,0x0
0000977e(6): JNZ 0x00009b9a
00009784(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000978b(4): MOV qword ptr [RBX + 0x38],R12
0000978f(5): JMP 0x0000994c
00009798(4): MOV R14,qword ptr [RBX + 0x18]
0000979c(3): MOV RCX,R8
0000979f(2): XOR ESI,ESI
000097a1(2): JMP 0x000097b3
000097a8(2): JGE 0x000097e3
000097aa(4): LEA RSI,[RAX + 0x1]
000097ae(3): CMP RSI,RCX
000097b1(2): JGE 0x000097d8
000097b3(4): LEA RDX,[RSI + RCX*0x1]
000097b7(3): MOV RAX,RDX
000097ba(4): SHR RAX,0x3f
000097be(3): ADD RAX,RDX
000097c1(3): SAR RAX,1
000097c4(4): MOV RDX,qword ptr [R14 + RAX*0x8]
000097c8(3): MOV R12,RAX
000097cb(3): CMP RDX,RBP
000097ce(2): JLE 0x000097a8
000097d0(3): MOV RCX,RAX
000097d3(2): JMP 0x000097ae
000097d8(4): LEA R12,[RAX + 0x1]
000097dc(3): CMP RDX,RBP
000097df(4): CMOVGE R12,RAX
000097e3(5): LEA R13,[R12 + -0x1]
000097e8(3): MOV EDX,R10D
000097eb(3): MOV RDI,RBX
000097ee(4): MOV qword ptr [RSP],R8
000097f2(3): MOV RSI,R13
000097f5(5): CALL 0x00009200
000097fa(3): CMP RBP,R12
000097fd(3): MOV dword ptr [RBX + 0x70],EAX
00009800(4): MOV R8,qword ptr [RSP]
00009804(6): JNZ 0x00009888
0000980a(3): CMP RBP,R8
0000980d(2): JGE 0x00009888
0000980f(4): CMP qword ptr [R14 + R12*0x8],RBP
00009813(2): JNZ 0x00009888
00009815(4): MOV RDI,qword ptr [RBX + 0x10]
00009819(3): SUB R8,RBP
0000981c(8): LEA RDX,[R8*0x4]
00009824(4): LEA RSI,[RDI + RBP*0x4]
00009828(5): CALL 0x00001b90
0000982d(4): MOV RDI,qword ptr [RBX + 0x8]
00009831(4): MOV RDX,qword ptr [RBX + 0x30]
00009835(4): LEA RSI,[RDI + RBP*0x1]
00009839(3): SUB RDX,RBP
0000983c(5): CALL 0x00001b90
00009841(4): MOV RAX,qword ptr [RBX + 0x30]
00009845(4): SUB qword ptr [RBX + 0x38],RBP
00009849(3): SUB RAX,RBP
0000984c(3): TEST RAX,RAX
0000984f(4): MOV qword ptr [RBX + 0x30],RAX
00009853(2): JLE 0x00009878
00009855(4): MOV RCX,qword ptr [RBX + 0x18]
00009859(2): XOR EAX,EAX
0000985b(4): LEA RSI,[RCX + RBP*0x8]
0000985f(1): NOP
00009860(4): MOV RDX,qword ptr [RSI + RAX*0x8]
00009864(3): SUB RDX,RBP
00009867(4): MOV qword ptr [RCX + RAX*0x8],RDX
0000986b(4): ADD RAX,0x1
0000986f(4): CMP qword ptr [RBX + 0x30],RAX
00009873(2): JG 0x00009860
00009875(3): NOP dword ptr [RAX]
00009878(7): MOVZX EAX,byte ptr [0x8b + RBX]
0000987f(5): JMP 0x0000994c
00009888(4): MOV RAX,qword ptr [RBX + 0x50]
0000988c(7): MOV byte ptr [0x8c + RBX],0x0
00009893(3): ADD RAX,RBP
00009896(3): SUB RAX,R15
00009899(4): MOV qword ptr [RBX + 0x58],RAX
0000989d(4): MOV RAX,qword ptr [RBX + 0x60]
000098a1(3): ADD RAX,RBP
000098a4(3): SUB RAX,R15
000098a7(3): TEST R12,R12
000098aa(4): MOV qword ptr [RBX + 0x68],RAX
000098ae(2): JLE 0x000098d3
000098b0(5): CMP qword ptr [R14 + R12*0x8 + -0x8],RBP
000098b5(2): JZ 0x000098cb
000098b7(2): JMP 0x000098d3
000098c0(5): CMP qword ptr [R14 + R13*0x8 + -0x8],RBP
000098c5(2): JNZ 0x000098d3
000098c7(4): SUB R13,0x1
000098cb(3): TEST R13,R13
000098ce(3): MOV R12,R13
000098d1(2): JNZ 0x000098c0
000098d3(3): CMP R12,R8
000098d6(6): JGE 0x00009b08
000098dc(4): MOV RAX,qword ptr [RBX + 0x10]
000098e0(2): JMP 0x000098f5
000098e8(4): ADD R12,0x1
000098ec(3): CMP R12,R8
000098ef(6): JZ 0x00009b10
000098f5(5): CMP dword ptr [RAX + R12*0x4],-0x1
000098fa(2): JZ 0x000098e8
000098fc(4): MOV RDX,qword ptr [R14 + R12*0x8]
00009900(3): SUB RDX,RBP
00009903(4): CMP RDX,0x0
00009907(4): MOV qword ptr [RBX + 0x30],RDX
0000990b(2): JZ 0x00009941
0000990d(2): JLE 0x0000992f
0000990f(4): MOV RAX,qword ptr [RBX + 0x10]
00009913(4): LEA RCX,[RAX + RDX*0x4]
00009917(9): NOP word ptr [RAX + RAX*0x1]
00009920(6): MOV dword ptr [RAX],0xffffffff
00009926(4): ADD RAX,0x4
0000992a(3): CMP RCX,RAX
0000992d(2): JNZ 0x00009920
0000992f(4): MOV RDI,qword ptr [RBX + 0x8]
00009933(5): MOV ESI,0xff
00009938(5): CALL 0x00001a10
0000993d(4): MOV RDX,qword ptr [RBX + 0x30]
00009941(7): MOVZX EAX,byte ptr [0x8b + RBX]
00009948(4): MOV qword ptr [RBX + 0x38],RDX
0000994c(2): TEST AL,AL
0000994e(6): JZ 0x000095ca
00009954(5): JMP 0x000095ce
00009960(4): MOV RDI,qword ptr [RBX + 0x8]
00009964(3): MOV RDX,R8
00009967(4): LEA RSI,[RDI + RBP*0x1]
0000996b(5): CALL 0x00001b90
00009970(7): MOVZX EAX,byte ptr [0x8b + RBX]
00009977(4): SUB qword ptr [RBX + 0x30],RBP
0000997b(4): SUB qword ptr [RBX + 0x38],RBP
0000997f(2): JMP 0x0000994c
00009988(3): MOV RCX,qword ptr [RBX]
0000998b(3): MOV RDI,RBP
0000998e(3): SUB RDI,RDX
00009991(3): MOV RDX,RDI
00009994(4): LEA R12,[RCX + R11*0x1]
00009998(3): ADD RDX,R12
0000999b(5): LEA RSI,[R12 + RBP*0x1 + -0x1]
000099a0(3): CMP RCX,RDX
000099a3(4): CMOVC RCX,RDX
000099a7(3): CMP RCX,RSI
000099aa(2): JBE 0x000099c5
000099ac(5): JMP 0x000096d1
000099b8(4): SUB RSI,0x1
000099bc(3): CMP RCX,RSI
000099bf(6): JA 0x000096d1
000099c5(3): MOVZX EDX,byte ptr [RSI]
000099c8(3): AND EDX,0xffffffc0
000099cb(3): CMP DL,0x80
000099ce(2): JZ 0x000099b8
000099d0(4): MOV RDX,qword ptr [RBX + 0x58]
000099d4(4): MOV RCX,qword ptr [RBX + 0x78]
000099d8(3): MOV R14,RSI
000099db(3): ADD RDX,R12
000099de(3): SUB RDX,RSI
000099e1(3): TEST RCX,RCX
000099e4(6): JNZ 0x00009c32
000099ea(5): LEA R13,[RSP + 0x24]
000099ef(3): ADD R12,RBP
000099f2(5): LEA RCX,[RSP + 0x28]
000099f7(3): SUB R12,R14
000099fa(5): MOV dword ptr [RSP + 0xc],R10D
000099ff(4): MOV qword ptr [RSP],R8
00009a03(3): MOV RDI,R13
00009a06(9): MOV qword ptr [RSP + 0x28],0x0
00009a0f(5): CALL 0x00005880
00009a14(3): CMP R12,RAX
00009a17(4): MOV R8,qword ptr [RSP]
00009a1b(5): MOV R10D,dword ptr [RSP + 0xc]
00009a20(2): JA 0x00009a2c
00009a22(4): CMP RAX,-0x3
00009a26(6): JBE 0x00009bf1
00009a2c(4): MOV R11,qword ptr [RBX + 0x28]
00009a30(4): MOV RAX,qword ptr [RBX + 0x38]
00009a34(5): JMP 0x000096d1
00009a40(7): CMP byte ptr [0x88 + RBX],0x0
00009a47(6): JNZ 0x00009b40
00009a4d(4): MOV RCX,qword ptr [RBX + 0x78]
00009a51(3): TEST RCX,RCX
00009a54(6): JZ 0x00009603
00009a5a(4): CMP qword ptr [RBX + 0x40],RAX
00009a5e(4): MOV RDX,qword ptr [RBX + 0x30]
00009a62(5): CMOVLE RAX,qword ptr [RBX + 0x40]
00009a67(3): CMP RAX,RDX
00009a6a(2): JG 0x00009a78
00009a6c(2): JMP 0x00009a98
00009a70(4): MOV R15,qword ptr [RBX + 0x28]
00009a74(4): MOV RCX,qword ptr [RBX + 0x78]
00009a78(3): MOV RSI,qword ptr [RBX]
00009a7b(3): ADD RSI,RDX
00009a7e(5): MOVZX ESI,byte ptr [RSI + R15*0x1]
00009a83(4): MOVZX ESI,byte ptr [RCX + RSI*0x1]
00009a87(4): MOV RCX,qword ptr [RBX + 0x8]
00009a8b(4): MOV byte ptr [RCX + RDX*0x1],SIL
00009a8f(4): ADD RDX,0x1
00009a93(3): CMP RAX,RDX
00009a96(2): JNZ 0x00009a70
00009a98(4): MOV qword ptr [RBX + 0x30],RDX
00009a9c(4): MOV qword ptr [RBX + 0x38],RDX
00009aa0(5): JMP 0x00009603
00009aa8(3): MOV RAX,qword ptr [RBX]
00009aab(4): MOV RDX,qword ptr [RBX + 0x78]
00009aaf(3): ADD RAX,RBP
00009ab2(3): TEST RDX,RDX
00009ab5(6): MOVZX EAX,byte ptr [R11 + RAX*0x1 + -0x1]
00009abb(8): MOV qword ptr [RBX + 0x38],0x0
00009ac3(2): JZ 0x00009ac9
00009ac5(4): MOVZX EAX,byte ptr [RDX + RAX*0x1]
00009ac9(7): MOV RCX,qword ptr [0x80 + RBX]
00009ad0(3): MOVZX EDX,AL
00009ad3(4): SAR RDX,0x6
00009ad7(4): MOV RCX,qword ptr [RCX + RDX*0x8]
00009adb(5): MOV EDX,0x1
00009ae0(4): BT RCX,RAX
00009ae4(2): JC 0x00009b00
00009ae6(2): XOR EDX,EDX
00009ae8(2): CMP AL,0xa
00009aea(2): JNZ 0x00009b00
00009aec(2): XOR EDX,EDX
00009aee(7): CMP byte ptr [0x8d + RBX],0x0
00009af5(3): SETNZ DL
00009af8(2): ADD EDX,EDX
00009afa(6): NOP word ptr [RAX + RAX*0x1]
00009b00(3): MOV dword ptr [RBX + 0x70],EDX
00009b03(5): JMP 0x00009878
00009b08(6): JNZ 0x000098fc
00009b0e(2): NOP
00009b10(8): MOV qword ptr [RBX + 0x30],0x0
00009b18(2): XOR EDX,EDX
00009b1a(5): JMP 0x00009941
00009b1f(3): SUB R14,R15
00009b22(3): MOV R12,R14
00009b25(4): MOV qword ptr [RBX + 0x30],R14
00009b29(4): LEA RSI,[R8 + -0x1]
00009b2d(3): MOV EDX,R10D
00009b30(3): MOV RDI,RBX
00009b33(5): CALL 0x00009200
00009b38(3): MOV dword ptr [RBX + 0x70],EAX
00009b3b(5): JMP 0x0000977a
00009b40(3): MOV RDI,RBX
00009b43(5): CALL 0x00006100
00009b48(5): JMP 0x00009603
00009b4d(4): MOV RDX,qword ptr [RBX + 0x50]
00009b51(7): MOV byte ptr [0x8c + RBX],0x0
00009b58(3): ADD RDX,RBP
00009b5b(3): SUB RDX,R15
00009b5e(4): MOV qword ptr [RBX + 0x58],RDX
00009b62(4): MOV RDX,qword ptr [RBX + 0x60]
00009b66(3): ADD RDX,RBP
00009b69(3): SUB RDX,R15
00009b6c(4): MOV qword ptr [RBX + 0x68],RDX
00009b70(5): JMP 0x000096a8
00009b75(3): TEST RAX,RAX
00009b78(2): JZ 0x00009bed
00009b7a(3): TEST R12,R12
00009b7d(2): JZ 0x00009bed
00009b7f(3): MOV RAX,qword ptr [RBX]
00009b82(5): MOVZX EDX,byte ptr [RAX + R14*0x1]
00009b87(5): MOV RAX,qword ptr [RSP + 0x18]
00009b8c(4): MOV qword ptr [RBX + 0x20],RAX
00009b90(5): MOV EAX,0x1
00009b95(5): JMP 0x0000973a
00009b9a(2): JLE 0x00009bb7
00009b9c(4): MOV RAX,qword ptr [RBX + 0x10]
00009ba0(4): LEA RDX,[RAX + R12*0x4]
00009ba4(4): NOP dword ptr [RAX]
00009ba8(6): MOV dword ptr [RAX],0xffffffff
00009bae(4): ADD RAX,0x4
00009bb2(3): CMP RDX,RAX
00009bb5(2): JNZ 0x00009ba8
00009bb7(7): CMP byte ptr [0x8b + RBX],0x0
00009bbe(2): JNZ 0x00009c18
00009bc0(4): MOV qword ptr [RBX + 0x38],R12
00009bc4(5): JMP 0x000095ca
00009bc9(2): MOV EDI,EDX
00009bcb(3): MOV dword ptr [RSP],EDX
00009bce(5): CALL 0x00001ab0
00009bd3(2): TEST EAX,EAX
00009bd5(2): JNZ 0x00009be3
00009bd7(3): MOV EDX,dword ptr [RSP]
00009bda(3): CMP EDX,0x5f
00009bdd(6): JNZ 0x00009762
00009be3(5): MOV EAX,0x1
00009be8(5): JMP 0x00009777
00009bed(2): XOR EDX,EDX
00009bef(2): JMP 0x00009b87
00009bf1(4): MOV EDX,dword ptr [RSP + 0x24]
00009bf5(3): SUB RAX,R12
00009bf8(8): MOV qword ptr [RBX + 0x20],0x0
00009c00(3): MOV R12,RAX
00009c03(4): MOV qword ptr [RBX + 0x30],RAX
00009c07(3): CMP EDX,-0x1
00009c0a(6): JNZ 0x00009755
00009c10(5): JMP 0x00009a2c
00009c18(4): MOV RDI,qword ptr [RBX + 0x8]
00009c1c(3): MOV RDX,R12
00009c1f(5): MOV ESI,0xff
00009c24(5): CALL 0x00001a10
00009c29(4): MOV R12,qword ptr [RBX + 0x30]
00009c2d(5): JMP 0x00009784
00009c32(4): CMP RDX,0x6
00009c36(5): MOV EDI,0x6
00009c3b(5): LEA R11,[RSP + 0x32]
00009c40(4): CMOVLE RDI,RDX
00009c44(3): SUB EDI,0x1
00009c47(2): TEST EDI,EDI
00009c49(3): MOVSXD RAX,EDI
00009c4c(2): JS 0x00009c62
00009c4e(4): MOVZX EDI,byte ptr [RSI + RAX*0x1]
00009c52(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
00009c56(4): MOV byte ptr [R11 + RAX*0x1],DIL
00009c5a(4): SUB RAX,0x1
00009c5e(2): TEST EAX,EAX
00009c60(2): JNS 0x00009c4e
00009c62(3): MOV RSI,R11
00009c65(5): JMP 0x000099ea
00009c6a(5): CALL 0x00001990
00009c6f(1): NOP
00009c70(2): PUSH R15
00009c72(2): PUSH R14
00009c74(3): MOV R14,RDX
00009c77(2): PUSH R13
00009c79(2): PUSH R12
00009c7b(4): LEA RDX,[RSI + RSI*0x2]
00009c7f(1): PUSH RBP
00009c80(1): PUSH RBX
00009c81(4): PXOR XMM0,XMM0
00009c85(4): SUB RSP,0x48
00009c89(9): MOV RAX,qword ptr FS:[0x28]
00009c92(5): MOV qword ptr [RSP + 0x38],RAX
00009c97(2): XOR EAX,EAX
00009c99(4): MOV RAX,qword ptr [RDI + 0x38]
00009c9d(9): MOV qword ptr [RSP + 0x30],0x0
00009ca6(5): MOVAPS xmmword ptr [RSP + 0x20],XMM0
00009cab(5): MOV qword ptr [RSP + 0x10],RCX
00009cb0(4): LEA RBP,[RAX + RDX*0x8]
00009cb4(4): MOV R10,qword ptr [RBP + 0x8]
00009cb8(3): TEST R10,R10
00009cbb(6): JLE 0x00009ea2
00009cc1(5): LEA RAX,[RSP + 0x20]
00009cc6(3): MOV R12,RDI
00009cc9(3): MOV R13,RSI
00009ccc(2): XOR EBX,EBX
00009cce(5): MOV qword ptr [RSP + 0x18],RAX
00009cd3(2): JMP 0x00009d2d
00009cd8(3): TEST RAX,RAX
00009cdb(6): JNZ 0x00009db8
00009ce1(4): MOV RDI,qword ptr [R14 + 0x8]
00009ce5(4): LEA RSI,[R14 + 0x10]
00009ce9(3): MOV RDX,R8
00009cec(5): CALL 0x00007420
00009cf1(3): TEST RAX,RAX
00009cf4(6): JZ 0x00009db8
00009cfa(5): MOV RDX,qword ptr [R12 + 0x38]
00009cff(5): MOV RSI,qword ptr [RSP + 0x10]
00009d04(5): MOV RDI,qword ptr [RSP + 0x18]
00009d09(3): ADD RDX,R9
00009d0c(5): CALL 0x00007f30
00009d11(2): TEST EAX,EAX
00009d13(6): JNZ 0x00009e90
00009d19(4): MOV R10,qword ptr [RBP + 0x8]
00009d1d(3): NOP dword ptr [RAX]
00009d20(4): ADD RBX,0x1
00009d24(3): CMP R10,RBX
00009d27(6): JLE 0x00009e00
00009d2d(4): MOV RAX,qword ptr [RBP + 0x10]
00009d31(4): MOV RAX,qword ptr [RAX + RBX*0x8]
00009d35(3): CMP R13,RAX
00009d38(2): JZ 0x00009d20
00009d3a(3): MOV RDX,RAX
00009d3d(4): SHL RDX,0x4
00009d41(4): ADD RDX,qword ptr [R12]
00009d45(4): TEST byte ptr [RDX + 0x8],0x8
00009d49(2): JZ 0x00009d20
00009d4b(4): LEA R9,[RAX + RAX*0x2]
00009d4f(5): MOV RCX,qword ptr [R12 + 0x28]
00009d54(4): LEA R11,[RBP + 0x10]
00009d58(3): MOV RDI,R10
00009d5b(4): SHL R9,0x3
00009d5f(3): MOV RSI,R11
00009d62(3): ADD RCX,R9
00009d65(4): MOV R15,qword ptr [RCX + 0x10]
00009d69(5): MOV qword ptr [RSP + 0x8],RCX
00009d6e(3): MOV R8,qword ptr [R15]
00009d71(3): MOV RDX,R8
00009d74(4): MOV qword ptr [RSP],R8
00009d78(5): CALL 0x00007420
00009d7d(5): MOV RCX,qword ptr [RSP + 0x8]
00009d82(4): MOV R8,qword ptr [RSP]
00009d86(5): CMP qword ptr [RCX + 0x8],0x1
00009d8b(6): JG 0x00009cd8
00009d91(3): TEST RAX,RAX
00009d94(2): JNZ 0x00009d20
00009d96(4): MOV RDI,qword ptr [R14 + 0x8]
00009d9a(4): LEA RSI,[R14 + 0x10]
00009d9e(3): MOV RDX,R8
00009da1(5): CALL 0x00007420
00009da6(3): TEST RAX,RAX
00009da9(6): JNZ 0x00009cfa
00009daf(5): JMP 0x00009d20
00009db8(4): MOV R15,qword ptr [R15 + 0x8]
00009dbc(3): TEST R15,R15
00009dbf(6): JLE 0x00009d20
00009dc5(3): MOV RDX,R15
00009dc8(3): MOV RSI,R11
00009dcb(3): MOV RDI,R10
00009dce(5): CALL 0x00007420
00009dd3(3): TEST RAX,RAX
00009dd6(6): JNZ 0x00009d20
00009ddc(4): MOV RDI,qword ptr [R14 + 0x8]
00009de0(4): LEA RSI,[R14 + 0x10]
00009de4(5): CALL 0x00007420
00009de9(3): TEST RAX,RAX
00009dec(6): JZ 0x00009d20
00009df2(5): JMP 0x00009cfa
00009e00(3): XOR R9D,R9D
00009e03(3): TEST R10,R10
00009e06(5): LEA R11,[RSP + 0x30]
00009e0b(2): JLE 0x00009e5c
00009e0d(3): NOP dword ptr [RAX]
00009e10(4): MOV RAX,qword ptr [RBP + 0x10]
00009e14(5): MOV RDI,qword ptr [RSP + 0x28]
00009e19(3): MOV RSI,R11
00009e1c(4): MOV R10,qword ptr [RAX + R9*0x8]
00009e20(3): MOV RDX,R10
00009e23(5): CALL 0x00007420
00009e28(3): TEST RAX,RAX
00009e2b(2): JNZ 0x00009e52
00009e2d(4): LEA RBX,[R14 + 0x10]
00009e31(4): MOV RDI,qword ptr [R14 + 0x8]
00009e35(3): MOV RSI,RBX
00009e38(5): CALL 0x00007420
00009e3d(4): SUB RAX,0x1
00009e41(3): MOV RDX,RAX
00009e44(2): JS 0x00009e52
00009e46(4): LEA RDI,[R14 + 0x8]
00009e4a(3): MOV RSI,RBX
00009e4d(5): CALL 0x000075a0
00009e52(4): ADD R9,0x1
00009e56(4): CMP qword ptr [RBP + 0x8],R9
00009e5a(2): JG 0x00009e10
00009e5c(5): MOV RDI,qword ptr [RSP + 0x30]
00009e61(5): CALL 0x00001880
00009e66(2): XOR EAX,EAX
00009e68(5): MOV RSI,qword ptr [RSP + 0x38]
00009e6d(9): XOR RSI,qword ptr FS:[0x28]
00009e76(2): JNZ 0x00009ea6
00009e78(4): ADD RSP,0x48
00009e7c(1): POP RBX
00009e7d(1): POP RBP
00009e7e(2): POP R12
00009e80(2): POP R13
00009e82(2): POP R14
00009e84(2): POP R15
00009e86(1): RET
00009e90(5): MOV RDI,qword ptr [RSP + 0x30]
00009e95(3): MOV dword ptr [RSP],EAX
00009e98(5): CALL 0x00001880
00009e9d(3): MOV EAX,dword ptr [RSP]
00009ea0(2): JMP 0x00009e68
00009ea2(2): XOR EDI,EDI
00009ea4(2): JMP 0x00009e61
00009ea6(5): CALL 0x00001990
00009eab(5): NOP dword ptr [RAX + RAX*0x1]
00009eb0(2): PUSH R15
00009eb2(2): PUSH R14
00009eb4(3): MOV R15,RDI
00009eb7(2): PUSH R13
00009eb9(2): PUSH R12
00009ebb(5): MOV EDI,0x3800
00009ec0(1): PUSH RBP
00009ec1(1): PUSH RBX
00009ec2(7): SUB RSP,0x108
00009ec9(9): MOV RAX,qword ptr FS:[0x28]
00009ed2(8): MOV qword ptr [0xf8 + RSP],RAX
00009eda(2): XOR EAX,EAX
00009edc(5): MOV qword ptr [RSP + 0x8],RSI
00009ee1(5): CALL 0x00001ac0
00009ee6(3): TEST RAX,RAX
00009ee9(5): MOV qword ptr [RSP + 0x18],RAX
00009eee(6): JZ 0x0000a2c0
00009ef4(5): MOV RAX,qword ptr [RSP + 0x18]
00009ef9(4): PXOR XMM0,XMM0
00009efd(7): LEA RBX,[0x1800 + RAX]
00009f04(5): MOV RAX,qword ptr [RSP + 0x8]
00009f09(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
00009f11(5): MOV qword ptr [RSP + 0x40],RBX
00009f16(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
00009f1e(5): CMP qword ptr [RAX + 0x10],0x0
00009f23(8): MOV qword ptr [RAX + 0x58],0x0
00009f2b(8): MOV qword ptr [RAX + 0x60],0x0
00009f33(6): JLE 0x0000a9aa
00009f39(5): MOV qword ptr [RSP + 0x30],R15
00009f3e(2): XOR EBP,EBP
00009f40(9): MOV qword ptr [RSP + 0x10],0x0
00009f49(3): MOV R15,RBX
00009f4c(5): MOV RBX,qword ptr [RSP + 0x10]
00009f51(8): LEA RAX,[RBX*0x8]
00009f59(5): MOV qword ptr [RSP + 0x20],RAX
00009f5e(5): MOV RAX,qword ptr [RSP + 0x8]
00009f63(4): MOV RAX,qword ptr [RAX + 0x18]
00009f67(4): MOV R13,qword ptr [RAX + RBX*0x8]
00009f6b(5): MOV RAX,qword ptr [RSP + 0x30]
00009f70(4): SHL R13,0x4
00009f74(3): ADD R13,qword ptr [RAX]
00009f77(5): MOVZX R14D,byte ptr [R13 + 0x8]
00009f7c(4): MOV EAX,dword ptr [R13 + 0x8]
00009f80(3): SHR EAX,0x8
00009f83(4): AND AX,0x3ff
00009f87(4): CMP R14D,0x1
00009f8b(6): JZ 0x0000a2f0
00009f91(4): CMP R14D,0x3
00009f95(6): JZ 0x0000a760
00009f9b(4): CMP R14D,0x5
00009f9f(6): JZ 0x0000a620
00009fa5(4): CMP R14D,0x7
00009fa9(6): JZ 0x0000a789
00009faf(5): MOV RBX,qword ptr [RSP + 0x8]
00009fb4(6): ADD qword ptr [RSP + 0x10],0x1
00009fba(5): MOV RAX,qword ptr [RSP + 0x10]
00009fbf(4): CMP RAX,qword ptr [RBX + 0x10]
00009fc3(2): JL 0x00009f4c
00009fc5(3): TEST RBP,RBP
00009fc8(5): MOV R15,qword ptr [RSP + 0x30]
00009fcd(6): JLE 0x0000aa29
00009fd3(4): LEA RBX,[RBP + 0x1]
00009fd7(9): MOV qword ptr [RSP + 0x78],0x0
00009fe0(5): MOV qword ptr [RSP + 0x70],RBX
00009fe5(4): SHL RBX,0x3
00009fe9(3): MOV RDI,RBX
00009fec(5): CALL 0x00001ac0
00009ff1(3): TEST RAX,RAX
00009ff4(3): MOV R12,RAX
00009ff7(8): MOV qword ptr [0x80 + RSP],RAX
00009fff(6): JZ 0x0000a7ff
0000a005(10): MOV RAX,0xaaaaaaaaaaaa855
0000a00f(8): MOV dword ptr [RSP + 0x6c],0x0
0000a017(3): CMP RBP,RAX
0000a01a(6): JG 0x0000a7ff
0000a020(5): LEA RAX,[RBP + RBP*0x2]
0000a025(4): SHL RAX,0x3
0000a029(3): MOV RDI,RAX
0000a02c(5): MOV qword ptr [RSP + 0x58],RAX
0000a031(5): CALL 0x00001ac0
0000a036(3): TEST RAX,RAX
0000a039(5): MOV qword ptr [RSP + 0x10],RAX
0000a03e(6): JZ 0x0000a7ff
0000a044(5): MOV RAX,qword ptr [RSP + 0x10]
0000a049(4): SUB RBX,0x8
0000a04d(5): MOV R12,qword ptr [RSP + 0x40]
0000a052(4): PXOR XMM0,XMM0
0000a056(5): LEA R14,[RSP + 0x70]
0000a05b(5): MOV qword ptr [RSP + 0x20],RBP
0000a060(5): MOV byte ptr [RSP + 0x4f],0x0
0000a065(3): MOV RBP,R15
0000a068(3): ADD RAX,RBX
0000a06b(5): MOV qword ptr [RSP + 0x50],R12
0000a070(3): ADD RBX,RAX
0000a073(5): MOV qword ptr [RSP + 0x30],RAX
0000a078(5): MOV RAX,qword ptr [RSP + 0x18]
0000a07d(8): MOVAPS xmmword ptr [0xd0 + RSP],XMM0
0000a085(5): MOV qword ptr [RSP + 0x38],RBX
0000a08a(2): XOR EBX,EBX
0000a08c(4): LEA R13,[RAX + 0x8]
0000a090(5): LEA RAX,[RSP + 0x6c]
0000a095(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0000a09d(5): MOV qword ptr [RSP + 0x28],RAX
0000a0a2(9): MOV qword ptr [RSP + 0x78],0x0
0000a0ab(5): CMP qword ptr [R13],0x0
0000a0b0(2): JLE 0x0000a0f8
0000a0b2(3): XOR R15D,R15D
0000a0b5(3): NOP dword ptr [RAX]
0000a0b8(4): MOV RAX,qword ptr [R13 + 0x8]
0000a0bc(4): MOV RDX,qword ptr [RAX + R15*0x8]
0000a0c0(4): MOV RAX,qword ptr [RBP + 0x18]
0000a0c4(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000a0c8(4): CMP RAX,-0x1
0000a0cc(2): JZ 0x0000a0ee
0000a0ce(4): LEA RDX,[RAX + RAX*0x2]
0000a0d2(4): MOV RAX,qword ptr [RBP + 0x30]
0000a0d6(3): MOV RDI,R14
0000a0d9(4): LEA RSI,[RAX + RDX*0x8]
0000a0dd(5): CALL 0x00007940
0000a0e2(2): TEST EAX,EAX
0000a0e4(4): MOV dword ptr [RSP + 0x6c],EAX
0000a0e8(6): JNZ 0x0000a7e8
0000a0ee(4): ADD R15,0x1
0000a0f2(4): CMP qword ptr [R13],R15
0000a0f6(2): JG 0x0000a0b8
0000a0f8(5): MOV RDI,qword ptr [RSP + 0x28]
0000a0fd(2): XOR ECX,ECX
0000a0ff(3): MOV RSI,RBP
0000a102(3): MOV RDX,R14
0000a105(5): CALL 0x00008770
0000a10a(5): MOV RSI,qword ptr [RSP + 0x10]
0000a10f(3): TEST RAX,RAX
0000a112(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000a116(6): JZ 0x0000a8c8
0000a11c(4): CMP byte ptr [RAX + 0x68],0x0
0000a120(6): JS 0x0000a840
0000a126(5): MOV RDI,qword ptr [RSP + 0x30]
0000a12b(5): MOV RSI,qword ptr [RSP + 0x38]
0000a130(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000a134(5): MOV RAX,qword ptr [RSP + 0x10]
0000a139(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000a13d(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000a141(8): LEA RDX,[0xd0 + RSP]
0000a149(2): XOR EAX,EAX
0000a14b(4): MOV RCX,qword ptr [RDX + RAX*0x1]
0000a14f(4): OR RCX,qword ptr [R12 + RAX*0x1]
0000a153(4): MOV qword ptr [RDX + RAX*0x1],RCX
0000a157(4): ADD RAX,0x8
0000a15b(4): CMP RAX,0x20
0000a15f(2): JNZ 0x0000a14b
0000a161(4): ADD RBX,0x1
0000a165(4): ADD R13,0x18
0000a169(4): ADD R12,0x20
0000a16d(5): CMP RBX,qword ptr [RSP + 0x20]
0000a172(6): JNZ 0x0000a0a2
0000a178(5): CMP byte ptr [RSP + 0x4f],0x0
0000a17d(3): MOV R15,RBP
0000a180(5): MOV RBP,qword ptr [RSP + 0x20]
0000a185(5): MOV qword ptr [RSP + 0x20],RDX
0000a18a(6): JNZ 0x0000a8d9
0000a190(5): MOV ESI,0x100
0000a195(5): MOV EDI,0x8
0000a19a(5): CALL 0x00001a70
0000a19f(3): MOV R11,RAX
0000a1a2(5): MOV RAX,qword ptr [RSP + 0x8]
0000a1a7(3): TEST R11,R11
0000a1aa(4): MOV qword ptr [RAX + 0x58],R11
0000a1ae(6): JZ 0x0000a7ed
0000a1b4(5): MOV RBX,qword ptr [RSP + 0x40]
0000a1b9(5): MOV R12,qword ptr [RSP + 0x10]
0000a1be(3): XOR R9D,R9D
0000a1c1(5): MOV R13,qword ptr [RSP + 0x30]
0000a1c6(5): MOV RDX,qword ptr [RSP + 0x20]
0000a1cb(4): ADD RBX,0x20
0000a1cf(4): MOV RAX,qword ptr [RDX + R9*0x1]
0000a1d3(3): TEST RAX,RAX
0000a1d6(2): JZ 0x0000a204
0000a1d8(3): MOV RSI,R9
0000a1db(5): MOV ECX,0x1
0000a1e0(4): SHL RSI,0x6
0000a1e4(3): ADD RSI,R11
0000a1e7(9): NOP word ptr [RAX + RAX*0x1]
0000a1f0(2): TEST AL,0x1
0000a1f2(6): JNZ 0x0000a958
0000a1f8(3): ADD RCX,RCX
0000a1fb(4): ADD RSI,0x8
0000a1ff(3): SHR RAX,1
0000a202(2): JNZ 0x0000a1f0
0000a204(4): ADD R9,0x8
0000a208(4): CMP R9,0x20
0000a20c(2): JNZ 0x0000a1cf
0000a20e(8): TEST byte ptr [0xd1 + RSP],0x4
0000a216(2): JZ 0x0000a252
0000a218(2): XOR EAX,EAX
0000a21a(5): MOV RDX,qword ptr [RSP + 0x50]
0000a21f(2): JMP 0x0000a22e
0000a221(4): ADD RAX,0x1
0000a225(4): ADD RDX,0x20
0000a229(3): CMP RAX,RBP
0000a22c(2): JZ 0x0000a252
0000a22e(7): TEST qword ptr [RDX],0x400
0000a235(2): JZ 0x0000a221
0000a237(5): MOV RBX,qword ptr [RSP + 0x38]
0000a23c(5): CMP byte ptr [RSP + 0x4f],0x0
0000a241(4): MOV RAX,qword ptr [RBX + RAX*0x8]
0000a245(4): MOV qword ptr [R11 + 0x50],RAX
0000a249(2): JZ 0x0000a252
0000a24b(7): MOV qword ptr [0x850 + R11],RAX
0000a252(5): MOV RDI,qword ptr [RSP + 0x10]
0000a257(5): CALL 0x00001880
0000a25c(8): MOV RDI,qword ptr [0x80 + RSP]
0000a264(5): CALL 0x00001880
0000a269(5): MOV RAX,qword ptr [RSP + 0x18]
0000a26e(5): MOV RBX,qword ptr [RSP + 0x58]
0000a273(4): LEA RBP,[RAX + 0x10]
0000a277(3): ADD RBX,RBP
0000a27a(4): MOV RDI,qword ptr [RBP]
0000a27e(4): ADD RBP,0x18
0000a282(5): CALL 0x00001880
0000a287(3): CMP RBX,RBP
0000a28a(2): JNZ 0x0000a27a
0000a28c(5): MOV RDI,qword ptr [RSP + 0x18]
0000a291(5): CALL 0x00001880
0000a296(5): MOV EAX,0x1
0000a29b(2): JMP 0x0000a2c2
0000a29d(3): TEST RBP,RBP
0000a2a0(8): MOV qword ptr [RBX + 0x8],0x0
0000a2a8(7): MOV qword ptr [RBX],0x0
0000a2af(6): JNZ 0x0000a5e0
0000a2b5(5): MOV RDI,qword ptr [RSP + 0x18]
0000a2ba(5): CALL 0x00001880
0000a2bf(1): NOP
0000a2c0(2): XOR EAX,EAX
0000a2c2(8): MOV RBX,qword ptr [0xf8 + RSP]
0000a2ca(9): XOR RBX,qword ptr FS:[0x28]
0000a2d3(6): JNZ 0x0000aa24
0000a2d9(7): ADD RSP,0x108
0000a2e0(1): POP RBX
0000a2e1(1): POP RBP
0000a2e2(2): POP R12
0000a2e4(2): POP R13
0000a2e6(2): POP R14
0000a2e8(2): POP R15
0000a2ea(1): RET
0000a2f0(5): MOVZX ECX,byte ptr [R13]
0000a2f5(8): LEA R12,[0x90 + RSP]
0000a2fd(5): MOV EDI,0x1
0000a302(3): MOV RDX,RCX
0000a305(3): AND ECX,0x3f
0000a308(4): SHR RDX,0x3
0000a30c(3): SHL RDI,CL
0000a30f(3): AND EDX,0x18
0000a312(4): OR qword ptr [R12 + RDX*0x1],RDI
0000a316(3): TEST AX,AX
0000a319(6): JZ 0x0000a3e0
0000a31f(2): TEST AL,0x20
0000a321(6): JNZ 0x0000a690
0000a327(2): TEST AL,0x80
0000a329(6): JNZ 0x0000a5c4
0000a32f(2): TEST AL,0x4
0000a331(2): JZ 0x0000a385
0000a333(4): CMP R14D,0x1
0000a337(6): JZ 0x0000a715
0000a33d(5): MOV R8,qword ptr [RSP + 0x30]
0000a342(8): CMP dword ptr [0xb4 + R8],0x1
0000a34a(6): JLE 0x0000a7a2
0000a350(4): MOV RDI,qword ptr [R8 + 0x78]
0000a354(2): XOR ESI,ESI
0000a356(2): XOR ECX,ECX
0000a358(4): MOV RDX,qword ptr [RDI + RCX*0x8]
0000a35c(3): NOT RDX
0000a35f(8): OR RDX,qword ptr [0xb8 + R8 + RCX*0x8]
0000a367(4): AND RDX,qword ptr [R12 + RCX*0x8]
0000a36b(4): MOV qword ptr [R12 + RCX*0x8],RDX
0000a36f(4): ADD RCX,0x1
0000a373(3): OR RSI,RDX
0000a376(4): CMP RCX,0x4
0000a37a(2): JNZ 0x0000a358
0000a37c(3): TEST RSI,RSI
0000a37f(6): JZ 0x00009faf
0000a385(2): TEST AL,0x8
0000a387(2): JZ 0x0000a3e0
0000a389(4): CMP R14D,0x1
0000a38d(6): JZ 0x0000a6c1
0000a393(5): MOV RDI,qword ptr [RSP + 0x30]
0000a398(7): CMP dword ptr [0xb4 + RDI],0x1
0000a39f(6): JLE 0x0000a6de
0000a3a5(4): MOV RSI,qword ptr [RDI + 0x78]
0000a3a9(2): XOR ECX,ECX
0000a3ab(2): XOR EDX,EDX
0000a3ad(8): MOV RAX,qword ptr [0xb8 + RDI + RDX*0x8]
0000a3b5(4): AND RAX,qword ptr [RSI + RDX*0x8]
0000a3b9(3): NOT RAX
0000a3bc(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000a3c0(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000a3c4(4): ADD RDX,0x1
0000a3c8(3): OR RCX,RAX
0000a3cb(4): CMP RDX,0x4
0000a3cf(2): JNZ 0x0000a3ad
0000a3d1(3): TEST RCX,RCX
0000a3d4(6): JZ 0x00009faf
0000a3da(6): NOP word ptr [RAX + RAX*0x1]
0000a3e0(2): XOR EBX,EBX
0000a3e2(3): TEST RBP,RBP
0000a3e5(6): JLE 0x0000a54b
0000a3eb(5): MOV qword ptr [RSP + 0x28],R13
0000a3f0(3): MOV R13,R15
0000a3f3(5): NOP dword ptr [RAX + RAX*0x1]
0000a3f8(3): MOV R10,RBX
0000a3fb(4): SHL R10,0x5
0000a3ff(4): CMP R14D,0x1
0000a403(2): JNZ 0x0000a428
0000a405(5): MOV RAX,qword ptr [RSP + 0x28]
0000a40a(3): MOVZX EDX,byte ptr [RAX]
0000a40d(3): MOV RAX,RDX
0000a410(4): SHR RAX,0x3
0000a414(3): AND EAX,0x18
0000a417(3): ADD RAX,R13
0000a41a(4): MOV RAX,qword ptr [RAX + R10*0x1]
0000a41e(4): BT RAX,RDX
0000a422(6): JNC 0x0000a53b
0000a428(5): LEA RDI,[R13 + R10*0x1]
0000a42d(8): LEA RSI,[0xb0 + RSP]
0000a435(2): XOR ECX,ECX
0000a437(2): XOR EAX,EAX
0000a439(4): MOV RDX,qword ptr [R12 + RAX*0x8]
0000a43d(4): AND RDX,qword ptr [RDI + RAX*0x8]
0000a441(4): MOV qword ptr [RSI + RAX*0x8],RDX
0000a445(4): ADD RAX,0x1
0000a449(3): OR RCX,RDX
0000a44c(4): CMP RAX,0x4
0000a450(2): JNZ 0x0000a439
0000a452(3): TEST RCX,RCX
0000a455(6): JZ 0x0000a53b
0000a45b(8): LEA R11,[0xd0 + RSP]
0000a463(3): XOR R15D,R15D
0000a466(3): XOR R9D,R9D
0000a469(2): XOR ECX,ECX
0000a46b(4): MOV RSI,qword ptr [R12 + RCX*0x8]
0000a46f(4): MOV RAX,qword ptr [RDI + RCX*0x8]
0000a473(3): MOV RDX,RSI
0000a476(3): NOT RDX
0000a479(3): AND RDX,RAX
0000a47c(3): NOT RAX
0000a47f(3): AND RAX,RSI
0000a482(4): MOV qword ptr [R11 + RCX*0x8],RDX
0000a486(3): OR R9,RDX
0000a489(4): MOV qword ptr [R12 + RCX*0x8],RAX
0000a48d(4): ADD RCX,0x1
0000a491(3): OR R15,RAX
0000a494(4): CMP RCX,0x4
0000a498(2): JNZ 0x0000a46b
0000a49a(5): MOV RDI,qword ptr [RSP + 0x18]
0000a49f(4): LEA RAX,[RBX + RBX*0x2]
0000a4a3(3): TEST R9,R9
0000a4a6(4): LEA RDX,[RDI + RAX*0x8]
0000a4aa(2): JZ 0x0000a514
0000a4ac(3): MOV RAX,RBP
0000a4af(9): MOVDQA XMM0,xmmword ptr [0xd0 + RSP]
0000a4b8(4): SHL RAX,0x5
0000a4bc(3): MOV RSI,RDX
0000a4bf(5): MOV qword ptr [RSP + 0x38],RDX
0000a4c4(3): ADD RAX,R13
0000a4c7(3): MOVUPS xmmword ptr [RAX],XMM0
0000a4ca(9): MOVDQA XMM0,xmmword ptr [0xe0 + RSP]
0000a4d3(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000a4d7(5): LEA RAX,[RBP + RBP*0x2]
0000a4dc(4): LEA RDI,[RDI + RAX*0x8]
0000a4e0(9): MOVDQA XMM0,xmmword ptr [0xb0 + RSP]
0000a4e9(6): MOVUPS xmmword ptr [R13 + R10*0x1],XMM0
0000a4ef(9): MOVDQA XMM0,xmmword ptr [0xc0 + RSP]
0000a4f8(6): MOVUPS xmmword ptr [R13 + R10*0x1 + 0x10],XMM0
0000a4fe(5): CALL 0x00008580
0000a503(2): TEST EAX,EAX
0000a505(6): JNZ 0x0000a5e0
0000a50b(5): MOV RDX,qword ptr [RSP + 0x38]
0000a510(4): ADD RBP,0x1
0000a514(5): MOV RAX,qword ptr [RSP + 0x8]
0000a519(5): MOV RSI,qword ptr [RSP + 0x20]
0000a51e(3): MOV RDI,RDX
0000a521(4): MOV RAX,qword ptr [RAX + 0x18]
0000a525(4): MOV RSI,qword ptr [RAX + RSI*0x1]
0000a529(5): CALL 0x00005ee0
0000a52e(2): TEST AL,AL
0000a530(6): JZ 0x0000a5e0
0000a536(3): TEST R15,R15
0000a539(2): JZ 0x0000a548
0000a53b(4): ADD RBX,0x1
0000a53f(3): CMP RBX,RBP
0000a542(6): JL 0x0000a3f8
0000a548(3): MOV R15,R13
0000a54b(3): CMP RBP,RBX
0000a54e(6): JNZ 0x00009faf
0000a554(3): MOV RAX,RBP
0000a557(9): MOVDQA XMM0,xmmword ptr [0x90 + RSP]
0000a560(4): SHL RAX,0x5
0000a564(5): MOV RBX,qword ptr [RSP + 0x20]
0000a569(5): MOV EDI,0x8
0000a56e(3): ADD RAX,R15
0000a571(3): MOVUPS xmmword ptr [RAX],XMM0
0000a574(9): MOVDQA XMM0,xmmword ptr [0xa0 + RSP]
0000a57d(4): MOVUPS xmmword ptr [RAX + 0x10],XMM0
0000a581(5): MOV RAX,qword ptr [RSP + 0x8]
0000a586(4): MOV RAX,qword ptr [RAX + 0x18]
0000a58a(4): MOV R13,qword ptr [RAX + RBX*0x1]
0000a58e(5): MOV RBX,qword ptr [RSP + 0x18]
0000a593(5): LEA RAX,[RBP + RBP*0x2]
0000a598(4): LEA RBX,[RBX + RAX*0x8]
0000a59c(7): MOV qword ptr [RBX],0x1
0000a5a3(8): MOV qword ptr [RBX + 0x8],0x1
0000a5ab(5): CALL 0x00001ac0
0000a5b0(3): TEST RAX,RAX
0000a5b3(4): MOV qword ptr [RBX + 0x10],RAX
0000a5b7(6): JZ 0x0000a29d
0000a5bd(3): MOV qword ptr [RAX],R13
0000a5c0(4): ADD RBP,0x1
0000a5c4(4): PXOR XMM0,XMM0
0000a5c8(5): MOVAPS xmmword ptr [R12],XMM0
0000a5cd(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000a5d3(5): JMP 0x00009faf
0000a5e0(5): MOV RAX,qword ptr [RSP + 0x18]
0000a5e5(4): LEA RBX,[RAX + 0x10]
0000a5e9(5): LEA RAX,[RBP + RBP*0x2]
0000a5ee(4): LEA RBP,[RBX + RAX*0x8]
0000a5f2(6): NOP word ptr [RAX + RAX*0x1]
0000a5f8(3): MOV RDI,qword ptr [RBX]
0000a5fb(4): ADD RBX,0x18
0000a5ff(5): CALL 0x00001880
0000a604(3): CMP RBP,RBX
0000a607(2): JNZ 0x0000a5f8
0000a609(5): MOV RDI,qword ptr [RSP + 0x18]
0000a60e(5): CALL 0x00001880
0000a613(5): JMP 0x0000a2c0
0000a620(5): MOV RSI,qword ptr [RSP + 0x30]
0000a625(7): CMP dword ptr [0xb4 + RSI],0x1
0000a62c(6): JLE 0x0000a735
0000a632(4): MOV RSI,qword ptr [RSI + 0x78]
0000a636(8): LEA R12,[0x90 + RSP]
0000a63e(2): XOR EDX,EDX
0000a640(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000a644(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000a648(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000a64c(4): ADD RDX,0x8
0000a650(4): CMP RDX,0x20
0000a654(2): JNZ 0x0000a640
0000a656(5): MOV RBX,qword ptr [RSP + 0x30]
0000a65b(7): MOV RDX,qword ptr [0xd8 + RBX]
0000a662(3): TEST DL,0x40
0000a665(2): JNZ 0x0000a673
0000a667(12): AND qword ptr [0x90 + RSP],0xfffffbff
0000a673(6): AND EDX,0x80
0000a679(6): JZ 0x0000a316
0000a67f(9): AND qword ptr [0x90 + RSP],-0x2
0000a688(5): JMP 0x0000a316
0000a690(8): MOV RDX,qword ptr [0x90 + RSP]
0000a698(4): PXOR XMM0,XMM0
0000a69c(3): AND DH,0x4
0000a69f(5): MOVAPS xmmword ptr [R12],XMM0
0000a6a4(6): MOVAPS xmmword ptr [R12 + 0x10],XMM0
0000a6aa(6): JZ 0x00009faf
0000a6b0(12): MOV qword ptr [0x90 + RSP],0x400
0000a6bc(5): JMP 0x0000a327
0000a6c1(5): TEST byte ptr [R13 + 0xa],0x40
0000a6c6(6): JNZ 0x0000a5c4
0000a6cc(5): MOV RDI,qword ptr [RSP + 0x30]
0000a6d1(7): CMP dword ptr [0xb4 + RDI],0x1
0000a6d8(6): JG 0x0000a3a5
0000a6de(5): MOV RSI,qword ptr [RSP + 0x30]
0000a6e3(2): XOR ECX,ECX
0000a6e5(2): XOR EDX,EDX
0000a6e7(8): MOV RAX,qword ptr [0xb8 + RSI + RDX*0x8]
0000a6ef(3): NOT RAX
0000a6f2(4): AND RAX,qword ptr [R12 + RDX*0x8]
0000a6f6(4): MOV qword ptr [R12 + RDX*0x8],RAX
0000a6fa(4): ADD RDX,0x1
0000a6fe(3): OR RCX,RAX
0000a701(4): CMP RDX,0x4
0000a705(2): JNZ 0x0000a6e7
0000a707(3): TEST RCX,RCX
0000a70a(6): JNZ 0x0000a3e0
0000a710(5): JMP 0x00009faf
0000a715(5): TEST byte ptr [R13 + 0xa],0x40
0000a71a(6): JZ 0x0000a5c4
0000a720(5): MOV R8,qword ptr [RSP + 0x30]
0000a725(8): CMP dword ptr [0xb4 + R8],0x1
0000a72d(6): JG 0x0000a350
0000a733(2): JMP 0x0000a7a2
0000a735(4): PCMPEQD XMM0,XMM0
0000a739(8): LEA R12,[0x90 + RSP]
0000a741(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000a749(8): MOVAPS xmmword ptr [0xa0 + RSP],XMM0
0000a751(5): JMP 0x0000a656
0000a760(4): MOV RSI,qword ptr [R13]
0000a764(8): LEA R12,[0x90 + RSP]
0000a76c(2): XOR EDX,EDX
0000a76e(4): MOV RCX,qword ptr [R12 + RDX*0x1]
0000a772(4): OR RCX,qword ptr [RSI + RDX*0x1]
0000a776(4): MOV qword ptr [R12 + RDX*0x1],RCX
0000a77a(4): ADD RDX,0x8
0000a77e(4): CMP RDX,0x20
0000a782(2): JNZ 0x0000a76e
0000a784(5): JMP 0x0000a316
0000a789(4): PCMPEQD XMM0,XMM0
0000a78d(8): LEA R12,[0x90 + RSP]
0000a795(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000a79d(5): JMP 0x0000a656
0000a7a2(5): MOV RDI,qword ptr [RSP + 0x30]
0000a7a7(2): XOR ESI,ESI
0000a7a9(2): XOR EDX,EDX
0000a7ab(4): MOV RCX,qword ptr [R12 + RDX*0x8]
0000a7af(8): AND RCX,qword ptr [0xb8 + RDI + RDX*0x8]
0000a7b7(4): MOV qword ptr [R12 + RDX*0x8],RCX
0000a7bb(4): ADD RDX,0x1
0000a7bf(3): OR RSI,RCX
0000a7c2(4): CMP RDX,0x4
0000a7c6(2): JNZ 0x0000a7ab
0000a7c8(3): TEST RSI,RSI
0000a7cb(6): JNZ 0x0000a385
0000a7d1(5): JMP 0x00009faf
0000a7d6(4): MOV EDX,dword ptr [RSP + 0x6c]
0000a7da(2): TEST EDX,EDX
0000a7dc(6): JZ 0x0000a867
0000a7e2(6): NOP word ptr [RAX + RAX*0x1]
0000a7e8(5): MOV RBP,qword ptr [RSP + 0x20]
0000a7ed(5): MOV RDI,qword ptr [RSP + 0x10]
0000a7f2(5): CALL 0x00001880
0000a7f7(8): MOV R12,qword ptr [0x80 + RSP]
0000a7ff(3): MOV RDI,R12
0000a802(5): CALL 0x00001880
0000a807(5): MOV RAX,qword ptr [RSP + 0x18]
0000a80c(4): LEA RBX,[RAX + 0x10]
0000a810(5): LEA RAX,[RBP + RBP*0x2]
0000a815(4): LEA RBP,[RBX + RAX*0x8]
0000a819(7): NOP dword ptr [RAX]
0000a820(3): MOV RDI,qword ptr [RBX]
0000a823(4): ADD RBX,0x18
0000a827(5): CALL 0x00001880
0000a82c(3): CMP RBP,RBX
0000a82f(2): JNZ 0x0000a820
0000a831(5): MOV RDI,qword ptr [RSP + 0x18]
0000a836(5): CALL 0x00001880
0000a83b(5): JMP 0x0000a2c0
0000a840(5): MOV RDI,qword ptr [RSP + 0x28]
0000a845(5): MOV ECX,0x1
0000a84a(3): MOV RDX,R14
0000a84d(3): MOV RSI,RBP
0000a850(5): CALL 0x00008770
0000a855(5): MOV RDI,qword ptr [RSP + 0x30]
0000a85a(3): TEST RAX,RAX
0000a85d(4): MOV qword ptr [RDI + RBX*0x8],RAX
0000a861(6): JZ 0x0000a7d6
0000a867(5): MOV RDI,qword ptr [RSP + 0x10]
0000a86c(4): CMP RAX,qword ptr [RDI + RBX*0x8]
0000a870(2): JZ 0x0000a88b
0000a872(5): MOVZX EDI,byte ptr [RSP + 0x4f]
0000a877(7): CMP dword ptr [0xb4 + RBP],0x2
0000a87e(5): MOV EAX,0x1
0000a883(3): CMOVGE EDI,EAX
0000a886(5): MOV byte ptr [RSP + 0x4f],DIL
0000a88b(5): MOV RDI,qword ptr [RSP + 0x28]
0000a890(3): MOV RSI,RBP
0000a893(5): MOV ECX,0x2
0000a898(3): MOV RDX,R14
0000a89b(5): CALL 0x00008770
0000a8a0(5): MOV RSI,qword ptr [RSP + 0x38]
0000a8a5(3): TEST RAX,RAX
0000a8a8(4): MOV qword ptr [RSI + RBX*0x8],RAX
0000a8ac(6): JNZ 0x0000a141
0000a8b2(4): MOV EAX,dword ptr [RSP + 0x6c]
0000a8b6(2): TEST EAX,EAX
0000a8b8(6): JZ 0x0000a141
0000a8be(5): JMP 0x0000a7e8
0000a8c8(4): MOV ECX,dword ptr [RSP + 0x6c]
0000a8cc(2): TEST ECX,ECX
0000a8ce(6): JZ 0x0000a11c
0000a8d4(5): JMP 0x0000a7e8
0000a8d9(5): MOV ESI,0x200
0000a8de(5): MOV EDI,0x8
0000a8e3(5): CALL 0x00001a70
0000a8e8(3): MOV R11,RAX
0000a8eb(5): MOV RAX,qword ptr [RSP + 0x8]
0000a8f0(3): TEST R11,R11
0000a8f3(4): MOV qword ptr [RAX + 0x60],R11
0000a8f7(6): JZ 0x0000a7ed
0000a8fd(5): MOV R13,qword ptr [RSP + 0x40]
0000a902(5): MOV R10,qword ptr [RSP + 0x10]
0000a907(3): MOV R12,R11
0000a90a(5): MOV R14,qword ptr [RSP + 0x30]
0000a90f(5): MOV RDX,qword ptr [RSP + 0x20]
0000a914(2): XOR EBX,EBX
0000a916(4): ADD R13,0x20
0000a91a(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000a91e(3): TEST RAX,RAX
0000a921(2): JZ 0x0000a93f
0000a923(3): MOV RSI,R12
0000a926(5): MOV ECX,0x1
0000a92b(2): TEST AL,0x1
0000a92d(6): JNZ 0x0000a9dc
0000a933(3): ADD RCX,RCX
0000a936(4): ADD RSI,0x8
0000a93a(3): SHR RAX,1
0000a93d(2): JNZ 0x0000a92b
0000a93f(4): ADD RBX,0x8
0000a943(7): ADD R12,0x200
0000a94a(4): CMP RBX,0x20
0000a94e(2): JNZ 0x0000a91a
0000a950(5): JMP 0x0000a20e
0000a958(5): MOV RDI,qword ptr [RSP + 0x18]
0000a95d(8): TEST qword ptr [0x1800 + RDI + R9*0x1],RCX
0000a965(2): JNZ 0x0000a9d7
0000a967(4): LEA RDI,[RBX + R9*0x1]
0000a96b(3): XOR R8D,R8D
0000a96e(2): NOP
0000a970(3): MOV R10,qword ptr [RDI]
0000a973(4): ADD R8,0x1
0000a977(4): ADD RDI,0x20
0000a97b(3): AND R10,RCX
0000a97e(3): TEST R10,R10
0000a981(2): JZ 0x0000a970
0000a983(4): SHL R8,0x3
0000a987(8): TEST qword ptr [0xb8 + R15 + R9*0x1],RCX
0000a98f(2): JZ 0x0000a99e
0000a991(5): MOV RDI,qword ptr [R13 + R8*0x1]
0000a996(3): MOV qword ptr [RSI],RDI
0000a999(5): JMP 0x0000a1f8
0000a99e(4): MOV RDI,qword ptr [R12 + R8*0x1]
0000a9a2(3): MOV qword ptr [RSI],RDI
0000a9a5(5): JMP 0x0000a1f8
0000a9aa(5): MOV RDI,qword ptr [RSP + 0x18]
0000a9af(5): CALL 0x00001880
0000a9b4(5): MOV ESI,0x100
0000a9b9(5): MOV EDI,0x8
0000a9be(5): CALL 0x00001a70
0000a9c3(5): MOV RBX,qword ptr [RSP + 0x8]
0000a9c8(3): TEST RAX,RAX
0000a9cb(4): MOV qword ptr [RBX + 0x58],RAX
0000a9cf(3): SETNZ AL
0000a9d2(5): JMP 0x0000a2c2
0000a9d7(3): XOR R8D,R8D
0000a9da(2): JMP 0x0000a987
0000a9dc(5): MOV RDI,qword ptr [RSP + 0x18]
0000a9e1(8): TEST qword ptr [0x1800 + RDI + RBX*0x1],RCX
0000a9e9(2): JNZ 0x0000aa20
0000a9eb(5): LEA R9,[R13 + RBX*0x1]
0000a9f0(3): XOR R8D,R8D
0000a9f3(3): MOV R15,qword ptr [R9]
0000a9f6(4): ADD R8,0x1
0000a9fa(4): ADD R9,0x20
0000a9fe(3): MOV RDI,R8
0000aa01(3): AND R15,RCX
0000aa04(3): TEST R15,R15
0000aa07(2): JZ 0x0000a9f3
0000aa09(4): MOV R8,qword ptr [R10 + RDI*0x8]
0000aa0d(3): MOV qword ptr [RSI],R8
0000aa10(4): MOV RDI,qword ptr [R14 + RDI*0x8]
0000aa14(7): MOV qword ptr [0x800 + RSI],RDI
0000aa1b(5): JMP 0x0000a933
0000aa20(2): XOR EDI,EDI
0000aa22(2): JMP 0x0000aa09
0000aa24(5): CALL 0x00001990
0000aa29(5): MOV RDI,qword ptr [RSP + 0x18]
0000aa2e(5): CALL 0x00001880
0000aa33(3): TEST RBP,RBP
0000aa36(6): JNZ 0x0000a2c0
0000aa3c(5): JMP 0x0000a9b4
0000aa50(4): CMP byte ptr [RSI + 0x30],0x10
0000aa54(2): JZ 0x0000aab8
0000aa56(1): PUSH RBP
0000aa57(1): PUSH RBX
0000aa58(3): MOV RBX,RSI
0000aa5b(3): MOV RBP,RDI
0000aa5e(4): SUB RSP,0x8
0000aa62(4): MOV qword ptr [RBX + 0x18],RSI
0000aa66(4): MOV RDX,qword ptr [RBX + 0x30]
0000aa6a(4): MOV RSI,qword ptr [RSI + 0x28]
0000aa6e(5): CALL 0x00006bc0
0000aa73(4): CMP RAX,-0x1
0000aa77(3): MOV RDX,RAX
0000aa7a(4): MOV qword ptr [RBX + 0x38],RAX
0000aa7e(2): JZ 0x0000aad0
0000aa80(2): XOR EAX,EAX
0000aa82(4): CMP byte ptr [RBX + 0x30],0xc
0000aa86(2): JNZ 0x0000aaac
0000aa88(3): MOV ECX,dword ptr [RBX + 0x28]
0000aa8b(4): SHL RDX,0x4
0000aa8f(4): ADD RDX,qword ptr [RBP]
0000aa93(6): AND ECX,0x3ff
0000aa99(3): SHL ECX,0x8
0000aa9c(2): MOV ESI,ECX
0000aa9e(3): MOV ECX,dword ptr [RDX + 0x8]
0000aaa1(6): AND ECX,0xfffc00ff
0000aaa7(2): OR ECX,ESI
0000aaa9(3): MOV dword ptr [RDX + 0x8],ECX
0000aaac(4): ADD RSP,0x8
0000aab0(1): POP RBX
0000aab1(1): POP RBP
0000aab2(1): RET
0000aab8(4): MOV RAX,qword ptr [RSI + 0x8]
0000aabc(4): MOV RDX,qword ptr [RAX + 0x18]
0000aac0(4): MOV RAX,qword ptr [RAX + 0x38]
0000aac4(4): MOV qword ptr [RSI + 0x18],RDX
0000aac8(4): MOV qword ptr [RSI + 0x38],RAX
0000aacc(2): XOR EAX,EAX
0000aace(1): RET
0000aad0(5): MOV EAX,0xc
0000aad5(2): JMP 0x0000aaac
0000aae0(2): PUSH R12
0000aae2(1): PUSH RBP
0000aae3(3): MOV RBP,RDI
0000aae6(1): PUSH RBX
0000aae7(4): CMP qword ptr [RDI],0x0
0000aaeb(2): JLE 0x0000ab22
0000aaed(2): XOR EBX,EBX
0000aaef(3): XOR R12D,R12D
0000aaf2(6): NOP word ptr [RAX + RAX*0x1]
0000aaf8(4): MOV RAX,qword ptr [RBP + 0x10]
0000aafc(4): ADD R12,0x1
0000ab00(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x28]
0000ab05(5): CALL 0x00001880
0000ab0a(4): MOV RAX,qword ptr [RBP + 0x10]
0000ab0e(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000ab13(4): ADD RBX,0x30
0000ab17(5): CALL 0x00001880
0000ab1c(4): CMP R12,qword ptr [RBP]
0000ab20(2): JL 0x0000aaf8
0000ab22(1): POP RBX
0000ab23(4): MOV RDI,qword ptr [RBP + 0x10]
0000ab27(1): POP RBP
0000ab28(2): POP R12
0000ab2a(5): JMP 0x00001880
0000ab30(2): PUSH R12
0000ab32(1): PUSH RBP
0000ab33(1): PUSH RBX
0000ab34(3): MOV RAX,qword ptr [RDI]
0000ab37(4): SUB RAX,0x1
0000ab3b(3): TEST RAX,RAX
0000ab3e(3): MOV qword ptr [RDI],RAX
0000ab41(2): JS 0x0000aba5
0000ab43(4): LEA RBX,[RAX + RAX*0x2]
0000ab47(3): MOV RAX,qword ptr [RSI]
0000ab4a(3): MOV R12,RSI
0000ab4d(4): SHL RCX,0x4
0000ab51(3): MOV RBP,R9
0000ab54(3): MOV RDI,R8
0000ab57(4): SHL RBX,0x4
0000ab5b(3): ADD RAX,RBX
0000ab5e(3): MOV RSI,qword ptr [RAX]
0000ab61(3): MOV qword ptr [RDX],RSI
0000ab64(4): MOV RSI,qword ptr [RAX + 0x10]
0000ab68(3): MOV RDX,RCX
0000ab6b(5): CALL 0x00001a90
0000ab70(4): MOV RDI,qword ptr [RBP + 0x10]
0000ab74(5): CALL 0x00001880
0000ab79(4): MOV RAX,qword ptr [R12]
0000ab7d(5): MOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]
0000ab82(5): CALL 0x00001880
0000ab87(4): ADD RBX,qword ptr [R12]
0000ab8b(5): MOVDQU XMM0,xmmword ptr [RBX + 0x18]
0000ab90(4): MOVAPS xmmword ptr [RBP],XMM0
0000ab94(4): MOV RAX,qword ptr [RBX + 0x28]
0000ab98(4): MOV qword ptr [RBP + 0x10],RAX
0000ab9c(4): MOV RAX,qword ptr [RBX + 0x8]
0000aba0(1): POP RBX
0000aba1(1): POP RBP
0000aba2(2): POP R12
0000aba4(1): RET
0000aba5(7): LEA RCX,[0x154e0]
0000abac(7): LEA RSI,[0x14f20]
0000abb3(7): LEA RDI,[0x14f88]
0000abba(5): MOV EDX,0x555
0000abbf(5): CALL 0x00001a00
0000abc4(2): NOP
0000abc6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000abd0(1): PUSH RBP
0000abd1(1): PUSH RBX
0000abd2(3): MOV RBP,RDI
0000abd5(3): MOV RDI,RSI
0000abd8(3): MOV RBX,RSI
0000abdb(4): SUB RSP,0x8
0000abdf(5): CALL 0x00001980
0000abe4(4): CMP RAX,0x1
0000abe8(2): JNZ 0x0000ac10
0000abea(3): MOVZX ECX,byte ptr [RBX]
0000abed(3): MOV RDX,RCX
0000abf0(3): AND ECX,0x3f
0000abf3(4): SHR RDX,0x3
0000abf7(3): SHL RAX,CL
0000abfa(3): AND EDX,0x18
0000abfd(5): OR qword ptr [RBP + RDX*0x1],RAX
0000ac02(4): ADD RSP,0x8
0000ac06(2): XOR EAX,EAX
0000ac08(1): POP RBX
0000ac09(1): POP RBP
0000ac0a(1): RET
0000ac10(4): ADD RSP,0x8
0000ac14(5): MOV EAX,0x3
0000ac19(1): POP RBX
0000ac1a(1): POP RBP
0000ac1b(1): RET
0000ac20(2): PUSH R14
0000ac22(2): PUSH R13
0000ac24(3): MOV R13,RCX
0000ac27(2): PUSH R12
0000ac29(1): PUSH RBP
0000ac2a(3): MOV R12,R9
0000ac2d(1): PUSH RBX
0000ac2e(3): MOV RBP,RDI
0000ac31(3): MOV RBX,RSI
0000ac34(4): SUB RSP,0x10
0000ac38(9): TEST qword ptr [RSP + 0x40],0x400000
0000ac41(2): JZ 0x0000ac68
0000ac43(7): LEA RDI,[0x14f97]
0000ac4a(5): MOV ECX,0x6
0000ac4f(3): MOV RSI,R9
0000ac52(2): CMPSB.REPE RDI,RSI
0000ac54(3): SETA AL
0000ac57(2): SBB AL,0x0
0000ac59(2): TEST AL,AL
0000ac5b(6): JNZ 0x0000ad56
0000ac61(7): LEA R12,[0x14f91]
0000ac68(4): MOV RCX,qword ptr [R13]
0000ac6c(3): CMP qword ptr [R8],RCX
0000ac6f(3): MOV RAX,qword ptr [RDX]
0000ac72(6): JZ 0x0000ad89
0000ac78(4): LEA RDX,[RCX + 0x1]
0000ac7c(3): MOV RDI,R12
0000ac7f(4): MOV qword ptr [R13],RDX
0000ac83(4): LEA R13,[RAX + RCX*0x8]
0000ac87(5): CALL 0x00001a50
0000ac8c(7): LEA RDI,[0x14fa3]
0000ac93(4): MOV qword ptr [R13],RAX
0000ac97(5): MOV ECX,0x6
0000ac9c(3): MOV RSI,R12
0000ac9f(2): CMPSB.REPE RDI,RSI
0000aca1(3): SETA AL
0000aca4(2): SBB AL,0x0
0000aca6(2): TEST AL,AL
0000aca8(2): JZ 0x0000ad18
0000acaa(7): LEA RDI,[0x14fa9]
0000acb1(5): MOV ECX,0x6
0000acb6(3): MOV RSI,R12
0000acb9(2): CMPSB.REPE RDI,RSI
0000acbb(3): SETA AL
0000acbe(2): SBB AL,0x0
0000acc0(2): TEST AL,AL
0000acc2(6): JNZ 0x0000adc8
0000acc8(5): CALL 0x00001c70
0000accd(2): XOR ECX,ECX
0000accf(3): TEST RBP,RBP
0000acd2(3): MOV RDX,qword ptr [RAX]
0000acd5(5): MOV EDI,0x1
0000acda(6): JNZ 0x0000af9a
0000ace0(4): TEST byte ptr [RDX + RCX*0x2],0x2
0000ace4(2): JZ 0x0000acf7
0000ace6(3): MOV RAX,RCX
0000ace9(3): MOV RSI,RDI
0000acec(4): SAR RAX,0x6
0000acf0(3): SHL RSI,CL
0000acf3(4): OR qword ptr [RBX + RAX*0x8],RSI
0000acf7(4): ADD RCX,0x1
0000acfb(7): CMP RCX,0x100
0000ad02(2): JNZ 0x0000ace0
0000ad04(2): XOR EAX,EAX
0000ad06(4): ADD RSP,0x10
0000ad0a(1): POP RBX
0000ad0b(1): POP RBP
0000ad0c(2): POP R12
0000ad0e(2): POP R13
0000ad10(2): POP R14
0000ad12(1): RET
0000ad18(5): CALL 0x00001c70
0000ad1d(2): XOR ECX,ECX
0000ad1f(3): TEST RBP,RBP
0000ad22(3): MOV RDX,qword ptr [RAX]
0000ad25(5): MOV EDI,0x1
0000ad2a(6): JNZ 0x0000af1a
0000ad30(4): TEST byte ptr [RDX + RCX*0x2],0x8
0000ad34(2): JZ 0x0000ad47
0000ad36(3): MOV RAX,RCX
0000ad39(3): MOV RSI,RDI
0000ad3c(4): SAR RAX,0x6
0000ad40(3): SHL RSI,CL
0000ad43(4): OR qword ptr [RBX + RAX*0x8],RSI
0000ad47(4): ADD RCX,0x1
0000ad4b(7): CMP RCX,0x100
0000ad52(2): JNZ 0x0000ad30
0000ad54(2): JMP 0x0000ad04
0000ad56(7): LEA RDI,[0x14f9d]
0000ad5d(5): MOV ECX,0x6
0000ad62(3): MOV RSI,R9
0000ad65(2): CMPSB.REPE RDI,RSI
0000ad67(4): MOV RCX,qword ptr [R13]
0000ad6b(3): SETA AL
0000ad6e(2): SBB AL,0x0
0000ad70(2): TEST AL,AL
0000ad72(7): LEA RAX,[0x14f91]
0000ad79(4): CMOVZ R12,RAX
0000ad7d(3): CMP qword ptr [R8],RCX
0000ad80(3): MOV RAX,qword ptr [RDX]
0000ad83(6): JNZ 0x0000ac78
0000ad89(5): LEA R14,[RCX + RCX*0x1 + 0x1]
0000ad8e(3): MOV RDI,RAX
0000ad91(5): MOV qword ptr [RSP + 0x8],R8
0000ad96(4): MOV qword ptr [RSP],RDX
0000ad9a(8): LEA RSI,[R14*0x8]
0000ada2(5): CALL 0x00001b30
0000ada7(3): TEST RAX,RAX
0000adaa(6): JZ 0x0000b0c8
0000adb0(4): MOV RDX,qword ptr [RSP]
0000adb4(5): MOV R8,qword ptr [RSP + 0x8]
0000adb9(3): MOV qword ptr [RDX],RAX
0000adbc(3): MOV qword ptr [R8],R14
0000adbf(4): MOV RCX,qword ptr [R13]
0000adc3(5): JMP 0x0000ac78
0000adc8(7): LEA RDI,[0x14f9d]
0000adcf(5): MOV ECX,0x6
0000add4(3): MOV RSI,R12
0000add7(2): CMPSB.REPE RDI,RSI
0000add9(3): SETA AL
0000addc(2): SBB AL,0x0
0000adde(2): TEST AL,AL
0000ade0(2): JZ 0x0000ae4a
0000ade2(7): LEA RDI,[0x14faf]
0000ade9(5): MOV ECX,0x6
0000adee(3): MOV RSI,R12
0000adf1(2): CMPSB.REPE RDI,RSI
0000adf3(3): SETA AL
0000adf6(2): SBB AL,0x0
0000adf8(2): TEST AL,AL
0000adfa(6): JNZ 0x0000ae92
0000ae00(5): CALL 0x00001c70
0000ae05(2): XOR ECX,ECX
0000ae07(3): TEST RBP,RBP
0000ae0a(3): MOV RDX,qword ptr [RAX]
0000ae0d(5): MOV EDI,0x1
0000ae12(6): JNZ 0x0000b16e
0000ae18(8): NOP dword ptr [RAX + RAX*0x1]
0000ae20(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x20
0000ae25(2): JZ 0x0000ae38
0000ae27(3): MOV RAX,RCX
0000ae2a(3): MOV RSI,RDI
0000ae2d(4): SAR RAX,0x6
0000ae31(3): SHL RSI,CL
0000ae34(4): OR qword ptr [RBX + RAX*0x8],RSI
0000ae38(4): ADD RCX,0x1
0000ae3c(7): CMP RCX,0x100
0000ae43(2): JNZ 0x0000ae20
0000ae45(5): JMP 0x0000ad04
0000ae4a(5): CALL 0x00001c70
0000ae4f(2): XOR ECX,ECX
0000ae51(3): TEST RBP,RBP
0000ae54(3): MOV RDX,qword ptr [RAX]
0000ae57(5): MOV EDI,0x1
0000ae5c(6): JNZ 0x0000b032
0000ae62(6): NOP word ptr [RAX + RAX*0x1]
0000ae68(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x2
0000ae6d(2): JZ 0x0000ae80
0000ae6f(3): MOV RAX,RCX
0000ae72(3): MOV RSI,RDI
0000ae75(4): SAR RAX,0x6
0000ae79(3): SHL RSI,CL
0000ae7c(4): OR qword ptr [RBX + RAX*0x8],RSI
0000ae80(4): ADD RCX,0x1
0000ae84(7): CMP RCX,0x100
0000ae8b(2): JNZ 0x0000ae68
0000ae8d(5): JMP 0x0000ad04
0000ae92(7): LEA RDI,[0x14f91]
0000ae99(5): MOV ECX,0x6
0000ae9e(3): MOV RSI,R12
0000aea1(2): CMPSB.REPE RDI,RSI
0000aea3(3): SETA AL
0000aea6(2): SBB AL,0x0
0000aea8(2): TEST AL,AL
0000aeaa(6): JZ 0x0000af53
0000aeb0(7): LEA RDI,[0x14fce]
0000aeb7(5): MOV ECX,0x6
0000aebc(3): MOV RSI,R12
0000aebf(2): CMPSB.REPE RDI,RSI
0000aec1(3): SETA AL
0000aec4(2): SBB AL,0x0
0000aec6(2): TEST AL,AL
0000aec8(6): JNZ 0x0000afd3
0000aece(5): CALL 0x00001c70
0000aed3(2): XOR ECX,ECX
0000aed5(3): TEST RBP,RBP
0000aed8(3): MOV RDX,qword ptr [RAX]
0000aedb(5): MOV EDI,0x1
0000aee0(6): JNZ 0x0000b38a
0000aee6(10): NOP word ptr CS:[RAX + RAX*0x1]
0000aef0(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x8
0000aef5(2): JZ 0x0000af08
0000aef7(3): MOV RAX,RCX
0000aefa(3): MOV RSI,RDI
0000aefd(4): SAR RAX,0x6
0000af01(3): SHL RSI,CL
0000af04(4): OR qword ptr [RBX + RAX*0x8],RSI
0000af08(4): ADD RCX,0x1
0000af0c(7): CMP RCX,0x100
0000af13(2): JNZ 0x0000aef0
0000af15(5): JMP 0x0000ad04
0000af1a(2): XOR EAX,EAX
0000af1c(4): NOP dword ptr [RAX]
0000af20(4): TEST byte ptr [RDX + RAX*0x2],0x8
0000af24(2): JZ 0x0000af42
0000af26(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000af2b(3): MOV R10,RDI
0000af2e(3): MOV RSI,RCX
0000af31(3): AND ECX,0x3f
0000af34(4): SHR RSI,0x3
0000af38(3): SHL R10,CL
0000af3b(3): AND ESI,0x18
0000af3e(4): OR qword ptr [RBX + RSI*0x1],R10
0000af42(4): ADD RAX,0x1
0000af46(6): CMP RAX,0x100
0000af4c(2): JNZ 0x0000af20
0000af4e(5): JMP 0x0000ad04
0000af53(5): CALL 0x00001c70
0000af58(2): XOR ECX,ECX
0000af5a(3): TEST RBP,RBP
0000af5d(3): MOV RDX,qword ptr [RAX]
0000af60(5): MOV EDI,0x1
0000af65(6): JNZ 0x0000b138
0000af6b(5): NOP dword ptr [RAX + RAX*0x1]
0000af70(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x4
0000af75(2): JZ 0x0000af88
0000af77(3): MOV RAX,RCX
0000af7a(3): MOV RSI,RDI
0000af7d(4): SAR RAX,0x6
0000af81(3): SHL RSI,CL
0000af84(4): OR qword ptr [RBX + RAX*0x8],RSI
0000af88(4): ADD RCX,0x1
0000af8c(7): CMP RCX,0x100
0000af93(2): JNZ 0x0000af70
0000af95(5): JMP 0x0000ad04
0000af9a(2): XOR EAX,EAX
0000af9c(4): NOP dword ptr [RAX]
0000afa0(4): TEST byte ptr [RDX + RAX*0x2],0x2
0000afa4(2): JZ 0x0000afc2
0000afa6(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000afab(3): MOV R11,RDI
0000afae(3): MOV RSI,RCX
0000afb1(3): AND ECX,0x3f
0000afb4(4): SHR RSI,0x3
0000afb8(3): SHL R11,CL
0000afbb(3): AND ESI,0x18
0000afbe(4): OR qword ptr [RBX + RSI*0x1],R11
0000afc2(4): ADD RAX,0x1
0000afc6(6): CMP RAX,0x100
0000afcc(2): JNZ 0x0000afa0
0000afce(5): JMP 0x0000ad04
0000afd3(7): LEA RDI,[0x14fb5]
0000afda(5): MOV ECX,0x6
0000afdf(3): MOV RSI,R12
0000afe2(2): CMPSB.REPE RDI,RSI
0000afe4(3): SETA AL
0000afe7(2): SBB AL,0x0
0000afe9(2): TEST AL,AL
0000afeb(2): JNZ 0x0000b06c
0000afed(5): CALL 0x00001c70
0000aff2(2): XOR ECX,ECX
0000aff4(3): TEST RBP,RBP
0000aff7(3): MOV RDX,qword ptr [RAX]
0000affa(5): MOV EDI,0x1
0000afff(6): JNZ 0x0000b3f7
0000b005(3): NOP dword ptr [RAX]
0000b008(5): TEST byte ptr [RDX + RCX*0x2 + 0x1],0x40
0000b00d(2): JZ 0x0000b020
0000b00f(3): MOV RAX,RCX
0000b012(3): MOV RSI,RDI
0000b015(4): SAR RAX,0x6
0000b019(3): SHL RSI,CL
0000b01c(4): OR qword ptr [RBX + RAX*0x8],RSI
0000b020(4): ADD RCX,0x1
0000b024(7): CMP RCX,0x100
0000b02b(2): JNZ 0x0000b008
0000b02d(5): JMP 0x0000ad04
0000b032(2): XOR EAX,EAX
0000b034(4): NOP dword ptr [RAX]
0000b038(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x2
0000b03d(2): JZ 0x0000b05b
0000b03f(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b044(3): MOV R14,RDI
0000b047(3): MOV RSI,RCX
0000b04a(3): AND ECX,0x3f
0000b04d(4): SHR RSI,0x3
0000b051(3): SHL R14,CL
0000b054(3): AND ESI,0x18
0000b057(4): OR qword ptr [RBX + RSI*0x1],R14
0000b05b(4): ADD RAX,0x1
0000b05f(6): CMP RAX,0x100
0000b065(2): JNZ 0x0000b038
0000b067(5): JMP 0x0000ad04
0000b06c(7): LEA RDI,[0x14f97]
0000b073(5): MOV ECX,0x6
0000b078(3): MOV RSI,R12
0000b07b(2): CMPSB.REPE RDI,RSI
0000b07d(3): SETA AL
0000b080(2): SBB AL,0x0
0000b082(2): TEST AL,AL
0000b084(2): JNZ 0x0000b0d2
0000b086(5): CALL 0x00001c70
0000b08b(2): XOR ECX,ECX
0000b08d(3): TEST RBP,RBP
0000b090(3): MOV RAX,qword ptr [RAX]
0000b093(5): MOV EDI,0x1
0000b098(6): JNZ 0x0000b3c0
0000b09e(5): TEST byte ptr [RAX + RCX*0x2 + 0x1],0x1
0000b0a3(2): JZ 0x0000b0b6
0000b0a5(3): MOV RDX,RCX
0000b0a8(3): MOV RSI,RDI
0000b0ab(4): SAR RDX,0x6
0000b0af(3): SHL RSI,CL
0000b0b2(4): OR qword ptr [RBX + RDX*0x8],RSI
0000b0b6(4): ADD RCX,0x1
0000b0ba(7): CMP RCX,0x100
0000b0c1(2): JNZ 0x0000b09e
0000b0c3(5): JMP 0x0000ad04
0000b0c8(5): MOV EAX,0xc
0000b0cd(5): JMP 0x0000ad06
0000b0d2(7): LEA RDI,[0x14fbb]
0000b0d9(5): MOV ECX,0x6
0000b0de(3): MOV RSI,R12
0000b0e1(2): CMPSB.REPE RDI,RSI
0000b0e3(3): SETA AL
0000b0e6(2): SBB AL,0x0
0000b0e8(2): TEST AL,AL
0000b0ea(6): JNZ 0x0000b1de
0000b0f0(5): CALL 0x00001c70
0000b0f5(2): XOR ECX,ECX
0000b0f7(3): TEST RBP,RBP
0000b0fa(3): MOV RDX,qword ptr [RAX]
0000b0fd(5): MOV ESI,0x1
0000b102(6): JNZ 0x0000b1a4
0000b108(4): TEST byte ptr [RDX + RCX*0x2],0x1
0000b10c(2): JZ 0x0000b11f
0000b10e(3): MOV RAX,RCX
0000b111(3): MOV RDI,RSI
0000b114(4): SAR RAX,0x6
0000b118(3): SHL RDI,CL
0000b11b(4): OR qword ptr [RBX + RAX*0x8],RDI
0000b11f(4): ADD RCX,0x1
0000b123(7): CMP RCX,0x100
0000b12a(2): JNZ 0x0000b108
0000b12c(5): JMP 0x0000ad04
0000b138(2): XOR EAX,EAX
0000b13a(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x4
0000b13f(2): JZ 0x0000b15d
0000b141(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b146(3): MOV R9,RDI
0000b149(3): MOV RSI,RCX
0000b14c(3): AND ECX,0x3f
0000b14f(4): SHR RSI,0x3
0000b153(3): SHL R9,CL
0000b156(3): AND ESI,0x18
0000b159(4): OR qword ptr [RBX + RSI*0x1],R9
0000b15d(4): ADD RAX,0x1
0000b161(6): CMP RAX,0x100
0000b167(2): JNZ 0x0000b13a
0000b169(5): JMP 0x0000ad04
0000b16e(2): XOR EAX,EAX
0000b170(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x20
0000b175(2): JZ 0x0000b193
0000b177(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b17c(3): MOV R9,RDI
0000b17f(3): MOV RSI,RCX
0000b182(3): AND ECX,0x3f
0000b185(4): SHR RSI,0x3
0000b189(3): SHL R9,CL
0000b18c(3): AND ESI,0x18
0000b18f(4): OR qword ptr [RBX + RSI*0x1],R9
0000b193(4): ADD RAX,0x1
0000b197(6): CMP RAX,0x100
0000b19d(2): JNZ 0x0000b170
0000b19f(5): JMP 0x0000ad04
0000b1a4(2): XOR EAX,EAX
0000b1a6(5): MOV EDI,0x1
0000b1ab(4): TEST byte ptr [RDX + RAX*0x2],0x1
0000b1af(2): JZ 0x0000b1cd
0000b1b1(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b1b6(3): MOV R14,RDI
0000b1b9(3): MOV RSI,RCX
0000b1bc(3): AND ECX,0x3f
0000b1bf(4): SHR RSI,0x3
0000b1c3(3): SHL R14,CL
0000b1c6(3): AND ESI,0x18
0000b1c9(4): OR qword ptr [RBX + RSI*0x1],R14
0000b1cd(4): ADD RAX,0x1
0000b1d1(6): CMP RAX,0x100
0000b1d7(2): JNZ 0x0000b1ab
0000b1d9(5): JMP 0x0000ad04
0000b1de(7): LEA RSI,[0x14fc1]
0000b1e5(3): MOV RDI,R12
0000b1e8(5): CALL 0x00001a80
0000b1ed(2): TEST EAX,EAX
0000b1ef(2): JNZ 0x0000b26a
0000b1f1(5): CALL 0x00001c70
0000b1f6(2): XOR ECX,ECX
0000b1f8(3): TEST RBP,RBP
0000b1fb(3): MOV RSI,qword ptr [RAX]
0000b1fe(5): MOV EDX,0x1
0000b203(2): JNZ 0x0000b22f
0000b205(5): CMP word ptr [RSI + RCX*0x2],0x0
0000b20a(2): JNS 0x0000b21d
0000b20c(3): MOV RAX,RCX
0000b20f(3): MOV RDI,RDX
0000b212(4): SAR RAX,0x6
0000b216(3): SHL RDI,CL
0000b219(4): OR qword ptr [RBX + RAX*0x8],RDI
0000b21d(4): ADD RCX,0x1
0000b221(7): CMP RCX,0x100
0000b228(2): JNZ 0x0000b205
0000b22a(5): JMP 0x0000ad04
0000b22f(2): XOR EAX,EAX
0000b231(5): MOV EDI,0x1
0000b236(5): CMP word ptr [RSI + RAX*0x2],0x0
0000b23b(2): JNS 0x0000b259
0000b23d(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b242(3): MOV R9,RDI
0000b245(3): MOV RDX,RCX
0000b248(3): AND ECX,0x3f
0000b24b(4): SHR RDX,0x3
0000b24f(3): SHL R9,CL
0000b252(3): AND EDX,0x18
0000b255(4): OR qword ptr [RBX + RDX*0x1],R9
0000b259(4): ADD RAX,0x1
0000b25d(6): CMP RAX,0x100
0000b263(2): JNZ 0x0000b236
0000b265(5): JMP 0x0000ad04
0000b26a(7): LEA RSI,[0x14fc7]
0000b271(3): MOV RDI,R12
0000b274(5): CALL 0x00001a80
0000b279(2): TEST EAX,EAX
0000b27b(2): JNZ 0x0000b2f4
0000b27d(5): CALL 0x00001c70
0000b282(2): XOR ECX,ECX
0000b284(3): TEST RBP,RBP
0000b287(3): MOV RSI,qword ptr [RAX]
0000b28a(5): MOV EDX,0x1
0000b28f(2): JNZ 0x0000b2ba
0000b291(4): TEST byte ptr [RSI + RCX*0x2],0x4
0000b295(2): JZ 0x0000b2a8
0000b297(3): MOV RAX,RCX
0000b29a(3): MOV RDI,RDX
0000b29d(4): SAR RAX,0x6
0000b2a1(3): SHL RDI,CL
0000b2a4(4): OR qword ptr [RBX + RAX*0x8],RDI
0000b2a8(4): ADD RCX,0x1
0000b2ac(7): CMP RCX,0x100
0000b2b3(2): JNZ 0x0000b291
0000b2b5(5): JMP 0x0000ad04
0000b2ba(2): XOR EAX,EAX
0000b2bc(5): MOV EDI,0x1
0000b2c1(4): TEST byte ptr [RSI + RAX*0x2],0x4
0000b2c5(2): JZ 0x0000b2e3
0000b2c7(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b2cc(3): MOV R14,RDI
0000b2cf(3): MOV RDX,RCX
0000b2d2(3): AND ECX,0x3f
0000b2d5(4): SHR RDX,0x3
0000b2d9(3): SHL R14,CL
0000b2dc(3): AND EDX,0x18
0000b2df(4): OR qword ptr [RBX + RDX*0x1],R14
0000b2e3(4): ADD RAX,0x1
0000b2e7(6): CMP RAX,0x100
0000b2ed(2): JNZ 0x0000b2c1
0000b2ef(5): JMP 0x0000ad04
0000b2f4(7): LEA RSI,[0x14fcd]
0000b2fb(3): MOV RDI,R12
0000b2fe(5): CALL 0x00001a80
0000b303(2): TEST EAX,EAX
0000b305(2): JNZ 0x0000b380
0000b307(5): CALL 0x00001c70
0000b30c(2): XOR ECX,ECX
0000b30e(3): TEST RBP,RBP
0000b311(3): MOV RSI,qword ptr [RAX]
0000b314(5): MOV EDX,0x1
0000b319(2): JNZ 0x0000b345
0000b31b(5): TEST byte ptr [RSI + RCX*0x2 + 0x1],0x10
0000b320(2): JZ 0x0000b333
0000b322(3): MOV RAX,RCX
0000b325(3): MOV RDI,RDX
0000b328(4): SAR RAX,0x6
0000b32c(3): SHL RDI,CL
0000b32f(4): OR qword ptr [RBX + RAX*0x8],RDI
0000b333(4): ADD RCX,0x1
0000b337(7): CMP RCX,0x100
0000b33e(2): JNZ 0x0000b31b
0000b340(5): JMP 0x0000ad04
0000b345(2): XOR EAX,EAX
0000b347(5): MOV EDI,0x1
0000b34c(5): TEST byte ptr [RSI + RAX*0x2 + 0x1],0x10
0000b351(2): JZ 0x0000b36f
0000b353(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b358(3): MOV R9,RDI
0000b35b(3): MOV RDX,RCX
0000b35e(3): AND ECX,0x3f
0000b361(4): SHR RDX,0x3
0000b365(3): SHL R9,CL
0000b368(3): AND EDX,0x18
0000b36b(4): OR qword ptr [RBX + RDX*0x1],R9
0000b36f(4): ADD RAX,0x1
0000b373(6): CMP RAX,0x100
0000b379(2): JNZ 0x0000b34c
0000b37b(5): JMP 0x0000ad04
0000b380(5): MOV EAX,0x4
0000b385(5): JMP 0x0000ad06
0000b38a(2): XOR EAX,EAX
0000b38c(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x8
0000b391(2): JZ 0x0000b3af
0000b393(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b398(3): MOV R14,RDI
0000b39b(3): MOV RSI,RCX
0000b39e(3): AND ECX,0x3f
0000b3a1(4): SHR RSI,0x3
0000b3a5(3): SHL R14,CL
0000b3a8(3): AND ESI,0x18
0000b3ab(4): OR qword ptr [RBX + RSI*0x1],R14
0000b3af(4): ADD RAX,0x1
0000b3b3(6): CMP RAX,0x100
0000b3b9(2): JNZ 0x0000b38c
0000b3bb(5): JMP 0x0000ad04
0000b3c0(2): XOR EDX,EDX
0000b3c2(5): TEST byte ptr [RAX + RDX*0x2 + 0x1],0x1
0000b3c7(2): JZ 0x0000b3e5
0000b3c9(5): MOVZX ECX,byte ptr [RBP + RDX*0x1]
0000b3ce(3): MOV R9,RDI
0000b3d1(3): MOV RSI,RCX
0000b3d4(3): AND ECX,0x3f
0000b3d7(4): SHR RSI,0x3
0000b3db(3): SHL R9,CL
0000b3de(3): AND ESI,0x18
0000b3e1(4): OR qword ptr [RBX + RSI*0x1],R9
0000b3e5(4): ADD RDX,0x1
0000b3e9(7): CMP RDX,0x100
0000b3f0(2): JNZ 0x0000b3c2
0000b3f2(5): JMP 0x0000ad04
0000b3f7(2): XOR EAX,EAX
0000b3f9(5): TEST byte ptr [RDX + RAX*0x2 + 0x1],0x40
0000b3fe(2): JZ 0x0000b41c
0000b400(5): MOVZX ECX,byte ptr [RBP + RAX*0x1]
0000b405(3): MOV R14,RDI
0000b408(3): MOV RSI,RCX
0000b40b(3): AND ECX,0x3f
0000b40e(4): SHR RSI,0x3
0000b412(3): SHL R14,CL
0000b415(3): AND ESI,0x18
0000b418(4): OR qword ptr [RBX + RSI*0x1],R14
0000b41c(4): ADD RAX,0x1
0000b420(6): CMP RAX,0x100
0000b426(2): JNZ 0x0000b3f9
0000b428(5): JMP 0x0000ad04
0000b430(2): PUSH R15
0000b432(2): PUSH R14
0000b434(3): MOV R14,RDX
0000b437(2): PUSH R13
0000b439(2): PUSH R12
0000b43b(3): MOV R13,RCX
0000b43e(1): PUSH RBP
0000b43f(1): PUSH RBX
0000b440(3): MOV RBP,RDI
0000b443(5): MOV EDI,0x20
0000b448(3): MOV R12D,R8D
0000b44b(4): SUB RSP,0x58
0000b44f(4): MOV qword ptr [RSP],RSI
0000b453(5): MOV ESI,0x1
0000b458(5): MOV qword ptr [RSP + 0x8],R9
0000b45d(9): MOV RAX,qword ptr FS:[0x28]
0000b466(5): MOV qword ptr [RSP + 0x48],RAX
0000b46b(2): XOR EAX,EAX
0000b46d(9): MOV qword ptr [RSP + 0x18],0x0
0000b476(5): CALL 0x00001a70
0000b47b(3): TEST RAX,RAX
0000b47e(6): JZ 0x0000b640
0000b484(5): MOV ESI,0x1
0000b489(5): MOV EDI,0x50
0000b48e(3): MOV RBX,RAX
0000b491(5): CALL 0x00001a70
0000b496(3): TEST RAX,RAX
0000b499(3): MOV R15,RAX
0000b49c(6): JZ 0x0000b650
0000b4a2(4): MOVZX EAX,byte ptr [RAX + 0x20]
0000b4a6(4): SUB RSP,0x8
0000b4aa(3): MOV EDX,R12D
0000b4ad(2): PUSH 0x0
0000b4af(3): AND EDX,0x1
0000b4b2(5): MOV RDI,qword ptr [RSP + 0x10]
0000b4b7(4): LEA RCX,[R15 + 0x48]
0000b4bb(3): MOV R9,R14
0000b4be(3): MOV RSI,RBX
0000b4c1(5): LEA R8,[RSP + 0x28]
0000b4c6(3): AND EAX,0xfffffffe
0000b4c9(2): OR EAX,EDX
0000b4cb(4): LEA RDX,[R15 + 0x18]
0000b4cf(4): MOV byte ptr [R15 + 0x20],AL
0000b4d3(5): CALL 0x0000ac20
0000b4d8(2): TEST EAX,EAX
0000b4da(1): POP RDX
0000b4db(1): POP RCX
0000b4dc(6): JNZ 0x0000b670
0000b4e2(5): MOVSX RCX,byte ptr [R13]
0000b4e7(5): MOV ESI,0x1
0000b4ec(2): TEST CL,CL
0000b4ee(2): JZ 0x0000b52a
0000b4f0(4): LEA RAX,[RCX + 0x3f]
0000b4f4(3): TEST RCX,RCX
0000b4f7(3): MOV RDX,RCX
0000b4fa(4): CMOVNS RAX,RCX
0000b4fe(4): SAR RDX,0x3f
0000b502(4): ADD R13,0x1
0000b506(4): SHR RDX,0x3a
0000b50a(4): SAR RAX,0x6
0000b50e(3): ADD RCX,RDX
0000b511(3): AND ECX,0x3f
0000b514(3): SUB RCX,RDX
0000b517(3): MOV RDX,RSI
0000b51a(3): SHL RDX,CL
0000b51d(5): MOVSX RCX,byte ptr [R13]
0000b522(4): OR qword ptr [RBX + RAX*0x8],RDX
0000b526(2): TEST CL,CL
0000b528(2): JNZ 0x0000b4f0
0000b52a(3): TEST R12B,R12B
0000b52d(2): JZ 0x0000b542
0000b52f(4): LEA RDX,[RBX + 0x20]
0000b533(3): MOV RAX,RBX
0000b536(3): NOT qword ptr [RAX]
0000b539(4): ADD RAX,0x8
0000b53d(3): CMP RDX,RAX
0000b540(2): JNZ 0x0000b536
0000b542(7): CMP dword ptr [0xb4 + RBP],0x1
0000b549(2): JLE 0x0000b563
0000b54b(4): MOV RCX,qword ptr [RBP + 0x78]
0000b54f(2): XOR EAX,EAX
0000b551(4): MOV RDX,qword ptr [RCX + RAX*0x1]
0000b555(4): AND qword ptr [RBX + RAX*0x1],RDX
0000b559(4): ADD RAX,0x8
0000b55d(4): CMP RAX,0x20
0000b561(2): JNZ 0x0000b551
0000b563(5): LEA R9,[RSP + 0x20]
0000b568(4): LEA R12,[RBP + 0x70]
0000b56c(7): LEA R13,[0x80 + RBP]
0000b573(2): XOR ECX,ECX
0000b575(2): XOR EDX,EDX
0000b577(5): MOV byte ptr [RSP + 0x28],0x3
0000b57c(3): MOV R8,R9
0000b57f(3): MOV RSI,R13
0000b582(3): MOV RDI,R12
0000b585(5): MOV qword ptr [RSP + 0x20],RBX
0000b58a(4): MOV qword ptr [RSP],R9
0000b58e(5): CALL 0x000080e0
0000b593(3): TEST RAX,RAX
0000b596(3): MOV R14,RAX
0000b599(6): JZ 0x0000b630
0000b59f(7): CMP dword ptr [0xb4 + RBP],0x1
0000b5a6(2): JLE 0x0000b620
0000b5a8(7): OR byte ptr [0xb0 + RBP],0x2
0000b5af(4): MOV R9,qword ptr [RSP]
0000b5b3(2): XOR ECX,ECX
0000b5b5(2): XOR EDX,EDX
0000b5b7(3): MOV RSI,R13
0000b5ba(3): MOV RDI,R12
0000b5bd(5): MOV byte ptr [RSP + 0x28],0x6
0000b5c2(5): MOV qword ptr [RSP + 0x20],R15
0000b5c7(3): MOV R8,R9
0000b5ca(5): CALL 0x000080e0
0000b5cf(3): TEST RAX,RAX
0000b5d2(2): JZ 0x0000b630
0000b5d4(5): LEA R8,[RSP + 0x30]
0000b5d9(3): MOV RDX,R14
0000b5dc(3): MOV RCX,RAX
0000b5df(3): MOV RSI,R13
0000b5e2(3): MOV RDI,R12
0000b5e5(5): MOV byte ptr [RSP + 0x38],0xa
0000b5ea(5): CALL 0x000080e0
0000b5ef(3): MOV R14,RAX
0000b5f2(5): MOV RDI,qword ptr [RSP + 0x48]
0000b5f7(9): XOR RDI,qword ptr FS:[0x28]
0000b600(3): MOV RAX,R14
0000b603(6): JNZ 0x0000b695
0000b609(4): ADD RSP,0x58
0000b60d(1): POP RBX
0000b60e(1): POP RBP
0000b60f(2): POP R12
0000b611(2): POP R13
0000b613(2): POP R14
0000b615(2): POP R15
0000b617(1): RET
0000b620(3): MOV RDI,R15
0000b623(5): CALL 0x00006b40
0000b628(2): JMP 0x0000b5f2
0000b630(3): MOV RDI,RBX
0000b633(5): CALL 0x00001880
0000b638(3): MOV RDI,R15
0000b63b(5): CALL 0x00006b40
0000b640(5): MOV RAX,qword ptr [RSP + 0x8]
0000b645(3): XOR R14D,R14D
0000b648(6): MOV dword ptr [RAX],0xc
0000b64e(2): JMP 0x0000b5f2
0000b650(3): MOV RDI,RBX
0000b653(3): XOR R14D,R14D
0000b656(5): CALL 0x00001880
0000b65b(5): MOV RAX,qword ptr [RSP + 0x8]
0000b660(6): MOV dword ptr [RAX],0xc
0000b666(2): JMP 0x0000b5f2
0000b670(3): MOV RDI,RBX
0000b673(3): MOV dword ptr [RSP],EAX
0000b676(3): XOR R14D,R14D
0000b679(5): CALL 0x00001880
0000b67e(3): MOV RDI,R15
0000b681(5): CALL 0x00006b40
0000b686(5): MOV RDI,qword ptr [RSP + 0x8]
0000b68b(3): MOV EAX,dword ptr [RSP]
0000b68e(2): MOV dword ptr [RDI],EAX
0000b690(5): JMP 0x0000b5f2
0000b695(5): CALL 0x00001990
0000b69a(6): NOP word ptr [RAX + RAX*0x1]
0000b6a0(2): PUSH R15
0000b6a2(2): PUSH R14
0000b6a4(3): MOV RAX,RDI
0000b6a7(2): PUSH R13
0000b6a9(2): PUSH R12
0000b6ab(1): PUSH RBP
0000b6ac(1): PUSH RBX
0000b6ad(2): XOR EBX,EBX
0000b6af(3): MOV RBP,RCX
0000b6b2(7): SUB RSP,0x178
0000b6b9(3): MOV RAX,qword ptr [RAX]
0000b6bc(5): MOV qword ptr [RSP + 0x30],RDI
0000b6c1(5): MOV qword ptr [RSP + 0x20],RSI
0000b6c6(9): MOV RDI,qword ptr FS:[0x28]
0000b6cf(8): MOV qword ptr [0x168 + RSP],RDI
0000b6d7(2): XOR EDI,EDI
0000b6d9(7): CMP dword ptr [0xb4 + RAX],0x1
0000b6e0(5): MOV qword ptr [RSP + 0x28],RDX
0000b6e5(5): MOV qword ptr [RSP + 0x8],RAX
0000b6ea(2): JNZ 0x0000b703
0000b6ec(5): MOV RAX,qword ptr [RSP + 0x30]
0000b6f1(4): MOV RAX,qword ptr [RAX + 0x18]
0000b6f5(3): MOV RBX,RAX
0000b6f8(4): MOV qword ptr [RSP],RAX
0000b6fc(4): SHR RBX,0x16
0000b700(3): AND EBX,0x1
0000b703(5): MOV RAX,qword ptr [RSP + 0x20]
0000b708(4): CMP qword ptr [RAX],0x0
0000b70c(6): JLE 0x0000bb1d
0000b712(5): LEA RAX,[RSP + 0x58]
0000b717(8): MOV qword ptr [RSP],0x0
0000b71f(5): MOV qword ptr [RSP + 0x40],RAX
0000b724(5): LEA RAX,[RSP + 0x54]
0000b729(5): MOV qword ptr [RSP + 0x48],RAX
0000b72e(5): LEA RAX,[RSP + 0x60]
0000b733(5): MOV qword ptr [RSP + 0x38],RAX
0000b738(2): JMP 0x0000b77e
0000b740(3): CMP EAX,0x3
0000b743(6): JZ 0x0000ba36
0000b749(3): CMP EAX,0x6
0000b74c(6): JZ 0x0000b8d8
0000b752(3): AND EDX,0xfffffffd
0000b755(3): CMP DL,0x5
0000b758(6): JZ 0x0000bb54
0000b75e(3): CMP EAX,0x2
0000b761(6): JZ 0x0000bab4
0000b767(5): MOV RDI,qword ptr [RSP + 0x20]
0000b76c(5): ADD qword ptr [RSP],0x1
0000b771(4): MOV RAX,qword ptr [RSP]
0000b775(3): CMP RAX,qword ptr [RDI]
0000b778(6): JGE 0x0000bb1d
0000b77e(5): MOV RAX,qword ptr [RSP + 0x28]
0000b783(4): MOV RDI,qword ptr [RSP]
0000b787(3): MOV RAX,qword ptr [RAX]
0000b78a(4): MOV R12,qword ptr [RAX + RDI*0x8]
0000b78e(5): MOV RAX,qword ptr [RSP + 0x8]
0000b793(3): MOV RCX,qword ptr [RAX]
0000b796(3): MOV RAX,R12
0000b799(4): SHL RAX,0x4
0000b79d(5): MOV qword ptr [RSP + 0x10],RAX
0000b7a2(4): LEA RSI,[RCX + RAX*0x1]
0000b7a6(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000b7aa(3): CMP EAX,0x1
0000b7ad(2): MOV EDX,EAX
0000b7af(2): JNZ 0x0000b740
0000b7b1(4): MOVZX R13D,byte ptr [RSI]
0000b7b5(2): TEST EBX,EBX
0000b7b7(6): MOV byte ptr [RBP + R13*0x1],0x1
0000b7bd(2): JZ 0x0000b7d0
0000b7bf(5): CALL 0x00001c60
0000b7c4(3): MOV RAX,qword ptr [RAX]
0000b7c7(4): MOVSXD RAX,dword ptr [RAX + R13*0x4]
0000b7cb(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000b7d0(5): MOV RAX,qword ptr [RSP + 0x30]
0000b7d5(4): TEST byte ptr [RAX + 0x1a],0x40
0000b7d9(2): JZ 0x0000b767
0000b7db(5): MOV RSI,qword ptr [RSP + 0x8]
0000b7e0(7): CMP dword ptr [0xb4 + RSI],0x1
0000b7e7(6): JLE 0x0000b767
0000b7ed(3): MOV RAX,qword ptr [RSI]
0000b7f0(5): MOV RDI,qword ptr [RSP + 0x10]
0000b7f5(4): MOVZX EDX,byte ptr [RAX + RDI*0x1]
0000b7f9(4): MOV byte ptr [RSP + 0x60],DL
0000b7fd(5): LEA RDX,[R12 + 0x1]
0000b802(4): CMP qword ptr [RSI + 0x10],RDX
0000b806(6): JBE 0x0000bb46
0000b80c(5): LEA RCX,[RAX + RDI*0x1 + 0x10]
0000b811(3): MOV EAX,dword ptr [RCX + 0x8]
0000b814(5): AND EAX,0x2000ff
0000b819(5): CMP EAX,0x200001
0000b81e(6): JNZ 0x0000bb46
0000b824(4): ADD RDI,0x20
0000b828(3): MOV R13,RDI
0000b82b(5): MOV RDI,qword ptr [RSP + 0x38]
0000b830(4): LEA RAX,[RDI + 0x1]
0000b834(2): JMP 0x0000b85b
0000b840(3): MOV RCX,qword ptr [RSI]
0000b843(3): ADD RCX,R13
0000b846(4): ADD R13,0x10
0000b84a(3): MOV EDX,dword ptr [RCX + 0x8]
0000b84d(6): AND EDX,0x2000ff
0000b853(6): CMP EDX,0x200001
0000b859(2): JNZ 0x0000b874
0000b85b(3): MOVZX EDX,byte ptr [RCX]
0000b85e(4): ADD RAX,0x1
0000b862(3): MOV byte ptr [RAX + -0x1],DL
0000b865(3): MOV RDX,RAX
0000b868(3): SUB RDX,RDI
0000b86b(3): ADD RDX,R12
0000b86e(4): CMP qword ptr [RSI + 0x10],RDX
0000b872(2): JA 0x0000b840
0000b874(5): MOV RSI,qword ptr [RSP + 0x38]
0000b879(5): MOV RCX,qword ptr [RSP + 0x40]
0000b87e(5): MOV RDI,qword ptr [RSP + 0x48]
0000b883(3): SUB RAX,RSI
0000b886(7): MOV qword ptr [RCX],0x0
0000b88d(3): MOV R12,RAX
0000b890(3): MOV RDX,RAX
0000b893(5): CALL 0x00005880
0000b898(3): CMP R12,RAX
0000b89b(6): JNZ 0x0000b767
0000b8a1(4): MOV EDI,dword ptr [RSP + 0x54]
0000b8a5(5): CALL 0x00001bd0
0000b8aa(5): MOV RDX,qword ptr [RSP + 0x40]
0000b8af(5): MOV RDI,qword ptr [RSP + 0x38]
0000b8b4(2): MOV ESI,EAX
0000b8b6(5): CALL 0x00001ad0
0000b8bb(4): CMP RAX,-0x1
0000b8bf(6): JZ 0x0000b767
0000b8c5(5): MOVZX EAX,byte ptr [RSP + 0x60]
0000b8ca(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000b8cf(5): JMP 0x0000b767
0000b8d8(5): MOV RAX,qword ptr [RSP + 0x8]
0000b8dd(3): MOV R12,qword ptr [RSI]
0000b8e0(7): CMP dword ptr [0xb4 + RAX],0x1
0000b8e7(2): JLE 0x0000b90d
0000b8e9(6): CMP qword ptr [R12 + 0x48],0x0
0000b8ef(6): JNZ 0x0000b9ef
0000b8f5(6): TEST byte ptr [R12 + 0x20],0x1
0000b8fb(6): JNZ 0x0000b9ef
0000b901(6): CMP qword ptr [R12 + 0x40],0x0
0000b907(6): JNZ 0x0000b9ef
0000b90d(3): XOR R13D,R13D
0000b910(6): CMP qword ptr [R12 + 0x28],0x0
0000b916(6): JLE 0x0000b767
0000b91c(3): MOV R15,R12
0000b91f(5): MOV R14,qword ptr [RSP + 0x40]
0000b924(3): MOV R12,RBP
0000b927(3): MOV RBP,R13
0000b92a(3): MOV R13D,EBX
0000b92d(2): JMP 0x0000b93d
0000b92f(4): ADD RBP,0x1
0000b933(4): CMP RBP,qword ptr [R15 + 0x28]
0000b937(6): JGE 0x0000b9e4
0000b93d(7): MOV qword ptr [R14],0x0
0000b944(3): MOV RAX,qword ptr [R15]
0000b947(3): MOV RDX,R14
0000b94a(5): MOV RDI,qword ptr [RSP + 0x38]
0000b94f(8): LEA RBX,[RBP*0x4]
0000b957(3): MOV ESI,dword ptr [RAX + RBP*0x4]
0000b95a(5): CALL 0x00001ad0
0000b95f(4): CMP RAX,-0x1
0000b963(2): JZ 0x0000b98f
0000b965(5): MOVZX EDX,byte ptr [RSP + 0x60]
0000b96a(3): TEST R13D,R13D
0000b96d(5): MOV byte ptr [R12 + RDX*0x1],0x1
0000b972(5): MOV qword ptr [RSP + 0x10],RDX
0000b977(2): JZ 0x0000b98f
0000b979(5): CALL 0x00001c60
0000b97e(5): MOV RDX,qword ptr [RSP + 0x10]
0000b983(3): MOV RAX,qword ptr [RAX]
0000b986(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
0000b98a(5): MOV byte ptr [R12 + RAX*0x1],0x1
0000b98f(5): MOV RAX,qword ptr [RSP + 0x30]
0000b994(4): TEST byte ptr [RAX + 0x1a],0x40
0000b998(2): JZ 0x0000b92f
0000b99a(5): MOV RAX,qword ptr [RSP + 0x8]
0000b99f(7): CMP dword ptr [0xb4 + RAX],0x1
0000b9a6(2): JLE 0x0000b92f
0000b9a8(3): MOV RAX,qword ptr [R15]
0000b9ab(3): MOV EDI,dword ptr [RAX + RBX*0x1]
0000b9ae(5): CALL 0x00001bd0
0000b9b3(5): MOV RDI,qword ptr [RSP + 0x38]
0000b9b8(3): MOV RDX,R14
0000b9bb(2): MOV ESI,EAX
0000b9bd(5): CALL 0x00001ad0
0000b9c2(4): CMP RAX,-0x1
0000b9c6(6): JZ 0x0000b92f
0000b9cc(5): MOVZX EAX,byte ptr [RSP + 0x60]
0000b9d1(4): ADD RBP,0x1
0000b9d5(5): MOV byte ptr [R12 + RAX*0x1],0x1
0000b9da(4): CMP RBP,qword ptr [R15 + 0x28]
0000b9de(6): JL 0x0000b93d
0000b9e4(3): MOV EBX,R13D
0000b9e7(3): MOV RBP,R12
0000b9ea(5): JMP 0x0000b767
0000b9ef(5): MOV R12,qword ptr [RSP + 0x40]
0000b9f4(5): MOV R13,qword ptr [RSP + 0x48]
0000b9f9(5): MOV byte ptr [RSP + 0x54],0x0
0000b9fe(2): NOP
0000ba00(2): XOR EDI,EDI
0000ba02(8): MOV qword ptr [R12],0x0
0000ba0a(3): MOV RCX,R12
0000ba0d(5): MOV EDX,0x1
0000ba12(3): MOV RSI,R13
0000ba15(5): CALL 0x00005880
0000ba1a(4): CMP RAX,-0x2
0000ba1e(2): JNZ 0x0000ba2a
0000ba20(5): MOVZX EAX,byte ptr [RSP + 0x54]
0000ba25(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000ba2a(5): ADD byte ptr [RSP + 0x54],0x1
0000ba2f(2): JNZ 0x0000ba00
0000ba31(5): JMP 0x0000b767
0000ba36(3): MOV R13,RBP
0000ba39(3): XOR R12D,R12D
0000ba3c(9): MOV qword ptr [RSP + 0x18],0x0
0000ba45(5): MOV RAX,qword ptr [RSP + 0x10]
0000ba4a(5): MOV RSI,qword ptr [RSP + 0x18]
0000ba4f(3): XOR R14D,R14D
0000ba52(4): MOV RAX,qword ptr [RCX + RAX*0x1]
0000ba56(4): MOV R15,qword ptr [RAX + RSI*0x1]
0000ba5a(6): NOP word ptr [RAX + RAX*0x1]
0000ba60(4): BT RDI,R14
0000ba64(2): JNC 0x0000ba85
0000ba66(2): TEST EBX,EBX
0000ba68(6): MOV byte ptr [R13 + R14*0x1],0x1
0000ba6e(2): JZ 0x0000ba85
0000ba70(5): CALL 0x00001c60
0000ba75(3): MOV RAX,qword ptr [RAX]
0000ba78(4): LEA RDX,[R12 + R14*0x1]
0000ba7c(4): MOVSXD RAX,dword ptr [RAX + RDX*0x4]
0000ba80(5): MOV byte ptr [RBP + RAX*0x1],0x1
0000ba85(4): ADD R14,0x1
0000ba89(4): CMP R14,0x40
0000ba8d(2): JNZ 0x0000ba60
0000ba8f(4): ADD R12,0x40
0000ba93(6): ADD qword ptr [RSP + 0x18],0x8
0000ba99(4): ADD R13,0x40
0000ba9d(7): CMP R12,0x100
0000baa4(6): JZ 0x0000b767
0000baaa(5): MOV RAX,qword ptr [RSP + 0x8]
0000baaf(3): MOV RCX,qword ptr [RAX]
0000bab2(2): JMP 0x0000ba45
0000bab4(8): MOVDQA XMM0,xmmword ptr [0x00015780]
0000babc(4): MOVUPS xmmword ptr [RBP],XMM0
0000bac0(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
0000bac4(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0000bac8(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0000bacc(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
0000bad0(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
0000bad4(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
0000bad8(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0000badc(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
0000bae3(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0000baea(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
0000baf1(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
0000baf8(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0000baff(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
0000bb06(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0000bb0d(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
0000bb14(5): MOV RAX,qword ptr [RSP + 0x30]
0000bb19(4): OR byte ptr [RAX + 0x38],0x1
0000bb1d(8): MOV RAX,qword ptr [0x168 + RSP]
0000bb25(9): XOR RAX,qword ptr FS:[0x28]
0000bb2e(6): JNZ 0x0000bbc2
0000bb34(7): ADD RSP,0x178
0000bb3b(1): POP RBX
0000bb3c(1): POP RBP
0000bb3d(2): POP R12
0000bb3f(2): POP R13
0000bb41(2): POP R14
0000bb43(2): POP R15
0000bb45(1): RET
0000bb46(5): MOV RAX,qword ptr [RSP + 0x38]
0000bb4b(4): ADD RAX,0x1
0000bb4f(5): JMP 0x0000b874
0000bb54(8): MOVDQA XMM0,xmmword ptr [0x00015780]
0000bb5c(3): CMP EAX,0x2
0000bb5f(4): MOVUPS xmmword ptr [RBP],XMM0
0000bb63(4): MOVUPS xmmword ptr [RBP + 0x10],XMM0
0000bb67(4): MOVUPS xmmword ptr [RBP + 0x20],XMM0
0000bb6b(4): MOVUPS xmmword ptr [RBP + 0x30],XMM0
0000bb6f(4): MOVUPS xmmword ptr [RBP + 0x40],XMM0
0000bb73(4): MOVUPS xmmword ptr [RBP + 0x50],XMM0
0000bb77(4): MOVUPS xmmword ptr [RBP + 0x60],XMM0
0000bb7b(4): MOVUPS xmmword ptr [RBP + 0x70],XMM0
0000bb7f(7): MOVUPS xmmword ptr [0x80 + RBP],XMM0
0000bb86(7): MOVUPS xmmword ptr [0x90 + RBP],XMM0
0000bb8d(7): MOVUPS xmmword ptr [0xa0 + RBP],XMM0
0000bb94(7): MOVUPS xmmword ptr [0xb0 + RBP],XMM0
0000bb9b(7): MOVUPS xmmword ptr [0xc0 + RBP],XMM0
0000bba2(7): MOVUPS xmmword ptr [0xd0 + RBP],XMM0
0000bba9(7): MOVUPS xmmword ptr [0xe0 + RBP],XMM0
0000bbb0(7): MOVUPS xmmword ptr [0xf0 + RBP],XMM0
0000bbb7(6): JNZ 0x0000bb1d
0000bbbd(5): JMP 0x0000bb14
0000bbc2(5): CALL 0x00001990
0000bbc7(9): NOP word ptr [RAX + RAX*0x1]
0000bbd0(4): SHL RDX,0x4
0000bbd4(2): PUSH R13
0000bbd6(2): PUSH R12
0000bbd8(4): LEA R9,[RDI + RDX*0x1]
0000bbdc(1): PUSH RBP
0000bbdd(1): PUSH RBX
0000bbde(4): SUB RSP,0x8
0000bbe2(5): MOVZX R11D,byte ptr [R9 + 0x8]
0000bbe7(4): CMP R11B,0x7
0000bbeb(6): JZ 0x0000bd00
0000bbf1(7): CMP dword ptr [0x90 + RCX],0x1
0000bbf8(6): JZ 0x0000bcc0
0000bbfe(3): MOV RBX,RSI
0000bc01(3): MOV RDI,RCX
0000bc04(3): MOV RSI,R8
0000bc07(3): MOV R10,RCX
0000bc0a(5): CALL 0x00007370
0000bc0f(4): CMP R11B,0x5
0000bc13(2): MOV EBP,EAX
0000bc15(6): JZ 0x0000bcd0
0000bc1b(4): CMP R11B,0x6
0000bc1f(6): JNZ 0x0000bcc0
0000bc25(3): CMP EAX,0x1
0000bc28(6): JLE 0x0000bcc0
0000bc2e(3): MOV R13,qword ptr [R9]
0000bc31(4): MOV RSI,qword ptr [R13 + 0x40]
0000bc35(4): MOV RDX,qword ptr [R13 + 0x28]
0000bc39(3): TEST RSI,RSI
0000bc3c(2): JNZ 0x0000bc49
0000bc3e(5): CMP qword ptr [R13 + 0x48],0x0
0000bc43(6): JZ 0x0000bd38
0000bc49(4): MOV RAX,qword ptr [R10 + 0x10]
0000bc4d(3): TEST RDX,RDX
0000bc50(4): MOV R12D,dword ptr [RAX + R8*0x4]
0000bc54(2): JLE 0x0000bc77
0000bc56(4): MOV RCX,qword ptr [R13]
0000bc5a(3): CMP R12D,dword ptr [RCX]
0000bc5d(2): JZ 0x0000bcb2
0000bc5f(2): XOR EAX,EAX
0000bc61(2): JMP 0x0000bc6e
0000bc68(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0000bc6c(2): JZ 0x0000bcb2
0000bc6e(4): ADD RAX,0x1
0000bc72(3): CMP RAX,RDX
0000bc75(2): JNZ 0x0000bc68
0000bc77(4): MOV RAX,qword ptr [R13 + 0x48]
0000bc7b(3): TEST RAX,RAX
0000bc7e(6): JLE 0x0000bd5c
0000bc84(2): XOR EBX,EBX
0000bc86(2): JMP 0x0000bc9e
0000bc90(4): ADD RBX,0x1
0000bc94(4): CMP RBX,qword ptr [R13 + 0x48]
0000bc98(6): JGE 0x0000bd58
0000bc9e(4): MOV RAX,qword ptr [R13 + 0x18]
0000bca2(3): MOV EDI,R12D
0000bca5(4): MOV RSI,qword ptr [RAX + RBX*0x8]
0000bca9(5): CALL 0x00001930
0000bcae(2): TEST EAX,EAX
0000bcb0(2): JZ 0x0000bc90
0000bcb2(5): TEST byte ptr [R13 + 0x20],0x1
0000bcb7(2): JZ 0x0000bcc2
0000bcb9(7): NOP dword ptr [RAX]
0000bcc0(2): XOR EBP,EBP
0000bcc2(4): ADD RSP,0x8
0000bcc6(2): MOV EAX,EBP
0000bcc8(1): POP RBX
0000bcc9(1): POP RBP
0000bcca(2): POP R12
0000bccc(2): POP R13
0000bcce(1): RET
0000bcd0(3): CMP EAX,0x1
0000bcd3(2): JLE 0x0000bcc0
0000bcd5(3): MOV RAX,qword ptr [RBX]
0000bcd8(2): TEST AL,0x40
0000bcda(2): JZ 0x0000bcf0
0000bcdc(2): TEST AL,0x80
0000bcde(2): JZ 0x0000bcc2
0000bce0(4): MOV RAX,qword ptr [R10 + 0x8]
0000bce4(5): CMP byte ptr [RAX + R8*0x1],0x0
0000bce9(2): JZ 0x0000bcc0
0000bceb(2): JMP 0x0000bcc2
0000bcf0(4): MOV RDX,qword ptr [R10 + 0x8]
0000bcf4(5): CMP byte ptr [RDX + R8*0x1],0xa
0000bcf9(2): JNZ 0x0000bcdc
0000bcfb(2): JMP 0x0000bcc0
0000bd00(4): MOV RDX,qword ptr [RCX + 0x8]
0000bd04(4): LEA RSI,[RDX + R8*0x1]
0000bd08(3): MOVZX EAX,byte ptr [RSI]
0000bd0b(2): CMP AL,0xc1
0000bd0d(2): JBE 0x0000bcc0
0000bd0f(4): MOV RCX,qword ptr [RCX + 0x58]
0000bd13(4): LEA RDI,[R8 + 0x1]
0000bd17(3): CMP RDI,RCX
0000bd1a(2): JGE 0x0000bcc0
0000bd1c(2): CMP AL,0xdf
0000bd1e(6): MOVZX EDX,byte ptr [RDX + R8*0x1 + 0x1]
0000bd24(2): JA 0x0000bd8e
0000bd26(3): ADD EDX,-0x80
0000bd29(5): MOV EBP,0x2
0000bd2e(3): CMP DL,0x3f
0000bd31(2): JA 0x0000bcc0
0000bd33(2): JMP 0x0000bcc2
0000bd38(3): TEST RDX,RDX
0000bd3b(6): JNZ 0x0000bc49
0000bd41(5): TEST byte ptr [R13 + 0x20],0x1
0000bd46(6): JNZ 0x0000bcc2
0000bd4c(5): JMP 0x0000bcc0
0000bd58(4): MOV RSI,qword ptr [R13 + 0x40]
0000bd5c(3): TEST RSI,RSI
0000bd5f(2): JLE 0x0000bd41
0000bd61(4): MOV RDX,qword ptr [R13 + 0x8]
0000bd65(2): XOR EAX,EAX
0000bd67(2): JMP 0x0000bd79
0000bd70(4): ADD RAX,0x1
0000bd74(3): CMP RAX,RSI
0000bd77(2): JZ 0x0000bd41
0000bd79(4): CMP R12D,dword ptr [RDX + RAX*0x4]
0000bd7d(2): JL 0x0000bd70
0000bd7f(4): MOV RCX,qword ptr [R13 + 0x10]
0000bd83(4): CMP R12D,dword ptr [RCX + RAX*0x4]
0000bd87(2): JG 0x0000bd70
0000bd89(5): JMP 0x0000bcb2
0000bd8e(2): CMP AL,0xef
0000bd90(2): JA 0x0000bdd8
0000bd92(2): CMP AL,0xe0
0000bd94(2): JNZ 0x0000bd9f
0000bd96(3): CMP DL,0x9f
0000bd99(6): JBE 0x0000bcc0
0000bd9f(5): MOV EBP,0x3
0000bda4(3): MOVSXD RDI,EBP
0000bda7(3): ADD R8,RDI
0000bdaa(3): CMP RCX,R8
0000bdad(6): JL 0x0000bcc0
0000bdb3(5): MOV EAX,0x1
0000bdb8(2): JMP 0x0000bdc7
0000bdba(4): ADD RAX,0x1
0000bdbe(3): CMP RDI,RAX
0000bdc1(6): JLE 0x0000bcc2
0000bdc7(4): MOVZX EBX,byte ptr [RSI + RAX*0x1]
0000bdcb(3): LEA EDX,[RBX + -0x80]
0000bdce(3): CMP DL,0x3f
0000bdd1(2): JBE 0x0000bdba
0000bdd3(5): JMP 0x0000bcc0
0000bdd8(2): CMP AL,0xf7
0000bdda(2): JA 0x0000bdf0
0000bddc(2): CMP AL,0xf0
0000bdde(2): JNZ 0x0000bde9
0000bde0(3): CMP DL,0x8f
0000bde3(6): JBE 0x0000bcc0
0000bde9(5): MOV EBP,0x4
0000bdee(2): JMP 0x0000bda4
0000bdf0(2): CMP AL,0xfb
0000bdf2(2): JA 0x0000be08
0000bdf4(2): CMP AL,0xf8
0000bdf6(2): JNZ 0x0000be01
0000bdf8(3): CMP DL,0x87
0000bdfb(6): JBE 0x0000bcc0
0000be01(5): MOV EBP,0x5
0000be06(2): JMP 0x0000bda4
0000be08(2): CMP AL,0xfd
0000be0a(6): JA 0x0000bcc0
0000be10(2): CMP AL,0xfc
0000be12(2): JNZ 0x0000be1d
0000be14(3): CMP DL,0x83
0000be17(6): JBE 0x0000bcc0
0000be1d(5): MOV EBP,0x6
0000be22(2): JMP 0x0000bda4
0000be30(2): PUSH R15
0000be32(2): PUSH R14
0000be34(3): MOV R15,RDI
0000be37(2): PUSH R13
0000be39(2): PUSH R12
0000be3b(1): PUSH RBP
0000be3c(1): PUSH RBX
0000be3d(3): MOV RBP,RCX
0000be40(3): MOV RBX,RDX
0000be43(7): SUB RSP,0xd8
0000be4a(7): MOV RCX,qword ptr [0x98 + RDI]
0000be51(4): MOV R13,qword ptr [RSI + 0x8]
0000be55(9): MOV RAX,qword ptr FS:[0x28]
0000be5e(8): MOV qword ptr [0xc8 + RSP],RAX
0000be66(2): XOR EAX,EAX
0000be68(3): MOV RAX,RDX
0000be6b(5): MOV qword ptr [RSP + 0x60],RSI
0000be70(5): MOV qword ptr [RSP + 0x78],R8
0000be75(4): SHL RAX,0x4
0000be79(3): ADD RAX,qword ptr [RCX]
0000be7c(5): MOV qword ptr [RSP + 0x40],R9
0000be81(5): MOV qword ptr [RSP + 0x30],RCX
0000be86(11): MOV dword ptr [0x88 + RSP],0x0
0000be91(3): MOV RAX,qword ptr [RAX]
0000be94(5): MOV qword ptr [RSP + 0x48],RAX
0000be99(7): MOVSXD RAX,dword ptr [0xe0 + RDI]
0000bea0(3): ADD RAX,R9
0000bea3(3): CMP RAX,R13
0000bea6(6): JGE 0x0000c4c6
0000beac(5): MOV RAX,qword ptr [RSP + 0x60]
0000beb1(7): MOV RDX,qword ptr [0xb8 + R15]
0000beb8(4): MOV RCX,qword ptr [R15 + 0x48]
0000bebc(3): MOV R12,qword ptr [RAX]
0000bebf(4): MOV R14,qword ptr [RAX + 0x10]
0000bec3(5): MOV qword ptr [RSP + 0x68],RDX
0000bec8(5): MOV qword ptr [RSP + 0x70],RCX
0000becd(7): MOV EDX,dword ptr [0xa0 + R15]
0000bed4(3): TEST R12,R12
0000bed7(7): MOV qword ptr [0xb8 + R15],R14
0000bede(6): JZ 0x0000c2c0
0000bee4(5): LEA RSI,[R12 + -0x1]
0000bee9(4): MOV qword ptr [R15 + 0x48],R12
0000beed(3): MOV RDI,R15
0000bef0(5): CALL 0x00009200
0000bef5(3): CMP R12,RBP
0000bef8(3): MOV R13D,EAX
0000befb(6): JZ 0x0000c2d3
0000bf01(4): MOV RBP,qword ptr [R14 + R12*0x8]
0000bf05(3): TEST RBP,RBP
0000bf08(2): JZ 0x0000bf14
0000bf0a(4): TEST byte ptr [RBP + 0x68],0x40
0000bf0e(6): JNZ 0x0000c430
0000bf14(4): PXOR XMM0,XMM0
0000bf18(12): MOV qword ptr [0xa0 + RSP],0x0
0000bf24(8): MOVAPS xmmword ptr [0x90 + RSP],XMM0
0000bf2c(5): CMP R12,qword ptr [RSP + 0x40]
0000bf31(6): JGE 0x0000c258
0000bf37(7): MOV ECX,dword ptr [0xe0 + R15]
0000bf3e(2): TEST ECX,ECX
0000bf40(6): JS 0x0000c258
0000bf46(8): LEA RBX,[0x90 + RSP]
0000bf4e(8): LEA RAX,[0x8 + R12*0x8]
0000bf56(4): MOV qword ptr [RSP],R12
0000bf5a(9): MOV qword ptr [RSP + 0x20],0x0
0000bf63(5): MOV qword ptr [RSP + 0x8],RBX
0000bf68(8): LEA RBX,[0xb0 + RSP]
0000bf70(5): MOV qword ptr [RSP + 0x10],RAX
0000bf75(7): MOV RAX,qword ptr [0xb8 + R15]
0000bf7c(5): MOV qword ptr [RSP + 0x18],RBX
0000bf81(8): LEA RBX,[0x8c + RSP]
0000bf89(5): MOV qword ptr [RSP + 0x58],RBX
0000bf8e(5): MOV RCX,qword ptr [RSP + 0x10]
0000bf93(12): MOV qword ptr [0x98 + RSP],0x0
0000bf9f(4): MOV RSI,qword ptr [RAX + RCX*0x1]
0000bfa3(3): TEST RSI,RSI
0000bfa6(6): JZ 0x0000c368
0000bfac(5): MOV RDI,qword ptr [RSP + 0x8]
0000bfb1(4): ADD RSI,0x8
0000bfb5(5): CALL 0x00007940
0000bfba(2): TEST EAX,EAX
0000bfbc(7): MOV dword ptr [0x88 + RSP],EAX
0000bfc3(6): JNZ 0x0000c3a0
0000bfc9(3): TEST RBP,RBP
0000bfcc(6): JZ 0x0000c178
0000bfd2(5): CMP qword ptr [RBP + 0x28],0x0
0000bfd7(5): MOV RAX,qword ptr [RSP + 0x18]
0000bfdc(4): PXOR XMM0,XMM0
0000bfe0(7): MOV R12,qword ptr [0x98 + R15]
0000bfe7(11): MOV dword ptr [0x8c + RSP],0x0
0000bff2(8): MOV qword ptr [RAX + 0x10],0x0
0000bffa(3): MOVAPS xmmword ptr [RAX],XMM0
0000bffd(6): JLE 0x0000c530
0000c003(8): LEA RAX,[0xd8 + R12]
0000c00b(2): XOR EBX,EBX
0000c00d(5): MOV qword ptr [RSP + 0x28],RAX
0000c012(2): JMP 0x0000c059
0000c018(4): MOV RDX,qword ptr [RSP]
0000c01c(3): MOV RDI,R15
0000c01f(5): CALL 0x000092f0
0000c024(2): TEST AL,AL
0000c026(2): JZ 0x0000c04b
0000c028(8): LEA R13,[R14*0x8]
0000c030(5): MOV RAX,qword ptr [R12 + 0x18]
0000c035(5): MOV RDI,qword ptr [RSP + 0x8]
0000c03a(4): MOV RSI,qword ptr [RAX + R13*0x1]
0000c03e(5): CALL 0x00005ee0
0000c043(2): TEST AL,AL
0000c045(6): JZ 0x0000c388
0000c04b(4): ADD RBX,0x1
0000c04f(4): CMP RBX,qword ptr [RBP + 0x28]
0000c053(6): JGE 0x0000c3e0
0000c059(4): MOV RAX,qword ptr [RBP + 0x30]
0000c05d(4): MOV RDI,qword ptr [R12]
0000c061(4): MOV R14,qword ptr [RAX + RBX*0x8]
0000c065(3): MOV R13,R14
0000c068(4): SHL R13,0x4
0000c06c(4): LEA RSI,[RDI + R13*0x1]
0000c070(4): TEST byte ptr [RSI + 0xa],0x10
0000c074(2): JZ 0x0000c018
0000c076(4): MOV R8,qword ptr [RSP]
0000c07a(5): MOV RSI,qword ptr [RSP + 0x28]
0000c07f(3): MOV RCX,R15
0000c082(3): MOV RDX,R14
0000c085(5): CALL 0x0000bbd0
0000c08a(3): CMP EAX,0x1
0000c08d(6): JLE 0x0000c350
0000c093(2): CDQE
0000c095(4): ADD RAX,qword ptr [RSP]
0000c099(5): MOV RDX,qword ptr [R12 + 0x18]
0000c09e(8): LEA R13,[R14*0x8]
0000c0a6(4): MOV RDX,qword ptr [RDX + R14*0x8]
0000c0aa(3): MOV RCX,RAX
0000c0ad(5): MOV qword ptr [RSP + 0x38],RAX
0000c0b2(8): LEA R14,[RAX*0x8]
0000c0ba(7): MOV RAX,qword ptr [0xb8 + R15]
0000c0c1(4): MOV RSI,qword ptr [RAX + RCX*0x8]
0000c0c5(12): MOV qword ptr [0xb8 + RSP],0x0
0000c0d1(3): TEST RSI,RSI
0000c0d4(2): JZ 0x0000c0f9
0000c0d6(5): MOV RDI,qword ptr [RSP + 0x18]
0000c0db(4): ADD RSI,0x8
0000c0df(5): MOV qword ptr [RSP + 0x50],RDX
0000c0e4(5): CALL 0x00007940
0000c0e9(2): TEST EAX,EAX
0000c0eb(7): MOV dword ptr [0x8c + RSP],EAX
0000c0f2(5): MOV RDX,qword ptr [RSP + 0x50]
0000c0f7(2): JNZ 0x0000c150
0000c0f9(5): MOV RDI,qword ptr [RSP + 0x18]
0000c0fe(3): MOV RSI,RDX
0000c101(5): CALL 0x00005ee0
0000c106(2): TEST AL,AL
0000c108(6): JZ 0x0000c388
0000c10e(7): ADD R14,qword ptr [0xb8 + R15]
0000c115(5): MOV RDX,qword ptr [RSP + 0x18]
0000c11a(3): MOV RSI,R12
0000c11d(5): MOV RDI,qword ptr [RSP + 0x58]
0000c122(5): CALL 0x00008a30
0000c127(5): MOV RDX,qword ptr [RSP + 0x38]
0000c12c(3): MOV qword ptr [R14],RAX
0000c12f(7): MOV RAX,qword ptr [0xb8 + R15]
0000c136(5): CMP qword ptr [RAX + RDX*0x8],0x0
0000c13b(6): JNZ 0x0000c030
0000c141(7): MOV EDX,dword ptr [0x8c + RSP]
0000c148(2): TEST EDX,EDX
0000c14a(6): JZ 0x0000c030
0000c150(8): MOV RDI,qword ptr [0xc0 + RSP]
0000c158(5): CALL 0x00001880
0000c15d(7): MOV EAX,dword ptr [0x8c + RSP]
0000c164(2): TEST EAX,EAX
0000c166(7): MOV dword ptr [0x88 + RSP],EAX
0000c16d(6): JNZ 0x0000c3a0
0000c173(5): NOP dword ptr [RAX + RAX*0x1]
0000c178(4): MOV RAX,qword ptr [RSP]
0000c17c(9): CMP qword ptr [0x98 + RSP],0x0
0000c185(4): LEA RBX,[RAX + 0x1]
0000c189(3): MOV R12,RBX
0000c18c(2): JZ 0x0000c1e4
0000c18e(7): MOV ECX,dword ptr [0x110 + RSP]
0000c195(5): MOV RDX,qword ptr [RSP + 0x48]
0000c19a(5): MOV RSI,qword ptr [RSP + 0x8]
0000c19f(5): MOV RDI,qword ptr [RSP + 0x30]
0000c1a4(5): CALL 0x00007dd0
0000c1a9(2): TEST EAX,EAX
0000c1ab(7): MOV dword ptr [0x88 + RSP],EAX
0000c1b2(6): JNZ 0x0000c3a0
0000c1b8(8): MOV R8D,dword ptr [0x110 + RSP]
0000c1c0(5): MOV RCX,qword ptr [RSP + 0x48]
0000c1c5(3): MOV RDX,RBX
0000c1c8(5): MOV RSI,qword ptr [RSP + 0x8]
0000c1cd(3): MOV RDI,R15
0000c1d0(5): CALL 0x00008d10
0000c1d5(2): TEST EAX,EAX
0000c1d7(7): MOV dword ptr [0x88 + RSP],EAX
0000c1de(6): JNZ 0x0000c3a0
0000c1e4(7): MOV EDX,dword ptr [0xa0 + R15]
0000c1eb(4): MOV RSI,qword ptr [RSP]
0000c1ef(3): MOV RDI,R15
0000c1f2(5): CALL 0x00009200
0000c1f7(5): MOV RDX,qword ptr [RSP + 0x8]
0000c1fc(5): MOV RSI,qword ptr [RSP + 0x30]
0000c201(8): LEA RDI,[0x88 + RSP]
0000c209(2): MOV ECX,EAX
0000c20b(5): CALL 0x00008770
0000c210(3): TEST RAX,RAX
0000c213(3): MOV RBP,RAX
0000c216(6): JZ 0x0000c400
0000c21c(7): MOV RAX,qword ptr [0xb8 + R15]
0000c223(5): MOV RDX,qword ptr [RSP + 0x10]
0000c228(9): MOV qword ptr [RSP + 0x20],0x0
0000c231(4): MOV qword ptr [RAX + RDX*0x1],RBP
0000c235(5): CMP qword ptr [RSP + 0x40],RBX
0000c23a(2): JLE 0x0000c258
0000c23c(7): MOVSXD RDX,dword ptr [0xe0 + R15]
0000c243(6): ADD qword ptr [RSP + 0x10],0x8
0000c249(5): CMP RDX,qword ptr [RSP + 0x20]
0000c24e(4): MOV qword ptr [RSP],RBX
0000c252(6): JGE 0x0000bf8e
0000c258(8): MOV RDI,qword ptr [0xa0 + RSP]
0000c260(5): CALL 0x00001880
0000c265(7): MOV RAX,qword ptr [0xb8 + R15]
0000c26c(5): MOV RBX,qword ptr [RSP + 0x40]
0000c271(4): MOV RAX,qword ptr [RAX + RBX*0x8]
0000c275(3): TEST RAX,RAX
0000c278(6): JZ 0x0000c555
0000c27e(5): MOV RBX,qword ptr [RSP + 0x60]
0000c283(5): MOV RDX,qword ptr [RSP + 0x78]
0000c288(4): LEA RSI,[RAX + 0x18]
0000c28c(3): MOV qword ptr [RBX],R12
0000c28f(5): MOV RBX,qword ptr [RSP + 0x68]
0000c294(7): MOV qword ptr [0xb8 + R15],RBX
0000c29b(5): MOV RBX,qword ptr [RSP + 0x70]
0000c2a0(4): MOV qword ptr [R15 + 0x48],RBX
0000c2a4(4): MOV RDI,qword ptr [RAX + 0x10]
0000c2a8(5): CALL 0x00007420
0000c2ad(3): TEST RAX,RAX
0000c2b0(3): SETZ AL
0000c2b3(3): MOVZX EAX,AL
0000c2b6(5): JMP 0x0000c3b4
0000c2c0(4): LEA RSI,[RBP + -0x1]
0000c2c4(4): MOV qword ptr [R15 + 0x48],RBP
0000c2c8(3): MOV RDI,R15
0000c2cb(5): CALL 0x00009200
0000c2d0(3): MOV R13D,EAX
0000c2d3(5): MOV EDI,0x8
0000c2d8(12): MOV qword ptr [0x90 + RSP],0x1
0000c2e4(12): MOV qword ptr [0x98 + RSP],0x1
0000c2f0(5): CALL 0x00001ac0
0000c2f5(3): TEST RAX,RAX
0000c2f8(8): MOV qword ptr [0xa0 + RSP],RAX
0000c300(6): JZ 0x0000c54b
0000c306(3): MOV qword ptr [RAX],RBX
0000c309(7): MOV ECX,dword ptr [0x110 + RSP]
0000c310(8): LEA RBX,[0x90 + RSP]
0000c318(5): MOV RDX,qword ptr [RSP + 0x48]
0000c31d(5): MOV RDI,qword ptr [RSP + 0x30]
0000c322(3): MOV R12,RBP
0000c325(3): MOV RSI,RBX
0000c328(11): MOV dword ptr [0x88 + RSP],0x0
0000c333(5): CALL 0x00007dd0
0000c338(2): TEST EAX,EAX
0000c33a(7): MOV dword ptr [0x88 + RSP],EAX
0000c341(6): JZ 0x0000c45d
0000c347(2): JMP 0x0000c3a0
0000c350(2): TEST EAX,EAX
0000c352(6): JNZ 0x0000c028
0000c358(4): MOV RSI,qword ptr [R12]
0000c35c(3): ADD RSI,R13
0000c35f(5): JMP 0x0000c018
0000c368(3): TEST RBP,RBP
0000c36b(6): JNZ 0x0000bfd2
0000c371(4): MOV RAX,qword ptr [RSP]
0000c375(4): LEA RBX,[RAX + 0x1]
0000c379(3): MOV R12,RBX
0000c37c(5): JMP 0x0000c1e4
0000c388(8): MOV RDI,qword ptr [0xc0 + RSP]
0000c390(5): CALL 0x00001880
0000c395(11): MOV dword ptr [0x88 + RSP],0xc
0000c3a0(8): MOV RDI,qword ptr [0xa0 + RSP]
0000c3a8(5): CALL 0x00001880
0000c3ad(7): MOV EAX,dword ptr [0x88 + RSP]
0000c3b4(8): MOV RBX,qword ptr [0xc8 + RSP]
0000c3bc(9): XOR RBX,qword ptr FS:[0x28]
0000c3c5(6): JNZ 0x0000c57c
0000c3cb(7): ADD RSP,0xd8
0000c3d2(1): POP RBX
0000c3d3(1): POP RBP
0000c3d4(2): POP R12
0000c3d6(2): POP R13
0000c3d8(2): POP R14
0000c3da(2): POP R15
0000c3dc(1): RET
0000c3e0(8): MOV RDI,qword ptr [0xc0 + RSP]
0000c3e8(5): CALL 0x00001880
0000c3ed(11): MOV dword ptr [0x88 + RSP],0x0
0000c3f8(5): JMP 0x0000c178
0000c400(7): MOV EAX,dword ptr [0x88 + RSP]
0000c407(2): TEST EAX,EAX
0000c409(2): JNZ 0x0000c3a0
0000c40b(7): MOV RAX,qword ptr [0xb8 + R15]
0000c412(5): MOV RDX,qword ptr [RSP + 0x10]
0000c417(6): ADD qword ptr [RSP + 0x20],0x1
0000c41d(8): MOV qword ptr [RAX + RDX*0x1],0x0
0000c425(5): JMP 0x0000c235
0000c430(8): LEA RBX,[0x90 + RSP]
0000c438(4): LEA RSI,[RBP + 0x8]
0000c43c(3): MOV RDI,RBX
0000c43f(5): CALL 0x00008580
0000c444(2): TEST EAX,EAX
0000c446(7): MOV dword ptr [0x88 + RSP],EAX
0000c44d(6): JNZ 0x0000c3b4
0000c453(4): TEST byte ptr [RBP + 0x68],0x40
0000c457(6): JZ 0x0000bf2c
0000c45d(9): CMP qword ptr [0x98 + RSP],0x0
0000c466(2): JZ 0x0000c492
0000c468(8): MOV R8D,dword ptr [0x110 + RSP]
0000c470(5): MOV RCX,qword ptr [RSP + 0x48]
0000c475(3): MOV RDX,R12
0000c478(3): MOV RSI,RBX
0000c47b(3): MOV RDI,R15
0000c47e(5): CALL 0x00008d10
0000c483(2): TEST EAX,EAX
0000c485(7): MOV dword ptr [0x88 + RSP],EAX
0000c48c(6): JNZ 0x0000c3a0
0000c492(5): MOV RSI,qword ptr [RSP + 0x30]
0000c497(8): LEA RDI,[0x88 + RSP]
0000c49f(3): MOV ECX,R13D
0000c4a2(3): MOV RDX,RBX
0000c4a5(5): CALL 0x00008770
0000c4aa(3): TEST RAX,RAX
0000c4ad(3): MOV RBP,RAX
0000c4b0(6): JZ 0x0000c537
0000c4b6(7): MOV RAX,qword ptr [0xb8 + R15]
0000c4bd(4): MOV qword ptr [RAX + R12*0x8],RBP
0000c4c1(5): JMP 0x0000bf2c
0000c4c6(4): LEA R12,[RAX + 0x1]
0000c4ca(10): MOV RAX,0x7fffffffffffffff
0000c4d4(3): SUB RAX,R13
0000c4d7(3): CMP RAX,R12
0000c4da(2): JL 0x0000c54b
0000c4dc(5): LEA R14,[R13 + R12*0x1]
0000c4e1(10): MOV RAX,0x1fffffffffffffff
0000c4eb(3): CMP R14,RAX
0000c4ee(2): JA 0x0000c54b
0000c4f0(5): MOV RAX,qword ptr [RSP + 0x60]
0000c4f5(8): LEA RSI,[R14*0x8]
0000c4fd(4): MOV RDI,qword ptr [RAX + 0x10]
0000c501(5): CALL 0x00001b30
0000c506(3): TEST RAX,RAX
0000c509(2): JZ 0x0000c54b
0000c50b(5): MOV RCX,qword ptr [RSP + 0x60]
0000c510(8): LEA RDX,[R12*0x8]
0000c518(4): LEA RDI,[RAX + R13*0x8]
0000c51c(2): XOR ESI,ESI
0000c51e(4): MOV qword ptr [RCX + 0x10],RAX
0000c522(4): MOV qword ptr [RCX + 0x8],R14
0000c526(5): CALL 0x00001a10
0000c52b(5): JMP 0x0000beac
0000c530(2): XOR EDI,EDI
0000c532(5): JMP 0x0000c3e8
0000c537(7): MOV ESI,dword ptr [0x88 + RSP]
0000c53e(2): TEST ESI,ESI
0000c540(6): JZ 0x0000c4b6
0000c546(5): JMP 0x0000c3a0
0000c54b(5): MOV EAX,0xc
0000c550(5): JMP 0x0000c3b4
0000c555(5): MOV RAX,qword ptr [RSP + 0x60]
0000c55a(3): MOV qword ptr [RAX],R12
0000c55d(5): MOV RAX,qword ptr [RSP + 0x68]
0000c562(7): MOV qword ptr [0xb8 + R15],RAX
0000c569(5): MOV RAX,qword ptr [RSP + 0x70]
0000c56e(4): MOV qword ptr [R15 + 0x48],RAX
0000c572(5): MOV EAX,0x1
0000c577(5): JMP 0x0000c3b4
0000c57c(5): CALL 0x00001990
0000c581(5): NOP dword ptr [RAX + RAX*0x1]
0000c586(10): NOP word ptr CS:[RAX + RAX*0x1]
0000c590(1): PUSH RBP
0000c591(3): MOV RBP,RSP
0000c594(2): PUSH R15
0000c596(2): PUSH R14
0000c598(2): PUSH R13
0000c59a(2): PUSH R12
0000c59c(3): MOV R13,RCX
0000c59f(1): PUSH RBX
0000c5a0(3): MOV R12,RSI
0000c5a3(7): SUB RSP,0xb8
0000c5aa(7): MOV qword ptr [-0x98 + RBP],RDX
0000c5b1(8): MOV qword ptr [RBP + -0x50],0x0
0000c5b9(9): MOV RAX,qword ptr FS:[0x28]
0000c5c2(4): MOV qword ptr [RBP + -0x38],RAX
0000c5c6(2): XOR EAX,EAX
0000c5c8(3): MOV RAX,qword ptr [RDI]
0000c5cb(3): TEST R8B,R8B
0000c5ce(8): MOV qword ptr [RBP + -0x48],0x2
0000c5d6(8): MOV qword ptr [RBP + -0x40],0x0
0000c5de(7): MOV qword ptr [-0x90 + RBP],RAX
0000c5e5(6): JZ 0x0000cd8d
0000c5eb(5): MOV EDI,0x60
0000c5f0(5): CALL 0x00001ac0
0000c5f5(4): LEA RCX,[RBP + -0x50]
0000c5f9(3): TEST RAX,RAX
0000c5fc(4): MOV qword ptr [RBP + -0x40],RAX
0000c600(7): MOV qword ptr [-0x88 + RBP],RCX
0000c607(6): JZ 0x0000cd2c
0000c60d(7): MOV RAX,qword ptr [-0x90 + RBP]
0000c614(4): PXOR XMM0,XMM0
0000c618(8): MOV qword ptr [RBP + -0x60],0x0
0000c620(7): MOV RBX,qword ptr [0x90 + RAX]
0000c627(7): MOV RAX,qword ptr [-0x98 + RBP]
0000c62e(4): MOVAPS xmmword ptr [RBP + -0x70],XMM0
0000c632(4): SHL RAX,0x4
0000c636(6): CMP RAX,0xfbf
0000c63c(7): MOV qword ptr [-0xb8 + RBP],RAX
0000c643(6): JA 0x0000cd36
0000c649(4): ADD RAX,0x10
0000c64d(7): MOV byte ptr [-0xc9 + RBP],0x0
0000c654(3): SUB RSP,RAX
0000c657(5): LEA RAX,[RSP + 0xf]
0000c65c(4): AND RAX,-0x10
0000c660(7): MOV qword ptr [-0xc0 + RBP],RAX
0000c667(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000c66e(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000c675(3): MOV RSI,R13
0000c678(5): CALL 0x00001a90
0000c67d(4): LEA RAX,[RBP + -0x70]
0000c681(4): MOV RCX,qword ptr [R13]
0000c685(7): MOV qword ptr [-0xa8 + RBP],RAX
0000c68c(4): ADD RAX,0x10
0000c690(4): MOV qword ptr [RBP + -0x78],RCX
0000c694(7): MOV qword ptr [-0xc8 + RBP],RAX
0000c69b(4): LEA RAX,[RBP + -0x78]
0000c69f(7): MOV qword ptr [-0xb0 + RBP],RAX
0000c6a6(5): JMP 0x0000c789
0000c6b0(3): CMP ESI,0x9
0000c6b3(6): JZ 0x0000c8a0
0000c6b9(3): CMP RAX,RCX
0000c6bc(2): JNZ 0x0000c6cc
0000c6be(8): CMP qword ptr [0xb0 + R12],RBX
0000c6c6(6): JZ 0x0000caa0
0000c6cc(8): MOV R14,qword ptr [0x98 + R12]
0000c6d4(3): MOV RDI,qword ptr [R14]
0000c6d7(4): LEA RSI,[RDI + R9*0x1]
0000c6db(4): MOVZX EAX,byte ptr [RSI + 0x8]
0000c6df(2): TEST AL,0x8
0000c6e1(6): JNZ 0x0000c7f0
0000c6e7(4): TEST byte ptr [RSI + 0xa],0x10
0000c6eb(6): JNZ 0x0000c8f0
0000c6f1(2): CMP AL,0x4
0000c6f3(6): JZ 0x0000c930
0000c6f9(4): MOV RCX,qword ptr [RBP + -0x78]
0000c6fd(3): MOV RDX,RCX
0000c700(3): MOV RDI,R12
0000c703(7): MOV qword ptr [-0xa0 + RBP],RCX
0000c70a(5): CALL 0x000092f0
0000c70f(2): TEST AL,AL
0000c711(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000c718(6): JZ 0x0000cb68
0000c71e(4): MOV RAX,qword ptr [R14 + 0x18]
0000c722(4): LEA RDX,[RCX + 0x1]
0000c726(4): MOV RBX,qword ptr [RAX + R15*0x8]
0000c72a(8): CMP qword ptr [-0x88 + RBP],0x0
0000c732(4): MOV qword ptr [RBP + -0x78],RDX
0000c736(2): JZ 0x0000c774
0000c738(8): CMP RDX,qword ptr [0xa8 + R12]
0000c740(6): JG 0x0000cb76
0000c746(8): MOV RAX,qword ptr [0xb8 + R12]
0000c74e(4): MOV RAX,qword ptr [RAX + RDX*0x8]
0000c752(3): TEST RAX,RAX
0000c755(6): JZ 0x0000cb76
0000c75b(4): MOV RDI,qword ptr [RAX + 0x10]
0000c75f(4): LEA RSI,[RAX + 0x18]
0000c763(3): MOV RDX,RBX
0000c766(5): CALL 0x00007420
0000c76b(3): TEST RAX,RAX
0000c76e(6): JZ 0x0000cb76
0000c774(8): MOV qword ptr [RBP + -0x68],0x0
0000c77c(3): TEST RBX,RBX
0000c77f(6): JS 0x0000cb5a
0000c785(4): MOV RCX,qword ptr [RBP + -0x78]
0000c789(4): MOV RAX,qword ptr [R13 + 0x8]
0000c78d(3): CMP RAX,RCX
0000c790(6): JL 0x0000cc80
0000c796(7): MOV RDI,qword ptr [-0x90 + RBP]
0000c79d(3): MOV R9,RBX
0000c7a0(3): MOV R15,RBX
0000c7a3(4): SHL R9,0x4
0000c7a7(3): MOV RDX,qword ptr [RDI]
0000c7aa(3): ADD RDX,R9
0000c7ad(4): MOVZX ESI,byte ptr [RDX + 0x8]
0000c7b1(3): CMP ESI,0x8
0000c7b4(6): JNZ 0x0000c6b0
0000c7ba(3): MOV RDX,qword ptr [RDX]
0000c7bd(4): ADD RDX,0x1
0000c7c1(7): CMP qword ptr [-0x98 + RBP],RDX
0000c7c8(6): JLE 0x0000c6b9
0000c7ce(4): SHL RDX,0x4
0000c7d2(3): ADD RDX,R13
0000c7d5(8): MOV qword ptr [RDX + 0x8],-0x1
0000c7dd(3): MOV qword ptr [RDX],RCX
0000c7e0(4): MOV RAX,qword ptr [R13 + 0x8]
0000c7e4(5): JMP 0x0000c6b9
0000c7f0(8): MOV RAX,qword ptr [0xb8 + R12]
0000c7f8(4): MOV RDX,qword ptr [RBP + -0x78]
0000c7fc(3): MOV RSI,RBX
0000c7ff(7): MOV RDI,qword ptr [-0xa8 + RBP]
0000c806(4): MOV R9,qword ptr [RAX + RDX*0x8]
0000c80a(4): MOV RAX,qword ptr [R14 + 0x28]
0000c80e(4): LEA RDX,[RBX + RBX*0x2]
0000c812(7): MOV qword ptr [-0xa0 + RBP],R9
0000c819(4): LEA R15,[RAX + RDX*0x8]
0000c81d(5): CALL 0x00005ee0
0000c822(2): TEST AL,AL
0000c824(7): MOV R9,qword ptr [-0xa0 + RBP]
0000c82b(6): JZ 0x0000cd08
0000c831(4): MOV R10,qword ptr [R15 + 0x8]
0000c835(3): TEST R10,R10
0000c838(6): JLE 0x0000cb68
0000c83e(4): MOV R15,qword ptr [R15 + 0x10]
0000c842(4): MOV R11,qword ptr [R9 + 0x10]
0000c846(4): LEA R14,[R9 + 0x18]
0000c84a(7): MOV RBX,-0x1
0000c851(3): XOR R9D,R9D
0000c854(7): MOV qword ptr [-0xa0 + RBP],R12
0000c85b(5): NOP dword ptr [RAX + RAX*0x1]
0000c860(4): MOV R12,qword ptr [R15 + R9*0x8]
0000c864(3): MOV RSI,R14
0000c867(3): MOV RDI,R11
0000c86a(3): MOV RDX,R12
0000c86d(5): CALL 0x00007420
0000c872(3): TEST RAX,RAX
0000c875(2): JZ 0x0000c884
0000c877(4): CMP RBX,-0x1
0000c87b(6): JNZ 0x0000c9d0
0000c881(3): MOV RBX,R12
0000c884(4): ADD R9,0x1
0000c888(3): CMP R10,R9
0000c88b(2): JNZ 0x0000c860
0000c88d(7): MOV R12,qword ptr [-0xa0 + RBP]
0000c894(5): JMP 0x0000c77c
0000c8a0(3): MOV RDI,qword ptr [RDX]
0000c8a3(4): LEA RSI,[RDI + 0x1]
0000c8a7(7): CMP qword ptr [-0x98 + RBP],RSI
0000c8ae(6): JLE 0x0000c6b9
0000c8b4(4): SHL RSI,0x4
0000c8b8(5): LEA RAX,[R13 + RSI*0x1]
0000c8bd(3): CMP qword ptr [RAX],RCX
0000c8c0(6): JL 0x0000cc40
0000c8c6(4): TEST byte ptr [RDX + 0xa],0x8
0000c8ca(2): JZ 0x0000c8de
0000c8cc(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000c8d3(5): CMP qword ptr [RDI + RSI*0x1],-0x1
0000c8d8(6): JNZ 0x0000cccb
0000c8de(4): MOV qword ptr [RAX + 0x8],RCX
0000c8e2(4): MOV RAX,qword ptr [R13 + 0x8]
0000c8e6(5): JMP 0x0000c6b9
0000c8f0(4): MOV R8,qword ptr [RBP + -0x78]
0000c8f4(7): LEA RSI,[0xd8 + R14]
0000c8fb(3): MOV RCX,R12
0000c8fe(3): MOV RDX,RBX
0000c901(7): MOV qword ptr [-0xa0 + RBP],R9
0000c908(5): CALL 0x0000bbd0
0000c90d(3): MOVSXD RCX,EAX
0000c910(3): TEST RCX,RCX
0000c913(6): JNZ 0x0000cb11
0000c919(7): MOV R9,qword ptr [-0xa0 + RBP]
0000c920(3): MOV RSI,qword ptr [R14]
0000c923(4): MOV RCX,qword ptr [RBP + -0x78]
0000c927(3): ADD RSI,R9
0000c92a(5): JMP 0x0000c6fd
0000c930(3): MOV RAX,qword ptr [RSI]
0000c933(4): ADD RAX,0x1
0000c937(4): SHL RAX,0x4
0000c93b(3): ADD RAX,R13
0000c93e(4): MOV RDX,qword ptr [RAX + 0x8]
0000c942(3): MOV RDI,qword ptr [RAX]
0000c945(3): MOV RCX,RDX
0000c948(3): SUB RCX,RDI
0000c94b(8): CMP qword ptr [-0x88 + RBP],0x0
0000c953(6): JZ 0x0000cb08
0000c959(4): CMP RDI,-0x1
0000c95d(6): JZ 0x0000cb76
0000c963(4): CMP RDX,-0x1
0000c967(6): JZ 0x0000cb76
0000c96d(3): TEST RCX,RCX
0000c970(6): JZ 0x0000cbc0
0000c976(4): MOV R15,qword ptr [RBP + -0x78]
0000c97a(5): MOV RDX,qword ptr [R12 + 0x30]
0000c97f(5): MOV RAX,qword ptr [R12 + 0x8]
0000c984(3): SUB RDX,R15
0000c987(3): CMP RCX,RDX
0000c98a(6): JG 0x0000cb76
0000c990(4): LEA RSI,[RAX + R15*0x1]
0000c994(3): ADD RDI,RAX
0000c997(3): MOV RDX,RCX
0000c99a(7): MOV qword ptr [-0xa0 + RBP],RCX
0000c9a1(5): CALL 0x00001a40
0000c9a6(2): TEST EAX,EAX
0000c9a8(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000c9af(6): JNZ 0x0000cb76
0000c9b5(4): MOV RAX,qword ptr [R14 + 0x18]
0000c9b9(4): LEA RDX,[R15 + RCX*0x1]
0000c9bd(4): MOV RBX,qword ptr [RAX + RBX*0x8]
0000c9c1(5): JMP 0x0000c72a
0000c9d0(7): MOV RSI,qword ptr [-0xc8 + RBP]
0000c9d7(4): MOV RDI,qword ptr [RBP + -0x68]
0000c9db(3): MOV RDX,RBX
0000c9de(3): MOV R14,R12
0000c9e1(7): MOV R12,qword ptr [-0xa0 + RBP]
0000c9e8(5): CALL 0x00007420
0000c9ed(3): TEST RAX,RAX
0000c9f0(6): JNZ 0x0000cbb0
0000c9f6(7): MOV RCX,qword ptr [-0x88 + RBP]
0000c9fd(3): TEST RCX,RCX
0000ca00(6): JZ 0x0000c77c
0000ca06(3): MOV R15,qword ptr [RCX]
0000ca09(4): MOV RDX,qword ptr [RBP + -0x78]
0000ca0d(4): LEA RAX,[R15 + 0x1]
0000ca11(4): CMP RAX,qword ptr [RCX + 0x8]
0000ca15(3): MOV qword ptr [RCX],RAX
0000ca18(6): JZ 0x0000cd9d
0000ca1e(4): MOV RAX,qword ptr [RCX + 0x10]
0000ca22(4): LEA R15,[R15 + R15*0x2]
0000ca26(4): SHL R15,0x4
0000ca2a(3): ADD R15,RAX
0000ca2d(4): MOV qword ptr [R15 + 0x8],R14
0000ca31(7): MOV R14,qword ptr [-0xb8 + RBP]
0000ca38(3): MOV qword ptr [R15],RDX
0000ca3b(3): MOV RDI,R14
0000ca3e(5): CALL 0x00001ac0
0000ca43(3): TEST RAX,RAX
0000ca46(4): MOV qword ptr [R15 + 0x10],RAX
0000ca4a(2): JZ 0x0000ca72
0000ca4c(3): MOV RDX,R14
0000ca4f(3): MOV RSI,R13
0000ca52(3): MOV RDI,RAX
0000ca55(5): CALL 0x00001a90
0000ca5a(7): MOV RSI,qword ptr [-0xa8 + RBP]
0000ca61(4): LEA RDI,[R15 + 0x18]
0000ca65(5): CALL 0x00008580
0000ca6a(2): TEST EAX,EAX
0000ca6c(6): JZ 0x0000c77c
0000ca72(4): MOV RDI,qword ptr [RBP + -0x60]
0000ca76(5): CALL 0x00001880
0000ca7b(7): CMP byte ptr [-0xc9 + RBP],0x0
0000ca82(6): JNZ 0x0000ce1b
0000ca88(7): MOV RDI,qword ptr [-0x88 + RBP]
0000ca8f(5): CALL 0x0000aae0
0000ca94(5): MOV EAX,0xc
0000ca99(5): JMP 0x0000cca9
0000caa0(8): CMP qword ptr [-0x88 + RBP],0x0
0000caa8(6): JZ 0x0000cddc
0000caae(7): MOV RCX,qword ptr [-0x98 + RBP]
0000cab5(3): TEST RCX,RCX
0000cab8(2): JZ 0x0000cada
0000caba(3): MOV RAX,R13
0000cabd(2): XOR EDX,EDX
0000cabf(1): NOP
0000cac0(4): CMP qword ptr [RAX],0x0
0000cac4(2): JS 0x0000cacd
0000cac6(5): CMP qword ptr [RAX + 0x8],-0x1
0000cacb(2): JZ 0x0000cb20
0000cacd(4): ADD RDX,0x1
0000cad1(4): ADD RAX,0x10
0000cad5(3): CMP RCX,RDX
0000cad8(2): JNZ 0x0000cac0
0000cada(4): MOV RDI,qword ptr [RBP + -0x60]
0000cade(5): CALL 0x00001880
0000cae3(7): CMP byte ptr [-0xc9 + RBP],0x0
0000caea(6): JNZ 0x0000ce64
0000caf0(7): MOV RDI,qword ptr [-0x88 + RBP]
0000caf7(5): CALL 0x0000aae0
0000cafc(2): XOR EAX,EAX
0000cafe(5): JMP 0x0000cca9
0000cb08(3): TEST RCX,RCX
0000cb0b(6): JZ 0x0000cbc0
0000cb11(4): MOV R15,qword ptr [RBP + -0x78]
0000cb15(5): JMP 0x0000c9b5
0000cb20(7): MOV RDI,qword ptr [-0x88 + RBP]
0000cb27(7): MOV R9,qword ptr [-0xa8 + RBP]
0000cb2e(3): MOV R8,R13
0000cb31(7): MOV RCX,qword ptr [-0x98 + RBP]
0000cb38(7): MOV RDX,qword ptr [-0xb0 + RBP]
0000cb3f(4): LEA RSI,[RDI + 0x10]
0000cb43(5): CALL 0x0000ab30
0000cb48(3): MOV R9,RAX
0000cb4b(3): MOV RBX,RAX
0000cb4e(3): MOV R15,RAX
0000cb51(4): SHL R9,0x4
0000cb55(5): JMP 0x0000c6cc
0000cb5a(4): CMP RBX,-0x2
0000cb5e(6): JZ 0x0000cd08
0000cb64(4): NOP dword ptr [RAX]
0000cb68(8): CMP qword ptr [-0x88 + RBP],0x0
0000cb70(6): JZ 0x0000ce2c
0000cb76(7): MOV RDI,qword ptr [-0x88 + RBP]
0000cb7d(7): MOV RCX,qword ptr [-0x98 + RBP]
0000cb84(4): LEA RDX,[RBP + -0x78]
0000cb88(7): MOV R9,qword ptr [-0xa8 + RBP]
0000cb8f(3): MOV R8,R13
0000cb92(4): LEA RSI,[RDI + 0x10]
0000cb96(5): CALL 0x0000ab30
0000cb9b(4): MOV RCX,qword ptr [RBP + -0x78]
0000cb9f(3): MOV RBX,RAX
0000cba2(5): JMP 0x0000c69b
0000cbb0(3): MOV RBX,R14
0000cbb3(5): JMP 0x0000c77c
0000cbc0(7): MOV RDI,qword ptr [-0xa8 + RBP]
0000cbc7(3): MOV RSI,RBX
0000cbca(7): MOV qword ptr [-0xa0 + RBP],R9
0000cbd1(5): CALL 0x00005ee0
0000cbd6(2): TEST AL,AL
0000cbd8(6): JZ 0x0000cd08
0000cbde(4): MOV RDX,qword ptr [R14 + 0x28]
0000cbe2(4): LEA RAX,[RBX + RBX*0x2]
0000cbe6(4): MOV RCX,qword ptr [RBP + -0x78]
0000cbea(4): LEA RAX,[RDX + RAX*0x8]
0000cbee(7): MOV qword ptr [-0xd8 + RBP],RCX
0000cbf5(4): MOV RAX,qword ptr [RAX + 0x10]
0000cbf9(3): MOV RBX,qword ptr [RAX]
0000cbfc(8): MOV RAX,qword ptr [0xb8 + R12]
0000cc04(4): MOV RAX,qword ptr [RAX + RCX*0x8]
0000cc08(3): MOV RDX,RBX
0000cc0b(4): MOV RDI,qword ptr [RAX + 0x10]
0000cc0f(4): LEA RSI,[RAX + 0x18]
0000cc13(5): CALL 0x00007420
0000cc18(3): TEST RAX,RAX
0000cc1b(6): JNZ 0x0000c77c
0000cc21(7): MOV R9,qword ptr [-0xa0 + RBP]
0000cc28(3): MOV RSI,qword ptr [R14]
0000cc2b(7): MOV RCX,qword ptr [-0xd8 + RBP]
0000cc32(3): ADD RSI,R9
0000cc35(5): JMP 0x0000c6fd
0000cc40(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000cc47(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000cc4e(3): MOV RSI,R13
0000cc51(4): MOV qword ptr [RAX + 0x8],RCX
0000cc55(7): MOV qword ptr [-0xd8 + RBP],R9
0000cc5c(7): MOV qword ptr [-0xa0 + RBP],RCX
0000cc63(5): CALL 0x00001a90
0000cc68(4): MOV RAX,qword ptr [R13 + 0x8]
0000cc6c(7): MOV RCX,qword ptr [-0xa0 + RBP]
0000cc73(7): MOV R9,qword ptr [-0xd8 + RBP]
0000cc7a(5): JMP 0x0000c6b9
0000cc80(4): MOV RDI,qword ptr [RBP + -0x60]
0000cc84(5): CALL 0x00001880
0000cc89(7): CMP byte ptr [-0xc9 + RBP],0x0
0000cc90(6): JNZ 0x0000cd6c
0000cc96(7): MOV RDI,qword ptr [-0x88 + RBP]
0000cc9d(3): TEST RDI,RDI
0000cca0(2): JZ 0x0000cca7
0000cca2(5): CALL 0x0000aae0
0000cca7(2): XOR EAX,EAX
0000cca9(4): MOV RBX,qword ptr [RBP + -0x38]
0000ccad(9): XOR RBX,qword ptr FS:[0x28]
0000ccb6(6): JNZ 0x0000ce75
0000ccbc(4): LEA RSP,[RBP + -0x28]
0000ccc0(1): POP RBX
0000ccc1(2): POP R12
0000ccc3(2): POP R13
0000ccc5(2): POP R14
0000ccc7(2): POP R15
0000ccc9(1): POP RBP
0000ccca(1): RET
0000cccb(7): MOV RDX,qword ptr [-0xb8 + RBP]
0000ccd2(3): MOV RSI,RDI
0000ccd5(3): MOV RDI,R13
0000ccd8(7): MOV qword ptr [-0xd8 + RBP],RCX
0000ccdf(7): MOV qword ptr [-0xa0 + RBP],R9
0000cce6(5): CALL 0x00001a90
0000cceb(4): MOV RAX,qword ptr [R13 + 0x8]
0000ccef(7): MOV R9,qword ptr [-0xa0 + RBP]
0000ccf6(7): MOV RCX,qword ptr [-0xd8 + RBP]
0000ccfd(5): JMP 0x0000c6b9
0000cd08(4): MOV RDI,qword ptr [RBP + -0x60]
0000cd0c(5): CALL 0x00001880
0000cd11(7): CMP byte ptr [-0xc9 + RBP],0x0
0000cd18(6): JNZ 0x0000ce1b
0000cd1e(8): CMP qword ptr [-0x88 + RBP],0x0
0000cd26(6): JNZ 0x0000ca88
0000cd2c(5): MOV EAX,0xc
0000cd31(5): JMP 0x0000cca9
0000cd36(7): MOV RDI,qword ptr [-0xb8 + RBP]
0000cd3d(5): CALL 0x00001ac0
0000cd42(3): TEST RAX,RAX
0000cd45(7): MOV qword ptr [-0xc0 + RBP],RAX
0000cd4c(7): MOV byte ptr [-0xc9 + RBP],0x1
0000cd53(6): JNZ 0x0000c667
0000cd59(7): MOV RDI,qword ptr [-0x88 + RBP]
0000cd60(3): TEST RDI,RDI
0000cd63(2): JZ 0x0000cd2c
0000cd65(5): CALL 0x0000aae0
0000cd6a(2): JMP 0x0000cd2c
0000cd6c(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000cd73(5): CALL 0x00001880
0000cd78(7): MOV RDI,qword ptr [-0x88 + RBP]
0000cd7f(3): TEST RDI,RDI
0000cd82(6): JNZ 0x0000cca2
0000cd88(5): JMP 0x0000cca7
0000cd8d(11): MOV qword ptr [-0x88 + RBP],0x0
0000cd98(5): JMP 0x0000c60d
0000cd9d(4): LEA RSI,[RAX + RAX*0x2]
0000cda1(7): MOV RAX,qword ptr [-0x88 + RBP]
0000cda8(7): MOV qword ptr [-0xa0 + RBP],RDX
0000cdaf(4): SHL RSI,0x5
0000cdb3(4): MOV RDI,qword ptr [RAX + 0x10]
0000cdb7(5): CALL 0x00001b30
0000cdbc(3): TEST RAX,RAX
0000cdbf(2): JZ 0x0000ce05
0000cdc1(7): MOV RCX,qword ptr [-0x88 + RBP]
0000cdc8(7): MOV RDX,qword ptr [-0xa0 + RBP]
0000cdcf(4): SHL qword ptr [RCX + 0x8],1
0000cdd3(4): MOV qword ptr [RCX + 0x10],RAX
0000cdd7(5): JMP 0x0000ca22
0000cddc(4): MOV RDI,qword ptr [RBP + -0x60]
0000cde0(5): CALL 0x00001880
0000cde5(7): CMP byte ptr [-0xc9 + RBP],0x0
0000cdec(6): JZ 0x0000cca7
0000cdf2(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000cdf9(5): CALL 0x00001880
0000cdfe(2): XOR EAX,EAX
0000ce00(5): JMP 0x0000cca9
0000ce05(4): MOV RDI,qword ptr [RBP + -0x60]
0000ce09(5): CALL 0x00001880
0000ce0e(7): CMP byte ptr [-0xc9 + RBP],0x0
0000ce15(6): JZ 0x0000ca88
0000ce1b(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000ce22(5): CALL 0x00001880
0000ce27(5): JMP 0x0000cd1e
0000ce2c(4): MOV RDI,qword ptr [RBP + -0x60]
0000ce30(5): CALL 0x00001880
0000ce35(7): CMP byte ptr [-0xc9 + RBP],0x0
0000ce3c(5): MOV EAX,0x1
0000ce41(6): JZ 0x0000cca9
0000ce47(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000ce4e(6): MOV dword ptr [-0x88 + RBP],EAX
0000ce54(5): CALL 0x00001880
0000ce59(6): MOV EAX,dword ptr [-0x88 + RBP]
0000ce5f(5): JMP 0x0000cca9
0000ce64(7): MOV RDI,qword ptr [-0xc0 + RBP]
0000ce6b(5): CALL 0x00001880
0000ce70(5): JMP 0x0000caf0
0000ce75(5): CALL 0x00001990
0000ce7a(6): NOP word ptr [RAX + RAX*0x1]
0000ce80(2): PUSH R15
0000ce82(2): PUSH R14
0000ce84(3): MOV R14,RCX
0000ce87(2): PUSH R13
0000ce89(2): PUSH R12
0000ce8b(3): MOV R13,RSI
0000ce8e(1): PUSH RBP
0000ce8f(1): PUSH RBX
0000ce90(4): LEA RSI,[RDX + 0x10]
0000ce94(3): MOV RBP,RDX
0000ce97(3): MOV R9,R8
0000ce9a(3): MOV R12,R8
0000ce9d(4): SUB RSP,0x20
0000cea1(4): MOV RCX,qword ptr [RDX + 0x8]
0000cea5(3): MOV R8,R14
0000cea8(2): PUSH 0x8
0000ceaa(3): MOV RDX,qword ptr [RDX]
0000cead(3): MOV RBX,RDI
0000ceb0(5): CALL 0x0000be30
0000ceb5(2): TEST EAX,EAX
0000ceb7(1): POP RDX
0000ceb8(1): POP RCX
0000ceb9(2): JZ 0x0000ced0
0000cebb(4): ADD RSP,0x18
0000cebf(1): POP RBX
0000cec0(1): POP RBP
0000cec1(2): POP R12
0000cec3(2): POP R13
0000cec5(2): POP R14
0000cec7(2): POP R15
0000cec9(1): RET
0000ced0(7): MOV RAX,qword ptr [0xc8 + RBX]
0000ced7(7): MOV RDX,qword ptr [0xd0 + RBX]
0000cede(4): MOV R15,qword ptr [RBP + 0x8]
0000cee2(4): MOV RCX,qword ptr [R13]
0000cee6(7): MOV RDI,qword ptr [0xd8 + RBX]
0000ceed(3): CMP RAX,RDX
0000cef0(3): MOV RSI,R15
0000cef3(6): JGE 0x0000cf90
0000cef9(4): LEA RDX,[RAX + RAX*0x4]
0000cefd(4): SHL RDX,0x3
0000cf01(3): TEST RAX,RAX
0000cf04(2): JLE 0x0000cf11
0000cf06(5): LEA R8,[RDI + RDX*0x1 + -0x28]
0000cf0b(4): CMP R12,qword ptr [R8 + 0x8]
0000cf0f(2): JZ 0x0000cf80
0000cf11(3): ADD RDI,RDX
0000cf14(2): XOR EDX,EDX
0000cf16(3): CMP R15,RCX
0000cf19(3): SETZ DL
0000cf1c(4): ADD RAX,0x1
0000cf20(3): MOV qword ptr [RDI],R14
0000cf23(2): NEG EDX
0000cf25(4): MOV qword ptr [RDI + 0x8],R12
0000cf29(4): MOV qword ptr [RDI + 0x10],RCX
0000cf2d(4): MOV word ptr [RDI + 0x22],DX
0000cf31(4): MOV qword ptr [RDI + 0x18],R15
0000cf35(7): MOV qword ptr [0xc8 + RBX],RAX
0000cf3c(4): MOV byte ptr [RDI + 0x20],0x0
0000cf40(3): MOV RAX,R15
0000cf43(7): MOVSXD RDX,dword ptr [0xe0 + RBX]
0000cf4a(3): SUB RAX,RCX
0000cf4d(3): CMP RDX,RAX
0000cf50(2): JGE 0x0000cf5c
0000cf52(3): SUB R15D,ECX
0000cf55(7): MOV dword ptr [0xe0 + RBX],R15D
0000cf5c(3): ADD RSI,R12
0000cf5f(4): SUB RSI,qword ptr [R13]
0000cf63(4): ADD RSP,0x18
0000cf67(3): MOV RDI,RBX
0000cf6a(1): POP RBX
0000cf6b(1): POP RBP
0000cf6c(2): POP R12
0000cf6e(2): POP R13
0000cf70(2): POP R14
0000cf72(2): POP R15
0000cf74(5): JMP 0x00006ab0
0000cf80(5): MOV byte ptr [R8 + 0x20],0x1
0000cf85(2): JMP 0x0000cf11
0000cf90(4): LEA RSI,[RDX + RDX*0x4]
0000cf94(5): MOV qword ptr [RSP + 0x8],RCX
0000cf99(4): SHL RSI,0x4
0000cf9d(5): CALL 0x00001b30
0000cfa2(3): TEST RAX,RAX
0000cfa5(5): MOV RCX,qword ptr [RSP + 0x8]
0000cfaa(2): JZ 0x0000d000
0000cfac(7): MOV RSI,qword ptr [0xc8 + RBX]
0000cfb3(7): MOV RDX,qword ptr [0xd0 + RBX]
0000cfba(7): MOV qword ptr [0xd8 + RBX],RAX
0000cfc1(5): MOV qword ptr [RSP + 0x8],RCX
0000cfc6(4): LEA RSI,[RSI + RSI*0x4]
0000cfca(4): LEA RDX,[RDX + RDX*0x4]
0000cfce(4): LEA RDI,[RAX + RSI*0x8]
0000cfd2(4): SHL RDX,0x3
0000cfd6(2): XOR ESI,ESI
0000cfd8(5): CALL 0x00001a10
0000cfdd(7): SHL qword ptr [0xd0 + RBX],1
0000cfe4(7): MOV RAX,qword ptr [0xc8 + RBX]
0000cfeb(7): MOV RDI,qword ptr [0xd8 + RBX]
0000cff2(4): MOV RSI,qword ptr [RBP + 0x8]
0000cff6(5): MOV RCX,qword ptr [RSP + 0x8]
0000cffb(5): JMP 0x0000cef9
0000d000(7): MOV RDI,qword ptr [0xd8 + RBX]
0000d007(5): CALL 0x00001880
0000d00c(5): MOV EAX,0xc
0000d011(5): JMP 0x0000cebb
0000d020(2): PUSH R15
0000d022(2): PUSH R14
0000d024(2): PUSH R13
0000d026(2): PUSH R12
0000d028(1): PUSH RBP
0000d029(1): PUSH RBX
0000d02a(7): SUB RSP,0xb8
0000d031(4): MOV R15,qword ptr [RDI + 0x48]
0000d035(9): MOV RAX,qword ptr FS:[0x28]
0000d03e(8): MOV qword ptr [0xa8 + RSP],RAX
0000d046(2): XOR EAX,EAX
0000d048(4): CMP qword ptr [RSI],0x0
0000d04c(7): MOV RAX,qword ptr [0x98 + RDI]
0000d053(5): MOV qword ptr [RSP + 0x48],RSI
0000d058(5): MOV qword ptr [RSP + 0x40],RDX
0000d05d(5): MOV qword ptr [RSP + 0x38],RAX
0000d062(6): JLE 0x0000d390
0000d068(8): LEA RAX,[R15*0x8]
0000d070(3): MOV R14,RDI
0000d073(8): MOV qword ptr [RSP],0x0
0000d07b(5): MOV qword ptr [RSP + 0x8],R15
0000d080(5): MOV qword ptr [RSP + 0x60],RAX
0000d085(8): LEA RAX,[0x90 + RSP]
0000d08d(5): MOV qword ptr [RSP + 0x68],RAX
0000d092(8): LEA RAX,[0x8c + RSP]
0000d09a(5): MOV qword ptr [RSP + 0x78],RAX
0000d09f(2): JMP 0x0000d0e7
0000d0a8(2): TEST AL,0x1
0000d0aa(2): JZ 0x0000d0d0
0000d0ac(3): AND EDX,0x8
0000d0af(2): JNZ 0x0000d0d0
0000d0b1(3): TEST CL,0x20
0000d0b4(2): JZ 0x0000d0ba
0000d0b6(2): TEST AL,0x2
0000d0b8(2): JZ 0x0000d0d0
0000d0ba(6): AND ECX,0x80
0000d0c0(6): JZ 0x0000d160
0000d0c6(2): TEST AL,0x8
0000d0c8(6): JNZ 0x0000d160
0000d0ce(2): NOP
0000d0d0(5): MOV RDI,qword ptr [RSP + 0x48]
0000d0d5(5): ADD qword ptr [RSP],0x1
0000d0da(4): MOV RAX,qword ptr [RSP]
0000d0de(3): CMP RAX,qword ptr [RDI]
0000d0e1(6): JGE 0x0000d390
0000d0e7(5): MOV RAX,qword ptr [RSP + 0x40]
0000d0ec(4): MOV RDI,qword ptr [RSP]
0000d0f0(3): MOV RAX,qword ptr [RAX]
0000d0f3(4): MOV R13,qword ptr [RAX + RDI*0x8]
0000d0f7(5): MOV RDI,qword ptr [RSP + 0x38]
0000d0fc(3): MOV RAX,qword ptr [RDI]
0000d0ff(3): MOV RBX,R13
0000d102(4): SHL RBX,0x4
0000d106(3): ADD RAX,RBX
0000d109(4): CMP byte ptr [RAX + 0x8],0x4
0000d10d(2): JNZ 0x0000d0d0
0000d10f(3): MOV EBP,dword ptr [RAX + 0x8]
0000d112(6): TEST EBP,0x3ff00
0000d118(2): JZ 0x0000d160
0000d11a(7): MOV EDX,dword ptr [0xa0 + R14]
0000d121(5): MOV RSI,qword ptr [RSP + 0x8]
0000d126(3): MOV RDI,R14
0000d129(5): CALL 0x00009200
0000d12e(2): MOV EDX,EBP
0000d130(3): SHR EDX,0x8
0000d133(2): MOV ECX,EDX
0000d135(5): AND CX,0x3ff
0000d13a(3): TEST DL,0x4
0000d13d(6): JNZ 0x0000d0a8
0000d143(3): AND EDX,0x8
0000d146(6): JZ 0x0000d0b1
0000d14c(2): TEST AL,0x1
0000d14e(6): JZ 0x0000d0b1
0000d154(5): JMP 0x0000d0d0
0000d160(7): MOV RDI,qword ptr [0xc8 + R14]
0000d167(7): MOV RAX,qword ptr [0x98 + R14]
0000d16e(2): XOR ECX,ECX
0000d170(4): MOV R10,qword ptr [R14 + 0x8]
0000d174(5): MOV R9,qword ptr [RSP + 0x8]
0000d179(5): MOV qword ptr [RSP + 0x70],RDI
0000d17e(5): MOV qword ptr [RSP + 0x50],RAX
0000d183(3): CMP RCX,RDI
0000d186(2): JGE 0x0000d1db
0000d188(4): LEA RAX,[RCX + RDI*0x1]
0000d18c(7): MOV R11,qword ptr [0xd8 + R14]
0000d193(3): MOV RSI,RAX
0000d196(4): SHR RSI,0x3f
0000d19a(3): ADD RSI,RAX
0000d19d(3): SAR RSI,1
0000d1a0(4): LEA RAX,[RSI + RSI*0x4]
0000d1a4(5): CMP R9,qword ptr [R11 + RAX*0x8 + 0x8]
0000d1a9(2): JLE 0x0000d1d6
0000d1ab(5): JMP 0x0000d378
0000d1b0(4): LEA RDX,[RSI + RCX*0x1]
0000d1b4(3): MOV RAX,RDX
0000d1b7(4): SHR RAX,0x3f
0000d1bb(3): ADD RAX,RDX
0000d1be(3): SAR RAX,1
0000d1c1(4): LEA RDX,[RAX + RAX*0x4]
0000d1c5(3): MOV R8,RAX
0000d1c8(5): CMP R9,qword ptr [R11 + RDX*0x8 + 0x8]
0000d1cd(6): JG 0x0000d380
0000d1d3(3): MOV RSI,RAX
0000d1d6(3): CMP RSI,RCX
0000d1d9(2): JG 0x0000d1b0
0000d1db(5): CMP qword ptr [RSP + 0x70],RCX
0000d1e0(2): JLE 0x0000d206
0000d1e2(7): MOV RDX,qword ptr [0xd8 + R14]
0000d1e9(4): LEA RAX,[RCX + RCX*0x4]
0000d1ed(5): MOV RDI,qword ptr [RSP + 0x8]
0000d1f2(4): LEA RAX,[RDX + RAX*0x8]
0000d1f6(4): CMP qword ptr [RAX + 0x8],RDI
0000d1fa(2): JNZ 0x0000d206
0000d1fc(4): CMP RCX,-0x1
0000d200(6): JNZ 0x0000d3d6
0000d206(5): MOV RAX,qword ptr [RSP + 0x50]
0000d20b(8): CMP qword ptr [0xe8 + R14],0x0
0000d213(3): MOV RDX,qword ptr [RAX]
0000d216(4): MOV RAX,qword ptr [RDX + RBX*0x1]
0000d21a(5): MOV qword ptr [RSP + 0x58],RAX
0000d21f(6): JLE 0x0000d3db
0000d225(5): MOV qword ptr [RSP + 0x30],R13
0000d22a(9): MOV qword ptr [RSP + 0x28],0x0
0000d233(3): MOV R13,R10
0000d236(7): MOV RAX,qword ptr [0xf8 + R14]
0000d23d(5): MOV RBX,qword ptr [RSP + 0x28]
0000d242(5): MOV RDI,qword ptr [RSP + 0x58]
0000d247(4): MOV RBX,qword ptr [RAX + RBX*0x8]
0000d24b(4): MOV RAX,qword ptr [RBX + 0x8]
0000d24f(4): SHL RAX,0x4
0000d253(4): CMP RDI,qword ptr [RDX + RAX*0x1]
0000d257(2): JZ 0x0000d280
0000d259(6): ADD qword ptr [RSP + 0x28],0x1
0000d25f(5): MOV RAX,qword ptr [RSP + 0x28]
0000d264(7): CMP RAX,qword ptr [0xe8 + R14]
0000d26b(6): JGE 0x0000d8e1
0000d271(5): MOV RAX,qword ptr [RSP + 0x50]
0000d276(3): MOV RDX,qword ptr [RAX]
0000d279(2): JMP 0x0000d236
0000d280(5): CMP qword ptr [RBX + 0x20],0x0
0000d285(3): MOV R11,qword ptr [RBX]
0000d288(6): JLE 0x0000d8f2
0000d28e(5): MOV RCX,qword ptr [RSP + 0x8]
0000d293(3): MOV R8,R13
0000d296(2): XOR EBP,EBP
0000d298(3): MOV R13,RBX
0000d29b(3): MOV RBX,RCX
0000d29e(2): JMP 0x0000d30c
0000d2a0(4): LEA RSI,[R8 + R11*0x1]
0000d2a4(4): LEA RDI,[R8 + RBX*0x1]
0000d2a8(5): MOV qword ptr [RSP + 0x20],R9
0000d2ad(5): MOV qword ptr [RSP + 0x18],R11
0000d2b2(5): MOV qword ptr [RSP + 0x10],R8
0000d2b7(5): CALL 0x00001a40
0000d2bc(2): TEST EAX,EAX
0000d2be(5): MOV R8,qword ptr [RSP + 0x10]
0000d2c3(5): MOV R11,qword ptr [RSP + 0x18]
0000d2c8(5): MOV R9,qword ptr [RSP + 0x20]
0000d2cd(6): JNZ 0x0000d798
0000d2d3(5): MOV R8,qword ptr [RSP + 0x8]
0000d2d8(5): MOV RCX,qword ptr [RSP + 0x30]
0000d2dd(3): MOV RDX,R9
0000d2e0(3): MOV RSI,R13
0000d2e3(3): MOV RDI,R14
0000d2e6(5): CALL 0x0000ce80
0000d2eb(3): CMP EAX,0x1
0000d2ee(4): MOV R8,qword ptr [R14 + 0x8]
0000d2f2(6): JA 0x0000d398
0000d2f8(4): ADD RBP,0x1
0000d2fc(4): CMP RBP,qword ptr [R13 + 0x20]
0000d300(3): MOV R11,R15
0000d303(3): MOV RBX,R12
0000d306(6): JGE 0x0000d5b8
0000d30c(4): MOV RAX,qword ptr [R13 + 0x28]
0000d310(4): MOV R9,qword ptr [RAX + RBP*0x8]
0000d314(4): MOV R15,qword ptr [R9 + 0x8]
0000d318(3): MOV RDX,R15
0000d31b(3): SUB RDX,R11
0000d31e(3): TEST RDX,RDX
0000d321(4): LEA R12,[RDX + RBX*0x1]
0000d325(2): JLE 0x0000d2d3
0000d327(4): CMP qword ptr [R14 + 0x30],R12
0000d32b(6): JGE 0x0000d2a0
0000d331(4): CMP qword ptr [R14 + 0x58],R12
0000d335(5): MOV qword ptr [RSP + 0x18],RDX
0000d33a(5): MOV qword ptr [RSP + 0x10],R9
0000d33f(6): JL 0x0000d798
0000d345(3): MOV RSI,R12
0000d348(3): MOV RDI,R14
0000d34b(5): MOV qword ptr [RSP + 0x20],R11
0000d350(5): CALL 0x00006ab0
0000d355(2): TEST EAX,EAX
0000d357(2): JNZ 0x0000d398
0000d359(4): MOV R8,qword ptr [R14 + 0x8]
0000d35d(5): MOV RDX,qword ptr [RSP + 0x18]
0000d362(5): MOV R9,qword ptr [RSP + 0x10]
0000d367(5): MOV R11,qword ptr [RSP + 0x20]
0000d36c(5): JMP 0x0000d2a0
0000d378(3): MOV R8,RSI
0000d37b(3): MOV RSI,RDI
0000d37e(2): NOP
0000d380(4): LEA RCX,[R8 + 0x1]
0000d384(3): MOV RDI,RSI
0000d387(5): JMP 0x0000d183
0000d390(2): XOR EAX,EAX
0000d392(6): NOP word ptr [RAX + RAX*0x1]
0000d398(8): MOV RBX,qword ptr [0xa8 + RSP]
0000d3a0(9): XOR RBX,qword ptr FS:[0x28]
0000d3a9(6): JNZ 0x0000d8fc
0000d3af(7): ADD RSP,0xb8
0000d3b6(1): POP RBX
0000d3b7(1): POP RBP
0000d3b8(2): POP R12
0000d3ba(2): POP R13
0000d3bc(2): POP R14
0000d3be(2): POP R15
0000d3c0(1): RET
0000d3c8(4): ADD RAX,0x28
0000d3cc(4): CMP byte ptr [RAX + -0x8],0x0
0000d3d0(6): JZ 0x0000d206
0000d3d6(3): CMP R13,qword ptr [RAX]
0000d3d9(2): JNZ 0x0000d3c8
0000d3db(5): MOV RAX,qword ptr [RSP + 0x70]
0000d3e0(5): CMP qword ptr [RSP + 0x70],RAX
0000d3e5(11): MOV dword ptr [0x8c + RSP],0x0
0000d3f0(6): JGE 0x0000d0d0
0000d3f6(8): LEA RAX,[R13*0x8]
0000d3fe(5): MOV R12,qword ptr [RSP + 0x70]
0000d403(5): MOV RBP,qword ptr [RSP + 0x38]
0000d408(5): MOV qword ptr [RSP + 0x50],RAX
0000d40d(5): LEA RAX,[R13 + R13*0x2]
0000d412(4): LEA R8,[R12 + R12*0x4]
0000d416(4): SHL RAX,0x3
0000d41a(5): MOV qword ptr [RSP + 0x58],RAX
0000d41f(8): LEA R15,[R8*0x8]
0000d427(5): JMP 0x0000d55d
0000d430(4): MOV RCX,qword ptr [RBP + 0x28]
0000d434(5): MOV RDI,qword ptr [RSP + 0x58]
0000d439(5): MOV RCX,qword ptr [RCX + RDI*0x1 + 0x10]
0000d43e(3): MOV RCX,qword ptr [RCX]
0000d441(4): LEA RCX,[RCX + RCX*0x2]
0000d445(4): LEA RCX,[RDX + RCX*0x8]
0000d449(5): MOV qword ptr [RSP + 0x18],RCX
0000d44e(5): ADD RBX,qword ptr [RSP + 0x8]
0000d453(7): MOV EDX,dword ptr [0xa0 + R14]
0000d45a(3): MOV RDI,R14
0000d45d(3): SUB RBX,RAX
0000d460(4): LEA RSI,[RBX + -0x1]
0000d464(5): CALL 0x00009200
0000d469(5): MOV RSI,qword ptr [RSP + 0x60]
0000d46e(2): MOV ECX,EAX
0000d470(7): MOV RAX,qword ptr [0xb8 + R14]
0000d477(8): LEA R10,[RBX*0x8]
0000d47f(9): MOV qword ptr [RSP + 0x10],0x0
0000d488(4): LEA R11,[RAX + R10*0x1]
0000d48c(4): MOV RAX,qword ptr [RAX + RSI*0x1]
0000d490(3): MOV RDX,qword ptr [R11]
0000d493(3): TEST RAX,RAX
0000d496(2): JZ 0x0000d4a1
0000d498(4): MOV RAX,qword ptr [RAX + 0x10]
0000d49c(5): MOV qword ptr [RSP + 0x10],RAX
0000d4a1(3): TEST RDX,RDX
0000d4a4(6): JZ 0x0000d7c0
0000d4aa(4): MOV RSI,qword ptr [RDX + 0x50]
0000d4ae(5): MOV RDI,qword ptr [RSP + 0x68]
0000d4b3(5): MOV RDX,qword ptr [RSP + 0x18]
0000d4b8(5): MOV qword ptr [RSP + 0x30],R10
0000d4bd(4): MOV dword ptr [RSP + 0x28],ECX
0000d4c1(5): CALL 0x00008610
0000d4c6(2): TEST EAX,EAX
0000d4c8(7): MOV dword ptr [0x8c + RSP],EAX
0000d4cf(4): MOV ECX,dword ptr [RSP + 0x28]
0000d4d3(5): MOV R10,qword ptr [RSP + 0x30]
0000d4d8(6): JNZ 0x0000d868
0000d4de(7): ADD R10,qword ptr [0xb8 + R14]
0000d4e5(5): MOV RDX,qword ptr [RSP + 0x68]
0000d4ea(3): MOV RSI,RBP
0000d4ed(5): MOV RDI,qword ptr [RSP + 0x78]
0000d4f2(5): MOV qword ptr [RSP + 0x28],R10
0000d4f7(5): CALL 0x00008770
0000d4fc(5): MOV R10,qword ptr [RSP + 0x28]
0000d501(8): MOV RDI,qword ptr [0xa0 + RSP]
0000d509(3): MOV qword ptr [R10],RAX
0000d50c(5): CALL 0x00001880
0000d511(7): MOV RDX,qword ptr [0xb8 + R14]
0000d518(5): CMP qword ptr [RDX + RBX*0x8],0x0
0000d51d(6): JZ 0x0000d7f1
0000d523(6): CMP qword ptr [RSP + 0x20],0x0
0000d529(2): JNZ 0x0000d548
0000d52b(5): MOV RAX,qword ptr [RSP + 0x60]
0000d530(5): MOV RBX,qword ptr [RSP + 0x10]
0000d535(4): MOV RAX,qword ptr [RDX + RAX*0x1]
0000d539(4): CMP qword ptr [RAX + 0x10],RBX
0000d53d(6): JG 0x0000d808
0000d543(5): NOP dword ptr [RAX + RAX*0x1]
0000d548(4): ADD R12,0x1
0000d54c(4): ADD R15,0x28
0000d550(7): CMP R12,qword ptr [0xc8 + R14]
0000d557(6): JGE 0x0000d0d0
0000d55d(7): MOV RAX,qword ptr [0xd8 + R14]
0000d564(3): ADD RAX,R15
0000d567(3): CMP R13,qword ptr [RAX]
0000d56a(2): JNZ 0x0000d548
0000d56c(5): MOV RDI,qword ptr [RSP + 0x8]
0000d571(4): CMP RDI,qword ptr [RAX + 0x8]
0000d575(2): JNZ 0x0000d548
0000d577(4): MOV RBX,qword ptr [RAX + 0x18]
0000d57b(4): MOV RAX,qword ptr [RAX + 0x10]
0000d57f(4): MOV RDX,qword ptr [RBP + 0x30]
0000d583(3): MOV RCX,RBX
0000d586(3): SUB RCX,RAX
0000d589(5): MOV qword ptr [RSP + 0x20],RCX
0000d58e(6): JZ 0x0000d430
0000d594(4): MOV RCX,qword ptr [RBP + 0x18]
0000d598(5): MOV RDI,qword ptr [RSP + 0x50]
0000d59d(4): MOV RCX,qword ptr [RCX + RDI*0x1]
0000d5a1(4): LEA RCX,[RCX + RCX*0x2]
0000d5a5(4): LEA RCX,[RDX + RCX*0x8]
0000d5a9(5): MOV qword ptr [RSP + 0x18],RCX
0000d5ae(5): JMP 0x0000d44e
0000d5b8(3): MOV RBX,R13
0000d5bb(3): MOV R13,R8
0000d5be(4): LEA R11,[R15 + 0x1]
0000d5c2(5): CMP qword ptr [RSP + 0x8],R11
0000d5c7(6): JL 0x0000d259
0000d5cd(3): MOV RAX,R12
0000d5d0(8): LEA R15,[R11*0x8]
0000d5d8(3): MOV R12,RBX
0000d5db(3): MOV RBX,R11
0000d5de(3): MOV R11,R13
0000d5e1(3): MOV R13,RAX
0000d5e4(4): NOP dword ptr [RAX]
0000d5e8(3): MOV RAX,RBX
0000d5eb(4): SUB RAX,qword ptr [R12]
0000d5ef(3): TEST RAX,RAX
0000d5f2(2): JLE 0x0000d615
0000d5f4(4): CMP qword ptr [R14 + 0x30],R13
0000d5f8(6): JLE 0x0000d881
0000d5fe(6): MOVZX ECX,byte ptr [R11 + RBX*0x1 + -0x1]
0000d604(4): LEA RAX,[R13 + 0x1]
0000d608(4): CMP byte ptr [R11 + R13*0x1],CL
0000d60c(6): JNZ 0x0000d742
0000d612(3): MOV R13,RAX
0000d615(7): MOV RAX,qword ptr [0xb8 + R14]
0000d61c(4): MOV RAX,qword ptr [RAX + R15*0x1]
0000d620(3): TEST RAX,RAX
0000d623(6): JZ 0x0000d72f
0000d629(4): MOV RCX,qword ptr [RAX + 0x10]
0000d62d(3): TEST RCX,RCX
0000d630(6): JLE 0x0000d72f
0000d636(4): MOV RDI,qword ptr [RAX + 0x18]
0000d63a(5): MOV RAX,qword ptr [RSP + 0x50]
0000d63f(2): XOR EDX,EDX
0000d641(5): MOV R8,qword ptr [RSP + 0x58]
0000d646(3): MOV RSI,qword ptr [RAX]
0000d649(2): JMP 0x0000d65d
0000d650(4): ADD RDX,0x1
0000d654(3): CMP RCX,RDX
0000d657(6): JZ 0x0000d72f
0000d65d(4): MOV RBP,qword ptr [RDI + RDX*0x8]
0000d661(3): MOV RAX,RBP
0000d664(4): SHL RAX,0x4
0000d668(3): ADD RAX,RSI
0000d66b(4): CMP byte ptr [RAX + 0x8],0x9
0000d66f(2): JNZ 0x0000d650
0000d671(3): CMP R8,qword ptr [RAX]
0000d674(2): JNZ 0x0000d650
0000d676(4): CMP RBP,-0x1
0000d67a(6): JZ 0x0000d72f
0000d680(5): MOV RSI,qword ptr [R12 + 0x10]
0000d685(4): MOV RCX,qword ptr [R12]
0000d689(3): TEST RSI,RSI
0000d68c(6): JZ 0x0000d750
0000d692(5): MOV qword ptr [RSP + 0x10],R11
0000d697(5): MOV RDX,qword ptr [R12 + 0x8]
0000d69c(4): SUB RSP,0x8
0000d6a0(2): PUSH 0x9
0000d6a2(3): MOV R9,RBX
0000d6a5(3): MOV R8,RBP
0000d6a8(3): MOV RDI,R14
0000d6ab(5): CALL 0x0000be30
0000d6b0(1): POP RDX
0000d6b1(3): CMP EAX,0x1
0000d6b4(1): POP RCX
0000d6b5(5): MOV R11,qword ptr [RSP + 0x10]
0000d6ba(2): JZ 0x0000d72f
0000d6bc(2): TEST EAX,EAX
0000d6be(6): JNZ 0x0000d398
0000d6c4(5): MOV RAX,qword ptr [R12 + 0x20]
0000d6c9(5): CMP RAX,qword ptr [R12 + 0x18]
0000d6ce(6): JZ 0x0000d8a8
0000d6d4(5): MOV ESI,0x28
0000d6d9(5): MOV EDI,0x1
0000d6de(5): CALL 0x00001a70
0000d6e3(3): TEST RAX,RAX
0000d6e6(6): JZ 0x0000d789
0000d6ec(5): MOV RDX,qword ptr [R12 + 0x20]
0000d6f1(5): MOV RCX,qword ptr [R12 + 0x28]
0000d6f6(3): MOV RSI,R12
0000d6f9(5): MOV R8,qword ptr [RSP + 0x8]
0000d6fe(3): MOV RDI,R14
0000d701(4): MOV qword ptr [RCX + RDX*0x8],RAX
0000d705(5): MOV RCX,qword ptr [RSP + 0x30]
0000d70a(4): ADD RDX,0x1
0000d70e(3): MOV qword ptr [RAX],RBP
0000d711(4): MOV qword ptr [RAX + 0x8],RBX
0000d715(5): MOV qword ptr [R12 + 0x20],RDX
0000d71a(3): MOV RDX,RAX
0000d71d(5): CALL 0x0000ce80
0000d722(3): CMP EAX,0x1
0000d725(4): MOV R11,qword ptr [R14 + 0x8]
0000d729(6): JA 0x0000d398
0000d72f(4): ADD RBX,0x1
0000d733(4): ADD R15,0x8
0000d737(5): CMP qword ptr [RSP + 0x8],RBX
0000d73c(6): JGE 0x0000d5e8
0000d742(3): MOV R13,R11
0000d745(5): JMP 0x0000d259
0000d750(3): MOV RSI,RBX
0000d753(5): MOV EDI,0x18
0000d758(5): MOV qword ptr [RSP + 0x18],R11
0000d75d(3): SUB RSI,RCX
0000d760(5): MOV qword ptr [RSP + 0x10],RCX
0000d765(4): ADD RSI,0x1
0000d769(5): CALL 0x00001a70
0000d76e(3): TEST RAX,RAX
0000d771(3): MOV RSI,RAX
0000d774(5): MOV qword ptr [R12 + 0x10],RAX
0000d779(5): MOV RCX,qword ptr [RSP + 0x10]
0000d77e(5): MOV R11,qword ptr [RSP + 0x18]
0000d783(6): JNZ 0x0000d692
0000d789(5): MOV EAX,0xc
0000d78e(5): JMP 0x0000d398
0000d798(3): MOV RCX,RBX
0000d79b(3): MOV RBX,R13
0000d79e(3): MOV R13,R8
0000d7a1(4): CMP qword ptr [RBX + 0x20],RBP
0000d7a5(6): JG 0x0000d259
0000d7ab(3): TEST RBP,RBP
0000d7ae(3): MOV R12,RCX
0000d7b1(6): JZ 0x0000d5c2
0000d7b7(3): MOV R15,R11
0000d7ba(5): JMP 0x0000d5be
0000d7c0(5): MOV RDX,qword ptr [RSP + 0x18]
0000d7c5(5): MOV RDI,qword ptr [RSP + 0x78]
0000d7ca(3): MOV RSI,RBP
0000d7cd(5): MOV qword ptr [RSP + 0x28],R11
0000d7d2(5): CALL 0x00008770
0000d7d7(5): MOV R11,qword ptr [RSP + 0x28]
0000d7dc(7): MOV RDX,qword ptr [0xb8 + R14]
0000d7e3(3): MOV qword ptr [R11],RAX
0000d7e6(5): CMP qword ptr [RDX + RBX*0x8],0x0
0000d7eb(6): JNZ 0x0000d523
0000d7f1(7): MOV EAX,dword ptr [0x8c + RSP]
0000d7f8(2): TEST EAX,EAX
0000d7fa(6): JZ 0x0000d523
0000d800(5): JMP 0x0000d398
0000d808(5): MOV RAX,qword ptr [RSP + 0x18]
0000d80d(5): MOV RCX,qword ptr [RSP + 0x8]
0000d812(3): MOV RDI,R14
0000d815(4): LEA R8,[RAX + 0x10]
0000d819(4): LEA RBX,[RAX + 0x8]
0000d81d(3): MOV RDX,R8
0000d820(3): MOV RSI,RBX
0000d823(5): MOV qword ptr [RSP + 0x10],R8
0000d828(5): CALL 0x000090b0
0000d82d(2): TEST EAX,EAX
0000d82f(7): MOV dword ptr [0x8c + RSP],EAX
0000d836(6): JNZ 0x0000d398
0000d83c(5): MOV R8,qword ptr [RSP + 0x10]
0000d841(3): MOV RSI,RBX
0000d844(3): MOV RDI,R14
0000d847(3): MOV RDX,R8
0000d84a(5): CALL 0x0000d020
0000d84f(2): TEST EAX,EAX
0000d851(7): MOV dword ptr [0x8c + RSP],EAX
0000d858(6): JZ 0x0000d548
0000d85e(5): JMP 0x0000d398
0000d868(8): MOV RDI,qword ptr [0xa0 + RSP]
0000d870(5): CALL 0x00001880
0000d875(7): MOV EAX,dword ptr [0x8c + RSP]
0000d87c(5): JMP 0x0000d398
0000d881(4): CMP qword ptr [R14 + 0x58],R13
0000d885(6): JLE 0x0000d742
0000d88b(4): LEA ESI,[R13 + 0x1]
0000d88f(3): MOV RDI,R14
0000d892(5): CALL 0x00006960
0000d897(2): TEST EAX,EAX
0000d899(6): JNZ 0x0000d398
0000d89f(4): MOV R11,qword ptr [R14 + 0x8]
0000d8a3(5): JMP 0x0000d5fe
0000d8a8(5): LEA RDX,[RAX + RAX*0x1 + 0x1]
0000d8ad(5): MOV RDI,qword ptr [R12 + 0x28]
0000d8b2(8): LEA RSI,[RDX*0x8]
0000d8ba(5): MOV qword ptr [RSP + 0x10],RDX
0000d8bf(5): CALL 0x00001b30
0000d8c4(3): TEST RAX,RAX
0000d8c7(6): JZ 0x0000d789
0000d8cd(5): MOV RDX,qword ptr [RSP + 0x10]
0000d8d2(5): MOV qword ptr [R12 + 0x28],RAX
0000d8d7(5): MOV qword ptr [R12 + 0x18],RDX
0000d8dc(5): JMP 0x0000d6d4
0000d8e1(5): MOV R13,qword ptr [RSP + 0x30]
0000d8e6(7): MOV RAX,qword ptr [0xc8 + R14]
0000d8ed(5): JMP 0x0000d3e0
0000d8f2(5): MOV R12,qword ptr [RSP + 0x8]
0000d8f7(5): JMP 0x0000d5c2
0000d8fc(5): CALL 0x00001990
0000d901(5): NOP dword ptr [RAX + RAX*0x1]
0000d906(10): NOP word ptr CS:[RAX + RAX*0x1]
0000d910(2): PUSH R15
0000d912(2): PUSH R14
0000d914(2): PUSH R13
0000d916(2): PUSH R12
0000d918(3): MOV R13,RDI
0000d91b(1): PUSH RBP
0000d91c(1): PUSH RBX
0000d91d(3): MOV RBX,RSI
0000d920(4): SUB RSP,0x38
0000d924(4): MOV R12,qword ptr [RSI + 0x48]
0000d928(7): MOV R14,qword ptr [0xb8 + RSI]
0000d92f(9): MOV RAX,qword ptr FS:[0x28]
0000d938(5): MOV qword ptr [RSP + 0x28],RAX
0000d93d(2): XOR EAX,EAX
0000d93f(7): MOV R15,qword ptr [0x98 + RSI]
0000d946(8): LEA RBP,[R12*0x8]
0000d94e(3): ADD R14,RBP
0000d951(7): CMP qword ptr [0xc0 + RSI],R12
0000d958(2): JGE 0x0000d9a0
0000d95a(3): MOV qword ptr [R14],RDX
0000d95d(3): MOV RBP,RDX
0000d960(7): MOV qword ptr [0xc0 + RSI],R12
0000d967(8): CMP qword ptr [0x98 + R15],0x0
0000d96f(6): JNZ 0x0000da98
0000d975(5): MOV RCX,qword ptr [RSP + 0x28]
0000d97a(9): XOR RCX,qword ptr FS:[0x28]
0000d983(3): MOV RAX,RBP
0000d986(6): JNZ 0x0000daf7
0000d98c(4): ADD RSP,0x38
0000d990(1): POP RBX
0000d991(1): POP RBP
0000d992(2): POP R12
0000d994(2): POP R13
0000d996(2): POP R14
0000d998(2): POP R15
0000d99a(1): RET
0000d9a0(3): MOV RAX,qword ptr [R14]
0000d9a3(3): TEST RAX,RAX
0000d9a6(6): JZ 0x0000da88
0000d9ac(3): TEST RDX,RDX
0000d9af(4): MOV RAX,qword ptr [RAX + 0x50]
0000d9b3(6): JZ 0x0000da40
0000d9b9(4): MOV R14,qword ptr [RDX + 0x50]
0000d9bd(5): LEA RDI,[RSP + 0x10]
0000d9c2(3): MOV RDX,RAX
0000d9c5(4): MOV qword ptr [RSP],RDI
0000d9c9(3): MOV RSI,R14
0000d9cc(5): CALL 0x00008610
0000d9d1(2): TEST EAX,EAX
0000d9d3(4): MOV dword ptr [R13],EAX
0000d9d7(6): JNZ 0x0000daf0
0000d9dd(4): MOV RAX,qword ptr [RBX + 0x48]
0000d9e1(6): MOV EDX,dword ptr [0xa0 + RBX]
0000d9e7(3): MOV RDI,RBX
0000d9ea(4): LEA RSI,[RAX + -0x1]
0000d9ee(5): CALL 0x00009200
0000d9f3(7): MOV R8,qword ptr [0xb8 + RBX]
0000d9fa(4): MOV RDX,qword ptr [RSP]
0000d9fe(2): MOV ECX,EAX
0000da00(3): MOV RSI,R15
0000da03(3): MOV RDI,R13
0000da06(3): ADD R8,RBP
0000da09(5): MOV qword ptr [RSP + 0x8],R8
0000da0e(5): CALL 0x00008770
0000da13(5): MOV R8,qword ptr [RSP + 0x8]
0000da18(3): TEST R14,R14
0000da1b(3): MOV RBP,RAX
0000da1e(3): MOV qword ptr [R8],RAX
0000da21(6): JZ 0x0000d967
0000da27(5): MOV RDI,qword ptr [RSP + 0x20]
0000da2c(5): CALL 0x00001880
0000da31(5): JMP 0x0000d967
0000da40(4): MOVDQU XMM0,xmmword ptr [RAX]
0000da44(3): MOV RDI,RBX
0000da47(6): MOV EDX,dword ptr [0xa0 + RSI]
0000da4d(5): LEA RSI,[R12 + -0x1]
0000da52(5): MOVAPS xmmword ptr [RSP + 0x10],XMM0
0000da57(4): MOV RAX,qword ptr [RAX + 0x10]
0000da5b(5): MOV qword ptr [RSP + 0x20],RAX
0000da60(5): CALL 0x00009200
0000da65(5): LEA RDX,[RSP + 0x10]
0000da6a(2): MOV ECX,EAX
0000da6c(3): MOV RSI,R15
0000da6f(3): MOV RDI,R13
0000da72(5): CALL 0x00008770
0000da77(3): MOV RBP,RAX
0000da7a(3): MOV qword ptr [R14],RAX
0000da7d(5): JMP 0x0000d967
0000da88(3): MOV qword ptr [R14],RDX
0000da8b(3): MOV RBP,RDX
0000da8e(5): JMP 0x0000d967
0000da98(3): TEST RBP,RBP
0000da9b(2): JZ 0x0000daf0
0000da9d(4): LEA R14,[RBP + 0x10]
0000daa1(4): LEA R15,[RBP + 0x18]
0000daa5(3): MOV RCX,R12
0000daa8(3): MOV RDI,RBX
0000daab(3): MOV RDX,R15
0000daae(3): MOV RSI,R14
0000dab1(5): CALL 0x000090b0
0000dab6(2): TEST EAX,EAX
0000dab8(4): MOV dword ptr [R13],EAX
0000dabc(2): JNZ 0x0000daf0
0000dabe(4): TEST byte ptr [RBP + 0x68],0x40
0000dac2(6): JZ 0x0000d975
0000dac8(3): MOV RDX,R15
0000dacb(3): MOV RSI,R14
0000dace(3): MOV RDI,RBX
0000dad1(5): CALL 0x0000d020
0000dad6(2): TEST EAX,EAX
0000dad8(4): MOV dword ptr [R13],EAX
0000dadc(2): JNZ 0x0000daf0
0000dade(7): MOV RAX,qword ptr [0xb8 + RBX]
0000dae5(4): MOV RBP,qword ptr [RAX + R12*0x8]
0000dae9(5): JMP 0x0000d975
0000daf0(2): XOR EBP,EBP
0000daf2(5): JMP 0x0000d975
0000daf7(5): CALL 0x00001990
0000dafc(4): NOP dword ptr [RAX]
0000db00(2): PUSH R15
0000db02(2): PUSH R14
0000db04(3): MOV R14,RDI
0000db07(2): PUSH R13
0000db09(2): PUSH R12
0000db0b(3): MOV R13,RSI
0000db0e(1): PUSH RBP
0000db0f(1): PUSH RBX
0000db10(4): SUB RSP,0x68
0000db14(4): MOV R15,qword ptr [RSI + 0x18]
0000db18(4): MOV RBX,qword ptr [RSI + 0x10]
0000db1c(4): MOV qword ptr [RSP],RDI
0000db20(5): MOV EDI,0x8
0000db25(9): MOV qword ptr [RSP + 0x40],0x1
0000db2e(9): MOV RAX,qword ptr FS:[0x28]
0000db37(5): MOV qword ptr [RSP + 0x58],RAX
0000db3c(2): XOR EAX,EAX
0000db3e(9): MOV qword ptr [RSP + 0x48],0x1
0000db47(5): CALL 0x00001ac0
0000db4c(3): TEST RAX,RAX
0000db4f(5): MOV qword ptr [RSP + 0x50],RAX
0000db54(6): JZ 0x0000de34
0000db5a(5): LEA RCX,[RSP + 0x40]
0000db5f(3): MOV qword ptr [RAX],RBX
0000db62(3): MOV RDX,R15
0000db65(3): MOV RSI,R13
0000db68(3): MOV RDI,R14
0000db6b(5): MOV qword ptr [RSP + 0x10],RCX
0000db70(5): CALL 0x0000f570
0000db75(2): TEST EAX,EAX
0000db77(6): JNZ 0x0000de05
0000db7d(8): LEA RAX,[R15*0x8]
0000db85(3): TEST R15,R15
0000db88(8): MOV dword ptr [RSP + 0x2c],0x0
0000db90(5): MOV qword ptr [RSP + 0x8],RAX
0000db95(4): LEA RAX,[R13 + 0x30]
0000db99(5): MOV qword ptr [RSP + 0x38],RAX
0000db9e(6): JLE 0x0000dda7
0000dba4(4): MOV RDI,qword ptr [R13]
0000dba8(5): MOV RAX,qword ptr [RSP + 0x8]
0000dbad(5): CMP qword ptr [RDI + RAX*0x1],0x0
0000dbb2(6): JZ 0x0000ddc8
0000dbb8(4): MOV RAX,qword ptr [RSP]
0000dbbc(8): MOV dword ptr [RSP + 0x2c],0x0
0000dbc4(4): MOV ECX,dword ptr [RSP + 0x2c]
0000dbc8(6): CMP dword ptr [0xe0 + RAX],ECX
0000dbce(6): JL 0x0000dde1
0000dbd4(4): MOV RBX,qword ptr [RSP]
0000dbd8(5): MOV RDI,qword ptr [RSP + 0x8]
0000dbdd(4): SUB R15,0x1
0000dbe1(9): MOV qword ptr [RSP + 0x48],0x0
0000dbea(7): MOV RAX,qword ptr [0xb8 + RBX]
0000dbf1(5): MOV R12,qword ptr [RAX + RDI*0x1 + -0x8]
0000dbf6(3): TEST R12,R12
0000dbf9(6): JZ 0x0000dd80
0000dbff(6): CMP qword ptr [R12 + 0x28],0x0
0000dc05(7): MOV R14,qword ptr [0x98 + RBX]
0000dc0c(6): JLE 0x0000dd80
0000dc12(2): XOR EBX,EBX
0000dc14(5): JMP 0x0000dcbb
0000dc20(4): MOV RDI,qword ptr [RSP]
0000dc24(3): MOV RDX,R15
0000dc27(5): CALL 0x000092f0
0000dc2c(2): TEST AL,AL
0000dc2e(2): JZ 0x0000dcac
0000dc30(4): MOV RAX,qword ptr [R13]
0000dc34(5): MOV RCX,qword ptr [RSP + 0x8]
0000dc39(4): MOV RAX,qword ptr [RAX + RCX*0x1]
0000dc3d(3): TEST RAX,RAX
0000dc40(2): JZ 0x0000dcac
0000dc42(4): MOV RDX,qword ptr [R14 + 0x18]
0000dc46(4): MOV RDI,qword ptr [RAX + 0x10]
0000dc4a(4): LEA RSI,[RAX + 0x18]
0000dc4e(4): MOV RDX,qword ptr [RDX + RBP*0x8]
0000dc52(5): CALL 0x00007420
0000dc57(3): TEST RAX,RAX
0000dc5a(2): JZ 0x0000dcac
0000dc5c(6): MOV R10D,0x1
0000dc62(5): CMP qword ptr [R13 + 0x28],0x0
0000dc67(2): JZ 0x0000dc97
0000dc69(4): MOV RAX,qword ptr [R14 + 0x18]
0000dc6d(4): SUB RSP,0x8
0000dc71(4): LEA RSI,[R13 + 0x28]
0000dc75(4): LEA R8,[R10 + R15*0x1]
0000dc79(3): MOV R9,RBP
0000dc7c(4): MOV RCX,qword ptr [RAX + RBP*0x8]
0000dc80(2): PUSH R15
0000dc82(5): MOV RDX,qword ptr [RSP + 0x48]
0000dc87(5): MOV RDI,qword ptr [RSP + 0x10]
0000dc8c(5): CALL 0x000076d0
0000dc91(2): TEST AL,AL
0000dc93(1): POP RDX
0000dc94(1): POP RCX
0000dc95(2): JNZ 0x0000dcac
0000dc97(5): MOV RDI,qword ptr [RSP + 0x10]
0000dc9c(3): MOV RSI,RBP
0000dc9f(5): CALL 0x00005ee0
0000dca4(2): TEST AL,AL
0000dca6(6): JZ 0x0000de00
0000dcac(4): ADD RBX,0x1
0000dcb0(5): CMP RBX,qword ptr [R12 + 0x28]
0000dcb5(6): JGE 0x0000dd80
0000dcbb(5): MOV RAX,qword ptr [R12 + 0x30]
0000dcc0(3): MOV RSI,qword ptr [R14]
0000dcc3(4): MOV RBP,qword ptr [RAX + RBX*0x8]
0000dcc7(3): MOV R9,RBP
0000dcca(4): SHL R9,0x4
0000dcce(3): ADD RSI,R9
0000dcd1(4): TEST byte ptr [RSI + 0xa],0x10
0000dcd5(6): JZ 0x0000dc20
0000dcdb(4): MOV RCX,qword ptr [RSP]
0000dcdf(4): MOV RAX,qword ptr [R13 + 0x18]
0000dce3(3): MOV R8,R15
0000dce6(3): MOV RDX,RBP
0000dce9(5): MOV qword ptr [RSP + 0x18],R9
0000dcee(7): MOV R11,qword ptr [0x98 + RCX]
0000dcf5(5): MOV qword ptr [RSP + 0x20],RAX
0000dcfa(3): MOV RDI,qword ptr [R11]
0000dcfd(7): LEA RSI,[0xd8 + R11]
0000dd04(5): MOV qword ptr [RSP + 0x30],R11
0000dd09(5): CALL 0x0000bbd0
0000dd0e(3): MOVSXD R10,EAX
0000dd11(5): MOV R9,qword ptr [RSP + 0x18]
0000dd16(4): CMP R10D,0x0
0000dd1a(6): JLE 0x0000ddb0
0000dd20(3): MOVSXD RAX,R10D
0000dd23(3): ADD RAX,R15
0000dd26(5): CMP qword ptr [RSP + 0x20],RAX
0000dd2b(6): JL 0x0000dc62
0000dd31(4): MOV RDX,qword ptr [R13]
0000dd35(5): MOV R11,qword ptr [RSP + 0x30]
0000dd3a(4): MOV RAX,qword ptr [RDX + RAX*0x8]
0000dd3e(3): TEST RAX,RAX
0000dd41(2): JZ 0x0000ddb6
0000dd43(4): MOV RDX,qword ptr [R11 + 0x18]
0000dd47(4): MOV RDI,qword ptr [RAX + 0x10]
0000dd4b(4): LEA RSI,[RAX + 0x18]
0000dd4f(5): MOV qword ptr [RSP + 0x18],R9
0000dd54(4): MOV RDX,qword ptr [RDX + RBP*0x8]
0000dd58(5): CALL 0x00007420
0000dd5d(3): TEST RAX,RAX
0000dd60(6): JNZ 0x0000dc62
0000dd66(5): MOV R9,qword ptr [RSP + 0x18]
0000dd6b(3): MOV RSI,qword ptr [R14]
0000dd6e(3): ADD RSI,R9
0000dd71(5): JMP 0x0000dc20
0000dd80(5): MOV RCX,qword ptr [RSP + 0x10]
0000dd85(4): MOV RDI,qword ptr [RSP]
0000dd89(3): MOV RDX,R15
0000dd8c(3): MOV RSI,R13
0000dd8f(5): CALL 0x0000f570
0000dd94(2): TEST EAX,EAX
0000dd96(2): JNZ 0x0000de05
0000dd98(6): SUB qword ptr [RSP + 0x8],0x8
0000dd9e(3): TEST R15,R15
0000dda1(6): JNZ 0x0000dba4
0000dda7(2): XOR EAX,EAX
0000dda9(2): JMP 0x0000de05
0000ddb0(6): JNZ 0x0000dc62
0000ddb6(3): MOV RSI,qword ptr [R14]
0000ddb9(3): ADD RSI,R9
0000ddbc(5): JMP 0x0000dc20
0000ddc8(4): MOV RAX,qword ptr [RSP]
0000ddcc(5): ADD dword ptr [RSP + 0x2c],0x1
0000ddd1(4): MOV ECX,dword ptr [RSP + 0x2c]
0000ddd5(6): CMP dword ptr [0xe0 + RAX],ECX
0000dddb(6): JGE 0x0000dbd4
0000dde1(5): MOV RDX,qword ptr [RSP + 0x8]
0000dde6(2): XOR ESI,ESI
0000dde8(5): CALL 0x00001a10
0000dded(5): MOV RDI,qword ptr [RSP + 0x50]
0000ddf2(5): CALL 0x00001880
0000ddf7(2): XOR EAX,EAX
0000ddf9(2): JMP 0x0000de15
0000de00(5): MOV EAX,0xc
0000de05(5): MOV RDI,qword ptr [RSP + 0x50]
0000de0a(3): MOV dword ptr [RSP],EAX
0000de0d(5): CALL 0x00001880
0000de12(3): MOV EAX,dword ptr [RSP]
0000de15(5): MOV RDX,qword ptr [RSP + 0x58]
0000de1a(9): XOR RDX,qword ptr FS:[0x28]
0000de23(2): JNZ 0x0000de3b
0000de25(4): ADD RSP,0x68
0000de29(1): POP RBX
0000de2a(1): POP RBP
0000de2b(2): POP R12
0000de2d(2): POP R13
0000de2f(2): POP R14
0000de31(2): POP R15
0000de33(1): RET
0000de34(5): MOV EAX,0xc
0000de39(2): JMP 0x0000de15
0000de3b(5): CALL 0x00001990
0000de40(2): PUSH R15
0000de42(2): PUSH R14
0000de44(2): PUSH R13
0000de46(2): PUSH R12
0000de48(3): MOV R13,R9
0000de4b(1): PUSH RBP
0000de4c(1): PUSH RBX
0000de4d(3): MOV RBP,RCX
0000de50(5): MOV ECX,0x20
0000de55(3): MOV R12,R8
0000de58(7): SUB RSP,0x238
0000de5f(3): MOV RBX,qword ptr [RDI]
0000de62(8): MOV RAX,qword ptr [0x278 + RSP]
0000de6a(5): MOV qword ptr [RSP + 0x48],RDI
0000de6f(5): MOV qword ptr [RSP + 0x78],RSI
0000de74(3): MOV RSI,RDI
0000de77(8): LEA RDI,[0x120 + RSP]
0000de7f(8): MOV qword ptr [0x88 + RSP],RDX
0000de87(5): MOV qword ptr [RSP + 0x38],RBX
0000de8c(8): MOV qword ptr [0xb8 + RSP],RAX
0000de94(4): MOV qword ptr [RSP],RDI
0000de98(9): MOV RAX,qword ptr FS:[0x28]
0000dea1(8): MOV qword ptr [0x228 + RSP],RAX
0000dea9(2): XOR EAX,EAX
0000deab(3): STOSQ.REP RDI
0000deae(4): MOV RDI,qword ptr [RSI + 0x20]
0000deb2(8): MOV qword ptr [0x1b8 + RSP],RBX
0000deba(3): TEST RDI,RDI
0000debd(5): MOV qword ptr [RSP + 0x68],RDI
0000dec2(2): JZ 0x0000dee6
0000dec4(4): MOVZX EDX,byte ptr [RSI + 0x38]
0000dec8(3): TEST DL,0x8
0000decb(6): JZ 0x0000e360
0000ded1(3): CMP RBP,R8
0000ded4(6): JZ 0x0000e360
0000deda(3): AND EDX,0x1
0000dedd(4): CMOVZ RAX,RDI
0000dee1(5): MOV qword ptr [RSP + 0x68],RAX
0000dee6(5): MOV RAX,qword ptr [RSP + 0x48]
0000deeb(12): MOV qword ptr [0x98 + RSP],0x0
0000def7(4): MOV RAX,qword ptr [RAX + 0x30]
0000defb(8): CMP RAX,qword ptr [0x270 + RSP]
0000df03(2): JNC 0x0000df24
0000df05(8): MOV RCX,qword ptr [0x270 + RSP]
0000df0d(4): LEA RDX,[RCX + -0x1]
0000df11(3): SUB RDX,RAX
0000df14(8): SUB qword ptr [0x270 + RSP],RDX
0000df1c(8): MOV qword ptr [0x98 + RSP],RDX
0000df24(5): MOV RSI,qword ptr [RSP + 0x48]
0000df29(5): CMP qword ptr [RSI + 0x10],0x0
0000df2e(6): JZ 0x0000edc0
0000df34(5): MOV RDI,qword ptr [RSP + 0x38]
0000df39(4): MOV RAX,qword ptr [RDI + 0x48]
0000df3d(3): TEST RAX,RAX
0000df40(6): JZ 0x0000edc0
0000df46(4): MOV RDX,qword ptr [RDI + 0x50]
0000df4a(3): TEST RDX,RDX
0000df4d(6): JZ 0x0000edc0
0000df53(4): MOV RCX,qword ptr [RDI + 0x58]
0000df57(3): TEST RCX,RCX
0000df5a(6): JZ 0x0000edc0
0000df60(5): CMP qword ptr [RDI + 0x60],0x0
0000df65(6): JZ 0x0000edc0
0000df6b(5): CMP qword ptr [RAX + 0x10],0x0
0000df70(2): JNZ 0x0000dfa8
0000df72(5): CMP qword ptr [RDX + 0x10],0x0
0000df77(2): JNZ 0x0000dfa8
0000df79(5): CMP qword ptr [RCX + 0x10],0x0
0000df7e(2): JZ 0x0000df86
0000df80(4): CMP byte ptr [RSI + 0x38],0x0
0000df84(2): JS 0x0000dfa8
0000df86(3): TEST RBP,RBP
0000df89(2): JZ 0x0000df9c
0000df8b(3): TEST R12,R12
0000df8e(8): MOV dword ptr [RSP + 0x5c],0x1
0000df96(6): JNZ 0x0000e9b9
0000df9c(3): XOR R12D,R12D
0000df9f(2): XOR EBP,EBP
0000dfa1(7): NOP dword ptr [RAX]
0000dfa8(9): CMP qword ptr [0x270 + RSP],0x0
0000dfb1(8): MOV dword ptr [RSP + 0x58],0x1
0000dfb9(6): JZ 0x0000e340
0000dfbf(5): MOV R11,qword ptr [RSP + 0x38]
0000dfc4(5): MOV RAX,qword ptr [RSP + 0x48]
0000dfc9(8): MOV RDI,qword ptr [0x88 + RSP]
0000dfd1(4): MOV RSI,qword ptr [R11 + 0x10]
0000dfd5(4): MOV RBX,qword ptr [RAX + 0x28]
0000dfd9(7): MOV EDX,dword ptr [0xb4 + R11]
0000dfe0(4): MOV RAX,qword ptr [RAX + 0x18]
0000dfe4(8): MOV qword ptr [0x178 + RSP],RDI
0000dfec(8): MOV qword ptr [0x170 + RSP],RDI
0000dff4(5): MOV qword ptr [RSP + 0x8],RSI
0000dff9(4): LEA RSI,[RSI + 0x1]
0000dffd(8): MOV qword ptr [0xb0 + RSP],RBX
0000e005(3): MOVSXD RCX,EDX
0000e008(4): SHR RAX,0x16
0000e00c(8): MOV qword ptr [0x198 + RSP],RBX
0000e014(3): AND EAX,0x1
0000e017(3): CMP RSI,RCX
0000e01a(7): MOV dword ptr [0x1b0 + RSP],EDX
0000e021(4): CMOVL RSI,RCX
0000e025(4): LEA RCX,[RDI + 0x1]
0000e029(7): MOV byte ptr [0x1a8 + RSP],AL
0000e030(8): MOV qword ptr [0x188 + RSP],RDI
0000e038(8): MOV qword ptr [0x180 + RSP],RDI
0000e040(3): CMP RSI,RCX
0000e043(4): MOV RDI,qword ptr [RSP]
0000e047(4): CMOVG RSI,RCX
0000e04b(3): TEST RBX,RBX
0000e04e(5): MOV RCX,qword ptr [RSP + 0x78]
0000e053(3): SETNZ BL
0000e056(2): OR EAX,EBX
0000e058(7): MOV byte ptr [0x1ab + RSP],AL
0000e05f(8): MOVZX EAX,byte ptr [0xb0 + R11]
0000e067(8): MOV qword ptr [0x120 + RSP],RCX
0000e06f(2): MOV EDX,EAX
0000e071(3): SHR AL,0x3
0000e074(3): SHR DL,0x2
0000e077(3): AND EAX,0x1
0000e07a(3): AND EDX,0x1
0000e07d(7): MOV byte ptr [0x1aa + RSP],AL
0000e084(7): MOV byte ptr [0x1a9 + RSP],DL
0000e08b(5): CALL 0x00005dd0
0000e090(2): TEST EAX,EAX
0000e092(4): MOV dword ptr [RSP + 0x5c],EAX
0000e096(6): JNZ 0x0000e990
0000e09c(5): MOV RDI,qword ptr [RSP + 0x38]
0000e0a1(7): LEA RAX,[0xb8 + RDI]
0000e0a8(8): MOV qword ptr [0x1a0 + RSP],RAX
0000e0b0(7): MOVZX EAX,byte ptr [0xb0 + RDI]
0000e0b7(4): MOV byte ptr [RSP + 0x8],AL
0000e0bb(3): SHR AL,0x4
0000e0be(3): AND EAX,0x1
0000e0c1(8): CMP byte ptr [0x1ab + RSP],0x0
0000e0c9(7): MOV byte ptr [0x1ae + RSP],AL
0000e0d0(2): JNZ 0x0000e0f5
0000e0d2(5): MOV RSI,qword ptr [RSP + 0x38]
0000e0d7(5): MOV RAX,qword ptr [RSP + 0x78]
0000e0dc(7): CMP dword ptr [0xb4 + RSI],0x1
0000e0e3(8): MOV qword ptr [0x128 + RSP],RAX
0000e0eb(8): MOV RAX,qword ptr [0x88 + RSP]
0000e0f3(2): JLE 0x0000e0f7
0000e0f5(2): XOR EAX,EAX
0000e0f7(8): MOV qword ptr [0x150 + RSP],RAX
0000e0ff(8): MOV qword ptr [0x158 + RSP],RAX
0000e107(5): MOV RAX,qword ptr [RSP + 0x48]
0000e10c(8): MOV qword ptr [0x188 + RSP],R13
0000e114(8): MOV qword ptr [0x180 + RSP],R13
0000e11c(4): MOVZX EAX,byte ptr [RAX + 0x38]
0000e120(4): MOV byte ptr [RSP + 0x8],AL
0000e124(3): SHR AL,0x7
0000e127(7): MOV byte ptr [0x1ad + RSP],AL
0000e12e(5): MOV RAX,qword ptr [RSP + 0x38]
0000e133(7): MOV R14,qword ptr [0x98 + RAX]
0000e13a(7): MOV EAX,dword ptr [0x280 + RSP]
0000e141(12): MOV qword ptr [0x1c8 + RSP],-0x1
0000e14d(4): LEA R13,[R14 + R14*0x1]
0000e151(7): MOV dword ptr [0x1c0 + RSP],EAX
0000e158(3): TEST R13,R13
0000e15b(2): JLE 0x0000e1af
0000e15d(10): MOV RAX,0x666666666666666
0000e167(3): CMP R13,RAX
0000e16a(6): JG 0x0000eeb0
0000e170(5): LEA RDI,[R13 + R14*0x8]
0000e175(4): SHL RDI,0x3
0000e179(5): CALL 0x00001ac0
0000e17e(3): MOV RDI,R14
0000e181(3): MOV R15,RAX
0000e184(8): MOV qword ptr [0x1f8 + RSP],RAX
0000e18c(4): SHL RDI,0x4
0000e190(5): CALL 0x00001ac0
0000e195(3): TEST RAX,RAX
0000e198(8): MOV qword ptr [0x218 + RSP],RAX
0000e1a0(6): JZ 0x0000eeb0
0000e1a6(3): TEST R15,R15
0000e1a9(6): JZ 0x0000eeb0
0000e1af(9): CMP qword ptr [0x270 + RSP],0x1
0000e1b8(8): MOV qword ptr [0x1f0 + RSP],R13
0000e1c0(11): MOV dword ptr [0x200 + RSP],0x1
0000e1cb(8): MOV qword ptr [0x210 + RSP],R13
0000e1d3(6): JBE 0x0000f2f8
0000e1d9(8): MOV RAX,qword ptr [0x160 + RSP]
0000e1e1(10): MOV RDX,0x1ffffffffffffffe
0000e1eb(3): CMP RAX,RDX
0000e1ee(6): JA 0x0000eeb0
0000e1f4(8): LEA RDI,[0x8 + RAX*0x8]
0000e1fc(5): CALL 0x00001ac0
0000e201(3): TEST RAX,RAX
0000e204(3): MOV RDI,RAX
0000e207(8): MOV qword ptr [0x1d8 + RSP],RAX
0000e20f(6): JZ 0x0000ef00
0000e215(7): MOV EAX,dword ptr [0x280 + RSP]
0000e21c(8): MOV qword ptr [0xd8 + RSP],RBP
0000e224(3): AND EAX,0x1
0000e227(3): CMP EAX,0x1
0000e22a(2): SBB EAX,EAX
0000e22c(3): AND EAX,0x2
0000e22f(3): ADD EAX,0x4
0000e232(7): MOV dword ptr [0x190 + RSP],EAX
0000e239(2): XOR EAX,EAX
0000e23b(3): CMP RBP,R12
0000e23e(3): SETLE AL
0000e241(4): LEA EAX,[RAX + RAX*0x1 + -0x1]
0000e245(7): MOV dword ptr [0xac + RSP],EAX
0000e24c(3): MOV RAX,R12
0000e24f(4): CMOVLE RAX,RBP
0000e253(8): MOV qword ptr [0x90 + RSP],RAX
0000e25b(3): MOV RAX,R12
0000e25e(4): CMOVGE RAX,RBP
0000e262(6): CMP qword ptr [RSP + 0x68],0x0
0000e268(5): MOV qword ptr [RSP + 0x70],RAX
0000e26d(5): MOV RAX,qword ptr [RSP + 0x38]
0000e272(6): MOV ESI,dword ptr [0xb4 + RAX]
0000e278(5): MOV EAX,0x8
0000e27d(7): MOV dword ptr [0xc8 + RSP],ESI
0000e284(2): JZ 0x0000e2bf
0000e286(3): CMP ESI,0x1
0000e289(5): MOV ECX,0x4
0000e28e(2): JZ 0x0000e2ae
0000e290(5): MOV RAX,qword ptr [RSP + 0x48]
0000e295(4): TEST byte ptr [RAX + 0x1a],0x40
0000e299(6): JNZ 0x0000f01e
0000e29f(9): CMP qword ptr [0xb0 + RSP],0x0
0000e2a8(6): JNZ 0x0000f01e
0000e2ae(2): XOR EDX,EDX
0000e2b0(3): CMP RBP,R12
0000e2b3(3): MOVZX EAX,BL
0000e2b6(3): SETLE DL
0000e2b9(2): OR EAX,ECX
0000e2bb(2): ADD EDX,EDX
0000e2bd(2): OR EAX,EDX
0000e2bf(5): CMP RBP,qword ptr [RSP + 0x70]
0000e2c4(3): SETG CL
0000e2c7(8): CMP RBP,qword ptr [0x90 + RSP]
0000e2cf(3): SETL DL
0000e2d2(2): OR CL,DL
0000e2d4(6): JNZ 0x0000eda9
0000e2da(8): LEA RCX,[0xd8 + RSP]
0000e2e2(3): CMP RBP,R12
0000e2e5(5): MOV EDX,0x0
0000e2ea(4): CMOVLE RDX,RCX
0000e2ee(3): TEST RDX,RDX
0000e2f1(8): MOV qword ptr [0xc0 + RSP],RDX
0000e2f9(8): SETNZ byte ptr [0xcf + RSP]
0000e301(3): SUB EAX,0x4
0000e304(7): MOV dword ptr [0xa8 + RSP],EAX
0000e30b(8): LEA RAX,[0xd0 + RSP]
0000e313(5): MOV qword ptr [RSP + 0x28],RAX
0000e318(7): MOV EAX,dword ptr [0xa8 + RSP]
0000e31f(3): CMP EAX,0x4
0000e322(6): JA 0x0000ef0d
0000e328(7): LEA RCX,[0x15060]
0000e32f(4): MOVSXD RAX,dword ptr [RCX + RAX*0x4]
0000e333(3): ADD RAX,RCX
0000e336(2): JMP RAX
0000e340(5): MOV RAX,qword ptr [RSP + 0x38]
0000e345(8): CMP qword ptr [0x98 + RAX],0x0
0000e34d(3): SETNZ AL
0000e350(3): MOVZX EAX,AL
0000e353(4): MOV dword ptr [RSP + 0x58],EAX
0000e357(5): JMP 0x0000dfbf
0000e360(9): MOV qword ptr [RSP + 0x68],0x0
0000e369(5): JMP 0x0000dee6
0000e36e(5): CMP qword ptr [RSP + 0x70],RBP
0000e373(2): JLE 0x0000e3cf
0000e375(5): MOV RAX,qword ptr [RSP + 0x78]
0000e37a(5): MOV RDI,qword ptr [RSP + 0x68]
0000e37f(4): MOVZX EDX,byte ptr [RAX + RBP*0x1]
0000e383(4): LEA RAX,[RBP + 0x1]
0000e387(4): CMP byte ptr [RDI + RDX*0x1],0x0
0000e38b(6): JNZ 0x0000e418
0000e391(5): MOV RSI,qword ptr [RSP + 0x68]
0000e396(5): MOV RCX,qword ptr [RSP + 0x70]
0000e39b(5): MOV RDI,qword ptr [RSP + 0x78]
0000e3a0(2): JMP 0x0000e3ba
0000e3a8(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0000e3ac(4): LEA RAX,[RAX + 0x1]
0000e3b0(4): CMP byte ptr [RSI + RDX*0x1],0x0
0000e3b4(6): JNZ 0x0000f551
0000e3ba(3): CMP RCX,RAX
0000e3bd(3): MOV RBP,RAX
0000e3c0(2): JNZ 0x0000e3a8
0000e3c2(5): MOV RAX,qword ptr [RSP + 0x70]
0000e3c7(8): MOV qword ptr [0xd8 + RSP],RAX
0000e3cf(5): CMP qword ptr [RSP + 0x70],RBP
0000e3d4(2): JNZ 0x0000e418
0000e3d6(2): XOR EAX,EAX
0000e3d8(5): MOV RSI,qword ptr [RSP + 0x70]
0000e3dd(8): CMP qword ptr [0x88 + RSP],RSI
0000e3e5(2): JLE 0x0000e3f0
0000e3e7(5): MOV RAX,qword ptr [RSP + 0x78]
0000e3ec(4): MOVZX EAX,byte ptr [RAX + RSI*0x1]
0000e3f0(8): MOV RSI,qword ptr [0xb0 + RSP]
0000e3f8(3): TEST RSI,RSI
0000e3fb(2): JZ 0x0000e401
0000e3fd(4): MOVZX EAX,byte ptr [RSI + RAX*0x1]
0000e401(5): MOV RDI,qword ptr [RSP + 0x68]
0000e406(4): CMP byte ptr [RDI + RAX*0x1],0x0
0000e40a(6): JZ 0x0000eda9
0000e410(5): MOV RBP,qword ptr [RSP + 0x70]
0000e415(3): NOP dword ptr [RAX]
0000e418(7): MOV EDX,dword ptr [0x280 + RSP]
0000e41f(4): MOV RDI,qword ptr [RSP]
0000e423(3): MOV RSI,RBP
0000e426(5): CALL 0x000094d0
0000e42b(2): TEST EAX,EAX
0000e42d(4): MOV dword ptr [RSP + 0x5c],EAX
0000e431(6): JNZ 0x0000e990
0000e437(8): CMP dword ptr [0xc8 + RSP],0x1
0000e43f(2): JZ 0x0000e45d
0000e441(9): CMP qword ptr [0x150 + RSP],0x0
0000e44a(2): JZ 0x0000e45d
0000e44c(8): MOV RAX,qword ptr [0x130 + RSP]
0000e454(3): CMP dword ptr [RAX],-0x1
0000e457(6): JZ 0x0000ed81
0000e45d(8): MOV RBX,qword ptr [0x1b8 + RSP]
0000e465(5): MOVZX EAX,byte ptr [RSP + 0x58]
0000e46a(11): MOV dword ptr [0x200 + RSP],0x0
0000e475(12): MOV qword ptr [0x1e8 + RSP],0x0
0000e481(12): MOV qword ptr [0x1e0 + RSP],0x0
0000e48d(11): MOV dword ptr [0xd0 + RSP],0x0
0000e498(4): MOV R14,qword ptr [RBX + 0x48]
0000e49c(3): AND EAX,0x1
0000e49f(7): MOV byte ptr [0xce + RSP],AL
0000e4a6(8): MOV RAX,qword ptr [0x168 + RSP]
0000e4ae(5): CMP byte ptr [R14 + 0x68],0x0
0000e4b3(5): MOV qword ptr [RSP + 0x8],RAX
0000e4b8(6): JS 0x0000ee30
0000e4be(8): MOV RAX,qword ptr [0x1d8 + RSP]
0000e4c6(3): TEST RAX,RAX
0000e4c9(2): JZ 0x0000e4e2
0000e4cb(8): CMP qword ptr [0x98 + RBX],0x0
0000e4d3(5): MOV RDI,qword ptr [RSP + 0x8]
0000e4d8(4): MOV qword ptr [RAX + RDI*0x8],R14
0000e4dc(6): JNZ 0x0000f3cb
0000e4e2(8): MOVZX EAX,byte ptr [0xcf + RSP]
0000e4ea(4): MOV byte ptr [RSP + 0x18],AL
0000e4ee(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000e4f3(2): TEST AL,0x10
0000e4f5(9): MOV qword ptr [RSP + 0x20],-0x1
0000e4fe(9): MOV qword ptr [RSP + 0x30],0x0
0000e507(6): JNZ 0x0000f390
0000e50d(8): MOV RAX,qword ptr [0xc0 + RSP]
0000e515(8): MOV R8,qword ptr [0x168 + RSP]
0000e51d(5): MOV qword ptr [RSP + 0x50],RAX
0000e522(8): LEA RAX,[0xe0 + RSP]
0000e52a(5): MOV qword ptr [RSP + 0x60],RAX
0000e52f(8): LEA RAX,[0xd4 + RSP]
0000e537(8): MOV qword ptr [0x80 + RSP],RAX
0000e53f(2): JMP 0x0000e59c
0000e548(3): CMP R14,R13
0000e54b(8): MOV R8,qword ptr [0x168 + RSP]
0000e553(3): SETZ AL
0000e556(4): AND byte ptr [RSP + 0x18],AL
0000e55a(5): MOVZX EAX,byte ptr [R13 + 0x68]
0000e55f(6): CMOVZ RBX,qword ptr [RSP + 0x8]
0000e565(2): TEST AL,0x10
0000e567(5): MOV qword ptr [RSP + 0x8],RBX
0000e56c(2): JZ 0x0000e599
0000e56e(2): TEST AL,AL
0000e570(6): JS 0x0000ea30
0000e576(4): MOV EAX,dword ptr [RSP + 0x58]
0000e57a(5): MOV qword ptr [RSP + 0x20],R8
0000e57f(2): TEST EAX,EAX
0000e581(6): JZ 0x0000e6a6
0000e587(9): MOV qword ptr [RSP + 0x30],0x1
0000e590(9): MOV qword ptr [RSP + 0x50],0x0
0000e599(3): MOV R14,R13
0000e59c(8): CMP qword ptr [0x188 + RSP],R8
0000e5a4(6): JLE 0x0000e694
0000e5aa(8): MOV RAX,qword ptr [0x160 + RSP]
0000e5b2(4): LEA RBX,[R8 + 0x1]
0000e5b6(3): CMP RBX,RAX
0000e5b9(6): JGE 0x0000ea60
0000e5bf(8): MOV RAX,qword ptr [0x150 + RSP]
0000e5c7(3): CMP RBX,RAX
0000e5ca(6): JGE 0x0000ed50
0000e5d0(5): TEST byte ptr [R14 + 0x68],0x20
0000e5d5(6): JNZ 0x0000eaa0
0000e5db(4): LEA RAX,[R8 + 0x1]
0000e5df(8): MOV qword ptr [0x168 + RSP],RAX
0000e5e7(8): MOV RAX,qword ptr [0x128 + RSP]
0000e5ef(5): MOVZX R13D,byte ptr [RAX + R8*0x1]
0000e5f4(4): MOV RAX,qword ptr [R14 + 0x58]
0000e5f8(3): TEST RAX,RAX
0000e5fb(6): JZ 0x0000ed10
0000e601(4): MOV R13,qword ptr [RAX + R13*0x8]
0000e605(9): CMP qword ptr [0x1d8 + RSP],0x0
0000e60e(2): JZ 0x0000e624
0000e610(4): MOV RSI,qword ptr [RSP]
0000e614(5): MOV RDI,qword ptr [RSP + 0x28]
0000e619(3): MOV RDX,R13
0000e61c(5): CALL 0x0000d910
0000e621(3): MOV R13,RAX
0000e624(3): TEST R13,R13
0000e627(6): JNZ 0x0000e548
0000e62d(7): MOV ECX,dword ptr [0xd0 + RSP]
0000e634(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000e63c(2): TEST ECX,ECX
0000e63e(6): JNZ 0x0000ef00
0000e644(3): TEST RDI,RDI
0000e647(2): JZ 0x0000e694
0000e649(8): MOVZX EAX,byte ptr [0xce + RSP]
0000e651(3): XOR EAX,0x1
0000e654(4): TEST byte ptr [RSP + 0x30],AL
0000e658(2): JNZ 0x0000e694
0000e65a(8): MOV RSI,qword ptr [0x1e0 + RSP]
0000e662(8): MOV RAX,qword ptr [0x168 + RSP]
0000e66a(2): XOR ECX,ECX
0000e66c(2): JMP 0x0000e683
0000e670(5): CMP qword ptr [RDI + RDX*0x8],0x0
0000e675(3): MOV RAX,RDX
0000e678(5): MOV ECX,0x1
0000e67d(6): JNZ 0x0000e9f0
0000e683(4): LEA RDX,[RAX + 0x1]
0000e687(3): CMP RSI,RDX
0000e68a(2): JGE 0x0000e670
0000e68c(2): TEST CL,CL
0000e68e(6): JNZ 0x0000f55e
0000e694(5): MOV RAX,qword ptr [RSP + 0x50]
0000e699(3): TEST RAX,RAX
0000e69c(2): JZ 0x0000e6a6
0000e69e(5): MOV RDI,qword ptr [RSP + 0x8]
0000e6a3(3): ADD qword ptr [RAX],RDI
0000e6a6(5): MOV RAX,qword ptr [RSP + 0x20]
0000e6ab(4): CMP RAX,-0x1
0000e6af(6): JZ 0x0000ed70
0000e6b5(4): CMP RAX,-0x2
0000e6b9(6): JZ 0x0000eeb0
0000e6bf(5): MOV RAX,qword ptr [RSP + 0x20]
0000e6c4(8): MOV qword ptr [0x1c8 + RSP],RAX
0000e6cc(5): MOV RAX,qword ptr [RSP + 0x48]
0000e6d1(4): TEST byte ptr [RAX + 0x38],0x10
0000e6d5(6): JNZ 0x0000ee90
0000e6db(9): CMP qword ptr [0x270 + RSP],0x1
0000e6e4(6): JBE 0x0000efdc
0000e6ea(5): MOV RCX,qword ptr [RSP + 0x20]
0000e6ef(8): MOV RBX,qword ptr [0x1d8 + RSP]
0000e6f7(4): MOV RDI,qword ptr [RSP]
0000e6fb(4): MOV RAX,qword ptr [RBX + RCX*0x8]
0000e6ff(4): MOV RSI,qword ptr [RAX + 0x10]
0000e703(4): LEA RDX,[RAX + 0x18]
0000e707(5): CALL 0x00009400
0000e70c(3): MOV R13,RAX
0000e70f(8): MOV qword ptr [0x1d0 + RSP],RAX
0000e717(5): MOV RAX,qword ptr [RSP + 0x38]
0000e71c(7): TEST byte ptr [0xb0 + RAX],0x1
0000e723(2): JNZ 0x0000e740
0000e725(5): MOV RAX,qword ptr [RSP + 0x38]
0000e72a(8): CMP qword ptr [0x98 + RAX],0x0
0000e732(6): JZ 0x0000f0cc
0000e738(8): MOV R13,qword ptr [0x1d0 + RSP]
0000e740(10): MOV RSI,0x1ffffffffffffffe
0000e74a(5): CMP qword ptr [RSP + 0x20],RSI
0000e74f(8): MOV R15,qword ptr [0x1b8 + RSP]
0000e757(6): JA 0x0000f3bb
0000e75d(5): MOV RAX,qword ptr [RSP + 0x20]
0000e762(4): ADD RAX,0x1
0000e766(8): LEA RBX,[RAX*0x8]
0000e76e(5): MOV qword ptr [RSP + 0x8],RAX
0000e773(3): MOV RDI,RBX
0000e776(5): CALL 0x00001ac0
0000e77b(3): TEST RAX,RAX
0000e77e(3): MOV R12,RAX
0000e781(6): JZ 0x0000eeb0
0000e787(8): CMP qword ptr [0x98 + R15],0x0
0000e78f(6): JZ 0x0000f025
0000e795(3): MOV RDI,RBX
0000e798(5): CALL 0x00001ac0
0000e79d(3): TEST RAX,RAX
0000e7a0(3): MOV RBP,RAX
0000e7a3(6): JZ 0x0000eea8
0000e7a9(5): MOV R14,qword ptr [RSP + 0x20]
0000e7ae(8): LEA RBX,[0xe0 + RSP]
0000e7b6(5): MOV qword ptr [RSP + 0x10],R15
0000e7bb(5): MOV qword ptr [RSP + 0x18],RAX
0000e7c0(5): MOV RAX,qword ptr [RSP + 0x8]
0000e7c5(2): XOR ESI,ESI
0000e7c7(3): MOV RDI,RBP
0000e7ca(8): LEA RDX,[RAX*0x8]
0000e7d2(5): CALL 0x00001a10
0000e7d7(4): PXOR XMM0,XMM0
0000e7db(8): MOV qword ptr [0xe0 + RSP],R12
0000e7e3(8): MOV qword ptr [0xe8 + RSP],RBP
0000e7eb(8): MOV qword ptr [0xf0 + RSP],R13
0000e7f3(3): MOV RSI,RBX
0000e7f6(8): MOV qword ptr [0xf8 + RSP],R14
0000e7fe(4): MOV RDI,qword ptr [RSP]
0000e802(4): MOVAPS xmmword ptr [RBX + 0x20],XMM0
0000e806(8): MOV qword ptr [RBX + 0x30],0x0
0000e80e(5): CALL 0x0000db00
0000e813(8): MOV RDI,qword ptr [0x110 + RSP]
0000e81b(3): MOV R15D,EAX
0000e81e(5): CALL 0x00001880
0000e823(3): TEST R15D,R15D
0000e826(6): JNZ 0x0000f444
0000e82c(5): CMP qword ptr [R12],0x0
0000e831(6): JNZ 0x0000f4a3
0000e837(5): CMP qword ptr [RBP],0x0
0000e83c(6): JNZ 0x0000f4a3
0000e842(8): MOV RDX,qword ptr [0x1d8 + RSP]
0000e84a(6): NOP word ptr [RAX + RAX*0x1]
0000e850(4): SUB R14,0x1
0000e854(4): CMP R14,-0x1
0000e858(6): JZ 0x0000f31b
0000e85e(4): MOV RAX,qword ptr [RDX + R14*0x8]
0000e862(3): TEST RAX,RAX
0000e865(2): JZ 0x0000e850
0000e867(4): TEST byte ptr [RAX + 0x68],0x10
0000e86b(2): JZ 0x0000e850
0000e86d(4): MOV RSI,qword ptr [RAX + 0x10]
0000e871(4): MOV RDI,qword ptr [RSP]
0000e875(4): LEA RDX,[RAX + 0x18]
0000e879(3): MOV RCX,R14
0000e87c(5): CALL 0x00009400
0000e881(3): MOV R13,RAX
0000e884(4): LEA RAX,[R14 + 0x1]
0000e888(5): MOV qword ptr [RSP + 0x8],RAX
0000e88d(5): JMP 0x0000e7c0
0000e892(5): CMP qword ptr [RSP + 0x70],RBP
0000e897(6): JLE 0x0000e3cf
0000e89d(5): MOV RAX,qword ptr [RSP + 0x78]
0000e8a2(8): MOV RDI,qword ptr [0xb0 + RSP]
0000e8aa(5): MOV RSI,qword ptr [RSP + 0x68]
0000e8af(4): MOVZX EAX,byte ptr [RAX + RBP*0x1]
0000e8b3(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0000e8b7(4): LEA RAX,[RBP + 0x1]
0000e8bb(4): CMP byte ptr [RSI + RDX*0x1],0x0
0000e8bf(6): JNZ 0x0000e418
0000e8c5(5): MOV RSI,qword ptr [RSP + 0x68]
0000e8ca(8): MOV RDI,qword ptr [0xb0 + RSP]
0000e8d2(5): MOV RCX,qword ptr [RSP + 0x70]
0000e8d7(5): MOV R8,qword ptr [RSP + 0x78]
0000e8dc(2): JMP 0x0000e8f7
0000e8e0(5): MOVZX EAX,byte ptr [R8 + RAX*0x1]
0000e8e5(4): MOVZX EDX,byte ptr [RDI + RAX*0x1]
0000e8e9(4): LEA RAX,[RBP + 0x1]
0000e8ed(4): CMP byte ptr [RSI + RDX*0x1],0x0
0000e8f1(6): JNZ 0x0000f551
0000e8f7(3): CMP RCX,RAX
0000e8fa(3): MOV RBP,RAX
0000e8fd(2): JNZ 0x0000e8e0
0000e8ff(5): JMP 0x0000e3c2
0000e904(8): CMP qword ptr [0x90 + RSP],RBP
0000e90c(6): JG 0x0000eda9
0000e912(2): XOR ECX,ECX
0000e914(3): MOV RAX,RBP
0000e917(5): MOV RDI,qword ptr [RSP + 0x68]
0000e91c(8): MOV RSI,qword ptr [0xb0 + RSP]
0000e924(8): MOV R9,qword ptr [0x90 + RSP]
0000e92c(5): MOV R10,qword ptr [RSP + 0x78]
0000e931(8): MOV R8,qword ptr [0x88 + RSP]
0000e939(2): JMP 0x0000e952
0000e940(4): SUB RAX,0x1
0000e944(5): MOV ECX,0x1
0000e949(3): CMP RAX,R9
0000e94c(6): JL 0x0000f330
0000e952(2): XOR EDX,EDX
0000e954(3): CMP R8,RAX
0000e957(2): JLE 0x0000e95e
0000e959(5): MOVZX EDX,byte ptr [R10 + RAX*0x1]
0000e95e(3): TEST RSI,RSI
0000e961(2): JZ 0x0000e967
0000e963(4): MOVZX EDX,byte ptr [RSI + RDX*0x1]
0000e967(4): CMP byte ptr [RDI + RDX*0x1],0x0
0000e96b(2): JZ 0x0000e940
0000e96d(2): TEST CL,CL
0000e96f(6): JZ 0x0000e418
0000e975(8): MOV qword ptr [0xd8 + RSP],RAX
0000e97d(3): MOV RBP,RAX
0000e980(5): JMP 0x0000e418
0000e988(4): MOV dword ptr [RSP + 0x5c],EAX
0000e98c(4): NOP dword ptr [RAX]
0000e990(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000e998(5): CALL 0x00001880
0000e99d(5): MOV RAX,qword ptr [RSP + 0x38]
0000e9a2(8): CMP qword ptr [0x98 + RAX],0x0
0000e9aa(6): JNZ 0x0000f2d0
0000e9b0(4): MOV RDI,qword ptr [RSP]
0000e9b4(5): CALL 0x00007110
0000e9b9(8): MOV RSI,qword ptr [0x228 + RSP]
0000e9c1(9): XOR RSI,qword ptr FS:[0x28]
0000e9ca(4): MOV EAX,dword ptr [RSP + 0x5c]
0000e9ce(6): JNZ 0x0000f56b
0000e9d4(7): ADD RSP,0x238
0000e9db(1): POP RBX
0000e9dc(1): POP RBP
0000e9dd(2): POP R12
0000e9df(2): POP R13
0000e9e1(2): POP R14
0000e9e3(2): POP R15
0000e9e5(1): RET
0000e9f0(4): MOV RSI,qword ptr [RSP]
0000e9f4(5): MOV RDI,qword ptr [RSP + 0x28]
0000e9f9(8): MOV qword ptr [0x168 + RSP],RDX
0000ea01(2): XOR EDX,EDX
0000ea03(5): CALL 0x0000d910
0000ea08(7): MOV EDX,dword ptr [0xd0 + RSP]
0000ea0f(2): TEST EDX,EDX
0000ea11(6): JNZ 0x0000f34d
0000ea17(3): TEST RAX,RAX
0000ea1a(6): JNZ 0x0000f360
0000ea20(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000ea28(5): JMP 0x0000e65a
0000ea30(4): MOV RSI,qword ptr [R13 + 0x10]
0000ea34(4): MOV RDI,qword ptr [RSP]
0000ea38(4): LEA RDX,[R13 + 0x18]
0000ea3c(3): MOV RCX,R8
0000ea3f(5): MOV qword ptr [RSP + 0x10],R8
0000ea44(5): CALL 0x00009400
0000ea49(3): TEST RAX,RAX
0000ea4c(5): MOV R8,qword ptr [RSP + 0x10]
0000ea51(6): JZ 0x0000e599
0000ea57(5): JMP 0x0000e576
0000ea60(8): CMP RAX,qword ptr [0x178 + RSP]
0000ea68(6): JGE 0x0000e5bf
0000ea6e(4): MOV RDI,qword ptr [RSP]
0000ea72(3): LEA ESI,[RBX + 0x1]
0000ea75(5): CALL 0x00006960
0000ea7a(2): TEST EAX,EAX
0000ea7c(7): MOV dword ptr [0xd0 + RSP],EAX
0000ea83(6): JNZ 0x0000f368
0000ea89(5): TEST byte ptr [R14 + 0x68],0x20
0000ea8e(8): MOV R8,qword ptr [0x168 + RSP]
0000ea96(6): JZ 0x0000e5db
0000ea9c(4): NOP dword ptr [RAX]
0000eaa0(5): CMP qword ptr [R14 + 0x10],0x0
0000eaa5(8): MOV R13,qword ptr [0x1b8 + RSP]
0000eaad(6): JLE 0x0000eddb
0000eab3(7): LEA RAX,[0xd8 + R13]
0000eaba(3): XOR R12D,R12D
0000eabd(8): MOV qword ptr [0xa0 + RSP],RBX
0000eac5(3): MOV RBX,R12
0000eac8(3): MOV R12,R8
0000eacb(5): MOV qword ptr [RSP + 0x40],RAX
0000ead0(5): JMP 0x0000ec28
0000ead8(2): TEST AL,0x1
0000eada(6): JZ 0x0000ec1a
0000eae0(3): AND ECX,0x8
0000eae3(6): JNZ 0x0000ec1a
0000eae9(3): TEST DL,0x20
0000eaec(2): JZ 0x0000eaf6
0000eaee(2): TEST AL,0x2
0000eaf0(6): JZ 0x0000ec1a
0000eaf6(6): AND EDX,0x80
0000eafc(2): JZ 0x0000eb10
0000eafe(2): TEST AL,0x8
0000eb00(6): JZ 0x0000ec1a
0000eb06(10): NOP word ptr CS:[RAX + RAX*0x1]
0000eb10(4): MOV RCX,qword ptr [RSP]
0000eb14(5): MOV RSI,qword ptr [RSP + 0x40]
0000eb19(3): MOV R8,R12
0000eb1c(3): MOV RDX,R15
0000eb1f(3): MOV RDI,RBP
0000eb22(5): CALL 0x0000bbd0
0000eb27(2): TEST EAX,EAX
0000eb29(6): JZ 0x0000ec12
0000eb2f(3): MOVSXD RBP,EAX
0000eb32(8): ADD RBP,qword ptr [0x168 + RSP]
0000eb3a(7): CMP dword ptr [0x200 + RSP],EAX
0000eb41(8): CMOVGE EAX,dword ptr [0x200 + RSP]
0000eb49(4): MOV RDI,qword ptr [RSP]
0000eb4d(3): MOV RSI,RBP
0000eb50(7): MOV dword ptr [0x200 + RSP],EAX
0000eb57(5): CALL 0x00006ab0
0000eb5c(2): TEST EAX,EAX
0000eb5e(7): MOV dword ptr [0xd4 + RSP],EAX
0000eb65(6): JNZ 0x0000ee00
0000eb6b(4): MOV RAX,qword ptr [R13 + 0x18]
0000eb6f(8): LEA R12,[RBP*0x8]
0000eb77(4): MOV RAX,qword ptr [RAX + R15*0x8]
0000eb7b(8): MOV R15,qword ptr [0x1d8 + RSP]
0000eb83(4): LEA RDX,[RAX + RAX*0x2]
0000eb87(4): MOV RAX,qword ptr [R13 + 0x30]
0000eb8b(3): ADD R15,R12
0000eb8e(4): LEA RDX,[RAX + RDX*0x8]
0000eb92(3): MOV RAX,qword ptr [R15]
0000eb95(3): TEST RAX,RAX
0000eb98(6): JZ 0x0000ec98
0000eb9e(4): MOV RSI,qword ptr [RAX + 0x50]
0000eba2(5): MOV RDI,qword ptr [RSP + 0x60]
0000eba7(5): CALL 0x00008610
0000ebac(2): TEST EAX,EAX
0000ebae(7): MOV dword ptr [0xd4 + RSP],EAX
0000ebb5(6): JNZ 0x0000ee00
0000ebbb(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000ebc2(4): MOV RDI,qword ptr [RSP]
0000ebc6(4): LEA RSI,[RBP + -0x1]
0000ebca(5): CALL 0x00009200
0000ebcf(5): MOV RDX,qword ptr [RSP + 0x60]
0000ebd4(8): MOV RDI,qword ptr [0x80 + RSP]
0000ebdc(2): MOV ECX,EAX
0000ebde(8): ADD R12,qword ptr [0x1d8 + RSP]
0000ebe6(3): MOV RSI,R13
0000ebe9(5): CALL 0x00008770
0000ebee(8): MOV RDI,qword ptr [0xf0 + RSP]
0000ebf6(4): MOV qword ptr [R12],RAX
0000ebfa(5): CALL 0x00001880
0000ebff(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000ec07(5): CMP qword ptr [RDI + RBP*0x8],0x0
0000ec0c(6): JZ 0x0000ecf1
0000ec12(8): MOV R12,qword ptr [0x168 + RSP]
0000ec1a(4): ADD RBX,0x1
0000ec1e(4): CMP RBX,qword ptr [R14 + 0x10]
0000ec22(6): JGE 0x0000edd0
0000ec28(4): MOV RAX,qword ptr [R14 + 0x18]
0000ec2c(4): MOV RBP,qword ptr [R13]
0000ec30(4): MOV R15,qword ptr [RAX + RBX*0x8]
0000ec34(3): MOV RAX,R15
0000ec37(4): SHL RAX,0x4
0000ec3b(3): ADD RAX,RBP
0000ec3e(4): TEST byte ptr [RAX + 0xa],0x10
0000ec42(2): JZ 0x0000ec1a
0000ec44(3): MOV ECX,dword ptr [RAX + 0x8]
0000ec47(6): TEST ECX,0x3ff00
0000ec4d(4): MOV dword ptr [RSP + 0x10],ECX
0000ec51(6): JZ 0x0000eb10
0000ec57(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000ec5e(4): MOV RDI,qword ptr [RSP]
0000ec62(3): MOV RSI,R12
0000ec65(5): CALL 0x00009200
0000ec6a(4): MOV ECX,dword ptr [RSP + 0x10]
0000ec6e(3): SHR ECX,0x8
0000ec71(2): MOV EDX,ECX
0000ec73(5): AND DX,0x3ff
0000ec78(3): TEST CL,0x4
0000ec7b(6): JNZ 0x0000ead8
0000ec81(3): AND ECX,0x8
0000ec84(6): JZ 0x0000eae9
0000ec8a(2): TEST AL,0x1
0000ec8c(6): JZ 0x0000eae9
0000ec92(2): JMP 0x0000ec1a
0000ec98(4): MOVDQU XMM0,xmmword ptr [RDX]
0000ec9c(4): LEA RSI,[RBP + -0x1]
0000eca0(4): MOV RDI,qword ptr [RSP]
0000eca4(8): MOVAPS xmmword ptr [0xe0 + RSP],XMM0
0000ecac(4): MOV RAX,qword ptr [RDX + 0x10]
0000ecb0(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000ecb7(8): MOV qword ptr [0xf0 + RSP],RAX
0000ecbf(5): CALL 0x00009200
0000ecc4(8): MOV RDI,qword ptr [0x80 + RSP]
0000eccc(5): MOV RDX,qword ptr [RSP + 0x60]
0000ecd1(2): MOV ECX,EAX
0000ecd3(3): MOV RSI,R13
0000ecd6(5): CALL 0x00008770
0000ecdb(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000ece3(3): MOV qword ptr [R15],RAX
0000ece6(5): CMP qword ptr [RDI + RBP*0x8],0x0
0000eceb(6): JNZ 0x0000ec12
0000ecf1(7): MOV EAX,dword ptr [0xd4 + RSP]
0000ecf8(2): TEST EAX,EAX
0000ecfa(6): JZ 0x0000ec12
0000ed00(8): MOV RBX,qword ptr [0xa0 + RSP]
0000ed08(5): JMP 0x0000ee10
0000ed10(4): MOV RBP,qword ptr [R14 + 0x60]
0000ed14(3): TEST RBP,RBP
0000ed17(6): JZ 0x0000eec5
0000ed1d(8): MOV RAX,qword ptr [0x168 + RSP]
0000ed25(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000ed2c(4): MOV RDI,qword ptr [RSP]
0000ed30(4): LEA RSI,[RAX + -0x1]
0000ed34(5): CALL 0x00009200
0000ed39(2): TEST AL,0x1
0000ed3b(6): JZ 0x0000edf0
0000ed41(8): MOV R13,qword ptr [0x800 + RBP + R13*0x8]
0000ed49(5): JMP 0x0000e605
0000ed50(8): CMP RAX,qword ptr [0x178 + RSP]
0000ed58(6): JGE 0x0000e5d0
0000ed5e(5): JMP 0x0000ea6e
0000ed63(3): MOV RDI,R12
0000ed66(5): CALL 0x00001880
0000ed6b(5): NOP dword ptr [RAX + RAX*0x1]
0000ed70(4): MOV RDI,qword ptr [RSP]
0000ed74(5): CALL 0x000072b0
0000ed79(8): MOV RBP,qword ptr [0xd8 + RSP]
0000ed81(8): MOVSXD RAX,dword ptr [0xac + RSP]
0000ed89(3): ADD RBP,RAX
0000ed8c(8): CMP RBP,qword ptr [0x90 + RSP]
0000ed94(8): MOV qword ptr [0xd8 + RSP],RBP
0000ed9c(2): JL 0x0000eda9
0000ed9e(5): CMP RBP,qword ptr [RSP + 0x70]
0000eda3(6): JLE 0x0000e318
0000eda9(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000edb1(8): MOV dword ptr [RSP + 0x5c],0x1
0000edb9(5): JMP 0x0000e998
0000edc0(8): MOV dword ptr [RSP + 0x5c],0x1
0000edc8(5): JMP 0x0000e9b9
0000edd0(8): MOV RBX,qword ptr [0xa0 + RSP]
0000edd8(3): MOV R8,R12
0000eddb(11): MOV dword ptr [0xd0 + RSP],0x0
0000ede6(5): JMP 0x0000e5db
0000edf0(5): MOV R13,qword ptr [RBP + R13*0x8]
0000edf5(5): JMP 0x0000e605
0000ee00(8): MOV RBX,qword ptr [0xa0 + RSP]
0000ee08(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000ee10(3): TEST RDI,RDI
0000ee13(7): MOV dword ptr [0xd0 + RSP],EAX
0000ee1a(6): JZ 0x0000ef00
0000ee20(3): XOR R13D,R13D
0000ee23(5): JMP 0x0000e610
0000ee30(7): MOV EDX,dword ptr [0x1c0 + RSP]
0000ee37(4): MOV RDI,qword ptr [RSP]
0000ee3b(4): LEA RSI,[RAX + -0x1]
0000ee3f(5): CALL 0x00009200
0000ee44(2): TEST AL,0x1
0000ee46(6): JZ 0x0000efb5
0000ee4c(4): MOV R14,qword ptr [RBX + 0x50]
0000ee50(3): TEST R14,R14
0000ee53(6): JNZ 0x0000e4be
0000ee59(7): MOV EAX,dword ptr [0xd0 + RSP]
0000ee60(3): CMP EAX,0xc
0000ee63(4): MOV dword ptr [RSP + 0x5c],EAX
0000ee67(6): JZ 0x0000e990
0000ee6d(7): LEA RCX,[0x154f0]
0000ee74(7): LEA RSI,[0x14f20]
0000ee7b(7): LEA RDI,[0x14fd4]
0000ee82(5): MOV EDX,0x435
0000ee87(5): CALL 0x00001a00
0000ee8c(4): NOP dword ptr [RAX]
0000ee90(5): MOV RAX,qword ptr [RSP + 0x38]
0000ee95(8): CMP qword ptr [0x98 + RAX],0x0
0000ee9d(6): JZ 0x0000f0cc
0000eea3(5): JMP 0x0000efef
0000eea8(3): MOV RDI,R12
0000eeab(5): CALL 0x00001880
0000eeb0(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000eeb8(8): MOV dword ptr [RSP + 0x5c],0xc
0000eec0(5): JMP 0x0000e998
0000eec5(8): MOV RDI,qword ptr [0x1b8 + RSP]
0000eecd(3): MOV RSI,R14
0000eed0(5): CALL 0x00009eb0
0000eed5(2): TEST AL,AL
0000eed7(6): JNZ 0x0000e5f4
0000eedd(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000eee5(11): MOV dword ptr [0xd0 + RSP],0xc
0000eef0(3): TEST RDI,RDI
0000eef3(6): JNZ 0x0000ee20
0000eef9(7): NOP dword ptr [RAX]
0000ef00(8): MOV dword ptr [RSP + 0x5c],0xc
0000ef08(5): JMP 0x0000e998
0000ef0d(5): MOV RBX,qword ptr [RSP + 0x68]
0000ef12(8): MOV R13D,dword ptr [0xac + RSP]
0000ef1a(8): MOV R14,qword ptr [0x90 + RSP]
0000ef22(5): MOV R15,qword ptr [RSP + 0x70]
0000ef27(8): MOV R12,qword ptr [0x88 + RSP]
0000ef2f(2): JMP 0x0000ef78
0000ef38(3): CMP R12,RBP
0000ef3b(3): MOV RAX,RBX
0000ef3e(2): JLE 0x0000ef4f
0000ef40(8): MOV RAX,qword ptr [0x128 + RSP]
0000ef48(4): MOVZX EAX,byte ptr [RAX + RDX*0x1]
0000ef4c(3): ADD RAX,RBX
0000ef4f(3): CMP byte ptr [RAX],0x0
0000ef52(6): JNZ 0x0000e418
0000ef58(3): MOVSXD RAX,R13D
0000ef5b(3): ADD RBP,RAX
0000ef5e(3): CMP RBP,R14
0000ef61(8): MOV qword ptr [0xd8 + RSP],RBP
0000ef69(6): JL 0x0000eda9
0000ef6f(3): CMP RBP,R15
0000ef72(6): JG 0x0000eda9
0000ef78(3): MOV RDX,RBP
0000ef7b(8): SUB RDX,qword ptr [0x148 + RSP]
0000ef83(8): CMP qword ptr [0x158 + RSP],RDX
0000ef8b(2): JA 0x0000ef38
0000ef8d(7): MOV EDX,dword ptr [0x280 + RSP]
0000ef94(4): MOV RDI,qword ptr [RSP]
0000ef98(3): MOV RSI,RBP
0000ef9b(5): CALL 0x000094d0
0000efa0(2): TEST EAX,EAX
0000efa2(6): JNZ 0x0000e988
0000efa8(3): MOV RDX,RBP
0000efab(8): SUB RDX,qword ptr [0x148 + RSP]
0000efb3(2): JMP 0x0000ef38
0000efb5(2): TEST EAX,EAX
0000efb7(6): JZ 0x0000e4be
0000efbd(2): MOV EDX,EAX
0000efbf(3): AND EDX,0x6
0000efc2(3): CMP EDX,0x6
0000efc5(6): JZ 0x0000f42f
0000efcb(2): TEST AL,0x2
0000efcd(6): JZ 0x0000f480
0000efd3(4): MOV R14,qword ptr [RBX + 0x58]
0000efd7(5): JMP 0x0000ee50
0000efdc(5): MOV RAX,qword ptr [RSP + 0x38]
0000efe1(8): CMP qword ptr [0x98 + RAX],0x0
0000efe9(6): JZ 0x0000f0cc
0000efef(5): MOV RCX,qword ptr [RSP + 0x20]
0000eff4(8): MOV RBX,qword ptr [0x1d8 + RSP]
0000effc(4): MOV RDI,qword ptr [RSP]
0000f000(4): MOV RAX,qword ptr [RBX + RCX*0x8]
0000f004(4): MOV RSI,qword ptr [RAX + 0x10]
0000f008(4): LEA RDX,[RAX + 0x18]
0000f00c(5): CALL 0x00009400
0000f011(8): MOV qword ptr [0x1d0 + RSP],RAX
0000f019(5): JMP 0x0000e738
0000f01e(2): XOR ECX,ECX
0000f020(5): JMP 0x0000e2ae
0000f025(4): PXOR XMM0,XMM0
0000f029(8): MOV qword ptr [0xe0 + RSP],RAX
0000f031(4): MOV RDI,qword ptr [RSP]
0000f035(5): MOV RAX,qword ptr [RSP + 0x20]
0000f03a(8): LEA RBX,[0xe0 + RSP]
0000f042(12): MOV qword ptr [0xe8 + RSP],0x0
0000f04e(8): MOV qword ptr [0xf0 + RSP],R13
0000f056(3): MOV RSI,RBX
0000f059(12): MOV qword ptr [0x110 + RSP],0x0
0000f065(8): MOVAPS xmmword ptr [0x100 + RSP],XMM0
0000f06d(8): MOV qword ptr [0xf8 + RSP],RAX
0000f075(5): CALL 0x0000db00
0000f07a(8): MOV RDI,qword ptr [0x110 + RSP]
0000f082(4): MOV dword ptr [RSP + 0x8],EAX
0000f086(5): CALL 0x00001880
0000f08b(4): MOV EAX,dword ptr [RSP + 0x8]
0000f08f(2): TEST EAX,EAX
0000f091(6): JNZ 0x0000f4d8
0000f097(5): CMP qword ptr [R12],0x0
0000f09c(6): JZ 0x0000ed63
0000f0a2(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f0aa(5): CALL 0x00001880
0000f0af(5): MOV RAX,qword ptr [RSP + 0x20]
0000f0b4(8): MOV qword ptr [0x1d8 + RSP],R12
0000f0bc(8): MOV qword ptr [0x1d0 + RSP],R13
0000f0c4(8): MOV qword ptr [0x1c8 + RSP],RAX
0000f0cc(9): CMP qword ptr [0x270 + RSP],0x0
0000f0d5(6): JZ 0x0000e990
0000f0db(9): CMP qword ptr [0x270 + RSP],0x1
0000f0e4(6): JZ 0x0000f508
0000f0ea(8): MOV RSI,qword ptr [0xb8 + RSP]
0000f0f2(8): MOV RCX,qword ptr [0x270 + RSP]
0000f0fa(7): MOV RDX,-0x1
0000f101(4): SHL RCX,0x4
0000f105(4): LEA RAX,[RSI + 0x10]
0000f109(3): ADD RCX,RSI
0000f10c(4): MOV qword ptr [RAX + 0x8],RDX
0000f110(3): MOV qword ptr [RAX],RDX
0000f113(4): ADD RAX,0x10
0000f117(3): CMP RCX,RAX
0000f11a(2): JNZ 0x0000f10c
0000f11c(8): MOV RDI,qword ptr [0xb8 + RSP]
0000f124(8): MOV RAX,qword ptr [0x1c8 + RSP]
0000f12c(4): MOV qword ptr [RDI + 0x8],RAX
0000f130(5): MOV RAX,qword ptr [RSP + 0x48]
0000f135(7): MOV qword ptr [RDI],0x0
0000f13c(4): TEST byte ptr [RAX + 0x38],0x10
0000f140(6): JNZ 0x0000f523
0000f146(9): CMP qword ptr [0x270 + RSP],0x1
0000f14f(6): JZ 0x0000f523
0000f155(5): MOV RAX,qword ptr [RSP + 0x38]
0000f15a(3): XOR R8D,R8D
0000f15d(7): TEST byte ptr [0xb0 + RAX],0x1
0000f164(2): JZ 0x0000f175
0000f166(3): XOR R8D,R8D
0000f169(8): CMP qword ptr [0x98 + RAX],0x0
0000f171(4): SETG R8B
0000f175(8): MOV RBX,qword ptr [0xb8 + RSP]
0000f17d(8): MOV RDX,qword ptr [0x270 + RSP]
0000f185(4): MOV RSI,qword ptr [RSP]
0000f189(5): MOV RDI,qword ptr [RSP + 0x48]
0000f18e(3): MOV RCX,RBX
0000f191(5): CALL 0x0000c590
0000f196(2): TEST EAX,EAX
0000f198(6): JNZ 0x0000f46d
0000f19e(3): MOV RAX,qword ptr [RBX]
0000f1a1(9): MOVZX R11D,byte ptr [0x1ac + RSP]
0000f1aa(8): MOV R10,qword ptr [0x150 + RSP]
0000f1b2(2): XOR ECX,ECX
0000f1b4(8): MOV R9,qword ptr [0x138 + RSP]
0000f1bc(8): MOV R8,qword ptr [0x158 + RSP]
0000f1c4(8): MOV RDI,qword ptr [0xd8 + RSP]
0000f1cc(8): MOV RDX,qword ptr [0xb8 + RSP]
0000f1d4(2): JMP 0x0000f1d9
0000f1d6(3): MOV RAX,qword ptr [RDX]
0000f1d9(4): CMP RAX,-0x1
0000f1dd(2): JZ 0x0000f1f9
0000f1df(3): TEST R11B,R11B
0000f1e2(4): MOV RSI,qword ptr [RDX + 0x8]
0000f1e6(6): JNZ 0x0000f52a
0000f1ec(3): ADD RAX,RDI
0000f1ef(3): ADD RSI,RDI
0000f1f2(3): MOV qword ptr [RDX],RAX
0000f1f5(4): MOV qword ptr [RDX + 0x8],RSI
0000f1f9(4): ADD RCX,0x1
0000f1fd(4): ADD RDX,0x10
0000f201(8): CMP RCX,qword ptr [0x270 + RSP]
0000f209(2): JNZ 0x0000f1d6
0000f20b(9): CMP qword ptr [0x98 + RSP],0x0
0000f214(2): JLE 0x0000f255
0000f216(8): MOV RDX,qword ptr [0x98 + RSP]
0000f21e(8): MOV RDI,qword ptr [0xb8 + RSP]
0000f226(3): MOV RAX,RCX
0000f229(4): SHL RAX,0x4
0000f22d(3): ADD RDX,RCX
0000f230(5): LEA RAX,[RDI + RAX*0x1 + 0x8]
0000f235(4): SHL RDX,0x4
0000f239(5): LEA RSI,[RDI + RDX*0x1 + 0x8]
0000f23e(7): MOV RDX,-0x1
0000f245(4): MOV qword ptr [RAX + -0x8],RDX
0000f249(3): MOV qword ptr [RAX],RDX
0000f24c(4): ADD RAX,0x10
0000f250(3): CMP RSI,RAX
0000f253(2): JNZ 0x0000f245
0000f255(5): MOV RAX,qword ptr [RSP + 0x38]
0000f25a(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f262(7): MOV R9,qword ptr [0xe0 + RAX]
0000f269(3): TEST R9,R9
0000f26c(6): JZ 0x0000e998
0000f272(8): MOV R10,qword ptr [0xb8 + RSP]
0000f27a(3): XOR R8D,R8D
0000f27d(4): LEA RDX,[R10 + 0x10]
0000f281(2): JMP 0x0000f2b9
0000f283(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
0000f288(3): CMP RAX,R8
0000f28b(2): JZ 0x0000f2b2
0000f28d(4): ADD RAX,0x1
0000f291(4): SHL RAX,0x4
0000f295(4): MOV RAX,qword ptr [R10 + RAX*0x1]
0000f299(3): MOV qword ptr [RDX],RAX
0000f29c(5): MOV RAX,qword ptr [R9 + RSI*0x8 + -0x8]
0000f2a1(4): ADD RAX,0x1
0000f2a5(4): SHL RAX,0x4
0000f2a9(5): MOV RAX,qword ptr [R10 + RAX*0x1 + 0x8]
0000f2ae(4): MOV qword ptr [RDX + 0x8],RAX
0000f2b2(4): ADD RDX,0x10
0000f2b6(3): MOV R8,RSI
0000f2b9(4): LEA RSI,[R8 + 0x1]
0000f2bd(3): CMP RSI,RCX
0000f2c0(2): JNZ 0x0000f283
0000f2c2(5): JMP 0x0000e998
0000f2d0(4): MOV RDI,qword ptr [RSP]
0000f2d4(5): CALL 0x000072b0
0000f2d9(8): MOV RDI,qword ptr [0x218 + RSP]
0000f2e1(5): CALL 0x00001880
0000f2e6(8): MOV RDI,qword ptr [0x1f8 + RSP]
0000f2ee(5): CALL 0x00001880
0000f2f3(5): JMP 0x0000e9b0
0000f2f8(5): MOV RAX,qword ptr [RSP + 0x38]
0000f2fd(7): TEST byte ptr [0xb0 + RAX],0x2
0000f304(6): JNZ 0x0000e1d9
0000f30a(12): MOV qword ptr [0x1d8 + RSP],0x0
0000f316(5): JMP 0x0000e215
0000f31b(3): MOV RDI,R12
0000f31e(5): CALL 0x00001880
0000f323(3): MOV RDI,RBP
0000f326(5): CALL 0x00001880
0000f32b(5): JMP 0x0000ed70
0000f330(8): MOV qword ptr [0xd8 + RSP],RAX
0000f338(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f340(8): MOV dword ptr [RSP + 0x5c],0x1
0000f348(5): JMP 0x0000e998
0000f34d(3): TEST RAX,RAX
0000f350(3): MOV R13,RAX
0000f353(6): JNZ 0x0000e548
0000f359(5): JMP 0x0000e694
0000f360(3): MOV R13,RAX
0000f363(5): JMP 0x0000e548
0000f368(3): CMP EAX,0xc
0000f36b(6): JZ 0x0000eeb0
0000f371(7): LEA RCX,[0x154f0]
0000f378(7): LEA RSI,[0x14f20]
0000f37f(7): LEA RDI,[0x14fd4]
0000f386(5): MOV EDX,0x46c
0000f38b(5): CALL 0x00001a00
0000f390(5): CMP byte ptr [R14 + 0x68],0x0
0000f395(2): JS 0x0000f406
0000f397(4): MOV ESI,dword ptr [RSP + 0x58]
0000f39b(5): MOV RAX,qword ptr [RSP + 0x8]
0000f3a0(2): TEST ESI,ESI
0000f3a2(5): MOV qword ptr [RSP + 0x20],RAX
0000f3a7(6): JZ 0x0000e6a6
0000f3ad(9): MOV qword ptr [RSP + 0x30],0x1
0000f3b6(5): JMP 0x0000e50d
0000f3bb(3): MOV RDI,RBX
0000f3be(8): MOV dword ptr [RSP + 0x5c],0xc
0000f3c6(5): JMP 0x0000e998
0000f3cb(4): LEA RBX,[R14 + 0x10]
0000f3cf(4): LEA RBP,[R14 + 0x18]
0000f3d3(4): MOV RDI,qword ptr [RSP]
0000f3d7(2): XOR ECX,ECX
0000f3d9(3): MOV RDX,RBP
0000f3dc(3): MOV RSI,RBX
0000f3df(5): CALL 0x000090b0
0000f3e4(2): TEST EAX,EAX
0000f3e6(7): MOV dword ptr [0xd0 + RSP],EAX
0000f3ed(2): JNZ 0x0000f438
0000f3ef(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000f3f4(2): TEST AL,0x40
0000f3f6(6): JNZ 0x0000f4e0
0000f3fc(5): MOV byte ptr [RSP + 0x18],0x0
0000f401(5): JMP 0x0000e4f3
0000f406(4): MOV RSI,qword ptr [R14 + 0x10]
0000f40a(5): MOV RCX,qword ptr [RSP + 0x8]
0000f40f(4): LEA RDX,[R14 + 0x18]
0000f413(4): MOV RDI,qword ptr [RSP]
0000f417(5): CALL 0x00009400
0000f41c(3): TEST RAX,RAX
0000f41f(5): MOV qword ptr [RSP + 0x30],RAX
0000f424(6): JZ 0x0000e50d
0000f42a(5): JMP 0x0000f397
0000f42f(4): MOV R14,qword ptr [RBX + 0x60]
0000f433(5): JMP 0x0000ee50
0000f438(2): CDQE
0000f43a(5): MOV qword ptr [RSP + 0x20],RAX
0000f43f(5): JMP 0x0000e6a6
0000f444(5): MOV R14,qword ptr [RSP + 0x18]
0000f449(3): MOV EAX,R15D
0000f44c(3): MOV RDI,R12
0000f44f(4): MOV dword ptr [RSP + 0x8],EAX
0000f453(5): CALL 0x00001880
0000f458(3): MOV RDI,R14
0000f45b(5): CALL 0x00001880
0000f460(4): MOV EAX,dword ptr [RSP + 0x8]
0000f464(3): CMP EAX,0x1
0000f467(6): JZ 0x0000ed70
0000f46d(8): MOV RDI,qword ptr [0x1d8 + RSP]
0000f475(4): MOV dword ptr [RSP + 0x5c],EAX
0000f479(5): JMP 0x0000e998
0000f480(2): TEST AL,0x4
0000f482(6): JZ 0x0000e4be
0000f488(4): MOV RDX,qword ptr [R14 + 0x50]
0000f48c(5): MOV RDI,qword ptr [RSP + 0x28]
0000f491(2): MOV ECX,EAX
0000f493(3): MOV RSI,RBX
0000f496(5): CALL 0x00008770
0000f49b(3): MOV R14,RAX
0000f49e(5): JMP 0x0000ee50
0000f4a3(5): MOV R15,qword ptr [RSP + 0x10]
0000f4a8(5): MOV RCX,qword ptr [RSP + 0x8]
0000f4ad(3): MOV RDX,RBP
0000f4b0(3): MOV RSI,R12
0000f4b3(5): MOV qword ptr [RSP + 0x20],R14
0000f4b8(3): MOV RDI,R15
0000f4bb(5): CALL 0x00008c30
0000f4c0(3): MOV RDI,RBP
0000f4c3(4): MOV dword ptr [RSP + 0x8],EAX
0000f4c7(5): CALL 0x00001880
0000f4cc(4): MOV EAX,dword ptr [RSP + 0x8]
0000f4d0(2): TEST EAX,EAX
0000f4d2(6): JZ 0x0000f0a2
0000f4d8(3): XOR R14D,R14D
0000f4db(5): JMP 0x0000f44c
0000f4e0(4): MOV RDI,qword ptr [RSP]
0000f4e4(3): MOV RDX,RBP
0000f4e7(3): MOV RSI,RBX
0000f4ea(5): CALL 0x0000d020
0000f4ef(2): TEST EAX,EAX
0000f4f1(7): MOV dword ptr [0xd0 + RSP],EAX
0000f4f8(6): JNZ 0x0000f438
0000f4fe(5): MOVZX EAX,byte ptr [R14 + 0x68]
0000f503(5): JMP 0x0000f3fc
0000f508(8): MOV RSI,qword ptr [0xb8 + RSP]
0000f510(8): MOV RAX,qword ptr [0x1c8 + RSP]
0000f518(7): MOV qword ptr [RSI],0x0
0000f51f(4): MOV qword ptr [RSI + 0x8],RAX
0000f523(2): XOR EAX,EAX
0000f525(5): JMP 0x0000f1a1
0000f52a(3): CMP R10,RAX
0000f52d(2): JZ 0x0000f54c
0000f52f(4): MOV RAX,qword ptr [R9 + RAX*0x8]
0000f533(3): CMP R10,RSI
0000f536(3): MOV qword ptr [RDX],RAX
0000f539(2): JZ 0x0000f544
0000f53b(4): MOV RSI,qword ptr [R9 + RSI*0x8]
0000f53f(5): JMP 0x0000f1ec
0000f544(3): MOV RSI,R8
0000f547(5): JMP 0x0000f1ec
0000f54c(3): MOV RAX,R8
0000f54f(2): JMP 0x0000f533
0000f551(8): MOV qword ptr [0xd8 + RSP],RBP
0000f559(5): JMP 0x0000e418
0000f55e(8): MOV qword ptr [0x168 + RSP],RAX
0000f566(5): JMP 0x0000e694
0000f56b(5): CALL 0x00001990
0000f570(2): PUSH R15
0000f572(2): PUSH R14
0000f574(3): MOV RAX,RDI
0000f577(2): PUSH R13
0000f579(2): PUSH R12
0000f57b(3): MOV R13,RSI
0000f57e(1): PUSH RBP
0000f57f(1): PUSH RBX
0000f580(3): MOV RBP,RDX
0000f583(3): MOV RBX,RCX
0000f586(8): LEA RCX,[RDX*0x8]
0000f58e(7): SUB RSP,0xa8
0000f595(7): MOV R12,qword ptr [0x98 + RAX]
0000f59c(7): MOV RAX,qword ptr [0xb8 + RAX]
0000f5a3(5): MOV qword ptr [RSP + 0x8],RDI
0000f5a8(5): MOV qword ptr [RSP + 0x18],RCX
0000f5ad(9): MOV RDI,qword ptr FS:[0x28]
0000f5b6(8): MOV qword ptr [0x98 + RSP],RDI
0000f5be(2): XOR EDI,EDI
0000f5c0(4): MOV RDX,qword ptr [RAX + RDX*0x8]
0000f5c4(8): MOV dword ptr [RSP + 0x5c],0x0
0000f5cc(4): MOV RCX,qword ptr [RBX + 0x8]
0000f5d0(3): TEST RDX,RDX
0000f5d3(6): JZ 0x0000f828
0000f5d9(4): LEA RDI,[RDX + 0x8]
0000f5dd(3): TEST RCX,RCX
0000f5e0(5): MOV qword ptr [RSP + 0x10],RDI
0000f5e5(2): JNZ 0x0000f638
0000f5e7(3): MOV RDX,qword ptr [RSI]
0000f5ea(8): MOV qword ptr [RDX + RBP*0x8],0x0
0000f5f2(4): MOV RDX,qword ptr [RAX + RBP*0x8]
0000f5f6(2): XOR EAX,EAX
0000f5f8(4): TEST byte ptr [RDX + 0x68],0x40
0000f5fc(6): JNZ 0x0000f6df
0000f602(6): NOP word ptr [RAX + RAX*0x1]
0000f608(8): MOV RDI,qword ptr [0x98 + RSP]
0000f610(9): XOR RDI,qword ptr FS:[0x28]
0000f619(6): JNZ 0x0000fdbb
0000f61f(7): ADD RSP,0xa8
0000f626(1): POP RBX
0000f627(1): POP RBP
0000f628(2): POP R12
0000f62a(2): POP R13
0000f62c(2): POP R14
0000f62e(2): POP R15
0000f630(1): RET
0000f638(5): LEA RDI,[RSP + 0x60]
0000f63d(3): MOV RDX,RBX
0000f640(3): MOV RSI,R12
0000f643(8): MOV dword ptr [RSP + 0x60],0x0
0000f64b(5): CALL 0x00008a30
0000f650(3): MOV RDX,RAX
0000f653(4): MOV EAX,dword ptr [RSP + 0x60]
0000f657(2): TEST EAX,EAX
0000f659(2): JNZ 0x0000f608
0000f65b(4): MOV R15,qword ptr [RDX + 0x38]
0000f65f(4): LEA R14,[RDX + 0x38]
0000f663(3): TEST R15,R15
0000f666(6): JZ 0x0000f870
0000f66c(5): MOV RSI,qword ptr [RSP + 0x10]
0000f671(3): MOV RDX,R14
0000f674(3): MOV RDI,RBX
0000f677(5): CALL 0x00007f30
0000f67c(2): TEST EAX,EAX
0000f67e(4): MOV dword ptr [RSP + 0x5c],EAX
0000f682(2): JNZ 0x0000f608
0000f684(5): CMP qword ptr [R13 + 0x28],0x0
0000f689(6): JNZ 0x0000f900
0000f68f(5): MOV R14,qword ptr [RSP + 0x18]
0000f694(4): ADD R14,qword ptr [R13]
0000f698(5): LEA RDI,[RSP + 0x5c]
0000f69d(3): MOV RDX,RBX
0000f6a0(3): MOV RSI,R12
0000f6a3(5): CALL 0x00008a30
0000f6a8(3): MOV qword ptr [R14],RAX
0000f6ab(4): MOV EAX,dword ptr [RSP + 0x5c]
0000f6af(2): TEST EAX,EAX
0000f6b1(6): JNZ 0x0000f608
0000f6b7(6): CMP qword ptr [RSP + 0x10],0x0
0000f6bd(6): JZ 0x0000f608
0000f6c3(5): MOV RAX,qword ptr [RSP + 0x8]
0000f6c8(7): MOV RAX,qword ptr [0xb8 + RAX]
0000f6cf(4): MOV RDX,qword ptr [RAX + RBP*0x8]
0000f6d3(2): XOR EAX,EAX
0000f6d5(4): TEST byte ptr [RDX + 0x68],0x40
0000f6d9(6): JZ 0x0000f608
0000f6df(5): MOV RAX,qword ptr [RSP + 0x8]
0000f6e4(2): XOR EBX,EBX
0000f6e6(7): MOV RSI,qword ptr [0xc8 + RAX]
0000f6ed(3): MOV RDX,RSI
0000f6f0(3): CMP RBX,RDX
0000f6f3(2): JGE 0x0000f753
0000f6f5(4): LEA RAX,[RBX + RDX*0x1]
0000f6f9(3): MOV RCX,RAX
0000f6fc(4): SHR RCX,0x3f
0000f700(3): ADD RCX,RAX
0000f703(5): MOV RAX,qword ptr [RSP + 0x8]
0000f708(3): SAR RCX,1
0000f70b(7): MOV RDI,qword ptr [0xd8 + RAX]
0000f712(4): LEA RAX,[RCX + RCX*0x4]
0000f716(5): CMP RBP,qword ptr [RDI + RAX*0x8 + 0x8]
0000f71b(2): JLE 0x0000f74e
0000f71d(5): JMP 0x0000f857
0000f728(4): LEA RDX,[RBX + RCX*0x1]
0000f72c(3): MOV RAX,RDX
0000f72f(4): SHR RAX,0x3f
0000f733(3): ADD RAX,RDX
0000f736(3): SAR RAX,1
0000f739(4): LEA RDX,[RAX + RAX*0x4]
0000f73d(3): MOV R8,RAX
0000f740(5): CMP RBP,qword ptr [RDI + RDX*0x8 + 0x8]
0000f745(6): JG 0x0000f860
0000f74b(3): MOV RCX,RAX
0000f74e(3): CMP RBX,RCX
0000f751(2): JL 0x0000f728
0000f753(3): CMP RSI,RBX
0000f756(6): JLE 0x0000f850
0000f75c(4): LEA RAX,[RBX + RBX*0x4]
0000f760(8): LEA RSI,[RAX*0x8]
0000f768(5): MOV RAX,qword ptr [RSP + 0x8]
0000f76d(5): MOV qword ptr [RSP + 0x40],RSI
0000f772(7): MOV RAX,qword ptr [0xd8 + RAX]
0000f779(5): CMP RBP,qword ptr [RAX + RSI*0x1 + 0x8]
0000f77e(6): JNZ 0x0000f850
0000f784(4): CMP RBX,-0x1
0000f788(6): JZ 0x0000f850
0000f78e(5): MOV RAX,qword ptr [RSP + 0x8]
0000f793(9): MOV qword ptr [RSP + 0x60],0x0
0000f79c(7): MOV R12,qword ptr [0x98 + RAX]
0000f7a3(5): MOV RAX,qword ptr [RSP + 0x10]
0000f7a8(5): CMP qword ptr [RAX + 0x8],0x0
0000f7ad(6): JLE 0x0000f850
0000f7b3(5): LEA RAX,[RSP + 0x60]
0000f7b8(9): MOV qword ptr [RSP + 0x20],0x0
0000f7c1(5): MOV qword ptr [RSP + 0x48],RBX
0000f7c6(3): MOV R15,R13
0000f7c9(5): MOV qword ptr [RSP + 0x38],RAX
0000f7ce(2): JMP 0x0000f7f2
0000f7d0(2): CMP AL,0x4
0000f7d2(6): JZ 0x0000fb58
0000f7d8(5): MOV RCX,qword ptr [RSP + 0x10]
0000f7dd(6): ADD qword ptr [RSP + 0x20],0x1
0000f7e3(5): MOV RAX,qword ptr [RSP + 0x20]
0000f7e8(4): CMP RAX,qword ptr [RCX + 0x8]
0000f7ec(6): JGE 0x0000fdab
0000f7f2(5): MOV RAX,qword ptr [RSP + 0x10]
0000f7f7(5): MOV RDI,qword ptr [RSP + 0x20]
0000f7fc(4): MOV RAX,qword ptr [RAX + 0x10]
0000f800(4): MOV R14,qword ptr [RAX + RDI*0x8]
0000f804(3): MOV RAX,R14
0000f807(4): SHL RAX,0x4
0000f80b(4): ADD RAX,qword ptr [R12]
0000f80f(4): CMP R14,qword ptr [R15 + 0x10]
0000f813(4): MOVZX EAX,byte ptr [RAX + 0x8]
0000f817(2): JNZ 0x0000f7d0
0000f819(4): CMP RBP,qword ptr [R15 + 0x18]
0000f81d(2): JNZ 0x0000f7d0
0000f81f(2): JMP 0x0000f7d8
0000f828(8): LEA R14,[RBP*0x8]
0000f830(3): ADD R14,qword ptr [RSI]
0000f833(3): TEST RCX,RCX
0000f836(6): JNZ 0x0000f8f0
0000f83c(7): MOV qword ptr [R14],0x0
0000f843(2): XOR EAX,EAX
0000f845(5): JMP 0x0000f608
0000f850(2): XOR EAX,EAX
0000f852(5): JMP 0x0000f608
0000f857(3): MOV R8,RCX
0000f85a(3): MOV RCX,RDX
0000f85d(3): NOP dword ptr [RAX]
0000f860(4): LEA RBX,[R8 + 0x1]
0000f864(3): MOV RDX,RCX
0000f867(5): JMP 0x0000f6f0
0000f870(4): MOV RDI,qword ptr [RBX + 0x8]
0000f874(8): MOV qword ptr [RDX + 0x40],0x0
0000f87c(5): MOV qword ptr [RSP + 0x20],RDX
0000f881(4): MOV qword ptr [RDX + 0x38],RDI
0000f885(4): SHL RDI,0x3
0000f889(5): CALL 0x00001ac0
0000f88e(5): MOV RDX,qword ptr [RSP + 0x20]
0000f893(3): TEST RAX,RAX
0000f896(4): MOV qword ptr [RDX + 0x48],RAX
0000f89a(2): JZ 0x0000f8e3
0000f89c(5): CMP qword ptr [RBX + 0x8],0x0
0000f8a1(8): MOV dword ptr [RSP + 0x60],0x0
0000f8a9(2): JG 0x0000f8be
0000f8ab(5): JMP 0x0000f66c
0000f8b0(4): ADD R15,0x1
0000f8b4(4): CMP R15,qword ptr [RBX + 0x8]
0000f8b8(6): JGE 0x0000f66c
0000f8be(4): MOV RAX,qword ptr [RBX + 0x10]
0000f8c2(3): MOV RDI,R14
0000f8c5(4): MOV RAX,qword ptr [RAX + R15*0x8]
0000f8c9(4): LEA RDX,[RAX + RAX*0x2]
0000f8cd(5): MOV RAX,qword ptr [R12 + 0x38]
0000f8d2(4): LEA RSI,[RAX + RDX*0x8]
0000f8d6(5): CALL 0x00007940
0000f8db(2): TEST EAX,EAX
0000f8dd(4): MOV dword ptr [RSP + 0x60],EAX
0000f8e1(2): JZ 0x0000f8b0
0000f8e3(5): MOV EAX,0xc
0000f8e8(5): JMP 0x0000f608
0000f8f0(9): MOV qword ptr [RSP + 0x10],0x0
0000f8f9(5): JMP 0x0000f698
0000f900(5): MOV RAX,qword ptr [RSP + 0x8]
0000f905(7): MOV RAX,qword ptr [0xd8 + RAX]
0000f90c(5): MOV qword ptr [RSP + 0x20],RAX
0000f911(6): JLE 0x0000f9eb
0000f917(3): XOR R15D,R15D
0000f91a(6): NOP word ptr [RAX + RAX*0x1]
0000f920(4): MOV RAX,qword ptr [R13 + 0x30]
0000f924(5): MOV RDI,qword ptr [RSP + 0x20]
0000f929(4): MOV RAX,qword ptr [RAX + R15*0x8]
0000f92d(4): LEA RAX,[RAX + RAX*0x4]
0000f931(4): LEA RDX,[RDI + RAX*0x8]
0000f935(4): CMP RBP,qword ptr [RDX + 0x10]
0000f939(6): JLE 0x0000f9dd
0000f93f(4): CMP RBP,qword ptr [RDX + 0x8]
0000f943(6): JG 0x0000f9dd
0000f949(3): MOV RCX,qword ptr [RDX]
0000f94c(4): MOV RAX,qword ptr [R12]
0000f950(4): MOV RSI,qword ptr [RBX + 0x8]
0000f954(4): SHL RCX,0x4
0000f958(4): CMP RBP,qword ptr [RDX + 0x18]
0000f95c(4): MOV R8,qword ptr [RAX + RCX*0x1]
0000f960(6): JZ 0x0000fa00
0000f966(3): XOR R14D,R14D
0000f969(3): TEST RSI,RSI
0000f96c(2): JLE 0x0000f9dd
0000f96e(5): MOV qword ptr [RSP + 0x28],RBP
0000f973(3): MOV RBP,R8
0000f976(2): JMP 0x0000f98e
0000f980(4): ADD R14,0x1
0000f984(4): CMP R14,qword ptr [RBX + 0x8]
0000f988(2): JGE 0x0000f9d8
0000f98a(4): MOV RAX,qword ptr [R12]
0000f98e(4): MOV RDX,qword ptr [RBX + 0x10]
0000f992(4): MOV RSI,qword ptr [RDX + R14*0x8]
0000f996(3): MOV RDX,RSI
0000f999(4): SHL RDX,0x4
0000f99d(3): ADD RAX,RDX
0000f9a0(4): MOVZX EDX,byte ptr [RAX + 0x8]
0000f9a4(3): SUB EDX,0x8
0000f9a7(3): CMP EDX,0x1
0000f9aa(2): JA 0x0000f980
0000f9ac(3): CMP RBP,qword ptr [RAX]
0000f9af(2): JNZ 0x0000f980
0000f9b1(5): MOV RCX,qword ptr [RSP + 0x10]
0000f9b6(3): MOV RDX,RBX
0000f9b9(3): MOV RDI,R12
0000f9bc(5): CALL 0x00009c70
0000f9c1(2): TEST EAX,EAX
0000f9c3(6): JNZ 0x0000f608
0000f9c9(4): ADD R14,0x1
0000f9cd(4): CMP R14,qword ptr [RBX + 0x8]
0000f9d1(2): JL 0x0000f98a
0000f9d3(5): NOP dword ptr [RAX + RAX*0x1]
0000f9d8(5): MOV RBP,qword ptr [RSP + 0x28]
0000f9dd(4): ADD R15,0x1
0000f9e1(4): CMP R15,qword ptr [R13 + 0x28]
0000f9e5(6): JL 0x0000f920
0000f9eb(8): MOV dword ptr [RSP + 0x5c],0x0
0000f9f3(5): JMP 0x0000f68f
0000fa00(3): TEST RSI,RSI
0000fa03(2): JLE 0x0000f9dd
0000fa05(4): MOV R10,qword ptr [RBX + 0x10]
0000fa09(7): MOV R9,-0x1
0000fa10(4): LEA R11,[R10 + RSI*0x8]
0000fa14(3): MOV RCX,R10
0000fa17(3): MOV RSI,R9
0000fa1a(2): JMP 0x0000fa36
0000fa20(4): CMP R14D,0x9
0000fa24(2): JNZ 0x0000fa2d
0000fa26(3): CMP R8,qword ptr [RDX]
0000fa29(4): CMOVZ R9,RDI
0000fa2d(4): ADD RCX,0x8
0000fa31(3): CMP R11,RCX
0000fa34(2): JZ 0x0000fa5e
0000fa36(3): MOV RDI,qword ptr [RCX]
0000fa39(3): MOV RDX,RDI
0000fa3c(4): SHL RDX,0x4
0000fa40(3): ADD RDX,RAX
0000fa43(5): MOVZX R14D,byte ptr [RDX + 0x8]
0000fa48(4): CMP R14D,0x8
0000fa4c(2): JNZ 0x0000fa20
0000fa4e(3): CMP R8,qword ptr [RDX]
0000fa51(4): CMOVZ RSI,RDI
0000fa55(4): ADD RCX,0x8
0000fa59(3): CMP R11,RCX
0000fa5c(2): JNZ 0x0000fa36
0000fa5e(3): TEST RSI,RSI
0000fa61(3): MOV R14,R9
0000fa64(5): MOV qword ptr [RSP + 0x28],R9
0000fa69(6): JS 0x0000fb30
0000fa6f(5): MOV RCX,qword ptr [RSP + 0x10]
0000fa74(3): MOV RDX,RBX
0000fa77(3): MOV RDI,R12
0000fa7a(5): CALL 0x00009c70
0000fa7f(2): TEST EAX,EAX
0000fa81(6): JNZ 0x0000f608
0000fa87(3): TEST R14,R14
0000fa8a(6): JS 0x0000f9dd
0000fa90(5): CMP qword ptr [RBX + 0x8],0x0
0000fa95(6): JLE 0x0000f9dd
0000fa9b(4): MOV R10,qword ptr [RBX + 0x10]
0000fa9f(3): XOR R14D,R14D
0000faa2(5): MOV qword ptr [RSP + 0x30],RBP
0000faa7(3): MOV RBP,R14
0000faaa(5): MOV R14,qword ptr [RSP + 0x28]
0000faaf(2): JMP 0x0000faca
0000fab8(4): ADD RBP,0x1
0000fabc(4): CMP RBP,qword ptr [RBX + 0x8]
0000fac0(6): JGE 0x0000fb48
0000fac6(4): MOV R10,qword ptr [RBX + 0x10]
0000faca(4): MOV R10,qword ptr [R10 + RBP*0x8]
0000face(5): MOV RAX,qword ptr [R12 + 0x38]
0000fad3(3): MOV RDX,R14
0000fad6(4): LEA R9,[R10 + R10*0x2]
0000fada(4): SHL R9,0x3
0000fade(3): ADD RAX,R9
0000fae1(4): MOV RDI,qword ptr [RAX + 0x8]
0000fae5(4): LEA RSI,[RAX + 0x10]
0000fae9(5): CALL 0x00007420
0000faee(3): TEST RAX,RAX
0000faf1(2): JNZ 0x0000fab8
0000faf3(5): ADD R9,qword ptr [R12 + 0x30]
0000faf8(4): MOV RDI,qword ptr [R9 + 0x8]
0000fafc(4): LEA RSI,[R9 + 0x10]
0000fb00(5): CALL 0x00007420
0000fb05(3): TEST RAX,RAX
0000fb08(2): JNZ 0x0000fab8
0000fb0a(5): MOV RCX,qword ptr [RSP + 0x10]
0000fb0f(3): MOV RDX,RBX
0000fb12(3): MOV RSI,R10
0000fb15(3): MOV RDI,R12
0000fb18(5): CALL 0x00009c70
0000fb1d(2): TEST EAX,EAX
0000fb1f(6): JNZ 0x0000f608
0000fb25(4): SUB RBP,0x1
0000fb29(2): JMP 0x0000fab8
0000fb30(6): CMP qword ptr [RSP + 0x28],0x0
0000fb36(6): JNS 0x0000fa9f
0000fb3c(5): JMP 0x0000f9dd
0000fb48(5): MOV RBP,qword ptr [RSP + 0x30]
0000fb4d(5): JMP 0x0000f9dd
0000fb58(5): MOV RAX,qword ptr [RSP + 0x8]
0000fb5d(5): MOV R13,qword ptr [RSP + 0x40]
0000fb62(5): MOV RBX,qword ptr [RSP + 0x48]
0000fb67(7): ADD R13,qword ptr [0xd8 + RAX]
0000fb6e(4): LEA RAX,[R14 + R14*0x2]
0000fb72(4): SHL RAX,0x3
0000fb76(5): MOV qword ptr [RSP + 0x30],RAX
0000fb7b(8): LEA RAX,[R14*0x8]
0000fb83(5): MOV qword ptr [RSP + 0x28],RAX
0000fb88(3): MOV RAX,R15
0000fb8b(3): MOV R15,R13
0000fb8e(3): MOV R13,RBX
0000fb91(3): MOV RBX,RAX
0000fb94(5): JMP 0x0000fcfe
0000fba0(4): MOV RAX,qword ptr [R15 + 0x18]
0000fba4(4): SUB RAX,qword ptr [R15 + 0x10]
0000fba8(3): TEST RAX,RAX
0000fbab(5): LEA R9,[RBP + RAX*0x1]
0000fbb0(6): JZ 0x0000fd10
0000fbb6(5): MOV RAX,qword ptr [R12 + 0x18]
0000fbbb(5): MOV RSI,qword ptr [RSP + 0x28]
0000fbc0(4): MOV R10,qword ptr [RAX + RSI*0x1]
0000fbc4(4): CMP R9,qword ptr [RBX + 0x18]
0000fbc8(6): JG 0x0000fd07
0000fbce(3): MOV RAX,qword ptr [RBX]
0000fbd1(4): MOV RAX,qword ptr [RAX + R9*0x8]
0000fbd5(3): TEST RAX,RAX
0000fbd8(6): JZ 0x0000fd07
0000fbde(4): MOV RDI,qword ptr [RAX + 0x10]
0000fbe2(4): LEA RSI,[RAX + 0x18]
0000fbe6(3): MOV RDX,R10
0000fbe9(5): CALL 0x00007420
0000fbee(3): TEST RAX,RAX
0000fbf1(6): JZ 0x0000fd07
0000fbf7(4): SUB RSP,0x8
0000fbfb(4): LEA RDX,[RBX + 0x30]
0000fbff(4): LEA RSI,[RBX + 0x28]
0000fc03(2): PUSH R9
0000fc05(5): MOV RDI,qword ptr [RSP + 0x18]
0000fc0a(3): MOV RCX,R14
0000fc0d(3): MOV R9,R10
0000fc10(3): MOV R8,RBP
0000fc13(5): CALL 0x000076d0
0000fc18(2): TEST AL,AL
0000fc1a(1): POP RDX
0000fc1b(1): POP RCX
0000fc1c(6): JNZ 0x0000fd07
0000fc22(6): CMP qword ptr [RSP + 0x60],0x0
0000fc28(6): JZ 0x0000fd38
0000fc2e(5): MOV RAX,qword ptr [RSP + 0x38]
0000fc33(3): MOV RSI,R13
0000fc36(5): MOV qword ptr [RSP + 0x70],R14
0000fc3b(5): MOV qword ptr [RSP + 0x78],RBP
0000fc40(4): LEA RDI,[RAX + 0x20]
0000fc44(5): CALL 0x00005ee0
0000fc49(2): TEST AL,AL
0000fc4b(6): JZ 0x0000fda4
0000fc51(5): MOV RDI,qword ptr [RSP + 0x18]
0000fc56(5): MOV RAX,qword ptr [RSP + 0x60]
0000fc5b(5): MOV RSI,qword ptr [RSP + 0x38]
0000fc60(4): MOV R15,qword ptr [RAX + RDI*0x1]
0000fc64(5): MOV RDI,qword ptr [RSP + 0x8]
0000fc69(5): CALL 0x0000db00
0000fc6e(2): TEST EAX,EAX
0000fc70(6): JNZ 0x0000fd7e
0000fc76(4): MOV RSI,qword ptr [RBX + 0x8]
0000fc7a(5): MOV RDX,qword ptr [RSP + 0x60]
0000fc7f(3): TEST RSI,RSI
0000fc82(2): JZ 0x0000fc9d
0000fc84(4): LEA RCX,[RBP + 0x1]
0000fc88(3): MOV RDI,R12
0000fc8b(5): CALL 0x00008c30
0000fc90(2): TEST EAX,EAX
0000fc92(6): JNZ 0x0000fd7e
0000fc98(5): MOV RDX,qword ptr [RSP + 0x60]
0000fc9d(5): MOV R11,qword ptr [RSP + 0x38]
0000fca2(5): MOV RAX,qword ptr [RSP + 0x18]
0000fca7(8): MOV RDI,qword ptr [0x88 + RSP]
0000fcaf(4): LEA R9,[R11 + 0x30]
0000fcb3(4): MOV qword ptr [RDX + RAX*0x1],R15
0000fcb7(3): MOV RDX,R13
0000fcba(3): MOV RSI,R9
0000fcbd(5): CALL 0x00007420
0000fcc2(4): SUB RAX,0x1
0000fcc6(3): MOV RDX,RAX
0000fcc9(2): JS 0x0000fcd7
0000fccb(4): LEA RDI,[R11 + 0x28]
0000fccf(3): MOV RSI,R9
0000fcd2(5): CALL 0x000075a0
0000fcd7(5): MOV RCX,qword ptr [RSP + 0x8]
0000fcdc(5): LEA RAX,[R13 + R13*0x4]
0000fce1(7): MOV RDX,qword ptr [0xd8 + RCX]
0000fce8(4): LEA RAX,[RDX + RAX*0x8]
0000fcec(4): NOP dword ptr [RAX]
0000fcf0(4): ADD R13,0x1
0000fcf4(4): CMP byte ptr [RAX + 0x20],0x0
0000fcf8(4): LEA R15,[RAX + 0x28]
0000fcfc(2): JZ 0x0000fd30
0000fcfe(3): CMP R14,qword ptr [R15]
0000fd01(6): JZ 0x0000fba0
0000fd07(3): MOV RAX,R15
0000fd0a(2): JMP 0x0000fcf0
0000fd10(5): MOV RAX,qword ptr [R12 + 0x28]
0000fd15(5): MOV RDI,qword ptr [RSP + 0x30]
0000fd1a(5): MOV RAX,qword ptr [RAX + RDI*0x1 + 0x10]
0000fd1f(3): MOV R10,qword ptr [RAX]
0000fd22(5): JMP 0x0000fbc4
0000fd30(3): MOV R15,RBX
0000fd33(5): JMP 0x0000f7d8
0000fd38(4): MOV RAX,qword ptr [RBX + 0x30]
0000fd3c(4): LEA RSI,[RBX + 0x20]
0000fd40(4): MOVDQA XMM0,xmmword ptr [RBX]
0000fd44(8): MOV qword ptr [0x90 + RSP],RAX
0000fd4c(5): MOV RAX,qword ptr [RSP + 0x38]
0000fd51(5): MOVAPS xmmword ptr [RSP + 0x60],XMM0
0000fd56(4): LEA RDI,[RAX + 0x20]
0000fd5a(5): MOVDQA XMM0,xmmword ptr [RBX + 0x10]
0000fd5f(5): MOVAPS xmmword ptr [RSP + 0x70],XMM0
0000fd64(5): MOVDQA XMM0,xmmword ptr [RBX + 0x20]
0000fd69(8): MOVAPS xmmword ptr [0x80 + RSP],XMM0
0000fd71(5): CALL 0x00008580
0000fd76(2): TEST EAX,EAX
0000fd78(6): JZ 0x0000fc2e
0000fd7e(6): CMP qword ptr [RSP + 0x60],0x0
0000fd84(6): JZ 0x0000f608
0000fd8a(8): MOV RDI,qword ptr [0x90 + RSP]
0000fd92(4): MOV dword ptr [RSP + 0x8],EAX
0000fd96(5): CALL 0x00001880
0000fd9b(4): MOV EAX,dword ptr [RSP + 0x8]
0000fd9f(5): JMP 0x0000f608
0000fda4(5): MOV EAX,0xc
0000fda9(2): JMP 0x0000fd7e
0000fdab(6): CMP qword ptr [RSP + 0x60],0x0
0000fdb1(6): JZ 0x0000f850
0000fdb7(2): XOR EAX,EAX
0000fdb9(2): JMP 0x0000fd8a
0000fdbb(5): CALL 0x00001990
0000fdc0(2): PUSH R14
0000fdc2(2): PUSH R13
0000fdc4(3): MOV R10,RSI
0000fdc7(2): PUSH R12
0000fdc9(1): PUSH RBP
0000fdca(3): MOVSXD R11,ECX
0000fdcd(1): PUSH RBX
0000fdce(3): MOV RBP,RDX
0000fdd1(3): MOV RBX,RDI
0000fdd4(4): SUB RSP,0x20
0000fdd8(4): MOV R12,qword ptr [RSI + 0x48]
0000fddc(9): MOV RAX,qword ptr FS:[0x28]
0000fde5(5): MOV qword ptr [RSP + 0x18],RAX
0000fdea(2): XOR EAX,EAX
0000fdec(7): CMP dword ptr [0x90 + RSI],0x1
0000fdf3(2): JZ 0x0000fe48
0000fdf5(3): MOV RSI,R12
0000fdf8(3): MOV RDI,R10
0000fdfb(5): CALL 0x00007370
0000fe00(3): CMP EAX,0x1
0000fe03(2): JLE 0x0000fe48
0000fe05(4): MOV RDX,qword ptr [R10 + 0x10]
0000fe09(2): CDQE
0000fe0b(6): MOV dword ptr [RBX],0x1
0000fe11(3): ADD RAX,R12
0000fe14(4): MOV EDX,dword ptr [RDX + R12*0x4]
0000fe18(3): MOV dword ptr [RBX + 0x8],EDX
0000fe1b(4): MOV qword ptr [R10 + 0x48],RAX
0000fe1f(2): XOR EAX,EAX
0000fe21(5): MOV RCX,qword ptr [RSP + 0x18]
0000fe26(9): XOR RCX,qword ptr FS:[0x28]
0000fe2f(6): JNZ 0x00010018
0000fe35(4): ADD RSP,0x20
0000fe39(1): POP RBX
0000fe3a(1): POP RBP
0000fe3b(2): POP R12
0000fe3d(2): POP R13
0000fe3f(2): POP R14
0000fe41(1): RET
0000fe48(4): MOVZX EAX,byte ptr [RBP + 0x8]
0000fe4c(3): ADD R11,R12
0000fe4f(4): MOV qword ptr [R10 + 0x48],R11
0000fe53(2): MOV EDX,EAX
0000fe55(3): AND EDX,0xfffffffb
0000fe58(3): CMP DL,0x1a
0000fe5b(2): JZ 0x0000fe80
0000fe5d(2): CMP AL,0x1c
0000fe5f(2): JZ 0x0000fe80
0000fe61(2): CMP AL,0x16
0000fe63(2): JNZ 0x0000fe6e
0000fe65(3): TEST R9B,R9B
0000fe68(6): JZ 0x0000ffb2
0000fe6e(4): MOVZX EAX,byte ptr [RBP]
0000fe72(6): MOV dword ptr [RBX],0x0
0000fe78(3): MOV byte ptr [RBX + 0x8],AL
0000fe7b(2): XOR EAX,EAX
0000fe7d(2): JMP 0x0000fe21
0000fe80(4): MOV R12,qword ptr [R10 + 0x68]
0000fe84(3): CMP R11,R12
0000fe87(6): JGE 0x0000ffa8
0000fe8d(5): MOVZX R13D,byte ptr [RBP]
0000fe92(3): XOR R8D,R8D
0000fe95(2): JMP 0x0000fec2
0000fea0(4): MOV RAX,qword ptr [RBX + 0x8]
0000fea4(4): MOV byte ptr [RAX + R8*0x1],R9B
0000fea8(4): ADD R8,0x1
0000feac(4): CMP R8,0x20
0000feb0(6): JZ 0x0000ffa8
0000feb6(4): MOVZX EAX,byte ptr [RBP + 0x8]
0000feba(4): MOV R11,qword ptr [R10 + 0x48]
0000febe(4): MOV R12,qword ptr [R10 + 0x68]
0000fec2(2): CMP AL,0x1e
0000fec4(3): MOVSXD R14,R8D
0000fec7(2): JZ 0x0000ff30
0000fec9(4): MOV RDX,qword ptr [R10 + 0x8]
0000fecd(4): LEA RAX,[R11 + 0x1]
0000fed1(4): MOV qword ptr [R10 + 0x48],RAX
0000fed5(5): MOVZX R9D,byte ptr [RDX + R11*0x1]
0000feda(3): CMP RAX,R12
0000fedd(6): JGE 0x0000ffa8
0000fee3(3): CMP R13B,R9B
0000fee6(2): JNZ 0x0000fea0
0000fee8(4): MOV RDX,qword ptr [R10 + 0x8]
0000feec(4): CMP byte ptr [RDX + RAX*0x1],0x5d
0000fef0(2): JNZ 0x0000fea0
0000fef2(4): ADD RAX,0x1
0000fef6(4): MOV qword ptr [R10 + 0x48],RAX
0000fefa(4): MOV RAX,qword ptr [RBX + 0x8]
0000fefe(5): MOV byte ptr [RAX + R14*0x1],0x0
0000ff03(4): MOVZX EAX,byte ptr [RBP + 0x8]
0000ff07(2): CMP AL,0x1c
0000ff09(6): JZ 0x0001000b
0000ff0f(2): CMP AL,0x1e
0000ff11(6): JZ 0x0000fffe
0000ff17(2): CMP AL,0x1a
0000ff19(6): JZ 0x0000fff1
0000ff1f(2): XOR EAX,EAX
0000ff21(5): JMP 0x0000fe21
0000ff30(8): CMP byte ptr [0x8b + R10],0x0
0000ff38(2): JZ 0x0000fec9
0000ff3a(8): CMP byte ptr [0x8c + R10],0x0
0000ff42(6): JZ 0x0000ffd8
0000ff48(4): CMP R11,qword ptr [R10 + 0x30]
0000ff4c(2): JZ 0x0000ff5d
0000ff4e(4): MOV RAX,qword ptr [R10 + 0x10]
0000ff52(5): CMP dword ptr [RAX + R11*0x4],-0x1
0000ff57(6): JZ 0x0000fec9
0000ff5d(4): MOV RAX,qword ptr [R10 + 0x18]
0000ff61(4): MOV RAX,qword ptr [RAX + R11*0x8]
0000ff65(3): ADD RAX,qword ptr [R10]
0000ff68(4): ADD RAX,qword ptr [R10 + 0x28]
0000ff6c(4): MOVZX R9D,byte ptr [RAX]
0000ff70(4): TEST R9B,0x80
0000ff74(6): JNZ 0x0000fec9
0000ff7a(8): CMP dword ptr [0x90 + R10],0x1
0000ff82(5): MOV EAX,0x1
0000ff87(2): JZ 0x0000ff96
0000ff89(3): MOV RSI,R11
0000ff8c(3): MOV RDI,R10
0000ff8f(5): CALL 0x00007370
0000ff94(2): CDQE
0000ff96(3): ADD RAX,R11
0000ff99(4): MOV qword ptr [R10 + 0x48],RAX
0000ff9d(5): JMP 0x0000feda
0000ffa8(5): MOV EAX,0x7
0000ffad(5): JMP 0x0000fe21
0000ffb2(3): MOV RDI,RSP
0000ffb5(3): MOV RDX,R8
0000ffb8(3): MOV RSI,R10
0000ffbb(5): CALL 0x00005910
0000ffc0(5): CMP byte ptr [RSP + 0x8],0x15
0000ffc5(5): MOV EAX,0xb
0000ffca(6): JZ 0x0000fe6e
0000ffd0(5): JMP 0x0000fe21
0000ffd8(4): LEA RAX,[R11 + 0x1]
0000ffdc(3): ADD R11,qword ptr [R10]
0000ffdf(4): MOV RDX,qword ptr [R10 + 0x28]
0000ffe3(4): MOV qword ptr [R10 + 0x48],RAX
0000ffe7(5): MOVZX R9D,byte ptr [R11 + RDX*0x1]
0000ffec(5): JMP 0x0000feda
0000fff1(6): MOV dword ptr [RBX],0x3
0000fff7(2): XOR EAX,EAX
0000fff9(5): JMP 0x0000fe21
0000fffe(6): MOV dword ptr [RBX],0x4
00010004(2): XOR EAX,EAX
00010006(5): JMP 0x0000fe21
0001000b(6): MOV dword ptr [RBX],0x2
00010011(2): XOR EAX,EAX
00010013(5): JMP 0x0000fe21
00010018(5): CALL 0x00001990
0001001d(3): NOP dword ptr [RAX]
00010020(2): PUSH R15
00010022(2): PUSH R14
00010024(2): PUSH R13
00010026(2): PUSH R12
00010028(1): PUSH RBP
00010029(1): PUSH RBX
0001002a(3): MOV RBP,RDI
0001002d(4): SUB RSP,0x38
00010031(4): MOV R14,qword ptr [RSI + 0x48]
00010035(9): MOV RAX,qword ptr FS:[0x28]
0001003e(5): MOV qword ptr [RSP + 0x28],RAX
00010043(2): XOR EAX,EAX
00010045(4): CMP qword ptr [RSI + 0x68],R14
00010049(6): JLE 0x000100e0
0001004f(5): MOVZX R13D,byte ptr [RDI + 0xa]
00010054(3): MOV R15,RDX
00010057(4): MOV RDX,qword ptr [RSI + 0x8]
0001005b(3): MOV RBX,RSI
0001005e(5): MOVZX R12D,byte ptr [RDX + R14*0x1]
00010063(4): AND R13D,0xffffff9f
00010067(4): MOV byte ptr [RDI + 0xa],R13B
0001006b(6): MOV EAX,dword ptr [0x90 + RSI]
00010071(3): MOV byte ptr [RDI],R12B
00010074(3): CMP EAX,0x1
00010077(6): JLE 0x00010110
0001007d(4): CMP R14,qword ptr [RSI + 0x30]
00010081(6): JZ 0x00010220
00010087(4): MOV RCX,qword ptr [RSI + 0x10]
0001008b(4): MOV ECX,dword ptr [RCX + R14*0x4]
0001008f(3): CMP ECX,-0x1
00010092(6): JZ 0x00010170
00010098(4): CMP R12B,0x5c
0001009c(6): JZ 0x00010190
000100a2(4): MOV byte ptr [RDI + 0x8],0x1
000100a6(2): MOV EDI,ECX
000100a8(5): MOV qword ptr [RSP + 0x8],RDX
000100ad(3): MOV dword ptr [RSP],ECX
000100b0(5): CALL 0x00001ab0
000100b5(3): MOV ECX,dword ptr [RSP]
000100b8(2): TEST EAX,EAX
000100ba(3): SETNZ AL
000100bd(3): CMP ECX,0x5f
000100c0(3): SETZ CL
000100c3(2): OR EAX,ECX
000100c5(3): SHL EAX,0x6
000100c8(3): OR R13D,EAX
000100cb(4): MOV byte ptr [RBP + 0xa],R13B
000100cf(5): MOV RDX,qword ptr [RSP + 0x8]
000100d4(2): JMP 0x0001014c
000100e0(4): MOV byte ptr [RDI + 0x8],0x2
000100e4(5): MOV RDI,qword ptr [RSP + 0x28]
000100e9(9): XOR RDI,qword ptr FS:[0x28]
000100f2(6): JNZ 0x00010718
000100f8(4): ADD RSP,0x38
000100fc(1): POP RBX
000100fd(1): POP RBP
000100fe(2): POP R12
00010100(2): POP R13
00010102(2): POP R14
00010104(2): POP R15
00010106(1): RET
00010110(4): CMP R12B,0x5c
00010114(2): JZ 0x00010190
00010116(4): MOV byte ptr [RBP + 0x8],0x1
0001011a(4): MOV qword ptr [RSP],RDX
0001011e(5): CALL 0x00001c70
00010123(3): MOV RSI,qword ptr [RAX]
00010126(4): MOVZX ECX,R12B
0001012a(4): MOVZX EAX,word ptr [RSI + RCX*0x2]
0001012e(4): SHR AX,0x3
00010132(3): AND EAX,0x1
00010135(4): CMP R12B,0x5f
00010139(3): SETZ CL
0001013c(2): OR EAX,ECX
0001013e(3): SHL EAX,0x6
00010141(3): OR R13D,EAX
00010144(4): MOV byte ptr [RBP + 0xa],R13B
00010148(4): MOV RDX,qword ptr [RSP]
0001014c(4): SUB R12D,0xa
00010150(4): CMP R12B,0x73
00010154(6): JA 0x0001028c
0001015a(7): LEA RCX,[0x15074]
00010161(4): MOVZX R12D,R12B
00010165(4): MOVSXD RAX,dword ptr [RCX + R12*0x4]
00010169(3): ADD RAX,RCX
0001016c(2): JMP RAX
00010170(4): OR R13D,0x20
00010174(4): MOV byte ptr [RDI + 0x8],0x1
00010178(5): MOV EAX,0x1
0001017d(4): MOV byte ptr [RDI + 0xa],R13B
00010181(5): JMP 0x000100e4
00010190(4): LEA RSI,[R14 + 0x1]
00010194(4): CMP RSI,qword ptr [RBX + 0x58]
00010198(6): JGE 0x00010240
0001019e(7): CMP byte ptr [0x8b + RBX],0x0
000101a5(6): JNZ 0x00010630
000101ab(6): MOVZX EDI,byte ptr [RDX + R14*0x1 + 0x1]
000101b1(3): MOV R12D,EDI
000101b4(4): MOV dword ptr [RSP + 0x8],EDI
000101b8(3): CMP EAX,0x1
000101bb(4): MOV byte ptr [RBP],R12B
000101bf(4): MOV byte ptr [RBP + 0x8],0x1
000101c3(6): JLE 0x00010610
000101c9(4): MOV RAX,qword ptr [RBX + 0x10]
000101cd(4): MOV R8D,dword ptr [RAX + RSI*0x4]
000101d1(3): MOV EDI,R8D
000101d4(4): MOV dword ptr [RSP],R8D
000101d8(5): CALL 0x00001ab0
000101dd(4): MOV R8D,dword ptr [RSP]
000101e1(2): TEST EAX,EAX
000101e3(3): SETNZ AL
000101e6(4): CMP R8D,0x5f
000101ea(3): SETZ DL
000101ed(5): LEA ECX,[R12 + -0x27]
000101f2(2): OR EAX,EDX
000101f4(3): SHL EAX,0x6
000101f7(3): OR R13D,EAX
000101fa(3): CMP CL,0x56
000101fd(4): MOV byte ptr [RBP + 0xa],R13B
00010201(6): JA 0x00010605
00010207(7): LEA RDX,[0x15244]
0001020e(3): MOVZX ECX,CL
00010211(4): MOVSXD RAX,dword ptr [RDX + RCX*0x4]
00010215(3): ADD RAX,RDX
00010218(2): JMP RAX
00010220(4): CMP R12B,0x5c
00010224(6): JZ 0x00010190
0001022a(4): MOV RAX,qword ptr [RBX + 0x10]
0001022e(4): MOV byte ptr [RBP + 0x8],0x1
00010232(4): MOV ECX,dword ptr [RAX + R14*0x4]
00010236(5): JMP 0x000100a6
00010240(4): MOV byte ptr [RBP + 0x8],0x24
00010244(5): MOV EAX,0x1
00010249(5): JMP 0x000100e4
00010250(7): AND R15D,0x1200
00010257(5): MOV EAX,0x1
0001025c(7): CMP R15,0x1200
00010263(6): JNZ 0x000100e4
00010269(4): MOV byte ptr [RBP + 0x8],0x18
0001026d(5): JMP 0x000100e4
00010278(7): AND R15D,0x8400
0001027f(7): CMP R15,0x8000
00010286(6): JZ 0x00010362
0001028c(5): MOV EAX,0x1
00010291(5): JMP 0x000100e4
000102a0(7): AND R15D,0x1200
000102a7(5): MOV EAX,0x1
000102ac(7): CMP R15,0x1200
000102b3(6): JNZ 0x000100e4
000102b9(4): MOV byte ptr [RBP + 0x8],0x17
000102bd(5): JMP 0x000100e4
000102c8(7): TEST R15D,0x800008
000102cf(2): JNZ 0x000102da
000102d1(3): TEST R14,R14
000102d4(6): JNZ 0x0001069a
000102da(4): MOV byte ptr [RBP + 0x8],0xc
000102de(7): MOV dword ptr [RBP],0x10
000102e5(5): MOV EAX,0x1
000102ea(5): JMP 0x000100e4
000102f0(4): MOV byte ptr [RBP + 0x8],0x14
000102f4(5): MOV EAX,0x1
000102f9(5): JMP 0x000100e4
00010300(7): TEST R15D,0x402
00010307(5): MOV EAX,0x1
0001030c(6): JNZ 0x000100e4
00010312(4): MOV byte ptr [RBP + 0x8],0x13
00010316(5): JMP 0x000100e4
00010320(4): MOV byte ptr [RBP + 0x8],0x5
00010324(5): MOV EAX,0x1
00010329(5): JMP 0x000100e4
00010330(7): TEST R15D,0x402
00010337(5): MOV EAX,0x1
0001033c(6): JNZ 0x000100e4
00010342(4): MOV byte ptr [RBP + 0x8],0x12
00010346(5): JMP 0x000100e4
00010350(7): TEST R15D,0x800
00010357(5): MOV EAX,0x1
0001035c(6): JZ 0x000100e4
00010362(4): MOV byte ptr [RBP + 0x8],0xa
00010366(5): MOV EAX,0x1
0001036b(5): JMP 0x000100e4
00010370(4): MOV byte ptr [RBP + 0x8],0xb
00010374(5): MOV EAX,0x1
00010379(5): JMP 0x000100e4
00010380(7): TEST R15D,0x2000
00010387(5): MOV EAX,0x1
0001038c(6): JZ 0x000100e4
00010392(4): MOV byte ptr [RBP + 0x8],0x9
00010396(5): JMP 0x000100e4
000103a0(7): TEST R15D,0x2000
000103a7(5): MOV EAX,0x1
000103ac(6): JZ 0x000100e4
000103b2(4): MOV byte ptr [RBP + 0x8],0x8
000103b6(5): JMP 0x000100e4
000103c0(4): TEST R15B,0x8
000103c4(2): JNZ 0x000103d4
000103c6(4): ADD R14,0x1
000103ca(4): CMP R14,qword ptr [RBX + 0x58]
000103ce(6): JNZ 0x000106cb
000103d4(4): MOV byte ptr [RBP + 0x8],0xc
000103d8(7): MOV dword ptr [RBP],0x20
000103df(5): MOV EAX,0x1
000103e4(5): JMP 0x000100e4
000103e9(7): TEST R15D,0x8400
000103f0(5): MOV EAX,0x2
000103f5(6): JNZ 0x000100e4
000103fb(4): MOV byte ptr [RBP + 0x8],0xa
000103ff(5): JMP 0x000100e4
00010404(7): AND R15D,0x1200
0001040b(5): MOV EAX,0x2
00010410(7): CMP R15,0x200
00010417(6): JNZ 0x000100e4
0001041d(5): JMP 0x000102b9
00010422(7): TEST R15D,0x80000
00010429(5): MOV EAX,0x2
0001042e(6): JNZ 0x000100e4
00010434(4): MOV byte ptr [RBP + 0x8],0x20
00010438(5): JMP 0x000100e4
0001043d(7): TEST R15D,0x80000
00010444(5): MOV EAX,0x2
00010449(6): JNZ 0x000100e4
0001044f(4): MOV byte ptr [RBP + 0x8],0x22
00010453(5): JMP 0x000100e4
00010458(7): AND R15D,0x1200
0001045f(5): MOV EAX,0x2
00010464(7): CMP R15,0x200
0001046b(6): JNZ 0x000100e4
00010471(5): JMP 0x00010269
00010476(7): TEST R15D,0x80000
0001047d(5): MOV EAX,0x2
00010482(6): JNZ 0x000100e4
00010488(4): MOV byte ptr [RBP + 0x8],0xc
0001048c(7): MOV dword ptr [RBP],0x100
00010493(5): JMP 0x000100e4
00010498(7): TEST R15D,0x80000
0001049f(5): MOV EAX,0x2
000104a4(6): JNZ 0x000100e4
000104aa(4): MOV byte ptr [RBP + 0x8],0xc
000104ae(7): MOV dword ptr [RBP],0x40
000104b5(5): JMP 0x000100e4
000104ba(7): TEST R15D,0x80000
000104c1(5): MOV EAX,0x2
000104c6(6): JNZ 0x000100e4
000104cc(4): MOV byte ptr [RBP + 0x8],0x21
000104d0(5): JMP 0x000100e4
000104d5(7): TEST R15D,0x80000
000104dc(5): MOV EAX,0x2
000104e1(6): JNZ 0x000100e4
000104e7(4): MOV byte ptr [RBP + 0x8],0x23
000104eb(5): JMP 0x000100e4
000104f0(7): TEST R15D,0x80000
000104f7(5): MOV EAX,0x2
000104fc(6): JNZ 0x000100e4
00010502(4): MOV byte ptr [RBP + 0x8],0xc
00010506(7): MOV dword ptr [RBP],0x200
0001050d(5): JMP 0x000100e4
00010512(7): AND R15D,0x402
00010519(5): MOV EAX,0x2
0001051e(4): CMP R15,0x2
00010522(6): JNZ 0x000100e4
00010528(5): JMP 0x00010312
0001052d(7): TEST R15D,0x80000
00010534(5): MOV EAX,0x2
00010539(6): JNZ 0x000100e4
0001053f(4): MOV byte ptr [RBP + 0x8],0xc
00010543(7): MOV dword ptr [RBP],0x9
0001054a(5): JMP 0x000100e4
0001054f(7): TEST R15D,0x80000
00010556(5): MOV EAX,0x2
0001055b(6): JNZ 0x000100e4
00010561(4): MOV byte ptr [RBP + 0x8],0xc
00010565(7): MOV dword ptr [RBP],0x6
0001056c(5): JMP 0x000100e4
00010571(7): TEST R15D,0x4000
00010578(5): MOV EAX,0x2
0001057d(6): JNZ 0x000100e4
00010583(4): MOV EDX,dword ptr [RSP + 0x8]
00010587(4): MOV byte ptr [RBP + 0x8],0x4
0001058b(3): SUB EDX,0x31
0001058e(3): MOVSXD RDX,EDX
00010591(4): MOV qword ptr [RBP],RDX
00010595(5): JMP 0x000100e4
0001059a(7): AND R15D,0x402
000105a1(5): MOV EAX,0x2
000105a6(4): CMP R15,0x2
000105aa(6): JNZ 0x000100e4
000105b0(5): JMP 0x00010342
000105b5(7): TEST R15D,0x2000
000105bc(5): MOV EAX,0x2
000105c1(6): JNZ 0x000100e4
000105c7(5): JMP 0x00010392
000105cc(7): TEST R15D,0x2000
000105d3(5): MOV EAX,0x2
000105d8(6): JNZ 0x000100e4
000105de(5): JMP 0x000103b2
000105e3(7): TEST R15D,0x80000
000105ea(5): MOV EAX,0x2
000105ef(6): JNZ 0x000100e4
000105f5(4): MOV byte ptr [RBP + 0x8],0xc
000105f9(7): MOV dword ptr [RBP],0x80
00010600(5): JMP 0x000100e4
00010605(5): MOV EAX,0x2
0001060a(5): JMP 0x000100e4
00010610(5): CALL 0x00001c70
00010615(3): MOV RSI,qword ptr [RAX]
00010618(4): MOVZX EDX,R12B
0001061c(4): MOVZX EAX,word ptr [RSI + RDX*0x2]
00010620(4): SHR AX,0x3
00010624(3): AND EAX,0x1
00010627(4): CMP R12B,0x5f
0001062b(5): JMP 0x000101ea
00010630(3): CMP EAX,0x1
00010633(2): JLE 0x00010664
00010635(4): MOV RCX,qword ptr [RBX + 0x10]
00010639(8): LEA RDI,[RSI*0x4]
00010641(4): MOV R8D,dword ptr [RCX + RSI*0x4]
00010645(4): CMP R8D,-0x1
00010649(6): JZ 0x000106ff
0001064f(4): LEA R9,[R14 + 0x2]
00010653(4): CMP qword ptr [RBX + 0x30],R9
00010657(2): JZ 0x00010664
00010659(5): CMP dword ptr [RCX + RDI*0x1 + 0x4],-0x1
0001065e(6): JZ 0x000106ff
00010664(7): CMP byte ptr [0x8c + RBX],0x0
0001066b(3): MOV RCX,qword ptr [RBX]
0001066e(4): MOV RDI,qword ptr [RBX + 0x28]
00010672(2): JZ 0x000106b8
00010674(4): MOV R8,qword ptr [RBX + 0x18]
00010678(3): ADD RCX,RDI
0001067b(4): ADD RCX,qword ptr [R8 + RSI*0x8]
0001067f(3): MOVZX EDI,byte ptr [RCX]
00010682(3): MOV R12D,EDI
00010685(4): MOV dword ptr [RSP + 0x8],EDI
00010689(6): AND EDI,0x80
0001068f(6): JNZ 0x000101ab
00010695(5): JMP 0x000101b8
0001069a(6): CMP byte ptr [RDX + R14*0x1 + -0x1],0xa
000106a0(6): JNZ 0x0001028c
000106a6(7): TEST R15D,0x800
000106ad(6): JZ 0x0001028c
000106b3(5): JMP 0x000102da
000106b8(3): ADD RCX,RSI
000106bb(4): MOVZX EDI,byte ptr [RCX + RDI*0x1]
000106bf(3): MOV R12D,EDI
000106c2(4): MOV dword ptr [RSP + 0x8],EDI
000106c6(5): JMP 0x000101b8
000106cb(5): LEA RDI,[RSP + 0x10]
000106d0(3): MOV RDX,R15
000106d3(4): MOV qword ptr [RBX + 0x48],R14
000106d7(3): MOV RSI,RBX
000106da(5): CALL 0x00010020
000106df(5): MOVZX EAX,byte ptr [RSP + 0x18]
000106e4(5): SUB qword ptr [RBX + 0x48],0x1
000106e9(3): LEA EDX,[RAX + -0x9]
000106ec(5): MOV EAX,0x1
000106f1(3): CMP DL,0x1
000106f4(6): JA 0x000100e4
000106fa(5): JMP 0x000103d4
000106ff(6): MOVZX EAX,byte ptr [RDX + R14*0x1 + 0x1]
00010705(4): MOV byte ptr [RBP + 0x8],0x1
00010709(3): MOV R12D,EAX
0001070c(3): MOV byte ptr [RBP],AL
0001070f(4): MOV dword ptr [RSP + 0x8],EAX
00010713(5): JMP 0x000101d1
00010718(5): CALL 0x00001990
0001071d(3): NOP dword ptr [RAX]
00010720(2): PUSH R14
00010722(3): MOV R14,RDI
00010725(2): PUSH R13
00010727(3): MOV R13,RSI
0001072a(2): PUSH R12
0001072c(7): MOV R12,-0x2
00010733(1): PUSH RBP
00010734(3): MOV RBP,RDX
00010737(1): PUSH RBX
00010738(7): MOV RBX,-0x1
0001073f(1): NOP
00010740(3): MOV RDX,RBP
00010743(3): MOV RSI,R14
00010746(3): MOV RDI,R13
00010749(5): CALL 0x00010020
0001074e(2): CDQE
00010750(4): ADD qword ptr [R14 + 0x48],RAX
00010754(5): MOVZX EAX,byte ptr [R13 + 0x8]
00010759(5): MOVZX EDX,byte ptr [R13]
0001075e(2): CMP AL,0x2
00010760(2): JZ 0x000107b0
00010762(2): CMP AL,0x18
00010764(2): JZ 0x000107b7
00010766(3): CMP DL,0x2c
00010769(2): JZ 0x000107b7
0001076b(2): CMP AL,0x1
0001076d(2): JZ 0x00010778
0001076f(3): MOV RBX,R12
00010772(2): JMP 0x00010740
00010778(3): LEA EAX,[RDX + -0x30]
0001077b(2): CMP AL,0x9
0001077d(2): JA 0x0001076f
0001077f(4): CMP RBX,-0x2
00010783(2): JZ 0x0001076f
00010785(4): CMP RBX,-0x1
00010789(2): JZ 0x000107c8
0001078b(4): LEA RAX,[RBX + RBX*0x4]
0001078f(4): LEA RBX,[RDX + RAX*0x2]
00010793(5): MOV EAX,0x8030
00010798(7): CMP RBX,0x8030
0001079f(4): CMOVG RBX,RAX
000107a3(4): SUB RBX,0x30
000107a7(2): JMP 0x00010740
000107b0(7): MOV RBX,-0x2
000107b7(3): MOV RAX,RBX
000107ba(1): POP RBX
000107bb(1): POP RBP
000107bc(2): POP R12
000107be(2): POP R13
000107c0(2): POP R14
000107c2(1): RET
000107c8(3): MOVZX EBX,DL
000107cb(3): SUB EBX,0x30
000107ce(3): MOVSXD RBX,EBX
000107d1(5): JMP 0x00010740
000107e0(2): PUSH R15
000107e2(2): PUSH R14
000107e4(2): PUSH R13
000107e6(2): PUSH R12
000107e8(1): PUSH RBP
000107e9(1): PUSH RBX
000107ea(7): SUB RSP,0x128
000107f1(5): MOV qword ptr [RSP + 0x20],RCX
000107f6(4): MOVZX ECX,byte ptr [RDX + 0x8]
000107fa(9): MOV RAX,qword ptr FS:[0x28]
00010803(8): MOV qword ptr [0x118 + RSP],RAX
0001080b(2): XOR EAX,EAX
0001080d(3): MOV RAX,qword ptr [RSI]
00010810(5): MOV qword ptr [RSP + 0x18],RDX
00010815(5): MOV qword ptr [RSP + 0x40],R9
0001081a(3): CMP CL,0x24
0001081d(5): MOV qword ptr [RSP + 0x10],RAX
00010822(6): JA 0x000108e0
00010828(3): MOV RBP,RSI
0001082b(7): LEA RSI,[0x153a0]
00010832(3): MOVZX EDX,CL
00010835(3): MOV R14,RDI
00010838(4): MOVSXD RAX,dword ptr [RSI + RDX*0x4]
0001083c(3): ADD RAX,RSI
0001083f(2): JMP RAX
00010841(4): MOV RBX,qword ptr [RBP + 0x30]
00010845(5): MOV R15,qword ptr [RSP + 0x20]
0001084a(3): MOV RSI,RDI
0001084d(5): MOV R13,qword ptr [RSP + 0x18]
00010852(4): MOV qword ptr [RSP],R8
00010856(4): LEA RAX,[RBX + 0x1]
0001085a(3): MOV RDX,R15
0001085d(7): OR RDX,0x800000
00010864(3): MOV RDI,R13
00010867(4): MOV qword ptr [RBP + 0x30],RAX
0001086b(5): CALL 0x00010020
00010870(2): CDQE
00010872(4): ADD qword ptr [R14 + 0x48],RAX
00010876(2): XOR EAX,EAX
00010878(5): CMP byte ptr [R13 + 0x8],0x9
0001087d(3): MOV RDX,R13
00010880(6): JZ 0x00011380
00010886(5): MOV R13,qword ptr [RSP + 0x40]
0001088b(4): MOV R8,qword ptr [RSP]
0001088f(3): MOV RCX,R15
00010892(3): MOV RSI,RBP
00010895(3): MOV RDI,R14
00010898(4): ADD R8,0x1
0001089c(3): MOV R9,R13
0001089f(5): CALL 0x00011e50
000108a4(4): MOV R11D,dword ptr [R13]
000108a8(3): TEST R11D,R11D
000108ab(2): JNZ 0x000108e0
000108ad(5): MOV RDX,qword ptr [RSP + 0x18]
000108b2(4): CMP byte ptr [RDX + 0x8],0x9
000108b6(6): JZ 0x00011380
000108bc(3): TEST RAX,RAX
000108bf(2): JZ 0x000108d2
000108c1(7): LEA RSI,[0x6ba0]
000108c8(2): XOR EDX,EDX
000108ca(3): MOV RDI,RAX
000108cd(5): CALL 0x00005d00
000108d2(5): MOV RAX,qword ptr [RSP + 0x40]
000108d7(6): MOV dword ptr [RAX],0x8
000108dd(3): NOP dword ptr [RAX]
000108e0(9): MOV qword ptr [RSP + 0x28],0x0
000108e9(7): NOP dword ptr [RAX]
000108f0(8): MOV RDI,qword ptr [0x118 + RSP]
000108f8(9): XOR RDI,qword ptr FS:[0x28]
00010901(5): MOV RAX,qword ptr [RSP + 0x28]
00010906(6): JNZ 0x00011c7e
0001090c(7): ADD RSP,0x128
00010913(1): POP RBX
00010914(1): POP RBP
00010915(2): POP R12
00010917(2): POP R13
00010919(2): POP R14
0001091b(2): POP R15
0001091d(1): RET
0001091e(9): TEST qword ptr [RSP + 0x20],0x1000000
00010927(6): JNZ 0x00010b7d
0001092d(5): MOV RAX,qword ptr [RSP + 0x20]
00010932(2): TEST AL,0x20
00010934(6): JNZ 0x00010b7d
0001093a(2): TEST AL,0x10
0001093c(6): JNZ 0x000117a5
00010942(3): CMP CL,0x9
00010945(6): JZ 0x00011358
0001094b(5): MOV RAX,qword ptr [RSP + 0x10]
00010950(5): MOV R8,qword ptr [RSP + 0x18]
00010955(2): XOR ECX,ECX
00010957(2): XOR EDX,EDX
00010959(7): LEA RSI,[0x80 + RAX]
00010960(4): LEA RDI,[RAX + 0x70]
00010964(5): MOV byte ptr [R8 + 0x8],0x1
00010969(5): CALL 0x000080e0
0001096e(3): TEST RAX,RAX
00010971(5): MOV qword ptr [RSP + 0x28],RAX
00010976(6): JZ 0x00011348
0001097c(5): MOV RBX,qword ptr [RSP + 0x18]
00010981(5): MOV RDX,qword ptr [RSP + 0x20]
00010986(3): MOV RSI,R14
00010989(8): LEA R15,[0xc0 + RSP]
00010991(3): MOV RDI,RBX
00010994(5): CALL 0x00010020
00010999(2): CDQE
0001099b(4): ADD qword ptr [R14 + 0x48],RAX
0001099f(4): MOVZX EAX,byte ptr [RBX + 0x8]
000109a3(5): NOP dword ptr [RAX + RAX*0x1]
000109a8(2): CMP AL,0x17
000109aa(6): JA 0x000108f0
000109b0(2): CMP AL,0x12
000109b2(5): MOV ECX,0x8c0800
000109b7(3): SETZ BL
000109ba(4): BT RCX,RAX
000109be(6): JNC 0x000108f0
000109c4(5): MOV RCX,qword ptr [RSP + 0x18]
000109c9(2): CMP AL,0x17
000109cb(4): MOV RBP,qword ptr [R14 + 0x48]
000109cf(4): MOVDQA XMM0,xmmword ptr [RCX]
000109d3(6): JZ 0x00010cf8
000109d9(2): CMP AL,0x13
000109db(3): MOVZX EBX,BL
000109de(6): JZ 0x00010c90
000109e4(5): MOV RDX,qword ptr [RSP + 0x20]
000109e9(5): MOV RDI,qword ptr [RSP + 0x18]
000109ee(3): MOV RSI,R14
000109f1(5): CALL 0x00010020
000109f6(2): CDQE
000109f8(4): ADD qword ptr [R14 + 0x48],RAX
000109fc(6): CMP qword ptr [RSP + 0x28],0x0
00010a02(6): JZ 0x00010d90
00010a08(8): MOV qword ptr [RSP],-0x1
00010a10(3): TEST RBX,RBX
00010a13(5): MOV RBP,qword ptr [RSP + 0x28]
00010a18(9): MOV qword ptr [RSP + 0x30],0x0
00010a21(6): JG 0x00010ba0
00010a27(4): CMP byte ptr [RBP + 0x30],0x11
00010a2b(6): JZ 0x00010d70
00010a31(5): CMP qword ptr [RSP],-0x1
00010a36(3): MOV RDX,RBP
00010a39(3): MOV R8,R15
00010a3c(3): SETZ AL
00010a3f(2): XOR ECX,ECX
00010a41(3): ADD EAX,0xa
00010a44(7): MOV byte ptr [0xc8 + RSP],AL
00010a4b(5): MOV RAX,qword ptr [RSP + 0x10]
00010a50(4): LEA R12,[RAX + 0x70]
00010a54(7): LEA R13,[0x80 + RAX]
00010a5b(3): MOV RDI,R12
00010a5e(3): MOV RSI,R13
00010a61(5): CALL 0x000080e0
00010a66(3): TEST RAX,RAX
00010a69(3): MOV RDX,RAX
00010a6c(6): JZ 0x00010c60
00010a72(4): ADD RBX,0x2
00010a76(4): CMP RBX,qword ptr [RSP]
00010a7a(2): JG 0x00010afb
00010a7c(5): MOV qword ptr [RSP + 0x48],R14
00010a81(3): MOV R14,RAX
00010a84(5): MOV RSI,qword ptr [RSP + 0x10]
00010a89(3): MOV RDI,RBP
00010a8c(5): CALL 0x000081c0
00010a91(3): MOV R8,R15
00010a94(3): MOV RBP,RAX
00010a97(3): MOV RCX,RAX
00010a9a(3): MOV RDX,R14
00010a9d(3): MOV RSI,R13
00010aa0(3): MOV RDI,R12
00010aa3(8): MOV byte ptr [0xc8 + RSP],0x10
00010aab(5): CALL 0x000080e0
00010ab0(3): TEST RBP,RBP
00010ab3(6): JZ 0x00010c60
00010ab9(3): TEST RAX,RAX
00010abc(6): JZ 0x00010c60
00010ac2(2): XOR ECX,ECX
00010ac4(3): MOV R8,R15
00010ac7(3): MOV RDX,RAX
00010aca(3): MOV RSI,R13
00010acd(3): MOV RDI,R12
00010ad0(8): MOV byte ptr [0xc8 + RSP],0xa
00010ad8(5): CALL 0x000080e0
00010add(3): TEST RAX,RAX
00010ae0(3): MOV R14,RAX
00010ae3(6): JZ 0x00010c60
00010ae9(4): ADD RBX,0x1
00010aed(4): CMP RBX,qword ptr [RSP]
00010af1(2): JLE 0x00010a84
00010af3(5): MOV R14,qword ptr [RSP + 0x48]
00010af8(3): MOV RDX,RAX
00010afb(5): MOV RAX,qword ptr [RSP + 0x30]
00010b00(3): TEST RAX,RAX
00010b03(6): JZ 0x00010db0
00010b09(3): MOV RCX,RDX
00010b0c(3): MOV R8,R15
00010b0f(3): MOV RDX,RAX
00010b12(3): MOV RSI,R13
00010b15(3): MOV RDI,R12
00010b18(8): MOV byte ptr [0xc8 + RSP],0x10
00010b20(5): CALL 0x000080e0
00010b25(5): MOV RDI,qword ptr [RSP + 0x40]
00010b2a(2): MOV EDX,dword ptr [RDI]
00010b2c(2): TEST EDX,EDX
00010b2e(2): JZ 0x00010b39
00010b30(3): TEST RAX,RAX
00010b33(6): JZ 0x00010e8b
00010b39(5): MOV qword ptr [RSP + 0x28],RAX
00010b3e(9): TEST qword ptr [RSP + 0x20],0x1000000
00010b47(5): MOV RAX,qword ptr [RSP + 0x18]
00010b4c(4): MOVZX EAX,byte ptr [RAX + 0x8]
00010b50(6): JZ 0x000109a8
00010b56(2): CMP AL,0xb
00010b58(2): JZ 0x00010b62
00010b5a(2): CMP AL,0x17
00010b5c(6): JNZ 0x000109a8
00010b62(5): MOV RAX,qword ptr [RSP + 0x28]
00010b67(3): TEST RAX,RAX
00010b6a(2): JZ 0x00010b7d
00010b6c(7): LEA RSI,[0x6ba0]
00010b73(2): XOR EDX,EDX
00010b75(3): MOV RDI,RAX
00010b78(5): CALL 0x00005d00
00010b7d(5): MOV RAX,qword ptr [RSP + 0x40]
00010b82(9): MOV qword ptr [RSP + 0x28],0x0
00010b8b(6): MOV dword ptr [RAX],0xd
00010b91(5): JMP 0x000108f0
00010ba0(4): CMP RBX,0x1
00010ba4(6): JZ 0x000113dc
00010baa(5): MOV RAX,qword ptr [RSP + 0x10]
00010baf(3): MOV R13,RBP
00010bb2(5): MOV qword ptr [RSP + 0x48],R14
00010bb7(7): LEA R12,[0x80 + RAX]
00010bbe(4): LEA RDI,[RAX + 0x70]
00010bc2(3): MOV RAX,RBP
00010bc5(3): MOV R14,RAX
00010bc8(5): MOV EBP,0x2
00010bcd(3): MOV RSI,R12
00010bd0(5): MOV qword ptr [RSP + 0x30],RDI
00010bd5(3): MOV R12,R13
00010bd8(3): MOV R13,RBX
00010bdb(3): MOV RBX,RSI
00010bde(2): NOP
00010be0(5): MOV RSI,qword ptr [RSP + 0x10]
00010be5(3): MOV RDI,R12
00010be8(5): CALL 0x000081c0
00010bed(5): MOV RDI,qword ptr [RSP + 0x30]
00010bf2(3): MOV R12,RAX
00010bf5(3): MOV RDX,R14
00010bf8(3): MOV R8,R15
00010bfb(3): MOV RCX,RAX
00010bfe(3): MOV RSI,RBX
00010c01(8): MOV byte ptr [0xc8 + RSP],0x10
00010c09(5): CALL 0x000080e0
00010c0e(3): TEST R12,R12
00010c11(3): MOV R14,RAX
00010c14(2): JZ 0x00010c60
00010c16(3): TEST RAX,RAX
00010c19(2): JZ 0x00010c60
00010c1b(4): ADD RBP,0x1
00010c1f(3): CMP RBP,R13
00010c22(2): JLE 0x00010be0
00010c24(5): MOV R14,qword ptr [RSP + 0x48]
00010c29(3): MOV RBX,R13
00010c2c(5): MOV qword ptr [RSP + 0x30],RAX
00010c31(3): MOV R13,R12
00010c34(4): CMP qword ptr [RSP],RBX
00010c38(6): JZ 0x00010da4
00010c3e(5): MOV RSI,qword ptr [RSP + 0x10]
00010c43(3): MOV RDI,R13
00010c46(5): CALL 0x000081c0
00010c4b(3): TEST RAX,RAX
00010c4e(3): MOV RBP,RAX
00010c51(6): JNZ 0x00010a27
00010c57(9): NOP word ptr [RAX + RAX*0x1]
00010c60(5): MOV RAX,qword ptr [RSP + 0x40]
00010c65(6): MOV dword ptr [RAX],0xc
00010c6b(5): MOV RDI,qword ptr [RSP + 0x28]
00010c70(7): LEA RSI,[0x6ba0]
00010c77(2): XOR EDX,EDX
00010c79(5): CALL 0x00005d00
00010c7e(9): MOV qword ptr [RSP + 0x28],0x0
00010c87(5): JMP 0x000108f0
00010c90(8): MOV qword ptr [RSP],0x1
00010c98(5): MOV RDX,qword ptr [RSP + 0x20]
00010c9d(5): MOV RDI,qword ptr [RSP + 0x18]
00010ca2(3): MOV RSI,R14
00010ca5(5): CALL 0x00010020
00010caa(2): CDQE
00010cac(4): ADD qword ptr [R14 + 0x48],RAX
00010cb0(6): CMP qword ptr [RSP + 0x28],0x0
00010cb6(6): JZ 0x00010d90
00010cbc(4): MOV RAX,qword ptr [RSP]
00010cc0(3): OR RAX,RBX
00010cc3(6): JNZ 0x00010a10
00010cc9(5): MOV RDI,qword ptr [RSP + 0x28]
00010cce(7): LEA RSI,[0x6ba0]
00010cd5(2): XOR EDX,EDX
00010cd7(5): CALL 0x00005d00
00010cdc(5): MOV RAX,qword ptr [RSP + 0x40]
00010ce1(2): MOV ESI,dword ptr [RAX]
00010ce3(2): TEST ESI,ESI
00010ce5(2): JNZ 0x00010c6b
00010ce7(9): MOV qword ptr [RSP + 0x28],0x0
00010cf0(5): JMP 0x00010b3e
00010cf8(5): MOV RDX,qword ptr [RSP + 0x20]
00010cfd(3): MOV RSI,RCX
00010d00(3): MOV RDI,R14
00010d03(4): MOVAPS xmmword ptr [RSP],XMM0
00010d07(5): CALL 0x00010720
00010d0c(4): CMP RAX,-0x1
00010d10(3): MOV RBX,RAX
00010d13(5): MOVDQA XMM0,xmmword ptr [RSP]
00010d18(6): JZ 0x00010dc0
00010d1e(4): CMP RAX,-0x2
00010d22(2): JZ 0x00010d3d
00010d24(5): MOV RAX,qword ptr [RSP + 0x18]
00010d29(4): MOVZX EAX,byte ptr [RAX + 0x8]
00010d2d(2): CMP AL,0x18
00010d2f(6): JZ 0x00010e50
00010d35(2): CMP AL,0x1
00010d37(6): JZ 0x00010e63
00010d3d(9): TEST qword ptr [RSP + 0x20],0x200000
00010d46(6): JZ 0x00011c83
00010d4c(5): MOV RAX,qword ptr [RSP + 0x18]
00010d51(4): MOV qword ptr [R14 + 0x48],RBP
00010d55(3): MOVAPS xmmword ptr [RAX],XMM0
00010d58(4): MOV byte ptr [RAX + 0x8],0x1
00010d5c(5): MOV RAX,qword ptr [RSP + 0x28]
00010d61(5): JMP 0x00010b25
00010d70(4): MOV RDX,qword ptr [RBP + 0x28]
00010d74(7): LEA RSI,[0x5a40]
00010d7b(3): MOV RDI,RBP
00010d7e(5): CALL 0x00005d00
00010d83(5): JMP 0x00010a31
00010d90(5): MOV RAX,qword ptr [RSP + 0x40]
00010d95(2): MOV ECX,dword ptr [RAX]
00010d97(2): TEST ECX,ECX
00010d99(6): JZ 0x00010ce7
00010d9f(5): JMP 0x000108e0
00010da4(5): MOV RDX,qword ptr [RSP + 0x30]
00010da9(7): NOP dword ptr [RAX]
00010db0(5): MOV qword ptr [RSP + 0x28],RDX
00010db5(5): JMP 0x00010b3e
00010dc0(5): MOV RAX,qword ptr [RSP + 0x18]
00010dc5(4): CMP byte ptr [RAX + 0x8],0x1
00010dc9(6): JNZ 0x00010e80
00010dcf(5): MOV RAX,qword ptr [RSP + 0x18]
00010dd4(3): CMP byte ptr [RAX],0x2c
00010dd7(6): JNZ 0x00010e80
00010ddd(2): XOR EBX,EBX
00010ddf(5): MOV RDX,qword ptr [RSP + 0x20]
00010de4(5): MOV RSI,qword ptr [RSP + 0x18]
00010de9(3): MOV RDI,R14
00010dec(5): MOVAPS xmmword ptr [RSP + 0x30],XMM0
00010df1(5): CALL 0x00010720
00010df6(4): CMP RAX,-0x2
00010dfa(4): MOV qword ptr [RSP],RAX
00010dfe(6): MOVDQA XMM0,xmmword ptr [RSP + 0x30]
00010e04(6): JZ 0x00010d3d
00010e0a(4): MOV RAX,qword ptr [RSP]
00010e0e(4): CMP RAX,-0x1
00010e12(2): JZ 0x00010e19
00010e14(3): CMP RAX,RBX
00010e17(2): JL 0x00010e80
00010e19(5): MOV RAX,qword ptr [RSP + 0x18]
00010e1e(4): CMP byte ptr [RAX + 0x8],0x18
00010e22(2): JNZ 0x00010e80
00010e24(5): CMP qword ptr [RSP],-0x1
00010e29(2): JNZ 0x00010e54
00010e2b(2): XOR EAX,EAX
00010e2d(7): CMP RBX,0x7fff
00010e34(3): SETG AL
00010e37(3): TEST RAX,RAX
00010e3a(6): JZ 0x00010c98
00010e40(5): MOV RAX,qword ptr [RSP + 0x40]
00010e45(6): MOV dword ptr [RAX],0xf
00010e4b(2): JMP 0x00010e8b
00010e50(4): MOV qword ptr [RSP],RBX
00010e54(2): XOR EAX,EAX
00010e56(8): CMP qword ptr [RSP],0x7fff
00010e5e(3): SETG AL
00010e61(2): JMP 0x00010e37
00010e63(5): MOV RAX,qword ptr [RSP + 0x18]
00010e68(3): CMP byte ptr [RAX],0x2c
00010e6b(6): JZ 0x00010ddf
00010e71(9): TEST qword ptr [RSP + 0x20],0x200000
00010e7a(6): JNZ 0x00010d4c
00010e80(5): MOV RAX,qword ptr [RSP + 0x40]
00010e85(6): MOV dword ptr [RAX],0xa
00010e8b(6): CMP qword ptr [RSP + 0x28],0x0
00010e91(6): JNZ 0x00010c6b
00010e97(5): JMP 0x000108e0
00010ea0(5): MOV RAX,qword ptr [RSP + 0x18]
00010ea5(2): MOV EBP,dword ptr [RAX]
00010ea7(6): TEST EBP,0x30f
00010ead(2): JZ 0x00010f11
00010eaf(5): MOV RAX,qword ptr [RSP + 0x10]
00010eb4(7): MOVZX EAX,byte ptr [0xb0 + RAX]
00010ebb(2): TEST AL,0x10
00010ebd(2): JNZ 0x00010f11
00010ebf(5): MOV RDI,qword ptr [RSP + 0x10]
00010ec4(3): OR EAX,0x10
00010ec7(2): TEST AL,0x8
00010ec9(6): MOV byte ptr [0xb0 + RDI],AL
00010ecf(6): JNZ 0x00011ad3
00010ed5(10): MOV RDX,0x3ff000000000000
00010edf(2): TEST AL,0x4
00010ee1(7): MOV qword ptr [0xb8 + RDI],RDX
00010ee8(10): MOV RDX,0x7fffffe87fffffe
00010ef2(7): MOV qword ptr [0xc0 + RDI],RDX
00010ef9(6): JZ 0x00011a58
00010eff(4): PXOR XMM0,XMM0
00010f03(5): MOV RAX,qword ptr [RSP + 0x18]
00010f08(7): MOVUPS xmmword ptr [0xc8 + RDI],XMM0
00010f0f(2): MOV EBP,dword ptr [RAX]
00010f11(5): MOV RAX,qword ptr [RSP + 0x10]
00010f16(4): LEA RBX,[RAX + 0x70]
00010f1a(7): LEA R12,[0x80 + RAX]
00010f21(6): LEA EAX,[-0x100 + RBP]
00010f27(5): TEST EAX,0xfffffeff
00010f2c(6): JNZ 0x0001159a
00010f32(6): CMP EBP,0x100
00010f38(5): MOV R15,qword ptr [RSP + 0x18]
00010f3d(6): JZ 0x00011572
00010f43(7): MOV dword ptr [R15],0x5
00010f4a(3): MOV R8,R15
00010f4d(2): XOR ECX,ECX
00010f4f(2): XOR EDX,EDX
00010f51(3): MOV RSI,R12
00010f54(3): MOV RDI,RBX
00010f57(5): CALL 0x000080e0
00010f5c(7): MOV dword ptr [R15],0xa
00010f63(3): MOV RBP,RAX
00010f66(5): MOV R8,qword ptr [RSP + 0x18]
00010f6b(2): XOR ECX,ECX
00010f6d(2): XOR EDX,EDX
00010f6f(3): MOV RSI,R12
00010f72(3): MOV RDI,RBX
00010f75(5): CALL 0x000080e0
00010f7a(8): LEA R8,[0xc0 + RSP]
00010f82(3): MOV RDX,RBP
00010f85(3): MOV RDI,RBX
00010f88(3): MOV RCX,RAX
00010f8b(3): MOV RSI,R12
00010f8e(3): MOV R13,RAX
00010f91(8): MOV byte ptr [0xc8 + RSP],0xa
00010f99(5): CALL 0x000080e0
00010f9e(3): TEST RBP,RBP
00010fa1(3): MOV RDI,RAX
00010fa4(5): MOV qword ptr [RSP + 0x28],RAX
00010fa9(3): SETZ DL
00010fac(3): TEST R13,R13
00010faf(3): SETZ AL
00010fb2(2): OR DL,AL
00010fb4(6): JNZ 0x00011348
00010fba(3): TEST RDI,RDI
00010fbd(6): JZ 0x00011348
00010fc3(5): MOV RDX,qword ptr [RSP + 0x20]
00010fc8(5): MOV RDI,qword ptr [RSP + 0x18]
00010fcd(3): MOV RSI,R14
00010fd0(5): CALL 0x00010020
00010fd5(2): CDQE
00010fd7(4): ADD qword ptr [R14 + 0x48],RAX
00010fdb(5): JMP 0x000108f0
00010fe0(5): MOV ESI,0x1
00010fe5(5): MOV EDI,0x20
00010fea(12): MOV qword ptr [0x98 + RSP],0x0
00010ff6(5): CALL 0x00001a70
00010ffb(5): MOV ESI,0x1
00011000(3): MOV R12,RAX
00011003(5): MOV EDI,0x50
00011008(5): CALL 0x00001a70
0001100d(3): TEST R12,R12
00011010(3): MOV R13,RAX
00011013(3): SETZ DL
00011016(3): TEST RAX,RAX
00011019(3): SETZ AL
0001101c(2): OR DL,AL
0001101e(6): JNZ 0x000117f9
00011024(5): MOV R10,qword ptr [RSP + 0x18]
00011029(5): MOV RDX,qword ptr [RSP + 0x20]
0001102e(3): MOV RSI,R14
00011031(3): MOV RDI,R10
00011034(5): CALL 0x00005910
00011039(3): MOVSXD RBX,EAX
0001103c(5): MOVZX EAX,byte ptr [R10 + 0x8]
00011041(2): CMP AL,0x2
00011043(6): JZ 0x000117e9
00011049(2): CMP AL,0x19
0001104b(5): MOV byte ptr [RSP + 0x57],0x0
00011050(6): JZ 0x0001151a
00011056(2): CMP AL,0x15
00011058(6): JZ 0x00011564
0001105e(8): LEA RAX,[0xd0 + RSP]
00011066(5): MOV R15,qword ptr [RSP + 0x18]
0001106b(7): LEA RBP,[0x15434]
00011072(9): MOV qword ptr [RSP + 0x48],0x0
0001107b(6): MOV R9D,0x1
00011081(9): MOV qword ptr [RSP + 0x30],0x0
0001108a(5): MOV qword ptr [RSP + 0x28],RAX
0001108f(8): LEA RAX,[0xa0 + RSP]
00011097(4): MOV qword ptr [RSP],RAX
0001109b(8): LEA RAX,[0x98 + RSP]
000110a3(5): MOV qword ptr [RSP + 0x58],RAX
000110a8(8): LEA RAX,[0xc0 + RSP]
000110b0(5): MOV qword ptr [RSP + 0x60],RAX
000110b5(8): LEA RAX,[0xf0 + RSP]
000110bd(5): MOV qword ptr [RSP + 0x68],RAX
000110c2(5): MOV RAX,qword ptr [RSP + 0x28]
000110c7(5): MOV R8,qword ptr [RSP + 0x20]
000110cc(4): AND R9D,0x1
000110d0(4): MOV RDI,qword ptr [RSP]
000110d4(2): MOV ECX,EBX
000110d6(3): MOV RDX,R15
000110d9(3): MOV RSI,R14
000110dc(11): MOV dword ptr [0xa0 + RSP],0x3
000110e7(8): MOV qword ptr [0xa8 + RSP],RAX
000110ef(5): CALL 0x0000fdc0
000110f4(2): TEST EAX,EAX
000110f6(6): JNZ 0x000115db
000110fc(5): MOV RDX,qword ptr [RSP + 0x20]
00011101(3): MOV RSI,R14
00011104(3): MOV RDI,R15
00011107(5): CALL 0x00005910
0001110c(3): MOVSXD RBX,EAX
0001110f(7): MOV EAX,dword ptr [0xa0 + RSP]
00011116(3): LEA EDX,[RAX + -0x2]
00011119(3): AND EDX,0xfffffffd
0001111c(2): JZ 0x00011135
0001111e(5): MOVZX EDX,byte ptr [R15 + 0x8]
00011123(3): CMP DL,0x2
00011126(6): JZ 0x000115c1
0001112c(3): CMP DL,0x16
0001112f(6): JZ 0x000115e7
00011135(3): CMP EAX,0x4
00011138(6): JA 0x00011ada
0001113e(5): MOVSXD RAX,dword ptr [RBP + RAX*0x4]
00011143(3): ADD RAX,RBP
00011146(2): JMP RAX
00011148(5): MOV RBX,qword ptr [RSP + 0x40]
0001114d(3): CMP CL,0x23
00011150(4): MOV RSI,qword ptr [RDI + 0x78]
00011154(4): SETZ R8B
00011158(7): LEA RCX,[0x14c01]
0001115f(7): LEA RDX,[0x14faf]
00011166(4): MOVZX R8D,R8B
0001116a(3): MOV R9,RBX
0001116d(5): MOV RDI,qword ptr [RSP + 0x10]
00011172(5): CALL 0x0000b430
00011177(2): MOV EDI,dword ptr [RBX]
00011179(5): MOV qword ptr [RSP + 0x28],RAX
0001117e(2): TEST EDI,EDI
00011180(6): JZ 0x0001097c
00011186(3): TEST RAX,RAX
00011189(6): JNZ 0x0001097c
0001118f(5): JMP 0x000108e0
00011198(5): MOV RBX,qword ptr [RSP + 0x40]
0001119d(3): CMP CL,0x21
000111a0(4): MOV RSI,qword ptr [RDI + 0x78]
000111a4(4): SETZ R8B
000111a8(7): LEA RCX,[0x141fe]
000111af(7): LEA RDX,[0x14fa3]
000111b6(4): MOVZX R8D,R8B
000111ba(3): MOV R9,RBX
000111bd(2): JMP 0x0001116d
000111bf(5): MOV RAX,qword ptr [RSP + 0x18]
000111c4(5): MOV RDI,qword ptr [RSP + 0x10]
000111c9(3): MOV RCX,qword ptr [RAX]
000111cc(5): MOV EAX,0x1
000111d1(2): SHL EAX,CL
000111d3(2): CDQE
000111d5(7): TEST qword ptr [0xa8 + RDI],RAX
000111dc(6): JZ 0x0001180e
000111e2(5): MOV RBX,qword ptr [RSP + 0x10]
000111e7(5): MOV R8,qword ptr [RSP + 0x18]
000111ec(2): XOR ECX,ECX
000111ee(2): XOR EDX,EDX
000111f0(7): OR qword ptr [0xa0 + RBX],RAX
000111f7(7): LEA RSI,[0x80 + RBX]
000111fe(4): LEA RDI,[RBX + 0x70]
00011202(5): CALL 0x000080e0
00011207(3): TEST RAX,RAX
0001120a(5): MOV qword ptr [RSP + 0x28],RAX
0001120f(6): JZ 0x00011348
00011215(8): ADD qword ptr [0x98 + RBX],0x1
0001121d(7): OR byte ptr [0xb0 + RBX],0x2
00011224(5): JMP 0x0001097c
00011229(5): MOV RBX,qword ptr [RSP + 0x10]
0001122e(5): MOV R8,qword ptr [RSP + 0x18]
00011233(2): XOR ECX,ECX
00011235(2): XOR EDX,EDX
00011237(7): LEA RSI,[0x80 + RBX]
0001123e(4): LEA RDI,[RBX + 0x70]
00011242(5): CALL 0x000080e0
00011247(3): TEST RAX,RAX
0001124a(5): MOV qword ptr [RSP + 0x28],RAX
0001124f(6): JZ 0x00011348
00011255(7): CMP dword ptr [0xb4 + RBX],0x1
0001125c(6): JLE 0x0001097c
00011262(7): OR byte ptr [0xb0 + RBX],0x2
00011269(5): JMP 0x0001097c
0001126e(5): MOV RAX,qword ptr [RSP + 0x10]
00011273(5): MOV R8,qword ptr [RSP + 0x18]
00011278(2): XOR ECX,ECX
0001127a(2): XOR EDX,EDX
0001127c(4): LEA RBX,[RAX + 0x70]
00011280(7): LEA RBP,[0x80 + RAX]
00011287(3): MOV RDI,RBX
0001128a(3): MOV RSI,RBP
0001128d(5): CALL 0x000080e0
00011292(3): TEST RAX,RAX
00011295(5): MOV qword ptr [RSP + 0x28],RAX
0001129a(6): JZ 0x00011348
000112a0(5): MOV RAX,qword ptr [RSP + 0x10]
000112a5(8): LEA R12,[0xc0 + RSP]
000112ad(5): MOV R15,qword ptr [RSP + 0x28]
000112b2(7): CMP dword ptr [0xb4 + RAX],0x1
000112b9(6): JLE 0x0001097c
000112bf(4): MOV RAX,qword ptr [R14 + 0x48]
000112c3(4): CMP qword ptr [R14 + 0x68],RAX
000112c7(6): JLE 0x000115d1
000112cd(4): CMP RAX,qword ptr [R14 + 0x30]
000112d1(6): JZ 0x000115d1
000112d7(4): MOV RDX,qword ptr [R14 + 0x10]
000112db(4): CMP dword ptr [RDX + RAX*0x4],-0x1
000112df(6): JNZ 0x000115d1
000112e5(5): MOV R13,qword ptr [RSP + 0x18]
000112ea(5): MOV RDX,qword ptr [RSP + 0x20]
000112ef(3): MOV RSI,R14
000112f2(3): MOV RDI,R13
000112f5(5): CALL 0x00010020
000112fa(2): CDQE
000112fc(4): ADD qword ptr [R14 + 0x48],RAX
00011300(3): MOV R8,R13
00011303(2): XOR ECX,ECX
00011305(2): XOR EDX,EDX
00011307(3): MOV RSI,RBP
0001130a(3): MOV RDI,RBX
0001130d(5): CALL 0x000080e0
00011312(3): MOV RDX,R15
00011315(3): MOV R13,RAX
00011318(3): MOV R8,R12
0001131b(3): MOV RCX,RAX
0001131e(3): MOV RSI,RBP
00011321(3): MOV RDI,RBX
00011324(8): MOV byte ptr [0xc8 + RSP],0x10
0001132c(5): CALL 0x000080e0
00011331(3): TEST R13,R13
00011334(3): MOV R15,RAX
00011337(3): SETZ DL
0001133a(3): TEST RAX,RAX
0001133d(3): SETZ AL
00011340(2): OR DL,AL
00011342(6): JZ 0x000112bf
00011348(5): MOV RAX,qword ptr [RSP + 0x40]
0001134d(6): MOV dword ptr [RAX],0xc
00011353(5): JMP 0x000108e0
00011358(9): TEST qword ptr [RSP + 0x20],0x20000
00011361(6): JNZ 0x0001094b
00011367(5): MOV RAX,qword ptr [RSP + 0x40]
0001136c(9): MOV qword ptr [RSP + 0x28],0x0
00011375(6): MOV dword ptr [RAX],0x10
0001137b(5): JMP 0x000108f0
00011380(4): CMP RBX,0x8
00011384(2): JBE 0x000113eb
00011386(5): MOV RDI,qword ptr [RSP + 0x10]
0001138b(8): LEA R8,[0xc0 + RSP]
00011393(2): XOR ECX,ECX
00011395(3): MOV RDX,RAX
00011398(8): MOV byte ptr [0xc8 + RSP],0x11
000113a0(7): LEA RSI,[0x80 + RDI]
000113a7(4): ADD RDI,0x70
000113ab(5): CALL 0x000080e0
000113b0(3): TEST RAX,RAX
000113b3(5): MOV qword ptr [RSP + 0x28],RAX
000113b8(2): JZ 0x00011348
000113ba(4): MOV qword ptr [RAX + 0x28],RBX
000113be(5): JMP 0x0001097c
000113c3(5): MOV RAX,qword ptr [RSP + 0x40]
000113c8(9): MOV qword ptr [RSP + 0x28],0x0
000113d1(6): MOV dword ptr [RAX],0x5
000113d7(5): JMP 0x000108f0
000113dc(5): MOV R13,qword ptr [RSP + 0x28]
000113e1(5): MOV qword ptr [RSP + 0x30],R13
000113e6(5): JMP 0x00010c34
000113eb(5): MOV RSI,qword ptr [RSP + 0x10]
000113f0(5): MOV EDX,0x1
000113f5(2): MOV ECX,EBX
000113f7(2): SHL EDX,CL
000113f9(3): MOVSXD RDX,EDX
000113fc(7): OR qword ptr [0xa8 + RSI],RDX
00011403(2): JMP 0x00011386
00011405(8): MOV RSI,qword ptr [0xa8 + RSP]
0001140d(3): MOV RDI,R12
00011410(5): CALL 0x0000abd0
00011415(5): MOV RDX,qword ptr [RSP + 0x40]
0001141a(2): TEST EAX,EAX
0001141c(2): MOV dword ptr [RDX],EAX
0001141e(2): JNZ 0x00011458
00011420(5): MOVZX EAX,byte ptr [R15 + 0x8]
00011425(2): CMP AL,0x2
00011427(6): JZ 0x000115c1
0001142d(2): CMP AL,0x15
0001142f(6): JZ 0x00011842
00011435(3): XOR R9D,R9D
00011438(5): JMP 0x000110c2
0001143d(8): MOV RSI,qword ptr [0xa8 + RSP]
00011445(3): MOV RDI,R12
00011448(5): CALL 0x0000abd0
0001144d(5): MOV RDX,qword ptr [RSP + 0x40]
00011452(2): TEST EAX,EAX
00011454(2): MOV dword ptr [RDX],EAX
00011456(2): JZ 0x00011420
00011458(3): MOV RDI,R12
0001145b(5): CALL 0x00001880
00011460(3): MOV RDI,R13
00011463(5): CALL 0x00006b40
00011468(5): MOV RAX,qword ptr [RSP + 0x40]
0001146d(3): MOV R8D,dword ptr [RAX]
00011470(3): TEST R8D,R8D
00011473(6): JNZ 0x000108e0
00011479(9): MOV qword ptr [RSP + 0x28],0x0
00011482(5): JMP 0x0001097c
00011487(4): MOV RDX,qword ptr [R13 + 0x28]
0001148b(5): CMP RDX,qword ptr [RSP + 0x30]
00011490(4): MOV RAX,qword ptr [R13]
00011494(6): JZ 0x0001198e
0001149a(4): LEA RCX,[RDX + 0x1]
0001149e(4): MOV qword ptr [R13 + 0x28],RCX
000114a2(7): MOV ECX,dword ptr [0xa8 + RSP]
000114a9(3): MOV dword ptr [RAX + RDX*0x4],ECX
000114ac(5): JMP 0x00011420
000114b1(8): MOVZX EDX,byte ptr [0xa8 + RSP]
000114b9(5): MOV ESI,0x1
000114be(3): MOV RAX,RDX
000114c1(3): AND EDX,0x3f
000114c4(4): SHR RAX,0x3
000114c8(2): MOV ECX,EDX
000114ca(3): AND EAX,0x18
000114cd(3): SHL RSI,CL
000114d0(4): OR qword ptr [R12 + RAX*0x1],RSI
000114d4(5): JMP 0x00011420
000114d9(4): SUB RSP,0x8
000114dd(4): MOV RDI,qword ptr [R14 + 0x78]
000114e1(4): LEA RDX,[R13 + 0x18]
000114e5(4): PUSH qword ptr [RSP + 0x28]
000114e9(8): MOV R9,qword ptr [0xb8 + RSP]
000114f1(4): LEA RCX,[R13 + 0x48]
000114f5(5): MOV R8,qword ptr [RSP + 0x68]
000114fa(3): MOV RSI,R12
000114fd(5): CALL 0x0000ac20
00011502(5): MOV RDX,qword ptr [RSP + 0x50]
00011507(2): TEST EAX,EAX
00011509(2): MOV dword ptr [RDX],EAX
0001150b(2): POP R9
0001150d(2): POP R10
0001150f(6): JZ 0x00011420
00011515(5): JMP 0x00011458
0001151a(5): OR byte ptr [R13 + 0x20],0x1
0001151f(9): TEST qword ptr [RSP + 0x20],0x100
00011528(2): JZ 0x00011532
0001152a(8): OR qword ptr [R12],0x400
00011532(4): ADD qword ptr [R14 + 0x48],RBX
00011536(5): MOV R11,qword ptr [RSP + 0x18]
0001153b(3): MOV RSI,R14
0001153e(5): MOV RDX,qword ptr [RSP + 0x20]
00011543(3): MOV RDI,R11
00011546(5): CALL 0x00005910
0001154b(2): MOV EBX,EAX
0001154d(5): MOVZX EAX,byte ptr [R11 + 0x8]
00011552(2): CMP AL,0x2
00011554(6): JZ 0x000117e9
0001155a(5): MOV byte ptr [RSP + 0x57],0x1
0001155f(5): JMP 0x00011056
00011564(5): MOV RAX,qword ptr [RSP + 0x18]
00011569(4): MOV byte ptr [RAX + 0x8],0x1
0001156d(5): JMP 0x0001105e
00011572(7): MOV dword ptr [R15],0x6
00011579(3): MOV R8,R15
0001157c(2): XOR ECX,ECX
0001157e(2): XOR EDX,EDX
00011580(3): MOV RSI,R12
00011583(3): MOV RDI,RBX
00011586(5): CALL 0x000080e0
0001158b(7): MOV dword ptr [R15],0x9
00011592(3): MOV RBP,RAX
00011595(5): JMP 0x00010f66
0001159a(5): MOV R8,qword ptr [RSP + 0x18]
0001159f(2): XOR ECX,ECX
000115a1(2): XOR EDX,EDX
000115a3(3): MOV RSI,R12
000115a6(3): MOV RDI,RBX
000115a9(5): CALL 0x000080e0
000115ae(3): TEST RAX,RAX
000115b1(5): MOV qword ptr [RSP + 0x28],RAX
000115b6(6): JNZ 0x00010fc3
000115bc(5): JMP 0x00011348
000115c1(5): MOV RAX,qword ptr [RSP + 0x40]
000115c6(6): MOV dword ptr [RAX],0x7
000115cc(5): JMP 0x00011458
000115d1(5): MOV qword ptr [RSP + 0x28],R15
000115d6(5): JMP 0x0001097c
000115db(5): MOV RDX,qword ptr [RSP + 0x40]
000115e0(2): MOV dword ptr [RDX],EAX
000115e2(5): JMP 0x00011458
000115e7(3): MOVSXD RAX,EBX
000115ea(5): MOV R11,qword ptr [RSP + 0x20]
000115ef(4): ADD qword ptr [R14 + 0x48],RAX
000115f3(5): MOV R10,qword ptr [RSP + 0x60]
000115f8(3): MOV RDX,R11
000115fb(3): MOV RDI,R10
000115fe(5): CALL 0x00005910
00011603(8): MOVZX EDX,byte ptr [0xc8 + RSP]
0001160b(3): CMP DL,0x2
0001160e(2): JZ 0x000115c1
00011610(3): CMP DL,0x15
00011613(6): JZ 0x00011827
00011619(5): MOV RDX,qword ptr [RSP + 0x68]
0001161e(8): LEA RDI,[0xb0 + RSP]
00011626(6): MOV R9D,0x1
0001162c(3): MOV R8,R11
0001162f(2): MOV ECX,EAX
00011631(11): MOV dword ptr [0xb0 + RSP],0x3
0001163c(8): MOV qword ptr [0xb8 + RSP],RDX
00011644(3): MOV RDX,R10
00011647(5): CALL 0x0000fdc0
0001164c(2): TEST EAX,EAX
0001164e(2): JNZ 0x000115db
00011650(5): MOV RDX,qword ptr [RSP + 0x20]
00011655(3): MOV RSI,R14
00011658(3): MOV RDI,R15
0001165b(5): CALL 0x00005910
00011660(3): MOVSXD RBX,EAX
00011663(5): MOV RAX,qword ptr [RSP + 0x10]
00011668(7): MOV ESI,dword ptr [0xa0 + RSP]
0001166f(6): MOV R9D,0x0
00011675(7): CMP dword ptr [0xb4 + RAX],0x1
0001167c(3): LEA EAX,[RSI + -0x2]
0001167f(4): CMOVG R9,R13
00011683(3): AND EAX,0xfffffffd
00011686(6): JZ 0x00011af9
0001168c(8): MOV R10D,dword ptr [0xb0 + RSP]
00011694(4): LEA EAX,[R10 + -0x2]
00011698(3): AND EAX,0xfffffffd
0001169b(6): JZ 0x00011af9
000116a1(3): CMP ESI,0x3
000116a4(4): SETZ R11B
000116a8(6): JZ 0x00011b3d
000116ae(4): CMP R10D,0x3
000116b2(6): JZ 0x00011b09
000116b8(2): TEST ESI,ESI
000116ba(6): JNZ 0x00011a29
000116c0(8): MOVZX EDX,byte ptr [0xa8 + RSP]
000116c8(3): TEST R10D,R10D
000116cb(6): JNZ 0x00011a0d
000116d1(9): MOVZX R8D,byte ptr [0xb8 + RSP]
000116da(2): TEST ESI,ESI
000116dc(6): JZ 0x000119c6
000116e2(3): TEST R11B,R11B
000116e5(6): JNZ 0x000119c6
000116eb(3): TEST R9,R9
000116ee(7): MOV EDX,dword ptr [0xa8 + RSP]
000116f5(2): JZ 0x00011714
000116f7(3): MOV EDI,R8D
000116fa(4): MOV dword ptr [RSP + 0x78],EDX
000116fe(5): MOV qword ptr [RSP + 0x70],R9
00011703(5): CALL 0x00001b70
00011708(5): MOV R9,qword ptr [RSP + 0x70]
0001170d(4): MOV EDX,dword ptr [RSP + 0x78]
00011711(3): MOV R8D,EAX
00011714(3): CMP EDX,-0x1
00011717(6): JZ 0x00011b2d
0001171d(4): CMP R8D,-0x1
00011721(6): JZ 0x00011b2d
00011727(9): TEST qword ptr [RSP + 0x20],0x10000
00011730(2): JZ 0x0001173b
00011732(3): CMP R8D,EDX
00011735(6): JC 0x00011af9
0001173b(3): TEST R9,R9
0001173e(2): JZ 0x00011766
00011740(4): MOV RAX,qword ptr [R9 + 0x40]
00011744(5): CMP RAX,qword ptr [RSP + 0x48]
00011749(4): MOV RCX,qword ptr [R9 + 0x8]
0001174d(6): JZ 0x00011b63
00011753(3): MOV dword ptr [RCX + RAX*0x4],EDX
00011756(4): MOV RCX,qword ptr [R9 + 0x10]
0001175a(4): LEA RSI,[RAX + 0x1]
0001175e(4): MOV qword ptr [R9 + 0x40],RSI
00011762(4): MOV dword ptr [RCX + RAX*0x4],R8D
00011766(2): XOR EAX,EAX
00011768(5): MOV EDI,0x1
0001176d(2): CMP EDX,EAX
0001176f(2): MOV ECX,EAX
00011771(2): JA 0x00011789
00011773(3): CMP R8D,EAX
00011776(2): JC 0x00011789
00011778(3): MOV RSI,RAX
0001177b(3): MOV R11,RDI
0001177e(4): SAR RSI,0x6
00011782(3): SHL R11,CL
00011785(4): OR qword ptr [R12 + RSI*0x8],R11
00011789(4): ADD RAX,0x1
0001178d(6): CMP RAX,0x100
00011793(2): JNZ 0x0001176d
00011795(5): MOV RAX,qword ptr [RSP + 0x40]
0001179a(6): MOV dword ptr [RAX],0x0
000117a0(5): JMP 0x00011420
000117a5(5): MOV RBX,qword ptr [RSP + 0x18]
000117aa(3): MOV RDX,RAX
000117ad(3): MOV RSI,R14
000117b0(4): MOV qword ptr [RSP],R8
000117b4(3): MOV R15,RAX
000117b7(3): MOV RDI,RBX
000117ba(5): CALL 0x00010020
000117bf(2): CDQE
000117c1(4): ADD qword ptr [R14 + 0x48],RAX
000117c5(5): MOV R9,qword ptr [RSP + 0x40]
000117ca(4): MOV R8,qword ptr [RSP]
000117ce(3): MOV RCX,R15
000117d1(3): MOV RDX,RBX
000117d4(3): MOV RSI,RBP
000117d7(3): MOV RDI,R14
000117da(5): CALL 0x000107e0
000117df(5): MOV qword ptr [RSP + 0x28],RAX
000117e4(5): JMP 0x000108f0
000117e9(5): MOV RAX,qword ptr [RSP + 0x40]
000117ee(6): MOV dword ptr [RAX],0x2
000117f4(5): JMP 0x00011458
000117f9(3): MOV RDI,R12
000117fc(5): CALL 0x00001880
00011801(3): MOV RDI,R13
00011804(5): CALL 0x00001880
00011809(5): JMP 0x00011348
0001180e(5): MOV RAX,qword ptr [RSP + 0x40]
00011813(9): MOV qword ptr [RSP + 0x28],0x0
0001181c(6): MOV dword ptr [RAX],0x6
00011822(5): JMP 0x000108f0
00011827(2): MOV EAX,EBX
00011829(2): NEG EAX
0001182b(2): CDQE
0001182d(4): ADD qword ptr [R14 + 0x48],RAX
00011831(5): MOV byte ptr [R15 + 0x8],0x1
00011836(7): MOV EAX,dword ptr [0xa0 + RSP]
0001183d(5): JMP 0x00011135
00011842(4): ADD qword ptr [R14 + 0x48],RBX
00011846(5): CMP byte ptr [RSP + 0x57],0x0
0001184b(2): JZ 0x00011861
0001184d(5): LEA RDX,[R12 + 0x20]
00011852(3): MOV RAX,R12
00011855(3): NOT qword ptr [RAX]
00011858(4): ADD RAX,0x8
0001185c(3): CMP RDX,RAX
0001185f(2): JNZ 0x00011855
00011861(5): MOV RAX,qword ptr [RSP + 0x10]
00011866(6): MOV EDX,dword ptr [0xb4 + RAX]
0001186c(3): CMP EDX,0x1
0001186f(2): JLE 0x00011889
00011871(4): MOV RCX,qword ptr [RAX + 0x78]
00011875(2): XOR EAX,EAX
00011877(4): MOV RSI,qword ptr [RCX + RAX*0x1]
0001187b(4): AND qword ptr [R12 + RAX*0x1],RSI
0001187f(4): ADD RAX,0x8
00011883(4): CMP RAX,0x20
00011887(2): JNZ 0x00011877
00011889(5): CMP qword ptr [R13 + 0x28],0x0
0001188e(6): JNZ 0x00011918
00011894(5): CMP qword ptr [R13 + 0x30],0x0
00011899(2): JNZ 0x00011918
0001189b(5): CMP qword ptr [R13 + 0x38],0x0
000118a0(2): JNZ 0x00011918
000118a2(5): CMP qword ptr [R13 + 0x40],0x0
000118a7(2): JNZ 0x00011918
000118a9(3): SUB EDX,0x1
000118ac(2): JLE 0x000118bc
000118ae(5): CMP qword ptr [R13 + 0x48],0x0
000118b3(2): JNZ 0x00011918
000118b5(5): TEST byte ptr [R13 + 0x20],0x1
000118ba(2): JNZ 0x00011918
000118bc(3): MOV RDI,R13
000118bf(5): CALL 0x00006b40
000118c4(5): MOV RAX,qword ptr [RSP + 0x10]
000118c9(8): LEA R8,[0xb0 + RSP]
000118d1(2): XOR ECX,ECX
000118d3(2): XOR EDX,EDX
000118d5(8): MOV byte ptr [0xb8 + RSP],0x3
000118dd(8): MOV qword ptr [0xb0 + RSP],R12
000118e5(7): LEA RSI,[0x80 + RAX]
000118ec(4): LEA RDI,[RAX + 0x70]
000118f0(5): CALL 0x000080e0
000118f5(3): TEST RAX,RAX
000118f8(5): MOV qword ptr [RSP + 0x28],RAX
000118fd(6): JNZ 0x0001097c
00011903(5): MOV RAX,qword ptr [RSP + 0x40]
00011908(6): MOV dword ptr [RAX],0xc
0001190e(5): JMP 0x00011458
00011918(5): MOV RAX,qword ptr [RSP + 0x10]
0001191d(8): LEA R15,[0xb0 + RSP]
00011925(2): XOR EDX,EDX
00011927(2): XOR ECX,ECX
00011929(3): MOV R8,R15
0001192c(7): OR byte ptr [0xb0 + RAX],0x2
00011933(4): LEA RBX,[RAX + 0x70]
00011937(7): LEA RBP,[0x80 + RAX]
0001193e(8): MOV byte ptr [0xb8 + RSP],0x6
00011946(8): MOV qword ptr [0xb0 + RSP],R13
0001194e(3): MOV RDI,RBX
00011951(3): MOV RSI,RBP
00011954(5): CALL 0x000080e0
00011959(3): MOV RDI,RAX
0001195c(5): MOV qword ptr [RSP + 0x28],RAX
00011961(5): LEA RDX,[R12 + 0x20]
00011966(3): TEST RDI,RDI
00011969(3): MOV RAX,R12
0001196c(2): JZ 0x00011903
0001196e(4): CMP qword ptr [RAX],0x0
00011972(6): JNZ 0x00011c1d
00011978(4): ADD RAX,0x8
0001197c(3): CMP RDX,RAX
0001197f(2): JNZ 0x0001196e
00011981(3): MOV RDI,R12
00011984(5): CALL 0x00001880
00011989(5): JMP 0x0001097c
0001198e(5): MOV RDX,qword ptr [RSP + 0x30]
00011993(5): LEA RDI,[RDX + RDX*0x1 + 0x1]
00011998(8): LEA RSI,[RDI*0x4]
000119a0(5): MOV qword ptr [RSP + 0x30],RDI
000119a5(3): MOV RDI,RAX
000119a8(5): CALL 0x00001b30
000119ad(3): TEST RAX,RAX
000119b0(6): JZ 0x00011903
000119b6(4): MOV qword ptr [R13],RAX
000119ba(4): MOV RDX,qword ptr [R13 + 0x28]
000119be(5): JMP 0x0001149a
000119c3(3): XOR R8D,R8D
000119c6(3): TEST R9,R9
000119c9(2): JZ 0x00011a44
000119cb(2): MOV EDI,EDX
000119cd(5): MOV dword ptr [RSP + 0x78],R8D
000119d2(5): MOV qword ptr [RSP + 0x70],R9
000119d7(5): CALL 0x00001b70
000119dc(2): MOV EDX,EAX
000119de(7): MOV EAX,dword ptr [0xb0 + RSP]
000119e5(5): MOV R9,qword ptr [RSP + 0x70]
000119ea(5): MOV R8D,dword ptr [RSP + 0x78]
000119ef(3): CMP EAX,0x3
000119f2(6): JZ 0x000116f7
000119f8(2): TEST EAX,EAX
000119fa(6): JZ 0x000116f7
00011a00(8): MOV R8D,dword ptr [0xb8 + RSP]
00011a08(5): JMP 0x00011714
00011a0d(4): CMP R10D,0x3
00011a11(6): JZ 0x00011ca2
00011a17(2): TEST ESI,ESI
00011a19(2): JZ 0x000119c3
00011a1b(3): TEST R11B,R11B
00011a1e(2): JNZ 0x000119c3
00011a20(7): MOV EDX,dword ptr [0xa8 + RSP]
00011a27(2): JMP 0x00011a00
00011a29(2): XOR EDX,EDX
00011a2b(3): CMP ESI,0x3
00011a2e(6): JNZ 0x000116c8
00011a34(8): MOV RAX,qword ptr [0xa8 + RSP]
00011a3c(3): MOVZX EDX,byte ptr [RAX]
00011a3f(5): JMP 0x000116c8
00011a44(3): TEST R10D,R10D
00011a47(6): JZ 0x00011727
00011a4d(4): CMP R10D,0x3
00011a51(2): JNZ 0x00011a00
00011a53(5): JMP 0x00011727
00011a58(5): MOV EBX,0x80
00011a5d(6): MOV R12D,0x2
00011a63(5): CALL 0x00001c70
00011a68(3): MOVSXD RDX,EBX
00011a6b(3): MOVSXD R9,R12D
00011a6e(6): MOV R8D,0x1
00011a74(3): ADD RDX,RDX
00011a77(3): ADD RDX,qword ptr [RAX]
00011a7a(5): MOV RAX,qword ptr [RSP + 0x10]
00011a7f(4): LEA RDI,[RAX + R9*0x8]
00011a83(2): XOR EAX,EAX
00011a85(2): JMP 0x00011aa2
00011a90(3): LEA ESI,[RBX + RAX*0x1]
00011a93(3): CMP ESI,0x5f
00011a96(2): JZ 0x00011aaa
00011a98(4): ADD RAX,0x1
00011a9c(4): CMP RAX,0x40
00011aa0(2): JZ 0x00011ab9
00011aa2(4): TEST byte ptr [RDX + RAX*0x2],0x8
00011aa6(2): MOV ECX,EAX
00011aa8(2): JZ 0x00011a90
00011aaa(3): MOV RSI,R8
00011aad(3): SHL RSI,CL
00011ab0(7): OR qword ptr [0xb8 + RDI],RSI
00011ab7(2): JMP 0x00011a98
00011ab9(4): ADD R9,0x1
00011abd(3): ADD EBX,0x40
00011ac0(4): SUB RDX,-0x80
00011ac4(4): ADD RDI,0x8
00011ac8(4): CMP R9D,0x3
00011acc(2): JLE 0x00011a83
00011ace(5): JMP 0x00010f11
00011ad3(2): XOR EBX,EBX
00011ad5(3): XOR R12D,R12D
00011ad8(2): JMP 0x00011a63
00011ada(7): LEA RCX,[0x15510]
00011ae1(7): LEA RSI,[0x14f40]
00011ae8(7): LEA RDI,[0x14f8f]
00011aef(5): MOV EDX,0xced
00011af4(5): CALL 0x00001a00
00011af9(5): MOV RAX,qword ptr [RSP + 0x40]
00011afe(6): MOV dword ptr [RAX],0xb
00011b04(5): JMP 0x00011458
00011b09(8): MOV RDI,qword ptr [0xb8 + RSP]
00011b11(2): XOR EAX,EAX
00011b13(4): OR RCX,-0x1
00011b17(2): SCASB.REPNE RDI
00011b19(3): MOV RAX,RCX
00011b1c(3): NOT RAX
00011b1f(4): SUB RAX,0x1
00011b23(4): CMP RAX,0x1
00011b27(6): JBE 0x000116b8
00011b2d(5): MOV RAX,qword ptr [RSP + 0x40]
00011b32(6): MOV dword ptr [RAX],0x3
00011b38(5): JMP 0x00011458
00011b3d(8): MOV RDI,qword ptr [0xa8 + RSP]
00011b45(2): XOR EAX,EAX
00011b47(4): OR RCX,-0x1
00011b4b(2): SCASB.REPNE RDI
00011b4d(3): MOV RAX,RCX
00011b50(3): NOT RAX
00011b53(4): SUB RAX,0x1
00011b57(4): CMP RAX,0x1
00011b5b(6): JBE 0x000116ae
00011b61(2): JMP 0x00011b2d
00011b63(5): MOV RAX,qword ptr [RSP + 0x48]
00011b68(3): MOV RDI,RCX
00011b6b(8): MOV dword ptr [0x8c + RSP],R8D
00011b73(7): MOV dword ptr [0x88 + RSP],EDX
00011b7a(5): MOV qword ptr [RSP + 0x70],R9
00011b7f(3): ADD RAX,RAX
00011b82(4): ADD RAX,0x1
00011b86(8): LEA R10,[RAX*0x4]
00011b8e(5): MOV qword ptr [RSP + 0x48],RAX
00011b93(3): MOV RSI,R10
00011b96(8): MOV qword ptr [0x80 + RSP],R10
00011b9e(5): CALL 0x00001b30
00011ba3(5): MOV R9,qword ptr [RSP + 0x70]
00011ba8(8): MOV R10,qword ptr [0x80 + RSP]
00011bb0(5): MOV qword ptr [RSP + 0x78],RAX
00011bb5(4): MOV RDI,qword ptr [R9 + 0x10]
00011bb9(3): MOV RSI,R10
00011bbc(5): CALL 0x00001b30
00011bc1(5): MOV RCX,qword ptr [RSP + 0x78]
00011bc6(3): TEST RCX,RCX
00011bc9(2): JZ 0x00011bf5
00011bcb(3): TEST RAX,RAX
00011bce(5): MOV R9,qword ptr [RSP + 0x70]
00011bd3(7): MOV EDX,dword ptr [0x88 + RSP]
00011bda(8): MOV R8D,dword ptr [0x8c + RSP]
00011be2(2): JZ 0x00011bf5
00011be4(4): MOV qword ptr [R9 + 0x10],RAX
00011be8(4): MOV qword ptr [R9 + 0x8],RCX
00011bec(4): MOV RAX,qword ptr [R9 + 0x40]
00011bf0(5): JMP 0x00011753
00011bf5(3): MOV RDI,RCX
00011bf8(4): MOV qword ptr [RSP],RAX
00011bfc(5): CALL 0x00001880
00011c01(4): MOV RAX,qword ptr [RSP]
00011c05(3): MOV RDI,RAX
00011c08(5): CALL 0x00001880
00011c0d(5): MOV RAX,qword ptr [RSP + 0x40]
00011c12(6): MOV dword ptr [RAX],0xc
00011c18(5): JMP 0x00011458
00011c1d(2): XOR ECX,ECX
00011c1f(2): XOR EDX,EDX
00011c21(3): MOV R8,R15
00011c24(3): MOV RSI,RBP
00011c27(3): MOV RDI,RBX
00011c2a(8): MOV byte ptr [0xb8 + RSP],0x3
00011c32(8): MOV qword ptr [0xb0 + RSP],R12
00011c3a(5): CALL 0x000080e0
00011c3f(3): TEST RAX,RAX
00011c42(6): JZ 0x00011903
00011c48(5): MOV RCX,qword ptr [RSP + 0x28]
00011c4d(8): LEA R8,[0xc0 + RSP]
00011c55(3): MOV RDX,RAX
00011c58(3): MOV RSI,RBP
00011c5b(3): MOV RDI,RBX
00011c5e(8): MOV byte ptr [0xc8 + RSP],0xa
00011c66(5): CALL 0x000080e0
00011c6b(3): TEST RAX,RAX
00011c6e(5): MOV qword ptr [RSP + 0x28],RAX
00011c73(6): JNZ 0x0001097c
00011c79(5): JMP 0x00011903
00011c7e(5): CALL 0x00001990
00011c83(5): MOV RAX,qword ptr [RSP + 0x18]
00011c88(4): CMP byte ptr [RAX + 0x8],0x2
00011c8c(6): JNZ 0x00010e80
00011c92(5): MOV RAX,qword ptr [RSP + 0x40]
00011c97(6): MOV dword ptr [RAX],0x9
00011c9d(5): JMP 0x00010e8b
00011ca2(8): MOV RAX,qword ptr [0xb8 + RSP]
00011caa(4): MOVZX R8D,byte ptr [RAX]
00011cae(5): JMP 0x000116da
00011cc0(2): PUSH R15
00011cc2(2): PUSH R14
00011cc4(3): MOV R15,RCX
00011cc7(2): PUSH R13
00011cc9(2): PUSH R12
00011ccb(3): MOV R13,RSI
00011cce(1): PUSH RBP
00011ccf(1): PUSH RBX
00011cd0(3): MOV RBX,R9
00011cd3(3): MOV RBP,RDX
00011cd6(3): MOV R12,R8
00011cd9(4): SUB RSP,0x48
00011cdd(9): MOV RAX,qword ptr FS:[0x28]
00011ce6(5): MOV qword ptr [RSP + 0x38],RAX
00011ceb(2): XOR EAX,EAX
00011ced(3): MOV RAX,qword ptr [RSI]
00011cf0(4): MOV qword ptr [RSP],RDI
00011cf4(5): MOV qword ptr [RSP + 0x10],RAX
00011cf9(5): CALL 0x000107e0
00011cfe(2): MOV EDX,dword ptr [RBX]
00011d00(3): MOV R14,RAX
00011d03(2): TEST EDX,EDX
00011d05(2): JZ 0x00011d10
00011d07(3): TEST RAX,RAX
00011d0a(6): JZ 0x00011e0a
00011d10(5): LEA RAX,[RSP + 0x20]
00011d15(5): MOV qword ptr [RSP + 0x18],RAX
00011d1a(6): NOP word ptr [RAX + RAX*0x1]
00011d20(4): MOVZX EAX,byte ptr [RBP + 0x8]
00011d24(2): MOV EDX,EAX
00011d26(3): AND EDX,0xfffffff7
00011d29(3): CMP DL,0x2
00011d2c(6): JZ 0x00011dc0
00011d32(2): CMP AL,0x9
00011d34(2): JNZ 0x00011d3f
00011d36(3): TEST R12,R12
00011d39(6): JNZ 0x00011dc0
00011d3f(4): MOV RDI,qword ptr [RSP]
00011d43(3): MOV R9,RBX
00011d46(3): MOV R8,R12
00011d49(3): MOV RCX,R15
00011d4c(3): MOV RDX,RBP
00011d4f(3): MOV RSI,R13
00011d52(5): CALL 0x000107e0
00011d57(3): MOV R9,RAX
00011d5a(2): MOV EAX,dword ptr [RBX]
00011d5c(2): TEST EAX,EAX
00011d5e(2): JZ 0x00011d69
00011d60(3): TEST R9,R9
00011d63(6): JZ 0x00011df4
00011d69(3): TEST R14,R14
00011d6c(2): JZ 0x00011de8
00011d6e(3): TEST R9,R9
00011d71(2): JZ 0x00011de8
00011d73(5): MOV RAX,qword ptr [RSP + 0x10]
00011d78(5): MOV R8,qword ptr [RSP + 0x18]
00011d7d(3): MOV RCX,R9
00011d80(3): MOV RDX,R14
00011d83(5): MOV qword ptr [RSP + 0x8],R9
00011d88(5): MOV byte ptr [RSP + 0x28],0x10
00011d8d(7): LEA RSI,[0x80 + RAX]
00011d94(4): LEA RDI,[RAX + 0x70]
00011d98(5): CALL 0x000080e0
00011d9d(3): TEST RAX,RAX
00011da0(5): MOV R9,qword ptr [RSP + 0x8]
00011da5(2): JZ 0x00011e10
00011da7(3): MOV R14,RAX
00011daa(4): MOVZX EAX,byte ptr [RBP + 0x8]
00011dae(2): MOV EDX,EAX
00011db0(3): AND EDX,0xfffffff7
00011db3(3): CMP DL,0x2
00011db6(6): JNZ 0x00011d32
00011dbc(4): NOP dword ptr [RAX]
00011dc0(5): MOV RCX,qword ptr [RSP + 0x38]
00011dc5(9): XOR RCX,qword ptr FS:[0x28]
00011dce(3): MOV RAX,R14
00011dd1(2): JNZ 0x00011e3d
00011dd3(4): ADD RSP,0x48
00011dd7(1): POP RBX
00011dd8(1): POP RBP
00011dd9(2): POP R12
00011ddb(2): POP R13
00011ddd(2): POP R14
00011ddf(2): POP R15
00011de1(1): RET
00011de8(3): TEST R14,R14
00011deb(4): CMOVZ R14,R9
00011def(5): JMP 0x00011d20
00011df4(3): TEST R14,R14
00011df7(2): JZ 0x00011e0a
00011df9(7): LEA RSI,[0x6ba0]
00011e00(2): XOR EDX,EDX
00011e02(3): MOV RDI,R14
00011e05(5): CALL 0x00005d00
00011e0a(3): XOR R14D,R14D
00011e0d(2): JMP 0x00011dc0
00011e10(7): LEA RSI,[0x6ba0]
00011e17(3): MOV RDI,R9
00011e1a(2): XOR EDX,EDX
00011e1c(5): CALL 0x00005d00
00011e21(7): LEA RSI,[0x6ba0]
00011e28(3): MOV RDI,R14
00011e2b(2): XOR EDX,EDX
00011e2d(3): XOR R14D,R14D
00011e30(5): CALL 0x00005d00
00011e35(6): MOV dword ptr [RBX],0xc
00011e3b(2): JMP 0x00011dc0
00011e3d(5): CALL 0x00001990
00011e42(4): NOP dword ptr [RAX]
00011e46(10): NOP word ptr CS:[RAX + RAX*0x1]
00011e50(2): PUSH R15
00011e52(2): PUSH R14
00011e54(3): MOV R14,RCX
00011e57(2): PUSH R13
00011e59(2): PUSH R12
00011e5b(3): MOV R13,R9
00011e5e(1): PUSH RBP
00011e5f(1): PUSH RBX
00011e60(3): MOV RBP,RDX
00011e63(3): MOV R12,RDI
00011e66(4): SUB RSP,0x58
00011e6a(3): MOV RBX,qword ptr [RSI]
00011e6d(9): MOV RAX,qword ptr FS:[0x28]
00011e76(5): MOV qword ptr [RSP + 0x48],RAX
00011e7b(2): XOR EAX,EAX
00011e7d(5): MOV qword ptr [RSP + 0x28],RSI
00011e82(5): MOV qword ptr [RSP + 0x10],R8
00011e87(7): MOV RAX,qword ptr [0xa8 + RBX]
00011e8e(5): MOV qword ptr [RSP + 0x20],RAX
00011e93(5): CALL 0x00011cc0
00011e98(4): MOV EDX,dword ptr [R13]
00011e9c(3): MOV R15,RAX
00011e9f(2): TEST EDX,EDX
00011ea1(2): JZ 0x00011eac
00011ea3(3): TEST RAX,RAX
00011ea6(6): JZ 0x00011f92
00011eac(5): LEA RAX,[RSP + 0x30]
00011eb1(5): MOV qword ptr [RSP + 0x8],RAX
00011eb6(5): JMP 0x00011f44
00011ec0(2): CMP AL,0x9
00011ec2(2): JNZ 0x00011ed0
00011ec4(6): CMP qword ptr [RSP + 0x10],0x0
00011eca(6): JNZ 0x00011f78
00011ed0(7): MOV RAX,qword ptr [0xa8 + RBX]
00011ed7(5): MOV R8,qword ptr [RSP + 0x10]
00011edc(3): MOV RCX,R14
00011edf(5): MOV RSI,qword ptr [RSP + 0x28]
00011ee4(3): MOV R9,R13
00011ee7(3): MOV RDX,RBP
00011eea(3): MOV RDI,R12
00011eed(5): MOV qword ptr [RSP + 0x18],RAX
00011ef2(5): MOV RAX,qword ptr [RSP + 0x20]
00011ef7(7): MOV qword ptr [0xa8 + RBX],RAX
00011efe(5): CALL 0x00011cc0
00011f03(3): MOV RCX,RAX
00011f06(4): MOV EAX,dword ptr [R13]
00011f0a(2): TEST EAX,EAX
00011f0c(2): JZ 0x00011f13
00011f0e(3): TEST RCX,RCX
00011f11(2): JZ 0x00011f7c
00011f13(5): MOV RAX,qword ptr [RSP + 0x18]
00011f18(7): OR qword ptr [0xa8 + RBX],RAX
00011f1f(5): MOV R8,qword ptr [RSP + 0x8]
00011f24(7): LEA RSI,[0x80 + RBX]
00011f2b(4): LEA RDI,[RBX + 0x70]
00011f2f(3): MOV RDX,R15
00011f32(5): MOV byte ptr [RSP + 0x38],0xa
00011f37(5): CALL 0x000080e0
00011f3c(3): TEST RAX,RAX
00011f3f(3): MOV R15,RAX
00011f42(2): JZ 0x00011fc0
00011f44(4): CMP byte ptr [RBP + 0x8],0xa
00011f48(2): JNZ 0x00011f98
00011f4a(3): MOV RDX,R14
00011f4d(3): MOV RSI,R12
00011f50(3): MOV RDI,RBP
00011f53(7): OR RDX,0x800000
00011f5a(5): CALL 0x00010020
00011f5f(2): CDQE
00011f61(5): ADD qword ptr [R12 + 0x48],RAX
00011f66(4): MOVZX EAX,byte ptr [RBP + 0x8]
00011f6a(2): MOV EDX,EAX
00011f6c(3): AND EDX,0xfffffff7
00011f6f(3): CMP DL,0x2
00011f72(6): JNZ 0x00011ec0
00011f78(2): XOR ECX,ECX
00011f7a(2): JMP 0x00011f1f
00011f7c(3): TEST R15,R15
00011f7f(2): JZ 0x00011f92
00011f81(7): LEA RSI,[0x6ba0]
00011f88(2): XOR EDX,EDX
00011f8a(3): MOV RDI,R15
00011f8d(5): CALL 0x00005d00
00011f92(3): XOR R15D,R15D
00011f95(3): NOP dword ptr [RAX]
00011f98(5): MOV RCX,qword ptr [RSP + 0x48]
00011f9d(9): XOR RCX,qword ptr FS:[0x28]
00011fa6(3): MOV RAX,R15
00011fa9(2): JNZ 0x00011fca
00011fab(4): ADD RSP,0x58
00011faf(1): POP RBX
00011fb0(1): POP RBP
00011fb1(2): POP R12
00011fb3(2): POP R13
00011fb5(2): POP R14
00011fb7(2): POP R15
00011fb9(1): RET
00011fc0(8): MOV dword ptr [R13],0xc
00011fc8(2): JMP 0x00011f98
00011fca(5): CALL 0x00001990
00011fcf(1): NOP
00011fd0(2): PUSH R15
00011fd2(2): PUSH R14
00011fd4(2): PUSH R13
00011fd6(2): PUSH R12
00011fd8(1): PUSH RBP
00011fd9(1): PUSH RBX
00011fda(7): SUB RSP,0x128
00011fe1(4): MOV qword ptr [RDI + 0x18],RCX
00011fe5(8): MOV qword ptr [RDI + 0x10],0x0
00011fed(9): MOV RAX,qword ptr FS:[0x28]
00011ff6(8): MOV qword ptr [0x118 + RSP],RAX
00011ffe(2): XOR EAX,EAX
00012000(4): MOVZX EAX,byte ptr [RDI + 0x38]
00012004(5): MOV qword ptr [RSP + 0x8],RDI
00012009(5): MOV qword ptr [RSP + 0x10],RSI
0001200e(4): MOV qword ptr [RSP],RDX
00012012(5): MOV qword ptr [RSP + 0x18],RCX
00012017(8): MOV dword ptr [RSP + 0x4c],0x0
0001201f(8): MOV qword ptr [RDI + 0x30],0x0
00012027(3): MOV RBX,qword ptr [RDI]
0001202a(4): MOV byte ptr [RSP + 0x20],AL
0001202e(3): AND EAX,0xffffff90
00012031(8): CMP qword ptr [RDI + 0x8],0xe7
00012039(3): MOV byte ptr [RDI + 0x38],AL
0001203c(6): JBE 0x00012e36
00012042(4): LEA RDI,[RBX + 0x8]
00012046(5): MOV RAX,qword ptr [RSP + 0x8]
0001204b(3): MOV RCX,RBX
0001204e(4): AND RDI,-0x8
00012052(3): SUB RCX,RDI
00012055(8): MOV qword ptr [RAX + 0x10],0xe8
0001205d(2): XOR EAX,EAX
0001205f(6): ADD ECX,0xe8
00012065(7): MOV qword ptr [RBX],0x0
0001206c(11): MOV qword ptr [0xe0 + RBX],0x0
00012077(3): SHR ECX,0x3
0001207a(3): STOSQ.REP RDI
0001207d(10): MOV RAX,0x555555555555554
00012087(10): MOV dword ptr [0x80 + RBX],0xf
00012091(4): CMP qword ptr [RSP],RAX
00012095(6): JA 0x000126d6
0001209b(4): MOV R14,qword ptr [RSP]
0001209f(4): LEA RAX,[R14 + 0x1]
000120a3(3): MOV RDI,RAX
000120a6(4): MOV qword ptr [RBX + 0x8],RAX
000120aa(5): MOV qword ptr [RSP + 0x28],RAX
000120af(4): SHL RDI,0x4
000120b3(5): CALL 0x00001ac0
000120b8(3): TEST R14,R14
000120bb(3): MOV qword ptr [RBX],RAX
000120be(6): JZ 0x00012da5
000120c4(5): MOV ESI,0x1
000120c9(7): NOP dword ptr [RAX]
000120d0(3): ADD RSI,RSI
000120d3(4): CMP qword ptr [RSP],RSI
000120d7(2): JNC 0x000120d0
000120d9(4): LEA RBP,[RSI + -0x1]
000120dd(5): MOV EDI,0x18
000120e2(5): CALL 0x00001a70
000120e7(7): MOV qword ptr [0x88 + RBX],RBP
000120ee(4): MOV qword ptr [RBX + 0x40],RAX
000120f2(5): CALL 0x00001970
000120f7(5): MOV EDI,0xe
000120fc(6): MOV dword ptr [0xb4 + RBX],EAX
00012102(5): CALL 0x00001af0
00012107(3): MOVZX EDX,byte ptr [RAX]
0001210a(3): AND EDX,0xffffffdf
0001210d(3): CMP DL,0x55
00012110(2): JNZ 0x00012160
00012112(4): MOVZX EDX,byte ptr [RAX + 0x1]
00012116(3): AND EDX,0xffffffdf
00012119(3): CMP DL,0x54
0001211c(2): JNZ 0x00012160
0001211e(4): MOVZX EDX,byte ptr [RAX + 0x2]
00012122(3): AND EDX,0xffffffdf
00012125(3): CMP DL,0x46
00012128(2): JNZ 0x00012160
0001212a(2): XOR EDX,EDX
0001212c(4): CMP byte ptr [RAX + 0x3],0x2d
00012130(7): LEA RDI,[0x14fe6]
00012137(5): MOV ECX,0x2
0001213c(3): SETZ DL
0001213f(5): LEA RSI,[RAX + RDX*0x1 + 0x3]
00012144(2): CMPSB.REPE RDI,RSI
00012146(3): SETA AL
00012149(2): SBB AL,0x0
0001214b(2): TEST AL,AL
0001214d(2): JNZ 0x00012160
0001214f(7): OR byte ptr [0xb0 + RBX],0x4
00012156(10): NOP word ptr CS:[RAX + RAX*0x1]
00012160(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00012167(2): MOV EDX,EAX
00012169(3): AND EDX,0xfffffff7
0001216c(7): CMP dword ptr [0xb4 + RBX],0x1
00012173(6): MOV byte ptr [0xb0 + RBX],DL
00012179(2): JLE 0x0001218e
0001217b(2): TEST AL,0x4
0001217d(6): JZ 0x000126e3
00012183(7): LEA RAX,[0x15540]
0001218a(4): MOV qword ptr [RBX + 0x78],RAX
0001218e(4): CMP qword ptr [RBX],0x0
00012192(6): JZ 0x000126d6
00012198(5): CMP qword ptr [RBX + 0x40],0x0
0001219d(6): JZ 0x000126d6
000121a3(5): MOV RAX,qword ptr [RSP + 0x18]
000121a8(8): LEA RBP,[0x80 + RSP]
000121b0(5): MOV ECX,0x12
000121b5(8): MOV dword ptr [RSP + 0x4c],0x0
000121bd(4): LEA R8,[RBP + 0x8]
000121c1(5): AND EAX,0x400000
000121c6(5): MOV qword ptr [RSP + 0x20],RAX
000121cb(5): MOV RAX,qword ptr [RSP + 0x8]
000121d0(3): SETNZ DL
000121d3(3): MOV RDI,R8
000121d6(4): MOV RSI,qword ptr [RAX + 0x28]
000121da(2): XOR EAX,EAX
000121dc(3): STOSQ.REP RDI
000121df(5): MOV RAX,qword ptr [RSP + 0x10]
000121e4(4): MOV RDI,qword ptr [RSP]
000121e8(3): TEST RSI,RSI
000121eb(7): MOV byte ptr [0x108 + RSP],DL
000121f2(6): MOV ECX,dword ptr [0xb4 + RBX]
000121f8(4): SETNZ R12B
000121fc(8): MOV qword ptr [0xf8 + RSP],RSI
00012204(8): MOV qword ptr [0x80 + RSP],RAX
0001220c(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00012213(3): OR R12D,EDX
00012216(8): MOV qword ptr [0xd8 + RSP],RDI
0001221e(8): MOV qword ptr [0xd0 + RSP],RDI
00012226(3): MOV ESI,R12D
00012229(8): MOV byte ptr [0x10b + RSP],R12B
00012231(7): MOV dword ptr [0x110 + RSP],ECX
00012238(8): MOV qword ptr [0xe8 + RSP],RDI
00012240(8): MOV qword ptr [0xe0 + RSP],RDI
00012248(2): MOV EDX,EAX
0001224a(3): SHR AL,0x3
0001224d(3): SHR DL,0x2
00012250(3): AND EAX,0x1
00012253(3): AND EDX,0x1
00012256(3): TEST RDI,RDI
00012259(7): MOV byte ptr [0x10a + RSP],AL
00012260(7): MOV byte ptr [0x109 + RSP],DL
00012267(6): JNZ 0x000126a5
0001226d(3): TEST SIL,SIL
00012270(2): JZ 0x0001227f
00012272(8): MOV RAX,qword ptr [0x88 + RSP]
0001227a(5): MOV qword ptr [RSP + 0x10],RAX
0001227f(6): CMP qword ptr [RSP + 0x20],0x0
00012285(5): MOV RAX,qword ptr [RSP + 0x10]
0001228a(8): MOV qword ptr [0x88 + RSP],RAX
00012292(6): JZ 0x00012395
00012298(3): CMP ECX,0x1
0001229b(6): JLE 0x00012e8d
000122a1(3): MOV RDI,RBP
000122a4(5): CALL 0x00006340
000122a9(2): TEST EAX,EAX
000122ab(2): JNZ 0x000122f0
000122ad(4): MOV RAX,qword ptr [RSP]
000122b1(8): CMP RAX,qword ptr [0xb8 + RSP]
000122b9(6): JLE 0x00012e70
000122bf(7): MOVSXD RAX,dword ptr [0xb4 + RBX]
000122c6(8): MOV RSI,qword ptr [0xc0 + RSP]
000122ce(8): ADD RAX,qword ptr [0xb0 + RSP]
000122d6(3): CMP RSI,RAX
000122d9(6): JG 0x00012e70
000122df(3): ADD RSI,RSI
000122e2(3): MOV RDI,RBP
000122e5(5): CALL 0x00005dd0
000122ea(2): TEST EAX,EAX
000122ec(2): JZ 0x000122a1
000122ee(2): NOP
000122f0(4): MOV dword ptr [RSP + 0x4c],EAX
000122f4(5): MOV RAX,qword ptr [RSP + 0x8]
000122f9(3): MOV R13,qword ptr [RAX]
000122fc(4): MOV RDI,qword ptr [R13 + 0x70]
00012300(3): TEST RDI,RDI
00012303(2): JZ 0x00012318
00012305(3): NOP dword ptr [RAX]
00012308(3): MOV R12,qword ptr [RDI]
0001230b(5): CALL 0x00001880
00012310(3): TEST R12,R12
00012313(3): MOV RDI,R12
00012316(2): JNZ 0x00012308
00012318(4): MOV RDI,qword ptr [R13 + 0x20]
0001231c(8): MOV qword ptr [R13 + 0x70],0x0
00012324(11): MOV dword ptr [0x80 + R13],0xf
0001232f(8): MOV qword ptr [R13 + 0x68],0x0
00012337(5): CALL 0x00001880
0001233c(8): MOV qword ptr [R13 + 0x20],0x0
00012344(3): MOV RDI,RBP
00012347(5): CALL 0x00007110
0001234c(3): MOV RDI,RBX
0001234f(5): CALL 0x00007150
00012354(5): MOV RAX,qword ptr [RSP + 0x8]
00012359(7): MOV qword ptr [RAX],0x0
00012360(8): MOV qword ptr [RAX + 0x8],0x0
00012368(4): MOV EAX,dword ptr [RSP + 0x4c]
0001236c(8): MOV RBX,qword ptr [0x118 + RSP]
00012374(9): XOR RBX,qword ptr FS:[0x28]
0001237d(6): JNZ 0x000130c0
00012383(7): ADD RSP,0x128
0001238a(1): POP RBX
0001238b(1): POP RBP
0001238c(2): POP R12
0001238e(2): POP R13
00012390(2): POP R14
00012392(2): POP R15
00012394(1): RET
00012395(3): CMP ECX,0x1
00012398(6): JG 0x00012d4a
0001239e(3): TEST R12B,R12B
000123a1(8): MOV RSI,qword ptr [0xc0 + RSP]
000123a9(6): JZ 0x000129c4
000123af(8): CMP qword ptr [0xd8 + RSP],RSI
000123b7(8): MOV RAX,qword ptr [0xb0 + RSP]
000123bf(9): CMOVLE RSI,qword ptr [0xd8 + RSP]
000123c8(3): CMP RSI,RAX
000123cb(2): JG 0x000123dd
000123cd(2): JMP 0x00012410
000123d0(8): MOV RDX,qword ptr [0x88 + RSP]
000123d8(5): MOV qword ptr [RSP + 0x10],RDX
000123dd(8): MOV RDX,qword ptr [0x80 + RSP]
000123e5(8): MOV RCX,qword ptr [0xf8 + RSP]
000123ed(3): ADD RDX,RAX
000123f0(8): ADD RDX,qword ptr [0xa8 + RSP]
000123f8(3): MOVZX EDX,byte ptr [RDX]
000123fb(4): MOVZX EDX,byte ptr [RCX + RDX*0x1]
000123ff(5): MOV RCX,qword ptr [RSP + 0x10]
00012404(3): MOV byte ptr [RCX + RAX*0x1],DL
00012407(4): ADD RAX,0x1
0001240b(3): CMP RSI,RAX
0001240e(2): JNZ 0x000123d0
00012410(8): MOV qword ptr [0xb0 + RSP],RAX
00012418(8): MOV qword ptr [0xb8 + RSP],RAX
00012420(8): MOV dword ptr [RSP + 0x4c],0x0
00012428(5): MOV R12,qword ptr [RSP + 0x8]
0001242d(5): MOV R14,qword ptr [RSP + 0x18]
00012432(5): LEA R13,[RSP + 0x50]
00012437(3): MOV RSI,RBP
0001243a(3): MOV RDI,R13
0001243d(5): MOV qword ptr [RSP + 0x28],R13
00012442(4): MOV R15,qword ptr [R12]
00012446(3): MOV RDX,R14
00012449(9): MOV qword ptr [R12 + 0x30],0x0
00012452(7): OR RDX,0x800000
00012459(7): MOV qword ptr [0xd8 + R15],R14
00012460(5): CALL 0x00010020
00012465(5): LEA R9,[RSP + 0x4c]
0001246a(3): XOR R8D,R8D
0001246d(3): MOV RCX,R14
00012470(3): MOV RDX,R13
00012473(3): MOV RSI,R12
00012476(3): MOV RDI,RBP
00012479(2): CDQE
0001247b(8): ADD qword ptr [0xc8 + RSP],RAX
00012483(5): CALL 0x00011e50
00012488(4): MOV ECX,dword ptr [RSP + 0x4c]
0001248c(2): TEST ECX,ECX
0001248e(6): JNZ 0x00012eb7
00012494(4): LEA R13,[R15 + 0x70]
00012498(5): LEA R12,[RSP + 0x60]
0001249d(4): SUB R15,-0x80
000124a1(2): XOR EDX,EDX
000124a3(2): XOR ECX,ECX
000124a5(3): MOV RSI,R15
000124a8(3): MOV R8,R12
000124ab(3): MOV RDI,R13
000124ae(4): MOV qword ptr [RSP],RAX
000124b2(5): MOV byte ptr [RSP + 0x68],0x2
000124b7(5): CALL 0x000080e0
000124bc(4): MOV R9,qword ptr [RSP]
000124c0(3): MOV R11,RAX
000124c3(3): MOV RDX,RAX
000124c6(3): TEST R9,R9
000124c9(2): JZ 0x000124f2
000124cb(3): MOV RCX,R11
000124ce(3): MOV RDX,R9
000124d1(3): MOV R8,R12
000124d4(3): MOV RSI,R15
000124d7(3): MOV RDI,R13
000124da(4): MOV qword ptr [RSP],R11
000124de(5): MOV byte ptr [RSP + 0x68],0x10
000124e3(5): CALL 0x000080e0
000124e8(4): MOV R11,qword ptr [RSP]
000124ec(3): MOV RDX,R11
000124ef(3): MOV R11,RAX
000124f2(3): TEST RDX,RDX
000124f5(5): MOV RCX,qword ptr [RSP + 0x8]
000124fa(3): SETZ DL
000124fd(3): TEST R11,R11
00012500(3): SETZ AL
00012503(2): OR DL,AL
00012505(3): MOV R13,qword ptr [RCX]
00012508(6): JNZ 0x00012ea2
0001250e(4): MOV R15,qword ptr [R13 + 0x8]
00012512(4): MOV qword ptr [RBX + 0x68],R11
00012516(8): LEA RCX,[R15*0x8]
0001251e(4): LEA R15,[R15 + R15*0x2]
00012522(3): MOV RDI,RCX
00012525(4): MOV qword ptr [RSP],RCX
00012529(4): SHL R15,0x3
0001252d(5): CALL 0x00001ac0
00012532(4): MOV RCX,qword ptr [RSP]
00012536(4): MOV qword ptr [R13 + 0x18],RAX
0001253a(5): MOV qword ptr [RSP + 0x18],RAX
0001253f(3): MOV RDI,RCX
00012542(5): CALL 0x00001ac0
00012547(3): MOV RDI,R15
0001254a(4): MOV qword ptr [R13 + 0x20],RAX
0001254e(5): MOV qword ptr [RSP + 0x10],RAX
00012553(5): CALL 0x00001ac0
00012558(3): MOV RDI,R15
0001255b(4): MOV qword ptr [R13 + 0x28],RAX
0001255f(4): MOV qword ptr [RSP],RAX
00012563(5): CALL 0x00001ac0
00012568(5): MOV RDX,qword ptr [RSP + 0x18]
0001256d(4): MOV qword ptr [R13 + 0x30],RAX
00012571(4): MOV RSI,qword ptr [RSP]
00012575(5): MOV RCX,qword ptr [RSP + 0x10]
0001257a(3): TEST RDX,RDX
0001257d(6): JZ 0x00012d3d
00012583(3): TEST RCX,RCX
00012586(6): JZ 0x00012d3d
0001258c(3): TEST RSI,RSI
0001258f(6): JZ 0x00012d3d
00012595(3): TEST RAX,RAX
00012598(6): JZ 0x00012d3d
0001259e(5): MOV RAX,qword ptr [RSP + 0x8]
000125a3(4): MOV R15,qword ptr [RAX + 0x30]
000125a7(8): LEA RDI,[R15*0x8]
000125af(5): CALL 0x00001ac0
000125b4(3): TEST RAX,RAX
000125b7(7): MOV qword ptr [0xe0 + R13],RAX
000125be(2): JZ 0x0001262d
000125c0(3): TEST R15,R15
000125c3(2): JZ 0x000125dd
000125c5(2): XOR EDX,EDX
000125c7(9): NOP word ptr [RAX + RAX*0x1]
000125d0(4): MOV qword ptr [RAX + RDX*0x8],RDX
000125d4(4): ADD RDX,0x1
000125d8(3): CMP RDX,R15
000125db(2): JNZ 0x000125d0
000125dd(4): MOV RDI,qword ptr [R13 + 0x68]
000125e1(7): LEA RSI,[0x75e0]
000125e8(3): MOV RDX,R13
000125eb(5): CALL 0x00005d70
000125f0(5): MOV RAX,qword ptr [RSP + 0x8]
000125f5(7): MOV RDI,qword ptr [0xe0 + R13]
000125fc(4): MOV RDX,qword ptr [RAX + 0x30]
00012600(3): TEST RDX,RDX
00012603(6): JZ 0x00012ef4
00012609(3): MOV RAX,qword ptr [RDI]
0001260c(3): TEST RAX,RAX
0001260f(2): JZ 0x0001261e
00012611(2): JMP 0x0001262d
00012618(4): CMP qword ptr [RDI + RAX*0x8],RAX
0001261c(2): JNZ 0x0001262d
0001261e(4): ADD RAX,0x1
00012622(3): CMP RDX,RAX
00012625(2): JA 0x00012618
00012627(6): JZ 0x00012ef4
0001262d(4): MOV RDI,qword ptr [R13 + 0x68]
00012631(5): MOV RDX,qword ptr [RSP + 0x8]
00012636(7): LEA RSI,[0x84e0]
0001263d(5): CALL 0x00005d00
00012642(2): TEST EAX,EAX
00012644(6): JNZ 0x000122f0
0001264a(4): MOV RDI,qword ptr [R13 + 0x68]
0001264e(7): LEA RSI,[0xaa50]
00012655(3): MOV RDX,R13
00012658(5): CALL 0x00005d00
0001265d(2): TEST EAX,EAX
0001265f(6): JNZ 0x000122f0
00012665(4): MOV RDI,qword ptr [R13 + 0x68]
00012669(7): LEA RSI,[0x7670]
00012670(3): MOV RDX,R13
00012673(5): CALL 0x00005d70
00012678(4): MOV RDX,qword ptr [R13 + 0x68]
0001267c(7): LEA RSI,[0x15448]
00012683(5): NOP dword ptr [RAX + RAX*0x1]
00012688(4): MOVZX ECX,byte ptr [RDX + 0x30]
0001268c(4): MOV RDI,qword ptr [RDX + 0x38]
00012690(3): CMP CL,0x10
00012693(6): JA 0x00012768
00012699(3): MOVZX EAX,CL
0001269c(4): MOVSXD RAX,dword ptr [RSI + RAX*0x4]
000126a0(3): ADD RAX,RSI
000126a3(2): JMP RAX
000126a5(5): MOV RSI,qword ptr [RSP + 0x28]
000126aa(3): MOV RDI,RBP
000126ad(5): CALL 0x00005dd0
000126b2(2): TEST EAX,EAX
000126b4(6): JNZ 0x000122f0
000126ba(8): MOVZX ESI,byte ptr [0x10b + RSP]
000126c2(6): MOV ECX,dword ptr [0xb4 + RBX]
000126c8(3): TEST SIL,SIL
000126cb(6): JZ 0x0001227f
000126d1(5): JMP 0x00012272
000126d6(8): MOV dword ptr [RSP + 0x4c],0xc
000126de(5): JMP 0x0001234c
000126e3(5): MOV ESI,0x1
000126e8(5): MOV EDI,0x20
000126ed(5): CALL 0x00001a70
000126f2(3): TEST RAX,RAX
000126f5(4): MOV qword ptr [RBX + 0x78],RAX
000126f9(2): JZ 0x000126d6
000126fb(3): XOR R12D,R12D
000126fe(2): XOR EBP,EBP
00012700(6): MOV R13D,0x1
00012706(3): XOR R15D,R15D
00012709(7): NOP dword ptr [RAX]
00012710(5): LEA R14D,[RBP + R15*0x1]
00012715(3): MOV EDI,R14D
00012718(5): CALL 0x00001b70
0001271d(3): CMP EAX,-0x1
00012720(2): JZ 0x00012735
00012722(4): MOV RSI,qword ptr [RBX + 0x78]
00012726(3): MOV RDI,R13
00012729(3): MOV ECX,R15D
0001272c(3): SHL RDI,CL
0001272f(3): ADD RSI,R12
00012732(3): OR qword ptr [RSI],RDI
00012735(7): TEST R14D,0xffffff80
0001273c(2): JNZ 0x0001274a
0001273e(3): CMP EAX,R14D
00012741(2): JZ 0x0001274a
00012743(7): OR byte ptr [0xb0 + RBX],0x8
0001274a(4): ADD R15,0x1
0001274e(4): CMP R15,0x40
00012752(2): JNZ 0x00012710
00012754(3): ADD EBP,0x40
00012757(4): ADD R12,0x8
0001275b(6): CMP EBP,0x100
00012761(2): JNZ 0x00012706
00012763(5): JMP 0x0001218e
00012768(3): AND ECX,0x8
0001276b(6): JNZ 0x00013082
00012771(4): MOV RAX,qword ptr [RDX + 0x20]
00012775(4): MOV RCX,qword ptr [RAX + 0x38]
00012779(4): MOV RAX,qword ptr [R13 + 0x18]
0001277d(4): MOV qword ptr [RAX + RDI*0x8],RCX
00012781(4): MOV R15,qword ptr [RDX + 0x8]
00012785(2): XOR EDI,EDI
00012787(3): TEST R15,R15
0001278a(2): JZ 0x0001279b
0001278c(3): MOV RDX,R15
0001278f(5): JMP 0x00012688
00012798(3): MOV RDX,RAX
0001279b(4): MOV R15,qword ptr [RDX + 0x10]
0001279f(3): TEST R15,R15
000127a2(3): SETZ CL
000127a5(3): CMP R15,RDI
000127a8(3): SETZ AL
000127ab(2): OR CL,AL
000127ad(4): MOV byte ptr [RSP + 0x10],CL
000127b1(2): JZ 0x0001278c
000127b3(3): MOV RAX,qword ptr [RDX]
000127b6(3): MOV RDI,RDX
000127b9(3): TEST RAX,RAX
000127bc(2): JNZ 0x00012798
000127be(3): XOR R14D,R14D
000127c1(3): XOR R15D,R15D
000127c4(4): NOP dword ptr [RAX]
000127c8(4): MOV RDX,qword ptr [R13 + 0x10]
000127cc(3): CMP RDX,R15
000127cf(2): JZ 0x000127f6
000127d1(4): LEA R10,[R15 + R15*0x2]
000127d5(4): MOV RAX,qword ptr [R13 + 0x30]
000127d9(4): SHL R10,0x3
000127dd(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
000127e3(6): JZ 0x000129e8
000127e9(4): MOV RDX,qword ptr [R13 + 0x10]
000127ed(4): ADD R15,0x1
000127f1(3): CMP RDX,R15
000127f4(2): JNZ 0x000127d1
000127f6(3): TEST R14B,R14B
000127f9(6): JZ 0x00012a3e
000127ff(3): XOR R14D,R14D
00012802(3): XOR R15D,R15D
00012805(2): JMP 0x000127d1
00012807(8): OR byte ptr [0xb0 + R13],0x1
0001280f(4): MOV R15,qword ptr [RDX + 0x8]
00012813(3): TEST R15,R15
00012816(6): JZ 0x00012e29
0001281c(4): MOV RAX,qword ptr [R15 + 0x18]
00012820(4): MOV RCX,qword ptr [RAX + 0x38]
00012824(4): MOV RAX,qword ptr [RDX + 0x10]
00012828(3): TEST RAX,RAX
0001282b(6): JZ 0x00012e1c
00012831(4): MOV RAX,qword ptr [RAX + 0x18]
00012835(4): MOV R9,qword ptr [RAX + 0x38]
00012839(3): TEST RCX,RCX
0001283c(6): JS 0x000130a1
00012842(3): TEST R9,R9
00012845(6): JS 0x00013063
0001284b(4): MOV RAX,qword ptr [R13 + 0x28]
0001284f(4): LEA RDI,[RDI + RDI*0x2]
00012853(5): MOV qword ptr [RSP + 0x38],RSI
00012858(5): MOV qword ptr [RSP + 0x30],R9
0001285d(5): MOV qword ptr [RSP + 0x18],RCX
00012862(5): MOV qword ptr [RSP + 0x10],RDX
00012867(4): LEA R10,[RAX + RDI*0x8]
0001286b(5): MOV EDI,0x10
00012870(7): MOV qword ptr [R10],0x2
00012877(4): MOV qword ptr [RSP],R10
0001287b(5): CALL 0x00001ac0
00012880(4): MOV R10,qword ptr [RSP]
00012884(3): TEST RAX,RAX
00012887(5): MOV RDX,qword ptr [RSP + 0x10]
0001288c(5): MOV RCX,qword ptr [RSP + 0x18]
00012891(5): MOV R9,qword ptr [RSP + 0x30]
00012896(5): MOV RSI,qword ptr [RSP + 0x38]
0001289b(4): MOV qword ptr [R10 + 0x10],RAX
0001289f(6): JZ 0x00012b3a
000128a5(3): CMP RCX,R9
000128a8(6): JZ 0x00012e7d
000128ae(8): MOV qword ptr [R10 + 0x8],0x2
000128b6(6): JL 0x00012e64
000128bc(3): MOV qword ptr [RAX],R9
000128bf(4): MOV qword ptr [RAX + 0x8],RCX
000128c3(5): JMP 0x00012785
000128c8(4): MOV RAX,qword ptr [RDX + 0x20]
000128cc(4): LEA RCX,[RDI + RDI*0x2]
000128d0(5): MOV EDI,0x8
000128d5(5): MOV qword ptr [RSP + 0x10],RSI
000128da(4): MOV qword ptr [RSP],RDX
000128de(4): MOV R14,qword ptr [RAX + 0x38]
000128e2(4): MOV RAX,qword ptr [R13 + 0x28]
000128e6(4): LEA R15,[RAX + RCX*0x8]
000128ea(7): MOV qword ptr [R15],0x1
000128f1(8): MOV qword ptr [R15 + 0x8],0x1
000128f9(5): CALL 0x00001ac0
000128fe(3): TEST RAX,RAX
00012901(4): MOV qword ptr [R15 + 0x10],RAX
00012905(4): MOV RDX,qword ptr [RSP]
00012909(5): MOV RSI,qword ptr [RSP + 0x10]
0001290e(6): JZ 0x00012fb8
00012914(3): MOV qword ptr [RAX],R14
00012917(4): MOV R15,qword ptr [RDX + 0x8]
0001291b(5): JMP 0x00012785
00012920(5): CMP qword ptr [RDX + 0x20],0x0
00012925(6): JZ 0x00012781
0001292b(7): LEA RCX,[0x15500]
00012932(7): LEA RSI,[0x14f40]
00012939(7): LEA RDI,[0x14fe8]
00012940(5): MOV EDX,0x59f
00012945(5): CALL 0x00001a00
00012950(4): MOV RAX,qword ptr [RDX + 0x20]
00012954(4): MOV R15,qword ptr [RAX + 0x38]
00012958(4): MOV RAX,qword ptr [R13 + 0x18]
0001295c(4): MOV qword ptr [RAX + RDI*0x8],R15
00012960(4): CMP byte ptr [RDX + 0x30],0x4
00012964(6): JNZ 0x00012781
0001296a(4): MOV RAX,qword ptr [R13 + 0x28]
0001296e(4): LEA RCX,[RDI + RDI*0x2]
00012972(5): MOV EDI,0x8
00012977(5): MOV qword ptr [RSP + 0x18],RSI
0001297c(5): MOV qword ptr [RSP + 0x10],RDX
00012981(4): LEA RCX,[RAX + RCX*0x8]
00012985(7): MOV qword ptr [RCX],0x1
0001298c(8): MOV qword ptr [RCX + 0x8],0x1
00012994(4): MOV qword ptr [RSP],RCX
00012998(5): CALL 0x00001ac0
0001299d(4): MOV RCX,qword ptr [RSP]
000129a1(3): TEST RAX,RAX
000129a4(5): MOV RDX,qword ptr [RSP + 0x10]
000129a9(5): MOV RSI,qword ptr [RSP + 0x18]
000129ae(4): MOV qword ptr [RCX + 0x10],RAX
000129b2(6): JZ 0x00013000
000129b8(3): MOV qword ptr [RAX],R15
000129bb(4): MOV R15,qword ptr [RDX + 0x8]
000129bf(5): JMP 0x00012785
000129c4(8): MOV qword ptr [0xb0 + RSP],RSI
000129cc(8): MOV qword ptr [0xb8 + RSP],RSI
000129d4(8): MOV dword ptr [RSP + 0x4c],0x0
000129dc(5): JMP 0x00012428
000129e8(5): MOV ECX,0x1
000129ed(3): MOV RDX,R15
000129f0(3): MOV RSI,R13
000129f3(3): MOV RDI,R12
000129f6(4): MOV qword ptr [RSP],R10
000129fa(5): CALL 0x00007b20
000129ff(2): TEST EAX,EAX
00012a01(6): JNZ 0x000122f0
00012a07(4): MOV RAX,qword ptr [R13 + 0x30]
00012a0b(4): MOV R10,qword ptr [RSP]
00012a0f(4): ADD R15,0x1
00012a13(6): CMP qword ptr [RAX + R10*0x1 + 0x8],0x0
00012a19(6): JNZ 0x000127c8
00012a1f(5): MOV RDI,qword ptr [RSP + 0x70]
00012a24(5): CALL 0x00001880
00012a29(4): CMP qword ptr [R13 + 0x10],R15
00012a2d(6): JZ 0x000127ff
00012a33(6): MOVZX R14D,byte ptr [RSP + 0x10]
00012a39(5): JMP 0x000127d1
00012a3e(5): MOV RAX,qword ptr [RSP + 0x8]
00012a43(4): TEST byte ptr [RAX + 0x38],0x10
00012a47(2): JNZ 0x00012a5a
00012a49(5): CMP qword ptr [RAX + 0x30],0x0
00012a4e(2): JZ 0x00012a5a
00012a50(8): TEST byte ptr [0xb0 + R13],0x1
00012a58(2): JNZ 0x00012a68
00012a5a(8): CMP qword ptr [0x98 + R13],0x0
00012a62(6): JZ 0x00012b5b
00012a68(4): LEA RDI,[RDX + RDX*0x2]
00012a6c(4): MOV qword ptr [RSP],RDX
00012a70(4): SHL RDI,0x3
00012a74(5): CALL 0x00001ac0
00012a79(3): TEST RAX,RAX
00012a7c(4): MOV qword ptr [R13 + 0x38],RAX
00012a80(6): JZ 0x00012fcc
00012a86(4): MOV RDX,qword ptr [RSP]
00012a8a(2): XOR ESI,ESI
00012a8c(2): XOR ECX,ECX
00012a8e(3): TEST RDX,RDX
00012a91(2): JNZ 0x00012aa4
00012a93(5): JMP 0x00012b5b
00012aa0(4): MOV RAX,qword ptr [R13 + 0x38]
00012aa4(4): PXOR XMM0,XMM0
00012aa8(3): ADD RAX,RSI
00012aab(4): ADD RCX,0x1
00012aaf(8): MOV qword ptr [RAX + 0x10],0x0
00012ab7(4): ADD RSI,0x18
00012abb(3): MOVUPS xmmword ptr [RAX],XMM0
00012abe(4): MOV RAX,qword ptr [R13 + 0x10]
00012ac2(3): CMP RCX,RAX
00012ac5(2): JC 0x00012aa0
00012ac7(3): TEST RAX,RAX
00012aca(6): JZ 0x00012b5b
00012ad0(4): MOV RAX,qword ptr [R13 + 0x30]
00012ad4(9): MOV qword ptr [RSP + 0x18],0x0
00012add(9): MOV qword ptr [RSP + 0x10],0x0
00012ae6(5): MOV RCX,qword ptr [RSP + 0x18]
00012aeb(4): LEA RDX,[RAX + RCX*0x1]
00012aef(5): CMP qword ptr [RDX + 0x8],0x0
00012af4(4): MOV RCX,qword ptr [RDX + 0x10]
00012af8(2): JLE 0x00012b44
00012afa(3): XOR R15D,R15D
00012afd(2): JMP 0x00012b18
00012b00(4): MOV RAX,qword ptr [R13 + 0x30]
00012b04(5): MOV RDX,qword ptr [RSP + 0x18]
00012b09(4): ADD R15,0x1
00012b0d(4): MOV RCX,qword ptr [RSP]
00012b11(5): CMP R15,qword ptr [RAX + RDX*0x1 + 0x8]
00012b16(2): JGE 0x00012b44
00012b18(4): MOV RAX,qword ptr [RCX + R15*0x8]
00012b1c(4): MOV qword ptr [RSP],RCX
00012b20(4): LEA RSI,[RAX + RAX*0x2]
00012b24(4): MOV RAX,qword ptr [R13 + 0x38]
00012b28(4): LEA RDI,[RAX + RSI*0x8]
00012b2c(5): MOV RSI,qword ptr [RSP + 0x10]
00012b31(5): CALL 0x00005e70
00012b36(2): TEST AL,AL
00012b38(2): JNZ 0x00012b00
00012b3a(5): MOV EAX,0xc
00012b3f(5): JMP 0x000122f0
00012b44(6): ADD qword ptr [RSP + 0x10],0x1
00012b4a(6): ADD qword ptr [RSP + 0x18],0x18
00012b50(5): MOV RDX,qword ptr [RSP + 0x10]
00012b55(4): CMP RDX,qword ptr [R13 + 0x10]
00012b59(2): JC 0x00012ae6
00012b5b(7): MOVZX EAX,byte ptr [0xb0 + RBX]
00012b62(8): MOV dword ptr [RSP + 0x4c],0x0
00012b6a(3): SHR AL,0x2
00012b6d(6): CMP qword ptr [RSP + 0x20],0x0
00012b73(3): SETZ DL
00012b76(2): AND AL,DL
00012b78(6): JNZ 0x00012d5f
00012b7e(4): MOV RAX,qword ptr [RBX + 0x68]
00012b82(3): MOV RDI,R12
00012b85(4): MOV RAX,qword ptr [RAX + 0x18]
00012b89(4): MOV RAX,qword ptr [RAX + 0x38]
00012b8d(4): LEA RDX,[RAX + RAX*0x2]
00012b91(7): MOV qword ptr [0x90 + RBX],RAX
00012b98(4): MOV RAX,qword ptr [RBX + 0x30]
00012b9c(4): LEA RSI,[RAX + RDX*0x8]
00012ba0(5): CALL 0x00008580
00012ba5(2): TEST EAX,EAX
00012ba7(3): MOV R15D,EAX
00012baa(4): MOV dword ptr [RSP + 0x50],EAX
00012bae(6): JNZ 0x00012ccf
00012bb4(8): CMP qword ptr [0x98 + RBX],0x0
00012bbc(6): JLE 0x00012c90
00012bc2(5): MOV R9,qword ptr [RSP + 0x68]
00012bc7(3): TEST R9,R9
00012bca(6): JLE 0x00012c90
00012bd0(3): XOR R10D,R10D
00012bd3(5): LEA R13,[R12 + 0x10]
00012bd8(2): JMP 0x00012bed
00012be0(4): ADD R10,0x1
00012be4(3): CMP R9,R10
00012be7(6): JLE 0x00012c90
00012bed(5): MOV RCX,qword ptr [RSP + 0x70]
00012bf2(3): MOV RSI,qword ptr [RBX]
00012bf5(4): MOV R8,qword ptr [RCX + R10*0x8]
00012bf9(3): MOV RDI,R8
00012bfc(4): SHL RDI,0x4
00012c00(3): ADD RDI,RSI
00012c03(4): CMP byte ptr [RDI + 0x8],0x4
00012c07(2): JNZ 0x00012be0
00012c09(2): XOR EDX,EDX
00012c0b(2): JMP 0x00012c19
00012c10(4): ADD RDX,0x1
00012c14(3): CMP R9,RDX
00012c17(2): JZ 0x00012be0
00012c19(4): MOV RAX,qword ptr [RCX + RDX*0x8]
00012c1d(4): SHL RAX,0x4
00012c21(3): ADD RAX,RSI
00012c24(4): CMP byte ptr [RAX + 0x8],0x9
00012c28(2): JNZ 0x00012c10
00012c2a(3): MOV R11,qword ptr [RDI]
00012c2d(3): CMP qword ptr [RAX],R11
00012c30(2): JNZ 0x00012c10
00012c32(4): MOV RDX,qword ptr [RBX + 0x28]
00012c36(4): LEA RAX,[R8 + R8*0x2]
00012c3a(3): MOV RSI,R13
00012c3d(3): MOV RDI,R9
00012c40(4): LEA RAX,[RDX + RAX*0x8]
00012c44(4): MOV RAX,qword ptr [RAX + 0x10]
00012c48(3): MOV R11,qword ptr [RAX]
00012c4b(3): MOV RDX,R11
00012c4e(5): CALL 0x00007420
00012c53(3): TEST RAX,RAX
00012c56(2): JNZ 0x00012be0
00012c58(4): MOV RAX,qword ptr [RBX + 0x30]
00012c5c(4): LEA RDX,[R11 + R11*0x2]
00012c60(3): MOV RDI,R12
00012c63(4): LEA RSI,[RAX + RDX*0x8]
00012c67(5): CALL 0x00007940
00012c6c(2): TEST EAX,EAX
00012c6e(6): JNZ 0x00012fb0
00012c74(5): MOV R9,qword ptr [RSP + 0x68]
00012c79(6): MOV R10D,0x1
00012c7f(3): CMP R9,R10
00012c82(6): JG 0x00012bed
00012c88(8): NOP dword ptr [RAX + RAX*0x1]
00012c90(5): MOV RDI,qword ptr [RSP + 0x28]
00012c95(2): XOR ECX,ECX
00012c97(3): MOV RDX,R12
00012c9a(3): MOV RSI,RBX
00012c9d(5): CALL 0x00008770
00012ca2(3): TEST RAX,RAX
00012ca5(4): MOV qword ptr [RBX + 0x48],RAX
00012ca9(6): JZ 0x00012e12
00012caf(4): CMP byte ptr [RAX + 0x68],0x0
00012cb3(6): JS 0x00012db1
00012cb9(4): MOV qword ptr [RBX + 0x60],RAX
00012cbd(4): MOV qword ptr [RBX + 0x58],RAX
00012cc1(4): MOV qword ptr [RBX + 0x50],RAX
00012cc5(5): MOV RDI,qword ptr [RSP + 0x70]
00012cca(5): CALL 0x00001880
00012ccf(5): MOV RAX,qword ptr [RSP + 0x8]
00012cd4(5): MOV dword ptr [RSP + 0x4c],R15D
00012cd9(3): MOV R13,qword ptr [RAX]
00012cdc(4): MOV RDI,qword ptr [R13 + 0x70]
00012ce0(3): TEST RDI,RDI
00012ce3(2): JZ 0x00012cf8
00012ce5(3): NOP dword ptr [RAX]
00012ce8(3): MOV R12,qword ptr [RDI]
00012ceb(5): CALL 0x00001880
00012cf0(3): TEST R12,R12
00012cf3(3): MOV RDI,R12
00012cf6(2): JNZ 0x00012ce8
00012cf8(4): MOV RDI,qword ptr [R13 + 0x20]
00012cfc(8): MOV qword ptr [R13 + 0x70],0x0
00012d04(11): MOV dword ptr [0x80 + R13],0xf
00012d0f(8): MOV qword ptr [R13 + 0x68],0x0
00012d17(5): CALL 0x00001880
00012d1c(8): MOV qword ptr [R13 + 0x20],0x0
00012d24(3): MOV RDI,RBP
00012d27(5): CALL 0x00007110
00012d2c(4): MOV EAX,dword ptr [RSP + 0x4c]
00012d30(2): TEST EAX,EAX
00012d32(6): JZ 0x0001236c
00012d38(5): JMP 0x0001234c
00012d3d(8): MOV dword ptr [RSP + 0x4c],0xc
00012d45(5): JMP 0x000122fc
00012d4a(3): MOV RDI,RBP
00012d4d(5): CALL 0x00006170
00012d52(8): MOV dword ptr [RSP + 0x4c],0x0
00012d5a(5): JMP 0x00012428
00012d5f(5): MOV RCX,qword ptr [RSP + 0x8]
00012d64(5): CMP qword ptr [RCX + 0x28],0x0
00012d69(6): JNZ 0x00012b7e
00012d6f(4): MOV R10,qword ptr [RBX + 0x10]
00012d73(3): TEST R10,R10
00012d76(6): JZ 0x0001302a
00012d7c(3): MOV RSI,qword ptr [RBX]
00012d7f(7): LEA R9,[0x1548c]
00012d86(3): XOR R8D,R8D
00012d89(2): XOR EDX,EDX
00012d8b(3): MOV RCX,RSI
00012d8e(4): CMP byte ptr [RCX + 0x8],0xc
00012d92(6): JA 0x0001305e
00012d98(4): MOVZX EDI,byte ptr [RCX + 0x8]
00012d9c(4): MOVSXD RDI,dword ptr [R9 + RDI*0x4]
00012da0(3): ADD RDI,R9
00012da3(2): JMP RDI
00012da5(2): XOR EBP,EBP
00012da7(5): MOV ESI,0x1
00012dac(5): JMP 0x000120dd
00012db1(5): MOV R14,qword ptr [RSP + 0x28]
00012db6(5): MOV ECX,0x1
00012dbb(3): MOV RDX,R12
00012dbe(3): MOV RSI,RBX
00012dc1(3): MOV RDI,R14
00012dc4(5): CALL 0x00008770
00012dc9(5): MOV ECX,0x2
00012dce(3): MOV RDX,R12
00012dd1(3): MOV RSI,RBX
00012dd4(3): MOV RDI,R14
00012dd7(4): MOV qword ptr [RBX + 0x50],RAX
00012ddb(5): CALL 0x00008770
00012de0(5): MOV ECX,0x6
00012de5(4): MOV qword ptr [RBX + 0x58],RAX
00012de9(3): MOV RDX,R12
00012dec(3): MOV RSI,RBX
00012def(3): MOV RDI,R14
00012df2(5): CALL 0x00008770
00012df7(5): CMP qword ptr [RBX + 0x50],0x0
00012dfc(4): MOV qword ptr [RBX + 0x60],RAX
00012e00(2): JZ 0x00012e12
00012e02(5): CMP qword ptr [RBX + 0x58],0x0
00012e07(2): JZ 0x00012e12
00012e09(3): TEST RAX,RAX
00012e0c(6): JNZ 0x00012cc5
00012e12(5): MOV R15D,dword ptr [RSP + 0x50]
00012e17(5): JMP 0x00012ccf
00012e1c(4): MOV RAX,qword ptr [RDX + 0x20]
00012e20(4): MOV R9,qword ptr [RAX + 0x38]
00012e24(5): JMP 0x00012839
00012e29(4): MOV RAX,qword ptr [RDX + 0x20]
00012e2d(4): MOV RCX,qword ptr [RAX + 0x38]
00012e31(5): JMP 0x00012824
00012e36(3): MOV RDI,RBX
00012e39(5): MOV ESI,0xe8
00012e3e(5): CALL 0x00001b30
00012e43(3): TEST RAX,RAX
00012e46(3): MOV RBX,RAX
00012e49(6): JZ 0x00012fe1
00012e4f(5): MOV RAX,qword ptr [RSP + 0x8]
00012e54(8): MOV qword ptr [RAX + 0x8],0xe8
00012e5c(3): MOV qword ptr [RAX],RBX
00012e5f(5): JMP 0x00012042
00012e64(3): MOV qword ptr [RAX],RCX
00012e67(4): MOV qword ptr [RAX + 0x8],R9
00012e6b(5): JMP 0x00012785
00012e70(8): MOV dword ptr [RSP + 0x4c],0x0
00012e78(5): JMP 0x00012428
00012e7d(8): MOV qword ptr [R10 + 0x8],0x1
00012e85(3): MOV qword ptr [RAX],RCX
00012e88(5): JMP 0x00012785
00012e8d(3): MOV RDI,RBP
00012e90(5): CALL 0x00006100
00012e95(8): MOV dword ptr [RSP + 0x4c],0x0
00012e9d(5): JMP 0x00012428
00012ea2(8): MOV dword ptr [RSP + 0x4c],0xc
00012eaa(8): MOV qword ptr [RBX + 0x68],0x0
00012eb2(5): JMP 0x000122fc
00012eb7(3): TEST RAX,RAX
00012eba(6): JZ 0x00012feb
00012ec0(4): LEA R13,[R15 + 0x70]
00012ec4(5): LEA R12,[RSP + 0x60]
00012ec9(4): SUB R15,-0x80
00012ecd(2): XOR ECX,ECX
00012ecf(2): XOR EDX,EDX
00012ed1(3): MOV RSI,R15
00012ed4(3): MOV R8,R12
00012ed7(3): MOV RDI,R13
00012eda(4): MOV qword ptr [RSP],RAX
00012ede(5): MOV byte ptr [RSP + 0x68],0x2
00012ee3(5): CALL 0x000080e0
00012ee8(4): MOV R9,qword ptr [RSP]
00012eec(3): MOV R11,RAX
00012eef(5): JMP 0x000124cb
00012ef4(5): CALL 0x00001880
00012ef9(11): MOV qword ptr [0xe0 + R13],0x0
00012f04(5): JMP 0x0001262d
00012f09(3): MOV R8D,EAX
00012f0c(4): ADD RDX,0x1
00012f10(4): ADD RCX,0x10
00012f14(3): CMP RDX,R10
00012f17(6): JNZ 0x00012d8e
00012f1d(3): OR R14B,R8B
00012f20(6): JZ 0x0001302a
00012f26(3): MOV RAX,RDX
00012f29(4): SHL RAX,0x4
00012f2d(3): ADD RAX,RSI
00012f30(2): JMP 0x00012f48
00012f32(3): CMP DL,0x5
00012f35(2): JNZ 0x00012f3b
00012f37(4): MOV byte ptr [RSI + 0x8],0x7
00012f3b(4): ADD RSI,0x10
00012f3f(3): CMP RAX,RSI
00012f42(6): JZ 0x00013027
00012f48(4): MOVZX EDX,byte ptr [RSI + 0x8]
00012f4c(3): CMP DL,0x1
00012f4f(2): JNZ 0x00012f32
00012f51(3): CMP byte ptr [RSI],0x0
00012f54(2): JNS 0x00012f3b
00012f56(4): AND byte ptr [RSI + 0xa],0xdf
00012f5a(2): JMP 0x00012f3b
00012f60(3): CMP byte ptr [RCX],0x0
00012f63(4): CMOVS R14D,EAX
00012f67(2): JMP 0x00012f0c
00012f69(2): MOV EDI,dword ptr [RCX]
00012f6b(3): CMP EDI,0x20
00012f6e(2): JZ 0x00012f0c
00012f70(6): JBE 0x00013019
00012f76(3): CMP EDI,0x40
00012f79(2): JZ 0x00012f0c
00012f7b(3): ADD EDI,-0x80
00012f7e(2): JZ 0x00012f0c
00012f80(5): JMP 0x00012b7e
00012f88(3): MOV RDI,qword ptr [RCX]
00012f8b(5): CMP qword ptr [RDI + 0x10],0x0
00012f90(6): JNZ 0x00012b7e
00012f96(5): CMP qword ptr [RDI + 0x18],0x0
00012f9b(6): JZ 0x00012f0c
00012fa1(5): JMP 0x00012b7e
00012fb0(3): MOV R15D,EAX
00012fb3(5): JMP 0x00012ccf
00012fb8(8): MOV qword ptr [R15 + 0x8],0x0
00012fc0(7): MOV qword ptr [R15],0x0
00012fc7(5): JMP 0x00012b3a
00012fcc(5): MOV RAX,qword ptr [RSP + 0x8]
00012fd1(8): MOV dword ptr [RSP + 0x4c],0xc
00012fd9(3): MOV R13,qword ptr [RAX]
00012fdc(5): JMP 0x000122fc
00012fe1(5): MOV EAX,0xc
00012fe6(5): JMP 0x0001236c
00012feb(5): MOV RAX,qword ptr [RSP + 0x8]
00012ff0(8): MOV qword ptr [RBX + 0x68],0x0
00012ff8(3): MOV R13,qword ptr [RAX]
00012ffb(5): JMP 0x000122fc
00013000(8): MOV qword ptr [RCX + 0x8],0x0
00013008(7): MOV qword ptr [RCX],0x0
0001300f(5): MOV EAX,0xc
00013014(5): JMP 0x000122f0
00013019(3): CMP EDI,0x10
0001301c(6): JZ 0x00012f0c
00013022(5): JMP 0x00012b7e
00013027(3): MOV R14D,R8D
0001302a(8): CMP qword ptr [0x98 + RBX],0x0
00013032(7): MOVZX EDX,byte ptr [0xb0 + RBX]
00013039(10): MOV dword ptr [0xb4 + RBX],0x1
00013043(3): SETG AL
00013046(3): AND EDX,0xfffffff9
00013049(3): OR EAX,R14D
0001304c(3): AND EAX,0x1
0001304f(2): ADD EAX,EAX
00013051(2): OR EAX,EDX
00013053(6): MOV byte ptr [0xb0 + RBX],AL
00013059(5): JMP 0x00012b7e
0001305e(5): CALL 0x00001890
00013063(7): LEA RCX,[0x15500]
0001306a(7): LEA RSI,[0x14f40]
00013071(7): LEA RDI,[0x15005]
00013078(5): MOV EDX,0x5b0
0001307d(5): CALL 0x00001a00
00013082(7): LEA RCX,[0x15500]
00013089(7): LEA RSI,[0x14f40]
00013090(7): LEA RDI,[0x14f60]
00013097(5): MOV EDX,0x5c2
0001309c(5): CALL 0x00001a00
000130a1(7): LEA RCX,[0x15500]
000130a8(7): LEA RSI,[0x14f40]
000130af(7): LEA RDI,[0x14ffb]
000130b6(5): MOV EDX,0x5af
000130bb(5): CALL 0x00001a00
000130c0(5): CALL 0x00001990
000130c5(1): NOP
000130c6(10): NOP word ptr CS:[RAX + RAX*0x1]
000130d0(4): SUB RSP,0x8
000130d4(7): MOV RCX,qword ptr [0x0021b400]
000130db(3): MOV R8,RDI
000130de(3): MOV RDI,RDX
000130e1(3): MOV RAX,RCX
000130e4(4): SHR RAX,0x19
000130e8(3): AND EAX,0x1
000130eb(3): SHL EAX,0x4
000130ee(2): MOV EDX,EAX
000130f0(4): MOVZX EAX,byte ptr [RDI + 0x38]
000130f4(3): AND EAX,0xffffffef
000130f7(2): OR EAX,EDX
000130f9(3): MOV RDX,RSI
000130fc(3): MOV RSI,R8
000130ff(3): OR EAX,0xffffff80
00013102(3): MOV byte ptr [RDI + 0x38],AL
00013105(5): CALL 0x00011fd0
0001310a(2): TEST EAX,EAX
0001310c(2): JZ 0x00013138
0001310e(7): LEA RDX,[0x15560]
00013115(2): CDQE
00013117(7): LEA RSI,[0x15600]
0001311e(2): XOR EDI,EDI
00013120(4): ADD RSI,qword ptr [RDX + RAX*0x8]
00013124(5): MOV EDX,0x5
00013129(4): ADD RSP,0x8
0001312d(5): JMP 0x00001960
00013138(2): XOR EAX,EAX
0001313a(4): ADD RSP,0x8
0001313e(1): RET
00013140(7): MOV RAX,qword ptr [0x0021b400]
00013147(7): MOV qword ptr [0x0021b400],RDI
0001314e(1): RET
00013150(2): PUSH R12
00013152(1): PUSH RBP
00013153(2): XOR EAX,EAX
00013155(1): PUSH RBX
00013156(4): MOV RBP,qword ptr [RDI + 0x20]
0001315a(3): MOV RBX,RDI
0001315d(3): MOV R12,qword ptr [RDI]
00013160(4): LEA RDI,[RBP + 0x8]
00013164(3): MOV RCX,RBP
00013167(8): MOV qword ptr [RBP],0x0
0001316f(11): MOV qword ptr [0xf8 + RBP],0x0
0001317a(4): AND RDI,-0x8
0001317e(3): SUB RCX,RDI
00013181(6): ADD ECX,0x100
00013187(3): SHR ECX,0x3
0001318a(3): STOSQ.REP RDI
0001318d(3): MOV RCX,RBP
00013190(3): MOV RDI,RBX
00013193(5): MOV RSI,qword ptr [R12 + 0x48]
00013198(4): LEA RDX,[RSI + 0x18]
0001319c(4): ADD RSI,0x10
000131a0(5): CALL 0x0000b6a0
000131a5(5): MOV RAX,qword ptr [R12 + 0x50]
000131aa(5): CMP qword ptr [R12 + 0x48],RAX
000131af(2): JZ 0x000131c9
000131b1(4): LEA RDX,[RAX + 0x18]
000131b5(4): LEA RSI,[RAX + 0x10]
000131b9(3): MOV RCX,RBP
000131bc(3): MOV RDI,RBX
000131bf(5): CALL 0x0000b6a0
000131c4(5): MOV RAX,qword ptr [R12 + 0x48]
000131c9(5): MOV RSI,qword ptr [R12 + 0x58]
000131ce(3): CMP RSI,RAX
000131d1(2): JZ 0x000131eb
000131d3(4): LEA RDX,[RSI + 0x18]
000131d7(3): MOV RCX,RBP
000131da(4): ADD RSI,0x10
000131de(3): MOV RDI,RBX
000131e1(5): CALL 0x0000b6a0
000131e6(5): MOV RAX,qword ptr [R12 + 0x48]
000131eb(5): MOV RSI,qword ptr [R12 + 0x60]
000131f0(3): CMP RSI,RAX
000131f3(2): JZ 0x00013208
000131f5(4): LEA RDX,[RSI + 0x18]
000131f9(3): MOV RCX,RBP
000131fc(4): ADD RSI,0x10
00013200(3): MOV RDI,RBX
00013203(5): CALL 0x0000b6a0
00013208(4): OR byte ptr [RBX + 0x38],0x8
0001320c(2): XOR EAX,EAX
0001320e(1): POP RBX
0001320f(1): POP RBP
00013210(2): POP R12
00013212(1): RET
00013220(2): PUSH R15
00013222(2): PUSH R14
00013224(3): MOV RAX,R8
00013227(2): PUSH R13
00013229(2): PUSH R12
0001322b(3): ADD R8,RCX
0001322e(1): PUSH RBP
0001322f(1): PUSH RBX
00013230(4): SUB RSP,0x38
00013234(3): TEST RCX,RCX
00013237(4): MOV EBX,dword ptr [RSP + 0x78]
0001323b(5): MOV R12,qword ptr [RSP + 0x70]
00013240(4): MOV dword ptr [RSP + 0x28],EBX
00013244(6): JS 0x00013580
0001324a(3): CMP RCX,RDX
0001324d(6): JG 0x00013580
00013253(3): CMP R8,RDX
00013256(3): MOV RBX,RCX
00013259(3): MOV R15,RDI
0001325c(6): JG 0x000134e0
00013262(3): TEST RAX,RAX
00013265(2): JS 0x00013270
00013267(3): CMP RCX,R8
0001326a(6): JG 0x000134e0
00013270(3): TEST R8,R8
00013273(6): JS 0x00013558
00013279(3): TEST RAX,RAX
0001327c(2): JNS 0x00013287
0001327e(3): CMP RBX,R8
00013281(6): JLE 0x00013558
00013287(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001328c(3): MOV R13D,EAX
0001328f(4): SHR R13B,0x5
00013293(3): MOV EDI,R13D
00013296(3): AND EDI,0x3
00013299(3): CMP R8,RBX
0001329c(4): MOV dword ptr [RSP + 0x2c],EDI
000132a0(2): JLE 0x000132b1
000132a2(5): CMP qword ptr [R15 + 0x20],0x0
000132a7(2): JZ 0x000132b1
000132a9(2): TEST AL,0x8
000132ab(6): JZ 0x000134a0
000132b1(2): TEST AL,0x10
000132b3(6): JNZ 0x00013480
000132b9(3): TEST R12,R12
000132bc(6): JZ 0x00013480
000132c2(3): AND EAX,0x6
000132c5(4): MOV RCX,qword ptr [R15 + 0x30]
000132c9(2): CMP AL,0x4
000132cb(6): JZ 0x00013460
000132d1(4): LEA R14,[RCX + 0x1]
000132d5(3): MOV R13,R14
000132d8(3): MOV RDI,R14
000132db(4): SHL RDI,0x4
000132df(5): MOV qword ptr [RSP + 0x20],R9
000132e4(5): MOV qword ptr [RSP + 0x18],RDX
000132e9(5): MOV qword ptr [RSP + 0x10],RSI
000132ee(5): MOV qword ptr [RSP + 0x8],R8
000132f3(5): CALL 0x00001ac0
000132f8(3): TEST RAX,RAX
000132fb(3): MOV RBP,RAX
000132fe(6): JZ 0x00013590
00013304(4): SUB RSP,0x8
00013308(3): MOV RCX,RBX
0001330b(3): MOV RDI,R15
0001330e(4): MOV EAX,dword ptr [RSP + 0x34]
00013312(1): PUSH RAX
00013313(1): PUSH RBP
00013314(2): PUSH R14
00013316(5): MOV R9,qword ptr [RSP + 0x40]
0001331b(5): MOV R8,qword ptr [RSP + 0x28]
00013320(5): MOV RDX,qword ptr [RSP + 0x38]
00013325(5): MOV RSI,qword ptr [RSP + 0x30]
0001332a(5): CALL 0x0000de40
0001332f(4): ADD RSP,0x20
00013333(2): TEST EAX,EAX
00013335(2): JZ 0x00013368
00013337(3): CMP EAX,0x1
0001333a(7): MOV R12,-0x1
00013341(2): JZ 0x0001334a
00013343(7): MOV R12,-0x2
0001334a(3): MOV RDI,RBP
0001334d(5): CALL 0x00001880
00013352(4): ADD RSP,0x38
00013356(3): MOV RAX,R12
00013359(1): POP RBX
0001335a(1): POP RBP
0001335b(2): POP R12
0001335d(2): POP R13
0001335f(2): POP R14
00013361(2): POP R15
00013363(1): RET
00013368(3): TEST R12,R12
0001336b(6): JZ 0x00013438
00013371(5): MOVZX EAX,byte ptr [R15 + 0x38]
00013376(4): LEA RDX,[R13 + 0x1]
0001337a(2): SHR AL,1
0001337c(3): AND EAX,0x3
0001337f(6): JZ 0x000134f0
00013385(3): CMP EAX,0x1
00013388(6): JZ 0x000135a0
0001338e(3): CMP EAX,0x2
00013391(6): JNZ 0x00013680
00013397(4): CMP R14,qword ptr [R12]
0001339b(6): JA 0x00013661
000133a1(6): MOV R9D,0x2
000133a7(3): TEST R13,R13
000133aa(6): JLE 0x00013618
000133b0(5): MOV R8,qword ptr [R12 + 0x8]
000133b5(5): MOV RDI,qword ptr [R12 + 0x10]
000133ba(8): LEA RSI,[R13*0x8]
000133c2(3): MOV RDX,R13
000133c5(2): XOR EAX,EAX
000133c7(9): NOP word ptr [RAX + RAX*0x1]
000133d0(5): MOV RCX,qword ptr [RBP + RAX*0x2]
000133d5(4): MOV qword ptr [R8 + RAX*0x1],RCX
000133d9(5): MOV RCX,qword ptr [RBP + RAX*0x2 + 0x8]
000133de(4): MOV qword ptr [RDI + RAX*0x1],RCX
000133e2(4): ADD RAX,0x8
000133e6(3): CMP RSI,RAX
000133e9(2): JNZ 0x000133d0
000133eb(4): CMP qword ptr [R12],RDX
000133ef(2): JBE 0x0001341d
000133f1(5): MOV RSI,qword ptr [R12 + 0x10]
000133f6(5): MOV RCX,qword ptr [R12 + 0x8]
000133fb(7): MOV RAX,-0x1
00013402(6): NOP word ptr [RAX + RAX*0x1]
00013408(4): MOV qword ptr [RSI + RDX*0x8],RAX
0001340c(4): ADD R13,0x1
00013410(4): MOV qword ptr [RCX + RDX*0x8],RAX
00013414(4): CMP R13,qword ptr [R12]
00013418(3): MOV RDX,R13
0001341b(2): JC 0x00013408
0001341d(5): MOVZX EAX,byte ptr [R15 + 0x38]
00013422(4): LEA R13D,[R9 + R9*0x1]
00013426(3): AND EAX,0xfffffff9
00013429(3): OR EAX,R13D
0001342c(2): TEST AL,0x6
0001342e(4): MOV byte ptr [R15 + 0x38],AL
00013432(6): JZ 0x00013343
00013438(5): CMP byte ptr [RSP + 0x28],0x0
0001343d(4): MOV R12,qword ptr [RBP]
00013441(6): JZ 0x0001334a
00013447(3): CMP R12,RBX
0001344a(6): JNZ 0x00013642
00013450(4): MOV R12,qword ptr [RBP + 0x8]
00013454(3): SUB R12,RBX
00013457(5): JMP 0x0001334a
00013460(4): MOV R14,qword ptr [R12]
00013464(3): CMP R14,RCX
00013467(6): JA 0x000132d1
0001346d(3): TEST R14,R14
00013470(3): MOV R13,R14
00013473(6): JG 0x000132d8
00013479(7): NOP dword ptr [RAX]
00013480(5): MOV EDI,0x10
00013485(6): MOV R14D,0x1
0001348b(6): MOV R13D,0x1
00013491(3): XOR R12D,R12D
00013494(5): JMP 0x000132df
000134a0(3): MOV RDI,R15
000134a3(5): MOV qword ptr [RSP + 0x20],R9
000134a8(5): MOV qword ptr [RSP + 0x18],RDX
000134ad(5): MOV qword ptr [RSP + 0x10],RSI
000134b2(5): MOV qword ptr [RSP + 0x8],R8
000134b7(5): CALL 0x00013150
000134bc(5): MOVZX EAX,byte ptr [R15 + 0x38]
000134c1(5): MOV R9,qword ptr [RSP + 0x20]
000134c6(5): MOV RDX,qword ptr [RSP + 0x18]
000134cb(5): MOV RSI,qword ptr [RSP + 0x10]
000134d0(5): MOV R8,qword ptr [RSP + 0x8]
000134d5(5): JMP 0x000132b1
000134e0(3): MOV R8,RDX
000134e3(5): JMP 0x00013287
000134f0(8): LEA R14,[RDX*0x8]
000134f8(5): MOV qword ptr [RSP + 0x8],RDX
000134fd(3): MOV RDI,R14
00013500(5): CALL 0x00001ac0
00013505(3): TEST RAX,RAX
00013508(5): MOV qword ptr [R12 + 0x8],RAX
0001350d(5): MOV RDX,qword ptr [RSP + 0x8]
00013512(6): JZ 0x0001362a
00013518(3): MOV RDI,R14
0001351b(5): MOV qword ptr [RSP + 0x8],RDX
00013520(5): MOV qword ptr [RSP + 0x10],RAX
00013525(5): CALL 0x00001ac0
0001352a(3): TEST RAX,RAX
0001352d(5): MOV qword ptr [R12 + 0x10],RAX
00013532(5): MOV RDX,qword ptr [RSP + 0x8]
00013537(5): MOV RCX,qword ptr [RSP + 0x10]
0001353c(6): JZ 0x00013622
00013542(4): MOV qword ptr [R12],RDX
00013546(6): MOV R9D,0x1
0001354c(5): JMP 0x000133a7
00013558(5): MOVZX EAX,byte ptr [R15 + 0x38]
0001355d(3): XOR R8D,R8D
00013560(3): MOV R13D,EAX
00013563(4): SHR R13B,0x5
00013567(3): MOV EDI,R13D
0001356a(3): AND EDI,0x3
0001356d(4): MOV dword ptr [RSP + 0x2c],EDI
00013571(5): JMP 0x000132b1
00013580(7): MOV R12,-0x1
00013587(5): JMP 0x00013352
00013590(7): MOV R12,-0x2
00013597(5): JMP 0x00013352
000135a0(4): CMP qword ptr [R12],RDX
000135a4(6): MOV R9D,0x1
000135aa(6): JNC 0x000133a7
000135b0(8): LEA RCX,[RDX*0x8]
000135b8(5): MOV RDI,qword ptr [R12 + 0x8]
000135bd(5): MOV byte ptr [RSP + 0x18],R9B
000135c2(5): MOV qword ptr [RSP + 0x10],RDX
000135c7(3): MOV RSI,RCX
000135ca(5): MOV qword ptr [RSP + 0x8],RCX
000135cf(5): CALL 0x00001b30
000135d4(3): TEST RAX,RAX
000135d7(3): MOV R14,RAX
000135da(2): JZ 0x0001362a
000135dc(5): MOV RCX,qword ptr [RSP + 0x8]
000135e1(5): MOV RDI,qword ptr [R12 + 0x10]
000135e6(3): MOV RSI,RCX
000135e9(5): CALL 0x00001b30
000135ee(3): TEST RAX,RAX
000135f1(5): MOV RDX,qword ptr [RSP + 0x10]
000135f6(6): MOVZX R9D,byte ptr [RSP + 0x18]
000135fc(2): JZ 0x00013632
000135fe(5): MOV qword ptr [R12 + 0x8],R14
00013603(5): MOV qword ptr [R12 + 0x10],RAX
00013608(4): MOV qword ptr [R12],RDX
0001360c(5): JMP 0x000133a7
00013618(2): XOR EDX,EDX
0001361a(3): XOR R13D,R13D
0001361d(5): JMP 0x000133eb
00013622(3): MOV RDI,RCX
00013625(5): CALL 0x00001880
0001362a(3): XOR R9D,R9D
0001362d(5): JMP 0x0001341d
00013632(3): MOV RDI,R14
00013635(5): CALL 0x00001880
0001363a(3): XOR R9D,R9D
0001363d(5): JMP 0x0001341d
00013642(7): LEA RCX,[0x154d0]
00013649(7): LEA RSI,[0x14f20]
00013650(7): LEA RDI,[0x15045]
00013657(5): MOV EDX,0x1be
0001365c(5): CALL 0x00001a00
00013661(7): LEA RCX,[0x154c0]
00013668(7): LEA RSI,[0x14f20]
0001366f(7): LEA RDI,[0x1502d]
00013676(5): MOV EDX,0x1fb
0001367b(5): CALL 0x00001a00
00013680(7): LEA RCX,[0x154c0]
00013687(7): LEA RSI,[0x14f20]
0001368e(7): LEA RDI,[0x15010]
00013695(5): MOV EDX,0x1f9
0001369a(5): CALL 0x00001a00
0001369f(1): NOP
000136a0(2): PUSH R15
000136a2(2): PUSH R14
000136a4(2): PUSH R13
000136a6(2): PUSH R12
000136a8(3): MOV R12,RDI
000136ab(1): PUSH RBP
000136ac(1): PUSH RBX
000136ad(3): MOV RBP,R8
000136b0(3): MOV RBX,RDX
000136b3(3): MOV RDX,RBP
000136b6(4): SUB RSP,0x28
000136ba(4): SHR RDX,0x3f
000136be(5): MOV RAX,qword ptr [RSP + 0x70]
000136c3(2): MOV EDI,EDX
000136c5(5): MOV R8D,dword ptr [RSP + 0x78]
000136ca(4): SHR RAX,0x3f
000136ce(3): OR DIL,AL
000136d1(6): JNZ 0x000137a0
000136d7(3): TEST RBX,RBX
000136da(6): JS 0x000137a0
000136e0(3): MOV R15,RBX
000136e3(3): ADD R15,RBP
000136e6(6): JO 0x000137a0
000136ec(3): TEST RBP,RBP
000136ef(3): MOV R14,RCX
000136f2(3): MOV RCX,R9
000136f5(6): JZ 0x000137b0
000136fb(3): XOR R13D,R13D
000136fe(3): TEST RBX,RBX
00013701(5): MOV qword ptr [RSP + 0x8],RSI
00013706(2): JNZ 0x00013750
00013708(4): MOVZX R8D,R8B
0001370c(3): MOV RDX,R15
0001370f(3): MOV RSI,R14
00013712(2): PUSH R8
00013714(4): PUSH qword ptr [RSP + 0x70]
00013718(3): MOV RDI,R12
0001371b(8): MOV R9,qword ptr [0x80 + RSP]
00013723(5): MOV R8,qword ptr [RSP + 0x70]
00013728(5): CALL 0x00013220
0001372d(3): MOV RDI,R13
00013730(3): MOV RBX,RAX
00013733(5): CALL 0x00001880
00013738(1): POP RAX
00013739(1): POP RDX
0001373a(4): ADD RSP,0x28
0001373e(3): MOV RAX,RBX
00013741(1): POP RBX
00013742(1): POP RBP
00013743(2): POP R12
00013745(2): POP R13
00013747(2): POP R14
00013749(2): POP R15
0001374b(1): RET
00013750(3): MOV RDI,R15
00013753(5): MOV dword ptr [RSP + 0x1c],R8D
00013758(5): MOV qword ptr [RSP + 0x10],R9
0001375d(5): CALL 0x00001ac0
00013762(3): TEST RAX,RAX
00013765(3): MOV R13,RAX
00013768(2): JZ 0x000137a0
0001376a(5): MOV RSI,qword ptr [RSP + 0x8]
0001376f(3): MOV RDX,RBX
00013772(3): MOV RDI,RAX
00013775(5): CALL 0x00001a90
0001377a(5): LEA RDI,[R13 + RBX*0x1]
0001377f(3): MOV RSI,R14
00013782(3): MOV RDX,RBP
00013785(3): MOV R14,R13
00013788(5): CALL 0x00001a90
0001378d(5): MOV RCX,qword ptr [RSP + 0x10]
00013792(5): MOV R8D,dword ptr [RSP + 0x1c]
00013797(5): JMP 0x00013708
000137a0(7): MOV RBX,-0x2
000137a7(2): JMP 0x0001373a
000137b0(3): MOV R14,RSI
000137b3(3): XOR R13D,R13D
000137b6(5): JMP 0x00013708
000137c0(2): MOV EAX,EDX
000137c2(2): PUSH R14
000137c4(2): PUSH R13
000137c6(3): AND EAX,0x1
000137c9(2): PUSH R12
000137cb(1): PUSH RBP
000137cc(3): CMP EAX,0x1
000137cf(1): PUSH RBX
000137d0(3): MOV RBX,RDI
000137d3(3): SBB R14,R14
000137d6(7): MOV qword ptr [RDI],0x0
000137dd(8): MOV qword ptr [RDI + 0x8],0x0
000137e5(7): AND R14D,0xfd4fca
000137ec(8): MOV qword ptr [RDI + 0x10],0x0
000137f4(5): MOV EDI,0x100
000137f9(3): MOV R12,RSI
000137fc(2): MOV EBP,EDX
000137fe(7): ADD R14,0x3b2fc
00013805(5): CALL 0x00001ac0
0001380a(3): TEST RAX,RAX
0001380d(4): MOV qword ptr [RBX + 0x20],RAX
00013811(6): JZ 0x000138c0
00013817(3): MOV R13,RBP
0001381a(4): SHL R13,0x15
0001381e(7): AND R13D,0x400000
00013825(3): OR R13,R14
00013828(4): TEST BPL,0x4
0001382c(2): JNZ 0x00013890
0001382e(4): AND byte ptr [RBX + 0x38],0x7f
00013832(4): MOVZX EDX,byte ptr [RBX + 0x38]
00013836(3): SHR EBP,0x3
00013839(3): MOV RDI,R12
0001383c(3): AND EBP,0x1
0001383f(8): MOV qword ptr [RBX + 0x28],0x0
00013847(3): SHL EBP,0x4
0001384a(3): AND EDX,0xffffffef
0001384d(2): OR EBP,EDX
0001384f(4): MOV byte ptr [RBX + 0x38],BPL
00013853(5): CALL 0x00001980
00013858(3): MOV RCX,R13
0001385b(3): MOV RDX,RAX
0001385e(3): MOV RSI,R12
00013861(3): MOV RDI,RBX
00013864(5): CALL 0x00011fd0
00013869(3): CMP EAX,0x10
0001386c(2): MOV EBP,EAX
0001386e(2): JZ 0x000138a8
00013870(2): TEST EAX,EAX
00013872(2): JNZ 0x000138ad
00013874(3): MOV RDI,RBX
00013877(5): CALL 0x00013150
0001387c(1): POP RBX
0001387d(2): MOV EAX,EBP
0001387f(1): POP RBP
00013880(2): POP R12
00013882(2): POP R13
00013884(2): POP R14
00013886(1): RET
00013890(4): AND R13,-0x41
00013894(4): OR byte ptr [RBX + 0x38],0x80
00013898(7): OR R13,0x100
0001389f(2): JMP 0x00013832
000138a8(5): MOV EBP,0x8
000138ad(4): MOV RDI,qword ptr [RBX + 0x20]
000138b1(5): CALL 0x00001880
000138b6(8): MOV qword ptr [RBX + 0x20],0x0
000138be(2): JMP 0x0001387c
000138c0(5): MOV EBP,0xc
000138c5(1): POP RBX
000138c6(2): MOV EAX,EBP
000138c8(1): POP RBP
000138c9(2): POP R12
000138cb(2): POP R13
000138cd(2): POP R14
000138cf(1): RET
000138d0(2): PUSH R13
000138d2(2): PUSH R12
000138d4(1): PUSH RBP
000138d5(1): PUSH RBX
000138d6(4): SUB RSP,0x8
000138da(3): CMP EDI,0x10
000138dd(2): JA 0x00013940
000138df(7): LEA RAX,[0x15560]
000138e6(3): MOVSXD RDI,EDI
000138e9(7): LEA RSI,[0x15600]
000138f0(3): MOV RBP,RDX
000138f3(5): MOV EDX,0x5
000138f8(3): MOV R12,RCX
000138fb(4): ADD RSI,qword ptr [RAX + RDI*0x8]
000138ff(2): XOR EDI,EDI
00013901(5): CALL 0x00001960
00013906(3): MOV RDI,RAX
00013909(3): MOV R13,RAX
0001390c(5): CALL 0x00001980
00013911(3): TEST R12,R12
00013914(4): LEA RBX,[RAX + 0x1]
00013918(2): JZ 0x0001392d
0001391a(3): CMP RBX,R12
0001391d(3): MOV RDX,RBX
00013920(2): JA 0x00013948
00013922(3): MOV RSI,R13
00013925(3): MOV RDI,RBP
00013928(5): CALL 0x00001a90
0001392d(4): ADD RSP,0x8
00013931(3): MOV RAX,RBX
00013934(1): POP RBX
00013935(1): POP RBP
00013936(2): POP R12
00013938(2): POP R13
0001393a(1): RET
00013940(5): CALL 0x00001890
00013945(3): NOP dword ptr [RAX]
00013948(5): LEA RDX,[R12 + -0x1]
0001394d(6): MOV byte ptr [RBP + R12*0x1 + -0x1],0x0
00013953(2): JMP 0x00013922
00013960(1): PUSH RBX
00013961(3): MOV RBX,RDI
00013964(3): MOV RDI,qword ptr [RDI]
00013967(3): TEST RDI,RDI
0001396a(2): JZ 0x00013971
0001396c(5): CALL 0x00007150
00013971(4): MOV RDI,qword ptr [RBX + 0x20]
00013975(7): MOV qword ptr [RBX],0x0
0001397c(8): MOV qword ptr [RBX + 0x8],0x0
00013984(5): CALL 0x00001880
00013989(4): MOV RDI,qword ptr [RBX + 0x28]
0001398d(8): MOV qword ptr [RBX + 0x20],0x0
00013995(5): CALL 0x00001880
0001399a(8): MOV qword ptr [RBX + 0x28],0x0
000139a2(1): POP RBX
000139a3(1): RET
000139b0(7): TEST R8D,0xfffffff8
000139b7(6): JNZ 0x00013a48
000139bd(2): PUSH R13
000139bf(2): PUSH R12
000139c1(3): MOV R13,RDX
000139c4(1): PUSH RBP
000139c5(1): PUSH RBX
000139c6(3): MOV R12,RCX
000139c9(3): MOV EBX,R8D
000139cc(3): MOV RBP,RDI
000139cf(4): SUB RSP,0x18
000139d3(4): TEST R8B,0x4
000139d7(2): JNZ 0x00013a28
000139d9(3): MOV RDI,RSI
000139dc(5): MOV qword ptr [RSP + 0x8],RSI
000139e1(5): CALL 0x00001980
000139e6(2): XOR ECX,ECX
000139e8(4): TEST byte ptr [RBP + 0x38],0x10
000139ec(3): MOV RDX,RAX
000139ef(5): MOV RSI,qword ptr [RSP + 0x8]
000139f4(2): JZ 0x00013a36
000139f6(4): SUB RSP,0x8
000139fa(1): PUSH RBX
000139fb(2): PUSH 0x0
000139fd(2): PUSH 0x0
000139ff(3): MOV RDI,RBP
00013a02(3): MOV R9,RDX
00013a05(3): MOV R8,RDX
00013a08(5): CALL 0x0000de40
00013a0d(4): ADD RSP,0x20
00013a11(2): TEST EAX,EAX
00013a13(3): SETNZ AL
00013a16(4): ADD RSP,0x18
00013a1a(1): POP RBX
00013a1b(3): MOVZX EAX,AL
00013a1e(1): POP RBP
00013a1f(2): POP R12
00013a21(2): POP R13
00013a23(1): RET
00013a28(4): TEST byte ptr [RBP + 0x38],0x10
00013a2c(3): MOV RCX,qword ptr [RCX]
00013a2f(5): MOV RDX,qword ptr [R12 + 0x8]
00013a34(2): JNZ 0x000139f6
00013a36(4): SUB RSP,0x8
00013a3a(1): PUSH RBX
00013a3b(2): PUSH R12
00013a3d(2): PUSH R13
00013a3f(2): JMP 0x000139ff
00013a48(5): MOV EAX,0x2
00013a4d(1): RET
00013a50(4): SUB RSP,0x8
00013a54(3): MOV R9,RDX
00013a57(2): PUSH 0x1
00013a59(2): PUSH R8
00013a5b(3): XOR R8D,R8D
00013a5e(5): CALL 0x00013220
00013a63(4): ADD RSP,0x18
00013a67(1): RET
00013a70(4): SUB RSP,0x8
00013a74(2): PUSH 0x0
00013a76(2): PUSH R9
00013a78(3): MOV R9,RDX
00013a7b(5): CALL 0x00013220
00013a80(4): ADD RSP,0x18
00013a84(1): RET
00013a90(4): SUB RSP,0x8
00013a94(2): PUSH 0x1
00013a96(4): PUSH qword ptr [RSP + 0x20]
00013a9a(4): PUSH qword ptr [RSP + 0x20]
00013a9e(2): PUSH 0x0
00013aa0(5): CALL 0x000136a0
00013aa5(4): ADD RSP,0x28
00013aa9(1): RET
00013ab0(4): SUB RSP,0x8
00013ab4(2): PUSH 0x0
00013ab6(4): PUSH qword ptr [RSP + 0x28]
00013aba(4): PUSH qword ptr [RSP + 0x28]
00013abe(4): PUSH qword ptr [RSP + 0x28]
00013ac2(5): CALL 0x000136a0
00013ac7(4): ADD RSP,0x28
00013acb(1): RET
00013ad0(3): TEST RDX,RDX
00013ad3(2): JNZ 0x00013af8
00013ad5(4): AND byte ptr [RDI + 0x38],0xf9
00013ad9(7): MOV qword ptr [RSI],0x0
00013ae0(8): MOV qword ptr [RSI + 0x10],0x0
00013ae8(8): MOV qword ptr [RSI + 0x8],0x0
00013af0(1): RET
00013af8(4): MOVZX EAX,byte ptr [RDI + 0x38]
00013afc(3): AND EAX,0xfffffff9
00013aff(3): OR EAX,0x2
00013b02(3): MOV byte ptr [RDI + 0x38],AL
00013b05(3): MOV qword ptr [RSI],RDX
00013b08(4): MOV qword ptr [RSI + 0x8],RCX
00013b0c(4): MOV qword ptr [RSI + 0x10],R8
00013b10(1): RET
00013b20(2): PUSH R12
00013b22(1): PUSH RBP
00013b23(3): MOV RBP,RDI
00013b26(1): PUSH RBX
00013b27(5): CALL 0x000018e0
00013b2c(3): MOV EBX,dword ptr [RBP]
00013b2f(3): MOV RDI,RBP
00013b32(3): MOV R12,RAX
00013b35(5): CALL 0x00013d60
00013b3a(3): AND EBX,0x20
00013b3d(2): TEST EBX,EBX
00013b3f(2): JNZ 0x00013b58
00013b41(2): TEST EAX,EAX
00013b43(2): JZ 0x00013b4f
00013b45(3): TEST R12,R12
00013b48(5): MOV EAX,0xffffffff
00013b4d(2): JZ 0x00013b88
00013b4f(1): POP RBX
00013b50(1): POP RBP
00013b51(2): POP R12
00013b53(1): RET
00013b58(2): TEST EAX,EAX
00013b5a(2): JNZ 0x00013b78
00013b5c(5): CALL 0x000018a0
00013b61(6): MOV dword ptr [RAX],0x0
00013b67(5): MOV EAX,0xffffffff
00013b6c(1): POP RBX
00013b6d(1): POP RBP
00013b6e(2): POP R12
00013b70(1): RET
00013b78(1): POP RBX
00013b79(5): MOV EAX,0xffffffff
00013b7e(1): POP RBP
00013b7f(2): POP R12
00013b81(1): RET
00013b88(5): CALL 0x000018a0
00013b8d(3): CMP dword ptr [RAX],0x9
00013b90(1): POP RBX
00013b91(1): POP RBP
00013b92(2): POP R12
00013b94(3): SETNZ AL
00013b97(3): MOVZX EAX,AL
00013b9a(2): NEG EAX
00013b9c(1): RET
00013ba0(3): MOVZX EDX,byte ptr [RDI]
00013ba3(3): MOV RAX,RDI
00013ba6(3): CMP DL,0x2f
00013ba9(2): JNZ 0x00013bbc
00013bab(5): NOP dword ptr [RAX + RAX*0x1]
00013bb0(4): ADD RAX,0x1
00013bb4(3): MOVZX EDX,byte ptr [RAX]
00013bb7(3): CMP DL,0x2f
00013bba(2): JZ 0x00013bb0
00013bbc(2): TEST DL,DL
00013bbe(2): JZ 0x00013bfa
00013bc0(3): MOV RCX,RAX
00013bc3(2): XOR ESI,ESI
00013bc5(2): JMP 0x00013be5
00013bd0(3): TEST SIL,SIL
00013bd3(2): JZ 0x00013bda
00013bd5(3): MOV RAX,RCX
00013bd8(2): XOR ESI,ESI
00013bda(4): ADD RCX,0x1
00013bde(3): MOVZX EDX,byte ptr [RCX]
00013be1(2): TEST DL,DL
00013be3(2): JZ 0x00013bfa
00013be5(3): CMP DL,0x2f
00013be8(2): JNZ 0x00013bd0
00013bea(4): ADD RCX,0x1
00013bee(3): MOVZX EDX,byte ptr [RCX]
00013bf1(5): MOV ESI,0x1
00013bf6(2): TEST DL,DL
00013bf8(2): JNZ 0x00013be5
00013bfa(2): RET
00013c00(1): PUSH RBX
00013c01(3): MOV RBX,RDI
00013c04(5): CALL 0x00001980
00013c09(4): CMP RAX,0x1
00013c0d(2): JBE 0x00013c1a
00013c0f(5): CMP byte ptr [RBX + RAX*0x1 + -0x1],0x2f
00013c14(4): LEA RDX,[RAX + -0x1]
00013c18(2): JZ 0x00013c28
00013c1a(1): POP RBX
00013c1b(1): RET
00013c20(3): MOV RDX,RAX
00013c23(5): NOP dword ptr [RAX + RAX*0x1]
00013c28(4): CMP RDX,0x1
00013c2c(2): JZ 0x00013c40
00013c2e(5): CMP byte ptr [RBX + RDX*0x1 + -0x1],0x2f
00013c33(4): LEA RAX,[RDX + -0x1]
00013c37(2): JZ 0x00013c20
00013c39(3): MOV RAX,RDX
00013c3c(1): POP RBX
00013c3d(1): RET
00013c40(5): MOV EAX,0x1
00013c45(1): POP RBX
00013c46(1): RET
00013c50(2): PUSH R13
00013c52(2): PUSH R12
00013c54(1): PUSH RBP
00013c55(1): PUSH RBX
00013c56(2): MOV EBX,EDI
00013c58(4): SUB RSP,0x8
00013c5c(3): CMP EDI,0x2
00013c5f(2): JA 0x00013c82
00013c61(5): CALL 0x00013c90
00013c66(3): MOV R12D,EAX
00013c69(5): CALL 0x000018a0
00013c6e(3): MOV R13D,dword ptr [RAX]
00013c71(3): MOV RBP,RAX
00013c74(2): MOV EDI,EBX
00013c76(5): CALL 0x00001a20
00013c7b(3): MOV EBX,R12D
00013c7e(4): MOV dword ptr [RBP],R13D
00013c82(4): ADD RSP,0x8
00013c86(2): MOV EAX,EBX
00013c88(1): POP RBX
00013c89(1): POP RBP
00013c8a(2): POP R12
00013c8c(2): POP R13
00013c8e(1): RET
00013c90(6): AND ESI,0x80000
00013c96(5): MOV EAX,0x406
00013c9b(5): MOV EDX,0x3
00013ca0(3): CMOVNZ ESI,EAX
00013ca3(2): XOR EAX,EAX
00013ca5(5): JMP 0x00013de0
00013cb0(4): SUB RSP,0x8
00013cb4(2): XOR ESI,ESI
00013cb6(5): CALL 0x00001b50
00013cbb(3): MOV RDX,RAX
00013cbe(5): MOV EAX,0x1
00013cc3(3): TEST RDX,RDX
00013cc6(2): JZ 0x00013ce5
00013cc8(7): LEA RDI,[0x15790]
00013ccf(5): MOV ECX,0x2
00013cd4(3): MOV RSI,RDX
00013cd7(2): CMPSB.REPE RDI,RSI
00013cd9(3): SETA CL
00013cdc(3): SBB CL,0x0
00013cdf(2): XOR EAX,EAX
00013ce1(2): TEST CL,CL
00013ce3(2): JNZ 0x00013cf0
00013ce5(4): ADD RSP,0x8
00013ce9(1): RET
00013cf0(7): LEA RDI,[0x15792]
00013cf7(5): MOV ECX,0x6
00013cfc(3): MOV RSI,RDX
00013cff(2): CMPSB.REPE RDI,RSI
00013d01(3): SETA AL
00013d04(2): SBB AL,0x0
00013d06(2): TEST AL,AL
00013d08(3): SETNZ AL
00013d0b(4): ADD RSP,0x8
00013d0f(1): RET
00013d10(4): SUB RSP,0x8
00013d14(5): MOV EDI,0xe
00013d19(5): CALL 0x00001af0
00013d1e(3): TEST RAX,RAX
00013d21(2): JZ 0x00013d40
00013d23(3): CMP byte ptr [RAX],0x0
00013d26(7): LEA RDX,[0x15798]
00013d2d(4): CMOVZ RAX,RDX
00013d31(4): ADD RSP,0x8
00013d35(1): RET
00013d40(7): LEA RAX,[0x15798]
00013d47(4): ADD RSP,0x8
00013d4b(1): RET
00013d50(5): MOV EDX,0x3
00013d55(2): XOR ESI,ESI
00013d57(2): XOR EAX,EAX
00013d59(5): JMP 0x00013de0
00013d60(2): PUSH R12
00013d62(1): PUSH RBP
00013d63(1): PUSH RBX
00013d64(3): MOV RBX,RDI
00013d67(5): CALL 0x00001aa0
00013d6c(2): TEST EAX,EAX
00013d6e(3): MOV RDI,RBX
00013d71(2): JS 0x00013dc7
00013d73(5): CALL 0x00001b10
00013d78(2): TEST EAX,EAX
00013d7a(2): JNZ 0x00013da8
00013d7c(3): MOV RDI,RBX
00013d7f(5): CALL 0x00014060
00013d84(2): TEST EAX,EAX
00013d86(2): JZ 0x00013dc4
00013d88(5): CALL 0x000018a0
00013d8d(3): MOV R12D,dword ptr [RAX]
00013d90(3): MOV RDI,RBX
00013d93(3): MOV RBP,RAX
00013d96(5): CALL 0x00001940
00013d9b(3): TEST R12D,R12D
00013d9e(2): JNZ 0x00013dd0
00013da0(1): POP RBX
00013da1(1): POP RBP
00013da2(2): POP R12
00013da4(1): RET
00013da8(3): MOV RDI,RBX
00013dab(5): CALL 0x00001aa0
00013db0(2): XOR ESI,ESI
00013db2(5): MOV EDX,0x1
00013db7(2): MOV EDI,EAX
00013db9(5): CALL 0x000019f0
00013dbe(4): CMP RAX,-0x1
00013dc2(2): JNZ 0x00013d7c
00013dc4(3): MOV RDI,RBX
00013dc7(1): POP RBX
00013dc8(1): POP RBP
00013dc9(2): POP R12
00013dcb(5): JMP 0x00001940
00013dd0(4): MOV dword ptr [RBP],R12D
00013dd4(5): MOV EAX,0xffffffff
00013dd9(2): JMP 0x00013da0
00013de0(2): PUSH R12
00013de2(1): PUSH RBP
00013de3(2): MOV EBP,EDI
00013de5(1): PUSH RBX
00013de6(4): SUB RSP,0x50
00013dea(9): MOV RAX,qword ptr FS:[0x28]
00013df3(5): MOV qword ptr [RSP + 0x18],RAX
00013df8(2): XOR EAX,EAX
00013dfa(5): LEA RAX,[RSP + 0x70]
00013dff(2): TEST ESI,ESI
00013e01(5): MOV qword ptr [RSP + 0x30],RDX
00013e06(5): MOV qword ptr [RSP + 0x38],RCX
00013e0b(5): MOV qword ptr [RSP + 0x40],R8
00013e10(5): MOV qword ptr [RSP + 0x8],RAX
00013e15(5): LEA RAX,[RSP + 0x20]
00013e1a(5): MOV qword ptr [RSP + 0x48],R9
00013e1f(7): MOV dword ptr [RSP],0x10
00013e26(5): MOV qword ptr [RSP + 0x10],RAX
00013e2b(6): JZ 0x00014032
00013e31(6): CMP ESI,0x406
00013e37(2): JNZ 0x00013e80
00013e39(5): MOV RAX,qword ptr [RSP + 0x10]
00013e3e(7): CMP dword ptr [0x0021b3f8],0x0
00013e45(7): MOV dword ptr [RSP],0x18
00013e4c(4): MOV R12D,dword ptr [RAX + 0x10]
00013e50(3): MOV EDX,R12D
00013e53(6): JS 0x00013f83
00013e59(2): XOR EAX,EAX
00013e5b(5): MOV ESI,0x406
00013e60(5): CALL 0x00001900
00013e65(2): TEST EAX,EAX
00013e67(2): MOV EBX,EAX
00013e69(6): JS 0x00013ff8
00013e6f(10): MOV dword ptr [0x0021b3f8],0x1
00013e79(2): JMP 0x00013ec0
00013e80(3): CMP ESI,0xb
00013e83(2): JZ 0x00013eb0
00013e85(2): JG 0x00013ee0
00013e87(3): CMP ESI,0x4
00013e8a(6): JZ 0x00013f60
00013e90(6): JG 0x00013f50
00013e96(3): CMP ESI,0x2
00013e99(6): JZ 0x00013f60
00013e9f(2): JG 0x00013eb0
00013ea1(3): CMP ESI,0x1
00013ea4(2): JNZ 0x00013f08
00013ea6(10): NOP word ptr CS:[RAX + RAX*0x1]
00013eb0(2): MOV EDI,EBP
00013eb2(2): XOR EAX,EAX
00013eb4(5): CALL 0x00001900
00013eb9(2): MOV EBX,EAX
00013ebb(5): NOP dword ptr [RAX + RAX*0x1]
00013ec0(5): MOV RCX,qword ptr [RSP + 0x18]
00013ec5(9): XOR RCX,qword ptr FS:[0x28]
00013ece(2): MOV EAX,EBX
00013ed0(6): JNZ 0x0001402d
00013ed6(4): ADD RSP,0x50
00013eda(1): POP RBX
00013edb(1): POP RBP
00013edc(2): POP R12
00013ede(1): RET
00013ee0(6): CMP ESI,0x407
00013ee6(2): JG 0x00013f30
00013ee8(6): CMP ESI,0x406
00013eee(2): JGE 0x00013f60
00013ef0(6): CMP ESI,0x401
00013ef6(2): JZ 0x00013eb0
00013ef8(6): CMP ESI,0x402
00013efe(2): JZ 0x00013f60
00013f00(6): CMP ESI,0x400
00013f06(2): JZ 0x00013f60
00013f08(3): MOV EAX,dword ptr [RSP]
00013f0b(3): CMP EAX,0x2f
00013f0e(6): JA 0x0001404a
00013f14(5): ADD RAX,qword ptr [RSP + 0x10]
00013f19(3): MOV RDX,qword ptr [RAX]
00013f1c(2): MOV EDI,EBP
00013f1e(2): XOR EAX,EAX
00013f20(5): CALL 0x00001900
00013f25(2): MOV EBX,EAX
00013f27(2): JMP 0x00013ec0
00013f30(6): CMP ESI,0x409
00013f36(2): JZ 0x00013f60
00013f38(6): JL 0x00013eb0
00013f3e(6): CMP ESI,0x40a
00013f44(2): JNZ 0x00013f08
00013f46(5): JMP 0x00013eb0
00013f50(3): CMP ESI,0x9
00013f53(6): JZ 0x00013eb0
00013f59(2): JG 0x00013f60
00013f5b(3): CMP ESI,0x8
00013f5e(2): JNZ 0x00013f08
00013f60(3): MOV EAX,dword ptr [RSP]
00013f63(3): CMP EAX,0x2f
00013f66(6): JA 0x00014054
00013f6c(5): ADD RAX,qword ptr [RSP + 0x10]
00013f71(2): MOV EDX,dword ptr [RAX]
00013f73(2): MOV EDI,EBP
00013f75(2): XOR EAX,EAX
00013f77(5): CALL 0x00001900
00013f7c(2): MOV EBX,EAX
00013f7e(5): JMP 0x00013ec0
00013f83(2): XOR ESI,ESI
00013f85(2): XOR EAX,EAX
00013f87(5): CALL 0x00001900
00013f8c(2): TEST EAX,EAX
00013f8e(2): MOV EBX,EAX
00013f90(6): JS 0x00013ec0
00013f96(7): CMP dword ptr [0x0021b3f8],-0x1
00013f9d(6): JNZ 0x00013ec0
00013fa3(2): XOR EAX,EAX
00013fa5(5): MOV ESI,0x1
00013faa(2): MOV EDI,EBX
00013fac(5): CALL 0x00001900
00013fb1(2): TEST EAX,EAX
00013fb3(2): JS 0x00013fd1
00013fb5(3): OR EAX,0x1
00013fb8(5): MOV ESI,0x2
00013fbd(2): MOV EDI,EBX
00013fbf(2): MOV EDX,EAX
00013fc1(2): XOR EAX,EAX
00013fc3(5): CALL 0x00001900
00013fc8(3): CMP EAX,-0x1
00013fcb(6): JNZ 0x00013ec0
00013fd1(5): CALL 0x000018a0
00013fd6(3): MOV R12D,dword ptr [RAX]
00013fd9(3): MOV RBP,RAX
00013fdc(2): MOV EDI,EBX
00013fde(5): CALL 0x00001a20
00013fe3(5): MOV EBX,0xffffffff
00013fe8(4): MOV dword ptr [RBP],R12D
00013fec(5): JMP 0x00013ec0
00013ff8(5): CALL 0x000018a0
00013ffd(3): CMP dword ptr [RAX],0x16
00014000(6): JNZ 0x00013e6f
00014006(2): XOR ESI,ESI
00014008(2): XOR EAX,EAX
0001400a(3): MOV EDX,R12D
0001400d(2): MOV EDI,EBP
0001400f(5): CALL 0x00001900
00014014(2): TEST EAX,EAX
00014016(2): MOV EBX,EAX
00014018(6): JS 0x00013ec0
0001401e(10): MOV dword ptr [0x0021b3f8],0xffffffff
00014028(5): JMP 0x00013fa3
0001402d(5): CALL 0x00001990
00014032(5): MOV RAX,qword ptr [RSP + 0x10]
00014037(2): XOR ESI,ESI
00014039(3): MOV EDX,dword ptr [RAX + 0x10]
0001403c(2): XOR EAX,EAX
0001403e(5): CALL 0x00001900
00014043(2): MOV EBX,EAX
00014045(5): JMP 0x00013ec0
0001404a(5): MOV RAX,qword ptr [RSP + 0x8]
0001404f(5): JMP 0x00013f19
00014054(5): MOV RAX,qword ptr [RSP + 0x8]
00014059(5): JMP 0x00013f71
00014060(3): TEST RDI,RDI
00014063(1): PUSH RBX
00014064(3): MOV RBX,RDI
00014067(2): JZ 0x0001407a
00014069(5): CALL 0x00001b10
0001406e(2): TEST EAX,EAX
00014070(2): JZ 0x0001407a
00014072(6): TEST dword ptr [RBX],0x100
00014078(2): JNZ 0x00014088
0001407a(3): MOV RDI,RBX
0001407d(1): POP RBX
0001407e(5): JMP 0x00001ae0
00014088(3): MOV RDI,RBX
0001408b(5): MOV EDX,0x1
00014090(2): XOR ESI,ESI
00014092(5): CALL 0x00005820
00014097(3): MOV RDI,RBX
0001409a(1): POP RBX
0001409b(5): JMP 0x00001ae0
000140a0(2): PUSH R15
000140a2(2): PUSH R14
000140a4(3): MOV R15,RDX
000140a7(2): PUSH R13
000140a9(2): PUSH R12
000140ab(7): LEA R12,[0x218a70]
000140b2(1): PUSH RBP
000140b3(7): LEA RBP,[0x218a78]
000140ba(1): PUSH RBX
000140bb(3): MOV R13D,EDI
000140be(3): MOV R14,RSI
000140c1(3): SUB RBP,R12
000140c4(4): SUB RSP,0x8
000140c8(4): SAR RBP,0x3
000140cc(5): CALL 0x00001838
000140d1(3): TEST RBP,RBP
000140d4(2): JZ 0x000140f6
000140d6(2): XOR EBX,EBX
000140d8(8): NOP dword ptr [RAX + RAX*0x1]
000140e0(3): MOV RDX,R15
000140e3(3): MOV RSI,R14
000140e6(3): MOV EDI,R13D
000140e9(4): CALL qword ptr [R12 + RBX*0x8]
000140ed(4): ADD RBX,0x1
000140f1(3): CMP RBP,RBX
000140f4(2): JNZ 0x000140e0
000140f6(4): ADD RSP,0x8
000140fa(1): POP RBX
000140fb(1): POP RBP
000140fc(2): POP R12
000140fe(2): POP R13
00014100(2): POP R14
00014102(2): POP R15
00014104(1): RET
00014110(2): RET
00014120(7): MOV RDX,qword ptr [0x00219008]
00014127(2): XOR ESI,ESI
00014129(5): JMP 0x00001bf0
00014130(4): SUB RSP,0x8
00014134(4): ADD RSP,0x8
00014138(1): RET

