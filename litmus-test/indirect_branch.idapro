LOAD:0000000000400000 ;
LOAD:0000000000400000 ; +-------------------------------------------------------------------------+
LOAD:0000000000400000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
LOAD:0000000000400000 ; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
LOAD:0000000000400000 ; |                      License info: 48-357D-7BC4-C6                      |
LOAD:0000000000400000 ; |                              Virginia Tech                              |
LOAD:0000000000400000 ; +-------------------------------------------------------------------------+
LOAD:0000000000400000 ;
LOAD:0000000000400000 ; Input SHA256 : 440415A6710ED4DDF5D4DB6D2CB7F8BC792BEA2C63E39EE579895F5C7AD50E17
LOAD:0000000000400000 ; Input MD5    : 21CC8BE52BB63A825CC483524C653427
LOAD:0000000000400000 ; Input CRC32  : EFB08FDC
LOAD:0000000000400000
LOAD:0000000000400000 ; File Name   : /home/cindy/Documents/Projects/DSV/litmus-test/indirect_branch
LOAD:0000000000400000 ; Format      : ELF64 for x86-64 (Executable)
LOAD:0000000000400000 ; Imagebase   : 400000
LOAD:0000000000400000 ; Interpreter '/lib/ld-linux-x86-64.so.2'
LOAD:0000000000400000 ; Needed Library 'libc.so.6'
LOAD:0000000000400000 ;
LOAD:0000000000400000 ; Source File : 'indirect_branch.o'
LOAD:0000000000400000
LOAD:0000000000400000                 .686p
LOAD:0000000000400000                 .mmx
LOAD:0000000000400000                 .model flat
LOAD:0000000000400000 .intel_syntax noprefix
LOAD:0000000000400000
LOAD:0000000000400000 ; ===========================================================================
LOAD:0000000000400000
LOAD:0000000000400000 ; Segment type: Pure code
LOAD:0000000000400000 ; Segment permissions: Read/Execute
LOAD:0000000000400000 LOAD            segment byte public 'CODE' use64
LOAD:0000000000400000                 assume cs:LOAD
LOAD:0000000000400000                 ;org 400000h
LOAD:0000000000400000                 assume es:nothing, ss:nothing, ds:LOAD, fs:nothing, gs:nothing
LOAD:0000000000400000 dword_400000    dd 464C457Fh            ; DATA XREF: LOAD:00000000004000C0↓o
LOAD:0000000000400000                                         ; File format: \x7FELF
LOAD:0000000000400004                 db 2                    ; File class: 64-bit
LOAD:0000000000400005                 db 1                    ; Data encoding: little-endian
LOAD:0000000000400006                 db 1                    ; File version
LOAD:0000000000400007                 db 0                    ; OS/ABI: UNIX System V ABI
LOAD:0000000000400008                 db 0                    ; ABI Version
LOAD:0000000000400009                 db 7 dup(0)             ; Padding
LOAD:0000000000400010                 dw 2                    ; File type: Executable
LOAD:0000000000400012                 dw 3Eh                  ; Machine: x86-64
LOAD:0000000000400014                 dd 1                    ; File version
LOAD:0000000000400018                 dq offset _start        ; Entry point
LOAD:0000000000400020                 dq 40h                  ; PHT file offset
LOAD:0000000000400028                 dq 13D0h                ; SHT file offset
LOAD:0000000000400030                 dd 0                    ; Processor-specific flags
LOAD:0000000000400034                 dw 40h                  ; ELF header size
LOAD:0000000000400036                 dw 38h                  ; PHT entry size
LOAD:0000000000400038                 dw 6                    ; Number of entries in PHT
LOAD:000000000040003A                 dw 40h                  ; SHT entry size
LOAD:000000000040003C                 dw 0Fh                  ; Number of entries in SHT
LOAD:000000000040003E                 dw 0Eh                  ; SHT entry index for string table
LOAD:0000000000400040 ; ELF64 Program Header
LOAD:0000000000400040 ; PHT Entry 0
LOAD:0000000000400040 dword_400040    dd 6                    ; DATA XREF: LOAD:0000000000400050↓o
LOAD:0000000000400040                                         ; Type: PHDR
LOAD:0000000000400044                 dd 4                    ; Flags
LOAD:0000000000400048                 dq 40h                  ; File offset
LOAD:0000000000400050                 dq offset dword_400040  ; Virtual address
LOAD:0000000000400058                 dq 400040h              ; Physical address
LOAD:0000000000400060                 dq 150h                 ; Size in file image
LOAD:0000000000400068                 dq 150h                 ; Size in memory image
LOAD:0000000000400070                 dq 8                    ; Alignment
LOAD:0000000000400078 ; PHT Entry 1
LOAD:0000000000400078                 dd 3                    ; Type: INTERP
LOAD:000000000040007C                 dd 4                    ; Flags
LOAD:0000000000400080                 dq 190h                 ; File offset
LOAD:0000000000400088                 dq offset aLibLdLinuxX866 ; Virtual address
LOAD:0000000000400090                 dq 400190h              ; Physical address
LOAD:0000000000400098                 dq 1Ah                  ; Size in file image
LOAD:00000000004000A0                 dq 1Ah                  ; Size in memory image
LOAD:00000000004000A8                 dq 1                    ; Alignment
LOAD:00000000004000B0 ; PHT Entry 2
LOAD:00000000004000B0                 dd 1                    ; Type: LOAD
LOAD:00000000004000B4                 dd 5                    ; Flags
LOAD:00000000004000B8                 dq 0                    ; File offset
LOAD:00000000004000C0                 dq offset dword_400000  ; Virtual address
LOAD:00000000004000C8                 dq 400000h              ; Physical address
LOAD:00000000004000D0                 dq 270h                 ; Size in file image
LOAD:00000000004000D8                 dq 270h                 ; Size in memory image
LOAD:00000000004000E0                 dq 200000h              ; Alignment
LOAD:00000000004000E8 ; PHT Entry 3
LOAD:00000000004000E8                 dd 1                    ; Type: LOAD
LOAD:00000000004000EC                 dd 6                    ; Flags
LOAD:00000000004000F0                 dq 0F20h                ; File offset
LOAD:00000000004000F8                 dq offset _DYNAMIC      ; Virtual address
LOAD:0000000000400100                 dq 600F20h              ; Physical address
LOAD:0000000000400108                 dq 0E0h                 ; Size in file image
LOAD:0000000000400110                 dq 0E0h                 ; Size in memory image
LOAD:0000000000400118                 dq 200000h              ; Alignment
LOAD:0000000000400120 ; PHT Entry 4
LOAD:0000000000400120                 dd 2                    ; Type: DYNAMIC
LOAD:0000000000400124                 dd 6                    ; Flags
LOAD:0000000000400128                 dq 0F20h                ; File offset
LOAD:0000000000400130                 dq offset _DYNAMIC      ; Virtual address
LOAD:0000000000400138                 dq 600F20h              ; Physical address
LOAD:0000000000400140                 dq 0E0h                 ; Size in file image
LOAD:0000000000400148                 dq 0E0h                 ; Size in memory image
LOAD:0000000000400150                 dq 8                    ; Alignment
LOAD:0000000000400158 ; PHT Entry 5
LOAD:0000000000400158                 dd 6474E552h            ; Type: RO-AFTER
LOAD:000000000040015C                 dd 4                    ; Flags
LOAD:0000000000400160                 dq 0F20h                ; File offset
LOAD:0000000000400168                 dq offset _DYNAMIC      ; Virtual address
LOAD:0000000000400170                 dq 600F20h              ; Physical address
LOAD:0000000000400178                 dq 0E0h                 ; Size in file image
LOAD:0000000000400180                 dq 0E0h                 ; Size in memory image
LOAD:0000000000400188                 dq 1                    ; Alignment
LOAD:0000000000400190 aLibLdLinuxX866 db '/lib/ld-linux-x86-64.so.2',0
LOAD:0000000000400190                                         ; DATA XREF: LOAD:0000000000400088↑o
LOAD:00000000004001AA                 align 10h
LOAD:00000000004001B0 ; ELF Hash Table
LOAD:00000000004001B0 elf_hash_nbucket dd 1
LOAD:00000000004001B4 elf_hash_nchain dd 1
LOAD:00000000004001B8 elf_hash_bucket dd 0
LOAD:00000000004001BC elf_hash_chain  dd 0
LOAD:00000000004001C0 ; ELF GNU Hash Table
LOAD:00000000004001C0 elf_gnu_hash_nbuckets dd 1
LOAD:00000000004001C4 elf_gnu_hash_symbias dd 1
LOAD:00000000004001C8 elf_gnu_hash_bitmask_nwords dd 1
LOAD:00000000004001CC elf_gnu_hash_shift dd 0
LOAD:00000000004001D0 elf_gnu_hash_indexes dq 0
LOAD:00000000004001D8 elf_gnu_hash_bucket dd 0
LOAD:00000000004001DC elf_gnu_hash_chain dd 0
LOAD:00000000004001E0 ; ELF Symbol Table
LOAD:00000000004001E0                 Elf64_Sym <0>
LOAD:00000000004001F8 ; ELF String Table
LOAD:00000000004001F8                 db 0
LOAD:00000000004001F9 aLibcSo6        db 'libc.so.6',0
LOAD:00000000004001F9 LOAD            ends
LOAD:00000000004001F9
.text:0000000000400203 ; ===========================================================================
.text:0000000000400203
.text:0000000000400203 ; Segment type: Pure code
.text:0000000000400203 ; Segment permissions: Read/Execute
.text:0000000000400203 _text           segment byte public 'CODE' use64
.text:0000000000400203                 assume cs:_text
.text:0000000000400203                 ;org 400203h
.text:0000000000400203                 assume es:nothing, ss:nothing, ds:LOAD, fs:nothing, gs:nothing
.text:0000000000400203
.text:0000000000400203 ; =============== S U B R O U T I N E =======================================
.text:0000000000400203
.text:0000000000400203
.text:0000000000400203                 public _start
.text:0000000000400203 _start          proc near               ; DATA XREF: LOAD:0000000000400018↑o
.text:0000000000400203                 mov     rax, 1
.text:000000000040020A                 mov     rbx, 2
.text:0000000000400211                 add     rax, rbx
.text:0000000000400214                 cmp     rdi, 3
.text:0000000000400218                 ja      short foo
.text:000000000040021A                 mov     eax, edi
.text:000000000040021C                 lea     rdx, _jt
.text:0000000000400224                 mov     rax, [rdx+rax*8]
.text:0000000000400228                 jmp     rax
.text:000000000040022A ; ---------------------------------------------------------------------------
.text:000000000040022A
.text:000000000040022A loc_40022A:                             ; DATA XREF: .rodata:_jt↓o
.text:000000000040022A                 add     rbx, 2
.text:000000000040022E                 retn
.text:000000000040022F ; ---------------------------------------------------------------------------
.text:000000000040022F                 mov     rax, 1
.text:0000000000400236                 retn
.text:0000000000400237 ; ---------------------------------------------------------------------------
.text:0000000000400237                 imul    rax, rdx
.text:000000000040023B                 retn
.text:000000000040023C ; ---------------------------------------------------------------------------
.text:000000000040023C                 mov     rcx, rax
.text:000000000040023F                 add     rbx, rcx
.text:0000000000400242                 retn
.text:0000000000400243 ; ---------------------------------------------------------------------------
.text:0000000000400243
.text:0000000000400243 foo:                                    ; CODE XREF: _start+15↑j
.text:0000000000400243                 add     rbx, 1
.text:0000000000400247                 mov     rcx, rbx
.text:000000000040024A                 retn
.text:000000000040024A _start          endp
.text:000000000040024A
.text:000000000040024A _text           ends
.text:000000000040024A
.rodata:000000000040024B ; ===========================================================================
.rodata:000000000040024B
.rodata:000000000040024B ; Segment type: Pure data
.rodata:000000000040024B ; Segment permissions: Read
.rodata:000000000040024B _rodata         segment byte public 'CONST' use64
.rodata:000000000040024B                 assume cs:_rodata
.rodata:000000000040024B                 ;org 40024Bh
.rodata:000000000040024B _jt             dd offset loc_40022A    ; DATA XREF: _start+19↑o
.rodata:000000000040024F                 db    0
.rodata:0000000000400250                 db    0
.rodata:0000000000400251                 db    0
.rodata:0000000000400252                 db    0
.rodata:0000000000400253                 db  2Fh ; /
.rodata:0000000000400254                 db    2
.rodata:0000000000400255                 db  40h ; @
.rodata:0000000000400256                 db    0
.rodata:0000000000400257                 db    0
.rodata:0000000000400258                 db    0
.rodata:0000000000400259                 db    0
.rodata:000000000040025A                 db    0
.rodata:000000000040025B                 db  37h ; 7
.rodata:000000000040025C                 db    2
.rodata:000000000040025D                 db  40h ; @
.rodata:000000000040025E                 db    0
.rodata:000000000040025F                 db    0
.rodata:0000000000400260                 db    0
.rodata:0000000000400261                 db    0
.rodata:0000000000400262                 db    0
.rodata:0000000000400263                 db  3Ch ; <
.rodata:0000000000400264                 db    2
.rodata:0000000000400265                 db  40h ; @
.rodata:0000000000400266                 db    0
.rodata:0000000000400267                 db    0
.rodata:0000000000400268                 db    0
.rodata:0000000000400269                 db    0
.rodata:000000000040026A                 db    0
.rodata:000000000040026A _rodata         ends
.rodata:000000000040026A
LOAD:000000000040026B ; ===========================================================================
LOAD:000000000040026B
LOAD:000000000040026B ; Segment type: Pure code
LOAD:000000000040026B ; Segment permissions: Read/Execute
LOAD:000000000040026B LOAD            segment byte public 'CODE' use64
LOAD:000000000040026B                 assume cs:LOAD
LOAD:000000000040026B                 ;org 40026Bh
LOAD:000000000040026B                 assume es:nothing, ss:nothing, ds:LOAD, fs:nothing, gs:nothing
LOAD:000000000040026B                 align 10h
LOAD:000000000040026B LOAD            ends
LOAD:000000000040026B
LOAD:0000000000600F20 ; ELF Dynamic Information
LOAD:0000000000600F20 ; ===========================================================================
LOAD:0000000000600F20
LOAD:0000000000600F20 ; Segment type: Pure data
LOAD:0000000000600F20 ; Segment permissions: Read/Write
LOAD:0000000000600F20 LOAD            segment byte public 'DATA' use64
LOAD:0000000000600F20                 assume cs:LOAD
LOAD:0000000000600F20                 ;org 600F20h
LOAD:0000000000600F20 _DYNAMIC        Elf64_Dyn <1, 1>        ; DATA XREF: LOAD:00000000004000F8↑o
LOAD:0000000000600F20                                         ; LOAD:0000000000400130↑o ...
LOAD:0000000000600F20                                         ; DT_NEEDED libc.so.6
LOAD:0000000000600F30                 Elf64_Dyn <4, 4001B0h>  ; DT_HASH
LOAD:0000000000600F40                 Elf64_Dyn <6FFFFEF5h, 4001C0h> ; DT_GNU_HASH
LOAD:0000000000600F50                 Elf64_Dyn <5, 4001F8h>  ; DT_STRTAB
LOAD:0000000000600F60                 Elf64_Dyn <6, 4001E0h>  ; DT_SYMTAB
LOAD:0000000000600F70                 Elf64_Dyn <0Ah, 0Bh>    ; DT_STRSZ
LOAD:0000000000600F80                 Elf64_Dyn <0Bh, 18h>    ; DT_SYMENT
LOAD:0000000000600F90                 Elf64_Dyn <15h, 0>      ; DT_DEBUG
LOAD:0000000000600FA0                 Elf64_Dyn <0>           ; DT_NULL
LOAD:0000000000600FB0                 align 80h
LOAD:0000000000600FB0 LOAD            ends
LOAD:0000000000600FB0
.prgend:0000000000601000 ; ===========================================================================
.prgend:0000000000601000
.prgend:0000000000601000 ; Segment type: Zero-length
.prgend:0000000000601000 _prgend         segment byte public '' use64
.prgend:0000000000601000 _end            label byte
.prgend:0000000000601000 _prgend         ends
.prgend:0000000000601000
.prgend:0000000000601000
.prgend:0000000000601000                 end _start
